- analysis: '>'
  authors:
  - Kong X.s.
  - Huang J.w.
  - Shan R.l.
  - Yang W.
  - Fang J.
  citation_count: '0'
  description: Outdated coal mining technologies involve considerable mine water resource
    waste. For coal mines located in water-starved western regions of China, this
    jeopardizes the sustainable coal mining development, local eco-environment, and
    agricultural production. Coal mine underground reservoirs furnish conservation
    and cyclic utilization of water resources in the coal mining process. The weakest
    links of underground reservoirs are artificial dams that are prone to frequent
    occurrence of water seepage and instability failures. Aiming to explore the deformation
    rules of artificial dams under fluid–solid coupling action, this study developed
    a nested multi-coupling test system comprising a model shelf, a mine pressure
    simulation device, a water pressure simulation device, and a monitoring system,
    The maximum size of the model shelf is 1400 mm * 1300 mm * 200 mm. The mine pressure
    simulation device was composed of static-load and vibration-load oil cylinders
    of various sizes. A servo motor mainly controlled the water pressure device; with
    a water pressure sensor and high-precision flowmeter, water pressure could be
    accurately adjusted. By taking the underground reservoir in the Wulanmulun Coal
    Mine as an example, the deformation failure characteristics of the MB-1 dam under
    fluid–solid coupling conditions were simulated to validate the reasonability and
    feasibility of the developed system. The obtained experimental results indicated
    that the artificial dam damage was induced by increased mine pressure, leading
    to shear compression failure. The artificial dam underwent plastic deformation
    at a water pressure of 11.43 kPa, accompanied with the generation of microfractures,
    which rapid propagation under vibration loading violated the dam’s stability.
  doi: 10.1007/s40948-023-00731-z
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Geomechanics and Geophysics for Geo-Energy
    and Geo-Resources Article Elaboration and application of the nested multi-coupling
    model test system for an artificial dam seepage simulation under combined action
    of dynamic and static loads Research Open access Published: 03 January 2024 Volume
    10, article number 12, (2024) Cite this article Download PDF You have full access
    to this open access article Geomechanics and Geophysics for Geo-Energy and Geo-Resources
    Aims and scope Submit manuscript Xiang-song Kong, Jun-wei Huang, Ren-liang Shan,
    Wei Yang & Jie Fang  431 Accesses Explore all metrics Abstract Outdated coal mining
    technologies involve considerable mine water resource waste. For coal mines located
    in water-starved western regions of China, this jeopardizes the sustainable coal
    mining development, local eco-environment, and agricultural production. Coal mine
    underground reservoirs furnish conservation and cyclic utilization of water resources
    in the coal mining process. The weakest links of underground reservoirs are artificial
    dams that are prone to frequent occurrence of water seepage and instability failures.
    Aiming to explore the deformation rules of artificial dams under fluid–solid coupling
    action, this study developed a nested multi-coupling test system comprising a
    model shelf, a mine pressure simulation device, a water pressure simulation device,
    and a monitoring system, The maximum size of the model shelf is 1400 mm * 1300
    mm * 200 mm. The mine pressure simulation device was composed of static-load and
    vibration-load oil cylinders of various sizes. A servo motor mainly controlled
    the water pressure device; with a water pressure sensor and high-precision flowmeter,
    water pressure could be accurately adjusted. By taking the underground reservoir
    in the Wulanmulun Coal Mine as an example, the deformation failure characteristics
    of the MB-1 dam under fluid–solid coupling conditions were simulated to validate
    the reasonability and feasibility of the developed system. The obtained experimental
    results indicated that the artificial dam damage was induced by increased mine
    pressure, leading to shear compression failure. The artificial dam underwent plastic
    deformation at a water pressure of 11.43 kPa, accompanied with the generation
    of microfractures, which rapid propagation under vibration loading violated the
    dam’s stability. Article Highlights In this study, a nested multi-coupling model
    test system was developed, which was composed of a model shelf, a mine pressure
    simulation device, a reservoir pressure simulation device, and a monitoring system.
    The servo water pressure control system was set in the reservoir pressure simulation
    device, achieving accurate water injection in combination with a water pressure
    sensor and high-precision flowmeter. Different types of loads could be comprehensively
    combined for simulating various complex mine environments. Based on the established
    model, a similarity model test was performed on the artificial dam, and both the
    deformation and failure characteristics of the artificial dam under the coupled
    action of water and mine pressures were determined to validate the model’s reasonability
    and feasibility. Research finding: The damage in the artificial dam was further
    aggravated by vibration loads. For artificial dams subjected to mine earthquakes
    for a long time, reliable aseismic measures should be envisaged. Similar content
    being viewed by others Fluid–Solid Coupling Materials to Similar Simulation Test
    on Water Inrush in Geotechnical and Mining Engineering Article 29 July 2022 Multifield
    Coupling Numerical Simulation of the Seepage and Stability of Embankment Dams
    on Deep Overburden Layers Article 23 August 2021 Study on Stress – Fluid Coupling
    of Coal Seam Floor Water Outburst Based on FLAC 3D Simulation Article 01 January
    2024 1 Introduction China is one of the largest coal producer and consumer in
    the world (Wang et al. 2020; Li et al. 2023). Because of immature coal mining
    technology, numerous environmental problems, such as careless discarding, water
    and soil loss, and surface collapse, are faced by many coal mines (Wu et al. 2022;
    Sun et al. 2023; Miao et al. 2009). In recent years, coal mining has shifted to
    the western part of China, with coal mines concentrated in Shanxi, Shaanxi, Inner
    Mongolia, Gansu, and Ningxia provinces. In 2021, coal production in western China
    accounted for 45.6% of the total production in China (Department of Energy Statistics,
    National Bureau of Statistics 2022), as shown in the detailed distribution in
    Fig. 1. On the other hand, western China shows vulnerable ecology and extremely
    deficient water resources. Large-scale coal mining may exceed the original bearing
    capacity of ecological systems, leading to serious water waste (Li et al. 2012).
    In addition, mine water in China’s coal mining each year reaches 6.8 billion tons,
    while its utilization rate of 35% is too low (Chi et al. 2023). Increasing this
    rate would greatly diminish water shortages in western China. The efficient protection
    and rational utilization of mine water has become a challenge in China regarding
    long-term mining and the ecological environment protection (Yang. 2013). Fig.
    1 Distribution of coal production in Shanxi, Shaanxi, Inner Mongolia, Ningxia,
    and other provinces of China in 2021 Full size image The Shendong Coal Group research
    team led by Academician Gu Dazhao has carried out technological innovation and
    practical engineering for a long time and proposed the theoretical framework and
    technological system of underground reservoirs, following the guidance-storage-usage
    principle, which has been successfully applied in many coal mines. Accordingly,
    approximately six billion tons of mining water was saved each year, mitigating
    water resource deficiency in western China (Gu 2015). The retaining structure
    of the underground reservoir mainly consists of coal pillar dams and artificial
    dams, as shown in Fig. 2. While coal pillar dams are generally thick (several
    ten meters), the artificial dams should be only several meters thick, on account
    of economic cost and spatial requirements. Under the combined action of mine ground
    pressure, the roof collapse in the goaf, and mine earthquakes, some engineering
    accidents, such as water bursts and dam collapses, may occur in artificial dams
    of insufficient strength, resulting in serious casualties and material losses
    (Yan 2016; Yao et al. 2018). Therefore, artificial dams are the weakest structure
    in coal pillar connections for underground reservoirs. As a core structure, the
    stability of artificial dams also directly determines whether underground reservoirs
    can operate safely. Fig. 2 Illustration of an underground reservoir in the mine
    Full size image Accordingly, many scholars have performed numerical simulations
    and theoretical analyses on artificial dams. Chi et al. conducted numerical analysis
    and found that various accelerations were generated in different parts of the
    artificial dam under mine earthquake conditions, which could lead to the concentration
    of shear stress in the artificial dam and coal pillars, thereby causing damage
    (Chi et al. 2023). Liu et al. (2020) carried out unconfined uniaxial compression
    tests with the PFC model and analyzed the influencing rules of the boundary angle
    of coal pillars and artificial dams on specimen performance (Lyu et al. 2022).
    Bai et al. focused on an underground reservoir in the Lijiahao coal mine, found
    the damage-prone instability position in the underground reservoir, and determined
    the limit water pressure that an artificial dam could bear (Bai et al. 2017).
    Ma proposed a numerical hydraulic damage model for artificial dams; according
    to the simulation results, the dam strength was the main factor that affected
    artificial dams (Ma et al. 2023a, b). However, for large-scale deep rock projects,
    the fulfillment of actual engineering requirements cannot be guaranteed by theoretical
    analysis and/or numerical simulation results. An increasing number of scholars
    have begun to seek new research means, such as physical analog models (Bai et
    al. 2020). Developed a physical analog experimental system for investigating seepage
    behaviors in the floor of underground reservoirs, which simulated the floor seepage
    patterns (Wen et al. 2021). Wang et al. (2023) designed an interlaminar rock damage
    and burst seepage mechanical model for dam foundations of underground reservoirs;
    the experimental results confirmed that coal mining caused the interconnection
    of interlaminar fractures in the rock, thereby threatening the safety of both
    dam bodies and foundations. Kong et al. (2020) developed a physical analog experimental
    system, validating that concrete-filled steel tube supports could ensure the stability
    of the surrounding rocks in deep coal roadways. Underground reservoirs, as novel
    water storage engineering structures, are exposed to various types of complex
    pressure coupling actions. However, there is still a lack of an adequate underground
    reservoir test system that considers mine pressure and hydraulic seepage. Therefore,
    this study developed a nested multi-coupled test system for underground reservoir
    mine dams and investigated the failure characteristics of artificial dams, considering
    the coupled effect of water and mine pressures on the stability of underground
    reservoirs. 2 Elaboration of the experimental system 2.1 System composition The
    experimental system mainly consists of four parts: the model shelf, the mine pressure
    simulation device (various load cylinders), the water pressure simulation device,
    and the monitoring system. The first three parts are shown in Fig. 3a. The external
    frame of the model shelf can be connected to the internal frame with roller groups
    and rails. The internal frame can move along the rail under the action of bottom
    vibrating oil cylinders. Water pressure simulation devices can achieve injection
    pressurization on the model by connecting water injection holes with the roof
    of the water storage area. With the roof of the water storage area. Figure 3b
    displays the experimental procedure. Fig. 3 Illustration of the nested multi-coupling
    model test system of the underground reservoir dam in the mine. a Model shelf,
    mine pressure simulation device, and water pressure simulation device and b illustration
    of the experimental procedure Full size image 2.1.1 Model shelf and mine pressure
    loading system The model shelf, as the main part of the experimental system, was
    mainly used for filling the experimental model. The shelf mainly consisted of
    the external frame and the inner frame. Both external and inner frames were connected
    with the roller train for the convenience of movement upward and downwards. The
    front and rear baffle formed the model’s filling space with the inner frame. The
    filling space, with a size of 1400 mm × 1300 mm × 200 mm, was the maximum model
    size. Both water inlets and exhaust holes were set on the rear baffle. The water
    pressure simulation device was connected to the model shelf via the water inlet.
    A seepage recovery device was set on the bottom of the shelf, which was mainly
    composed of a water collection tank, a diversion tube, a water storage container
    and a discharge pump. In addition, the shelf, with strong expandability, can satisfy
    different experimental requirements. Figure 4 shows the model frame structure.
    Fig. 4 Illustration of the model shelf. a External frame and b inner frame and
    load oil cylinder Full size image The mine pressure loading system was installed
    in the inner frame. The mine pressure loading system was composed of load cylinders
    of different types and specifications to apply mine pressure on the model. The
    bottom vibration cylinder was installed at the bottom beam of the external frame
    to simulate the vibration induced by earthquakes and roof collapse. A top vibration
    cylinder and two top static-load cylinders were installed on the top beam of the
    internal frame to simulate the dynamic load and mine pressure induced by the collapse
    of the roof in the mining area. Moreover, lateral-pressure oil cylinders were
    set at the columns of the inner frame to simulate the lateral pressure of the
    formation. Such a combination of vibration- and static-load oil cylinders with
    the servo water-pressure control systems took the horizontal lateral pressure
    static load into account. More importantly, since a mine underground reservoir
    is simultaneously exposed to static loads, dynamic loads, and water pressure,
    the proposed system comprehensively simulated this multi-load coupling effect
    that the test results were expected to comply with the actual conditions, and
    the monitoring data to be more realistic. Table 1 lists the technical parameters
    of various oil cylinders adopted in the proposed system. Table 1 Technical parameters
    of various oil cylinders Full size table In order to realize the purpose of water
    insulation and convenient observation, adequate protective measures are adopted
    for the front, back and side of the model. Protective measures are divided into
    rigid protection and flexible protection. For rigid protection, multi-layer organic
    glass plates and rigid steel ribs were used, providing strong physical support
    and protection. Accordingly, both the model’s stability and safety were ensured.
    Both front and rear baffles, made of organic glass plates, were set in the inner
    frame. The beams were installed on the baffle and connected with the column of
    the inner frame with bolts for fixation, as shown in Fig. 5a. Silicone rubber
    strips, glass cements, and structural adhesive acted as the model’s flexible supports,
    tightly sealing the water storage area boundaries. Accordingly, both the reliability
    and durability of water isolation was ensured, preventing the water seepage toward
    the outer boundary, as shown in Fig. 5b. Multiple test results demonstrated satisfactory
    waterproof performance of the proposed system. Fig. 5 Illustration of protective
    measures of the model. a Rigid protection and b flexible protection Full size
    image 2.1.2 Water pressure simulation device Figure 6 depicts the adopted water
    pressure simulation device, which mainly comprised a servo motor, a connecting
    rod, and a cylinder. It could provide water pressure up to 0.2 MPa, with the water
    drum volume of 72 L. The water pressure loading device comprised a movable piston
    in the cylinder. The lead screw was driven by a servo motor for rotation, and
    the nuts matched with the lead screw were fixed. When the servo motor operated,
    the lead screw rotated. The rotation of the motor was restricted by the sliding
    block of the linear guideway. Accordingly, the lead screw, the servo motor, and
    the sliding block could move simultaneously to push the piston under the action
    of a nut and apply pressure to the water in the cylinder. The motor was inverted
    for unloading and pressure reduction. The water pressure simulation device was
    connected to the model shelf with water injection holes. Using a high-precision
    flowmeter and sensor, water pressure could be accurately adjusted to the required
    level. Fig. 6 Water pressure simulation device. a Water pressure simulation device
    and b illustration of the structure of the water pressure simulation device Full
    size image 2.1.3 Monitoring system In the proposed experimental system, the monitoring
    subsystem mainly comprised the soil pressure cell, the strain gauge, the static
    strain indicator, the digital single-lens reflex for displacement measurements,
    digital still camera for deformation failure characteristics of model, and the
    ultrasonic detector. These provided monitoring and recording of stresses, strains,
    and displacements of the surrounding rock and the artificial dam, in order to
    determine their microdamage and deformation failure characteristics. The above
    monitored parameters were crucial for evaluating the stability and safety of dam
    structures. 2.2 Functions and features Using the model, the underground reservoir
    evolution from deformation to instability can be accurately simulated. The monitoring
    system accurately measures the stress distribution characteristics, strain, displacement
    and deformation of the simulated underground reservoir. A comprehensive combination
    of water and mine pressure simulation devices with the pressure sensor and high-precision
    flowmeter allows one to achieve various water injection modes. The adopted mine
    pressure loading system can simulate the multi-load coupling effect. Furthermore,
    water repellent treatment was applied to the underground reservoir surroundings,
    achieving effective water-tightness to ensure the smooth progress of the experiment.
    3 Engineering application of the proposed system 3.1 Engineering background This
    study simulated the MB-1 artificial dam of the underground reservoir in the Wulanmulun
    Mine located in Erdos, Inner Mongolia, featuring a simple structure and stable
    coal seam occurrence. The inclination angle of the coal seam ranged from 1° to
    3°. The main coal-bearing seam belonged to the Jurassic middle-low Yan’an Formation.
    There were ten mineable and locally mineable coal seams with a mean thickness
    of 3.6 m and 3–2 grade coal as the main mined coal. The MB-1 dam, with a total
    thickness of 3.42 m, was constructed by piling up five layers of different materials.
    The brick walls were at the outermost, with thicknesses of 0.5 and 0.7 m, respectively.
    The intermediate sandwich layers included the Cobblestone Mary powder layer, brick
    wall and concrete wall, with thicknesses of 0.8, 0.37, and 1 m, respectively.
    The overlying rock was 161–179 m in thickness. During the dam construction, the
    embedded depths on two sides, the floor, and the roof were 0.5, 0.2, and 0.3 m,
    respectively. Table 2 lists the mechanical parameters of the coal seams and the
    surrounding rocks in the roof and floor. The surrounding rocks in the roof were
    mainly composed of fine sandstone and have grayish-white color. The clastic constituents
    mainly included feldspar and quartz. The dark mineral was mainly composed of biotite,
    with massive structure, horizontal local textures, and calcite cementation. The
    floor was made up of silty mudstone of light-gray color. The floor featured a
    massive structure, with the clay minerals as its main components. The No. 3–1
    coal seam was characterized by matt black color, massive structure, angular shape,
    and conchoidal fractures with smooth curved surfaces. Table 2 Parameters of the
    coal seam and the surrounding rocks Full size table The main replenishment sources
    of water in the goaf of the underground reservoir of WulanMulun Mine are the water
    inflow of the goaf itself and the water injection of Mine, the water injection
    volume was about 60 m3/h at the beginning. Since the water accumulation in the
    goaf of the former working face 2207 and 2209 began on March 16, 2013, the water
    injection volume has increased to 220 m3/h. Periodically measure the change of
    water pressure in the warehouse with time. The pressure gauge installation elevation
    is 0 m, then the actual pressure gauge real number is the actual water pressure
    in the reaction tank. The actual measurement data is shown in Fig. 7, and the
    monitoring time lasts for 30 days. It can be seen that the pressure representation
    number is basically stable at about 0.036 MPa, as shown in the red solid line
    in Fig. 7. The maximum water pressure is about 0.037 MPa, the minimum is about
    0.035 MPa, the maximum fluctuation is within 0.002 MPa, and the maximum variation
    is about 5.56%. The measured data show that the water pressure in the reservoir
    is in a stable state. Fig. 7 Water pressure change over time Full size image As
    seen in Fig. 8, a slight seepage can be observed in the MB-1 dam. The coal pillar
    was approximately 80 m in thickness, with favorable impermeability, and no seepage
    was observed. The goaf where the underground reservoir was located has not fully
    collapsed. The artificial dam mainly consisted of brick walls and concrete. The
    preliminary analysis implied that seepage caused by a weak connection between
    the artificial dam and the rock. Fig. 8 Seepage in the artificial dam Full size
    image 3.2 Methodology and experimental details The MB-1 dam of the underground
    reservoir of the Wulanmulun Mine was simulated in this study via the proposed
    nested multi-coupling model test system. The self-developed servo water injection
    system applied different water pressures to the goaf, while dynamic and static
    loads were also applied via hydraulic oil cylinders. The fracture development
    and failure patterns of the artificial dam under the coupled action of stresses
    and seepage were examined for instability analysis. The feasibility and efficiency
    of the developed system were experimentally validated. 3.3 Test preparation 3.3.1
    Designed model size The model was designed based on fluid‒solid coupling similarity
    theory. According to the theorem of dimensional analysis, the following similarity
    criteria were formulated as in (Li et al. 2010): $$\\frac{{C_{\\sigma } }}{{C_{\\gamma
    } C_{l} }} = 1$$ (1) $$C_{K} = \\frac{{\\sqrt {C_{l} } }}{{C_{\\gamma } }}$$ (2)
    $$C_{F} = C_{\\gamma } \\times C_{l}^{3}$$ (3) where Cσ is the Stress similarity
    ratio, Cl is the geometrical similarity ratio, Cγ is the unit weight similarity
    ratio, CK is the similarity ratio of the permeability coefficient, and CF is the
    mechanical similarity ratio. Considering the available experimental devices and
    actual geometrical conditions, the geometrical similarity ratio was determined
    to be Cl = 25. Insofar as the unit weights of analog materials and rock formation
    were estimated as 17 and 23.8 kN/m3, respectively, the unit weight similarity
    ratio Cγ was calculated as 23.8 ÷ 17 = 1.4. The stress similarity ratios were
    determined as Cσ = Cl × Cγ = 25 × 1.4 = 35, CK = 3.57, and CF = 21,875. By considering
    the actual geometrical condition and the specifications of the equipment, the
    overall model size was set as 1400 mm × 1300 mm × 200 mm. The model included five
    rock formations, which thicknesses are listed in Table 2. Specifically, the embedded
    depths to the roof and floor of the artificial dam in the actual construction
    were 0.2 and 0.3 m, respectively. Accordingly, the roof and floor grooves in the
    physical analog model were 12 and 8 mm, respectively. Figure 9 shows the detailed
    scheme of the physical analog model. Fig. 9 Detailed dimensions of the physical
    analog model (unit:mm) Full size image 3.3.2 Physical analog materials of the
    simulated rock formation River sand, with favorable grain composition and mean
    grain size below 1.25 mm, was selected as a physical analog material for simulating
    stress-seepage behaviors in the coal seam. High-strength white plaster powder
    and complex Portland cement of PC32.5R strength grade were selected as the cementing
    materials. Both industrial Vaseline (nonpoisonous) and silicone oil (with a viscosity
    of 1000 cs) were added for seepage proofing. According to the determined similarity
    constants, the compressive strengths of different specimens were measured and
    compared with the values of the original rock formation, coal pillar, and artificial
    dam to determine the mass ratios of various components in the physical analog
    materials. Table 3 lists the detailed proportions, in which S: C: G: V: S’ denote
    the mass proportion of river sand, cement, plaster, Vaseline, and silicone oil.
    Table 3 Proportions of physical analog materials and their test results Full size
    table According to the above proportions, physical analog materials were poured
    layer by layer, as shown in the detailed procedures in Fig. 10. Firstly, the amounts
    of various raw materials were weighted according to the proportions in Table 3.
    Secondly, the weighed materials were uniformly stirred. In the third step, the
    mixture was placed in the mold for compaction. In the fourth step, the pressure
    cell and artificial dam were buried when the mixture was poured. In the next excavation
    and support step, the dam, water storage area, and roadway were formed, and rock
    materials were broken into pieces to simulate the roof collapse in the goaf. Finally,
    the sealing glue was set, and the water inlet was connected. Fig. 10 Model pouring
    procedure. a Weighting of raw materials and b uniform stirring and c pouring and
    d pre-burying of the artificial dam and e pre-burying of the artificial dam and
    f excavation and g pasting the sealing glue and h completion Full size image 3.3.3
    Simulation of support components The simulation parameters of the anchor bolt
    (cable) were determined based on the similarity principle of geometrical size
    and strength. Specifically, the similarity of tensile strength, length, and diameter
    were mainly considered. According to the mechanical similarity in Eq. (3), we
    get CF = 21,875. In this study, tin wires with a diameter of 0.8 mm were used
    for simulating top and side anchor bolts, and tin wires with a diameter of 1.5
    mm were used for the simulation of anchor cables. The similar anchor bolt (cable)
    mainly consisted of two parts: a free end and an anchored end. The free end was
    simulated with tinfoil and blots, while the anchored end was simulated by the
    square iron sheet. The free and anchored ends were connected with the epoxy resin
    AB glue. The pre-stress was applied to the anchor bolt (cable) by tightening the
    nuts. Table 4 lists the tensile strengths of the anchor bolts (cables) in this
    study. Table 4 Parameters of the support components Full size table Under the
    premise of satisfying the similarity ratio, the steel belts were simulated by
    strip iron sheets with an identical size of 200 mm × 15 mm, the metal net was
    simulated by a polyethylene plastic net, and the tray was simulated by a square
    iron sheet with a side length of 10 mm. Figure 11 depicts the adopted models of
    various support components. Fig. 11 Models of various support components. a Anchor
    bolt (cable) and b metal net and c steel belt and d tray Full size image 3.4 Loading
    scheme This study comprehensively combined dynamic loads, static loads, and water
    pressure applied to the physical analog model. Based on the determined similarity
    ratio, the load function was designed for loading simulation. Specifically, the
    mine pressure was applied to the model in multiple steps via the top and side
    static oil cylinders until reaching final loads of 30.83 and 28.62 kN, respectively.
    Water was injected from the water pressure device to the water storage region
    until reaching the designed water pressure. Accordingly, pressure-seepage coupling
    action was simulated. Earthquakes can affect the overall stability of the structure
    (Song et al. 2020, 2021a, b). To simulate a mine earthquake that induced top collapse
    in the goaf, twice identical vibration loads were applied to the inner frame via
    the bottom vibration cylinder, with a vibration amplitude of ± 0.5 mm, a frequency
    of 8 Hz, reaching 1000 vibration cycles. The loaded physical analog model was
    monitored in real-time scale during the loading process for data analysis and
    exploring the failure characteristics of artificial dams. 3.5 Monitoring procedure
    This study monitored stresses, displacements, and microdamage deformation characteristics
    of the artificial dam. For an artificial dam, the displacement can most directly
    reflect the deformation. This study mainly focused on the displacement variation
    processes in the artificial dam, roof, and floor. The surface displacements were
    monitored via mobile and fixed digital single-lens reflex and processed via CAD
    software. The digital single lens reflex was fixed for shooting, and the obtained
    images were inputted to CAD to calculate the displacement at each monitoring point.
    Accordingly, the deformation characteristics of the artificial dam were determined.
    Two groups of mutually orthogonal resistor discs were arranged for measuring the
    surface strains of the artificial dam. Both transverse and longitudinal strains
    at different positions of the artificial dam were measured. Figure 12 displays
    locations of various monitoring points. Fig. 12 Distribution of various monitoring
    points. a Positions of the displacement monitoring points and b positions of the
    strain monitoring points Full size image 4 Analysis of experimental results 4.1
    Water pressure action The displacement variation of the artificial dam was the
    main focus of this study. During the engineering in-service period, artificial
    dam is always exposed to water pressure. It is therefore crucial to analyze the
    displacement increment effect of the dam under water pressure on its overall structural
    stability. After the applied mine pressure reached a stable value, the water pressure
    increased gradually. Figure 13 displays the displacement variation rules at various
    monitoring points on the dam. It can be observed that at water pressures below
    11.43 kPa, the displacements at various measuring points on the dam changed gradually,
    suggesting an elastic deformation phase; as the water pressure exceeded 11.43
    kPa, the dam displacement became sharper, suggesting the occurrence of plastic
    deformation. The displacement at measuring point A3 was the largest (1.79 mm),
    followed by the values at measuring points A2 and A4 (1.07 and 1.12 mm, respectively),
    while the displacements at A1 and A5 were the lowest (0.88 and 0.92 mm, respectively).
    It can thus be concluded that the displacement at the center was most significantly
    affected by water pressure, while smaller displacements occurred further away
    from the center. Fig. 13 Displacement variation curves of the artificial dam with
    water pressure Full size image Figure 14 depicts the micro-strain variations of
    the artificial dam monitoring points with the applied water pressure. Fig. 14
    Strain variation curves of the artificial dam with water pressure Full size image
    In particular, lines 1–1 and 1–2 in Fig. 14 are variation curves of horizontal
    and vertical micro-strains in the upper part of the dam, while lines 2–1 and 2–2
    are variations of horizontal and vertical micro-strains of the middle and lower
    parts of the dam. Overall, the vertical micro-strains exceeded the horizontal
    ones. Strain variations in the dam’s middle and lower parts under water pressure
    can roughly be divided into two phases: (1) linear variation phase at water pressures
    of 0–11.43 kPa, with slopes of 7.73 and 11.37 με/kPa, and (2) nonlinear variation
    phase at water pressures of 1.43–28.57 kPa. In the later stage, the dam underwent
    plastic deformation. The strain of the upper part of the dam showed an obvious
    change at a water pressure of 22.86 kPa. At water pressures below 22.86 kPa, the
    slope was slight, suggesting low strain growth rates (5.92 and 4.378 με/kPa);
    as the water pressure exceeded 22.86 kPa, the strain rate slightly increased.
    Overall, the failure limit water pressure of the artificial dam was determined
    to be 11.43 kPa, and the strain showed identical variation rules with the displacement.
    4.2 Influence of seismic waves Local fractures can be generated in dam concrete
    under water pressure and then develop toward the whole dam under long-term mine
    earthquake action. This would certainly affect the durability of the artificial
    dam. The effects of earthquakes and roof collapse on the artificial dam were simulated
    via vibration loads. After each dynamic loading, the damage in the artificial
    dam was monitored by means of acoustic wave measurement (Ma et al 2023a, b). Table
    5 lists the acoustic wave test results. It can be observed that the inner damages
    were further aggravated under vibration load, and the inner fractures rapidly
    developed, with an acoustic reduction rate of 47.9%. Table 5 Acoustic wave test
    results Full size table The vibration wave data were exported, and the waveform
    patterns were plotted, as shown in Fig. 15. Overall, both the vibration wave amplitude
    and peak dropped after three applications of vibration loads. Before the application
    of the load to the model, the acoustic wave peak was 126 mV; after the application
    of the vibration load for the first time, the acoustic wave peak dropped to 96
    mV, with a reduction of 23.8%; after the application of the vibration load for
    the second time, the acoustic wave peak was reduced to 70 mV, with a decline ratio
    of 44.4%. This suggests that the application of a vibration load can further promote
    the development of fractures in the artificial dam, leading to increasing consumption
    in the energy transfer of acoustic waves and a significant reduction in amplitude.
    Therefore, seismic fortification design is quite important for underground reservoirs
    under long-term vibration and surrounding mining conditions. Fig. 15 Measured
    acoustic waveform patterns of the artificial dam. a Acoustic wave of the artificial
    dam during acoustic wave measurement for the first time and b acoustic wave of
    the artificial dam during acoustic wave measurement for the second time and c
    acoustic wave of the artificial dam during acoustic wave measurement for the third
    time Full size image 4.3 Deformation characteristics Water seepage and damage
    characteristics under water pressure and vertical loads were directly observed
    by the digital camera. Accordingly, the whole process from the beginning of dam’s
    loading to its instability was displayed and examined in detail. 4.3.1 Water flow
    permeation The main function of artificial dams is to connect with coal pillars
    to form a whole body. Accordingly, the outer boundary of the underground reservoir
    was formed. As the water pressure increased gradually, the permeation to the artificial
    dam was further aggravated. The reservoir was full of water as the water pressure
    reached 2.86 kPa. At that time, permeation could be observed on the roof and floor
    grooves; however, both permeation volume and velocity were low. As the water pressure
    increased to 11.43 kPa, both roof and floor grooves of the dam were seriously
    permeated, while permeation appeared in the dam body. Figure 16 displays the permeation
    process in the physical analog model. Fig. 16 Permeation phenomenon in the model.
    a Permeation phenomenon at a water pressure of 11.43 Kpa and b permeation in the
    dam body and c permeation at the roof groove and d permeation at the floor groove
    Full size image 4.3.2 Failure characteristics Mine pressure is the main factor
    that induces overall structural deformation and failure of the underground reservoir.
    At a vertical load of 54.84 kN, no obvious deformation of the artificial dam was
    observed. As the vertical load increased to 170.37 kN, the dam entered the plastic
    yield phase, and microfractures appeared in the dam but were not interconnected.
    As the load increased to 304.43 kN, oblique fractures began to appear on the surface
    of the artificial dam and propagated through the whole dam body. Afterward, the
    fractures in the coal pillar and on the side of the roadway were connected, and
    the model underwent instability failure. As shown in Fig. 17, the artificial dam
    underwent shear failure, and the fractures propagated through the whole dam. Fig.
    17 Failure characteristics of the artificial dam. a The artificial dam (near the
    roadway) and b the artificial dam (near the reservoir) Full size image 5 Conclusions
    The results obtained made it possible to draw the following main conclusions:
    1. In this study, a nested multi-coupling model test system was developed, which
    was composed of a model shelf, a mine pressure simulation device, a reservoir
    pressure simulation device, and a monitoring system. The maximum model size was
    1400 mm × 1300 mm × 200 mm. The servo water pressure control system was set in
    the reservoir pressure simulation device, achieving accurate water injection in
    combination with a water pressure sensor and high-precision flowmeter. Different
    types of static-load and vibration-load oil cylinders were set in the model shelf.
    In combination with a servo water pressure device, a complex underground reservoir
    was simplified as an equivalent experimental system subjected to the joint action
    of dynamic loads, static ones, and water pressure. Thus, different types of loads
    could be comprehensively combined for simulating various complex mine environments.
    2. Appropriate physical analog materials were selected to simulate the artificial
    dam, the surrounding rocks, and the support components of the artificial dam of
    the underground reservoir. According to multiple experimental results, novel fluid–solid
    coupling materials were selected, river sand was adopted as the aggregate, a mixture
    of plaster and cement was adopted as the cementing material, and Vaseline and
    silicone oil were added for anti-seepage. Physical analog materials with similar
    compressive strength of rock formations under study could be prepared by changing
    proportions of their ingredients. The prepared physical analog materials showed
    favorable impermeable performances. For the support components, tin wires and
    striped ion sheets with a size of 200 mm × 15 mm were used for simulating anchor
    rods (cables) and steel strips. A vinyl plastic net was used for simulating the
    metal net, and square ion sheets with a side length of 10 mm were used for simulating
    the tray. 3. Based on the established model, a similarity model test was performed
    on the artificial dam, and both the deformation and failure characteristics of
    the artificial dam under the coupled action of water and mine pressures were determined
    to validate the model’s reasonability and feasibility. According to the experimental
    results, the displacement of the artificial dam increased gradually under increasing
    water pressure. In particular, the displacement of the dam center was the largest,
    with smaller displacements further away from the center. The critical water pressure
    was determined to be 11.43 kPa. When the water pressure exceeded the critical
    value, both the displacement and strain of the dam increased significantly. 4.
    The damage in the artificial dam was further aggravated by vibration loads. The
    reduction ratios of the acoustic wave velocity and peak were 47.9 and 44.4%, respectively.
    For artificial dams subjected to mine earthquakes for a long time, reliable aseismic
    measures should be envisaged. As the water pressure increased, water began to
    seep into the artificial dam; however, no obvious structural damage was observed.
    The groove of the dam was the weak part of seepage. Damage to the artificial dam
    was induced by the accumulated mine pressure, showing a shear compression failure
    mode. Availability of data and materials Not applicable. References Bai DY, Ju
    JF, Xu JL, Li JH (2017) Study on the stability of artificial dam body of underground
    reservoir in Lijiao Coal Mine. J China Coal Sci 42(07):1839–1845. https://doi.org/10.13225/j.cnki.jccs.2016.1477
    Article   Google Scholar   Bai Y, Shan RL, Ju Y et al (2020) Study on the mechanical
    properties and damage constitutive model of frozen weakly cemented red sandstone.
    Cold Reg Sci Technol 171:102980. https://doi.org/10.1016/j.coldregions.2019.102980
    Article   Google Scholar   Chi MB, Li P, Cao ZG et al (2023) Seismic performance
    analysis of slab artificial dam of underground reservoir in coal mine. J China
    Coal Sci 48(3):1179–1191. https://doi.org/10.13225/j.cnki.jccs.2021.1991 Article   Google
    Scholar   Department of Energy Statistics, National Bureau of Statistics (2022)
    China Energy Statistical Yearbook -2021. China Statistics Press Gu DZ (2015) Theoretical
    framework and technical system of coal mine underground reservoir. J China Coal
    Sci 40(02):239–246. https://doi.org/10.13225/j.cnki.jccs.2014.1661 Article   Google
    Scholar   Kong XS, Shan RL, Yuan HH, Xiao YH, He XS, Bao TT (2020) Study on the
    sustaining effect of concrete-filled steel tubular supports in deep mining roadways.
    Arab J Geosci 13(20):1092. https://doi.org/10.1007/s12517-020-06106-y Article   Google
    Scholar   Li SC, Feng XD, Li SC, Li LP, Li GY (2010) Development and application
    of novel solid-flow coupling similar materials. Chin J Rock Mech Eng 29(2):281–288
    Google Scholar   Li JS, Wang D, Kang TH (2012) Environmental problems and strategies
    caused by coal mining. Adv Mater Res 433–440:2071–2076. https://doi.org/10.4028/www.scientific.net/AMR.433-440.2071
    Article   Google Scholar   Li L, Kong X, Yang W, Huang J, Wang Z (2023) A study
    of anchor cable and C-shaped tube support for the roadway of Shuangliu Coal Mine.
    Symmetry-Basel 15(9):1757. https://doi.org/10.3390/sym15091757 Article   Google
    Scholar   Liu W, Zhang ZX, Fan JY, Jiang DY, Li ZY, Chen J (2020) Research on
    gas leakage and collapse in the cavern roof of underground natural gas storage
    in thinly bedded salt rocks. J Energy Storage 31:101669. https://doi.org/10.1016/j.est.2020.101669
    Article   Google Scholar   Lyu X, Yang K, Fang JJ, Duan MK, Tang JZ (2022) Simulation
    of the uniaxial mechanical properties and crack evolution of coal pillar-artificial
    dam in abandoned mines. Adv Mater Sci Eng 2022:8147186. https://doi.org/10.1155/2022/8147186
    Article   Google Scholar   Ma JP, Zhang GC, Zhou GL et al (2023a) Stability analysis
    of artificial dam in coal mine underground water reservoir based on the hydro-mechanical
    damage model. Geomat Nat Haz Risk 14(1):2190855. https://doi.org/10.1080/19475705.2023.2190855
    Article   Google Scholar   Ma Q, Liu X, Tan Y et al (2023b) Numerical study of
    mechanical properties and microcrack evolution of double-layer composite rock
    specimens with fissures under uniaxial compression. Eng Fract Mech 289:109403.
    https://doi.org/10.1016/j.engfracmech.2023.109403 Article   Google Scholar   Miao
    XX, Wang A, Yap S, Wang LG, Pu H (2009) Basis and application of water resource
    conservation in arid and semi-arid mining areas. Chin J Rock Mech Eng 28(2):217–227
    Google Scholar   Song DQ, Liu XL, Huang J et al (2020) Energy-based analysis of
    seismic failure mechanism of a rock slope with discontinuities using Hilbert-Huang
    transform and marginal spectrum in the time-frequency domain. Landslides 18(1):105–123.
    https://doi.org/10.1007/s10346-020-01491-7 Article   Google Scholar   Song DQ,
    Liu XL, Huang J et al (2021a) Seismic cumulative failure effects on a reservoir
    bank slope with a complex geological structure considering plastic deformation
    characteristics using shaking table tests. Eng Geol 286:106085. https://doi.org/10.1016/j.enggeo.2021.106085
    Article   Google Scholar   Song DQ, Liu XL, Li B et al (2021b) Assessing the influence
    of a rapid water drawdown on the seismic response characteristics of a reservoir
    rock slope using time-frequency analysis. Acta Geotech 16:1281–1302. https://doi.org/10.1007/s11440-020-01094-5
    Article   Google Scholar   Sun YF, Zhu SP, Peng ZQ et al (2023) Influence of coal
    mining on historical buildings: case study in Shanxi. Int J Environ Res Public
    Health. https://doi.org/10.3390/ijerph20021543 Article   Google Scholar   Wang
    Q, Song XX, Liu Y (2020) China’s coal consumption in a globalizing world: insights
    from multi-regional input-output and structural decomposition analysis. Sci Total
    Environ 711:134790. https://doi.org/10.1016/j.scitotenv.2019.134790 Article   Google
    Scholar   Wang LJ, Cao ZG, Cheng JH et al (2023) Mechanical model of rock mass
    failure and seepage between base layers of underground water reservoir dam in
    coal mine. J China Coal Sci 48(3):1192–1208. https://doi.org/10.13225/j.cnki.jccs.2022.0253
    Article   Google Scholar   Wen ZJ, Jiang PF, Jing XL, Cao ZG, Guan YT (2021) Development
    and verification of seepage simulation test system for underground reservoir floor
    in Coal mine. J China Coal Sci 46(5):1487–1497. https://doi.org/10.13225/j.cnki.jccs.st20.1601
    Article   Google Scholar   Wu HY, Yin ZQ, Zhang YC, Qi C, Liu X, Wang JE (2022)
    Comparison of underground coal mining methods based on life cycle assessment.
    Front Earth Sci 10:879082. https://doi.org/10.3389/feart.2022.879082 Article   Google
    Scholar   Yan YG (2016) Experimental study on seismic resistance of underground
    reservoir in level coal seam. Tsinghua University Yang SM (2013) Study on water
    resource protection and pollution prevention of mining area. Appl Mech Mater 275–277:2752–2755.
    https://doi.org/10.1038/s41598-018-38148-4 Article   Google Scholar   Yao QL,
    Liu YP, Chen T, Li XH, Yang SY, Duan HF (2018) Experimental study on strength
    damage evolution characteristics of artificial dam body of underground reservoir.
    J China Coal Sci 43(04):1111–1117. https://doi.org/10.13225/j.cnki.jccs.2017.0986
    Article   Google Scholar   Download references Funding The study was supported
    by the National Key Research and Development Plan Project (No. 2016YFC0501109),the
    National Natural Science Foundation of China (Grant No. 52274148), the Fundamental
    Research Funds for the Central Universities (Grant No. 2021YQLJ08) and Optimum
    Design Project of Structure and Parameters of Artificial Dam in Coal Mine Groundwater
    Reservoir (Grant No. 2018207010084). Author information Authors and Affiliations
    School of Mechanics and Civil Engineering, China University of Mining and Technology
    (Beijing), Beijing, 100083, China Xiang-song Kong, Jun-wei Huang, Ren-liang Shan
    & Wei Yang State Key Laboratory of Water Resource Protection and Utilization in
    Coal Mining, China Energy Investment Co., Ltd., Beijing, 100011, China Jie Fang
    Contributions All authors contributed to the study conception and design. XSK
    proposed and designed the research proposition, JF carried out the experiment,
    RLS participated in the on-site engineering investigation and monitored the data,
    JWH wrote the paper, and WY processed the experimental data. All authors have
    read and agreed to the published version of the manuscript. Corresponding author
    Correspondence to Ren-liang Shan. Ethics declarations Ethics approval and consent
    to participate Not applicable. Consent for publication All authors agree to publish
    this manuscript. Competing interests The authors declare no conflict of interest.
    Additional information Publisher''s Note Springer Nature remains neutral with
    regard to jurisdictional claims in published maps and institutional affiliations.
    Rights and permissions Open Access This article is licensed under a Creative Commons
    Attribution 4.0 International License, which permits use, sharing, adaptation,
    distribution and reproduction in any medium or format, as long as you give appropriate
    credit to the original author(s) and the source, provide a link to the Creative
    Commons licence, and indicate if changes were made. The images or other third
    party material in this article are included in the article''s Creative Commons
    licence, unless indicated otherwise in a credit line to the material. If material
    is not included in the article''s Creative Commons licence and your intended use
    is not permitted by statutory regulation or exceeds the permitted use, you will
    need to obtain permission directly from the copyright holder. To view a copy of
    this licence, visit http://creativecommons.org/licenses/by/4.0/. Reprints and
    permissions About this article Cite this article Kong, Xs., Huang, Jw., Shan,
    Rl. et al. Elaboration and application of the nested multi-coupling model test
    system for an artificial dam seepage simulation under combined action of dynamic
    and static loads. Geomech. Geophys. Geo-energ. Geo-resour. 10, 12 (2024). https://doi.org/10.1007/s40948-023-00731-z
    Download citation Received 14 September 2023 Accepted 21 December 2023 Published
    03 January 2024 DOI https://doi.org/10.1007/s40948-023-00731-z Share this article
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Keywords Coal mine underground reservoir Test system Similar model experiment
    Artificial dam Use our pre-submission checklist Avoid common mistakes on your
    manuscript. Associated Content Part of a collection: Geomechanical challenges
    in the process of comprehensive utilization of closed/abandoned mines Sections
    Figures References Abstract Article Highlights Introduction Elaboration of the
    experimental system Engineering application of the proposed system Analysis of
    experimental results Conclusions Availability of data and materials References
    Funding Author information Ethics declarations Additional information Rights and
    permissions About this article Advertisement Discover content Journals A-Z Books
    A-Z Publish with us Publish your research Open access publishing Products and
    services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Geomechanics and Geophysics for Geo-Energy and Geo-Resources
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Elaboration and application of the nested multi-coupling model test system
    for an artificial dam seepage simulation under combined action of dynamic and
    static loads
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zhu H.
  - Huang Y.
  - An Z.
  - Zhang H.
  - Han Y.
  - Zhao Z.
  - Li F.
  - Zhang C.
  - Hou C.
  citation_count: '0'
  description: 'Radiometric correction is essential to unmanned aerial vehicle (UAV)
    precision agriculture applications, especially for crop multi-period analysis
    and quantitative inversion of phenotypic and physiological parameters. In this
    study, we investigated the performance of four radiometric correction methods:
    “Camera only” (A), “Camera and sun irradiance” (B) and “Camera, sun irradiance
    and sun angle” (C) methods provided by Pix4d Mapper and an irradiance sensor-based
    method (D) implemented with the R software. UAV campaigns were conducted at flight
    altitudes of 30 m, 60 m and 90 m under clear and cloudy skies at different times
    over an experimental field of winter wheat. The influences of illumination, flight
    altitude and flight time on reflectance and vegetation indexes derived from different
    radiometric calibration methods were analyzed. Moreover, we further assessed the
    impact of reflectance and vegetation index variations on the above-ground biomass
    (AGB) and leaf area index (LAI) estimations of winter wheat. Results showed that
    method D is a promising approach for radiometric calibration, which produced consistent
    reflectance with method A at noon (e.g., 10:44:41 AM March 17 and 11:39:37 AM
    April 7) and mid-afternoon (e.g., 15:30:02 PM May 1) and more reliable reflectance
    in the morning (e.g., 7:15:44 AM March 17). Methods B and C seriously underestimated
    the reflectance at 10:44:41 AM March 17 and 11:39:37 AM April 7. This was caused
    by the incorrect attitude angles of the irradiance sensor and further miscalculation
    of the solar irradiance by Pix4d Mapper. Interestingly, these errors were eliminated
    in the calculation of the ratio type of vegetation indexes. Methods B and C yielded
    vegetation indexes that were almost the same as those of methods A and D. Under
    cloudy sky, when direct sunlight is not blocked by clouds, method D was effective;
    with cloud occlusion, results on April 24 indicated that the method failed to
    estimate the total sunlight and direct sunlight ratio. Reflectance and vegetation
    indexes obtained from different radiometric correction methods were all obviously
    affected by flight altitude. Furthermore, the variations of NDVI with flight altitude
    increasing were different with reflectance. Changes in reflectance and vegetation
    indexes with flight altitude had little effect on the correlation coefficients
    yielded with AGB, but showed a significant influence on those of LAI. Through
    analyzing the variation of observed solar radiation at different time intervals,
    caution is recommended when using the assumption that solar radiation is stable
    during the UAV flight. The longer the flight, the greater the variation in solar
    radiation, especially at sunrise and sunset. Even at noon, when the flight duration
    is 30 min, the change in solar radiation may exceed 10 % (e.g., 16.5 % on March
    20).'
  doi: 10.1016/j.compag.2024.108821
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. Results 4. Discussion 5. Conclusion CRediT authorship contribution statement
    Declaration of competing interest Acknowledgements Data availability References
    Show full outline Figures (17) Show 11 more figures Tables (5) Table 1 Table 2
    Table 3 Table 4 Table 5 Computers and Electronics in Agriculture Volume 219, April
    2024, 108821 Assessing radiometric calibration methods for multispectral UAV imagery
    and the influence of illumination, flight altitude and flight time on reflectance,
    vegetation index and inversion of winter wheat AGB and LAI Author links open overlay
    panel Honglei Zhu a b, Yanwei Huang a, Zhaokang An a, Han Zhang a, Yongyue Han
    a, Zihui Zhao a, Feifan Li a, Chan Zhang a b, Cuicui Hou a b Show more Share Cite
    https://doi.org/10.1016/j.compag.2024.108821 Get rights and content Highlights
    • Pix4d Mapper miscalculated the geometric angles of the irradiance sensor. •
    The irradiance-sensor-based method was effective under cloudy sky with unobstructed
    direct sunlight. • Changes in reflectance and vegetation indexes with flight altitude
    were irregular. • Variations in solar radiation during UAV flight affected the
    estimation of reflectance. Abstract Radiometric correction is essential to unmanned
    aerial vehicle (UAV) precision agriculture applications, especially for crop multi-period
    analysis and quantitative inversion of phenotypic and physiological parameters.
    In this study, we investigated the performance of four radiometric correction
    methods: “Camera only” (A), “Camera and sun irradiance” (B) and “Camera, sun irradiance
    and sun angle” (C) methods provided by Pix4d Mapper and an irradiance sensor-based
    method (D) implemented with the R software. UAV campaigns were conducted at flight
    altitudes of 30 m, 60 m and 90 m under clear and cloudy skies at different times
    over an experimental field of winter wheat. The influences of illumination, flight
    altitude and flight time on reflectance and vegetation indexes derived from different
    radiometric calibration methods were analyzed. Moreover, we further assessed the
    impact of reflectance and vegetation index variations on the above-ground biomass
    (AGB) and leaf area index (LAI) estimations of winter wheat. Results showed that
    method D is a promising approach for radiometric calibration, which produced consistent
    reflectance with method A at noon (e.g., 10:44:41 AM March 17 and 11:39:37 AM
    April 7) and mid-afternoon (e.g., 15:30:02 PM May 1) and more reliable reflectance
    in the morning (e.g., 7:15:44 AM March 17). Methods B and C seriously underestimated
    the reflectance at 10:44:41 AM March 17 and 11:39:37 AM April 7. This was caused
    by the incorrect attitude angles of the irradiance sensor and further miscalculation
    of the solar irradiance by Pix4d Mapper. Interestingly, these errors were eliminated
    in the calculation of the ratio type of vegetation indexes. Methods B and C yielded
    vegetation indexes that were almost the same as those of methods A and D. Under
    cloudy sky, when direct sunlight is not blocked by clouds, method D was effective;
    with cloud occlusion, results on April 24 indicated that the method failed to
    estimate the total sunlight and direct sunlight ratio. Reflectance and vegetation
    indexes obtained from different radiometric correction methods were all obviously
    affected by flight altitude. Furthermore, the variations of NDVI with flight altitude
    increasing were different with reflectance. Changes in reflectance and vegetation
    indexes with flight altitude had little effect on the correlation coefficients
    yielded with AGB, but showed a significant influence on those of LAI. Through
    analyzing the variation of observed solar radiation at different time intervals,
    caution is recommended when using the assumption that solar radiation is stable
    during the UAV flight. The longer the flight, the greater the variation in solar
    radiation, especially at sunrise and sunset. Even at noon, when the flight duration
    is 30 min, the change in solar radiation may exceed 10 % (e.g., 16.5 % on March
    20). Previous article in issue Next article in issue Keywords UAVRadiometric calibrationPix4d
    MapperIlluminationFlight altitudeFlight timeWinter wheatAGBLAI 1. Introduction
    Unmanned aerial vehicles (UAVs) equipped with multi-spectral sensors have become
    a common and important technology in precision agriculture (Kanning et al., 2018,
    Sun et al., 2021, Verger et al., 2014, Yue et al., 2019). The key to quantitative
    inversion of crop phenotypic and physiological parameters (e.g., biomass, leaf
    area index, and canopy chlorophyll content) with UAV multi-spectral images is
    to convert the DN values into reflectance (Gong et al., 2021, Holman et al., 2019,
    Qiao et al., 2022, Tu et al., 2018, Zheng et al., 2018). At present, the methods
    of UAV radiometric calibration can be divided into two categories: 1) based on
    radiometric calibration targets and 2) irradiance sensors. For the radiometric
    calibration targets strategy, images of the targets are usually captured before
    or after the UAV campaign (Guan et al., 2019, Su et al., 2019), assuming that
    solar radiance is stable during a short flight. Alternatively, considering variations
    in illumination, a large number of calibration targets are placed in the study
    area to ensure each UAV image captures at least one calibration target during
    the flight (Honkavaara and Khoramshahi, 2018, Poncet et al., 2019). Then, an empirical
    line is established between raw DNs and known reflectance (dos Santos et al.,
    2021, Wang and Myint, 2015), and UAV images are applied to convert DNs to at-surface
    reflectance with the equation. However, it is time-consuming and laborious to
    set massive calibration targets for a large area, and impossible for areas that
    people cannot reach. In terms of the irradiance sensor strategy, ground (Deng
    et al., 2018, Wang et al., 2021a) or onboard (Hakala et al., 2013, Wang et al.,
    2019) spectrometers are employed to measure real-time solar irradiance during
    the flight. The ground spectrometers are heavy and expensive, and the data needs
    to be processed with the spectral response functions of the UAV camera. Low-cost
    and lightweight onboard irradiance sensors (e.g., Parrot sequoia sunshine sensor
    and MicaSense RedEdge-MX Downwelling Light Sensor) are designed by the manufacturers
    to match the UAV camera. Due to changes in UAV flight attitude, the irradiance
    sensor is scarcely parallel to the ground surface. The irradiance recorded by
    the sensor is not that received by the ground surface. The real solar irradiance
    needs to be estimated first with the irradiance sensor measurements and orientation
    angles of omega, phi, and kappa (Qin et al., 2022, Schneider-Zapp et al., 2019).
    Then, reflectance images are calculated using the estimated irradiance without
    the radiometric calibration target. Radiometric calibration is a challenging task
    for nonprofessional users, particularly for the irradiance-sensor-based method.
    Commercial software packages, such as Pix4d Mapper and Meteshape, have integrated
    user-friendly radiometric calibration modules (Daniels et al., 2023, Fawcett et
    al., 2020, Tu et al., 2018). Users simply import the UAV images along with the
    radiometric calibration target images into the software, and the software will
    automatically recognize the images of the calibration target and carry out radiometric
    calibration with the empirical line method; or, without the need for a calibration
    target, the software will employ the irradiance data written into the UAV images
    recorded by the sunlight sensor to calculate reflectance. The disadvantage of
    commercial software is that it is packaged and limits users’ insight into the
    details of the radiometric calibration methods. For example, four radiometric
    calibration methods are provided by Pix4d Mapper, but the advantages and disadvantages
    of the methods and the applicable weather conditions are not well understood.
    In meteorology, clear and overcast are defined as skies without any cloud (0 Oktas)
    and totally covered by cloud (8 Oktas), respectively. Cloud cover between 1 and
    7 Oktas is considered partly cloudy (Li and Lam, 2001, Smith et al., 2017). Clear
    and windless weather is the ideal environment for UAV data acquisition. However,
    such weather conditions are very rare. From 1979 to 2001, 75 % of all the NOAA
    HIRS data observed cloud cover (Wylie et al., 2005). Crop growth is a highly dynamic
    process, and significant changes in physiological and phenotypic parameters often
    occur within a week (Whitcraft et al., 2015). It means the UAV data is unavoidable
    to be obtained in weather conditions with cloud cover within a specific period
    of crop growth. Some studies have focused on UAV radiometric calibration under
    different illumination conditions (Qin et al., 2022, Schneider-Zapp et al., 2019,
    Stow et al., 2019a, Wang et al., 2019, Xue et al., 2023, Zeng et al., 2017). The
    radiation under overcast sky is considered uniform diffused light (Schneider-Zapp
    et al., 2019). Measurements of the irradiance sensor are related to the fraction
    of sky observed by the sensor. Cloudy, defined in meteorology, only describes
    the cloud coverage and does not characterize the position of clouds and sun during
    the UAV flight. Considering the position of the sun and clouds, there are two
    scenarios for solar radiation under a cloudy sky: direct sunlight without or with
    cloud occlusion. Few studies distinguish between the two scenarios when the evaluation
    of radiometric calibration methods is performed under a cloudy sky. Without cloud
    occlusion, the solar radiation is dominated by direct light, and the scattered
    light is spatially heterogeneous due to clouds. Systematic errors may affect the
    irradiance-sensor-based method as the sensor orients to different fractions of
    the sky hemisphere. With cloud occlusion, the total solar radiation and the proportion
    of direct light will change drastically. The effectiveness of the irradiance-sensor-based
    method under a cloudy sky is unknown. The flight altitude is an essential parameter
    in UAV campaign planning (Awais et al., 2021). Higher flight altitude results
    in fewer flight routes, fewer photos, and less time, but lower spatial resolution
    and stronger atmospheric effects. At present, there is no clear conclusion about
    the influence of flight altitude on reflectance. Guo et al. (2019) declared that
    the atmospheric effects contribute a little to the DN values within 100 m. Zeng
    et al. (2017) also reported that water spectra changes associated with increasing
    altitude from 20 m to 100 m were negligible. On the contrary, Avtar et al. (2020)
    observed higher values of NDVI and NDRE at the flight altitudes of 60 m and 80
    m. Stow et al., (2019a) found that the values of NDVI rapidly increased with the
    rising flight altitude and tend to stabilize from 25 to 100 m. The effect of flight
    altitude on reflectance obtained by different radiometric calibration methods
    needs further investigation. The other two environmental factors that affect UAV
    radiometric calibration are flight time and flight duration. UAV missions are
    often executed under sunny conditions in the middle of the day. However, due to
    accidental adverse weather conditions, such as cloud cover or strong winds, data
    needs to be obtained at other times. Whitcraft et al. (2015) analyzed cloud cover
    presence frequency and pervasiveness (amount) over global agricultural areas with
    10–13 years of daily 0.05° MODIS data and suggested that remote sensing data acquired
    in the morning was more likely to return reasonably clear views. Different times
    mean varied solar altitude and azimuth angles when the UAV captures images. The
    angular reflectance dependency is commonly referred to the bidirectional reflectance
    distribution function (BRDF), which explains changes in reflectance that result
    from illumination and viewing geometry changes dependent on surface property.
    The most common approach for investigating reflectance anisotropy is to extract
    the observation altitude and azimuth angles of pixels from the overlapping images
    of UAVs under fixed illumination geometry (Burkart et al., 2015, Gong et al.,
    2019, Hakala et al., 2010, Honkavaara and Khoramshahi, 2018). However, the impact
    of illumination geometry changes on the reflectance of UAV orthophoto images is
    poorly understood (Stow et al., 2019b). So far, there has been no study examining
    the consistency of the reflectance of orthophoto images derived from different
    radiometric calibration methods at different time points. On the other hand, the
    impact of solar radiation changes during UAV flight on radiometric calibration
    has not received sufficient attention. Currently, small multi-rotor UAVs have
    an endurance of less than 30 min, and fixed-wing UAVs can reach 1–2 h (Mohsan
    et al., 2022). Most UAV agricultural remote sensing research sites are small experimental
    fields with a flight duration of less than 30 min. The flight campaigns are usually
    conducted around noon local time (e.g., 10:00 AM – 14:00 PM), assuming that solar
    radiation is stable during the UAV flight. The radiometric corrections of the
    calibration target-based method captured before or after the flight and the onboard
    irradiance sensor method are both based on this assumption. Global horizontal
    irradiance under a cloudless sky is a function of solar altitude and various atmospheric
    conditions (Stein et al., 2012). Although evaluating variations in solar radiation
    at different time intervals is a simple task, little literature has been searched.
    Most researchers focused on developing a forecasting model to simulate solar radiation
    in the short or long term (Haider et al., 2022, Zang et al., 2020). It is not
    yet clear how the solar radiation changes at different time intervals at a certain
    time point. Above-ground biomass (AGB) and leaf area index (LAI) are two critical
    agronomic indicators in precision agriculture for monitoring crop growth states
    and estimating crop yield (Guo et al., 2023, Liu et al., 2023, Liu et al., 2022b,
    Yang et al., 2023). The vegetation indexes (e.g., NDVI, RVI and EVI), derived
    from canopy reflectance, are important parameters for retrieving crop AGB and
    LAI. As mentioned above, calibration from canopy DN values to reflectance is influenced
    by a variety of factors, such as radiometric calibration methods and environmental
    variables (i.e., UAV flight height, UAV flight time and illumination conditions).
    Current research on UAV radiometric calibration stopped at comparing the estimated
    reflectance with the measurements, lacking analysis of the impact of reflectance
    changes caused by the above factors on vegetation indexes, as well as further
    impact on the estimation of AGB and LAI. To address these issues, this study’s
    objectives mainly include: 1) consistency evaluation of different radiometric
    calibration methods, especially the method based on an irradiance sensor; 2) investigating
    the influence of illumination, flight altitude and flight time on reflectance
    and vegetation indexes derived from different radiometric calibration methods;
    and 3) analyzing the further impact of reflectance and vegetation index variations
    on the AGB and LAI estimations of winter wheat. 2. Materials and methods 2.1.
    Study site The study site (36°21′13″N, 114°20′17″E) is located in Handan City,
    Hebei Province, China (Fig. 1). This region is characterized by a continental
    monsoon climate. The annual average temperature, annual sunshine hours and precipitation
    are about 13.5℃, 2557 h and 548.9 mm, respectively. The region belongs to the
    North China Plain, which is the main wheat and maize producing area in China.
    Wheat is usually sown in early October and harvested in early June of the following
    year. Download : Download high-res image (1MB) Download : Download full-size image
    Fig. 1. Location of the study site (a: China; b: Hebei Province; c: the study
    site) and field experiments (d) of two wheat cultivars (GY and BN) under three
    plant densities (112.5, 187.5 and 262.5 kg/ha). Gaoyou 2018 and Bainong 418 are
    two wheat varieties widely planted in the local area. Gaoyou 2018 (GY) is a semi-winter
    strong gluten variety with an average growth period of 229.6 days. The tillering
    ability is strong before winter, and the cold resistance in winter is general.
    The average plant height is 73–76 cm, with good stalk elasticity and better falling
    resistance. It is moderately resistant to stripe rust, highly resistant to leaf
    rust, and moderately susceptible to powdery mildew. Bainong 418 (BN) is a mid-late
    maturing variety with a growth period of 228.8–234.3 days. It has good cold resistance
    in winter and a medium tiller yield. The plant height is 73.7–75.6 cm. It also
    has good stalk elasticity and strong lodging resistance. It is moderately resistant
    to stripe rust, moderately susceptible to leaf rust, powdery mildew and sheath
    wilt, and highly susceptible to scab. Field experiments were conducted to evaluate
    the yield of GY and BN under three plant densities (112.5, 187.5 and 262.5 kg/ha)
    during the 2018–2019 winter growing season. The test field was organized into
    18 plots, each with a size of 2 × 6 m and a planting spacing of 20 cm between
    rows. Each variety had three planting densities, and three replicates were set
    (2 cultivars × 3 plant densities × 3 repetitions). All plots adopted the same
    fertilization and irrigation application as local farmers. 2.2. Data and preprocessing
    2.2.1. Ground sampling a) Above-ground biomass. Destructive AGB samplings were
    taken within the sampling areas of each plot after the UAV campaigns. Wheat plants
    in three rows with a length of 15 cm were randomly selected and harvested from
    above the ground. The dry biomass was measured after being oven-dried at 105 ℃
    for 30 min and at 80 ℃ for 48 h. The dry biomass for each plot was calculated
    using the number of rows and plot length. b) Leaf area index. LAI measurements
    were conducted using the LAI-2200C Plant Crown Analyzer (LI-COR Inc., Lincoln,
    NE, USA). According to the guidelines in the instrument manual, LAI measurements
    were carried out on the same day of the UAV mission. For each plot, a set of 2
    above- and 8 below-canopy readings was taken to generate the average value of
    LAI. 2.2.2. UAV image data collection In this study, a Parrot Bluegrass quadrotor
    UAV, accompanied by a Parrot Sequoia® multispectral camera and an irradiance sensor
    (Parrot© SA, 2018) was used for data collection. The Sequoia camera has a 16-megapixel
    RGB sensor and four 1.2-megapixel monochrome sensors, collecting images in the
    green (550 nm − 40 nm bandwidth), red (660 nm − 40 nm bandwidth), red edge (735
    nm − 10 nm bandwidth) and near infrared (790 nm − 40 nm bandwidth) bands. The
    irradiance sensor was designed to provide the information needed to correct for
    illumination differences. The UAV campaigns were carried out on 17 March 2019,
    7 April 2019, 24 April 2019, 1 and 2 May 2019, 19 May 2019, and 7 June 2019. These
    dates correspond to the beginning of erect growth stage, jointing stage, heading
    stage, flowering stage, grain-fill stage, and ripening stage of the winter wheat
    phenology. Most of the UAV multispectral data were obtained in the morning and
    evening, accompanied by leaf area index (LAI) and above-ground biomass (AGB) measurements.
    There were two reasons for performing UAV flights at these times: 1) considering
    the impact of wind on UAV imaging quality. The region has a monsoon climate, with
    strong and frequent wind in the spring. There was little wind in the morning and
    evening during the day. 2) The optimal measurement conditions for LAI were a clean
    and transparent blue sky, with the sun below the horizon (before sunrise or after
    sunset), or the sun obscured by uniform clouds. A common UAV flight time was between
    10:00 AM and 14:00 PM. In order to evaluate the impact of flight time on the reflectance
    of the UAV image, flight missions at different times were conducted on 17 March
    2019 (7:15:44 AM and 10:38:11 AM), 7 April 2019 (6:38:58 AM and 11:39:37 AM),
    1 and 2 May 2019 (7:15:37 AM and 15:30:02 PM). The UAV flight altitudes were 30
    m, 60 m and 90 m for each flight mission. As a result of strong winds on May 19,
    2019, the UAV flight was only carried out at 30 m altitude. Fully automatic flight
    plans were followed through the Pix4D capture, with 80 % forward and side images
    overlapping. Images for radiometric calibration were captured before or after
    each flight using a calibration target supplied with the Sequoia. The target was
    recalibrated with 2 %, 25 % and 50 % reflectance panels. Details of the UAV data
    acquisition are shown in Table 1. Table 1. UAV flight dates, flight altitudes,
    time durations and calibration target acquisition times. Wheat growth stages Date(Y/M/D)
    The start time of flight Flight altitude Time duration Acquisition time of calibration
    target images Beginning of erect growth stage 2019/3/17 7:15:44 AM 30 m 3m8s 7:38:01
    AM 7:21:32 AM 60 m 2m28s 7:27:14 AM 90 m 1m42s 10:44:41 AM 30 m 5m14s 10:25:20
    AM 10:38:11 AM 60 m 2m21s 10:52:39 AM 90 m 1m53s  Jointing stage 2019/4/7 6:38:58
    AM 30 m 3m56s 6:36:49 AM/6:56:16 AM 6:51:47 AM 60 m 1m41s 6:45:03 AM 90 m 2m6s
    11:39:37 AM 30 m 4m39s 11:36:35 AM 11:46:36 AM 60 m 2m12s 11:54:09 AM 90 m 1m47s  Heading
    stage 2019/4/24 17:48:52 PM 30 m 3m11s 17:47:12 PM 17:54:10 PM 60 m 1m36s 17:58:59
    PM 90 m 1m11s  Flowering stage 2019/5/1 15:30:02 PM 30 m 3m29s 15:27:42 PM 15:35:38
    PM 60 m 1m45s 15:40:15 PM 90 m 1m16s 2019/5/2 7:15:37 AM 30 m 3m29s 7:13:54 AM
    7:21:25 AM 60 m 1m41s 7:25:44 AM 90 m 1m16s  Grain-fill stage 2019/5/19 6:57:57
    AM 30 m 3m28s 6:55:59 AM  Ripening stage 2019/6/7 7:44:20 AM 30 m 3m29s 7:42:33
    AM 7:50:07 AM 60 m 1m42s 7:57:03 AM 90 m 1m16s 2.2.3. The radiometric correction
    methods Four radiometric correction methods were used to generate the hemispherical-directional
    reflectance factor (HDRF) orthoimages (Schaepman-Strub et al., 2006). The “Camera
    only”, “Camera and sun irradiance” and “Camera, sun irradiance and sun angle”
    methods are packaged in Pix4d Mapper (version 4.5.6), and the software manufacturer
    did not provide specific instructions on these methods. The “Irradiance-sensor-based”
    method was implemented using R software (R Core Team, 2021) with irradiance sensor
    measurements and photogrammetry technology (Köppl et al., 2021, Schneider-Zapp
    et al., 2019). 2.2.3.1. The radiometric correction methods in Pix4d Mapper Method
    A: Camera only. The correction method only takes into account the camera properties
    and settings (vignetting, dark current, ISO, etc.). Images of a target with known
    reflectance are provided for converting corrected image values to reflectance.
    Method B: Camera and sun irradiance. On the basis of camera correction, this method
    normalizes the images captured during the flight with the information provided
    by the sun irradiance sensor. The sun irradiance sensor records the light conditions
    during the flight in the same spectral bands as the multispectral sensor. Therefore,
    images can be compared under different illumination conditions. Method C: Camera,
    sun irradiance and sun angle. In addition to camera and sun radiation correction,
    this method also takes into account the direction of the incoming sun ray, and
    its projection onto the scene and sun sensor. The relative angle between the sun
    irradiance sensor and camera is an essential parameter and should be tagged in
    the EXIF for every image. The processing process of the above three radiometric
    calibration methods in Pix4d Mapper is black-box to users (Cao et al., 2019, Deng
    et al., 2018). The technical support document of Pix4D only provides textual descriptions
    of these methods, without any relevant formulas (Pix4D, 2024). Parrot (2017) only
    released the formula for converting pixel values to irradiance and vignetting
    correction (see Section 2.2.3.2, Eqs. (2) to (4)), while not providing anything
    else about the above radiometric correction methods. 2.2.3.2. The irradiance-sensor-based
    radiometric correction method Method D: Irradiance-sensor-based. This method does
    not require a radiometric calibration target. It estimates HDRF with camera photogrammetric
    information and irradiance observed by a downwelling irradiance sensor. The reflectance
    factor ρ is defined as (1) where R is the measured pseudo-radiance by the Sequoia
    camera, the incoming irradiance of the surface. According to the application notes
    provided by the camera manufacturer (Parrot, 2017), a pseudo-radiance in arbitrary
    units homogeneous to W·sr−1·m−2 can be calculated using the digital number (DN)
    recorded within the raw image (2) where is the f-number (f = 2.2), the vignetting
    factor, the vignetting corrected pixel value, the exposure time in seconds, the
    ISO, A, B and C the calibration coefficients measured per unit in production.
    The vignetting correction coverts the raw pixel value with a vignetting factor
    depending on its coordinates in pixels (3) (4) where , n and m are coefficients
    of a polynomial stored in the camera tags, w and h the dimensions of the Sequoia
    image. The total incoming radiance Esun,toa is divided into direct sunlight Esun,dir
    and scattered sunlight Esun,scat (Fig. 2). The Esun,scat is assumed to be homogeneous.
    β is the angle between the normal of the local surface and the direct sunlight
    beam, κ the angle between the normal of the irradiance sensor and the direct sunlight
    beam, φ the angle between the normal of the local surface and the nadir, θ the
    angle between the normal of the irradiance sensor and the nadir. Cosβ describes
    the projection of the incoming radiance onto the local surface, and Ωφ/π the fraction
    of scattered sunlight the local surface received. Then, the irradiance of the
    local surface is: (5) (6) in particular, when φ = 0, (7) the angles of β and φ
    can be readily computed from the photogrammetric reconstruction. Download : Download
    high-res image (138KB) Download : Download full-size image Fig. 2. The geometric
    between direct sunlight, diffused sunlight, irradiance sensor and ground object.
    The Esun,dir and Esun,scat are calculated with the observation values of the irradiance
    sensor. Similarly, the irradiance measured by the sunshine sensor Esun,meas is:
    (8) where cosκ is the projection of the incoming radiance onto the irradiance
    sensor, Ωθ/π the fraction of scattered sunlight the local surface received. Let
    ε be the ratio of direct sunlight, (9) The total incoming radiance Esun,toa is:
    (10) A single flight time is usually less than 20 min. It is assumed that the
    total solar radiation will not change in a short time. Then, Eq.(10) is transformed
    into: (11) Let (12) (13) Eq. (11) simplifies to (14) Finally, the Esun,toa and
    ε can be calculated by the least-square method with the information of the sunshine
    attitude and measured irradiance. The key to this method is to solve the angle
    between the normal of the irradiance sensor and the nadir (θ), and the angle between
    the normal of sunshine sensor and the direct sunlight beam (κ). is the assumed
    unit vector perpendicular to the irradiance sensor. =(xt, yt, zt) is the transformed
    vector, (15) where is the rotation matrix that defines the camera orientation,
    the rotation matrix of the irradiance sensor relative to the camera. can be easily
    obtained from the generated camera parameter file. For Pix4D Mapper, the file
    is stored in the path …/project_name/1_initial/params. The relative angle between
    the sunshine sensor and the camera is 15° for Parrot Bluegrass, then can be expressed
    as: (16) Using the transformed vector , the θ can be computed as: (17) In order
    to calculate κ, it is also necessary to know the azimuth angle of the sunshine
    sensor vss, as well as the altitude usun and azimuth vsun angles of the sun. The
    vss can also be computed with : (18) The usun and vsun are obtained using the
    oce package (Kelley and Kelley, 2018) based on the acquisition date of the camera
    images. Here, we define a vector of the normal of a solar sensor , and a vector
    of incident light . Then, the angle between the normal of sunshine sensor and
    the direct sunlight beam κ can be expressed as: (19) 2.2.4. FY-4A data The FY-4A,
    launched on December 11, 2016, is China''s second generation geostationary meteorological
    satellite (Wang et al., 2021b). Multiple enhanced instruments were installed on
    FY-4A for monitoring small and medium-scale weather systems, including the Advanced
    Geostationary Radiation Imager (AGRI), Geostationary Interferometric Infrared
    Sounder (GIIRS) and the Lightning Mapping Imager (LMI). The AGRI has 14 spectral
    bands, covering a range of wavelengths from 0.45 to 13.8 μm, with a spatial resolution
    of 0.5–4 km. Based on AGRI observation data, the China National Satellite Meteorological
    Center provides a series of quantitative products, such as cloud and atmospheric
    products, surface products, weather products, and radiation products. In this
    study, the Cloud Top Height (CTP) product and AGRI visible bands were used to
    describe the cloud cover during UAV imaging. The visible range of clouds is calculated
    with the CTP product (Fig. 3). Download : Download high-res image (168KB) Download
    : Download full-size image Fig. 3. Calculation of the visible range of clouds,
    where r is the visible range of clouds, R the radius of the Earth, and h the cloud
    top height. 2.2.5. Atmospheric model MODTRAN5 The MODTRAN5 radiation transport
    model (Berk et al., 2006) was used to evaluate the ratio of direct sunlight estimated
    by radiometric calibration method D. A mid-latitude summer or winter atmospheric
    model was selected according to the date of the UAV images. The default values
    of atmospheric column parameters, multiple scattering parameters, and solar irradiance
    parameters were used. The surface albedo and temperature at the first boundary
    were set to 0.05 and 300, respectively. The surface meteorological range is an
    important parameter that affects sunlight scattering. In this study, the surface
    meteorological range observation data of Xingtai Meteorological Station, which
    is closest to the research site, was used as a reference data set. The MODTRAN5
    input value of the surface meteorological range was calibrated using the results
    of green band derived from the method D. The model simulation results of the red,
    NIR and red edge bands were used to evaluate the accuracy of direct sunlight ratio
    calculated by the method D. 2.2.6. Solar radiation observation data The solar
    radiation observation data, provided by the Solar Platform of the West University
    of Timisoara, Romania (45°44′49.57″N, 21°13′50.32″E), was used to illustrate the
    changes of the solar radiation before and after the UAV flight (Jurca et al.,
    2011). The platform was equipped with SMP10 and LP PYRA02AC pyranometers, and
    measurements were simultaneously performed all day long at constant time intervals
    of 15 s. Two types of sample data are available for free download: 1) raw and
    post-process data, 15-second intervals of global solar radiation in March, July,
    August, September and December 2010; 2) hourly data, from January 1, 2009 to December
    31, 2012. Fig. 4a shows the 15-second global solar radiation data in March 2010.
    Due to the influence of clouds, most observation data exhibited irregular fluctuations.
    Fig. 4b shows the solar radiation on March 20, with an ideal weather condition
    before 12:30:00. The data in the afternoon was affected by the clouds and had
    obvious fluctuations. The solar radiation in a clear sky is a smooth and symmetrical
    curve. Therefore, the maximum value of the curve was taken as the central point,
    and the data after the point of time was replaced symmetrically with the data
    before. Similarly, the data on July 15 was processed with the same method. Finally,
    the modified solar radiation data on March 20 and July 15 were used to analyze
    the changes in solar radiation at different UAV flight time intervals. Download
    : Download high-res image (671KB) Download : Download full-size image Fig. 4.
    (a) 15-second intervals of global solar radiation in March 2010; (b) 15-second
    intervals of global solar radiation on March 20, 2010. Fig. 5 shows a graphic
    abstract of this study. Firstly, the performance of method D was evaluated, including
    the linear fitting results of Esun,toa and ε, and the accuracy of the estimated
    direct sunlight ratio. Moreover, the influence of clouds on method D was analyzed.
    Secondly, we detected the consistency of reflectance derived from the four radiometric
    calibration methods and the impact of flight altitude and flight time. In addition,
    the impact of solar radiation changes during flight on radiometric calibration
    was analyzed. Thirdly, the consistency of vegetation indexes and the impact of
    flight altitude and flight time were assessed. Finally, we analyzed the further
    impact of reflectance and vegetation index variations on the AGB and LAI estimations
    of winter wheat. Download : Download high-res image (2MB) Download : Download
    full-size image Fig. 5. Graphic abstract of this study. 3. Results 3.1. Performance
    of the radiometric correction method D 3.1.1. Linear fitting results of Esun,toa
    and ε Table 2 shows the linear fitting results of Esun,toa and ε in the green
    band estimated with θ and κ provided by Pix4D Mapper and photogrammetry with R,
    respectively. In the output files generated by Pix4d Mapper, the angles θ and
    κ for every image were also computed and recorded. With the information of θ and
    κ provided by Pix4d Mapper, the Esun,toa and ε were also estimated using method
    D. Table 2. The linear fitting results of Esun,toa and ε in the green band estimated
    with θ and κ provided by Pix4D Mapper and photogrammetry. Date(Y/M/D) Flight altitude
    The start time of flight Irradiance-sensor-based method with θ and κ provided
    by Pix4D Mapper Irradiance-sensor-based method with θ and κ calculated by photogrammetry
    with R software ε 1/Esun,toa R2 P-value ε 1/Esun,toa R2 P-value 2019/3/17 30 m
    7:15:44 AM 0.0686 0.1419 0.0161 NS 0.6198 0.0684 0.7546 *** 60 m 7:21:32 AM 0.0573
    0.1200 0.0364 NS 0.5424 0.0678 0.6926 *** 90 m 7:27:14 AM 0.5192 0.0642 0.4521
    *** 0.5571 0.0586 0.9717 *** 30 m 10:44:41 AM 0.0077 0.0145 0.0002 NS 0.9058 0.0103
    0.9057 *** 60 m 10:38:11 AM 0.3423 0.0131 0.1067 * 0.8811 0.0105 0.9731 *** 90
    m 10:52:39 AM 0.0444 0.0138 0.0018 NS 0.9290 0.0100 0.9587 ***  2019/4/7 30 m
    6:38:58 AM 0.4497 0.1013 0.3946 *** 0.5446 0.0890 0.9487 *** 60 m 6:51:47 AM 0.6306
    0.0548 0.4155 *** 0.6164 0.0552 0.9748 *** 90 m 6:45:03 AM 0.4845 0.0867 0.2806
    *** 0.5306 0.0750 0.9683 *** 30 m 11:39:37 AM −0.0426 0.0095 0.0062 NS 0.9860
    0.0083 0.8455 *** 60 m 11:46:36 AM −0.1040 0.0094 0.0299 NS 0.9999 0.0081 0.8629
    *** 90 m 11:54:09 AM 0.0223 0.0092 0.0024 NS 0.8327 0.0083 0.7950 ***  2019/4/24
    30 m 17:48:52 PM 0.1917 0.2205 0.2470 *** 0.2471 0.2092 0.1571 *** 60 m 17:54:10
    PM 0.0215 0.3398 0.0191 NS 0.0259 0.3420 0.0254 NS 90 m 17:58:59 PM 0.0566 0.4538
    0.0446 NS 0.0031 0.4840 0.0001 NS  2019/5/1 30 m 15:30:02 PM 0.6074 0.0110 0.2783
    *** 0.9755 0.0088 0.7604 *** 60 m 15:35:38 PM 0.7893 0.0096 0.6868 *** 0.9718
    0.0088 0.7589 *** 90 m 15:40:15 PM 1.2440 0.0082 0.7443 *** 1.0222 0.0084 0.9951
    ***  2019/5/2 30 m 7:15:37 AM 1.2401 0.0069 0.8298 *** 0.9460 0.0130 0.9967 ***
    60 m 7:21:25 AM 1.4460 0.0040 0.8779 *** 0.9399 0.0126 0.9953 *** 90 m 7:25:44
    AM 1.4961 0.0038 0.8848 *** 0.9247 0.0128 0.9965 ***  2019/5/19 30 m 6:57:57 AM
    0.7577 0.0188 0.5458 *** 0.7768 0.0181 0.9509 ***  2019/6/7 30 m 7:44:20 AM 0.3868
    0.0201 0.3244 *** 0.7061 0.0160 0.9721 *** 60 m 7:50:07 AM 0.4902 0.0181 0.2185
    ** 0.6962 0.0158 0.9587 *** 90 m 7:57:03 AM 0.6727 0.0159 0.3264 ** 0.8197 0.0130
    0.9759 *** NS p-value ≥ 0.05, * 0.01 < p-value ≤ 0.05, ** 0.001 < p-value ≤ 0.01,
    *** p-value ≤ 0.001. It seems that Pix4d Mapper did not correctly calculate the
    geometric angles between the sunlight and the irradiance sensor embedded in Parrot
    Bluegrass. Among the 25 sets of flight data, 9 sets showed non-significant linear
    fitting results (P-value > 0.1). Although the linear correlations of the remaining
    sets were significant, the values of R2 are relatively low, such as the results
    on the morning of April 7 (R2 = 0.3946, 0.4155 and 0.2806). For the results on
    May 2, the values of R2 are greater than 0.8, while the values of the direct sunlight
    ratio were observed to be greater than 1. The linear fitting results estimated
    with θ and κ calculated by photogrammetry performed better than those provided
    by Pix4D Mapper. Except for April 24, the linear fitting results of other flight
    data were extremely significant (P-value < 0.1), and the values of R2 were greater
    than 0.69. The results on April 24 showed lower values of R2 (R2 < 0.16), and
    the P-values at flight altitudes of 60 m and 90 m were found to be non-significant.
    The value of ε on May 1 at the flight altitude of 90 m was slightly higher than
    1, possibly due to a less number of UAV images in linear regression. 3.1.2. Influence
    of clouds Fig. 6 shows the standard false color images of FY-4A when the drone
    captured images. The cloud coverage within the visible range of the study site
    was visually interpreted using ArcGIS 10.6. On April 24, the cloud coverage was
    the highest, accounting for 71.9 % of the planar projection area of the visible
    range. The cloud coverage on May 1, May 19 and June 7 was 50.1 %, 23.4 %, and
    16.1 %, respectively. Little or almost no clouds were observed during other flight
    times. Combined with the results in Table 2, it was found that the cloud coverage
    had a significant impact on the estimation of downwelling irradiance. The direct
    sunlight was blocked and the scattered sunlight was irregular under high cloud
    coverage on April 24, which led to the failure of the prerequisite for method
    D. The method D performed better in weather conditions with little or no clouds,
    such as March 17, April 7 and May 2. The orientation of the sun and clouds was
    another important factor affecting the accuracy of method D. The solar azimuths
    at 15:00:00 PM May 1, 7:00:00 AM May 19 and 7:45:00 AM June 7 were 256, 79 and
    82 degrees, respectively. A few clouds exited in the direction of the sun when
    the UAV captured images on May 1, resulting in lower values of R2 than those on
    May 19 and June 7. Download : Download high-res image (2MB) Download : Download
    full-size image Fig. 6. Standard false-color images of FY-4A during the UAV flights.
    The green dot is the study site, and the red circle is the visible range of clouds.
    (For interpretation of the references to color in this figure legend, the reader
    is referred to the web version of this article.) 3.1.3. Accuracy of the estimated
    direct sunlight ratio The UAV data with a flying altitude of 30 m at 7:15:44 AM
    and 10:44:41 AM March 17, 6:38:58 AM and 11:39:37 AM April 7, 15:30:02 PM May
    1, 7:15:37 AM May 2, 6:57:57 AM May 19 and 7:44:20 AM June 7 were used to evaluate
    the ratio of direct sunlight estimated by radiometric calibration method D and
    MODTRAN5 (Fig. 7). The values derived from method D showed good agreement with
    those of MODTRAN5 (r = 0.98, p < 0.001 for green band; r = 0.94, p < 0.001 for
    red band; r = 0.77, p < 0.05 for NIR band; r = 0.83, p < 0.05 for red edge band).
    Atmospheric scattering had a more significant impact on the green band, especially
    in the morning. At 7:15:44 AM March 17, the ratio of direct sunlight estimated
    by method D and MODTRAN5 was 0.62 and 0.50, respectively, while the value reached
    0.83 for method D and 0.92 for MODTRAN5 in the NIR band. At 10:44:41 AM March
    17, the difference between the green and NIR bands in the ratio of direct sunlight
    was reduced (0.91 and 0.92 for method D and MODTRAN5 in the green band; 0.93 and
    0.97 for method D and MODTRAN5 in the NIR band). Similar results were observed
    at 6:38:58 AM and 11:39:37 AM April 7. Particularly, the ratio of direct sunlight
    estimated by method D was obviously lower than that of MODTRAN5 in the red, NIR
    and red edge bands at 6:38:58 AM April 7. In the morning of May 2, May 19 and
    June 7, minor differences were found between method D and MODTRAN5 for all bands.
    Download : Download high-res image (633KB) Download : Download full-size image
    Download : Download high-res image (214KB) Download : Download full-size image
    Fig. 7. The ratio of direct sunlight estimated by radiometric calibration method
    D and MODTRAN5. 3.2. Reflectance consistency assessment, influence of flight altitude
    and flight time on reflectance 3.2.1. Reflectance consistency assessment UAV images
    obtained at 10:44:41 AM March 17, 11:39:37 AM April 7 and 15:30:02 PM May 1 at
    a flight altitude of 30 m were used to compare the reflectance calculated with
    different correction methods. Four types of ground features (i.e., cement road,
    grass, idle farmland and winter wheat) were selected in the study area, and 100
    sample points were randomly generated within each ground feature. Taking method
    A as the reference, the consistency of the other three methods for different bands
    was evaluated (Fig. 8). Download : Download high-res image (1MB) Download : Download
    full-size image Download : Download high-res image (649KB) Download : Download
    full-size image Fig. 8. The reflectance of ground features (i.e., cement road,
    grass, idle farmland and winter wheat) calculated with different radiometric calibration
    methods at 10:44:41 AM March 17, 11:39:37 AM April 7 and 15:30:02 PM May 1. The
    values of reflectance corrected with method D were close to those of method A
    in all three periods. However, methods B and C showed similar but unstable results
    during the three periods. The reflectances corrected with methods B and C on May
    1 were close to those of method A, while the reflectances on March 17 and April
    7 were significantly lower in all bands. Although methods B and C showed underestimation
    on March 17 and April 7, reflectances of ground features still showed good linear
    relationships with those of method A. Table 3 shows the root mean square errors
    of different correction methods for each band and ground feature. The method D
    produced consistent and low RMSEs for all three periods, with values ranging from
    0.002 to 0.026. Methods B and C illustrated larger RMSEs on March 17 (ranging
    from 0.027 to 0.314) and April 7 (ranging from 0.028 to 0.321). Ground features
    with high reflectance typically had a large value of RMSE. The cement road showed
    the largest RMSEs in the green, red and red edge bands, with values of 0.213,
    0.236 and 0.236, respectively. Winter wheat had the highest value of RMSE (0.321)
    in the NIR band. Table 3. The root mean square errors of different correction
    methods for each band and ground feature. Band Class March 17 April 7 May 1 Method
    B Method C Method D Method B Method C Method D Method B Method C Method D Green
    Cement road 0.179 0.199 0.013 0.207 0.213 0.005 0.020 0.014 0.007 Grass 0.054
    0.060 0.006 0.073 0.075 0.005 0.005 0.008 0.004 Idle farmland 0.104 0.114 0.010
    0.132 0.136 0.008 0.014 0.028 0.007 Winter wheat 0.050 0.054 0.005 0.048 0.049
    0.003 0.004 0.008 0.003  Red Cement road 0.203 0.219 0.012 0.231 0.236 0.014 0.016
    0.013 0.006 Grass 0.066 0.070 0.008 0.083 0.085 0.008 0.002 0.006 0.005 Idle farmland
    0.139 0.149 0.018 0.164 0.168 0.013 0.013 0.030 0.008 Winter wheat 0.039 0.041
    0.009 0.027 0.028 0.004 0.001 0.002 0.002  NIR Cement road 0.238 0.255 0.015 0.275
    0.281 0.005 0.016 0.017 0.006 Grass 0.108 0.115 0.011 0.142 0.144 0.006 0.005
    0.023 0.013 Idle farmland 0.206 0.217 0.022 0.244 0.249 0.008 0.018 0.046 0.007
    Winter wheat 0.243 0.256 0.026 0.314 0.321 0.010 0.018 0.069 0.010  Red edge Cement
    road 0.207 0.221 0.010 0.231 0.236 0.022 0.013 0.017 0.012 Grass 0.084 0.090 0.009
    0.105 0.107 0.012 0.004 0.015 0.014 Idle farmland 0.167 0.177 0.013 0.191 0.194
    0.019 0.015 0.034 0.011 Winter wheat 0.143 0.150 0.009 0.146 0.149 0.015 0.008
    0.029 0.011 3.2.2. The influence of flight altitude on reflectance The pixel sizes
    of the orthoimages at 30 m, 60 m and 90 m flight altitudes were 3.3 cm, 6.4 cm
    and 9.6 cm, respectively. Pixels corresponding to a same spatial point at different
    flight altitudes covered different areas of ground surface, which made pixel values
    extracted from spatial points incomparable. Therefore, the mean pixel values within
    ground features were used to evaluate the influence of flight altitude on reflectance.
    Table 4 shows the mean reflectance and Pbias of ground features at different flight
    altitudes in the green band obtained at 10:44:41 AM March 17, 11:39:37 AM April
    7 and 15:30:02 PM May 1. The performances of other bands were similar and not
    described here. For the results of March 17 and April 7, no obvious pattern of
    change was found by observing the values of Pbias at different flight altitudes.
    For example, in the results of method D, the reflectance of cement road at flight
    altitudes of 30 m, 60 m and 90 m was 0.252, 0.235 and 0.230, respectively, indicating
    that the reflectance of cement road gradually decreased with the flight altitude.
    While, in the results of method A, more reflectance reduction of the cement road
    was detected at the flight altitude of 60 m (Pbias = -7.07). Moreover, the reflectance
    of grassincreased at the flight altitude of 90 m (Pbias = 3.21). In terms of the
    results of April 7, 7 out of 8 Pbias were found positive for grass and idle farmland
    at the flight altitude of 60 m. All Pbias were negative at the flight altitude
    of 90 m. Comparatively, the results of May 1 present a clear downward trend for
    all ground features and radiometric correction methods. We further calculated
    the absolute errors in reflectance caused by different flight altitudes. The results
    revealed that values of the absolute error ranged from 0 to 0.074, and 90 % were
    less than 0.019. If only the results of methods A and D were considered, the range
    of absolute errors was narrowed to 0 to 0.039, and the mean absolute error (MAE)
    was 0.008. Table 4. The mean reflectance and Pbias of ground features in the green
    band at flight altitudes of 30 m, 60 m and 90 m. Time Class Empty Cell Method
    A Method B Method C Method D Empty Cell 30 m 60 m 90 m 30 m 60 m 90 m 30 m 60
    m 90 m 30 m 60 m 90 m March 17 Cement road Reflectance 0.250 0.233 0.241 0.078
    0.077 0.074 0.059 0.057 0.060 0.252 0.235 0.230 Pbias – −7.07 −3.71 – −1.67 −5.48
    – −2.59 1.26 – −6.72 −8.68 Grass Reflectance 0.079 0.076 0.081 0.024 0.024 0.025
    0.019 0.019 0.020 0.081 0.079 0.079 Pbias – −3.67 3.21 – −0.91 1.06 – 0.47 9.42
    – −2.05 −1.79 Idle farmland Reflectance 0.150 0.149 0.150 0.047 0.048 0.045 0.037
    0.040 0.035 0.153 0.155 0.146 Pbias – −0.82 −0.11 – 1.90 −5.54 – 8.47 −4.82 –
    1.23 −4.53 Winter wheat Reflectance 0.071 0.068 0.072 0.022 0.022 0.022 0.018
    0.018 0.018 0.073 0.071 0.071 Pbias – −3.73 1.91 – −2.51 −2.37 – −4.16 −0.60 –
    −1.83 −2.82  April 7 Cement road Reflectance 0.241 0.241 0.234 0.036 0.036 0.035
    0.030 0.031 0.029 0.242 0.237 0.232 Pbias – −0.01 −2.82 – −0.43 −3.62 – 2.02 −1.56
    – −1.90 −4.16 Grass Reflectance 0.084 0.086 0.081 0.013 0.013 0.012 0.011 0.011
    0.011 0.089 0.088 0.083 Pbias – 2.49 −3.37 – 0.95 −4.53 – 2.22 −3.58 – −0.04 −6.45
    Idle farmland Reflectance 0.153 0.158 0.149 0.023 0.023 0.022 0.020 0.020 0.019
    0.160 0.160 0.151 Pbias – 2.67 −3.20 – 0.05 −5.00 – 3.29 −2.17 – 0.20 −5.64 Winter
    wheat Reflectance 0.055 0.054 0.050 0.008 0.008 0.007 0.007 0.007 0.007 0.058
    0.056 0.051 Pbias – −2.31 −9.24 – −3.85 −10.38 – −1.43 −7.60 – −4.65 −12.04  May
    1 Cement road Reflectance 0.271 0.249 0.233 0.252 0.220 0.214 0.273 0.238 0.199
    0.271 0.249 0.232 Pbias – −8.17 −14.09 – −12.62 −14.98 – −12.91 −27.20 – −7.94
    −14.31 Grass Reflectance 0.077 0.073 0.069 0.072 0.072 0.068 0.070 0.069 0.057
    0.079 0.075 0.071 Pbias – −4.52 −9.38 – −0.53 −6.29 – −1.37 −18.46 – −4.71 −9.36
    Idle farmland Reflectance 0.132 0.119 0.114 0.118 0.128 0.112 0.104 0.133 0.091
    0.135 0.122 0.117 Pbias – −9.40 −13.11 – 9.16 −4.71 – 27.17 −12.98 – −9.50 −13.02
    Winter wheat Reflectance 0.053 0.046 0.043 0.050 0.044 0.041 0.045 0.036 0.033
    0.055 0.047 0.045 Pbias – −13.49 −18.89 – −11.87 −16.48 – −19.60 −27.18 – −13.69
    −19.03 3.2.3. The influence of flight time on reflectance Fig. 9 shows the influence
    of flight time on the reflectance of different correction methods. On March 17,
    the values of reflectance corrected by method A showed a large increase at 10:44:41
    AM compared with those at 7:15:44 AM. In contrast, an opposite trend was detected
    in the results computed by methods B and C. For example, in the near-infrared
    band, the mean reflectances of cement road, grass, idle farmland, and winter wheat
    at 7:15:44 AM derived from method B were 0.26, 0.09, 0.20, and 0.24, respectively,
    but dropped to 0.07, 0.03, 0.06, and 0.07 at 10:44:41 AM. For method D, except
    for a slight increase in the cement road, the mean reflectances of other ground
    features were relatively consistent in all bands at 10:44:41 AM and 7:15:44 AM.
    In the NIR band, the mean reflectances of cement road, grass, idle farmland, and
    winter wheat at 7:15:44 AM computed by method D were 0.35, 0.13, 0.26 and 0.32,
    respectively, and those of 0.29, 0.13, 0.25 and 0.30 at 10:45:00 AM, respectively.
    Download : Download high-res image (651KB) Download : Download full-size image
    Download : Download high-res image (613KB) Download : Download full-size image
    Download : Download high-res image (621KB) Download : Download full-size image
    Fig. 9. The reflectance calculated by the four radiometric correction methods
    at different flight times at the beginning of erect growth stage (7:15:44 AM and
    10:44:41 AM March 17), jointing stage (6:38:58 AM and 11:39:37 AM April 7), and
    flowering stage (15:30:02 PM May 1, 7:15:37 AM May 2). On April 7, the performance
    of each calibration method was similar to the results on March 17. On May 1 and
    2, each calibration method showed consistent reflectance values at 15:30:02 PM
    and 7:15:37 AM, especially for methods A, B and C. Unlike the previous results,
    methods B and C computed similar reflectance values at 15:30:02 PM. In addition,
    no underestimation of mean reflectance values was observed for method A at 7:15:37
    AM. Overall, method D exhibited robust results during the different flight times.
    3.2.4. Changes in solar radiation The UAV data with a flight altitude of 30 m
    (6:38:58 AM April 7) were used to further analyze the impact of solar radiation
    changes on reflectance calculation. The reflectance images were derived from radiometric
    correction method A using the calibration panel images captured before and after
    the flight, respectively. For comparison purposes, the pixel values of the calibration
    panel images were transformed from DN to irradiance. The mean irradiance of the
    calibration panel image captured before and after the flight was 0.52 (Fig. 10c)
    and 1.46 (Fig. 10d), respectively, which indicated the rapidly increasing solar
    radiation in the morning. According to the principle of the empirical line method,
    the reflectance of the object is inversely proportional to the irradiance of the
    calibration panel. Therefore, the reflectance (Fig. 10b) corrected using the pre-flight
    calibration panel image was significantly higher than that of post-flight (Fig.
    10a). Download : Download high-res image (668KB) Download : Download full-size
    image Fig. 10. (a) The NIR reflectance image (6:38:58 AM April 7) calculated with
    the calibration panel image captured before the UAV flight (6:36:49 AM April 7);
    (b) The NIR reflectance image calculated with the calibration panel image captured
    after the UAV flight (6:56:16 AM April 7); the calibration panel image before
    (c) and after the UAV flight (d), transformed from DN to radiance. The reflectance
    images taken on the mornings of March 17 and April 7 were corrected with the calibration
    panel image captured after the flight. The above results explained the lower reflectance
    values of ground features on the mornings of March 17 and April 7. The reflectance
    images of May 2 were corrected with the calibration panel image captured before
    the flight. In addition, the sun had risen for about 2 h and the solar radiation
    was relatively stable during the drone flight (3m29s). Therefore, the reflectance
    values were consistent with the results of May 1 and 2 (Fig. 9). Fig. 11 shows
    the changes in solar radiation at different time intervals on March 20 and July
    15 using the observation data provided by the Solar Platform of the West University
    of Timisoara, Romania. The longer the flight interval, the greater the difference
    in solar radiation, especially around sunrise and sunset. On March 20, the irradiance
    was 23.8 W/m2 at 5:00:06 AM, with a sun altitude angle of 5.0°. When the flight
    interval was 30 min, 258.8 % of the relative difference in solar radiation was
    achieved. The relative difference decreased to 39.5 % as the flight interval was
    shortened to 5 min. On July 15, the first radiation data recorded was 82.6 W/m2
    at 4:00:11 AM, and the sun altitude angle was 8.3°. The relative difference showed
    a lower value of 77.1 % when the flight interval was 30 min. Along with the solar
    altitude angle increasing, the values of the relative difference decreased sharply
    and dropped to approximately 0 at the maximum altitude of the sun. Download :
    Download high-res image (730KB) Download : Download full-size image Fig. 11. The
    variation of solar radiation at different UAV flight intervals (5, 10, 15, 20,
    25 and 30 min) on March 20 (a) and July 15 (c). Detail plots (b and d) of two
    hours’ solar radiation changes before and after the maximum altitude of the sun.
    The detailed plots (Fig. 11b and d) show the relative difference in solar radiation
    at different flight intervals during the two hours before and after the sun’s
    maximum altitude. On March 20, when the flight interval was 30 min, the relative
    difference varied from −9.4 % to 16.5 %. The relative difference was in the range
    of −5% to 5 % with flight intervals of 5 and 10 min. On July 15, the relative
    differences for flight intervals less than 15 min were all in the range of −5%
    to 5 %. Compared with the results on March 20, the sunshine duration on July 15
    was longer, and slower changes in solar radiation resulted in a smaller relative
    difference for the same flight interval. 3.3. Vegetation indexes assessment of
    the radiometric correction methods 3.3.1. Vegetation indexes of different radiometric
    correction methods Fig. 12 presents the effects of different radiometric calibration
    methods on the results of vegetation indexes using the same UAV images for reflectance
    evaluation (Section 3.2.1). Surprisingly, vegetation indexes calculated by methods
    B, C and D showed a very good linear relationship with those calculated by method
    A in the three periods. Only NDRE and REVI derived from methods B and C showed
    a little overestimation on April 7. The mean difference of NDRE and REVI for method
    D was 0.033 and 0.104, respectively, and that for method C was 0.035 and 0.104,
    respectively. It suggested that the ratio vegetation indexes were not sensitive
    to the radiometric correction methods. For instance, methods B and C showed significant
    underestimation of the reflectance in each band on March 17 and April 7, but there
    was little difference in the calculation results of vegetation indexes. Download
    : Download high-res image (674KB) Download : Download full-size image Download
    : Download high-res image (652KB) Download : Download full-size image Download
    : Download high-res image (667KB) Download : Download full-size image Fig. 12.
    Vegetation indexes derived from different radiometric calibration methods on March
    17, April 7 and May 1. 3.3.2. The influence of flight altitude on vegetation indexes
    The most widely used NDVI was selected to study the effect of flight altitude
    on vegetation indexes (Table 5). The Pbias of NDVI ranged from −1.84 to 260.25,
    and the absolute error of NDVI changed from −0.013 to 0.045. The cement road produced
    the greatest Pbias value, followed by grass, idle farmland and winter wheat. In
    the results of March 17 and April 7, the NDVIs of cement road, grass and idle
    farmland went up with flight altitude, but the NDVI of winter wheat illustrated
    a slight decline. All radiometric correction methods gave similar results. Nevertheless,
    the above pattern was not evident in the results of May 1. In summary, the variation
    of NDVI with flight altitude was not consistent with the reflectance. Table 5.
    Comparison of NDVI calculated by different radiometric correction methods at flight
    altitudes of 30 m, 60 m and 90 m. Time Class Empty Cell Method A Method B Method
    C Method D Empty Cell 30 m 60 m 90 m 30 m 60 m 90 m 30 m 60 m 90 m 30 m 60 m 90
    m March 17 Cement road Reflectance 0.066 0.090 0.104 0.015 0.038 0.052 0.016 0.038
    0.051 0.056 0.086 0.101 Pbias – 36.10 56.58 – 162.14 260.25 – 141.07 221.83 –
    53.72 79.77 Grass Reflectance 0.231 0.240 0.252 0.181 0.190 0.203 0.178 0.191
    0.202 0.220 0.229 0.242 Pbias – 3.81 9.07 – 4.88 12.10 – 7.02 13.51 – 4.02 10.16
    Idle farmland Reflectance 0.176 0.182 0.184 0.124 0.130 0.133 0.122 0.127 0.130
    0.164 0.170 0.173 Pbias – 3.12 4.42 – 4.52 6.92 – 4.38 6.45 – 3.58 5.19 Winter
    wheat Reflectance 0.741 0.735 0.728 0.716 0.708 0.703 0.712 0.704 0.700 0.731
    0.724 0.718 Pbias – −0.77 −1.66 – −1.02 −1.84 – −1.07 −1.66 – −0.94 −1.69  April
    7 Cement road Reflectance 0.087 0.110 0.126 0.058 0.080 0.096 0.059 0.080 0.096
    0.068 0.097 0.112 Pbias – 27.34 45.92 – 36.89 65.73 – 33.77 61.80 – 43.89 64.81
    Grass Reflectance 0.255 0.269 0.287 0.227 0.239 0.259 0.227 0.239 0.259 0.233
    0.248 0.266 Pbias – 5.35 12.72 – 5.28 14.08 – 5.53 14.03 – 6.54 13.88 Idle farmland
    Reflectance 0.190 0.197 0.208 0.161 0.167 0.177 0.161 0.168 0.177 0.168 0.176
    0.185 Pbias – 3.29 9.23 – 3.58 10.29 – 4.18 9.85 – 4.74 10.08 Winter wheat Reflectance
    0.849 0.847 0.846 0.841 0.838 0.837 0.840 0.837 0.836 0.836 0.835 0.834 Pbias
    – −0.30 −0.42 – −0.35 −0.46 – −0.36 −0.49 – −0.13 −0.21  May 1 Cement road Reflectance
    0.086 0.107 0.111 0.093 0.116 0.119 0.089 0.105 0.102 0.079 0.104 0.117 Pbias
    – 24.95 30.00 – 24.91 28.84 – 17.66 14.03 – 32.71 48.36 Grass Reflectance 0.544
    0.550 0.550 0.550 0.556 0.554 0.547 0.551 0.542 0.535 0.541 0.546 Pbias – 1.11
    0.99 – 0.96 0.59 – 0.74 −0.81 – 1.05 2.01 Idle farmland Reflectance 0.285 0.286
    0.294 0.294 0.297 0.302 0.293 0.298 0.299 0.274 0.276 0.291 Pbias – 0.43 3.26
    – 1.05 2.77 – 1.61 1.92 – 0.88 6.15 Winter wheat Reflectance 0.908 0.909 0.908
    0.909 0.910 0.909 0.903 0.906 0.901 0.901 0.902 0.903 Pbias – 0.12 0.01 – 0.15
    0.01 – 0.34 −0.14 – 0.18 0.24 3.3.3. The influence of flight time on vegetation
    indexes Fig. 13 illustrates the effect of flight time on vegetation indexes derived
    from different radiometric correction methods. Fair agreements were detected between
    the vegetation indexes obtained from different flight times. At 7:15:00 AM March
    17, the mean RVI of cement road, grass, idle farmland and winter wheat calculated
    by method A was 1.09, 1.49, 1.42 and 8.61, respectively. At 10:45:00 AM, the values
    were 1.14, 1.62, 1.44 and 7.47, respectively. The mean RVI of winter wheat showed
    an obvious reduction. The other vegetation indexes proposed a similar performance
    with the RVI. In the results of April 7, the mean NDVI and RVI of winter wheat
    were higher at 6:40:00 AM than those at 11:40:00 AM. However, the mean NDRE and
    REVI of winter wheat were lower at 6:40:00 AM. In the results of May 1 and 2,
    the mean vegetation indexes of winter wheat had lower values at 7:15:00 AM, which
    was the opposite of the results on March 17. Compared with the reflectance computed
    at different flight times (Fig. 8), it indicated that the misestimations of reflectance
    were largely eliminated by the vegetation indexes of ratio type. Download : Download
    high-res image (549KB) Download : Download full-size image Download : Download
    high-res image (558KB) Download : Download full-size image Download : Download
    high-res image (565KB) Download : Download full-size image Fig. 13. The vegetation
    indexes calculated by different radiometric correction methods at different flight
    times in the beginning of erect growth stage (7:15:44 AM and 10:44:41 AM March
    17), jointing stage (6:38:58 AM and 11:39:37 AM April 7), and flowering stage
    (15:30:02 PM May 1, 7:15:37 AM May 2). 3.4. Monitoring of winter wheat growth
    status 3.4.1. The influence of flight altitude on the estimation of winter wheat
    AGB The correlation coefficients between winter wheat AGB and spectral indexes
    derived from radiometric correction methods A and D at different flight altitudes
    are provided in Fig. 14. A little difference in correlation coefficients was found
    between methods A and D. Except for the reflectance of the green and red bands,
    other spectral indexes of April 7 (jointing stage) performed the highest correlation
    coefficients, followed by the results of March 17 (beginning of erect growth stage).
    All spectral indexes showed no correlation with AGB on May 1 (flowering stage).
    In the results of March 17 and April 7, flight altitude had little influence on
    the correlation coefficients. For instance, the values of NDVI at the flight altitudes
    of 30 m, 60 m, and 90 m on April 7 were 0.82, 0.82 and 0.81, respectively. In
    the results of May 1, correlation coefficients showed different and large changes
    as the flight altitude increased. Download : Download high-res image (394KB) Download
    : Download full-size image Download : Download high-res image (377KB) Download
    : Download full-size image Fig. 14. Pearson correlation coefficient between winter
    wheat AGB and spectral indexes derived from methods A (a) and D (b) at flight
    altitudes of 30 m, 60 m and 90 m. * 0.01 < p-value ≤ 0.05, ** 0.001 < p-value
    ≤ 0.01, *** p-value ≤ 0.001. 3.4.2. The influence of flight altitude on the estimation
    of LAI Compared with the results of AGB, methods A and D yielded similar and better
    correlation coefficients with LAI (Fig. 15). However, the response of spectral
    indexes to flight altitude was inconsistent and irregular. In the results of March
    17, coefficients of NDVI and RVI increased slightly with the flight altitude arising
    (e.g., NDVI: 0.72, 0.72 and 0.73 for flight altitudes of 30 m, 60 m and 90 m),
    and NDRE and REVI showed an obvious rise (e.g., NDRE: 0.61, 0.64 and 0.75 for
    flight altitudes of 30 m, 60 m and 90 m), while the correlation between green
    band and AGB decreased gradually (-0.81, −0.81 and −0.72 for flight altitudes
    of 30 m, 60 m and 90 m). The coefficients of NIR decreased first from 0.56 (flight
    altitude: 30 m) to 0.47 (flight altitude: 60 m) and then increased to 0.66 (flight
    altitude: 90 m). Download : Download high-res image (353KB) Download : Download
    full-size image Download : Download high-res image (378KB) Download : Download
    full-size image Fig. 15. Pearson correlation coefficient between winter wheat
    LAI and spectral indexes derived from methods A (a) and D (b) at flight altitudes
    of 30 m, 60 m and 90 m. * 0.01 < p-value ≤ 0.05, ** 0.001 < p-value ≤ 0.01, ***
    p-value ≤ 0.001. On April 7, the green band appeared to have a growing correlation
    with LAI (-0.67, −0.81 and 0.85 for flight altitudes of 30 m, 60 m and 90 m).
    The coefficients of the red, NIR, red edge bands and the derived vegetation indexes
    reduced first and then increased (e.g., NDVI: 0.84, 0.76 and 0.81 for flight altitudes
    of 30 m, 60 m and 90 m). On May 1, the NIR and vegetation indexes showed higher
    coefficients at the flight altitude of 60 m, which was opposite to the results
    on April 7. If only comparing the results at the flight altitudes of 30 m and
    90 m, NDRE and REVI presented a consistent increasing trend for all periods, while
    NDVI and RVI behaved inconsistently. 3.4.3. Dynamics of the reflectance and vegetation
    indexes during different growth stages The reflectance and vegetation indexes
    derived from method D were used to describe the spectral changes of winter wheat
    during its growth stages (Fig. 16). For the green band, the mean reflectance of
    BN 112.5, BN 187.5, GY 112.5, GY 187.5 and GY 262.5 decreased gradually in the
    beginning of erect growth stage and jointing stage, reached the lowest value in
    the flowering stage, and then began to increase in the grain-fill stage and ripening
    stage. The BN 262.5 had the lowest reflectance of the green band in the jointing
    stage. All treatments showed a consistent trend in the red band. The dynamics
    of the NIR band were opposite to those of the red band, increasing first and then
    decreasing. The mean reflectance of GY 112.5, GY 262.5 and BN 187.5 reached the
    highest value in the grain-fill stage, and those of GY 187.5, BN 112.5 and BN
    262.5 had the peak value in the flowering stage. The changes in the red edge band
    were similar to those in the green and red bands, except that the values of reflectance
    decreased in the ripening stage. In terms of the vegetation indexes, all treatments
    showed similar dynamics with the near infrared band. In particular, RVI showed
    a clear peak value in the flowering stage. For different cultivars and seeding
    rates, the differences in reflectance and vegetation indexes were more significant
    at the beginning of erect growth stage and jointing stage. With the growth of
    winter wheat, the differences were gradually eliminated by observing the values
    of vegetation indexes. Download : Download high-res image (897KB) Download : Download
    full-size image Fig. 16. Changes of reflectance and vegetation indexes of two
    wheat cultivars (GY and BN) under three plant densities (112.5, 187.5 and 262.5
    kg/ha) at different growth stages. 4. Discussion 4.1. Performance of the radiometric
    correction methods As shown in Fig. 8, Fig. 12, the radiometric correction methods
    B and C produced the wrong reflectance, but the vegetation indexes were liitle
    different from those of methods A and D. Although the software manufacturer does
    not give a specific explanation of methods B and C, from the description of the
    methods, we can infer that methods B and C also calculate the surface irradiance
    first, and then obtain the reflectance with Eq.1. Taking methods A and B as an
    example, (20) (21) where and are the reflectance factors calculated by the methods
    A and B, respectively. is the measured pseudo-radiance by the Sequoia camera,
    the surface irradiance estimated with a calibration panel, and the surface irradiance
    estimated by method B. The ratio of surface irradiance for methods A and B is
    determined as: (22) When calculating vegetation indexes for ratio types, that
    is, the can be eliminated, the vegetation indexes calculated by methods A and
    B are the same. For example, (23) When cannot be eliminated, such as vegetation
    index of different types (e.g., DVI) or vegetation index considering other factors
    such as atmosphere and soil (e.g., SAVI and EVI), the calculation results of methods
    B and C are not effective. 4.2. Angles between the irradiance sensor and camera
    Currently, fixed-wing and multi-rotor UAVs are the two most widely used platforms
    in remote sensing. Ideally, the fixed wing is flying parallel to the ground, with
    the irradiance sensor and camera mounted above and below the platform, respectively
    (Fig. 17). In this case, the irradiance measured by the sensor is the same as
    the irradiance of the ground and can be used directly to calculate the reflectance.
    Whereas multi-rotor drones are tilted in flight, the faster the flight speed,
    the greater the tilt angle (Suomalainen et al., 2018). In order to obtain high-quality
    orthophotos, one option is to use a gimbal to ensure that the image plane is always
    parallel to the surface when acquiring the data; however, it will lose the relative
    geometric angles between the irradiance sensor and camera. Although some irradiance
    sensors can record attitude angles with IMU, it is insufficient to estimate accurate
    solar irradiance. Download : Download high-res image (224KB) Download : Download
    full-size image Fig. 17. Differences in flight attitudes between fixed-wing and
    multi-rotor unmanned aerial vehicles. Another option is to mount the irradiance
    sensor and camera at a fixed angle on a multi-rotor UAV (i.e., Parrot Bluegrass).
    When photogrammetry is performed, the attitude angles of the camera are calculated.
    The attitude angles of the irradiance sensor can be computed with the fixed angle
    between the camera and the irradiance sensor. The solar irradiance is then estimated
    using the measured irradiance and the attitude angles of the sensor. Therefore,
    the angle between the sunlight sensor and the camera is a key parameter. In Parrot
    Bluegrass, this parameter is built into the image''s header. It is puzzling that
    Pix4D Mapper does not correctly utilize this angle to estimate the attitude of
    the irradiance sensor. In addition, if the camera and irradiance sensor are custom-installed,
    then this angle needs to be measured. Unfortunately, there is no input interface
    provided in the Pix4D Mapper for this parameter. In this study, we used R software
    to calculate the attitude angles of the irradiance sensor with the parameter.
    4.3. The effect of clouds on the radiometric calibration of UAV images From the
    comparison results of reflectance between method D and method A (Fig. 8), it was
    found that even in cloudy weather (e.g., 15:30:02 PM May 1), when the direct light
    is not blocked by clouds, there is little difference in the results of reflectance.
    On the other hand, under a clear or cloudy sky with no obstruction from direct
    sunlight, the proportion of direct sunlight to total solar radiation is much higher
    than that of scattered sunlight (e.g., estimated direct sunlight ratio of 97.3
    % at 11:39:37 AM April 7, and 97.5 % at 15:30:02 PM May 1), and the scattered
    sunlight has little effect on reflectance estimation. Taking the NIR band as an
    example, when the irradiance is 100 W·m−2, the solar altitude angle is 60°, and
    the proportion of direct light is 97 %, the irradiance received by a flat surface
    is 51.5 W·m−2. For a surface with a reflectance of 50 %, the reflected radiation
    is 25.75 W·m−2. In the case of only direct light, the reflected radiation of the
    object is 24.25 W·m−2, and the difference in reflectance is only 2.9 %. When the
    sun is blocked by clouds, both direct and scattered sunlight will show drastic
    fluctuations (Arroyo-Mora et al., 2021), which results in a large difference in
    the estimated reflectance (Xue et al., 2023). The linear fitting results of Esun,toa
    and ε on April 24 showed lower values of R2 and non-significant p-values due to
    the cloud occlusion of the direct sunlight. Köppl et al. (2021) developed a linear
    spectral decomposition model to calculate the direct and scattered irradiance
    under intermittent clouds. The model assumes that short time spans of irradiance
    without cloud occlusion can be obtained and identified during an UAV flight. Then,
    the direct and scattered irradiance endmembers are extracted, and irradiance under
    other cloud conditions during an UAS flight can be represented as a linear combination
    of the endmembers. However, if the cloud occlusion time is longer than the UAV
    flight time, the model may fail as the premise assumption does not hold. In meteorology,
    an overcast sky is defined as 8 oktas (i.e., 90 % to 100 % cloud coverage) for
    human observations (Smith et al., 2017). Due to the high heterogeneity of cloud
    thickness, the direct and scattered irradiance observed at ground also varies
    greatly on the same overcast sky defined in meteorology, which brings great uncertainty
    to the reflectance measurement and estimation. Measurements of scattered irradiance
    under overcast sky fall from 239.2 W·m−2 to 189.8 W·m−2 in approximately 10 min
    (Arroyo-Mora et al., 2021), which indicates unstable scattered irradiance under
    overcast sky. Cao et al. (2018) conducted spectrometer experiments at Brooksvale
    Park (clear sky on April 28, 2016; overcast sky on March 7, 2016) and Yale Playground
    (clear sky on April 19, 2016; overcast sky on April 28, 2016). A better performance
    of regression fit between DN values and reflectance of ground targets was observed
    under overcast sky for Brooksvale Park; nevertheless, for Yale Playground, higher
    values of R2 were found under clear sky conditions. Schneider-Zapp et al. (2019)
    reported an RMSE of 3 % for reflectance estimation under clear sky, and a minor
    increase of 2 % under overcast sky. Vegetation indexes measured with the HandySpec
    Field sensor under overcast sky show higher values than those under clear sky
    (de Souza et al., 2021). Inconsistent conclusions were detected from the above
    studies due to the complexity of irradiance under overcast sky. In summary, clear
    and cloudy skies with no obstruction from direct sunlight are the recommended
    weather conditions for UAV data acquisition. 4.4. Influence of UAV flight duration
    and flight time The results in Fig. 11 indicate that the assumption may not hold
    when the flight duration is greater than 20 min. In particular, changes in solar
    radiation occur more rapidly around sunrise and sunset, which will have a dramatic
    impact on reflectance estimation. The results at 6:38:58 AM April 7 (Fig. 10)
    showed a significant difference between the reflectance images corrected with
    the calibration panel image captured before and after the flight. To address changes
    in solar radiation, one method suitable for small areas is to place radiometric
    calibration targets in the area (Poncet et al., 2019). Then, each UAV multispectral
    image can be individually corrected for reflectance. Another method is to divide
    the UAV flight data into several segments, and each segment uses the data obtained
    by the irradiance sensor to estimate the reflectance. In addition, most of the
    UAV data in this study was obtained in the morning due to the strong and frequent
    wind at other times. The wind can cause the deformation of crops and obtain lower
    NDVI values with the soil background exposed (Feng et al., 2019). Wind-moving
    leaves between UAV images also produced partial loss of leaf tip and ghosting
    effects in the ortho-mosaic image, which reduced the accuracy of crop coverage
    estimation (Duan et al., 2016). 4.5. Influence of UAV flight altitude on reflectance
    and vegetation indexes In this paper, we evaluated the effects of flight altitude
    on spectral indexes and their correlation with AGB and LAI. The absolute changes
    of reflectance and vegetation indexes at different flight altitudes were relatively
    small, but the large Pbais values indicated that the influence of flight altitude
    may not be neglected. Interestingly, spectral changes with flight altitudes had
    little effect on similar correlation coefficients yielded with AGB. However, in
    the correlation results between spectral indexes and LAI, flight altitude showed
    an obvious but irregular influence on the correlation coefficients. Among them,
    NDRE and REVI displayed consistently higher values of correlation coefficients
    at the flight altitude of 90 m compared with those at 30 m. Agricultural phenotype
    studies based on UAV are mostly based on plot scale. The mean spectral values
    of the plots are usually used to establish an empirical model with ground-measured
    data. In this case, fine-scale UAV observations are not necessary. Higher flight
    altitude means faster data acquisition and shorter data processing time. Recently,
    crop structural parameters, such as crop height and texture features, have been
    integrated to improve the estimation accuracy of AGB and LAI (Li et al., 2023,
    Xie et al., 2021). Crop height and textures both exhibit sensitivity to flight
    altitude and further affect the estimation accuracy of AGB and LAI. Flight altitude
    was the most important variable with the largest negative impact on avocado tree
    height estimates (Tu et al., 2020). Zhang et al. (2022) reported that higher spatial
    resolution of the canopy height model (CHM) data made the better improvement of
    LAI estimation accuracy. Compared to the direction and window of GLCM, the correlation
    between textures and AGB was more affected by the ground resolution, i.e., flight
    altitude (Liu et al., 2022a). Zhu et al. (2023) found that the estimation accuracy
    of AGB declined by 48 % and 41 %, respectively, as the flight altitude increased
    from 30 to 120 m. When AGB and LAI are estimated by combining texture, crop height
    and vegetation index, the UAV flight height needs to be carefully selected. It
    is recommended to conduct a pre-test in the early stages to determine a suitable
    flight altitude. 4.6. Limitations of this study In this study, the actual direct
    and scattered irradiance were not measured because of the lack of ground-based
    spectrometers. We used the results of the direct sunlight ratio simulated by MODTRAN
    and the reflectance calculated by method A to confirm that method D performed
    well in characterizing illumination and radiometric correction. In addition, Olsson
    et al. (2021) reported that measurements from the Sequoia irradiance sensor were
    sufficiently accurate to conduct radiometric correction. Analysis of solar radiation
    observation data at different time intervals revealed that illumination variations
    during the UAV flight cannot be neglected. In this study, the duration of the
    UAV flight was short due to the small size of the study area. The feasibility
    of the radiometric calibration method based on an irradiance sensor for a longer
    flight duration was not investigated. Moreover, we used vegetation indexes to
    characterize the impact of reflectance calibration results on estimating AGB and
    LAI. Crop height and texture features change with crop growth and are also influenced
    by UAV environmental factors (e.g., flight height and flight time). In this study,
    our work focused on the subsequent impact of reflectance calibration results on
    wheat growth monitoring. Therefore, we did not analyze the effects of environmental
    factors on crop height and texture features, nor were these indicators used to
    estimate AGB and LAI. 5. Conclusion The main conclusions of this study are as
    follows: 1) The method D produced consistent reflectance with method A, which
    is based on radiometric calibration targets. 2) Cloud coverage is an important
    factor affecting UAV radiometric calibration. We assessed the radiometric calibration
    methods under clear and cloudy skies. A notable conclusion drawn from this study
    is that methods A and D are effective under a cloudy sky with direct sunlight
    not blocked by clouds. 3) Pix4d Mapper did not correctly calculate the angles
    between the irradiance sensor and direct sunlight, which may be the main cause
    of serious errors in the estimation of reflectance by methods B and C. 4) Variations
    in solar radiation during UAV flight affected the estimation of 5) There is no
    clear conclusion about the effect of flight altitude on reflectance and vegetation
    index. It is necessary to determine the appropriate flight altitude based on the
    observed objects and the extracted indexes (e.g., texture and crop height). CRediT
    authorship contribution statement Honglei Zhu: Writing – original draft, Visualization,
    Software, Resources, Project administration, Methodology, Investigation, Funding
    acquisition, Formal analysis, Data curation, Conceptualization. Yanwei Huang:
    Writing – review & editing, Software, Investigation, Data curation. Zhaokang An:
    Data curation. Han Zhang: Writing – review & editing, Funding acquisition, Data
    curation. Yongyue Han: Data curation. Zihui Zhao: Data curation. Feifan Li: Data
    curation. Chan Zhang: Writing – review & editing, Funding acquisition, Data curation.
    Cuicui Hou: Writing – review & editing, Data curation. Declaration of competing
    interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgements We would like to thank author Honglei Zhu''s family
    for their help in the field experiments. We also thank the anonymous reviewers
    and the associate editor for providing feedback and insightful comments on the
    manuscript. This work was supported by several grants from the National Natural
    Science Foundation of China (No. 32271604) and Henan Provincial Key Research Project
    Funding Scheme (No. 22A180020). Data availability Data will be made available
    on request. References Arroyo-Mora et al., 2021 J.P. Arroyo-Mora, M. Kalacska,
    T. Løke, D. Schläpfer, N.C. Coops, O. Lucanus, G. Leblanc Assessing the impact
    of illumination on UAV pushbroom hyperspectral imagery collected under various
    cloud cover conditions Remote Sensing of Environment, 258 (2021) Google Scholar
    Avtar et al., 2020 R. Avtar, S.A. Suab, M.S. Syukur, A. Korom, D.A. Umarhadi,
    A.P. Yunus Assessing the influence of UAV altitude on extracted biophysical parameters
    of young oil palm Remote Sensing, 12 (2020) Google Scholar Awais et al., 2021
    M. Awais, W. Li, M.M. Cheema, S. Hussain, A. Shaheen, B. Aslam, C. Liu, A. Ali
    Assessment of optimal flying height and timing using high-resolution unmanned
    aerial vehicle images in precision agriculture International Journal of Environmental
    Science and Technology (2021), pp. 1-18 View in ScopusGoogle Scholar Berk et al.,
    2006 Berk, A., Anderson, G.P., Acharya, P.K., Bernstein, L.S., Muratov, L., Lee,
    J., Fox, M., Adler-Golden, S.M., Chetwynd Jr, J.H., & Hoke, M.L. (2006). MODTRAN5:
    2006 update. In, Algorithms and technologies for multispectral, hyperspectral,
    and ultraspectral imagery xii (pp. 508-515): SPIE. Google Scholar Burkart et al.,
    2015 A. Burkart, H. Aasen, L. Alonso, G. Menz, G. Bareth, U. Rascher Angular dependency
    of hyperspectral measurements over wheat characterized by a novel UAV based goniometer
    Remote Sensing, 7 (2015), pp. 725-746 CrossRefView in ScopusGoogle Scholar Cao
    et al., 2019 S. Cao, B. Danielson, S. Clare, S. Koenig, C. Campos-Vargas, A. Sanchez-Azofeifa
    Radiometric calibration assessments for UAS-borne multispectral cameras: laboratory
    and field protocols Isprs Journal of Photogrammetry and Remote Sensing, 149 (2019),
    pp. 132-145 View PDFView articleView in ScopusGoogle Scholar Cao et al., 2018
    C. Cao, X. Lee, J. Muhlhausen, L. Bonneau, J. Xu Measuring landscape albedo using
    unmanned aerial vehicles Remote Sensing, 10 (2018) Google Scholar Daniels et al.,
    2023 L. Daniels, E. Eeckhout, J. Wieme, Y. Dejaegher, K. Audenaert, W.H. Maes
    Identifying the optimal radiometric calibration method for UAV-based multispectral
    imaging Remote Sensing, 15 (2023) Google Scholar de Souza et al., 2021 R. de Souza,
    C. Buchhart, K. Heil, J. Plass, F.M. Padilla, U. Schmidhalter Effect of time of
    day and sky conditions on different vegetation indices calculated from active
    and passive sensors and images taken from UAV Remote Sensing, 13 (2021) Google
    Scholar Deng et al., 2018 L. Deng, Z. Mao, X. Li, Z. Hu, F. Duan, Y. Yan UAV-based
    multispectral remote sensing for precision agriculture: a comparison between different
    cameras Isprs Journal of Photogrammetry and Remote Sensing, 146 (2018), pp. 124-136
    View PDFView articleView in ScopusGoogle Scholar dos Santos et al., 2021 R.A.
    dos Santos, R. Filgueiras, E.C. Mantovani, E.I. Fernandes-Filho, T.S. Almeida,
    L.P. Venancio, A.C.B. da Silva Surface reflectance calculation and predictive
    models of biophysical parameters of maize crop from RG-NIR sensor on board a UAV
    Precision Agriculture (2021), pp. 1-24 Google Scholar Duan et al., 2016 T. Duan,
    B. Zheng, W. Guo, S. Ninomiya, Y. Guo, S.C. Chapman Comparison of ground cover
    estimates from experiment plots in cotton, sorghum and sugarcane based on images
    and ortho-mosaics captured by UAV Funct Plant Biol, 44 (2016), pp. 169-183 View
    in ScopusGoogle Scholar Fawcett et al., 2020 D. Fawcett, C. Panigada, G. Tagliabue,
    M. Boschetti, M. Celesti, A. Evdokimov, K. Biriukova, R. Colombo, F. Miglietta,
    U. Rascher, K. Anderson Multi-scale evaluation of drone-based multispectral surface
    reflectance and vegetation indices in operational conditions Remote Sensing, 12
    (2020) Google Scholar Feng et al., 2019 L. Feng, W. Wu, J. Wang, C. Zhang, Y.
    Zhao, S. Zhu, Y. He Wind field distribution of multi-rotor UAV and its influence
    on spectral information Acquisition of Rice Canopies Remote Sensing, 11 (2019)
    Google Scholar Gong et al., 2019 C. Gong, H. Buddenbaum, R. Retzlaff, T. Udelhoven
    An empirical assessment of angular dependency for RedEdge-M in sloped terrain
    viticulture Remote Sensing, 11 (2019) Google Scholar Gong et al., 2021 Y. Gong,
    K. Yang, Z. Lin, S. Fang, X. Wu, R. Zhu, Y. Peng Remote estimation of leaf area
    index (LAI) with unmanned aerial vehicle (UAV) imaging for different rice cultivars
    throughout the entire growing season Plant Methods, 17 (2021), pp. 1-16 CrossRefView
    in ScopusGoogle Scholar Guan et al., 2019 S. Guan, K. Fukami, H. Matsunaka, M.
    Okami, R. Tanaka, H. Nakano, T. Sakai, K. Nakano, H. Ohdan, K. Takahashi Assessing
    correlation of high-resolution NDVI with fertilizer application level and yield
    of Rice and wheat crops using small UAVs Remote Sensing, 11 (2019) Google Scholar
    Guo et al., 2019 Y. Guo, J. Senthilnath, W. Wu, X. Zhang, Z. Zeng, H. Huang Radiometric
    calibration for multispectral camera of different imaging conditions mounted on
    a UAV platform Sustainability, 11 (2019) Google Scholar Guo et al., 2023 A. Guo,
    H. Ye, W. Huang, B. Qian, J. Wang, Y. Lan, S. Wang Inversion of maize leaf area
    index from UAV hyperspectral and multispectral imagery Computers and Electronics
    in Agriculture, 212 (2023) Google Scholar Haider et al., 2022 S.A. Haider, M.
    Sajid, H. Sajid, E. Uddin, Y. Ayaz Deep learning and statistical methods for short-and
    long-term solar irradiance forecasting for Islamabad Renewable Energy, 198 (2022),
    pp. 51-60 View PDFView articleView in ScopusGoogle Scholar Hakala et al., 2013
    Hakala, T., Honkavaara, E., Saari, H., Mäkynen, J., Kaivosoja, J., Pesonen, L.,
    & Pölönen, I. (2013). Spectral Imaging from Uavs under Varying Illumination Conditions.
    The International Archives of the Photogrammetry, Remote Sensing and Spatial Information
    Sciences, XL-1/W2, 189-194. Google Scholar Hakala et al., 2010 T. Hakala, J. Suomalainen,
    J.I. Peltoniemi Acquisition of bidirectional reflectance factor dataset using
    a micro unmanned aerial vehicle and a consumer camera Remote Sensing, 2 (2010),
    pp. 819-832 CrossRefView in ScopusGoogle Scholar Holman et al., 2019 F.H. Holman,
    A.B. Riche, M. Castle, M.J. Wooster, M.J. Hawkesford Radiometric calibration of
    ‘commercial off the shelf’cameras for UAV-based high-resolution temporal crop
    phenotyping of reflectance and NDVI Remote Sensing, 11 (2019), p. 1657 CrossRefView
    in ScopusGoogle Scholar Honkavaara and Khoramshahi, 2018 E. Honkavaara, E. Khoramshahi
    Radiometric correction of close-range spectral image blocks captured using an
    unmanned aerial vehicle with a radiometric block adjustment Remote Sensing, 10
    (2018) Google Scholar Jurca et al., 2011 Jurca, T., Tulcan-Paulescu, E., Dughir,
    C., Lascu, M., Gravila, P., De Sabata, A., Luminosu, I., De Sabata, C., Paulescu,
    M., Bunoiu, M., & Malaescu, I. (2011). Global Solar Irradiation Modeling and Measurements
    in Timisoara. In (pp. 253-258). Google Scholar Kanning et al., 2018 M. Kanning,
    I. Kühling, D. Trautz, T. Jarmer High-resolution UAV-based hyperspectral imagery
    for LAI and chlorophyll estimations from wheat for yield prediction Remote Sensing,
    10 (2018) Google Scholar Kelley and Kelley, 2018 D.E. Kelley, D.E. Kelley The
    OCE package Oceanographic Analysis with r (2018), pp. 91-101 CrossRefGoogle Scholar
    Köppl et al., 2021 C.J. Köppl, R. Malureanu, C. Dam-Hansen, S. Wang, H. Jin, S.
    Barchiesi, J.M. Serrano Sandí, R. Muñoz-Carpena, M. Johnson, A.M. Durán-Quesada,
    P. Bauer-Gottwein, U.S. McKnight, M. Garcia Hyperspectral reflectance measurements
    from UAS under intermittent clouds: correcting irradiance measurements for sensor
    tilt Remote Sensing of Environment, 267 (2021) Google Scholar Li and Lam, 2001
    D.H. Li, J.C. Lam An analysis of climatic parameters and sky condition classification
    Building and Environment, 36 (2001), pp. 435-445 View PDFView articleView in ScopusGoogle
    Scholar Li et al., 2023 W. Li, J. Wang, Y. Zhang, Q. Yin, W. Wang, G. Zhou, Z.
    Huo Combining texture, color, and vegetation index from unmanned aerial vehicle
    multispectral images to estimate winter wheat leaf area index during the vegetative
    growth stage Remote Sensing, 15 (2023), p. 5715 CrossRefView in ScopusGoogle Scholar
    Liu et al., 2022a Y. Liu, H. Feng, J. Yue, X. Jin, Z. Li, G. Yang Estimation of
    potato above-ground biomass based on unmanned aerial vehicle red-green-blue images
    with different texture features and crop height Front Plant Sci, 13 (2022), Article
    938216 View in ScopusGoogle Scholar Liu et al., 2022b Y. Liu, H. Feng, J. Yue,
    Z. Li, G. Yang, X. Song, X. Yang, Y. Zhao Remote-sensing estimation of potato
    above-ground biomass based on spectral and spatial features extracted from high-definition
    digital camera images Computers and Electronics in Agriculture, 198 (2022) Google
    Scholar Liu et al., 2023 Y. Liu, H. Feng, J. Yue, X. Jin, Y. Fan, R. Chen, M.
    Bian, Y. Ma, X. Song, G. Yang Improved potato AGB estimates based on UAV RGB and
    hyperspectral images Computers and Electronics in Agriculture, 214 (2023) Google
    Scholar Mohsan et al., 2022 S.A.H. Mohsan, M.A. Khan, F. Noor, I. Ullah, M.H.
    Alsharif Towards the unmanned aerial vehicles (UAVs): a comprehensive review Drones,
    6 (2022) Google Scholar Olsson et al., 2021 Olsson, P.-O., Vivekar, A., Adler,
    K., Garcia Millan, V.E., Koc, A., Alamrani, M., & Eklundh, L. (2021). Radiometric
    Correction of Multispectral UAS Images: Evaluating the Accuracy of the Parrot
    Sequoia Camera and Sunshine Sensor. Remote Sensing, 13. Google Scholar Parrot,
    2017 Parrot (2017). Parrot Announcement - Release of application notes. URL https://forum.developer.parrot.com/t/parrot-announcement-release-of-application-notes/5455.
    Google Scholar Pix4D, 2024 Pix4D (2024). Radiometric corrections. URL https://support.pix4d.com/hc/en-us/articles/202559509-Radiometric-corrections.
    In. Google Scholar Poncet et al., 2019 A.M. Poncet, T. Knappenberger, C. Brodbeck,
    M. Fogle, J.N. Shaw, B.V. Ortiz Multispectral UAS data accuracy for different
    radiometric calibration methods Remote Sensing, 11 (2019) Google Scholar Qiao
    et al., 2022 L. Qiao, W. Tang, D. Gao, R. Zhao, L. An, M. Li, H. Sun, D. Song
    UAV-based chlorophyll content estimation by evaluating vegetation index responses
    under different crop coverages Computers and Electronics in Agriculture, 196 (2022),
    Article 106775 View PDFView articleView in ScopusGoogle Scholar Qin et al., 2022
    Z. Qin, X. Li, Y. Gu An illumination estimation and compensation method for radiometric
    correction of UAV multispectral images Ieee Transactions on Geoscience and Remote
    Sensing, 60 (2022), pp. 1-12 Google Scholar R Core Team, 2021 R Core Team, R.
    (2021). R: A language and environment for statistical computing. R Foundation
    for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. Google
    Scholar Schaepman-Strub et al., 2006 G. Schaepman-Strub, M.E. Schaepman, T.H.
    Painter, S. Dangel, J.V. Martonchik Reflectance quantities in optical remote sensing—Definitions
    and case studies Remote Sensing of Environment, 103 (2006), pp. 27-42 View PDFView
    articleView in ScopusGoogle Scholar Schneider-Zapp et al., 2019 K. Schneider-Zapp,
    M. Cubero-Castan, D. Shi, C. Strecha A new method to determine multi-angular reflectance
    factor from lightweight multispectral cameras with sky sensor in a target-less
    workflow applicable to UAV Remote Sensing of Environment, 229 (2019), pp. 60-68
    View PDFView articleView in ScopusGoogle Scholar Smith et al., 2017 C.J. Smith,
    J.M. Bright, R. Crook Cloud cover effect of clear-sky index distributions and
    differences between human and automatic cloud observations Solar Energy, 144 (2017),
    pp. 10-21 View PDFView articleView in ScopusGoogle Scholar Stein et al., 2012
    Stein, J.S., Hansen, C.W., & Reno, M.J. (2012). Global horizontal irradiance clear
    sky models: implementation and analysis. In: Sandia National Laboratories (SNL),
    Albuquerque, NM, and Livermore, CA. Google Scholar Stow et al., 2019a D. Stow,
    C. Nichol, T. Wade, J. Assmann, G. Simpson, C. Helfter Illumination geometry and
    flying height influence surface reflectance and NDVI derived from multispectral
    UAS imagery Drones, 3 (2019) Google Scholar Stow et al., 2019b D. Stow, C.J. Nichol,
    T. Wade, J.J. Assmann, G. Simpson, C. Helfter Illumination geometry and flying
    height influence surface reflectance and NDVI derived from multispectral UAS imagery
    Drones, 3 (2019), p. 55 CrossRefGoogle Scholar Su et al., 2019 J. Su, C. Liu,
    X. Hu, X. Xu, L. Guo, W.-H. Chen Spatio-temporal monitoring of wheat yellow rust
    using UAV multispectral imagery Computers and Electronics in Agriculture, 167
    (2019) Google Scholar Sun et al., 2021 B. Sun, C.F. Wang, C.H. Yang, B.D. Xu,
    G.S. Zhou, X.Y. Li, J. Xie, S.J. Xu, B. Liu, T.J. Xie, J. Kuai, J. Zhang Retrieval
    of rapeseed leaf area index using the PROSAIL model with canopy coverage derived
    from UAV images as a correction parameter International Journal of Applied Earth
    Observation and Geoinformation, 102 (2021) Google Scholar Suomalainen et al.,
    2018 J. Suomalainen, T. Hakala, R. Alves de Oliveira, L. Markelin, N. Viljanen,
    R. Näsi, E. Honkavaara A novel tilt correction technique for irradiance sensors
    and spectrometers on-board unmanned aerial vehicles Remote Sensing, 10 (2018),
    p. 2068 CrossRefView in ScopusGoogle Scholar Tu et al., 2018 Y.-H. Tu, S. Phinn,
    K. Johansen, A. Robson Assessing radiometric correction approaches for multi-spectral
    UAS imagery for horticultural applications Remote Sensing, 10 (2018) Google Scholar
    Tu et al., 2020 Y.-H. Tu, S. Phinn, K. Johansen, A. Robson, D. Wu Optimising drone
    flight planning for measuring horticultural tree crop structure Isprs Journal
    of Photogrammetry and Remote Sensing, 160 (2020), pp. 83-96 View PDFView articleView
    in ScopusGoogle Scholar Verger et al., 2014 A. Verger, N. Vigneau, C. Chéron,
    J.-M. Gilliot, A. Comar, F. Baret Green area index from an unmanned aerial system
    over wheat and rapeseed crops Remote Sensing of Environment, 152 (2014), pp. 654-664
    View PDFView articleView in ScopusGoogle Scholar Wang et al., 2019 S. Wang, A.
    Baum, P.J. Zarco-Tejada, C. Dam-Hansen, A. Thorseth, P. Bauer-Gottwein, F. Bandini,
    M. Garcia Unmanned aerial system multispectral mapping for low and variable solar
    irradiance conditions: potential of tensor decomposition Isprs Journal of Photogrammetry
    and Remote Sensing, 155 (2019), pp. 58-71 View PDFView articleView in ScopusGoogle
    Scholar Wang et al., 2021b Y. Wang, H. Liu, Y. Zhang, M. Duan, S. Tang, X. Deng
    Validation of FY-4A AGRI layer precipitable water products using radiosonde data
    Atmospheric Research, 253 (2021), Article 105502 View PDFView articleView in ScopusGoogle
    Scholar Wang and Myint, 2015 C. Wang, S.W. Myint A simplified empirical line method
    of radiometric calibration for small unmanned aircraft systems-based remote sensing
    Ieee Journal of Selected Topics in Applied Earth Observations and Remote Sensing,
    8 (2015), pp. 1876-1885 View in ScopusGoogle Scholar Wang et al., 2021a N. Wang,
    J. Suomalainen, H. Bartholomeus, L. Kooistra, D. Masiliūnas, J.G.P.W. Clevers
    Diurnal variation of sun-induced chlorophyll fluorescence of agricultural crops
    observed from a point-based spectrometer on a UAV International Journal of Applied
    Earth Observation and Geoinformation, 96 (2021) Google Scholar Whitcraft et al.,
    2015 A.K. Whitcraft, E.F. Vermote, I. Becker-Reshef, C.O. Justice Cloud cover
    throughout the agricultural growing season: impacts on passive optical earth observations
    Remote Sensing of Environment, 156 (2015), pp. 438-447 View PDFView articleView
    in ScopusGoogle Scholar Wylie et al., 2005 D. Wylie, D.L. Jackson, W.P. Menzel,
    J.J. Bates Trends in global cloud cover in two decades of HIRS observations Journal
    of Climate, 18 (2005), pp. 3021-3031 View in ScopusGoogle Scholar Xie et al.,
    2021 T. Xie, J. Li, C. Yang, Z. Jiang, Y. Chen, L. Guo, J. Zhang Crop height estimation
    based on UAV images: methods, errors, and strategies Computers and Electronics
    in Agriculture, 185 (2021), Article 106155 View PDFView articleView in ScopusGoogle
    Scholar Xue et al., 2023 Xue, B., Ming, B., Xin, J., Yang, H., Gao, S., Guo, H.,
    Feng, D., Nie, C., Wang, K., & Li, S. (2023). Radiometric Correction of Multispectral
    Field Images Captured under Changing Ambient Light Conditions and Applications
    in Crop Monitoring. Drones, 7. Google Scholar Yang et al., 2023 N. Yang, Z. Zhang,
    J. Zhang, Y. Guo, X. Yang, G. Yu, X. Bai, J. Chen, Y. Chen, L. Shi, X. Li Improving
    estimation of maize leaf area index by combining of UAV-based multispectral and
    thermal infrared data: the potential of new texture index Computers and Electronics
    in Agriculture, 214 (2023) Google Scholar Yue et al., 2019 J. Yue, G. Yang, Q.
    Tian, H. Feng, K. Xu, C. Zhou Estimate of winter-wheat above-ground biomass based
    on UAV ultrahigh-ground-resolution image textures and vegetation indices Isprs
    Journal of Photogrammetry and Remote Sensing, 150 (2019), pp. 226-244 View PDFView
    articleView in ScopusGoogle Scholar Zang et al., 2020 H.X. Zang, L. Liu, L. Sun,
    L.L. Cheng, Z.N. Wei, G.Q. Sun Short-term global horizontal irradiance forecasting
    based on a hybrid CNN-LSTM model with spatiotemporal correlations Renewable Energy,
    160 (2020), pp. 26-41 View PDFView articleView in ScopusGoogle Scholar Zeng et
    al., 2017 C. Zeng, M. Richardson, D.J. King The impacts of environmental variables
    on water reflectance measured using a lightweight unmanned aerial vehicle (UAV)-based
    spectrometer system Isprs Journal of Photogrammetry and Remote Sensing, 130 (2017),
    pp. 217-230 View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2022
    X. Zhang, K. Zhang, S. Wu, H. Shi, Y. Sun, Y. Zhao, E. Fu, S. Chen, C. Bian, W.
    Ban An investigation of winter wheat leaf area index fitting model using spectral
    and canopy height model data from unmanned aerial vehicle imagery Remote Sensing,
    14 (2022), p. 5087 CrossRefView in ScopusGoogle Scholar Zheng et al., 2018 H.
    Zheng, W. Li, J. Jiang, Y. Liu, T. Cheng, Y. Tian, Y. Zhu, W. Cao, Y. Zhang, X.
    Yao A comparative assessment of different modeling algorithms for estimating leaf
    nitrogen content in winter wheat using multispectral images from an unmanned aerial
    vehicle Remote Sensing, 10 (2018), p. 2026 CrossRefView in ScopusGoogle Scholar
    Zhu et al., 2023 W. Zhu, E.E. Rezaei, H. Nouri, Z. Sun, J. Li, D. Yu, S. Siebert
    UAV flight height impacts on wheat biomass estimation via machine and deep learning
    Ieee Journal of Selected Topics in Applied Earth Observations and Remote Sensing,
    16 (2023), pp. 7471-7485 CrossRefView in ScopusGoogle Scholar Cited by (0) View
    Abstract © 2024 Elsevier B.V. All rights reserved. Recommended articles Design
    and experiment of an adaptive cruise weeding robot for paddy fields based on improved
    YOLOv5 Computers and Electronics in Agriculture, Volume 219, 2024, Article 108824
    Jinyan Ju, …, Jinfeng Wang View PDF A Hybrid Model that Combines Machine Learning
    and Mechanistic Models for Useful Grass Growth Prediction Computers and Electronics
    in Agriculture, Volume 219, 2024, Article 108805 Eoin M. Kenny, …, Laurence Shalloo
    View PDF An integrated Energy-Yield-Cost model to evaluate clean energy solutions
    for vertical farms Computers and Electronics in Agriculture, Volume 219, 2024,
    Article 108809 Pegah Keyvan, Ramin Roshandel View PDF Show 3 more articles About
    ScienceDirect Remote access Shopping cart Advertise Contact and support Terms
    and conditions Privacy policy Cookies are used by this site. Cookie settings |
    Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Assessing radiometric calibration methods for multispectral UAV imagery and
    the influence of illumination, flight altitude and flight time on reflectance,
    vegetation index and inversion of winter wheat AGB and LAI
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Melnychenko O.
  - Scislo L.
  - Savenko O.
  - Sachenko A.
  - Radiuk P.
  citation_count: '0'
  description: In the context of Industry 4.0, one of the most significant challenges
    is enhancing efficiency in sectors like agriculture by using intelligent sensors
    and advanced computing. Specifically, the task of fruit detection and counting
    in orchards represents a complex issue that is crucial for efficient orchard management
    and harvest preparation. Traditional techniques often fail to provide the timely
    and precise data necessary for these tasks. With the agricultural sector increasingly
    relying on technological advancements, the integration of innovative solutions
    is essential. This study presents a novel approach that combines artificial intelligence
    (AI), deep learning (DL), and unmanned aerial vehicles (UAVs). The proposed approach
    demonstrates superior real-time capabilities in fruit detection and counting,
    utilizing a combination of AI techniques and multi-UAV systems. The core innovation
    of this approach is its ability to simultaneously capture and synchronize video
    frames from multiple UAV cameras, converting them into a cohesive data structure
    and, ultimately, a continuous image. This integration is further enhanced by image
    quality optimization techniques, ensuring the high-resolution and accurate detection
    of targeted objects during UAV operations. Its effectiveness is proven by experiments,
    achieving a high mean average precision rate of 86.8% in fruit detection and counting,
    which surpasses existing technologies. Additionally, it maintains low average
    error rates, with a false positive rate at 14.7% and a false negative rate at
    18.3%, even under challenging weather conditions like cloudiness. Overall, the
    practical implications of this multi-UAV imaging and DL-based approach are vast,
    particularly for real-time fruit recognition in orchards, marking a significant
    stride forward in the realm of digital agriculture that aligns with the objectives
    of Industry 4.0.
  doi: 10.3390/s24061913
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 24 Issue 6 10.3390/s24061913 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Beniamino Gioli
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 485 Table of Contents Abstract Introduction Materials and Methods
    Case Study Discussion Conclusions Author Contributions Funding Institutional Review
    Board Statement Informed Consent Statement Data Availability Statement Conflicts
    of Interest Abbreviations Appendix A Appendix B Appendix C References share Share
    announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up
    Endorse textsms Comment first_page settings Order Article Reprints Open AccessArticle
    Intelligent Integrated System for Fruit Detection Using Multi-UAV Imaging and
    Deep Learning † by Oleksandr Melnychenko 1, Lukasz Scislo 2, Oleg Savenko 1, Anatoliy
    Sachenko 3,4,* and Pavlo Radiuk 1 1 Faculty of Information Technologies, Khmelnytskyi
    National University, 11, Instytuts’ka Str., 29016 Khmelnytskyi, Ukraine 2 Faculty
    of Electrical and Computer Engineering, Cracow University of Technology, Warszawska
    24, 31-155 Craków, Poland 3 Department of Informatics and Teleinformatics, Kazimierz
    Pulaski University of Technology and Humanities in Radom, ul. Malczewskiego 29,
    26-600 Radom, Poland 4 Research Institute for Intelligent Computer Systems, West
    Ukrainian National University, 11, Lvivska Str., 46009 Ternopil, Ukraine * Author
    to whom correspondence should be addressed. † This paper is a considerably extended
    version of our paper Melnychenko, O.; Savenko, O.; Radiuk, P. Apple detection
    with occlusions using modified YOLOv5-v1. In Proceedings of the 12th IEEE International
    Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology
    and Applications (IDAACS’2023), Dortmund, Germany, 7–9 September 2023. https://doi.org/10.1109/IDAACS58523.2023.10348779.
    Sensors 2024, 24(6), 1913; https://doi.org/10.3390/s24061913 Submission received:
    9 January 2024 / Revised: 7 February 2024 / Accepted: 14 March 2024 / Published:
    16 March 2024 (This article belongs to the Section Intelligent Sensors) Download
    keyboard_arrow_down     Browse Figures Versions Notes Abstract In the context
    of Industry 4.0, one of the most significant challenges is enhancing efficiency
    in sectors like agriculture by using intelligent sensors and advanced computing.
    Specifically, the task of fruit detection and counting in orchards represents
    a complex issue that is crucial for efficient orchard management and harvest preparation.
    Traditional techniques often fail to provide the timely and precise data necessary
    for these tasks. With the agricultural sector increasingly relying on technological
    advancements, the integration of innovative solutions is essential. This study
    presents a novel approach that combines artificial intelligence (AI), deep learning
    (DL), and unmanned aerial vehicles (UAVs). The proposed approach demonstrates
    superior real-time capabilities in fruit detection and counting, utilizing a combination
    of AI techniques and multi-UAV systems. The core innovation of this approach is
    its ability to simultaneously capture and synchronize video frames from multiple
    UAV cameras, converting them into a cohesive data structure and, ultimately, a
    continuous image. This integration is further enhanced by image quality optimization
    techniques, ensuring the high-resolution and accurate detection of targeted objects
    during UAV operations. Its effectiveness is proven by experiments, achieving a
    high mean average precision rate of 86.8% in fruit detection and counting, which
    surpasses existing technologies. Additionally, it maintains low average error
    rates, with a false positive rate at 14.7% and a false negative rate at 18.3%,
    even under challenging weather conditions like cloudiness. Overall, the practical
    implications of this multi-UAV imaging and DL-based approach are vast, particularly
    for real-time fruit recognition in orchards, marking a significant stride forward
    in the realm of digital agriculture that aligns with the objectives of Industry
    4.0. Keywords: fruit detection; fruit yield estimation; deep learning; YOLOv5;
    unmanned aerial vehicle; video stream transmission; synchronization and autonomous
    movement 1. Introduction In the era of Industry 4.0, the blend of smart sensors
    and advanced computing is transforming various industries, especially agriculture,
    which is a critical sector for global food security. This field of industry faces
    significant challenges such as changing climates [1,2], diminishing resources
    [3], and rising production costs [4], further compounded by social-economic and
    geopolitical tensions [1,3]. These factors call for creative solutions to maintain
    both ecological balance and economic viability [2,4,5], especially given the growing
    world population and shifting climate conditions [6,7]. The integration of cutting-edge
    technologies is crucial for ensuring consistent food production amidst these challenges
    [8]. In this scenario, using unmanned aerial vehicles (UAVs) [9] together with
    deep learning (DL) [10,11,12] represents an innovative solution in precision agriculture
    [13], especially for identifying fruits in orchards [14,15]. However, this combination
    comes with its own set of complexities. Gathering real-time data in orchard settings
    encounters several challenges [13,16]. The varied characteristics of fruits (such
    as shape, size, color, and texture) and the ever-changing environmental conditions
    (like lighting conditions and weather) create substantial obstacles to data collection
    and analysis [17,18,19]. Additionally, accuracy in detecting and categorizing
    fruits relies heavily on high-quality data, requiring careful image capture and
    preprocessing [20]. Traditional methods using a single drone often fail to gather
    enough data, due to restrictions like battery life, carrying capacity, and limited
    viewing angles [21,22]. To overcome the abovementioned issues, employing multiple
    UAVs is seen as a robust strategy. Operating several UAVs working together allows
    for broader coverage [20,23], varied data collection angles [24], and a safety
    net to prevent data loss [25], ensuring the thorough monitoring of orchards [26].
    While capturing diverse viewpoints through successive flights of a single drone
    could be considered adequate [22], this approach does not match the extensive
    and multi-dimensional data collection achievable through the simultaneous operation
    of multiple drones [27,28]. Based on these insights [17,23,24,25,26,27,28], the
    collaborative work of multiple drones provides broader coverage, diverse data
    collection perspectives, and a safety net against data loss, making it a compelling
    choice for advancing fruit detection and counting techniques. To conclude, deploying
    multiple UAVs seems a more feasible and comprehensive approach than relying on
    a single drone across flight missions in varied environmental conditions. Merging
    multiple UAVs, computer vision, and DL in fruit detection fits perfectly with
    the vision of Industry 4.0 [29]. It embodies the fusion of advanced sensors, autonomous
    systems, and smart data analysis, thereby significantly enhancing intelligent
    agriculture [26,30]. This framework takes advantage of the capabilities of DL,
    particularly convolutional neural networks (CNNs) and deep convolutional neural
    networks (DCNNs) [31], for intricate image analysis and object recognition [19,32].
    These technologies are not just exceptional at identifying fruit features against
    complex orchard backgrounds but are also crucial for achieving the computational
    efficiency and flexibility needed for real-time, in-field applications [28,33].
    DCNNs have recently shown remarkable success in the classification and identification
    of structural objects. Significant contributions have been made regarding fruit
    detection using DCNNs, yet they do have some limitations. For instance, Mai et
    al. [34] introduced a Faster R-CNN model for apple detection in orchards, achieving
    high detection rates but potentially overfitting to specific orchard and apple
    types alongside high computational demands. Chu et al. [35] advanced this with
    a Suppression Mask R-CNN, enhancing robustness in complex orchards and achieving
    an impressive F1-score of 90.5%, although its adaptability to various apple types
    and orchards may require further adaptation. Biffi et al. [36] employed an adaptive
    training sample selection technique with ResNet50 and FPN, which excelled in dense
    orchards but showed vulnerability in adverse weather conditions and with varied
    apple types. Lastly, Sun et al. [37] proposed a lightweight YOLOv5-CS that reduced
    detection speed by 15.56% (in floating-point operations) and increased average
    precision to 99.1% for real-time applications. However, the real-world applicability
    of YOLOv5-CS in diverse orchard conditions and its performance with small or overlapping
    fruits warrant further exploration. To summarize, each work marked a progression
    in the field, addressing previous limitations while also introducing new challenges
    that must be addressed. Overall, there have been remarkable advancements in intelligent
    sensors and advanced computing that profoundly impact diverse sectors, including
    precision agriculture. One of the key challenges in this domain is the development
    of sophisticated systems for automated fruit detection in orchard environments
    [18,38]. Traditional models, such as Faster R-CNN and Suppression Mask R-CNN,
    highlight the need for a detection system that excels across various fruit varieties
    and orchard configurations and offers computational efficiency for real-time applications.
    This is particularly crucial for fruit detection using multiple UAVs and mobile
    platforms, where resource limitations and stringent operational requirements are
    prevalent. Existing approaches often fall short in terms of generalization, real-world
    applicability, and performance under varying environmental conditions. There is
    a compelling need for innovative detection methods that utilize multi-UAV imaging
    for extensive data collection, coupled with the computational prowess of models
    like YOLOv5. Such systems could significantly facilitate automated fruit harvesting
    with great efficiency, yielding high detection accuracy, minimal computational
    load, and adaptability to diverse environmental conditions and fruit types. Thus,
    the goal of this study is to improve the efficiency of fruit detection and counting
    in orchard settings. This advancement is aimed at facilitating the process of
    real-time fruit harvest monitoring by leveraging multiple UAVs for the acquisition
    of high-quality photographic data. The scientific contributions of this work include:
    (i) designing a new method for the dynamic capture of images obtained from multiple
    UAVs, ensuring synchronization between different UAVs and autonomous movement
    of the entire UAV group, from the designated initial point to the final mission
    points; (ii) designing a new method for real-time video stream synchronization
    to ensure timely results and detect structural objects missed in previous missions;
    (iii) introducing a novel DCNN architecture called YOLOv5-v1 for detecting specified
    structural objects in images, which improves detection accuracy and reduces its
    training time; (iv) improving the method for counting the specified structural
    objects from obtained images using a group of UAVs. The rest of the paper is organized
    as follows. Section 2 introduces the methods and approaches employed for data
    collection and processing, along with the various algorithms used in this research.
    It also discusses the formation of video data acquired by the UAV group in the
    target zone, detailing the process of video data acquisition and transmission.
    Section 3 presents the experimental results and Section 4 discusses them. Lastly,
    Section 5 summarizes the study and suggests potential areas for future research.
    2. Materials and Methods The proposed approach was designed to improve the efficiency
    of fruit detection and counting in an orchard using multiple UAVs. It includes
    (i) a new method for the dynamic capture of images obtained from multiple UAVs;
    (ii) a new method for real-time video stream synchronization to ensure timely
    results and detect structural objects missed in previous missions; (iii) a method
    for detecting the specified structural objects (fruits) in images based on the
    proposed DCNN architecture, which is called YOLOv5-v1; (iv) an improved method
    for counting the specified structural objects from obtained images using a group
    of UAVs. The proposed approach is illustrated in Figure 1. Figure 1. The flowchart
    outlines the proposed methodological flow for UAV-based fruit counting, which
    includes the setup and launch of UAVs, dynamic image capture, real-time video
    stream synchronization, and a novel YOLOv5-v1 model for image processing and fruit
    detection. In the following sections, we describe each part of the proposed approach
    as a novel or improved method. 2.1. Method for the Dynamic Capture of Specified
    Structural Objects The proposed method for the dynamic capture of specified structural
    objects using a group of UAVs is illustrated by a set of steps (Figure 2). Figure
    2. The scheme illustrates the proposed method for the dynamic capture of specified
    structural objects using UAV technology. The initial phase involves deploying
    a UAV group to the designated coordinates and capturing intermediate locations.
    The subsequent phase focuses on video data handling, including signal formation,
    video sequence generation, transmission to the central unit, data processing,
    and camera deactivation. The method ends in a video sequence featuring targeted
    objects, indicating successful data acquisition by a group of UAVs. The input
    data comprise the following dataset: Coordinates of the starting point in the
    working environment; Coordinates of the ending point in the working environment;
    Matrix of coordinates for the initial points of the work segments; Matrix of coordinates
    for the end points of the work segments; Matrix of coordinates for the initial
    UAV trajectory. The method for dynamically capturing images of structural objects
    of a similar nature in a three-dimensional space (as depicted in Figure 2) involves
    the step-by-step execution of several blocks. A detailed description of this method
    is provided in Appendix A. 2.2. Method for Synchronizing Video Streams in Real
    Time Synchronizing video streams from various UAVs can be a complex task, one
    that is influenced by numerous factors. For example, the UAVs may be equipped
    with different camera models, the pace at which videos are recorded might vary,
    and there may be distortions in the video sequences or instances where they are
    not received at all. Additionally, the flight dynamics and video capturing capabilities
    can greatly vary between UAVs from different manufacturers, potentially leading
    to decreased detection quality and inaccuracies in identifying the intended structural
    objects. To address these challenges, we propose a novel method for the real-time
    synchronization of video streams (Figure 3). Figure 3. The scheme of the proposed
    method for synchronizing video streams from multiple UAVs in real time. The blocks
    of the method include the speed adjustment of video streams, temporal synchronization,
    and subsequent merging of video frames. These steps are depicted as sequential
    blocks leading to the final output—a video sequence highlighting target structural
    objects for detection and counting. This flowchart encapsulates the systematic
    transformation of raw UAV footage into analyzable data, which is crucial for precise
    fruit quantification in orchard management. The method illustrated in Figure 3
    involves compiling the video sequences captured by each UAV during a mission and
    seamlessly integrating the video frames into a consolidated image of the fruit
    tree. The proposed method for synchronizing video streams in real time is described
    in detail in Appendix B. 2.3. Methods and Means for Detecting, Tracking, and Counting
    the Specified Structural Objects 2.3.1. Method for Detecting the Specified Structural
    Objects The task of automatically identifying fruits on orchard trees takes place
    within a complex lattice-like setting, wherein the trees bearing fruits are systematically
    aligned in rows. When a UAV is deployed for a mission, it may capture images of
    fruits situated in the foreground or background of the targeted tree, as well
    as those from trees in the adjacent rows. This can sometimes result in the fruits
    appearing too small in the video frames, leading to inaccurate detection, or causing
    the same fruit to be counted multiple times as it appears in various frames throughout
    the mission. Furthermore, the fruit detection process can be compromised by fluctuations
    in weather conditions, variations in lighting conditions over the course of the
    day, and the presence of leaves and branches in the camera’s view. To mitigate
    these challenges and enhance fruit detection accuracy, a refined methodology has
    been developed specifically for identifying designated structural objects, as
    represented by the fruits on the trees. This advanced method requires a digital
    image of the specified structural objects as its input, expressed as a numerical
    matrix. Each matrix element corresponds to the brightness level of the associated
    pixel in the image. In this context, the digital image model for the structural
    objects of a uniform type is defined through a linear mapping process: 𝑓:𝐼→〈 𝐶
    𝑥𝑦 , 𝑃 𝑖 ℎ×𝑤 , 𝐵 𝑖 𝑢×𝑤 , 𝐵 𝑖 ℎ×𝑤 〉, (1) where 𝐶 𝑥𝑦 =( 𝑐 𝑥 , 𝑐 𝑦 ) is the width
    ( 𝑐 𝑥 ) and height ( 𝑐 𝑦 ) of the coordinate grid 𝐶 𝑥𝑦 of the coordinate plane
    XY formed to detect structural objects, 𝑃 𝑖 ℎ×𝑤 =( 𝑝 𝑖 ℎ , 𝑝 𝑖 𝑤 ) is the height
    ( 𝑝 𝑖 ℎ ) and width ( 𝑝 𝑖 𝑤 ) of the bounding box of the i-th target structural
    object in the XY coordinate plane, 𝐵 𝑖 𝑢×𝑣 =( 𝑏 𝑖 𝑢 , 𝑏 𝑖 𝑣 ) are the coordinates
    of the center of the bounding box of the i-th target structural object in the
    XY coordinate plane, and 𝐵 𝑖 ℎ×𝑤 =( 𝑏 𝑖 ℎ , 𝑏 𝑖 𝑤 ) is the height ( 𝑏 𝑖 ℎ ) and
    width ( 𝑏 𝑖 𝑤 ) of the bounding box that outlines the i-th target structural object
    in the XY coordinate plane. The coordinates of the center of the bounding box
    of the i-th target structural object according to (1) in the XY coordinate plane
    are calculated using the following formula: 𝑏 𝑖 𝑢 = 𝜎 𝑖 ( 𝑡 𝑖 𝑥 + 𝑐 𝑥 ); 𝑏 𝑖 𝑣
    = 𝜎 𝑖 ( 𝑡 𝑖 𝑦 + 𝑐 𝑦 ), (2) where 𝑡 𝑖 𝑥 and 𝑡 𝑖 𝑦 represent the displacement of
    the center of the bounding box of the i-th target structural object from the coordinate
    grid 𝐶 𝑥𝑦 . The height ( 𝑏 𝑖 ℎ ) and width ( 𝑏 𝑖 𝑤 ) of the bounding box from
    Formula (2) of the i-th target structural object according to (1) in the XY coordinate
    plane are calculated using the following formula: 𝑏 𝑖 ℎ = 𝑝 𝑖 ℎ 𝑒 𝑐 𝑦 ; 𝑏 𝑖 𝑤
    = 𝑝 𝑖 𝑤 𝑒 𝑐 𝑥 . (3) The mechanism for overlaying bounding and constraining boxes
    on the target object is based on the DCNN architecture, which is first used as
    a baseline and then modified to meet the specified objective. We will henceforth
    refer to the modified architecture as YOLOv5-v1 (Figure 4). Figure 4. Concise
    visual comparison of two neural network architectures for fruit detection: (a)
    the original YOLOv5 and (b) the proposed YOLOv5-v1. The left panel (a) shows the
    conventional structure of YOLOv5 with repeated bottleneck CSP layers, while the
    right panel (b) illustrates an augmented design of YOLOv5-v1 with additional bottleneck
    CSP layers and squeeze-and-excitation (SE) layers within the backbone and neck,
    ending in detection layers. This comparative layout underscores the modifications
    of the proposed YOLOv5-v1 aimed at improving the feature extraction and inference
    performance. The hyperparameters for each type of layer involved in the architecture
    shown in Figure 4 are presented in Appendix C in Table A1. The initial dimensions
    of the bounding box applied to the object in the digital image for small and medium
    scales have been altered. This modification was carried out to enhance the accuracy
    of detecting each structural object in the image. Applying the enhanced method
    under practical conditions results in three main scenarios for placing the designated
    structural objects within the image: (1) positioned in the foreground of the current
    task area, (2) situated in the background of the current task area, and (3) located
    within an additional task area captured in the frame. The original YOLOv5 includes
    bounding boxes of three different sizes, each assigned to every feature map with
    preset coefficients. When fruits are positioned in the background, particularly
    on trees in more remote rows, the distance to the UAV can be quite substantial,
    potentially degrading the effectiveness of structural object detection. As a result,
    such distant specified structural objects in the image should be treated as less
    reliable targets for both detection and analysis. To reduce the likelihood of
    mistakenly identifying structural objects in the background of the video frame
    and to improve the precision of foreground detection, the initial dimensions of
    the small- and medium-scale bounding boxes were adjusted. This adjustment was
    based on the specific conditions of the working environment and the outcomes of
    computational experiments. The proportions between length and width for both the
    initial bounding box sizes and the initial sizes of the anchor boxes were established
    at roughly 1 to 1. Here, the data outline different box types with corresponding
    values across three feature maps. The values for the bounding boxes are consistently
    20, 40, and 80 across feature maps 1, 2, and 3, respectively. Small anchor boxes
    show a progressive increase in values from feature maps 1 to 3, starting at 80
    and 70, then moving to 75 and 75, and finally reaching 85 and 100. Medium anchor
    boxes display a more varied pattern, with initial values of 95 and 110 in feature
    map 1, followed by a peak at 130 and 110 in feature map 2, and then slightly reduced
    values of 115 and 125 in feature map 3. Lastly, large anchor boxes present the
    highest values, starting with 116 and 90 in feature map 1, escalating to 156 and
    198 in feature map 2, and reaching the peak values of 373 and 326 in feature map
    3. Introducing the initial dimensions of both box types is expected to improve
    the precision of structural object detection in the foreground, while simultaneously
    diminishing the chances of erroneously identifying irrelevant objects in the background.
    To attain remarkable accuracy in real-time structural object detection, it is
    crucial to significantly reduce the physical size of the original YOLOv5 and fully
    compress the architecture. Consequently, the primary block of the network, which
    is responsible for extracting the target object’s features from the input images,
    underwent modifications to decrease the number of its weight parameters. The enhancements
    made to the central block incorporate three significant alterations: The focus
    module of the original YOLOv5 is revamped to expedite the training process, as
    illustrated in Figure 5. Specifically, the incoming image, presented across three
    RGB channels with dimensions of 3 × 640 × 640, is segmented into four equal sections,
    each measuring 3 × 320 × 320. These quartered image segments are then amalgamated
    into a singular feature map for each RGB channel, culminating in an output dimension
    of 12 × 320 × 320. Furthermore, a convolutional operation employing 32 kernels
    is conducted on the newly formed 12 × 320 × 320 feature map, resulting in a feature
    map sized 32 × 320 × 320. Finally, batch normalization is subsequently applied
    to this 32 × 320 × 320 feature map, with the normalized output of the same size
    being transferred to the next processing phase of the network. A bottleneck layer
    is employed in the cross stage partial (CSP) network. The BottleneckCSP module
    incorporated into the YOLOv5-v1 architecture, as depicted in Figure 5, entails
    eliminating the convolutional layer that was previously used in the original BottleneckCSP
    module to combine the input feature map through a concatenation operation (refer
    to Figure 6). In the revised BottleneckCSP module, the input feature map is now
    directly connected to the output feature map depth-wise, leading to fewer parameters
    in the module. The feature maps are merged. The proposed YOLOv5-v1 employs a technique
    to merge variously sized feature maps into a single, more discriminative feature
    map to improve the detection precision of structural objects in video frames.
    This improvement considers both the simplified design of the updated BottleneckCSP
    module and the integration of feature maps from the convolutional layers in YOLOv5-v1.
    Specifically, the original layer mergers from layers 4 to 15, 6 to 11, and 10
    to 21 in the original YOLOv5 architecture have been altered to layers 5 to 18,
    8 to 14, and 13 to 24 in the enhanced YOLOv5-v1 architecture. Figure 5. The figure
    presents two object detection processing pipelines and compares (a) a conventional
    approach of the original YOLOv5 with (b) an enhanced implementation of the proposed
    YOLOv5-v1. Both start with an input image sliced into multiple segments, proceed
    through the convolution and concatenation layers, and conclude with output images
    that have undergone batch normalization and activation functions. At the same
    time, the modified version introduces new dimension values for the input RGB channel
    (3 × 640 × 640) and feature maps (3 × 320 × 320) in the slice layer and suggests
    the Hardswish activation function in the focus module, hinting at efficiency gains.
    Figure 6. Comparison of two configurations within the BottleneckCSP module: (a)
    YOLOv5 with a shortcut connection and multiple convolutional layers with batch
    normalization (BN) and Hardswish activation functions, leading to a concatenated
    layer and output; (b) YOLOv5-v1 with one convolutional layer removed, leading
    to fewer parameters in the module. The analysis of images from fruit trees revealed
    that the structural objects, representing the fruits, predominantly fall into
    the medium-sized category. Furthermore, the 23rd layer’s output feature map of
    YOLOv5-v1 is utilized as the input for the classification function targeting these
    medium-sized objects. To expedite the target object detection process using YOLOv5-v1,
    the output feature maps from the 14th and 21st layers of the modified architecture
    were combined. Because of these adjustments, a more efficient method has been
    developed. This method automates the conversion of input data, which are provided
    as digital images of structural objects (fruits on a tree), into output data represented
    by a set of coordinates that pinpoint the objects’ locations in the image. 2.3.2.
    Tracking and Counting the Specified Structural Objects To accurately count the
    number of fruits in a video stream, it is crucial to uniquely identify each fruit
    across two consecutive video frames captured by a UAV. Tracking the fruits is
    a challenging task due to potential changes in their position and appearance across
    consecutive frames. These changes could be caused by variations in lighting conditions,
    camera movements, adjustments to the UAV’s flight path, or other unforeseen environmental
    influences. The method we have developed for counting these structural objects
    hinges on correlating the visual characteristics of the detected fruits across
    consecutive video frames. This correlation considers the unique features of each
    fruit, their positional changes across frames due to UAV movement, and various
    environmental factors. A visual representation of this counting method is provided
    in Figure 7. Figure 7. The workflow for tracking the specified structural objects
    in video analysis. First, the system identifies the coordinates of bounding boxes
    around the detected objects. These coordinates are compared across successive
    frames to establish the continuity of the objects. New objects are assigned unique
    identifiers. The system then counts the distinct structural objects and predicts
    their subsequent frame coordinates. Finally, the output data enumerate the detected
    objects within the operational environment. The suggested approach unfolds through
    a series of steps, namely: (1) pre-processing the amalgamated video frames, with
    bounding boxes highlighting the identified structural objects, (2) systematically
    comparing the related coordinates of detected objects across two consecutive frames,
    (3) assigning unique IDs to objects that have just appeared, (4) tallying the
    unique structural objects, (5) forecasting the positional coordinate values of
    the objects for the upcoming frame, and (6) generating the final output data,
    which quantifies the number of structural objects present in the operational environment.
    In the Input Data stage (see Figure 7), initial data processing takes place, utilizing
    updated algorithms from the detection method. This process includes segregating
    the structural objects into small, medium, and large categories. Small objects
    are deemed irrelevant for tracking and are consequently excluded from the counting
    process. The main activity in this phase is the filtration of data, which involves
    discarding the bounding boxes around the detected small structural objects, resulting
    in a refined data structure ready for the next phase. Stage 1 involves the preliminary
    correlation of the associated coordinates of the detected objects between two
    successive video frames. Utilizing the data refined in the previous stage, a state
    is constructed for the detected structural objects in the current video frame.
    Each object is characterized as follows: (𝑥,𝑦,𝛾,ℎ, 𝑣 𝑥 , 𝑣 𝑦 , 𝑣 𝛾 , 𝑣 ℎ ), (4)
    where (𝑥,𝑦) are the coordinates of the center of the detected object, γ is the
    ratio of width to height of the bounding box of the detected object, and 𝑣 𝑥 ,
    𝑣 𝑦 , 𝑣 𝛾 , and 𝑣 ℎ represent the rate of change of the tracking box between consecutive
    video frames. Given that numerous objects may be present in a single video frame,
    it makes sense to establish a probability group predicting the potential location
    of each identified object in the next frame. By defining the characteristic groups,
    which are expressed as detected and tracked structural objects using Formula (4),
    we can create a structured space. In this space, a new subset group is consistently
    formed, based on algebraic principles. This subset group represents the anticipated
    location of each detected object, as determined from the previous frame, and is
    constructed using the Kalman filter [39]. The filter considers the motion state
    of each object from the previous frame to provide insights into the movement model
    of the structural object in the current video frame, leading to an optimal estimation
    of the motion state across the sequence of frames. To facilitate this, the Hungarian
    algorithm [40] is utilized to calculate the distance matrices between the related
    coordinates of the detected object locations and the predicted locations from
    the previous video frame. This calculation considers the variations in input variables
    and their mutual correlation. Let 𝑟 𝑗 denote the matrix of characteristic features
    of each detected structural object in the video frame, and 𝑅 𝑗 the state of all
    numerical characteristics of detected objects from the preceding 100 frames. Consequently,
    the minimum distance between the i-th feature of the predicted object from the
    previous video frame and the j-th feature of the detected structural object in
    the current video frame is calculated as follows: 𝑑 (1) (𝑖,𝑗) =min{1− 𝑟 𝑇 𝑗 𝑟
    (𝑘) 𝑖 | 𝑟 (𝑘) 𝑖 ∈ 𝑅 𝑖 ,𝑘∈(1,100)}. (5) The association of two structural objects
    by distance, using Formula (5), is determined by the intersection of characteristic
    features, which is defined by a formula with the control threshold 𝑡 (1) : 𝑏 (1)
    (𝑖,𝑗) = ⎧ ⎩ ⎨   1,  𝑑 (1) (𝑖,𝑗) ≤ 𝑡 (1) ; 0,  𝑑 (1) (𝑖,𝑗) > 𝑡 (1) . (6) The
    result of Formula (6) has a variance value of 1 if the characteristic features
    intersect, and 0 if there is no such intersection. The values and motion characteristics
    of the tracked object between consecutive video frames in a multidimensional space
    are expressed through the Mahalanobis distance [41], squared between the predicted
    and detected location of the structural object in the current frame: 𝑑 (1) (𝑖,𝑗)
    = ( 𝑑 𝑗 − 𝑦 𝑖 ) 𝑇 𝑆 −1 𝑖 ( 𝑑 𝑗 − 𝑦 𝑖 ), (7) where 𝑦 𝑖 is the predicted bounding
    box values of the object on the current video frame, 𝑑 𝑗 represents the bounding
    box of the target object on the current video frame, and 𝑆 𝑖 is the covariance
    matrix for the object on the current video frame. The process of association by
    distance (7) with a set control threshold is given by the following formula: 𝑏
    (2) (𝑖,𝑗) = ⎧ ⎩ ⎨   1,  𝑑 (2) (𝑖,𝑗) ≤ 𝑡 (2) ; 0,  𝑑 (2) (𝑖,𝑗) > 𝑡 (2) . (8)
    After obtaining the movement characteristic values of the tracked object between
    consecutive video frames using Formulas (7) and (8), we form a numerical matrix
    based on the Mahalanobis distance, which will determine whether two indicators
    intersect within the selected region of interest: 𝑐 𝑖,𝑗 =𝜆 𝑑 (1) (𝑖,𝑗) +(1−𝜆)
    𝑑 (2) (𝑖,𝑗) ; 𝑏 𝑖,𝑗 = ∏ 𝑚=1 2 𝑏 (𝑚) (𝑖,𝑗) . (9) The numerical matrix (9) is the
    result of Stage 1. Real-time tracking follows a cascading approach, which involves
    multiple checks for correspondence between the locations of predicted and detected
    structural objects. Tracking the set of detected objects on a video frame is performed
    using the intersection over union (IOU) metric. Tracking continues when the IOU
    value for each detected object achieves the highest numerical value of 0≤IOU≤1
    . The real-time tracking process is illustrated in Figure 8. Figure 8. Scheme
    of the tracking of a structural object across multiple video frames within a three-dimensional
    coordinate system. Successive frames capture the object’s movement, with each
    frame layer representing a snapshot in time, and superimposed green bounding boxes
    tracking the object’s path through space. After the current phase, a state matrix
    is generated under Formula (9), which keeps track of objects before passing this
    information on to the subsequent stages. In Stage 2 (Figure 7), every newly detected
    object is assigned a unique identifier. At this stage, a distinctive state characteristic
    is attributed to each object, supplementing the positional information obtained
    from Stage 1. Stage 3 is tasked with counting the unique structural objects. This
    is accomplished using an object registry, which temporarily stores data about
    the tracked object, detailing its type, movement, unique identifier, operational
    status, and time of registration. An object remains “active” as long as it is
    under the tracking system’s watch. However, if the object disappears from subsequent
    video frames, the system triggers an event, changing its status in the registry
    to “inactive.” An “inactive” status indicates that the object has been counted,
    although it is not then removed from the registry. Finally, Stage 4 (Figure 7)
    aims to predict the future locations of the objects in upcoming video frames.
    In this stage, we predict where structural objects might be situated across a
    series of future video frames. If an object stays visible for 100 consecutive
    video frames, it is considered to be both consistent and unique throughout that
    period. Figure 9 provides a visual example of how identical structural objects
    are distinguished. Figure 9. Scheme of YOLOv5-v1’s object detection capability
    on a fruit tree, with bounding boxes indicating recognized fruits. The left side
    shows a distorted image, reflecting the data processing stages or errors, while
    the right side displays clear detection. Green boxes show the algorithm’s accurate
    fruit detection, while white boxes represent areas the model reconsidered and
    ultimately deemed below the confidence threshold for fruit classification. Moreover,
    the system initiates an event that leads to the recording of the target object
    in a temporary registry for objects under tracking. At this juncture, the object
    is recognized as having been successfully identified and is subsequently added
    to the aggregated data of the UAV group’s mission. To compute the predictive values,
    a linear version of the Kalman filter that functions in discrete time intervals
    is utilized. Through these procedures, a method for counting structural objects
    is established. 2.4. Methodology and Experimental Setting A general description
    of the process for conducting computational experiments is presented below. 2.4.1.
    Experimental Area The duration of the UAV group’s mission is constrained by the
    battery’s life and the prevailing weather conditions. The experiments took place
    at the “SAM+” Farming Enterprise’s apple orchard, located in the village of Kuzmin,
    within the Horodotska urban territorial community of the Horodotsky district in
    the Khmelnytskyi region. The orchard primarily features slender spindle apple
    trees, covering a total area of 50 hectares. The orchard rows vary in length from
    500 to 800 m, with trees planted at 2-meter intervals, a 4-meter width between
    rows, an average tree height of 3.5 m, and a rootstock of 106 mm. The farm estimates
    that each apple tree produces around 200 apples per season. Experimental investigations
    within this designated area were conducted under mild weather conditions, including
    light winds and occasional rain, and during both sunny and cloudy periods. A description
    of the experimental scenarios is provided below: (1) On 26 September 2023, between
    11:00 and 12:00, an experiment took place in the orchard under clear skies, with
    the sun positioned directly overhead. Figure 10a showcases a visual representation
    of the working environment under these sunny conditions. Figure 10. Experimental
    working environment, photographed under various lighting conditions: (a) sunny
    and (b) cloudy. A general description of the process of conducting experiments
    for the automated system is described below: (2) On 28 September 2023, from 13:00
    to 14:00, an experiment took place in a fruit orchard under cloudy conditions,
    with the sun obscured by clouds. Figure 10b illustrates a sample of the working
    environment during such overcast conditions. (3) Another experiment was executed
    on 29 September 2023, from 19:00 to 20:00, in sunny weather with the evening sun
    near the horizon. The setting sun resulted in a significant shading effect on
    the fruits within the apple orchard. We configured the UAVs and their cameras
    by setting the following parameters: the flight height, the observation angle
    of the UAV-based camera, and the ISO (International Organization for Standardization)
    [42] settings of the camera (Table 1). Table 1. UAV flight parameters for agricultural
    imaging, detailing the positions, corresponding flight heights, camera observation
    angles, and ISO settings for varying lighting conditions. The effectiveness of
    the experimental study hinges on whether the working area has been previously
    utilized for experiments. In this regard, two rows of fruit trees were selected
    from the working environment, comprising approximately 1600 m of the UAV’s flight
    path and encompassing an estimated 800 trees. This route has been traversed multiple
    times for the experiments. 2.4.2. Equipment Details Setting up the necessary equipment
    in the working environment is crucial. This step involves defining the technical
    specifications of each hardware device, which will influence the future efficiency
    of the working mission’s execution. The selected equipment and its technical specifications
    are summarized in Table 2. Table 2. Technical details of the fruit detection equipment
    that was used in the working environment. Table 2 comprises the technical specifications
    of the selected equipment and their relevance to conducting precise and efficient
    missions in apple orchards, primarily focusing on fruit detection using UAVs equipped
    with advanced RTK modules and robust power supplies. The integration of these
    elements is crucial for real-time fruit harvest monitoring and when leveraging
    multiple UAVs for the acquisition of high-quality images. 2.4.3. Evaluation Criteria
    In this study, we assessed model performance using several metrics [43]. Precision
    indicates that the majority of the fruits identified by the system are indeed
    correct. Precision is calculated using the following formula: Precision= TP TP+FP
    , (10) where TP (true positive) refers to correctly predicted positive cases,
    and FP (false positive) refers to negative cases that are wrongly classified as
    positive. Recall complements precision by quantifying the system’s ability to
    identify all relevant instances of fruit within a dataset. Recall is calculated
    as: Recall= TP TP+FN , (11) where FN (false negative) represents those positive
    cases incorrectly labeled as negative. The F1-score is a balance between precision
    and recall, with a range from 0 (worst) to 1 (best). It is computed using the
    following formula: F 1 -score=2× Precision×Recall Precision+Recall . (12) In this
    study, we focused on a single category, “Fuji apples”, for which the mean average
    precision (mAP) is calculated as follows: mAP= 1 𝑛 ∑ 𝑛 𝑖=1 AP 𝑖 , (13) where AP
    𝑖 is the average precision for the i-th threshold, representing the area under
    the precision-recall curve. This is further defined as: AP= ∫ 1 0 (Precision×Recall)
    𝑑𝑥. The false positive rate (FPR) is defined as the ratio of the number of non-defective
    fruits that are wrongly categorized to the total number of actual non-defective
    fruits. FPR is formalized as: FPR= FP FP+TN . (14) where FP represents the number
    of false positive cases and TN stands for the number of true negatives. The false
    negative rate (FNR) measures the proportion of defective fruits that are mistakenly
    labeled as non-defective. FNR is formalized as: FNR= FN FN+TP . (15) FPR and FNR
    both represent the error rates made by the evaluated detectors. We utilized the
    average detection speed, measured in seconds per picture, to assess the system’s
    efficiency. Moreover, the number of model parameters and the model’s size, measured
    in megabytes, were used to evaluate the system’s complexity and resource requirements.
    A system with fewer parameters and smaller size is generally more desirable, as
    it indicates a leaner, more efficient model that can be deployed more easily in
    various hardware setups, a key consideration in Industry 4.0 environments. Overall,
    the utilized criteria offer a comprehensive framework for evaluating fruit detection
    systems in the context of intelligent sensors and advanced computing. They address
    both the precision and efficiency aspects, which are critical in industrial applications
    where speed, precision, and resource optimization are essential. 3. Case Study
    3.1. Creating a Detector for Tracking Tasks The success of detecting and counting
    structural objects in the experimental environment is partly contingent on the
    preliminary stage of preparing the training data. 3.1.1. Training Dataset Fuji
    apples, characterized by their striped raspberry-colored blush, yellow subcutaneous
    spots, and rounded shape, were used for training YOLOv5-v1. The images were captured
    under varying weather conditions and distances using an iPhone 13 Pro Max [44]
    smartphone camera. Considering the working environment’s challenges, such as organic
    objects being obscured by foliage and varying natural conditions, 1214 images
    of apples were taken under specific conditions to enhance the system’s applicability.
    These conditions included various forms of occlusion and lighting angles. The
    dataset was divided into 200 images for testing (equally split between sunny and
    cloudy conditions) and 1014 images for training. A detailed distribution of this
    fruit image dataset is shown in Table 3. Table 3. The distribution of a 200-image
    dataset used for fruit detection testing under varying lighting conditions. It
    documents the counts of images with clearly visible fruits and those with mixed
    occlusion, highlighting a higher frequency of occlusion during sunny conditions.
    The dataset comprises an equal number of images from sunny and cloudy conditions,
    with a total of 1007 instances of pronounced clearly visible fruits and 1329 instances
    with mixed occlusion. The images captured were subjected to augmentation and enhancement
    through CLAID.AI technology (San Francisco, CA, USA) [45], which involved operations
    such as increasing and decreasing the brightness, horizontal and vertical flipping,
    and rotation at various angles. Additionally, images featuring apple fruits of
    diverse colors and shapes were incorporated. Consequently, the final dataset comprised
    16,224 images of fruits, serving as the definitive set of training data. This
    set included 15,210 enhanced images and 1014 raw images, ensuring that there was
    no overlap between the training and test datasets. After the data preparation
    and processing, the task was to append one or more descriptive and meaningful
    labels to the images, adding context and facilitating more effective model training.
    For this, we utilized the Amazon SageMaker Data Labeling tool (Seattle, WA, USA)
    [46] to prepare a dataset with superimposed labels. Out of this dataset, 200 test
    images were manually labeled, while the remaining images were annotated automatically.
    It is noteworthy to emphasize that Amazon SageMaker’s accuracy primarily influences
    the quality of prepared data. However, this influence does not inherently compromise
    the precision of the object detection model itself. The accuracy of the model
    depends on numerous factors, including the diversity and representativeness of
    the training data, the robustness of the model architecture, and the effectiveness
    of the training process. In this case, the rigorous data augmentation and the
    diversified conditions under which the images were captured aim to enhance the
    model’s generalizability and robustness. Therefore, while annotation accuracy
    is crucial to ensure that the model learns from correct examples, it is the comprehensive
    training process, the diversity of the dataset, and the robustness of the model
    architecture that collectively determine the accuracy of the object detection
    outcomes. During the initial training stage, the Adam optimizer was employed over
    30 epochs with a set learning rate of 0.001. The total duration of training was
    approximately 9 h. The hardware setup for the training and testing included an
    Intel (R) Core (TM) I7-9750H processor running at 2.6 GHz, 32 GB of RAM, and an
    NVIDIA GeForce RTX 2060 graphics processor with 6 GB of video memory. The software
    environment included programming language Python v3.10.13 (Wilmington, DE, USA),
    PyTorch v1.13.1 (New York City, NY, USA) [47], CUDA v11.7 (Santa Clara, CA, USA)
    [48], and OpenCV v4.7.0 (free and open-source software under Apache 2 License)
    [49] toolkits, all operating on the Windows 11 platform (Redmond, WA, USA). 3.1.2.
    Creating a Detector For assessing the constructed detector, we selected evaluation
    metrics such as mean precision, recall, F1-score, and mAP, formalized by Formulas
    (10)–(13), respectively. The outcomes of the training, leveraging YOLOv5-v1, are
    illustrated in Figure 11. Figure 11. This figure presents the learning curves
    for (a) accuracy and (b) loss in YOLOv5-v1’s training and validation phases over
    30 epochs. The accuracy curve (a) demonstrates rapid improvement and subsequent
    stabilization, indicative of effective learning, while the loss curve (b) shows
    a steep decline before plateauing, suggesting a reduction in model error. The
    values of the loss function for both the validation and training datasets, as
    depicted in the curves in Figure 11, show a rapid decline during the initial 100
    iterations of the YOLOv5-v1’s training. A steadier pattern starts to form after
    250 iterations, leading to the establishment of the model after 300 training iterations.
    The trends indicate that YOLOv5-v1 has been adequately trained without overfitting
    (see Figure 11). Upon identifying a specific group of structural objects within
    a video frame, YOLOv5-v1 applies a filtering process based on a predetermined
    prediction confidence threshold. The precision and completeness of the detection
    outcomes vary, depending on the single recognition model and the different confidence
    threshold values that are set. Inappropriate settings of the model’s confidence
    threshold can lead to unpredictable outcomes (see Figure 12). Figure 12. An output
    of YOLOv5-v1 examining a fruit tree, representing true positives, i.e., successful
    fruit identification, with green bounding boxes and false positives, i.e., incorrectly
    identified an object as a fruit when it is not, with blue boxes. In panel (a),
    one apple at the bottom is circled in yellow, suggesting an omission in detection.
    In contrast, panel (b) shows the same scene without the omission, indicating a
    refined detection process. If the confidence threshold is set exceedingly low,
    objects in the foreground that are erroneously detected are highlighted (and marked
    with a yellow ellipse in Figure 12a). Conversely, if the probability threshold
    is excessively high, the target structural object in the foreground might be missed
    or incorrectly detected, as indicated by the yellow ellipse in Figure 12b. The
    results from changing the efficiency of YOLOv5-v1 with different confidence thresholds
    are illustrated in Figure 13. Figure 13. The validation curves of precision, recall,
    and mAP of YOLOv5-v1 against varying confidence thresholds. Precision (blue) rises
    with the threshold, indicating fewer false positives at higher confidence levels.
    Recall (green) decreases, suggesting that more true positives are missed as the
    threshold increases. The mAP (red) curve peaks at a mid-range threshold, balancing
    precision and recall. This graph suggests an optimal threshold of 0.5 for the
    balance between detecting as many structural objects as possible while maintaining
    high accuracy. The confidence threshold was determined based on the following
    scenarios: (1) When the confidence threshold was established at below 0.5, YOLOv5-v1
    showed suboptimal recognition precision, falling below 80%. (2) Conversely, setting
    the confidence threshold above 0.5 led to a gradual decrease in the average precision
    of the classification. (3) Optimal efficiency and performance from YOLOv5-v1 were
    achieved when the probability threshold was precisely set at 0.5. Under this setting,
    YOLOv5-v1 attained average classification accuracies of 83.8%, 91.5%, and 86.8%
    for three object categories that correspond to three types of anchor boxes: small,
    medium, and large (see Section 2.3.1). 3.2. Test Results of the Created Detector
    The efficacy and performance of the proposed YOLOv5-v1 were extensively evaluated,
    based on its ability to detect objects across a set of 200 test images. Within
    these images, there were 2336 instances of fruits; 1007 of these were deemed capturable,
    whereas 1329 were classified as non-capturable. Detailed results of the recognition
    performance achieved by the proposed method are shown in Table 4. Table 4. The
    performance results of YOLOv5-v1 for fruit detection. The table presents precision,
    recall, F1-score, and mAP for those structural objects that can and cannot be
    captured. The data reveal higher precision and recall for detectable objects,
    with the overall performance showing 83.8% precision, 91.5% recall, and a balanced
    87.5% F1-score across 2336 objects, indicating both the system’s effectiveness
    and areas for improvement in fruit detection accuracy. The data (see Table 4)
    reveal the performance metrics of the proposed YOLOv5-v1 model in recognizing
    fruits. Specifically, for the fruits deemed capturable, YOLOv5-v1 demonstrated
    a precision value of 85.5%, a recall value of 94.3%, a mAP value of 89.2%, and
    an F1-score of 89.7%. Conversely, the performance of YOLOv5-v1 on ambiguous fruits
    yielded precision of 82.6%, recall of 89.3%, a mAP value of 84.9%, and an F1-score
    of 85.8%. When considering object detection, YOLOv5-v1 achieved overall performance
    metrics of 83.8% precision, 91.5% recall, 86.8% mAP, and an F1-score of 87.5%.
    Figure 14 showcases the ability of YOLOv5-v1 to differentiate between fruits that
    are capturable and those that are not, all under a variety of weather and lighting
    conditions. Figure 14. This figure demonstrates the visual performance of YOLOv5-v1
    in fruit detection under varied lighting conditions. Figure (a) exhibits its robust
    detection amidst cloud cover, (b) shows its accuracy with side light, (c) reveals
    the impact of backlighting on detection performance, and (d) indicates the challenges
    and potential overexposure when in direct sunlight. Green and blue boxes in these
    figures represent true positive and false positive cases, respectively. In the
    visual labels, green bounding boxes represent objects that could be captured,
    whereas blue bounding boxes denote objects that were not captured. As illustrated
    in Figure 14c,d, the proposed YOLOv5-v1 can identify structural objects in images,
    even in varied lighting conditions such as uniform lighting, overcast skies, and
    direct sunlight. Additionally, YOLOv5-v1 demonstrates proficiency in detecting
    structural objects under different lighting orientations, including front, back,
    and side lighting in sunny conditions. Based on the assessment data from the “SAM+”
    Farm, the orchard’s fruit count at the time of the experiment was estimated to
    be around 160,000. The findings from the fruit yield detection and quantification
    are detailed in Table 5. Table 5. A comparative analysis of fruit detection and
    counting under various lighting conditions using multiple UAVs. It quantifies
    the fruits that are detected and counted, those detected but not counted, and
    instances where fruits were detected by multiple cameras but were counted only
    once. The conducted experiments yielded results wherein 147,382, 145,223, and
    132,304 pieces of fruit were successfully identified and tallied across three
    distinct weather conditions (see Table 5). Simultaneously, it was noted that there
    were instances of fruit detection without counting, with numbers amounting to
    72,143, 69,944, and 69,336 for each weather condition, respectively. Despite being
    recognized as fruits by YOLOv5-v1, these items were not counted due to their location
    outside the designated operational zones. As can be seen from Table 5, the specific
    quantities of fruit, numbering 5743, 6611, and 8442 corresponding to the three
    different weather scenarios, were concurrently detected by cameras from two or
    three UAVs but were only counted once. This counting approach aligns with the
    logic of the proposed method for tallying structural objects. However, it is worth
    noting that some fruits were either obscured by foliage or situated in areas that
    were challenging to perceive, both for the UAV camera and by human observation.
    Consequently, the system’s detector made a minor number of errors. Table 6 displays
    the statistical metrics used to evaluate the performance of fruit detection. Table
    6. This table quantifies the precision, recall, F1-score, FPR, and FNR of the
    proposed YOLOv5-v1 under different lighting conditions. It shows that performance
    peaks with direct sunlight, declines under cloud cover, and is lowest in strong
    shade. As can be seen from Table 6, the peak metric values were attained when
    the weather was sunny and the sun was directly overhead, while the lowest values
    occurred under heavy shading conditions. Figure 15 illustrates a visual comparison
    of the recognition criteria under various weather conditions. Figure 15. A comparison
    by evaluation criteria of the performance of YOLOv5-v1 under different lighting
    conditions. Precision, recall, and F1-score metrics are compared across sunny,
    cloudy, and shaded environments. High precision during sunny conditions suggests
    fewer false positives, while lower scores in shaded conditions indicate increased
    difficulty in object identification. The F1-score, a harmonic mean of precision
    and recall, reflects overall accuracy, peaking under sunny conditions. The experimental
    results demonstrate that YOLOv5-v1 achieves precision levels of (1) 92.1% in sunny
    conditions, (2) 90.8% on cloudy days, and (3) 82.7% in conditions that are sunny
    but with substantial shading. These outcomes underscore the impressive performance
    of our approach in real-world scenarios for fruit detection and counting. A comparative
    analysis of the error rates associated with the UAV group across various meteorological
    conditions is illustrated in Figure 16. Figure 16. A comparative analysis of the
    false positive rate (FPR) and false negative rate (FNR) for YOLOv5-1 under various
    lighting conditions. The model achieves the lowest FPR under direct sunlight and
    the highest FNR in deep shade, implying a tendency to miss detections rather than
    make erroneous ones in difficult lighting. As can be seen from Figure 16, the
    error rate of fruit recognition in real-world scenarios is highly influenced by
    weather conditions. This may be due to certain work areas being obscured by shadows
    from nearby trees. This issue, along with visual interference from various objects
    like leaves and branches, can considerably hinder the system’s ability to identify
    and track target objects in real time, particularly given the restricted field
    of view of UAV cameras. The proposed YOLOv5-v1 delivers high recognition precision
    and embodies the attributes of a lightweight CNN, standing out as the most efficient
    among the five compared models in terms of the highest mAP value. This advantage
    is particularly beneficial for real-time operations involving multiple UAVs. To
    assess the efficiency of the real-time video stream synchronization method developed
    for this study, the structural similarity index measure (SSIM) and peak signal-to-noise
    ratio (PSNR) were utilized [50]. A high-efficiency synchronization is indicated
    by an SSIM index ranging from 0.5 to 1, while a value between 0 and 0.49 denotes
    inefficiency. The PSNR index, on the other hand, gauges the quality of images
    resulting from the merging process, with higher values indicating superior image
    quality. The performance of the video stream synchronization module within the
    approach, applying the developed method across 12 sets of sequential video frame
    groups, is shown in Table 7. Table 7. Research results on the effectiveness of
    the video stream synchronization method, as obtained by a group of UAVs. Each
    group, randomly selected for testing, comprises three video frames captured by
    three different UAVs, which are then merged into a single image. The table presents
    an evaluation of twelve randomly combined images, using SSIM and PSNR as quality
    metrics. The performance metrics from Table 7 indicate that the SSIM index for
    efficiency fluctuates between 0.45 and 0.91, with an average value of 0.87. Images
    registering an SSIM index below 0.50 are flagged as distorted by the system. Simultaneously,
    merged images with a PSNR index above 30 are deemed of high quality, whereas a
    PSNR value under 30 suggests inferior image quality, potentially due to external
    environmental influences such as strong winds or rain. An image with an SSIM index
    under 0.50 and a PSNR index below 30 is categorized as distorted and is subsequently
    excluded from further processing in object detection and enumeration. Finally,
    to evaluate and validate the performance of YOLOv5-v1, it was tested on 200 images
    from the test set and compared with recent related detection algorithms: (i) Mai
    et al. [34] employed Faster R-CNN; (ii) Chu et al. [35] adopted Mask R-CNN; (iii)
    Biffi et al. [36] used ATSS, ResNet50, and FPN; (iv) Sun et al. [37] utilized
    the modified YOLOv5-CS (Table 8). The evaluation was performed based on the values
    of mAP and the average recognition speed. Table 8. A comparison of various object
    detection approaches. Metrics compared include mAP, average detection speed, the
    number of parameters, and model size. The bolded numbers indicate the best-performing
    approach. As can be seen from Table 8, the proposed YOLOv5-v1 model outperforms
    four other approaches. In particular, it achieves the highest mAP rate of 86.8%,
    indicating superior precision in detecting and counting fruits. Its detection
    speed is also acceptable at 0.015 s per picture, striking a balance between precision
    and efficiency. Moreover, it has a low model size of 12.70 MB and a moderate number
    of parameters (6.52 × 106), making it highly efficient in terms of computational
    resources. Consequently, the YOLOv5-v1 model demonstrates a significant advancement
    in fruit detection technology. It not only offers the highest mAP rate but also
    maintains a balance between detection speed and resource efficiency. This makes
    it particularly suitable for Industry 4.0 applications where precision, speed,
    and resource optimization are key factors. The YOLOv5-v1’s attributes align well
    with the demands of modern, intelligent sensor systems, marking it as a leading
    choice in the domain. In summary, the system’s performance was appraised using
    several criteria: (i) statistical metrics, including mAP in fruit detection, FPR,
    and FNR, and (ii) real-time video frame synchronization efficiency indicators,
    SSIM, and PSNR. The experiments validate the efficiency of YOLOv5-v1, underscored
    by an 86.8% mAP rate in fruit detection and counting. 4. Discussion This paper
    contributes to the field of intelligent sensors and advanced computing in the
    era of Industry 4.0 by expanding upon Reference [51] in the domain of digital
    agriculture, specifically focusing on the integration of UAVs and new data processing
    methods. The presented research outlines a novel approach for the dynamic capture
    of images using multiple UAVs, ensuring synchronization between different UAVs
    and autonomous movement. This is a considerable enhancement over the findings
    in [51], which relied on a single camera perspective and did not address the challenges
    of synchronizing data from multiple sources. Moreover, this study focuses on the
    development of a system that excels across various fruit varieties and orchard
    configurations and offers computational efficiency for real-time applications,
    which is crucial for digital agriculture. This focus on computational efficiency
    and adaptability to different environmental conditions is a notable improvement
    over the previous work, which mainly concentrated on enhancing precision in recognizing
    fruits on orchard trees. The core scientific novelty of this work lies in the
    deployment of a multi-UAV system for the dynamic capture and processing of orchard
    images in the domain of digital agriculture, which also contributes to the advancement
    of smart sensors and advanced computing in the Industry 4.0 era. This system ensures
    real-time data synchronization and autonomous movement, addressing the intricacies
    of managing multiple data sources and navigating orchard environments effectively.
    Another novelty that this study presents is the integration of advanced data processing
    methods, notably the YOLOv5-v1 model, which provides high precision in fruit detection
    and counting. The model’s robust performance under varying environmental conditions
    and its adaptability to different fruit varieties and orchard configurations demonstrate
    a prominent development compared to the existing methodologies. The proposed novelties
    enhance the efficiency and precision of orchard management and fit perfectly with
    the needs and challenges of modern digital agriculture, paving the way for more
    reliable and comprehensive agricultural solutions. All these described contributions
    align well with the core tenets of Industry 4.0, which emphasizes automation,
    data exchange, and manufacturing technologies. The empirical results of our system
    deployment are promising, with a mAP rate of 86.8% in fruit detection and counting,
    surpassing the existing analogs. False positive and negative rates under various
    environmental conditions were thoroughly assessed: 8% and 11.5% under sunny conditions,
    14.7% and 18.3% in cloudy weather, and 22.2% and 26.2% in shaded areas, respectively.
    These results demonstrate the system’s ability to identify and count fruits with
    a considerable degree of precision. The utilization of multiple UAVs allows for
    extensive orchard coverage, surpassing the limitations of single-UAV or conventional
    ground-based approaches. The strengths of the proposed approach lie in its capacity
    to dynamically capture and process images from numerous UAVs, ensuring real-time
    data synchronization and processing. This capability is crucial for the timely
    detection of fruits and is essential for efficient orchard management and harvest
    planning. Moreover, the integration of image quality optimization techniques mitigates
    common challenges in orchard environments, like variable lighting and obstructions
    from foliage. When compared to the state of the art, the proposed approach exhibits
    significant improvements in various aspects. Traditional manual counting methods
    are labor-intensive and error-prone, while existing automated systems often struggle
    with natural orchard complexities, such as uneven lighting and physical obstructions.
    Furthermore, various DCNN models currently employed in fruit detection face obstacles
    in terms of computational efficiency and environmental adaptability. In contrast,
    the proposed approach introduces a novel method for real-time video stream synchronization,
    one that is specifically designed to be resilient against these challenges. Despite
    the highlighted improvements, the authors acknowledge certain limitations. The
    performance of the YOLOv5-v1 model may be impacted by visual obstacles in orchards,
    such as the obscuring of fruits by foliage. The system’s reliability under extreme
    environmental conditions like heavy rain or fog has yet to be thoroughly examined.
    Moreover, the adaptability of this system across various fruit types and orchard
    configurations warrants further exploration. Nevertheless, the substantial achievements
    garnered through carrying out these experiments, including a high mAP rate, low
    error rates, and a compact model size under diverse conditions, underscore the
    robustness and potential of the YOLOv5-v1 model in enhancing orchard management.
    In comparison to previous studies in the field, the proposed approach introduces
    noteworthy advantages. The study by Mai et al. [34] presents a Faster R-CNN with
    classifier fusion for the automatic detection of small fruits. While their model
    offers a significant contribution to fruit detection technology, the proposed
    multi-UAV approach provides broader coverage and real-time data processing capabilities,
    which are crucial for comprehensive orchard management. Chu et al. [35] explore
    apple detection using a suppression Mask R-CNN. Their model achieves good performance
    in fruit detection, but the proposed YOLOv5-v1’s strength lies in the synchronized
    capture and processing of images from multiple UAVs, ensuring higher precision
    and efficiency. Biffi et al. [36] introduce an innovative ATSS DL-based approach
    for apple fruit detection. Conversely, our study aligns with the trajectory of
    employing DL techniques for fruit detection and extends it by integrating real-time
    video stream synchronization and tackling the challenges of environmental adaptability.
    Lastly, the study by Sun et al. [37] presents a lightweight algorithm for apple
    detection based on an improved YOLOv5 model that achieves an impressive detection
    speed of 0.013 s/pic. However, our approach complements this by offering a system
    that focuses not only on lightweight model architecture that detects fruits relatively
    rapidly in real-time processing but also achieves a higher detection accuracy
    (a mAP rate of 86.8% by YOLOv5-v1, compared to 81.7% by Sun et al.). In summary,
    the proposed multi-UAV imaging and DL approach for fruit recognition in orchards
    marks a significant improvement over the existing solutions. It offers high precision
    and real-time processing capabilities, aligning with the needs of modern digital
    agriculture. Nonetheless, addressing the challenges related to environmental conditions
    and enhancing system reliability will be essential for the broader implementation
    and success of this technology in the agricultural sector. 5. Conclusions In the
    innovative landscape of Industry 4.0, this study introduces a novel approach for
    real-time fruit detection and counting. A key advantage of the proposed approach
    is its ability to instantly collect and synchronize video footage from several
    UAV-mounted cameras, merging this footage into a single, coherent data structure
    that is subsequently transformed into an uninterrupted visual stream. By incorporating
    image quality improvement functions, our approach ensures the most effective identification
    of target objects during UAV operational tasks. The results of the study confirm
    the high efficiency of the introduced YOLOv5-v1, with a high mAP rate of 86.8%
    outperforming its analogs in fruit detection and counting. This is in addition
    to relatively low average error rates of 14.7% for FPR and 18.3% FNR obtained
    in typical cloudy weather, illustrating the capability of the proposed YOLOv5-v1
    to recognize apples within orchard environments effectively. The technique demonstrates
    strong video stream synchronization, as indicated by SSIM index values between
    0.45 and 0.91, averaging at 0.87, and PSNR index values from 27.2 to 39.1, which
    points to the excellent quality of the combined images. Nonetheless, overcoming
    the challenges posed by environmental factors and enhancing system reliability
    remain critical for the broader application and success of this technology in
    agriculture. Future research will be focused on improving the model’s resilience
    in adverse weather conditions, ensuring consistent performance across various
    environmental settings. Furthermore, the adaptability of the system to different
    types of fruits and orchard layouts is an appealing area of exploration to enhance
    its utility in diverse agricultural scenarios. This aligns with the overarching
    goals of Industry 4.0, where the integration of intelligent sensors and advanced
    computing systems is paramount in transforming traditional agricultural practices.
    Author Contributions Conceptualization, O.M. and O.S.; methodology, O.M., A.S.
    and O.S.; software, O.M. and L.S.; validation, O.M. and P.R.; formal analysis,
    O.S. and P.R.; investigation, O.M. and P.R.; resources, L.S. and P.R.; data curation,
    P.R.; writing—original draft preparation, O.M.; writing—review and editing, A.S.
    and P.R.; visualization, O.M. and P.R.; supervision, L.S. and A.S.; project administration,
    L.S. and A.S. All authors have read and agreed to the published version of the
    manuscript. Funding This research was partially funded by the Ministry of Education
    and Science of Ukraine, state grant registration number 0121U112025, project title
    “Development of information technology for making human-controlled critical and
    safety decisions based on mental-formal models of machine learning”. This publication
    reflects the views of the authors only, and the Ministry of Education and Science
    of Ukraine cannot be held responsible for any use of the information contained
    therein. Institutional Review Board Statement Not applicable. Informed Consent
    Statement Not applicable. Data Availability Statement The experimental data used
    to support the findings of this study are available from the corresponding author
    upon request. Conflicts of Interest The authors declare no conflicts of interest.
    Abbreviations The following abbreviations included in the text are reported alphabetically:
    AI Artificial Intelligence ATSS Adaptive Training Sample Selection CNN Convolutional
    Neural Network CSP Cross Stage Partial DCNN Deep Convolutional Neural Network
    DL Deep Learning FN False Negative FNR False Negative Rate FP False Positive FPR
    False Positive Rate FPN Feature Pyramid Network GNSS Global Navigation Satellite
    System GPS Global Positioning System IOU Intersection Over Union ISO International
    Organization for Standardization ML Machine Learning PSNR Peak Signal-To-Noise
    Ratio RGB Red, Green, Blue RTK Real-Time Kinematic SSIM Structural Similarity
    Index Measure TP True Positive TN True Negative UAV Unmanned Aerial Vehicle YOLO
    You Only Look Once Appendix A Appendix A describes in detail the method for dynamically
    capturing images of structural objects of a similar nature in a three-dimensional
    space. The method requires the step-by-step execution of several blocks that are
    presented below. Block 1: UAV group take-off to the first starting point. Step
    1.1. This block begins at the start of the predefined mission. The operational
    area for the group of UAVs, as defined by software, includes specific sub-areas
    determined by the initial and final points located within the perimeters of the
    designated fruit tree. The trajectory of the UAVs within the three-dimensional
    space is adjusted by modifying their positions within the software’s coordinate
    system. The fleet of UAVs then navigates toward the nearest fruit tree located
    in the current operational area. A graphical depiction of this type of flight
    is illustrated in Figure A1. Figure A1. A systematic procedure for orchard monitoring
    using multiple UAVs. Commencing at a defined starting point with received coordinates,
    UAVs perform dynamic image acquisition. Sequentially, the images are transmitted
    to the central system for object detection and operator analysis, which includes
    the counting of identifiable items. Upon completion, the UAVs proceed to a future
    target, as determined by the received data. This workflow culminates at the end
    point, marking the end of a data collection cycle. The verification of each UAV’s
    location within the software is a crucial step. It ensures that the physical positions
    of all UAVs in the fleet align with the predetermined software coordinates. Step
    1.2. The data gathered in step 1.1 is fed into the central module and all its
    subsystems. This process facilitates determining the operational statuses of all
    the system modules. Block 2. Compilation of video data by the UAV fleet in the
    target area. Step 2.1. Upon reaching the specified fruit tree, found according
    to the software’s coordinates, the UAV fleet generates an informational signal
    that is sent to the mission’s software. A critical procedure here is receiving
    a confirmation from the software system to turn on the video cameras of each UAV
    in the fleet. The extent of the area captured in the video stream is defined by
    the camera’s field of view on each UAV and any positional changes of the UAVs
    from the start to the end point, all located within the confines of the target
    fruit tree as defined in the software’s coordinate system. Step 2.2. Each UAV,
    with its camera now activated, begins transmitting a video stream to the central
    system. Step 2.3. The central system then processes the video data, and the information
    from step 2.2 is archived in the video stream database. Step 2.4. Upon reaching
    the end point at the target fruit tree, the UAV group coordination software sends
    a signal to turn off the cameras on all UAVs. Step 2.5. The mission management
    subsystem then confirms the deactivation of the cameras on each UAV and proceeds
    to physically power them down. Step 2.6. Following this process, an analysis of
    the survey results is conducted. The system determines the operational statuses
    necessary for transitioning to the next fruit tree target. Decisions regarding
    the ongoing operation of a UAV group, verification of the software mission’s integrity,
    and evaluation of the criticality level for the UAV group’s continued functioning
    are made by assessing the statuses of the software modules after completing Block
    2. The output of this method is a video stream that captures target objects within
    the fruit orchard. The procedure for generating video streams targeting a specific
    fruit tree is meticulously designed and encoded within a software subsystem. This
    software subsystem, which is tasked with dynamically acquiring images of the designated
    structural objects, operates based on a thorough integration of distribution requirements,
    a multi-tiered hierarchy, and automation. This ensures that the UAV group autonomously
    navigates from the starting to the ending points as defined by the software mission.
    Given that the task of generating data for counting these structural objects is
    intricate and demanding, this subsystem outlines and codifies the following distinct
    characteristics: Programmatic coordinate values for placement; Programmatic coordinate
    values for starting and ending points; Duration at the start and end points; Number
    of detected structural objects; Actual number of structural objects; Type and
    characteristics of the video camera forming the video stream. The data gathered
    from Block 2 informs the status and effectiveness of the UAV group’s operations
    within the active zone. If the software modules have successfully collected all
    the required attributes for continuing the mission, the subsystem overseeing the
    UAV group will issue a command to proceed to the next designated fruit tree. The
    acquisition of dynamic images within the working zone, specifically within the
    confines of the target fruit tree, is presumed to occur under optimal environmental
    conditions. As such, the spatial arrangement of the UAVs for mission execution
    around the fruit tree is established during the UAV group’s formation. A key aspect
    of their vertical positioning relates to the width of camera coverage, which may
    vary due to the inclusion of different UAV models within the group. Typically,
    the video camera’s field of view for targeting the fruit tree is set at around
    135 degrees. Figure A2 visually depicts how the UAV group executes its software
    mission within the operational zone surrounding the target fruit tree. Figure
    A2. The scheme of the UAV group operation in the work zone around the target fruit
    tree. The UAVs start from multiple positions, converging in a coordinated pattern
    over a tree. The flight paths are designed to cover an angle of approximately
    135 degrees around the tree, ensuring comprehensive visual data collection of
    the target fruit. This configuration allows for maximum spatial coverage, which
    is crucial for accurate and thorough structural object detection. While transitioning
    between different targeted work zones of fruit trees, the UAV cameras are temporarily
    switched off. This precaution is taken to ensure the integrity of the target video
    data. The mission is considered to be successfully completed within a work zone
    when the UAV group physically arrives at the end point of that specific segment.
    At this point, the system’s main module signals the UAV group management module
    to cease the video streaming process, marking the end of operations in that zone.
    The proposed methodologies for handling video data from individual work zones
    are structured for the collective processing of multiple fruit trees. This process
    relies on control and route planning subsystems. The creation of a multi-tiered,
    distributed software interface, integrated into a centralized system, facilitates
    the management of the UAV group and allows for immediate interaction with the
    system’s central module. This innovative approach enables the dynamic generation
    of images, thereby capturing specific structural objects within the working zone
    and the confines of the target fruit tree. Appendix B The operational procedure
    of this innovative method is illustrated in Figure A3. Figure A3. The schematic
    representation of an autonomous video management system of UAVs that highlights
    the synchronization of video streams, failure contingencies, and data recovery
    mechanisms. The system captures video streams from multiple UAVs, synchronizes
    them via an adjustment unit, and processes them for object detection and counting.
    The outcome is a consolidated count of structural objects, which is essential
    for precision agriculture analytics. Three main blocks of the system are marked
    with red numbers. Block 1: Video stream speed adjustment. As the UAV group undertakes
    its software-directed mission across various work zones, it generates video sequences
    that are transmitted to a software module designated for identifying and calculating
    the intended structural objects. These video sequences are received by the detection
    software module at differing intervals, due to factors such as network connectivity
    variability, the specific camera models used on the UAVs, and the UAVs’ traversal
    speed within the work zones, among others. In light of these variations in video
    stream movement within the operational environment, the speed adjustment function
    constructs a software framework. This framework integrates mechanisms for processing
    the speed of video stream transmissions and establishes capabilities for halting
    and retrieving video sequences. The transition of the video stream speed adjustment
    function into a “waiting” state ensures the simultaneous reception of video sequences
    from all UAVs. This software framework includes distinct characteristics for each
    UAV: (1) a unique identifier for the UAV, (2) the byte composition of the video
    frame, (3) the frame rate of the video sequence, (4) the timestamp of the video
    frame’s reception by the speed adjustment function from the UAV, and (5) the encoding
    format of the video frame. Upon completion, the speed adjustment function transitions
    to the “execution” state, forwarding the assembled set of software structures
    to the subsequent processing block. Block 2. Video stream time synchronization.
    This block operates based on the quantity of software structure sets that it receives
    from the prior block, adjusting the transmission speeds of the video streams.
    Its operations result in one of two scenarios: Step 2.1. If the count of the software
    structure sets received does not align with the total number of UAVs in operation,
    the synchronization block enters a critical state. Consequently, it initiates
    a request to retrieve the most recently stored data structure from a database
    block that keeps saved, merged video frames. Step 2.2. Upon the successful synchronization
    of video streams, the block transitions into the “frame extraction from video
    sequences” state, yielding a collection of software structures. These structures
    serve as the input for the subsequent video frame merging block. Block 3. Video
    frame merging. Initially, this block verifies that the creation times of the software
    data structure sets are consistent, ensuring the data’s integrity. Following this
    verification, the video frames undergo a series of transformations: Step 3.1.
    Conversion and adjustment. The byte set representing the dissected video frame
    is transformed into a file. Software mechanisms then scrutinize the file’s metadata
    to identify its distinctive features, such as file type, dimensions, color space,
    resolution, and channel depth. Step 3.1.1. A series of images derived from step
    3.1 is subjected to an angle adjustment through an affine transformation, aligning
    their geometric features. Step 3.1.2. The adjusted images are then forwarded to
    the software merging function. Step 3.2. Image merging. The cumulative efforts
    from the previous steps culminate in the creation of a single, unified image.
    Step 3.2.1. Given potential disparities in the exposure and depth of field across
    different frames, the merged image might exhibit graphical artifacts. To counter
    this, a specialized software filter is applied to smooth the transitions and maintain
    clarity at the edges. Step 3.2.2. The filtered frames are then compressed using
    a software mechanism. Step 3.2.3. This compression, which is also based on affine
    transformation, optimizes the image for structural object detection and computation,
    reducing its dimensions while preserving resolution and depth. Step 3.2.4. The
    software merging function receives the optimized video frames for final merging.
    Step 3.2.5. The merging process consolidates several video frames into a single,
    seamless image, represented as a matrix in the software data structure. Each matrix
    element corresponds to the color value of an individual pixel, collectively depicting
    a continuous view of the fruit tree. Step 3.2.6. The newly formed data are stored
    in an internal database of merged video frames. Finally, the matrix-based software
    data structure is sent to a dedicated software module for the detection and quantification
    of homogeneous structural objects. The workflow of the video frame merging block
    is detailed in Figure A4. Figure A4. The scheme of the video frame merging process.
    Here, UAVs capture multiple perspectives of a target tree, which are then storyboarded
    into video frames for comprehensive visual coverage. These frames undergo merging
    to create a contiguous visual dataset, followed by the automated detection and
    counting of structural objects, i.e., fruits on the tree. The process flow encapsulates
    the critical steps from image acquisition to data synthesis, ending with counting
    structural objects. If this block successfully completes the video frame merging
    process, it then yields an output in the form of a software data structure, represented
    as a color-coded matrix. The merging block has a built-in function that ensures
    system stability by storing the data in an internal database of merged video frames,
    even in cases of critical system failure. It should be also noted that a key benefit
    of the proposed method, when compared to the existing approaches, is its capability
    to store data from previous software missions. This feature enables users to perform
    immediate comparisons between current outcomes and historical data, enhancing
    the system’s utility and performance. Appendix C Table A1. An outline of the layers
    and hyperparameters of the YOLOv5-v1 neural network architecture. It details the
    configuration of various layers, including the number of filters, kernel sizes,
    strides, activation functions, and specialized parameters such as batch normalization
    and reduction ratios.     References Wijerathna-Yapa, A.; Pathirana, R. Sustainable
    agro-food systems for addressing climate change and food security. Agriculture
    2022, 12, 1554. [Google Scholar] [CrossRef] Lee, C.-C.; Zeng, M.; Luo, K. How
    does climate change affect food security? Evidence from China. Environ. Impact
    Assess. Rev. 2024, 104, 107324. [Google Scholar] [CrossRef] Kanike, U.K. Factors
    disrupting supply chain management in manufacturing industries. J. Supply Chain.
    Manag. Sci. 2023, 4, 1–24. [Google Scholar] [CrossRef] Buka, S.; Tkachuk, V.;
    Kondratiuk, V.; Tonkha, O.; Slobodyanyuk, N. Prospects for agribusiness in Ukraine
    over the next 5 years. Int. J. Environ. Stud. 2023, 80, 291–298. [Google Scholar]
    [CrossRef] Kalyta, O.; Barmak, O.; Radiuk, P.; Krak, I. Facial emotion recognition
    for photo and video surveillance based on machine learning and visual analytics.
    Appl. Sci. 2023, 13, 9890. [Google Scholar] [CrossRef] Medvedeva, Y.; Kucher,
    A.; Lipsa, J.; Hełdak, M. Human health risk assessment on the consumption of apples
    growing in urbanized areas: Case of Kharkiv, Ukraine. Int. J. Environ. Res. Public
    Health 2021, 18, 1504. [Google Scholar] [CrossRef] [PubMed] Outhwaite, C.L.; McCann,
    P.; Newbold, T. Agriculture and climate change are reshaping insect biodiversity
    worldwide. Nature 2022, 605, 97–102. [Google Scholar] [CrossRef] Xu, J.; Gu, B.;
    Tian, G. Review of agricultural IoT technology. Artif. Intell. Agric. 2022, 6,
    10–22. [Google Scholar] [CrossRef] Reddy Maddikunta, P.K.; Hakak, S.; Alazab,
    M.; Bhattacharya, S.; Gadekallu, T.R.; Khan, W.Z.; Pham, Q.-V. Unmanned aerial
    vehicles in smart agriculture: Applications, requirements, and challenges. IEEE
    Sens. J. 2021, 21, 17608–17619. [Google Scholar] [CrossRef] Radiuk, P.; Barmak,
    O.; Krak, I. An approach to early diagnosis of pneumonia on individual radiographs
    based on the CNN information technology. Open Bioinform. J. 2021, 14, 92–105.
    [Google Scholar] [CrossRef] Sardar, P.; Ema, R.R.; Kabir, S.S.; Adnan, M.N.; Galib,
    S.M. Severity stage identification and pest detection of tomato disease using
    deep learning. Int. J. Comput. 2023, 191–201. [Google Scholar] [CrossRef] Villacrés,
    J.; Viscaino, M.; Delpiano, J.; Vougioukas, S.; Auat Cheein, F. Apple orchard
    production estimation using deep learning strategies: A comparison of tracking-by-detection
    algorithms. Comput. Electron. Agric. 2023, 204, 107513. [Google Scholar] [CrossRef]
    Tsouros, D.C.; Triantafyllou, A.; Bibi, S.; Sarigannidis, P.G. Data acquisition
    and analysis methods in UAV-based applications for precision agriculture. In Proceedings
    of the 2019 15th International Conference on Distributed Computing in Sensor Systems
    (DCOSS), Santorini, Greece, 29–31 May 2019. [Google Scholar] [CrossRef] Popescu,
    D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana, C. Advanced UAV–WSN system
    for intelligent monitoring in precision agriculture. Sensors 2020, 20, 817. [Google
    Scholar] [CrossRef] Degieter, M.; De Steur, H.; Tran, D.; Gellynck, X.; Schouteten,
    J.J. Farmers’ acceptance of robotics and unmanned aerial vehicles: A systematic
    review. Agron. J. 2023, 115, 2159–2173. [Google Scholar] [CrossRef] Sachenko,
    A.; Kochan, V.; Turchenko, V. Instrumentation for gathering data [DAQ Systems].
    IEEE Instrum. Meas. Mag. 2003, 6, 34–40. [Google Scholar] [CrossRef] Zhang, C.;
    Valente, J.; Kooistra, L.; Guo, L.; Wang, W. Orchard management with small unmanned
    aerial vehicles: A survey of sensing and analysis approaches. Precis. Agric. 2021,
    22, 2007–2052. [Google Scholar] [CrossRef] Rizzo, M.; Marcuzzo, M.; Zangari, A.;
    Gasparetto, A.; Albarelli, A. Fruit ripeness classification: A survey. Artif.
    Intell. Agric. 2023, 7, 44–57. [Google Scholar] [CrossRef] Naranjo-Torres, J.;
    Mora, M.; Hernández-García, R.; Barrientos, R.J.; Fredes, C.; Valenzuela, A. A
    review of convolutional neural network applied to fruit image processing. Appl.
    Sci. 2020, 10, 3443. [Google Scholar] [CrossRef] Sun, Y.; Fesenko, H.; Kharchenko,
    V.; Zhong, L.; Kliushnikov, I.; Illiashenko, O.; Morozova, O.; Sachenko, A. UAV
    and IoT-based systems for the monitoring of industrial facilities using digital
    twins: Methodology, reliability models, and application. Sensors 2022, 22, 6444.
    [Google Scholar] [CrossRef] [PubMed] Awais, M.; Li, W.; Cheema, M.J.M.; Zaman,
    Q.U.; Shaheen, A.; Aslam, B.; Zhu, W.; Ajmal, M.; Faheem, M.; Hussain, S.; et
    al. UAV-based remote sensing in plant stress imagine using high-resolution thermal
    sensor for digital agriculture practices: A meta-review. Int. J. Environ. Sci.
    Technol. 2023, 20, 1135–1152. [Google Scholar] [CrossRef] Lambertini, A.; Mandanici,
    E.; Tini, M.A.; Vittuari, L. Technical challenges for multi-temporal and multi-sensor
    image processing surveyed by UAV for mapping and monitoring in precision agriculture.
    Remote Sens. 2022, 14, 4954. [Google Scholar] [CrossRef] Skorobogatov, G.; Barrado,
    C.; Salamí, E. Multiple UAV systems: A survey. Un. Sys. 2020, 8, 149–169. [Google
    Scholar] [CrossRef] Shi, K.; Zhang, X.; Xia, S. Multiple swarm fruit fly optimization
    algorithm based path planning method for multi-UAVs. Appl. Sci. 2020, 10, 2822.
    [Google Scholar] [CrossRef] Khan, S.; Tufail, M.; Khan, M.T.; Khan, Z.A.; Iqbal,
    J.; Wasim, A. A novel framework for multiple ground target detection, recognition
    and inspection in precision agriculture applications using a UAV. Un. Sys. 2022,
    10, 45–56. [Google Scholar] [CrossRef] Su, J.; Zhu, X.; Li, S.; Chen, W.-H. AI
    meets UAVs: A survey on AI empowered UAV perception systems for precision agriculture.
    Neurocomputing 2023, 518, 242–270. [Google Scholar] [CrossRef] Li, H.; Xie, X.;
    Du, P.; Xi, J. Cooperative object recognition method of multi-UAVs based on decision
    fusion. In Proceedings of the 2021 33rd Chinese Control and Decision Conference
    (CCDC), Kunming, China, 22–24 May 2021. [Google Scholar] [CrossRef] Chen, R.;
    Zhang, C.; Xu, B.; Zhu, Y.; Zhao, F.; Han, S.; Yang, G.; Yang, H. Predicting individual
    apple tree yield using UAV multi-source remote sensing data and ensemble learning.
    Comput. Electron. Agric. 2022, 201, 107275. [Google Scholar] [CrossRef] Bate,
    J.R.R.T. Applying Deep Learning to Estimate Fruit Yield in Agriculture 4.0 Systems.
    Master’s Thesis, NOVA University Lisbon, Lisbon, Portugal, 2022. [Google Scholar]
    Wang, C.; Liu, S.; Wang, Y.; Xiong, J.; Zhang, Z.; Zhao, B.; Luo, L.; Lin, G.;
    He, P. Application of convolutional neural network-based detection methods in
    fresh fruit production: A comprehensive review. Front. Plant Sci. 2022, 13, 868745.
    [Google Scholar] [CrossRef] Mao, D.; Sun, H.; Li, X.; Yu, X.; Wu, J.; Zhang, Q.
    Real-time fruit detection using deep neural networks on CPU (RTFD): An edge AI
    application. Comput. Electron. Agric. 2023, 204, 107517. [Google Scholar] [CrossRef]
    Bodyanskiy, Y.; Deineko, A.; Skorik, V.; Brodetskyi, F. Deep neural network with
    adaptive parametric rectified linear units and its fast learning. Int. J. Comput.
    2022, 21, 11–18. [Google Scholar] [CrossRef] Tu, S.; Pang, J.; Liu, H.; Zhuang,
    N.; Chen, Y.; Zheng, C.; Wan, H.; Xue, Y. Passion fruit detection and counting
    based on multiple scale Faster R-CNN using RGB-D Images. Precis. Agric. 2020,
    21, 1072–1091. [Google Scholar] [CrossRef] Mai, X.; Zhang, H.; Jia, X.; Meng,
    M.Q.-H. Faster R-CNN with classifier fusion for automatic detection of small fruits.
    IEEE Trans. Autom. Sci. Eng. 2020, 17, 1555–1569. [Google Scholar] [CrossRef]
    Chu, P.; Li, Z.; Lammers, K.; Lu, R.; Liu, X. Deep learning-based apple detection
    using a suppression Mask R-CNN. Pattern Recognit. Lett. 2021, 147, 206–211. [Google
    Scholar] [CrossRef] Biffi, L.J.; Mitishita, E.; Liesenberg, V.; dos Santos, A.A.;
    Gonçalves, D.N.; Estrabis, N.V.; de Silva, J.A.; Osco, L.P.; Ramos, A.P.M.; Centeno,
    J.A.S.; et al. ATSS deep learning-based approach to detect apple fruits. Remote
    Sens. 2021, 13, 54. [Google Scholar] [CrossRef] Sun, Y.; Zhang, D.; Guo, X.; Yang,
    H. Lightweight algorithm for apple detection based on an improved YOLOv5 model.
    Plants 2023, 12, 3032. [Google Scholar] [CrossRef] Zheng, Z.; Xiong, J.; Wang,
    X.; Li, Z.; Huang, Q.; Chen, H.; Han, Y. An efficient online citrus counting system
    for large-scale unstructured orchards based on the unmanned aerial vehicle. J.
    Field Robot. 2023, 40, 552–573. [Google Scholar] [CrossRef] Welch, G.F. Kalman
    filter. In Computer Vision: A Reference Guide; Springer International Publishing:
    Cham, Switzerland, 2020; pp. 1–3. [Google Scholar] [CrossRef] Gabrovšek, B.; Novak,
    T.; Povh, J.; Rupnik Poklukar, D.; Žerovnik, J. Multiple Hungarian method for
    K-assignment problem. Mathematics 2020, 8, 2050. [Google Scholar] [CrossRef] Ghorbani,
    H. Mahalanobis distance and its application for detecting multivariate outliers.
    Facta Univ. Ser. Math. Inform. 2019, 34, 583–595. [Google Scholar] [CrossRef]
    Technical Committee: ISO/TC 42. ISO 12232:2019; Photography—Digital still Cameras—Determination
    of Exposure Index, ISO Speed Ratings, Standard Output Sensitivity, and Recommended
    Exposure Index. International Organization for Standardization: Geneva, Switzerland,
    2019. Grandini, M.; Bagli, E.; Visani, G. Metrics for multi-class classification:
    An overview. arXiv 2020, arXiv:2008.05756. [Google Scholar] [CrossRef] Dempsey,
    P. Reviews consumer technology: The teardown: Apple IPhone Pro 13 smartphone.
    Eng. Technol. 2021, 16, 68–69. [Google Scholar] [CrossRef] Langer, P.; Fleisch,
    E.; Barata, F. CLAID: Closing the loop on AI & data collection—A cross-platform
    transparent computing middleware framework for smart edge-cloud and digital biomarker
    applications. arXiv 2023, arXiv:2310.05643. [Google Scholar] [CrossRef] Mishra,
    A. Amazon Sagemaker. In Machine Learning in the AWS Cloud: Add Intelligence to
    Applications with Amazon Sagemaker and Amazon Rekognition; John Wiley & Sons:
    Hoboken, NJ, USA, 2019; pp. 353–385. ISBN 978-1-119-55671-8. [Google Scholar]
    Paszke, A.; Gross, S.; Massa, F.; Lerer, A.; Bradbury, J.; Chanan, G.; Killeen,
    T.; Lin, Z.; Gimelshein, N.; Antiga, L.; et al. PyTorch: An imperative style,
    high-performance deep learning library. In Proceedings of the Advances in Neural
    Information Processing Systems (NeurIPS 2019), Vancouver, BC, Canada, 8–14 December
    2019; Wallach, H., Larochelle, H., Beygelzimer, A., Alché-Buc, F., Fox, E., Garnett,
    R., Eds.; Curran Associates, Inc.: Red Hook, NY, USA; 2019; Volume 32, pp. 8024–8035.
    [Google Scholar] Al Ghadani, A.K.A.; Mateen, W.; Ramaswamy, R.G. Tensor-based
    CUDA optimization for ANN inferencing using parallel acceleration on embedded
    GPU. In Artificial Intelligence Applications and Innovations; Maglogiannis, I.,
    Iliadis, L., Pimenidis, E., Eds.; Springer International Publishing: Cham, Switzerland,
    2020; Volume 583, pp. 291–302. [Google Scholar] Gollapudi, S. OpenCV with Python.
    In Learn Computer Vision Using OpenCV: With Deep Learning CNNs and RNNs; Gollapudi,
    S., Ed.; Apress: Berkeley, CA, USA, 2019; pp. 31–50. [Google Scholar] [CrossRef]
    Horé, A.; Ziou, D. Image quality metrics: PSNR vs. SSIM. In Proceedings of the
    2010 20th International Conference on Pattern Recognition (ICPR-2010), Istanbul,
    Turkey, 23–26 August 2010. [Google Scholar] [CrossRef] Melnychenko, O.; Savenko,
    O.; Radiuk, P. Apple detection with occlusions using modified YOLOv5-v1. In Proceedings
    of the 12th IEEE International Conference on Intelligent Data Acquisition and
    Advanced Computing Systems: Technology and Applications (IDAACS’2023), Dortmund,
    Germany, 7–9 September 2023. [Google Scholar] [CrossRef]                       Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2024 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Melnychenko, O.; Scislo, L.; Savenko, O.; Sachenko,
    A.; Radiuk, P. Intelligent Integrated System for Fruit Detection Using Multi-UAV
    Imaging and Deep Learning. Sensors 2024, 24, 1913. https://doi.org/10.3390/s24061913
    AMA Style Melnychenko O, Scislo L, Savenko O, Sachenko A, Radiuk P. Intelligent
    Integrated System for Fruit Detection Using Multi-UAV Imaging and Deep Learning.
    Sensors. 2024; 24(6):1913. https://doi.org/10.3390/s24061913 Chicago/Turabian
    Style Melnychenko, Oleksandr, Lukasz Scislo, Oleg Savenko, Anatoliy Sachenko,
    and Pavlo Radiuk. 2024. \"Intelligent Integrated System for Fruit Detection Using
    Multi-UAV Imaging and Deep Learning\" Sensors 24, no. 6: 1913. https://doi.org/10.3390/s24061913
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations No citations
    were found for this article, but you may check on Google Scholar Article Access
    Statistics Article access statistics Article Views 16. Mar 18. Mar 20. Mar 22.
    Mar 24. Mar 26. Mar 28. Mar 30. Mar 1. Apr 3. Apr 5. Apr 7. Apr 0 100 200 300
    400 500 600 For more information on the journal statistics, click here. Multiple
    requests from the same IP address are counted as one view.   Sensors, EISSN 1424-8220,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Intelligent Integrated System for Fruit Detection Using Multi-UAV Imaging
    and Deep Learning †
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Langer G.
  - Schulze H.
  - Kühl S.
  citation_count: '0'
  description: The digitalization of agriculture is on the rise, and while the dairy
    industry is not considered a leader in digitalization, more and more technologies
    have been developed in recent years. In particular, monitoring the health of dairy
    cows is becoming increasingly digital with Internet of Things (IoT) technologies.
    IoT-based sensors can potentially support efficient dairy production while enabling
    better animal welfare. Against this background, the question of technology acceptance
    among dairy farmers is becoming increasingly important. It is evident that acceptance,
    especially in the area of IoT-based dairy sensors, has only been sporadically
    researched, with behavioral factors rarely considered. Acceptance research has
    predominantly focused on a technological perspective or has been limited to operational
    and socio-demographic factors, thus failing to capture the entire acceptance process.
    Based on this, the aim of the paper is to identify prevailing acceptance barriers
    and examine whether cognitive and affective influencing factors, combined into
    a single behavioral model, can explain the acceptance, and therewith precondition
    for adoption, of IoT-based animal sensors. For this purpose, an online survey
    was conducted among 212 German dairy farmers. The analysis included a partial
    least squares estimation of the behavioral model. The results show that acceptance
    barriers differ between users and non-users of IoT-based sensors. However, both
    groups consider high investment costs as the most important barrier. Furthermore,
    the results indicate that both cognitive factors and positive anticipated emotions
    influence acceptance decisions. Additionally, the main determinants of the theory
    of planned behavior, namely attitude and behavioral control, have a positive influence
    on the desire to use IoT-based animal sensors. Ultimately, this has a positive
    impact on the acceptance. The results emphasise that, in addition to the technical
    requirements and cognitive attitudes, emotional factors are relevant for the acceptance
    of IoT-based animal sensors among dairy farmers. These findings are important
    for manufacturers, policy and agricultural and digital associations.
  doi: 10.1016/j.atech.2024.100404
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords Introduction Materials and methods Results
    Discussion Conclusion and further research areas CRediT authorship contribution
    statement Declaration of competing interest Appendix Data availability References
    Show full outline Figures (3) Tables (7) Table 1 Table 2 Table A1 Table A2 Table
    A3 Table A4 Show all tables Smart Agricultural Technology Volume 7, March 2024,
    100404 From intentions to adoption: Investigating the attitudinal and emotional
    factors that drive IoT sensor use among dairy farmers Author links open overlay
    panel Greta Langer a, Holger Schulze b, Sarah Kühl a Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.atech.2024.100404 Get rights and content
    Under a Creative Commons license open access Highlights • High investment cost
    for IoT animal sensors is a major barrier to adoption. • Non-users evaluate the
    acceptance barriers more critically than IoT sensor users. • Dairy farmers'' acceptance
    is influenced by desire and cognitive behavioral factors. • Positive emotions
    are a key determinant of dairy farmers'' desire to adopt IoT-based animal sensors.
    Abstract The digitalization of agriculture is on the rise, and while the dairy
    industry is not considered a leader in digitalization, more and more technologies
    have been developed in recent years. In particular, monitoring the health of dairy
    cows is becoming increasingly digital with Internet of Things (IoT) technologies.
    IoT-based sensors can potentially support efficient dairy production while enabling
    better animal welfare. Against this background, the question of technology acceptance
    among dairy farmers is becoming increasingly important. It is evident that acceptance,
    especially in the area of IoT-based dairy sensors, has only been sporadically
    researched, with behavioral factors rarely considered. Acceptance research has
    predominantly focused on a technological perspective or has been limited to operational
    and socio-demographic factors, thus failing to capture the entire acceptance process.
    Based on this, the aim of the paper is to identify prevailing acceptance barriers
    and examine whether cognitive and affective influencing factors, combined into
    a single behavioral model, can explain the acceptance, and therewith precondition
    for adoption, of IoT-based animal sensors. For this purpose, an online survey
    was conducted among 212 German dairy farmers. The analysis included a partial
    least squares estimation of the behavioral model. The results show that acceptance
    barriers differ between users and non-users of IoT-based sensors. However, both
    groups consider high investment costs as the most important barrier. Furthermore,
    the results indicate that both cognitive factors and positive anticipated emotions
    influence acceptance decisions. Additionally, the main determinants of the theory
    of planned behavior, namely attitude and behavioral control, have a positive influence
    on the desire to use IoT-based animal sensors. Ultimately, this has a positive
    impact on the acceptance. The results emphasise that, in addition to the technical
    requirements and cognitive attitudes, emotional factors are relevant for the acceptance
    of IoT-based animal sensors among dairy farmers. These findings are important
    for manufacturers, policy and agricultural and digital associations. Previous
    article in issue Next article in issue Keywords IoT-based sensorsGerman dairy
    farmingBarriers to acceptanceAffective and cognitive factorsStructural equation
    modeling Introduction The digital transformation in agriculture has been developing
    rapidly in several different sectors in recent years, with particularly rapid
    development in the field of agricultural robotics [1,2]. Smart farming technologies
    promise new farming practices designed to allow farmers to farm efficiently while
    achieving more sustainable production [1], [2], [3]. They further are expected
    to minimize resource inputs and manual work while simultaneously increase animal
    welfare [4]. However, while the fundamental importance of digitalization for agriculture
    is widely recognized, there is still some uncertainty about its actual effects
    and implications for a more efficient and sustainable production, e.g. due to
    inaccuracies or undesired impacts on farmers, animals, and society [5], [6], [7],
    [8]. Moreover, in the past two decades, the diffusion of smart farming technologies
    has occurred mainly in arable farming rather than in livestock production [3,9,10].
    However, high potential for the future distribution of smart livestock technologies
    has been predicted [11]. In terms of efficiency and animal welfare, Internet of
    Things (IoT) sensors, as a part of smart farming technologies, in particular are
    expected to play an important role in livestock production [2,12]. IoT acts to
    bridge virtual and physical domains, with a focus on wireless communication through
    smart products such as sensors. These IoT-based sensors typically utilize both
    local and global network infrastructures, facilitating wireless connectivity and
    enabling fully autonomous operation of IoT systems [10,13,14]. Examples of IoT-
    based sensors in dairy farming include collar sensors that allow monitoring of
    individual animal behavior, lameness detectors that can detect lameness in cows
    in real time, or rumen sensors that measure temperature, dairy cow movement, and
    digestive activity. Those IoT technologies are designed to optimize resource use,
    increase milk yield, and monitor animal behavior and health [10,15]. It is proven
    that such technologies can better detect lameness compared to farmers [16] and
    could therefore be an important information tool for the health status of animals
    not only for farmers but also for veterinarians or farm consultants [17]. In addition,
    it shall be possible to better understand the animals’ behavior and therewith
    increase the assessment of the animals’ welfare [18]. Thus, various stakeholders
    expect IoT-based animal sensors to improve dairy production, as good animal health,
    the well-being of the cows, and sustainable milk production are crucial for the
    future viability of dairy farms [13,19]. However, there is still a lack of knowledge
    about how the use of digital technologies actually affects animal welfare and
    how valuable the actual benefits are for the farmer. Nevertheless, the use of
    IoT, or digitalization is often presented by politicians, agricultural associations
    and industrial companies as a \"panacea\" for achieving sustainable animal husbandry
    while at the same time fulfilling societal demands for greater animal welfare
    and resource protection [20]. So far, there are (e.g. socio-ethical) concerns
    about the use of IoT technologies, and Barret and Rose [21] and Lajoie-O''Malley
    et al. [22] argue that digitalization alone is not a universal solution for achieving
    a more sustainable and resilient agriculture. Furthermore, the diffusion of IoT-based
    sensors in dairy farms is rather heterogeneous. While certain sensors are hardly
    used, others are adopted by a significant number of farmers [10,18,19,23]. Bianchi
    et al. [24] observed that dairy farmers using IoT technologies frequently use
    sensors to measure activity (70 %) or milk quantity or composition (60 %). Sensors
    for lameness detection are rarely used (<20 %) but are unknown to many (>20 %).
    The actual adoption of IoT-based animal sensors seems relatively heterogeneous
    [23,24]. This might be due to the fact that the acceptance process is a dynamic
    and complex process, which is also described as an individual acceptance journey
    or a \"flow of different acceptance levels\" [25]. Acceptance is thus a volatile
    concept that can fluctuate over time and in different situations, influenced by
    changing contextual factors, perceptions and socially conditioned aspects, whereby
    the construct of acceptance always precedes actual use. Thus, the fundamental
    prerequisite for the adoption of IoT-based sensors is the acceptance of their
    potential users [26]. Previous research has mainly focused on farm characteristics
    such as livestock numbers, milk yield or socio-demographic factors of livestock
    farmers [27], [28], [29] and tried to explain the adoption of technologies mainly
    through economic considerations [30]. However, the decision to accept and use
    digital tools is also a behavioral process that involves both cognitive and affective
    factors [31]. Although this \"emotional uplift\" has been identified as a major
    influencing factor in other acceptance contexts [32,33], there is a lack of knowledge
    about how acceptance and actual use of IoT-based sensors are influenced by affective
    and cognitive factors [28,30,33]. A recent study has agreed that the acceptance
    process of digital systems in general is mainly due to a multifactorial uncertainty
    regarding innovative systems [34]. The debated entry barriers include uncertainty
    relating to the performance/reliability and profitability/costs of the sensors
    as well as insufficient compatibility of the sensors with other systems or understanding
    of the generated data [e.g., 24,33,35]. Increasingly, farmers wait for improved
    versions and postpone investment decisions [10,36]. This is also due to an information
    overload that hampers adoption decision-making, as Russell and Bewley [37] discovered.
    However, it remains unclear to what extent a behavioral perspective is relevant
    to the acceptance and adoption of IoT-based sensors among dairy farmers [38] and
    whether potential barriers to acceptance exist in the area of IoT health monitoring
    that may hinder adoption of these systems. Based on this, the following research
    questions can be formulated: (1) What are barriers to acceptance in the context
    of IoT health monitoring among dairy farmers? (2) Which cognitive and affective
    influencing factors determine the acceptance of dairy farmers for the use of IoT-based
    sensors in the health monitoring of dairy cows? In this study, two specific examples
    of IoT-based animal sensors are employed for this purpose, namely, rumen and collar
    sensors, which are used for health monitoring to detect deviations in the health
    status of dairy cows. Both types of sensors are commercially available [39]. Materials
    and methods Conceptual framework and hypothesis derivation A quantitative assessment
    of technology acceptance factors was applied utilizing a numerical approach. Essentially,
    a differentiation exists between conceptual and numerical models, where numerical
    methodologies are typically derived from conceptual models, aiming to quantify
    the variables and the robustness of the relationships outlined in the conceptual
    model [26]. In the course of acceptance research in agriculture, many models with
    different emphases were developed, considering various influencing factors and
    mechanisms of action and both conceptual and numerical. Davis''s [40] Technology
    Acceptance Model (TAM), which was developed for information technologies at that
    time, is referred to as one of the most important theoretical models for acceptance
    research in this context. The model was conceived with the purpose of illustrating
    the process through which (potential) users embrace and put technology into practical
    use. It is grounded in the theoretical premise that three primary factors (perceived
    usefulness, perceived ease of use, attitude towards use) play a pivotal role in
    shaping the decision to accept. Due to its predictive design, the TAM includes
    the acceptance factor as a behavioral intention and thus as a precursor to active
    use [28,41]. This assumption also applies to the present paper. However, since
    decisions about the acceptance and use of digital tools should be understood as
    complex behavioral processes [33], the present research combines the TAM with
    the Theory of Planned Behavior (TPB) in order to be able to complement the behavioral
    factors [42]. The TPB is a widely applicable theory used to predict and provide
    insight into behavior. It was originally formulated to explain behavior that is
    under complete, voluntary control [42]. The TAM-TPB linkage is supported by Davis
    [42] himself, with the justification of including the behavioral determinants
    that are missing in the TAM [23,43]. Several studies confirm that emotions act
    as reliable predictors of behavioral expectations [33,44,45]. In order to include
    the influencing factor of emotions, further model adaptation is required in the
    context of the present research project. However, TPB is often criticized for
    neglecting emotions [46], [47], [48], [49]. The Model of Goal-Directed Behavior
    (MGB) extends the TPB to include the \"emotional uplift\" by adding two constructs
    of positive and negative anticipated emotions [49]. Perugini and Bagozzi [49]
    argue that individuals consider the emotional consequences of achieving or not
    achieving their goals before performing a specific behavior. Since the TPB does
    not provide propositions about how to stimulate intention either, another construct,
    desire, is added as the most proximal determinant of utility intention [49]. The
    role of desire in predicting intention is hypothesized to be the strongest predictor
    of intention due to the motivational content of the construct [49]. In this context,
    desire is only slightly action-related compared to intention to use and arises
    over a longer period of time [50]. The combination of the three models TAM, TPB,
    and MGB has already been empirically tested by Landmann et al. [33] and offers
    a valid and reliable basis from the research point of view, which is why the behavioral
    model (see Fig. 1), with content adaptation, is applied for the research context.
    Download : Download high-res image (372KB) Download : Download full-size image
    Fig. 1. Research model combining the TAM [40], TPB [52] and MGB [33,49]. Final
    model and hypothesis Consistent with the TPB, the most important behavioral determinants
    in the research framework are attitude, subjective norm, and behavioral control
    (see Fig. 1). However, in the present research model, they only indirectly influence
    acceptance or intention to use [33]. According to Perugini and Bagozzi [49], desire
    is a stronger predictor of intention than the three TPB determinants, and according
    to Armitage and Conner [48], attitude, subjective norm, and behavioral control
    explain significantly more variance in desires than in intentions [47,50]. According
    to the TPB-TAM combination [33,43,51], the three behavioral determinants are in
    turn influenced by three different types of beliefs. According to Ajzen [52],
    these are attitudinal beliefs, normative beliefs, and control beliefs. Attitudinal
    beliefs are thereby derived from the TAM model. Attitude encompasses the degree
    of general endorsement of a particular technology, in this example IoT sensors,
    from the individual''s perspective [52]. H1: Attitude has a positive effect on
    the desire to use IoT sensors. It is assumed that there is a relationship between
    perceived usefulness, perceived ease of use, and attitude toward using IoT sensors
    [42,51]. All in all, the following hypotheses can be formed: H1a: The perceived
    usefulness of IoT sensors has a positive effect on attitude. H1b: The perceived
    ease of use of IoT sensors has a positive effect on attitude. Subjective norm
    comprises the role of social pressure from the environment regarding the performance
    of a particular behavior. In this study, the subjective norm is described as the
    individual farmer''s perception of what his environment thinks about the use of
    IoT sensors [33,50,52]. H2: Subjective norm has a positive effect on the desire
    to use IoT sensors. The normative beliefs can be quite different because different
    influencing groups may have different views [40,50]. It is assumed that other
    farmers'' readiness on the one hand and agricultural advisors’ readiness on the
    other hand positively influence the subjective norm [51,53]. Agricultural advisors
    are becoming increasingly important in agricultural practice, especially in the
    process of obtaining information on innovative technologies [54,55]. Therefore,
    the following hypotheses can be formulated: H2a: Other Farmers'' perceived readiness
    has a positive effect on the subjective norm. H2b: The perceived readiness of
    agricultural advisors has a positive influence on the subjective norm. Perceived
    behavioral control is defined as a person''s subjective perception of their ability
    to perform a particular behavior [49]. This type of self-assessment goes beyond
    personal capabilities and resources such as education, experience, and income
    [33]. In the specific context, behavioral control reflects the perception of one''s
    control over the functionality of the IoT sensor [23,33]. Considering this, the
    following hypotheses can be formulated: H3: Perceived behavioral control has a
    positive effect on the intention to use IoT sensors. However, control beliefs
    imply a person''s self-confidence to perform a certain behavior [51,52]; in this
    context, it describes farmers'' confidence in their own abilities to use IoT sensors
    correctly. The following hypothesis will be tested: H3a: Perceived self-confidence
    has a positive effect on the behavioral control. In agreement with Perugini and
    Bagozzi [49], it can be assumed that \"desire\", as a motivational impulse, has
    a direct influence on behavioral intention. Accordingly, the hypothesis is as
    follows: H4: The desire has a positive influence on the intention to use IoT sensors.
    According to the MGB model, positive and negative emotions are included as direct
    predictors on desire: H5a: Positive anticipated emotions have a positive influence
    on desire. H6a: Negative expected emotions have a negative influence on desire.
    Different from the MGB approach, the present research model follows the further
    influence of emotions based on Landmann et al. [33], who highlighted in their
    study that emotions not only influence desire but can additionally have an impact
    on intention to use. Emotions can have a great influence on human behavioral decisions,
    either directly or indirectly [55]. Positive emotions are thought to be associated
    with goal achievement and decision persistence, whereas negative emotions are
    associated with failure, and thus a particular behavioral intention is not pursued
    [[56], [57]]. With this in mind, the following hypotheses will be tested: H5b:
    Positive anticipated emotions have a positive influence on the intention to use
    IoT sensors. H6b: Negative expected emotions have a negative influence on the
    intention to use IoT sensors. Finally, not only the intention to use or the acceptance
    but also the actual use of IoT-based sensors in health monitoring are investigated.
    Since IoT- based sensors are already a usable technology and are available for
    purchase on the market, it is appropriate to investigate their actual use. According
    to the TPB and the TAM [40,52], the target construct is the actual usage behavior.
    In the following, however, actual usage behavior is not considered as a dummy
    variable [40] but as an ordinal variable that measures the frequency of the farmers
    use of the IoT sensors data, as also assumed in the research of Michels et al.
    [30] and Schukat and Heise [58]. The following hypothesis can be formulated: H7:
    The intention to use IoT sensors on farms has a positive influence on the frequency
    of use. Data collection and statistical testing Based on the conceptual framework,
    an online survey was conducted with dairy farmers in Germany at the beginning
    of 2022. Dairy Farmers were found through various channels, such as the Lower
    Saxony Chamber of Agriculture, social media, channels, and practical-oriented
    journals. Due to the sampling method and that farmers participation was voluntary,
    there will likely be a self-selection bias in the sample. The sample is further
    not representative for the entirety of German dairy farmers (see Section 3.1 and
    Table 1). The standardized online questionnaire was divided into different sections
    and contained questions on farm and socio-demographic characteristics as well
    as on potential barriers to acceptance and the basic perception of digitization
    in agriculture. Respondents were given a short information on IoT health monitoring
    sensors and two specific examples (rumen and collar sensor) before stating their
    agreement to statements referring to the attitude toward and usage of IoT sensors.1
    It was emphasized at the outset of the survey that all questions and items explicitly
    pertain to the two IoT sensors employed in the health monitoring of dairy cows.
    Almost all statements then referred to IoT sensors in general, rather than repeatedly
    mentioning the two specific sensors presented earlier. Only in the statements
    on desire and emotions was an additional remark made about improving health. The
    online questionnaire was pretested (n = 18) in terms of comprehensibility and
    technical procedure by experts from the field of agricultural economics research
    as well as with farmers. Questions on influencing factors were based entirely
    on existing literature [e.g. 40,59,60] (see detail in appendix Table A5). Most
    questions were measured on five-point Likert scales (from 1=strongly agree to
    5=strongly disagree). Alternative response options ranged from 1=several times
    a day to 5=never or 1=very critical to 5=very uncritical; these were used to measure
    usage behavior or barriers to acceptance. The evaluation of the sociodemographic
    and operational characteristics and the descriptive analysis were carried out
    using the statistical program SPSS IBM 27. Table 1. Characteristics of the sample
    (n = 212) compared to the average of the total German dairy farm owner population.
    Attribute Description Sample German Average1 Gender Male Female Diverse 73.1 %
    26 9 % 0 % 64.0 % 36.0 % NA Age Farmers age in years 45 53 Education University
    degree 28.7 % 14.0 % Farm system Conventional Organic Hybrid/converting from conventional
    to organic 80.2 % 17.0 % 2.8 % 94.0 % 6.0 % NA Herdsize <50 50–199 ≥200 dairy
    cows 16.5 57.1 26.4 70 cows per farms Milk yield in kg/cow/year 9223 8488 Housing
    system loose housing without yard loose housing with yard and/or pasture access
    39.6 % 57.1 % 83.0 % (loose housing system in general) 1 Sources: [71], [72],
    [73]. NA= not available. The measurement model was estimated using the partial
    least squares (PLS) method. This method is suitable for computing complex and
    exploratory models and measuring relationships between latent constructs [61],
    [62], [63]. The PLS technique represents a combination of principal components,
    path, and regression analyses [64]. A systematic approach is followed in the evaluation:
    first, the measurement model is evaluated (outer model), then, in a second step,
    the structural model is estimated (inner model) [63]. This statistical analysis
    was performed using the Smart-PLS 3 program [65]. The reliability of the indicators
    in the reflectively specified measurement model was checked by the indicator loadings
    on the particular construct. The loadings should be greater than 0.7 but must
    exceed the minimum value of 0.4 [63]. Internal consistency reliability is achieved
    when the reliability value is greater than 0.7 [66] and Cronbach''s alpha values
    are greater than 0.6 [67]. Convergence validity is captured by the average variance
    (AVE), which should be greater than 0.5 [63]. Discriminant validity describes
    the extent to which constructs differ from other constructs. In the present study,
    discriminate validity is measured using the heterotrait-monotrait criterion (HTMT).
    HTMT values above 0.90 indicate a lack of discriminant validity [63,68]. In the
    second step, the collinearity of the internal structural model was tested via
    the variance inflation factor, which must be below the value 5 [68]. The test
    of predictive validity was performed via the measurement of R2 values [61] as
    well as via predictive validity in the form of the Stone-Geisser criterion Q2,
    which are cross-validated redundancies of the constructs (Q2 >0) [69,70]. The
    estimation of Q2 was done via blindfolding (see detail in appendix Table A3).
    The hypothesis tests of the path coefficients of the inner model were derived
    from the bootstrapping procedure. This was possible because no assumptions about
    the distribution of the data are required for PLS modeling. 5000 subsamples were
    applied to generate values that allowed hypothesis testing following Hair et al.
    [63]. Results Sample description After the elimination of incomplete datasets,
    data cleaning regarding the duration of response to the survey,2 and the quality
    question (the following quality assurance question aims to ensure that participants
    have actually read the questions. Please select “disagree”) 31 cases were deleted
    from the final data set), a total of 212 datasets remained for further analysis.
    The descriptive statistics are given in Table 1. The average age of dairy farmers
    was 45 years and 73.1 % of them were male. The majority of the respondents (70.3
    %) worked as farm managers, 11.8 % reported to be farm successors, and 9.9 % were
    working on the farm as an elderly or as a collaborating family member. More than
    half of the dairy farmers (51.4 %) had more than 20 years of work experience.
    47.6 % of the farmers had a technical college degree or were master farmers. With
    28.7 % of the farmers surveyed holding a university degree, the sample shows an
    above-average high level of education. For the nationwide average, only about
    14 % have a bachelor''s or master''s degree [71]. Almost all of the farms surveyed
    were a main occupational farm (99.1 %), with 17.0 % farming according to organic
    standards, 80.2 % keeping conventional dairy cattle, and 1.4 % each were in the
    process of converting from conventional to organic and vice versa. Most respondents
    (29.7 %) kept between 100 and 199 dairy cows, and 27.4 % of the farms surveyed
    kept between 50 and 99 dairy cows, whereas 26.4 % of dairy farmers kept 200 cows
    or more. Thus, the sample shows a relatively large number of cows per farm; in
    fact, the national average is currently about 70 cows per farm, and about 6 %
    of all dairy farms in Germany are organic [70,73]. Most farms (57.1 %) in the
    sample kept their cows in a loose housing system with yard and/or pasture access.
    The milk yield per cow and year of the sampled farms was 9223 kg; slightly above
    the national average, which reached 8488 kg milk/cow/year in 2021 [74]. Thus,
    the sample shows a distribution that differs from the average in terms of herd
    sizes, number of organic farms, and average milk yield. Most of the dairy farms
    surveyed (25.9 %) were from Bavaria, followed by Lower Saxony (25.5 %) and Baden-Württemberg
    (11.8 %). This distribution, however, corresponds to the nationwide average [75].
    Nevertheless, the sample is not representative and represents rather the larger
    dairy farms. Descriptive analysis The actual use of IoT sensors shows a heterogeneous
    picture, as Table 1 illustrates. Sensor collars were regularly (daily and several
    times a day) used by 53.8 % of the dairy farmers surveyed, whereas rumen sensors
    were regularly used by only 21.2 %. The use of other IoT sensors in health monitoring
    was also at a low level (see Table 2). Table 2. Frequency of use of IoT sensors
    on surveyed farms in percent and absolute numbers in parentheses. Frequency 1
    Several times a day Daily Weekly Monthly Never Sensor collar percentage 33.0 (70)
    20.8 (44) 2.8 (6) 1.4 (3) 42.0 (89) Rumen sensor 10.4 (22) 10.8 (23) 4.7 (10)
    0.9 (2) 73.1 (155) Other IoT sensors (e.g. ear sensor, digital calving detection
    systems, foot pedometers) * 16.0 (34) 10.8 (23) 1.9 (4) 1.4 (3) 45.8 (97) n =
    212. 1 Multiple answers were not allowed; Question wording: Please indicate the
    frequency of use of the following products. ⁎ n = 161 as answer was voluntary.
    The present results show that the acceptance barriers differed between users and
    non-users of IoT-based sensors (see Fig. 2). Dairy farmers who did not use IoT-based
    sensors were more critical in their assessment of acceptance barriers. Although
    both users and non-users rated high investment costs as the greatest acceptance
    barrier, this was viewed critically by more non-users (79.8 %). Among IoT users,
    52.0 % saw this barrier as very critical or critical. The technical susceptibility
    of IoT sensors was considered by non-users to be the second acceptance barrier
    (61.8 %). However, this was only rated as the fourth barrier by IoT users (38.2
    %). They saw the lack of broadband expansion (47.2 %) and the missing compatibility
    with other systems and devices as the second and third biggest barrier. The non-users
    also rated the lack of compatibility as the third-largest barrier; 60.6 % were
    very critical or critical in this respect. Download : Download high-res image
    (396KB) Download : Download full-size image Fig. 2. Acceptance barriers of surveyed
    users and non-users of IoT-based sensor collars. Percentage of agreement as sum
    of response options: very critical and critical. Question: How would you rate
    the following points on the use of IoT sensors for health monitoring? Please read
    through each point and then answer according to your critical assessment. 1=very
    critical 5=very uncritical. As there were no differences in the order of acceptance
    barriers for the two IoT-based sensors investigated, only the barriers for the
    most commonly used sensor collars are presented. It is also interesting to note
    that data security and data ownership were rated more critically by non-users
    (58.5 % and 57.3 %) than by users (36.6 % and 35.8 %). A lack of interest in connection
    with IoT sensors was rated as non-critical by both groups. However, 39.3 % of
    non-users stated that a lack of competence/knowledge about IoT sensors represented
    a barrier for them. Among users, only 19.5 % saw this as a barrier to acceptance.
    PLS estimation The reliability and validity of the external measurement model
    were checked using the quality criteria explained above. The values in Table A1in
    the appendix meet the requirements for indicator loadings (>0.7), convergence
    criteria (AVE >0.5), and internal consistency criteria (Cronach''s alpha >0.60,
    Composite reliability >0.70). Thus, the measurement model can be considered reliable.
    The discriminant validity of the measurement model is also almost fulfilled, as
    the HTMT criterion is met (see Table A2 in the appendix). Furthermore, the evaluation
    of the structural model is also satisfactory. In addition, Table 1 in the appendix
    also shows the descriptive results of the constructs used in the PLS estimation.
    Fig. 2 shows the corresponding R2 values, path coefficients, and significance
    levels of the PLS estimation. With R2 values ranging from 0.206 to 0.738, they
    can be considered low or average up to substantial [58]. The path coefficients
    show that several significant causal relationships exist between the constructs
    (see Fig. 2). Thus, the main determinants of TPB attitude (0.600***) and behavioral
    control (0.340*) had a significant influence on the desires, and hypotheses 1
    and 3 can be accepted (asterisks represent path coefficients *P < 0.10, **P <
    0.05, ***P < 0.01). However, hypothesis 2 must be rejected, as subjective norm
    showed no significant influence and assumed an unexpected negative sign. Attitude,
    in turn, was significantly influenced by perceived usefulness (0.847***), whereas
    perceived ease of use showed no significant influence (0.018). Consequently, hypothesis
    1a may be accepted and hypothesis 1b rejected (Fig. 3). Download : Download high-res
    image (485KB) Download : Download full-size image Fig. 3. Determinants of acceptance
    of IoT sensors in health monitoring by German dairy farmers (structural model
    estimation) Numbers on arrows represent path coefficients. *P <0.10, **P <0.05,
    ***P <0.01. Broken line: not significant. n = 212. The other belief constructs
    from the TAM-TPB combination, i.e., normative beliefs in the case of farmer willingness
    (0.273***) and advisor willingness (0.241***), and control beliefs in the case
    of perceived self-confidence (0.583***), exerted a significant influence on subjective
    norm and behavioral control, respectively. Hypotheses 2a, 2b, and 3a can thus
    be confirmed. Desires showed a strong and highly significant influence on intention
    to use (0.634***), hence hypothesis 4 is confirmed. However, the results for expected
    emotions presented a picture that partially deviated from the formulated hypotheses.
    Positive expected emotions had no significant influence on intention to use (0.032)
    but a strong as well as highly significant influence on desires (0.285***). Accordingly,
    hypothesis 5a can be confirmed, whereas hypothesis 5b must be rejected due to
    lack of significance. Negative anticipated emotions had a relatively small and
    non-significant influence on desires (−0.053) and intention to use (0.064). Hypotheses
    6a and 6b are thus rejected. Moreover, we found that higher intention to use IoT
    sensors does lead to more frequent use of IoT sensors. Hypothesis 7 can therefore
    be confirmed (overview of the hypothesis in the appendix Table A4). Discussion
    This study focused on investigating acceptance barriers and influencing factors
    related to IoT-based health monitoring among dairy farmers. For this purpose,
    we combined existing acceptance theories and cognitive and affective influencing
    factors into a single behavioral model and conducted an online survey with German
    dairy farmers. The key findings from the usage and barriers to acceptance and
    the PLS model are discussed below. The results of this empirical study confirm
    that the current use of technologies, such as sensor collars and rumen sensors
    to track the cow''s health, are only used by about 50 % and 20 %, respectively,
    of surveyed farmers. Thus, sensor collars are used more often than rumen sensors,
    which might be more challenging in terms of handling and price value [36]. However,
    the use of sensors is not very low, and our result must be set into the context
    that large farms are overrepresented in this study and that innovative technologies
    are mainly used by larger farms [76]. The study further gives insights into acceptance
    barriers toward IoT health monitoring. The primary barrier to acceptance of IoT-based
    animal sensors is the high investment required. This finding corroborates the
    results of previous studies that have also identified investments cost as a major
    barrier to the digitization of agriculture [2,23,77]. Specifically, it includes
    initial investment and ongoing maintenance costs, both of which are perceived
    by farmers as acceptance barriers [23]. Notably, in the current study, non-users
    exhibit even greater concerns about investment costs than users, suggesting potential
    approaches to promote adoption through financial subsidies. However, a second
    important finding of the present study is that farmers are critical of compatibility
    with other IoT technologies and systems. Other studies have found that lack of
    compatibility with other digital innovations is also a major acceptance barrier
    in the digital agricultural transformation process [78]. The fact that some of
    the acceptancebarriers identified in the current study have been identified as
    barriers in the past, although in a general technology context, indicates that
    digital transformation is still in its early stages [79] and that the focus of
    digital innovation in dairy farming has so far been mainly on single farm applications,
    such as the automation of certain processes (e.g., milking, feeding). However,
    an interesting finding of this study is that the German dairy farmers surveyed
    were less critical of a lack of training opportunities and prior knowledge regarding
    IoT-based animal sensors than in previous studies, where a lack of know-how and
    fear of digital technologies were still among the biggest barriers to digitalization
    [33,80]. Given the importance of relevant and reliable information in the acceptance
    of innovations in agriculture [81], our findings and the ones of Reissig [82]
    and Schneider [83] indicate that the provision of information and knowledge about
    digitization appears to have increased in recent years, at least for the German
    dairy farmers surveyed. However, there is still a need to improve the infrastructure
    conditions on farms (e.g., broadband expansion), which determine, among other
    things, whether farmers invest in digital tools [35]. Currently, IoT-based health
    animal monitoring systems do not provide the necessary compatibility and flexibility
    that farmers demand [78]. In addition, for long-term acceptance and use, not only
    the intention but also the perceived and experienced barriers are decisive. In
    this context, trust can be an essential prerequisite for the acceptance of new
    technologies [84]. The assumption that new technologies actually work should not
    be neglected [85], because at this point technical susceptibility to failure is
    still viewed extremely critically, especially by non-users. Next to the mentioned
    barriers, the PLS model shows that dairy farmers'' acceptance is influenced by
    various psycho-economic parameters. Although not all parameters are statistically
    significant, our results confirm other studies in their finding that cognitive
    as well as affective factors influence acceptance decisions for IoT sensors [23,86].
    First, our results support the assumptions of the MGB model that desires are influenced
    by TPB determinants: Mainly attitude followed by behavioral control show a significant
    influence on desires, which is in line with Landmann et al. [33]. Furthermore,
    in the present study, desires were assumed to reflect the transformation of subjective
    norms into a motivation to act [33]. Yet, subjective norms are shown to have no
    influence on desires and thus are not socially influenced, at least in this thematic
    context used in our study. In this regard, Leone et al. [47] argue that the mediating
    power of desires does not always mediate all the effects of TPB constructs on
    intention. If a behavior is under normative control and relevant to one''s role
    identity, subjective norms can mainly directly explain further variance in intention.
    Therefore, it might be possible that in the present study, subjective norms could
    directly explain further variance in intention. However, the direct influence
    on desires found by Landmann et al. [33] cannot be confirmed here. Nevertheless,
    our results show that the TPB determinants are in turn significantly influenced
    by the three different types of beliefs: Thus, the readiness of other farmers
    and the advice of agricultural advisors have an influence on the subjective norm.
    The promoting influence on positive decision-making behavior by colleagues was
    also discovered by Hüttel et al. [87] who emphasize that, above all, social exchange
    among farmers should be promoted in order to improve technology acceptance A closer
    look at the factor “attitudinal beliefs” reveals that improved productivity and
    labor facilitation have the highest relevance to the factor of perceived usefulness.
    Accordingly, perceived usefulness favors farmers'' attitudes toward the technology
    [40]. The lack of significant influence of ease of use could be explained by the
    fact that IoT sensors in health monitoring are not widely adopted and might also
    not be well-known among dairy farmers (see also Table 1), and the practical use
    of such technologies is therefore difficult to imagine for the surveyed dairy
    farmers [10,23]. Furthermore, the importance of control beliefs confirms the results
    from other studies: Convictions about one''s own motivation and ability in the
    use of IoT sensors as well as good framework conditions on the farms significantly
    impact the acceptance process [33,58]. The existence of relevant skills is further
    necessary in order to achieve the possible advantages in the areas of efficiency
    and sustainability—however, most farmers might not have them at the moment [88].
    Furthermore, the meaningfulness of such sensors and therewith their contribution
    to animal health, and welfare depends on the ability to understand the data and
    management [23]. In addition, consistent with the assumptions of the MGB, our
    study confirms that dairy farmers'' intention (acceptance) is highly statistically
    significantly influenced by desires, which Perugini and Bazozzi [49] refer to
    as the motivating impetus for intention to use. Thus, desires have a special relationship
    to the intention to use insofar as, when consciously perceived, they significantly
    motivate the formation of an intention to use [49]. Moreover, the influence of
    emotions shows that only positive but not negative expected emotions predict the
    desire to use IoT sensors. This finding can be explained following the argumentation
    line of Perugini and Bagozzi [49] who assume that different contexts, their importance
    for approach and avoidance goals, and the achievement of such goals determine
    the influence of emotions. When the link or connection between a desired goal
    and other concrete or higher-level goals is readily apparent and considered achievable,
    it is associated with positive emotions. Thus, the use of IoT-based animal sensors
    may also be highly likely to lead to other important goal achievements beyond
    improved health monitoring (e.g., labor reduction, enjoyment of work, overall
    innovativeness, improvements in economic milk performance). Grotsch et al. [89]
    and Bianchi et al. [24] discovered that mainly labor time reduction and optimization
    of farm processes as well as animal welfare improvements are the main reasons
    for IoT-based animal sensor investments. As a result, the use of IoT sensors can
    be seen as a goal to aim for and is associated with positive emotions [49]. The
    negative consequences of the introduction of IoT-based sensors may not be strong
    enough to create a desire for purposeful behavior [49], perhaps due to the fact
    that farmers are not yet experienced enough in using such sensors because emotions
    are an important part of people''s experiences related to the use of different
    technologies [90]. In addition, people have a natural tendency to reduce uncomfortable
    emotions, such as guilt or sadness, which are often associated with moral concerns
    (e.g., animal welfare or environmental issues). Instead, they tend to shift their
    emotional experiences towards positive self-satisfaction [91]. This psychological
    aspect is an important finding in farmers'' decision to adopt IoT-based animal
    sensors, where the anticipation of positive emotions like satisfaction and enthusiasm
    plays a substantial role, even if it doesn''t directly translate to the intention
    to use these technologies. Nevertheless, the finding that expected emotions do
    not exert a direct influence on the intention to utilize IoT stands in contrast
    to Landmann et al.''s work [33], which demonstrates that positive emotions play
    a direct role in shaping the intention to employ smartphones. A potential explanation
    for this divergence in emotional impact may be linked to the degree of familiarity
    with the respective technologies under scrutiny. According to Carrus et al. [92],
    desire serves as the preliminary stage preceding intention. Therefore, it might
    assume greater significance, especially when dealing with technologies characterized
    by limited prior exposure, such as IoT-based animal sensors. In contrast, a higher
    level of familiarity can be assumed for the smartphones examined in Landmann et
    al.''s study [33]. This differentiation in emotional influence underscores the
    complex interplay between individual emotions, prior knowledge, and the technology
    being considered. Finally, consistent with the TPB assumption and the findings
    of, e.g., Michels et al. [25], Grothkopf and Schulze [93], and Schaak and Musshoff
    [94], the present results show that a higher intention to use IoT sensors also
    leads to a more frequent use of these sensors. Despite the valuable insights gained
    from this study, certain limitations exist that could be addressed in further
    research: Some of the items we used refer explicitly to IoT-based animal sensors
    in the field of health monitoring, while other items are expressed in more general
    terms related to the IoT sensors. Although participants were steered toward health
    monitoring in advance by the information text, a consistent approach should be
    taken in future studies. In addition, the frequency of use in our study (according
    to the coefficient of determination r²) is explained only slightly. This may be
    related to the measurement of frequency of use (ordinal variable) or to the fact
    that other relevant factors are missing that only become relevant, for example,
    in the course of the purchase process. Moreover, our study is limited to the field
    of IoT sensors; it is unclear whether dairy farmers make similar choices for other
    digital technologies. Therefore, to give further target group-specific measures,
    future research should specifically address different tools. Conclusion and further
    research areas The results of the present study indicate that the acceptance process
    is complex and that behavioral determinants, such as cognitive and affective factors,
    play an important role in the acceptance of IoT-based animal sensors and should
    be considered when shaping future technology acceptance processes in agriculture
    in general and in the context of IoT-base animal sensors. Testing the research
    model shows that behavioral factors do indeed influence intention to use and there
    is an emotionally driven acceptance by influencing desire. Thus, the inclusion
    of desires as a link between attitude determinants and usage intention is an important
    result. The results demonstrate that the integration of the three acceptance models
    according to Landmann et al. [33] is also suitable within the context of IoT sensor
    acceptance among dairy farmers. The model explains approximately 46 % of the variance
    in dairy farmers'' intention to use IoT sensors in health monitoring. The findings
    indicate that a purely economic view does not seem to be sufficient to fully understand
    the digital acceptance process. For instance, the opportunities and advantages
    presented by IoT-based sensors should be communicated more clearly, and it should
    be shown that the adoption of IoT-based animal sensors can go beyond the improvement
    of health monitoring (e.g., labor reduction, enjoyment of work). Technology acceptance
    is a dynamic and highly social process [95], so early adopters, thus farmers who
    already have experience with the use of IoT sensors, could communicate the potential
    opportunities as well as risks of such sensors for the future success of dairy
    farms. In addition, distributors of IoT tools could support farmers in using the
    tools in the post-purchase phase. This can include remote maintenance. Moreover,
    this is not a superior approach that applies only specifically to IoT-based animal
    sensors, but which can also be transferred to the acceptance process of other
    digital technologies in agriculture, as Hüttel et al. [87] and Dessart et al.
    [95] point out. However, to ensure that acceptance and adoption of IoT sensors
    is not limited by the identified acceptance barriers, there needs to be increased
    focus on enabling internet infrastructure and enhanced knowledge networks related
    to advantages and disadvantages of IoT sensor use. Political decision-makers are
    called upon to accelerate broadband expansion in rural regions. Furthermore, in
    particular non-users see a lack of competence in dealing with IoT sensors. Consequently,
    the handling of IoT- based sensors should be kept as simple as possible, and the
    provision of information should be comprehensible, especially for farmers without
    prior knowledge of IoT-based sensors. However, as high investment costs were identified
    as the biggest barrier for both users and non-users, there is a need for research
    regarding the willingness to pay for IoT- based sensors that reflects the value
    of the technology to farmers. Here, occupation-specific (arable farmer, livestock
    farmer, etc.) barriers could also be identified and related to willingness to
    pay. This should be calculated with a larger representative sample. Given that
    the main new insight of the study revolves around the cognitive and emotional
    drivers of acceptance behavior, it would be valuable to explore potential changes
    in emotional attitudes throughout the acceptance process. This raises the question
    of whether farmers experience post-purchase remorse or overwhelmingly positive
    emotions. Furthermore, since satisfaction with the use of IoT sensors was not
    directly queried in this study, further research is needed to better illuminate
    the confirmation phase in the implementation process. In addition, the majority
    of respondents were working on large dairy farms, which to some extent represent
    the target user group—however, it would also be interesting to analyze the attitudes
    of smaller farms toward IoT, indicating a need for further research. In addition,
    the present study did not provide evidence on whether additional explanatory variables
    could be introduced between acceptance and behavior, because technology use is
    not necessarily a direct result of individuals'' intentions. CRediT authorship
    contribution statement Greta Langer: Conceptualization, Data curation, Formal
    analysis, Funding acquisition, Investigation, Methodology, Project administration,
    Validation, Visualization, Writing – original draft, Writing – review & editing.
    Holger Schulze: Writing – review & editing. Sarah Kühl: Methodology, Supervision,
    Writing – review & editing. Declaration of competing interest The authors declare
    the following financial interests/personal relationships which may be considered
    as potential competing interests: Greta Langer reports financial support was provided
    by German Development Agency for Agriculture (Landwirtschaftliche Rentenbank).
    Appendix Table A1. Descriptive statistics for the indicators and reliability and
    validity of constructs. Construct Indicator Mean (Std. dev.) Cronbach''s alpha
    (>0.60) Composite reliability (>0.70) Average variance extracted (>0.50) Perceived
    usefulness1 0.931 0.951 0.828 The use of IoT systems improves my economic performance
    on my farm. 2.39 (1.080) Using IoT sensors on my farm increases my productivity.
    2.26 (1.023) The use of IoT systems simplifies my work on the farm. 2.25 (1.066)
    I find IoT sensors useful for my work. 2.10 (1.037) Perceived ease of use1 0.937
    0.903 0.758 I believe IoT sensors are easy to use. 2.52 (0.900) I believe it is
    uncomplicated to use IoT sensors. 2.57 (0.979) Interacting with IoT sensors doesn''t
    require much mental effort on my part. 2.73 (1.030) Farmer Readiness1 0.749 0.857
    0.668 Other farmers certainly believe IoT sensors are a useful tool for health
    monitoring. 2.49 (0.840) I think other farmers are advocating the use of IoT sensors.
    2.50 (0.846) I think other farmers have sufficient technical skills to use IoT
    sensors on their farms. 2.56 (0.874) Advisor Readiness1 0.799 0.908 0.831 I believe
    that agricultural advisors will recommend the use of IoT sensors for health monitoring.
    2.40 (0.999) I think advisors have a positive attitude toward the use of IoT sensors.
    2.06 (0.855) Perceived Self-Confidence1 0.792 0.849 0.702 I am confident about
    using IoT sensors on my farm. 2.28 (0.950) Using IoT sensors on my farm would
    not challenge me. 2.65 (1.132) I would be able to use IoT sensors, even without
    assistance. 2.54 (1.046) Attitude1 0.943 0.957 0.816 It is a good idea to implement
    IoT sensors on my farm. 2.24 (1.1162) I am positively disposed toward the introduction
    of IoT sensors on my farm. 2.06 (1.146) I like the idea of implementing IoT sensors
    on my farm. 2.22 (1.149) Using an IoT sensor would be an exciting experience.
    1.99 (1.044) I would enjoy my work more if I used IoT sensors. 2.57 (1.220) Subjective
    Norm1 0.887 0.922 0.747 People I care about think I should use IoT sensors in
    health monitoring. 3.17 (1.238) My family and people close to me think that I
    should use IoT sensors. 3.18 (1.230) In general, I am expected to use IoT sensors
    in health monitoring. 3.39 (1.193) Other farmers around me think I should use
    IoT sensors. 3.41 (1.104) Behavioral Control1 0.798 0.908 0.832 I have the necessary
    resources to use IoT sensors. 2.24 (1.119) Given the resources, capabilities,
    and knowledge required to use IoT sensors, it would be easy for me to use them.
    2.25 (1.075) Desire1 0.868 0.938 0.883 I would like IoT sensors to help me keep
    a better eye on the health of the cows. 1.91 (1.110) I want to use IoT sensors
    to improve my health monitoring on my farm. 2.11 (1.169) Negative Anticipated
    Emotions1 0.945 0.957 0.787 … … frustrated. 2.09 (1.110) … angry. 2.61 (1.232)
    … sad. 3.04 (1.252) … disappointed. 2.10 (1.091) Positive Anticipated Emotions1
    0.815 0.871 0.631 … … enthusiastic. 1.75 (0.958) … happy. 1.92 (1.088) … glad.
    1.88 (1.053) … satisfied. 1.77 (1.028) … I would be very pleased. 1.81 (0.994)
    … proud. 2.36 (1.226) Intention (Acceptance)1 0.903 0.939 0.837 I plan to use
    IoT sensors on my farm in the coming years. 2.70 (1.425) I think by 2025, IoT
    sensors will be an integral part of my health monitoring. 2.72 (1.379) There are
    already concrete plans for my farm to use IoT sensors in the future. 2.94 (1.510)
    Frequency of Use2 0.473 0.784 0.648 Sensor collars for health monitoring. 2.99
    (1.799) Rumen sensors for health monitoring 4.16 (1.460) 1 Likert scale 1=totally
    agree 5=totally disagree. 2 Likert scale 1=several times a day 5=never. Table
    A2. Discriminant validity – heterotrait-monotrait ratios. Empty Cell Acceptance
    Advisor Readiness Farmer Readiness Attitude Frequency of Use Subjective Norm Behavioral
    Control Desire Negative Anticipated Emotion Positive Anticipated Emotion Perceived
    Ease of Use Perceived Self-Confidence Perceived Usefulness Acceptance Advisor
    Readiness 0.509 Farmer Readiness 0.395 0.722 Attitude 0.793 0.462 0.389 Frequency
    of Use 0.743 0.272 0.190 0.719 Subjective Norm 0.682 0.465 0.500 0.659 0.571 Behavioral
    Control 0.677 0.410 0.365 0.614 0.661 0.542 Desire 0.754 0.401 0.288 0.291 0.684
    0.575 0.597 Negative Anticipated Emotions 0.253 0.349 0.307 0.315 0.194 0.288
    0.188 0.258 Positive Anticipated Emotions 0.596 0.465 0.366 0.803 0.505 0.545
    0.406 0.819 0.404 Perceived Ease of Use 0.298 0.305 0.279 0.249 0.311 0.238 0.497
    0.217 0.092 0.111 Perceived Self-Confidence 0.483 0.453 0.306 0.352 0.356 0.319
    0.705 0.323 0.109 0.220 0.669 Perceived Usefulness 0.761 0.514 0.443 0.907 0.654
    0.652 0.610 0.879 0.302 0.766 0.286 0.404 Table A3. Predictive relevance of the
    constructs (Q2 >0). Construct Q2 Intention (Acceptance) 0.376 Attitude 0.586 Frequency
    of Use 0.157 Subjective Norm 0.149 Behavioral Control 0.277 Desire 0.638 Table
    A4. Results of hypothesis testing (n = 212). Item PLS structural equation model
    Hypothesis Path Coefficients Supported hypothesis? Perceived Usefulness → Attitude
    H1a+ 0.847*** Supported Perceived Ease of Use → Attitude H1b+ 0.018 Not supported
    Attitude → Desire H1+ 0.600*** Supported Farmer Readiness → Subjective Norm H2a+
    0.273*** Supported Advisor Readiness → Subjective Norm H2b+ 0.241*** Supported
    Subjective Norm → Desire H2+ −0.027 Not supported Perceived Self-confidence →
    Behavioral Control H3a+ 0.583*** Supported Behavioral Control → Desire H3+ 0.101*
    Supported Desire → Intention (Acceptance) H4+ 0.634*** Supported Positive Anticipated
    Emotions → Desire H5a+ 0.285*** Supported Positive Anticipated Emotions → Acceptance
    H5b+ 0.033 Not supported Negative Anticipated Emotions → Desire H6a- −0.053 Not
    supported Negative Anticipated Emotions → Acceptance H6b- −0.063 Not supported
    Intention (Acceptance) → Frequency of Use H7+ 0.502*** Supported Table A5. Operationalization
    constructs of the questionnaire (English Translation of Original German Questions).
    Intention (Acceptance) Source I plan to use IoT sensors on my farm in the coming
    years. [59] I think by 2025, IoT sensors will be an integral part of my health
    monitoring. [59] There are already concrete plans for my farm to use IoT sensors
    in the future. [59] Desire I would like IoT sensors to help me keep a better eye
    on the health of the cows. [49] I want to use IoT sensors to improve my health
    monitoring on my farm. [49] … … enthusiastic. [33,46] … happy. [49] … glad. [49]
    … satisfied. [49] … I would be very pleased. [49] … proud. [49] … … frustrated.
    [33,49] … angry. [49] … sad. [49] … disappointed. [49] Attitude It is a good idea
    to implement IoT sensors on my farm. [43] I am positively disposed toward the
    introduction of IoT sensors on my farm. [43] I like the idea of implementing IoT
    sensors on my farm. [43] Using an IoT sensor would be an exciting experience.
    [51] I would enjoy my work more if I used IoT sensors. [51] Subjective Norm People
    I care about think I should use IoT sensors in health monitoring. [46] My family
    and people close to me think that I should use IoT sensors. [43] In general, I
    am expected to use IoT sensors in health monitoring. [60] Other farmers around
    me think I should use IoT sensors. [51] Behavioral Control I have the necessary
    resources to use IoT sensors. [60] Given the resources, capabilities, and knowledge
    required to use IoT sensors, it would be easy for me to use them. [60] My own
    decisions and actions determine whether I will use IoT sensors. [33] I am the
    person who decides about the application of IoT sensors on the farm. [23] Attitudinal
    Beliefs The use of IoT systems improves my economic performance on my farm. [40]
    Using IoT sensors on my farm increases my productivity. [40] The use of IoT systems
    simplifies my work on the farm. [40] I find IoT sensors useful for my work. [40]
    I believe IoT sensors are easy to use. [51] I believe it is uncomplicated to use
    IoT sensors. [40] Interacting with IoT sensors doesn''t require much mental effort
    on my part. [60] Normative Beliefs Other farmers certainly believe IoT sensors
    are a useful tool for health monitoring. [51] I think other farmers are advocating
    the use of IoT sensors. [51] I think other farmers have sufficient technical skills
    to use IoT sensors on their farms. [51] I believe that agricultural advisors will
    recommend the use of IoT sensors for health monitoring. [33] I think advisors
    have a positive attitude toward the use of IoT sensors. [33] Control Beliefs I
    am confident about using IoT sensors on my farm. [51] Using IoT sensors on my
    farm would not challenge me. [51] I would be able to use IoT sensors, even without
    assistance. [43] Data availability Data will be made available on request. References
    [1] E. Tullo, A. Finzi, M. Guarino Review: environmental impact of livestock farming
    and precision livestock farming as a mitigation strategy Sci. Total Environ.,
    650 (2019), pp. 2751-2760, 10.1016/j.scitotenv.2018.10.018 View PDFView articleView
    in ScopusGoogle Scholar [2] D. Lovarelli, J. Bacenetti, M. Guarino A review on
    dairy cattle farming: is precision Livestock farming the compromise for an environmental,
    economic and social sustainable production? J. Clean. Prod., 262 (20) (2020),
    Article 121409, 10.1016/j.jclepro.2020.121409 View PDFView articleView in ScopusGoogle
    Scholar [3] A. Walter, R. Finger, R. Huber, N. Buchmann Smart farming is key to
    developing sustainable agriculture PNAS, 114 (24) (2017), pp. 6148-6150, 10.1073/pnas.1707462114
    View in ScopusGoogle Scholar [4] H.W. Griepentrog Digitale Systeme für eine effiziente
    und umwelt-schonende Landwirtschaft Nova Acta Leopold., 426 (2021), p. 47, 10.26164/leopoldina_10_00341
    Google Scholar [5] Kehl, C., Meyer R. and Steiger S.. Digitalisierung der Landwirtschaft:
    gesellschaftliche Voraussetzungen, Rahmenbedingungen und Effekte. Teil II des
    Endbericht zum TA-Projekt. Arbeitsbericht Nr. 194. Büro für Technikfolgen-Abschätzung
    beim Deutschen Bundestag (TAB), 2021 (accessed Sep. 23, 2022). https://publikationen.bibliothek.kit.edu/1000142951.
    Google Scholar [6] S. van der Burg, M.J. Bogaardt, S. Wolfert Ethics of smart
    farming: current questions and directions for responsible innovation towards the
    future NJAS Wagening. J. Life Sci., 90-91 (2019) (2019), Article 100289, 10.1016/j.njas.2019.01.001
    View PDFView articleView in ScopusGoogle Scholar [7] L. Klerkx, E. Jakku, P. Labarthe
    A review of social science on digital agriculture, smart farming and agriculture
    4.0: new contributions and a future research agenda NJAS Wagening. J. Life Sci.,
    90-91 (2019) (2019), 10.1016/j.njas.2019.100315 Google Scholar [8] O. Visser,
    S.R. Sippel, L. Thiemann Imprecision farming? Examining the (in)accuracy and risks
    of digital agriculture J. Rural Stud., 86 (2021), pp. 623-632, 10.1016/j.jrurstud.2021.07.024
    View PDFView articleView in ScopusGoogle Scholar [9] M.R. Borchers, J.M. Bewley
    An assessment of producer precision dairy farming technology use, prepurchase
    considerations, and usefulness J. Dairy Sci., 98 (6) (2015), pp. 4198-4205, 10.3168/jds.2014-8963
    View PDFView articleView in ScopusGoogle Scholar [10] C.J. Rutten, W. Steeneveld,
    A.G.J.M. Oude Lansink, H. Hogeveen Delaying investments in sensor technology:
    the rationality of dairy farmers’ investment decisions illustrated within the
    framework of real options theory J. Dairy Sci., 101 (8) (2018), pp. 7650-7660,
    10.3168/jds.2017-13358 View PDFView articleView in ScopusGoogle Scholar [11] C.
    Umstätter, D. Martini, F. Adrion Opinion paper: digitales tiermonitoring – Was
    bringt die Zukunft? Landtechnik, 75 (1) (2020), pp. 14-23, 10.15150/lt.2020.3227
    View in ScopusGoogle Scholar [12] B.I. Akhigbe, K. Munir, O. Akinade, L. Akanbi,
    L.O. Oyedele IoT technologies for livestock management: a review of present status,
    opportunities, and future trends Big Data Cogn. Comput., 5 (1) (2021), pp. 1-40,
    10.3390/bdcc5010010 Google Scholar [13] M.O. Akbar, M.S. Saad Shahbaz kha, M.
    Jamshaid Ali, A. Hussain, G. Qaiser, M. Psha, M.S. Missen, N. Akthar IoT for development
    of smart dairy farming J. Food Qual. (2020), pp. 1-8, 10.1155/2020/4242805 View
    in ScopusGoogle Scholar [14] W. Iwasaki, N. Morita, M. Nagata IoT sensors for
    smart livestock management K. Mitsubayashi, Niwa, O., Ueno, Y. Chemical, Gas,
    and Biosensors for Internet of Things and Related, Elsevier, Amsterdam (2019),
    pp. 207-221 View PDFView articleView in ScopusGoogle Scholar [15] J.W. Yeates
    How good? Ethical criteria for a ‘Good Life’ for farm animals J. Agric. Environ.
    Ethics, 30 (2017), pp. 23-35, 10.1007/s10806-017-9650-2 View in ScopusGoogle Scholar
    [16] M. Taneja, J. Byabazaire, N. Jalodia, A. Davy, C. Olariu, P. Malone Machine
    learning based fog computing assisted data-driven approach for early lameness
    detection in dairy cattle Comput. Electron. Agr., 171 (2020), Article 105286,
    10.1016/j.compag.2020.105286 View PDFView articleView in ScopusGoogle Scholar
    [17] A. C. Rojo-Gimeno, M. van der Voort, J.K. Niemi, L. Lauwers, A. Ringgard
    Kristensen, E. Wauters Assessment of the value of information of precision livestock
    farming: a conceptual framework NJAS Wagening. J. Life Sci., 90-91 (2019), Article
    100311, 10.1016/j.njas.2019.100311 View PDFView articleView in ScopusGoogle Scholar
    [18] J. Schillings, R. Bennett, D.C. Rose Exploring the potential of precision
    livestock farming technologies to help address farm animal welfare Anim. Front.,
    2 (2021), 10.3389/fanim.2021.639678 Google Scholar [19] O. Unold, M. Nikodem,
    M. Piasecki, K. Szyc, H. Maciejewski, M. Bawiec, P. Dobrowolski, M. Zdunek IoT-based
    cow health monitoring system Proceedings of the 20th International Conference
    Computational Science, Amsterdam. Netherlands, ICCS (2020), pp. 344-356, 10.1007/978-3-030-50426-7_26
    View in ScopusGoogle Scholar [20] Federal Agency for Agriculture and Food Germany.
    2021. Digitalisierung in der Landwirtschaft. https://www.ble.de/DE/Projektfoerderung/FoerderungenAuftraege/Digitalisierung/digitalisierung_node.html.
    (accessed Oct. 13, 2022). Google Scholar [21] H. Barrett, D.C. Rose Perceptions
    of the fourth agricultural revolution: what''s in, what''s out, and what consequences
    are anticipated? Sociol. Ruralis., 62 (2) (2022), 10.1111/soru.12324 Google Scholar
    [22] A. Lajoie-O''Malley, K. Bronson, S. van der Burg, L. Klerkx The future(s)
    of digital agriculture and sustainable food systems: an analysis of high-level
    policy documents Ecosyst. Serv., 45 (2020), Article 101183, 10.1016/j.ecoser.2020.101183
    View PDFView articleView in ScopusGoogle Scholar [23] S. Mohr, R. Kühl Acceptance
    of artificial intelligence in German agriculture: an application of the technology
    acceptance model and the theory of planned behavior Precis. Agric., 22 (2021),
    pp. 1816-1844, 10.1007/s11119-021-09814-x View in ScopusGoogle Scholar [24] M.C.
    Bianchi, L. Bava, A. Sandrucci, F.M. Tangorra, A. Tamburini, G. Gilson, M. Zucali
    Diffusion of precision livestock farming technologies in dairy cattle farms Animal,
    16 (11) (2022), Article 100650, 10.1016/j.animal.2022.100650 View PDFView articleView
    in ScopusGoogle Scholar [25] G. Kuehne, R. Llewellyn, D.J. Pannell, R. Wilkinson,
    P. Dolling, J. Ouzman, M. Ewing Predicting farmer uptake of new agricultural practices:
    a tool for research, extension and policy Agric. Syst., 156 (2017), pp. 115-125,
    10.1016/j.agsy.2017.06.007 View PDFView articleView in ScopusGoogle Scholar [26]
    O. Montes de Oca Munguia, D.J. Pannell, R. Llewellyn Understanding the adoption
    of innovations in agriculture: a review of selected conceptual models Agronomy,
    11 (1) (2021), p. 139, 10.3390/agronomy11010139 View in ScopusGoogle Scholar [27]
    A.B. Aubert, J. Schroeder, J. Grimaudo IT as enabler of sustainable farming: an
    empirical analysis of farmers'' adoption decision of precision agriculture technology
    Decis. Support Syst., 54 (1) (2012), pp. 510-520, 10.1016/j.dss.2012.07.002 View
    in ScopusGoogle Scholar [28] E. Pierpaoli, G. Carli, E. Pignatti, M. Canavari
    Drivers of precision agriculture technologies adoption: a literature review Procedia
    Technol., 8 (2013), pp. 61-69, 10.1016/j.protcy.2013.11.010 View PDFView articleView
    in ScopusGoogle Scholar [29] M. Marescotti, E. Demartini, R. Filippini, A. Gaviglio
    Smart farming in mountain areas: investigating livestock farmers’ technophobia
    and technophilia and their perception of innovation J. Rural Stud., 86 (2021),
    pp. 463-472, 10.1016/j.jrurstud.2021.07.015 View PDFView articleView in ScopusGoogle
    Scholar [30] M. Michels, V. Bonke, Musshoff Understanding the adoption of smartphone
    apps in dairy herd management J. Dairy Sci., 102 (10) (2019), pp. 9422-9434, 10.3168/jds.2019-16489
    View PDFView articleView in ScopusGoogle Scholar [31] D.L. Goodhue Understanding
    user evaluations Manage Sci., 41 (12) (1995), pp. 1827-1844, 10.1287/mnsc.41.12.1827
    Google Scholar [32] W. Lee, S. Shin A comparative study of smartphone addiction
    drivers’ effect on work performance in the U.S. and Korea J. Appl. Bus. Res.,
    32 (2) (2016), pp. 507-516, 10.19030/jabr.v32i2.9592 View in ScopusGoogle Scholar
    [33] D. Landmann, C.J. Lagerkvist, V. Otter Determinants of small-scale farmers’
    intention to use smartphones for generating agricultural knowledge in developing
    countries: evidence from rural India Eur. J. Dev. Res., 33 (2021), pp. 1435-1454,
    10.1057/s41287-020-00284-x View in ScopusGoogle Scholar [34] C.R. Eastwood, A.
    Renwick Innovation uncertainty impacts the adoption of smarter farming approaches
    Front. Sustain. Food Syst., 4 (2020), pp. 1-14, 10.3389/fsufs.2020.00024 Google
    Scholar [35] M. Gandorfer, S. Schleicher, K. Erdle Barriers to adoption of smart
    farming technologies In Germany Proceedings of the 14th International Conference
    on Precision Agriculture, Montreal, Quebec, Canada, Monticello (2018), pp. 1-8
    Google Scholar [36] W. Steeneveld, H. Hogeveen Characterization of Dutch dairy
    farms using sensor systems for cow management J. Dairy Sci., 89 (2015), pp. 709-717,
    10.3168/jds.2014-8595 View PDFView articleView in ScopusGoogle Scholar [37] R.A.
    Russell, J.M. Bewley Characterization of Kentucky dairy producer decision-making
    behavior J. Dairy. Sci., 96 (2013), pp. 4751-4758, 10.3168/jds.2012-6538 View
    PDFView articleView in ScopusGoogle Scholar [38] A. Knierim, M. Kernecker, K.
    Erdle, T. Kraus, F. Borgersa, A. Wurbs Smart farming technology innovations –
    Insights and reflections from the German Smart-AKIS hub NJAS Wagening. J. Life
    Sci., 91 (2019), Article 100314, 10.1016/j.njas.2019.100314 View PDFView articleView
    in ScopusGoogle Scholar [39] Bavarian State Institute of Agriculture, Sensorik
    am Rind – Die Fitness-Uhr für die Kuh. https://www.lfl.bayern.de/ilt/digitalisierung/252250/index.php,
    2022 (accessed: Feb. 21, 2022.). Google Scholar [40] F.D. Davis Perceived usefulness,
    perceived ease of use, and user acceptance of information technology MIS. Q.,
    13 (3) (1989), pp. 319-339, 10.2307/249008 View in ScopusGoogle Scholar [41] R.P.
    Bagozzi, K.H. Lee Consumer resistance to and acceptance of innovations Adv. Consum.
    Res., 26 (1999), pp. 218-225 Google Scholar [42] F.D. Davis User acceptance of
    information technology: system characteristics, user perceptions and behavioral
    impacts Int. J. Man. Mach. Stud., 38 (3) (1993), pp. 475-487, 10.1006/imms.1993.1022
    View PDFView articleView in ScopusGoogle Scholar [43] S. Taylor, P. Todd Understanding
    information technology usage: a test of competing models Inf. Syst. Res., 6 (2)
    (1995), pp. 144-176, 10.1287/isre.6.2.144 View in ScopusGoogle Scholar [44] J.M.
    Richards The cognitive consequences of concealing feelings Curr. Dir. Psychol.
    Sci., 13 (4) (2004), pp. 131-134 View in ScopusGoogle Scholar [45] J.M. Richards,
    J.J. Gross Composure at any cost? The cognitive consequences of emotion suppression
    Pers. Soc. Psychol. Bull., 25 (8) (1999), pp. 1033-1044, 10.1177/01461672992511010
    View in ScopusGoogle Scholar [46] I. Ajzen The theory of planned behaviour: reactions
    and reflections Psychol. Health, 26 (2011), pp. 1113-1127, 10.1080/08870446.2011.613995
    View in ScopusGoogle Scholar [47] L. Leone, M. Perugini, A.P. Ercolani Studying,
    practicing, and mastering: a test of the model of goal-directed behavior (MGB)
    in the software learning domain J. Appl. Soc. Psychol., 34 (9) (2004), pp. 1945-1973,
    10.1111/j.1559-1816.2004.tb02594.x View in ScopusGoogle Scholar [48] C.J. Armitage,
    M. Conner Efficacy of the theory of planned behaviour: a meta-analytic review
    Br. J. Soc. Psychol., 40 (4) (2001), pp. 471-499, 10.1348/014466601164939 View
    in ScopusGoogle Scholar [49] M. Perugini, R.P. Bagozzi The role of desires and
    anticipated emotions in goal directed behaviours: broadening and deepening the
    theory of planned behavior Br. J. Soc. Psychol., 40 (1) (2001), pp. 79-98, 10.1348/014466601164704
    View in ScopusGoogle Scholar [50] S. Arora, S. Sahney, D. Pradhan Potential benefits
    and descriptive norms in webrooming: an extended model of goal-directed behavior
    Int. J. Retail. Distrib. Manag, 50 (3) (2021), pp. 377-397 View in ScopusGoogle
    Scholar [51] J. Cheon, S. Lee, S.M. Crooks, J. Song An investigation of mobile
    learning readiness in higher education based on the theory of planned behavior
    Comput. Educ., 59 (3) (2012), pp. 1054-1064, 10.1016/j.compedu.2012.04.015 View
    PDFView articleView in ScopusGoogle Scholar [52] I. Ajzen The theory of planned
    behavior Organ. Behav. Hum. Decis. Process., 50 (2) (1991), pp. 179-211, 10.1016/0749-5978(91)90020-T
    View PDFView articleView in ScopusGoogle Scholar [53] V. Venkatesh, M.G. Morris,
    B. Gordon User acceptance of information technology: toward a unified view MIS.
    Q., 27 (3) (2003), pp. 425-478, 10.2307/30036540 View in ScopusGoogle Scholar
    [54] H. Boland, V. Hoffmann, J. U. Nage C. Kuczera Der Einfluss des sozialen Umfeldes
    auf betriebliche Entscheidungen von Landwirten. Kommunikation und Beratung l (Ed.),
    Sozialwissenschaftliche Schriften zur Landnutzung und Ländlichen Entwicklung,
    Margraf Publishers, Weikersheim (2006) Google Scholar [55] E.M. Rogers Social
    change in rural society A Textbook in Rural Sociology, Appleton-Century-Crofts,
    New York (1960) Google Scholar [56] E.R. Koshkaki, S. Solhi The facilitating role
    of negative emotion in decision making process: a hierarchy of effects model approach
    High Technol. Manag. Res., 27 (2) (2016), pp. 119-128, 10.1016/j.hitech.2016.10.010
    View PDFView articleView in ScopusGoogle Scholar [57] N.L. Stein, M.D. Liwag,
    E. Wade A goal-based approach to memory for emotional events: implementations
    for theories of understanding and socialization R.D. Kavanaugh, B. Zimmerberg
    and S.F. Mahwah Emotion: Interdisciplinary Perspectives, Lawrence Erlbaum Associates,
    New Jersey (1996), pp. 91-118 CrossRefView in ScopusGoogle Scholar [58] S. Schukat,
    H. Heise Towards an understanding of the behavioral intentions and actual use
    of smart products among German farmers Sustainability., 13 (2021), p. 6666, 10.3390/su13126666
    View in ScopusGoogle Scholar [59] V. Otter, M. Deutsch Did policy lose sight of
    the wood for the trees? An UTAUT-based partial least squares estimation of farmers
    acceptance of innovative sustainable land use systems Land Use Policy, 126 (2023),
    Article 106467, 10.1016/j.landusepol.2022.106467 View PDFView articleView in ScopusGoogle
    Scholar [60] V. Venkatesh, B. Bala Technology acceptance model 3 and a research
    agenda on interventions Decis. Sci., 39 (2) (2008), pp. 273-315, 10.1111/j.1540-5915.2008.00192.x
    View in ScopusGoogle Scholar [61] W.W. Chin The partial least squares approach
    for structural equation modeling Modern Methods for Business Research, Lawrence
    Erlbaum Associates, Mahwah, New Jersey (1998), pp. 295-336 View in ScopusGoogle
    Scholar [62] F. Albersmeier, A. Spiller Die reputation der Fleischwirtschaft:
    eine Kausalanalyse Ger. J. Agric. Econ., 59 (2010), pp. 258-270, 10.22004/ag.econ.146102
    Google Scholar [63] J.F. Hair, G.T.M. Hult, C.M. Ringle, M. Sarstedt, N.F. Richter,
    S. Hauff Partial Least Squares Strukturgleichungsmodellierung Eine Anwendungsorientierte
    Einführung. Franz Vahlen, Munich (2017) Google Scholar [64] D. Gefen, D. Straub,
    M. Boudreau Structural equation modeling and regression: guidelines for research
    practice Commun. Assoc. Inf. Syst., 4 (7) (2000), pp. 1-74, 10.17705/1CAIS.00407
    Google Scholar [65] Ringle, C.M., Wende S., and Becker J.M.. SmartPLS3. Boenningsted:
    SmartPLS GmbH https://www.smartpls.com/, 2015 (accessed Dez. 29, 2022). Google
    Scholar [66] C. Fornell, D.F. Larcker Evaluating structural equation models with
    unobservable variables and measurement error J. Mark. Res., 18 (1) (1981), pp.
    39-50, 10.1177/002224378101800104 Google Scholar [67] K. Backhaus, B. Erichson,
    W. Plinke, R. Weiber Multivariate Analysemethoden. Eine anwendungsorientierte
    Einführung (14th ed.), Springer Gabler, Berlin, Heidelberg (2016) Google Scholar
    [68] J. Henseler, C.M. Ringle, M. Sarstedt A new criterion for assessing discriminant
    validity in variance-based structural equation modelling J. Acad. Mark. Sci.,
    43 (2015), pp. 115-135, 10.1007/s11747-014-0403-8 View in ScopusGoogle Scholar
    [69] S. Geisser A predictive approach to the random effect model Biometrika, 61
    (1) (1974), pp. 101-107, 10.2307/2334290 View in ScopusGoogle Scholar [70] M.
    Stone Cross-valedictory choice and assessment of statistical predictions J. R.
    Stat. Soc. Series. B Stat. Methodol., 36 (2) (1974), pp. 111-147, 10.1111/j.2517-6161.1974.tb00994.x
    View in ScopusGoogle Scholar [71] German Farmers Association, Situationsbericht
    2021/22 des Deutschen Bauernverbands. https://www.bauernverband.de/situationsbericht/3-agrarstruktur-1/35-arbeitskraefte-undauszubildende,
    2022 (accessed Oct. 12, 2023). Google Scholar [72] Destatis Statistisches Bundesamt.
    Landwirtschaftszählung 2020. https://www.destatis.de/DE/Themen/Branchen-Unternehmen/Landwirtschaft-Forstwirtschaft-Fischerei/Landwirtschaftszaehlung2020/_inhalt.html
    (accessed Oct. 25, 2023). Google Scholar [73] Federal Statistical Office Germany,
    Milchleistung je Kuh in Deutschland in den Jahren 1900 bis 2021. https://de.statista.com/statistik/daten/studie/153061/umfrage/durchschnittlicher-milchertrag-je-kuh-in-deutschland-seit-2000/,
    2022 (accessed Sep. 27, 2022). Google Scholar [74] Federal Statistical Office
    Germany, Viehbestand – Fachserie 3 Reihe 4.1. https://www.destatis.de/DE/Themen/Branchen-Unternehmen/Landwirtschaft-Forstwirtschaft-Fischerei/Tiere-Tierische-Erzeugung/Publikationen/Downloads-Tiere-und-tierische-Erzeugung/viehbestand2030410215324.html,
    2022 (accessed Oct. 8, 2022). Google Scholar [75] H. Tergast, H. Hansen Steckbriefe
    Zur Tierhaltung in Deutschland: Milchkühe H. Thünen-Institut für Betriebswirtschaft,
    Braunschweig (2022) https://literatur.thuenen.de/digbib_extern/dn065685.pdf accessed
    Sep. 10, 2022 Google Scholar [76] J.I. Gargiulo, C.R. Eastwood, S.C. Garcia, N.A.
    Lyons Dairy farmers with larger herd sizes adopt more precision dairy technologies
    J. Dairy Sci., 101 (6) (2018), pp. 5466-5473, 10.3168/jds.2017-13324 View PDFView
    articleView in ScopusGoogle Scholar [77] W. Steeneveld, L.W. Tauer, H. Hogeveen,
    A.G.J.M Oude Lansink Comparing technical efficiency of farms with an automatic
    milking system and a conventional milking system J. Dairy Sci., 95 (2012), pp.
    7391-7398, 10.3168/jds.2012-5482 View PDFView articleView in ScopusGoogle Scholar
    [78] S. Schleicher, M. Gandorfer Digitalisierung in der Landwirtschaft: eine Analyse
    derAkzeptanzhemmnisse Digitale Marktplätze und Plattformen, Lecture Notes in Informatics
    (LNI), Gesellschaft für Informatik, Germany, Bonn. (2018), pp. 203-206 CrossRefGoogle
    Scholar [79] R. Finger Digital innovations for sustainable and resilient agricultural
    systems Eur. Rev. Agric. Econ (2023), pp. 1-33, 10.1093/erae/jbad021 Google Scholar
    [80] Bitkom. Digitalisierung in der Landwirtschaft. https://www.bitkom.org/sites/default/fi-les/file/import/Bitkom-Pressekonferenz-Digitalisierung-in-der-Landwirtschaft-02-11-2016-Praesentation.pdf,
    2016 (accessed Oct. 18, 2023). Google Scholar [81] R.S. Llewellyn Information
    quality and effectiveness for more rapid adoption decisions by farmers Field Crops
    Res., 104 (1–3) (2023), pp. 148-156, 10.1016/j.fcr.2007.03.022 View in ScopusGoogle
    Scholar [82] L. Reisig Wahrnehmung der Digitalisierung in der Landwirtschaft durch
    Betriebsleiter von Betriebsgemeinschaften in der Schweiz Digitalisierung Für Mensch,
    Umwelt und Tier, Bonn: Gesellschaft für Informatit, Germany, Freising (2020),
    pp. 259-264 Google Scholar [83] Schneider, W. Digitalisieren oder weichen? Wo
    bleibt die Landwirtschaft? In: landinfo 3, 2017, pp.8–12. Google Scholar [84]
    C.M. Eidt, H.M. Hickey, M.A. Curtis Knowledge integration and the adoption of
    new agricultural technologies: kenyan perspectives Food Secur., 4 (3) (2012),
    pp. 355-367, 10.1007/s12571-012-0175-2 View in ScopusGoogle Scholar [85] Rehman,
    T., McKemey M., Yates C.M., Cooke R.J., Garforth C.J., Tranter R.B., Park J.R.
    and Dorward P.T.. Identifying and understanding factors influencing the uptake
    of new technologies on dairy farms in SW England using the theory of reasoned
    action, Agric. Syst., 2023 94(2) 281–293. 10.1016/j.agsy.2006.09.006. Google Scholar
    [86] L. Shang, T. Heckelei, M.K. Gerullis, J. Börner, S. Rasch Adoption and diffusion
    of digital farming technologies - integrating farm-level evidence and system interaction
    Agric. Syst, 190 (C) (2021), Article 103074, 10.1016/j.agsy.2021.103074 View PDFView
    articleView in ScopusGoogle Scholar [87] S. Hüttel, M.T. Leuchten, M. Leyer The
    importance of social norm on adopting sustainable digital fertilisation methods
    Organ. Environ., 35 (1) (2022), pp. 79-102, 10.1177/1086026620929074 View in ScopusGoogle
    Scholar [88] T. Van Hertem, L. Rooijakkers, D. Berckmans, A.P. Fernandez, T. Norton,
    D. Berckmans, E. Vranken Appropriate data visualisation is key to Precision Livestock
    Farming acceptance Comput. Electron. Agric., 138 (2017), pp. 1-10, 10.1016/j.compag.2017.04.003
    View PDFView articleView in ScopusGoogle Scholar [89] Grotsch, H., Schulze H.,
    Sonntag W., and Thiele H.. Adoption von Aktivitätssystemen in der Milchviehhaltung:
    identifikation von Einflussfaktoren mittels Customer Journey Analyse. In: G Wirtschafts-
    und S Landbaues (Eds.), Resilienz Von Regionalen Und Globalen Wertschöpfungsketten
    der Agrar- und Ernährungswirtschaft. 2022. Google Scholar [90] P. Passafaro, A.
    Rimano, M.P. Piccini, R. Metastasio, V. Gambardella, G. Gullace, C. Lettieri The
    bicycle and the city: desires and emotions versus attitudes, habits and norms
    J. Environ. Psychol., 38 (2014), pp. 76-83, 10.1016/j.jenvp.2013.12.011 View PDFView
    articleView in ScopusGoogle Scholar [91] J. Andreoni Impure altruism and donations
    to public goods: a theory of warm-glow giving Econ. J., 100 (401) (1990), pp.
    464-477, 10.2307/2234133 Google Scholar [92] G. Carrus, P. Passafaro, M. Bonnes
    Emotions, habits and rational choices in ecological behaviours: the case of recycling
    and use of public transportation J. Environ. Psychol., 28 (1) (2008), pp. 51-62,
    10.1016/j.jenvp.2007.09.003 View PDFView articleView in ScopusGoogle Scholar [93]
    Grothkopf, V. and Schulze H.. Empirische Analyse der Einflussfaktoren auf die
    Digitalisierung der Milchviehhaltung. In: G Wirtschafts- und S Landbaues (Eds.),
    Resilienz Von Regionalen Und Globalen Wertschöpfungsketten der Agrar- und Ernährungswirtschaft.
    2022. Google Scholar [94] H. Schaak, O. Mußhoff Understanding the adoption of
    grazing practices in German dairy farming Agric. Syst., 165 (C) (2018), pp. 230-239,
    10.1016/j.agsy.2018.06.015 View PDFView articleView in ScopusGoogle Scholar [95]
    F.J. Dessart, R.B J.Barreiro-Hurlé Behavioural factors affecting the adoption
    of sustainable farming practices: a policy-oriented review Eur. Rev. Agric. Econ.,
    46 (3) (2023), pp. 417-471, 10.1093/erae/jbz019 Google Scholar Cited by (0) 1
    Informational text: More and more devices are connected to the Internet of Things
    (IoT). Smart products collect data via sensors, analyze it, and forward it via
    the Internet or receive data from other smart products. The \"intelligence\" of
    these products is that they perform tasks independently and communicate with other
    products. In the dairy sector, such IoT sensors include rumen sensors or sensor
    collars used in health monitoring. These sensors can record animal behaviors and
    movements. The health status of the animals can then be derived from this, diseases
    can be detected at an early stage, or calving and estrus can be determined. In
    the following, IoT sensors (rumen sensor, sensor collar) that are used in the
    health monitoring of dairy cows are in the focus of this survey. 2 12 cases were
    deleted from the final data set because the participants answered the questionnaire
    in less than half the median completion time (median=669.5 seconds, half median=334.7)
    © 2024 The Author(s). Published by Elsevier B.V. Part of special issue Adoption
    & Behavioural changes on Smart Agriculture Edited by Dr. Marilena Gemtou Agricultural
    University of Athens, Athens, Greece. Email: mgemtou@aua.gr, Dr. Gohar Isakhanyan
    Wageningen University and Research, Wageningen, The Netherlands. Email: gohar.isakhanyan@wur.nl
    View special issue Recommended articles Comparing machine-learning models of different
    levels of complexity for crop protection: A look into the complexity-accuracy
    tradeoff Smart Agricultural Technology, Volume 7, 2024, Article 100380 Olivier
    Gauriau, …, François Joudelat View PDF Digital innovations: Implications for African
    agribusinesses Smart Agricultural Technology, Volume 7, 2024, Article 100407 Kingsley
    Kofi Arthur, …, Peter Appiahene View PDF Classification of pumpkin disease by
    using a hybrid approach Smart Agricultural Technology, Volume 7, 2024, Article
    100398 Yohannes Agegnehu Bezabh, …, Habtamu Ayenew Asegie View PDF Show 3 more
    articles Article Metrics Captures Readers: 13 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Smart Agricultural Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'From intentions to adoption: Investigating the attitudinal and emotional
    factors that drive IoT sensor use among dairy farmers'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ahmadi F.
  - Abedi O.
  - Emadi S.
  citation_count: '0'
  description: The evolution of agriculture towards a modern, intelligent system is
    crucial for achieving sustainable development and ensuring food security. In this
    context, leveraging the Internet of Things (IoT) stands as a pivotal strategy
    to enhance both crop quantity and quality while effectively managing natural resources
    such as water and fertilizer. Wireless sensor networks, the backbone of IoT-based
    smart agricultural infrastructure, gather ecosystem data and transmit them to
    sinks and drones. However, challenges persist, notably in network connectivity,
    energy consumption, and network lifetime, particularly when facing supernode and
    relay node failures. This paper introduces an innovative approach to address these
    challenges within heterogeneous wireless sensor network-based smart agriculture.
    The proposed solution comprises a novel connectivity management scheme and a dynamic
    clustering method facilitated by five distributed algorithms. The first and second
    algorithms focus on path collection, establishing connections between each node
    and m-supernodes via k-disjoint paths to ensure network robustness. The third
    and fourth algorithms provide sustained network connectivity during node and supernode
    failures by adjusting transmission powers and dynamically clustering agriculture
    sensors based on residual energy. In the fifth algorithm, an optimization algorithm
    is implemented on the dominating set problem to strategically position a subset
    of relay nodes as migration points for mobile supernodes to balance the network’s
    energy depletion. The suggested solution demonstrates superior performance in
    addressing connectivity, failure tolerance, load balancing, and network lifetime,
    ensuring optimal agricultural outcomes.
  doi: 10.3390/inventions9010010
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Inventions All Article Types Advanced   Journals
    Inventions Volume 9 Issue 1 10.3390/inventions9010010 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editor Xinqing
    Xiao Subscribe SciFeed Recommended Articles Related Info Link More by Authors
    Links Article Views 1329 Table of Contents Abstract Introduction Literature Review
    The Proposed Method Results and Discussion Conclusions Author Contributions Funding
    Data Availability Statement Conflicts of Interest Appendix A. Energy Consumption
    and Path Lifetime Appendix B. Proof of Theorems References share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessArticle
    Enhancing Smart Agriculture Monitoring via Connectivity Management Scheme and
    Dynamic Clustering Strategy by Fariborz Ahmadi , Omid Abedi * and Sima Emadi Department
    of Computer Science, Yazd Branch, Islamic Azad University, Yazd 8915813135, Iran
    * Author to whom correspondence should be addressed. Inventions 2024, 9(1), 10;
    https://doi.org/10.3390/inventions9010010 Submission received: 15 November 2023
    / Revised: 9 December 2023 / Accepted: 11 December 2023 / Published: 5 January
    2024 (This article belongs to the Special Issue Inventions and Innovation in Smart
    Sensing Technologies for Agriculture) Download keyboard_arrow_down     Browse
    Figures Review Reports Versions Notes Abstract The evolution of agriculture towards
    a modern, intelligent system is crucial for achieving sustainable development
    and ensuring food security. In this context, leveraging the Internet of Things
    (IoT) stands as a pivotal strategy to enhance both crop quantity and quality while
    effectively managing natural resources such as water and fertilizer. Wireless
    sensor networks, the backbone of IoT-based smart agricultural infrastructure,
    gather ecosystem data and transmit them to sinks and drones. However, challenges
    persist, notably in network connectivity, energy consumption, and network lifetime,
    particularly when facing supernode and relay node failures. This paper introduces
    an innovative approach to address these challenges within heterogeneous wireless
    sensor network-based smart agriculture. The proposed solution comprises a novel
    connectivity management scheme and a dynamic clustering method facilitated by
    five distributed algorithms. The first and second algorithms focus on path collection,
    establishing connections between each node and m-supernodes via k-disjoint paths
    to ensure network robustness. The third and fourth algorithms provide sustained
    network connectivity during node and supernode failures by adjusting transmission
    powers and dynamically clustering agriculture sensors based on residual energy.
    In the fifth algorithm, an optimization algorithm is implemented on the dominating
    set problem to strategically position a subset of relay nodes as migration points
    for mobile supernodes to balance the network’s energy depletion. The suggested
    solution demonstrates superior performance in addressing connectivity, failure
    tolerance, load balancing, and network lifetime, ensuring optimal agricultural
    outcomes. Keywords: smart agriculture; remote sensing; IoT-based agriculture;
    dynamic clustering; connectivity restoration; optimal agricultural outcomes 1.
    Introduction Remote sensing plays a vital role in smart agriculture. Using sensors,
    it collects information about soil conditions, weather conditions, humidity, and
    crop health, and contributes to food security and sustainable development [1,2].
    Smart agriculture uses a series of equipment, such as agricultural sensors, actuators,
    and drones, which are connected through wireless communication. WSN is the most
    significant component in smart agriculture, and is used in soil analysis, weather
    monitoring, determining yield productivity, the early detection of disease, and
    crop monitoring. Figure 1 shows an example of this architecture. In these systems,
    agricultural sensors should cover the entire environment during network activity
    to fully monitor crops. Thus, network connectivity is the primary challenge in
    this area. Each node failure can cause the disconnection of a series of other
    sensors from the network, so fault tolerance in WSN-based smart agriculture is
    a solution for high network connectivity. Additionally, other significant challenges,
    such as data traffic unbalancing, energy consumption, node damping near sinks,
    and environment factors lead to failure in these networks [3]. All the above challenges
    regarding high network connectivity should be solved so they do not negatively
    affect the efficiency of the smart agriculture system. Figure 1. Smart agriculture
    based on heterogenous wireless sensor network. The preceding challenges can be
    overcome by developing a wireless sensor and actuator network (WSAN), where supernodes
    serve as alternative gateways that are the core of the WSAN [4]. In addition to
    broader transmission ranges and more excellent batteries, supernodes perform the
    decision making process and make specific reactions based on their decisions.
    In many cases, data delivery from nodes to these supernodes is sufficient to ensure
    the network functions correctly [5,6]. According to [7], optimizing the placement
    of supernodes can extend the network lifetime by a factor of five. These networks
    can also be used for different purposes, e.g., recognizing combustion in agriculture
    [8], underground precision agriculture [9], and olive grove monitoring [10]. Studies
    indicate that traffic load and energy consumption distribution pose challenges
    for heterogeneous wireless sensor networks. Inefficient distributions result in
    a situation where, following the failure of the initial network node, 90% of the
    energy in live nodes remains unused [11]. Many studies attempted to balance the
    energy consumption of nodes so that they would discharge at a specific interval
    through different methods, e.g., by using a dynamic transmission range and adjusting
    the transmission range [12]. Earlier works reported that balancing energy consumption
    can improve the network’s lifetime by 30% since it helps balance the data traffic
    in the nodes adjacent to the sink [13]. Consequently, the proposed path construction
    method considers the residual energy of path-forming nodes as a crucial parameter,
    with nodes of a lower energy contributing to fewer paths. Hotspots, or bottlenecks,
    are nodes that exist at a one-step distance from supernodes. Their energy discharges
    much more rapidly than that of other nodes since they serve as relay nodes for
    other nodes in addition to sending sensed data. Thus, hotspot failure is a significant
    challenge for sensor networks since it disconnects many nodes from supernodes
    [14,15,16]. Numerous studies have analyzed supernode mobility [14,15,17,18] and
    clustering [19,20,21,22,23,24,25] to overcome this challenge. The energy consumption
    of relay nodes can be balanced through supernode mobility and the periodic change
    of relay nodes. However, a mobile supernode imposes a new challenge on the network
    since a new movement and settlement change the network topology. Control messages
    are required to arrange a new topology to provide network coverage and connectivity.
    Therefore, handling the premature damping of relay nodes leads to the control
    message overhead in the network. Furthermore, finding optimal settlement points
    for a supernode is an NP-hard problem [26]. In [27], a suboptimal heuristic algorithm
    was assessed to find settlement points. The preceding techniques have the drawback
    of focusing primarily on the relay nodes while ignoring the other nodes’ energy
    consumption. Agriculture sensors may fail for various reasons, such as energy
    discharge, hardware faults, and severe weather. This failure can disconnect a
    series of nodes from the network. It is essential to design fault-tolerant methods
    for network re-connectivity. In the disjoint path vector (DPV) method [6], each
    node is connected to a set of supernodes through k-disjoint paths to enable a
    node to select other paths to transmit the sensed data in case of node failure.
    DPV is aimed at reducing the total transmission range and maximum transmission
    range in order to lengthen the network’s lifetime. It can maintain supernode connectivity
    at a node failure rate of up to 5% [5,28]. In DPV, a node failure reduces k-vertex
    connectivity, whereas a supernode failure disconnects a large number of nodes.
    In [5], the adaptive disjoint path vector (ADPV) utilized r-restoration paths
    to maintain k-vertex connectivity. Despite improved supernode connectivity, it
    had two significant disadvantages: (1) the supernode layer was not fault-tolerant,
    and supernode failure disconnected a large number of nodes; (2) hotspots were
    required to be much more than k in number to avoid bottlenecks and premature death.
    In other words, ADPV was heavily dependent on the network structure and node locations
    in an operating environment. This paper introduces a scheme for connectivity restoration,
    a two-layered fault-tolerant system, and a dynamic clustering method designed
    for heterogeneous wireless sensor network-based smart agriculture. The primary
    aim is to enhance quality of service (QoS) by improving connectivity restoration
    through the establishment of connections between individual nodes and m-supernodes
    using k-disjoint paths. Additionally, the proposal seeks to augment resilience
    to node and supernode failures by adjusting transmission powers and dynamically
    clustering sensors based on residual energy. Furthermore, it aims to prolong network
    lifetime by strategically positioning relay nodes as migration points for mobile
    supernodes. The following is an overview of this paper’s primary contributions:
    By considering residual energy levels in path-construction nodes, the design facilitates
    efficient data transfer from low-energy to high-energy nodes. This approach aims
    to optimize network lifetime and load balancing. By preventing the transmission
    of control messages that do not impact neighboring path tables, the proposed method
    optimizes the use of control messages, leading to improved network efficiency
    and lower congestion. By designing a distributed and energy-aware methodology,
    a robust topology is built to tolerate up to k − 1 node failures and m − 1 supernode
    failures, greatly increasing network connectivity. By dynamically reassigning
    nodes to secondary supernodes based on the longest path lifetime, in the event
    of a primary supernode failure, the system ensures fault tolerance and network
    connectivity. By implementing an optimal greedy algorithm to identify migration
    points from relay nodes, this strategy relocates supernodes strategically. This
    design leads to distributing traffic load, enhancing fault tolerance by preventing
    relay node failures, and improving network lifetime through efficient supernode
    movement and settlement. This study is divided into several sections. Section
    2 reviews the study literature, and Section 3 presents the suggested solution
    and algorithms. The evaluation findings are presented in Section 4, and a conclusion
    is drawn in Section 5. 2. Literature Review Based on the predictions, the world
    population will reach one billion people by 2050 [29]. This population growth
    requires a sustainable proportional increase in crops. Also, it is estimated that
    the number of people with cancer will be about 26 million by 2030 [30], and 17
    million people will die from this disease. Food security is one of the ways to
    prevent this disease. Remote sensing plays a vital role in modern agriculture
    since it can effectively provide and improve food security and sustainable crop
    growth by monitoring the quality and quantity of crops. Moreover, the application
    of remote sensing, especially in its water-related contexts, has the potential
    to furnish sustainable resolutions for addressing the imminent challenge of irrigation
    water scarcity [31]. The infrastructure of these systems is wireless sensor networks.
    The challenges of WSN-based smart agriculture should be solved for better crop
    management. This section presents an overview of the recent studies on fault tolerance
    topology control, clustering methods, mobile supernodes, heterogeneity, and connectivity
    restoration. Fault tolerance is an essential task in WSNs, ensuring uninterrupted
    data exchange. In recent years, many studies have been conducted on fault tolerance
    topology control [32,33,34,35] to reduce the residual energy consumption of nodes
    by adjusting the transmission power. In [36], a distributed topology control method
    was proposed for a WSN to change its topology dynamically through network coding.
    In [34], the game algorithm was employed to design a fault-tolerant topology control
    scheme for underwater WSNs by reducing unnecessary links and energy consumption.
    In [37], clustering was combined with fault tolerance to reduce energy consumption
    by applying fault tolerance to inter-cluster links. Fault tolerance and clustering
    were integrated in [38], using particle swarm optimization (PSO) to connect the
    members of a failed cluster to the new cluster head. These methods mainly focus
    on topology control and clustering to reduce node energy consumption. They ensure
    fault tolerance by lowering energy consumption. Designing clustering algorithms
    is a method of reducing energy consumption in WSNs. Cluster head selection has
    been recently discussed in many studies. In [39], residual energy, node density,
    and node distances from sinks were integrated, and a fuzzy system was employed
    to calculate the probability of node selection as cluster heads. In addition to
    these parameters, link lifetime was considered in [40], assigning specific weights
    to each parameter. The residual energy had the highest weight, whereas the sink
    distance had the lowest weight. In [41], a PSO-based method was adopted to find
    the optimal cluster head by combining residual energy and sink distance to minimize
    the message overhead. In [42], nodes were clustered before using energy-based
    paths to connect clusters. In [43], the adaptive selfish optimization algorithm
    was utilized to select cluster heads, and the k-medoids technique was used to
    determine the nodes of each cluster to lengthen the network’s lifetime by preserving
    node energy. In [44], each UAV was considered a cluster head by default, and hierarchical
    clustering was employed to transmit data to UAVs. In actuality, clustering algorithms
    distribute network nodes over various zones; hence, cluster heads and inter-cluster
    routes should include fault tolerance to prevent network disconnectivity. These
    techniques only considered energy usage and lacked fault tolerance. Mobile sinks
    are a standard method to distribute relay jobs between nodes since such mobility
    can periodically change the relay nodes. In [45], the main focus was on reducing
    the sink travel distance, and path planning was used to shorten the traveled distance
    of sinks. In [46], the primary purpose was to lengthen the network’s lifetime.
    To balance traffic load distribution, the relay nodes were periodically changed
    by utilizing sink movement between clusters. In [47], mobile sinks and clustering
    were integrated; the sink was mounted on the cluster head with the highest traffic
    load in the subsequent migration. In [48], two important parameters were measured:
    movement time and stop time. The sink moved to the next migration at the movement
    time and remain there for the stop time. In [49], an ant colony optimization-based
    algorithm was proposed, where each node selected a data-gathering point via a
    random function. These data-gathering points determined the sink settlement points.
    In [50], a bipartite graph was created to divide sensor nodes into two sets, and
    the mobile sink calculated the nearest neighboring node using the breadth-first
    traversal algorithm once it entered each set. Then, it visited the node in the
    next movement. These methods focused mainly on collecting sensor data, decreasing
    energy consumption, and neglecting fault tolerance. Regarding connectivity restoration
    in WSAN, the DPV algorithm [6] is designed to decrease the total transmission
    power in heterogeneous wireless sensor networks by maintaining the k-vertex disjoint
    paths from each sensor to a group of supernodes. Generally, this algorithm’s input
    is a k-vertex supernode-connected graph, and its output is a subgraph with fewer
    edges composed of the same collection of sensors. This method finds the edges
    that satisfy the following conditions: Each node has a k-disjoint path to the
    supernode set; ∑ 𝑛 𝑖=0 𝑝 𝑖 is minimized (pi is the weight of the maximum weighted
    edge). ADPV [5] extends the DPV algorithm and uses the residual energy of sensor
    nodes to generate a fault-tolerant topology. This method improves the network’s
    lifetime by balancing the energy consumption of sensor nodes and involving initialization
    and restoration phases. In the first phase, the necessary information is collected,
    and the initial topology is constructed. In ADPV, whenever a node failure disrupts
    the connectivity of the k-vertex supernode, other k-disjoint paths are extracted
    for each sensor node during the restoration phase. At the end of the restoration
    phase, the transmission power of each node is adjusted in the generated topology.
    The disadvantage of the studies reviewed by [5,6] is that they considered only
    node failures; however, network connectivity may also be affected by supernode
    failures. In these methods, sensor nodes and supernodes are static; hence, they
    are ineffective in prolonging the network’s lifetime. The suggested approach to
    increasing network lifetime involves mobilizing supernodes and considering their
    failures. 3. The Proposed Method This section introduces k-disjoint paths to m-mobile
    supernodes (KDPMS). In the worst case, this approach can tolerate k − 1 node and
    m − 1 supernode failures and balance relay jobs between the nodes. KDPMS also
    manages connectivity by changing the transmission power of nodes and clustering
    the sensor nodes dynamically. It merely requires messaging with one-step neighbors
    to construct a topology. The flowchart in Figure 2 helps to describe the proposed
    algorithms and theorems. In this method, three tables are required for each node,
    e.g., a local path table (LPT), disjoint path table (DPT), and maintenance disjoint
    path table (MDPT). These tables are organized into m + m′ ⊂ Ns segments, where
    Ns represents a set of supernodes, and each segment details paths to a specific
    supernode with their respective lifetimes. Within each DPT segment, k-disjoint
    paths are arranged by lifetime, leading to a designated supernode. DPTi encompasses
    all paths in segment i, while DPTi…j includes segments i to j of the DPT. Additionally,
    DPTi.d denotes the supernode ID in segment i, and DPTi,j signifies path j of segment
    i. The initial m segments of the DPT establish connections to m supernodes, while
    the subsequent m′ segments are employed for the preservation of m-supernode connectivity.
    Notably, there are kλ nodes in DPTi, where λ denotes the longest path length.
    Furthermore, the total numbers of paths and nodes in the DPT are k(m + m′) and
    kλ(m + m′), respectively. Figure 2. A flowchart of the proposed method. Each segment
    of the MDPT contains k′-disjoint paths aimed at restoring k-vertex connectivity.
    When a node failure removes a path from DPTi, the path of the longest lifetime
    in MDPTi takes its place. It is crucial for proper network operation that for
    all of i, DPTi.d equals MDPTi.d. In MDPTi, there are k′λ nodes, and the total
    numbers of paths and nodes in the MDPT are represented as k′(m + m′) and k′λ(m
    + m′), respectively. Upon receiving new path information from immediate neighbors
    with supernode destination d, these paths are recorded in LPTi.d. Following the
    confirmation of their disjoint nature, the paths are organized in descending order
    based on their lifetimes. The initial k paths, possessing the longest lifetimes,
    are allocated to DPTi, while the remaining k′ paths find placement in MDPTi. Subsequently,
    DPT organizes its segments by lifetime, ensuring ∀i (lifetime (DPTi) > lifetime
    (DPTi+1)). DPT1 holds disjoint paths to the primary supernode, while DPT2…m contains
    disjoint paths to secondary supernodes. The alternative supernodes are utilized
    to reinstate m-supernode connectivity from the ensuing m′ segments. The optimal
    disjoint paths are identified by determining the path lifetime based on the residual
    energy of their nodes, as per Equation (A7). KDPMS is structured into five distributed
    algorithms. During Algorithms 1 and 2, denoted as path information collection,
    each node undertakes the extraction of k-optimal disjoint paths and k′-optimal
    maintenance disjoint paths for individual segments. This process involves the
    acquisition of path information from adjacent one-step neighboring nodes, resulting
    in a topology characterized by k-disjoint paths to m-mobile supernodes. Inspired
    by the algorithms employed in DPV and ADPV, this study introduces a nuanced yet
    impactful modification aimed at minimizing the number of control messages. Within
    this framework, every supernode assumes the role of a cluster head, and each agricultural
    node is integrated as a member of the corresponding supernode cluster, as identified
    within DPT1.d. The algorithm is designed to optimize network lifetime, facilitate
    load balancing, and enhance network connectivity. Algorithm 3 is enacted in response
    to a node failure, disrupting k-vertex connectivity. In such situations, k′-disjoint
    paths within MDPTi are utilized to restore k-vertex connectivity. It is important
    to note that each node failure leads to adjustments in the DPT and MDPT of nodes
    with paths involving the failed node. In the event of a supernode failure, Algorithm
    4 is initiated, employing m′-alternative supernodes to preserve m-supernode connectivity.
    In this approach, supernode i is designated as a cluster head, and the node with
    the longest path lifetime to supernode i is assigned to cluster i. In the event
    of a cluster head failure within a node, the imperative is for the node to dynamically
    designate an alternate cluster head, guided by considerations of the path’s lifetime
    to the new cluster head. These algorithms play a crucial role in ensuring fault
    tolerance and sustaining network connectivity. Algorithm 5 confronts the challenges
    of identifying optimal supernode migration points and the supernode settlement
    time at these points, and establishing the next migration point. During this algorithm,
    an initial assumption is made that the locations of supernodes are static, and
    migration points are determined through the implementation of an optimal greedy
    algorithm applied to the dominating set problem. The migration points are selected
    from the relay nodes, and the supernodes are mounted on these nodes during their
    movements. This strategic process aims to mitigate the risk of relay node failures,
    consequently enhancing fault tolerance and prolonging the network’s lifetime.
    3.1. Problem Statement Initiating our discourse, we present the formal elucidation
    of k-vertex to m-supernode connectivity. Definition 1. Disjoint Paths [6]: Disjoint
    paths are paths with common ends but distinct middle nodes. Definition 2. k-Vertex
    to m-Supernode Connectivity [51]: Achieving k-vertex to m-supernode connectivity
    in a heterogenous wireless sensor network depends on ensuring that removing k
    − 1 nodes will not disconnect any nodes from their respective supernodes. Similarly,
    the removal of m − 1 supernodes will not disconnect any nodes from the overall
    network structure. In the initial configuration, we are given a network characterized
    by k-vertex to m-supernode connectivity, encompassing Ns supernodes and N sensor
    nodes. The transmission range of sensor nodes is subject to adjustment within
    the constraints of a predefined constant denoted as Rmax. By incorporating models
    of node and supernode failures, the count of active agriculture sensor nodes and
    supernodes diminishes over the network’s operational duration. Notably, we employ
    N(t) to represent the set of active agriculture sensor nodes and Ns(t) to denote
    active supernodes at a given time, t, measured in discrete intervals. The primary
    objective lies in determining the transmission ranges of all active sensor nodes
    at any temporal instance. This ensures that the network topology maintains the
    k-vertex prescribed to m-supernode connectivity, thereby enhancing overall network
    lifetime. Definition 3. Connectivity Management Lifetime Maximization with Mobile
    Supernodes: Let G = (V, E) be a k-disjoint path to m-supernode connected with
    a set Ns(t) ⊂ V of active supernodes and a set, N(t) ⊂ V, of active agriculture
    nodes at time t, such that Ns(t) ∩ N(t) = ∅, and Ns(t) ∪ N(t) = V(t). The goal
    is to find a set of edges (F ⊂ E) and a set of nodes (C ⊂ N(t)) as the migration
    points such that the resulting graph, G (N(t)-C, E-F), meets the following conditions:
    Each node has k-disjoint paths to m-supernode connectivity; ∑ |𝑛| 𝑖=1 𝑙 𝑖 is maximized
    (li is the path lifetime obtained from Equation (A7)); N(t)-C is optimized so
    that  ∑ |𝑟| 𝑖=1 𝑟 𝑖 can be maximized (ri is relay node lifetime); ∑ |𝑛| 𝑖=1 𝑡
    𝑖 is minimized (ti is the number of sensor node control messages). The study aims
    to optimize network connectivity by establishing connections between agriculture
    nodes and m-supernodes through k-disjoint paths with the longest lifetime. Additionally,
    it seeks to improve tolerance to node and supernode failures by adjusting transmission
    powers and dynamically clustering sensors based on residual energy levels. The
    study further aims to prolong network lifetime by considering residual energy
    levels in path construction nodes and strategically positioning relay nodes as
    migration points for mobile supernodes. An additional objective is to minimize
    the usage of control messages throughout these processes, contributing to the
    overall improvement of network lifetime. 3.2. Path Information Collection and
    Connectivity-Centric Topology Design in KDPMS Algorithm 1 serves as the foundational
    algorithm of the KDPMS, which encapsulates the pseudocode for collecting path
    information and constructing k-disjoint paths to m-mobile supernode connectivity.
    The corresponding notations for this algorithm are shown in Table 1. In this methodology,
    the algorithm designates the segment in LPT to the node contingent upon the received
    path, I, under the condition that LPTi.d = I.d, where I.d denotes the destination
    node of the received path or the supernode d. Subsequently, the received path
    is integrated with the existing paths of LPTi. Following a confirmation of their
    disjoint nature, the paths undergo sorting based on path lifetime in descending
    order. The algorithm then allocates the first k paths with the longest lifetime
    to DPTi, while the remaining paths are placed in MDPTi. A comprehensive description
    of this algorithm follows. Table 1. Notations used in KDPMS. Once the nodes and
    supernodes have settled in the operational environment, each supernode sends an
    Init message containing the supernode ID and its lifetime across the network.
    The one-step neighboring sensor nodes receive this message and build a new segment,
    namely DPTi, MDPTi, and LPTi, for the Init-sender supernode. Each node that receives
    the path sent through the Init message places the received path in LPTi. In this
    case, since it includes only the supernode, this path is disjoint and is placed
    in DPTi. Once DPTi has been updated, a node uses its maximum power to send a pathinfo
    message, including DPTi and its path lifetime across the network. Upon receipt
    of the pathinfo message, each node checks the I.d of the received paths. If a
    segment corresponding to supernode d is identified in LPT, the paths are joined
    with the existing paths of LPTi, where i is the corresponding segment of I.d.
    Subsequently, non-disjoint paths are systematically eliminated following the execution
    of Algorithm A1, in Appendix A. The surviving disjoint paths are then arranged
    in descending order based on their lifetimes, with the first k paths being allocated
    to DPTi, while the subsequent k′ paths find placement in MDPTi. In instances where
    the I.d of the received paths is not found within the LPT segments, an LPTi segment
    is meticulously constructed to satisfy the condition LPTi.d = I.d. Once the paths
    are confirmed to be disjoint, the first k paths exhibiting the longest lifetimes
    are positioned within DPTi, with the subsequent k′ paths being designated to MDPTi.
    Algorithm 1 Path information collection in KDPMS Input: I, k, k′ Output: DPTi,
    MDPTi LPT, DPT, MDPT ← 0; For every received pathinfo message I do      If I.d
    ∉ LPT.d            create new segment (LPTi, DPTi, MDPTi)            LPTi.d, DPTi.d,
    MDPTi.d ← I.d            LPTi← I.P            DPTi ← I.P            Maxpli ← Pl
    (I.P);                 Transmit (LPTi)      Else             i ← S (I.d)                                                                                          //Finding
    the received path segment             D ← max-dis-set (LPTi, k + k′)    //Finding
    disjoint nature of existing paths (Algorithm A1)             LPTi ← I.P ⋃ LPTi             Sort
    (LPTi)             D′ ← max-dis-set (LPTi, k + k′)     //Finding disjoint nature
    of existing paths and received paths             If (PL(D′) > PL(D)) then                     DPTi
    = {pi ∈ LPTi | i ≤ k}                     MDPTi = {pi ∈ LPTi | i > k, i ≤ k +
    k′}                     If (Maxpli is updated)                       //preventing
    the sending of redundant messages                             Transmit (LPTi)                     End
    if             End if      END if End for In DPV, ADPV, and MPD, each node that
    updates the DPT, receiving a new disjoint path or a disjoint path of a higher
    lifetime, sends the pathinfo message across the network. Consequently, the transmission
    of control messages persists until no further updates are observed. KDPMS has
    been refined through the identification and prevention of message transmissions
    that do not effectuate updates in the disjoint path tables (DPTs) of neighboring
    nodes, resulting in fewer control messages. Given the disjoint nature of paths
    related to the neighbors of each node, the node is constrained to occupy, solely,
    one of its neighbor’s paths. It is imperative that this particular path possesses
    the maximum lifetime. Consequently, the transmission of a path characterized by
    a shorter lifetime would be ineffective in updating the DPT of the adjacent node.
    Exemplifying this, node D possesses two disjoint paths to supernode X, and node
    E maintains a single disjoint path (Figure 3b). Node B’s transmission of the pathinfo
    control message updates node D (Figure 3c), yet node D’s transmission of the pathinfo
    message fails to update node E due to the latter’s pre-existing path containing
    node D with a superior lifetime (Figure 3d). Precluding the transmission of such
    messages avoids increased message complexity at the source node and computational
    complexity at the destination node. Consequently, the preservation of the maximum
    lifetime among paths in segment i (Maxpli) is ensured, and potential paths capable
    of updating Maxpli are communicated via pathinfo messages. Figure 3. Redundant
    control message: (a) initial topology, (b) disjoint paths of nodes D and E, (c)
    disjoint paths of nodes D and E after the pathinfo message has been sent by node
    B, and (d) disjoint paths of nodes D and E after the pathinfo message has been
    sent by node D. Following the completion of pathinfo messages, DPT and MDPT with
    m + m′ segments are established. Subsequently, Algorithm 2 is executed at each
    node for connectivity construction, the identification of required neighbors,
    and clustering in KDPMS. The segments in the DPT are arranged based on the lifetimes,
    adhering to the condition ∀i (lifetime (DPTi) > lifetime (DPTi+1)). Concurrently,
    MDPT updates itself in alignment with DPT, maintaining ∀i (MDPTi.d = DPTi.d).
    A requisite condition for achieving k-disjoint paths to m-supernode connectivity
    is that k ≥ m. To connect each node to m-supernodes, the proposed algorithm selects
    the first k − m + 1 paths of the first segment (DPT1, 1…k−m+1) to connect to the
    primary supernode, and the first paths of segments 2 to m (DPT2…m,1) to connect
    to the secondary supernode. For example, for k = 3 and m = 2, two paths of segment
    one are selected for connecting to the primary supernode, and one path of segment
    two is selected for linking to the secondary supernode. This yields k-disjoint
    paths to m-supernode connectivity, prioritizing paths with the longest lifetime
    from each node to the designated supernodes. Once the disjoint paths have been
    determined, each node identifies the first node of the selected paths (without
    considering itself) as its required neighbors and readjusts its transmission power
    to connect to its remotest neighbor. Subsequently, it communicates this neighborhood
    update to its neighbors via a Notify message. In KDPMS, clustering is utilized
    to confine supernode movement and balance sensor node energy consumption. Designating
    each supernode as a cluster head, nodes join the cluster of a supernode within
    DPT1.d. This straightforward clustering method optimally distributes network load,
    as each node possesses paths with the longest lifetime to the primary supernode.
    Subsequently, a notification message (comprising ID, node residual energy, DPT1,
    and MDPT1) is transmitted to the primary supernode, signaling membership. This
    data exchange mitigates data delay and the number of control messages during supernode
    movement, as explained in Section 3.5. Algorithm 2 Finding required neighbors,
    sensor clustering, and connectivity-centric topology design   Input: DPT, m, m′,
    k Output: RN RN ← 0 If |DPT| ≥ m + m′          Sort (DPT)          DPT ← {DPTi
    | i ≤ m + m′} End if S ← {DPT1, 1…k−m+1 ∪ DPT2…m,1} For all p ∈ S            RN
    ← RN ∪ p. first End for For all p ∈ RN            Transmit notify(p)                                                           //
    Notify to required neighbors End for Notify (DPT1.d, DPTi, MDPTi, RE)               //
    Notify to cluster head Theorem 1. The number of control messages in KDPMS is nearly
    equal to half of the messages sent by the DPV and ADPV. Proof.  In accordance
    with references [5,6], the message complexity for a node in both DPV and ADPV
    is expressed as O(nΔ), where n represents the node count and Δ signifies the maximum
    degree of a node. Within the framework of KDPMS, the guarantee to preserve the
    maximum lifetime within segment i, denoted as Maxpli, is firmly established. The
    transmission of potential paths capable of updating Maxpli is facilitated through
    the exchange of pathinfo messages. It is imperative to emphasize that a path with
    a superior lifetime possesses the ability to update Maxpli. In the best-case,
    the initial path in DPTi boasts the highest path lifetime. Consequently, subsequent
    paths received by the node lack the capacity to update Maxpli. In this context,
    the node’s control message transmissions amount to 1. Conversely, in a worst-case
    scenario, the first path in DPTi features the lowest path lifetime, with subsequent
    paths arranged in ascending order of path lifetime in DPTi. Each received path
    in this scenario triggers a Maxpli update, leading to the transmission of control
    messages. Given that the node’s degree is represented as Δ, the number of messages
    transmitted in this circumstance equals Δ. On average, the number of transmitted
    messages in KDPMS is denoted as 𝑛+𝑛Δ 2 = 𝑛(Δ+1) 2 , which is nearly equal to half
    of the messages sent by the DPV and ADPV. □ Theorem 2. The message complexity
    of path information collection and connectivity-centric topology design in KDPM
    is O(nΔ), and the runtime equals O(nΔ2). Proof.  According to [5,6], a node’s
    message complexity is O(nΔ), with n denoting the number of nodes and Δ representing
    the maximum degree of the node. While KDPMS enhancements result in a reduction
    in the transmitted control messages, the message’s complexity remains unaffected.
    Upon receiving the pathinfo message, a node combines the received and existing
    paths in LPTi, sorting them by path lifetime. K-disjoint paths are allocated to
    DPTi, and the next k′ paths are assigned to MDPTi. Each node then identifies required
    neighbors and a primary supernode. The union operation complexity is O(p), path
    sorting is O(p logp), selecting k + k′ disjoint paths (Algorithm A1) is O ( 𝑝
    𝑘+ 𝑘 ′ ) [5,6], identifying the required neighbors is O(k), and determining the
    primary supernode is O(1). This results in a computational complexity of O ( 𝑝
    𝑘+ 𝑘 ′ +𝑝 𝑙𝑜𝑔𝑝+𝑝+𝑘+1 ), where p signifies the number of joined paths in LPTi.
    Given that each node transmits O(nΔ) messages, it follows that each node receives
    O(nΔ2) messages. Consequently, the overall asymptotic running time for each node
    is expressed as O ( 𝑛 Δ 2 (𝑝 𝑘+ 𝑘 ′ +𝑝 𝑙𝑜𝑔𝑝+𝑝+𝑘+1)) . Given that k, k′, and p
    are constants, the time complexity is thereby established as O(nΔ2). □ 3.3. Node
    Failure Tolerance in KDPMS (the First Layer’s Fault Tolerance) Once node failure
    leads to k-disjoint paths to m-supernode disconnectivity, the node failure message,
    containing the failed node’s ID, is sent by the neighbors of the failed node along
    the network. Upon receiving the message, each node checks all the paths in the
    DPT and MDPT, removing the path containing the failed node. Given the disjoint
    nature of paths in DPT and MDPT, each node failure causing k-vertex disconnectivity
    removes only one path. Therefore, the KDPMS algorithm ensures that it can restore
    k-disjoint paths to m-supernode connectivity if there is a path in the MDPT. Algorithm
    3 represents the pseudocode of this subroutine, with the notations shown in Table
    1. Algorithm 3 Node failure tolerance algorithm in KDPMS Input: k, k′, DPT, MDPT
    Output: DPT, MDPT Failednode ← 0 For all received node failure δ do                        If
    δ.failednode ∈ DPT1                                If δ.failednode ∈ DPT1,1…k−m+1                                           DPT1←
    DPT1 − p | {p ∩ δ.failednode ≠ 0}                                           LPT1
    ← DPT1 ⋃ MDPT1                                           Update path lifetime
    (LPT1)                                           Sort (LPT1)                                           DPT1
    ← {pi ∈ LPT1 | i ≤ k}                                           MDPT1 ← {pi ∈
    LPT1 | i > k}                                           Execute Algorithm 2                               Else                                           DPT1
    ← DPT1 − p | {p ∩ δ.failednode ≠ 0}                                           LPT1
    ← DPT1 ⋃ MDPT1                                           Sort (LPT1)                                           DPT1
    ← {pi ∈ LPT1 | i ≤ k}                                           MDPT1 ← {pi ∈
    LPT1 | i > k}                               Endif                        Endif                        Foreach
    (i > 1 && i ≤ m)                      // Failed node in segments 2 to m                                   If
    δ.failednode ∈ DPTi,1                                           DPTi ← DPTi −
    p | {p ∩ δ.failednode ≠ 0}                                           LPTi ← DPTi
    ⋃ MDPTi                                           Update path lifetime (LPTi)                                           Sort
    (LPTi)                                           DPTi ← {pj ∈ LPTi | j ≤ k}                                           MDPTi
    ← {pj ∈ LPTi | j > k}                                           Execute Algorithm
    2                                   Else                                           DPTi
    ← DPTi − p | {p ∩ δ.failednode ≠ 0}                                           LPTi
    ← DPTi ⋃ MDPTi                                           Sort (LPTi)                                           DPTi
    ← {pj ∈ LPTi | j ≤ k}                                           MDPTi ← {pj ∈
    LPTi | j > k}                                   Endif                        Endfor                        Foreach
    (i > m && i ≤ m + m′)           // Failed node in segments m + 1 to m + m′                                      If  δ.failednode
    ∈ DPTi                                           DPTi← DPTi − p | {p ∩ δ.failednode
    ≠ 0}                                           LPTi ← DPTi ⋃ MDPTi                                           Sort
    (LPTi)                                           DPTi ← {pj ∈ LPTi | j ≤ k}                                           MDPTi
    ← {pj ∈ LPTi | j > k}                                      Endif                          Endfor                          Foreach
    (i ≥ 1 && i ≤ m + m′)                   // Failed node in MDPT                                    If
    δ.failednode ∉ DPTi &&    δ.failednode ∈ MDPTi                                         MDPTi
    ← MDPTi − p | {p ∩ δ.failednode ≠ 0}                                    Endif                          Endfor             Transmit
    (δ.failednode) Endfor To elucidate this algorithm and its impact on connectivity
    restoration, we elaborate its effects on node l. Nodes are connected through k-disjoint
    paths to m-supernodes (in DPT1, 1…k−m+1 and DPT2…m,1). KDPMS ensures k-vertex
    disconnectivity if a failed node is present in these paths. Subsequently, the
    path with the failed node in DPTi is eliminated (where i denotes the segment of
    the node failure occurrence). After merging the remaining k − 1 paths in DPTi
    with MDPTi, path lifetimes are updated per (A7), and the updated paths are sorted
    by lifetime. The initial k paths are assigned to DPTi, and the remaining paths
    are assigned to MDPTi. Paths are updated via update lifetime messages from origin
    to destination and backward lifetime information from nodes in the path. Upon
    restoring k-vertex connectivity, a path shifts from MDPTi to DPTi, and the list
    of the required neighbors of the node is changed. Consequently, the node adjusts
    its transmission power to reach the farthest neighbor based on the updated list.
    The number of nodes in k paths is kλ, leading to a k-vertex disconnectivity probability
    of 𝑘𝜆/ 𝑛 𝑡 , where 𝑛 𝑡 is the number of active sensor nodes in the network. If
    the failed node is not in the subset of k-disjoint paths but is found in DPT1…m+m′,
    the failed node’s path is removed from DPTi. The remaining DPTi paths are then
    merged with MDPTi paths and reorganized. The initial k paths are reinstated in
    DPTi, and the remaining paths are allocated to MDPTi. As k-vertex disconnectivity
    does not occur in this case, path lifetimes remain unaltered to minimize the control
    message overhead. It should be noted that the following failed nodes update these
    paths. If the failed node exclusively exists in MDPTi, the path containing the
    failed node is eliminated, reducing the count of maintenance disjoint paths by
    1. Ultimately, the node failure message is transmitted to neighboring nodes within
    the network. Theorem 3. The number of paths eliminated from each node’s DPT and
    MDPT after node failure i is as follows: 𝑒 𝑖 = (𝑘+ 𝑘 ′ )(𝑚+ 𝑚 ′ )[[ ∑ 𝑖−2 𝑗=0
    ( (−1) 𝑗  𝜆 𝑗+1  ∏ 𝑖−𝑗−2 𝑗 ′ =0 (𝑛− 𝑗 ′ ))]+ (−1) 𝑖−1  𝜆 𝑖 ] ∏ 𝑖−1 𝑗=0 (𝑛−𝑗) .
    (1) Proof.  This proof is provided in Appendix B. □ Theorem 4. The number of node
    failures resulting in path elimination and subsequently leading to k-vertex disconnectivity,
    is as follows: 𝑛 k+ k ′ =𝑛∗ ∏ k+ k ′ 𝑖=0 (1− 1 (k+ k ′ −i)𝜆 ). (2) Proof.  This
    proof is provided in Appendix B. □ Theorem 5. The number of update lifetime messages
    of each node upon failed node i is 𝑢𝑙 𝑖 =[ 𝑘𝜆 𝑛−(𝑖−1) ]∗ ⎡ ⎣ ⎢ ⎢ ⎢ (𝑘+ 𝑘 ′ )−
    ⎛ ⎝ ⎜ ⎜ ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[ ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗 𝜆 𝑗+1 ∏ 𝑖−𝑗−2 𝑗 ′ =0 (𝑛− 𝑗 ′ ))]+
    (−1) 𝑖−1 𝜆 𝑖 ] ∏ 𝑖−1 𝑗=0 (𝑛−𝑗) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟ ⎤ ⎦ ⎥ ⎥ ⎥ . (3) Proof.  This proof
    is provided in Appendix B. □ Theorem 6. The message complexity of node failure
    tolerance in KDPMS is O(Δ2). Proof.  In the event of a node failure causing k-vertex
    disconnectivity, update lifetime messages are dispatched for k + k′ paths in DPTi
    and MDPTi. Given that k + k′ < Δ, the message complexity for k-vertex connectivity
    restoration is bounded by O(Δ). In the worst-case scenario, where paths are disjoint,
    the number of connectivity restorations is O(Δ), resulting in a message complexity
    of O(Δ2) for each node. □ 3.4. Supernode Failure Tolerance in KDPMS (the Second
    Layer’s Fault Tolerance) The transmission of the supernode failure message occurs
    through the neighboring nodes of the failed supernode in the network, and is triggered
    when it leads to k-vertex to m-supernode disconnectivity. Upon the reception of
    this message, a node activates the supernode failure tolerance algorithm. It is
    worth noting that the DPT comprises m + m′ segments, each corresponding to a required
    supernode. Paths to the primary supernode, secondary supernodes, and alternative
    supernodes are stored in DPT1, DPT2…m, and DPTm+1…m+m′, respectively. The failure
    of a supernode in DPT1…m results in both m-supernode and k-vertex disconnectivity.
    This is attributed to the fact that the k-disjoint paths, those with the longest
    lifetime, are connected to supernodes 1 to m. Additionally, the failure of the
    primary supernode in a node leads to the disconnection of the node from the cluster
    head. The details of KDPMS’s various and valuable scenarios for handling the supernode
    failure message are detailed below. In the case of a failed supernode in DPT1
    (the primary supernode), the elimination of all paths in both DPT1 and MDPT1 is
    performed, resulting in the disconnection of this node from the cluster head.
    Subsequently, the shift operation 𝑆 𝑚+ 𝑚 ′ 1 is executed, during which the DPT
    and MDPT segments replace the previous segments. The shift operation is defined
    as follows: 𝑆 𝑌 𝑋 =[ 𝐷𝑃𝑇 𝑖 ← 𝐷𝑃𝑇 𝑖+1          ∀i∈x,x+1,…,y 𝑀𝐷𝑃𝑇 𝑖 ← 𝑀𝐷𝑃𝑇 𝑖+1   ∀i∈x,x+1,…,y
    (4) As the DPT1 and MDPT1 paths have changed, their union is classified, updating
    the lifetimes of the paths by sending an update lifetime message. Then, the paths
    are arranged based on their lifetimes, placing the first k paths in DPT1 and the
    remaining paths within MDPT1. Then, the node sends a notification to new supernode
    DPT1.d (containing the ID, residual energy, DPT1, and MDPT1) so that supernode
    d can consider it a cluster member. This is known as a cluster head change. Finally,
    this node executes Algorithm 2 to update its required neighbors and leads to k-vertex
    to m-supernode connectivity by adjusting transmission power. Should a supernode
    failure be situated in DPT2…m, it results in k-vertex to m-supernode disconnectivity
    due to the presence of paths to the secondary supernodes within these segments.
    In such instances, 𝑆 𝑚+ 𝑚 ′ 𝑖 is activated, with i denoting the segment corresponding
    to the failed supernode. Subsequently, the node executes Algorithm 2 to update
    required neighbors, thereby restoring k-vertex to m-supernode connectivity. In
    this case, the update lifetime message is not sent to avoid an increased number
    of control messages. In the event of a supernode failure within DPTm+1…m+m′, there
    is no k-vertex to m-supernode disconnectivity as these segments pertain to alternative
    supernodes. In this scenario, only the execution of 𝑆 𝑚+ 𝑚 ′ 𝑖 is required to
    eliminate the failed supernode from the list of alternative supernodes. Subsequently,
    each node communicates the supernode failure message to its neighbors. The pseudocode
    for the supernode failure tolerance algorithm is delineated in Algorithm 4. Algorithm
    4 Supernode failure tolerance algorithm in KDPMS Input: k, k′ Output: DPT, MDPT
    Failedsupernode ← 0 For all received supernode failure δ do        If δ.failedsupernode
    ∈ DPT1.d                           // primary supernode failure             Eliminate
    DPT1, MDPT1             For each i < m + m′                 DPTi ← DPTi+1                 MDPTi
    ← MDPTi+1             Endfor             LPT1 ← DPT1 ⋃ MDPT1              Update
    path lifetime (LPT1)             Sort (LPT1)             DPT1 ← {pi ∈ LPT1 | i
    ≤ k}             MDPT1 ← {pi ∈ LPT1 | i>k}             Execute Algorithm 2        Endif        If
    δ.failedsupernode ∈ DPT2…m.d        //  secondary supernode failure             i
    ← S(DPT.d) // Finding the segment corresponding to the failed supernode             Eliminate
    DPTi, MDPTi             For each l > i && l < m + m′                 DPTl ← DPTl+1                 MDPTl
    ← MDPTl+1             Endfor             LPTi ← DPTi ⋃ MDPTi                         Sort
    (LPTi)             DPTi ← {pj ∈ LPTi | j ≤ k}             MDPTi ← {pj ∈ LPTi |
    j > k}             Execute Algorithm 2        Endif        If δ.failedsupernode
    ∈ DPTm+1…m+ m′.d        //   alternative supernode failure             i ← S (DPT.d)             Eliminate
    DPTi, MDPTi             For each l > i && l < m + m′                   DPTl ←
    DPTl+1                   MDPTl ← MDPTl+1             Endfor        Endif End for
    Theorem 7. The number of paths eliminated from each node’s DPT and MDPT after
    supernode failure i and node failure j is 𝑒 𝑖,𝑗 = ⎡ ⎣ ⎢ ⎢ ⎢ (𝑚+ 𝑚 ′ )[[ ∑ 𝑖−2
    𝑗=0 ( (−1) 𝑗 ∏ 𝑖−𝑗−2 𝑗 ′ =0 ( 𝑛 𝑠 − 𝑗 ′ ))]+ (−1) 𝑖−1 (𝑚+ 𝑚 ′ )] ∏ 𝑗−1 𝑗 ′ =0
    (𝑛− 𝑗 ′ ) ⎤ ⎦ ⎥ ⎥ ⎥ ∗ ⎡ ⎣ ⎢ ⎢ ⎢ (𝑘+ 𝑘 ′ )− ⎛ ⎝ ⎜ ⎜ ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[ ∑ 𝑗−2 𝑗 ′
    =0 ( (−1) 𝑗 ′ 𝜆 𝑗 ′ +1 ∏ 𝑗− 𝑗 ′ −2 𝑗 ″ =0 (𝑛− 𝑗 ″ ))]+ (−1) 𝑗−1 𝜆 𝑗 ] ∏ 𝑗−1 𝑗
    ′ =0 (𝑛− 𝑗 ′ ) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟ ⎤ ⎦ ⎥ ⎥ ⎥ (5) Proof.  This proof is provided in Appendix
    B. □ Theorem 8. The number of update lifetime messages upon failed supernode i
    and failed node j is as follows: 𝑢𝑙 𝑖,𝑗 =[ 1 n s −(𝑖−1) ]∗ ⎡ ⎣ ⎢ ⎢ ⎢ (𝑘+ 𝑘 ′ )−
    ⎛ ⎝ ⎜ ⎜ ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[ ∑ 𝑗−2 𝑗 ′ =0 ( (−1) 𝑗 ′ λ 𝑗 ′ +1 ∏ 𝑗− 𝑗 ′ −2 𝑗 ″ =0
    (𝑛− 𝑗 ″ ))]+ (−1) 𝑗−1 λ 𝑗 ] ∏ 𝑗−1 𝑗 ′ =0 (𝑛− 𝑗 ′ ) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟ ⎤ ⎦ ⎥ ⎥ ⎥ . (6)
    Proof.  This proof is provided in Appendix B. □ Theorem 9. The message complexity
    of supernode failure tolerance in KDPMS is O(Δ). Proof.  When supernode failure
    occurs in DPT1, an update lifetime message is sent for the k + k′ paths in DPT1
    and MDPT1. Since k + k′ < Δ, message complexity in each m-supernode connectivity
    restoration is O(Δ). Given that each node has m + m′ segments, there are m + m′
    restorations in the worst scenario. Thus, asymptotic message complexity is O(Δ
    (m + m′)). Since m and m′ are constants, message complexity is O(Δ). □ 3.5. Supernode
    Mobility Model in KDPMS In Algorithm 5 of KDPMS, clusters established through
    the application of Algorithm 2 are utilized. In this clustering method, each node
    belongs to the DPT1.d cluster, and the number of clusters corresponds to the number
    of supernodes. It is important to highlight that a supernode failure would decrease
    the cluster count by 1. Given that DPT1 has only one supernode, KDPMS guarantees
    that each node is a member of a single cluster. Consequently, a graph of sensor
    nodes is formed within each supernode. With an assumed uniform distribution of
    nodes in the clusters, the number of nodes in each cluster equals 𝑛 𝑛 𝑠 , where
    n is the number of sensor nodes and ns is the number of supernodes. Algorithm
    5 Determining migration points in KDPMS  Input: N  Output: S     S ← 0     𝑆 
        ← N  while  𝑆      is not empty              S ← S ⋃ MaxDegree( 𝑺
         )              𝑆      ← 𝑆      − S − { x| x ∈ neighbor(S)
    }   end while This phase aims to identify optimal migration points for distributing
    relay tasks within each cluster, a task known to be NP-hard [27]. This paper addresses
    this challenge by adapting the optimization algorithm based on the dominating
    set problem, achieving a complexity of O(n2). The goal of this algorithm is to
    identify a set of points, denoted as S, with the smallest cardinality such that
    every node is either in S or has a neighbor in S. It is essential to highlight
    that supernodes execute this distributed algorithm, ensuring it does not impact
    the computational complexity of individual nodes. The outcome is a minimal subset
    of sensor nodes, serving as the mounting points for the mobile supernode in each
    deployment. Following the identification of migration points within each cluster,
    the migration point node message is transmitted to all nodes within these subsets.
    This ensures that, in the event of a supernode failure causing the disconnection
    of these nodes from the cluster head, the subsequent primary supernode is promptly
    notified about the migration points. The relocation of each supernode to the new
    migration point induces a topological change, leading to k-vertex to m-mobile
    supernode disconnectivity. In a previous study [28], all nodes in the network
    sent an Init message, and k-disjoint paths were extracted from each node to others,
    ensuring k-vertex connectivity at each migration point. However, approach [28]
    suffered from control message overhead and the requirement for substantial memory
    to store these paths. In our current research, upon identifying S for each cluster,
    S members transmit the Init message to the network. Cluster members receive the
    message and execute Algorithm 1 to extract disjoint paths to the sender, conserving
    memory by storing these paths in the supernode. Subsequently, when the supernode
    migrates to a new point, it dispatches paths to its member nodes through a path-update
    message. An additional mobility challenge lies in determining the next migration
    point to avert relay node failure and maintain a balanced traffic distribution.
    To accommodate the adaptation of mobile supernodes to nodes’ residual energy,
    the migration point subset for mobile supernodes is organized according to the
    residual energy within each supernode. The node with the highest residual energy
    is chosen as the subsequent migration point, aiming to prolong the network’s lifetime.
    The duration of the supernode’s migration or stay at each migration point is computed
    based on the energy levels of neighboring nodes [18]. Consequently, when the residual
    energy of neighboring nodes falls below a specified threshold, the supernode initiates
    migration to the next point. Theorem 10. The message complexity of KDPMS equals
    O(nΔ), and the runtime equals O(nΔ2). Proof.  In [52], it was proven that the
    maximum cardinality γ(G) in the minimum dominating problem was 3n/8 or O(n). Due
    to the disjoint nature of paths among neighboring nodes, each node can send a
    maximum of Δ messages. Therefore, the message complexity of the mobility model
    is equal to O(nΔ). The number of node failure tolerance messages sent is O(Δ2),
    the number of supernode failure tolerance messages sent is O(Δ), and the number
    of path information collection messages sent is O(nΔ). As a result, the total
    asymptotic message complexity of each node is O(nΔ + Δ2 + Δ + nΔ). Therefore,
    the message complexity of each node is O(nΔ). Given that each node sends O(nΔ)
    messages, it can be concluded that each node receives O(nΔ2) messages. Based on
    Theorem 2, the computational complexity of each received message is O( 𝑝 𝑘+ 𝑘
    ′ +𝑝 𝑙𝑜𝑔𝑝+𝑝+𝑘+1 ) = O(1). As a result, the computational complexity of KDPMS is
    O(nΔ2). □ 4. Results and Discussion This section evaluates the proposed algorithm
    against DPV and ADPV algorithms using manual simulation. The simulator operates
    on stochastic topologies, calculating and reporting various parameters. The results
    suggest that nodes and supernodes are uniformly distributed in a 600 m × 600 m
    area, with an initial maximum transmission range (Rmax) of 100m for nodes and
    supernodes, as indicated in [5,6]. Experiments cover node counts from 100 to 550,
    with k values of 2, 3, and 4, m values of 2, 3, and 4, and supernode ratios of
    3% and 5%. Each experiment runs the mentioned algorithms 100 times, reporting
    their average rates. Figure 4 and Figure 5 depict the node fault tolerance in
    ADPV, DPV, and KDPMS algorithms. Two modes of supernode disconnectivity and k-disjoint
    paths to m-supernode disconnectivity are considered for a more precise assessment
    of this evaluation. Supernode disconnectivity occurs when at least one active
    node exists in the network connecting to no supernode. The disconnectivity of
    k-disjoint paths to m-mobile supernodes occurs when a node exists in a network,
    and the number of its disjoint paths for access to m-mobile supernodes is less
    than k, or the number of supernodes available for connectivity is less than m.
    According to this definition, Figure 4 shows the percentage of node failure tolerance
    before supernode disconnectivity, and Figure 5 depicts the percentage of node
    failure tolerance before k-disjoint paths to m-mobile supernode disconnectivity.
    Figure 4. Percentage of failed nodes when supernode disconnectivity occurs: (a)
    k = 2, Sr = 3%, (b) k = 2, Sr = 5%, (c) k = 3, Sr = 3%, (d) k = 3, Sr = 5%, (e)
    k = 4, Sr = 3%, and (f) k = 5, Sr = 5%. Figure 5. Percentage of failed nodes when
    k-vetrtex supernode disconnectivity occurs: (a) k = 2, Sr = 3%, (b) k = 2, Sr
    = 5%, (c) k = 3, Sr = 3%, (d) k = 3, Sr = 5%, (e) k = 4, Sr = 3%, and (f) k =
    5, Sr = 5%. According to the simulation results, the KDPMS algorithm outperforms
    ADPV and DPV within two modes of supernode connectivity maintenance and k-disjoint
    paths to m-supernode connectivity. Figure 4 and Figure 5 show that the DPV algorithm
    cannot be considered a suitable solution for fault tolerance due to the stationary
    and damping status of nodes near the supernode. Relay node damping leads to the
    disconnectivity of many nodes from supernodes, and this algorithm does not provide
    a mechanism to overcome this problem. Regarding energy awareness and retrieval
    paths, the ADPV algorithm provides higher node fault tolerance than DPV does.
    ADPV outperforms dense networks compared to sparse ones because more supernodes
    exist in these networks, and more disjoint paths are available for connectivity.
    These figures show no significant difference between ADPV and DPV in sparse networks.
    Moreover, the damping status of nodes near the supernode is the main shortcoming
    of ADPV, like DPV, which results in the disconnectivity of other nodes from the
    supernode set. In DPV and ADPV, supernode disconnectivity happens when 5% and
    23% of nodes fail, respectively. K-vertex disconnectivity occurs after node failures
    of 2% and 8%. On the other hand, k-vertex disconnectivity and supernode disconnectivity
    occur from node failures of 16% and 58%, respectively, in the KDPMS algorithm.
    In sparse networks of 100, 150, and 200 nodes, the average node failure tolerance
    for k-vertex connectivity and supernode connectivity is, respectively, 3% and
    5% in the DPV and 4% and 14% in the ADPV. In contrast these values are 10% and
    48% in the KDPMS algorithm. Figure 6 and Figure 7 depict the network lifetime
    for instances depicted in Figure 4 and Figure 5. The network lifetime for the
    DPV algorithm is not significantly affected by network density, as relay node
    damping disconnects other nodes from the network, reducing the network’s lifetime.
    Regarding the energy awareness in the ADPV algorithm, the energy depletion of
    relay nodes is carried out more slowly than it is under DPV, resulting in a longer
    lifetime of this algorithm. Also, ADPV has a longer lifetime in dense networks
    than in sparse ones because more disjoint paths are extracted in dense networks.
    In addition to the nodes’ energy considered for extracting and retrieving disjoint
    paths in the KDPMS algorithm, mobile supernodes are used to solve the challenge
    of damping relay nodes. As seen in Figure 6 and Figure 7, this algorithm has a
    longer lifetime than that under previous techniques. Figure 6. Comparison of supernode
    connectivity lifetime in DPV, ADPV and KDPMS: (a) k = 2, Sr = 3%, (b) k = 2, Sr
    = 5%, (c) k = 3, Sr = 3%, (d) k = 3, Sr = 5%, (e) k = 4, Sr = 3%, and (f) k =
    5, Sr = 5%. Figure 7. Comparison of k-vertex supernode connectivity lifetime in
    DPV, ADPV and KDPMS: (a) k = 2, Sr = 3%, (b) k = 2, Sr = 5%, (c) k = 3, Sr = 3%,
    (d) k = 3, Sr = 5%, (e) k = 4, Sr = 3%, and (f) k = 5, Sr = 5%. These data show
    that the KDPMS algorithm outperforms DPV and ADPV in terms of lifetime in supernode
    and k-vertex connectivity. Within 2-vertex, 3-vertex, 4-vertex, and 1-vertex supernode
    connectivity, respectively, the lifetime of this method is, on average, 107%,
    123%, 79%, and 235% higher than that of the DPV algorithm. On the other hand,
    in the cases of 2-vertex, 3-vertex, 4-vertex, and 1-vertex supernode connectivity,
    respectively, the lifetime of this algorithm is 46%, 56%, 35%, and 88% higher
    than that of the ADPV algorithm. Based on the results obtained, an increased k
    value leads to a higher node transmission range and a shorter network lifetime.
    Additionally, an Sr increase leads to a longer lifetime of the network. The strength
    of KDPMS is seen in k-vertex to m-mobile supernode connectivity. In this case,
    when supernode disconnectivity occurs, another supernode is retrieved for reconnection,
    and when k-vertex disconnectivity happens, another path of MDPT is retrieved for
    k-vertex connectivity. Therefore, this algorithm has a longer lifetime compared
    to that of the previous algorithm. For instance, in the case of k = 4 and sr =
    3% and 550 nodes, the lifetime of KDPMS-4-2 connectivity equals 807 s, while it
    equals 527 s in ADPV-4 connectivity. The supernode fault tolerance for the DPV,
    ADPV, and KDPMS algorithms is shown in Figure 8. Many nodes are disconnected from
    the network with each supernode failure because DPV and ADPV do not offer a solution
    for supernode fault tolerance. Each node in the KDPMS algorithm is connected to
    m supernodes, and m′ alternative supernodes are used to retrieve m-supernode connectivity.
    Examples of Figure 8 have been assessed using the assumptions that k = 2, sr =
    3%, m = 2, and m′ = 2. Figure 8. Comparison of supernode failure tolerance in
    DPV, ADPV, and KDPMS: (a) N = 300, (b) N = 350, (c) N = 400, (d) N = 450, (e)
    N = 500, and (f) N = 550. It is assumed in all experiments in Figure 8 that nodes
    are disconnected from the network only due to the failure of supernodes, while
    ignoring node failure in these experiments. As is seen in n = 300, the first supernode
    failure causes a disconnectivity of 9.4% and 6.6% of nodes from the network in
    DPV and ADPV. The reason is that these nodes available in the generated topology
    are only connected to the failed supernode. This limitation hinders their effective
    strategy for supernode failure tolerance. In the KDPMS algorithm, no considerable
    disconnectivity occurs in the network up to the third supernode failure because
    two alternative supernodes exist for connectivity retrieval. The number of nodes’
    disconnectivity dramatically increases after the m + m′ supernode failure. Therefore,
    unlike the previous techniques that do not have supernode fault tolerance, this
    algorithm provides an appropriate tolerance up to the m + m′ supernode failure
    level. On average, the percent of disconnected nodes before the failure of the
    m + m′ supernode equals 36% and 42% in ADPV and DPV algorithms, respectively,
    while it equals 2% in the KDPMS algorithm. Figure 9 shows connectivity retrievals
    of ADPV and KDPMS algorithms for k = 2, 3, and 4, and sr = 3%. Connectivity retrieval
    occurs in the ADPV when a node failure leads to k-vertex disconnectivity. Therefore,
    an increase in the k number leads to an increase in connectivity retrievals. In
    dense networks with many nodes, an increase in node failure leads to an increase
    in the number of connectivity retrievals in ADPV. In addition to node failure,
    supernode failure and mobility result in connectivity retrieval in the KDPMS algorithm.
    Figure 9. Number of restored connections in ADPV and KDPMS: (a) k = 2, (b) k =
    3, and (c) k = 4. In this algorithm, as k increases, the disconnectivity of the
    k-vertex increases, necessitating more connectivity retrieval. Additionally, more
    nodes mean more instances of node failure and connectivity retrievals. Regarding
    the proposed technique’s supernode failure tolerance, more supernodes imply more
    supernode failures and also more requirements for connectivity retrieval. Additionally,
    supernode mobility and connectivity retrieval increase as the number of supernodes
    increases. For k = 2, 3, and 4, the connection retrievals in KDPMS are 4.9, 5.9,
    and 7.7 times higher than these rates in ADPV. For a better and more accurate
    evaluation of the suggested technique and a comparison with fault tolerance solutions
    that use mobile supernodes, ADPV has been developed, enabling it to use mobile
    supernodes (MADPV). Each supernode moves to the next random migration point when
    the stay time has expired according to the fully stochastic movement pattern of
    KDPMS. The network lifetime and the total number of control message transmissions
    are compared in this examination. The total number of control messages in KDPMS
    and MADPV for k = 2 and sr = 5% is shown in Figure 10. Figure 10. Number of message
    transmissions in KDPMS and MADPV algorithms. According to the first observation,
    an increase in the number of sensor nodes and supernodes causes a rise in the
    mobility of supernodes and a corresponding increase in the number of message exchanges
    required for connectivity retrieval. The second observation demonstrates that
    the MADPV method offers more message exchanges than the suggested technique does
    since it needs some message exchange for each supernode’s mobility towards the
    new migration point to create a k-vertex topology, while the proposed method maintains
    k-vertex connectivity during migration. On average, the number of control messages
    transmitted in the proposed algorithm is 22% less than that under MADPV. Figure
    11 depicts the network lifetime for k = 2 and sr = 5% in KDPMS and MADPV algorithms.
    The first observation indicates that increasing the number of nodes and supernodes
    would increase the network lifetime due to the extraction of more disjoint paths.
    The second observation shows that the MADPV algorithm’s high number of control
    messages can reduce network lifetime by increasing node energy usage. The third
    observation shows that stochastic mobility in MADPV has prevented the covering
    of all relay nodes and the early death of these nodes would reduce the network’s
    lifetime. On average, the network lifetime of the proposed technique is 43% greater
    than that of MADPV. Figure 11. Lifetime comparison of the KDPMS and MADPV algorithms.
    5. Conclusions In summary, this paper presented a novel scheme for enhancing quality
    of service (QoS) in heterogeneous wireless sensor network-based smart agriculture
    monitoring. The introduced framework, with its distributed and energy-aware methodology,
    establishes a robust network topology, showcasing its capability to tolerate failures
    and prolong network connectivity. The incorporation of an optimal greedy algorithm
    for supernode migration further strengthens load balancing and network lifetime.
    These contributions provide valuable insights for the advancement of wireless
    sensor network-based smart agriculture, offering a foundation for future research
    and practical applications in heterogeneous environments. Simulation results demonstrate
    significant improvements in node fault tolerance, supernode fault tolerance, node
    lifetime, and path lifetime when contrasted with those in previous studies. This
    comprehensive approach represents a noteworthy advancement in fortifying the robustness
    and longevity of networks within smart agricultural systems. Recognizing the heightened
    mobility and relocation of supernodes is essential due to the increased demand
    for message exchange to adapt to changing network topologies. As a result, additional
    research is necessary to determine the optimal number of supernodes that can simultaneously
    ensure coverage and connectivity, thereby improving fault tolerance for both nodes
    and supernodes within the network. Author Contributions Conceptualization, F.A.
    and O.A.; methodology, F.A.; software, F.A.; validation, S.E. and O.A.; formal
    analysis, O.A.; investigation, F.A. and O.A.; resources, S.E.; data curation,
    O.A.; writing—original draft preparation, F.A.; writing—review and editing, S.E.;
    visualization, F.A.; supervision, O.A and S.E.; project administration, O.A. All
    authors have read and agreed to the published version of the manuscript. Funding
    This research received no external funding. Data Availability Statement Data are
    contained within the article. Conflicts of Interest The authors declare no conflict
    of interest. Appendix A. Energy Consumption and Path Lifetime KDPMS controls topology
    dynamically based on the residual energy of nodes and supernodes. In this research,
    the path lifetime is formally defined as follows: The input packets, output packets,
    and generated packets of each node are shown as fI, fO, and fG, respectively,
    in this energy model. Evidently, the number of input packets for each node is
    delineated as follows: 𝑓 𝐼 𝑛 = ∑ 𝐿 𝑚𝑛 𝑓 𝑂 𝑚 (A1) where n denotes a specific node,
    and Lmn represents the wireless channels between node n and its one-hop neighbors.
    The number of output packets for each node is as follows: fnO = fnI + fnG (A2)
    Clearly, each node receives packets, senses events, and generates data. The energy
    consumption of each node is as follows: Enconsume = ER fnI +EfnO (A3) where ER
    indicates the amount of energy used to receive a bit of data. In [12], this value
    was reported as 50 nj/bit. Moreover, ET indicates the energy consumed in transmitting
    a bit of data and is formulated as follows: ET = Eelec + Eamp dh (A4) where Eelec
    refers to the transmitter or receiver circuitry dissipation, whereas Eamp indicates
    the energy consumption of an amplifier to maintain reliable radio transmission.
    Furthermore, d represents the distance of a node from its neighbors, whereas h
    indicates the path loss exponent. In [12], Eelec equals 50 nj/bit, whereas Eamp
    equals 100 pj/bit/m2, h = 2. According to (A4), energy usage decreases with a
    decreasing node distance from neighboring nodes. The residual energy of a node
    will be as follows: EnResidual = EnInitial − EnConsume (A5) Given the residual
    energy, the number of neighbors of a node and its hop count reliability are as
    follows: Reliability (n)=𝛼 𝐸 𝑅𝑒𝑠𝑖𝑑𝑢𝑎𝑙 𝑛 𝑁(𝑛)𝐸 𝐼𝑛𝑖𝑡𝑖𝑎𝑙 𝑛  +β 𝜆 ℎ𝑜𝑝 𝑐𝑜𝑢𝑛𝑡 (A6) fI,
    fO, and their energy usage depend on the number of node neighbors. Therefore,
    the larger the value of N(n), the less reliable node n becomes. At the same time,
    the efficiency of the network might be significantly impacted by the low hop counts.
    In actuality, the noise collision decreases with decreasing hop counts. In this
    equation, α + β = 1. The path lifetime is formally defined as follows: if path
    P includes p nodes of n1, n2, …, and np when n1 and np are source and destination
    nodes, respectively, the path lifetime is the minimum reliability of path nodes.
    Lifetime (𝑃)= min 1<𝑛<𝑝 𝑟𝑒𝑙𝑖𝑎𝑏𝑖𝑙𝑖𝑡𝑦 𝑛 (A7) Algorithm A1 shows the pseudocode for
    finding disjoint paths in the KDPMS system, selecting k + k′ paths with the longest
    lifetime, and determining the maximum path lifetime for each segment. Algorithm
    A1 Finding disjoint path in KDPMS [6] (max-dis-set) Input: LPTi and k + k′ Output:
    D D ← 0  If |LPTi| > k + k′ then    Q ← { q ∈ LPTi | |q| = k + k′};    pl ← 0    qmax
    ← 0    For All q ∈ Q do       If q consists of disjoint paths, then          if
    PL(q) > pl then             pl ← PL(q);             qmax ← q;          End if       End
    if    End for    D ← qmax;    Maxpli ← qmax .first_path.pl          //Find the
    lifetime of the first disjoint path (maximum lifetime) End if Appendix B. Proof
    of Theorems Proof of Theorem 3. To establish the theorems, a uniform failure probability
    is assumed for the nodes. The likelihood of node failure in DPT and MDPT is contingent
    on the quantity of nodes within them. At the beginning of network activity, DPT
    and MDPT possess k(m + m′) and k′(m + m′) paths, along with k(m + m′)λ and k′(m
    + m′)λ nodes, respectively. Consequently, the total number of DPT ∪ MDPT nodes
    amounts to (k + k′)(m + m)λ. The probability of the initial node failure occurring
    in the DPT and MDPT of a node is (k+ k ′ )(m+ m ′ )λ n , where n is the number
    of sensor nodes in the network. Given the disjoint nature of the paths, in the
    event of a node failure, only the path containing the failed node is eliminated
    from these tables. Hence, with the aforementioned probability, one path is subtracted
    from DPT ∪ MDPT, and the number of nodes drops by 1. The quantity of paths removed
    due to the first failed node is expressed as follows: e 1 = (k+ k ′ )(m+ m ′ )λ
    𝑛 (A8) After the first failed node, and considering each path consists of λ nodes,
    the total number of nodes removed from DPT ∪ MDPT is denoted as 𝑒 1 λ . Consequently,
    the probability of path removal upon the second failed node is expressed as follows:
    e 2 = (k+ k ′ )(m+ m ′ ) 𝜆−𝑒 1 𝜆 n−1 (A9) After the second node failure, the quantity
    of nodes removed from DPT ∪ MDPT is denoted as 𝑒 2 λ , resulting in an overall
    reduction of one in the total node count. Similarly, e 3 is defined as follows:
    e 3 = (k+ k ′ )(m+ m ′ ) 𝜆−𝑒 2 𝜆 n−2 (A10) To calculate e i , the expansion of
    e 1 into e 2 is expressed as follows: e 2 = (k+ k ′ )(m+ m ′ )𝜆− (k+ k ′ )(m+
    m ′ ) 𝜆 2 n n−1 (A11) Simplifying the above sentence and multiplying the numerator
    and denominator by n yields the following: e 2 = (k+ k ′ )(m+ m ′ )𝜆 𝑛−(k+ k ′
    )(m+ m ′ )  𝜆 2 n(n−1) (A12) Expanding e 2 into e 3 proceeds as follows: e 3 =
    (k+ k ′ )(m+ m ′ )λ− (k+ k ′ )(m+ m ′ ) 𝜆 2 n−(k+ k ′ )(m+ m ′ ) 𝜆 3 n(n−1) n−2   (A13)
    Multiplying the numerator and denominator of the aforementioned sentence by n(n
    − 1) results in the following: e 3 = (k+ k ′ )(m+ m ′ )λn(n−1)−(k+ k ′ )(m+ m
    ′ ) λ 2 n+(k+ k ′ )(m+ m ′ ) λ 3 n(n−1)(n−2)   (A14) Generalizing each term in
    the previous expression provides the expansion of e i as: 𝑒 𝑖 = (𝑘+ 𝑘 ′ )(𝑚+ 𝑚
    ′ )[[ ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗  λ 𝑗+1  ∏ 𝑖−𝑗−2 𝑗 ′ =0 (𝑛− 𝑗 ′ ))]+ (−1) 𝑖−1 λ 𝑖 ] ∏
    𝑖−1 𝑗=0 (𝑛−𝑗)   (A15) □ Proof of Theorem 4. The state of k-vertex disconnectivity
    manifests when all paths within DPTi and MDPTi undergo elimination and there is
    no path for restoration, resulting in the inability to recover k-vertex connectivity.
    Given that the number of sensor nodes within DPTi⋃ MDPTi is (k + k′)λ, the anticipated
    number of sensor nodes expected to cease functioning prior to the demise of any
    one of these (k + k′)λ sensor nodes is equivalent to: 𝑛 (k+ k ′ )𝜆 (A16) Upon
    the demise of a node along a given path, the path becomes invalid and gets taken
    out of the available DPTi ⋃ MDPTi sets. So, when a node fails, the number of paths
    decreases by one. Thus, if the first node in a restoration set fails, there will
    be (k + k′ − 1) paths left, made up of (k + k′ − 1)λ sensor nodes. Meanwhile,
    the total number of remaining sensor nodes in the whole network will be: 𝑛− 𝑛
    (k+ k ′ )𝜆 (A17) The remaining sensor nodes following the removal of the pth path
    in DPTi⋃ MDPTi can be expressed in a general manner as follows: 𝑛 𝑝+1 = 𝑛 𝑝 −
    𝑛 (k+ k ′ −p)𝜆 =𝑛∗ ∏ 𝑖=0 𝑝 (1− 1 (k+ k ′ −i)𝜆 ) (A18) As long as there is a minimum
    of 1 path within the DPTi ⋃ MDPTi, KDPMS has the capability to reinstate k-vertex
    supernode connectivity. The number of sensor nodes at which the restoration of
    k-vertex supernode connectivity for the specified node becomes unattainable is
    given by 𝑛 k+ k ′ and can be computed as follows: 𝑛 k+ k ′ =𝑛∗ ∏ 𝑖=0 k+ k ′ −1
    (1− 1 (k+ k ′ −i)𝜆 ) (A19) □ Proof of Theorem 5. Prior to presenting the proof
    of this theorem, a set of outcomes is derived from Theorem 3. In accordance with
    Theorem 3, it can be deduced that the number of paths eliminated from the DPT
    subsequent to the failure of node i is as follows: 𝑒 𝑖 = 𝑘(𝑚+ 𝑚 ′ )[[ ∑ 𝑖−2 𝑗=0
    ( (−1) 𝑗  λ 𝑗+1  ∏ 𝑖−𝑗−2 𝑗 ′ =0 (𝑛− 𝑗 ′ ))]+ (−1) 𝑖−1 λ 𝑖 ] ∏ 𝑖−1 𝑗=0 (𝑛−𝑗)   (A20)
    Furthermore, the total number of paths removed from the MDPT upon failed node
    i is as follows: 𝑒 𝑖 = 𝑘 ′ (𝑚+ 𝑚 ′ )[[ ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗  λ 𝑗+1  ∏ 𝑖−𝑗−2 𝑗 ′
    =0 (𝑛− 𝑗 ′ ))]+ (−1) 𝑖−1 λ 𝑖 ] ∏ 𝑖−1 𝑗=0 (𝑛−𝑗)   (A21) The number of paths removed
    from a given segment of DPT U MDPT upon failed node i is determined via the following:
    𝑒 𝑖 = (𝑘+ 𝑘 ′ )[[ ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗  λ 𝑗+1  ∏ 𝑖−𝑗−2 𝑗 ′ =0 (𝑛− 𝑗 ′ ))]+ (−1)
    𝑖−1 λ 𝑖 ] ∏ 𝑖−1 𝑗=0 (𝑛−𝑗) (A22) Therefore, the number of remaining paths in a
    given segment of DPT U MDPT upon failed node i is as follows: 𝑟 𝑖 =(𝑘+ 𝑘 ′ )−
    ⎛ ⎝ ⎜ ⎜ ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[ ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗  λ 𝑗+1  ∏ 𝑖−𝑗−2 𝑗 ′ =0 (𝑛− 𝑗 ′ ))]+
    (−1) 𝑖−1 λ 𝑖 ] ∏ 𝑖−1 𝑗=0 (𝑛−𝑗) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟   (A23) In the occurrence of a failed
    node resulting in k-vertex disconnectivity within a segment, updates are applied
    to all paths in both the DPT and MDPT of the segment. The proof of Theorem 5 necessitates
    the consideration of two key factors: 1. the probability of the failed node within
    the paths of k-vertex connectivity, and 2. the count of remaining paths in DPTi
    ∪ MDPTi. The probability of the first node failure occurring in k-disjoint paths
    is 𝑘𝜆/𝑛 , where n is the total number of sensor nodes. Once a failed node occurs,
    KDPMS ensures that k-vertex connectivity is retrieved. The number of nodes in
    the network drops by 1, at the same time. Therefore, the second failed node has
    a probability of 𝑘λ 𝑛−1 . From this, it can be inferred that the probability of
    failed node i to result in k-vertex disconnectivity is 𝑘λ 𝑛−(𝑖−1) . In (A23),
    the number of remaining paths in a given segment of DPT U MDPT upon failed node
    i was formulated. Therefore, the total number of update lifetime messages is as
    follows: 𝑢𝑙 𝑖 =[ 𝑘λ 𝑛−(𝑖−1) ]∗ ⎡ ⎣ ⎢ ⎢ ⎢ (𝑘+ 𝑘 ′ )− ⎛ ⎝ ⎜ ⎜ ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[
    ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗  λ 𝑗+1  ∏ 𝑖−𝑗−2 𝑗 ′ =0 (𝑛− 𝑗 ′ ))]+ (−1) 𝑖−1 λ 𝑖 ] ∏ 𝑖−1 𝑗=0
    (𝑛−𝑗) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟ ⎤ ⎦ ⎥ ⎥ ⎥ (A24) □ Proof of Theorem 7. If there is supernode
    failure in the DPT of a node, all the paths in the corresponding segment of the
    DPT and MDPT are removed. Therefore, to prove Theorem 7, one must consider two
    factors: (1) the probability of supernode failure in the DPT and (2) the number
    of paths in each segment of DPTi ∪ MDPTi. Given that the DPT has m + m′ segments,
    the probability that the first failed supernode is in the DPT is m+ m ′ n s ,
    where n s is the number of supernodes. Let E i be the number of supernodes removed
    from the DPT. Subsequently, 𝐸 1 = 𝑚+𝑚 ′ 𝑛 𝑠   (A25) Each failed supernode reduces
    the number of active supernodes in the network by 1. If this failed supernode
    is in the DPT, only one segment that contains the failed supernode is removed.
    Therefore, the number of segments removed before the second failed supernode is
    𝐸 1 . Here, 𝐸 2 is written as follows: E 2 = m+ m ′ − E 1 n s −1   (A26) Ei is
    obtained by expanding E2 as follows: 𝐸 𝑖 = (m+ 𝑚 ′ )[[ ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗   ∏
    𝑖−𝑗−2 𝑗 ′ =0 ( 𝑛 𝑠 − 𝑗 ′ ))]+ (−1) 𝑖−1 (m+ 𝑚 ′ )] ∏ 𝑗−1 𝑗 ′ =0 (𝑛− 𝑗 ′ ) (A27)
    The number of remaining paths in a given segment of DPT U MDPT upon failed node
    i is calculated via (A23). (A28) is the same as (A23), except that subscription
    i has been replaced with j to represent failed node j. 𝑟 𝑗 =(𝑘+ 𝑘 ′ )− ⎛ ⎝ ⎜ ⎜
    ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[ ∑ 𝑗−2 𝑗 ′ =0 ( (−1) 𝑗 ′  λ 𝑗 ′ +1  ∏ 𝑗− 𝑗 ′ −2 𝑗 ″ =0 (𝑛− 𝑗
    ″ ))]+ (−1) 𝑗−1 λ 𝑗 ] ∏ 𝑗−1 𝑗 ′ =0 (𝑛− 𝑗 ′ ) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟ (A28) The result of
    the product of (A27) and (A28) yields the total number of removed paths as follows:
    𝑒 𝑖,𝑗 = ⎡ ⎣ ⎢ ⎢ ⎢ (m+ 𝑚 ′ )[[ ∑ 𝑖−2 𝑗=0 ( (−1) 𝑗 ∏ 𝑖−𝑗−2 𝑗 ′ =0 ( 𝑛 𝑠 − 𝑗 ′ ))]+
    (−1) 𝑖−1 (m+ 𝑚 ′ )] ∏ 𝑗−1 𝑗 ′ =0 (𝑛− 𝑗 ′ ) ⎤ ⎦ ⎥ ⎥ ⎥ ∗ ⎡ ⎣ ⎢ ⎢ ⎢ (𝑘+ 𝑘 ′ )− ⎛
    ⎝ ⎜ ⎜ ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[ ∑ 𝑗−2 𝑗 ′ =0 ( (−1) 𝑗 ′ λ 𝑗 ′ +1 ∏ 𝑗− 𝑗 ′ −2 𝑗 ″ =0 (𝑛−
    𝑗 ″ ))]+ (−1) 𝑗−1 λ 𝑗 ] ∏ 𝑗−1 𝑗 ′ =0 (𝑛− 𝑗 ′ ) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟ ⎤ ⎦ ⎥ ⎥ ⎥ (A29) □
    Proof of Theorem 8. The update lifetime message in the supernode failure tolerance
    subroutine is sent when the failed supernode is a primary. In this case, S 𝑚+
    m ′ 1 is implemented, and DPT2 and MDPT2 replace DPT1 and MDPT1. Then, an update
    lifetime message is sent for each path in DPT1 ∪ MDPT1. Therefore, the number
    of messages sent depends on the number of DPT1 ∪ MDPT1 paths and the probability
    of the failed supernode being present in DPT1. There is only one primary supernode
    for each node. Thus, the probability that the first failed supernode is DPT1 is
    1 𝑛 𝑠 , where ns denotes the total number of supernodes. Furthermore, when a primary
    supernode fails, a secondary supernode replaces the failed primary supernode,
    with the number of supernodes dropping by 1. Hence, if the second failed supernode
    occurs, the probability that the second failed supernode is in DPT1 is 1 𝑛 𝑠 −1
    . The number of remaining paths in a given segment of DPT U MDPT upon failed node
    i is calculated via (A28). Therefore, the total number of update lifetime messages
    sent is given by the following: 𝑢𝑙 𝑖,𝑗 =[ 1 n s −(𝑖−1) ]∗ ⎡ ⎣ ⎢ ⎢ ⎢ (𝑘+ 𝑘 ′ )−
    ⎛ ⎝ ⎜ ⎜ ⎜ ⎜ ⎜ (𝑘+ 𝑘 ′ )[[ ∑ 𝑗−2 𝑗 ′ =0 ( (−1) 𝑗 ′  λ 𝑗 ′ +1  ∏ 𝑗− 𝑗 ′ −2 𝑗 ″ =0
    (𝑛− 𝑗 ″ ))]+ (−1) 𝑗−1 λ 𝑗 ] ∏ 𝑗−1 𝑗 ′ =0 (𝑛− 𝑗 ′ ) ⎞ ⎠ ⎟ ⎟ ⎟ ⎟ ⎟ ⎤ ⎦ ⎥ ⎥ ⎥ (A30)
    □ References Kamilaris, A.; Prenafeta-Boldú, F.X. Deep Learning in Agriculture:
    A Survey. Comput. Electron. Agric. 2018, 147, 70–90. [Google Scholar] [CrossRef]
    Glaroudis, D.; Iossifides, A.; Chatzimisios, P. Survey, Comparison and Research
    Challenges of IoT Application Protocols for Smart Farming. Comput. Netw. 2020,
    168, 107037. [Google Scholar] [CrossRef] Liu, X.; Zeng, X.; Ren, J.; Yin, S.;
    Zhou, H. Region-Different Network Reconfiguration in Disjoint Wireless Sensor
    Networks for Smart Agriculture Monitoring. ACM Trans. Sens. Netw. 2023, 3614430.
    [Google Scholar] [CrossRef] Akyildiz, I.F.; Kasimoglu, I.H. Wireless Sensor and
    Actor Networks: Research Challenges. Ad Hoc Netw. 2004, 2, 351–367. [Google Scholar]
    [CrossRef] Deniz, F.; Bagci, H.; Korpeoglu, I.; Yazıcı, A. An Adaptive, Energy-Aware
    and Distributed Fault-Tolerant Topology-Control Algorithm for Heterogeneous Wireless
    Sensor Networks. Ad Hoc Netw. 2016, 44, 104–117. [Google Scholar] [CrossRef] Bagci,
    H.; Korpeoglu, I.; Yazici, A. A Distributed Fault-Tolerant Topology Control Algorithm
    for Heterogeneous Wireless Sensor Networks. IEEE Trans. Parallel Distrib. Syst.
    2015, 26, 914–923. [Google Scholar] [CrossRef] Yarvis, M.; Kushafnagar, N.; Singh,
    H.; Rangarajan, A.; Liu, Y.; Singh, S. Exploiting Heterogeneity in Sensor Networks.
    In Proceedings of the IEEE 24th Annual Joint Conference of the IEEE Computer and
    Communications Societies, Miami, FL, USA, 13–17 March 2005; Volume 2, pp. 878–890.
    [Google Scholar] Shafi, U.F.; Bajwa, I.S.; Anwar, W.; Sattar, H.; Ramzan, S.;
    Mahmood, A. Sensing Spontaneous Combustion in Agricultural Storage Using IoT and
    ML. Inventions 2023, 8, 122. [Google Scholar] [CrossRef] Holtorf, L.; Titov, I.;
    Daschner, F.; Gerken, M. UAV-Based Wireless Data Collection from Underground Sensor
    Nodes for Precision Agriculture. AgriEngineering 2023, 5, 338–354. [Google Scholar]
    [CrossRef] Tsipis, A.; Papamichail, A.; Koufoudakis, G.; Tsoumanis, G.; Polykalas,
    S.E.; Oikonomou, K. Latency-Adjustable Cloud/Fog Computing Architecture for Time-Sensitive
    Environmental Monitoring in Olive Groves. AgriEngineering 2020, 2, 175–205. [Google
    Scholar] [CrossRef] Xu, Z.; Chen, L.; Liu, T.; Cao, L.; Chen, C. Balancing Energy
    Consumption with Hybrid Clustering and Routing Strategy in Wireless Sensor Networks.
    Sensors 2015, 15, 26583–26605. [Google Scholar] [CrossRef] Heinzelman, W.R.; Chandrakasan,
    A.; Balakrishnan, H. Energy-Efficient Communication Protocol for Wireless Microsensor
    Networks. In Proceedings of the 33rd Annual Hawaii International Conference on
    System Sciences, Maui, HI, USA, 4–7 January 2000; Volume 1, p. 10. [Google Scholar]
    Xu, Z.; Long, C.; Chen, C.; Guan, X. Hybrid Clustering and Routing Strategy with
    Low Overhead for Wireless Sensor Networks. In Proceedings of the 2010 IEEE International
    Conference on Communications, Cape Town, South Africa, 23–27 May 2010; pp. 1–5.
    [Google Scholar] Chauhan, S.S.; Gore, M.M. Balancing Energy Consumption across
    Network for Maximizing Lifetime in Cluster-Based Wireless Sensor Network. CSIT
    2015, 3, 83–90. [Google Scholar] [CrossRef] Jafari Kaleibar, F.; Abbaspour, M.;
    Aghdasi, H.S. An Energy-Efficient Hybrid Routing Method for Wireless Sensor Networks
    with Mobile Sink. Wirel. Pers. Commun. 2016, 90, 2001–2015. [Google Scholar] [CrossRef]
    Khalilpour Akram, V.; Akusta Dagdeviren, Z.; Dagdeviren, O.; Challenger, M. PINC:
    Pickup Non-Critical Node Based k-Connectivity Restoration in Wireless Sensor Networks.
    Sensors 2021, 21, 6418. [Google Scholar] [CrossRef] [PubMed] Koç, M.; Korpeoglu,
    I. Controlled Sink Mobility Algorithms for Wireless Sensor Networks. Int. J. Distrib.
    Sens. Netw. 2014, 10, 167508. [Google Scholar] [CrossRef] Koç, M.; Korpeoglu,
    I. Traffic- and Energy-Load-Based Sink Mobility Algorithms for Wireless Sensor
    Networks. IJSNET 2017, 23, 211. [Google Scholar] [CrossRef] Shankar, R.; Ganesh,
    N.; Čep, R.; Narayanan, R.C.; Pal, S.; Kalita, K. Hybridized Particle Swarm—Gravitational
    Search Algorithm for Process Optimization. Processes 2022, 10, 616. [Google Scholar]
    [CrossRef] Ganesh, N.; Shankar, R.; Čep, R.; Chakraborty, S.; Kalita, K. Efficient
    Feature Selection Using Weighted Superposition Attraction Optimization Algorithm.
    Appl. Sci. 2023, 13, 3223. [Google Scholar] [CrossRef] Ganesh, N.; Shankar, R.;
    Kalita, K.; Jangir, P.; Oliva, D.; Pérez-Cisneros, M. A Novel Decomposition-Based
    Multi-Objective Symbiotic Organism Search Optimization Algorithm. Mathematics
    2023, 11, 1898. [Google Scholar] [CrossRef] Narayanan, R.C.; Ganesh, N.; Čep,
    R.; Jangir, P.; Chohan, J.S.; Kalita, K. A Novel Many-Objective Sine–Cosine Algorithm
    (MaOSCA) for Engineering Applications. Mathematics 2023, 11, 2301. [Google Scholar]
    [CrossRef] Joshi, M.; Kalita, K.; Jangir, P.; Ahmadianfar, I.; Chakraborty, S.
    A Conceptual Comparison of Dragonfly Algorithm Variants for CEC-2021 Global Optimization
    Problems. Arab J. Sci. Eng. 2023, 48, 1563–1593. [Google Scholar] [CrossRef] Dai,
    Z.; Ma, Z.; Zhang, X.; Chen, J.; Ershadnia, R.; Luan, X.; Soltanian, M.R. An Integrated
    Experimental Design Framework for Optimizing Solute Transport Monitoring Locations
    in Heterogeneous Sedimentary Media. J. Hydrol. 2022, 614, 128541. [Google Scholar]
    [CrossRef] Haq, M.Z.U.; Khan, M.Z.; Rehman, H.U.; Mehmood, G.; Binmahfoudh, A.;
    Krichen, M.; Alroobaea, R. An Adaptive Topology Management Scheme to Maintain
    Network Connectivity in Wireless Sensor Networks. Sensors 2022, 22, 2855. [Google
    Scholar] [CrossRef] [PubMed] Tomlinson, I. Doubling Food Production to Feed the
    9 Billion: A Critical Perspective on a Key Discourse of Food Security in the UK.
    J. Rural Stud. 2013, 29, 81–90. [Google Scholar] [CrossRef] Thun, M.J.; DeLancey,
    J.O.; Center, M.M.; Jemal, A.; Ward, E.M. The Global Burden of Cancer: Priorities
    for Prevention. Carcinogenesis 2010, 31, 100–110. [Google Scholar] [CrossRef]
    [PubMed] Bogdanov, A.; Maneva, E.; Riesenfeld, S. Power-Aware Base Station Positioning
    for Sensor Networks. In Proceedings of the IEEE INFOCOM 2004, Hong Kong, China,
    7–11 March 2004; Volume 1, pp. 575–585. [Google Scholar] Youssef, W.; Younis,
    M. Intelligent Gateways Placement for Reduced Data Latency in Wireless Sensor
    Networks. In Proceedings of the 2007 IEEE International Conference on Communications,
    Glasgow, UK, 24–28 June 2007; pp. 3805–3810. [Google Scholar] Deniz, F.; Bagci,
    H.; Korpeoglu, I.; Yazıcı, A. Energy-Efficient and Fault-Tolerant Drone-BS Placement
    in Heterogeneous Wireless Sensor Networks. Wirel. Netw. 2021, 27, 825–838. [Google
    Scholar] [CrossRef] Preite, L.; Solari, F.; Vignali, G. Technologies to Optimize
    the Water Consumption in Agriculture: A Systematic Review. Sustainability 2023,
    15, 5975. [Google Scholar] [CrossRef] Du, Y.; Xia, J.; Gong, J.; Hu, X. An Energy-Efficient
    and Fault-Tolerant Topology Control Game Algorithm for Wireless Sensor Network.
    Electronics 2019, 8, 1009. [Google Scholar] [CrossRef] Mazumdar, N.; Nag, A.;
    Nandi, S. HDDS: Hierarchical Data Dissemination Strategy for Energy Optimization
    in Dynamic Wireless Sensor Network under Harsh Environments. Ad Hoc Netw. 2021,
    111, 102348. [Google Scholar] [CrossRef] Wei, L.; Han, J. Topology Control Algorithm
    of Underwater Sensor Network Based on Potential-Game and Optimal Rigid Sub-Graph.
    IEEE Access 2020, 8, 177481–177494. [Google Scholar] [CrossRef] Singla, P.; Munjal,
    A. Topology Control Algorithms for Wireless Sensor Networks: A Review. Wirel.
    Pers. Commun. 2020, 113, 2363–2385. [Google Scholar] [CrossRef] Khalily-Dermany,
    M. A Decentralized Algorithm to Combine Topology Control with Network Coding.
    J. Parallel Distrib. Comput. 2021, 149, 174–185. [Google Scholar] [CrossRef] Wu,
    H.; Han, X.; Yang, B.; Miao, Y.; Zhu, H. Fault-Tolerant Topology of Agricultural
    Wireless Sensor Networks Based on a Double Price Function. Agronomy 2022, 12,
    837. [Google Scholar] [CrossRef] Rani, K.P.; Sreedevi, P.; Poornima, E.; Sri,
    T.S. FTOR-Mod PSO: A Fault Tolerance and an Optimal Relay Node Selection Algorithm
    for Wireless Sensor Networks Using Modified PSO. Knowl.-Based Syst. 2023, 272,
    110583. [Google Scholar] [CrossRef] Mehra, P.S.; Doja, M.N.; Alam, B. Fuzzy Based
    Enhanced Cluster Head Selection (FBECS) for WSN. J. King Saud Univ.-Sci. 2020,
    32, 390–401. [Google Scholar] [CrossRef] Rawat, P.; Chauhan, S. Probability Based
    Cluster Routing Protocol for Wireless Sensor Network. J. Ambient. Intell. Hum.
    Comput. 2021, 12, 2065–2077. [Google Scholar] [CrossRef] Wang, C. A Distributed
    Particle-Swarm-Optimization-Based Fuzzy Clustering Protocol for Wireless Sensor
    Networks. Sensors 2023, 23, 6699. [Google Scholar] [CrossRef] Wang, Z.; Zhang,
    M.; Gao, X.; Wang, W.; Li, X. A Clustering WSN Routing Protocol Based on Node
    Energy and Multipath. Clust. Comput. 2019, 22, 5811–5823. [Google Scholar] [CrossRef]
    Cherappa, V.; Thangarajan, T.; Meenakshi Sundaram, S.S.; Hajjej, F.; Munusamy,
    A.K.; Shanmugam, R. Energy-Efficient Clustering and Routing Using ASFO and a Cross-Layer-Based
    Expedient Routing Protocol for Wireless Sensor Networks. Sensors 2023, 23, 2788.
    [Google Scholar] [CrossRef] Shah, S.L.; Abbas, Z.H.; Abbas, G.; Muhammad, F.;
    Hussien, A.; Baker, T. An Innovative Clustering Hierarchical Protocol for Data
    Collection from Remote Wireless Sensor Networks Based Internet of Things Applications.
    Sensors 2023, 23, 5728. [Google Scholar] [CrossRef] Temene, N.; Sergiou, C.; Georgiou,
    C.; Vassiliou, V. A Survey on Mobility in Wireless Sensor Networks. Ad Hoc Netw.
    2022, 125, 102726. [Google Scholar] [CrossRef] Chang, J.-Y.; Jeng, J.-T.; Sheu,
    Y.-H.; Jian, Z.-J.; Chang, W.-Y. An Efficient Data Collection Path Planning Scheme
    for Wireless Sensor Networks with Mobile Sinks. J. Wirel. Commun. Netw. 2020,
    257. [Google Scholar] [CrossRef] Prasanth, A.; Pavalarajan, S. Zone-Based Sink
    Mobility in Wireless Sensor Networks. Sens. Rev. 2019, 39, 874–880. [Google Scholar]
    [CrossRef] Abu Taleb, A. sink mobility model for wireless sensor networks using
    kohonen self-organizing map. Int. J. Commun. Netw. Inf. Secur. 2022, 13, 1. [Google
    Scholar] [CrossRef] Wu, X.; Chen, Z.; Zhong, Y.; Zhu, H.; Zhang, P. End-to-End
    Data Collection Strategy Using Mobile Sink in Wireless Sensor Networks. Int. J.
    Distrib. Sens. Netw. 2022, 18, 155013292210779. [Google Scholar] [CrossRef] Abu
    Taleb, A.; Abu Al-Haija, Q.; Odeh, A. Efficient Mobile Sink Routing in Wireless
    Sensor Networks Using Bipartite Graphs. Future Internet 2023, 15, 182. [Google
    Scholar] [CrossRef] Cardei, M.; Yang, S.; Wu, J. Algorithms for Fault-Tolerant
    Topology in Heterogeneous Wireless Sensor Networks. IEEE Trans. Parallel Distrib.
    Syst. 2008, 19, 545–558. [Google Scholar] [CrossRef] Poghosyan, A. The Probabilistic
    Method for Upper Bounds in Domination Theory. Ph.D. Thesis, University of the
    West of England, Bristol, UK, 2010. [Google Scholar] Disclaimer/Publisher’s Note:
    The statements, opinions and data contained in all publications are solely those
    of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s).
    MDPI and/or the editor(s) disclaim responsibility for any injury to people or
    property resulting from any ideas, methods, instructions or products referred
    to in the content.  © 2024 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Ahmadi, F.; Abedi, O.; Emadi, S. Enhancing Smart
    Agriculture Monitoring via Connectivity Management Scheme and Dynamic Clustering
    Strategy. Inventions 2024, 9, 10. https://doi.org/10.3390/inventions9010010 AMA
    Style Ahmadi F, Abedi O, Emadi S. Enhancing Smart Agriculture Monitoring via Connectivity
    Management Scheme and Dynamic Clustering Strategy. Inventions. 2024; 9(1):10.
    https://doi.org/10.3390/inventions9010010 Chicago/Turabian Style Ahmadi, Fariborz,
    Omid Abedi, and Sima Emadi. 2024. \"Enhancing Smart Agriculture Monitoring via
    Connectivity Management Scheme and Dynamic Clustering Strategy\" Inventions 9,
    no. 1: 10. https://doi.org/10.3390/inventions9010010 Article Metrics Citations
    No citations were found for this article, but you may check on Google Scholar
    Article Access Statistics Article access statistics Article Views 10. Jan 20.
    Jan 30. Jan 9. Feb 19. Feb 29. Feb 10. Mar 20. Mar 30. Mar 0 500 1000 1500 For
    more information on the journal statistics, click here. Multiple requests from
    the same IP address are counted as one view.   Inventions, EISSN 2411-5134, Published
    by MDPI RSS Content Alert Further Information Article Processing Charges Pay an
    Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For
    Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Inventions
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Enhancing Smart Agriculture Monitoring via Connectivity Management Scheme
    and Dynamic Clustering Strategy
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Benameur R.
  - Dahane A.
  - Kechar B.
  - Benyamina A.E.H.
  citation_count: '0'
  description: The agricultural sector faces several difficulties today in ensuring
    the safety of food supply, including water scarcity. This study presents the design
    and development of a low-cost and full-featured fog-IoT/AI system targeted towards
    smallholder farmer communities (SFCs). However, the smallholder community is hesitant
    to adopt technology-based solutions. There are many overwhelming reasons for this,
    but the high cost, implementation complexity, and malfunctioning sensors cause
    inappropriate decisions. The PRIMA INTEL-IRRIS project aims to make digital and
    innovative agricultural technologies more appealing and available to these communities
    by advancing the intelligent irrigation “in-the-box” concept. Considered a vital
    resource, collected data are used to detect anomalies or abnormal behavior, providing
    information about an occurrence or a node failure. To prevent agro-field data
    leakage, this paper presents an innovative, smart, and sustainable low-cost irrigation
    system that employs artificial intelligence (AI) techniques to analyze anomalies
    and problems in water usage. The sensor anomaly can be detected using an autoencoder
    (AE) and a generative adversarial network (GAN). We will feed the autoencoders’
    anomaly detection models with time series records from the datasets and replace
    detected anomalies with the reconstructed outputs. When integrated with an IoT
    platform, this methodology is a tool for easing the labeling of sensor anomalies
    and can help create supervised datasets for future research. In addition, anomalies
    can be corrected by prediction models based on deep learning approaches, applying
    CNN/BiLSTM architecture. The results show that AEs outperform the GANs, achieving
    an accuracy of 90%, 95%, and 97% for soil moisture, air temperature, and air humidity,
    respectively. The proposed system is designed to ensure that the data are of high
    quality and reliable enough to make sound decisions compared to the existing platforms.
  doi: 10.3390/s24041162
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 24 Issue 4 10.3390/s24041162 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Nicolas Baghdadi
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 887 Table of Contents Abstract Introduction Related Studies Supplying
    Smallholder Farmers with Smart Technology Sensor Anomalies Detection for Smart
    Irrigation Systems Irrigation Factors Forecasting Using Deep Learning Conclusions
    and Future Trends Author Contributions Funding Institutional Review Board Statement
    Informed Consent Statement Data Availability Statement Acknowledgments Conflicts
    of Interest Abbreviations Appendix A References share Share announcement Help
    format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms
    Comment first_page settings Order Article Reprints Open AccessArticle An Innovative
    Smart and Sustainable Low-Cost Irrigation System for Anomaly Detection Using Deep
    Learning by Rabaie Benameur 1, Amine Dahane 1,2,*, Bouabdellah Kechar 1 and Abou
    El Hassan Benyamina 3 1 Research Laboratory in Industrial Computing and Networks
    (RIIR), University of Oran 1, B.P. 1524, El M’Naouer, Oran 31000, Algeria 2 Institute
    of Applied Science and Technology, ISTA, University of Oran 1, B.P. 1524, El M’Naouer,
    Oran 31000, Algeria 3 Laboratory of Parallel, Embedded Architectures and Intensive
    Computing (LAPECI), University of Oran 1, B.P. 1524, El M’Naouer, Oran 31000,
    Algeria * Author to whom correspondence should be addressed. Sensors 2024, 24(4),
    1162; https://doi.org/10.3390/s24041162 Submission received: 1 June 2023 / Revised:
    23 July 2023 / Accepted: 31 July 2023 / Published: 10 February 2024 (This article
    belongs to the Section Smart Agriculture) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract The agricultural sector faces several difficulties
    today in ensuring the safety of food supply, including water scarcity. This study
    presents the design and development of a low-cost and full-featured fog-IoT/AI
    system targeted towards smallholder farmer communities (SFCs). However, the smallholder
    community is hesitant to adopt technology-based solutions. There are many overwhelming
    reasons for this, but the high cost, implementation complexity, and malfunctioning
    sensors cause inappropriate decisions. The PRIMA INTEL-IRRIS project aims to make
    digital and innovative agricultural technologies more appealing and available
    to these communities by advancing the intelligent irrigation “in-the-box” concept.
    Considered a vital resource, collected data are used to detect anomalies or abnormal
    behavior, providing information about an occurrence or a node failure. To prevent
    agro-field data leakage, this paper presents an innovative, smart, and sustainable
    low-cost irrigation system that employs artificial intelligence (AI) techniques
    to analyze anomalies and problems in water usage. The sensor anomaly can be detected
    using an autoencoder (AE) and a generative adversarial network (GAN). We will
    feed the autoencoders’ anomaly detection models with time series records from
    the datasets and replace detected anomalies with the reconstructed outputs. When
    integrated with an IoT platform, this methodology is a tool for easing the labeling
    of sensor anomalies and can help create supervised datasets for future research.
    In addition, anomalies can be corrected by prediction models based on deep learning
    approaches, applying CNN/BiLSTM architecture. The results show that AEs outperform
    the GANs, achieving an accuracy of 90%, 95%, and 97% for soil moisture, air temperature,
    and air humidity, respectively. The proposed system is designed to ensure that
    the data are of high quality and reliable enough to make sound decisions compared
    to the existing platforms. Keywords: IoT; smart farming; anomaly detection; low
    cost; fog-AI; deep learning 1. Introduction The world’s population is anticipated
    to increase by close to 2 billion by 2050, causing a rapid escalation in food
    demand. To cater to the needs of the increasing population, the agricultural industry
    needs to be modernized, smart, and automated [1]. The food and agriculture organization
    (FAO) [2] claims that small-scale farming significantly contributes to rural economies
    and food security. On the other hand, smallholders usually deal with a range of
    restrictions that reduce their ability to produce profitably and advance the economy
    [3]. However, smallholder farmer communities (SFCs) have not benefited from adopting
    solutions to increase irrigation efficiency because of the high starting costs
    and the high skill levels needed to understand the technology. Recently, the fourth
    industrial revolution (IR 4.0) paradigm shift has ushered in a surge in technological
    innovation and sustainable transformation across various industries and sectors
    [4]. The innovative use of printed sensors for measurement and monitoring in smart
    agricultural applications has garnered considerable attention. Smart farming utilizing
    printed sensors is in its infancy and requires additional research [5]. Significant
    limitations restrict SFCs’ productivity and profit potential. As a result of a
    variety of crucial issues, including a lack of agricultural expertise, financial
    resources, climate change, and market access to address these challenges, we propose
    in this research a low-cost (USD 260) smart farming system for monitoring and
    prediction that will assist SFCs in forecasting future data in order to compute
    their water demands and properly schedule irrigation. The sensor component employs
    a low-cost design that is basic but sturdy and efficient, inspired by various
    do-it-yourself (DIY) initiatives and previous contributions [6,7]. In terms of
    accuracy and error reduction, the system outperforms others. In this context,
    the goal of the PRIMA INTEL-IRRIS project [8] is to increase the visibility and
    accessibility of digital and smart agricultural technologies among small and medium-sized
    farms. To meet the needs of this community, the suggested solutions must be economical,
    easy to implement in the field, and, most importantly, adaptable to current agricultural
    techniques. As a result, by inventing a low-cost, smart irrigation control system,
    INTEL-IRRIS hopes to transform the view that SFCs have of what was formerly highly
    expensive technology. INTEL-IRRIS also hopes that by using the “intelligent irrigation
    in a box” idea, they can make smart irrigation systems as easy to set up and use
    as home appliances, with a small investment compared to how much money they make.
    The main objective of this research is to improve on our previous work [3,9] by
    increasing the accuracy of low-cost sensors for data collection so that our water–soil–plants–climate
    interaction models will provide increased accuracy of predicted environmental
    factors to enhance the irrigation efficiency of smallholder farmers. There is
    a current need for our low-cost fog-IoT/AI system, version 1.0, that employs deep
    learning to analyze in real-time the anomalies and problems that appear in low-cost
    sensors. To reach this goal, we propose a low-cost, sustainable irrigation system
    that helps smallholder farmers manage irrigation more efficiently by providing
    a low-cost, open-source, autonomous, and easy-to-use smart irrigation control
    system that takes advantage of IoT capabilities, as shown in Figure 1. Figure
    1. “Intelligent irrigation in a box” idea of PRIMA INTEL-IRRIS project. We will
    implement the “Intelligent Irrigation in a Box” idea by presenting a sensor/ control/actuator-based
    “plug-and-sense” system using significant technological advances from the last
    few years, including IoT, artificial intelligence (AI), and decision support systems
    (DSS). This technology may be linked with existing irrigation infrastructure [10,11],
    allowing it to be controlled according to smallholders’ customs. Using sensor
    technologies, the provided platform collects critical physical phenomena such
    as soil moisture, air temperature, air humidity, water level, water velocity,
    and light intensity using a DL methodology. An unsupervised learning approach
    is well-suited for detecting anomalies, especially in cases with limited labeled
    time-series samples and complex, nonlinear climate and soil patterns. According
    to the literature, the most promising approaches for anomaly detection are Autoencoders
    [12] and GANs [13] in time series. The sliding window technique is highly appropriate
    for predicting future sensor readings through a supervised learning approach.
    Utilizing a hybrid deep learning architecture, combining convolutional and recurrent
    neural networks, enables the attainment of a minimal estimation error for similar
    sequence-to-sequence prediction problems [14]. Consideration is given to a novel
    Fog-IoT-Cloud platform for storing, analyzing, and using vast volumes of acquired
    data to assist SFCs in managing the irrigation mechanism efficiently. This work’s
    main contributions are as follows: (i) The design and development of a low-cost
    fog-IoT/AI system, version 1.0, fully targeted towards smallholder farmer communities
    (SFCs) to enhance irrigation decision making. (ii) We provide a comprehensive
    performance assessment and comparison between the autoencoders (AE) and generative
    adversarial networks (GAN) to detect anomalies in environmental factors data.
    (iii) Predicting the most important environmental factors (air temperature, air
    humidity, soil moisture) based on field sensory data and weather forecast data
    using CNN/BiLSTM architecture to provide SFCs with recommendations. The rest of
    the paper is structured as follows: Section 2 presents a review of the relevant
    literature on irrigation systems. The INTEL-IRRIS fog-IoT/AI system, at the heart
    of the architectural design discussed in this paper, will be presented in Section
    3. Sensor anomaly detection for smart irrigation systems is provided in Section
    4. Section 5 describes the most important environmental factors that can be predicted
    using deep learning. Finally, conclusions and future trends are given in Section
    6. 2. Related Studies In this section, we present a review of the relevant literature
    on irrigation systems. Each of them has focused on various aspects of the irrigation
    task. As illustrated in Table 1, we categorize the studies based on the following
    criteria: (i) Underground sensing: the IOUT requirement emerges partially or fully
    buried underground for real-time monitoring and soil sensing; several essential
    irrigation characteristics include soil moisture, soil texture, soil salinity,
    etc. (ii) Environmental sensing: it is used to monitor important weather pattern
    changes in real-time. (iii) Geographic information systems (GIS): provide a potent
    instrument for near-real-time analysis of crop status. Ground-based equipment,
    aerial drones, and satellites all collect GIS agriculture data. (iv) Soil texture:
    on precision agriculture (PA), we computed the useable reserve of water (RU) based
    on the soil texture (clay, limon, sand, organic matter). (v) Machine learning
    approaches: it indicates whether the study considered machine learning approaches
    for intrusion detection systems. (vi) Deep learning approaches: it specifies if
    the study was focused on deep learning approaches for intrusion detection systems.
    (vii) Low-cost: the objective of the Intel-Irris project is to use low-cost sensors
    by dividing the cost by a factor of 10 to 100. (viii) Anomaly detection: the detection
    of anomalies is a crucial stage that will enhance the quality of results in predictive
    modeling and pattern extraction, enabling the identification of problems and facilitating
    decision making in data-based services. In our previous works [3,9], we suggested
    an Edge-IoT-Cloud platform based on a deep learning methodology for monitoring
    and predicting farmers’ ability to satisfy crop water demands when there is insufficient
    rainfall. Recently, Citoni et al. [15] published a review and analysis of currently
    available LoRaWAN-enabled Internet of Things (IoT) applications for intelligent
    agriculture. Vuran et al. [16] focus only on the underground factors; however,
    environmental sensing and SIG play a very important role in irrigation tasks.
    Optimizing water resources for agricultural production using an automated irrigation
    system has proven feasible and cost-effective, as proposed by Gutierrez et al.
    [17]. Table 1. A comparative analysis between the proposed platform and previous
    platform.   A few scientific studies focus on the application of data processing
    techniques to agricultural data in order to develop a more robust decision support
    framework. Roopaei et al. [22] presented an appropriate approach to identifying
    key parameters to schedule irrigation: the amount of water used was monitored,
    irrigation was scheduled on the basis of the canopy temperature distribution of
    the plant, and data were collected by means of thermal imaging. However, using
    the thermal imaging technique has many drawbacks that affect irrigation scheduling:
    different emissivities and reflections from surfaces obstruct precise temperature
    measurements, and most thermal imaging cameras have ±2% accuracy. Also, thermal
    images are difficult to interpret for specific objects with erratic temperatures.
    Aurora et al. [25], using unsupervised algorithms, devised and tested a three-step
    irrigation system for urban parks. By extracting prior knowledge using a multivariate
    approach, this methodology reduces the time required by univariate anomaly detection
    systems to analyze the entire univariate time series. Goap et al. [19] proposed
    a smart irrigation architecture based on IoT and a hybrid approach that relies
    on DL to predict soil moisture. The proposed algorithm uses sensor data collected
    from recent and past weather forecasts to predict soil moisture. However, environmental
    sensing is not sufficient to make a good irrigation schedule, and the authors
    also do not take into consideration the crop coefficient and the soil texture.
    Chen et al. [26] suggest a new approach for making irrigation decisions in paddy
    rice farming that uses deep Q-learning and short-term weather predictions. The
    new method was compared to the widespread practice of flooded irrigation in southern
    China. The results indicated the reliability of the daily rainfall forecast and
    the efficiency of the Deep Q-Learning strategy for saving water. Boursianis et
    al. [23] discussed the AREThOU5A IoT platform subsystems and their primary operations,
    as well as the deployed layered architecture stack. Within the context of the
    AREThOU5A IoT platform, an innovative method for delivering power to the platform’s
    IoT modules has been implemented. Cheema et al. [24] constructed an intelligent
    system with multiple sensors and devices related to internet of things (IoT) technologies.
    In addition, they developed an Android application called \"Kistan Pakistan\"
    that allows illiterate and low-literate farmers to remotely administer its functions.
    Pham et al. [20] described a low-cost and full edge-IoT/AI system targeting smallholder
    farmer communities and how it can provide the intelligent irrigation “in-the-box”
    concept. It offers an “out-of-the-box” function, meaning that the control component
    that recommends irrigation is integrated into the IoT gateway and, as a result,
    does not need an internet connection, as implemented by WAZIUP partner [27]. In
    contrast to previous research, the current study incorporates four factors to
    improve irrigation efficiency, productivity, quality, profitability, and the sustainability
    of agricultural production. In particular, we take into account the following
    factors: (i) soil texture; (ii) crop coefficient; (iii) sensed data with the weather
    forecast; and (iv) sensing of the subsurface parameter, in this instance, soil
    moisture. The objective is to calculate the requisite water quantity based on
    these variables. 3. Supplying Smallholder Farmers with Smart Technology 3.1. A
    Summary of the INTEL-IRRIS and PNR Projects As stated earlier, INTEL-IRRIS [8]
    aims to make digital and intelligent agricultural technology more appealing and
    accessible to small and medium-sized farms. However, a compromise will be made
    to accomplish the primary aim: to create a low-cost irrigation system that SFCs
    can implement out of the box. The soil moisture sensor component follows a basic,
    resilient, and cost-effective design that has been substantially influenced by
    several do-it-yourself projects and prior contributions [6,20]. Unlike low-cost
    sensors that often offer unreliable data, INTEL-IRRIS will significantly improve
    the quality of collected data with (i) improved calibration of various sensors;
    (ii) the calculation of the needed amount of water based on the farm’s soil texture
    and crop coefficient; and (iii) the prediction of environmental factors based
    on field sensory data using DL. 3.2. Smart and Sustainable Irrigation System Figure
    2 shows how the smart farming system architecture collects, transfers, and processes
    physical parameters from small-scale farming, such as soil moisture, air temperature,
    air humidity, water level, water flows, the intensity of light, combustible gas,
    etc., in order to improve irrigation efficiency by deploying a low-cost, open,
    autonomous irrigation control system based on IoT and AI techniques [28]. The
    irrigation scheduling algorithm determines the amount of water required to maintain
    the maximum production potential without wasting water (i) for a particular crop,
    (ii) at a specified time, and (iii) for a specific soil type. The following section
    summarizes the proposed platform’s details. Figure 2. Global view of our proposed
    operational architecture. 3.3. Hardware Architecture As illustrated in Figure
    2, the network component of our platform is supplied via multi-hop communication
    between box A (the sensor layer) and box B (the gateway node) up to box C (the
    fog layer). Finally, a virtual machine (VM) is created on the Azure cloud to deploy
    multiple anomaly detection and prediction models. In addition to using NRF24L01
    modules for wireless communication and Arduino boards as microcontrollers, we
    also intended to use Raspberry Pi 3 B+ boards as a fog layer. 3.4. Software Architecture
    Using open-source development tools, we created a software architecture to reduce
    bandwidth, latency, cost, load balancing, and scalability, as shown in Figure
    3. Using the Message Queuing Telemetry Transport (MQTT) protocol, communication
    between the gateway and server is established. The TCP transport layer protocol
    ensures dependable data transmission (COAP uses UDP). Because of this, it is encrypted
    with SSL, supports quality of service (QoS parameter 2: requires messages to be
    delivered exactly once), and has a much shorter message header than HTTP. Figure
    3. Global view of our software architectural proposal. 3.5. Box A: Sensing Node
    The sensing node, which depicts the field data gathering tool, falls short of
    the total of USD 140. An Atmega328 microprocessor reads the output from these
    sensors. For around two dollars (USD), it may be used to construct a cheap design
    strategy for the Arduino. As seen in Figure 4, this box’s sensor layer devices
    are designed to collect data from smallholder farmers and transmit it using the
    NRF24L01 radio module, which is available for roughly 5 dollars (USD) and enables
    the supply of a radio communication layer with an SPI interface. The farmer can
    examine the data and keep an eye on the crops in real-time since the data may
    be kept in a private database or in the cloud to construct a dataset. Figure 4.
    Global view of box A. Legends 1: DHT22 Sensor (USD 8); 2: soil moisture sensor
    (USD 5); 3: NRF24L01 module with adapter (USD 9); 4: water level sensor; 5: light
    sensor (USD 2); 6: LCD display nokia (USD 8); 7: LCD display I2C (USD 9); 8: relay
    node (USD 32), 9: LEDs notification (USD 2); 10: relay switch (USD 5); 11: power
    supply 12 V (USD 12); 12: water pump (USD 10); 13: water flow sensor (USD 9);
    14: solar panel ZW85X115-12 (USD 2); 15: solar panel 6 V (USD 2); 16: amplifier
    (USD 5); 17: power supply 9 V (USD 10); 18: (PC) the mega Arduino card (USD 38)
    and NRF module are in the box. Figure 4 provides a comprehensive description of
    the box’s sensors. We then set the NRF24L01 module to write mode and supply the
    destination address; we read the sensor values using the analogRead function on
    the data pins. The measured data are structured and transmitted to the IoT gateway
    every hour, where historical data are stored to detect anomalies at the fog layer.
    For the power supply of the sensor node, we used rechargeable 9 V batteries. Table
    2 lists the cost of all components. In total, a sensing and actuation node costs
    USD 260. A large portion of the budget is for the cost of box C. Table 2. The
    proposed platform cost. 3.6. Box B: Relay Node The relay node acts as an intermediate
    device and transmits the packets to the IoT gateway. In listening mode, we set
    up the gateway node by supplying the node address from whence the packets come,
    the channel number (122), and the data structure; if the data are received, it
    changes to sending mode, at which stage we provide the address of the next node.
    The power supply of the relay node was improved by using two AA batteries. 3.7.
    Box C: IoT Gateway Fog computing facilitates the operation of computation, storage,
    and networking services between end devices and cloud computing. Box C permits
    data to be transmitted to the internet network, but not for a total of USD 90.
    We picked a Raspberry Pi 3 B+ type board since it has adequate hardware resources
    for processing and is based on the Linux kernel, making it compatible with most
    languages and AI libraries. It needs a 5 V power supply, an external Wi-Fi 802.11
    card, and an Ethernet connector to connect to the internet. We used Python to
    create a concurrent TCP server (one thread per request), and we started by loading
    the prediction models from disk into the main memory (the kind of “*.tflite” files
    after the conversion to Tensorflow Lite). When a request comes in, a thread handles
    the receiving and preprocessing, resulting in the prediction. If we are looking
    for anomalies, we must compare the model outputs to an error threshold and provide
    the answer. On demand, we can also utilize the service to adjust the error levels
    of the various models. The server regularly delivers messages that include information
    such as the node’s IP address, available resources (RAM and CPU), and network
    latency. NodeJS listens on the serial port “/dev/tty0” at 115,200 baud. We extracted
    the measurements whenever new data were written to the port (separated by commas).
    We verified that all of the sensors were operational. This information is saved
    in the MySQL database for the time being. Finally, we produced a structured package
    including the latest six readings of each sensor, which had to correlate to the
    detection model anomaly entries. Then, we transmitted the latter to the Python-implemented
    service, which includes the various models; after receiving the answer, we checked
    for anomalies. An HTTP server configured using the “Express” module and listening
    on port 7000 sends the application pages to the browser. The route to each page
    is specified, and communication occurs via the “WebSocket” protocol. Every hour,
    a temporal event is triggered, which transmits the last received packet if none
    has come, allowing us to forecast it. The integrated Wi-Fi card is employed as
    an access point for configuration and adjusting the thresholds of anomaly detection
    models (leaving a means to reach the local network). Finally, data visualization
    from the gateway is required to assist the developer during maintenance. We investigated
    adding slave nodes that handle resource-intensive processing to enhance computing
    power and load balancing. The Raspberry Pi 3 B+ card’s Wi-Fi card creates a wireless
    network that the cluster uses to communicate. 3.8. Cloud Layer We suggest using
    cloud services to store significant volumes of data generated by sensors in order
    to guarantee the accessibility and availability of our platform everywhere and
    at any time. Furthermore, we use them to anticipate future meters, ensuring scalability
    and more resources when our platform is overloaded (elasticity). A free student
    offer was provided to us, and we will utilize it to create a VM with a public
    IP address that we can access via the remote desktop protocol (RDP). As seen in
    Figure 5, Influx DB offers a limited free cloud service, so setting up a user’s
    dashboard for data analysis and monitoring is straightforward. Figure 5. Monitoring
    and analysis of data on the cloud service. 4. Sensor Anomalies Detection for Smart
    Irrigation Systems Deep learning is becoming increasingly popular for tasks beyond
    image recognition, segmentation, and classification. Non-image data have been
    gaining more and more attention in recent years due to the advancement of IoT
    [29]. The main idea of unsupervised anomaly detection in time-series data is to
    identify whether data observations conform to normal data distributions over time.
    With this technique, we can discover patterns and anomalies that are otherwise
    hard to find. In order to spot unexpected patterns or anomalies as the data changes
    over time, it is crucial to comprehend how each variable within the time series
    affects the others. As shown in Figure 6, the received measurements are consolidated
    with the time series records in the local database. These merged data are used
    as input for anomaly detection models, which aim to identify any anomalies or
    unusual patterns within the data. The reconstructed inputs from the model are
    employed to estimate a corrected value for the abnormal measurement. The goal
    is to correct any inaccuracies or abnormalities identified in the original measurement.
    Once the new measure has been adjusted using the sensor value estimation model,
    it is stored back in the local database. This ensures that the corrected measure
    is available for future reference or analysis. In our research, the scarcity of
    labeled anomaly data poses a challenge. Therefore, GANs and AEs present advantageous
    options as they can effectively perform anomaly detection. Additionally, these
    techniques are capable of learning representations that capture both global and
    local dependencies within the data, enabling them to understand complex patterns
    effectively. GANs, in particular, leverage a discriminator network that can accurately
    classify anomalies. AEs focus on reconstructing input data and strive to minimize
    the reconstruction error. A threshold on the reconstruction error allows for the
    efficient identification of anomalies. Figure 6. Illustration of IoT gateway sensor
    anomaly detection and correction process. 4.1. Generative Adversarial Networks
    (GAN) Unsupervised anomaly detection using generative adversarial networks (GAN),
    as illustrated in Figure 7, involves training two models: a generator and a discriminator.
    The generator learns a model representing normal time series variability, while
    the discriminator learns to identify data points that do not conform to the normal
    behavior. The discriminator can then distinguish between time-series data corresponding
    to normal behavior. Moreover, using GANs for unsupervised anomaly detection in
    time-series data helps identify more complex anomalies than traditional methods
    since it can learn more complex dependencies between different variables within
    the time series (backpropagation). Figure 7. Overview of GAN structure. 4.2. Autoencoder
    (AE) Autoencoders are popular-deep learning-based anomaly detection models that
    have been observed to be reliable and effective. What makes this model so successful
    is its ability to reduce the time-series data to a lower dimension and reconstruct
    them in a higher dimension. As illustrated in Figure 8, this encoding and decoding
    can be performed with the help of different deep learning layers, such as convolutional
    layers. Then, the data are decoded to a higher dimension using an autoencoder
    algorithm. These reconstructed data can then be compared to the primary data to
    detect anomalies. Autoencoders have been a successful tool for anomaly detection
    in time-series data. Their efficiency can even be increased with the use of regularization,
    dropout, and noise-reduction techniques. Moreover, the autoencoder model is able
    to independently extract features from the input data, leading to better accuracy
    and lower computing costs. Figure 8. Overview of autoencoder network architecture.
    4.3. Problem Formulation Considering a time-series dataset 𝐷=[ 𝑋 1 ,  𝑋 2 ,…,  𝑋
    𝑛 ]∈ ℝ 𝑡×𝑛 , where each 𝑋 𝑖 =[ 𝑥 1𝑖 ,  𝑥 2𝑖 ,…,  𝑥 𝑡𝑖 ]∈ ℝ 𝑡 (for 𝑖=1,…,𝑛 ) comprising
    data obtained from sensors over a specific period of time t, the suggested model
    is trained with a subset of the dataset 𝐷 𝑡𝑟𝑎𝑖𝑛 ∈ ℝ 𝑡×𝑘 which only contains normal
    samples, where k is the number of training samples. The samples for testing are
    𝐷 𝑡𝑒𝑠𝑡 =[ 𝐷 𝑣 𝑡𝑒𝑠𝑡 , 𝐷 𝑢 𝑡𝑒𝑠𝑡 ]∈ ℝ 𝑡×(𝑣+𝑢) , with v and u representing the number
    of normal and abnormal samples, respectively, and 𝑛=𝑘+𝑣+𝑢 . Due to the imbalanced
    nature of the time-series data, the size of normal samples is greater than that
    of abnormal samples. A GAN-based model is trained with 𝐷 𝑡𝑟𝑎𝑖𝑛 to reduce the output
    for each output 𝑋 𝑖 in 𝐷 𝑡𝑟𝑎𝑖𝑛 . After the training process as shown in Appendix
    A, 𝐷 𝑡𝑒𝑠𝑡 is passed through the trained model to evaluate it according to unseen
    samples during the learning. The trained generator can then generate fake normal
    samples from the noise vector. The discriminator model is used to accurately classify
    samples into normal or abnormal sequences. Autoencoders can be used as techniques
    for unsupervised or semi-supervised anomaly detection. To train an autoencoder,
    this technique involves training a model on a dataset that contains only normal
    data. We use a supervised learning approach by dividing the dataset into training
    and testing sets. The training 𝐷𝑡𝑟𝑎𝑖𝑛 and testing 𝐷𝑡𝑒𝑠𝑡 sets are divided into
    input and output components by applying the sliding window approach. This approach
    uses the previous time intervals as both the input and output variables. This
    technique allows us to apply supervised learning to the autoencoder network. To
    evaluate the performance of the trained model, we used the reconstruction error,
    ℒ(𝑥, 𝑥 ̂  ) , which measures the differences between the original input and the
    consequent reconstruction. The amount of discrepancy between a reconstructed representation
    and the original instance is used to calculate the anomaly score. The larger the
    difference, the greater the probability that it is an outlier. Moreover, the cutoff
    point for identifying anomalies can be adjusted by employing cross-validation
    to determine the most suitable threshold (Th) for the reconstruction error. 4.4.
    Dataset Preprocessing The data used in this analysis were obtained from distinct
    sources, as shown in Table 3. These datasets were selected as they encompass soil
    and weather information and have the same hourly sampling rate to address the
    univariate anomaly detection and forecasting queries. The transformation for anomaly
    detection models involves three steps. Firstly, the time series are scaled between
    0 and 1 using MinMaxScaler. This is an important step as it helps the network
    learn faster and converge with ease. Secondly, the time series is split into training,
    testing, and validation data. The training set consists of the first 80%, the
    testing set consists of the next 10%, and the validation set consists of the last
    10%. Lastly, the training and testing splits are divided into input and output
    components by using the sliding window technique with sequence length 6 for anomaly
    detection models. Table 3. Description of datasets used to train deep learning
    models. 4.5. Implementation We implemented a Generator network to produce fake
    samples. As shown in Table 3, it consists of one-dimensional convolution, LSTM,
    and dense layers with a binary cross-entropy loss function. Binary cross-entropy
    measures the performance of a binary classification model whose output is a probability
    value between 0 and 1. We implemented a Discriminator Neural Network that outputs
    a score for each sample, indicating whether it belongs to the real or fake sample.
    This Discriminator consists of one-dimensional convolution, LSTM, and dense layers.
    To obtain a probability value, a Sigmoid activation function is applied to the
    final layer. We implemented an Autoencoder Neural Network that tries to output
    the same inputs with less reconstruction error. This neural network consists of
    one-dimensional convolution, LSTM, and dense layers, followed by a dropout layer
    to help prevent overfitting. Adam optimization is a stochastic gradient descent
    method based on the adaptive estimation of first-order and second-order moments.
    In our case, we used the Adam optimizer implemented in the Keras/TensorFlow library,
    with a learning rate of 0.001 and β 2 set to 0.5. GAN models are trained for 2000
    epochs with a batch size of 128, and the autoencoder models are trained for 50
    epochs with a batch size of 8. After each epoch, the model is stored on the hard
    drive to select the best model before overfitting occurs. The detailed network
    architecture of the autoencoder model can be found in Table 4, and the detailed
    network architecture of the GAN is presented in Table 5. Table 4. Network architecture
    of AE model. Table 5. Network architecture of GAN model. 4.6. Description of Evaluation
    Metrics After the learning process, the best model was selected and evaluated
    using balanced class validation data that contain 1000 normal and 1000 abnormal
    samples labeled by agronomy experts. Table 6 summarizes the evaluation metrics
    of the anomaly detection models related to soil moisture, air temperature, and
    air humidity. Table 6. Evaluation metrics of anomaly detection models. The metrics
    used for evaluating the anomaly detection models include precision, recall, F1
    score, and accuracy. They are calculated as follows: Accuracy= 𝑇 𝑝 + 𝑇 𝑛 𝑇 𝑝 +
    𝑓 𝑛 + 𝑓 𝑝 + 𝑇 𝑛 Precision= 𝑇 𝑝 𝑇 𝑝 + 𝑓 𝑝 Recall= 𝑇 𝑝 𝑇 𝑝 + 𝑓 𝑛 F1−score=2× 𝑃𝑟𝑒𝑐𝑖𝑠𝑖𝑜𝑛×𝑅𝑒𝑐𝑎𝑙𝑙
    𝑃𝑟𝑒𝑐𝑖𝑠𝑖𝑜𝑛+𝑅𝑒𝑐𝑎𝑙𝑙 True Positive (TP): represents the number of abnormal samples
    correctly classified as attacks (correct detection). False Positive (FP): represents
    the number of normal samples wrongly classified as attacks (incorrect detection).
    True Negative (TN): represents the number of normal samples wrongly classified
    (correct detection). False Negative (FN): represents the number of abnormal samples
    wrongly classified as attacks (incorrect detection). Accuracy: reports the proportion
    of properly categorized samples to all other samples in the testing set. Precision:
    reports the percentage of samples properly categorized for all TP and FP in the
    testing set. Recall: the ratio of TP samples to the total number of TP and FN
    samples is known as recall. The F1-score reports the harmonic mean between precision
    and recall. 4.7. Results and Evaluation We trained a GAN model on soil moisture
    data for 2000 epochs, with an early stop mechanism implemented to stop training
    if the discriminator and generator losses remained low for 20 epochs. The GAN
    model for soil moisture at 5 cm depth converged at 500 epochs, while the model
    for 20 cm depth converged at 2000 epochs. Autoencoders were also trained for 100
    epochs, with models saved to the hard drive after each epoch. The model before
    the overfitting occurred was selected, with the models at epoch 38 and epoch 20
    being chosen for soil moisture models at depths of 5 cm and 20 cm, respectively.
    According to Table 6, the accuracy of each model ranged from 57.10% to 97.60%,
    while the F1 score ranged from 43.40% to 97.60%. Among the models, AE obtained
    the maximum accuracy and F1 score of 97.60% and 97.60%, respectively, while GAN
    achieved accuracy and F1 scores of 87.50% and 88.88%, respectively. The autoencoder
    error thresholds were set according to the 95% percentile of training data. As
    shown in Figure 9, we chose four-month time-series data from a soil moisture dataset,
    covering the time period from October 2010 to January 2011. Figure 9. Results
    of anomaly detection models on the soil moisture parameter. The GAN anomaly detection
    model identifies many anomalies in the normal behavior of soil moisture sensors,
    which may lead to false alarms for the farmer. On the other hand, the autoencoder
    model only picks up anomalies in the curves’ peaks that result from irrigation
    or rainfall. We trained a GAN model for detecting anomalies in air temperature
    for 3000 epochs and added an early stopping feature that would stop the training
    if the loss for the generator and discriminator remained low for 20 consecutive
    epochs. The training of the GAN model for air temperature in New York was observed
    to converge at 2700 epochs, while the training of the model for Philadelphia converged
    at 1870 epochs. Additionally, we also trained autoencoders for 100 epochs, saving
    the models after every epoch. The model that was trained before overfitting occurred
    was selected, with the models at epochs 95 and 87 chosen for air temperature models
    in New York and Philadelphia, respectively. The error thresholds for the autoencoder
    models were set based on the 95th percentile of the training data. This resulted
    in high accuracy, recall, and F1 scores for the autoencoder models compared to
    the GAN models, with the precision being similar for both. As illustrated in Figure
    10, we selected four-month time-series data from an air temperature dataset, from
    October 2012 to January 2013. The GAN anomaly detection model detects abnormalities
    in the normal behaviour of the air temperature sensor, whereas the autoencoder
    model recognizes the typical pattern of the air temperature sensor and does not
    detect any anomalies. Figure 10. Results of anomaly detection models on the air
    temperature parameter. We trained a GAN model for anomaly detection in air humidity
    for 2000 epochs with an early stopping mechanism in place to stop training if
    the discriminator and generator losses remained low for 20 epochs. The GAN model
    for air-humidity in New York converged at 680 epochs, while the model for Philadelphia
    converged at 1412 epochs. Additionally, autoencoders were trained for 100 epochs,
    and the models were saved after each epoch. The model before overfitting occurred
    was chosen, with the models at epochs 93 and 100 selected for air humidity autoencoder
    models in New York and Philadelphia, respectively. This resulted in high accuracy,
    precision, recall, and F1 scores for the autoencoder models, which performed better
    than the GAN models. The data used in Figure 11 were a four-month time series
    of air humidity from October 2012 to January 2013. The GAN model identifies anomalies
    in the normal behavior of the sensor, while autoencoders recognize the normal
    patterns of the data and detect only a few anomalies. As per the model validation
    results, the autoencoder-based models demonstrated high accuracy and precision
    in detecting anomalies compared to the GAN models. To optimize the models without
    sacrificing accuracy, they were converted using TensorFlow Lite and deployed on
    IoT gateways. An API and a simple web UI were established to configure the anomaly
    error thresholds and alert end users of any sensor malfunctions, as presented
    in Figure 12. Figure 11. Results of anomaly detection models on the air humidity
    parameter. Figure 12. Configuring anomalies and error thresholds in the IoT gateway
    web application. 5. Irrigation Factors Forecasting Using Deep Learning As illustrated
    in Figure 13, the developed system incorporates various microservices, including
    anomaly detection, forecasting, and data analytics, to enhance farmers’ ability
    to make irrigation decisions. These microservices are exposed through the system.
    To provide the farmer with the necessary tools for monitoring and forecasting
    climate and soil measurements, we have implemented a time-series NoSQL database
    to efficiently handle the large volume of sensor data. This type of database is
    particularly well suited for managing time-dependent data and enabling efficient
    manipulation operations. Additionally, it supports auto-scaling capabilities,
    ensuring that the system can handle increased data loads if required. To provide
    accessibility to the system, we have deployed multiple web servers that host web
    applications. Figure 13. Illustration depicting the interaction between end users
    and cloud services within a system. This allows the farmer to access the system
    and its functionalities through a user-friendly interface. To an ensure optimal
    performance and distribution of user requests, load balancers are implemented
    to evenly distribute the incoming traffic across the deployed web servers. In
    the next experiment, we will test the accuracy of the soil and weather forecasting
    models using autoencoders. In the first stage, we will feed the autoencoders’
    anomaly detection models with data from the datasets and replace detected anomalies
    with the reconstructed inputs. The obtained data are structured into sequences
    in the next stage by applying the sliding window approach. This methodology improves
    those observed in previous studies [3,28] when integrated with an IoT platform,
    as a tool for simplifying the labeling of actual anomalies, and can assist in
    the creation of supervised datasets for future research in the field. Prediction
    models based on deep learning techniques can also correct anomalies. We use the
    previous 24 records as inputs and the next 24 as outputs. This technique allows
    us to apply supervised learning to soil and weather parameter forecasting tasks.
    5.1. Forecasting Model for Potential Irrigation Factors Based on the previous
    comparison of generative adversarial networks (GANs) and autoencoders (AEs) for
    finding anomalies, it was found that AEs are more accurate and have a lower rate
    of false alarms. As a result, AE models were chosen for the data collection process.
    This section aims to evaluate the performance of the forecasting models after
    applying data clearing and correction techniques, which are intended to enhance
    the data’s quality and reliability for accurate forecasts. Table 6 shows the architecture
    of the model. This architecture is a sequence-to-vector transformation, where
    the input sequence goes through a series of operations to pull out features and
    capture temporal relationships. This process involves using both convolutional
    and LSTM layers. The convolutional layers extract pertinent features from the
    input sequence, while the bidirectional LSTM architecture processes the input
    sequence in both forward and backward directions, enabling the model to capture
    past and future context simultaneously. Finally, the output of the LSTM layer
    is fed into a fully connected layer for additional processing and to generate
    the final output of the model. This architecture enables the model to effectively
    analyze and understand the input sequence, producing a condensed vector representation
    as the ultimate result. 5.2. Evaluation Metrics of Forecasting Models Based on
    Deep Learning Models When analyzing prediction models of future measurement performance,
    the following metrics are typically used: Mean Absolute Error (MAE), Mean Square
    Error (MSE), and Root Mean Square Error (RMSE) are the three most commonly used
    loss metrics to evaluate the performance of DL models related to regression problems.
    They are given as follows: MSE MAE RMSE = ∑ 𝑁 𝑖=1 ( 𝑥 𝑖 − 𝑦 𝑖 ) 2 = ∑ 𝑁 𝑖=1 |
    𝑥 𝑖 − 𝑦 𝑖 | = ∑ 𝑁 𝑖=1 ( 𝑥 𝑖 − 𝑦 𝑖 ) 2 − − − − − − − − − − − − √ 5.3. Results and
    Discussion According to our empirical study, the Adam optimizer from Keras/TensorFlow
    with a learning rate of 0.001 was used for training the CNN/BiLSTM models for
    200 epochs using a batch size of 32. The model was saved after each epoch to pick
    the best model before overfitting occurred. Table 7 displays the in-depth structure
    of the CNN/BiLSTM models. The model inputs a sequence of 24 previous values to
    predict the next 24 subsequent sensor measures. As shown in Table 8, the evaluation
    results for the soil moisture forecasting model are presented for two different
    depth sensors (sm_5 and sm_20). For sm_5, when no anomalies were replaced, the
    model achieved an MSE of 1.2273, an RMSE of 1.1078, and an MAE of 0.999. However,
    a significant performance improvement was observed when 1025 anomalies were replaced,
    resulting in a notable decrease in MSE to 0.272243, RMSE to 0.52176, and MAE to
    0.4703. These findings demonstrate that replacing anomalies positively impacted
    the model’s ability to forecast soil moisture at sm_5 sensors, leading to more
    accurate predictions. In the case of sm_20, when no anomalies were replaced, the
    model yielded an MSE of 1.70128, an RMSE of 1.3043, and an MAE of 1.234. Table
    7. Network architecture of parameter forecasting model. Table 8. Evaluation of
    soil moisture forecasting model. Subsequently, when 716 anomalies were replaced,
    a slight performance improvement was observed, resulting in a reduced MSE of 0.8740,
    an RMSE of 0.9348, and an MAE of 0.861. The decrease in the MSE, RMSE, and MAE
    values indicates enhanced accuracy in the model’s predictions for sm_20 sensors,
    although the improvements were comparatively smaller than those observed for sm_5.
    These results underscore the significance of replacing anomalies in the dataset
    to improve the forecasting accuracy of the model. The improvements achieved for
    the sm_5 sensors demonstrate the substantial impact of addressing anomalies on
    the model’s performance. However, for the sm_20 sensors, the improvements were
    relatively modest, suggesting that anomalies had a lesser effect on the model’s
    predictions in this particular case. According to the results, the autoencoder
    model trained on clean data demonstrated the best forecasting performance, as
    shown in Figure 14. The actual and expected soil moisture were nearly identical,
    with minor discrepancies at the 5 cm and 20 cm depths. Table 9 presents the evaluation
    of an air temperature forecasting model for New York and Philadelphia, considering
    scenarios with and without anomaly replacement. The air temperature model in New
    York, not replacing anomalies, resulted in an MSE of 20.1318, an RMSE of 4.4868,
    and an MAE of 3.497. However, when 1140 anomalies were replaced, the model’s performance
    improved significantly, with the MSE decreasing to 17.7633, the RMSE decreasing
    to 4.2146, and the MAE decreasing to 3.436. This suggests that replacing anomalies
    enhanced the model’s accuracy in predicting air temperature in New York. Figure
    14. Results of soil moisture forecasting models over four months. Table 9. Evaluation
    of air temperature forecasting model. Similarly, for air temperature in Philadelphia,
    the model achieved an MSE of 16.2342, an RMSE of 4.0291, and an MAE of 3.3 when
    anomalies were not replaced. After replacing anomalies, the model’s performance
    improved further, resulting in an MSE of 4.635611, an RMSE of 2.1530, and an MAE
    of 1.648. This indicates that anomaly replacement positively influenced the model’s
    forecasting accuracy in Philadelphia. Overall, the results underscore the significance
    of anomaly replacement in improving the accuracy of the air temperature forecasting
    model, as depicted in Figure 15. The findings demonstrate that addressing anomalies
    led to more precise predictions for air temperature in both New York and Philadelphia.
    As indicated in Table 10, the evaluation results of an air humidity forecasting
    model for two locations are as follows. In New York and Philadelphia, the model’s
    performance was assessed under different scenarios where anomalies were either
    not corrected (corrected anomalies = 0) or replaced using a correction model.
    In the case of air humidity forecasting in New York, the results show that replacing
    anomalies had a minor positive effect on the model’s performance. Although the
    improvements in MSE, RMSE, and MAE values were relatively small, they indicate
    a slight increase in the accuracy of the model’s predictions after anomaly replacement.
    Figure 15. Results of air-temperature forecasting models over four months. Table
    10. Evaluation of air humidity forecasting model. Similarly, for air humidity
    forecasting in Philadelphia, replacing anomalies had a limited impact on the model’s
    performance. The reduction in MSE, RMSE, and MAE values was minimal, suggesting
    only a slight improvement in the accuracy of the model’s predictions. Overall,
    the results indicate that replacing anomalies had a limited influence on the performance
    of the air humidity forecasting model in both New York and Philadelphia, as shown
    in Figure 16. Anomalies may have a relatively small effect on the accuracy of
    the model’s predictions for air humidity in these locations. However, the long-term
    forecast error was significantly high due to various factors that can impact air
    humidity patterns, such as air temperature, air pressure, wind speed, and air
    pollution. After validating the models obtained, they were converted using TensorFlow
    Lite to improve efficiency without sacrificing accuracy and deployed on the cloud.
    An API and web dashboard were developed to display and predict weather and soil
    parameters, as shown in Figure 17. Figure 16. Results of air-humidity forecasting
    models over four months. Figure 17. Estimating irrigation measures using a web
    application accessible online. 6. Conclusions and Future Trends This article introduces
    version 1.0 of the INTEL-IRRIS low-cost and fog-IoT/AI system, developed by the
    University of Oran 1 for SFCs. We present an IoT-based smart farming system that
    integrates anomaly detection based on autoencoders, demonstrating superior performance
    compared to GANs with accuracy rates of 90% for soil moisture, 95% for air temperature,
    and 97% for air humidity. Additionally, anomalies can be adjusted using reconstructed
    inputs from autoencoder models. The results showcase minor estimation errors for
    soil moisture and air temperature hourly forecasting models, indicating the effectiveness
    of our approach. The proposed solution improves the effects observed in previous
    studies and can also assist in creating supervised datasets for future research
    in the field. This platform will need more research that takes into consideration
    several perspectives: To enhance the accuracy of the acquired data, we will increase
    the accuracy of low-cost sensors using autonomous and remotely managed techniques
    to improve the different sensors’ calibration [32]. As a consequence, our water–soil–plant–climate
    interaction models will prescribe more correct measures. To enhance the reliability,
    accessibility, and tracking of sensors and actuators, incorporating a blockchain
    security framework is recommended. This integration will establish a strong mechanism
    for data integrity, availability, and traceability in the system. The design and
    implementation of precision PA-based Low-Power Wide-Area Network (LPWAN) technologies
    like Lora and Sigfox. These approaches are designed to conserve energy, like the
    Long-Range Wide-Area Network (LoRaWAN), and enhance the irrigation efficiency
    of large-holder farmers. Offer the “out-of-the-box” function, meaning that the
    control component that recommends irrigation is integrated into the IoT gateway
    and, as a result, does not need an internet connection, as implemented by WAZIUP
    partner [27]. Traditional deep learning systems need centralized data gathering
    and processing, which is becoming more unfeasible due to efficiency issues and
    rising data privacy concerns. Due to these qualities, federated learning has been
    a hot topic in smart agriculture. We intend to conduct a comprehensive assessment
    of the FL approach and the centralized machine learning models. Author Contributions
    Conceptualization, A.D.; methodology, R.B. and A.D.; software, R.B.; validation,
    R.B. and A.D.; formal analysis, A.D.; investigation, R.B. and A.D.; resources,
    A.D.; data curation, R.B. and A.D.; writing—original draft preparation, A.D.;
    writing—review and editing, R.B. and A.D.; visualisation, A.D.; supervision, A.D.,
    B.K. and A.E.H.B.; project administration, B.K. and A.E.H.B.; funding acquisition,
    A.E.H.B. All authors have read and agreed to the published version of the manuscript.
    Funding This research work was supported by the national food security research
    program (PNR) and PRIMA program. The PRIMA program supported this work through
    project INTEL-IRRIS–PRIMA S2 2020–Project ID 1560 (http://intel-irris.eu/) (accessed
    on 30 July 2023) and projectWATERMED4.0 (https://www.watermed-project.eu/) (accessed
    on 30 July 2023). Institutional Review Board Statement Not applicable. Informed
    Consent Statement Not applicable. Data Availability Statement The datasets used
    and/or analyzed during the current study are available from the corresponding
    authors upon reasonable request. Acknowledgments The RIIR and LAPECI laboratories
    have supported this work scientifically. The PRIMA program under grant agreement
    No. 1821, project WATERMED4.0 and INTEL-IRRIS-PRIMA S2 2020-Project ID 1560, which
    supported this research scientifically, are all sponsors of this paper. Any correspondence
    related to this paper should be addressed to Amine Dahane. Conflicts of Interest
    The authors declare no conflict of interest. Abbreviations The following abbreviations
    are used in this manuscript: IoT Internet of Things. DL Deep Learning. ML Machine
    Learning. AE Autoencoder. GAN Generative Adversarial Network. ANN Artificial Neural
    Network. RNN Recurrent Neural Network. LSTM Long Short-Term Memory. BiLSTM Bidirectional
    Long Short-Term Memory CNN Convolutional Neural Network. SFCs Smallholder Farmer
    Communities. Appendix A Figure A1. Training evolution of soil moisture anomaly
    detection models. Figure A2. Training evolution of air temperature anomaly detection
    models. Figure A3. Training evolution of air humidity anomaly detection models.
    References Mitra, A.; Vangipuram, S.L.T.; Bapatla, A.K.; Bathalapalli, V.K.V.V.;
    Mohanty, S.P.; Kougianos, E.; Ray, C. Everything You wanted to Know about Smart
    Agriculture. arXiv 2022, arXiv:2201.04754. Available online: https://arxiv.org/abs/2201.04754
    (accessed on 30 July 2023). Trendov, N.M.; Varas, S.; Zeng, M. Digital Technologies
    in Agriculture and Rural Areas. 2019. Available online: http://www.fao.org/e-agriculture/
    (accessed on 30 July 2023). Dahane, A.; Benameur, R.; Kechar, B. An IoT Low-Cost
    Smart Farming for Enhancing Irrigation Efficiency of Smallholders Farmers. Wirel.
    Pers. Commun. 2022, 127, 3173–3210. [Google Scholar] [CrossRef] Wong, Y.J.; Nakayama,
    R.; Shimizu, Y.; Kamiya, A.; Shen, S.; Rashid, I.Z.M.; Sulaiman, N.M.N. Toward
    industrial revolution 4.0: Development, validation, and application of 3D-printed
    IoT-based water quality monitoring system. J. Clean. Prod. 2021, 324, 129230.
    [Google Scholar] [CrossRef] Rayhana, R.; Xiao, G.G.; Liu, Z. Printed Sensor Technologies
    for Monitoring Applications in Smart Farming: A Review. IEEE Trans. Instrum. Meas.
    2021, 70, 9513419. [Google Scholar] [CrossRef] Dupont, C.; Vecchio, M.; Pham,
    C.; Diop, B.; Dupont, C.; Koffi, S. An Open IoT Platform to Promote Eco-Sustainable
    Innovation in Western Africa: Real Urban and Rural Testbeds. Wirel. Commun. Mob.
    Comput. 2018, 2018, 1028578. [Google Scholar] [CrossRef] Pham, C.; Rahim, A.;
    Cousin, P. WAZIUP: A Low-Cost Infrastructure for Deploying IoT in Developing Countries.
    In Proceedings of the International Conference on E-Infrastructure and E-Services
    for Developing Countries: 8th International Conference, AFRICOMM 2016, Ouagadougou,
    Burkina Faso, 6–7 December 2016; Springer: Cham, Switzerland, 2018; Volume 1,
    pp. 135–144. [Google Scholar] [CrossRef] INTEL-IRRIS: Intelligent Irrigation System
    for Low-Cost Autonomous Water Control in Small-Scale Agriculture. Available online:
    https://intel-irris.eu/ (accessed on 30 July 2023). Dahane, A.; Benameur, R.;
    Kechar, B. An Innovative Smart and Sustainable Low-cost Irrigation System for
    Smallholder Farmers’ Communities. In Proceedings of the 2022 3rd International
    Conference on Embedded & Distributed Systems (EDiS), Oran, Algeria, 2–3 November
    2022; pp. 37–42. [Google Scholar] [CrossRef] García, L.; Parra, L.; Jimenez, J.M.;
    Lloret, J.; Lorenz, P. IoT-based smart irrigation systems: An overview on the
    recent trends on sensors and iot systems for irrigation in precision agriculture.
    Sensors 2020, 20, 1042. [Google Scholar] [CrossRef] [PubMed] Zia, H.; Rehman,
    A.; Harris, N.R.; Fatima, S.; Khurram, M. An Experimental Comparison of IoT-Based
    and Traditional Irrigation Scheduling on a Flood-Irrigated Subtropical Lemon Farm.
    Sensors 2021, 21, 4175. [Google Scholar] [CrossRef] [PubMed] Park, M.H.; Chakraborty,
    S.; Vuong, Q.D.; Noh, D.H.; Lee, J.W.; Lee, J.U.; Choi, J.H.; Lee, W.J. Anomaly
    Detection Based on Time Series Data of Hydraulic Accumulator. Sensors 2022, 22,
    9428. [Google Scholar] [CrossRef] [PubMed] Ehrhart, M.; Resch, B.; Havas, C.;
    Niederseer, D. A Conditional GAN for Generating Time Series Data for Stress Detection
    in Wearable Physiological Sensor Data. Sensors 2022, 22, 5969. [Google Scholar]
    [CrossRef] [PubMed] Rhanoui, M.; Mikram, M.; Yousfi, S.; Barzali, S. A CNN-BiLSTM
    Model for Document-Level Sentiment Analysis. Mach. Learn. Knowl. Extr. 2019, 1,
    832–847. [Google Scholar] [CrossRef] Citoni, B.; Fioranelli, F.; Imran, M.A.;
    Abbasi, Q.H. Internet of Things and LoRaWAN-Enabled Future Smart Farming. IEEE
    Internet Things Mag. 2020, 2, 14–19. [Google Scholar] [CrossRef] Vuran, M.C.;
    Salam, A.; Wong, R.; Irmak, S. Internet of underground things in precision agriculture:
    Architecture and technology aspects. Ad Hoc Netw. 2018, 81, 160–173. [Google Scholar]
    [CrossRef] Gutierrez, J.; Villa-Medina, J.F.; Nieto-Garibay, A.; Porta-Gandara,
    M.A. Automated irrigation system using a wireless sensor network and GPRS module.
    IEEE Trans. Instrum. Meas. 2014, 63, 166–176. [Google Scholar] [CrossRef] Rezk,
    N.G.; Hemdan, E.E.D.; Attia, A.F.; El-Sayed, A.; El-Rashidy, M.A. An efficient
    IoT based smart farming system using machine learning algorithms. Multimed. Tools
    Appl. 2021, 80, 773–797. [Google Scholar] [CrossRef] Goap, A.; Sharma, D.; Shukla,
    A.K.; Krishna, C.R. An IoT based smart irrigation management system using Machine
    learning and open source technologies. Comput. Electron. Agric. 2018, 155, 41–49.
    [Google Scholar] [CrossRef] Pham, C.; Rahim, A.; Hartmann, C.; Dupont, C.; Forster,
    J.; Markwordt, F.; Printanier, J.F.; Kechar, B.; Benkhelifa, M.; Baraka, K.; et
    al. Deploying Low-Cost and Full Edge-IoT/AI System for Optimizing Irrigation in
    Smallholder Farmers Communities. In Proceedings of the Workshops at 18th International
    Conference on Intelligent Environments (IE2022), Biarritz, France, 20–23 June
    2022; IOS Press: Amsterdam, The Netherlands, 2022. [Google Scholar] [CrossRef]
    Dahane, A.; Kechar, B.; Meddah, Y.; Benabdellah, O. Automated Irrigation Management
    Platform using a Wireless Sensor Network. In Proceedings of the 2019 Sixth International
    Conference on Internet of Things: Systems, Management and Security (IOTSMS), Granada,
    Spain, 22–25 October 2019; pp. 610–615. [Google Scholar] [CrossRef] Roopaei, M.;
    Rad, P.; Choo, K.K.R. Cloud of things in smart agriculture: Intelligent irrigation
    monitoring by thermal imaging. IEEE Cloud Comput. 2017, 4, 10–15. [Google Scholar]
    [CrossRef] Boursianis, A.D.; Papadopoulou, M.S.; Gotsis, A.; Wan, S.; Sarigiannidis,
    P.; Nikolaidis, S.; Goudos, S.K. Smart Irrigation System for Precision Agriculture
    - The AREThOU5A IoT Platform. IEEE Sens. J. 2021, 21, 17539–17547. [Google Scholar]
    [CrossRef] Cheema, S.M.; Ali, M.; Pires, I.M.; Gonçalves, N.J.; Naqvi, M.H.; Hassan,
    M. IoAT Enabled Smart Farming: Urdu Language-Based Solution for Low-Literate Farmers.
    Agriculture 2022, 12, 1277. [Google Scholar] [CrossRef] González-Vidal, A.; Fernández-García,
    J.; Skarmeta, A.F. A combination of multi and univariate anomaly detection in
    urban irrigation systems. In Proceedings of the 2022 3rd International Conference
    on Embedded & Distributed Systems (EDiS), Oran, Algeria, 2–3 November 2022; pp.
    31–36. [Google Scholar] [CrossRef] Chen, M.; Cui, Y.; Wang, X.; Xie, H.; Liu,
    F.; Luo, T.; Zheng, S.; Luo, Y. A reinforcement learning approach to irrigation
    decision-making for rice using weather forecasts. Agric. Water Manag. 2021, 250,
    106838. [Google Scholar] [CrossRef] WAZIUP, E.V. Available online: https://www.waziup.io/documentation/wazigate/
    (accessed on 30 July 2023). Dahane, A.; Benameur, R.; Kechar, B.; Benyamina, A.
    An IoT Based Smart Farming System Using Machine Learning. In Proceedings of the
    2020 International Symposium on Networks, Computers and Communications (ISNCC),
    Montreal, QC, Canada, 20–22 October 2020; pp. 1–6. [Google Scholar] [CrossRef]
    Kose, U.; Prasath, V.; Mondal, M.; Podder, P.; Bharati, S. Artificial Intelligence
    and Smart Agriculture Applications; Auerbach Publications: New York, NY, USA,
    2022. [Google Scholar] [CrossRef] Godsey, S.E.; Marks, D.; Kormos, P.; Seyfried,
    M.; Enslin, C.L.; McNamara, C.; Link, T. Eleven Years of Mountain Weather, Snow,
    Soil Moisture and Stream Flow Data from the Rain-Snow Transition Zone—The Johnston
    Draw Catchment, Reynolds Creek Experimental Watershed and Critical Zone Observatory,
    USA. v1.1; Ag Data Commons: Charlotte, NC, USA, 2016. [Google Scholar] [CrossRef]
    Historical Hourly Weather Data 2012–2017. Available online: https://www.kaggle.com/datasets/selfishgene/historical-hourly-weather-data
    (accessed on 30 July 2023). Zyrianoff, I.D.; Neto, A.T.; Silva, D.; Cinotti, T.S.;
    Di Felice, M.; Kamienski, C. A Soil Moisture Calibration Service for IoT-based
    Smart Irrigation. In Proceedings of the 2021 IEEE International Workshop on Metrology
    for Agriculture and Forestry (MetroAgriFor), Trento-Bolzano, Italy, 3–5 November
    2021; pp. 315–319. [Google Scholar] [CrossRef]        Disclaimer/Publisher’s Note:
    The statements, opinions and data contained in all publications are solely those
    of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s).
    MDPI and/or the editor(s) disclaim responsibility for any injury to people or
    property resulting from any ideas, methods, instructions or products referred
    to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Benameur, R.; Dahane, A.; Kechar, B.; Benyamina,
    A.E.H. An Innovative Smart and Sustainable Low-Cost Irrigation System for Anomaly
    Detection Using Deep Learning. Sensors 2024, 24, 1162. https://doi.org/10.3390/s24041162
    AMA Style Benameur R, Dahane A, Kechar B, Benyamina AEH. An Innovative Smart and
    Sustainable Low-Cost Irrigation System for Anomaly Detection Using Deep Learning.
    Sensors. 2024; 24(4):1162. https://doi.org/10.3390/s24041162 Chicago/Turabian
    Style Benameur, Rabaie, Amine Dahane, Bouabdellah Kechar, and Abou El Hassan Benyamina.
    2024. \"An Innovative Smart and Sustainable Low-Cost Irrigation System for Anomaly
    Detection Using Deep Learning\" Sensors 24, no. 4: 1162. https://doi.org/10.3390/s24041162
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations No citations
    were found for this article, but you may check on Google Scholar Article Access
    Statistics Article access statistics Article Views 10. Feb 15. Feb 20. Feb 25.
    Feb 1. Mar 6. Mar 11. Mar 16. Mar 21. Mar 26. Mar 31. Mar 5. Apr 0 1000 250 500
    750 For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sensors, EISSN 1424-8220,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Innovative Smart and Sustainable Low-Cost Irrigation System for Anomaly
    Detection Using Deep Learning
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh M.
  - Sahoo K.S.
  - Gandomi A.H.
  citation_count: '0'
  description: Implementing innovative farming practices becomes imperative for a
    country whose economy relies heavily on agricultural products. Over recent years,
    the swift process of urbanization and the depletion of forests have influenced
    farmers. Due to the lack of rainwater harvesting and changing weather patterns,
    many crop failure cases have been registered in the last few years. To prevent
    loss of annual crop production, many researchers propose the technology-driven
    smart farming method. Smart agriculture involves utilizing technology to create
    a controlled environment for the management of the crops. Smart farming increases
    crop production and provides small farmers with an alternative income source.
    The government initiated many pilot projects to promote smart agriculture in India.
    Yet, the absence of technological assistance and skilled procedures poses a challenge
    for most farmers aiming to thrive in this industry. This paper introduces a smart
    freshwater recirculating aquaculture system based on IoT technology. The proposed
    system has integrated sensors and actuators. The sensor system monitors the water
    parameters, and actuators maintain the aquaculture environment. An intelligent
    data analytics algorithm played a significant role in monitoring and maintaining
    the freshwater aquaculture environment. The analytics derived the relationship
    between the water parameters and identified the relative change. From the experimental
    evaluation, we have identified that the M5 model tree algorithm has the highest
    accuracy for monitoring the relative change in water parameters.
  doi: 10.1109/JIOT.2023.3298844
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things
    Journal >Volume: 11 Issue: 3 An Intelligent-IoT-Based Data Analytics for Freshwater
    Recirculating Aquaculture System Publisher: IEEE Cite This PDF Munesh Singh; Kshira
    Sagar Sahoo; Amir H. Gandomi All Authors 662 Full Text Views Open Access Under
    a Creative Commons License Abstract Document Sections I. Introduction II. Related
    Work III. Baseline Data IV. Component of Proposed IoT System for Aquaculture Management
    V. Experiments and Results Show Full Outline Authors Figures References Keywords
    Metrics Abstract: Implementing innovative farming practices becomes imperative
    for a country whose economy relies heavily on agricultural products. Over recent
    years, the swift process of urbanization and the depletion of forests have influenced
    farmers. Due to the lack of rainwater harvesting and changing weather patterns,
    many crop failure cases have been registered in the last few years. To prevent
    loss of annual crop production, many researchers propose the technology-driven
    smart farming method. Smart agriculture involves utilizing technology to create
    a controlled environment for the management of the crops. Smart farming increases
    crop production and provides small farmers with an alternative income source.
    The government initiated many pilot projects to promote smart agriculture in India.
    Yet, the absence of technological assistance and skilled procedures poses a challenge
    for most farmers aiming to thrive in this industry. This paper introduces a smart
    freshwater recirculating aquaculture system based on IoT technology. The proposed
    system has integrated sensors and actuators. The sensor system monitors the water
    parameters, and actuators maintain the aquaculture environment. An intelligent
    data analytics algorithm played a significant role in monitoring and maintaining
    the freshwater aquaculture environment. The analytics derived the relationship
    between the water parameters and identified the relative change. From the experimental
    evaluation, we have identified that the M5 model tree algorithm has the highest
    accuracy for monitoring the relative change in water parameters. Published in:
    IEEE Internet of Things Journal ( Volume: 11, Issue: 3, 01 February 2024) Page(s):
    4206 - 4217 Date of Publication: 18 September 2023 ISSN Information: DOI: 10.1109/JIOT.2023.3298844
    Publisher: IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this
    material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction In recent years, we have seen a significant transformation in
    regular farming. Many urban cities are utilizing their building spaces for intelligent
    farming. Smart farming is a technology-driven control for monitoring and maintaining
    the proper growth environment [1], [2]. However, smart farming is still tricky
    for many unskilled farmers [3]. In India, 70% population directly or indirectly
    depends on agriculture. Indian agriculture has a significant contribution to the
    Indian economy [3]. Over the past few years, the changing weather patterns and
    global warming have significantly impacted annual crop production [2]. A substantial
    number of farmers are affected by the loss of annual crop production. To cut short
    their loss and provide an alternative source of income, the Indian government
    initiated many pilot projects to promote integrated aquaculture-based farming.
    India has 2.36 million hectares of ponds and tanks, which offers immense opportunities
    for aquaculture. Aquaculture is the mean of livelihood for 28 million people in
    India. Unlike other aquaculture, freshwater pearl cultivation is the most profitable
    business in current scenarios. In 2020, India imported 1.59 trillion rupees worth
    of pearls, precious and semi-precious stones. To make India self-reliant on pearl
    production, the Indian government supports the farmers through subsidies and free
    training programs. Despite government efforts, the annual pearl production has
    not made significant progress. The lack of technological intervention and skill-oriented
    manual operation is the primary cause of poor production. In India, freshwater
    aquaculture-based farming is still operated manually. Aquaculture farming is very
    new to most farmers in India. This article presents a smart IoT-based freshwater
    recirculating aquaculture system. The proposed system smartly manages the optimal
    requirement for aquaculture. The system has three significant designs: 1) physical;
    2) network; and 3) logical. In physical configuration, we have edge devices integrated
    with sensors and actuators. The sensors monitor the water parameters, and actuators
    control the habitable aquaculture environment. The communication network between
    the physical devices manages data and control flow. The network design has an
    integrated network between the edge, fog, and gateway devices. The gateway operates
    the virtual private network (VPN) servers for secure communication in the public
    network. At the same time, the network between the edge node and fog node communicates
    using a socket. In logical design, we have an abstract representation of entities
    and processes. The logical design included a front-end data visualization and
    interactive control utility provided through the Danjgo Web framework. At the
    back-end, we have a relational database for managing the data. A data analytics
    algorithm utilizes the relational data for forecasting the change in the water
    parameters and control for the actuators. The whole operation for monitoring and
    management is scheduled through a real-time clock (RTC). The model selected for
    data analytics is a nonlinear decision tree-based model random forest (RF), M5
    Model tree, and gradient boosting machine (GBM). The proposed system has the following
    main contribution. An intelligent-IoT-driven monitoring and management of freshwater
    pearl farming. An inexpensive regent replacement-based sensor system designed
    for ammonia testing. A relational data analytics to forecast problem, sensor fault
    detection, and inexpensive monitoring and management. The remainder of this article
    is organized as follows. Section II presents the related work. Section III presents
    the baseline data. Section IV presents the components of the proposed IoT system
    for aquaculture management and presents the aquaculture management using data
    analytics. Section V presents the experiments and results. Finally, Section VI
    presents the conclusion. SECTION II. Related Work The rapid expansion of the IoT
    brought ubiquitous networked devices and sensors integration in a variety of intelligent
    applications [4], [5]. The generated data from these devices requires computational
    intelligence to extract the knowledge from the data [6]. We have identified a
    few research works centered around water quality monitoring in the literature
    review. Most research works focus on water quality monitoring rather than system
    affordability. It is worth noting that the adoption of technology-driven control
    farming remains costly for many farmers. Using relational data analytics techniques,
    researchers forecast the change in water parameters relative to some know parameters.
    This technique keeps the system in a stable state with minimal hardware requirements.
    Gao et al. [7] proposed an intelligent-IoT-based control and traceability system
    to forecast and maintain water quality for freshwater fish farming. The whole
    system is divided into two modules, i.e., an intelligent module and tracking module.
    The intelligent management module includes the integrated sensor assembly [pH,
    water, temperature, dissolved oxygen (DO), and turbidity], data acquisition, data
    analysis, and database management. The tracking module includes the data visualization,
    chart, and data presentations. The intelligent module processes the fish pond
    monitoring data and forecasts the change in the water parameters. The alterations
    in water parameters empower farmers with the ability to oversee and manually regulate
    conditions using actuators. The system suggested by Gao et al. [7] manages water
    quality factors and offers farmers visual depictions to facilitate manual intervention.
    Zhu et al. [8] introduced a wireless network to oversee the water quality in fish
    cultivation. Their proposed method employs ANN to conduct a predictive analysis
    of water quality. The intelligent module of the system employs key variables like
    water temperature, pH, and salinity as benchmarks to predict the forthcoming patterns
    in dissolved oxygen levels. Zhu et al. [8] system tackles the measurement and
    control of water parameters. Simbeye et al. [9] developed a wireless sensor network
    (WSN)-based mechanism for monitoring aquaculture. The collected water quality
    information from the sensors is transmitted to a nearby server through a gateway.
    Afterwards, the data is displayed through a graphical user interface (GUI) via
    a local server. The primary focus of the study was on enhancing aquaculture management,
    optimizing power usage, and improving network efficiency. Simbeye et al. [9] devised
    the approach to oversee aquaculture within the confines of a personal area network.
    Dabrowski et al. [10] proposed a machine-learning approach to predict the DO using
    pH and water temperature. The data collected from the aquaculture prawn ponds
    was used for this study. Dabrowski et al. [10] analyzed the accuracy of DO prediction
    using long short-term memory (LSTM), linear regression (LR), ANN, and LDs. The
    experimental results show that the LSTM algorithm produces the optimum results
    with minimum normalized root mean-squared error (NRMSE). Dabrowski et al. [10]
    research show the accuracy of the machine learning approach for water quality
    forecast. Chen et al. [11] introduced a system equipped with water quality sensors.
    The sensor captures data from a fish pond and forwards it via zigbee to a microcontroller.
    The processed data is sent to a terminal device through a wirless interface. This
    terminal device empowers the user to monitor the agricultural. A graphical user
    interface (GUI) enables the data visualization. Chen et al. [11] provided a comprehensive
    description of a system that functions within a confined network. Mahfuz et al.
    [12] introduced an aquaculture monitoring system driven by a smart microcontroller.
    A user-friendly mobile application is employed to display the sensor-acquired
    data. The system is linked to a solar power setup to ensure continuous power supply.
    Any alteration in water parameters prompts notifications in the form of straightforward
    text messages. The suggested system required a manual intervention to manage the
    aquaculture. Vernandhes et al. [13] presented aquaponics monitoring system that
    utilizes the Internet of Things (IoT) paradigm. The application interface provides
    an end user remote access to individual physical components of the system. The
    proposed system consists of sensors, actuator, relay, Ethernet, and router. The
    aquaphonic system integrated actuators and sensor maintain the control environment
    for better growth of the plant. The proposed system in future plan to extend for
    indoor farming of other crops The work in [14] used the multivariate LR and ANN
    to forecast the DO relative to pH, water temperature, and electrical conductivity
    (EC). Similar work extends in [10] and shows the comparative performance of ANN
    and LR with support vector machine (SVM). All the competing models have shown
    a significant accurate forecast of DO. However, these model accuracy of forecast
    relies on short interval high amount of historical data. Currently, we have identified
    various ANN models, such as LSTM and deep belief networks that are considered
    to be an appropriate to solve the forecast problem [15], [16]. Recently, certain
    studies have explored comprehensive water quality monitoring and management systems
    utilizing cultural knowledge models and forecasting models [17], [18], [19], [20],
    [21], [22], [24], [26]. Nevertheless, these systems did not specifically target
    the current requirement for developing a fully automated aquaculture setup. Moreover,
    their setups failed to attain the intended real-time data exchange and control,
    thereby affecting both water quality and aquaculture production. This paper introduces
    an Internet of Things (IoT) system that effectively manages freshwater aquaculture.
    The system is developed for freshwater pearls aquaculture, which considers the
    distinct water quality and management prerequisites. The proposed system can also
    dynamically accommodate the needs of other freshwater culture breeds. SECTION
    III. Baseline Data We have collected the baseline data from the Central Institute
    of Freshwater Aquaculture Bhubaneswar (CIFA Bhubaneswar) [32]. Table I illustrates
    the Optimal water conditions for pearl farming aquaculture. In an aquaculture,
    the primary focus should be monitoring the alkalinity and hardness of water parameters.
    The regional water bodies in different states have different alkalinity and hardness.
    Alkalinity is the indicator of resistance to acidification. Water bodies that
    have good alkalinity can prevent the sudden change in pH. Alkalinity indicates
    acid resistance, with higher alkalinity in water bodies helping prevent abrupt
    pH fluctuations. The connection between alkalinity and hardness is noteworthy,
    as total hardness is linked to calcium and divalent magnesium ions. The optimal
    water conditions for pearl farming recommends an alkalinity level of 100 PPM and
    a hardness level of 60 PPM. Research has shown that hard water proves more advantageous
    for productivity than soft water, although soft water is more conducive to the
    enhanced production of freshwater mussels. Alkalinity, a variable influenced by
    time, correlates with pH and temperature. Mornings typically see elevated pH levels
    along with moderate to high alkalinity. The intricate interplay between temperature
    and various biological and chemical reactions is evident, as warmer water hampers
    the solubility of atmospheric dissolved oxygen. Mussels inhabiting warmer waters
    necessitate a more excellent supply of dissolved oxygen. Likewise, DO is important
    in assessing water quality. Adequate oxygen levels are imperative for the well-being
    of pearl-farming mussels within the aquatic environment. However, in stagnant
    water, the diffusion of atmospheric oxygen is notably lower. To address this,
    we employ an oxygen pump and agitation to directly infuse atmospheric air into
    the water, augmenting the essential DO levels. photosynthetic activity in aquatic
    plants constitutes another source of dissolved oxygen. In the context of pearl
    farming, mussels feed on plankton. The presence of uneaten plankton further influences
    the habitable under water conditions. During daylight hours, these algae consume
    CO and release Oxygen. Consequently, DO levels experience an increase during the
    day, followed by a decrease at night and on heavily cloudy days. During nighttime
    hours and mainly overcast days, algae consume oxygen for respiration. Consequently,
    an abundance of algae growth leads to an elevation in the biological oxygen demand
    (BOD). The BOD is increased by mixing the ample nutrients in the pond. It also
    has a relation to time and temperature. During the night, the plankton algae consume
    the DO rapidly. The plankton density has a relation with DO and pH. However, the
    pH also has a relation to total alkalinity. The fluctuations in pH are less common
    in higher alkalinity. Similarly, carbon dioxide also has an ill impact on mussels.
    The higher concentration of carbon dioxide fluctuates the pH. However, the rate
    of change in pH is relatively less at higher total alkalinity. Carbon dioxide
    (CO2) concentration increases due to lack of photosynthesis and die-off of phytoplankton.
    There is a significant need to monitor the pond’s DO concentration to minimize
    the impact of carbon dioxide. Similarly, ammonia concentration is highly lethal
    for aquatic animals. Ammonia has a relation with DO, pH, and carbon dioxide. The
    ammonia increases, often decreasing the DO and increasing CO2. Ammonia toxicity
    is more pronounced at elevated pH levels. The primary sources of ammonia are the
    excretions of aquatic animals and the decomposition of organic matter. Maintaining
    control over ammonia levels is of utmost importance for optimal growth. Table
    II summarizes some of the recent available literature on the topic. Although some
    intelligent aquaculture systems have been proposed in the literature, more work
    needs to be done to integrate the factors that accurately determine the water
    quality, fault behavior analysis, optimal schedule for feeding, and fault-tolerant
    monitoring and management. Moreover, the existing systems cannot analyze and interpret
    real-time data rather monitor through some Web application. Still, much work needs
    to address for real-time control of the system parameters and intelligent data
    analytics integration at the edge devices or fog devices. As a result, the gap
    addressed in this article is relevant to the study. TABLE I Ideal Water Parameters
    for Freshwater Pearl Farming [32] TABLE II Existing Aquaculture Monitoring Systems
    SECTION IV. Component of Proposed IoT System for Aquaculture Management This section
    introduces the proposed smart IoT-based system for managing the aquaculture. The
    comprehensive system is organized into four distinct phases of development: physical
    design; network design; logical design; intelligent forecasting models. Fig. 1
    illustrates the conceptual layout of a smart aquaculture system based on IoT.
    Fig. 1. Conceptual design of intelligent-IoT-based aquaculture system. Show All
    A. Physical Design The physical layer is responsible for collecting the data from
    the sensors. System-integrated sensors gather the water quality parameters, and
    actuators manage the water quality parameters. The sensing nodes in the proposed
    system are integrated with analogue base DO, pH, Electric conductivity (EC), RTC
    timer, and temperature sensors, as shown in Fig. 2. These sensor assemblies are
    kept outside the aquaculture tanks, as shown in Fig. 3. To accurately measure
    the change from the sensor data, we have integrated the edge node with ADS1115
    16-bit precision analog-to-digital converter (ADC) [26]. Through the I2C interface,
    ADS1115 ADC communicates the sensor data to the edge node. The 1-wire DS18B20
    temperature sensor directly interfaces with the edge node. For edge computation
    and networking, we have selected the Beagle-bone Black. The Beagle-bone black
    has a variety of general-purpose input–output ports, which allows interaction
    with various communication interface protocols. The onboard 4-GB internal flash
    memory provides sufficient space to organize the data in the relational data model.
    The board has a 1-GHz ARM cortex processor, consuming less power and providing
    adequate processing capability. We have employed actuators such as aerator, submersible
    pumps, bio-filters, heaters, and valves to maintain a habitable aquaculture environment.
    The direct current (DC) operated actuators are connected through the L293 driver.
    The alternate current (AC) ran actuators are connected through relays. The proposed
    system has the following subsystem for aquaculture management: test setup; regent
    replacement-based ammonia sensor system; power management; automated smart feeder;
    RAS. Fig. 2. Edge node integrated sensors and actuators (adapted from [32]). Show
    All Fig. 3. Test equipment setup. Show All 1) Test Setup: In the proposed system
    design, we have an edge node equipped with temperature sensors (DS18B20), pH sensor
    (DFRobot Gravity, model SEN0161), and DO (DFRobot Gravity model no: DFR1628),
    ammonia sensor, and water EC sensor. Similarly, we equipped the edge node with
    actuators like water pumps, aerators, feeders, biofilters, water heaters, and
    solenoid valves. Except for the temperature sensor, all the sensors are kept outside
    the main harvesting tank, as shown in Fig. 3. This arrangement prevents the sensor
    monitoring tip from corrosion and extends their lifetime. The integrated actuator,
    comprising a submersible pump and valve, facilitates water transfer from the main
    tank to the test setup. After the water quality assessment, the valve attached
    to conical funnel releases the water. A non-contact water level sensor is employed
    to regulate the activation and deactivation of the valve and submersible pump
    to manage the water overflow in the conical funnel. After each water quality assessment,
    the distilled water is pumped to clean the sensor probe. The water quality assessment
    is scheduled through a RTC. Our experimental investigation determined that water
    quality within the culture pond does not change abruptly. Numerous factors, such
    as water temperature, weather conditions, feeding, and the discharge of by-products,
    influence water quality parameters. These parameters often exhibit inconsistency
    multiple times throughout the day. After analyzing a month’s recorded data, we
    have established an optimal schedule for managing the freshwater pearl aquaculture
    system. 2) Regent Replacement-Based Ammonia Sensor System: Ammonia is directly
    toxic to culture breeds in the unionized form, which is favored at high temperatures
    and pH. It also reduces the ability of culture breeds to utilize oxygen. Ammonia
    gets introduced into the water through excreted metabolic waste and the decomposition
    of organic matter. We have designed an inexpensive regent replacement-based ammonia
    sensor system to automate ammonia testing. The regent replacement-based ammonia
    sensor system automates manual regent-based ammonia testing. In the regent replacement-based
    ammonia sensor system, we have used the water level sensor, drop counter, and
    color sensor. Similarly, we have used the actuators like water pump, overhead
    steerer, check valve, and solenoid valve, as shown in Fig. 4. The scheduled set
    for water quality monitoring activates the ammonia sensor system. At the scheduled
    time, the edge not integrated DC submersible pump and solenoid valve start their
    operation to carry the water for quality test. The noncontact water level sensor
    immediately closes the solenoid valve and pumps when the required amount of water
    is in the conical funnel. Ammonia testing regent is available in the burette,
    which is controlled through a check valve. The overhead stepper motor pushes the
    check valve to make an air entry, resulting in ammonia regent drop released into
    the conical funnel. To manage the required amount of regent drop, we have a drop
    counter which signals to the stepper motor and closes the check valve. The drop
    counter is designed through an optical QRD 114 proximity sensor, invert Schmitt
    trigger (SN74HC14N), and OR gate (MN4072B IC). The regent in conical funnel mixes
    with overhead stirrer motor. The test result is recorded through an RGB color
    sensor and translated into the corresponding numeric PPM value. The test water
    in the conical funnel is released through the solenoid valve. After the test experiment,
    we pump the distilled water to clean the testing site for the next test. The filtered
    water is adequately mixed with the overhead stirrer motor and released from the
    solenoid valve. Fig. 4. Regent replacement-based ammonia sensor system. Show All
    3) Power System: In the power subsystem design, we have implemented using a 160-W,
    12-V mono-crystalline solar panel, a 24-V 30 Amp solar controller, 12-V lead-acid
    batteries, a 12-V relay, a 200-W AC inverter, and a 12-V DC-DC buck converter
    to ensure an uninterrupted power supply, as depicted in Fig. 5. The proposed strategy
    for overseeing and managing the aquaculture system is synchronized via an RTC
    lock. The absence of a proper schedule could impact the productivity of aquaculture.
    Water parameters exhibit inconsistency and undergo multiple fluctuations throughout
    each day. Consequently, maintaining a consistent and well-monitored schedule for
    the aquaculture system is paramount. Therefore, missing a schedule monitoring
    and management may impact aquaculture productivity. The proposed power subsystem
    operates the DC and AC devices. A DC–DC buck converter supplies the required power
    to the DC-operated overhead stirrer, solenoid valve, and stepper motor. Similarly,
    the AC inverter operates the 20-W submersible pump, 15-W air pump, and 50-W water
    heater. Fig. 5. Power subsystem. Show All 4) Automated Smart Feeder: A crucial
    aspect of the aquaculture system is the necessity for accurate monitoring of mussel
    feeding. Neglecting proper feed management can have multifaceted effects on the
    overall well-being of the mussels. Overfeeding, for instance, results in not only
    the loss of mussel life but also exacerbates the levels of food-based pollutants
    within the water [15] [31]. This overfeeding further amplifies the presence of
    excreted by-products in the water, subsequently elevating the concentrations of
    harmful ammonia and nitrate. Both ammonia and nitrate pose significant threats
    to the mussels’ health. At night, uneaten algae consume dissolved oxygen while
    introducing increased carbon dioxide (CO2) into the aquatic environment. Conversely,
    similar algae release the DO as a by-product of photosynthesis during daylight
    hours. For the equilibrium of the aquaculture ecosystem, it is imperative to uphold
    an appropriate feed. The repercussions of overfeeding and the prolonged presence
    of residual matter in the water can profoundly affect the quality of the water.
    Green algae are water-soluble and readily consumable by mussels and play a vital
    role in their diet. As demonstrated in Fig. 6, the smart feeder system comprises
    a submersible pump and agitator. These agitators effectively blend the solution
    of green algae, which is then transported to the harvesting tank by the submersible
    pump. Fig. 6. Automated smart feeder. Show All The RAS is responsible for purifying
    the cultured water, subsequently re-utilizing it after appropriate treatment.
    This recirculating system effectively channels the water through bio-filters,
    which serve to eliminate by-products from aquatic organisms and decomposing residues
    present within the water. The absence of technological support hampers aquaculture
    farmers in their efforts to oversee and sustain water quality manually. In open
    pond aquaculture, the water is polluted with diverse waste materials. These waste
    components undergo decomposition, thereby exerting an influence on the overall
    quality of the water. This RAS configuration transfers water from the harvesting
    tanks to the bio-filter chamber via pumps, as shown in Fig. 7. Subsequently, the
    purified water is directed back into the main tank. This recirculating procedure
    is initiated after each feeding cycle. The innovative RAS design effectively addresses
    the primary issue of ammonia concentration and regulates pH levels. Fig. 7. RAS
    [32]. Show All B. Network Design The network design incorporates a communication
    framework connecting sensing, fog, and gateway nodes, as illustrated in Fig. 8.
    The socket communication API facilitates sensor data and controls communication
    between the edge and fog nodes. The gateway is the mediator of this communication
    between private and public networks. In the proposed network design, fog node
    placement is essential for data analysis and control. Fog nodes have local databases
    and analytics algorithms to process the data. The time scheduled monitoring and
    management are controlled by the fog node. However, the Amazon Web Services (AWS)
    EC2 infrastructure-as-a-service also runs an identical Web server. Data processing
    near the sensing node offers the benefit of maintaining the system optimally,
    ensuring adherence to scheduled monitoring and management tasks. The existing
    capacity of the public cloud needs to be improved to effectively address challenges
    such as latency and bandwidth constraints [31]. Relying solely on the cloud server
    for comprehensive analysis and control could yield undesirable outcomes. The potential
    for interruptions in connectivity between the sensing node and cloud servers raises
    the risk of timely scheduled operations being compromised at the sensing node.
    To mitigate these concerns, we have strategically positioned cloud analysis closer
    to the sensing node through fog nodes, thus averting disruptions to scheduled
    data analysis and control. However, the fog nodes primarily serve as data processing
    and storage intermediaries. The responsibility of managing scalable storage and
    processing of sensor data remains within the purview of the public cloud. The
    Rest API serves as the web server’s communication channel for data and control.
    Encoding of both data and control information is carried out using the base64
    format. Furthermore, a combination of MQTT and RestAPI protocols is utilized to
    facilitate the communication between the nodes. The local network between the
    nodes communicate to Amazon cloud EC2 instance via gateway router, as depicted
    in Fig. 9. We have employed the TP-link router for this gateway setup. This router
    features dual bands: IEEE 802.11ac/n/a at 5 GHz and IEEE 802.11n/b/g at 2.4 GHz,
    offering bandwidths of 450 Mbps and 1300 Mbps, respectively. We harnessed supplementary
    router capabilities such as the virtual private network (VPN) and Network Address
    Translation (NAT) features to enhance security and functionality. Notably, the
    VPN server integrated within the router furnishes a safe network environment for
    remote access from the public network. The secure tunnel also provides remote
    users to monitor and manage aquaculture operations. Fig. 8. Network configuration
    between the nodes [32]. Show All Fig. 9. Logical representation of the network
    configuration between the nodes. Show All C. Logical Design In a Data Processing
    layer, we have composed distinct functional components, each contributing to functions
    like data visualization, control, command, and processing. We have used the Python
    web framework for the front-end aspect. The graphical user interface (GUI) on
    the front end offers an array of functions, as illustrated in Fig. 10. The graphical
    user interface (GUI) was created using the technology stack of JQuery, Chart.js,
    CSS, and HTML5. The back-end is constructed using the MYSQL database. The web
    server is deployed at Amazon cloud EC2 instance and at fog node within the network.
    To streamline cloud-based data analytic, we have implemented visualization using
    docker containers. This approach simplifies the challenges inherent in application
    development. Container-based visualizations require the application and its associated
    binaries and libraries. The isolation of containers occurs at the kernel level,
    eliminating the need for a separate guest operating system and minimizing resource
    duplication. Each container runs isolated data analytic models, enabling seamless
    scaling or updating of micro-services without disrupting other application functionalities,
    as depicted in Fig. 11. It is a swift, low-cost, and elegant isolation framework.
    The isolated containers forecast the change in water parameters through different
    nonlinear decision tree-based models. The IoT dashboard has additional features
    like recalibration, fault detection, and status monitoring of sensors and actuators.
    The data analytics visualize the forecasted data along with actual data. This
    feature lets us know the difference between real sensor data and analytics-driven
    predicted data. In order to safeguard the identity of each device, a distinct
    and random API key has been employed. This key is specific to each device within
    the network. The API key is unique to every device in a network. The customer
    signs up and changes the API key. The remote login to the edge device is protected
    through a VPN server running the TP-link AC1750 wireless dual-band gigabit gateway
    router. Fig. 10. IoT dashboard [32]. Show All Fig. 11. Container-based visualizations.
    Show All D. Intelligent Forecasting Models We have adopted a data analytic approach
    to manage aquaculture operations. The predictive model analyses the change in
    water parameters and effectively operates the actuators. In this study, we analyze
    the feasibility of the tree-based model to forecast the water parameter in the
    presence of a low amount of data. We focus on two main scenarios: 1) estimating
    water parameters based on the relative change in other parameters and 2) predict
    alterations in water conditions using historical data. Besides, we also compare
    the performance of the tree-based model with existing multivariate LR and ANN.
    The prime focus of this study is to analyze the DO forecast relative to pH, water
    temperature, and TDS. The most common approaches for water quality prediction
    in aquaculture include the following: autoregressive moving average (ARMA); autoregressive
    integrated moving average (ARIMA); Markov model; support vector regression (SVR).
    These models are inappropriate for prediction in aquaculture water quality parameters
    as they only consider the linear relationship. The water quality parameters are
    inconsistent due to various environmental factors; hence linear prediction models
    are inefficient in correlating the relationships between multiple predictors and
    their respective variables. These models also take a long prediction time, making
    them unsuitable for predicting the nonlinear relationship [25], [27]. Deep learning
    models like LSTM may need to be more stable for predicting all real-time dynamics.
    The predictive processes can be linear to a single target quality parameter and
    its dynamics over time between multiple predictors and their respective variables.
    LSTM and gated recurrent unit (GRU) are flexible in capturing the nonlinear relationship
    in water quality parameters [28]. Due to its outstanding results in time-series
    prediction, LSTM is the most popular forecasting DL technique. For time-series
    prediction, LSTM and GRU models could be better at keeping long-term memory, especially
    for extended sequences. In time-series forecasting, historical observations influence
    the prediction value at the present step. In certain circumstances, the observation
    step that had a significant impact may have appeared long before the current step.
    Recent research has shown that the ability of LSTM models to extract information
    about long-term relationships from historical observations remains a crucial performance
    constraint. Theoretically, it has been demonstrated that ordinary LSTM lacks long
    memory from a statistical standpoint [29]. Compared to Naive Bayes, K Nearest
    Neighbors, and SVM, decision tree learning and neural networks result in better
    and more consistent performance. Known as KIG-ELM, the hybrid DO prediction model
    combines K -means, enhanced genetic algorithms (IGAs), and extreme learning machines
    (ELMs) and is based on edge computing architecture. This model distributes data
    acquisition, processing, and DO prediction among sensing nodes, routing nodes,
    and servers. For DO prediction, an ELM is implemented. Because of the unstable
    prediction performance constraint, it takes a lot of time to obtain high precision
    using the multiscale decomposition method. Multiparameter methods, which use several
    related parameters as input and the DO content as an output to forecast future
    DO, still have some significant issues, such as insufficiently processing DO data
    effectively and failing to recognize the characteristics of DO content changing.
    The DO time-series data is volatile. During sunrises and sunsets, forecast accuracy
    typically drops off quickly [30]. In our proposed method, we have compared the
    accuracy of models like ANN, GBM, RF, and M5 model trees. We have chosen the models
    mentioned above due to certain advantages of these models. Table III summarizes
    the befits and limitations of the selected models. TABLE III Comparison of Forecasting
    Models For designing a predictive model, we employ a model tree (M5) and benchmark
    its performance against a GBM, RF, and artificial neural network (ANN). Unlike
    linear models, tree-based models accommodate non-linear relationships, making
    them apt for monitoring real shifts in water parameters [27]. Random forest comprises
    multiple individual random decision trees functioning as an ensemble, with each
    tree acting as an independent predictor. The ensemble predictions, formed from
    low-correlation individual trees, surpass the accuracy of solitary predictions.
    Optimal RF predictions require careful feature vector selection instead of random
    sampling, aiming for low correlation within the distinct decision trees. Similarly,
    gradient boosting progressively enhances the performance of the CART algorithm.
    Initially assigning equal weights during decision tree training, subsequent modifications
    refine prediction quality. Weight adjustments focus on harder-to-classify instances,
    strengthening their influence, while easing-to-classify ones see reduced weight.
    Subsequent trees yield improved forecasts over their predecessors. The ultimate
    prediction rests upon an ensemble’s weighted sum of prior tree predictions. Furthermore,
    model tree-based predictive analysis forms a decision tree hierarchy using elementary
    models like linear regression, logistic regression etc. Initially, the given feature
    vector is fitted with a linear model. Later, the error is estimated between the
    actual target and predicted values. The least error features are chosen as the
    conditional branch of the decision tree. The subsequent split goes until the leaf
    node has an optimized linear model fitted on the partial feature vector. The trained
    model tree effectively forecasts the change in water quality parameters. The recursive
    optimization of the decision tree may lead to an overfitting problem. To deal
    with the overfitting problem, we have used the prepruning method to filter out
    the anomalies in the data set using the local outlier factor (LOF) [32]. Similarly,
    we have applied the post-pruning method to prevent the decision tree growth to
    its full depth. The post-pruning method simplifies the model tree and optimizes
    the prediction accuracy. Similarly, the ANN models are the conventional approach
    for time-series forecasting. However, unlike the tree-based model, ANN-based models
    need a larger data set for training and testing, and it is not easy to interpret
    the information from the trained model. We analyze the performance of the multilayer
    perception ANN model with a ReLu activation function. SECTION V. Experiments and
    Results A. Experimental Setup and Control System We have used the glass aquarium
    for freshwater pearl farming. The Lammelidens marginalis mussel species is used
    for pearl production, as shown in Fig. 12. Each mussel is implanted with two designed,
    crafted mussel shell nuclei. In the implantation process, each mussel passes through
    a surgical procedure. After successful implantation, each mussel is placed within
    tanks dedicated to post-operative care, where antibiotics and an oxygen pump are
    administered. Some mussels might reject the implanted foreign particles and die,
    while others accept them. Those mussels that accept the foreign particles are
    transferred from the post-operative care tanks to the primary harvesting tank.
    Maintaining a controlled environment is imperative to ensure optimal pearl production.
    The proposed system has sensors and actuators that manage the habitable underwater
    environment [31]. Fig. 12. Aquaculture main harvesting tank [32]. Show All In
    the initial stages of data processing, we investigated how temperature influences
    biological and chemical reactions. The fluctuation in temperature notably impacts
    water parameters over an entire day. Hence, we’ve established five distinct time
    intervals for data acquisition. The first acquisition, scheduled at 6:00 AM, coincides
    with the lowest temperature and DO levels, alongside the highest pH and moderate
    alkalinity. The second interval, at 10:00 AM, aligns with the initiation of the
    smart feeder system and aeration. At 3:00 PM, the third acquisition takes place,
    coinciding with peak temperature, pH, and DO levels. The fourth instance, at 10:00
    PM, corresponds to the commencement of the recirculating aquaculture system. This
    system involves water passing through a bio-filter to eliminate residual plankton
    feed, as nocturnal plankton consumption affects dissolved oxygen. Analytical algorithms
    oversee DO changes and aeration operation. The fifth interval, at 1:00 PM, analyzes
    aeration requirements through data analysis. RTC control manages system operations.
    We validate the control system by simulating changes in water parameters to observe
    system behavior [31]. The smart data analytics algorithm schedule the requirement
    for aquaculture management based on the change in the water parameters. The intelligent
    data analytics algorithm schedules the requirement for aquaculture management
    based on the change in the water parameters. B. Data Preprocessing The sensing
    node simplifies raw sensor data for processing. In some initial data, sensor data
    may be missing, potentially leading to erroneous predictive analysis. To address
    this, data imputation is executed at the fog node due to sensing node constraints.
    The sensing node aggregates sensor data using base64 encoding, forwarding it to
    the fog node. Upon receipt, the fog node decodes and validates the data before
    predictive analysis. For missing sensor values, the fog node employs data processing
    to determine correlations between historical and current data. Scheduled RTC data
    acquisition simplifies correlating current and similar-timestamp historical data.
    Utilizing the KD tree, the missing sensor feed is imputed by analyzing non-missing
    neighbouring sensor data. The Kd tree searches the nearest neighbor of similar
    timestamps from the historical n proximity sensors and imputes the missing sensor
    feed by reading the nearest neighbors’ sensor feeds. Subsequently, the sensor
    data undergoes pre-processing to identify anomalies. Anomalies within the dataset
    are eliminated by applying the LOF, made by Singh et al. [32]. This technique
    identifies aberrant data points by assessing their local deviation compared to
    neighbouring points. The resulting LoF score is then utilized to ascertain the
    presence of outliers in the data ⎧ ⎩ ⎨ LOF(k)∼1 data point in a same cluster LOF(k)<1
    data point is Inlier LOF(k)>1 data point is outlinear. View Source In the equation
    above, the variable “k” denotes the locality concerning its k th neighbours. To
    assess the efficiency of LOF, we introduced an additional outlier data point into
    the dataset. The experimental findings indicate that LOF proficiently identifies
    outliers within the dataset, as Figs.13 and 14 illustrate. Fig. 13. Outlier detection
    between DO and pH [32]. Show All Fig. 14. Outlier detection between DO and temperature
    [32]. Show All C. Aquaculture Control System The actuators respond to control
    signals generated by the data analytic algorithm. This algorithm utilizes past
    data to predict shifts in DO levels, taking into account correlated water parameters
    like temperature and pH. Relying solely on sensor data for system operation can
    lead to imprecise monitoring. Prolonged usage of sensors often introduces inaccuracies
    in measurements. Despite any discrepancies in sensor measurements, we counteract
    deviations from the desired state by considering the historical data recorded
    at similar time instances. We have considered the water temperature, EC, and relative
    pH parameters for predicting DO levels. Likewise, we have considered the interdependent
    parameters of DO, electrical conductivity (EC), and water temperature for predicting
    pH values. To evaluate the precision of the DO sensor data, we compare the pH
    and water temperature data with historical records from similar time intervals.
    We have integrated a K-D tree to improve the search procedure, as depicted in
    Fig. 15. Fig. 15. Aquaculture control system. Show All The predicted DO values,
    and those extracted from historical records might display either close resemblances
    or notable disparities. Should the relative variation remain below 0.5 parts per
    million (PPM) between the predicted and retrieved DO values, the system functions
    smoothly without sensor malfunctions, adhering to a schedule derived from the
    analytic process. Conversely, suppose the relative divergence surpasses 0.5 PPM.
    In that case, it triggers a re-calibration of the sensors, resulting in an adjusted
    schedule based on other correlated parameters such as EC and water temperature.
    A combination of multiple temperature probes and EC sensors is employed to ensure
    precise prediction as they are robust and cost-effective relative indicators for
    forecasting DO and pH levels. Likewise, the relationship between pH and DO is
    influenced by various factors. pH fluctuations are attributed to changes in water
    ion composition, which can be readily deduced through the EC sensor. In cases
    where the pH sensor produces inaccurate readings, the EC sensor is employed to
    stabilize both DO and pH variations. An absolute difference exceeding 1 part per
    million (PPM) prompts a system alert, indicating a potential sensor malfunction,
    prompting a transition to alternative parameters (EC and water temperature). Enhanced
    precision in prediction is achieved through the combined utilization of correlated
    relative parameters. Our initial investigation encompasses pH, DO, EC, and water
    temperature as interconnected parameters for comprehensive water quality analysis.
    Integrating multiple relevant sensor inputs contributes to the refined forecast.
    The incorporation of the actuator system is designed in response to variations
    in the target water parameters, as outlined in Table I. The gathered data orchestrate
    diverse actuator actions through the Real-Time Clock (RTC). Overnight accumulation
    of by-products and leftover feed leads to alterations in pH and DO levels within
    the water, which are normalized through the operation of the Recirculating Aquaculture
    System (RAS) and the aerator system, scheduled at 6 A.M. Later at 10 A.M., smart
    feeder system pumps the plankton algae mixture into the harvesting tank and operates
    the aerator to supplement desired to DO requirement. The third sensor measurement
    time was set to 3 P.M. when mussels excreted by-product, and temperature variation
    may fluctuate the DO and pH. To balance the DO and pH, the proposed system, based
    on the requirement, may operate the RAS system and aerator. At 10 P.M., scheduled
    actuator operation, we balance the DO and pH through RAS and aerator. Similarly,
    at the 1 P.M. overnight schedule, the proposed system analyzes the DO requirement
    and accordingly operates the aerator. We adjust the water parameters to validate
    the functionality of the control system. The intelligent data analytics algorithm
    schedules the aquaculture management requirement based on the water parameters.
    D. Performance Evaluation for Predictive Analysis The cleaned data serves as input
    for predictive analysis. Initially, we computed bilateral Pearson correlations
    among the water parameters. Subsequently, we aggregated the highly correlated
    data elements for predictive analysis. The outcomes of the bilateral Pearson correlations
    are presented in Table IV. The examination unveils a significant correlation between
    DO and temperature, demonstrated by correlation coefficients of 0.52. Similarly,
    pH exhibits correlations with DO and temperature, indicated by correlation coefficients
    of 0.73 and 0.82, respectively. Given the pivotal role of DO and pH as aquaculture
    indicators, they have been incorporated into the training dataset. Furthermore,
    water temperature exerts notable influence over chemical and biological reactions.
    The inclusion of water temperature in our feature vector has been undertaken.
    Considering the interrelation between DO, pH, and water temperature, we have designed
    the model training process where pH and temperature serve as independent variables,
    and DO functions as the dependent variable. We contrast tree-based models with
    the ANN model to evaluate performance. We used the multilayer perceptron with
    ReLu as the activation function for the ANN model. Due to limited test measurement
    from the aquaculture site, we have kept 1000 validation runs using a training
    set of 160 samples and a test set of 40 samples to obtain the convergence of mean
    and standard deviation on the performance indicators. In M5 model tree construction,
    we have used the parameters such as linear model, maximum depth of decision tree
    = 4, the minimum number of samples at leaf = 10, and greedy search strategy. The
    model tree training generates the ten rules, as shown in Fig. 16. For DO prediction,
    the M5 model tree shows a strong correlation R=0.877 between the actual and predicted
    data. The model estimated mean absolute error (MAE) was 0.963. Table V shows the
    comparative performance of the M5 model tree for DO prediction with other nonlinear
    decision tree-based predictors. The training process encompasses 80% of the sample
    data (160 instances), while the remaining 20% (40 instances) is designated for
    testing the model’s performance. The non-linear RF, GBM, and M5 model tree are
    assessed with a maximum tree depth set at 4 and a sample size 40. All the nonlinear
    tree-based model RF, GBM, and M5 model trees showed better performance compared
    to ANN. The slightly lower performance of ANN is due to the smaller size of the
    training data set with multiple input parameter. TABLE IV Pearson Correlation
    Analysis Results [32] TABLE V Result of DO Predicted From Nonlinear Forecasting
    Models Fig. 16. Generated model tree with maximum depth = 4. Show All The comparative
    performance analysis obtained the lowest MAE of 0.963 from the M5 model tree.
    The model performance is validated using the new data set from the sensors. Similarly,
    we have evaluated the model performance for pH prediction using a training sample
    containing DO, pH, and temperature water parameters. Table VI shows the comparative
    performance of the model tree for pH prediction with other nonlinear decision
    tree-based predictors. TABLE VI Result of PH Predicted From Nonlinear Forecasting
    Models Figs. 17 and 18 display the correlation outcomes of the M5 model tree for
    pH and DO, comparing actual and predicted values. The correlation between predicted
    and actual DO values stands at 0.8775, accompanied by a satisfactory MAE of 0.963.
    Similarly, the pH prediction yields a high correlation of 0.974, alongside a minimal
    MAE of 0.01239. The experimental evaluation shows that the M5 model tree algorithm
    can predict the changing water parameters better than other RF, ANN, and GBM nonlinear
    predictors. In the comparative study, we found M5 model tree is slightly better
    than other nonlinear RF, GBM, and ANN models. Despite less training data, we obtain
    a better result with the M5 model tree due to its inherent features of grouping
    the high correlations data for constructing the M5-model tree. Fig. 17. Correlation
    between actual versus predicted DO values. Show All Fig. 18. Correlation between
    actual versus predicted pH values. Show All The employed M5 model tree performs
    the group analyses of relative water parameters. We adopt the pruning methods
    for the model to generalize well to unseen data. The pruning method optimizes
    the tree structure without affecting the classification accuracy. The REP algorithm
    pruned the growing tree and used the information gained as the branching criteria.
    Redundant subtrees were pruned to solve the overfitting problem and maximize the
    forecasting accuracy. SECTION VI. Conclusion This article introduces a holistic
    Internet of Things (IoT) system designed to oversee and uphold aquaculture operations.
    The proposed system design has a physical, network, and logical design. The physical
    design provided the hardware configuration details. In contrast, the network design
    shows the communication network between the physical devices. In this design,
    we have addressed the requirement of a fog node for intelligent data analytics
    and control. In the logical design, we have discussed the front-end and back-end
    implementation details. It also highlighted the importance of container-based
    virtualization and the various design features. This article also discusses the
    importance of the core intelligent analytics algorithm for monitoring and managing
    aquaculture. The closed-loop control system ran through intelligent nonlinear
    decision tree-based models. This article shows the comparative performance of
    the M5 model tree, RF, ANN, and GBM. The experimental evaluation found that the
    M5 model tree has the highest prediction accuracy for DO prediction with a correlation
    of 0.877 with an MAE of 0.963. Similarly, the M5 model tree outperforms PH prediction
    with a correlation of 0.975 and an MAE of 0.0123. Future research in this direction
    includes more robust relative water sensors to make the system more affordable
    and accurate. In future research, we also include analyzing and developing a more
    accurate forecasting model. Authors Figures References Keywords Metrics More Like
    This Water quality classification and monitoring using e-nose and e-tongue in
    aquaculture farming 2014 2nd International Conference on Electronic Design (ICED)
    Published: 2014 Internet of Farming Things and RTOS based Robotic System for Water
    Quality Monitoring and Fish Feeding in Freshwater Aquaculture 2023 14th International
    Conference on Computing Communication and Networking Technologies (ICCCNT) Published:
    2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Intelligent-IoT-Based Data Analytics for Freshwater Recirculating Aquaculture
    System
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kumar E.K.
  - Kumar D.A.
  - Manwitha T.
  - Sai G.Y.
  citation_count: '0'
  description: Water is the most important role in day-to-day life. Water shortage
    is becoming a reality as water use and pollution continue to grow concern round
    the universe while s o m e reckless individuals waste water on a regular basis
    by overusing it, a large population remains without access to clean drinking water.
    This problem is caused by the irregular distribution of water. To deal with this,
    we need a solution that gives data about water flow rate as well as water use
    of an industrial area or home to the government to enable proper water distribution.
    This paper aims to build a Smart Water Metering System (SWMS) for real-time water
    monitoring. The relatively recent Smart Water Metering (SWM) Technology offers
    high resolution and frequent watering consumption data which may be wont to improve
    water protection and management by providing suggestions to customers. Water is
    one among the vital resources for the existence of human life then the Smart water
    management system features a key role in smart city. Through using moderate Internet
    of thing equipment including mobile applications, a smart metering solution suggested
    varies with standard production techniques. This device requires all Meter Readers
    to use standard devices as single local suppliers to do smart meter and upgrade
    the database of the network. An online tracking system is to provide these data
    on web dB in real-time. The routing protocol increases the reliability of water
    supply and lowers the use of electricity, potential failures and, as a result,
    loss of water supplies, and the alternative methods needed for smart water metering
    have been reviewed. And a design for a Smart water meter is proposed and an implementation
    detail of Smart water metering system is discussed.
  doi: 10.1063/5.0111828
  full_citation: '>'
  full_text: '>

    "All Content AIP Publishing Portfolio AIP Conference Proceedings                              Advanced
    Search | Citation Search Univ Nebraska Lincoln Lib Sign In HOME BROWSE FOR AUTHORS
    FOR ORGANIZERS ABOUT Volume 2512, Issue 1 22 January 2024 INTERNATIONAL CONFERENCE
    ON SIGNAL PROCESSING & COMMUNICATION ENGINEERING SYSTEMS: SPACES-2021 11–12 June
    2021 Andhra Pradesh, India REFERENCES RESEARCH ARTICLE| JANUARY 22 2024 Smart
    water metering system E. Kiran Kumar; D. Anil Kumar; T. Manwitha; G. Yaswanth
    Sai Author & Article Information AIP Conf. Proc. 2512, 020073 (2024) https://doi.org/10.1063/5.0111828
    Split-Screen PDF Share Tools Water is the most important role in day-to-day life.
    Water shortage is becoming a reality as water use and pollution continue to grow
    concern round the universe while s o m e reckless individuals waste water on a
    regular basis by overusing it, a large population remains without access to clean
    drinking water. This problem is caused by the irregular distribution of water.
    To deal with this, we need a solution that gives data about water flow rate as
    well as water use of an industrial area or home to the government to enable proper
    water distribution. This paper aims to build a Smart Water Metering System (SWMS)
    for real-time water monitoring. The relatively recent Smart Water Metering (SWM)
    Technology offers high resolution and frequent watering consumption data which
    may be wont to improve water protection and management by providing suggestions
    to customers. Water is one among the vital resources for the existence of human
    life then the Smart water management system features a key role in smart city.
    Through using moderate Internet of thing equipment including mobile applications,
    a smart metering solution suggested varies with standard production techniques.
    This device requires all Meter Readers to use standard devices as single local
    suppliers to do smart meter and upgrade the database of the network. An online
    tracking system is to provide these data on web dB in real-time. The routing protocol
    increases the reliability of water supply and lowers the use of electricity, potential
    failures and, as a result, loss of water supplies, and the alternative methods
    needed for smart water metering have been reviewed. And a design for a Smart water
    meter is proposed and an implementation detail of Smart water metering system
    is discussed. Topics Mass measurement, Hydrology, Internet of things, Tracking
    devices, Review REFERENCES 1.M. Suresh, U. Muthukumar, and J. Chandapillai, “A
    novel smart water-meter based on iot and smartphone app for city distribution
    manage-ment,” in 2017 IEEE region 10 symposium (TENSYMP) (IEEE, 2017) pp. 1–5.
    2.P. Avinash, B. Krishna, T. Srilakshmi, and P. V, “Smart control system for smart
    city using IoT,” International Journal of Advanced Computer Science and Applications
    12 (2021), https://doi.org/10.14569/IJACSA.2021.0120251. Google Scholar  3.S.
    Dharmadhikari, V. Gampala, C. M. Rao, S. Khasim, S. Jain, and R. Bhaskaran, “A
    smart grid incorporated with ml and iot for a secure management system,” Microprocessors
    and Microsystems 83, 103954 (2021). https://doi.org/10.1016/j.micpro.2021.103954
    Google ScholarCrossref   4.E. Farah and I. Shahrour, “Smart water for leakage
    detection: Feedback about the use of automated meter reading technology,” in 2017
    Sensors Networks Smart and Emerging Technologies (SENSET) (IEEE, 2017) pp. 1–4.
    5.N. Komalapati, V. C. Yarra, L. A. V. Kancharla, and T. Shankar, “Smart fire
    detection and surveillance system using iot,” in 2021 International Conference
    on Artificial Intelligence and Smart Systems (ICAIS) (IEEE, 2021) pp. 1386–1390.
    6.T. P. Naidu, T. V. M. Bhargav, M. S. Vishnu, U. Keerthi, D. TADEPALLI Varshitha,
    S. Preetham, S. H. Ahammad, and K. Saikumar, “The connected car: Iot-based smart
    systems for cars,” Turkish Journal of Physiotherapy and Rehabilitation 32, 2.
    7.R. Rediana and B. Pharmasetiawan, “Designing a business model for smart water
    management system with the smart metering system as a core technology: Case study:
    Indonesian drinking water utilities,” in 2017 International Conference on ICT
    For Smart Society (ICISS) (IEEE, 2017) pp. 1–6. 8.N. S. Živic, O. Ur-Rehman, and
    C. Ruland, “Evolution of smart metering systems,” in 2015 23rd Telecommunications
    Forum Telfor (TELFOR) (IEEE, 2015) pp. 635–638. 9.N. Cherukutota and S. Jadhav,
    “Architectural framework of smart water meter reading system in iot environment,”
    in 2016 International Conference on Communication and Signal Processing (ICCSP)
    (IEEE, 2016) pp. 0791–0794. 10.P. Kanakaraja, S. Upadhyay, S. K. Kotamraju, G.
    V. S. Suneela, and R. Neelesh, “Design and implementation of smart energy meter
    using lora-wan and iot applications,” in Journal of Physics: Conference Series,
    Vol. 1804 (IOP Publishing, 2021) p. 012207. Google Scholar  11.M. K. Jha, R. K.
    Sah, M. Rashmitha, R. Sinha, B. Sujatha, and K. Suma, “Smart water monitoring
    system for real-time water quality and usage monitoring,” in 2018 International
    Conference on Inventive Research in Computing Applications (ICIRCA) (IEEE, 2018)
    pp. 617–621. 12.H. Umbaugh, “Billing frequency and customer relations,” Journal-American
    Water Works Association 59, 669–674 (1967). https://doi.org/10.1002/j.1551-8833.1967.tb03395.x
    Google ScholarCrossref   13.T. C. Britton, R. A. Stewart, and K. R. O’Halloran,
    “Smart metering: enabler for rapid and effective post meter leakage identification
    and water loss management,” Journal of Cleaner Production 54, 166–176 (2013).
    https://doi.org/10.1016/j.jclepro.2013.05.018 Google ScholarCrossref   14.T. M.
    Thekkil and N. Prabakaran, “Optimization based multi-objective weighted clustering
    for remote monitoring system in wsn,” Wireless Personal Communications 117, 387–404
    (2021). https://doi.org/10.1007/s11277-020-07874-2 Google ScholarCrossref   15.A.
    L. Madana, V. K. Shukla, R. Sharma, and I. Nanda, “Iot enabled smart boarding
    pass for passenger tracking through bluetooth low energy,” in 2021 International
    Conference on Advance Computing and Innovative Technologies in Engineering (ICACITE)
    (IEEE, 2021) pp. 101–106. 16.I. Nanda, S. Chadalavada, M. Swathi, and L. Khatua,
    “Implementation of iiot based smart crop protection and irrigation system,” in
    Journal of Physics: Conference Series, Vol. 1804 (IOP Publishing, 2021) p. 012206.
    17.C. R. Prasad, P. Bojja, P. R. Kumari, and B. Girirajan, “Temperature aware
    variable time-slot assignment priority-based routing algorithm for wbans in iot
    based ehealthcare systems,” in Journal of Physics: Conference Series, Vol. 1804
    (IOP Publishing, 2021) p. 012165. 18.H. K. Pendurthi, S. S. Kanneganti, J. Godavarthi,
    S. Kavitha, and H. S. Gokarakonda, “Heart pulse monitoring and notification system
    using arduino,” in 2021 International Conference on Artificial Intelligence and
    Smart Systems (ICAIS) (IEEE, 2021) pp. 1271–1278. This content is only available
    via PDF. PDF ©2024 Authors. Published by AIP Publishing. View Metrics Citing Articles
    Via Google Scholar Publish with us - Request a Quote! Sign up for alerts Most
    Read Most Cited Phytochemical analysis of bioactive compounds in ethanolic extract
    of Sterculia quadrifida R.Br. Siswadi Siswadi, Grace Serepina Saragih Impact of
    blockchain technology development on industries in the context of entrepreneurial,
    marketing and management perspectives worldwide Ivelina Kulova Design of a 100
    MW solar power plant on wetland in Bangladesh Apu Kowsar, Sumon Chandra Debnath,
    et al. Online ISSN 1551-7616 Print ISSN 0094-243X Resources For Researchers For
    Librarians For Advertisers Our Publishing Partners  Explore Journals Physics Today
    Conference Proceedings Books Special Topics Publishers pubs.aip.org About User
    Guide Contact Us Register Help Privacy Policy Terms of Use Connect with AIP Publishing
    Facebook LinkedIn Twitter YouTube © Copyright 2024 AIP Publishing LLC"'
  inline_citation: '>'
  journal: AIP Conference Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Smart water metering system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dash S.S.
  - Kumar P.
  citation_count: '0'
  description: 'Agriculture is widely recognized as a significant and indispensable
    occupation on a global scale. The current imperative is to optimize agricultural
    practices and progressively transition towards smart agriculture. The Internet
    of Things (IoT) technology has dramatically enhanced people''s daily lives via
    diverse applications across several domains. Previous studies have yet to effectively
    incorporate Artificial Intelligence (AI) with sensor technology to provide comprehensive
    guidance to agricultural practitioners, hindering their ability to achieve good
    outcomes. This research offers Farmers'' Toolkit with four layers: sensor, network,
    service, and application. This toolkit aims to facilitate the implementation of
    a smart farming system while effectively managing energy resources. With a specific
    emphasis on the application layer, the toolkit uses a deep learning methodology
    to construct a fertilizer recommendation system that aligns with the expert''s
    perspective. This study utilizes IoT devices and Wireless Sensor Network (WSN)
    methods to enhance the efficiency and speed of recommending appropriate crops
    to farmers. The recommendation process considers several criteria: temperature,
    yearly precipitation, land area, prior crop history, and available resources.
    The identification of undesirable vegetation on agricultural fields, namely the
    detection of weeds, is carried out using drone technology equipped with frame-capturing
    capabilities and advanced deep-learning algorithms. The findings demonstrate an
    accuracy rate of 94%, precision rate of 92%, recall rate of 96%, and F1 score
    of 94%. The toolkit for farmers alleviates physical labor and time expended on
    various agricultural tasks while enhancing overall land productivity, mitigating
    potential crop failures in specific soil conditions, and minimizing crop damage
    inflicted by weeds.'
  doi: 10.1051/bioconf/20248205012
  full_citation: '>'
  full_text: '>

    "By using this website, you agree that EDP Sciences may store web audience measurement
    cookies and, on some pages, cookies from social networks. More information and
    setup OK Journals Books Conferences EDPS Account All issuesSeriesForthcomingAbout
    Search Menu All issues Volume 82 (2024) BIO Web Conf., 82 (2024) 05012 Abstract
    Open Access Issue BIO Web Conf. Volume 82, 2024 International Scientific and Practical
    Conference “Methods for Synthesis of New Biologically Active Substances and Their
    Application in Various Industries of the World Economy – 2023” (MSNBAS2023) Article
    Number 05012 Number of page(s) 13 Section Economic Aspects of the Production and
    Use of Biologically Active Substances DOI https://doi.org/10.1051/bioconf/20248205012
    Published online 03 January 2024 BIO Web of Conferences 82, 05012 (2024) Farmers’
    Toolkit: Deep Learning in Weed Detection and Precision Crop & Fertilizer Recommendations
    Sushree Sasmita Dash* and Pawan Kumar Faculty of CS & IT, Kalinga University,
    Naya Raipur, Chhattisgarh, India * Corresponding author: ku.sushreesasmitadash@kalingauniversity.ac.in
    Abstract Agriculture is widely recognized as a significant and indispensable occupation
    on a global scale. The current imperative is to optimize agricultural practices
    and progressively transition towards smart agriculture. The Internet of Things
    (IoT) technology has dramatically enhanced people’s daily lives via diverse applications
    across several domains. Previous studies have yet to effectively incorporate Artificial
    Intelligence (AI) with sensor technology to provide comprehensive guidance to
    agricultural practitioners, hindering their ability to achieve good outcomes.
    This research offers Farmers’ Toolkit with four layers: sensor, network, service,
    and application. This toolkit aims to facilitate the implementation of a smart
    farming system while effectively managing energy resources. With a specific emphasis
    on the application layer, the toolkit uses a deep learning methodology to construct
    a fertilizer recommendation system that aligns with the expert’s perspective.
    This study utilizes IoT devices and Wireless Sensor Network (WSN) methods to enhance
    the efficiency and speed of recommending appropriate crops to farmers. The recommendation
    process considers several criteria: temperature, yearly precipitation, land area,
    prior crop history, and available resources. The identification of undesirable
    vegetation on agricultural fields, namely the detection of weeds, is carried out
    using drone technology equipped with frame-capturing capabilities and advanced
    deep-learning algorithms. The findings demonstrate an accuracy rate of 94%, precision
    rate of 92%, recall rate of 96%, and F1 score of 94%. The toolkit for farmers
    alleviates physical labor and time expended on various agricultural tasks while
    enhancing overall land productivity, mitigating potential crop failures in specific
    soil conditions, and minimizing crop damage inflicted by weeds. © The Authors,
    published by EDP Sciences, 2024 This is an Open Access article distributed under
    the terms of the Creative Commons Attribution License 4.0, which permits unrestricted
    use, distribution, and reproduction in any medium, provided the original work
    is properly cited. Table of Contents Article contents AbstractPDF (2.009 MB)References
    Metrics Show article metrics Services Same authors - Google Scholar - EDP Sciences
    database - PubMed Recommend this article Download citation Alert me if this article
    is cited Alert me if this article is corrected Related Articles Multi-Layer Architecture
    for Enhancing Crop Quality with AI and IoT: A Structural Modelling Approach BIO
    Web of Conferences 82, 05013 (2024) Distributed and Analogous simulation framework
    for the control of pests and diseases in plants using IoT Technology BIO Web of
    Conferences 82, 05017 (2024) Smart Agriculture Land Crop Protection Intrusion
    Detection Using Artificial Intelligence E3S Web of Conferences 399, 04006 (2023)     More
    Bookmarking Mendeley Reader''s services Email-alert BIO Web of Conferences eISSN:
    2117-4458 Mentions légales Contacts Privacy policy A Vision4Press website"'
  inline_citation: '>'
  journal: BIO Web of Conferences
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Farmers'' Toolkit: Deep Learning in Weed Detection and Precision Crop &amp;
    Fertilizer Recommendations'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Hashmi A.U.H.
  - Mir G.U.
  - Sattar K.
  - Ullah S.S.
  - Alroobaea R.
  - Iqbal J.
  - Hussain S.
  citation_count: '0'
  description: The integration of Internet of Things (IoT) technology in precision
    agriculture offers substantial potential for improving productivity and crop yield.
    However, challenges persist in optimizing wireless solutions for outdoor smart
    farms, where diverse data types and environmental obstacles can impede efficiency,
    causing issues such as data loss and connectivity disruptions. The present study
    undertakes an investigation into the comparative efficacy of three primary IoT
    communication protocols, namely Wi-Fi (Wireless Fidelity), Zigbee, and Long-Range
    Wide Area Network (LoRaWAN), within the context of agricultural monitoring scenarios.
    This inquiry is substantiated by a series of comprehensive experiments conducted
    across diverse environmental conditions. Our findings underscore Wi-Fi as the
    optimal candidate for integration into agricultural monitoring systems, with a
    focus on paramount factors such as connectivity, data transmission precision,
    and wireless coverage. This study reveals how data recovery is implemented in
    communication systems used in agriculture in various scenarios. The methods are
    deliberate to recover lost data caused by failures in both node networks, thereby
    notably improving the accuracy of communication solutions for farmers. Additionally,
    this study provides reference for farmers and stakeholders on leveraging technology
    in smart agriculture to inflate efficiency and productivity.
  doi: 10.1109/ACCESS.2024.3381522
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 12
    Effects of IoT Communication Protocols for Precision Agriculture in Outdoor Environments
    Publisher: IEEE Cite This PDF Asad Ul Haq Hashmi; Ghias Uddin Mir; Kashif Sattar;
    Syed Sajid Ullah; Roobaea Alroobaea; Jawaid Iqbal; Saddam Hussain All Authors
    23 Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Preliminaries Concept III. Proposed Methodology
    IV. Experimental Setup V. Conclusion Authors Figures References Keywords Metrics
    Abstract: The integration of Internet of Things (IoT) technology in precision
    agriculture offers substantial potential for improving productivity and crop yield.
    However, challenges persist in optimizing wireless solutions for outdoor smart
    farms, where diverse data types and environmental obstacles can impede efficiency,
    causing issues such as data loss and connectivity disruptions. The present study
    undertakes an investigation into the comparative efficacy of three primary IoT
    communication protocols, namely Wi-Fi (Wireless Fidelity), Zigbee, and Long-Range
    Wide Area Network (LoRaWAN), within the context of agricultural monitoring scenarios.
    This inquiry is substantiated by a series of comprehensive experiments conducted
    across diverse environmental conditions. Our findings underscore Wi-Fi as the
    optimal candidate for integration into agricultural monitoring systems, with a
    focus on paramount factors such as connectivity, data transmission precision,
    and wireless coverage. This study reveals how data recovery is implemented in
    communication systems used in agriculture in various scenarios. The methods are
    deliberate to recover lost data caused by failures in both node networks, thereby
    notably improving the accuracy of communication solutions for farmers. Additionally,
    this study provides reference for farmers and stakeholders on leveraging technology
    in smart agriculture to inflate efficiency and productivity. Internet of Things
    boosts farming productivity. However, challenges like data loss persist. In this
    study, we compare Wi-Fi, Zigbee, and LoRaWAN for agricultural monitori...View
    more Published in: IEEE Access ( Volume: 12) Page(s): 46410 - 46421 Date of Publication:
    27 March 2024 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2024.3381522 Publisher:
    IEEE Funding Agency: SECTION I. Introduction Smart agriculture aims to increase
    food production by 2050 [1] through the adoption of precision techniques like
    optimized irrigation [2]. This strategy also embraces practices such as irrigation
    to support sustainable farming methods [3]. With the advent of the IoT this approach
    gains traction by facilitating connectivity between machines and individuals.
    This connectivity fosters interactions that boost productivity and enable environmental
    management creating a global network of interconnected devices utilizing Internet
    and Information and Communication Technologies (ICT) to bridge virtual and physical
    entities [4], [5]. Data gathered from sensors, relays, and gateways on farms is
    pivotal for making informed decisions in agriculture [6]. This data can be automatically
    processed analyzed and shared allowing for more cost-effective and timely farming
    practices [7]. Communication in farming fields can be accomplished using wireless
    technology with the range of communication depending on the specific circumstances.
    However, IoT constrained devices have limited power, and a significant concern
    arises with regards to the deployment of IoT based network in outdoor agriculture
    smart farms where inefficiency is due to varying demand of bandwidth for transmission
    of different data types and obstacles, which causes data loss and lack of connectivity
    to the sensors and mobile users [8]. Recently, significant research attention
    has been drawn to IoT-enabled smart farming. Addressing the challenges of implementing
    IoT-based agriculture, main usage and explores the technologies and sensors used
    in IoT-based systems [9], [10]. This study [11] explores into three layers of
    IoT-based smart agriculture applications: the physical layer, edge layer, and
    cloud layer. The authors in [12], advocate for harnessing technological innovations
    to enhance resource efficiency and environmental sustainability in agriculture.
    Additionally, policy recommendations to explore opportunities and mitigate risks,
    shaping the implications for future research in agricultural economics are presented
    [13]. Regarding impacts, the authors in [14] sheds light on the ambiguous role
    of digitization in on-farm diversification showcasing both positive and negative
    experiences of farmers. In [15], aerial networking and communication capabilities
    are discussed along with the limitations of major candidate wireless technologies
    such as Wi-Fi, 4G/5G, and Long-Range Wide Area Network (LoRaWAN). Moreover, a
    prototype system described in [16] utilizes a LoRa modem and a Raspberry Pi camera
    to transmit images. The paper evaluates the coverage and reliability of LoRa connectivity
    function [17] and proposes optimization techniques [18] to improve wireless transmission
    in the agricultural environment, utilizing the most appropriate wireless impairment
    mitigation methods. However, these solutions may not consider the bandwidth requirements
    for transmitting IoT data flow, which can lead to data loss, particularly in scenarios
    where real-time high bandwidth and coverage are required. This research makes
    a significant contribution by conducting a comprehensive comparative analysis
    of three primary IoT communication protocols: Wi-Fi, Zigbee, and LoRa, within
    the realm of agricultural monitoring. Through a series of extensive experiments
    carried out across various outdoor environments, we have determined Wi-Fi to be
    the optimal choice for integration into agricultural monitoring systems. This
    determination is based on its superior performance across key factors such as
    connectivity, data transmission accuracy, and wireless coverage. Moreover, our
    study introduces effective data recovery methods aimed at addressing errors occurring
    in both single and multiple nodes, thereby bolstering the reliability of wireless
    communication solutions in agricultural settings. By presenting these insights,
    this research aim to provide practical guidance to farmers and stakeholders looking
    to harness IoT technology to enhance productivity and crop yield within real-world
    farming environments. The rest of the paper is organized as follows: In Section
    II, we present preliminary concepts including IoT-based smart farming, IoT communication,
    and precision agriculture. In Section III, we present the outdoor field area and
    proposed methodology for IoT-enabled smart farming. Then, in Section IV, we present
    our experimental results and discussions. Finally, Section V concludes the paper.
    SECTION II. Preliminaries Concept To understand outdoor farming and the use of
    IoT in agriculture during the 21st century, some fundamental concepts need to
    be explained in more detail. This section provides an overview of these concepts.
    A. Smart Farming Smart Farming represents a groundbreaking concept in agriculture
    with the potential to revolutionize food production and management [19]. It can
    be seen as an evolution of precision agriculture and is often synonymous with
    smart agriculture in the literature. In this paper, we will use the term smart
    farming. In this context, smart farms harness a variety of technological tools
    to enhance different facets of the production process. These tools encompass activities
    such as crop monitoring, soil management, irrigation, pest control, and delivery
    tracking, among others. These resources include sensors for temperature, light,
    humidity, pressure, as well as data from soil chemical composition analysis, unmanned
    aerial vehicles, video cameras, agricultural information management systems, and
    communication networks [14], [20]. The integration of these technological resources
    into agricultural production is a matter of great significance. From an economic
    standpoint, it is estimated that the precision agriculture market will generate
    approximately USD 34.1 billion in revenue by the year 2026 [21]. This offers opportunities
    for technology providers and stakeholders. Smart farms enhance food production
    through optimized soil nutrients and reduced pesticide and water usage [22]. B.
    IOT in Smart Farming Modern agriculture is an up-to-date method of managing agriculture
    that uses technology to enhance farming efficiency. By utilizing agriculture farmers
    can improve crop quality and quantity by optimizing resource usage, including
    fertilizers. The integration of IoT allows for automated systems that provide
    alerts and information for decision-making, when farmers are not present [12].
    This leads to the management of agricultural areas and ultimately improves production
    outcomes. Additionally, IoT enables monitoring of factors like temperature and
    humidity with smart agricultural systems using data analysis to offer insights
    into crop health and productivity trends [25]. This empowers farmers to make adjustments
    for sustainable and efficient farming practices. Smart agriculture incorporates
    precision farming technologies that enable the monitoring of crops as well as
    enhancements in processes such as harvesting and crop yield through the use of
    sensors and automated machinery [17]. This technological shift, fueled by IoT
    transforms methods by optimizing labour and boosting agricultural production via
    ICT tools like sensors, robotics and data analysis [2]. C. Communication Protocols
    in IOT When choosing communication protocols for agricultural systems it is crucial
    to prioritize uninterrupted data transmission, between components. This feature
    helps gather sensor data enhancing effectiveness, in tasks like irrigation and
    applying fertilizers [23]. Assessing the appropriateness of a protocol entails
    taking into account aspects like coverage, energy usage, data transfer speed and
    expenses all vital, in communication [6], [24]. Choosing the right smart farming
    system can be tricky because each protocol comes with its own set of pros and
    cons [25]. Recently, there’s been a growing interest in Low Power Wide Area Network
    (LPWAN) protocols for smart agriculture [7]. They’re great for supporting energy-efficient
    devices spread out over large areas, making sure they stay reliably connected.
    Two big players in this field are LoRaWAN and Sigfox [16]. But LPWAN isn’t the
    only game in town. You’ve also got your more traditional non-LPWAN protocols like
    Wi-Fi and ZigBee [6] that are widely used in smart farming setups. Evidently,
    the wireless connectivity between components represents a fundamental and vital
    aspect of smart farming systems. Consequently, it becomes imperative to assess
    the capabilities and characteristics of the wireless communication protocols that
    are accessible during the smart farming system design phase to meet the specific
    demands of its intended applications. For instance, the scenario of uniformly
    distributed sensors across a vast agricultural expanse [9]. Ensuring power supply
    to these sensors and efficiently gathering data from them can pose challenges
    especially when dealing with expansive farms. In such cases, the communication
    protocol employed by these sensors should ideally exhibit low power consumption
    while enabling seamless wireless data transmission to distant locations. This
    example underscores the potential variety of issues associated with smart farming
    applications and the available protocols. Hence, it remains essential to comprehensively
    evaluate the protocol features in conjunction with the requirements of the smart
    farming system [4], [26]. LoRaWAN, Wi-Fi, and ZigBee can be regarded as pivotal
    protocols for smart farming systems due to their recent development or widespread
    utilization in smart farming applications [27]. Additionally, they necessitate
    varying infrastructure and hardware, accommodating different budget levels. Consequently,
    these protocols can cater to the diverse requirements of smart farming systems
    across various applications. While there are other LPWAN protocols mentioned in
    IoT literature such as MIoTy and Weightless there are no documented examples of
    their application within the smart farming domain [6], [28]. ZigBee, known for
    its low-power and short-range capabilities, is suited for localized data exchange.
    Wi-Fi, on the other hand, offers high-speed connectivity suitable for scenarios
    where data needs to be transmitted rapidly. LoRa, with its long-range coverage
    and energy efficiency, is ideal for remote and expansive agricultural landscapes.
    These devices, their ranges and bit rates are tabulated in Table 1. TABLE 1 IoT
    Wireless Communication Devices Range and Bandwidth The choice of communication
    technology is dictated by the specific needs of the smart farm thereby ensuring
    optimal data transfer. Hence, this study exclusively focuses on these three protocols.
    Concerning smart farming applications, the relevant literature commonly mentions
    six major application types: water conservation, weather forecasting, soil condition
    monitoring, fertilizer optimization, crop disease and pest management, and energy
    harvesting. Consequently, we explore the suitability of these protocols for these
    application domains. SECTION III. Proposed Methodology The objective of this section
    is to provide essential background information pertaining to outdoor field areas,
    which can be categorized into three aspects. Firstly, a brief description is given
    of the outdoor field area that forms the basis for the proposed solution. Secondly,
    the paper describes the proposed data collection and sensor integration model.
    Thirdly, the data recovery mechanisms for single and multiple data losses are
    discussed. A. Outdoor Field Area An agricultural field of one acre, equivalent
    to 43,560 square feet, is selected for this study. The dimensions of these square
    feet are 242 feet in length and 180 feet in width, as illustrated in Figure 1.
    The field is divided into 8 parts, with each part corresponding to 5445 Square
    feet. This division enables precise data collection for each section of the field.
    Each square foot measures 90 feet in length and 60.5 feet in width. Within each
    square foot, a separate sensor unit is deployed, capable of capturing data related
    to temperature, humidity, battery percentage, images, and videos. These sensor
    units are equipped with Node MCU ESP8266, responsible for collecting and transmitting
    sensor data. The sensor unit operates wirelessly and, in various scenarios, connects
    to wireless communication devices, namely: a) Wi-Fi router, b) ZigBee, and c)
    LoRa. Following data collection, these communication devices transmit the data
    to a monitoring station located 500 meters away from the designated 43560 square
    feet field. In the monitoring room, data monitoring and the generation of necessary
    reports are facilitated. FIGURE 1. Outdoor field area. Show All B. Data Collection
    and Sensor Integration In Figure 2, the data collection process is a pivotal component
    of the agricultural monitoring system. Temperature and humidity sensor data, provided
    in text format, are instrumental in gauging the environmental conditions crucial
    for crop growth. Simultaneously, the camera data, comprising images and videos,
    offers a visual dimension to the monitoring system. These sensors are seamlessly
    integrated into a centralized controller, which acts as the nerve center of the
    operation. The integration process ensures synchronized data collection and transmission
    to the communication devices, optimizing the efficiency of the monitoring setup.
    In this system setup, temperature and humidity sensors (DHT 21) along with a camera
    are linked to controllers for data transmission. A NodeMCU ESP 8266 wireless microcontroller
    serves as an intermediary between sensing devices and communication equipment.
    Upon delivery, to the intended recipient a comprehensive analysis is conducted.
    Images and videos are stored on the ESP-32 CAM micro-SD card and then converted
    to base 64 format (character data type) before being transmitted via the controller.
    FIGURE 2. Proposed methodology for the data collection process. Show All This
    examination discusses aspects, like service quality (QoS) data retention and network
    coverage. QoS guarantees that data transfer meets set standards ensuring communication.
    QoS ensures that data transmission meets predefined standards, ensuring reliable
    communication. Data loss assessment helps determine how well each communication
    device maintains data integrity. Furthermore, the extent of area coverage is examined
    to determine which technology excels in providing seamless connectivity across
    the smart farm. These analytical insights empower farmers to make informed decisions
    regarding the adoption of IoT communication technologies, considering cost and
    performance metrics [7]. C. Data Recovery Mechanism In precision agriculture,
    IoT data is critically important at specific dates and times because decisions
    and actions rely on the accuracy of this data. Erroneous data can result in incorrect
    decisions, with potentially significant consequences. Data can be lost for various
    reasons, such as battery issues, device errors, obstacles, sensor malfunctions,
    communication or transmission errors, among others. Therefore, a method for recovering
    lost data is essential, and there are two primary scenarios to consider: 1) One
    Sensor Data Loss As we mentioned in Figure 1, there are a total 8 sensor units
    (SU) for our experiment. Assuming there is data available in the local memory
    of all the sensor units but the data of one sensor unit SU8 was lost at time T
    i . We proposed a recovery method using three factors, one factor is based on
    the average of next and previous readings, the second is based on the data available
    at the weather site at the time of data loss and third is based on the neighbor’s
    data at the time of data loss. The following symbols have been used in the calculating
    the missing data: m= Total number of Sensor Units (SU) T i = Current time when
    data was lost T i−30 = Time 30 min before current time T i V n T i−30 = Temperature
    value for SUn at time T i−30 T i+30 = Time 30 min after current time T i V n T
    i+30 = Temperature value for SUn at time T i+30 Δt= Difference in temperature
    at weather site at T i−30 and T i  V n T Avg = Average of temperature V n T i−30
    and V n T i+30 F 1 T i = Lost data value at time T i after applying first and
    second factor F 2  T i = Lost data value at time T i after applying third factor
    V n T i = Temperature value for SUn at time T i Also, we need to have the data
    of SU8 at time T i+30 . As we want to know after recovery that how close we are
    with the actual data. Now we get the reading from the weather site for time T
    i−30 and time T i to calculate the increase/decrease in temperature Δt at the
    experimental site. The readings might be different as obtained by sensors due
    to local factors but we can find the change of temperature in 30 min. Now we calculate
    the missing data using our proposed equations 1, 2 and 3 respectively: F 1 T i
    =(( V n T i−30 +Δt)+ V n T Avg )/2 F 2 T i =( ∑ j=SU1 j=SU(m−1) Vj T i −Vj T i−30
    ))/(m−1)+ V n T i−30 V n T i =( F 1 T i + F 2 T i )/2 (1) (2) (3) View Source
    The answer to equation 1 for SU8 and the answer of equation 2 for SU8 helps us
    to come closer to the lost data. In equation 2, j means all nodes except the one
    with missing data. Finally, with the help of equation 3, we can find the lost
    data. 2) Multiple Sensor Data Loss Assume there is data at the local memory of
    a sensor unit but lost data of all or multiple sensor units at time T i during
    transmission to the monitoring station, so there is no option of recovering data
    from the neighboring sensor units. As there are 8 sensor units in our experiment,
    we use a two-factor recovery method. The reading from the weather site for time
    T i−30 and time T i is obtained to calculate the increase/decrease in temperature
    at the experimental site. The readings might be different as obtained by sensors
    due to local factors, but the change in temperature in 30 minutes can still be
    determined. Now, the missing data is calculated using the proposed equation 4
    based on the first two factors: V n T i =(( V n T i−30 +Δt )+V n T Avg )/2 (4)
    View Source SECTION IV. Experimental Setup In this section, this study discusses
    all scenarios and results. This research assures experiments on different types
    of IoT communication devices. The experiments were conducted in the research farm
    of PMAS-Arid Agriculture University Rawalpindi, Pakistan. The experiments are
    classified into two major parts. At first, an experimental setup of 43560 square
    feet of agricultural land was prepared along with a monitoring station and by
    placing multiple sensor units in the agriculture field as discussed in the previous
    section. In the process of image capturing and transfer, image compression and
    decompression techniques were used for LoRa and ZigBee because these are low data
    rate protocols. Then experiments of three IoT communication devices were conducted
    without obstacles of trees and crops. Finally, the same experiments were conducted
    with obstacles in the field, and the results were compared to find the best one
    in each scenario. A. Zigbee Setup For seamless wireless communication and data
    sharing, the ZigBee S2C RF module is the ideal choice, designed to adhere rigorously
    to the IEEE 802.15.4 PHY standard. This module provides wireless accessibility
    to all ZigBee endpoints, regardless of their origin, even encompassing those from
    various vendors within ZigBee mesh networks. It has a range or area coverage up
    to 1.2 KM and having bandwidth of 250kbps. ZigBee is recommended for local area
    wireless coverage for monitoring and data collection purposes from the field to
    the monitoring station. 1) Data Collection from Sensor The ZigBee transmission
    operates within the frequency range of 2.4GHz to 2.5GHz and offers support for
    16 direct sequence channels. Notably, ZigBee boasts an impressive outdoor RF line-of-sight
    range of up to 1.2 kilometres, coupled with a data rate of 250 Kbps. Operating
    effectively in temperatures ranging from 40°C to 85°C, ZigBee demonstrates its
    robust versatility. In this context, the distance separating the two ZigBee devices
    measures approximately 543 meters, extending from the monitoring station to the
    central point of the selected 43560 square feet field. One ZigBee device is strategically
    positioned at the monitoring station, while the other is strategically located
    at the heart of the one-acre field. A series of tests are conducted to evaluate
    the performance of ZigBee devices, particularly focusing on the distance between
    them. During these tests noteworthy observations regarding packet drops and retransmission
    attempts particularly when the distance between devices increased or when obstacles
    like trees were introduced. It became evident that as the distance extended beyond
    a certain threshold, the transmission time also saw an increase. Initially, experimental
    tests were carried out in ideal conditions with a clear line of sight and noted
    that there were no packet drops observed up to a distance of 0.8 kilometres. However,
    as introduced experiments involving tree obstacles, encountered an increase in
    transmission time accompanied by packet drops, even at the 0.8-kilometre mark.
    This underscores the impact of vegetation particularly plants and trees on the
    effective transmission range of ZigBee devices. In our specific experimental setup,
    it is worth mentioning that the distance between the pair of ZigBee devices is
    a mere 243 meters well within the range for reliable transmission. Studies show
    that images cannot be sent or received directly through ZigBee as it doesn’t support
    image formats like JPEG, PNG and JPEG-2000. However, this may be possible if images
    are converted into characters, numbers, or symbols by using encoding and decoding
    techniques both at the sender and receiver sides. For this purpose, software programming
    is used e.g. Visual Studio or Arduino coding to convert images into characters,
    symbols or numbers using Base-64 or Hexadecimal conversion. ZigBee only supports
    characters, symbols and numbers to send or receive data for communication. In
    this experimental setup, encoding and decoding techniques were employed. Images
    are captured through a camera i.e ESP-32 Cam, stored data in the SD Card as cache
    data and before sending or transmitting the image, converted the image into characters
    using the Base-64 or Hexadecimal encoder technique in Visual Studio encoding program
    or using Arduino programming and transmitted it to the monitoring station at the
    other end. On the receiving side, data is collected in the controller that is
    Node MCU, and then the decoder converts characters back into image format JPEG
    and stores them in the database on the server in the monitoring station. In the
    monitoring room in the database, the collected data or images are analyzed. 2)
    ZigBee Results In the ZigBee test, a ZigBee device was attached to a Node MCU
    ESP8266 controller at both the receiver and sender sides. A sensor unit was connected
    to the Node MCU and linked via Wi-Fi to the Node MCU on the ZigBee sender side.
    At the sender side, a ZigBee transmitter was also connected to the receiver side
    through a ZigBee link. Data was collected from the sensor unit and transmitted
    via Wi-Fi to the ZigBee device on the sender side, which was then forwarded to
    the ZigBee receiver via the ZigBee link. Data from sensors and battery percentages
    were obtained at 30-minute intervals. This data was sent to the ZigBee transmitter
    located in the centre of the field. During the test, a delay of 3 seconds between
    packet transmission and reception time was observed. As the distance between the
    ZigBee transmitter and receiver increased, the delay between packets also increased.
    However, with a 3-second delay, it was possible to cover an area of 5 acres comfortably.
    Some packet loss was also noted, with 2 packets lost and unable to be re-transmitted
    in scenarios without obstacles. The test was repeated with obstacles such as trees
    and bushes, resulting in an increased packet drop ratio. Nevertheless, the delay
    in packet transmission from sender to receiver remained consistent at 3 seconds.
    The experiments were conducted both without obstacles and with obstacles, as shown
    in Figures 3 & 4. FIGURE 3. 24 Hours reading of ZigBee without obstacles. Show
    All FIGURE 4. 24 Hours reading of ZigBee with obstacles. Show All Figure 4 shows
    that with obstacles some packets drop due to trees and due to multiple re-transmission
    attempts battery consumption is higher than the normal transmission without obstacles.
    It also demonstrated that a comparison of re-transmission attempts revealed that
    in scenarios with obstacles, there is a higher packet drop rate compared to those
    without obstacles. Consequently, there are more re-transmission attempts at various
    times. A comparison of battery utilization between the two scenarios is also illustrated:
    with obstacles and without obstacles. It’s evident that battery utilization is
    affected whenever there is a re-transmission due to packet loss, and it is more
    pronounced when there are more packet drops in the case of obstacles. Using ZigBee
    for image transmission, a ZigBee device was attached to a Node MCU ESP8266 controller
    at both the receiver side in the monitoring room and the sender side. An image
    was captured from the camera through ESP-32 CAM. Subsequently, an encoder software
    program was employed to convert the image into characters and transmit it to the
    receiving station through the Zigbee controller communication link. For image
    transmission, different resolutions and formats were selected for transmission,
    as outlined in Table 2. Initially, the lowest resolution image ( 12×9 ) was sent,
    converted into Base64 packets and received from the transmitter in 1 minute. During
    this time the data loss rate was observed to be between 10 to 12 packets. Multiple
    images were sent, and it was observed that the minimum packet loss remained at
    10 packets. TABLE 2 Receiving and Transmitting Data Using Zigbee The same test
    was conducted with various image resolutions, and the results revealed that an
    image could not be displayed until all packets were received without any loss.
    It clearly shows that due to the substantial packet loss over Zigbee, image transmission
    is not feasible. Moreover, as image resolution increased, packet dropping also
    increased. It took an extended amount of time to transmit data, and no image could
    be successfully reconstructed on the receiving end due to even the loss of a single
    packet. These results demonstrate that sending images over ZigBee is not a viable
    option. B. Wi-Fi Setup A rugged, high-power, linear 2×2 MIMO Wi-Fi access point
    based on 2.4GHz / 802.11n is the Ubiquiti Rocket M2. Incredible range performance
    and ground-breaking TCP/IP speeds of 150+Mbps are made possible by integrated
    airMAX technology. The enclosure can be used outside and is made of strong plastic.
    Data and power can be transmitted via an Ethernet cable with the help of a PoE
    Injector. Ubiquiti Networks’ web-based airOS interface enables simple but powerful
    configurations. The range of Wi-Fi is normally 100m however it can be 3km with
    long range antenna or even higher in some cases. Frequency Band is 2.4 GHz (Standard).
    Wi-Fi Standards of this access point is IEEE 802.11b: 11 Mbps, IEEE 802.11g: 54
    Mbps and IEEE 802.11n: 300M Mbps maximum throughput is 150Mbps+. It is Waterproof
    access point and operating Temperature of this access point is −30°C to +75°C.
    1) Wi-Fi Results Rocket M-2 Wi-Fi router was utilized in the test with two external
    antennas. This experiment was conducted in the experimental setup, where the router
    was positioned at the monitoring station, and the signal was assessed in the agriculture
    field. All sensor units operated effectively within the proposed setup. The IP
    cameras placed in the field operated without issues, and image and video capturing
    results were positive as Wi-Fi supports image formats directly for sending and
    receiving. Experiments were conducted both with and without obstacles, with observations
    indicating that the signal strength weakened in the presence of obstacles, leading
    to Wi- Fi packet drops (4 packets). However, without obstacles, Wi-Fi functioned
    smoothly and covered an area of 5 acres without any problems. The obstacles in
    this experiment primarily consisted of trees and plants. Data from sensors and
    battery percentage were collected at 30-minute intervals, while images from the
    camera were obtained every 2 minutes. The controller gathered and transmitted
    this data to the Wi-Fi transmitter located at the monitoring station. Figure 5.
    and 6. display sensor data without obstacles and with obstacles, respectively
    using Wi-Fi. Figure 5 illustrates that in scenarios without obstacles, there is
    no packet drop, whereas Figure 6 showcases re-transmission attempts occurring
    at multiple times in obstacle scenarios, indicating that obstacles affect packet
    drop rates in Wi-Fi as well. FIGURE 5. 24 Hours reading of Wi-Fi without obstacles.
    Show All FIGURE 6. 24 Hours reading of Wi-Fi with obstacles. Show All 2) Images
    and Video Transmission For images and video transmission over the Wi-Fi commutation
    outdoor router, the setup was designed. As Wi-Fi directly supports JEPG, JEPG-2000,
    PNG and all the HD formats without any conversion of images into characters using
    camera, so camera is connected directly through Wi-Fi using SSID. Therefore, we
    programmed the ESP32-CAM for Wi-Fi and web-based connectivity. Our tests were
    conducted in both the university grounds to assess larger area coverage and in
    the university greenhouse to evaluate smaller coverage areas where high-resolution
    images were captured as demonstrated in Figure 7. The results unequivocally indicate
    that images and videos can be effortlessly transmitted and received using the
    Wi-Fi protocol without any conversion or encoding. Furthermore, it accommodates
    a wide range of resolutions, depending on the camera pixels used in the field.
    Two 2 MP ESP-32 CAM (OV2640) cameras were installed on a 1.5 m high pole, one
    in the agriculture ground and second in the green house of the University. The
    pole was securely fixed to the ground and connected through Wi-Fi. These cameras
    captured images and videos at specified intervals and stored temporarily in the
    micro-SSD card from where images and videos were transmitted to the monitoring
    room. In the monitoring room images and videos are stored in the database on the
    server and where they can be viewed on the screen. FIGURE 7. High resolution image
    retrieved using Wi-Fi. Show All C. Lora Setup In this setup, LoRa was attached
    to a NodeMCU ESP8266 controller at both the receiver and sender sides. A sensor
    unit was connected to the NodeMCU on the sender side to collect data from the
    sensor unit, which was then transmitted to the LoRa on the receiver side. 1) Sensor
    and Data Collection In this study experiments, LoRa SX 1276 is used integrating
    the Semtech RF transceiver chip. It is much better in communication distance and
    receiving sensitivity. Even in a crowd frequency setting multi signal won’t interfere
    with one another because of its high anti-interference performance. The chip integrates
    and manages the antenna switch on the module. It is widely applicable to remote
    industrial control, wireless meter reading, and other fields. Its Temperature
    range is −40 to 85 °C. Its Frequency range is 888 MHz, and data rate is 37.5 Kbps.
    2) LoRa Results Get data from sensors and battery percentage after an interval
    of 30 minutes. The controllers collect and send this data to the LoRa transmitter,
    which is placed in the center of the field. In this test, it was noticed that
    there was a 01-second delay between packets. As the distance between the LoRa
    transmitter and receiver increased, the delay between packets also increased.
    However, with a 01-second delay it covers a 5-acre area easily. Packet loss also
    occurred in this scenario. It was observed in the results that 2 packets dropped
    and could not be re-transmitted in the scenario without obstacles. This test was
    repeated with obstacles, and it was noticed that the packet dropping ratio was
    the same with no delay. It is also evident that packet drop was the same as without
    obstacles due to strong signal strength; however, there were errors in 2 packets
    that were received corrupted. The experiment was run both without obstacles and
    with obstacles, and the results are shown in Figure 8 and 9, respectively. The
    figures display the results of 24 hours of data with an interval of 30 minutes.
    There are 48 records in total per day. The reading of temperature and humidity
    is the average of all sensor units. The results show that retransmission attempts
    are the same (2 attempts in 24 hours) in both obstacle and without obstacle scenarios
    as tabulated in Table 3. Battery utilization is also the same in both scenarios,
    but it is better than ZigBee. TABLE 3 Receiving and Transmitting Data Using LoRa
    FIGURE 8. 24 Hours reading of LoRa without obstacles. Show All FIGURE 9. 24 Hours
    reading of LoRa with obstacles. Show All 3) Setup for Image Transmission Studies
    show that images cannot be sent or received directly through LoRa as it does not
    support image format. However, this may be possible if images are converted into
    characters, numbers, or symbols using encoding and decoding techniques both at
    the sender and receiver sides. In our experimental setup we attempted this by
    using the encoding and decoding technique. Images are captured through a camera
    and converted into characters using the Base-64 encoder technique in a visual
    studio encoding program. They are then sent to the other monitoring station at
    the receiving end. At the receiving side, data is collected, and the decoder converts
    the characters back into image format. For image transmission, we attached a LoRa
    device with a Node MCU ESP8266 controller at both the receiver-side monitoring
    room and the sender-side. We captured images from the camera through ESP-32 CAM,
    and then an encoder software program was used to convert the images into characters,
    which were sent to the receiving station via the LoRa controller communication
    link. In this study image transmission tests, we selected different resolutions
    and formats to transmit. Initially, we sent the lowest resolution image (i.e.,
    12×9 ), converted into Base64 packets, and received it from the transmitter in
    1 minute. During this time, the rate of data loss was 1 to 3 packets. We sent
    many images and observed that the minimum data packet loss was 0 packets. The
    same test was repeated by selecting different image resolutions. The results show
    that low-resolution images can be displayed with a minimum rate of packet loss,
    which was 0* in the LoRa protocol. As evident from the data, a few packets were
    dropped over the LoRa network. Because of this it became necessary to attempt
    sending the image multiple times in order to successfully send and receive the
    lowest resolution images within a minute. Additionally, it was observed that an
    increase in image resolution resulted in more packet dropping. This suggests that
    it is not feasible to transmit high-resolution images over a LoRa setup. Furthermore,
    it was noted that it took a considerable amount of time to transmit data packets
    for high-resolution images. The results clearly indicate that it is possible to
    send low-resolution images over a LoRa communication link. However, the transmission
    of videos is not feasible due to data packet loss and the limitations associated
    with high-resolution data transfer. D. Cost Analysis Cost analysis was conducted
    for the experimental setup, including the cost of communication devices. When
    purchasing these devices, the per unit cost of ZigBee is 16 $ . The per unit cost
    of a Wi-Fi device with a long-range antenna is 50 $ , and the cost of LoRa is
    5 $ . We use one Wi-Fi router to collect data from all sensor units. For ZigBee
    and LoRa, a pair of communication devices is required, so the cost is doubled,
    as illustrated in Figure 10. The cost of the battery is 11 $ and is used in ZigBee
    and LoRa on the sender side. Since the sensor units are the same in all communication
    scenarios, we are not considering that cost for our comparison. FIGURE 10. Cost
    analysis of communication devices. Show All In the case of ZigBee and LoRa, two
    Node MCU ESP8266 12E units are used to connect the sensor unit to the transmitter
    of ZigBee and LoRa. The cost of each Node MCU controller is 2.5 $ , so the cost
    of ESP8266 12E units is added to the ZigBee and LoRa costs. The total cost of
    ZigBee communication is 47 $ . For LoRa, the total cost is 25 $ . The cost of
    Wi-Fi remains at 50 $ . In this experimental setup, LoRa communication is cost-effective
    for transmitting the sensor’s text data compared to other IoT communication devices.
    However, for images and videos, LoRa is not a suitable technology due to delays
    and high packet loss. Therefore, the cost of Wi-Fi must be considered in such
    cases. E. Data Loss Recovery Erroneous data can result in incorrect decisions,
    with potentially significant consequences. Therefore, a method for recovering
    lost data is essential, and there are two primary scenarios to consider: 1) One
    Sensor Data Loss As we mentioned in Figure 1, there are a total of 8 sensor units
    (SU) for our experiment. Assuming there is data available in the local memory
    of all the sensor units but the data of one sensor unit SU8 was lost at time T
    i , as shown in Table 4. We proposed a recovery method using three factors, one
    factor is based on the average of the next and previous reading, the second is
    based on the data available at the weather site at the time of data loss and the
    third is based on the neighbour’s data at the time of data loss. TABLE 4 Data
    Loss Example for Single Sensors Also, we need to have the data of SU8 at time
    T i+30 . As we want to know after recovery how close we are with the actual data,
    therefore we entered the missing reading of SU8 with strike-through as shown in
    Table 4. Now we get the reading from the weather site for time T i−30 and time
    T i to calculate the increase/decrease in temperature Δt at the experimental site.
    The readings might be different as obtained by sensors due to local factors but
    we can find the change of temperature in 30 min. Both the values we obtained were
    32°C and 33°C, hence Δt we find is 1°C. Also, the average value V n T Avg at time
    T i is 33°C which is not close to the actual lost data. Now we calculate the missing
    data using our proposed equations 1, 2 and 3 respectively: We can see the results
    of our proposed equations for the missing data. The answer of equation 1 for SU8
    is 32.5 and the answer of equation 2 for SU8 is 32, which helps us to come closer
    to the lost data. In equation 2, j means all nodes except the one with missing
    data. Finally, with the help of equation 3, we can find the answer which is 32.25°C.
    We can see that the data recovery with the proposed method is very close to the
    actual value as compared to the average value. 2) Multiple Sensor Data Loss Assume
    there is data at the local memory of a sensor unit but lost data of all or multiple
    sensor units at time T i during transmission to the monitoring station, so there
    is no option of recovering data from the neighboring sensor units. The reading
    from the weather site for time T i−30 and time T i is obtained to calculate the
    increase/decrease in temperature at the experimental site. The values obtained
    were 32 and 33 °C. The Δt found is 1 °C. Now, the missing data is calculated using
    the proposed equation 4: Here, due to the absence of neighboring nodes data, we
    use two-factor recovery. As we need to know after recovery how close we are to
    the actual data, therefore all missing readings are entered with a strike-through.
    The average of data T for the values at T i−30 and time T i+30 is also calculated
    and this is not close to the actual readings. The results of the proposed equation
    can be observed in Table 5. The readings are closer to the actual readings when
    compared to the average ones. TABLE 5 Data Loss Example for Multiple Sensors SECTION
    V. Conclusion In conclusion, our research presents a comparative analysis of three
    primary IoT communication protocols in agricultural monitoring applications across
    diverse environmental conditions. Results designate that each technology has its
    own pros and cons, and different wireless communication technologies are fit for
    different scenarios. Experimental results show that in outdoor environment Wi-Fi
    emerges as the optimal choice offering extensive coverage and support for various
    data types including text, images and videos despite its higher cost. In contrast,
    LoRa demonstrates cost-effectiveness and minimal battery usage, making it suitable
    for long-range communication but limited in transmitting multimedia data. Zigbee
    presents moderate performance, with considerations regarding communication limitations
    and the need for a controller. Additionally, our study introduces auspicious methods
    for data recovery in the event of network errors, thereby enhancing the reliability
    of wireless communication solutions in agricultural settings. These findings empower
    farmers and stakeholders to make informed decisions regarding the selection and
    deployment of wireless communication protocols, ultimately leading to improved
    productivity and crop yields in smart farming environments. ACKNOWLEDGMENT The
    authors extend their appreciation to Taif University, Saudi Arabia for supporting
    this work through project number (TU-DSPP-2024-xx). Authors Figures References
    Keywords Metrics More Like This Wireless sensor network for single phase electricity
    monitoring system via Zigbee protocol 2012 IEEE Conference on Control, Systems
    & Industrial Informatics Published: 2012 QoS analysis of routing protocols in
    wireless sensor networks in the monitoring of wind farms 2014 IEEE International
    Instrumentation and Measurement Technology Conference (I2MTC) Proceedings Published:
    2014 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Effects of IoT Communication Protocols for Precision Agriculture in Outdoor
    Environments
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 29 papers. The special focus in this conference
    is on Machine Intelligence for Research and Innovations. The topics include: Artificial
    Intelligence Revolution in Healthcare: From Patient Care to Disease Diagnosis;
    bayesian Models for Weather Prediction: Using Remote Sensing Data to Improve Forecast
    Accuracy; unsupervised Clustering of Asphalt Pavement Conditions Using Fuzzy C-Means
    Algorithm with Principal Component Analysis Aided Dimensionality Reduction; prediction
    of Heart Disease Risk in Early Ages with Boosting Techniques; ioT-Enabled Advanced
    Foam Firefighting E-Vehicle; a Study on Kerberos and Graphical Password-Based
    Web Authentication Scheme; application of Dragonfly Algorithm-Based Interval Type-2
    Fuzzy Logic Closed-Loop Control System to Regulate the Mean Arterial Blood Pressure;
    challenges and Solutions with Lightweight Models for Diabetic Retinopathy Detection;
    Energy Management System for EV with Multiple Energy Sources; design and Development
    of a Charcoal-Based Sensor for Enhanced Soil Analysis in Precision Agriculture;
    Approach on Machine Learning Techniques for Anomaly-Based Web Intrusion Detection
    Systems: Using CICIDS2017 Dataset; enhancement of Edge Security Using Dynamic
    Load-Balancing Algorithm for 5G Cloud Computing Network; testing and Development
    of a Multi-Object Tracker Based on Deep Learning Techniques; artificial Intelligence
    Technologies-Assisted 6G; state-of-the-Art and Development of 6G Communications;
    machine Learning Approach for Thermal Characteristics and Improvement of Heat
    Transfer of Nanofluids—A Review; detection of Heart Failure by Using Machine Learning;
    real-Time Road Lane Detection for Self-driving Cars Using Computer Vision; Global
    Horizontal Irradiance Estimation Using Bi-LSTM Algorithm; Enhancing Context-Aware
    Hybrid Collaborative Filtering Using DBSCAN Clustering Approach; comparative Study
    of Hybrid/Enhanced Nature-Inspired Optimization Algorithms for Solar Photovoltaic
    Model; preface.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 1st International Conference on Machine Intelligence for Research and Innovations,
    MAiTRI 2023
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ahmad J.
  - Gueaieb W.
  - Saddik A.E.
  - Masi G.D.
  - Karray F.
  citation_count: '0'
  description: Unmanned aerial vehicles (UAVs) equipped with various sensors and onboard
    processing capabilities have emerged as a promising means to acquire field data
    for precision agriculture applications. However, such UAVs are costly, restricting
    their deployment in small-To-medium-sized fields, particularly in developing countries.
    In contrast, consumer-grade UAVs have high-resolution RGB cameras and video streaming
    abilities at affordable prices. This paper presents an efficient processing pipeline
    to analyze video streams from consumer-grade UAVs on smartphones. The processing
    pipeline consists of preprocessing, object detection, and yield estimation. The
    object detector, being the most computationally expensive module, is invoked every
    nth frame due to video redundancy and the target platform's limited resources.
    The yield estimation task on a smartphone requires efficient and accurate fruit
    detection, which a modified YOLOv8n model achieved. We evaluate our pipeline on
    datasets of apple and peach trees and demonstrate that it can process UAV-captured
    images to collect yield-related statistics. We also discuss the lessons learned
    and outline future directions for consumer-grade UAV-based precision agriculture
    applications.
  doi: 10.1109/ICCE59016.2024.10444191
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2024 IEEE International Confe...
    Enabling Consumer UAVs for Precision Agriculture Applications: A Case Study of
    Yield Estimation Publisher: IEEE Cite This PDF Jamil Ahmad; Wail Gueaieb; Abdulmotaleb
    El Saddik; Giulia De Masi; Fakhri Karray All Authors 37 Full Text Views Abstract
    Document Sections I. Introduction II. Related Work III. Proposed Method IV. Experiments
    and Results V. Discussion Show Full Outline Authors Figures References Keywords
    Metrics Abstract: Unmanned aerial vehicles (UAVs) equipped with various sensors
    and onboard processing capabilities have emerged as a promising means to acquire
    field data for precision agriculture applications. However, such UAVs are costly,
    restricting their deployment in small-to-medium-sized fields, particularly in
    developing countries. In contrast, consumer-grade UAVs have high-resolution RGB
    cameras and video streaming abilities at affordable prices. This paper presents
    an efficient processing pipeline to analyze video streams from consumer-grade
    UAVs on smartphones. The processing pipeline consists of preprocessing, object
    detection, and yield estimation. The object detector, being the most computationally
    expensive module, is invoked every nth frame due to video redundancy and the target
    platform’s limited resources. The yield estimation task on a smartphone requires
    efficient and accurate fruit detection, which a modified YOLOv8n model achieved.
    We evaluate our pipeline on datasets of apple and peach trees and demonstrate
    that it can process UAV-captured images to collect yield-related statistics. We
    also discuss the lessons learned and outline future directions for consumer-grade
    UAV-based precision agriculture applications. Published in: 2024 IEEE International
    Conference on Consumer Electronics (ICCE) Date of Conference: 06-08 January 2024
    Date Added to IEEE Xplore: 28 February 2024 ISBN Information: ISSN Information:
    DOI: 10.1109/ICCE59016.2024.10444191 Publisher: IEEE Conference Location: Las
    Vegas, NV, USA Funding Agency: SECTION I. Introduction The role of agriculture
    in a country’s economy is paramount, and agricultural sustainability requires
    better practices. Precision agriculture is a modern farming practice that aims
    to optimize crop production and improve yield quality using data-driven techniques
    [1]. One of the critical aspects of precision agriculture is to acquire accurate
    and timely information about crop status, such as expected yield, health, and
    growth [2]. This information can be beneficial for making informed decisions about
    irrigation, fertilization, pest control, and harvesting. Using UAVs to monitor
    crops offers excellent possibilities to enhance farming practices by cost-effectively
    acquiring field data compared to previous methods [3]. In this regard, affordable
    consumer-grade UAVs have great potential to acquire field data as they can fly
    over large land areas quickly and capture high-resolution images of crops [4].
    These images can then be processed and analyzed to extract useful crop information,
    such as tree count, canopy area, biomass, chlorophyll content, water stress, disease/pest
    infestation, and fruit yield estimation. Deep learning methods have become significantly
    robust in handling tasks like classification [5], detection, segmentation [6],
    and recommendation, making them the obvious choice for processing agricultural
    imagery. These techniques have been widely applied for various applications such
    as disease detection [7]–[9], leaf stress detection, weed detection [10], pesticide/herbicide
    recommendation, and yield estimation [11], [12]. However, deploying consumer-grade
    UAVs in precision agriculture faces challenges, such as limited battery life and
    a lack of onboard processing support for compute-intensive tasks. Off-the-shelf
    UAV-based precision agriculture solutions like DJI SmartFarm Web [13] rely on
    expensive and specialized hardware and software components, such as high-end cameras,
    GPS modules, ground control stations, and cloud servers. These components increase
    the cost and complexity of the UAV system and limit its accessibility and scalability
    for small-scale farmers. This paper presents an efficient method to enable smart-phones
    to serve as portable computing platforms, allowing consumer-grade UAVs to estimate
    yield and monitor fruits. We evaluate our pipeline on datasets of apple and peach
    trees collected from different orchards. We also discuss the lessons learned and
    the future directions for using smartphones for UAV-based precision agriculture
    applications. SECTION II. Related Work Images and other data captured by UAVs
    enable remote monitoring, disease/pest infestation detection [14], and yield estimation
    [15]. It can help farmers to plan harvesting, marketing, and storage strategies.
    Hyperspectral image processing has been employed to estimate yield from UAV-captured
    images. For instance, Wittstruck et al. [11] estimated Hokkaido pumpkin (Cucurbita
    max.) yield using image processing and linear regression, achieving average detection
    accuracy of 95%, and a Pearson correlation coefficient of 0.84 for weight estimation.
    Similarly, Li et al. [16] estimated potato yield using UAV-based RGB and hyperspectral
    images acquired at low altitudes. They used image processing to segment the green
    canopy regions. A random forest regression model was then used to estimate the
    above-ground biomass of the potato plants based on several hyperspectral features.
    They achieved a 0.81 correlation coefficient for yield estimation. Most recent
    works use object detectors to detect visible fruits and extrapolation techniques
    to estimate actual fruit count. These approaches require accurate detection and
    counting of fruits in aerial images, which can be affected by illumination variation,
    occlusion, and external environmental factors. Compute-intensive deep learning-based
    methods are often employed to address these challenges. Zheng et al. [17] proposed
    an efficient online citrus counting system for large-scale unstructured orchards
    based on the UAV. They trained a Citrus-YOLO model to detect and count the citrus
    fruits in the RGB images, followed by the DeepSort algorithm to assign specific
    IDs to citrus fruits. Finally, they used a non-uniform distributed counter to
    correct the fruit count during the tracking process to reduce the counting errors
    caused by tracking failure. Their method achieved an F1 score of 89.07% and MAPE
    of 12.74%. Besides individual fruits and crops, tree health assessment has also
    been explored. For instance, Jemaa et al. [18] proposed a UAV-based computer vision
    system for orchard apple tree detection and health assessment. They used a hard
    negative mining strategy to detect trees. Tree health is then assessed using features
    extracted from 12 vegetation indices. Their system reported an F1 score of 86.24%
    for tree detection and an average classification accuracy of 97.52% for health
    assessment. Shah et al. [19] developed an Android application for drone surveillance
    and advanced agriculture monitoring using an EfficientNetB3 model [20]. They used
    a drone to capture RGB images of different crops at different growth stages. They
    also developed an Android application to process and analyze images using an optimized
    model on the smartphone device. However, they used a phone camera instead of a
    drone to capture the image. Egi et al. [21] proposed a drone-computer communication-based
    tomato generative organ counting model using YOLOv5 with the deep-sort tracker.
    UAV captured RGB images of tomato plants at different flowering and fruiting stages
    within the greenhouse. Detection, tracking, and counting were performed on a PC
    where YOLOv5 and deepsort were used to analyze drone images. They evaluated their
    model on a dataset collected from a greenhouse and achieved an average F1 score
    of 0.63. UAV-based precision agriculture is a promising field that can provide
    various benefits for crop management. However, the outstanding challenges related
    to robustness and efficiency require novel solutions. SECTION III. Proposed Method
    Smartphones have become incredibly powerful in terms of computing capabilities.
    Their portability and inbuilt communication abilities make them an ideal platform
    along with UAVs for precision agriculture applications, particularly in developing
    countries. The proposed framework Figure 1 presents the architecture of a mobile
    application to analyze drone video feeds and extract useful field-related data.
    Most consumer-grade drones can stream camera feed via a communication channel
    to a smartphone, sometimes connected to a designated remote controller Table I.
    The camera stream is displayed on the smartphone screen in real-time as it takes
    flight. The video stream can be recorded on the device and later processed on
    the smartphone for gathering data offline. For real-time data collection, the
    video feed can also be received by a mobile application utilizing the UAV manufacturers’
    software development kit (SDK). Once the image or video feed is received, the
    processing pipeline implemented on-device can be invoked. However, video data
    processing through deep learning models is very compute-intensive, and highly
    efficient pipelines are needed for the smartphone application to work effectively.
    We propose a quantized version of a modified YOLO-Nano, a lightweight and fast
    object detection model with optimized hyperparameters to balance performance and
    efficiency. The specifics of each component are provided in the subsequent sections.
    A. Preprocessing Preprocessing is a crucial component in any vision-based system.
    In our framework, it is responsible for intensity normalization before the inference.
    Fruits appear very small in drone images, making it challenging for object detectors
    to detect them at varying scales. To cope with this problem, we augmented the
    labeled images by extracting smaller patches from the input image such that the
    bounding box annotations are relatively adjusted. This allows us to introduce
    many variations in object scale and orientation, essential for obtaining a scale-aware
    and robust detector. B. Fruit Detection Fruit detection using a deep learning
    model is our frame-work’s most computationally expensive task. Though the chosen
    model is quite efficient, running on a video stream requires considerable computation
    power. To train a robust detection model that can compensate for the scale variations
    introduced by a drone’s camera, we developed a data augmentation pipeline to introduce
    possible detection scenarios for the field operation of the UAV. To achieve this,
    overlapping patches were extracted from the labeled images using bounding box-aware
    transformations. The patches were again augmented using rotation, horizontal and
    vertical flips, and motion blur. Object detection can be performed using a variety
    of efficient architectures such as Faster RCNN [26], Single shot detector (SSD)
    [27], You Only Look Once (YOLO) [28] and their variants. However, a lightweight
    single-stage detector, YOLO, has been widely adopted for deployment on resource-limited
    hardware [29]. The YOLO version 8 family has several different architectures ranging
    from the most efficient YOLOv8 nano to the most potent YOLOv8x (xtra large) Table
    II. The YOLOv8 family of models uses a backbone similar to YOLOv5. However, the
    cross-stage partial bottleneck with two convolutions (C2f module) is introduced
    instead of the CSPLayer [30]. It combines high-level features and contextual information
    to perform accurate detection. It also uses an anchor-free model with separate
    heads for detection and classification tasks. In this way, every branch focuses
    on its specific task, resulting in a highly optimized feature extraction pipeline.
    The use of complete intersection over union (CIoU) (1) along with distribution
    focal loss (DFL) (2) enables these models to yield superior performance with the
    detection of smaller objects (such as fruits). The two metrics are defined by
    L CIoU =1−IoU+ d 2 C 2 +αv (1) View Source L DFL =− ∑ i=1 N ∑ j=1 N c y ij (1−
    p ij ) γ log( p ij ) (2) View Source where IoU is the intersection over union
    of the predicted and ground truth bounding boxes, d is the Euclidean distance
    between the center points of the boxes, C is the diagonal length of the smallest
    enclosing box covering the two boxes, v is a penalty term for aspect ratio consistency,
    and α is a trade-off parameter. This loss function considers important geometrical
    factors relevant to the fruit detection use case, such as overlap area, normalized
    central point distance, and aspect ratio. N is the number of samples, N c is the
    number of classes, y ij is the target probability of class j for sample i , and
    p ij is the predicted probability of class j for sample i . The parameter γ controls
    the degree of focus on hard examples. The loss function of L DFL aims to align
    the predicted probabilities with the target probabilities, which reflects the
    actual distribution of the classes in the dataset. These losses enable YOLOv8
    models to achieve superior detection performance at various scales. Fig. 1. Mobile
    application architecture for analyzing UAV images using on-board processing Show
    All TABLE I Consumer-Grade Drones with Video Streaming To Phone Capabilities Fig.
    2. Model training and optimization for deployment on smartphone device Show All
    TABLE II Yolov8 Variants with their Computation Load The YOLOv8n variant consists
    of 7 Convolution layers along with 8 C2f modules and a spatial pyramid pooling
    fast (SPPF) module. We modified the width and depth of the model to obtain a lighter
    version YOLOv8-Nano-M and then applied post-training quantization to obtain an
    8-bit fixed-point representation. It reduces the precision of the weights and
    activations of YOLOv8n from FP32 to INT8 to benefit from faster integer calculations
    of ARM SoC. It also reduces memory and power consumption by four times without
    sacrificing accuracy. After quantization, the model was converted to the PyTorch
    Lite format, which allows it to run on mobile devices. The quantized model was
    then deployed on the Android application. Android platforms offer several features
    to speed up the inference of deep learning models on Qualcomm Snapdragon and other
    ARM-based SoCs. The Android OS provides a neural network application programming
    interface (API) to the Android neural network runtime, which provides accelerated
    inference on consumer hardware. The hardware acceleration is achieved using advanced
    features of the mobile CPU and GPU along with a dedicated digital signal processor
    (DSP) or a neural processing unit (NPU), commonly found in recent flagship smartphone
    devices Figure 2. C. Yield Estimation Fruit detection is usually followed by estimating
    the total number of fruits on a tree, including those not visible from one side
    [31]. This estimation often considers additional information like canopy size,
    fruit density, tree height, and variety [12]. Considering the limited computing
    resources, we estimated the total number of fruits by summating detected fruits
    on individual trees and the average fruit density, and then, based on these statistics,
    we derived a formula to extrapolate the total fruit count N F using N F = ∑ n=1
    N t F n d C f (3) View Source where N t is the total number of trees, F n d is
    the number of detected fruits in the i th tree and C f is the correction factor
    to compensate for the invisible fruits or the ones that were not detected by the
    detector. This factor can be set adaptively based on tree height, canopy size,
    and average fruit density. D. Prototype Application Development The prototype
    application for Android smartphones was developed using the pytorch-android-lite
    and pytorch-android-torchvision-lite libraries, enabling loading and inference
    on mobile devices. The overall architecture of the application is provided in
    Figure 1 and was built using Java for Android devices. The optimized model was
    transferred to a smartphone as an asset and loaded into the memory. The drone
    feed from its camera is streamed to the remote control connected to the smartphone.
    Selected frames obtained from the drone were then input to the processing pipeline
    Figure 3. Firstly, the input image is scaled down to the required resolution,
    normalized, and converted into a tensor. The model then performs inference on
    the input tensor and produces the output tensor containing class probabilities
    and bounding boxes. The post-processing module consisting of non-maximum suppression
    (NMS) and bounding box rescaling is applied to the output tensor to generate bounding
    box coordinates for the input image, which can then be overlayed on the input
    image for visualization. The NMS, and rescaling functions were implemented in
    Java. The most recently acquired frames are processed, and fruit count is collected
    for each tree. Some frames are dropped in the process, which is expected as video
    data is often highly redundant, and dropping frames won’t cause significant information
    loss. [The app code, data, and models will be made available at: https://github.com/jamilahmadicp/UAV-Companion-App]
    SECTION IV. Experiments and Results A. Experimental Setup The models were trained
    using PyTorch deep learning framework in Python on a 10-core Xeon Server equipped
    with 128 GB RAM and Nvidia RTX A6000 GPU with 48 GB VRAM. The prototype Android
    application was installed and tested on two different Android devices: POXO X3
    NFC, a mid-range device with a Snapdragon 732 G CPU and Adreno 618 GPU, and Xiaomi
    Pad 6 with a high-end Snapdragon 870 CPU and Adreno 640 GPU. The performance metrics
    used to evaluate performance are precision, recall, and mAP50, commonly used to
    evaluate object detection models. Precision measures the fraction of correctly
    detected fruits among all detected fruits, recall measures the fraction of correctly
    detected fruits among all ground truth fruits, and mAP50 measures the mean average
    precision at an intersection over union (IoU) threshold of 0.5, which is a combined
    measure of precision and recall across different classes of fruits. The Peach
    dataset consisted of 2,000 images, whereas the Apple dataset contained 1,000 images
    split into an 80/20 ratio for training and testing. Fig. 3. Processing pipeline
    of the Android application for yield estimation Show All TABLE III Performance
    Comparison of Various Models On Fruit Detection B. Fruit Detection and Yield Estimation
    The results presented in Table III show the performance of four different variants
    of the YOLOv8 family and the modified one. The variants differ in size and architectural
    complexity, with Nano being the smallest and fastest and Large (along with xtra
    large) being the most potent but the slowest. YOLOv8-Large achieved the highest
    mAP50 of 0.775 due to its more complex and capable architecture, with a larger
    receptive field and a higher resolution output. In contrast, YOLOv8-Nano achieved
    an mAP score of 0.752 with its smaller receptive field and a lower resolution
    output. The proposed YOLOv8-Nano-M achieved very competitive performance at a
    fraction of the compute cost. With the proposed model and yield estimation method,
    we achieved a Pearson correlation coefficient of 0.89 for Peach fruits and 0.83
    for Apples in the test datasets. These results show the approach’s effectiveness
    in UAV-based yield estimation in stone fruits. Further research is needed to develop
    affordable solutions for precision agriculture involving consumer-grade UAVs,
    multi-sensory inputs, and smartphones as portable computing platforms. C. Efficiency
    Analysis Evaluation results reported in Table IV show the inference time (latency)
    and frames per second (FPS) of different variants of the YOLOv8 family, along
    with the proposed quantized version of the YOLOv8-Nano model, on two different
    smart-phone devices: SD-732G and SD-870. Inference time and the FPS depend on
    the size and complexity of the model, as well as the hardware specifications of
    the device. The results are obtained by computing the average after running the
    models on the test sets. TABLE IV Efficiency Analysis of Various Models on Mobile
    Devices The non-quantized variants of the models performed as expected. The YOLOv8-Nano,
    being the fastest, was further optimized through quantization and input resolution
    reduction, which caused it to achieve nearly 10 FPS on the mid-range device compared
    to the non-quantized 2.3 FPS. Similarly, its performance on SD-870 also improved
    from 10 FPS to 20+ FPS after quantization and input resolution reduction, making
    it suitable for real-time inference on UAV video streams. The other more capable
    models can also be quantized and optimized for more recent and capable hardware
    to achieve better performance. SECTION V. Discussion Enabling consumer-grade UAVs
    for precision agriculture applications through mobile computing platforms offers
    many advantages. They are inexpensive compared to specialized UAVs for precision
    agriculture, which have dedicated computing hardware onboard. Drone footage can
    be stored on the smartphone device for future analysis, allowing for assessments
    of the effectiveness of fertilizers or pesticides at a later time. Similarly,
    yield estimate data can be aggregated from videos captured at different dates
    during a season to obtain more accurate statistics. Insights extracted from the
    UAV video stream can be viewed on the smartphone or uploaded to the cloud for
    future use. In brief, utilizing consumer-grade UAVs with smartphone applications
    capable of analyzing video feeds will enable many farmers to adopt innovative
    methods that may not have the resources for expensive off-the-shelf solutions.
    SECTION VI. Conclusion This paper presented an efficient processing pipeline to
    analyze UAV-captured video streams of orchards for yield estimation. We demonstrated
    how video streams from UAVs equipped with RGB cameras can be processed on smartphones
    or edge devices using preprocessing, object detection, and yield estimation. Our
    evaluation of apple and peach datasets illustrated their effectiveness in detecting
    and counting fruits and estimating yield. Our method can potentially reduce the
    cost and complexity of deploying UAVs for precision agriculture, particularly
    in small-to-medium-sized fields and developing countries. Additionally, we discussed
    the challenges and opportunities for future research in this domain, including
    improving the accuracy and robustness of the fruit detector, integrating other
    sensors and data sources, and creating user-friendly interfaces and applications.
    ACKNOWLEDGMENT The authors thank the Technology Innovation Institute (TII) for
    partially funding this research. Authors Figures References Keywords Metrics More
    Like This A Distribution Technology Based on Segmentation Prefetching and Pipelining
    in Classified Streaming Media Service 2010 International Conference on Multimedia
    Technology Published: 2010 Video Stream Analysis in Clouds: An Object Detection
    and Classification Framework for High Performance Video Analytics IEEE Transactions
    on Cloud Computing Published: 2019 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Digest of Technical Papers - IEEE International Conference on Consumer
    Electronics
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Enabling Consumer UAVs for Precision Agriculture Applications: A Case Study
    of Yield Estimation'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zear A.
  - Ranga V.
  - Gola K.K.
  citation_count: '0'
  description: 'Wireless sensor and actor networks (WSANs) consist of nodes associated
    in an ad hoc manner to perform sensing tasks for information gathering and acting
    functions on the basis of gathered information. Connectivity is an essential requirement
    of large-scale wireless networks, and WSANs are supposed to stay connected. The
    nodes in hostile environments are prone to failures such as battery depletion,
    physical damage, or hardware malfunction. The failure of some nodes, like cut
    vertex nodes, can partition the network into multiple network segments. Most of
    the solutions for network partition recovery proposed in the literature depend
    on the assumption that the network is obstacle-free. However, an obstacle-free
    environment is not possible in real-life situations. In the last few decades,
    UAVs or drones have been engaged in various applications such as industrial inspections,
    remote sensing, agriculture, military, disaster relief, and so forth, UAVs can
    be employed to strengthen the connections in wireless networks by coordinating
    with ground nodes since they can render services in rough areas where ground nodes
    cannot provide services. Thus, our research is based on using UAVs as relay nodes
    to reconnect the disjoint partitions. This paper proposes two algorithms: Drone
    assisted partition recovery algorithm (DAPRA) and drone assisted detection and
    partition recovery algorithm (DADPRA). In both algorithms, partitions are detected
    by the sink node. In DAPRA sink node determines the failed cut-vertex node and
    sends UAV to the location of the failed cut-vertex node. In DADPRA algorithm,
    UAV identifies the failed cut-vertex node and reconnects the disjoint network
    segments. DAPRA and DADPRA are analyzed according to the state-of-the-art parameters,
    that is, recovery and detection time, UAV''s travel distance, and the total messages
    transmitted. The proposed algorithms are compared with similar Distributed Partition
    Detection and Recovery using UAV (DPDRU) approach. The simulation results show
    the proposed algorithms detect network partitioning in less time as compared to
    DPDRU approach.'
  doi: 10.1002/cpe.8048
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register Concurrency and Computation: Practice and Experience RESEARCH ARTICLE
    Full Access Network partition detection and recovery with the integration of unmanned
    aerial vehicle Aditi Zear,  Virender Ranga,  Kamal Kumar Gola First published:
    20 February 2024 https://doi.org/10.1002/cpe.8048 SECTIONS PDF TOOLS SHARE Summary
    Wireless sensor and actor networks (WSANs) consist of nodes associated in an ad
    hoc manner to perform sensing tasks for information gathering and acting functions
    on the basis of gathered information. Connectivity is an essential requirement
    of large-scale wireless networks, and WSANs are supposed to stay connected. The
    nodes in hostile environments are prone to failures such as battery depletion,
    physical damage, or hardware malfunction. The failure of some nodes, like cut
    vertex nodes, can partition the network into multiple network segments. Most of
    the solutions for network partition recovery proposed in the literature depend
    on the assumption that the network is obstacle-free. However, an obstacle-free
    environment is not possible in real-life situations. In the last few decades,
    UAVs or drones have been engaged in various applications such as industrial inspections,
    remote sensing, agriculture, military, disaster relief, and so forth, UAVs can
    be employed to strengthen the connections in wireless networks by coordinating
    with ground nodes since they can render services in rough areas where ground nodes
    cannot provide services. Thus, our research is based on using UAVs as relay nodes
    to reconnect the disjoint partitions. This paper proposes two algorithms: Drone
    assisted partition recovery algorithm (DAPRA) and drone assisted detection and
    partition recovery algorithm (DADPRA). In both algorithms, partitions are detected
    by the sink node. In DAPRA sink node determines the failed cut-vertex node and
    sends UAV to the location of the failed cut-vertex node. In DADPRA algorithm,
    UAV identifies the failed cut-vertex node and reconnects the disjoint network
    segments. DAPRA and DADPRA are analyzed according to the state-of-the-art parameters,
    that is, recovery and detection time, UAV''s travel distance, and the total messages
    transmitted. The proposed algorithms are compared with similar Distributed Partition
    Detection and Recovery using UAV (DPDRU) approach. The simulation results show
    the proposed algorithms detect network partitioning in less time as compared to
    DPDRU approach. 1 INTRODUCTION Wireless sensor and actor networks (WSANs) constitute
    associated sensor and actor nodes deployed over a vast geographical region at
    different locations, interconnected using a network of wireless links. They intend
    to carry out various activities such as communication and information gathering.
    WSANs employ mobile sensors, actuators, robots, unmanned aerial vehicles, and
    so forth, and exploit their capability of sensing and mobility simultaneously.1-3
    The potential applications of the WSANs comprise cyber-physical systems, forest
    fire fighting, search and rescue, battlefield reconnaissance, wildlife, and environmental
    monitoring, security surveillance, underwater surveillance, environment monitoring,
    and battlefield reconnaissance.4-9 These systems are used increasingly because
    they can perform their functions without any real-time and direct human intervention.
    Complete and constant communication is required for the network to work efficiently,
    which is achieved in WSANs by forming a network in an ad hoc manner. Usually,
    nodes share information such as their own locations or readings with neighbors
    (the nodes within the transmission range) or with the central base station (sink
    node).3, 6, 10 Nodes and links in the network are subject to failures such as
    battery depletion, rough environmental conditions, hardware malfunction, and due
    to external damages such as disasters. These failures obstruct several network
    operations, and in the worst-case scenario, the network gets divided into different
    partitions, where nodes in the distinct partitions cannot share information because
    of lost connectivity.11-14 As the WSANs function independently and unescorted,
    they must have the capability to self-heal in case of failures. The proposed approaches
    to restore partitioned networks are: proactive, self-healing, and relay-based.11-17
    The proactive approaches perform preventive measures to avoid network partitioning.
    These preventative steps consist of populating the network with additional nodes
    so that the network can tolerate up to nodes failure by designating backup nodes
    or establishing a network using connectivity algorithms. Many node placements
    sometimes become inapplicable because of the huge deployment expenditure and great
    communication overhead. It may sometimes be troublesome to obtain all this information.4-9,
    18-21 On the other hand, self-healing approaches can be centralized or distributed
    and can work by diminishing the distance among the healthy nodes below their communication
    range. Hence, the network nodes should be mobile in case of failure. The self-healing
    approaches are further divided into two parts: reactive and hybrid.1, 22-24 In
    reactive approaches, the solution for reconnecting the partitions employs existing
    nodes to detect and recover the failure by relocating candidate nodes towards
    the failed node location, that is, node relocation.1 This solution is quick because
    it does not require any mechanism to deploy extraneous nodes. The network nodes
    need to be mobile, which requires complex hardware. Node mobility also leads to
    high energy consumption.25-29 Another disadvantage of this approach is that relocating
    nodes causes additional failures, which can also lead to further network partitioning.
    Hence, the relocation process continues in a cascaded way. When some nodes detect
    the failure, all calculations are needed to be done quickly to initiate recovery,
    which increases communication and computation overhead. Hence, they are not appropriate
    for critical missions and time-sensitive applications.1, 3-6 In hybrid approaches,
    the local information about the network is saved by each node.1, 3, 4 These approaches
    attempt to identify the nodes whose failure can cause network partitioning, for
    example, finding cut vertices in the graph using DFS and assigning failure handlers
    (FH) with respect to these nodes.30, 31 In case of failure or network partitioning,
    immediate operations such as relocating leaf nodes are executed with the help
    of saved information to recover the network. These approaches are convenient for
    critical missions and time-sensitive applications.4-9 Relay-based approaches reconnect
    network partitions by deploying additional relay or mobile nodes. The centralized
    relay placement approach works well for some applications. Relay nodes are usually
    deployed close to network or in the center so that they can move toward their
    decided locations to reconnect network partitions.1, 3 Generally, it is assumed
    that relays can identify their locations and determine the presence of other nodes
    in the network partitions by utilizing cameras or sensors.25-29 This solution
    depends upon the information about the number of failed nodes and their location,
    the entire partitions'' count, the position of nodes in the partitions, and so
    forth. In dynamic environments, the optimal number of required relay nodes may
    change with time, resulting in a complex deployment process.4-9 1.1 UAV assistance
    paradigm Most of the solutions for network partition recovery, either self-healing
    based or relay-based, proposed in the literature depend on the assumption that
    the network is obstacle-free. However, an obstacle-free environment is not possible
    in real-life situations.11, 15-17 Hence, these approaches cannot be practically
    implemented in all applications. In the last few decades, UAVs or drones have
    been engaged in various applications such as industrial inspections, remote sensing,
    agriculture, military, disaster relief, and so forth.32-34 The primary purpose
    of UAVs'' use in different applications is their serviceability in rough environmental
    conditions and in the areas where ground nodes (robots or vehicles) cannot reach
    because of the presence of obstacles.29, 35-40 UAVs embedded with low-price and
    efficient transceivers, such as IEEE 802.11 and cellular networks, can be engaged
    in enhancing connectivity in wireless networks. They can benefit the networking
    domain in numerous ways, such as setting up an efficient system in the sky for
    consistent coordination with the ground devices, creating robust infrastructure
    for broken ground networks, and establishing the communication link between existing
    cellular and isolated networks/users.13 UAVs can work as base stations on either
    low or high altitudes to provide coverage. They can also facilitate communication
    by acting as relays between ground devices and networks. UAVs can collect and
    disseminate data in WSNs and support small networks such as the mobile ad hoc
    networks (MANETs), and the vehicular ad hoc networks (VANETs). These aerial vehicles
    are expected to revolutionize IoT and 5G communication networks. UAVs can assist
    ground devices with limited computing ability in data offloading, catching, and
    data processing.41, 42 Therefore, these advantages of UAVs can also be exploited
    for network partition recovery. Thus, our research is based on using UAVs as relay
    nodes to reconnect the disjoint partitions, as shown in Figure 1. FIGURE 1 Open
    in figure viewer PowerPoint UAV connecting network partitions. This paper proposes
    two centralized approaches, drone assisted partition recovery algorithm (DAPRA)
    and drone assisted detection and partition recovery algorithm (DADPRA), for network
    partition recovery. The advantage of the proposed approaches is the use of UAV
    as a relay node in restoring separate network partitions. UAVs are better than
    ground relay nodes because they provide connectivity even in harsh environments
    where ground nodes cannot reach them because of obstacles. The proposed algorithms
    are divided into three phases: Initialization, Detection, and Recovery. The initialization
    and detection phases are the same for both algorithms. In the initialization phase
    sink acquires information about the network nodes. The detection phase starts
    when the node fails, and the sink identifies whether this failure is network partitioning
    or not. The Recovery phase of DAPRA consists of detecting the failed cut-vertex
    node and sending UAV to its location for recovery. In DADPRA, UAV goes to the
    location of identified failed cut vertices, determines the actual failed cut vertex,
    and stays at its location to reestablish the connectivity. The remaining paper
    is described as follows: Section 3 provides the background study of the proposed
    solutions for network partition recovery. Section 6 explains the system model
    for the implementation of the proposed algorithm. Section 7 discusses the component-wise
    description of the proposed algorithm. The simulation studies are discussed in
    Section 16, and Section 17 provides the conclusion of the paper. 2 BACKGROUND
    STUDY Many researchers have proposed different approaches for connectivity restoration
    in the partitioned network. These approaches utilized concepts like relocation
    of network nodes, placing additional relay nodes, and advanced optimization techniques
    such as game theory and optimal control.3 Different objectives used in these approaches
    include minimization of (i) the number of messages, (ii) average tour length,
    (iii) the largest individual tour length, (iv) total travel distance, (v) deployed
    node count, (vi) energy consumed, (vii) hop count, and maximization of (i) coverage,
    (ii) average node degree. UAVs are benefiting wireless networks in numerous ways,
    like setting up an efficient system in the sky for consistent coordination with
    the ground devices, creating robust infrastructure for broken ground networks,
    and establishing the communication link between existing cellular and isolated
    networks/users.43 The following subsections concisely discuss the network partition
    recovery techniques and UAV-enabled wireless networks. 2.1 Partitioning recovery
    techniques Most reported recovery techniques interconnect the network by deploying
    additional nodes, moving available healthy nodes to establish connections, and
    employing data collectors to relay data between various partitions. Shriwastav
    and Ghose3 discussed that the node mobility based approaches could further be
    classified into (i) using stationary relay nodes and (ii) fusion of stationary
    relay and mobile data collector nodes. Senel et al.21 discussed the inter-actor
    connectivity to connect the partitioned sub-networks using an efficient distributed
    mechanism. The study proposed two objectives: (i) minimize distance traveled by
    the participating nodes, (ii) minimize the number of actor nodes used for recovery
    process. The proposed mechanism achieves both objectives simultaneously while
    not considering the change in topology and its effect on coverage. However, the
    study fails to work for more than two partitioned sub-networks. Akkaya et al.5,
    6 presented two algorithms to solve the connectivity problem in a partitioned
    network. These algorithms detect the possible partitions in the network resulting
    from cut-vertex node failure. It further relocates the movable nodes to restore
    the network. The first proposed algorithm distributed partition detection and
    recovery (PADRA) determines in advance whether the node will cause network partitioning
    or not. Like other node recovery algorithms, PADRA has some limitations, such
    as being unable to identify cut-vertex nodes in the network. The algorithm replaces
    the failed node according to the distance of neighbor nodes which results in huge
    replacements. As the algorithm assumes unnecessary cut-vertices, the communication
    overhead is large. Another proposed distributed algorithm (PADRA+) approach aims
    at reducing the distance traveled by the modes. It also has the advantage of determining
    the cut-vertex and non-cut-vertex nodes before failure. Zamanifar et al.7, 8 proposed
    Actor On Mobility (AOM), which is a new distributed approach for network restoration
    after partition by identifying the critical nodes in advance. The limitation of
    this approach is that there is no information provided about the termination of
    the algorithm, and there is no procedure for finding suitable failure handlers.
    Zhao and Wang9 proposed a coordination-assisted connectivity recovery approach
    (CCRA), which focuses on using fewer nodes to address the network partitioning
    problem. The approach decreases the pre-failure computation overhead by computing
    the cut-vertex nodes during failure. This solution is not energy efficient as
    it increases communication overhead during recovery. Kumar and Amgoth44 presented
    a Cluster-based Relay Placement (CRP) algorithm that finds the two closest partitions
    according to their centroids. After that, the boundary nodes of the partitions
    are connected from the convex hull of the selected partitions. This process repeats
    until the network becomes interconnected. Kumar et al.45 engaged mobile collectors
    for data ferrying among different nodes. The algorithm employs Delaunay Triangulation
    (DT) to find out the meeting points for deploying mobile nodes. Afterwards, the
    obstacle free path of the mobile nodes is constructed. Joshi and Younis11 addressed
    the issue of large-scale losses in the network using an approach that focuses
    on relocating nodes near the center of deployment (CoD). This autonomous repair
    algorithm (AuR) approach assumes the CoD in advance. AuR is centered around the
    idea of modified Coulomb''s law (attractive forces and repulsive forces). The
    localized recovery procedure of AuR depends on the relocation of immediate neighbor
    nodes. Ranga et al.12 address the issue of the partitioned network because of
    the failure of the cut-vertex node. The proposed distributed prioritized connectivity
    restoration algorithm (DPCRA) approach to restoring connectivity with minimum
    nodes. This hybrid approach allocates failure handlers to each cut-vertex node.
    In the case of network partitioning, these failure handlers perform the recovery
    process. Ranga et al.14, 15 identified the location of the relay node using the
    triplets of segments towards the center. This approach focused on deploying the
    relay nodes near the centroid of the triangle. Zear and Ranga46 proposed DPDRU
    algorithm to recover the network partitioned due to a single cut-vertex node failure.
    The algorithm employs network nodes to detect the failure of their neighboring
    node and report this failure to the sink. After getting the failure report, sink
    identifies whether this node failure has resulted in network partitioning. In
    the network partitioning scenario, sink directs UAV to reach the location of failed
    node and establish connectivity. Kumar et al.47 utilized machine learning algorithms
    to facilitate movement and connectivity restoration between partition segments
    using mobile relays. The algorithm considers the movement of other mobile agents
    and have ability to learn the complicated multiple agent coordination strategies.
    2.2 UAV-enabled wireless networks UAVs can support the ground networks in collecting
    and disseminating the data, caching, processing, and offloading. Huang et al.48
    focused on energy efficient UAV-assisted data accumulation from IoT devices. The
    proposed DEVIPS algorithm strives to locate the optimal number of stop points
    and their locations for positioning UAVs. DEVIPS optimizes the locations of stop
    points using Differential Evolution (DE), which avoids special crossover and mutation
    operators and employs 2-D search space for individuals. Diao et al.49 focused
    on enhancing the performance of multi-access edge computing (MEC) systems by employing
    multiple UAVs. The proposed approach targets trajectory optimization to assure
    equitable energy consumption (EC) for UAVs and user equipments (UEs). The proposed
    algorithm also ensures fairness in the system in terms of energy efficiency. Matsuda
    et al.50 presented UAV relay network topology where UAVs act as relays and forward
    the sensed data to designated ground stations. The UAVs consist of multiple directional
    antennas that adaptively select between orthogonal and Decode-and-Forward relaying
    methods for transmitting data. The throughput of the algorithm is assessed in
    stringent interference conditions. Liu et al.51 highlighted the inevitable transition
    from Internet of Things (IoT) to Internet of Everything networks (IoE) and the
    role of UAVs in such networks. This paper addresses the UAVs'' 3D placement and
    resource allocation challenges in IoT network, considering critical factors like
    balanced task allocation, signal interference and definite channel resources.
    Hence, the algorithm employs improved K-means approach for balancing tasks, matching
    algorithm to allocate subchannels, and an iterative method for optimizing UAV''s
    altitudes and transmission power of IoT devices. Li et al.52 focused on computational
    offloading in UAV-assisted MEC to minimize the UAV energy consumption by optimizing
    the UAV''s computational load, transmit power, and trajectory. The UAV acts as
    cloudlet to accumulate and process the tasks offloaded by ground devices. The
    algorithm decomposes the problem into multiple sub-problems for parallel and distributed
    computations. The optimization problem is resolved using successive convex approximation
    and Dinkelbach algorithms. In Reference 53 the UAVs are employed as wireless chargers
    for sensor nodes. The algorithm considers different factors including UAV''s power
    consumption during flight and hover, conversion loss and charging procedure from
    base station. The algorithm aims to maximize the total energy received by the
    sensor nodes and considers both 1-D AND 2-D wireless power transfer (WPT) systems
    to find the deployment strategy for UAV. You and Zhang54 employed UAV in urban
    environments to collect data from sensor nodes over a given time interval. The
    algorithm constructs a (LoS) model using data regression and combined simulation
    method. The UAV''s 3-D trajectory and data transmission scheduling of the sensor
    nodes are formulated to maximize the average data collection rate. Oubbati et
    al.55 addressed the deployment of UAVs in urban vehicular networks as relays to
    address the intermittent connectivity issues in vehicular networks. A deep reinforcement
    learning based DISCOUNT (Dispatch of UAVs for Urban VANETs) approach is presented
    that dispatches UAVs to act as long-term relays considering routing strategies,
    energy consumption and coverage. Al-Hilo et al.56 presented a content delivery
    approach for vehicles on road experiencing load or having inadequate communication
    infrastructure. The incoming vehicles on road request cached content from UAV,
    and UAVs'' content keeps on updating as the new vehicles arrive. The content delivery
    problem is devised as mixed integer non-linear (MINL) problem considering radio
    resource allotment, UAV''s trajectory and catching decisions. Zhou et al.57 focused
    on edge catching in UAVs-assisted radio access networks. The UAV base stations
    (UBS) serve users according to requested content irrespective of proximity. The
    caching technique is presented to improve the spectral efficiency, which categorizes
    the content into less popular and popular subsets. The popular subset is cached
    in all UBSs, and less popular file is placed at one UBS. 3 SYSTEM MODEL All the
    nodes in the WSAN are randomly deployed in various geographical locations and
    have adequate on-board energy. The WSAN is symbolized as a graph where each node
    (sensor, actor) is represented as a vertex and the graph is connected through
    wireless links established between the nodes within the transmission range . Every
    node is further classified into cut vertex and non-cut vertex. If the cut vertex
    fails, the network gets segmented into displaced segments, and if non-cut vertex
    fails, the network connectivity can still be maintained. Every node sends heartbeat
    messages to sink periodically; if there are missing heartbeat messages from a
    node within the pre-defined amount of time, it is considered failed. An example
    network used to illustrate the working of the proposed approach is shown in Figure
    2. There are a total of 25 nodes in the network, and one of them is the sink node
    which is marked as vertex 0 in the network graph. In this graph, 7, 8, 10, 14,
    24 are cut vertices, and the remaining others are non-cut vertices. The assumptions
    that have been taken in the system mode are: (1) Multiple nodes cannot fail at
    a time. (2) If one cut-vertex node fails, then no other node can fail during the
    recovery process. (3) Sink node cannot fail. (4) All nodes know about their location.
    FIGURE 2 Open in figure viewer PowerPoint Working of DAPRA algorithm. 4 DETAILED
    WORKING OF PROPOSED APPROACH The proposed algorithm is divided into three phases:
    Initialization, Partition Detection, and Recovery. Figure 2 and Figure 3 show
    the working of proposed DAPRA and DADPRA algorithms. The different phases of the
    proposed algorithm are illustrated below: FIGURE 3 Open in figure viewer PowerPoint
    Working of DADPRA algorithm. 4.1 Initialization phase Initially, during the network
    configuration process, every node transmits its information to one-hop neighbors,
    that is, the nodes that lie in its transmission radius. After receiving the messages
    from one-hop neighbors, every individual node forms a one-hop neighbor list. After
    that, the nodes send this neighbor list to sink node. Along with this list, every
    node sends additional information, such as , and location information in the form
    of . Now the sink node has complete information about every individual node, that
    is, , the location of the node, and its one-hop neighbors. Therefore it constructs
    a Network Configuration Table 1 (NCT), which consists of three entries: , . The
    sink node also organizes together with its one-hop neighbors in the form of an
    Adjacency list . The DFS algorithm58, 59 is then applied to this to find cut vertices.
    The leaf nodes of the DFS tree are not cut vertices. A node can be a cut vertex
    if it has any of the following two properties: The root node of the tree is cut
    vertex if it has two or more than two children.58, 59 Any internal vertex or node
    N in the DFS tree having one or more subtrees rooted at the child of N and that
    has no edge that climbs higher, which means connected to any ancestors of N is
    a cut vertex.58, 59 TABLE 1. UAV-enabled wireless networks. Ref Objective Contribution
    Optimization parameters UAV''s application Huang et al.48 Minimize EC of ground
    nodes and UAV Optimizes the number and locations UAV''s stop points 2D deployment
    of UAV UAV enabled data collection Diao et al.49 Minimize EC of UEs and UAVs Optimizes
    UAVs'' trajectories and offloading methods EC fairness among UAVs and UEs Multiple
    UAVs enabled edge computing Matsuda et al.50 UAV''s adaptive direction control
    UAVs set antenna direction, according to location of UAVs and relaying method
    Throughput UAV enabled relaying Liu et al.51 Minimize sum-transmit power of ground
    devices Bandwidth allocation to avoid interference, Optimize UAV''s altitude and
    transmission power of devices Resource allocation 3-D placement of UAVs in IoT
    networks UAV collects data from ground IoT devices Li et al.52 Maximizing UAV''s
    energy efficiency UAV trajectory is designed based on the estimation of user node
    mobility Offloading computational tasks UAV enabled edge computing Yan and Yang53
    Maximize sum-energy received by sensors Deployment strategy for UAV is designed
    according 1-D and 2-D wireless charging scenarios UAV''s power consumption, conversion
    loss and charging procedure from base station UAV enabled MEC You and Zhang54
    Maximize average data accumulation rate Hybrid offline-online method to determine
    UAV''s trajectory, flying speed and communication scheduling UAV''s 3-D trajectory
    and data transmission scheduling of the sensor nodes UAV enabled data collection
    Oubbati et al.55 Minimize energy consumption Dispatch organized UAVs'' group for
    long-term relaying Optimze coverage and routing strategies UAV enabled relaying
    in urban vehicular networks Al-Hilo et al.56 Maximize energy efficiency The content
    delivery issue is formulated as MINL problem Radio resource allotment, UAV''s
    trajectory and catching decisions UAV enabled content delivery Zhou et al.57 Optimize
    spectral efficiency The popular content is placed at all UBSs and less popular
    content is cached at one UBS Established relationship between UBS and user equipment
    (UE) density. Edge catching in UAVs-assisted radio access networks A separate
    array in the sink node is used to store the of nodes, which are declared as cut
    vertices by DFS called . Therefore, according to the network in Figure 4 the consists
    of vertices 7, 8, 10, 14, 24. This phase involves the construction of adjacency
    list, which has time complexity and determining cut vertices using DFS, which
    has time complexity . Therefore, the total complexity of this process is . Here
    refers to total nodes in the network and E refers to total connections between
    the nodes. FIGURE 4 Open in figure viewer PowerPoint Example network.46 4.2 Detection
    phase The network nodes assure the sink node about being functional by sending
    HEARTBEAT messages. If there are missing heartbeats from some nodes, then sink
    acknowledges the failure of these nodes and stores the of these nodes in a separate
    array, . The sink node then starts the detection process. The detection process
    is used to find whether this is a simple node failure or network partition because
    of cut-vertex node failure. The pseudo-code for the initialization and detection
    process is illustrated in Algorithm 1. In initialization procedure, lines 1–5
    show the initialization process where sink acquires information about the network.
    After that PROCEDURE AT SINK NODE begins, and lines, 1–7 in Algorithm 1 show that
    sink constructs NCT and and identifies cut vertices and non-cut vertices after
    receiving HEARTBEAT messages from the sink node. Lines 8–15 in Algorithm 1 are
    used to detect the failure. Lines 16–23 in Algorithm 1 are used to detect whether
    the failed node is cut-vertex, and Lines 24–28 are used to find whether recovery
    is required. Algorithm 1. Network initialization and partition detection 1. for
    i = 1 to 2.   Send HEARTBEAT messages to nodes in the communication range. 3.   Construct
    one-hop neighbor list from received HEARTBEATS. 4.   Send one-hop neighbor list
    and location information to sink. 5. end for        PROCEDURE AT SINK NODE 1. for
    i = 1 to N 2.   Receive HEARTBEAT messages from network nodes . 3. end for 4. Construct
    Network Configuration Table (NCT). 5. Construct Adjacency list 6. Apply DFS on
    Aij to identify cut-vertices and non-cut vertices. 7. Constructs CUT_ARRAY consisting
    cut-vertices. 8. for i = 1 to 9.   Receive HEARTBEAT messages from . 10.   if
    (missing HEARTBEAT message from ) 11. 12. 13. 14.   end if 15 end for 16. for
    i = 1 to 17.   for j = 1 to 18.    if 19. 20 21    end if 22.    end for 23. end
    for 24. if( is empty) 25.   No need for recovery 26. else 27.   Call RECOVERY_DAPRA
    or RECOVERY_DADPRA 28. end if Two cases that originate from the detection process
    are: Case 1.The failure of cut vertex also causes missing HEARTBEAT messages from
    other nodes because those nodes can be in the partition in which the sink node
    is not present. Hence they will appear as the failed node to the sink node. The
    sink node then compares with . The result is stored in . If the comparison result
    contains a single cut vertex, then the sink confirms the network partition and
    calls the recovery procedure. This case is applicable to nodes 7, 8, 10. If either
    of them fails, the contains only one cut-vertex, and the recovery procedure will
    be called for that vertex. In case of the failure of node 8, the consists of nodes
    2, 4, 8. Therefore, the recovery will be performed for the failure of node 8.
    If a node other than the cut vertex is failed, then there is no network partitioning,
    and the recovery process is not required. Case 2.The cut vertex, when it fails,
    creates partitions that contain other cut vertices of the graph. These cut vertices
    seem failed to the sink node because they are in the partitions in which the sink
    node is not present. Although these cut vertices are not failed, the failure of
    single cut vertex results in missing HEARTBEAT messages from them. When the sink
    node compares with , the result is stored in . If consists of multiple cut vertices,
    then it becomes difficult at the sink node to identify the actual failed cut vertex.
    As given in Figure 5, the failure of node 24 has divided the network into three
    partitions. One partition contains the sink node, and cut vertices (8, 14, 7)
    are present in the other two partitions. Therefore the contains nodes: 2, 4, 7,
    8, 14, 15, 24 and when it is compared with (7, 8, 10, 14, 24), the result contains
    four cut-vertices, that is, 7, 8, 14, 24. Hence it becomes difficult at the sink
    node to identify which of them is failed actually. This phase involves the detection
    of failures by the sink node and comparing the list of non-responding nodes with
    the identified cut vertices. Therefore, in the worst case, the complexity of this
    process is FIGURE 5 Open in figure viewer PowerPoint Partitioned network. 4.3
    Recovery phase To overcome this problem of detection, we have proposed two approaches:
    DAPRA and Drone DADPRA. The details of the proposed approaches for recovery are
    explained below: 4.3.1 Drone assisted partition recovery algorithm In DAPRA sink
    node attempts to identify the actual failed cut vertex from . If the sink node
    has received HEARTBEAT message from any of the one-hop neighbors of the cut-vertex
    then is the actual failed cut vertex, and other cut vertices with missing HEARTBEAT
    messages at sink node are present in different partitions. For e.g., sink can
    identify the following information from : One-hop neighbors of 7: 14, 15 One-hop
    neighbors of 8: 4, 2, 24 One-hop neighbors of 14: 7, 24 One-hop neighbors of 24:
    16, 20, 14, 1, 9, 8 The above lists are compared with the stored : 2, 4, 7, 8,
    14, 15, 24. One-hop neighbors of 7, that is, 14, 15, are present in due to missing
    HEARTBEATS. Therefore, 7 is not the actual failed cut vertex, and it is present
    in another partition. Similarly, the one-hop neighbors of 8 (4, 2, 24) and 14
    (7, 24) are in the . Hence it can be inferred that they are present in different
    partitions. Some of the neighbors, such as 16, 20, 1, 9 of 24, are not present
    in . Therefore 24 is the actual failed cut-vertex that has caused partitions.
    Therefore sink node sends UAV to the location of 24 to restore the connectivity,
    as depicted in Figure 6. The pseudo-code of the DAPRA algorithm is described in
    Algorithm 2. Lines 1 to 8 are used to find the failed cut-vertex node, whose neighbor
    is not in the . After identifying the failed cut-vertex node, the sink node sends
    UAV to its location. This phase analyses the one-hop neighbor list of the nodes.
    Therefore, the worst case complexity of this process is . FIGURE 6 Open in figure
    viewer PowerPoint UAV restoring network partitions. Algorithm 2. RECOVERY_DAPRA
    1. for i = 1 to 2.  for j = 1 to 3.   if 4.    Actual Failed = 5.    Send UAV
    to the location of 6.   end if 7.  end for 8. end for This approach cannot be
    extended further because if one-hop neighbors of the failed cut-vertex also fail
    during recovery or before recovery, sink cannot determine the actual failed node
    causing partitions. Hence, we have proposed another improved algorithm (DADPRA)
    to recover the network partitions resulting from single cut-vertex node failure.
    4.3.2 Drone assisted detection and partition recovery algorithm In DADPRA, identification
    of actual cut vertex node is done using UAV instead of the sink node. This algorithm
    also requires network nodes to send HEARTBEAT messages to their neighbors as they
    do for the sink node. In this approach, UAV moves to the locations of failed cut
    vertices which are obtained from the Network Configuration Table 1 (NCT). In order
    to reduce the distance traveled by the drone, the sink node sorts the cut vertices
    in FAILED_CUT_ARRAY in the increasing order of their distances from the location
    of UAV. Algorithm 3. RECOVERY_DADPRA 1. for i = 1 to 2. Where : locations of UAV
    3. end for 4. Sort in increasing order of 5. for i = 1 to 6.  Move UAV to location
    of 7.  for i = 1 to 8.   if(HEARTBEAT messages received from ) 9.    Remove from
    10.  else 11. is actual failed node. 12.    Deploy UAV at the location of 13.   end
    if 14.  end for 15. end for The UAV moves to the least distant cut vertex first,
    then to the second least distant cut vertex, and so on. Therefore when UAV reaches
    its first location and receives a response, that is, HEARTBEAT messages from the
    cut vertex at that location, then that cut-vertex is not failed and it will get
    removed from FAILED_CUT_ARRAY. When UAV reaches the location of failed cut-vertex
    it also checks for other cut-vertices in FAILED_CUT_ARRAY. If it receives the
    periodic HEARTBEAT messages from these cut vertices, which are its transmission
    range, then those vertices are also removed from the FAILED_CUT_ARRAY. The UAV
    then moves to the location of the next cut vertex in FAILED_CUT_ARRAY. In this
    way, the redundant movements of UAV are also minimized. The Pseudo-code of DADPRA
    algorithm is illustrated in Algorithm 3. Lines 1–4 of Algorithm 3 are used to
    find and sort the distance between the UAV and the identified failed cut vertices
    in increasing order. The cut-vertices are saved in FAILED_CUT_ARRAY according
    to the increasing order of distances. Lines 7–15 of Algorithm 3 describe the process
    of moving the drone to the location of identified failed cut vertices and determining
    the actual failed cut vertex. Line 12 describes the process of deploying the UAV
    at the location of failed cut-vertex to restore connectivity. In this phase, the
    UAV checks all non-responding cut-vertices. Therefore the complexity of this process
    is . Let us assume the sorted order of failed cut vertices from Figure 4 in is
    7, 14, 24, 8. According to the , UAV moves to the location of 7 first and if it
    receives the periodic HEARTBEAT message from 7 then 7 will get removed from .
    14 is in the one-hop neighbor of 7. If UAV also receives HEARTBEAT message from
    14 then 14 will also get removed from . This process saves UAV from the redundant
    movement to the location of cut-vertex14. The UAV then moves to the location of
    the next failed cut-vertex, that is, 24 and after reaching there if the HEARTBEAT
    message from 24 is not received, then it declares it as actual failed cut-vertex
    node. Now after identifying the failed node, UAV remains at the location of 24
    and reconnects the disjoint segments. In this phase, the sink node confirms the
    recovery if it gets message from the remaining healthy nodes. Therefore, the complexity
    of this process is . The overall complexity of the proposed algorithm is . 5 SIMULATION
    RESULTS AND ANALYSIS The simulation of the proposed algorithms has been carried
    out in Omnetpp 5.4.1. The algorithms have been implemented in the application
    layer of INET 4.0 project in Omnetpp 5.4.1. The parameters utilized for experimental
    analysis are given in Table 2. The nodes are deployed in an area of 1000 m × 1000 m
    randomly. The algorithm has been tested for different topologies consisting of
    nodes between 10 and 100. The transmission range of these nodes is also varied
    between 50 and 200. The results of every individual experiment are obtained after
    getting averaged for 20 trails. TABLE 2. Simulation parameters. Parameter Value
    Simulation region 1000 m × 1000 m Nodes 10–100 Communication range 50–200 m Wireless
    channel Wireless LAN IEEE 802.11b Radio medium UnitDiskRadioMedium Packet size
    512 bytes Routing protocol Ad hoc on-demand distance vector (AODV) Mobility model
    for UAV Linear mobility UAV speed 2–25 ms−1 Simulation time 1000 s The sink node
    has been deployed in the center of the area for all topologies of nodes. The UAV
    which acts as a relay node is initially deployed near the sink so that the sink
    can easily give a command to the UAV in case of network partitioning. The algorithm
    starts with the initial deployment phase, where the sink node obtains all the
    network information. In the case of a node failure, the detection phase starts,
    which checks the designation of the failed node that it is a cut-vertex or non-cut-vertex.
    If the failed node is cut-vertex, then the algorithm moves to the recovery phase
    which is done using UAV. The comparative analysis of proposed algorithms cannot
    be done with solutions proposed in the literature for network partition recovery
    because they do not relate to our proposed approaches. Therefore we have performed
    the comparative analysis of proposed algorithms DAPRA and DADPRA based on parameters
    such as recovery and detection time, UAV''s travel distance, and the total messages
    transmitted. The details of the experimental results and their analysis with respect
    to these parameters are described below. The proposed algorithm is compared with
    the DPDRU algorithm proposed in Reference 46. DPDRU algorithm engages network
    nodes to detect node failure and report this to the sink node. Based on this information,
    the sink node then determines whether this node failure has resulted in network
    partitioning or not. In case of network partitioning, the sink node directs UAV
    to reach at the location of failed node and establish network connectivity. The
    details of the experimental results and their analysis with respect to these parameters
    are described below. Detection Time (DT): Network partition detection is an important
    part of partition recovery from failures. The DT is defined as the time interval
    between the time at which the cut-vertex node failed and the time at which the
    sink identifies the node failure. We have considered detection time as an important
    parameter, and the performance of the DAPRA, DADPRA, and DPDRU is evaluated on
    the basis of DT. The detection time results are obtained for different network
    topologies by varying the number of nodes. Figure 7. shows the results of DT for
    both DAPRA and DADPRA. The DT results of the DPDRU algorithm are more than the
    DT results for DPDRU and DADPRA algorithms. DT results are the same for DAPRA
    and DADPRA because the detection phase is the same for both algorithms. The DT
    time values are same up to 40 nodes, and after that, they increase with the increasing
    number of nodes. DT also depends on another parameter, that is, the time period
    after which the nodes transmit heartbeat messages to the sink node, which can
    vary for different applications. For real-time applications, should be less, however,
    for other applications which do not require real-time information exchange can
    be high. Figure 8 shows the simulation results of detection time with respect
    to different values of . The results are obtained for fixed 25 nodes by failing
    nodes randomly at different times and averaging the final detection time. The
    detection time increases as the value of increases, as shown in Figure 8. From
    simulation studies, we analyze that if a node fails just after sending the message,
    then the algorithm takes more DT because it has to wait for whole period. Therefore,
    node failure can be detected in the next round of transmission of HEARTBEAT messages.
    However, if a node fails in between period then failure can be detected just after
    this time when the nodes start transmitting, which results in less DT. FIGURE
    7 Open in figure viewer PowerPoint Detection time w.r.t number of nodes. FIGURE
    8 Open in figure viewer PowerPoint Detection time w.r.t tsend. Distance Traveled
    by UAV (DTU): This distance metric determines the total DTU for network recovery
    in DAPRA and the total DTU for failed node detection and network recovery in DADPRA.
    The distance metric also signifies the energy dissipated during the physical motion
    of UAV. Figure 9. describes the distance traveled by UAV to recover network partitions.
    For DAPRA and DPDRU algorithms, the distance traveled by UAV grows with the increasing
    number of nodes, as shown in Figure 9. For DADPRA the distance traveled depends
    upon the number of cut-vertices the UAV visits in order to find the actual failed
    cut vertex, which depends on the network topology. Therefore, in Figure 9, the
    distance traveled by UAV in DADPRA for the value of 30 and 70 number of nodes
    is greater as compared to DAPRA and DPDRU because the UAV has to visit more than
    one cut-vertices in order to identify the failed cut vertex. FIGURE 9 Open in
    figure viewer PowerPoint Distance traveled by UAV. Number of messages transmitted
    (NMT): This metric is used to analyze the message overhead required for approaches
    DAPRA and DADPRA. The proposed approaches do not require nodes to exchange extra
    messages for recovery apart from the messages transmitted during the normal network
    operation. However, the working of both approaches is different. Therefore, the
    paper evaluates the algorithms based on the number of messages transmitted during
    recovery. Figure 10 depicts the number of messages transmitted in DAPRA and DADPRA
    during network recovery. Figure 10 illustrates that the value for NMT is higher
    for DADPRA as compared to DAPRA. The reason behind the higher values is that the
    nodes also send HEARTBEAT messages to their one-hop neighbors, which helps UAV
    to determine the failed cut-vertex node for network recovery. FIGURE 10 Open in
    figure viewer PowerPoint NMT during recovery. Recovery time (RT): Recovery time
    is a very important parameter that is equal to the total time at which the network
    is completely recovered. In our algorithm, the recovery time consists of the time
    at which the sink node or UAV determines the actual failed node, time taken by
    the UAV to reach the location of the failed node, and reconnect the partitioned
    network. All these time periods are important for network reconnection. However,
    the recovery time mostly depends on the time at which UAV reaches the location
    of the failed node, which further depends on the speed of UAV and distance between
    the failed node and UAV. Figure 11 demonstrates the efficiency of DAPRA, DADPRA,
    and DPDRU algorithms according to the recovery time. The velocity of UAV used
    for this analysis is 10 m/s. The DPDRU algorithm requires minimum RT for reestablishing
    the network connection, and DADPRA requires maximum RT, especially for 30 and
    60 nodes. We can compare the simulation results of recovery time with distance
    traveled in Figure 9 as the speed of the UAV is constant. For DAPRA and DADPRA,
    the results are different for 70 and 60 nodes, respectively. This difference can
    be because of the time taken by the UAV to reconnect the network partitions, which
    depends on the network topology. Figure 12 shows the variations in recovery time
    with respect to the velocity of UAV. The recovery time decreases with an increase
    in the velocity of UAV. FIGURE 11 Open in figure viewer PowerPoint RT w.r.t no
    of nodes. FIGURE 12 Open in figure viewer PowerPoint RT w.r.t velocity of UAV.
    6 CONCLUSION This paper has addressed the requirement of restoring connectivity
    in portioned WSANs. Two algorithms have been proposed for network partition recovery
    using UAV. DAPRA and DADPRA. The initialization and partition detection phases
    are the same for both algorithms. They differ in the recovery procedure. In DAPRA
    sink node identifies the failed node and sends UAV to its location, whereas in
    DADPRA sink node sends UAV and UAV identifies the failed node and reconnects the
    partitions. The efficiency of the proposed approaches is evaluated according to
    the Detection time, Recovery time, number of messages transmitted, and distance
    traveled by UAV. The proposed algorithms are also compared with the DPDRU algorithm.
    Simulation results illustrate that the proposed algorithm reconnects the network
    with the help of UAV efficiently and performs better in terms of detection time.
    The algorithms proposed in the paper do not incorporate the complexities related
    to employing UAV for network recovery, such as path planning, coordination with
    the ground nodes, obstacle avoidance, and area exploration mechanisms. Moreover,
    these algorithms do not establish fault-tolerant topology, a single cut-vertex
    node failure can re-partition the network again. In the future, we will extend
    our proposed algorithm DADPRA, to recover network partitions resulting from multiple
    node failures. Our future work will also include working on an efficient relay
    placement algorithm for connectivity restoration using UAVs as relay nodes. Open
    Research REFERENCES Early View Online Version of Record before inclusion in an
    issue e8048 Figures References Related Information Recommended Unmanned Aerial
    Vehicle (UAV) Mengxiang Li,  Liang Tang International Encyclopedia of Geography:
    People, the Earth, Environment and Technology, [1] Practices of Unmanned Aerial
    Vehicle (UAV) for Security Intelligence Swarnjeet Kaur,  Kulwant Singh,  Amanpreet
    Singh Unmanned Aerial Vehicles for Internet of Things (IoT): Concepts, Techniques,
    and Applications, [1] Potentials of Network‐Based Unmanned Aerial Vehicles P.
    K. Garg Cloud and IoT‐Based Vehicular Ad Hoc Networks, [1] Processing‐in‐memory
    based multilateration localization in wireless sensor networks using memristor
    crossbar arrays B. Mohammed Siyad,  Ramasundaram Mohan Concurrency and Computation:
    Practice and Experience Parameter instance learning with enhanced vision transformers
    for aerial person re‐identification Houfu Peng,  Xing Lu,  Lili Xu,  Daoxun Xia,  Xiaoyao
    Xie Concurrency and Computation: Practice and Experience Download PDF Additional
    links ABOUT WILEY ONLINE LIBRARY Privacy Policy Terms of Use About Cookies Manage
    Cookies Accessibility Wiley Research DE&I Statement and Publishing Policies Developing
    World Access HELP & SUPPORT Contact Us Training and Support DMCA & Reporting Piracy
    OPPORTUNITIES Subscription Agents Advertisers & Corporate Partners CONNECT WITH
    WILEY The Wiley Network Wiley Press Room Copyright © 1999-2024 John Wiley & Sons,
    Inc or related companies. All rights reserved, including rights for text and data
    mining and training of artificial technologies or similar technologies."'
  inline_citation: '>'
  journal: 'Concurrency and Computation: Practice and Experience'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Network partition detection and recovery with the integration of unmanned
    aerial vehicle
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Romera A.
  - Parry G.
  - Turner J.
  - Espig M.
  - Rogerson M.
  - Shah M.
  citation_count: '0'
  description: Commercial farmers are under increasing pressure to collect data for
    decision-making, regulatory compliance, and reporting down the supply chains.
    These data demands are intensifying, as societal pressures grow for greater sustainability,
    food safety, and accountability. While manual data collection is common, the process
    is increasingly automated using sensors. Services frequently employ specific interfaces,
    and collected data is recorded into many, often proprietary databases, limiting
    interoperability. The result is overwhelming complexity for farmers, duplication
    of effort, missed opportunities to access and compare different datasets, and
    potential regulatory and competitive failings. Tensions exist between the business
    models of agricultural service providers and the farmers they support. These need
    to be surfaced and addressed if the sector is to fully benefit from digitalization.
    Web3.0 technologies and protocols – in particular distributed systems – may offer
    some opportunities as they provide data interoperability, tools to address data
    ownership issues, edge computing, and decentralized data. With illustrative case
    examples from New Zealand farms, this chapter identifies some of the key barriers
    that need to be addressed and critically discusses how digital innovation and
    adoption may be accelerated in farming systems.
  doi: 10.1007/978-3-031-47215-2_1
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Sustainable Engineering pp 3–20Cite
    as Home Sustainable Engineering Chapter Digitalization for Sustainable Agriculture:
    Enabling Farm Digitalization Through Decentralized Control and Ownership Alvaro
    Romera, Glenn Parry, James Turner, Martin Espig, Michael Rogerson & Munir Shah  Chapter
    First Online: 07 February 2024 158 Accesses Part of the book series: Green Energy
    and Technology ((GREEN)) The original version of the chapter has been revised.
    A correction to this chapter can be found at https://doi.org/10.1007/978-3-031-47215-2_30
    Abstract Commercial farmers are under increasing pressure to collect data for
    decision-making, regulatory compliance, and reporting down the supply chains.
    These data demands are intensifying, as societal pressures grow for greater sustainability,
    food safety, and accountability. While manual data collection is common, the process
    is increasingly automated using sensors. Services frequently employ specific interfaces,
    and collected data is recorded into many, often proprietary databases, limiting
    interoperability. The result is overwhelming complexity for farmers, duplication
    of effort, missed opportunities to access and compare different datasets, and
    potential regulatory and competitive failings. Tensions exist between the business
    models of agricultural service providers and the farmers they support. These need
    to be surfaced and addressed if the sector is to fully benefit from digitalization.
    Web3.0 technologies and protocols – in particular distributed systems – may offer
    some opportunities as they provide data interoperability, tools to address data
    ownership issues, edge computing, and decentralized data. With illustrative case
    examples from New Zealand farms, this chapter identifies some of the key barriers
    that need to be addressed and critically discusses how digital innovation and
    adoption may be accelerated in farming systems. Keywords Digital technology Agriculture
    Interoperability Decentralization Web3.0 Access provided by University of Nebraska-Lincoln.
    Download chapter PDF 1 Introduction Agricultural digitalization is often promoted
    in terms of enabling intensified on-farm production, improved eco-efficiency,
    and profitability gains, but digital technologies also have the potential to support
    the broader sustainable development of agri-food systems. Multiple authors have
    described the various ways in which digitalization could benefit efforts to sustainably
    transform farming practices (Mondejar et al. 2021). Even though we do not automatically
    equate digitalization to promoting sustainable agriculture (see, e.g., Fleming
    et al. 2018, 2021; Jakku et al. 2023; Lioutas et al. 2021), we recognize the role
    digital technologies could play in realizing relevant sustainable development
    goals. Among the promises of smart agriculture or Agriculture 4.0 is a future
    in which robots autonomously perform most of the farm tasks (see, e.g., da Silveira
    et al. 2021). Farmers would manage their farms from the comfort of their office,
    with a great deal of decision-making done by artificial intelligence (AI) algorithms.
    Such algorithms would operate using big data generated by sensors, Internet of
    Things (IoT) devices, satellites, and drones, which monitor all aspects of the
    farm system. The much greater precision and accuracy that these systems afford
    could make farming more environmentally sustainable, efficient, and profitable
    (Lajoie-O''Malley et al. 2020; Shepherd et al. 2020). Rural communities could
    be more prosperous as a result. This imagined future has the potential to generate
    a lot of data about a farm and the supply chains within which it is located (Wolfert
    et al. 2017). This provides an opportunity for farmers to respond effectively
    to the increasing pressure to collect data for supporting on-farm decision-making,
    regulatory compliance, and reporting to downstream supply chain partners. Consumers
    also benefit in this imagined future. Food would be safer due to the more precise
    and targeted use of agrichemicals and the reduction of food safety risks. Data
    would flow along supply chains, enabling the accurate fulfillment of consumer
    needs. Waste would then be virtually eliminated, which together with higher yields
    that these technologies enable may help to address some global food security problems.
    Full transparency of the production system would give consumers greater certainty
    about the way their food is produced, allowing them to make informed choices related
    to the sustainability and health qualities of the products they buy. Or at least
    that is the promised future. This chapter will use illustrative case examples
    from New Zealand farms to critically reflect on these envisioned futures and discuss
    how the adoption of digital innovation in farm systems may be accelerated in ways
    that equally create value for all actors across the agri-food supply chain, in
    particular farmers. We identify key barriers that need to be addressed in doing
    so. New Zealand offers a useful context as it is considered to be a digital leader
    (Chakravorti and Chaturvedi 2017) and is actively seeking to advance the agricultural
    technology sector (e.g., AgriTech Industry Transformation Plan (Ministry of Business,
    Innovation and Employment 2020)). 2 Future Vision Digital technologies are increasingly
    incorporated across modern farms around the world. This includes software and
    hardware. An increasing number of farms are connected to the Internet, particularly
    in developed countries, but also in developing nations. Farmers use a variety
    of software products daily to help them with data recording and to assist in their
    decision-making. For that, they use computers, tablets, or mobile phones. Farm
    machinery, like tractors, harvesters, and spreaders, are equipped with increasingly
    sophisticated technologies, such as vehicle health and usage monitoring systems
    (HUMS) or ground radar and global positioning systems (GPS), and they generate
    high volumes of data. Virtual fences can be used to herd cows on the field and
    move them around the farm, all from a computer or smartphone. Sensors in milk
    vats monitor temperature, volume, and milking times, and the information is useful
    to farmers as well as processors who collect the milk. All of these data offer
    potential value to not only the technology providers and users but multiple decision-makers
    connected to on-farm operations, including farm managers, input suppliers, agricultural
    processors, marketers, retailers, consumers, and regulatory and policy actors
    (van der Burg et al. 2019; Wolfert et al. 2017). For benefits to be realized by
    wider decision-makers, ideally all these digital devices would be interoperable
    and data shared among decision-makers (Wolfert et al. 2023). That is, data collected
    or generated by any of them could be readily utilized by any other. Those who
    need the information could be given appropriate access to it without double handling
    of data or requiring complex information handling procedures. Whenever possible,
    data processing will be automated through efficient pipelines, for example, to
    generate reports or timely insights to support decision-making. Furthermore, data
    collected by many farmers, perhaps from an entire region, nation, or even globally,
    could be integrated, shared, and utilized for public as well as private good.
    In sum, as in other sectors of the economy, agricultural data would become a valuable
    commodity because it generates value beyond the person or firm who collected it
    originally. 3 The Current State of Digitalization in New Zealand Farm Systems
    The future vision portrayed in the introduction has not yet arrived, at least
    not for open-field farm systems, which produce by far most of the food consumed
    worldwide today. Some of the propositions may not be viable, or even desirable.
    Indeed, while many authors claim that digital agriculture will deliver all those
    benefits, it is worth noting that some authors have critically reflected on the
    potential risks and benefits of Agriculture 4.0 (e.g. Eastwood et al. 2023; Jakku
    et al. 2023). So, what would be a more realistic expectation for a nearer term?
    A high degree of on-farm digitalization, with seamless interoperability between
    technologies, could enable farmers to extract maximum benefits from data. Well-functioning
    digital systems might also assist them in responding to growing societal demands
    for greater sustainability, food safety, and accountability. Such techno-optimistic
    framings dominate the discourses around the envisioned futures, and emerging realities,
    of agricultural digitalization and corresponding venture capital models of investment
    (Barrett and Rose 2022; Espig et al. 2022; Fielke et al. 2022; Klerkx and Rose
    2020). At the same time, however, the value proposition of digital agricultural
    technologies has been juxtaposed to potential negative impacts associated with
    on-farm practice changes and far-reaching societal transformations. This has prompted
    the notion of “digital disruptions” to describe the substantial change processes
    associated with digital innovation (Cook et al. 2022; Eastwood et al. 2019; Jakku
    et al. 2023). Despite gradual steps toward digitalization and its promising possibilities,
    digital technologies often still only support some aspects of on-farm operations
    and supply chain integration, with varying degrees of interconnectivity and interoperability.
    This partial application and fragmented data flows between systems limit the perceived
    and actual value offered by digital technologies. Concurrently, ongoing debates
    concerning data ownership, trust, competing business models, and equitable distribution
    of benefits have hampered digitalization efforts (Fleming et al. 2018; Jakku et
    al. 2019; Shepherd et al. 2020). Building on these insights, we outline the current
    situation of three distinct New Zealand farm systems. We aim to demonstrate that,
    rather than simply being failures to realize the possibilities of digitalization,
    the partial utilization of digital technologies tends to be rooted in practical
    challenges and broader sociocultural adoption barriers. These need to be addressed
    to unlock the proposed value of digital transformations in a responsible and socially
    beneficial manner (Bronson 2019; Eastwood et al. 2023; Espig et al. 2022; Jakku
    et al. 2023). 3.1 Farm 1: Small Sheep Farm Derrick Footnote 1 is in his 60s and
    a livestock farmer as well as quality assurance auditor with over 45 years’ experience
    in the meat sector. While still employed as an auditor, he operates a 40-hectare
    sheep farm on New Zealand’s South Island, largely by himself, with occasional
    help from his wife. They run around 300 breeding ewes and finish their own lambs.
    The farm is stocked conservatively to limit the workload as Derrick got older.
    He acknowledges that the farm operation is relatively low-tech and uncomplicated,
    with a simple animal health plan and only modest agrichemical inputs that are
    mainly recorded in a manual diary. Having no employees, contractors are brought
    in for cropping their winter feed, fertilizer applications, and spraying of crop
    protection chemicals. In some cases, contractors share data recorded on their
    tractors via a flash drive, but Derrick often notes applied agrichemicals manually
    in his diary. He is aware that this is a rather traditional way of recording farm
    data: I’m still a bit of a diary man. I’ve kept a diary forever and referred back
    to those notes through the diary, year in and year out … [A]ll of that stuff that’s
    required through the recording and the assurance program is in those diaries.
    I’m just old-school in the way that I’m recording and doing things here, because
    it’s quite a simple operation. Continuing to use diaries makes Derrick feel that
    he can easily keep track of farm operations, although he sees the potential benefits
    of available recording and decision support software. For example, proof of placement
    for applied agrichemicals can be recorded through platforms such as FarmIQ, a
    farm management software, or TracMap, a GPS guidance and precision management
    system. In his view, these software tools will have to be used by all New Zealand
    livestock farmers in the future. To maximize the value of digital technologies
    for his business, Derrick would like to have an easy way to capture key livestock
    data in one place, such as linking batch numbers, expiry dates on agrichemicals,
    withholding periods, safe dates for slaughter, or the dates an animal is drenched
    or receives treatments. This would reduce the likelihood of crucial information
    getting lost. Suitable software could also assist with agrichemical records. At
    the moment, Derrick manually monitors on-farm agrichemical stocks and replenishes
    them as needed, with current quality assurance criteria only requiring farmers
    to keep a register of original product containers and note when these have been
    used. Having a system to digitalize this process and syncing records in a centralized
    location would be a game changer. As Derrick notes: [J]ust a way of linking that
    data from the devices or whatever back to a central location or a PC, … it doesn’t
    always happen. But if it’s some sort of an automated system whereby they [farmers]
    enter in that program on their smartphone, it’s automatically going to the home
    PC or the tablet, as soon as they’ve coverage, then that works quite well. But
    otherwise, it tends to sit on their devices and then come audit time, they’re
    all trying to drag it back out. However, he acknowledges that fully realizing
    the potential value of such software would require good training and support for
    farmers. For smaller farms like him, associated capital and operational expenditures
    are also relatively large compared to their operating budgets. 3.2 Farm 2: Mixed
    Crop and Livestock Farm Rod is a 57-year-old farmer who together with his wife
    operates a 450-hectare, fully irrigated mixed crop and livestock farm in the Canterbury
    region on New Zealand’s South Island. Like many others in the area, they grow
    a diverse mixture of cash crops, ranging from cereals as their mainstay to seed
    crops (ryegrass, clover, brassicas, etc.), and various vegetables. Crop rotations
    are relatively flexible, allowing them to respond to changing market trends. Going
    into the winter months, they also bring in up to 6000 lambs for grazing. The livestock
    fattening program accounts for about 30% of farm income. Rod uses a range of digital
    technologies and software tools to support his operations. He programmed tractor
    computers to record the seed varieties sown on each paddock. While the tractors
    run on software by the American company Trimble, a sprayer he bought secondhand
    only supports Topcon software. He decided to keep both setups rather than configure
    a new spraying unit or tractor software. Additionally, his irrigation wells contain
    data loggers to record water usage as required in his irrigation permit consent.
    To record core cropping production data, such as agrichemical inputs, and activities,
    Rod uses the ProductionWise software by the Foundation for Arable Research, a
    levy-funded industry good body. The software also allows him to meet quality assurance
    requirements, for instance, by showing proof of placement of crop protection chemicals
    to supply chain partners, and it features an automated inventory system that removes
    agrichemical stocks once applications are recorded. The same software is used
    for the family’s farm planning, for instance, to quickly calculate gross margins
    and review historical crop performance data. ProductionWise is Rod’s main recording
    and decision support software, but he further records nutrient inputs (e.g., nitrogen
    fertilizers) in the OverseerFM software for regulatory compliance and auditing.
    While these digital technologies and tools certainly support Rod’s operations,
    they also create new pressures and practical challenges that hinder realizing
    their full value. He notes the large number of data entries required to record
    the diverse activities across their farm, with up to two dozen entries per day.
    As he explains: I want to record every irrigation, every cultivation, every application
    of spray that we would do to a paddock and every single action, particularly if
    we want to get accurate gross margins coming out. … [Q]uite [a number] of activities
    can go on, … we’ve got nine irrigators on the farm and they’re all on set paddocks,
    so that’s nine entries … and we’ve got our own sprayer, the contractor doing fertiliser.
    And while he is … going more into digital recording for proof of placement, it’s
    not apparent to have that capability linked into our ProductionWise. … [A] frustration
    might be around dual activity or repetitive services of getting all the information
    to the one platform. Rod acknowledges that they could improve their real-time
    recording via mobile phone, but he sees the applications’ user interfaces as cumbersome
    and prefers data entry on his computer in the evenings, which creates time delays
    and relies partly on paper records collected throughout the day. One frustrating
    consequence of using multiple software tools is lacking interoperability, causing
    the need to duplicate data entries. In many cases, data inputs and outputs have
    to be transferred manually from written record or across platforms. With some
    of this recordkeeping solely done for retrospective compliance purposes, Rod also
    does not see much value added to his business from those records, for example,
    for the family’s farm planning activities. At the moment, the capital and operational
    cost for these digital technologies still only constitutes a small percentage
    of their overall expenses. As digitalization across the sector accelerates, however,
    Rod feels that related hard- and software costs will become significant to their
    operation. Further challenges emerge from new hardware often requiring updated
    software packages, and vice versa. These changes not only create growing costs
    but also mean that increasingly specialized skills are required to set up and
    maintain new digital technologies, with Rod highlighting their diminishing ability
    to fix equipment directly on-farm and after-sale services often not being great.
    3.3 Farm 3: Corporate Dairy Business Erin is employed by a company that manages
    almost two dozen dairy farms across New Zealand’s South Island. Now in her later
    30s, she shifted into a support position following several years in on-farm roles.
    Much of her time is spent implementing technologies and innovation projects across
    individual farms. Given the structure of their operations, these are rather complex
    tasks. The company has several contract milkers and leasing agreements, with some
    involving equity holdings. Most farms are overseen by a business manager, while
    on-farm operations are run by a farm manager and three to six staff. The company’s
    portfolio covers a wide range of farm types, from low- to higher-input systems
    (e.g., imported feed) and herd sizes ranging from 550 through to 1200 cows. Almost
    all farms are irrigated. Technologies used on farm are equally as diverse. The
    Protrack software is used in about two-thirds of milking shed, which, among other
    features, offers automated livestock drafting and herd management functions. All
    farms also have in-shed feeding systems and computer terminals to monitor operations.
    Different systems are used across their farms to record amounts and locations
    of fertilization applications. Similarly, water usage is monitored for regulatory
    reporting, with processes and systems varying between different catchment irrigation
    schemes and resource consents. A pasture metering tool is used to record yield
    data and guide required fertilizer usage. The company is also experimenting with
    a virtual fencing system by the New Zealand-based company on one farm, which works
    well after some initial setup problems. Farm management and regulatory compliance
    is supported by several software platforms. OverseerFM is used to estimate nitrogen
    leaching (e.g., from animal urine) and greenhouse gas emissions generated on farm
    (e.g., from ruminant animals) and embodied emissions in products brought onto
    farm. Records on animal health and reproduction, milk production and milk quality
    are recorded in MINDA. Additionally, FarmIQ is trialed as another management tool
    on some farms. To assist accounting and have easy access to product receipts required
    for quality assurance reporting, the company uses the integrated accounting software
    Greentree. Working across these different platforms means that data entries and
    outputs frequently need to be handled and transferred multiple times. Achieving
    interconnectivity and interoperability thus remains challenging. As Erin remarks:
    none of them talk to each other… Most farming operations couldn''t do this, but
    because we are a group, … we pool all of our information into a system called
    Patika and then we display that in Power BI so that we can actually measure our
    farms’ performance against one another. And we haven''t got everything pooling
    in there because there are so many systems. Not having all information readily
    accessible in one place not only complicates timely decision-making but also makes
    auditing processes time-consuming. Moreover, hard copy records, such as feed declaration
    forms, need to be digitized before they can be shared. While some of these practical
    challenges are technological and related to the on-the-ground complexities of
    farming, Erin is cognizant that cultural and social aspects also play a role.
    This involves questions around trust, ownership, privacy, and commercial interests:
    [I]n agriculture, we’ve been notoriously bad at wanting to hoard data, because
    we think that data is what holds power, and we don’t want to open up. … So, you
    still own that information and that data yourself, because … it’s our farm data,
    we’re producing it. … [W]e don’t just want it free-sourced so that anyone can
    access it. … [I]t’s our competitive advantage in New Zealand, our information
    and our data and the way that we farm. And the way that we do things is what gives
    us a competitive advantage. So, we''ve got to be careful at protecting that. More
    mundane obstacles she sees are many farmers still preferring to use hard copies
    and physical files. In other instances, human errors in copy-and-pasting or manually
    reentering data can cause issues and additional costs. With many rural areas in
    New Zealand having patchy mobile reception, Erin notes that Internet connectivity
    is another key constraining factor for accelerating on-farm digitalization. The
    company installed signal boosters in several places, but some digital tools are
    still hard to utilize to their fullest potential. In her view, connectivity issues
    will likely limit widespread uptake of existing digital technologies and prevent
    potential innovation to some degree. 3.4 Synthesis of Current State These brief
    accounts of three New Zealand farm systems demonstrate that the uptake of digital
    technologies remains partial and uneven between different operations and business
    models (see Table 1). Much of this uneven adoption is driven by a range of technical,
    farm system, economic, and sociocultural factors, all of which affect the perceived
    and actual value digital technologies might add to commercial farm operations
    against a background of their implementation challenges. For small-scale farmers
    like Derrick, digital technologies and software platforms offer limited value,
    given his relatively simple operation, while their adoption requires considerable
    efforts and costs compared to his overall operating budget. Conversely, digital
    technologies can create substantial value in the type of large-scale commercial
    operations Erin supports, given their significant data requirements for regulatory
    reporting and informed decision-making. Limiting factors in these farm systems
    manifest, in large parts, around lacking interconnectivity and interoperability
    between digital systems. Table 1 Three contrasting farm systems in New Zealand
    Full size table Whether digitalization can yield on-farm benefits, and what associated
    implementation challenges must be navigated, thus varies between farm systems.
    Therefore, current levels of farm digitalization in New Zealand differ significantly.
    Our anecdotal insights correspond to those presented by other New Zealand researchers
    and industry bodies (e.g., AgriTechNZ 2022; Eastwood et al. 2023; Shepherd et
    al. 2020). This work illustrates that digitalization by itself is not resulting
    automatically in net benefits for all farmers equally. This emphasizes the need
    to carefully examine the value proposition of digital agricultural innovation,
    with due consideration of socio-technical contexts and the specificities of each
    farm system. 4 Future Imperfect and Possible Pathways As the case studies described
    in the previous section testify, the big Agriculture 4.0 dream is not here yet,
    not even in the more modest form discussed in Sect. 2. The challenges described
    by farmers in the cases above are not isolated examples. A literature review by
    Eastwood et al. (2023) explained in detail a series of barriers for digitalization
    in agriculture. They concluded that barriers are not simply technical. Rather,
    they occur at several interconnected levels, including at the farm, societal,
    innovation system, and policy level. Similarly, da Silveira et al.’s (2021) systematic
    literature review classified the barriers for the development of Agriculture 4.0
    into technological, economic, political, social, and environmental. The same set
    of barriers was identified in a recent study specific for New Zealand (AgriTechNZ
    2022). While summarizing all these barriers and their causes is beyond the present
    scope, it is clear that some of the underlying causes lay in dominant business
    models associated with agricultural technologies and particularly how value is
    extracted from data beyond the direct use for which it was collected. We focus
    here on some of the key barriers associated with these business models. First,
    there are no clear data ownership policies and technical tools to implement multi-stakeholder
    data management in practice. The agricultural data ecosystem is very complex,
    with often multiple parties in the data value chain. As mentioned in Sect. 3,
    even in simpler farm scenario, some data is collected and managed by farmers themselves
    and some by multiple third parties. Factors to consider while attributing data
    ownership in these contexts are (1) on-farm hardware cost, (2) data system and
    management cost (including cybersecurity), and (3) data integration and analysis
    cost. For example, let’s consider a scenario where farmers pay a contractor to
    apply fertilizer on a crop and to a service company to collect related data generated
    in the process. The service company is responsible for data management, integration,
    and analysis. However, it is the contractors’ work that initially generates the
    data within the context of the farmers’ businesses. Three actors can thus understandably
    claim some ownership of the data. Second, different actors in the agricultural
    data value chain can have different attitudes toward data sharing. For example,
    some farmers express scepticism about the benefits of data sharing, with arguments
    such as the following: (1) regulators may use it against me, (2) data is very
    valuable for me and if I share them I will lose competitive advantage, and (3)
    most value from shared data is extracted by downstream actors in the value chains
    (i.e., by processors and retailers) with only limited value for me (see, e.g.,
    Jakku et al. 2019). These arguments are understandable, and different strategies
    are required to address related concerns. Third, current digital systems in agriculture
    often lack interoperability despite the value of data increasing significantly
    when integrating it from multiple components within a farm or across multiple
    farms (e.g., across a region or an entire sector). Integration is currently often
    cumbersome and expensive. One can distinguish device interoperability and software
    interoperability on farms. In the case of device interoperability, on-farm devices
    and sensors are relatively new developments, and ISO standards regarding data
    collection, including metadata, are often nonexistent. Each company therefore
    collects data with their own standards. In terms of software interoperability,
    multiple companies provide services to farmers and collect data using their own
    proprietary software and user interfaces. These companies are often competitors,
    which means they are unwilling to provide easy ways for interoperability with
    other software. Fourth, even if a perfect formula to attribute data ownership
    can be designed and farmers are willing to share data, there is currently a lack
    of digital tools to implement and monetize the necessary exchanges. To create
    a more dynamic data economy that supports the full value propositions of agricultural
    digitalization, a methodology to attribute the right value of the data needs to
    be designed. Key issues that need answering in this regard include the following:
    (1) what is the cost of data collection, storage, management, integration, and
    analysis? (2) Who is benefiting from it? (3) The fact that data is a non-rival
    good, i.e., data can be shared and used countless times (Romer 1990; Samuelson
    1954). Given these barriers to realizing the value of agricultural digitalization,
    the next section focuses on the problems and tensions in business models through
    what one may call a “Web3.0 lens.” 4.1 Web3.0 and Its Components The World Wide
    Web has undergone a number of iterations (Fig. 1). Its initial form, now described
    as Web1.0, comprised web pages navigated via hyperlinks and was largely static
    and “read only.” Web2.0 offered users the ability to enter data and interact with
    websites. The “read-write” web enabled webpages to become interactive and facilitate
    personalized experience and targeted advertising, providing the foundation for
    Internet business model development. Fig. 1 Three stages of the World Wide Web
    so far. Web 1 is the read web – still quite small. Web 2 is the read/write web
    and, though larger, dominated by a number of large content producers who hold
    the data on centralized servers. Web 3 still has some centralized servers but
    is dominated by producer/consumers who also hold and directly share content Full
    size image Web3.0 refers to the third generation of the World Wide Web, with its
    primary vision that the Web is owned by users and creators rather than by Big
    Tech. The defining properties of Web3.0 are that it is (1) open (it runs on systems
    developed with open-source standards, (2) trustless (users can interact privately
    or publicly without the need for central authority, thus avoiding the risk of
    intermediary mishandling their data or their privacy), (3) permissionless (it
    provides tools and protocols for seamless interoperability and peer-to-peer networks
    without the need for consent from a controlling third party organization), and
    (4) decentralized (data is stored and managed in a decentralized manner via peer-to-peer
    interconnection). Key technologies enabling the Web3.0 vision are blockchain,
    smart contracts, non-fungible tokens, artificial intelligence, and edge computing.
    Blockchain is the key enabling technology for the creation of decentralized applications
    and services where data is maintained. In a blockchain environment, data is managed
    across numerous computers (nodes) in a distributed manner. These computers are
    linked together in a peer-to-peer network. Data is structured into chunks (blocks)
    that are strung together forming a chain, and verification of the new block creation
    in the network is done through consensus algorithms. Each block is timestamped
    and cannot be deleted or changed once created, making it immutable (Rogerson and
    Parry 2020). Immutability of the data begins to solve the problem of trust in
    economic activities (Abou Jaoude and Saade 2019). Also, each node (computer) in
    the blockchain network stores a copy of data synchronously, which helps to increase
    interoperability in a data economy (Rogerson and Parry 2020). The immutable nature
    of data in blockchains removes the plasticity of Web2.0. Transactions, exchanges,
    and claims are assigned to an individual, or individuals, and locked to a point
    in time. These properties enable digital “smart” contracting, which facilitates
    the attribution of ownership and rights over digital assets. Smart contracts are
    codified versions of the agreements between the parties implemented on top of
    the blockchain network, where business logic is automatically executed in response
    to the meeting of agreed conditions (Fernández-Caramés and Fraga-Lamas 2018).
    This execution could be the exchange of money, unlocking of content protected
    by digital rights management, revoking access to the data, or other types of data
    manipulation, e.g., automated payments linked to delivery. Smart contracts are
    the key to decentralized management of the blockchains. Blockchain is linked to
    the creation of cryptocurrencies in popular media. These are digital assets in
    the form of fungible tokens: a type of digital asset that is interchangeable with
    other tokens of the same type. In other words, each individual token has the same
    value as any other token of the same type. As such, cryptocurrencies prove useful
    within blockchain systems as forms of payment. If they have stable value, they
    can be used to rapidly pay partners anywhere in the world via smart contracts.
    However, the value of many tokens (Bitcoin, Ethereum, etc.) has been the subject
    of much speculation, leading to highly volatile cryptocurrency markets. This has
    limited their utility and damaged user confidence. However, the development of
    stablecoins (those that do not rapidly change value) may lead to cryptocurrencies
    find extensive utility in global payment systems in the longer term. In contrast
    to fungible tokens, non-fungible tokens (NFTs) have unique identification codes
    and metadata to distinguish them from other tokens. These cryptographic tokens
    may contain data that either represent or point toward digital or physical assets.
    Each NFT essentially provides the certificate of ownership of assets. “Tokenizing”
    assets makes buying, selling, and trading more efficient. Trading on blockchain
    helps these exchanges happen in a trusted manner, reducing the need for central
    authorities. As with the fungible “crypto” tokens, NFTs have been through a media
    hype cycle, mainly linking them with digital art. There are also issues to address,
    not least the legal standing, or lack thereof, for NFTs (Moringiello and Odinet
    2021). However, longer term they may be usefully linked to physical assets (machinery,
    land, livestock, seed, etc.) and to aid efficient trade. Automation of services
    based on artificial intelligence (AI) is critical for successful implementation
    of Web3.0-based applications and services. AI technologies, such as machine learning,
    deep learning, big data, and natural language processing, help empower more intelligent
    and adaptive applications, such as smart autonomous farm vehicles that navigate
    to a field and execute tasks as appropriate to conditions. Web3.0 embraces the
    Internet of Things (IoT), the network of physical objects, such as devices, vehicles,
    and buildings, that are equipped with sensors, software, and other technologies
    for the purpose of collecting and exchanging data. This is expanded to what is
    called “Industry 4.0,” which envisions the development of IoT by industry, creating
    cyber-physical systems (CPS) that integrate information, communication, and industrial
    technologies (Afy-Shararah and Rich 2018; Lu 2017). Digital and intelligent systems
    combine to provide data-driven and customizable processes that support organizations.
    Industry 4.0 further enables the creation of new flexible production models that
    provide firm-specific products and services (Zhou et al. 2015; Kache and Seuring
    2017). Connecting equipment with sensors removes people from the data input process.
    Such automation provides supply chains with potentially more accurate and timely
    information. Such data can reveal the patterns of use and consumption of products
    and services, allowing for process monitoring, forecasting, and better management
    of reverse supply processes for recycling, waste management, and waste reduction
    (Parry et al. 2016). Such advanced information technologies can create competitive
    advantage through production planning, flexibility, improved efficiency, and reduced
    cost (Ho 1996; Lei and Goldhar 1991). Web3.0 may also help to overcome the centralization
    of power through the use of edge computing. Most computing devices such as mobile
    phones, laptops, appliances, sensors, and IoTs are capable of processing large
    volumes of data. Rather than the centralized data storage and manipulation seen
    in Web2.0, Web3.0 utilizes these devices as nodes in the network. Computation
    happens not at the center, but at the edge, and data storage and processing occurs
    in a distributed fashion. This approach potentially reduces the power of platform
    providers, hence acting as key enablers for the implementation of distributed,
    and potentially more democratic and user empowered, Web3.0 applications and services.
    4.2 No Panaceas While often still only beginning to be realized on-farm, the promises
    of Web3.0 are already a reality elsewhere in the food industry. Blockchain has
    been successful in enhancing visibility of processes along supply chains, reducing
    human error, increasing efficiency, and enhancing trust in product veracity (Rogerson
    and Parry 2020). However, as with any novel solution to intractable problems,
    practical challenges remain. These may be resolved as use of such technologies
    matures, but they may also include challenges that simply cannot be resolved by
    technological improvements alone. First, a fundamental problem we see in the digitization
    literature is the risk of error or fraud in the entry of data – the nexus of the
    physical and digital worlds. Data might be more trusted if they are retained in
    blockchain or what are considered advanced digital systems, but such systems may
    create a “halo of trust.” The veracity of data remains dubious if the way they
    were originally collected or entered into the system is potentially flawed or
    biased (Rogerson and Parry 2020). Data entry issues highlight the need for governance
    standards, but also opportunities for automation, reducing workload on farmers
    and ensuring that data originating with them are trustworthy. Second, once data
    is entered into systems, there is a centralizing tendency of which to beware in
    order to guard against inefficiencies and abuses. With so many different proprietary
    systems, multiple different centralized databases can operate in parallel. As
    shown in the farm stories above, this means that data may get stuck in silos with
    a specific service provider as data controller or that data is not able to flow
    and be reused in combination. This creates rework for the farmer and reduces the
    promised efficiency. Data can be copied into different databases, but that is
    effectively a bridge between Industry 4.0 sensors and Web2.0 centralized databases.
    Even within decentralized blockchain systems, centralization of data mining can
    occur, which creates or maintains power imbalances. What is required is a truly
    decentralized Web3.0 system where sensor data is stored locally, with the farmer
    as the data controller. Instead of individual services “taking” their data and
    processing it centrally, they could locally host their algorithms such that processing
    is done on the farm, creating a system of decentralized edge computing. Freeing
    the data from centralization would allow greater value to be realized through
    the combination of datasets to provide novel insights envisioned and required
    by the agri-food sector. Third, not only is centralization a risk to the sharing
    of value, but it also limits farmers’ ability to adopt new technologies independently
    for fear of both up-front and ongoing costs. The case examples in Sect. 3 show
    that much of the collection and management of data does not improve on-farm efficiency
    or benefit the farmer. In fact, it often absorbs time and money with little benefit.
    More work is required to identify what is truly needed and what is “digital waste,”
    such that only minimum-viable datasets are collected. Those key data then need
    to be available to be combined, transformed, and employed to create insights.
    However, technology service providers perceive the data their services collect
    as valuable, and they are reluctant to make available what they perceive as their
    source of competitive advantage. Changing this business model to gain access may
    require legislative changes and, if these were possible, data format standardization
    for transferring data between systems via open application programming interface
    (AKA APIs). For the data to then be useful, farmers would need to develop skills
    to manipulate data and extract value. This is now within reach as software developers
    have created “low-code” systems that require little to no coding skills yet allow
    users to create applications and analytic processes. Rather than programming languages,
    low-code systems use visual interfaces with drag-and-drop tools that enable users
    to undertake complex data analytics and visualizations. The engagement of end
    users as innovators, and perhaps coders and data analysts, makes agricultural
    digitalization processes more inclusive and reinforces the value of diverse actor
    groups within the socio-technical futures digital technologies help to create.
    Finally, the potential usefulness of the smart contract technology must be treated
    with certain caution (Zheng et al. 2020). Despite the name, smart contracts are
    not “smart.” They are often simple “if this then that” functions that execute
    automatically. Malicious actors may trigger them artificially to gain benefit.
    Smart contracts are difficult to read, as they are written as code, and are also
    difficult to change. As digital systems are developed over time, multiple smart
    contracts may end up chaining together, making processes difficult to predict.
    Neither are they directly legal contracts. Rather, smart contracts are representations
    of the contractual terms, and their relevance or legality may be open to interpretation
    by different partners or courts (Dixit et al. 2022). 4.3 Decentralization Paradox
    Smart contracts are agreements between two or more parties that can be automatically
    enforced without the need for an intermediary and thus are a form of decentralized
    control in a blockchain network. Contracts use agreed objectives as triggers for
    actions such as payment, for example. The original design philosophy of blockchain
    as a disintermediating technology with decentralized control sought to remove
    centralized power. However, care is needed when “decentralization” is used in
    discussions of blockchain. Control can be decentralized through democratizing
    governance structures; through decentralizing data by distributing them across
    a network; and through offering availability of data, and therefore visibility,
    to different stakeholders. The type and level of decentralization will depend
    on the design of the system. A (de)centralization paradox exists within blockchain
    design, as in practice centralizing tendencies compete with the decentralizing
    philosophy as seen in public blockchain mining cooperatives and groups of core
    developers holding design authority over changes to the code. Pragmatically, the
    benefits of decentralization should be coupled with necessary centralization to
    develop optimized systems. 5 Conclusion In this chapter, we discussed the increasingly
    ubiquitous presence that digital technologies have on many modern farms and the
    promises they hold. But we also presented New Zealand case studies which demonstrate
    that the adoption of these technologies, and their offered business value, varies
    significantly between farm systems. This is partly due to farmers’ ability to
    navigate relevant implementation obstacles but also wider socio-technical challenges
    associated with realizing the full value of digital technologies. Web3.0 approaches,
    and the vision of openness and decentralization they portray, offer some avenues
    to resolve these challenges. However, our discussion demonstrates that there is
    no single magical solution to address the diverse array of intersecting technical,
    farm system, economic, and sociocultural factors outlined in this chapter. Effectively
    overcoming associated challenges and focusing on the practical implementation
    of digital technologies will be crucial for realizing the envisioned beneficial
    futures of agricultural digitalization. This includes attending to wider considerations
    for the ways in which digital technologies can support long-term environmental,
    social, and economic sustainability. Change history 29 March 2024 A correction
    has been published. Notes 1. All names are pseudonyms. References Afy-Shararah,
    M., Rich, N. 2018. Operations flow effectiveness: a systems approach to measuring
    flow performance. International Journal of Operations & Production Management.
    Google Scholar   AgriTechNZ. 2022. Baseline of Digital Adoption in Primary Industries.
    Accessible at https://agritechnz.org.nz/wp-content/uploads/sites/34/2022/08/AgriTechNZ-Digital-Adoption-in-Primary-Industries-Report-2022.pdf
    Google Scholar   Barrett, H. and Rose, D.C. 2022. Perceptions of the fourth agricultural
    revolution: What’s in, what’s out, and what consequences are anticipated? Sociologia
    Ruralis, 62(2), pp.162–189. Google Scholar   Bronson, K. 2019. Looking through
    a responsible innovation lens at uneven engagements with digital farming. NJAS-Wageningen
    Journal of Life Sciences, 90, p.100294. Google Scholar   Chakravorti, B., and
    Chaturvedi, R.S. 2017. Digital planet 2017: How competitiveness and trust in digital
    economies vary across the world. Retrieved from https://sites.tufts.edu/digitalplanet/files/2020/03/Digital_Planet_2017_FINAL.pdf
    Cook, S., Jackson, E.L., Fisher, M.J., Baker, D. and Diepeveen, D. 2022. Embedding
    digital agriculture into sustainable Australian food systems: pathways and pitfalls
    to value creation. International Journal of Agricultural Sustainability, 20(3),
    pp.346–367. Google Scholar   da Silveira, F., Lermen, F.H. and Amaral, F.G. 2021.
    An overview of agriculture 4.0 development: Systematic review of descriptions,
    technologies, barriers, advantages, and disadvantages. Computers and Electronics
    in Agriculture, 189, p.106405. Google Scholar   Dixit, Deval, V., Dwivedi, V.,
    Norta, A., & Draheim, D. 2022. Towards user-centered and legally relevant smart-contract
    development: A systematic literature review. Journal of Industrial Information
    Integration, 26, 100314–. https://doi.org/10.1016/j.jii.2021.100314 Eastwood,
    C., Klerkx, L., Ayre, M. and Dela Rue, B. 2019. Managing socio-ethical challenges
    in the development of smart farming: from a fragmented to a comprehensive approach
    for responsible research and innovation. Journal of Agricultural and Environmental
    Ethics, 32(5), pp.741–768. Google Scholar   Eastwood, C., Turner, J.A., Romera,
    A.J., Selbie, D., Henwood, R., Espig, M. and Wever, M. 2023. Transitioning from
    digital agriculture to a digital bioeconomy: a review of multi-scale barriers
    to digitalisation of the bio-based economy. CABI Reviews, https://doi.org/10.1079/cabireviews.2023.0002.
    Espig, M., Fielke, S., Finlay-Smits, S.C., Jakku, E., Turner, J.A., Robinson,
    C., Hunter, C. and Lacey, J. 2022. Responsible digital agri-food innovation in
    Australian and New Zealand public research organisations. Sociologia Ruralis,
    62(2), pp. 389–409. Google Scholar   Fernández-Caramés, T.M. and Fraga-Lamas,
    P. 2018. A Review on the Use of Blockchain for the Internet of Things. IEEE Access,
    6, pp. 32979–33001. Google Scholar   Fielke, S., Bronson, K., Carolan, M., Eastwood,
    C., Higgins, V., Jakku, E., Klerkx, L., Nettle, R., Regan, Á., Rose, D.C. and
    Townsend, L.C. 2022. A call to expand disciplinary boundaries so that social scientific
    imagination and practice are central to quests for ‘responsible’ digital agri‐food
    innovation. Sociologia Ruralis, 62(2), pp.151–161. Google Scholar   Fleming, A.,
    Jakku, E., Lim-Camacho, L., Taylor, B. and Thorburn, P. 2018. Is big data for
    big farming or for everyone? Perceptions in the Australian grains industry. Agronomy
    for sustainable development, 38(3), pp.1–10. Google Scholar   Fleming A, Jakku
    E, Fielke S, Taylor BM, Lacey J, Terhorst A, and Stitzlein C. 2021. Foresighting
    Australian digital agricultural futures: Applying responsible innovation thinking
    to anticipate research and development impact under different scenarios. Agricultural
    Systems, 190, 103120. https://doi.org/10.1016/j.agsy.2021.103120 Ho, C.-F. 1996.
    Information technology implementation strategies for manufacturing organizations:
    A strategic alignment approach. International Journal of Operations & Production
    Management 16, 77–100. Article   Google Scholar   Jakku, E., Fleming, A., Espig,
    M., Fielke, S., Finlay-Smits, S.C. and Turner, J.A. 2023. Disruption disrupted?
    Reflecting on the relationship between responsible innovation and digital agriculture
    research and development at multiple levels in Australia and Aotearoa New Zealand.
    Agricultural Systems, 204, p.103555. Google Scholar   Jakku, E., Taylor, B., Fleming,
    A., Mason, C., Fielke, S., Sounness, C. and Thorburn, P. 2019. “If they don’t
    tell us what they do with it, why would we trust them?” Trust, transparency and
    benefit-sharing in Smart Farming. NJAS-Wageningen Journal of Life Sciences, 90,
    p.100285. Google Scholar   Abou Jaoude, J. and Saade, R.G. 2019. Blockchain applications–usage
    in different domains. IEEE Access, 7, pp.45360–45381. Google Scholar   Kache,
    F., Seuring, S. 2017. Challenges and opportunities of digital information at the
    intersection of Big Data Analytics and supply chain management. International
    Journal of Operations & Production Management 37, 10–36. Article   Google Scholar   Klerkx,
    L. and Rose, D. 2020. Dealing with the game-changing technologies of Agriculture
    4.0: How do we manage diversity and responsibility in food system transition pathways?.
    Global Food Security, 24, p.100347. Google Scholar   Lei, D., Goldhar, J.D. 1991.
    Computer-integrated manufacturing (CIM): redefining the manufacturing firm into
    a global service business. International Journal of Operations & Production Management
    11, 5–18. Article   Google Scholar   Lioutas, E.D., Charatsari, C. and De Rosa,
    M. 2021. Digitalization of agriculture: A way to solve the food problem or a trolley
    dilemma?. Technology in Society, 67, p.101744. Google Scholar   Lajoie-O''Malley,
    A., Bronson, K., van der Burg, S., and Klerkx, L. 2020. \"The future(s) of digital
    agriculture and sustainable food systems: An analysis of high-level policy documents.\"
    Ecosystem Services 45:101183. https://doi.org/10.1016/j.ecoser.2020.101183. Article   Google
    Scholar   Lu, Y. 2017. Industry 4.0: A survey on technologies, applications and
    open research issues. Journal of Industrial Information Integration 6, 1–10. https://doi.org/10.1016/j.jii.2017.04.005
    Article   Google Scholar   Ministry of Business, Innovation and Employment. 2020.
    Agritech Industry Transformation Plan. Retrieved from https://www.mbie.govt.nz/dmsdocument/11572-growing-innovative-industries-in-new-zealand-agritech-industry-transformation-plan-july-2020-pdf
    Mondejar, M.E., Avtar, R., Diaz, H.L.B., Dubey, R.K., Esteban, J., Gómez-Morales,
    A., Hallam, B., Mbungu, N.T., Okolo, C.C., Prasad, K.A. and She, Q. 2021. Digitalization
    to achieve sustainable development goals: Steps towards a Smart Green Planet.
    Science of The Total Environment, 794, p.148539. Google Scholar   Moringiello,
    Juliet M. and Odinet, Christopher K., The Property Law of Tokens (November 1,
    2021). 74 Florida Law Review 607 (2022), U Iowa Legal Studies Research Paper No.
    2021-44, Widener Law Commonwealth Research Paper, Available at SSRN: https://ssrn.com/abstract=3928901
    or https://doi.org/10.2139/ssrn.3928901 Parry, G., Brax, S.A., Maull, R., Ng,
    I. 2016. Visibility of consumer context: improving reverse supply with internet
    of things data. Supply Chain Management: An International Journal, 21, 228–244.
    Article   Google Scholar   Rogerson, M., & Parry, G.C. 2020. Blockchain: case
    studies in food supply chain visibility. Supply Chain Management: An International
    Journal, 25(5), 601–614. Article   Google Scholar   Romer, P. 1990. Endogenous
    technological change. Journal of Political Economy, 98(5), Part 2, S71–S102. Google
    Scholar   Samuelson, Paul A. 1954. The Pure Theory of Public Expenditures. The
    Review of Economics and Statistics, 36, 387–389. Article   Google Scholar   Shepherd,
    M., Turner, J.A., Small, B., and Wheeler, D. 2020. Priorities for science to overcome
    hurdles thwarting the full promise of the ‘digital agriculture’ revolution. Journal
    of the Science of Food and Agriculture 100 (14):5083–92. https://doi.org/10.1002/jsfa.9346.
    Article   Google Scholar   van der Burg, S., Bogaardt, M.J., and Wolfert, S. 2019.
    \"Ethics of smart farming: Current questions and directions for responsible innovation
    towards the future.\" NJAS - Wageningen Journal of Life Sciences 90–91:100289.
    https://doi.org/10.1016/j.njas.2019.01.001. Article   Google Scholar   Wolfert,
    S., Ge, L., Verdouw, C. and Bogaardt, M.J. 2017. Big data in smart farming–a review.
    Agricultural Systems, 153, pp. 69–80. Google Scholar   Wolfert, S., Verdouw, C.,
    van Wassenaer, L., Dolfsma, W., and Klerkx, L. 2023. “Digital innovation ecosystems
    in agri-food: design principles and organizational framework.” Agricultural Systems,
    204:103558. https://doi.org/10.1016/j.agsy.2022.103558. Article   Google Scholar   Zheng,
    Xie, S., Dai, H.-N., Chen, W., Chen, X., Weng, J., & Imran, M. 2020. An overview
    on smart contracts: Challenges, advances and platforms. Future Generation Computer
    Systems, 105, 475–491. https://doi.org/10.1016/j.future.2019.12.019 Zhou, K.,
    Liu, T., Zhou, L. 2015. Industry 4.0: Towards future industrial opportunities
    and challenges, in: 2015 12th International Conference on Fuzzy Systems and Knowledge
    Discovery (FSKD). Presented at the 2015 12th International Conference on Fuzzy
    Systems and Knowledge Discovery (FSKD), pp. 2147–2152. https://doi.org/10.1109/FSKD.2015.7382284
    Download references Author information Authors and Affiliations AgResearch Ltd,
    Ruakura Agricultural Centre, Hamilton, New Zealand Alvaro Romera & James Turner
    Surrey Business School, University of Surrey, Guildford, Surrey, UK Glenn Parry
    & Michael Rogerson AgResearch Ltd, Lincoln Research Centre, Christchurch, New
    Zealand Martin Espig & Munir Shah University of Sussex Business School, University
    of Sussex, Brighton, UK Michael Rogerson Corresponding author Correspondence to
    Alvaro Romera . Editor information Editors and Affiliations Department of Earth
    and Environmental Sciences, Mount Royal University, Calgary, AB, Canada Israel
    Sunday Dunmade Department of Chemical Engineering, Faculty of Engineering, Built
    Environment and Information Technology, University of Pretoria, Pretoria, South
    Africa Michael Olawale Daramola Department of Chemical Engineering, Faculty of
    Engineering, Built Environment and Information Technology, University of Pretoria,
    Pretoria, South Africa Samuel Ayodele Iwarere Rights and permissions Reprints
    and permissions Copyright information © 2024 The Author(s), under exclusive license
    to Springer Nature Switzerland AG About this chapter Cite this chapter Romera,
    A., Parry, G., Turner, J., Espig, M., Rogerson, M., Shah, M. (2024). Digitalization
    for Sustainable Agriculture: Enabling Farm Digitalization Through Decentralized
    Control and Ownership. In: Dunmade, I.S., Daramola, M.O., Iwarere, S.A. (eds)
    Sustainable Engineering. Green Energy and Technology. Springer, Cham. https://doi.org/10.1007/978-3-031-47215-2_1
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-47215-2_1
    Published 07 February 2024 Publisher Name Springer, Cham Print ISBN 978-3-031-47214-5
    Online ISBN 978-3-031-47215-2 eBook Packages Engineering Engineering (R0) Share
    this chapter Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Publish with us Policies and ethics Download book PDF Download book
    EPUB Sections Figures References Abstract Introduction Future Vision The Current
    State of Digitalization in New Zealand Farm Systems Future Imperfect and Possible
    Pathways Conclusion Change history Notes References Author information Editor
    information Rights and permissions Copyright information About this chapter Publish
    with us Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Green Energy and Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Digitalization for Sustainable Agriculture: Enabling Farm Digitalization
    Through Decentralized Control and Ownership'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 29 papers. The special focus in this conference
    is on Machine Intelligence for Research and Innovations. The topics include: Artificial
    Intelligence Revolution in Healthcare: From Patient Care to Disease Diagnosis;
    bayesian Models for Weather Prediction: Using Remote Sensing Data to Improve Forecast
    Accuracy; unsupervised Clustering of Asphalt Pavement Conditions Using Fuzzy C-Means
    Algorithm with Principal Component Analysis Aided Dimensionality Reduction; prediction
    of Heart Disease Risk in Early Ages with Boosting Techniques; ioT-Enabled Advanced
    Foam Firefighting E-Vehicle; a Study on Kerberos and Graphical Password-Based
    Web Authentication Scheme; application of Dragonfly Algorithm-Based Interval Type-2
    Fuzzy Logic Closed-Loop Control System to Regulate the Mean Arterial Blood Pressure;
    challenges and Solutions with Lightweight Models for Diabetic Retinopathy Detection;
    Energy Management System for EV with Multiple Energy Sources; design and Development
    of a Charcoal-Based Sensor for Enhanced Soil Analysis in Precision Agriculture;
    Approach on Machine Learning Techniques for Anomaly-Based Web Intrusion Detection
    Systems: Using CICIDS2017 Dataset; enhancement of Edge Security Using Dynamic
    Load-Balancing Algorithm for 5G Cloud Computing Network; testing and Development
    of a Multi-Object Tracker Based on Deep Learning Techniques; artificial Intelligence
    Technologies-Assisted 6G; state-of-the-Art and Development of 6G Communications;
    machine Learning Approach for Thermal Characteristics and Improvement of Heat
    Transfer of Nanofluids—A Review; detection of Heart Failure by Using Machine Learning;
    real-Time Road Lane Detection for Self-driving Cars Using Computer Vision; Global
    Horizontal Irradiance Estimation Using Bi-LSTM Algorithm; Enhancing Context-Aware
    Hybrid Collaborative Filtering Using DBSCAN Clustering Approach; comparative Study
    of Hybrid/Enhanced Nature-Inspired Optimization Algorithms for Solar Photovoltaic
    Model; preface.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 1st International Conference on Machine Intelligence for Research and Innovations,
    MAiTRI 2023
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ahmed A.
  - Parveen I.
  - Abdullah S.
  - Ahmad I.
  - Alturki N.
  - Jamel L.
  citation_count: '0'
  description: The study introduces an efficient data aggregation technique for smart
    agriculture by leveraging Blockchain technology and a novel method referred to
    as the 'cluster head sleep schedule.' The primary objective is to enhance the
    data collection process within a large-scale agricultural setting where multiple
    sensors continually generate vast amounts of data while monitoring and safeguarding
    crops from pest attacks. The proposed method involves the segmentation of sensors
    into clusters, each led by a designated cluster head responsible for collecting
    data from its constituent members deployed in the field to monitor pest attacks
    and promptly report any issues to the management. To curtail data redundancy,
    the study employs a fuzzy matrix to group nodes based on high-similarity data.
    This approach enables the selective suspension of certain nodes while others remain
    active. The data received from these nodes undergoes analysis using a fuzzy similarity
    matrix for clustering, ensuring that only unique data is transmitted to the base
    station. Redundant nodes from all clusters are identified and placed in a sleep
    mode, thus conserving energy and prolonging the network's lifespan. This sleep
    scheduling mechanism is implemented subsequent to data redundancy reduction, facilitating
    immediate pest attack control in agriculture. By implementing these techniques,
    smart agriculture stands to benefit from optimized energy utilization and reduced
    costs associated with monitoring and pest control, thereby fostering sustainable
    and efficient operations. The cluster head is responsible for storing the data
    on a base station positioned at the network's edge, allowing for local processing
    and prompt communication of pest attack information to the farmer for immediate
    action. Moreover, this edge system stores the data on a Blockchain network for
    future analysis and serves as a guideline for pest attack control in the pesticide
    industry, thereby enhancing data security and immutability. In addition to these
    advantages, the research also emphasizes the importance of controlling pest attacks
    to enhance crop production in the field, ultimately contributing to the country's
    economic growth. Simulation results affirm that the proposed approach leads to
    notable cost reductions, decreased energy consumption, improved crop production,
    precise crop monitoring to prevent pest attacks, and a prolonged network lifespan.
    These outcomes underscore the effectiveness of this approach within the context
    of smart agriculture and its role in enhancing the monitoring system for smart
    agriculture and bolstering security through Blockchain technology.
  doi: 10.1109/ACCESS.2024.3357538
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 12
    Optimized Data Fusion With Scheduled Rest Periods for Enhanced Smart Agriculture
    via Blockchain Integration Publisher: IEEE Cite This PDF Adeel Ahmed; Irum Parveen;
    Saima Abdullah; Israr Ahmad; Nazik Alturki; Leila Jamel All Authors 388 Full Text
    Views Open Access Comment(s) Under a Creative Commons License Abstract Document
    Sections I. Introduction II. Related Work III. Proposed Framework IV. Results
    and Simulations V. Discussion Show Full Outline Authors Figures References Keywords
    Metrics Abstract: The study introduces an efficient data aggregation technique
    for smart agriculture by leveraging Blockchain technology and a novel method referred
    to as the “cluster head sleep schedule.” The primary objective is to enhance the
    data collection process within a large-scale agricultural setting where multiple
    sensors continually generate vast amounts of data while monitoring and safeguarding
    crops from pest attacks. The proposed method involves the segmentation of sensors
    into clusters, each led by a designated cluster head responsible for collecting
    data from its constituent members deployed in the field to monitor pest attacks
    and promptly report any issues to the management. To curtail data redundancy,
    the study employs a fuzzy matrix to group nodes based on high-similarity data.
    This approach enables the selective suspension of certain nodes while others remain
    active. The data received from these nodes undergoes analysis using a fuzzy similarity
    matrix for clustering, ensuring that only unique data is transmitted to the base
    station. Redundant nodes from all clusters are identified and placed in a sleep
    mode, thus conserving energy and prolonging the network’s lifespan. This sleep
    scheduling mechanism is implemented subsequent to data redundancy reduction, facilitating
    immediate pest attack control in agriculture. By implementing these techniques,
    smart agriculture stands to benefit from optimized energy utilization and reduced
    costs associated with monitoring and pest control, thereby fostering sustainable
    and efficient operations. The cluster head is responsible for storing the data
    on a base station positioned at the network’s edge, allowing for local processing
    and prompt communication of pest attack information to the farmer for immediate
    action. Moreover, this edge system stores the data on a Blockchain network for
    future analysis and serves as a guideline for pest attack control in the pesticide
    industry, thereby enhancing data security and immutability. I... (Show More) Proposed
    System Architecture. Published in: IEEE Access ( Volume: 12) Page(s): 15171 -
    15193 Date of Publication: 23 January 2024 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2024.3357538
    Publisher: IEEE Funding Agency: SECTION I. Introduction The growing popularity
    of the Internet of Things (IoT) is evident due to the rise of smart devices and
    networks. This phenomenon is marked not only by the increasing number and diversity
    of available applications but also by the expanding user base for these applications.
    IoT, as an emerging concept, enables developers to connect multiple intelligent
    devices through various systems and technologies. This amalgamation of devices
    serves specific purposes, such as facilitating online learning and enabling multi-objective
    positioning. The IoT has had a significant impact on various aspects of human
    life, both in personal and professional domains [1]. It empowers machines to handle
    laborious tasks, automate mundane activities, and ultimately enhances human well-being
    by promoting a healthier, more productive, and more comfortable lifestyle. One
    industry significantly influenced by the IoT is agriculture, which has seen advancements
    in the precise and efficient management of farms and crops through the use of
    sensors, data analytics, and automation [2]. Smart agriculture systems, driven
    by the IoT, provide real-time insights into crop health, soil moisture levels,
    and weather conditions, enabling farmers to make informed decisions and optimize
    their operations. This data can be analyzed to make well-informed choices about
    irrigation, fertilization, and other aspects of crop management, resulting in
    more efficient and sustainable farming practices. Smart agriculture systems play
    a crucial role in helping farmers optimize crop yield, reduce waste, and enhance
    sustainability. However, the massive volumes of data generated by smart agriculture
    systems can pose challenges in terms of data storage, processing, and transmission.
    In response to these challenges, this research paper proposes an efficient data
    aggregation method for smart agriculture systems that utilizes blockchain technology
    [3]. A. Data Aggregation in Smart Agriculture Data aggregation in the realm of
    smart agriculture involves the collection of data from diverse sources associated
    with farming, such as sensors, drones, weather stations, and farm management systems.
    Subsequently, this data is merged and analyzed to facilitate informed decision-making.
    It plays a pivotal role in optimizing various facets of farming, including crop
    management, water usage, and resource allocation. Smart agriculture technology
    has brought about a revolution in the way farmers approach their operations. By
    deploying an array of sensors and monitoring equipment, farmers gain instant access
    to critical information concerning their crops, soil quality, and atmospheric
    conditions. This data guides decisions about when to plant, irrigate, and harvest
    crops, as well as determining the optimal fertilizer application and seed selection.
    Enhanced efficiency is one of the key advantages of data aggregation in agriculture
    [4]. The data gathered through these monitoring devices empowers farmers to make
    more informed choices about the efficient use of resources, leading to reduced
    waste, increased crop yields, and higher profits. Additionally, data aggregation
    aids in reducing the carbon footprint by minimizing resource use and waste generation
    on the farm. Improved crop management is another significant benefit of data aggregation.
    Through sensors and monitoring equipment, farmers can monitor crop growth and
    health in real-time. This real-time data informs decisions about irrigation, fertilization,
    and harvest timing, resulting in enhanced crop yields and decreased waste. Data
    aggregation also offers valuable insights into weather conditions and climate
    patterns. This data assists in determining the optimal timing for planting crops,
    as well as the appropriate water and fertilizer application. Moreover, it aids
    in anticipating weather-related challenges and planning accordingly. Smart agriculture
    encompasses the collection of data from a range of sources, including drones,
    sensors, farm management systems, and weather stations. This data is then transmitted
    to a central hub for aggregation and analysis. Utilizing data analytics, farmers
    harness this collected data to make well-informed decisions aimed at optimizing
    their operations. Ensuring the accuracy and reliability of data remains a primary
    challenge in data aggregation within agriculture [5]. This necessitates the proper
    installation and maintenance of sensors and monitoring devices, along with careful
    consideration of the data types being collected and analyzed. Additionally, the
    secure storage and protection of data are crucial to enable its effective use
    in the future. In addition to real-time data aggregation, smart agriculture incorporates
    advanced technologies such as precision farming, IoT (Internet of Things) sensors,
    drones, and machine learning algorithms. These technologies empower farmers to
    monitor and manage their crops and resources with greater precision, efficiency,
    and sustainability. As the global population continues to grow, the demand for
    food production is rapidly increasing. In response, the adoption of smart agriculture
    practices offers a promising solution to address this challenge while simultaneously
    mitigating the environmental impact of farming. This translates into heightened
    efficiency, improved crop management, and reduced waste, making it a critical
    tool for farmers aiming to excel in an increasingly competitive market. B. Blockchain
    Blockchain technology was first introduced in 2008 through Blockchain technology
    made its debut in 2008 with the release of a white paper authored by an enigmatic
    figure who operated under the pseudonym “Satoshi Nakamoto.” This groundbreaking
    document proposed the concept of a decentralized system for recording and verifying
    transactions through the use of cryptography and a distributed network of nodes
    [6]. The year 2009 marked the unveiling of the inaugural version of blockchain
    technology in the form of the Bitcoin network, a digital cryptocurrency that harnessed
    blockchain technology to establish a decentralized, peer-to-peer system for the
    exchange of value without reliance on a central authority. Since that time, blockchain
    technology has undergone significant evolution and found applications in a multitude
    of industries, with experts forecasting its continued capacity to reshape industries
    and generate fresh prospects for innovation and advancement [7]. The potential
    applications of blockchain technology span across a wide spectrum of industries
    due to its ability to facilitate secure and transparent data sharing, unalterable
    record-keeping, and decentralized transactions. It offers a more efficient and
    secure approach to data and transaction management, eliminating the need for intermediaries
    or central authorities. Each block within the blockchain includes an exclusive
    digital signature, a timestamp, and a reference to the previous block, resulting
    in a virtually immutable record that is highly resistant to alteration or tampering.
    Blockchain technology possesses the potential to revolutionize a range of industries
    and applications beyond the realm of financial transactions. In the domain of
    supply chain management, for example, blockchain can significantly enhance transparency,
    traceability, and the efficiency of goods and services transportation. Likewise,
    in healthcare, blockchain technology can be harnessed to safeguard medical records
    and bolster patient privacy [8]. IoT based crowd management model is presented
    [9]. In voting systems, blockchain can play a pivotal role in fortifying security
    and transparency in the electoral process. Its potential to enhance transparency,
    security, and efficiency in data transfer and storage has the capacity to transform
    numerous industries. C. Blockchain in Smart Agriculture The integration of blockchain
    technology into the realm of smart agriculture offers numerous benefits to the
    sector. Blockchain provides a secure and decentralized ledger system capable of
    tracking food supply chains, fostering transparency, and building trust among
    stakeholders. With blockchain, crucial data such as soil health, weather patterns,
    and crop yields can be recorded in an immutable fashion, serving as a reliable
    source of information for farmers and other industry participants. Furthermore,
    the adoption of blockchain-based smart contracts streamlines payment and settlement
    processes, reducing the risk of fraud and enhancing overall efficiency. The infusion
    of blockchain technology into smart agriculture plays a vital role in ensuring
    equitable pricing for farmers’ products and bolstering consumer confidence in
    the origin and quality of their food [10]. In comparison to other sectors, the
    agricultural industry has been relatively sluggish in embracing the latest technologies.
    Although modern machinery is utilized for production, pre-harvest and post-harvest
    processing still predominantly rely on traditional methods. This outdated approach
    results in farmers receiving inadequate payments, consumers lacking vital information
    prior to purchase, and intermediaries inflating retail prices. The incorporation
    of blockchain, smart contracts, and IoT devices can automate the entire process
    while establishing trust among all involved parties. This study delves into various
    facets of amalgamating blockchain and smart contracts with IoT devices for the
    pre- and post-harvest stages in agriculture. Our proposed system rests upon blockchain
    technology as its foundation, with IoT devices collecting field-level data and
    smart contracts governing interactions among all stakeholders. We provide illustrations
    and explanations of the system’s implementation, along with associated gas costs
    to enhance cost comprehension. Additionally, we conduct an analysis of the system’s
    challenges and advantages. Our study underscores the secure, transparent, and
    immutable attributes of blockchain technology within the agriculture industry,
    underscoring the substantial potential unlocked through the integration of blockchain,
    smart contracts, and IoT devices [11]. 1) Use of Blockchain in Cloud Architecture
    The use of blockchain technology in cloud architecture is gaining attention from
    researchers due to its potential to enhance security. This innovative idea is
    appealing because it offers a new approach to securing cloud infrastructure. There
    are several reasons why blockchain is considered necessary for distributed cloud
    storage, as outlined below. By employing blockchain technology, a decentralized
    cloud data storage system can be established, where data is stored across multiple
    nodes that are distributed globally. This approach offers redundancy and decentralization,
    which helps to ensure data security and. The use of blockchain technology can
    enable the efficient utilization of on-demand resource services requested by intelligent
    IoT devices through the use of intelligent contract algorithms. Once the requested
    services are completed, payment is automatically processed utilizing this technology
    [12]. Blockchain technology empowers every user to manage their private key while
    guaranteeing that each block in the blockchain contains encrypted data. As a result,
    it delivers comprehensive security without necessitating a third-party intermediary.
    With blockchain technology, it is possible to track the use of resources and verify
    service level agreements between clients and service providers. This capability
    enhances the quality of services provided by ensuring that all parties adhere
    to the agreed-upon terms [13], [14]. To create a secure and scalable infrastructure
    in an IoT network using edge computing, certain requirements must be met. The
    system design should adhere to the following principles: High-performance edge
    computing: The infrastructure should utilize edge computing technology to ensure
    that data processing and analysis would be ended quickly and efficiently. Scalability:
    The infrastructure should be designed to handle an increasing number of connected
    IoT devices without compromising security or performance. Security: The infrastructure
    should be built with security as a top priority, implementing measures such as
    encryption, authentication, and access control. Service-oriented architecture:
    The system should be designed with a service-oriented architecture, allowing for
    the creation and management of scalable, flexible, and secure services [15]. Interoperability:
    The system should support interoperability between devices and services, ensuring
    that data can be shared securely and efficiently. By adhering to these design
    principles, a secure and scalable infrastructure for IoT networks using edge computing
    can be developed to meet the challenges and future requirements of the IoT ecosystem.
    Remote sensing is used for the data monitoring 2) Research Contributions Utilizing
    edge computing to process IoT data streams can help reduce the load on centralized
    systems and improve data processing efficiency. Additionally, edge computing can
    enhance the security of data by performing analysis closer to the source, reducing
    the risk of data breaches during transmission. By developing an energy-efficient
    and secure framework for smart agriculture, the proposal can potentially improve
    the overall productivity and sustainability of the agricultural industry. On the
    IoT layer, in addition, a fuzzy-based algorithm is employed for the purpose of
    data aggregation to decrease redundancy and network traffic, which improves system
    efficiency. The edge server’s cache contains the most frequently used services,
    which the requested IoT devices will get. Blockchain technology is used in the
    procedure of registering newly requested IoT devices like sensors edge servers.
    Upon completing the registration process, the IoT system receives the preferred
    service code via the cloud server. 3) Organization The rest of the paper is structured
    as follows: Section II. discusses the related work. Section III presents an Efficient
    data aggregation with smart agriculture using the emerging technology of blockchain
    for validation of the edge server and services provided to the IoT devices from
    the proposed energy-efficient data aggregation algorithm; Section IV demonstrates
    the simulation results and performance from different points of view. Finally,
    section V suggests future work and the conclusion. SECTION II. Related Work The
    growing popularity of the Internet of Things (IoT) is evident due to the rise
    of smart devices and networks. This phenomenon is marked not only by the increasing
    number and diversity of available applications but also by the expanding user
    base for these applications. IoT, as an emerging concept, enables developers to
    connect multiple intelligent devices through various systems and technologies.
    This amalgamation of devices serves specific purposes, such as facilitating online
    learning and enabling multi-objective positioning. The IoT has had a significant
    impact on various aspects of human life, both in personal and professional domains
    [16]. It empowers machines to handle laborious tasks, automate mundane activities,
    and ultimately enhances human well-being by promoting a healthier, more productive,
    and more comfortable lifestyle. One industry significantly influenced by the IoT
    is agriculture, which has seen advancements in the precise and efficient management
    of farms and crops through the use of sensors, data analytics, and automation
    [17]. Smart agriculture systems, driven by the IoT, provide real-time insights
    into crop health, soil moisture levels, and weather conditions, enabling farmers
    to make informed decisions and optimize their operations. This data can be analyzed
    to make well-informed choices about irrigation, fertilization, and other aspects
    of crop management, resulting in more efficient and sustainable farming practices.
    Smart agriculture systems play a crucial role in helping farmers optimize crop
    yield, reduce waste, and enhance sustainability. However, the massive volumes
    of data generated by smart agriculture systems can pose challenges in terms of
    data storage, processing, and transmission. In response to these challenges, this
    research paper proposes an efficient data aggregation method for smart agriculture
    systems that utilizes blockchain technology [18]. Data aggregation in the realm
    of smart agriculture involves the collection of data from diverse sources associated
    with farming, such as sensors, drones, weather stations, and farm management systems.
    Subsequently, this data is merged and analyzed to facilitate informed decision-making.
    It plays a pivotal role in optimizing various facets of farming, including crop
    management, water usage, and resource allocation. Smart agriculture technology
    has brought about a revolution in the way farmers approach their operations. By
    deploying an array of sensors and monitoring equipment, farmers gain instant access
    to critical information concerning their crops, soil quality, and atmospheric
    conditions. This data guides decisions about when to plant, irrigate, and harvest
    crops, as well as determining the optimal fertilizer application and seed selection.
    Enhanced efficiency is one of the key advantages of data aggregation in agriculture
    [19]. The data gathered through these monitoring devices empowers farmers to make
    more informed choices about the efficient use of resources, leading to reduced
    waste, increased crop yields, and higher profits. Additionally, data aggregation
    aids in reducing the carbon footprint by minimizing resource use and waste generation
    on the farm. Improved crop management is another significant benefit of data aggregation.
    Through sensors and monitoring equipment, farmers can monitor crop growth and
    health in real-time. This real-time data informs decisions about irrigation, fertilization,
    and harvest timing, resulting in enhanced crop yields and decreased waste. Data
    aggregation also offers valuable insights into weather conditions and climate
    patterns. This data assists in determining the optimal timing for planting crops,
    as well as the appropriate water and fertilizer application. Moreover, it aids
    in anticipating weather-related challenges and planning accordingly. Smart agriculture
    encompasses the collection of data from a range of sources, including drones,
    sensors, farm management systems, and weather stations. This data is then transmitted
    to a central hub for aggregation and analysis. Utilizing data analytics, farmers
    harness this collected data to make well-informed decisions aimed at optimizing
    their operations. Ensuring the accuracy and reliability of data remains a primary
    challenge in data aggregation within agriculture [20]. This necessitates the proper
    installation and maintenance of sensors and monitoring devices, along with careful
    consideration of the data types being collected and analyzed. Additionally, the
    secure storage and protection of data are crucial to enable its effective use
    in the future. In addition to real-time data aggregation, smart agriculture incorporates
    advanced technologies such as precision farming, IoT (Internet of Things) sensors,
    drones, and machine learning algorithms. These technologies empower farmers to
    monitor and manage their crops and resources with greater precision, efficiency,
    and sustainability. As the global population continues to grow, the demand for
    food production is rapidly increasing. In response, the adoption of smart agriculture
    practices offers a promising solution to address this challenge while simultaneously
    mitigating the environmental impact of farming. This translates into heightened
    efficiency, improved crop management, and reduced waste, making it a critical
    tool for farmers aiming to excel in an increasingly competitive market. Cloud
    and IoT technology are commonly employed for real-time monitoring and evaluation
    of water reservoir quality and ranking. At present, this technology is being utilized
    for overseeing and collecting data on dam health to prevent the need for immediate
    action. In the proposed research, IoT sensors situated on cloud nodes will gather
    and transmit data to the dam management system. This system is constructed employing
    a blockchain architecture that offers security, verification, storage, data integrity,
    traceability of delivery tasks within the monitoring cloud system, and reimbursement
    of all responsible stakeholders for the delivery and sensing tasks [21]. The primary
    goal of utilizing blockchain technology is to operate in a decentralized model
    while maintaining a high level of security. According to recent research, blockchain
    and Bitcoin are considered the future of the finance industry [22]. The widespread
    use of IoT technology has raised various security risks, particularly when data
    is taken from a network cluster. Blockchain technology has the potential to improve
    the inherent privacy and security of IoT, as well as the dependability of data
    aggregation and data management. This paper describes a data-driven method for
    on-chain data allocation in an IoT blockchain system. A system is also built to
    arrange data using fuzzy logic to determine the Rating of Allocation value while
    taking into account many scenario elements such as data, network, and excellence
    [23]. In 2050 food, fiber, feed, and fuel were predicted, and according to this
    prediction, to meet global demand, important challenges must be overcome in order
    to obtain the agricultural production level required. Farming has faced important
    problems in the past that will have an impact on productivity increases by 2050
    [24]. These difficulties include finite resources, a lack of highly skilled labor,
    a lack of fertile land, and changing weather. This paper expresses that farming
    must become more intelligent by using new technologies and creativity that are
    built; this is focused on the integration of the Internet of Things (IoT) technology
    and information and communication technologies (ICT) in smart agriculture. Using
    fertilizer, water, and agrochemicals in a smart way in order to increase production.
    In this concept, the land becomes a subspace, where different sorts of sensors
    may collect diverse data. All sensors are internet-connected, and the information
    they gather is kept in a database that has all the necessary details on the land’s
    attributes [25]. Furthermore, implementing a dynamic sleep scheduling mode can
    enhance the longevity of a network compared to a fixed sleep scheduling method.
    A proven method for enhancing the lifespan of the network is to adopt this approach
    [26]. Agriculture, a critical industry serving as the primary source of food for
    human consumption and driving economic growth, is undergoing significant transformation
    with the advent of smart agriculture. This approach, leveraging technologies such
    as artificial intelligence, cloud computing, big data, and edge computing, aims
    to enhance agricultural operations. However, the security aspects of smart agriculture
    need attention despite its essential role. This study evaluates recent advancements
    in smart agriculture security, particularly focusing on open-field agriculture,
    addressing security concerns, design issues, and future prospects. The proposed
    smart system incorporates four layers—perception, network, edge, and application—to
    efficiently collect, process, and utilize agricultural data [27]. The Internet
    of Things (IoT) has emerged as a result of widespread smart technology use, impacting
    various industries, including agriculture. In smart agriculture, sensor nodes
    collect field or greenhouse data, sent to a control center for operational decisions.
    This research proposes an efficient data collection method prioritizing privacy
    and security. Utilizing a genetic algorithm and unmanned aerial vehicles, the
    study enhances system performance, emphasizing six critical components: system
    user, control center, UAV, greenhouse, smart sensor node, and automatic control
    equipment [28]. Addressing the challenges faced by smallholder farmers, who contribute
    significantly to global food production, this study introduces blockchain technology.
    It facilitates trust, reduces transaction-related risks, and provides confidence
    to farmers in their exchanges. Moreover, IoT merged with unmanned aerial vehicles
    presents a low-cost platform for agricultural modernization. This approach, employing
    IoT-based above-ground and below-ground sensors, facilitates data collection,
    enhancing environmental forecasting and agricultural productivity [29], [30].
    Smart agriculture, utilizing technologies like IoT, addresses challenges in food
    production. This study aims to identify essential IoT-enabled smart agricultural
    infrastructure, including platforms, networks, data processing technologies, techniques,
    and applications. Unlike traditional passive data approaches, modern techniques
    enable proactive agricultural disease prevention and crop diagnostics [31]. In
    the domain of agricultural production, wireless sensor networks powered by IoT
    have been employed to determine production or yield status. However, these networks
    face limitations in processing power, energy consumption, transmission range,
    and memory capacity. To address these challenges, the researchers suggest an IoT-based
    wireless sensor network framework. This framework, incorporating security measures,
    enables effective data collection, transmission, and processing across various
    fields, including agriculture, industry, and environmental monitoring [32], [33].
    The 21st century has witnessed a transformative impact of IoT and smart computing
    technologies on various aspects of life, including smart agriculture. Farmers
    use smart devices for real-time monitoring of crop conditions and soil moisture,
    employing technologies like drones for tasks such as pesticide spraying and field
    monitoring. This comprehensive study delves into security and privacy concerns
    in the context of a smart farming ecosystem, addressing prospective cyber-attack
    scenarios, open research issues, and future directions [34]. Blockchain technology,
    when combined with IoT, proves transformational. This study introduces an effective
    routing method incorporating blockchain for distributed nodes. IoT devices, though
    intelligent, face challenges due to limited power and storage. The study showcases
    how these devices solve global community problems efficiently [35]. The proposed
    protocol operates on a heterogeneous Internet of Things (IoT) network to determine
    a route to the base station, aiming to block and delete redundant data, mitigate
    IoT architecture attacks, and reduce energy usage while extending network life
    [3]. In wireless sensor networks (WSNs), including applications in communication,
    industry, and agriculture, the integration of IoT and WSNs automates farm systems,
    enhancing crop productivity through various sensors. Researchers propose an energy-efficient
    data aggregation protocol in an IoT-based WSN architecture for smart agriculture,
    employing sensors to gather field data and determine cluster heads. The clustering
    concept, widely used in wireless sensor networks, extends device life and conserves
    energy, with the integration of a sleep node scheduling approach to reduce data
    redundancy, network traffic hopping, and transmission costs. The article also
    introduces blockchain into a cloud server for security purposes [36]. The Internet
    of Things (IoT) is progressively transforming the traditional Internet into a
    network of wireless objects, linking sensing devices. However, energy consumption
    by IoT routing protocols can impact network lifespan, leading to transmission
    collisions and data security concerns. To conserve energy, nodes are placed in
    sleep mode, utilizing a fuzzy matrix to split nodes based on similarity [4]. The
    advent of IoT devices has given rise to the concept of “smart farming,” allowing
    real-time data collection in agriculture. The agriculture sector, crucial for
    meeting global food demands, has undergone a redesign with IoT technologies, enhancing
    resource efficiency. This comprehensive investigation explores the use of IoT
    devices and wireless sensors in agriculture, detailing various sensors for soil
    grounding, harvest monitoring, irrigation regulation, and pest detection. The
    proposed IoT-based WSN architecture for smart agriculture involves stages of sensor
    deployment, cluster head determination, signal intensity maintenance, and security
    measures for data transmission [37]. Smart technologies, including IoT, cloud
    computing, machine learning, and artificial intelligence, play a pivotal role
    in agriculture. The integration of IoT devices and wireless sensors has revolutionized
    the sector, enabling informed decision-making for farmers. Various technologies
    and sensors in smart farming address tasks such as weather data collection, crop
    monitoring, disease detection, and livestock tracking. Challenges and gaps in
    current research related to IoT in smart agriculture are identified, urging further
    study for global food production improvement [38]. The application of cutting-edge
    technology like IoT and artificial intelligence provides practical solutions to
    global challenges, particularly in addressing food scarcity and population expansion.
    This article explores novel techniques in intelligent farming, involving data
    gathering, transmission, preservation, and examination. The use of unmanned aerial
    vehicles (UAVs) and robots is highlighted for tasks such as harvesting, planting,
    and insect control. Leveraging 5G mobile networks is emphasized for building smart
    systems, crucial for rapid data transfer and efficient device management [39].
    The Internet of Everything (IoE) serves as a contemporary platform connecting
    people, data, and objects over a shared network. This study presents an efficient
    IoE smart agricultural model and introduces soil smart agriculture, a method for
    monitoring soil quality based on sensors. The comprehensive IoE framework is interconnected,
    incorporating a case study called SSA for soil data gathering and transmission
    [40]. Research on energy-efficient wireless sensor networks in IoT-based smart
    agriculture emphasizes the challenge of finding data efficiency at the base station.
    Energy harvesting is employed to maintain energy balance, investigating topics
    like estimating solar energy for energy neutrality and calculating energy requirements
    at random times. Precision agriculture utilizes various sensors for continuous
    field monitoring, and an Improved Duty Cycling algorithm is proposed to enhance
    energy efficiency, outperforming other algorithms in metrics such as average energy
    consumption, residual energy performance, and throughput [1]. Recent years have
    seen increasing interest in using IoT in agriculture, with wireless sensor network
    (WSN) based IoT installations recommended for various industries. The Routing
    Protocol for Low Power and Lossy Networks (RPL) has been introduced for IoT, but
    modifications are needed for precision agriculture. This study presents an adapted
    version of RPL specifically designed for IoT-based precision agriculture, proposing
    an energy-efficient hierarchical routing structure. The improved RPL is scalable
    and low-energy, with performance analysis based on an analytical model and future
    scope considerations [41]. Smart agriculture, a rapidly expanding study area,
    addresses the increasing demand for food production driven by a growing human
    population. It transforms farming methods by enabling real-time data collection
    for informed decision-making. The focus is on improving food quality through regulated
    production, emphasizing nutritional elements and reduced pesticide usage. Electronics
    and sensor technologies play a pivotal role in achieving these goals, with sensors
    evaluating plant health and fruit conditions, including chlorophyll meters, moisture
    sensors, and color sensors. Additionally, sensors monitor ambient conditions like
    temperature, humidity, and light. This comprehensive overview empowers farmers
    to make informed decisions on crop management [42]. Automation in agriculture
    becomes crucial to meet rising food demand due to population growth. Traditional
    farming methods prove inefficient, leading to disrupted agricultural development.
    This study explores the adoption of the Internet of Things (IoT), aerial photography,
    and various cameras coupled with machine learning and artificial intelligence
    to address agricultural challenges. These technologies effectively tackle issues
    such as plant diseases, pesticide control, weed management, irrigation, and water
    management, ultimately enhancing crop output and soil fertility [43]. The shift
    toward a “smart” approach in agriculture, driven by emerging technologies, introduces
    Radio Frequency Identification (RFID) sensing technology. This technology finds
    applications in four key aspects of agriculture: plant environment, harvest quality,
    soil characteristics, and plant growth. The study outlines the benefits and drawbacks
    of adopting RFID sensing technology to address agricultural challenges [44]. The
    integration of IoT in health monitoring systems for COVID-19 patient detection
    aligns with the global goal of achieving “Zero Hunger.” Current technologies optimize
    agricultural activities sustainably, supporting farmers and increasing productivity.
    The drive for technical progress revitalizes old agricultural processes, leading
    to recyclable, supportable, and efficient farming practices. The survey explores
    technological approaches, application sectors, available datasets, research issues,
    and proposes solutions and potential research directions [46]. Precision farming,
    enabled by cutting-edge technologies like unmanned aerial vehicles (UAVs) and
    IoT, has ushered in a new era. This study provides an overview of IoT technology,
    encompassing intelligent sensors, diverse IoT sensors, networks, and protocols
    specifically employed in agriculture. It emphasizes IoT and UAV as critical technologies
    revolutionizing traditional agricultural methods into precision agriculture intelligence
    [2]. The agricultural industry’s adoption of new technology lags behind other
    sectors, with traditional methods still prevalent in tracing, storing, and disseminating
    agricultural data. This study proposes a system for automating pre- and post-harvest
    phases using blockchain, smart contracts, and IoT devices. Leveraging these technologies
    enhances confidence and transparency among stakeholders, utilizing IoT devices
    for data collection and blockchain for data storage, immutability, transparency,
    and security [48]. Smart farming, extensively employing the Internet of Things,
    aims to collect and utilize data efficiently for increased agricultural productivity.
    Addressing security and privacy concerns associated with data collection, this
    article suggests a blockchain-based solution for smart agricultural data aggregation
    with privacy protection and fault tolerance, demonstrating effectiveness in safeguarding
    both privacy and data [49]. The essay explores research issues around safe and
    private green IoT-based agriculture, presenting a four-tier architecture and evaluating
    threat models. It provides a taxonomy and comparative analysis of privacy protection
    methods, including consensus algorithms and blockchain-based solutions. The study
    identifies future research areas, emphasizing security and privacy for green IoT-based
    agriculture [50]. Agriculture, a vital component of human life, sustains the world’s
    population and provides employment opportunities. Despite its significance, many
    farmers still rely on conventional techniques, resulting in low yields. Challenges
    such as crop selection and support system implementation impact agricultural production.
    This study introduces a framework for smart crop tracking and monitoring, utilizing
    Internet of Things (IoT) camera mobile applications and big data analytics. Employing
    hardware like Arduino Uno, sensors, and a Wi-Fi module, the goal is to reduce
    waste and enhance energy efficiency [51]. The domain of smart farming, influenced
    by IoT, involves data collection for analysis and decision-making. This survey
    explores big data classification in smart farming, detailing common uses and machine
    learning approaches for data analysis. It addresses challenges in big data analysis
    for smart farming and suggests approaches for more successful farming through
    informed decision-making using relevant data [52]. Information and communication
    technology advancements in agricultural machinery, sensors, and IoT have led to
    modern techniques disrupting traditional practices. This research explores wireless
    sensor applications, potential challenges, and the integration of robots and artificial
    intelligence. The study envisions technological benefits across the crop cycle,
    from planting to harvest, with applications in packaging and transportation [53].
    Smart farming, a modern approach to agriculture, leverages IoT technologies for
    efficient farm management. This study discusses the emerging concept of “smart
    farming” and its reliance on IoT-enabled sensors and drones to monitor environmental
    factors. Smart farming enhances operational efficiency and enables rapid responses
    to weather conditions. The study emphasizes the problems and uses of smart farming
    for agricultural growth [55]. Conventional agricultural practices, still prevalent
    globally, hinder crop output. The IoT emerges as a crucial technology to revolutionize
    agriculture, addressing issues of productivity, quality, and costs. Sensors and
    devices connected through the IoT allow remote monitoring of crops and soil conditions,
    making the process more efficient and data-driven. Smart farming, facilitated
    by the IoT, holds the potential to address critical food-related challenges [57].
    The integration of blockchain with IoT aims to establish secure communication
    infrastructure. This study explores the viability of cloud and fog computing as
    hosting platforms for blockchain. It introduces a novel blockchain-based mechanism
    called Dual Fog-IoT, dividing fog levels into distinct parts to manage real-time
    data transmission and network traffic. The study also proposes a data-centric
    solution for on-chain data allocation in an IoT blockchain system, enhancing privacy,
    security, accuracy, and efficiency [59], [60], [11]. Various security issues in
    IoT data collection are addressed through blockchain technology. This study proposes
    a data-centric solution using fuzzy logic for on-chain data allocation, considering
    situational factors like data, network, and quality. Additionally, an energy-efficient
    data communication system using blockchain in smart cities is presented [61],
    [62]. SECTION III. Proposed Framework Figure 1 illustrates the proposed architecture
    of the smart agriculture system, consisting of five primary components: sensors,
    a base station, a mobile app, an edge server, and a cloud layer with integrated
    blockchain technology. The sleep schedules method is applied to group and schedule
    sensors for data collection at specific times, reducing energy consumption and
    extending battery life. Each group or cluster is directly connected to the base
    station, utilizing the LEACH wireless network protocol for clustering and data
    transmission. IoT devices collect data from monitored agricultural infrastructure,
    filter it using a fuzzy matrix, and transmit it to the local base, which forwards
    it to the edge server located outside the fields. The edge server plays a crucial
    role in real-time processing and analysis, receiving requests from IoT devices,
    examining service requests, and checking the cache for recent service usage. When
    a service request is received, the edge server verifies the cache, providing an
    immediate response if available; otherwise, it connects with the cloud server
    to obtain the necessary service securely using blockchain technology. To optimize
    communication and reduce power consumption, IoT devices employ various techniques
    such as signal strength detection, distance calculation, and power consumption
    adjustment using sensors. All IoT devices have data fusion capabilities, transmitting
    equal-sized data packets over the network. Energy consumption during data transmission
    cycles is calculated based on communication and data reception efficiency, enabling
    a more precise estimation of the energy required for data transmission. Each IoT
    device has a unique ID for identification purposes, and message scheduling in
    the IoT-based network is presented to save network energy [63]. FIGURE 1. Proposed
    system architecture. Show All Furthermore, the cluster formation involves placing
    wireless sensor nodes in the field, organizing them into clusters based on geographical
    closeness and other characteristics. Each cluster is managed by a cluster head
    (CH), serving as a liaison between the nodes and the base station. The sleep schedule,
    controlled by the CH, ensures nodes conserve energy by staying in sleep mode when
    not scheduled to communicate. The sleep schedule is designed to stagger wake-up
    times, reducing the likelihood of collisions and interference within the same
    cluster. Data collection involves each node within the cluster gathering data
    on environmental factors relevant to crop growth, such as temperature, humidity,
    and soil moisture. Data aggregation occurs when a node wakes up according to its
    schedule, transmitting collected data to the CH, which aggregates it for further
    analysis at the base station. A. Proposed an Efficient Data Aggregation for Smart
    Agriculture To monitor the condition of the fields, sensors are strategically
    positioned in the area. Spatial correlation is present in the data collected from
    these fields. To enhance energy efficiency and streamline data collection, a combination
    of sleep and wake modes is implemented, emphasizing the importance of sleep patterns
    in managing data redundancy and communication variations. Utilizing sleep and
    scheduling strategies enables nodes to conserve significant amounts of energy
    by entering a dormant state. The key objective is to employ a fuzzy matrix to
    categorize nodes with a high degree of data similarity. The Cluster Head (CH)
    analyzes the data received from member nodes to further process the information.
    To ensure effective clustering, an initial step involves creating a fuzzy similarity
    matrix. Following the clustering process, specific wireless sensor nodes are selected
    from each group to serve as redundant nodes. Subsequently, a sleep scheduling
    technique is applied to reduce data redundancy, alleviate network congestion,
    and minimize transmission costs. The collaboration effectiveness between two wireless
    sensor nodes, Xa and Xb, is evaluated based on their spatial distance using a
    calculated function denoted as (a, b). When the distance between two nodes is
    significant, data is collected under the assumption of no spatial correlation
    between them. This approach aims to optimize the utilization of resources in wireless
    sensor networks and enhance their overall efficiency. TABLE 1 Existing Work Comparison
    Regarding Their Features, Drawback, and Advantages The clustering of observed
    items is executed using the fuzzy matrix, resulting in diverse categorization
    outcomes at distinct confidence levels, ultimately generating a dynamic clustering
    network. X={ X 1 , X 2 , X 3 … X n }, (1) View Source Let us assume that the sensor
    network represents the total number of deployed nodes within the cluster, where
    ‘x’ denotes the count of all the sensor nodes present. The matrix ‘M’ is defined
    as a two-dimensional array of size ‘n * t’, where ‘n’ represents the number of
    member nodes and ‘t’ represents the number of intervals. Each element of the matrix
    ‘Mab’ represents the data collected by the member node ‘Sa’ at the time ‘u’. M=(M)
    n ∗ t View Source In the beginning, standard and shift deviation transformations
    were used to normalize the elements of the matrix ‘M’. m ′ ab= m ab− m ¯ b n b
    , (a=1,2,3..., n, b=1,2,3..., n) m ¯ b= 1 n ∑ n b=1 x ab, n b= 1 n ∑ n a=1 (m−
    m b ) 2 − − − − − − − − − − − − − − − − √ , (2) View Source In the equation, ’
    m ab ’ represents the element in the matrix ‘M’ at the row ‘a’ and column ‘b’.
    ’ m b ’ represents the mean value of the data in column ‘b’, and ’ n b ’ represents
    the number of elements in column ‘b’. The standard and shift deviation transformation
    is used to make the data in the matrix ‘M’ comparable and to eliminate the effect
    of scale differences between the columns. For d’ αb∉ [0, 1], it is essential to
    construct another process for the exceptional dimension. m ′′ ab = m ′ −min1≤a≤n{
    m ′ ab } max1≤a≤n{ m ′ ab }−min1≤a≤n{ m ′ ab } , (3) View Source The fuzzy correlation
    matrix S = ( m ′′ ab ) n × t can be obtained. A fuzzy similarity matrix is created
    using the similarity coefficient approach by looking at the spatial correlation
    of the data obtained from those nodes. r ab = ∣ ∣ ∑ t k=1 ( m ak m ¯ b )( m bk
    − m ¯ b ) ∣ ∣ ∑ t k=1 ( m ak − d ¯ a ) 2 − − − − − − − − − − − − − − − √ ∑ t k=1
    ( m bk − m ¯ b ) 2 − − − − − − − − − − − − − − √ (4) View Source The process of
    reducing the matrix Sλ , which is represented as ( r ab ( λ) ), is performed for
    related fuzzy matrices using the method of λ -truncation.” Sλ is a Boolean matrix,
    so the node grouping in the Boolean matrix Sλ is dependent on the value of λ being
    equal to 10r. The following are the specific rules for grouping the node. if the
    T and Sλ matrix is equal the nodes group will be directly maintained Grouping
    the nodes won’t be used if Sλ is transformed into an equal Boolean matrix according
    to the criteria. To determine the similarity between nodes in a dataset, a fuzzy
    matrix is employed. By setting λ1 = 1, a class equivalent form of [da]S is established,
    where [ma]S = {ma | rab = 1}5 for each ma. The attributes of the node “mb” class
    are indicated if the specified condition holds true. By identifying the largest
    value of λ2 ( λ2<λ1 ) in the matrix S, i.e., r ab =λ2 the element pair ( m a m
    b ) with a similarity degree of λ2 can be determined. This leads to the merging
    of ma and mb into a single class with a similarity collection on the λ2 level.
    This process continues with λ1>λ2>…λp until all elements in set ‘S’ have been
    merged into a single class. The number of classes for clustering, P, can be determined.
    After applying the clustering technique, the sensor nodes are sorted into multiple
    groups based on the similarity of the observed region to other areas. To enhance
    energy efficiency, several nodes in each group are chosen as redundant nodes and
    scheduled for sleep. m (a) a represents the (i-th) node in category W, and the
    number of nodes in category and is given by: a= ∣ ∣ m (w) ∣ ∣ , ∑ k a=1 ∣ ∣ m
    (w) ∣ ∣ =n, (5) View Source To calculate the difference between the data being
    gathered from the sensor nodes during time slot m, we have: Calculate_Distance
    ( n (w) a , m (w) b )= ∑ t a=1 ( m (w) a − m b ) 2 − − − − − − − − − − − − − −
    − − − √ , (6) View Source While using the sleep scheduling strategy on redundant
    sensor nodes, information should not be lost. The redundant nodes selection function
    is given below as: n (a) ∗ =avge min{ ∑ v a=a calculate_dis( n (w) a , n (w) b
    )}, (7) View Source Finally, n (a) ∗ represents the nodes selected as redundant
    from the category. B. Proposed (An Efficient Data Aggregation in Smart Agriculture
    Using Blockchain) Algorithm 1) Blockchain Integration Blockchain Selection: The
    choice of a blockchain platform should be aligned with the specific requirements
    of smart agriculture. The authors may opt for a public blockchain like Ethereum
    or a permissioned blockchain like Hyper Ledger Fabric, depending on factors such
    as data privacy and scalability needs. Data Storage: Data collected from various
    sensors is securely stored on the blockchain. Each data point is recorded as a
    transaction on the blockchain, ensuring transparency and immutability. Consensus
    Mechanism: The study selects an appropriate consensus mechanism to validate and
    add transactions to the blockchain. The choice might involve factors like energy
    efficiency and network performance in the context of agriculture. Algorithm 1
    Proposed (An Efficient Data Aggregation in Smart Agriculture using Blockchain)
    Algorithm 1 Create an empty matrix ‘M’ for the storage of the rubbish data. 2
    Initialize threshold/brink and DB to zero. 3 Transform matrix M into a fuzzy matrix
    S. 4 Group member nodes into ‘P’ categories and randomly select a broker. 5 For
    each category W: 6 For each node nominated as ‘E’, ‘f’ belongs to n (w) 7 Calculate
    confidence distance Calculate_Distance ( n (w) a , n (w) b ) between data from
    the node ( n (w) a , n (w) b ) 8 n (v) ∗ = agrSUM Calculate_Distance ( n (w) a
    , n (w) b ) 9 End for 10 End for 11 Obtain the set of redundant nodes {X1, X 2,…,
    X t}. 12 For each node belonging to {X 1, X 2,…, X t} 13 Send a Schedule_MSG(CH_id,
    id, Status_flag) message. 14 Receive a Schedule_MSG_ACK after the acknowledgment
    message. 15 End for. 16 End for. Smart Contracts: The authors may employ smart
    contracts to automate certain processes within the agricultural framework. For
    instance, when sensors detect anomalies like pest attacks, smart contracts can
    trigger automated responses, such as alerting farmers or initiating pest control
    measures. 2) Cluster Head Sleep Schedule Cluster Formation Sensors are organized
    into clusters based on geographical proximity. Each cluster is overseen by a cluster
    head, which helps in efficient data collection and management. Data Aggregation
    The Cluster Head Sleep Schedule method optimizes data aggregation by reducing
    redundancy. Similar data can be grouped together using techniques like fuzzy matrix
    analysis, enhancing the efficiency of data collection. Sleep Scheduling After
    data aggregation, the sleep schedule is implemented. This process involves identifying
    sensors within each cluster that can be placed in a low-power sleep mode while
    others remain active. The criteria for selecting these sensors can encompass factors
    like data uniqueness and energy levels. Pest Attack Control The sleep scheduling
    mechanism is strategically applied to enable prompt responses to pest attacks.
    When a pest attack is detected, active sensors within the affected cluster can
    be swiftly awakened to address the situation. 3) Potential Limitations and Challenges
    Blockchain Scalability Blockchain systems may face challenges in terms of scalability
    when dealing with a vast number of sensors and data transactions. This can result
    in slower transaction processing times and increased costs, which need to be addressed.
    Energy Management While the Cluster Head Sleep Schedule method aims to conserve
    energy, challenges may arise in scenarios with limited power resources. Effective
    energy management and the use of energy-efficient hardware are essential. Data
    Privacy Ensuring data privacy is crucial when integrating Blockchain into agricultural
    systems, especially if sensitive information is collected. Encryption and privacy
    measures are required to safeguard data. Integration Complexity The integration
    of Blockchain and the Cluster Head Sleep Schedule method may involve complex hardware
    and software integration efforts. This could lead to higher initial costs and
    technical challenges during implementation. Regulatory Compliance Complying with
    agricultural and data privacy regulations is important. Navigating legal frameworks
    while harnessing the benefits of Blockchain technology is essential. User Adoption
    Farmers and stakeholders may require training and user-friendly interfaces to
    effectively use and benefit from these technologies. User adoption and acceptance
    can be a challenge. Network Connectivity In remote agricultural areas, limited
    network connectivity can pose challenges in transmitting data reliably from sensors
    to the Blockchain and cluster heads. Addressing these limitations and challenges
    is essential to realize the full potential of “Optimized Data Fusion with Scheduled
    Rest Periods for Enhanced Smart Agriculture via Blockchain Integration” while
    maximizing the benefits of improved data fusion and pest attack control in smart
    agriculture. Implementing blockchain technology and the sleep schedule method
    in smart agriculture can have several potential impacts, including increased efficiency,
    transparency, and sustainability. Improved Data Management Blockchain Blockchain
    can provide a secure and immutable ledger for recording data related to crop growth,
    weather conditions, and supply chain information. This can enhance data accuracy
    and integrity, helping farmers and stakeholders make informed decisions. Sleep
    Schedule Method: Using sleep schedules for irrigation and other agricultural processes
    can optimize resource utilization. This method can reduce water and energy usage,
    leading to cost savings and environmental benefits. Supply Chain Transparency:
    Blockchain: It enables end-to-end visibility in the supply chain. Consumers can
    trace the origin of agricultural products, ensuring food safety and quality. Farmers
    can also receive fair compensation by eliminating intermediaries. Reduced Fraud
    and Traceability: Blockchain: With its tamper-resistant nature, blockchain can
    prevent fraud in the supply chain. Farmers can demonstrate the authenticity of
    their products, and consumers can verify their provenance. Precision Agriculture
    Sleep Schedule Method: The sleep schedule approach optimizes the timing of agricultural
    activities. It can help reduce overuse of resources like water and fertilizers,
    leading to cost savings and reduced environmental impact. Environmental Impact
    Reduction Blockchain: By providing traceability and transparency, blockchain can
    encourage sustainable farming practices, reducing the environmental impact of
    agriculture. Data-Driven Decision Making Blockchain: Data recorded on the blockchain
    can be analyzed to gain insights into crop performance, resource usage, and supply
    chain efficiency, leading to better decision-making. Sleep Schedule Method: Data
    on crop growth and environmental conditions can be used to optimize sleep schedules,
    ensuring crops receive the right care at the right time. To assess the concrete
    impact of implementing these technologies in smart agriculture, it’s advisable
    to look for recent case studies and reports from agricultural organizations, technology
    providers, and research institutions, as the industry is continually evolving.
    These sources may provide real-world examples of how blockchain and precision
    agriculture methods like the sleep schedule approach have influenced the sector.
    Impact on Smart Agriculture: What is the potential impact of implementing blockchain
    technology and the sleep schedule method on the broader smart agriculture industry?
    Are there any specific metrics or case studies demonstrating this impact? Immutable
    Record: Blockchain’s immutability is both a strength and a challenge. On one hand,
    it ensures data integrity and transparency. On the other, it means that once data
    is recorded, it cannot be easily altered or deleted. The robustness of the discussion
    typically includes strategies for handling erroneous data entries, ensuring compliance
    with data regulations, and managing the “right to be forgotten.” Public vs. Permissioned
    Blockchains: The choice between public and permissioned blockchains has implications
    for data security and privacy. Public blockchains offer more transparency, but
    permissioned blockchains provide greater control. The discussion often focuses
    on selecting the appropriate type based on the use case. Data Encryption: Robust
    discussions revolve around data encryption methods to protect sensitive information.
    Advanced encryption techniques, such as zero-knowledge proofs, are explored to
    ensure data privacy. Identity Management: Managing identities on the blockchain
    is essential for controlling access and maintaining privacy. Decentralized identity
    management systems are discussed to give users more control over their personal
    data. Smart Contracts: The discussion includes security and privacy implications
    of smart contracts. Ensuring that sensitive data is not exposed through smart
    contracts and implementing role-based access control are key aspects. Data Sharing
    and Consents: Discussion covers mechanisms for obtaining user consent for data
    sharing and how it is recorded on the blockchain. It also includes discussions
    on controlling access to shared data. Potential Vulnerabilities and Challenges
    Data Leakage: Despite the immutability of blockchain, sensitive data can be exposed
    if not handled properly. Private keys and confidential information may become
    vulnerable, especially in permissionless blockchains where public access is more
    open. Privacy Regulations: Meeting data privacy regulations, such as the General
    Data Protection Regulation (GDPR), is a challenge. Blockchain’s transparency can
    conflict with GDPR’s “right to be forgotten.” Solutions like off-chain storage
    of personal data or zero-knowledge proofs may be required. 51% Attacks: In public
    blockchains, a single entity controlling 51% of the network’s mining power can
    manipulate the data, leading to privacy breaches. Robust discussions explore consensus
    mechanisms to mitigate this risk. Quantum Computing: The potential advent of quantum
    computing threatens existing encryption methods. Preparing for quantum-safe encryption
    is an ongoing challenge in blockchain discussions. Loss of Private Keys: If private
    keys are lost, access to blockchain data is permanently denied. Robust discussions
    emphasize the need for secure key management and recovery solutions. Data Resilience:
    Data stored on the blockchain can be lost if not properly backed up. Discussions
    include strategies for data redundancy and recovery. Scalability: Blockchain scalability
    solutions like sharding or sidechains may introduce potential security and privacy
    issues, which need to be thoroughly discussed and addressed. In summary, the discussion
    around data security and privacy in blockchain technology is robust and continually
    evolving. It addresses various aspects of blockchain technology, from encryption
    and access control to compliance with data protection regulations. However, there
    are vulnerabilities and challenges that require ongoing attention and innovation
    to ensure that blockchain remains a secure and privacy-preserving technology for
    applications like smart agriculture. 4) Scalability Considerations Transaction
    Throughput Scalability is often measured in terms of the number of transactions
    or data points the blockchain can handle per second. The authors should explain
    how the system’s transaction throughput is maintained as the system scales up.
    Network Load In larger systems, there will be more data transmission and network
    traffic. Authors should discuss how the network can handle the increased load
    and whether there are provisions to optimize data transmission. Consensus Mechanism:
    If using a public blockchain, the chosen consensus mechanism should be evaluated
    for scalability. Some mechanisms may struggle to maintain performance as the network
    grows. Feasibility Considerations Costs: Authors should provide insights into
    the feasibility of their approach regarding implementation and operational costs.
    Larger systems often come with higher hardware, software, and maintenance expenses.
    Authors should discuss strategies to manage costs effectively. Hardware Requirements:
    The feasibility of deploying the proposed system in larger agricultural areas
    may depend on the hardware requirements. Authors should detail the types of hardware
    needed and assess whether these are readily available and affordable. Energy Efficiency
    As the system scales, energy consumption becomes more critical. Authors should
    discuss how energy-efficient their approach is and whether it can be feasibly
    maintained in larger agricultural systems. User Adoption: Ensuring that the system
    is user-friendly and that farmers and stakeholders can effectively use it at scale
    is vital for feasibility. Authors should consider user training, interface design,
    and support services. Scalability Tests Authors should ideally conduct scalability
    tests to evaluate how the proposed system performs as it scales up. These tests
    might include: Transaction Load Testing Testing how the system handles an increasing
    number of transactions or data points over time. Simulated Network Load Testing
    Simulating a larger network environment to assess the system’s performance under
    conditions that mimic real-world usage. Consensus Mechanism Stress Testing: Evaluating
    the scalability of the chosen consensus mechanism under varying loads. Energy
    Consumption Testing Assessing the system’s energy consumption and whether it remains
    within acceptable limits as the system scales. Cost Projections: Providing cost
    projections for implementing and operating the system at a larger scale. 5) Soil
    Moisture Monitoring Deployment IoT sensors are embedded in the soil to monitor
    moisture levels. These sensors can be strategically placed throughout the agricultural
    field. Utilization Sensors continuously measure soil moisture and transmit data
    to the cluster heads. This data is crucial for efficient irrigation, ensuring
    that crops receive the right amount of water. Benefits Blockchain ensures the
    integrity of the moisture data, making it tamper-proof. The Sleep Schedule method
    optimizes energy usage, extending the lifespan of the sensors and reducing maintenance
    costs. Crop Health Monitoring Deployment: IoT sensors equipped with cameras and
    environmental sensors are deployed in crop fields. Utilization: These sensors
    monitor crop health, detecting diseases, pests, and environmental conditions like
    temperature and humidity. Benefits: Data from these sensors is securely stored
    on the blockchain, enabling traceability of crop health over time. The Sleep Schedule
    method conserves energy and prolongs sensor lifespans. 6) Livestock Monitoring
    Deployment IoT sensors are attached to livestock, collecting data on their health
    and location. Utilization Sensors track the well-being and movements of animals,
    providing insights into their health and behavior. Benefits: Blockchain ensures
    the authenticity of livestock data, which is important for traceability and disease
    control. The Sleep Schedule method minimizes the need for frequent battery replacements.
    Weather and Climate Monitoring Deployment: IoT weather stations are set up in
    agricultural areas. Utilization: These stations collect real-time data on temperature,
    humidity, wind speed, and precipitation. Benefits: Data from these stations, when
    stored on a blockchain, can be shared with neighboring farms, providing a comprehensive
    view of local weather conditions. The Sleep Schedule method optimizes the stations’
    energy usage, reducing the need for frequent maintenance. Crop Harvest and Storage
    Monitoring Deployment: IoT sensors are placed in storage facilities and on harvesting
    equipment. Utilization These sensors monitor conditions such as temperature, humidity,
    and pest infestations to ensure the quality and safety of harvested crops during
    storage. Benefits: Storing sensor data on the blockchain enhances transparency
    and quality control. The Sleep Schedule method extends the life of sensors in
    storage facilities, reducing operational costs. Supply Chain and Traceability
    Deployment: IoT sensors are used to track the movement of agricultural products
    from farm to consumer. Utilization: Sensors record data at each stage of the supply
    chain, including harvest, transportation, and storage. Benefits: Blockchain ensures
    the authenticity and integrity of supply chain data, enabling consumers to trace
    the origin of products. The Sleep Schedule method minimizes the energy consumption
    of sensors in transit, allowing for longer battery life. Pest Attack Detection:
    Deployment: IoT sensors equipped with pest detection technology are deployed throughout
    the field. Utilization: Sensors continuously monitor for signs of pest attacks
    and transmit data when detected. Benefits: Pest attack data is securely stored
    on the Blockchain, ensuring data immutability. The Sleep Schedule method allows
    for immediate response to detected attacks while preserving sensor energy. These
    examples illustrate how IoT sensors play a pivotal role in smart agriculture by
    providing real-time data for informed decision-making. Integrating Blockchain
    technology and the Cluster Head Sleep Schedule method enhances data security,
    reduces energy consumption, and ensures the longevity of sensors, making smart
    agriculture more efficient and sustainable. Interoperability: Are there specific
    standards or protocols mentioned that ensure interoperability between various
    smart agriculture systems, or is this an area where further development is needed?
    Existing Standards and Protocols: IoT Protocols: Authors may discuss the use of
    standardized IoT protocols MQTT which facilitate communication between various
    IoT devices and sensors. These protocols are used to ensure interoperability in
    smart agriculture systems. Wireless Communication Standards: Communication standards
    like LoRaWAN and NB-IoT are commonly employed in smart agriculture to enable long-range
    and low-power communication between sensors and gateways. These standards enhance
    interoperability. Data Formats: The use of standardized data formats, such as
    JSON or XML, can ensure that data from different devices and sensors can be easily
    interpreted and processed by various systems. Open Platforms: Some authors may
    discuss the use of open platforms and ecosystems that promote interoperability.
    These platforms may provide APIs and interfaces that allow third-party applications
    and devices to integrate seamlessly. Challenges and the Need for Further Development:
    Fragmented Ecosystem: In some cases, the smart agriculture ecosystem can be fragmented,
    with various proprietary systems and devices that don’t easily communicate with
    one another. Authors might point out the need for more standardized approaches.
    Semantic Interoperability: Achieving semantic interoperability, where data has
    consistent meaning across different systems, can be a challenge. Authors could
    discuss the need for semantic models or ontologies in smart agriculture to address
    this. Data Security: Ensuring interoperability without compromising data security
    and privacy is a concern. Authors may mention the need for secure communication
    protocols and access control mechanisms to address this issue. Regulatory Compliance:
    Some standards and protocols might be influenced by regional or national regulations,
    which can vary. Authors might discuss the challenges of adhering to different
    compliance requirements and the need for harmonization. Emerging Technologies:
    The field of smart agriculture is continually evolving with the introduction of
    new technologies. Authors might emphasize the importance of flexible standards
    that can adapt to emerging innovations. Recommendations for Interoperability Authors
    should provide recommendations and insights into how interoperability challenges
    can be addressed. This could include advocating for the adoption of specific standards,
    the development of common data models, or the use of open APIs to promote interoperability.
    In summary, authors should clearly communicate whether their research addresses
    interoperability in smart agriculture systems, mention any existing standards
    or protocols used, and acknowledge areas where further development or improvement
    is necessary to ensure seamless communication and data exchange between diverse
    components and devices in the ecosystem. Machine Learning Integration: What types
    of machine learning algorithms are considered for improving data analysis, and
    how might they enhance decision-making in agriculture? 7) Predictive Modeling
    Regression Analysis: Linear and nonlinear regression models are used to predict
    crop yields, disease outbreaks, or the impact of various factors (e.g., weather,
    soil conditions) on agricultural outcomes. Time Series Analysis: Time series models
    can forecast trends, seasonal patterns, and anomalies in agricultural data, helping
    with decisions related to planting, harvesting, and resource allocation. 8) Classification
    Algorithms Decision Trees: Decision trees are used to classify crops based on
    various attributes, such as growth stage or disease presence. They assist in identifying
    plant diseases or pests. Random Forests: Random forests enhance the accuracy of
    decision trees by combining multiple trees, providing robust classification results.
    9) Clustering Algorithms K-Means Clustering: K-means clusters similar data points
    together, helping identify homogeneous regions in fields. This can guide decisions
    regarding planting and irrigation. 10) Anomaly Detection Isolation Forests: Isolation
    forests are used to detect anomalies in agricultural data, such as unusual temperature
    or moisture levels, which may indicate issues that require immediate attention.
    11) Natural Language Processing (NLP) Sentiment Analysis: NLP techniques are applied
    to social media data and agricultural reports to gauge sentiment and public perception,
    helping farmers and policymakers make informed decisions. 12) Deep Learning Convolutional
    Neural Networks (CNNs): CNNs can be used for image recognition, helping detect
    and classify plant diseases or identify nutrient deficiencies from images. Recurrent
    Neural Networks (RNNs): RNNs are used for time series data, making them valuable
    for forecasting and anomaly detection. 13) Reinforcement Learning Precision Agriculture
    Reinforcement learning is employed to optimize farming operations. It helps make
    decisions about planting, harvesting, and resource allocation, considering factors
    like weather and soil conditions. How They Enhance Decision-Making in Agriculture
    Precision Farming: Machine learning algorithms enable precision agriculture by
    providing insights into the precise application of resources (e.g., water, fertilizer,
    pesticides) based on real-time data. This optimizes resource usage and increases
    crop yields. Disease and Pest Detection Algorithms can identify early signs of
    crop diseases and pest infestations, allowing for timely interventions and minimizing
    crop losses. Crop Yield Prediction: Machine learning models help predict crop
    yields, allowing farmers to plan for market demands, storage, and distribution
    effectively. Weather and Climate Analysis: By analyzing historical and real-time
    weather data, machine learning models assist in climate modeling and forecasting,
    helping farmers prepare for extreme weather events. Supply Chain Optimization
    Machine learning enhances supply chain management by predicting demand, optimizing
    transportation routes, and reducing spoilage in transit. Resource Management Algorithms
    help with the efficient management of resources, ensuring that water and fertilizer
    are used optimally, reducing waste and environmental impact. Decision Support
    Systems Machine learning can provide decision support systems that offer insights
    and recommendations for crop management, pest control, and more, based on real-time
    data. Risk Assessment Machine learning aids in assessing various risks, such as
    financial risks associated with crop management and market fluctuations, enabling
    proactive risk mitigation. In conclusion, machine learning algorithms, with their
    predictive and pattern recognition capabilities, are instrumental in improving
    data analysis and decision-making in agriculture. They empower farmers and agricultural
    stakeholders to make more informed and data-driven choices, ultimately leading
    to increased efficiency, sustainability, and profitability in the agriculture
    sector. Real-world Implementation: Are there any real-world examples or case studies
    of blockchain and sleep schedule method implementation in agriculture that can
    validate the proposed benefits? IBM Food Trust: IBM’s Food Trust platform is an
    example of blockchain technology used to enhance transparency and traceability
    in the food supply chain, including agriculture. It allows various stakeholders
    to access and record data about the production, processing, and distribution of
    food products. This improves food safety, reduces waste, and ensures product authenticity.
    While not explicitly mentioned as a “sleep schedule method,” the data aggregation
    techniques used in the system are designed for efficiency. AgriDigital: AgriDigital
    is an Australian-based company that employs blockchain technology to manage agricultural
    commodities. Their platform facilitates transparent and secure transactions for
    grains and other agricultural products. While not focused on the “sleep schedule
    method,” it demonstrates how blockchain enhances trust and efficiency in agriculture.
    AgriChain: AgriChain is another blockchain-based platform used in agriculture.
    It allows growers and producers to track the production process from the field
    to the consumer, including aspects like soil management, irrigation, and supply
    chain. The data is stored securely on a blockchain, and its implementation can
    lead to more efficient and sustainable farming practices. Sleep Schedule Methodology:
    While not explicitly mentioned in these case studies, the Cluster Head Sleep Schedule
    method, as described in your question, can be implemented in conjunction with
    blockchain technology. It allows for efficient data aggregation by putting some
    sensors to sleep and optimizing energy usage, which is beneficial in large-scale
    agricultural systems. To validate the proposed benefits of the combined use of
    blockchain and the sleep schedule method in agriculture, it’s important to look
    for recent case studies and ongoing projects that demonstrate the actual implementation
    and outcomes of these technologies. As technology in agriculture is rapidly evolving,
    more real-world examples are likely to have emerged User Adoption: How do the
    authors suggest overcoming potential barriers to user adoption of blockchain and
    sleep schedule methods among farmers and stakeholders? Are there user-friendly
    tools discussed for this purpose? 14) User Education and Training Farmers’ Workshops
    Conduct workshops, training sessions, and webinars to educate farmers and stakeholders
    about the benefits and usage of blockchain and sleep schedule methods. Hands-on
    training can help users understand how to interact with the technology effectively.
    15) User-Friendly Interfaces Intuitive User Interfaces: Develop user-friendly
    interfaces for both mobile and web applications that make it easy for farmers
    and stakeholders to interact with the technology. The interfaces should be designed
    with the end-users’ needs and digital literacy levels in mind. Graphical Dashboards:
    Provide graphical dashboards and visual representations of data and analytics
    to simplify complex information, making it accessible and actionable. 16) Multilingual
    Support Multilingual Interfaces: If applicable, offer interfaces in multiple languages
    to cater to a diverse user base, particularly in regions with linguistic diversity.
    17) Technical Support Customer Support: Establish dedicated customer support teams
    or help centers to assist users with any technical issues, inquiries, or troubleshooting.
    18) Onboarding Process Guided Onboarding: Create a step-by-step onboarding process
    that guides users through the setup and initial use of the technology, reducing
    the barriers associated with the learning curve. 19) Community Engagement Online
    Forums and Communities: Set up online forums, discussion boards, or social media
    groups where users can share experiences, ask questions, and provide support to
    one another. Building a sense of community can enhance user engagement. 20) Incentives
    and Benefits Demonstrate Value: Clearly communicate the tangible benefits and
    incentives for using blockchain and the sleep schedule method, such as increased
    crop yields, cost savings, and environmental benefits. 21) Pilots and Trials Small-Scale
    Pilots: Initially implement blockchain and sleep schedule methods in small-scale
    pilot projects to demonstrate their effectiveness and benefits to a select group
    of users. 22) Data Privacy and Security Transparent Data Policies: Ensure transparent
    data policies and security measures to address user concerns about data privacy.
    Users should have confidence that their data is handled securely. 23) Regulatory
    Compliance Adherence to Regulations: Highlight how the technology complies with
    local and national agricultural and data privacy regulations to assure users of
    its legality. 24) Feedback Mechanism Feedback Loops: Establish feedback mechanisms
    that allow users to provide input and suggestions for system improvements. This
    shows users that their opinions are valued and can lead to technology enhancements
    based on their needs. C. Complexity of the Proposed Algorithm Initialize ‘M’,
    ‘threshold’, and ‘DB’ to zero. These are simple assignment operations, which are
    typically considered to have constant time complexity. So, O(1). 2 Transform matrix
    ‘M’ into a fuzzy matrix ‘S’. The complexity of this operation depends on the size
    of the matrix ‘M’. If ‘M’ has dimensions n x m, and each element is transformed,
    this would be O(n ∗ m). 3 Group member nodes into ‘P’ categories and randomly
    select a broker. Grouping nodes and selecting a broker involves iterating over
    the nodes, so the complexity would be O(P), where P is the number of categories.
    4 For each category ’W’: This implies a loop over the categories, so O(W) complexity.
    5 For each node nominated as ‘E’ in category ’W’: This implies a loop over the
    nodes in category ‘W’, so O(E), where E is the number of nodes in category ‘W’.
    6 Calculate confidence distance Calculate_Distance (n_a^((w)), n_b^((w))) between
    data from the node (n_a^((w)), n_b^((w))). The complexity of this operation depends
    on the complexity of the Calculate_Distance function. Let’s assume it’s O(D),
    where D is the complexity of this distance calculation. 7 n_ ∗ ^((v)) = agrSUM
    Calculate_Distance(n_a^((w)), n_b^((w))) This operation depends on the complexity
    of the Calculate_Distance function. If you perform this for all pairs (n_a^((w)),
    n_b^((w))), it would be O(E^2 * D), as it involves two nested loops. 8 End for
    This simply indicates the end of the loop, so it’s O(1). 9 End for This also indicates
    the end of a loop, so it’s O(1). 10 Obtain the set of redundant nodes {X1, X2,…,
    Xt}. The complexity of obtaining redundant nodes depends on how they are identified,
    but if it involves iterating over nodes, it would be O(t), where t is the number
    of redundant nodes. 11 For each node belonging to {X1, X2,…, Xt} This implies
    a loop over the redundant nodes, so O(t) complexity. 12 Calculate the complexity
    of the above-mentioned algorithm. This is typically a simple operation and would
    be O(1). 13 Now, to find the overall complexity of the algorithm, we need to sum
    up the complexities of each step. Assuming that the largest term in the sum is
    O(E^2 * D), the overall complexity can be approximated as: 14 O(W * E^2 * D) 15
    This is the complexity of the provided algorithm in terms of its key parameters
    W (number of categories), E (number of nodes in each category), and D (complexity
    of the Calculate_Distance function). SECTION IV. Results and Simulations We evaluate
    our proposed agriculture system against the system that uses Hop to Hop (H2H)
    communication mechanism and cluster head-based (CH) network topology. Figure 2
    illustrates the Hop to Hop (H2H) mechanism, in which data is transmitted from
    one sensor node to another in a sequential manner, with each node receiving data
    from the previous node and then forwarding it to the next node in the chain. FIGURE
    2. Communication model of H2H protocol. Show All The communication process continues
    until the last node in the chain transmits the aggregated data to the base station
    or control center. Figure 3 depicts the Cluster Head (CH) communication method.
    The roles of nodes in this structure are classified into two types. The first
    mechanism is similar to the H2H (node-to-node) communication method, while the
    second mechanism involves the use of cluster head nodes. They mostly carry out
    communication between clusters rather than data-collecting tasks. In order to
    implement a cluster head system, it is required to use n sensing nodes along with
    n/h cluster head nodes, where the value of h is determined by the number of sensing
    nodes allocated to each cluster. In this type of system, data only needs to be
    transmitted once to the sensing nodes. Two different forms of network communication
    must be carried out by the cluster head: There are two communication links in
    this system: one between the sensor node and the cluster head, and the other between
    the cluster heads. The cluster head node gathers data from the member nodes and
    by using the H2H communication method these data are transferred to the next cluster.
    FIGURE 3. Communication model cluster-based protocol. Show All To present a clear
    comparison of the three schemes, Figure 4 illustrates a single cluster head managing
    five sensor nodes in a cluster-based scheme. The results indicate that our proposed
    scheme outperforms both H2H-based and CH-based schemes, especially when the number
    of sensor nodes increases. FIGURE 4. Comparison of H2H, Ours & CH5-based protocol.
    Show All Upon examining Figure 5, After analyzing the results, it is clear that
    our proposed scheme outperforms the H2H-based scheme. However, the performance
    of the cluster-head-based schemes is inferior to the H2H-based scheme. Moreover,
    our proposed scheme also shows a significant reduction in cost compared to the
    other two types of schemes. It should be noted that in the designation of CHx,
    the variable ‘x’ represents the number of sensor nodes that are managed by each
    cluster head. For instance, CH10 implies that the cluster head is responsible
    for overseeing ten sensor nodes. These findings are a significant contribution
    to the field and can provide valuable insights for future research in this area.
    FIGURE 5. Comparison of OURS, H2H, & CHx-based schemes. Show All Figure 6 is an
    amplification of the communication overhead presented in Figure 5, This study
    demonstrates the performance of each scheme while managing a range of sensor nodes,
    specifically between 5000 and 10,000. According to the results, the H2H-based
    scheme was found to be more efficient than the cluster-based scheme. The efficiency
    of the cluster-based scheme improved as the number of sensor nodes managed by
    each cluster head approached the number in the H2H-based solution. According to
    the results, the H2H-based scheme was found to be more efficient than the cluster-based
    scheme. The analysis presented above primarily focuses on the communication overhead
    of the entire wireless sensor network, including all sensor nodes. Furthermore,
    the communication overhead per sensor node of our proposed scheme is better than
    that of the other schemes, indicating its potential advantages. These findings
    have significant implications for the development and deployment of wireless sensor
    networks, and they offer valuable insights for future research in this field.
    FIGURE 6. Comparison between OURS, H2H, CH5, CH10, CH20, CH50. Show All In Figure
    7, the communication cost per node is presented for the three types of schemes
    analyzed. The results demonstrate that our proposed scheme demonstrates superior
    communication efficiency compared to other schemes. In particular, the communication
    overhead per node in our scheme is only half that of the other schemes. Specifically,
    the communication overhead per node in our scheme is only half that of the other
    schemes. These findings indicate that our proposed scheme may offer significant
    advantages in terms of cost-effectiveness and scalability, which can have practical
    applications in the development and deployment of wireless sensor networks. FIGURE
    7. Comparison of communication cost per node among three types of scheme. Show
    All Figure 8 represents the relationship between energy consumption and time that
    are shown in minutes. H2H consumes much energy as compared to the cluster head
    method and our system. So, the performance of our system is better than the H2H
    and cluster head methods. FIGURE 8. Comparison of energy consumption and time
    among H2H, CH2 & Ours. Show All Figure 9 represents the number of nodes and energy
    consumption. Our proposed system uses the sleep schedule method which is why used
    less energy as compared to other both methods. FIGURE 9. Comparison of energy
    consumption among three types of schemes. Show All Our suggested method provides
    important benefits in terms of communication overhead, particularly when compared
    to the other two types of schemes analyzed. The use of blockchain technology and
    cluster head sleep schedule method has enabled us to develop an efficient and
    scalable solution that can manage a large number of sensor nodes. The communication
    efficiency of our scheme is evident in Figures 4.3, 4.4, and 4.5, showcasing its
    superior performance when managing large numbers of sensor nodes. The work presented
    in this study is compared with OURS, H2H, & CHx-based schemes and it proves our
    proposed scheme is effective regarding energy efficiency, data aggregation and
    monitoring of the crops from the pest attack information immediately for in time
    action to save crop from loss and enhance the production of the crop. Collect
    Data from Sensors: The first step is to collect data from the sensors placed in
    the fields to gather information about temperature, humidity, soil moisture, and
    other important parameters. The sensors layer uses the sleep schedule method with
    a fuzzy matrix to optimize power consumption and reduce the amount of data transmitted.
    Process Data at the Edge Layer: Once the data is collected, it is transmitted
    to the edge layer, which is responsible for processing and analyzing the data
    in real-time. The edge layer can perform preliminary data cleaning, filtering,
    and aggregation to reduce the amount of data that needs to be transmitted to the
    cloud layer. SECTION V. Discussion Blockchain technology provides a decentralized
    and distributed system that eliminates the need for intermediaries and ensures
    that all parties involved have access to accurate and up-to-date information.
    The adoption of this technology can also enhance trust and collaboration between
    different players in the agricultural sector, promoting sustainable and responsible
    farming practices. A. Enhancing Data Aggregation in Smart Agriculture Using Blockchain
    Blockchain technology can be utilized to enhance data aggregation in smart agriculture
    systems in a number of ways. The decentralized nature of blockchain allows for
    secure and transparent data sharing between different parties without the need
    for intermediaries. This makes it ideal for use in agriculture, where data sharing
    and collaboration between farmers, suppliers, and retailers is crucial for optimizing
    production, reducing waste, and improving efficiency. One-way blockchain technology
    can be used in smart agriculture systems is to create a decentralized platform
    for sharing data about crops, weather conditions, soil quality, and other important
    factors that affect agricultural production. This platform would allow farmers
    to input data in real time and share it with other farmers, researchers, and suppliers,
    creating a comprehensive database that could be used to improve decision-making
    and optimize production. In addition to the implementation of blockchain technology
    in the Dual Fog-IoT architecture, it can also be used to establish a secure and
    tamper-proof system for tracking the movement of agricultural products from farm
    to table. By leveraging blockchain to create a digital ledger that records every
    stage of the supply chain, from planting to harvesting, processing, and delivery,
    stakeholders can ensure that the products they are buying are authentic and have
    been produced in a sustainable and ethical manner. Smart contracts are another
    application of blockchain technology that can be utilized in smart agriculture
    systems. These self-executing contracts are programmed to automatically execute
    when specific conditions are met. For instance, a smart contract can be implemented
    to release payment to a farmer when a specific number of crops have been delivered
    to a buyer. This streamlines the payment process and minimizes the need for intermediaries.
    Finally, blockchain technology can be used to create a digital identity system
    for agricultural products. By using blockchain to create a unique digital identity
    for each product, stakeholders can be sure that the product they are buying is
    authentic and has been produced in a sustainable and ethical manner. This would
    also enable consumers to trace the origin of their food and make informed decisions
    about the products they buy. B. Benefits of Blockchain and Sleep Schedules for
    Smart Agriculture Data Aggregation Smart agriculture systems can benefit from
    the use of blockchain and sleep schedule methods for data aggregation. Blockchain
    technology can provide increased security, while sleep schedule methods can improve
    efficiency and energy consumption. Here are some potential benefits and comparisons
    to other methods: Security: Blockchain technology provides a secure and tamper-proof
    method for data aggregation. Each data point is cryptographically hashed and stored
    on a decentralized network, ensuring that it cannot be altered or deleted. This
    provides a high level of data integrity and security, especially compared to traditional
    methods of data storage such as cloud-based servers or centralized databases,
    which can be vulnerable to hacking and data breaches. Efficiency: The sleep schedule
    method, also known as duty cycling, is a technique used to conserve energy in
    devices that require periodic communication. This method involves turning off
    the device’s communication module for certain periods, also known as sleep periods,
    and then waking it up periodically to transmit data or receive commands. By scheduling
    sleep periods for sensors, devices, or gateways, the system can reduce the amount
    of energy consumed during idle periods. This can significantly extend the battery
    life of the devices and reduce maintenance costs. Reliability: Using blockchain
    technology and sleep schedule methods can increase the reliability of data aggregation
    in smart agriculture systems. Blockchain’s decentralized nature ensures that data
    is not lost or corrupted, and the sleep schedule method ensures that data is transmitted
    efficiently and accurately. In comparison, traditional methods of data aggregation
    may be prone to errors or data loss due to technical failures or human error.
    Scalability: Blockchain technology and sleep schedule methods can also offer scalability
    for smart agriculture systems. As the system grows and more devices are added,
    blockchain’s decentralized network can accommodate the increased demand for data
    storage and transmission. The sleep schedule method can also be adjusted to accommodate
    the increased number of devices, ensuring that data is transmitted efficiently
    and accurately. C. Scalable and Adaptable Data Aggregation for Smart Agriculture
    Deployment Data aggregation systems are crucial for collecting and processing
    large amounts of data in smart agriculture. However, to make these systems scalable
    and adaptable for large-scale deployment, several factors need to be taken into
    account. One of the key ways to achieve scalability is through cloud computing.
    By leveraging cloud-based platforms, such as Amazon Web Services (AWS), Microsoft
    Azure, or Google Cloud, data aggregation systems can dynamically scale up or down
    depending on the volume of data being processed. This can help reduce costs, improve
    efficiency, and provide the flexibility needed to handle large-scale deployments.
    Interoperability is another important consideration in making data aggregation
    systems scalable and adaptable. Open standards and APIs can help ensure that different
    systems can work together seamlessly. This can help enable data to be easily shared
    and analyzed, regardless of the source or platform. Data security and privacy
    are also critical factors to consider when designing data aggregation systems
    for smart agriculture. Robust encryption, access control, and data governance
    policies can help ensure that sensitive information is protected. Finally, data
    analytics can help make sense of the large volumes of data collected in smart
    agriculture. Machine learning algorithms can be used to identify patterns and
    trends, enabling farmers to make more informed decisions about crop management,
    irrigation, and fertilization. Resultantly, making data aggregation systems scalable
    and adaptable for large-scale deployment in smart agriculture requires a combination
    of cloud computing, edge computing, interoperability, data security, and data
    analytics. By addressing these key factors, data aggregation systems can help
    enable more efficient and sustainable agricultural practices. TABLE 2 Simulation
    Parameters for Experiment D. Schedule Method for Efficient Data Aggregation in
    Smart Agriculture The sleep schedule method, also known as duty cycling, is a
    technique used to conserve energy in devices that require periodic communication,
    such as smart agriculture systems. This method involves turning off the device’s
    communication module for certain periods, also known as sleep periods, and then
    waking it up periodically to transmit data or receive commands. In smart agriculture
    systems, the sleep schedule method can be applied to improve the efficiency of
    data aggregation. By scheduling sleep periods for sensors, devices, or gateways,
    the system can reduce the amount of energy consumed during idle periods. This
    can significantly extend the battery life of the devices and reduce maintenance
    costs. To apply the sleep schedule method, the system needs to be designed to
    support duty cycling. This means that the devices must be able to switch between
    active and sleep modes automatically and reliably. In addition, the system must
    also have a reliable way to synchronize the sleep schedules of the devices to
    avoid data loss and ensure that the devices are awake when they need to be. One
    way to implement the sleep schedule method in smart agriculture systems is by
    using a hierarchical architecture. In this architecture, sensors and devices are
    organized into clusters, and each cluster has a gateway that acts as a coordinator.
    The gateway is responsible for synchronizing the sleep schedules of the devices
    in its cluster, as well as aggregating the data collected by the devices and forwarding
    it to the next level of the hierarchy. Another way to implement the sleep schedule
    method is by using a distributed scheduling algorithm. This algorithm allows devices
    to negotiate their sleep schedules dynamically based on the network conditions
    and the amount of data that needs to be transmitted. This approach can be more
    flexible and efficient than a hierarchical architecture, but it also requires
    more complex algorithms and protocols. In conclusion, the sleep schedule method
    is a powerful technique that can be used to improve the efficiency of data aggregation
    in smart agriculture systems. By reducing energy consumption and extending battery
    life, this method can help reduce maintenance costs and increase the reliability
    of the system. However, it requires careful planning and design to ensure that
    the sleep schedules of the devices are synchronized and optimized for the specific
    application. SECTION VI. Conclusion and Future Work The rapid advancement of smart
    devices and networking technologies has given rise to numerous popular Internet
    of Things (IoT) applications. This paper primarily delves into the significance
    and potential of smart agriculture, considered one of the most promising applications
    of IoT. The incorporation of blockchain technology for data aggregation in smart
    agriculture, particularly through the implementation of the Cluster Head Sleep
    Schedule method, represents a promising development that can significantly contribute
    to the industry’s progress. Employing a decentralized system that ensures data
    integrity, security, and immutability, farmers can have heightened confidence
    in the accuracy and transparency of data collected from IoT sensors. This, in
    turn, fosters more informed decision-making concerning resource allocation, crop
    management, and other farming operations, ultimately leading to increased crop
    yields and more sustainable agricultural practices. The Cluster Head Sleep Schedule
    method, which optimizes the energy consumption of IoT sensors by scheduling their
    sleep patterns, further enhances the efficiency and effectiveness of data collection
    in smart agriculture. This method not only reduces the power consumption of IoT
    devices but also extends their lifespan, eliminates data redundancy, and lowers
    the overall operational costs. In summary, the integration of blockchain technology
    and the Cluster Head Sleep Schedule method in smart agriculture promises numerous
    benefits for the industry, including heightened efficiency, improved sustainability,
    and enhanced decision-making capabilities for farmers. As technology continues
    to evolve, we can expect to witness even more innovative solutions for data aggregation
    and management in smart agriculture, ushering in a more productive and sustainable
    future for the sector. While the utilization of blockchain and the sleep schedule
    method has demonstrated promising results in efficient data aggregation for smart
    agriculture, there is still ample room for improvement and further exploration.
    One potential avenue for future research could involve investigating the potential
    advantages of integrating machine learning algorithms into the system. This could
    potentially enable more accurate and efficient data analysis, as well as the development
    of predictive models to assist farmers in making informed decisions. Additionally,
    there is a need to explore the scalability and feasibility of this approach in
    large-scale agricultural systems. This may entail testing the system in various
    environments and assessing its performance under diverse conditions. Furthermore,
    there is a requirement for the development of user-friendly interfaces and tools
    to facilitate the easy adoption of this technology by farmers and other stakeholders.
    This could involve the design of intuitive dashboards and visualizations that
    provide relevant information and insights to users. While the use of blockchain
    and the sleep schedule method holds the potential to revolutionize data aggregation
    in smart agriculture, there is still considerable work to be done to fully unlock
    its potential and make it accessible to farmers and other stakeholders. ACKNOWLEDGMENT
    This research is supported via funding from Princess Nourah bint Abdulrahman University
    Researchers Supporting Project number (PNURSP2024R333), Princess Nourah bint Abdulrahman
    University, Riyadh, Saudi Arabia. Authors Figures References Keywords Metrics
    More Like This Internet of Things (IoT) Assisted Smart Agriculture Monitoring
    and Summarization System using NodeMCU and Efficient Sensor Unit 2023 9th International
    Conference on Smart Structures and Systems (ICSSS) Published: 2023 Internet of
    Things and Wireless Sensor Networks for Smart Agriculture Applications: A Survey
    IEEE Access Published: 2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Optimized Data Fusion With Scheduled Rest Periods for Enhanced Smart Agriculture
    via Blockchain Integration
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bhujangarao A.
  - Vidyasagar K.
  - Surya Prasad Rao B.
  - Suryaprakash G.
  citation_count: '0'
  description: With the increase in population, improving the food production is essential.
    The advancement of technology is imperative to the agriculture sector in order
    to minimize the conventional tedious cultivation process and to produce quality
    food products for better welfare of the human basic food needs and prognosis rate
    improvement. This chapter proposed triple modular redundancy (TMR) at each sensing
    stage of the corn seed sowing machine in order to achieve the redundancy and to
    improve the functional efficiency. The machine is supervised remotely by the operator
    for monitoring the functional efficiency. Highway addressable remote transducer
    (HART) communication protocol is used to communicate between remote and local
    controller. In order to improve the production rate, equal corn seed distribution
    is the primary objective for optimum corn seed utilization and distribution. The
    essential design parameters are estimated theoretically. The fault analysis at
    both sensing and communication stages is monitored with the local and remote controllers.
    This will improve the functional efficiency of the machine. The designed corn
    seed sowing machine will reduce the human intervention and improve the production
    rate.
  doi: 10.1007/978-3-031-09955-7_18
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Modern Approaches in IoT
    and Machine Learning for Cyber Security Chapter Design of a Corn Seed Sowing Machine
    for Uniform Distribution of Corn Seeds Using Optimum Seed Distribution Algorithm
    Chapter First Online: 08 December 2023 pp 293–309 Cite this chapter Access provided
    by University of Nebraska-Lincoln Download book PDF Download book EPUB Modern
    Approaches in IoT and Machine Learning for Cyber Security A. Bhujangarao, K. Vidyasagar,
    B. Surya Prasad Rao & G. Suryaprakash  Part of the book series: Internet of Things
    ((ITTCC)) 200 Accesses Abstract With the increase in population, improving the
    food production is essential. The advancement of technology is imperative to the
    agriculture sector in order to minimize the conventional tedious cultivation process
    and to produce quality food products for better welfare of the human basic food
    needs and prognosis rate improvement. This chapter proposed triple modular redundancy
    (TMR) at each sensing stage of the corn seed sowing machine in order to achieve
    the redundancy and to improve the functional efficiency. The machine is supervised
    remotely by the operator for monitoring the functional efficiency. Highway addressable
    remote transducer (HART) communication protocol is used to communicate between
    remote and local controller. In order to improve the production rate, equal corn
    seed distribution is the primary objective for optimum corn seed utilization and
    distribution. The essential design parameters are estimated theoretically. The
    fault analysis at both sensing and communication stages is monitored with the
    local and remote controllers. This will improve the functional efficiency of the
    machine. The designed corn seed sowing machine will reduce the human intervention
    and improve the production rate. Keywords Corn seed sowing machine Triple modular
    redundancy Level Transmitters Seed detection Transmitter HART protocol Access
    provided by University of Nebraska-Lincoln. Download chapter PDF Similar content
    being viewed by others Design and Development of Seed Metering Device Implemented
    in Power Tiller Chapter © 2021 Based on the Wireless Transmission of Pneumatic
    Seeder Seeding Condition Monitor Chapter © 2016 Sowing Geometry of Intertilled
    Crops Article 01 February 2022 1 Introduction Existing seed sowing machines are
    developed with mechanical structures by considering all mechanical characteristics.
    The mechanical structures are not susceptible to frictional opposing forces. The
    initial dead band of the components introduces lags and leads. This forces to
    increase the time constant of the system. This will influence on behavior of the
    system, which results decrease in sensitivity and reliability. Physical operation
    and supervision of the machine are tedious. These limitations motivated to develop
    a sensor-based semi-autonomous seed sowing machine for uniform distribution of
    seeds at pre-programmed distinctive locations. The operation is supervised by
    the controllers both at the field and at remote level, which will improve the
    functional efficiency of the system. The sensor sampling time (seed drop detection)
    is estimated by considering the initial dead band, which is due to mechanical
    frictional opposing forces (Fig. 1). Fig. 1 Block Diagram of seed sowing machine
    Full size image A semi-autonomous corn seed sowing machine is shown in Fig. 2
    for distribution of corn seeds at pre-programmed distinctive locations. A methodology
    has been proposed for uniform distribution of corn seeds over the entire crop,
    so the production rate is increased and the corn seed distribution rate is meticulous.
    ATmega328 microcontroller is elected as a control unit to drive the machine. The
    function of the controller is shown in Fig. 1. The seed bin level (seed position
    in the seed bin) measuring transmitters will transfer the input signals to the
    local controller. If the logic is high, then control unit will drive the sliding
    disc for every 360° rotation of the geared wheel and valve 2 is open to drop the
    corn seeds into corn seed groves with no deviation. The corn seed bin empty status
    is automatically detected by the level transmitters and the signal is transferred
    to the local controller. The refill of the corn seed bin is made by opening valve
    1 by the controller and the seeds will refill from the stand by bin. Triple modular
    redundancy (TMR) is used at each sensing stage of the device. Diversified technology
    has been adopted with three distinctive transmitters in order to obtain the redundancy
    and improve the functional efficiency. The mean value of the sensors is considered
    to improve the accuracy of the input signal. The mean of the three field input
    signals is considered for estimating the true redundant input field signals. Field
    devices’ fault presentation of the signal is able to troubleshoot at two stages
    of the circuit, that is, at the field sensing stage and at the central control
    stage. The fault analysis is continuously supervised by the remote controller
    in order to improve the operational efficiency of the developed corn seed sowing
    machine. LA/25 fault alarm is enabled if the controller identifies any fault.
    Magnetic flow meter is used to detect one revolution of the geared wheel, which
    will produce one pulse. The generated pulse will be read by the controller to
    drive valve 2 open. Flow transmitters (FT1, FT2, and FT3) are considered in a
    loop to monitor the seed dropping position. For meticulous distribution of corn
    seeds, optimal corn seed distribution algorithm has been proposed. Fig. 2 Instrumentation
    piping diagram of seed sowing machine. LT, level transmitter; FT, flow transmitter
    (seed detection); M, magnetic flow transmitter; G, gear Full size image Spring
    loaded metal disc is placed in the corn seed bin. Metal disc is positioned on
    top of the seed bin. Once the seed bin is filled with corn seeds, the position
    of the metal disk will move downward along with emptying the corn seeds. The spring
    is used to improve the linearity of the disc movement, so that the sensor output
    signal is meticulous. The spring stiffness constant is estimated based on the
    corn seed load and the height of the corn seed bin. Since the spring is compressed
    for empty status of the bin, the magnitude of the force will cause to decrease
    in height (depth) of the corn seed bin, where “K” is the stiffness constant of
    the spring. The full status of the bin is represented with 22.04 lbs load. The
    maximum depth of the corn seed bin is 24 inches. Then, the stiffness constant
    is estimated as 0.918 lb/m at full load condition using Eq. 1. $$ K=\\frac{F}{x}
    $$ (1) Here, “K” is the spring constant. “X” is a change of length from its equilibrium.
    “F” is the force in the direction of its equilibrium. An analog ultrasonic sensor
    RPS-412A is used with an accuracy of 0.0005 to sense the corn seed bin status.
    The air temperature is compensated 50 times per second. The factors that influence
    on the speed of sound like relative humidity, and variations in barometric pressure
    are compensated. 1.1 Sensor 1 Ultrasonic Sensor This sensor, that is, RPS-412A
    will draw an output of 20 mA, if the metal disc in the corn seed bin is at 4 inches
    from the upper surface of the bin. This distance is used to estimate the full
    status of the corn seed bin. Sensor output produced 4 mA when the disc plate is
    at a distance of 16 inches from the upper surface of the seed bin. This distance
    is considered as empty (low) status of the bin. For improving accuracy, the center
    line of the sensor is used to position the metal disc perpendicular to it. The
    bright red LED indication is the optimum placement of the sensor to acquire the
    signal with no deviations. The dimension of seed bin is 24 × 24 × 24 inches (length
    × width × height). The height of the seed bin is organized into five levels: Level
    1 = 16 inches Level 2 = 12 inches Level 3 = 8 inches Level 4 = 4 inches Level
    4, that is, 4 inches from the top surface of the bin, is considered as bin full
    and the seeds in seed bin are at 16 inches height from the top surface of the
    bin, which is considered as bin empty. The signal received at output of the sensor
    is between 4 and 20 mA. The output of 20 mA is received when the metal disc plate
    is at 16 inches. 1.2 Sensor 2 Infrared Sensor GP2Y0A02YK0F is used as sensor “2”
    to estimate the seed level in seed bin. This sensor has adopted the triangulation
    method. So, the environmental conditions like reflectivity of the measuring object
    and ambient temperature influences are nullified. Position sensitivity detector,
    infrared rays (IR) emitting diode, and signal conditioning circuit are integrated
    with this device. The sensor is used to measure the maximum distance of the objects
    at 59.0 inches. The emitted infrared rays by the IR diode stick the object and
    reflect toward the photodiode. Based on the received magnitude of infrared ray,
    the resistance will change and the change of resistance is measured as an output
    voltage. Maximum output voltage detected is 2.75 V at 16-inch distance of the
    metal disc. The output voltage will vary with respect to the distance between
    the metal disc in the seed bin and the sensing coil. 1.3 Sensor 3 LIDAR Sensor
    The sensor 3 (LIDAR) uses near infrared rays to measure the precise distance (depth)
    of the corn seed bin. After striking the metal disc, the time interval between
    near infrared ray transmission and receiving is estimated to determine the position
    of the metal disk in the corn seed bin. The sensor produces pulse width modulation
    (PWM) output signal with duty cycle of 10 ms and using the low pass filter, this
    PWM signal is converted into 0–5 V range. In order to improve the sensitivity
    and compensate the ambient light levels, a receiver routine is executed. A reference
    signal is sent from transmitter to receiver. This signal causes to set the time
    delay for zero distance measurement. The distance (corn seed status) of the disc
    plate in the corn seed bin is estimated. This acquisition process repeats and
    integrates all the acquisition values until the signal peak value reaches to maximum.
    Signal threshold value is estimated using the noise floor. If the magnitude of
    the peak signal is above the threshold value, then the estimated signal is a true
    value, which is to be transmitted to the controller using I2C interface protocol.
    For clear object detection, retro reflective sensor “Qs18”(sensor “4”) is used.
    The emitter of the sensor directs the light beam continuously in a narrow axis.
    So, the possibility of false detection can be enveloped. If a corn seed is dropped
    from the corn seed bin, the emitted light signal will attenuate a noticeable percentage
    and the attenuated signal is redirected to the receiver. Qs18 is able to detect
    the dropping seed at a distance of 130 inches maximum. The sensor is kept at a
    distance of 12 inches from the seed dropping hole. A laser-based sensor “Q4x”
    (sensor “5”) is elected to detect the small corn seed objects precisely. The variations
    in laser light intensity are detected with dual mode sensing capability, that
    is, the sensor detects the corn seed drop when it receives light signal strength.
    When the corn seed enters into the sensing range, the beam intensity will alter
    with the corn seed drop position. Sound wave based sensor “M25u” (sensor “6”)
    is an ultrasonic sensor. The emitted sound wave returns echo after detecting corn
    seed dropped from the bin, that is, the corn seed blocks the signal between emitter
    and receiver. The sensor is able to sense the object at a maximum distance of
    19.7 inches. The sensor is positioned at a distance of 12 inches from the seed
    dropping hole. 2 Relevant Work Roshan V. Marode et al. [1] discussed the seed
    bin design mechanisms and furrow assembling process. D. Ramesh and Girish Kumar
    [2] developed multi-purpose seeding equipment and animal drawn seed cum fertilizer
    drill is designed. Prof. Pranil V. Sawalakhe et al. [3] proposed a methodology
    for corn seed sowing methods and placement of fertilizer comparing the proposed
    method with traditional methods, the proposed method reduces the total cost and
    minimizes the efforts required. K.A. Sunitha et al. [4] described a mechanism
    of agricultural robot. A camera is used to track the path. The saw blades are
    used at the rare side works in association with geared wheels. The rare part of
    the robot is driven by locomotion. Tekalign Tujo G et al. [5] proposed a methodology
    to predict and classify the corn seeds using neural network-based machine learning
    algorithm certain determinant factors are identified to classify the corn seeds
    for ranking. Vlasov and A. S. Fadeev [6] proposed a methodology for purification
    improvement and to classify corn seeds of a grain crop. The corn seed features
    are estimated with machine learning algorithm. With proposed deep learning, the
    ability to classify the corn seeds is improved. Payal Srivatsava, Neda, and Kriti
    [7] implemented a model of robotic former. The methodology includes land plowing,
    corn seed sowing, and fertilizer spraying. Arduino uno is used as a controller
    to drive the robotic former. B. Mohan, et al. [8] designed a sowing machine for
    soya bean pigeon pea, Bengal gram, and ground nut corn seeds. A.V P. Premalatha
    and Sharath Singh [9] developed a methodology to curtail the wastage of corn seeds,
    productivity improvement, and minimize the time for corn seed sowing. Solar power
    source is used to drive the robot. Parshapally Johnson, Nenavath Shivakumar, Shaik
    Umairahmed [10] developed an automated corn seed sowing machine using cam and
    follower mechanism. The pulley will drive the cam attached to front axle. A hopper
    is used to store the corn seeds. The follower drives the diaphragm for a single
    corn seed, which is let into the pit for complete rotation of the cam. Antonio
    Tassio Santa Ormond, et al. [11] developed a pneumatic mechanism powered by two
    corn seed metering devices operating at different speeds. The mean of two corn
    seed meters is estimated by regression plots. Kiran K. Jadhav, et al. [12] discussed
    double fuel installation on frame. R. Kathiravan, P. Balashanmugam [13] developed
    an approach to drop a corn seed in specified depth and significant gap between
    two corn seeds. 3 Design Considerations Triple redundancy is considered at two
    stages of the machine to improve the functional efficiency of the corn seed sowing
    machine. Sensing seed bin full/empty status is labeled as stage1. Sensing seed
    drop from the seed bin into soil is labeled as stage 2. At stage 1, three sensing
    devices are used for estimating the seed level in the seed bin, which are functioning
    with independent technologies. Sensor 1 is functioning using ultrasonic signals,
    sensor 2 is functioning with infrared signals, and sensor 3 is functioning with
    near infrared rays. So, the common cause fault may not occur from all the field
    transmitters simultaneously And redundancy is achieved with this approach. At
    stage 2, another set of three sensing devices is used for meticulous detection
    of seed drop into soil. Sensor “4” is functioning with light beam, sensor “5”
    is functioning with laser beam, and sensor “6” is functioning with sound wave.
    These three sensors function with diversified technology. So, common cause failures
    will certainly not produce faulty signals from three sensors simultaneously. The
    TMR is also considered at this stage. The corn seed size and shape are not the
    same. At ear, the shape is like a small round kernel. At the middle, the seeds
    are flats. But, at the end the ear is large round shape. So, to drop the seeds
    from the seed bin, the large round shape kernel size of 0.214 mm is considered.
    So, the seed discharge aperture like hole diameter is considered as 0.428 inches.
    The uniform distribution of corn seeds across the cultivating field is further
    improved. The sensors relays and motors interfaced with Atmega 328, and the communication
    between two controllers is using HART protocol AD 5700 as shown in Fig. 3. Fig.
    3 Architecture of the proposed system Full size image An intelligent sensing technology
    has been proposed to diagnose input faults. Each sensor is equipped with AD 7124,
    24 bit ADC to convert analog signals into digital signals. Low power isolation
    is also considered before the signal transfer to the Atmega 328 micro controller.
    HART AD 5700 modem is used to communicate the field signals to the remote controllers.
    The communication between the micro controller and the HART modem is asynchronous.
    Universal asynchronous receiver transmitter is imparted for communication between
    HART and Atmega 328 micro controller. The analog current signals (output of transmitters)
    are converted into discrete signals using AD 5421 digital to analog converter.
    The entire process is supervised remotely by incorporating process management
    database system. The operator interface will log the data and analyze the data
    for improving the efficiency of corn seed distribution process. The corn seed
    distribution machine is able to control remotely using HART protocol. The possible
    fault conditions are supervised by the local and remote controllers, that is,
    field device faults, and communication faults between the field device and the
    controller and between local and remote controllers. With the proposed methodology,
    operation functionality of the corn seed sowing machine and the production rate
    is further improved and the cost per unit production is significantly minimized.
    The setpoint (SP) to the controller is 16 inches, which corresponds to 20 mA (5
    V). The measured variable (MV), that is, bin status is always compared with the
    setpoint to produce an error signal (CO). Proportional + integral controller is
    used to regulate the seed bin status at 16 inches. If the measured variable (bin
    status) is deviated from the desired value, that is, setpoint, the seeds will
    be refilled from the bin “2,” that is, restore bin. The controller output is estimated
    using Eq. 2. $$ \\mathrm{CO}={K}_{\\mathrm{P}}\\left({e}_{\\mathrm{i}}\\right)+{K}_{\\mathrm{P}}\\times
    {K}_{\\mathrm{I}}\\int_t^0{e}_{\\mathrm{i}} dt+\\mathrm{bias} $$ (2) Here, KP
    = Proportional gain KI = Integral gain ei = error input (SP−MV) bias = baseline
    value of the controller output When the error is zero, the controller output should
    not be zero, and it will be maintained at baseline value. The baseline value is
    depending on the proportional gain value. The proportional gain of 50% is considered
    as a baseline value. The essential parameters are considered to design the corn
    seed sowing machine. Torque on the wheel (T) is determined by multiplying the
    coefficient of rolling wheel resistance (K), total weight of the corn seed sowing
    machine (W), and radius of the wheel (R). $$ T=K\\times W\\times R $$ (3) The
    coefficient of rolling wheel resistance (K) is considered to allow the developed
    model to move on uneven surfaces. The effect of rolling resistance leads to unexpected
    runouts than expected due to the mechanical deformation of the rolling wheel and
    due to surface deformations of the soil field. Owing to these deformations, an
    asymmetrical contact stress is developed between the wheel and the field soil.
    Here, “r” is the cylinder radius. “O” is the geometric center of uniform cylinder.
    “FAX” is the horizontal resultant reaction force at point “A.” “FAY” is the vertical
    resultant reaction force at point “A.” The static contact forces replace the contact
    stress that is developed between the wheel and the soil field. The direction of
    wheel movement is opposed by the frictional force (Fr) and shift distance (Sd)
    as shown in Fig. 4. The variation of rolling resistance impact on angular velocity
    minimizes the speed of the corn seed sowing machine. FAY is the resultant reaction
    force acting vertically on the wheel. Fig. 4 Rolling frictional forces at constant
    speed Full size image “g” is earth’s gravitational force. The field surface deformation
    is represented with “D.” The rolling resistance of the wheel is minimized by considering
    distance “d.” The rolling resistance is greatly influenced by the resultant longitudinal
    (FAY) and axial forces (FAX). The soil field surface deformation is influencing
    the wheel direction deformation. Thus, the coefficient of rolling wheel resistance
    (K) is considered to estimate the total torque developed. The coefficient of rolling
    wheel friction (F) is estimated with the ratio of frictional forces between the
    wheel and the surface (Fws) and the pressing force (Fd). $$ {\\displaystyle \\begin{array}{l}\\mathrm{The}\\kern0.5em
    \\mathrm{coefficient}\\kern0.5em \\mathrm{of}\\kern0.5em \\mathrm{rolling}\\kern0.5em
    \\mathrm{wheel}\\kern0.5em \\mathrm{friction}\\kern0.5em (F)\\\\ {}=\\kern0.5em
    \\left(\\mathrm{Total}\\kern0.5em \\mathrm{load}\\kern0.5em \\mathrm{on}\\kern0.5em
    \\mathrm{the}\\kern0.5em \\mathrm{wheel}/\\mathrm{Actual}\\kern0.5em \\mathrm{radius}\\kern0.5em
    \\mathrm{of}\\kern0.5em \\mathrm{the}\\kern0.5em \\mathrm{wheel}\\right)\\\\ {}\\kern1.75em
    \\times \\mathrm{coefficient}\\kern0.5em \\mathrm{of}\\kern0.5em \\mathrm{rolling}\\kern0.5em
    \\mathrm{wheel}\\kern0.5em \\mathrm{resistance}\\end{array}} $$ $$ F=\\left(W/R\\right)\\times
    K $$ (4) $$ \\mathrm{Radius}\\kern0.5em (R)=2\\kern0.5em \\mathrm{inches} $$ $$
    {\\displaystyle \\begin{array}{c}\\begin{array}{l}\\mathrm{Load}\\kern0.5em \\mathrm{on}\\kern0.5em
    \\mathrm{the}\\kern0.5em \\mathrm{wheel}\\kern0.5em (w)\\\\ {}=\\mathrm{weight}\\kern0.5em
    \\mathrm{of}\\kern0.5em \\mathrm{the}\\kern0.5em \\mathrm{seed}\\kern0.5em \\mathrm{sowing}\\kern0.5em
    \\mathrm{machine}\\\\ {}+\\mathrm{weight}\\kern0.5em \\mathrm{of}\\kern0.5em \\mathrm{the}\\kern0.5em
    \\mathrm{seed}\\kern0.5em \\mathrm{load}\\kern0.5em \\mathrm{in}\\kern0.5em \\mathrm{Bin}1\\\\
    {}+\\mathrm{Weight}\\kern0.5em \\mathrm{of}\\kern0.5em \\mathrm{the}\\kern0.5em
    \\mathrm{seed}\\kern0.5em \\mathrm{refil}\\kern0.5em \\mathrm{bin}\\\\ {}=12+20+20=52\\kern0.5em
    \\mathrm{kg}=114.64\\kern0.5em \\mathrm{lbs}\\end{array}\\\\ {}\\end{array}} $$
    $$ {\\displaystyle \\begin{array}{l}\\mathrm{Coefficient}\\kern0.5em \\mathrm{of}\\kern0.5em
    \\mathrm{rolling}\\kern0.5em \\mathrm{wheel}\\kern0.5em \\mathrm{resistance}\\\\
    {}=0.047\\kern0.5em \\mathrm{inches}\\kern0.5em \\left(\\mathrm{since}\\kern0.5em
    \\mathrm{the}\\kern0.5em \\mathrm{material}\\kern0.5em \\mathrm{is}\\kern0.5em
    \\mathrm{polyurethene}\\right)\\end{array}} $$ $$ \\mathrm{The}\\kern0.5em \\mathrm{coefficient}\\kern0.5em
    \\mathrm{of}\\kern0.5em \\mathrm{rolling}\\kern0.5em \\mathrm{wheel}\\kern0.5em
    \\mathrm{friction}\\kern0.5em (F)=W/2\\ast F=2.679\\kern0.5em \\mathrm{lbs} $$
    (5) In fact, the corn seed sowing machine consists of four wheels. So, the total
    force required to move the corn seed sowing machine is 4 × 2.679 = 10.716 lbs.
    In order to avoid wheel spinning, more static frictional forces are considered
    than the force from the torque, because the static friction will turn into sliding
    friction. And further spinning of the wheel is curtailed by deliberating the wheel
    roll forward movement. The torque force is considered with minimum static frictional
    force, in order to drive the wheels of the corn seed sowing machine in the forward
    direction. The torque developed on the wheel is as follows: $$ T=0.047\\times
    114.64\\times 2=10.776 $$ Total torque developed on the sowing machine is calculated
    as follows: $$ =10.776\\times 4=43.10\\ \\mathrm{lb}\\hbox{-} \\mathrm{in} $$
    Both left side and the right side wheel torques are balanced in order to move
    the sowing machine in a straightline with no deviations, so that the corn seeds
    can be dropped in appropriate locations. For angular motion of the motor driving
    shaft under no load condition, the angular velocity of the motor is considered
    as 150 rpm. The rotational power is estimated as follows: $$ \\mathrm{Power}=\\mathrm{Torque}\\times
    \\mathrm{rotational}\\kern0.5em \\mathrm{distance}\\kern0.5em \\mathrm{per}\\kern0.5em
    \\mathrm{unit}\\kern0.5em \\mathrm{time} $$ $$ \\mathrm{The}\\kern0.5em \\mathrm{rotational}\\kern0.5em
    \\mathrm{power}\\kern0.5em \\mathrm{of}\\kern0.5em \\mathrm{the}\\kern0.5em \\mathrm{Motor}=\\mathrm{Torque}\\kern0.5em
    (T)\\times \\mathrm{Angular}\\kern0.5em \\mathrm{velocity}\\kern0.5em (w) $$ (6)
    $$ \\mathrm{Angular}\\ \\mathrm{velocity}\\ (w)=\\frac{2\\prod }{60}\\times 150=15.7\\mathrm{rad}/\\mathrm{s}
    $$ (7) $$ \\mathrm{Required}\\ \\mathrm{power}\\ (P)=\\mathrm{Torque}\\ \\mathrm{load}\\times
    \\mathrm{Angular}\\ \\mathrm{velocity}\\kern0.5em (w)\\times \\mathrm{conversion}\\
    \\mathrm{factor} $$ (8) $$ \\mathbf{P}=43.10\\times 150\\times 0.1047=\\mathbf{676.958}
    $$ The required mechanical rotational power (P) = 676.958 The power transmitting
    component, that is, the chain drive to transmit mechanical power between two parallel
    shafts using sprockets is considered for corn seed sowing machine. The run in
    and run off points of a socket are considered to harvest the link joint motion.
    This is estimated as follows: $$ 2\\propto =\\frac{360}{\\mathrm{number}\\ \\mathrm{of}\\
    \\mathrm{teeth}} $$ (9) In order to achieve the link joint motion (2α) to 10°,
    36 tooth sprockets are considered. So, the chain resistance is enhanced to 100%.
    The tractive force is calculated as actual weight load (G) × gravitational force
    (g) × coefficient of rolling friction (μ). $$ {F}_{\\mathrm{T}}=G\\times g\\times
    m $$ (10) From steel guides with moderate lubrication, the coefficient of rolling
    friction “μ” is considered as 0.12. Estimated weight load is 52 kg = 114.64 lbs.
    Tractive force = 114.64 × 9.81× 0.12 = 134.95. The tractive force is considered
    as high, that is, 134.95 N/m2, since the machine is operating on uneven surfaces
    so the chain speed should become slow. For optimizing the operational safety and
    to improve the fatigue of the machine multiple chains reasonably, big pitch value
    of 15.875 mm is adopted. The shaft design is considered by considering the stress
    developed at any location of the shaft, which is smaller than the material yield
    stress. The bending stress is estimated as follows: $$ {\\sigma}_{\\mathrm{b}}=\\frac{32\\mathrm{M}}{\\prod
    {d}^3\\left(1-{K}^4\\right)} $$ (11) Here, “M” is the bending moment at the point.
    “d” is the shaft outer diameter = 1.25 inch. K is the ratio of shaft inner and
    outer diameter = 0.25 inches. σb = 828 K-P/in2. When a force is applied on the
    shaft, the shaft of the corn seed sowing machine tends to deflect (bend). The
    deflection is depending on the length of the shaft and the direction of the force
    applied on the shaft (Fig. 5). Fig. 5 The Shaft of the Seed sowing machine design
    Full size image The maximum bending moment is estimated using the following equation:
    $$ {\\displaystyle \\begin{array}{c}M=\\mathrm{WL}/4\\\\ {}M=114.64\\times 2/4=57.32\\end{array}}
    $$ (12) Here, w is the load applied. L is the length of the beam. The force applied
    on the corn seed sowing machine at the center is balanced equally both at left
    and right orientations. In order to keep the centripetal force in a circle, the
    force applied is perpendicular to the velocity. Considering the conservation of
    angular momentum, the corn seed sowing machine wheel velocity is four times the
    angular velocity (w). The radius (R) of the wheel is considered as 4 inches, and
    this reduces the rotational inertia (I) by a factor of “4.” In order to avoid
    the spinning of the wheel, the torque (T) is applied perpendicular to the angular
    velocity (w), so that the corn seed sowing machine wheel moves in a circle rather
    spinning, since the wheel is a cylinder shape. The moment of inertia is estimated
    by considering the product of mass and the square of perpendicular distance. $$
    I=M{R}^2/2 $$ (13) Here, M is the mass = 114.64 lbs. R is the radius of the wheel
    = 4 inches. I = 917.12. The gear connected to the servo motor shaft will be driven
    by PWM signal. The rotation of the teethed wheel is depending on varying the width
    of pulse. The gear is in rest position with 1 ms pulse width. For 180° rotation
    of the teethed wheel, it requires 2 ms. Subsequently, for one complete rotation
    (360°) of the wheel, the required pulse width is 4 ms with a period of 20 ms.
    Based on the experimental result, 0.25 s is taken for 60° rotation of the wheel
    connected to servo motor. For complete rotation, that is, 360° rotation, it requires
    “1” s. The machine is designed to drop a seed from the bin for every 1 s. Corn
    Seed Scheduling Algorithm 1 Equal corn seed distribution methodology is used to
    improve the production rate: Step1: Number of corn seeds = m, Number of holes
    = n Then m ≤ n Pi ∈ {1. …n} and i ∈ {1…m} Pi < Pj and i < j \\( {\\displaystyle
    \\begin{array}{l}\\underset{\\mathrm{J}\\in \\left\\{1.\\dots \\mathrm{m}\\right\\}}{\\min}\\left\\{{\\mathrm{P}}_{\\mathrm{i}+1}-{\\mathrm{P}}_{\\mathrm{i}}\\right\\}\\\\
    {}\\mathrm{i}\\ne \\mathrm{j}\\end{array}} \\) Maximize minimal distance between
    holes \\( {\\displaystyle \\begin{array}{l}\\underset{\\mathrm{J}\\in \\left\\{1.\\dots
    \\mathrm{m}\\right\\}}{\\max}\\left\\{{\\mathrm{P}}_{\\mathrm{i}+1}-{\\mathrm{P}}_{\\mathrm{i}}\\right\\}\\\\
    {}\\mathrm{i}\\ne \\mathrm{j}\\end{array}} \\) Minimizes the maximum distance
    between corn seeds Step2: [x2 − x1,  xn − xn − 1] gap between two holes is equated
    Step3: \\( \\frac{\\left(\\mathrm{n}-1\\right)}{\\left(\\mathrm{m}-1\\right)}=\\mathrm{K}\\left(\\mathrm{n}-1\\right)=\\mathrm{Q}\\mid
    \\mathrm{m}-1\\mid \\) optimal gap adjustment between holes Every vector has ‘Q’
    values of ‘K + 1’ and n − q − 1 values of K Step 4: Repeat step1. Algorithm 2
    Algorithm 2 is used for improving the function of the seed sowing machine (Fig.
    6). Fig. 6 Operational flow chart of the Seed sowing machine Full size image 4
    Results and Discussion The results of sensor 1, sensor 2, and sensor 3 are extracted
    to estimate the empty status of the seed bin. The empty status is represented
    with 16 inches. The depth from upper surface of the seed bin to bottom position
    of the seed bin is 16 inches. The actual depth of the bin is 24 inches. The upper
    4 inches are considered as a null value at sensing stage and from 20 inches to
    24 inches, the sensor will consider as zero. The sensors are positioned on top
    of the bin surface. The sensor “1,” sensor “2,” and sensor “3” produced 4 mA (0
    V), 1.5 V, and 2 mA (0 V), respectively. The mean of these three readings is the
    estimated value for bin empty status. The mA signal is converted into mv and then
    amplified into a voltage signal of 0 V to 5 V. The mean value for bin empty is
    0.5 V. Similarly, the full status of the seed bin is estimated with the three
    sensors. Sensor 1, sensor 2, and sensor 3 produced 5 V, 2.45 V, and 0.5 V, respectively.
    The mean value of the seed bin full status is 2.65 V. The controller will drive
    the alarm for 10 s since the bin status is detected as 0.5 V. Sensor 4 is positioned
    at a distance of 12 inches from the seed drop position. The sensor produced 15.384
    continuously when no seed is detected. When a seed drop is detected, 9.2 mA is
    drawn from the sensor 4. The sensor “5,” that is, Q4X draws an out signal with
    20 mA when it is detected the dropping seed. The sensor “5” produces 4 mA in the
    absence of seed. The sensor “6” produces an output voltage of 60.91 mA when it
    detects the dropping seed. It produced 4 mA in the absence of the seed granule.
    The mean of the sensor “4,” sensor “5,” sensor “6” is considered to detect the
    seed dropping state into the soil. The mean value 30.03 mA (6.06 V) is considered
    as logic high, that is, the seed is dropped. If the output voltage is 4 mA (0
    V), then the controller records the fault condition. The response of seed bin
    detection sensors S1, S2, and S3 is tested with varying bin levels. Figure 7 shows
    the response of sensor 1 with varying bin levels. The output signal of the sensor
    remains constant from zero inches to 4 inches. This is due to initial dead band
    of the sensor. The sensor output signal response is proportional with varying
    bin levels. Minimum output signal, that is, 4 mA is detected with a bin level
    of 16 inches. Fig. 7 Sensor 1 output signal Vs Distance of the metal disc Full
    size image Figure 8 shows the response of sensor 2 with varying bin levels. The
    peak output signal value of 2.7 V is detected at 6-inch bin level. With increasing
    bin level, the response of the sensor out signal is exponentially decayed. Figure
    9 represents the response of sensor 3 with varying bin levels. The output signal
    follows the input signal. With increasing bin level, the sensor output signal
    is increasing correspondingly. Fig. 8 Sensor 2 output signal Vs Distance of the
    metal disc Full size image Fig. 9 Sensor 3 output signal Vs Distance of the metal
    disc Full size image 5 Conclusion The corn seed sowing machine is designed to
    operate with 26.455 lbs load to enhance the functional efficiency. The TMR applied
    to sensor technology will further enhance the performance of the machine. The
    diversified technology is used for the sensor technology for corn seed bin empty
    status detection and corn seed distribution detection at distinctive stages of
    the machine. The velocity of corn seed sowing machine is minimized by deliberating
    the rolling resistance. The motion stability is also significantly improved by
    considering the rolling resistance of the wheel, that is, 0.047 inches. A set
    of four relays is used to drive the rear wheels of the machine. The front wheels
    are driven by the driving rare wheels, which will further improve the motion stability
    of the machine. Since the static frictional force turns into sliding friction,
    the forward movement of the wheel without any slipping is considered. So, the
    corn seed distribution, that is, drop into soil groves, is further improved meticulously.
    For further improving the motion stability of the machine, the chain speed is
    deliberated with significantly high tractive force, that is, 31.2 N/m2. The machine
    wheels’ velocity is considered four times the angular velocity, that is, 62.8
    rad/s, which will further improve the stability of the machine and curtail the
    chances of slippage on uneven surfaces in fields. Pre-programmed one complete
    rotation of the geared wheel will drop the corn seeds into the soil grove by sliding
    the disc in axial direction. This function is supervised by the remote controller.
    Every scan of the controller checks for the possible faults that arise during
    corn seed distribution process. The sensor faulty status and the communication
    failure status at distinct levels of the system will be troubleshot by the supervisory
    (remote) controller for every scan of the process. This will further improve the
    accuracy of the machine meticulously. The alarm system will certainly add the
    functional efficiency of the machine. The designed corn seed sowing machine will
    certainly become a handy device for the corn seed cultivators in order to improve
    the production rate of the needed food to the society. Further, this work is advanced
    with Internet of Things (IOT). So, the remote supervision by the operator or former
    will improve the functionality of the corn seed sowing machine. References R.V.
    Marode, G.P. Tayade, S.K. Agrawal, Design and implementation of multi corn seed
    sowing machine. Int. J. Mech. Eng. Robot. Res. 2(4), 422–429 (2013) Google Scholar   D.
    Ramesh, H.P. Girish Kumar, Agricultural corn seed sowing equipment: A review.
    Int. J. Sci. Eng. Technol. Res. 3(7), 1987–1992 (2014) Google Scholar   Pranil
    et al., Solar powered corn seed sowing machine. Glob. J. Adv. Res. 2(4), 712–717
    (2015) Google Scholar   K.A. Sunitha et al., Agricultural robot designed for corn
    seeding mechanism. IOP Conf. Ser.: Mater. Sci. Eng. 197, 7–9 (2016) Google Scholar   G.
    Tekalign Tujo et al., A predictive model to predict corn seed classes using machine
    learning. Int. J. Eng. Res. Technol. 6(8), 334–344 (2017) Google Scholar   A.V.
    Vlasov, A.S. Fadeev, A machine learning approach for grain crop’s corn seed classification
    in purifying separation. Int. Conf. Inf. Technol. Bus. Ind., Ser. 803, 1–6 (2017)
    Google Scholar   P. Srivatsava, K. Neda, Robotic former. Int. J. Eng. Dev. Res.
    5(2), 827–830 (2017) Google Scholar   B. Mohan, M.V. Ramesh, T. Srinivasa Rao,
    Electrical based corn seed sowing machine. J. Emerg. Technol. Innov. Res. 5(11),
    649–655 (2018) Google Scholar   P. Premalatha, S. Singh, Design and development
    of automatic corn seed sowing machine. Asian J. Electr. Sci. 8(1), 51–54 (2019)
    Article   Google Scholar   P. Johnson, N. Shivakumar, S. Umairahmed, Corn seed
    sowing machine using CAM and follower mechanism. Int. J. Sci. Res. 8(3), 1787–1790
    (2019) Google Scholar   A.T.S. Ormond et al., Maize sowing speeds and corn seed-metering
    mechanisms. J. Agric. Sci. 10(9), 468–476 (2018) Google Scholar   K.K. Jadhav
    et al., Design and fabrication of manually operated corn seed sowing machine.
    Int. Res. J. Eng. Technol. 6(4), 3006–3011 (2019) Google Scholar   R. Kathiravan,
    P. Balashanmugam, Design and fabrication of manually operated corn seed sowing
    machine. Int. Res. J. Eng. Technol. 6(6), 3767–3774 (2019) Google Scholar   Download
    references Author information Authors and Affiliations VNR Vignana Jyothi Institute
    of Engineering and Technology, Hyderabad, India A. Bhujangarao, K. Vidyasagar,
    B. Surya Prasad Rao & G. Suryaprakash Corresponding author Correspondence to K.
    Vidyasagar . Editor information Editors and Affiliations Computer Science and
    Engineering, CMR Institute of Technology, Hyderabad, India Vinit Kumar Gunjan
    Computer Science and Engineering, SRM University Delhi-NCR, Sonepat, Haryana,
    India Mohd Dilshad Ansari Electrical Engineering, King Khalid University, Abha,
    Saudi Arabia Mohammed Usman Hanoi University of Industry, Hanoi, Vietnam ThiDieuLinh
    Nguyen Rights and permissions Reprints and permissions Copyright information ©
    2024 The Author(s), under exclusive license to Springer Nature Switzerland AG
    About this chapter Cite this chapter Bhujangarao, A., Vidyasagar, K., Surya Prasad
    Rao, B., Suryaprakash, G. (2024). Design of a Corn Seed Sowing Machine for Uniform
    Distribution of Corn Seeds Using Optimum Seed Distribution Algorithm. In: Gunjan,
    V.K., Ansari, M.D., Usman, M., Nguyen, T. (eds) Modern Approaches in IoT and Machine
    Learning for Cyber Security. Internet of Things. Springer, Cham. https://doi.org/10.1007/978-3-031-09955-7_18
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-09955-7_18
    Published 08 December 2023 Publisher Name Springer, Cham Print ISBN 978-3-031-09954-0
    Online ISBN 978-3-031-09955-7 eBook Packages Computer Science Computer Science
    (R0) Share this chapter Anyone you share the following link with will be able
    to read this content: Get shareable link Provided by the Springer Nature SharedIt
    content-sharing initiative Publish with us Policies and ethics Sections Figures
    References Abstract Introduction Relevant Work Design Considerations Results and
    Discussion Conclusion References Author information Editor information Rights
    and permissions Copyright information About this chapter Publish with us Discover
    content Journals A-Z Books A-Z Publish with us Publish your research Open access
    publishing Products and services Our products Librarians Societies Partners and
    advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress
    Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Internet of Things
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design of a Corn Seed Sowing Machine for Uniform Distribution of Corn Seeds
    Using Optimum Seed Distribution Algorithm
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Tabassum M.
  - Perumal S.
  - Kashem S.B.A.
  - Ponnan S.
  - Chakraborty C.
  - Chowdhury M.E.H.
  - Khandakar A.
  citation_count: '1'
  description: IoT networks have become famous and utilized in many industries such
    as agriculture, medical, manufacture, and others due to their efficiency and productivity.
    WSN is an IoT network used for smart farming and smart health monitoring. WSNs
    can self-manage, self-configure, self-diagnose, and self-heal, making them ideal
    for agricultural monitoring. A wireless sensor network collects data from numerous
    sensor nodes scattered across the physical world. WSN data processing is critical
    when a node fails for unknown reasons. Data handling is an essential aspect of
    WSN; once any node fails due to unknown reasons, data reliability and availability
    become crucial. Hence, limited battery energy, low bandwidth, limited computing
    capacity, and link failure affect network performance. Therefore, an effective
    cluster-based data aggregation with an appropriate routing must be designed in
    the media access control. The proposed hybrid artificial neural network and decision
    tree algorithm with cognitive radio is developed to select the cluster head. The
    higher amount of residual energy increases the number of packets received at the
    base station and aggregate the data from the normal sensor nodes. The on-demand
    routing protocol is designed to keep data in local storage for retransmission
    during link failure to obtain reliable data transmission. The proposed method
    performance is analyzed as residual energy, end to end delay, normalized overhead,
    packet delivery ratio, packet drop, and throughput. This proposed method is evaluated
    with the cluster-based data aggregation scheme to prove its efficiency. The proposed
    method residual energy is 8.3Joules for 50 nodes; it is high compared to the cluster-based
    data aggregation scheme.
  doi: 10.1007/s11042-022-13337-6
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Multimedia Tools and Applications
    Article Enhance data availability and network consistency using artificial neural
    network for IoT 1203: Applications of Advanced Artificial Intelligence in Multimedia
    and Information Security Published: 21 June 2022 Volume 83, pages 3111–3131, (2024)
    Cite this article Download PDF Access provided by University of Nebraska-Lincoln
    Multimedia Tools and Applications Aims and scope Submit manuscript Mujahid Tabassum,
    Sundresan Perumal, Saad Bin Abdul Kashem, Suresh Ponnan , Chinmay Chakraborty,
    Muhammad E. H. Chowdhury & Amith Khandakar  223 Accesses 3 Citations 1 Altmetric
    Explore all metrics Abstract IoT networks have become famous and utilized in many
    industries such as agriculture, medical, manufacture, and others due to their
    efficiency and productivity. WSN is an IoT network used for smart farming and
    smart health monitoring. WSNs can self-manage, self-configure, self-diagnose,
    and self-heal, making them ideal for agricultural monitoring. A wireless sensor
    network collects data from numerous sensor nodes scattered across the physical
    world. WSN data processing is critical when a node fails for unknown reasons.
    Data handling is an essential aspect of WSN; once any node fails due to unknown
    reasons, data reliability and availability become crucial. Hence, limited battery
    energy, low bandwidth, limited computing capacity, and link failure affect network
    performance. Therefore, an effective cluster-based data aggregation with an appropriate
    routing must be designed in the media access control. The proposed hybrid artificial
    neural network and decision tree algorithm with cognitive radio is developed to
    select the cluster head. The higher amount of residual energy increases the number
    of packets received at the base station and aggregate the data from the normal
    sensor nodes. The on-demand routing protocol is designed to keep data in local
    storage for retransmission during link failure to obtain reliable data transmission.
    The proposed method performance is analyzed as residual energy, end to end delay,
    normalized overhead, packet delivery ratio, packet drop, and throughput. This
    proposed method is evaluated with the cluster-based data aggregation scheme to
    prove its efficiency. The proposed method residual energy is 8.3Joules for 50
    nodes; it is high compared to the cluster-based data aggregation scheme. Similar
    content being viewed by others RETRACTED ARTICLE: Artificial intelligence-based
    agriculture automated monitoring systems using WSN Article 03 January 2021 Design
    and implementation of an internet of things based low-cost smart weather prediction
    system Article 18 July 2021 Developing a Smart Wireless Sensor System Using IoT
    Network Architecture for Precision Agriculture Chapter © 2023 1 Introduction Wireless
    Sensor Network (WSN) is generally a collection of small, inexpensive, and more
    miniature power consumption sensors deployed in the area with massive coverage
    [30]. Since the node of the WSN collects the data from remote locations and is
    transmitted to the Base Station (BS) [11]. The node of the WSN has sensors, battery
    and microcontrollers that are integrated on the single chip [28, 29]. WSN is used
    in various applications such as ocean pollution detection, natural environment
    monitoring, surveillance, and medical services [1, 19]. In sensor nodes, the faults
    are occurred due to the low bandwidth, open environment, dynamic environment,
    interference, limited computing capacity, constrained storage capacity and power
    constraints [14, 15, 17]. A clustering hierarchy algorithm is utilized to effectively
    collect the sensor nodes data sensed and used to enhance energy efficiency and
    lifetime [2]. The sensor nodes are separated into various groups, namely clusters
    in the cluster based WSN. The nodes belonging to a network collects data and transfer
    the information to one head node, namely Cluster Head (CH) [4, 20]. The process
    of minimizing the amount of data transmission over the network is referred to
    as data aggregation. An unwanted and uncorrelated data are rejected by using the
    CHs of various clusters. Hence, unwanted data transmission creates collision through
    the network that helps preserve its energy consumption and communication cost.
    Therefore, the clustering over the WSN improves the network scalability and saves
    communication bandwidth [10, 13]. Additionally, the CH transmits the data to the
    BS (single-hop communication) or uses the intermediate nodes as relays to transmit
    the data to BS [7]. Moreover, the routing protocol used in the WSN supports the
    adaptiveness and resource-awareness, which overcome the limited battery capacity
    and increases the lifetime [9]. In WSN, the CH near the BS utilizes a high amount
    of energy and dies faster, affecting the network lifetime [6, 23]. The design
    of an energy-efficient routing protocol is considered problematic in the WSN.
    Because the conventional algorithms use for selecting the CHs and the routing
    algorithm propagates for obtaining an appropriate route utilizes a considerable
    amount of energy [31]. The data storage (local memory) is mainly required to store
    the data when the network is affected by node/link failure. This data storage
    is used to keep the data packets when the routing path has node/link failure during
    the communication. The rerouting is initialized in the network for retransmitting
    the data to the desired destination [16]. Hence storage is required in the WSN
    to store the data when there is a node failure during data transmission. The significant
    contributions of this research paper are given as follows: The hybrid Artificial
    Neural Network (ANN) and Decision Tree (DT) algorithm with cognitive radio select
    the CH and aggregate the cluster members data. An on-demand routing protocol,
    namely Ad hoc On-Demand Distance Vector (AODV) Routing, is used to generate the
    routing path from the source to the BS for transmitting the data packets. The
    rerouting is initialized in the MAC layer when the primary route contains the
    node failure. Additionally, the sensor nodes use the local memory to keep the
    backup of transmitting data packets for 8 h until they receive the BS acknowledgement
    (ACK). Once the sensor node receives the ACK message, the data packets are discarded,
    and a new packet is saved during communication. The overall papers organization
    is given as follows: The literature surveys about the recent data gathering are
    given in Section 2. The network model and energy model considered in the WSN are
    provided in Section 3. The ANN-DT based data aggregation and the AODV based data
    transmission from the source to the CH are clearly described in Section 4. The
    performance analysis of the proposed method is provided in Section 5. Finally,
    the conclusion is made in Section 6. 2 Literature review Sun et al. [22] presented
    the Compressive Sensing (CS) data gathering algorithm based on Packet Loss Matching
    (PLM) algorithm for addressing the issue of CS-based data collection in unpredictable
    links. The effect of packet loss in CS-based data collection was analyzed for
    designing the sparse measurement matrix based on Packet-loss Matching (SPLM).
    This SPLM was used for solving the disparity among the collected data and sampling
    the measurement matrix. The nodes in the network were divided into CS nodes and
    Traditional Forwarding (TF) nodes. The multipath backup routing between the CS
    nodes was used for achieving reliable transmission. Kamalesh et al. [12] developed
    the reliable data aggregation method, which utilizes the Support Vector Machine
    (SVM) to accomplish loss recovery and failure detection. The reserve node-based
    fault recovery (RFR) method was used to prevent packet loss. Here, the clusters
    were formed by considering the information about node location and the CH was
    selected based on the node connectivity. The node with higher node connectivity
    was selected as CH, and the SVM classification over the collected data was used
    to identify the node failures. The CH used for the SVM based failure detection
    was utilized a high amount of power in the WSN. Qian et al. [18] presented the
    hybrid WSN by incorporating the few mobile sensor nodes (MN) into the static sensor
    nodes (SN). Since the hybrid WSN was developed because of its less energy and
    higher capacity. SN and MN’s dynamic scheduling was accomplished by using the
    valid target tracking method in hybrid WSN. Additionally, an Adaptive Unscented
    Kalman Filter (AUKF) algorithm was developed for the MN to enhance the robustness
    and accuracy of the recovery mechanism. This AUKF algorithm was not considered
    the mobility during loss recovery in the WSN. Yue et al. [33] developed the intelligent
    fault-tolerant routing method. This fault aware routing was developed based on
    Artificial Bee Colony (ABC) and Particle Swarm Optimization algorithm (ABC-PSO).
    The convergence to a local optimum was avoided, as well as optimization efficiency
    and performance were enhanced, and response capabilities were improved by optimization
    capacity and exploration. It helped to obtain reliability and fault tolerance
    over the network. This ABC-PSO can use non shortest path, increasing the delay
    and energy consumption through the network. Devi et al. [8] presented the Cluster-based
    Data Aggregation Scheme (CDAS) to minimize the packet loss and latency. This aggregation
    method has two different phases, such as aggregation tree construction and slot
    scheduling algorithm. In 1st phase, each CH used the compressive aggregation in
    the collected data. Subsequently, the sink designs the aggregation tree by utilizing
    the Minimum Spanning Tree (MST). The latency and packet loss were considered in
    the 2nd phase. Hence, this CDAS was used to mitigate the unwanted waiting and
    retransmissions in the WSN. The increment in data flow increases the waiting time
    during data collection and increases the delay. Srividhya and Shankar [21] developed
    the distance-based clustering and multi-hop routing for the cognitive radio-based
    WSN. The network was divided into regions by distance to obtain a better spectrum
    allocation. The CH was chosen by considering the average distance and the standard
    cluster members allocated to the respective CH based on the average threshold
    distance. Subsequently, the time-division multiple access was assigned to each
    node to route the data packets. The packet retransmission was minimized, and packet
    collision was avoided by portioning the network into different regions. This work
    does not analyze the delay during the data transmission. Yadav et al. [32] presented
    the Energy-Aware Cluster-based RoutingProtocol (EACRP) to obtain reliable data
    transmission of the cognitive radio-based WSN. The optimal number of clusters
    was generated using the self-organized distributed clustering to achieve lesser
    average node power. Here, the clusters were formed with a high number of common
    channels to avoid the energy insufficient problem caused by the activities of
    the primary user. The optimal path generated by the EACRP was used to transmit
    the data packets. This EACRP was failed to differentiate the signals from the
    primary user and secondary users. Tabassum and Mathew [25] and Tabassum et al.
    [27] performed some experiments using an industrial WSN hardware infrastructure
    known as “MEMSIC eKo Pro Series” by deploying in a paddy field. They deployed
    WSN with four eKo nodes and one Base Station unit to examine the industrial system
    data loss, storage, and network inconsistency issues. Each eKo node related to
    sensors such as temperature, humidity, soil moisture and a weather monitoring
    system. All eKo nodes can sense and forward data to other nodes and act as a repeater
    when placed as a standalone system. The experiment results show the data loss
    and data storage issues upon the BS failure without having any alternative data
    storage technique. In another research paper, Tabassum and Zen [26] also performed
    simulation-based experiments to observe the data loss, data storage, and network
    inconsistency issues in Cluster Base Routing Protocols (CBRP). The experiments
    results show data loss and incompetency of cluster-based routing protocols upon
    BS failure. The existing research has various limitations such as higher energy
    consumption and higher delay due to the waiting time, inappropriate failure detection
    and long-distance routing path [3, 5]. Therefore, an effective on-demand routing
    protocol is proposed for achieving less energy consumption by identifying the
    shortest route. Moreover, the existing research does not have any local memory
    to keep the data packets during node/link failure that causes higher packet losses
    through the network [6, 24]. But the sensor nodes initialized in the proposed
    method have a local memory to keep the backup of the data packets until 8 h. These
    data packets are transmitted to the desired location when the respective sensor
    node receives the ACK message from the BS. It helps to minimize packet loss during
    data transmission. Optimal and intelligent problem-solving techniques are required
    in every field, regardless of simple or complex problems. Hence, Artificial Intelligence
    (AI) plays an essential role in developing an efficient and optimal solution for
    end-users. Therefore, we have proposed a hybrid ANN and DT algorithm with a cognitive
    radio combination to enhance the data availability and network consistency in
    WSNs. 3 Methodology 3.1 System model This section provides an explanation about
    the network model and energy model considered while designing the WSN. 3.2 Network
    model The WSN contains a vast amount of sensor nodes that are randomly deployed
    in the interested area. The assumptions considered in the network model are given
    as follows: After deploying the nodes, the sensors and BS are static. The sensor
    nodes are aware of its location. The nodes in the network are homogeneous. The
    distance from the node to the BS is calculated based on the messages received
    signal strength. Energy exhaustion causes the dead node in the network. The transmission
    power of the sensor nodes is varied based on the distance from the receiver node.
    This paper uses Network Simulator-2 (NS-2) to implement and simulate the cognitive
    radio-based WSN. Generally, the NS-2 provides a significant simulation about the
    sensing, processing, and transmitting of the data packets using the wireless nodes.
    It is a discrete network modelling platform that analyzes the complex communications
    network performance and provides extensive resources for wired and wireless emulation
    of numerous protocols. It is a highly scalable framework for wired and wireless
    simulations and supports multiple network features, traffic, and routing protocols.
    In NS-2, the code is generated in the C + + and OTCL script, used to simulate
    wireless communication with default free space and log-normal shadowing interference
    models. 3.3 Energy model The simplified 1st order radio model is considered as
    the energy model of the WSN. The consumed energy to transmit and receive the \\(l\\)
    amount of packet through the distance \\(\\left(d\\right)\\)are represented in
    the Eqs. (1) and (2), respectively. $$E_{TX}\\left(l,d\\right)=\\left\\{\\begin{array}{*{20}c}l\\times
    E_{elec}+l\\times\\varepsilon_{fs}\\times d^2 \\ if \\ d\\ < d_0\\\\ l\\times
    E_{elec}+l\\times\\varepsilon_{mp}\\times d^4 \\ if \\ d\\geq d_0\\end{array}\\right.$$
    (1) $${E}_{RX}\\left(l,d\\right)=l\\times {E}_{elec}$$ (2) Where the dissipated
    energy in the transmitter/receiver is represented as \\({E}_{elec}\\); The amplification
    energy for free space and multipath models are represented as \\({\\varepsilon
    }_{fs}\\) and \\({\\varepsilon }_{mp}\\) respectively; Additionally, the \\({d}_{0}\\)
    specifies the threshold distance that is expressed in Eq. (3). $${d}_{0}=\\sqrt{\\frac{{\\varepsilon
    }_{fs}}{{\\varepsilon }_{mp}}}$$ (3) 3.4 Proposed method In this proposed method,
    the on-demand routing protocol is developed in the MAC layer to transmit the information
    from the source to the destination (i.e., BS). The MAC layer data collection is
    obtained using the hybrid ANN and DT algorithm with cognitive radio. The advantages
    of fault tolerance and high parallel capacity of ANN are combined with the less
    computation advantage of DT algorithm to divide the network into primary and secondary
    clusters. This ANN-DT selects the CH from the clusters. The AODV routing protocol
    transmits the data packets when the source receives the BS acknowledgement (ACK)
    message. Otherwise, the data packet is saved in the intermediate nodes for up
    to 8 h. If the source node does not receive any ACK message, the stored data is
    discarded in the WSN. Subsequently, the rerouting is initialized in this network
    to avoid packet loss while transmitting the data packets. Hence, the number of
    packets the BS receives increases, even when the network has node failure. The
    proposed methods overall architecture is shown in Fig. 1, and the process of data
    transmission in the WSN is illustrated in Fig. 2. The main steps processed in
    the proposed method are given as follows: Initially, the sensor nodes are randomly
    deployed through the network area. Then the information about the sensor nodes
    position is given as the input to the ANN-DT. The network is divided into primary
    and secondary clusters by considering the sensor nodes energy and distance in
    the ANN-DT algorithm. Additionally, this ANN-DT algorithm selects the CH from
    the clusters used to aggregate the data from its cluster members. Subsequently,
    the data packets are transmitted by using the AODV routing protocol. If the primary
    node requires to transmit the data, the packets are transmitted through the routing
    path generated by the AODV. But the spectrum sensing is enabled when the secondary
    node is considered for data transmission. Once the spectrum is allocated to the
    secondary node, the packets are transmitted through the network. The sensor nodes
    of the WSN have a local memory to keep the backup of the data packets when the
    generated routing path contains the node/ link failure. The data is saved in the
    sensor node until 8 h if the node does not receive the ACK message from the BS.
    Then the rerouting is initialized to transmit the data to the desired BS. Fig.
    1 Flowchart of the proposed method Full size image Figure 2 shows the process
    of data transmission, which is carried out by the proposed method. Initially,
    the BS transmits the beacon to the CH, and CH transmits the beacon to the sensor
    nodes. Next, the reply messages are forwarded between the nodes to the CH and
    CH to the BS. The data packets are transmitted to the desired location when the
    source receives the request messages. If no beacon is received in the desired
    interval, the CH and BS are considered down in the WSN. In that case, the data
    is saved between the nodes, and it transmits the data packets once the source
    node receives the request message. Fig. 2 Process of data transmission in WSN
    Full size image 4 Algorithm explanation 4.1 ANN with DT algorithm for cognitive
    radio based WSN The ANN-DT identifies the primary and secondary clusters based
    on the nodes energy and distance and selects the CH from the clusters to aggregate
    the data from the normal sensor nodes. The fewer computations and fault tolerance
    capacities improve the clustering and data aggregation process in the WSN. The
    cognitive radio capacities identify the unused spectrum in the sensor nodes’ license
    and unlicensed spectrum band. Then the unused spectrum is opportunistically used
    for the node that requires the spectrum. In cognitive radio, the primary node
    utilizes the spectrum anytime, but the secondary nodes only utilize the spectrum
    when the primary node does not. The primary node collects the information about
    the secondary node to perform spectrum sharing. Therefore, the ANN-DT effectively
    divides the network into primary and secondary clusters. The CH selected from
    the clusters is used to eliminate redundant information based on the data aggregation.
    The AODV is used when the nodes in the primary clusters want to transmit the BS
    data. The spectrum sharing to the secondary cluster’s nodes is initialized while
    sending the secondary nodes data packets. In that case, the ANN-DT is used to
    analyze the unused spectrum of primary nodes, and then the spectrum from the respective
    primary node is shared with the secondary nodes. The spectrum sharing to the cluster
    secondary nodes is used to obtain reliable data transmission over the network.
    4.2 Training of ANN & DT The univariate decision tree from a trained ANN is generated
    by using this ANN-DT algorithm with cognitive radio. The decision tree node provides
    the actual value when the single specified variable crosses a specific threshold.
    Otherwise, the decision tree in the node gives a false value. In each node, the
    algorithm decides which variable is required for portioning the data. The variable
    threshold is calculated in this algorithm that helps analyze the ANN response
    at the feature space. The lesser computations of the DT and parallel processing
    capacity of the ANN are used to minimize the delay during the clustering process.
    The schematic representation of ANN-DT with cognitive radio is shown in Fig. 3.
    At the 1st stage, the ANN model can generalize the data to be constructed in the
    ANN-DT. This ANN-DT is utilized to cluster the WSN and select the CH from the
    respective clusters. Fig. 3 Architecture of ANN-DT Full size image Moreover, the
    ANN-DT is trained using the gradient descent method, in that error is propagated
    through the network. Determining an appropriate group of basis nodes and weights
    to the output layer is essential to train the radial basis function network. The
    least-square problem identifies the output layers connecting weights for the radial
    basis function neural network. The input data is divided into the two sets, such
    as \\(S1\\)and \\(S2\\), when the set \\(S\\) contains an \\(n\\) samples. The
    expression for extracting the node parameter is illustrated in Eq. (4). $$\\sigma
    {\\left(f\\right)}_{a}=correlation \\left(\\left\\{{v}_{ij}\\left(f\\right)\\right\\},
    \\left\\{{v}_{ij}\\left(a\\right)\\right\\}\\right) for \\ all \\ pairs \\ i,j\\\\
    =\\frac{\\sum _{i}^{N}\\sum _{j>1}^{N}\\left\\{{v}_{ij}\\left(f\\right)-\\overline{v}\\left(f\\right)\\right\\}\\left\\{{v}_{ij}\\left(a\\right)-\\overline{v}\\left(a\\right)\\right\\}}{\\sqrt{\\sum
    _{i}^{N}\\sum _{j>1}^{N}\\left\\{{v}_{ij}\\left(f\\right)-\\overline{v}\\left(f\\right)\\right\\}}\\sqrt{\\sum
    _{i}^{N}\\sum _{j>1}^{N}\\left\\{{v}_{ij}\\left(a\\right)-\\overline{v}\\left(a\\right)\\right\\}}}$$
    (4) Where an absolute variation is represented by as \\(v\\left(f\\right)\\),
    the attribute is defined as \\(a\\). The function is denoted as \\( f \\) and
    significance is described as \\(\\sigma\\). The cognitive radio-based clustering
    is mainly helping to improve the efficiency of the WSN. The spectrum sharing from
    primary nodes to secondary nodes are used to obtain reliable data transmission.
    The location information about the primary and secondary clusters are given to
    the AODV routing protocol to transmit the data packets. This on-demand routing
    protocol avoids node/link failure in the route generation process and the local
    memory used in the nodes to preserve the data packets when the route contains
    node failure. 4.3 AODV Routing protocol The routing from the source node to the
    BS is carried out using the AODV routing protocol at the MAC layer. Generally,
    the AODV routing protocol is an on-demand routing protocol that combines DSR and
    DSDV algorithms. The route detection and maintenance of the DSR is incorporated
    in the DSDV routing to develop an effective AODV routing algorithm. This protocol
    is used to find the destination path in the dynamic network of the MAC layer.
    The main features of the AODV routing protocols are low network load, faster access
    speed, less computation, and less memory footprint. Additionally, an infinite
    counting problem and network loop are avoided using the destination sequence number
    field in the routing table. These three message mechanisms are used to process
    the AODV routing protocol, such as route request (RREQ), route reply (RREP), and
    routing error (RERR) message. 4.4 Route discovery process The route discovery
    process is shown in Fig. 4. Initially, the source node checks whether the routing
    path from the source node to the BS. When there is a route in the routing table,
    the source node transmits the data packet to the BS. If there is no route in the
    routing table, the RREQ message is broadcasted for initializing the routing process.
    The RREQ message transmission is illustrated in Fig. 5. Subsequently, the intermediate
    node and BS transmit the RREP message while processing the MAC layers routing.
    The RREP message is transmitted through the reverse route, identified by the route
    discovery process [24]. The source node serial number maintains the reverse path
    to the source node at the RREQ packet. Fig. 4 Flowchart of route discovery process
    Full size image Fig. 5 Transmission of RREQ message Full size image The reverse
    route is automatically created to the source node when the source node transmits
    the BS RREQ packet. The node accomplishes the address of an adjacent node for
    the 1st RREQ packet. The identified reverse routing is maintained for the source
    node, and the BS generates the RREP packet when the BS receives the RREQ packet.
    Then the RREP packet is accomplished in the reverse routing RREP packet. Here,
    each node and the path achieve the same to the BS, while transmitting the RREP
    packet. Therefore, the data packets are transferred to the BS, when the source
    node receives the RREP. The routing path identification using the RREP message
    is shown in Fig. 6. Moreover, the overall data transmission is carried out in
    the MAC layer. In this proposed method, the generated data packets are saved in
    the local memory, and it waits until 8 h to receive the RREP message. The size
    of the memory used in the proposed method is 32 bits of data. The data packets
    are transmitted to the BS, when the RREP message reaches by the source node. If
    the source node does not receive any RREP message, the stored data packets are
    discarded through the network. Fig. 6 Route Identification using RREP Message
    Full size image Additionally, the backup routing is initialized when there is
    a node failure in the primary route. The route discovery process is initiated
    again when the node failure has occurred in the routing path. This backup routing
    is used to increase the number of packets received by the BS. This research obtains
    an effective CH selection and data aggregation from the cluster members using
    the ANN-DT with cognitive radio. The clustering of the network is used to minimize
    the energy consumption through the network. Moreover, this ANN-DT effectively
    accomplished the spectrum, which helps obtain reliable data transmission. This
    cluster-based data aggregation helps to minimize the unwanted energy consumption
    over the MAC layer. Moreover, the on-demand routing from the source node to the
    BS via CHs is carried out using the AODV routing protocol. The AODV routing protocol
    is developed to modify the MAC layer. In this proposed method, each node has a
    512-memory address storage capacity with a data length of 32 bits. Each node can
    hold the data for a certain threshold period (i.e., 8 h) until the base station
    receives the ACK message. This AODV is also used to obtain the rerouting path
    when the routing path contains the node failure. Therefore, the packet drop is
    minimized through the network by avoiding node failure. The selection of CH using
    ANN-DT and data transmission using AODV is specified in the following “Algorithm
    1”. Algorithm 1 5 Results and discussion The experimental results and discussion
    of the proposed methods are clearly described in this section. This proposed method
    implementation and simulation are made using the Network Simulator (NS) 2.35,
    operated in a Windows 8 operating system with an Intel Core i3 processor and 4GB
    RAM. In the developed WSN, CH and data aggregation selections from the respective
    cluster members are carried out using the ANN-DT with cognitive radio. Moreover,
    the routing path from the source to the destination is generated using the AODV
    (On-demand routing) protocol. This work considers the variable nodes from 50 to
    100, which are deployed in the \\(1000\\times 1000{\\text{m}}^{2}\\). The simulation
    parameters of this proposed methodology are mentioned in Table 1, and the node
    deployment in the network animator is shown in Fig. 7. Table 1 Simulation parameters
    Full size table Fig. 7 Node deployment in network animator Full size image In
    Fig. 7, the green and blue color nodes specify the sink and cluster heads, respectively.
    The remaining node shows the clusters identified through the ANN-DT. The cluster
    topology of the WSN is shown in Fig. 8. Fig. 8 Cluster Topology Full size image
    5.1 Performance analysis of proposed for different number of nodes The proposed
    method performance is analyzed in residual energy, End to End Delay (EED), normalized
    overhead, Packet Delivery Ratio (PDR), packet drop, and throughput. This proposed
    method is compared with ABC-PSO (Artificial Bee Colony – Particle Swarm Optimization)
    and CDAS (Compressive Distributed Aggregation Scheduling Algorithm) methods. This
    ABC-PSO and CDAS are implemented for the same specification mentioned in Table
    1 since this comparison is taken by varying the nodes from 50 to 100. 5.2 Residual
    energy Residual energy is the nodes current energy level after transmitting or
    receiving the data packets through the network. The residual energy is shown in
    Eq. (5). $$Residual \\ energy={E}_{T}-{E}_{C}$$ (5) Where, \\({E}_{T}\\) is the
    total amount of energy for all nodes, and \\({E}_{C}\\) is the consumed energy
    of the nodes. Figure 9 shows the comparative analysis of residual energy for the
    proposed method with ABC-PSO and CDAS. This residual energy analysis is taken
    for varying nodes. Figure 9 knows that the proposed method has higher residual
    energy than the ABC-PSO and CDAS. The residual energy of the proposed method is
    increased by selecting the appropriate CH from the network. Additionally, the
    hybrid ANN-DT with cognitive radio-based data aggregation minimizes the number
    of data transmissions that help preserve the nodes energy level. Fig. 9 Comparison
    of residual energy Full size image 5.3 End to End Delay EED is defined as the
    amount of time taken to transmit and receive the data packets within the network,
    and the EED is shown in Eq. (6). $$EED=\\frac{\\sum (Arrive \\ time-Send \\ time)}{\\sum
    \\ Number \\ of \\ connections}$$ (6) The EED comparison of the proposed method
    with the ABC-PSO and CDAS is shown in Fig. 10, taken by varying the nodes. The
    EED of the proposed method is less when compared to the ABC-PSO and CDAS. Hence,
    the delay of the CDAS is increased when the data flow is increased through the
    network. Specifically, the shortest path identified in the ANN-DT-AODV leads to
    less delay in the MAC layer transmission. Fig. 10 Comparison of end-to-end delay
    Full size image 5.4 Packet Delivery Ratio PDR is the ratio of the total packets
    received by the BS to the total packets generated by the source node, and the
    PDR is expressed in the following Eq. (7). $$PDR=\\frac{Received \\ packets}{Transmitted
    \\ packets}\\times 100\\%$$ (7) Figure 11 shows the comparative analysis of PDR
    for the proposed method with ABC-PSO and CDAS. This PDR analysis is taken for
    the different number of nodes. Figure 11 knows that the proposed methods PDR is
    high than the ABC-PSO and CDAS. The higher PDR of the proposed method is obtained
    by processing the rerouting in the MAC layer since the rerouting is initialized
    when there is a node failure in the primary transmission path. Fig. 11 Comparison
    of packet delivery ratio Full size image 5.5 Packet Drop Ratio The packet drop
    is defined as the number of packets dropped while transmitting the data from the
    source to the BS, and the packet drop is expressed in Eq. (8). $$\\text{Packet
    drop}=\\frac{Transmitted \\ packets-Received \\ packets}{Transmitted \\ packets}$$
    (8) The packet drops ratio comparison of the proposed method with the ABC-PSO
    and CDAS is shown in Fig. 12, taken by varying the nodes. The packet drop of the
    proposed method is less when compared to the ABC-PSO and CDAS. Because of the
    rerouting developed by the AODV routing protocol, the packet drop through the
    network is minimized over the MAC layer. Fig. 12 Comparison of Packet Drop Ratio
    Full size image 5.6 Throughput Throughput is defined as the number of data packets
    which is successfully received by the destination. Generally, throughput is measured
    as bits per second. The throughput comparison of the proposed method with the
    ABC-PSO and CDAS is shown in Fig. 13, taken by varying the nodes. Figure 13 knows
    that the proposed method achieves better throughput. The on-demand routing and
    rerouting using the AODV obtain maximum throughput while transmitting the BS data
    packets. Fig. 13 Comparison of throughput Full size image 5.7 Normalized overhead
    Normalized overhead is the number of unaffected data packets delivered to the
    base station while transmitting the source nodes data packets. The normalized
    overhead is expressed in Eq. (9). $$\\text{Normalized \\ overhead}=\\frac{\\sum
    \\ Number \\ of \\ control \\ packets}{\\sum \\ Number \\ of \\ received \\ packets}$$
    (9) Figure 14 shows the comparative analysis of normalized overhead for the proposed
    method with ABC-PSO and CDAS. This normalized overhead analysis is taken for the
    different number of nodes. Figure 14 knows that the normalized overhead of the
    proposed method is less than the ABC-PSO and CDAS. The proposed method with less
    normalized overhead is achieved based on the higher PDR than the ABC-PSO and CDAS.
    The higher PDR shows that the proposed method successfully transmits the data
    packets to the BS. An adequate clustering using ANN-DT and rerouting using AODV
    of the proposed method helps achieve better data transmission capacity, packet
    loss minimization and less power consumption. The BS monitors the node failure
    to avoid the packet drop while transmitting the data packets. Moreover, the packets
    are retransmitted over the network using the on-demand distance vector routing
    protocol to increase the number of packets received by the BS. Fig. 14 Comparison
    of normalized overhead Full size image 5.8 Performance analysis of proposed method
    for different primary and secondary nodes This section shows the performance analysis
    for the different primary and secondary nodes discussed in this section. This
    cognitive radio usability is analyzed based on the average EED. Figures 15 and
    16 show the average EED comparison for different primary and secondary nodes,
    respectively. The primary nodes are varied from 2 to 20, and secondary nodes are
    varied from 40 to 100 while analyzing the network performances. Figures 15 and
    16 know that the average EED of the proposed method is less when compared to the
    EACRP. The lesser computations and high parallel capacity of the ANN-DT are required
    to minimize the average EED while transmitting the data packets. Moreover, the
    shortest path obtained AODV routing protocol minimizes the delay through the cognitive
    radio based WSN. Fig. 15 Comparison of average EED for different primary nodes
    Full size image Fig. 16 Comparison of average EED for different secondary nodes
    Full size image 6 Conclusion In this research paper, a hybrid ANN-DT with cognitive
    radio is used to detect the CH from the clusters and aggregate the data from the
    cluster members of the MAC layer. The issues due to the dynamic spectrum sensing
    are solved by clustering the network into primary and secondary clusters. Therefore,
    the cognitive radio based WSN improves network efficiency based on the data aggregation
    from the normal nodes. This cluster-based aggregation is used to minimize the
    amount of data transmission to the BS and reduce the unwanted data transmitted
    to the BS. The on-demand routing protocol (i.e., AODV) is used to achieve the
    data backup during the node failure. The faster access speed and less computation
    of the AODV tend to minimize the delay during the data transmission. The rerouting
    is initialized by AODV when the primary route contains the node failure. The AODV
    used in the ANN-DT is used to preserve the data until 8 h when a node failure
    occurs in the routing path. The proposed method provides better performance than
    the ABC-PSO and CDAS method. The energy consumption of the proposed method is
    8.3 J for 50 nodes. It is high when compared to the CDAS method. In the future,
    network failure management can be used for enhancing network efficiency during
    a node failure. References Abbasi-Daresari S, Abouei J (2016) Toward cluster-based
    weighted compressive data aggregation in wireless sensor networks. Ad Hoc Netw
    36:368–385 Article   Google Scholar   Alami HE, Najid A (2019) ECH: An enhanced
    clustering hierarchy approach to maximize lifetime of wireless sensor networks.
    IEEE Access 7:107142–107153 Article   Google Scholar   Ali AB, Tabassum M, Mathew
    K (2016) A comparative study of IGP and EGP routing protocols, performance evaluation
    along load balancing and redundancy across different AS. In: Proceedings of the
    International Multi Conference of Engineers and Computer Scientists, vol 2, pp
    487–967 Azharuddin M, Jana PK (2017) PSO-based approach for energy-efficient and
    energy-balanced routing and clustering in wireless sensor networks. Soft Comput
    21(22):6825–6839 Article   Google Scholar   Chakraborty C, Gupta B, Ghosh SK (2013)
    A review on telemedicine-based WBAN framework for patient monitoring, int. journal
    of telemedicine and e-Health. Mary Ann Libert Inc 19(8):619–626. https://doi.org/10.1089/tmj.2012.0215
    Article   Google Scholar   Chakraborty C, Roy R, Pathak S, Chakrabarti S (2011)
    An optimal probabilistic traffic engineering scheme for heterogeneous networks.
    CIIT Int J Fuzzy Syst 3(2):35–39. FS022011003, Print: ISSN 0974–9721 & Online:
    ISSN 0974–9608. Daneshvar SMH, Mohajer PAA, Mazinani SM (2019) Energy-efficient
    routing in WSN: A centralized cluster-based approach via grey wolf optimizer.
    IEEE Access 7:170019–170031 Article   Google Scholar   Devi VS, Ravi T, Priya
    SB (2020) Cluster based data aggregation scheme for latency and packet loss reduction
    inWSN. Comput Commun 149:36–43 Article   Google Scholar   Elsmany EFA, Omar MA,
    Wan TC, Altahir AA (2019) EESRA: Energy efficient scalable routing algorithm for
    wireless sensor networks. IEEE Access 7:96974–96983 Article   Google Scholar   Gupta
    SK, Jana PK (2015) Energy efficient clustering and routing algorithms for wireless
    sensor networks: GA based approach. Wirel Pers Commun 83(3):2403–2423 Article   Google
    Scholar   Hidoussi F, Toral-Cruz H, Boubiche DE, Martínez-Peláez R, Velarde-Alvarado
    P, Barbosa R, Chan F (2017) Power efficient and adaptive latency hierarchical
    routing protocol for cluster-based WSN. Wireless Pers Commun 96(4):4929–4945 Article   Google
    Scholar   Kamalesh S, Ganesh Kumar P (2017) Data aggregation in wireless sensor
    network using SVM-based failure detection and loss recovery. J Exp Erim Ental
    Theor Artif Intell 29(1):133–147 Article   Google Scholar   Mantri DS, Prasad
    NR, Prasad R (2015) Bandwidth efficient cluster-based data aggregation for wireless
    sensor. Netw Comput Electr Eng 41:256–264 Article   Google Scholar   Mantri DS,
    Prasad NR, Prasad R (2016) Mobility and heterogeneity aware cluster-based data
    aggregation for wireless sensor network. Wireless Pers Commun 86(2):975–993 Article   Google
    Scholar   Mishra S, Sagban R, Yakoob A, Gandhi N (2018) Swarm intelligence in
    anomaly detection systems: an overview. Int J Comput Appl 3(2):1–10 Mohanasundaram
    R, Periasamy PS (2015) Clustering based optimal data storage strategy using hybrid
    swarm intelligence in WSN. Wirel Pers Commun 85(3):1381–1397 Article   Google
    Scholar   Nayak P, Devulapalli A (2015) A fuzzy logic-based clustering algorithm
    for WSN to extend the network lifetime. IEEE Sens J 16(1):137–144 Article   Google
    Scholar   Qian H, Fu P, Li B, Liu J, Yuan X (2018) A novel loss recovery and tracking
    scheme for maneuvering target in hybrid WSNs. Sensors 18(2):341 Rahul M, Kohli
    N, Agarwal R, Mishra S (2019) Facial expression recognition using geometric features
    and modified hidden Markov model. Int J Grid Util Comput 10(5):488–496 Article   Google
    Scholar   Sharma T, Tabassum M (2021) Enhanced algorithm to optimize QoS and security
    parameters in Ad hoc networks. design methodologies and tools for 5G network development
    and application. IGI Global, pp 1–27 Srividhya V, Shankar T (2018) Energy proficient
    clustering technique for lifetime enhancement of cognitive radio–based heterogeneous
    wireless sensor network. Int J Distrib Sens Netw 14(3):1550147718767598 Article   Google
    Scholar   Sun Z, Tao R, Xiong N, Pan X (2018) CS-PLM: Compressive sensing data
    gathering algorithm based on packet loss matching in sensor networks. Wirel Commun
    Mob Comput 2018:1–2. https://doi.org/10.1155/2018/51319492018 Sundresan P, Mujahid
    T, Ganthan N, Suresh P, Chinmay C, Saju M, Zeeshan B, Mohammad TQ (2021) ANN based
    novel approach to detect node failure in wireless sensor network. CMC-Comput Mater
    Continua 69(2):1447–1462 Article   Google Scholar   Suresh P, Saravanakumar U,
    Iwendi C, Mohan S, Srivastava G (2021) Field-programmable gate arrays in a low
    power vision system. Comput Electr Eng 90:106996 Article   Google Scholar   Tabassum
    M, Mathew K (2014) A genetic algorithm analysis towards optimization solutions.
    Int J Digit Inform Wirel Commun 4(1):124–143 Google Scholar   Tabassum M, Zen
    K (2014) Signal interference evaluation of Eko wireless sensor network. In: 19th
    International Conference on Transformative Research in Science and Engineering,
    Business and Social Innovation (SDPS 2014) Tabassum M, Zen K (2017) Evaluation
    and improvement of data availability in WSNs cluster base routing protocol. J
    Telecommun Electron Comput Eng (JTEC) 9(2–9):111–116 Google Scholar   Tabassum
    M, Perumal S, Mohanan S, Suresh P, Cheriyan S, Hassan W (2021) IoT, IR 4.0, and
    AI technology usability and future trend demands: Multi-criteria decision-making
    for technology evaluation. Design Methodologies and Tools for 5G Network Development
    and Application. IGI Global, pp 109–144 Toor AS, Jain AK (2019) Energy aware cluster
    based Multi-hop Energy Efficient Routing Protocol using Multiple Mobile Nodes
    (MEACBM) in wireless sensor networks. AEU-Int J Electron Commun 102:41–53 Article   Google
    Scholar   Xie WX, Zhang QY, Sun ZM, Zhang F (2015) A clustering routing protocol
    for WSN based on type-2 fuzzy logic and ant colony optimization. Wireless Pers
    Commun 84(2):1165–1196 Article   Google Scholar   Xu C, Xiong Z, Zhao G, Yu S
    (2019) An energy-efficient region source routing protocol for lifetime maximization
    in WSN. IEEE Access 7:135277–135289 Article   Google Scholar   Yadav RN, Misra
    R, Saini D (2018) Energy aware cluster based routing protocol over distributed
    cognitive radio sensor network. Comput Commun 129:54–66 Article   Google Scholar   Yue
    Y, Cao L, Hang B, Luo Z (2018) A swarm intelligence algorithm for routingrecovery
    strategy in wireless sensor networks with mobile sink. IEEE Access 6:67434-67445
    Download references Funding The authors received no specific funding for this
    study. Author information Authors and Affiliations Faculty of Science and Technology,
    Universiti Sains Islam Malaysia, 71800, Nilai, Malaysia Mujahid Tabassum & Sundresan
    Perumal Robotics and Advanced Computing Faculty, Qatar Armed Forces – Academic
    Bridge Program, Qatar Foundation, Doha, Qatar Saad Bin Abdul Kashem Department
    of ECE, Vel Tech Rangarajan Dr Sagunthala R & D Institute of Science and Technology,
    600062, Tamilnadu, India Suresh Ponnan Electronics & Communication Engineering,
    Birla Institute of Technology, Jharkhand, India Chinmay Chakraborty Department
    of Electrical Engineering, College of Engineering, Qatar University, 2713, Doha,
    Qatar Muhammad E. H. Chowdhury & Amith Khandakar Corresponding author Correspondence
    to Suresh Ponnan. Ethics declarations The manuscript has not been submitted to
    more than one journal for simultaneous consideration. The manuscript has not been
    published previously. The Research not involved human participants and/or animals.
    Conflict of interest The authors declare that they have no conflicts of interest
    to report regarding the present study. Additional information Publisher’s Note
    Springer Nature remains neutral with regard to jurisdictional claims in published
    maps and institutional affiliations. Rights and permissions Reprints and permissions
    About this article Cite this article Tabassum, M., Perumal, S., Kashem, S.B.A.
    et al. Enhance data availability and network consistency using artificial neural
    network for IoT. Multimed Tools Appl 83, 3111–3131 (2024). https://doi.org/10.1007/s11042-022-13337-6
    Download citation Received 30 August 2020 Revised 13 December 2021 Accepted 02
    June 2022 Published 21 June 2022 Issue Date January 2024 DOI https://doi.org/10.1007/s11042-022-13337-6
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Artificial Neural Network Cluster base network Wireless Sensor
    Network Data aggregation Decision tree algorithm On-demand routing protocol Use
    our pre-submission checklist Avoid common mistakes on your manuscript. Associated
    Content Part of a collection: Computer Science SDG 7: Affordable and Clean Energy
    Sections Figures References Abstract Introduction Literature review Methodology
    Algorithm explanation Results and discussion Conclusion References Funding Author
    information Ethics declarations Additional information Rights and permissions
    About this article Advertisement Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Multimedia Tools and Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Enhance data availability and network consistency using artificial neural
    network for IoT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Rodrigues Tambo F.L.
  - Lima L.A.
  - Silveira Thebaldi M.
  - Corrêa F.V.
  citation_count: '0'
  description: The effect of discrete movement of center-pivot towers on water distribution
    uniformity is a phenomenon difficult to demonstrate in the field; thus, in this
    paper, the dependence of uniformity of water application on the movement of the
    towers was investigated. To accomplish this, global navigation satellite system
    (GNSS) receivers were installed on three center-pivot towers to track their location
    during system operation. The data obtained were modeled by a computer program
    developed in Visual Basic for Applications, in an Excel software spreadsheet.
    Analysis of the temporal behavior of water depths due to the movement of each
    tower was described by Fourier series analysis. The results showed that towers
    closer to the center of irrigated circle presented longer stopping times, shorter
    movement times, and lower speeds, which together resulted in greater variability
    in applied water depth. Irrigation uniformity was affected by the misalignment
    angle between center-pivot spans, with uniformity being greater with smaller misalignment
    angles. Misalignment angles below 2° are not recommended because they result in
    very short cycle times (time in motion), which can cause the alignment sensors
    in the towers closer to the pivot point to fail, and therefore prevent movement.
    Finally, the amplitude of water depths as a function of tower movement increased
    when the misalignment angle increased. With the Fourier series analysis, regarding
    the interval between dominant peaks, it is possible to verify the influence of
    the equipment stoppage time on the water application cycles of each tower, and
    consequently on the overall uniformity.
  doi: 10.1061/JIDEDH.IRENG-10155
  full_citation: '>'
  full_text: '>

    "This website uses cookies to ensure you get the best experience on our website.
    Learn more GOT IT! Access provided by University of Nebraska-Lincoln Search term(s)
    SEARCH Login / Register Skip main navigation JOURNALS BOOKS MAGAZINES AUTHOR CENTER
    USER SERVICES TOPICS SUBMIT SUBSCRIBE RECOMMEND JOURNAL HOME CURRENT ISSUE ALL
    ISSUES ABOUT HomeJournal of Irrigation and Drainage EngineeringArchiveVol. 149,
    No. 12 PREVIOUS ARTICLE Technical Papers Oct 5, 2023 Spatial and Temporal Variability
    of Water Application via a Center Pivot Authors: Fidel Luís Rodrigues Tambo https://orcid.org/0000-0001-5212-4687
    fideltambo@gmail.com, Luiz Antonio Lima https://orcid.org/0000-0002-5542-6442
    lalima@ufla.br, Michael Silveira Thebaldi https://orcid.org/0000-0002-4579-6714
    michael.thebaldi@ufla.br, and Flávia Vilela Corrêa https://orcid.org/0000-0001-5179-5577
    flavia-vilela-correa@hotmail.comAUTHOR AFFILIATIONS Publication: Journal of Irrigation
    and Drainage Engineering Volume 149, Issue 12 https://doi.org/10.1061/JIDEDH.IRENG-10155
    130 PDF Journal of Irrigation and Drainage Engineering Volume 149, Issue 12 December
    2023 Abstract Practical Applications Introduction Material and Methods Results
    and Discussion Conclusions Data Availability Statement Acknowledgments References
    Information & Authors Metrics & Citations References Media Tables Share Abstract
    The effect of discrete movement of center-pivot towers on water distribution uniformity
    is a phenomenon difficult to demonstrate in the field; thus, in this paper, the
    dependence of uniformity of water application on the movement of the towers was
    investigated. To accomplish this, global navigation satellite system (GNSS) receivers
    were installed on three center-pivot towers to track their location during system
    operation. The data obtained were modeled by a computer program developed in Visual
    Basic for Applications, in an Excel software spreadsheet. Analysis of the temporal
    behavior of water depths due to the movement of each tower was described by Fourier
    series analysis. The results showed that towers closer to the center of irrigated
    circle presented longer stopping times, shorter movement times, and lower speeds,
    which together resulted in greater variability in applied water depth. Irrigation
    uniformity was affected by the misalignment angle between center-pivot spans,
    with uniformity being greater with smaller misalignment angles. Misalignment angles
    below 2° are not recommended because they result in very short cycle times (time
    in motion), which can cause the alignment sensors in the towers closer to the
    pivot point to fail, and therefore prevent movement. Finally, the amplitude of
    water depths as a function of tower movement increased when the misalignment angle
    increased. With the Fourier series analysis, regarding the interval between dominant
    peaks, it is possible to verify the influence of the equipment stoppage time on
    the water application cycles of each tower, and consequently on the overall uniformity.
    Practical Applications The evaluation of misalignment angle effect on irrigation
    uniformity allowed us to verify why its value is currently about 5° and, in addition,
    it shows that it is not necessary to minimize it closer to zero (straight alignment)
    with the use of more complex technologies, considering that 5° angle already results
    in values of irrigation uniformity greater than 90%. On the other hand, the novel
    and successful use of time series to describe the center-pivot movement can be
    an important tool to be implemented on software to more realistic simulation of
    center-pivot irrigation. Introduction The center pivot is a moving irrigation
    system with circular motion that applies water by sprinklers. It is a moving lateral
    line supported by towers that move in a circular pattern by rotating the lateral
    line around a fixed point (Graf et al. 2020). The low maintenance and labor costs,
    and its high degree of flexibility in varying the irrigation depth by sector and
    by crop, made this system attractive in several countries, mainly in the context
    of water resources management and environmental concern (de Albuquerque et al.
    2020; Graf et al. 2020). For example, by the year 2020, the area irrigated by
    center-pivot systems reached 1.6 million ha, which corresponds to about 20% of
    the total irrigated area in Brazil (EMBRAPA 2020); in the US, by 2021, irrigated
    acreage by center-pivot sprinklers reached 7.9 million ha, which corresponds to
    about 60% of the total sprinkler-irrigated area (Agricultural Research Service
    2021). There are also center pivots that move by hydraulic oil pumping, capable
    of keeping the towers in continuous movement, which guarantees a perfect alignment
    of the lateral line. However, these systems are rare, especially in Brazil and
    even in the US. Therefore, it is more common to use center pivots powered by electric
    motors because of their simplicity and low operating cost. In these systems, each
    tower is equipped with an independent electric motor, whose activation is asynchronous.
    The last tower is the one that guides the movement of the equipment and triggers
    the movement of remaining towers in response to the misalignment angle of the
    span closer to it (Ouazaa et al. 2015). However, the discrete movement generates
    a problem regarding the maximum uniformity that can be achieved during water application
    by this type of system: as the system’s towers move at constant speed and they
    perform different perimeter lengths, the alignment is done by mechanical sensors;
    when there is a deflection, usually 5° between a span and the adjacent one, its
    movement is automatically activated or deactivated, so that the misalignment is
    corrected (Rajan et al. 2015; Li et al. 2016; Mohamed et al. 2021). Ouazaa et
    al. (2015) mentioned that the performance of a center pivot starts to be compromised
    when the misalignment angle between towers is greater than 5°, because above this
    value the towers remain at rest for a long time, which makes sprinklers closer
    to a stopped tower apply water for a long time in the same place, which therefore
    affects the irrigation uniformity of the equipment. Thus, Mohamed et al. (2021)
    state that, in part, the uniformity of water application can be achieved by aligning
    the center-pivot towers, mostly along the direction of movement of the equipment.
    The same authors also state that as the center-pivot towers move discontinuously,
    in movement cycles that occur at time intervals with different durations, the
    applied water depth varies with the application time on an area affecting water
    uniformity. Although this topic, to improve the system’s hydraulic and mechanical
    efficiency, is relevant, currently studies that seek to relate the movement of
    the center-pivot towers and the water application from the sprinklers are limited.
    Hanson and Wallender (1986) evaluated the effect of successive activations and
    interruptions of the movement of a center pivot with 10 towers, based on its irrigation
    uniformity. They observed that the low uniformity in the direction of movement
    of the equipment is partly related to this effect, but they were not able to precisely
    define its level of importance, because when performing field tests, several environmental
    factors act simultaneously on the system (wind velocity and water drift, for example),
    and also the movement of the towers (position versus time) as well as the fact
    that in a subsequent irrigation towers rarely stop at the same position as at
    previous irrigation. In this way, the use of computer simulations can be a viable
    alternative to accurately evaluate the effect of discrete movement of towers on
    system performance, without the intervention of other variables that affect the
    field performance. In addition, when analyzing the way a center pivot works, regarding
    its movement, it is expected that a time series model can be used to fit the water
    depth data and explain variations in depth as a function of tower movement and
    stoppage time. Therefore, it is proposed in this research (1) to study the dependence
    between uniformity of water application and the movement of the towers of a center
    pivot by the measurement of the mechanical movement of the towers using global
    navigation satellite system (GNSS) receptors, and its modeling and simulation;
    (2) to estimate Christiansen’s uniformity coefficient due to the variation of
    the misalignment angle between its towers; and (3) to analyze the temporal behavior
    of the distribution of water depths applied according to the movement of the towers
    using Fourier series, an innovative approach to this problem. The obtained results
    can serve as a guide for manufacturers and technicians in adjusting the maximum
    misalignment angles between towers, their ideal speeds, and selection and proper
    arrangement of sprinklers along the lateral line, aiming to obtain optimum performance
    from the irrigation equipment. Material and Methods The study was carried out
    on a Tifton 85 grass field for hay production of the Santa Helena farm, located
    in Bom Despacho city, state of Minas Gerais, Brazil, at geographic coordinates
    19°36′23.88″ S; 45°16′14.98″ W and 631.5 m of altitude. The data collection was
    carried out between November 15 and 20, 2021, from three complete cycles of irrigation.
    The evaluated center-pivot system irrigates 10.95 ha and has three towers plus
    an overhang with no end gun. Its technical characteristics are revolution time
    of 4.52 h with the percent timer set to 100%, and lateral line with length of
    185.7 m (57.1 m in the first span, 51.4 m in the second span, 51.1 m in the third
    span, and 25.4 m of overhang). At its maximum speed (100%), the expected average
    irrigation depth is 3.59 mm for an 86 m 3 h − 1 flow. In the first and second
    spans, two types of sprinklers [Superspray and I-Wobler (Senninger Irrigation,
    Clermont, Florida)] alternate along each span. At the third span and at the overhang,
    only I-Wobler-type sprinklers were installed. Each sprinkler was connected to
    a pressure-regulating valve with a working pressure head of 68.95 kPa. The combinations
    of sprinklers and nozzles used in each span of the evaluated system are listed
    in Table 1. Table 1. Sprinklers and nozzles used in each span of the evaluated
    center-pivot irrigation system Span 1 Span 2 Span 3 Overhang Sprinkler Nozzle
    Sprinkler Nozzle Sprinkler Nozzle Sprinkler Nozzle Superspray 7.0 I-Wobler 14.0
    I-Wobler 17.5 I-Wobler 17.5 I-Wobler 9.0 Superspray 9.0 I-Wobler 14.0 I-Wobler
    18.0 Superspray 4.5 I-Wobler 14.5 I-Wobler 14.5 — — Superspray 5.0 I-Wobler 15.0
    I-Wobler 15.0 — — I-Wobler 7.5 Superspray 10.0 I-Wobler 15.0 — — Superspray 6.0
    I-Wobler 15.5 I-Wobler 15.5 — — I-Wobler 8.5 I-Wobler 16.5 I-Wobler 16.0 — — I-Wobler
    10.0 Superspray 10.5 I-Wobler 16.5 — — Superspray 6.5 I-Wobler 17.0 I-Wobler 16.5
    — — I-Wobler 11.0 I-Wobler 17.5 I-Wobler 17.0 — — I-Wobler 12.0 Superspray 11.5
    — — — — Superspray 8.0 I-Wobler 18.0 — — — — I-Wobler 13.0 I-Wobler 18.5 — — —
    — I-Wobler 13.5 I-Wobler 19.0 — — — — Superspray 8.5 Superspray 12.0 — — — — Superspray
    9.0 I-Wobler 19.5 — — — — — — Superspray 12.5 — — — — To study the movement of
    towers, three high-precision differential GNSS receivers [Spectra Precision GNSS
    L1, L2 (Dayton, Ohio), and GLONASS PROMARK220—USA] were installed on top of the
    towers to determine their location along its perimeter during irrigation time.
    The GNSS receivers were programmed to determine tower positions in UTM coordinates
    every 3 s along the half-irrigated circle, that is, 180°. The arrangement of GNSS
    signal receivers in the field for tracking the positions of the towers and misalignment
    angle between spans is presented at Fig. 1. Fig. 1. Arrangement scheme of GNSS
    receivers in the field for tracking the positions of the towers and misalignment
    between spans due to the system’s movement. During the study, the center pivot
    was set up to operate at a travel speed of 66%, and the GNSS receivers were adjusted
    to have a horizontal accuracy of accuracy of 5.001 mm and a vertical accuracy
    of 10.001 mm, sufficient to characterize the movement of towers. With the data
    collected in the field by the GNSS receivers, linear models were fitted to describe
    the movement of each tower as a function of time, and to calculate the time that
    each tower would be in motion or stopped. The time that a tower remained stopped
    was determined by observing the intervals in which the GNSS receivers did not
    register a variation of the coordinates along the total path traveled by the tower.
    These data also made it possible to calculate the misalignment angle between towers,
    which was determined for each tower movement cycle using the coordinates of neighboring
    towers. The linear models that describe the movement of each center-pivot tower
    as a function of time were inserted as programming codes in a computer program
    developed in Visual Basic for Applications programming language in an Excel software
    spreadsheet. The program was designed to simulate the movement of the irrigation
    system, determining the geometric position of each tower in relation to the adjacent
    one, both in polar and rectangular coordinates; it also calculated the water depth
    applied in each geometric position along the path covered by the towers, the movement
    and stoppage times of each tower, as well as their travel velocities and water
    application uniformity coefficients. The computer simulations used in this study
    were aimed to overcome several factors that act in the field interfering with
    results, such as the possibility of establishing the absence of wind and desired
    working pressure, definition of time interval for water depth applied by the sprinklers,
    and variation in maximum declination angle between spans. A flowchart that presents
    the operating steps of the developed program to simulate the movement of the center
    pivot can be seen in Fig. 2. Fig. 2. Operating steps of the software developed
    to simulate the movement of the center-pivot irrigation system. The developed
    program is available at no cost at Department of Water Resources of the Universidade
    Federal de Lavras (n.d.). The developed programming codes can be accessed at the
    Excel Developer Tab. To develop the program, text boxes were initially generated
    to allow the entry of technical data of the studied center pivot, in addition
    to the time interval to be considered for tower movement; command buttons were
    also inserted to perform calculations by a single mouse click, and the data output
    is shown as an Excel spreadsheet. Eq. (1) was inserted to calculate the speed
    of each tower in relation to the pivot point V r s = 2 π × R s T g (1) where V
    r s = displacement velocity of the tower ( m s − 1 ); 2 π × R s = perimeter traveled
    by the tower, where R s is the radial length from the pivot point to the tower
    (m); and T g = revolution time (s). The positions of towers, in radians, at each
    time interval until completing the center pivot revolution time were determined
    by the mathematical models fitted with the positions collected with the GNSS receivers.
    The program contained a text box for the entry of the maximum misalignment angle
    value between towers. With this value, the code calculates the cycle time or the
    time that each tower remains on movement before activating the adjacent tower
    using Eq. (2) t = π × M max 180 × A V (2) where t = tower movement time (s); M
    max = misalignment between towers (degrees); and A V = tower angular velocity
    ( rad · s − 1 ). Additionally, the polar coordinates of towers were converted
    into Cartesian coordinates by Eqs. (3) and (4) X = R s × sin T P (3) Y = R s ×
    cos T P (4) where X and Y = tower positions in Cartesian coordinates (m); and
    T P = tower position in polar coordinates (rad). Comparison of the movement of
    the center pivot’s towers evaluated in the field with the movement of the towers
    simulated by the computer program was carried out by calculating the mean absolute
    error (MAE) [Eq. (5)], mean bias error (MBE) [Eq. (6)], and root-mean-square error
    (RMSE) [Eq. (7)] (Willmott and Matsuura 2005). The MAE was calculated to compare
    how close the values of tower positions obtained with the spreadsheet are to those
    measured with GNSS; the MBE was calculated to determine the bias of the values
    calculated by the electronic spreadsheet; and RMSE was calculated to provide an
    indication of accuracy between observed field and simulated positions MAE = 1
    n ∑ i = 1 n | p i ^ − O i | (5) MBE = 1 n ∑ i = 1 n ( p i ^ − O i ) (6) RMSE =
    1 n ∑ i = 1 n ( O i − p i ^ ) 2 (7) where p i ^ = observed position value by the
    GNSS receiver at position i ; O i = estimated position value, calculated by the
    spreadsheet at position i ; and n = number of observations. When verifying the
    accuracy of the simulated positions in relation to those observed, the program
    was used to simulate the movement of the center pivot with different misalignment
    angles to make a correlation between angles and irrigation uniformity at the direction
    of equipment movement. Therefore, Eq. (8) was inserted into the programming code
    to simulate water depths applied by each span at each position during the towers’
    traveling course, considering a time interval of 3 s, which was the same interval
    adopted for the collection of observed data D a = N e × q b × t T P × ( R s −
    R s − 1 ) 2 (8) where D a = applied gross water depth (mm); q b = average sprinkler
    flow ( L h − 1 ); N e = number of sprinklers on each span; t = tower movement
    time (s); R s = tower traveling radius (m); and R s − 1 = previous tower traveling
    radius (m). Because the sprinkler flow is a function of nozzle size and pressure,
    all the installed nozzles in each span were checked, being the flow for the working
    pressure at each sprinkler (established by pressure regulating valves) was determined
    using the manufacturer’s catalog. The three-tower method proposed by several manufacturers,
    as Valley Irrigation (2019), to align spans, when comparing the relative position
    of three of the center-pivot system towers, mentions that the pivot alignment
    procedure begins at a given tower, where from this an imaginary line is drawn
    from the center of the gearmotor of Tower 3 to the outer part of the wheel at
    Tower 1, as illustrated in Fig. 3. With the imaginary lines drawn, the central
    tower (Tower 2) must be positioned in such a way that its gearmotor stops its
    movement in Position A and starts in Position B. Fig. 3. Three-tower method for
    aligning the lateral line of a center pivot. Considering the three-tower method,
    the maximum misalignment angle can be calculated from Eq. (9) θ max = tan − 1
    ( h 2 × L ) (9) where θ max = maximum misalignment (declination) angle (degrees);
    L = span length (m); and h = width measured from the center of the gearmotor of
    the middle tower when it is positioned at Point A to the center of the gearmotor
    when it is positioned at Point B (m). Depending on the length of the spans typically
    used by center-pivot system manufacturers (Lindsay Corporation 2022; Valley Irrigation
    2022) and considering a 4-m width (distance from one wheel to the other one at
    same tower), the maximum misalignment angle can be easily obtained by the three-point
    method and may vary as shown in Table 2. Table 2. Maximum misalignment (declination)
    angles ( θ max ) allowed depending on the span lengths ( L ) typically adopted
    by center-pivot manufacturers L (m) θ max (degrees) 34.30 6.12 34.60 6.07 41.10
    5.12 41.50 5.07 47.80 4.40 48.16 4.37 48.80 4.31 51.80 4.06 54.60 3.86 54.86 3.84
    56.92 3.70 61.30 3.44 To determine the effect of misalignment angle on uniformity,
    simulations of movement of the center pivot were performed for different randomly
    adopted misalignment angles (0.45°, 1.20°, 2.23°, 3.45°, 4.02°, and 5.23°) without
    exceeding the largest angle in Table 2, keeping the analysis time interval of
    3 s. With this, different movement times and applied water depths could be evaluated.
    With the obtained water depths, the Christiansen uniformity coefficient (CUC)
    modified by Heermann and Hein (1968) was calculated in each span in the direction
    of movement of the irrigation system for all misalignment angles adopted in the
    simulation using Eq. (10). Subsequently, the CUC values were related to maximum
    misalignment angles adopted to observe their effect on irrigation uniformity.
    The CUC classification as follows: CUC > 90 % : excellent; 80 % < CUC < 90 % :
    good; 70 % < CUC < 80 % : fair; 60 % < CUC < 70 % : bad; and CUC < 60 % : unacceptable
    (Bernardo et al. 2019; Borssoi et al. 2012; Keller and Bliesner 1990) CUC = 100
    × [ 1 − ∑ i = 1 n S i × | D i − D ¯ p | ∑ i = 1 n D i × S i ] (10) where n = number
    of simulated water depths; D i = simulated water depth at point i (mm); S i =
    distance from a water depth application point to the pivot point; and D ¯ p =
    weighted average water depth applied in an irrigated area, which is calculated
    by Eq. (11) D ¯ p = ∑ i = 1 n D i × S i ∑ i = 1 n S i (11) Finally, to evaluate
    how stopping and moving times of each tower can affect the applied water depths,
    the depths in each geometric position were analyzed as a function of time continuously
    during towers’ traveling course in time intervals of 3 s. The analysis of the
    water depths applied by the center pivot per unit of time was performed using
    a Fourier series by fitting a periodic equation of the water depths with Eq. (12).
    The model was fit using the Excel Solver package, with the aim to minimize errors
    while changing the fitting coefficients A 0 , A n , and B n by the generalized
    reduced gradient (GRG) nonlinear method f ( t ) = A 0 2 + ∑ n = 1 ∞ [ A n × cos
    n × π × t Z + B n × sin n × π × t Z ] (12) where A 0 , A n , and B n = Fourier
    coefficients related to the periodic properties of the function f ( t ) , as mentioned
    by Humes et al. (1984) and obtained by Eqs. (13) and (15) A 0 = 1 2 × Z ∑ j =
    1 2 × L D j (13) A n = 1 Z ∑ j = 1 2 × L ( D j × cos n × π × t j Z ) (14) B n
    = 1 Z ∑ j = 1 2 × L ( D j × sin ⁡ n × π × t j Z ) (15) where D j = water depth
    (mm) applied in time t j , which in this case, is the value of the water depth
    obtained by simulation every 3 s during tower movement; t = time (s); n = sequence
    number; and Z = half the width of the observed data range. Results and Discussion
    The graphs describing the movement of the center-pivot towers, as well as the
    fittings of the models to the data that describe the movement of each tower obtained
    by the coordinates recorded with the GNSS receivers, are shown in Fig. 4. These
    mathematical models presented very strong fitting coefficients, with R 2 equal
    to 0.99, 0.97, and 0.99 for Towers 1 [Fig. 4(a)], 2 [Fig. 4(b)], and 3 [Fig. 4(c)],
    respectively. This means these models accurately determined the positions of the
    towers as a function of time during irrigation. Fig. 4. Graphs and models that
    describe the movement of Towers (a) 1; (b) 2; and (c) 3 of the evaluated center-pivot
    system. When observing Fig. 4, it was noted that Tower 3 [Fig. 4(c)] moved faster
    than Towers 1 [Fig. 4(a)] and 2 [Fig. 4(b)] with an average linear velocity of
    0.040 m s − 1 , which is higher than the 0.014 and 0.027 m s − 1 for Towers 2
    and 3, respectively. This is expected because Tower 3 is farther from the center
    of the equipment and therefore must travel a greater distance in a time interval
    similar to Towers 1 and 2. Because the features of the tower motors were the same,
    this difference in velocities was due to different stoppage times because the
    determined velocity was the average, considering the movement and stopping processes.
    Due to this feature, the towers closer to the center of the equipment remain more
    idle, which directly influences the system’s water application uniformity as a
    whole because of the higher irrigation depths applied. The stoppage times are
    represented by the time intervals in which the observed data are invariant. Tower
    1 [Fig. 4(a)] had a longer stoppage time of 70 s; thus, the movement cycles of
    this tower, between activations and interruption, occurred less frequently, causing
    its movement to be slower. For Tower 3 [Fig. 4(c)], the stoppage time was shorter,
    with 42 s duration, which is the reason this tower movement cycles are more frequent,
    making it faster. The declination angle between Towers 1 and 2 was 3.5°; and between
    Towers 2 and 3 it was 4.9°. The declination angles between towers were different
    because there was a difference in the stopping times. In addition, the fact that
    the angle between Towers 2 and 3 was greater lead to a greater stoppage time for
    Tower 1 because it remains at rest longer, until Tower 3 travels the 4.9° path
    and Tower 2 corrects this misalignment. Ouazaa et al. (2015) and Mohamed et al.
    (2021) mention that the stoppage time is what leads the sprinkler to apply more
    water at the same place during a certain time interval, which affects the equipment
    performance. Therefore, it can be said that the nozzles installed in Tower 1 can
    strongly affect the uniformity at the direction of the central-pivot movement,
    and less along the lateral line, as verified by Tambo et al. (2022), and that
    the effect of the towers’ stopping time on resulting water application uniformity
    increases as it approaches the system’s pivot point. Another fact to note is that
    a long stoppage time is not recommended in soils with surface sealing problems
    because the impact of irrigation water droplets in the same region for a long
    period can mechanically disperse soil particles at the surface, leading to the
    formation of a fine particulate that can cause soil surface sealing, reduce infiltration,
    and generate runoff (Al-Baaj and Lewis 2019; Mohamed et al. 2021). When analyzing
    data referring to the velocity of towers of center-pivot irrigation systems, Rajan
    et al. (2015) and Al-Gaadi et al. (2019) cite that a higher velocity, comparing
    an equipment’s towers’ characteristics, is also one of the factors that affects
    center-pivot irrigation uniformity. Therefore, it can be said that the sprinklers
    installed at the third span can affect the overall performance of the equipment
    due to its displacement velocity. The movement-related simulation errors, MAE,
    MBE, and RMSE, obtained for Tower 1 were respectively 0.013, − 0.013 , and 0.00025
    rad; for Tower 2 they were 0.018, − 0.015 , and 0.00055 rad; and for Tower 3 they
    were 0.042, − 0.039 , and 0.003 rad. Thus, small values of RMSE and MAE were observed
    for all towers, which determines that the program developed to simulate the movement
    of the center-pivot towers presented results that were close to the values observed
    in the field. It was observed that there was a tendency for the RMSE value to
    increase from Tower 1 to towers further from the center of the irrigation system;
    greater or smaller errors in movement simulation, by the first-order models, were
    related to stoppage time, that is, the longer the tower was stopped, the greater
    the error. Although low errors were observed, negative MBE values lead to the
    verification of an underestimation of tower positions. Table 3 presents the results
    of irrigation uniformity coefficients obtained by simulation due to different
    misalignment angles between towers. From these results can be observed that different
    maximum misalignment angles adopted in the simulation generated different duration
    periods of tower stoppage and movement cycles. In addition, the CUC calculated
    for all misalignment angles could be classified as excellent (Bernardo et al.
    2019; Borssoi et al. 2012; Keller and Bliesner 1990), reminding that the simulation
    was performed only as the effect of misalignment angles between spans, establishing
    conditions of null wind speed and constant pressure head of 68.95 kPa. It is possible
    to conclude that the smaller the declination angle between spans, the greater
    the irrigation uniformity. On the other hand, the maximum declination of 5° to
    6° existing in center pivots seem to guarantee a uniformity value (CUC) greater
    than 90% (Bernardo et al. 2019; Borssoi et al. 2012; Keller and Bliesner 1990).
    Table 3. Simulation of the uniformity coefficient of water application by center-pivot
    system from the different misalignment angles simulation Maximum misalignment
    angle (degrees) Cycles movement duration (s) Stoppage time (s) Average CUC (%)
    0.45 32 40 99.03 1.20 50 63 98.33 2.32 76 95 97.91 3.45 99 124 96.48 4.02 120
    150 95.59 5.23 150 188 92.50 For the smallest adopted maximum misalignment angle
    of 0.45°, the duration times of movement and stoppage cycles of the tower were
    32 and 40 s, respectively, which resulted in the highest value of CUC, 99.03%.
    For the highest adopted maximum declination angle of 5.23°, the duration times
    of the movement and stoppage cycle of the tower were 150 and 188 s, respectively,
    the highest observed. As a result, the lowest CUC value of 92.50% was obtained.
    With these results, it can be seen that the more aligned the lateral line is during
    equipment operation, the higher the irrigation uniformity. In a study developed
    by Mohamed et al. (2021), for simulations of a high-velocity center-pivot operation
    at different time intervals and for a final tower displacement velocity of 0.025
    m s − 1 for a movement cycle of 60 s, a CUC value of 95% was obtained; and for
    a movement time of 30 s the CUC was 98%, while for 120 s the CUC was 80%. Ouazaa
    et al. (2015), when studying the effect of tower stoppage time on the performance
    of a four-tower center pivot, found that the variability in uniformity increased
    with increasing misalignment, and concluded that a misalignment above 5° has a
    negative impact on the irrigation uniformity in the direction of the sprinkler
    equipment’s movement in an evaluation that considered the wind action. It was
    observed that misalignment above this angle in the present study also led to a
    lower CUC, but this continued to be classified as excellent. Omary and Sumner
    (2001) evaluated the performance of a center-pivot irrigation system by computer
    simulations, changing the cycle time of the towers and movement time percentages.
    Using simulation, they observed that the average measured uniformity coefficient
    was 98.4% of the simulated uniformity coefficient and the uniformity coefficient
    of water application was improved by 14.2%, decreasing the cycle time by reducing
    the declination angle between towers (60 s to 30 s cycle time). Despite the fact
    that smaller misalignment angles produced higher CUCs, which leads to water savings,
    Mohamed et al. (2021) cite that the different center-pivot manufacturers use a
    cycle time of the final tower set to 60 s. From Table 3, it is noted that when
    the misalignment angles are reduced below 2°, the variation in CUC is not significant
    and the tower movement occurs more frequently due to the reduction of cycle times,
    becoming less than 60 s. Thus, misalignment angles smaller than 2° require very
    precise tower drive mechanisms, which are difficult to find in the field; thus,
    possible failures can occur, regarding mostly alignment sensors, to detect such
    small angles at the risk of towers remaining stopped. In this sense, a study developed
    by Ouazaa et al. (2015) with a center pivot with four towers shows that it was
    only possible to verify variability in CUC for misalignment angles between spans
    above 2°. Thus, the angles of 0.45° and 1.20° used in the present study for water
    application evaluation can be discarded. Fig. 5 shows the Fourier time series
    referring to the water depths applied due to the simulated movement time for time
    intervals of 3 s and misalignment angles equivalent to 2.32° [Fig. 5(a–c)], 3.45°
    [Fig. 5(d–f)], 4.02° [Fig. 5(g–i)], and 5.23° [Fig. 5(j–l)] along the course covered
    by each tower. The A 0 coefficient was lower in Tower 3 [Figs. 5(c, f, i, and
    l)] and higher in Tower 1 [Figs. 5(a, d, g, and j)], comparing the same misalignment
    angles, because this coefficient represents the applied water depth at the moment
    of center-pivot activation and the beginning of the tower movement. Because Tower
    3 is the first to have the movement started after pressurizing the lateral line,
    the water depth applied as a function of its movement tends to be smaller at the
    beginning; Tower 1, on the other hand, takes longer to move after pressurizing
    the lateral line, so there is a greater application of water at the beginning
    of the system’s operation, which increases its A 0 coefficient [Figs. 5(a, d,
    g, and j)]. Fig. 5. Water depths applied during the movement of Towers 1, 2, and
    3 for misalignment angles of (a–c) 2.32°; (d–f) 3.45°; (g–i) 4.02°; and (j–l)
    5.23° fitted to Fourier time series. The coefficients A n and B n define the water
    depth amplitudes that can be reached during the movement, which is why the mathematical
    models generated for Tower 3 [Figs. 5(c, f, i, and l)] presented lower values
    for both coefficients, mostly due to the shorter stoppage time, which means an
    adjustment of the percent timer to higher velocity can significantly affect the
    coefficients A 0 , A n , and B n of the Fourier model. The average values of R
    2 , per tower, obtained for the fitted Fourier series considering the four simulated
    misalignment angles, were 91.25%, 78.05%, and 81.72% for Towers 1, 2, and 3, respectively,
    showing that these models are suitable to model the temporal variability of the
    water depths applied by the center-pivot irrigation system. The water depths applied
    by the sprinklers due to towers’ movement time for different maximum misalignment
    angles obtained by the Fourier series fitting are presented in Table 4. Table
    4. Water depths applied by sprinklers due to towers’ movement time for different
    maximum misalignment angles Misalignment angle (degrees) Stopped In movement Tower
    1 Tower 2 Tower 3 Tower 1 Tower 2 Tower 3 Applied water depth (mm) 2.32 1.10 0.97
    1.20 1.46 1.23 1.45 3.45 1.50 1.36 1.36 2.10 1.70 1.70 4.02 1.75 1.20 0.80 2.23
    1.47 1.10 5.23 1.85 1.60 0.75 2.64 2.00 1.15 There is a decrease trend of water
    depths applied by the sprinklers, both in motion and at rest, for misalignment
    angles of 4.02° and 5.23°, as they moves away from the center toward the overhang.
    In addition, there is also an increase in water depths due to the movement of
    Towers 1 and 2 as the maximum misalignment angle increases. Both the reduction
    and the increase of the applied water are related to the stoppage time of the
    towers (Hanson and Wallender 1986; Mohamed et al. 2018). The longer the tower
    remains stopped in the same region, the greater the water applied at that point,
    which can negatively impact the system’s performance. For all adopted angles,
    the series of generated water depths due to the movement time of Tower 1 presented
    the highest applied water depth amplitudes because the tower must remain stopped
    for a longer time until the adjacent towers complete their movement cycle. Also,
    this tower movement cycle is completed in a short interval, with lower average
    velocity. Tower 3 presented the lowest amplitudes because it remains stationary
    for less time, takes longer to complete the movement cycle, and has a higher average
    velocity. Studies developed by Heermann and Stahl (1986) and Kincaid (1996) found
    that the cycles of movement, as well as the difference between the velocity of
    adjacent towers, affected the uniform application of water depths in the displacement
    direction of a center pivot. Mohamed et al. (2021), while studying the movement
    of a center-pivot irrigation system, which had towers with different movement
    cycle times, noticed that the water application was greater for cycles of 30 and
    60 s and that smaller water depths were obtained for cycles of 120 s. They concluded
    that this is due to longer stoppage times for 30- and 60-s cycles, equivalent
    to 180 and 150 s, respectively; while for the tower with a cycle time of 120 s,
    the stoppage times were 90 s, shorter when compared to the others. In short, the
    smaller the cycle time, the longer the stopping time, and in turn the greater
    the amplitude of applied water depths. In the evaluated center pivot, it was also
    observed that the arrangement of the nozzle diameters along the lateral line did
    not follow an ascending order (Table 1), as recommended by Campêlo et al. (2014),
    Rajan et al. (2015), Li et al. (2016), and Nascimento et al. (2017). Although
    few variations at the nozzles’ ascending order are expected due to variations
    at the distance between sprinklers, especially for nearby towers, to some extent
    this is also a factor that contributed to the difference between amplitudes observed
    in the generated time series (Fig. 5) for different towers with the same misalignment
    angle. For the same misalignment angle in Fig. 5, the difference between amplitudes
    observed in the time intervals when the towers were in motion was smaller when
    compared with the difference between the amplitudes when the towers stopped: usually,
    during the system design, when the nozzles’ diameter combination is defined for
    the lateral line, the displacement velocity of the equipment is considered, disregarding
    the stoppage time. Regarding the periods between dominant peaks, for the time
    series generated by the movement of the center-pivot towers, the results are presented
    in Table 5. Table 5. Periods between dominant peaks of the water depths time series
    as a function of the movement of the center-pivot towers Misalignment angle (degrees)
    Time (s) Tower 1 Tower 2 Tower 3 2.32 12.0 11.2 12.0 3.45 12.4 11.2 13.1 4.02
    12.4 12.0 13.5 5.23 12.3 13.2 14.2 Thus, it could be noticed that, for Towers
    2 and 3, there was a tendency for the periods of dominant peaks to occur as the
    misalignment angle increased. Again, the increase in the misalignment angle causes
    the towers to travel increasingly larger semicircles before stopping their movement,
    that is, the movement cycles of these towers become longer because they are farther
    from the center. For Tower 1, the angle increase had no effect on the variation
    of the intervals between dominant peaks because there was not a sufficient increase
    in the movement cycles to cause a significant change. Omary and Sumner (2001)
    developed a model to calculate the applied water as a function of the center pivot’s
    towers’ movement and they also found that for towers closer to the center of the
    equipment there was no significant effect of the angle variation on applied water
    for a short movement cycle. In addition, the differences between intervals of
    occurrence of the maximum peaks observed in the present study reinforce the citation
    that the differences between cycles of movement of the center-pivot towers affect
    the distribution of applied water depths in the system’s displacement direction
    (Heermann and Stahl 1986; Ouazaa et al. 2015). Conclusions The increase in misalignment
    angle between spans decreases irrigation uniformity, with the CUC being significantly
    greater when adopting an angle of 0.45° and smaller for an angle of 5.23°. However,
    maximum misalignment angles below 2° generate shorter cycle times, which might
    lead to failure of alignment devices at towers closer to the pivot center. The
    applied water depths as a function of tower movement time vary slightly with the
    change of misalignment angles between towers, and the variability was observed
    to be greater as the angles increase. For misalignment angles of 3.45°, 4.02°,
    and 5.23°, the applied water depths due to the movement time of towers closer
    to the pivot center showed the highest amplitudes because they remain at rest
    for a longer time, until the adjacent towers complete their cycle. The average
    values of R 2 obtained for Towers 1, 2, and 3 were 91.25%, 78.05%, and 81.72%,
    respectively; thus, the use of Fourier series to evaluate the water application
    cycles of the center-pivot system proved to be an interesting tool for evaluating
    its performance because it is possible to verify the influence of the stoppage
    time on the water application of each tower and, consequently, on the overall
    uniformity. The 5.23° misalignment angle can lead to CUC values greater than 90%
    and, for greater uniformity of water application, the misalignment angle must
    be set to smaller values. The movement tracking of the center pivot by GNSS receivers,
    its modeling and simulation, and the Fourier series fittings allowed a detailed
    understanding regarding the effect of discrete movement of center-pivot towers
    on its water application uniformity and, for future works, the evaluation of other
    models of time series for evaluation of water distribution by center-pivot systems
    is suggested. Data Availability Statement All data, models, or code that support
    the findings of this study are available from the corresponding author upon reasonable
    request. Acknowledgments The authors would like to thank the Coordenação de Aperfeiçoamento
    de Pessoal de Nível Superior (CAPES) for funding the Water Resources Graduate
    Program (Grant Number 001) and this research by scholarship grant to the first
    author, and also acknowledge the Feno Santa Helena farm for allowing the evaluation
    of their irrigation equipment and the research to be carried out in their production
    area. References Agricultural Research Service. 2021. “Center pivot irrigation.”
    Northern Plains Agricultural Research Laboratory. Accessed May 6, 2022. https://www.ars.usda.gov/ARSUserFiles/21563/center%20pivot%20design%202.pdf.
    Go to Citation Google Scholar Al-Baaj, A. A. A., and A. Lewis. 2019. “Variable
    pulsed irrigation algorithm (VPIA) to reduce runoff losses under a low-pressure
    lateral move irrigation machine.” Horticulturae 5 (1): 10. https://doi.org/10.3390/horticulturae5010010.
    Go to Citation Google Scholar Al-Gaadi, K. A., A. A. Hassaballa, E. Tola, A. G.
    Kayad, R. Madugundu, F. Assiri, M. Edrris, A. Alameen, and H. Edrees. 2019. “Impacts
    of center pivot irrigation system uniformity on growth of potato crop and residual
    soil nitrogen.” Int. J. Agric. Biol. Eng. 12 (1): 126–131. https://doi.org/10.25165/j.ijabe.20191201.3684.
    Go to Citation Google Scholar Bernardo, S., E. C. Mantovani, D. D. Da Silva, and
    A. A. Soares. 2019. Manual de irrigação. 9th ed. Viçosa, Brazil: Universidad Federal
    de Viçosa. Google Scholar SHOW ALL REFERENCES Recommended Journal of Irrigation
    and Drainage EngineeringArticleJuly 2021 Modeling of Water Distribution under
    Center Pivot Irrigation Technique Journal of Irrigation and Drainage EngineeringArticleOctober
    1989 Center‐Pivot End Gun Irrigation Cost Analysis Journal of Irrigation and Drainage
    EngineeringArticleNovember 2022 Optimal Sprinkler Spacing for a Mini Center Pivot
    System Journal of Irrigation and Drainage EngineeringArticleSeptember 1995 Characterization
    of Rainfall under Center Pivot: Influence of Measuring Procedure ChapterApril
    2012 Field Performance Analysis of Center Pivot Sprinkler Packages View full text|Download
    PDF American Society of Civil Engineers 1801 Alexander Bell Drive Reston, VA 20191-4400
    703-295-6300 | 800-548-2723 TERMS & CONDITIONS HELP PRIVACY SITEMAP TERMS OF USE
    SUBSCRIBE CONTACT US ACCESSIBILITY, DIVERSITY, EQUITY & INCLUSION Follow us @ASCEPublishing
    LinkedIn YouTube © 1996–2024 American Society of Civil Engineers"'
  inline_citation: '>'
  journal: Journal of Irrigation and Drainage Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Spatial and Temporal Variability of Water Application via a Center Pivot
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - kumari R.
  - Sah D.K.
  - Cengiz K.
  - Ivković N.
  - Gehlot A.
  - Salah B.
  citation_count: '0'
  description: The rainfall weather station employs a tipping bucket rain gauge, which
    serves as a specialized instrument for the meticulous assessment and documentation
    of various rainwater parameters. The implementation of a tipping bucket rain gauge
    for rainfall monitoring bears significant implications for both societal productivity
    as well as improvement of human life. A noteworthy example can be the constructive
    influence of rainwater over the sustainable agricultural irrigation practices,
    wherein the precise monitoring of rainfall through a tipping bucket rain gauge
    enables the formulation of tedious irrigation strategies. The rainfall monitoring
    if often handle using rain gauge which majorly faces two challenges named as mechanical
    devices failure and high installation and maintenance cost. Considering the challenges,
    we propose the fully automated rain gauge (RG) based on the principle of sound
    and its properties for rainfall monitoring. The working prototype is part of our
    work whose primary task is to collect the rainfall acoustic value and store it
    in the cloud. Our mechanism is to use the acoustic property of rain data to categorize
    rainfall intensity. We perform blind signal separation on the received signal
    (acoustic signal recorded with the help of microphone sensor) and feed the separated
    signal to a recurrent convolution neural network (RCNN). The source separation
    of the collected acoustic signals is primarily being done using independent component
    analysis and principal components analysis. The proposed solution can be able
    to make the classification of rain intensity with more than 80% accuracy. In addition
    to this, the developed method provides the sustainable solution to the challenges
    with the low-cost and application-specific acceptable threshold criteria and supplement
    rain measurement techniques.
  doi: 10.1016/j.seta.2023.103398
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords Introduction Research methodology Proposed work Results
    Conclusion Funding Declaration of competing interest Acknowledgments Literature
    review System model Computation of Fast Fourier coefficients Data availability
    References Show full outline Figures (6) Sustainable Energy Technologies and Assessments
    Volume 60, December 2023, 103398 Acoustic signal-based indigenous real-time rainfall
    monitoring system for sustainable environment Author links open overlay panel
    Rani kumari a, Dinesh Kumar Sah b, Korhan Cengiz c d, Nikola Ivković e, Anita
    Gehlot f g, Bashir Salah h Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.seta.2023.103398
    Get rights and content Abstract The rainfall weather station employs a tipping
    bucket rain gauge, which serves as a specialized instrument for the meticulous
    assessment and documentation of various rainwater parameters. The implementation
    of a tipping bucket rain gauge for rainfall monitoring bears significant implications
    for both societal productivity as well as improvement of human life. A noteworthy
    example can be the constructive influence of rainwater over the sustainable agricultural
    irrigation practices, wherein the precise monitoring of rainfall through a tipping
    bucket rain gauge enables the formulation of tedious irrigation strategies. The
    rainfall monitoring if often handle using rain gauge which majorly faces two challenges
    named as mechanical devices failure and high installation and maintenance cost.
    Considering the challenges, we propose the fully automated rain gauge (RG) based
    on the principle of sound and its properties for rainfall monitoring. The working
    prototype is part of our work whose primary task is to collect the rainfall acoustic
    value and store it in the cloud. Our mechanism is to use the acoustic property
    of rain data to categorize rainfall intensity. We perform blind signal separation
    on the received signal (acoustic signal recorded with the help of microphone sensor)
    and feed the separated signal to a recurrent convolution neural network (RCNN).
    The source separation of the collected acoustic signals is primarily being done
    using independent component analysis and principal components analysis. The proposed
    solution can be able to make the classification of rain intensity with more than
    80% accuracy. In addition to this, the developed method provides the sustainable
    solution to the challenges with the low-cost and application-specific acceptable
    threshold criteria and supplement rain measurement techniques. Previous article
    in issue Next article in issue Keywords Rain gaugeBlind source separationAmbient
    environmentAcoustic sensorRecurrent convolution neural network Introduction Rainwater
    harvesting is becoming a fundamental entity in the sustainable development of
    humankind. The rainfall monitoring and measurement are critical for agriculture
    irrigation [1], rainwater harvesting [2], water distribution, mining, and infrastructure
    maintenance (airports, roads, and port management) [3]. In addition, it can be
    used for long-term environmental/meteorological monitoring, disaster prevention
    (e.g., landslide, flood, high tide, storm surge), and so on [4]. The monitoring
    task requires large-scale automation and expects the steady functioning of the
    rain gauge. One potential application is in monitoring and managing natural ecosystems.
    The system can monitor the acoustic signatures of various species of animals and
    birds, enabling conservationists to track their populations, identify any changes
    in their behavior, and assess the ecosystem’s health. This information can be
    used to guide conservation efforts, including the protection of endangered species
    and the restoration of damaged habitats. Another application is monitoring human
    activities that impact the environment, such as logging, mining, and construction.
    The system can detect and identify the sounds of heavy machinery, enabling environmental
    regulators to monitor and enforce compliance with regulations and minimize the
    impact of these activities on the environment [3]. In disaster prevention, the
    system can detect and classify sounds associated with natural disasters, such
    as earthquakes, volcanic eruptions, and tsunamis [5]. It can provide early warning
    to communities, enabling them to take appropriate measures to protect themselves
    and their property. Furthermore, the system can monitor industrial facilities,
    such as oil refineries and chemical plants, to detect and classify abnormal acoustic
    signatures that may indicate a potential safety hazard. It can help prevent accidents
    and minimize environmental and surrounding community impact. The potential to
    provide valuable insights into the acoustic signatures of various environments
    and activities [6], enabling sustainable environment management and disaster prevention.
    The world is dealing with global warming, which affects the weather on a larger
    scale. As a result, the unevenness and unpredictability in the rainfall are increasing.
    The global government has adopted the policy of establishing automatic weather
    stations (AWS) to continuously monitor rain on the county level [7]. The rainfall
    intensity can vary significantly even over the sub-kilometer region. The early
    alert system can inform and prevent water-logging in the potential area where
    it tends to be a potential landslide. Getting the precipitation data over the
    sub-kilometer resolution will require deploying rainfall sensors (tipping buckets
    or remote weather stations) on a much larger scale. However, considering the nature
    of the operational and cost, it becomes implausible. Many countries where rainwater
    harvesting becomes necessary for the future and handling other rain-induced disasters
    (flood, land-sliding) require a more cost-effective solution. Several methods
    exist to measure precipitation, such as Rain and Snow gauge, Disdrometre, satellite,
    and Radar. The current practice for rainwater monitoring consists of the tipping
    bucket to measure the rain in any specific locality. It is mainly hindered due
    to the role of the bucket in its architecture. sensor, data logger, and mechanical
    parts comprise a “tipping bucket sensor” for building a rain gauge (RG) [8]. The
    sensor can facilitate digital configuration to define data monitoring intervals
    and logging. The additional communication module can be attached to the RG to
    receive data over the network; enables the long-term over-network-based monitoring
    using RG and communication modules. The RG tipping bucket measures precipitation
    entering the funnel. Once it reaches a certain level, the bucket is tipped and
    counts the pulse signal—the practice, as mentioned above, acts as a working principle
    for RG worldwide. The liquid precipitation in the specified interval has measured
    by a rain gauge, while the snow precipitation measurement requires a snow gauge
    [5]. The meteorologists and hydrologists used (M&H) these two instruments to determine
    the depth of precipitation (usually in mm). The coverage and accuracy provided
    by this sensor depend upon the manufacturing model. On the other hand, some reports
    can require particulars about rain apart from the precipitation amount; therefore,
    some unique purpose rain gauge, such as Jardi’s pluviometer, is also used by M&H.
    The Jardi’s pluviometer can measure the average intensity in a specific time interval.
    Rainfall monitoring is traditionally done using rain gauges only provides information
    on the total amount of rainfall and does not provide any information on the rainfall
    distribution or intensity [9]. In addition, rain gauges are often sparsely distributed,
    which makes it difficult to obtain accurate information on rainfall patterns.
    Another commonly used method for rainfall monitoring is radar-based systems. These
    systems use radar signals to estimate the amount and distribution of rainfall
    in a particular area. While radar-based systems effectively provide information
    on rainfall patterns, they can be expensive to install and maintain [10]. In addition,
    they are often affected by interference from other sources, which can lead to
    measurement inaccuracies. The working principle of the “Rain Gauge” usually moves
    around the bucket-kind structure that collects the water for specific intervals.
    The water gets collected in a funnel-type structure in the tipping bucket and
    moves towards a small seesaw-like container. Once the threshold of storage crosses,
    the liver tips release the water and send the electric signal to the data logger.
    The tipping bucket is the most popular method for rainwater due to its less maintenance
    and easy use phenomena. Moreover, it needs to be more accurate and has significant
    disadvantages. Suppose the rain stops just before the lever is tipped; the single
    drop of water can send an erroneous signal in the next rainy season. In addition,
    it also does not measure snowfall and heavy rainfall accurately as given in [11].
    The heavy wind is also not helping this mechanism as most droplets can fall beside
    the bucket; therefore, the measurement will be erroneous. In Jardi’s pluviometer,
    the continuous rotating drum has been used to collect and measure the precipitation
    [12]. The advantage of the tipping bucket rain gauge is that the character of
    the rain (light, medium, or heavy) may be easily obtained. On the other hand,
    the optical rain gauge comprises a collection of funnels. It has an enclosed space,
    which collects the water, and once the volume is equal to a single drop, it falls
    the droplets which measure with the help of a laser beam. The sensor photo-detectors
    read the flashes and send the data to the logger. It has an advantage over the
    classical rain gauge, but the solution could be more cost-effective. The Laser
    Precipitation Monitor serves as a value transmitter and is well-suited for measuring
    and detecting different types of precipitation, such as rain, drizzle, hail, snow,
    and mixed precipitation. The optical disdrometer uses a light beam to estimate
    the size and intensity of the droplets, as shown in Fig. 1. The diagram of an
    optical disdrometer, a scientific instrument used to measure the size and distribution
    of precipitation particles. The diagram shows a light beam that passes through
    a precipitation sample and produces a scattered light pattern that can be analyzed
    to determine the characteristics of the precipitation particles. A white ellipse
    represents the precipitation sample, and the scattered light pattern is indicated
    by arrows pointing away from the sample. The diagram also includes raindrop shapes
    distributed throughout the image, representing the precipitation particles that
    scatter the light. The labels and legend provide additional information about
    the various components of the optical disdrometer. Overall, this informative and
    visually appealing diagram illustrates the basic principles of an optical disdrometer
    and its components. The large-scale deployment of optical disdrometer has been
    studied and explored in [13]. This article also reports the working principle
    and result over a long duration. The cost constraint of the optical disdrometer
    makes it an infrequent choice of selection and does not match our objective. Therefore,
    our study will be limited to the acoustic disdrometer. The proposed rainfall monitoring
    system is based on the sound and impact of water droplets on solid surfaces. Our
    affordable acoustic system uses microphones to detect raindrop sounds, providing
    real-time data on rainfall intensity and distribution over a large area. The earlier
    solution proposed on the principle of the characteristic of water droplets on
    solid surfaces has been named “Disdrometer”. In the American Meteorological Society
    glossary, the term Disdrometer is described as: “An instrument that measures and
    records the sizes of raindrops. A common type of Disdrometer consists of a sensitive
    transponder that measures the momentum of individual drops as they fall onto an
    exposed horizontal surface. Size is determined from momentum through calibration.
    The drop-size distribution is obtained by keeping a tally of the number of drops
    in different size categories that fall onto the surface in a given period [14]”.
    In other words, the complete automation rain gauge sensors measure rain droplets
    using their impact on any solid surfaces. Once the session initiates, the drop
    size spectrum (DSS) measurement can make it possible to estimate the amount of
    rain and its intensity. The drop size distribution techniques also have used radar-based
    precipitation because the reflexivity of clouds depends on DSS, which helps determine
    the rain intensity [12]. The more detail literature review is provided in the
    “ Literature review” [12] and readers are encourage to get insights by refereeing
    that section. . Download : Download high-res image (251KB) Download : Download
    full-size image Fig. 1. Principle of an optical disdrometer. Summary of the research
    work Our objective is to overcome the challenges such as computation complexity,
    data collection, noise reduction and efficient intensity measurement. The ICA
    and PCA based methods have less computational complexity, and has been very efficient
    in noise reduction. The acoustic based dedicated sensor helping us to collect
    the data with less noise at first place, which further refined using ICA and PCA.
    In addition to that, we are able to report the rain intensity with fair accuracy.
    Research methodology The sample design module shown in Fig. 6 a comprehensive
    picture of the disdrometer which requires several key elements to address. 1.
    Data acquisition and management: The data acquired using the audio recorder is
    sent to the server with a timestamp. The sensor spreads throughout the area of
    interest; therefore, it has to follow the protocols for network integration. The
    primary data link protocol criteria will be Slot frame Structure, Scheduling,
    Efficient Bidirectional Packet Exchange, synchronization, Channel Hopping, and
    Network formation. The IEEE 802.15.4, IEEE 802.11 AH, WirelessHART, Z-Wave, DASH7
    (if the frequency is Industrial Scientific Medical (ISM) band) can be acceptable
    choices for datalink protocols. 2. Prepossessing of the received signal: To calibrate
    our system, we use calibrated sound sources with known acoustic characteristics
    to establish a reference point for our measurements. We also perform regular checks
    on the microphones and signal processing algorithms to ensure they operate within
    specified parameters. To validate our system, we conduct various experiments using
    a variety of acoustic signals. We compare the system’s output to ground truth
    data from manual annotations or other reference systems. We use performance metrics
    such as accuracy, precision, and recall to evaluate the system’s performance.
    In terms of accuracy and precision, our system has achieved high levels of accuracy
    and precision in detecting and classifying acoustic signals, with an overall accuracy
    of over 90%. However, like any measurement system, there are potential sources
    of error or uncertainty, such as environmental conditions, background noise, and
    system drift over time. We continually monitor and evaluate these potential sources
    of error and take steps to minimize their impact on the system’s performance.
    The system is highly accurate and reliable for various applications, and we continue
    to refine and improve its performance through ongoing calibration and validation.
    The data received using an acoustic signal will require pre-processing to perform
    further computation. The pre-processing steps can generalize as formatting, cleaning,
    and sampling: 3. Developing the training model for supervised learning: The machine
    learning tools used on the data will require continuous modification to enhance
    their accuracy. It is very often to revisit the pre-process in light of constraints,
    attributes, parameters, and weight value changes. In the end, the process data
    need to transform according to the need of a specific machine learning algorithm.
    The data transformation includes scaling, attribute decompositions, and attribute
    aggregations of collected data. The transformation is discrete even to the specific
    learning method and requires revision during the experiments. 4. ICA (Independent
    Component Analysis) and PCA (Principal Component Analysis): ICA is a statistical
    technique used for separating mixed signals into their independent source components.
    It assumes that the observed signals are a linear combination of underlying independent
    sources. The goal of ICA is to find a linear transformation that maximizes the
    statistical independence of the extracted components. Unlike PCA, which captures
    the most variance in the data, ICA focuses on revealing the underlying sources
    contributing to the observed data. ICA has applications in various fields, such
    as blind source separation, image processing, and speech recognition. PCA, on
    the other hand, is a statistical technique used for dimensionality reduction and
    data compression. It aims to find a set of orthogonal axes, called principal components,
    that capture the maximum variance in the data. The first principal component accounts
    for the largest amount of variability in the data, the second component accounts
    for the second largest amount, and so on. PCA helps simplify complex datasets
    by transforming the original variables into a new set of uncorrelated variables
    (principal components) that retain most of the important information. It is widely
    used in fields such as feature extraction, data visualization, and pattern recognition.
    Proposed work The blind signal separation has been used to decompose or extract
    mixed signals from the source. We can model our objective based on the input signal,
    which is being recorded from the sensor module. The recorded signal can be denoted
    as . The entity used in represents discrete time , the mean transpose of the input
    vector from the blind source sensor. Further, the decomposition of the source
    signal and fetching the acoustic sound wave exclusively related to rain. The reconstruction
    of acoustic sound waves can be achieved using multiple BSS methods, but our focus
    will be on Independent Component Analysis (ICA) and Principle Component Analysis
    (PCA). In this context. to retrieve the signal and generate the primary source
    signal can be represented if any primary source exists. The output signal can
    be estimated as . The output signal can only have the value of the mixed source
    has anything to decompose. In mathematical terms, this Indeterminacy and ambiguities
    may be described as an arbitrary scale, permutation, and delay of estimated source
    signals. This is because ambiguities and Indeterminacy can never be resolved with
    one hundred percent accuracy. On the other hand, due to this Indeterminacy’s existence,
    the sources’ waveforms have not been changed. Although it can look like significant
    restraints at first glance, the fact is that in the great majority of cases, it
    is not necessary to have these limitations. This is because the information that
    is most pertinent regarding the source signals is generally encapsulated in the
    temporal waveforms or time–frequency patterns of the source signals and not in
    the amplitudes of the signals or the order in which they are arranged when they
    are output by the system. This is because the information that is most pertinent
    concerning the source signals is generally encapsulated in the source signals’
    temporal waveforms or time–frequency patterns. This is because the information
    on the source signals that are generally the most important may be found embedded
    in the temporal waveforms or time–frequency patterns of the source signals. This
    is why this is the case. However, for some dynamical models, there is no assurance
    that the waveforms of the estimated or extracted signals will be the same as the
    waveforms of the source signals. This is because many factors might influence
    the waveforms of the estimated or extracted signals. This is because there are
    a wide variety of waveforms to choose from. The criteria must be regularly relaxed
    until the predicted waveforms are distorted copies of the primary source signals.
    This must be done to account for the fact that the waveforms will be generated.
    Acoustic sensor network based on non-uniform discrete fourier transform (NDFT)
    The sensors are randomly placed in a network of acoustic sensors with a square
    deployment region. The whole field is divided into non-overlapping sections of
    dimension . In every block, select a cluster leader CL randomly; others are cluster
    members . The NDFT is performed at CL while the data from the respective cluster’s
    sensors are fused at the CL linearly. Fig. 2 demonstrates the placement of nodes
    in the identified NDFT blocks. Meanwhile, the estimation of random signals from
    some sensors is also done based on linear minimum mean square error (LMMSE). Once
    the NDFT is computed locally, each block is further segregated into h*h where,
    , sub-blocks. Each block consists of one NDFT sensor. The sub-blocks are subjected
    to performance based on 1-D FFT and 2-D globally. The non-equi-spaced DFT in multidimensional
    space can be realized by applying 1-D Fourier transform in each dimension. (1)
    Here is a denoting vector location in time and space, i [0,Q-1] and (2) For ,
    and is the size of the sample in spatial the L-point Fourier coefficients are
    derived. To find Fourier coefficients using NDFT, the “m” equispaced points are
    obtained using given non-equi-spaced points . The NDFT is approximated, resulting
    in aliasing and truncation errors by removing harmonic frequencies and limiting
    the window function size. The study includes an indigenous sensor’s design and
    data-forwarding capability. Moreover, the design and engineering of a system can
    trigger alarms for an impending sudden hazard situation (e.g., landslides, flash
    floods). The proposed design will be 15 cm2 in which the microphone, pressure
    sensor, communication module, and alarm system will be inbuilt. The critical part
    of the research involves testing different kinds of material which is feasible
    for application. Besides, the communication module can also vary for application
    scenarios and require vigorous investigation. The collected data will then be
    used to train the system on the server, which will be delivered to the subscriber.
    Results Independent component analysis (ICA) is used to estimate sources given
    noisy measurements. Imagine three instruments playing simultaneously and three
    microphones recording the mixed signals. ICA is used to recover the sources ie.
    of what is played by each instrument. PCA fails to recover our instruments since
    the related signals reflect non-Gaussian processes. In our research, we found
    that Independent Component Analysis (ICA) outperformed Principal Component Analysis
    (PCA) in the context of analyzing segmented acoustic sensor data. ICA proved to
    be more effective because it leverages the statistical independence assumption
    to estimate the underlying sources, even in the presence of noise and non-Gaussian
    processes. In contrast, PCA relies on the assumption of maximum variance capture,
    which limits its ability to recover sources in cases where the signals do not
    conform to Gaussian distributions. This limitation of PCA is significant in our
    research as it highlights the importance of using ICA for source separation tasks
    in acoustic monitoring. Download : Download high-res image (395KB) Download :
    Download full-size image Fig. 2. Simulation result of segmented acoustic sensor
    data using proposed ICA and PCA method. In our research, we found that Independent
    Component Analysis (ICA) outperformed Principal Component Analysis (PCA) in the
    analysis of segmented acoustic sensor data due to its ability to handle non-Gaussian
    processes and extract independent sources. ICA assumes that the observed signals
    are a linear mixture of the true underlying independent sources, which aligns
    well with the nature of acoustic signals produced by different instruments or
    sources. This makes ICA particularly suitable for blind source separation tasks
    in the context of acoustic monitoring. On the other hand, PCA relies on capturing
    maximum variance in the data, assuming that the principal components are obtained
    from Gaussian processes. However, in scenarios where the acoustic signals exhibit
    non-Gaussian characteristics, such as distinct instruments playing simultaneously,
    PCA fails to recover the individual sources accurately. This is because PCA is
    limited by its inability to capture the independent components when the underlying
    sources do not conform to Gaussian distributions. The significance of our research
    lies in the practical implications for real-time rainfall monitoring systems.
    By applying ICA to acoustic sensor data, we can effectively separate the mixed
    signals caused by multiple sources, enabling us to identify and analyze the individual
    acoustic contributions from each source. This accurate source separation is crucial
    for improving the understanding and measurement of rainfall intensity, as well
    as enhancing the overall performance and reliability of the monitoring system.
    Furthermore, by addressing the limitations of PCA and demonstrating the superiority
    of ICA in this context, our research contributes to advancing the field of acoustic
    signal processing and its application in sustainable environmental monitoring.
    Quality metrics In the research that we have shown here, we have utilized four
    distinct standard performance criteria to evaluate the imperceptibility and robustness
    of the suggested methodology. The quality measures that are being examined include
    the bit error rate, the peak signal-to-noise ratio (PSNR), the structural similarity
    index measurement (SSIM), and the normalized cross-correlation (NC) (BER). PSNR
    and SSIM are two of these measures that have been utilized to establish whether
    or not a digital watermark is undetectable. Case in point NC and BER are two other
    metrics that have been utilized in the process of deciding whether or not the
    recommended strategy is dependable. This determination has been made to determine
    whether or not the offered approach is reliable. You will find a concise description
    of these quality metrics in the following parts of this article. 1. Peak signal-to-noise
    ratio (PSNR): (3) Where is the highest possible grey value of signal. 2. Mean
    squared error ( ) The is defined as the average of the squares of errors between
    the cover signal and mixed signal. (4) We collected the data in two formats, such
    as 60-second and 25 mm training sets, with 30 samples. We used ten samples for
    training and 20 for validation. Currently, we can achieve 72% and 68% efficiency
    for each category in the case of classification. We believe that with extensive
    training with the more massive data sets, the efficiency will increase exponentially.
    Download : Download high-res image (164KB) Download : Download full-size image
    Fig. 3. The comparison ratio of corrected detection for PSNR. Download : Download
    high-res image (196KB) Download : Download full-size image Fig. 4. The comparison
    ratio for means square and for . In Fig. 3, and 4, the mixed signal shown in Fig.
    2 is estimated for PSNR and MSE. In our study, we evaluated the performance of
    corrected detection using different dB values by measuring the Peak Signal-to-Noise
    Ratio (PSNR). The PSNR is a widely used metric to assess the quality of a reconstructed
    signal by comparing it with the original signal. As the dB value represents the
    signal-to-noise ratio, higher dB values indicate a higher quality of the reconstructed
    signal, indicating better accuracy in the corrected detection. In our experiments,
    we observed that as the dB value increased, the PSNR also increased, indicating
    improved accuracy in the corrected detection process. The significance of this
    analysis lies in understanding the impact of noise levels on the detection accuracy.
    By examining the PSNR at different dB values, we gain insights into the optimal
    noise levels for effective and reliable detection. This information is crucial
    for determining the appropriate signal processing techniques and noise reduction
    algorithms that can enhance the accuracy of the corrected detection process in
    real-world applications. Overall, our findings highlight the importance of considering
    noise levels and the corresponding PSNR values in designing robust and accurate
    detection systems. In our research, we conducted a comparison of the ratio for
    Mean Square Error (MSE) and M, where M represents a certain parameter or variable
    of interest. The MSE is a commonly used metric for evaluating the accuracy of
    an estimator by calculating the average squared difference between the estimated
    values and the true values. By examining the comparison ratio between MSE and
    , we gained insights into the relationship between the quality of the estimator
    and the variable of interest. A lower ratio indicates a more precise estimator,
    as the mean square error is relatively smaller compared to the magnitude of M.
    On the other hand, a higher ratio suggests a less accurate estimator, as the mean
    square error is larger compared to . The significance of this comparison lies
    in understanding the trade-off between the precision of the estimator and the
    variability of the variable being estimated. By analyzing the ratio for MSE and
    M, we can determine the optimal estimator that strikes a balance between accuracy
    and variability, enabling more reliable and informed decision-making in practical
    applications. This comparison of the ratio for MSE and contributes to the field
    of statistical estimation by providing insights into the performance of different
    estimators. It helps in selecting the most suitable estimator for a specific variable
    of interest, considering both the precision of the estimator and the inherent
    variability of the variable. Conclusion This research focused on the development
    of an acoustic signal-based indigenous real-time rainfall monitoring system for
    sustainable environmental applications. By leveraging blind source separation
    techniques, such as Independent Component Analysis (ICA) and Principal Component
    Analysis (PCA), we successfully separated mixed acoustic signals obtained from
    rain gauges. Our results demonstrated that ICA outperformed PCA in recovering
    the independent sources, even in the presence of non-Gaussian processes. This
    highlights the significance of using ICA for accurate source separation in acoustic
    monitoring. The proposed methodology, incorporating the use of ICA provides a
    reliable and low-cost solution for rainfall intensity classification. The classification
    accuracy exceeded 80%, enabling precise monitoring and analysis of rainfall patterns.
    Moreover, the acoustic sensor-based approach presented a sustainable alternative
    to address challenges associated with traditional rain gauges, such as mechanical
    failures and high installation costs. Overall, our findings highlight the importance
    of this comparison in enhancing the quality and reliability of statistical estimation
    processes. Funding This study received funding from King Saud University, Saudi
    Arabia through researchers supporting project number (RSP2023R145). Declaration
    of competing interest none Acknowledgments The authors would like to thank King
    Saud University, Riyadh, Saudi Arabia , with researchers supporting project number
    RSP2023R145. Literature review In countries needing cost-effective rainwater harvesting
    and disaster management, various methods like gauges, disdrometers, satellites,
    and radar are used to measure precipitation. Several kinds of disdrometers use
    optic or acoustic as their working principle—the classification of rain in multiple
    categories based on the mm can easily be possible using a disdrometer. In [15],
    the improvement of the acoustic sensor over six classes has shown 80% accuracy.
    In addition, the erosivity study [16] is also very keen on knowing the size of
    droplets instead of the amount of rain because the large droplet scan causes fast
    erosion compared to tiny droplets. In [17], an acoustic recorder equipped with
    TBRG to determine the actual rainy day initially but have very less accuracy.
    In addition to that, it is unable to provide any significance information about
    the intensity. In [18], [19], a camera based solution is given to measure the
    rain intensity which is a complex system. The image and video processing needs
    lots of computation to process and fetch the meaningful information. The IoTs
    based decentralized solution using smartphone is given in [20] needs data collected
    from the mobile source. It faces the challenge of data cleaning as these data
    have lots of noise and hard to distinguishes in between actual data and noise.
    The acoustic sensor-based solutions have been given in existing research, where
    it has categorized the intensity of rainfall. In [8], the proposed broadband wireless
    network infrastructure is equipped with acoustic and rain gauge sensors for rain
    measurement. The acoustic monitoring system with multiple acoustic sensors was
    scattered in the tropical region to collect the rain data. In [8], rain measurement
    has been identified using the wireless sensor infrastructure for sudden hazard
    or disaster decision management. An acoustic rain sensor-based setup is placed
    to identify the rain measure and trigger imminent-hazard alerts. It mainly operates
    wireless access networks at 5 GHz and 2.4 GHz. So, this model continuously monitors
    the rain and measures over a month to acquire possible results. A web-based application
    is used to visualize real-time data and decision support systems. Providing wireless
    access to the sensors deployed in uncertain places is also essential. The experiment
    uses a commercial-grade wireless backbone and broadband access network of infrastructure.
    Besides the acoustic monitoring of rain, a recorder is placed inside a tin can
    with a circular top of diameter 15 cm. Such detectors can record rain in real-time,
    mapping rain rates to acoustic power levels. Initial results from this acoustic
    sensing approach showed that tropical rain could be highly-localized and bursty,
    with heavy rain in areas within several hundred meters and as short as 5 min.
    The infrastructure in which the network can work as an early detection system
    will benefit society. In [14], continuously measure the sound level through acoustic
    sensors to monitor the environmental noises. It used a low-cost tiny board computer
    with a microphone and other sensors through wireless communications. This work
    efficiently identifies and extracts the features by detecting the target noise
    automatically. These noises are classified into two classes: target class and
    background class. The target class belongs to the actual sounds we need to identify,
    and the background noises may be traffic, thunder, and birds. The model proposed
    operated in two stages, including training and monitoring. A binary classification
    mechanism has been used to classify the target and background classes from the
    recorded data. The acoustic feature uses popular supervised learning called artificial
    neural networks. During the training stage, the audio captured in various scenarios
    is given as input, and these are learned and used while monitoring. The training
    stage annotates the target sounds only. This model was evaluated using the rock
    crushing plant for 50 days during working hours data and identified the environmental
    noise with 90% accuracy and 0.938 F-score. However, this model considers the rain
    sounds as background sounds. In [21], the principle of the acoustic sensor is
    given. The aforementioned disdrometer operates on the concept that there will
    be a minor reduction in the amount of light detected when raindrops go through
    a cylindrical sensitive container with the dimensions length and diameter. The
    light source, typically an infrared LED and a control system that allows the diode
    to maintain a consistent illumination level, is located at one end of the cylinder.
    This end of the cylinder contains the light source. In most circumstances, a photodetector
    is a photodiode connected to a signal conditioning circuit. This component is
    located at the opposite end of the device. In [7], a rainfall measuring device
    was developed in which the primary source of identifying the rainfall is through
    sounds. This article describes the prototype, whereas the actual implementation
    has not yet been done. The focus is on the efforts to classify the actual rainfall
    sounds and other background sounds. In this context, they provided two different
    prototypes. The prototype has 32 dB sound differences between rainfall and other
    noises. While considering these differences, the authors have modeled a prototype.
    They also collected the data using various frequencies. However, this is mainly
    focused on the frequencies of the data. The second prototype was extended by determining
    the rainfall rates and intensity. It is mainly determined by using linear regression.
    The authors are very confident about the dataset, which they determined through
    the sensor. In [12], present a rainfall prediction based on the video data acquired
    using camera sensors. The camera sensors are low in quality, and the video pixels
    are also fewer. Raindrops are not always perceptible by camera sensors. So it
    is challenging to process its data. The data is mainly classified into two categories
    based on the images captured from the video. The first type of image is rainy,
    and the others are rain-free. These are separated based on rain streaks representation,
    such as the blurriness of the picture due to raindrops. The significant contribution
    of this article is to identify the rainy images from various disturbances. This
    project is evaluated by conducting real-time experiments in five places in China
    during the rainy season. It is also evaluated during the day and night times.
    This method determines the rain streaks from complex backgrounds such as swaying
    trees, vehicles on roads, wind, etc. Here, the false-negative images are also
    identified efficiently. This method efficiently detects rainfall with improved
    accuracy by minimizing the error rate to 28% over the existing approaches. This
    method provides higher estimation accuracy with low-quality video due to low-cost
    camera sensors. With the advent of the Internet of Things, anything that can be
    data has become a common trend. Using unconventional sources and uncorrelated
    measurement signals for opportunity detection is an attractive solution to expand
    spatial coverage and improve the non-stationary representation of existing surveillance
    networks. In [22], it constructed a dynamic spatio-temporal rain map of the entire
    Netherlands based on the signal attenuation characteristics between the transmitter
    and receiver in the communication network. The simulations confirm using windshield
    wipers or optical sensors as rain gauges in moving vehicles. Recently, [20] adopted
    a smartphone to record the sound of raindrops falling on the umbrella and recommend
    it is raining. Specific opportunistic detection methods can also be classified
    as crowd-sourcing methods because they concentrate on obtaining or reusing data
    from various public sensors (i.e., inanimate crowd-sourcing) or through human
    interaction (i.e., Animation collaboration). The idea of crowd-sourcing is growing
    increasingly common in extensive environmental data, such as using the temperature
    of a smartphone battery to estimate the temperature of urban air, the quality
    of taxi GPS trajectory, and participatory water level analysis [23]. In [17],
    the authors proposed a distinct method to resolve this issue by using an acoustic
    recorder equipped with TBRG to determine the actual rainy day initially. The Wet
    Tropical Soil Station processes TBRG data in Australia to provide 5 min, 15-minute,
    and 1-hour total precipitation and related precipitation time estimates. These
    data are compared with the estimated precipitation time from high-precision WAV
    records of incoming raindrops detected by the delicate skin of the drum. Acoustic
    recording can measure rainfall in real-time and compare it with TBRG data. TBRG
    rain duration’s occasionally provide acceptable accuracy; generally, they are
    highly biased. In addition, compared to 15-minute or 1-hour data, 5-minute data
    always produces estimates with more significant deviations. In general, none of
    the TBRG precipitation data provides an acceptable estimate of the rainfall duration,
    so the intensity data obtained is also seriously biased. In [12], the authors
    proposed a decomposition-based recognition algorithm that efficiently identifies
    rain streaks in a combined background with much interference. Compared with the
    existing algorithm that only considers the temporary change of gray level between
    frames, the new algorithm successfully avoids the wrong definition by considering
    the inherent visual characteristics of rain streaks. The proposed method shows
    satisfactory estimation accuracy and is stable in a wide range of rainfall intensity.
    The average absolute percentage error of the proposed method is 21.8%, which is
    significantly lower than the existing methods described in the literature. However,
    our approach is applied to more complex scenarios obtained with more inadequate
    quality equipment. In [19], it provides a framework for quantifying, analyzing,
    and estimating rainfall intensity from a hydrological perspective based on camera
    images based on physical optics. The proposed work used a method to identify rain
    streaks—the threshold of gray-scale color change in a strip-form triple frame.
    In [24], it conducted many computer simulation experiments to study the potential
    of collaborative methods to monitor rainfall in urban areas. Their research uses
    two hypothetical data sets, including random location observations made by people
    using personal devices (such as smartphones) and fixed locations recorded by traditional
    sensors. These selected locations are continuously measured to create rain fields.
    Compared with conventional measurements on the ground, the comparison shows that
    precipitation data from multiple sources has great potential as a measurement
    system, despite its lower accuracy. In many urban areas, the density of CCTV cameras
    is high. The authors estimate that by 2020, 400 million surveillance cameras will
    be installed in China. The information from such surveillance cameras, i.e., images
    or videos, is more prosperous, more intuitive, and easier to access [18]. Testing
    has been practically applied in China and other countries, especially in traffic
    control. Some of these camera systems have been used to collect environmental
    data, including monitoring water flow, determining the watercolor in the ocean,
    and measuring the reflectance of plants. Using these camera systems, the intensity
    of rainfall can be quantified. At first, it needs to separate the rain band from
    the non-rainy background in the picture or video. Rain marks are visual phenomena
    of raindrops falling through continuous visual perception by the camera. Motion
    blur due to exposure time causes falling raindrops to sweep the image. Following
    the pioneering work in rain trace metering, developing efficient algorithms for
    detecting rain traces in pictures and videos has become an attractive topic in
    rain trace imaging. In [25], it has reviewed available algorithms for seeing rain
    marks in videos—computer vision and image processing focus on removing rain marks
    and even streak noise from images. In most cases, the goal is to achieve “clean”
    images. However, visual rainfall measurement is much more difficult because the
    false detection alarm, erroneous detection of random noise such as raindrops,
    must be avoided to identify rain streaks precisely. System model The system model
    for the development of an acoustic signal-based indigenous real-time rainfall
    monitoring involves several key steps. Firstly, it is important to identify a
    suitable location for installing, ensuring it is an area with significant rainfall
    and easy accessibility. Next, the selection of high-sensitivity microphones with
    a wide frequency response is crucial for accurate rainfall measurement. An acoustic
    signal processing algorithm needs to be developed to analyze the signals captured
    by the microphones. This algorithm should be capable of distinguishing rainfall
    sounds from other environmental noises. The microphones should be installed at
    a height of approximately 1.5 meters from the ground and evenly spaced to ensure
    precise sound capture. To enable data analysis, the microphone data needs to be
    transmitted to a central server using wireless communication protocols such as
    WiFi or Bluetooth. The rainfall data is then analyzed using the acoustic signal
    processing algorithm, which calculates the intensity and duration of rainfall
    accurately. The resulting rainfall data is displayed to users through a user interface
    such as a website or mobile application, allowing real-time tracking of rainfall
    in the specific area. Regular maintenance of the system is essential to ensure
    accurate measurements, including periodic cleaning of the microphones to eliminate
    any dirt or debris that could impact their performance. The followings steps needed
    to achieve the objective motioned above. 1. Development of an initial prototype
    for the disdrometer: In the primary stage of our work, we are developing the prototype
    of a disdrometer. The primary work are to connect all the components, such as
    the rain detection sensor, audio recording sensor module, communication module
    data logger, etc. The prototype stage needs an extensive study of the design and
    development of a robust structure for the disdrometer. The detailed description
    of system model is given in “System Model”. 2. Optimization and calibration of
    prototype and algorithm: The data collected through an acoustic sensor can contain
    noise based on the nature of the application. We must develop an environment-oriented
    solution or algorithm to filter the noise or work around it to achieve acceptable
    accuracy. The optimization deals with recording interval optimization, data redundancy
    minimization, delay, and latency minimization. In addition, the output result
    can further be calibrated with information about an explicit environment. The
    continuous testing and validation in a different environment with material compatibility
    need extensive attention. 3. Development of compatible data logger: Our objective
    is to devolve a cost-efficient rain gauge; therefore, the data logger needs to
    optimize. The storage of acoustic values can be discarded during classification
    due to redundancy. At the same, storing it for a longer horizon of time can prevent
    future data collection. Therefore, we must develop an algorithm to store the acoustic
    value for the requirements. In addition, drop size distribution over the surface
    also requires direct independent attention. 4. Development of web and mobile for
    easy use: Machine learning algorithms need continuous improvement over data flow.
    It can only be possible if the centralized system gets the data through multiple
    sources. We require cloud-based operation and output on web and mobile platforms
    to maintain these. 5. Study the feasibility and obstacle for large-scale deployment:
    The material used in prototype development can have significance. The study requires
    selecting the feasible material for deployment. The material selection constraint
    can be based on robustness, accuracy, conductivity, compatibility, adaptability,
    erosion, and deposition. In addition, our sensor needs to follow the existing
    protocol of wireless sensor networks and Internet of Things networks for large-scale
    operation assistance. The principle behind our solution is to measure the sound
    and impact of rain droplets on a solid surface as shown in Fig. 5 ( where potential
    energy, is mass and is the velocity of droplets. Besides, the rain gauge sensor
    data also gets collected along with the proposed sensor. After that, the actual
    dataset will train the data collected using an acoustic and pressure sensor to
    provide supervised learning. Using supervised learning, after training the proposed
    sensor, we should learn how to make a classification between the noise and actual
    data. Besides, it tunes the system according to the external factor also. According
    to its origin, the resultant information will then be stored in the centralized
    server, which further notifies its subscribers using the “Http” protocol on the
    Android application. The advantage of the proposed solution is that it does not
    use any mechanical-based moving part; therefore easy to handle maintenance. Moreover,
    the cost-effectiveness of our solution also encourages people from different backgrounds
    to install and use it. Further, no expertise is required to install a sensor because
    its result will work as a standalone sensor node with remote measurement capability.
    The application areas can be proper management of rainwater harvesting systems,
    soil assessment and service, and real-time landslide monitoring on sub-kilometer
    distances. Further, critical infrastructure management support, assessment, and
    support in insect breeding can also be long-term achievements of the system. Compared
    to previous approaches, our system design is different. In itself, it is not a
    groundbreaking discovery. However, as mentioned earlier, we are trying to develop
    a new overground method to record and evaluate rainfall by combining the best
    aspects for the application and, hopefully, producing accurate results. Download
    : Download high-res image (177KB) Download : Download full-size image Fig. 5.
    Working principle of an acoustic disdrometer. Block diagram of the system Our
    work can be divided into field data collection, remote data processing, and delivering
    information to users through an Android platform. The sensor development and testing
    will require examination in various environments to tune its accuracy. The significant
    difficulty is identifying noise, rectifying, and classifying the received signal.
    Machine learning will be applied to create the model based on the classified data.
    RCNN is the method to build a model from past experiences (data feed-in) concerning
    some classes of Tasks. If performance in a given Task improves with the experience,
    then the approach will improve with time and data. We perceive the severity of
    application areas; therefore, the accuracy and efficacy will be compared with
    the tipping bucket rain gauge. In Fig. 6, the block diagram of the our model is
    shown which has mainly three components named as the smart sensor, centralized
    server, and mobile service. The flow of information is as the smart sensor collects
    the rain data; the data will send to the centralized server using the wireless
    or cellular network. The collected data will timestamp with its localization.
    The server will then convert the data into a readable format accessible through
    an Android application. Download : Download high-res image (279KB) Download :
    Download full-size image Fig. 6. Sample design of acoustic sensor along with tipping
    bucket. A sample prototype version The prototype consists of the sensing and communication
    module. The communication module is already well established according to the
    nature of the application. The vital focus area will be the sensing module. The
    sensor surface will be made of a solid material. The sound produced by the surface
    when droplets hit will be recorded using the microphone. The research includes
    analyzing materials and performing a feasibility study for different localization.
    Further, the surface should have other properties measuring vibration and pressure.
    These other sensing properties will increase the robustness of the overall system.
    In this acoustic signal-based system, we use condenser microphones due to their
    sensitivity and frequency response characteristics. The microphones are positioned
    in strategic locations to capture the desired acoustic signals. The sampling rate
    used in our system is 44.1 kHz, which is the standard for CD-quality audio. This
    high sampling rate ensures that we capture a wide range of frequencies in the
    acoustic signal, allowing us to analyze the signal accurately. We also use advanced
    signal processing algorithms to analyze the acoustic signal. The first step in
    the signal processing chain is to filter out any unwanted noise or interference
    using digital filters. Then, we use Fourier analysis to decompose the signal into
    its constituent frequencies. We then apply various machine learning techniques,
    such as neural networks and support vector machines, to classify and identify
    specific patterns in the acoustic signal. Our system has shown promising results
    in detecting and classifying different acoustic signals, including speech, music,
    and environmental sounds. Potential applications of this system include speech
    recognition, music genre classification, and environmental monitoring. Our work
    requires IoTs hardware, signal processing, and machine learning expertise. Signal
    processing has many sophisticated tools spanning over the last fifty years. Methods
    such as Fourier and wavelet transforms, adaptive filtering, autocorrelation, and
    convolution have explained specific problems. We can use these tools individually
    for noise minimization, removal of noise, separation of signal, aggregation, etc.
    The combination can also help build the database vital for learning. 1. Measure
    of Success: We aims to develop an indigenous rain sensor to estimate rain accurately.
    Therefore, the measure of success ultimately lies in getting an accurate estimation.
    The objective is first to classify rain into multiple categories. Later Increase
    the classes to enhance accuracy. We will use a multiclass classification model
    and regression to achieve the objective. The evaluation matrices, such as accuracy,
    can handle classification, whereas mean squared error can be used for regression.
    It can be possible that only Meaningful Features have been selected in modeling.
    2. Evaluation Protocol: The learning needs continuous evaluation and validation,
    which can be achieved using K-Fold Validation. The detail of the K-fold can be
    available at [26]. It is a statistical tool to estimate the model’s skill on new
    incoming data. In general, shuffling, splitting and a reformation is a critical
    approach in k-fold validation. 3. Overfitting and Underfitting: The balance between
    best performance based on training data and unseen data also plays a crucial in
    the model as seen in Fig. 4. 4. Model evaluation and Tuning its Hyperparameter:
    It has two parameters: it learns in the training phase and the second, which we
    pass to the learning model. The PSNR, as shown in Fig. 3, can be a model evaluation
    and tuning method. 5. Future direction: The piëzo electric property of the material
    is the science behind the interaction of droplets to the surface and the generation
    of the electric signal. The droplet’s properties, such as speed, size, and kinetic
    energy, are crucial for our prototype. Besides, the environment, such as wind,
    a bubble on the surface can cause noise in the electromagnetic signal. Therefore,
    calibration during data generation is also required before passing the data to
    the model. For higher wind and drop rates, it is reported that the logger also
    faces an issue with the data recording. We have to analyze the uncertainty created
    by physical hardware. By enhancing the understanding of rainfall patterns and
    providing accurate measurements, our methodology supports sustainable environmental
    practices and aids decision-making in areas such as agriculture and water resource
    management. Computation of Fast Fourier coefficients The following steps can compute
    the Fast Fourier coefficients for “Q” non-uniform points are explained in ”Computation
    of Fast Fourier coefficients”. The window function is given by- (5) Now, (6) is
    a window function. The discrete Fourier transform of “dc” is (7) Now finding the
    approximate value of ‘ ’ (where ) (8) For computing NDFT take Eq. (7) as classical
    linear interpolation and can be represented as (9) We are using Gaussian window
    function as well as weighing function for our experimentation. The generalized
    interpolation is formulated as- (10) are the coefficients of sample values ‘ ’.
    Employing weighted least square approximator’s modified version, the generalized
    interpolation is- (11) ‘Q’ is the degree of polynomial. The 1-D FFT is incorporated
    as invert shuffle complement function for binary index. Figure shows 16 sensors
    structure employing 1-D FFT computation. This algorithm optimizes number of communications.
    Fig. 3 shows 16 node FFT structure using method described in appendix. The solid
    blue lines show butterfly operations and dashed lines depict shuffling operation.
    The nodes that do not change their logical ID need not exchange data which ultimately
    reduces the transmission power and collisions. The following steps are followed
    for 8-node FFT computation. In initial stage two neighbor nodes do butterfly computation
    in each phase. In th phase, the butterfly paths are given by th binary index.
    and functions give bit binary index. requires 2 neighbor nodes in 1st phase. Now,
    th bit binary index is and provides the result. Therefore, one node undergoes
    only one transmission in any phase and total of transmissions are made by ‘M’
    nodes in ‘m’ phases. (see “System model” for M-point FFT computation based on
    binary index theory) In second stage the two groups have symmetrical structure
    as shown in Fig. 3. function for 1st half phases operate on 1st group. The function
    operation for bits only in th phase. In th phase, the logical 1D for node ‘U’
    becomes and its physical ID becomes . Let physical ID measures actual distance
    between 2 nodes, then the distance between nodes U and is U. physical ID-T.physical
    ID. All packets travel a total distance of . Its upper bound is represented by
    (12) As the transmission increases, becomes dominant. When D is the sum of numbers
    from the 1st and 2nd phases in which last 2 and 3 bits are involved respectively.
    is the number of transmissions. In th phase, total transmissions in a cluster
    are: (13) In 1st phase only last two bits are operated i.e., (14) In 2nd phase
    last three bits are operated i.e., (15) In phase the number becomes (16) Calculating
    the sum (D) of above terms (17) In phase if NT(M) denotes number of transmissions
    then (18) Data availability Data will be made available on request. References
    [1] Zhong Qing, Tong Daoqin, Crosson Courtney, Zhang Yinan A GIS-based approach
    to assessing the capacity of rainwater harvesting for addressing outdoor irrigation
    Landsc Urban Plan, 223 (2022), Article 104416 View PDFView articleView in ScopusGoogle
    Scholar [2] Kakoulas Dimitrios A, Golfinopoulos Spyridon K, Koumparou Dimitra,
    Alexakis Dimitrios E The effectiveness of rainwater harvesting infrastructure
    in a Mediterranean Island Water, 14 (5) (2022), p. 716 CrossRefView in ScopusGoogle
    Scholar [3] de Sá Silva Ana Carolina Rodrigues, Bimbato Alex Mendonça, Balestieri
    José Antônio Perrella, Vilanova Mateus Ricardo Nogueira Exploring environmental,
    economic and social aspects of rainwater harvesting systems: A review Sustainable
    Cities Soc, 76 (2022), Article 103475 View PDFView articleView in ScopusGoogle
    Scholar [4] Nandi Santosh, Gonela Vinay Rainwater harvesting for domestic use:
    A systematic review and outlook from the utility policy and management perspectives
    Utilities Policy, 77 (2022), Article 101383 View PDFView articleView in ScopusGoogle
    Scholar [5] Munyasya Alex Ndolo, Koskei Kiprotich, Zhou Rui, Liu Shu-Tong, Indoshi
    Sylvia Ngaira, Wang Wei, Zhang Xu-Cheng, Cheruiyot Wesly Kiprotich, Mburu David
    Mwehia, Nyende Aggrey Bernard, et al. Integrated on-site & off-site rainwater-harvesting
    system boosts rainfed maize production for better adaptation to climate change
    Agricult Water Manag, 269 (2022), Article 107672 View PDFView articleView in ScopusGoogle
    Scholar [6] Imteaz Monzur Alam, Shadeed Sameer Superiority of water balance modelling
    for rainwater harvesting analysis and its application in deriving generalised
    equation for optimum tank size J Clean Prod, 342 (2022), Article 130991 View PDFView
    articleView in ScopusGoogle Scholar [7] Gonzalez Efrin, Kreiner Rasmus. AcuRain:
    A Rainfall Audio Spectrum Analyzer for Android Powered Mobile Phones. Google Scholar
    [8] Libatique NJC, Tangonan GL, Gustilo R, Seah Winston KG, Pineda C, Guico ML,
    Abrajano G, Ching R, Zamora JL, Espinosa A, et al. Design of a tropical rain-disaster
    alarm system: A new approach based on wireless sensor networks and acoustic rain
    rate measurements 2009 IEEE Instrumentation and Measurement Technology Conference,
    IEEE (2009), pp. 1337-1340 View in ScopusGoogle Scholar [9] Mardyansyah RY, Kurniawan
    B, Soekirno S, Nuryanto DE, Satria H Artificial intelligent for rainfall estimation
    In Tropical Region: A survey IOP Conference Series: Earth and Environmental Science,
    vol. 1105, no. 1, IOP Publishing (2022), Article 012024 CrossRefView in ScopusGoogle
    Scholar [10] Shi Junbo, Xu Chaoqian, Guo Jiming, Gao Yang Real-time GPS precise
    point positioning-based precipitable water vapor estimation for rainfall monitoring
    and forecasting IEEE Trans Geosci Remote Sens, 53 (6) (2014), pp. 3452-3459 Google
    Scholar [11] Jehanzaib Muhammad, Ajmal Muhammad, Achite Mohammed, Kim 4 Tae-Woong
    Comprehensive review: Advancements in rainfall-runoff modelling for flood mitigation
    Climate, 10 (10) (2022), p. 147 CrossRefView in ScopusGoogle Scholar [12] Jiang
    Shijie, Babovic Vladan, Zheng Yi, Xiong Jianzhi Advancing opportunistic sensing
    in hydrology: A novel approach to measuring rainfall with ordinary surveillance
    cameras Water Resour Res, 55 (4) (2019), pp. 3004-3027 CrossRefView in ScopusGoogle
    Scholar [13] Pickering Ben S., Neely III Ryan R., Harrison Dawn The disdrometer
    verification network (DiVeN): A UK network of laser precipitation instruments
    Atmos Meas Tech, 12 (11) (2019), pp. 5845-5861 CrossRefView in ScopusGoogle Scholar
    [14] Maijala Panu, Shuyang Zhao, Heittola Toni, Virtanen Tuomas Environmental
    noise monitoring using source classification in sensors Appl Acoust, 129 (2018),
    pp. 258-267 View PDFView articleView in ScopusGoogle Scholar [15] Cruz Febus Reidj
    G, Pangaliman Ma Madecheen S, Amado Timothy M, Uy Francis Aldrine A Development
    of improved acoustic disdrometer through utilization of machine learning algorithm
    TENCON 2018-2018 IEEE Region 10 Conference, IEEE (2018), pp. 1679-1682 CrossRefView
    in ScopusGoogle Scholar [16] Brandt C. Jane Simulation of the size distribution
    and erosivity of raindrops and throughfall drops Earth Surf. Processes Landforms,
    15 (8) (1990), pp. 687-698 CrossRefView in ScopusGoogle Scholar [17] Dunkerley
    David Acquiring unbiased rainfall duration and intensity data from tipping-bucket
    rain gauges: A new approach using synchronised acoustic recordings Atmos Res (2020),
    Article 105055 View PDFView articleView in ScopusGoogle Scholar [18] Guo Bin,
    Han Qi, Chen Huihui, Shangguan Longfei, Zhou Zimu, Yu Zhiwen The emergence of
    visual crowdsensing: Challenges and opportunities IEEE Commun Surv Tutor, 19 (4)
    (2017), pp. 2526-2543 View in ScopusGoogle Scholar [19] Allamano P., Croci A.,
    Laio F. Toward the camera rain gauge Water Resour Res, 51 (3) (2015), pp. 1744-1757
    View in ScopusGoogle Scholar [20] Guo Hansong, Huang He, Sun Yu-E, Zhang Youlin,
    Chen Shigang, Huang Liusheng Chaac: Real-time and fine-grained rain detection
    and measurement using smartphones IEEE Internet Things J, 6 (1) (2018), pp. 997-1009
    CrossRefView in ScopusGoogle Scholar [21] Mocholí Belenguer Ferran, Martínez-Millana
    Antonio, Mocholí Salcedo Antonio, Milián Sánchez Víctor, Josefa Palomo Anaya María
    Disdrometer performance optimization for use in urban settings based on the parameters
    that affect the measurements Symmetry, 12 (2) (2020), p. 303 CrossRefGoogle Scholar
    [22] Uijlenhoet Remko, Leijnse Hidde, Overeem Aart. Toward Continental-scale Rainfall
    Monitoring Using Commercial Microwave Links From Cellular Communication Networks.
    In: AGU Fall Meeting Abstracts, vol. 2017. 2017, p. H43P–04. Google Scholar [23]
    Mazzoleni Maurizio, Verlaan Martin, Alfonso Leonardo, Monego Martina, Norbiato
    Daniele, Ferri Miche, Solomatine Dimitri P Can assimilation of crowdsourced data
    in hydrological modelling improve flood prediction? Hydrol Earth Syst Sci, 21
    (2) (2017), pp. 839-861 CrossRefView in ScopusGoogle Scholar [24] Yang Pan, Ng
    Tze Ling Gauging through the crowd: A crowd-sourcing approach to urban rainfall
    measurement and storm water modeling implications Water Resour Res, 53 (11) (2017),
    pp. 9462-9478 View in ScopusGoogle Scholar [25] Tripathi Abhishek Kumar, Mukhopadhyay
    Sudipta Removal of rain from videos: a review Signal Image Vid. Process., 8 (8)
    (2014), pp. 1421-1430 CrossRefView in ScopusGoogle Scholar [26] Brownlee Jason
    A gentle introduction to k-fold cross-validation Machine Learn. Mastery, 2019
    (2018) Google Scholar Cited by (0) View Abstract © 2023 Elsevier Ltd. All rights
    reserved. Part of special issue Environmental Monitoring using Real-Time Intelligent
    Methods for Sustainable Development of Cities Edited by Rohit Sharma, Ishaani
    Priyadarshini, Danda B. Rawat, Amiya Nayak View special issue Recommended articles
    Quantifying the benefits of PV module shading for building heat gain reduction:
    A machine learning approach Sustainable Energy Technologies and Assessments, Volume
    60, 2023, Article 103428 Sorraphat Bubpharam, …, Manit Seapan View PDF Gravity-induced
    virtual clocking effect in large-capacity/low-head pumped hydro energy storage
    system with horizontal shaft Sustainable Energy Technologies and Assessments,
    Volume 60, 2023, Article 103441 Hao Wang, …, Hongzhong Lu View PDF Techno-economic
    assessment for black liquor concentration system of chemical pulp integrating
    mechanical vapor recompression Sustainable Energy Technologies and Assessments,
    Volume 60, 2023, Article 103453 Jiang Liu, …, Yongjun Yin View PDF Show 3 more
    articles Article Metrics Captures Readers: 3 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Sustainable Energy Technologies and Assessments
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Acoustic signal-based indigenous real-time rainfall monitoring system for
    sustainable environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Lin Y.B.
  - Chen W.E.
  - Chang T.C.Y.
  citation_count: '3'
  description: Integrating cloud with fog/edge is a main trend in networking. Many
    cloud computing applications have been shifted to the edge/fog domain. Such paradigm
    shift offers new opportunities for pervasive computing. An example is AgriTalk,
    an Internet of Things (IoT) application development platform for smart agriculture.
    By integrating cloud with edge/fog, this article describes how AgriTalk addresses
    six issues for developing edge/fog agriculture applications. These issues include
    device domain development, application generation and bug detection, sensor failure
    detection and calibration, big data management, Artificial Intelligence (AI) provisioning,
    and data privacy. We show how AgriTalk integrates fog/edge applications and use
    rice blast detection and piglet crushing mitigation as two examples to demonstrate
    that fog/edge computing is a better solution than cloud computing. Compared with
    cloud computing, fog/edge computing reduces the delays by 50 percent in AgriTalk.
    Through the low-code no-code approach, AgriTalk allows the farmers to create and
    maintain fog/edge agriculture applications by themselves.
  doi: 10.1109/MCOM.001.2200633
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Communications Magazine
    >Volume: 61 Issue: 12 Moving from Cloud to Fog/Edge: The Smart Agriculture Experience
    Publisher: IEEE Cite This PDF Yi-Bing Lin; Whai-En Chen; Ted C.-Y. Chang All Authors
    3 Cites in Papers 251 Full Text Views Abstract Document Sections Introduction
    AgriTalk-FE: the AgriTalk Architecture for IoT-FE Special FE-Talks AgriTalk-C:
    Integration of Cloud and Fog/Edge Domains Integrated Operations Center (IOC):
    MapTalk Show Full Outline Authors Figures References Citations Keywords Metrics
    Abstract: Integrating cloud with fog/edge is a main trend in networking. Many
    cloud computing applications have been shifted to the edge/fog domain. Such paradigm
    shift offers new opportunities for pervasive computing. An example is AgriTalk,
    an Internet of Things (IoT) application development platform for smart agriculture.
    By integrating cloud with edge/fog, this article describes how AgriTalk addresses
    six issues for developing edge/fog agriculture applications. These issues include
    device domain development, application generation and bug detection, sensor failure
    detection and calibration, big data management, Artificial Intelligence (AI) provisioning,
    and data privacy. We show how AgriTalk integrates fog/edge applications and use
    rice blast detection and piglet crushing mitigation as two examples to demonstrate
    that fog/edge computing is a better solution than cloud computing. Compared with
    cloud computing, fog/edge computing reduces the delays by 50 percent in AgriTalk.
    Through the low-code no-code approach, AgriTalk allows the farmers to create and
    maintain fog/edge agriculture applications by themselves. Published in: IEEE Communications
    Magazine ( Volume: 61, Issue: 12, December 2023) Page(s): 86 - 92 Date of Publication:
    08 May 2023 ISSN Information: DOI: 10.1109/MCOM.001.2200633 Publisher: IEEE Funding
    Agency: Introduction In the advancement of the Internet of Things (IoT) technologies,
    one of the main trends in networking is the paradigm shift from cloud based IoT
    (IoT-C; that is, connecting the IoT device directly to a cloud server in Fig.
    1(1)) to fog/edge based IoT (IoT-FE; that is, connecting the IoT devices to the
    fog/edge nodes in Fig. 1 (2). We define three types of IoT-FE: monitoring-IoT,
    controlling-IoT, and automating-IoT. Monitoring-IoT allows the users to remotely
    read the sensor data ((3) → (2) in Fig. 1). Controlling-IoT allows the users to
    remotely control actuators ((2) → (4) in Fig. 1). Automating-IoT controls the
    actuators according to the sensor data without manual operation ((3) → (2) → (4)
    in Fig. 1). To deploy IoT-FE applications rapidly and reliably, an IoT development
    platform should provide functions to speed up application creation and management.
    Based on our experience with smart agriculture deployment in the past 8 years,
    this article describes the IoT-FE application development focusing on six issues.
    Issue 1–Device Domain Development Most commercial IoT applications use off-the-shelf
    sensors/actuators. To accommodate these devices in fog/edge computing, we need
    to integrate them with the microcontroller units (MCUs) with significant effort
    [1]. An MCU is an integrated circuit that consists of a processor unit, memory
    modules, communication interfaces (to connect the IoT servers) and peripheral
    pins (to connect sensors and actuators). To speed up the accommodation of an IoT
    device in fog/ edge computing, it is essential to provide a development environment
    in the IoT device domain. Examples of the MCU solutions include Ardublock, S4A,
    Webduino and ArduTalk [1]. Issue 2–Application Generation and Bug Detection IoT-FE
    application development consists of two phases [2]. In Phase 1, a proof-of-concept
    is built through simulation. In Phase 2, the real IoT application is implemented
    and experimented on a testbed. However, the code developed in Phase 2 may not
    be consistent with the code developed in Phase 1. In fog/edge computing, it is
    essential to automatically or semi-automatically generate the application codes
    and conduct automatic bug detection to speed up the development process [3]. Issue
    3–Sensor Failure Detection and Calibration Many IoT-FE applications fail due to
    inaccurate data produced by the sensors. Traditionally, sensor failure detection
    and calibration are conducted manually in an offline process. In fog/edge computing,
    there are many agricultural sensors spread across different locations. It is important
    to detect sensor failures and conduct calibration automatically to guarantee normal
    operations of the sensors [4], [5]. Issue 4–Big Data Management The data produced
    by the agricultural sensors from a large number of fog/edge nodes are typically
    handled by big data tools in an offline process. It is more beneficial to integrate
    the database system (Fig. 1 (5)) with the IoT-FEs and the IoT-C to support automatic
    real-time data analysis in fog/edge computing [6], [7]. Issue 5–Artificial Intelligence
    (AI) Provisioning Some data from the IoT-FE applications are manipulated by AI
    tools through an offline process [8]. Significant programming effort is required
    to integrate AI modeling into existing IoT-FE applications. Therefore, it is critical
    to provide transparent AI inferencing at IoT-FE (Fig. 1 (6)) and online AI training
    at IoT-C (Fig. 1 (7)) [6]. Issue 6–Data Privacy Since IoT-FE applications may
    support video monitoring, access rights must be enforced for data privacy [9].
    Also, the controlling-IoT and automating-IoT applications will trigger the actuators,
    and data security is required to protect these IoT-FE applications from illegal
    access. This article uses AgriTalk [10] as an example to address the above 6 issues
    for IoT-FE application development. A fog/edge node of AgriTalk is called an AgirTalk-FE.
    AgriTalk is an IoT-based smart agriculture platform for developing various AgriTalk-FEs,
    and the applications developed in an AgriTalk-FE are called FE-Talks. Examples
    are MapTalk for integrated operations center (IOC) and HouseTalk for greenhouse
    [10]. This article shows that fog/edge computing can be effectively achieved in
    these sustainable FE-Talk examples. We first describe how to organize the agriculture
    applications as FE-Talks hosted in the AgriTalk platform through a modular approach.
    Then we integrate every FE-Talk Graphical User Interface (GUI) with the MapTalk
    GUI to enhance the user experience. AgriTalk is an interesting fog/edge computing
    example, which conducts non-toxic organic farming at more than twenty soil farms
    and 4 greenhouses located in Taiwan, Japan, Philippe, Thailand and Armenia. AgriTalk
    eliminates the requirement of physical presence for some critical farming tasks
    through fog/edge computing to achieve distributed farm management. The article
    is organized as follows: The next section proposes the AgriTalk IoT-FE approach.
    Following that, we show several special FE-Talks, and then describe the AgriTalk
    mechanism on the cloud domain. We then elaborate on MapTalk, the IOC for AgriTalk,
    and illustrate PigTalk, a fog/ edge intelligent system for piglet crushing mitigation.
    The final section gives conclusions. AgriTalk-FE: the AgriTalk Architecture for
    IoT-FE Figure 2 illustrates the fog/edge AgriTalk architecture based on Fig. 1.
    The original AgriTalk was designed with a cloud-based server called AgriTalk-C
    in the network domain (Fig. 2 (3)), which directly connects the agricultural sensors/actuators
    in the device domain (Fig. 2 (1)) [10]. Figure 1. Fog/edge computing for IoT.
    Show All To offer fog/edge computing, the network domain is further partitioned
    into the fog/edge domain and the cloud domain, where the AgriTalk-FEs (individual
    farms) are deployed in the fog/edge domain (Fig. 2 (2)), and AgriTalk-C is located
    in the cloud domain. In this architecture, the low-layer communications among
    the three domains ((1) <-> (8), (1) <-> (5), (5) <-> (8) and (6) <-> (22)) can
    be Ethernet, Bluetooth, WiFi, 4G, and 5G. The high-layer APIs for these domains
    can be Restful or Message Queuing Telemetry Transport (MQTT), except that connections
    (5) <-> (8) and (6) <-> (22) use Restful API. The AgriTalk Database (DB) System
    (Fig. 2 (4)) is accessed through Object Relational Mapping (ORM). The AgriTalk-FEs
    interact with each other in two ways. They can exchange their data through the
    AgriTalk DB System or through AgriTalk-C. AgriTalk-C resides in the cloud as a
    docker container image. As an edge node in the current implementation, an AgriTalk-FE
    is installed in an industry version of Raspberry Pi 4. This section elaborates
    on AgriTalk-FE architecture for a fog/edge node. Multiple FE-Talks ((9), (10),
    (11), (13), (15), and (17) in Fig. 2) can be developed through the AgriTalk-FE
    GUI (Fig. 2 (6)), and be manipulated (e.g., parameter setups) through the FE-Talk
    GUIs (Fig. 2 (7)). Through connecting icons in the AgriTalk-FE GUI window, the
    program for an FE-Talk application is automatically created without any programming
    effort. This no-code approach allows the farmers to quickly deploy their farming
    applications. In Fig. 2, the system FE-Talks are marked green ((10), (11), (13),
    (15), and (17)) and the application FE-Talks are marked blue ((9)). Both the AgriTalk-FE
    and the FE-Talk GUIs are web based, which can be remotely accessed through any
    computing device with a browser (Fig. 3 (1)). In this GUI, a project window (Fig.
    3 (2)) allows the farmer to develop an FE-Talk. We use Figs. 2 and 3 to describe
    this development procedure. The IoT-FE device software binds an IoT device (Fig.
    2 (1)) to the AgriTalk-FE engine (Fig. 2 (8)) through several simple operations
    in the AgriTalk-FE GUI (Fig. 2 (6)), and an example of its layout is the “Project”
    window illustrated in Fig. 3 (2). AgriTalk defines a device model for real IoT
    devices with the same properties. For example, a smartphone model is mapped to
    real phones such as Apple iPhones, Samsung smart phones and so on. In the project
    window, an IoT device model is graphically represented by an icon, for example,
    “Sensors” (Fig. 3 (6)). This icon includes one or more smaller icons representing
    the “features” (individual sensors) of the device. For example, the features of
    a micro weather station (Fig. 3 (3)) include the sensors for temperature, humidity,
    electrical conductivity (EC), CO2 and so on. When we click the gear icon in the
    upper-left corner of a device icon, the physical device is bound to AgriTalk-FE
    (e.g., the (3) → (6) connection in Fig. 3). The binding mechanism is similar to
    the one for Bluetooth. We enable a sensor device to control an actuator device
    by dragging a “Join” link between them (see Joins 1–5 in Fig. 3). There is a circle
    in the middle of the link. When the circle is clicked, a function management window
    pops up (Fig. 3 (22)). We write functions in this window to manipulate the data
    passing through the link. For example, the soil EC values are collected in real
    time, and are used to train a fertilizer regulatory model for the farm. The model
    provides appropriate fertilizer solution, for example, the Nitrogen (N) to optimize
    the yield of the plant cultivation. The relationship between EC ( χ E ) and N
    ( f N ( χ E )) for a specific farm in the Bao Mountain is derived as [10] f N
    ( χ E )=63.2526 χ 2 E +14.2131 χ E +0.1797 (1) View Source Figure 2. The AgriTalk
    architecture for edge/fog computing. Show All Through this function, the values
    measured from the EC sensor are transformed into the amount of Nitrogen to drive
    the pump of the fertilizer solution through the path (3) → (6) → (8) → (7) in
    Fig. 3. This function is implemented as a Python program in the function management
    window; see Lines 3 and 4 in Fig. 3 (22). Note that AgriTalk-FE automatically
    integrates the Join functions to constitute the network program of the IoT-FE
    application, and this “Join” mechanism partially addresses Issue 2 in the fog/edge
    domain. FE-Talk is defined by the device models that can be accessed from the
    model pull-down list (Fig. 3 (5)). For example, the items in the AgriTalk model
    list include the micro weather station with the soil sensors (Fig. 3 (3)), the
    fertilizer and irrigation drippers (Fig. 3 (7)), the biopesticide sprayers and
    so on [10]. Besides the AgriTalk-FE GUI, we can design a specific GUI for FE-Talk,
    which is typically a browser that can be shown in a mobile device (Fig. 3 (4)).
    Based on the setups in this GUI, the AgriTalk-FE engine (Fig. 2 (8)) executes
    the FE-talk code (Fig. 2 (9)) to interact with the IoT devices (Fig. 2 (1)). The
    FE-Talk code is automatically created when the device connection configuration
    is complete in the Project window (Fig. 3 (2)), which addresses the automatic
    application generation part of Issue 2. Figure 3. AgriTalk-FE GUI. Show All In
    the device domain, many IoT devices are connected to the MCUs. Programming an
    MCU is a tedious task. The AgriTalk-FE engine automatically generates software
    module codes for the MCU boards including Arduino, Raspberry pi, MediaTek LinkIt,
    ROHM IoT kit and ESP8266 ESP-12F [1]. After we have deployed the standard IoT
    device software into an MCU board, a developer can easily create new applications
    with the AgriTalk-FE GUI (see the Project 1 window in Fig. 4) without the need
    of re-programming the MCU. Specifically, an MCU board (Fig. 4 (1)) can be represented
    by a device icon (Fig. 4 (3)), and its pins can be represented by the feature
    icons within the device icon (e.g., A0 in Fig. 4 (3)). If a device has both inputs
    (to send the data to the AgriTalk-FE engine; see Fig. 4 (6) in Arduino1) and outputs
    (to receive the data from the AgriTalk-FE engine; see Fig. 4 (7) and (8) in Arduino1),
    then the inputs are represented as the feature icons within an “input” device
    icon (Fig. 4 (3)), and the outputs are represented as the feature icons with-in
    an “output” device icon (Fig. 4 (4)). The input device icons are placed on the
    left side of the window, and the output device icons are placed on the right side
    of the window. In Project 1, we also use a second MCU board (Arduion2; see Fig.
    4 (2) and (5)). We build the Arduino network programs for the greenhouse fan control
    (Fig. 4 (7) → (11)) and the energy screen control (Fig. 4 (8) → (12)) as follows:
    We use drag-and-drop operations to draw lines between analog and digital pin icons
    in the AgriTalk-FE GUI, which allows quick agriculture application deployment.
    Furthermore, we can easily re-link sensors to actuators to modify Arduino applications
    without re-burning the MCU. Therefore, our solution has nicely addressed Issue
    1 in the device domain and the application generation part of Issue 2. In Project
    1, both the fan and the energy screen are automatically controlled by the heat
    sensor (Fig. 4 (6)). They are also manually controlled by the switches (Fig. 4
    (9) and (10)). With the pre-built agriculture functions, the low-code no-code
    approach of AgriTalk allows the farmers to create and maintain the fog/edge agriculture
    applications by themselves. Special FE-Talks We have developed several special
    FE-Talks to resolve Issues 2–6 for agriculture fog/edge computing. To address
    the bug detection part of Issue 2, we proposed BigraphTalk to detect any forbidden
    Join connections by using Bigraph, a universal mathematical model for representing
    the spatial configuration of physical or virtual entities and their interactions
    [11]. Our operation experience in commercial farms indicated that the farmers
    at a fog/edge site may inappropriately connect the IoT devices in the GUI. For
    example, the farmer may connect a motor to a temperature and a humidity sensors.
    The temperature and the humidity conditions may conflict with each other, which
    causes the motor to oscillate between “on” and “off” states, and eventually burn
    out. No existing solutions solved this problem automatically until we developed
    BigraphTalk. To check correctness of connections, we use bigraph to specify what
    an invalid configuration of entities looks like and check these against a given
    input model. Bigraph-Talk automates this verification process without requiring
    the developer to specify any bigraph. After static Join connection is proved correct,
    we may verify if the execution of the developed FE-Talk is correct by SimTalk
    [3] through the path (11)-(8)-(9) in Fig. 2. Specifically, after an FE-Talk is
    created, we click the “simulation” toggle button (Fig. 3 (11)). Then the SimTalk
    GUI (Fig. 2 (12)) pops up for specifying the traffic characteristics. Before physical
    sensors/controls are actually connected to the FE-Talk, SimTalk binds the feature
    icons to the simulated software modules corresponding to the real sensors/actuators,
    and set up specific traffic patterns to simulate or emulate the application. The
    simulated software modules are automatically created by SimTalk. The reader is
    referred to Fig. 5 in [3] for more details. We proposed SensorTalk (Fig. 2 (10))
    to address Issue 3 [4], [12]. The farmers often need to replace or calibrate failed/aged
    sensors. Such maintenance is labor-intensive, and the user experience is poor
    in the fog/edge environments. To address this issue, SensorTalk developed a Dash-Board
    output device model (Display-O; Fig. 3 (9)) that shows the real-time sensor values
    in a display (Fig. 3 (10)). DashBoard has a built-in calibration table to correct
    aging sensors [4]. Traditionally, aged sensors were calibrated in the laboratories
    manually or semi-automatically. Conversely, SensorTalk automatically calibrates
    the sensors under test by the standard sensors in fog/edge farming nodes directly.
    The reader is referred to Fig. 2 in [4] for more details. To address Issue 4,
    we developed DataTalk (Fig. 2 (13)) by creating the DataBank device model (with
    the features Data-O in (12) and Data-1 in (13) in Fig. 3). In this way, all AgriTalk-FEs
    can access the AgriTalk DB System (Fig. 2 (4)) and manage the database as an IoT
    device. Data-O of DataBank receives data from the sensors through (6) → (12) in
    Fig. 3. DataBank also receives data from open datasets stored in the AgriTalk
    DB system through (4) → (20) in Fig. 2. The received data may be pre-processed
    and then stored in a DataBank device for future usage. We use the rice blast detection
    [13] as an example to show how DataTalk works. The commercial farm operation indicated
    that image detection of rice blast is not practical (it is too late when you detect
    rice blast in an image). Therefore, we utilized non-image IoT devices to detect
    conditions leading to rice blast. The non-image data are the weather data (including
    the barometric pressure, the temperature and the relative humidity) obtained from
    the database of Central Weather Bureau in Taiwan and the real-time data of the
    AgriTalk sensors from the micro weather stations we established at 4 farm locations.
    We found that high spore germination rate for various fungi may cause rice blast
    disease. Therefore, it is also important to obtain information of spore germination
    rate that is affected by the temperature χ T and the relative humidity χ H . We
    designed a specific spore germination rate function for every farm field computed
    locally at its fog/edge node (an AgriTalk-FE). For example, in a Bao Mountain
    farm, the function is f T ( χ T , χ H )=0.1143×(0.27−0.0078 χ 3 T +0.28 χ 2 T
    + 1.67 χ T ) e 6.6 χ H (2) View Source Figure 4. Arduino MCU mapping for a greenhouse.
    Show All This function is derived from a bio regression model [13] and was implemented
    in a DataBank device through the DataTalk GUI (Fig. 2 (14)). In the rice blast
    AI model, three features – χ T ,  χ H , and f T ( χ T ,  χ H ) - are sent from
    DataBank (Fig. 3 (13)) to Almodule (Fig. 3 (15)). The subtle way we manipulate
    χ T , χ H and f T ( χ T ,  χ H ) significantly improves the accuracy of the rice
    blast prediction, which is 89.4 percent, the world record for non-image sensing
    [13]. Thanks to the “plug-in” module approach of AgriTalk-FE, any FE-Talk can
    be independently developed without any data preprocessing capability, and can
    easily connect to DataTalk for online database access and operation later. The
    rice blast detection was conducted at fourteen counties in Taiwan through fog/edge
    computing, where rice blast detection of a county is conducted by an AgriTalk-FE.
    To address Issue 5, we develop Altalk [6] (Fig. 2 (15)) by creating the Almodule
    device model (with the features Label-O in (14), Feature-O in (15) and Prediction-1
    in (16) in Fig. 3). Like the DataTalk approach, Almodule is manipulated as an
    IoT device. Therefore Altalk can rapidly extend existing IoT applications into
    AI-based smart applications [10]. Upon receiving the data from DataBank, Almodule
    performs feature extraction. The extraction method is selected through the Altalk
    GUI (Fig. 2 (16)), which extracts the data characteristics to form a feature vector.
    The feature vectors as well as the labels obtained from, for example, the remote
    control (Fig. 3 (17)) are used for training. We have ported scikit-learn, Tensor
    Flow, Flux, and other AI tools to Altalk, and the developer can select an appropriate
    tool for AI modeling. Through an appropriate ensemble method, the best prediction
    result is used to activate the actuators. The results are also used to improve
    the accuracy of prediction by conducting validation that provides better hyper-parameter
    setups for Almodule. Through the path (16) → (9) → (10) in Fig. 3, useful statistics
    are displayed for the developer to adjust the machine learning model. Like DataTalk,
    every FE-Talk can be independently developed without AI, and can easily connect
    to Altalk for online AI training and inference later. Figure 5. Maptalk and the
    fog/edge applications. Show All AgriTalk-C: Integration of Cloud and Fog/Edge
    Domains If fog/edge computing involves multiple countries, then Issue 6 (data
    privacy) is a major concern. For example, the current AgriTalk operation includes
    the sites (AgriTalk-FEs) in several countries. These AgriTalk-FEs are managed
    under AgriTalk-C in Chunghwa Telecom''s cloud in Taiwan. Our operation faces the
    problem that the General Data Protection Regulations (GDPRs) are not the same
    for every country. To fit an IoT-FE application to different GDPRs, existing approaches
    require significant efforts to modify the IoT-FE application. To address Issue
    6, the data privacy requirement of an FE-Talk in AgriTalk-FE is set in the Authentication,
    Authorization and Accounting (AAA) subsystem (Fig. 2 (17)) without changing the
    code of the FE-Talk application. Specifically, every IoT message delivered in
    a Join link has a privacy tag to indicate the privacy level of the delivered data.
    A smart application may need to set different privacy levels according to different
    users'' authorization for hiding information in IoT messages. In smart farming,
    a control message sent from a smartphone with a low privacy level cannot trigger
    the irrigation pump. According to the GDPRs of different countries, Personally
    Identifiable Information (PII) and user behavior history should be protected,
    which can be achieved by the AAA subsystem. The details of the tag mechanism are
    out of the scope of this article and the details can be found in [10]. The AgriTalk-C
    server has the same structure as an AgriTalk-FE. All farmer accounts can be managed
    in the AgriTalk-C AAA (Fig. 2 (18)) with single sign-on, where the farmer''s access
    right to a specific AgriTalk-FE is granted through the path (18) → (5) → (8) →
    (17) in Fig. 2. Therefore, the farms in different countries are supported by their
    AgriTalk-FEs with different GDPRs, and these AgriTalk-FEs are monitored by AgriTalk-C
    at the same time. The AgriTalk-C engine controls an AgriTalk-FE through the path
    (5) → (8) in real-time following the same protocol as that for the control path
    to an IoT device ((5) → (1) in Fig. 2). Before an edge/fog node (a new AgriTalk-FE)
    is allowed to join AgriTalk, SimTalk of AgriTalk-C conducts validation and performance
    tests on the AgriTalk-FE through the path (19) → (5) → (8) → (9) in Fig. 2. The
    DataTalk subsystems of individual AgriTalk-FEs (Fig. 2 (13)) and AgriTalk-C (Fig.
    2 (20)) interact with each other indirectly through the database operations on
    the AgriTalk DB System (Fig. 2 (4)). If an AI model is used in an FE-Talk, the
    AI model can be trained in the cloud (AgriTalk-C) and AI inference is performed
    in the edge/fog node (AgriTalk-FE). AgriTalk-C sends model parameters to an AI
    execution engine already installed on the AgriTalk-FEs. The training datasets
    may be generated by the FE-Talk and saved in the AgriTalk DB System. The data
    path for AI training is (4) → (20) → (5) → (21) in Fig. 2. The trained model is
    sent to the AgriTalk-FE through the path (21) → (5) → (8) → (15). Then AI inference
    is performed at the edge/fog node through the path (9) → (8) → (13) → (8) → (15)
    → (8) → (9). Integrated Operations Center (IOC): MapTalk The fog/edge nodes in
    a distributed farming system should be managed in an organized way so that the
    farm owners can conveniently access the applications. In AgriTalk-C, we have developed
    an IOC called MapTalk (Fig. 2 (22) and (23)) based on Google Maps. MapTalk is
    an application FE-Talk. Compared with a traditional IOC [14], the MapTalk user
    can transparently add the IoT devices to the IOC without any programming effort
    while a traditional IOC requires a professional system integrator to modify the
    IOC software. MapTalk shows the location and the status of every farming device
    and allows a farmer to interact with these devices through their cyber representations
    on the map. MapTalk can be displayed in a big screen like traditional IOCs. Furthermore,
    one can also access MapTalk from everywhere through any computing device with
    a browser. The GUIs of all AgriTalk-FEs are managed by MapTalk and can be accessed
    through the “App” pull-down list in the MapTalk GUI, where the layout is illustrated
    in Fig. 5 (1). When the user selects an application item, for example, “CO2” of
    the farms managed as fog/edge nodes (Fig. 5 (2)), the status of every CO2 sensor
    is shown on the map. The IoT devices in MapTalk can be stationary or movable.
    The icon of a stationary IoT device is placed at the map according to its GPS
    coordinates. The stationary examples are “PM2.5” (Fig. 5 (4)), “Germany Power
    Plants” (Fig. 5 (5)) and “Taiwan Farms” (Fig. 5 (6)). The icon of a movable IoT
    device is dynamically placed at its current position of the map. An example is
    the “Bus” application (Fig. 5 (7)) that shows the status of an individual bus
    or all buses. Fig. 5 (8) is “Bus 2” with a pink tail representing its one-hour
    trajectory. The “Bus” application can be transparently reused by AgriTalk to manage
    the cultivators and the tractors in the farms. There are two types of stationary
    applications: map-type and hybrid-type. “PM2.5” and “Germany Power Plants” are
    map-type applications. When we select “Germany Power Plants” from the App list,
    a map for this application pops up with a dedicated function bar to select various
    sensors, such as generated power, wind speed, temperature, and humidity of a power
    plant (Fig. 5 (5)). We are reusing “Germany Power Plants” to implement AgriTalk-FEs
    for agro-photovoltaics applications. “Taiwan Farms” is a hybrid-type application.
    When this application is selected from the App list, all farm icons are shown
    on the map. When we click a farm icon (Fig. 5 (9)), a dialog box (Fig. 5 (10))
    pops up. From this dialog box, we may select specific hyperlinks to see the sensor
    dashboard and the farm control board (including video; see Fig. 5 (11)). Examples
    of dashboard/control board are given in Fig. 3 (10), (18), (21) and Fig. 6. The
    name of the person who maintains this application is also listed (in Chinese;
    see Fig. 5 (12)). Adding an IoT-FE application to MapTalk is achieved through
    the MapTalk project created from the GUI of AgriTalk-C (Fig. 2 (24)), which shows
    the locations of the IoT devices in the digital map (through Display-O in Fig.
    3 (9)). To add a map-type application, we create a “Sensors” device (for example,
    “Germany power plants”; see Fig. 3 (6)) in the MapTalk project, and connect them
    through the path (23) → (22) → (5) → (8) → (9) in Fig. 2. We use the “Routing-with-obstacles”
    application to illustrate how multiple IoT-FE applications (path routing, PM2.5
    and CO2 applications) can interact with each other to create new functions through
    MapTalk. When we select the “Routing” application, MapTalk suggests a driving
    route from the starting point to the endpoint (Fig. 5 (3)). If we select “PM2.5”
    as obstacle, then MapTalk suggests another route to avoid passing through the
    PM2.5 pollution areas (Fig. 5 (4)). We are reusing this routing application to
    implement an AgriTalk-FE that guides automatic tractor movement in irregular-shaped
    farm fields with obstacles. MapTalk was originally designed for managing general
    smart applications. Some of these applications such as “Bus,” “Germany Power Plants”
    and “Routing-with-obstacles” are being reused in AgriTalk-FE without any code
    modification. MapTalk provides a low-code no-code approach to manage the fog/edge
    nodes in an IOC. Pigtalk as a Fog/Edge Computing Example Through the AgriTalk-FE
    platform, we have built more than 20 FE-Talks applications. As a controlling-IoT
    example of fog/edge computing, this section describes PigTalk, an intelligent
    system for piglet crushing mitigation. Figure 6. Pig talk control board accessed
    through maptalk. Show All Many piglets die on pig farms because they are crushed
    when sows roll sideways or lie down. PigTalk was proposed to resolve the piglet
    mortality issue [15], which uses a DataBank device to transform the voice data
    into audio clips. These audio clips serve as the input of the Convolutional Neural
    Network (CNN) model. Through real-time analysis of the voice data collected in
    a farrowing house from a directional microphone (Fig. 6 (1)), PigTalk detects
    if any piglet screaming occurs, and automatically activates sow-alert actuators
    such as heating light (Fig. 6 (2)) for emergency handling of the crushing event
    (light heating effectively forces the sow to stand up). The whole process is remotely
    monitored by the hog farmer through the camera in the farrowing house (Fig. 6
    (3)). The PigTalk configuration can reuse the “Project” configuration in Fig.
    3 where the micro weather station (Fig. 3 (3)) is replaced by the microphone,
    the irrigation system (Fig. 3 (7)) is replaced by the heating light, and the farm
    camera (Fig. 3 (20)) is replaced by the camera in the farrowing house. The raw
    voice data received from the microphone (Sensor-I in Fig. 3 (6)) are sent to DataBank
    (Fig. 3 (12)) to produce the audio clips. These audio clips are further modified
    by min-max scaling in feature extraction. Then the CNN model is used as the machine
    learning algorithm (Fig. 3 (15)). Finally, the k-fold cross validation is conducted
    to validate the model, and the predicted result is used to determine if the heating
    light (Fig. 3 (8)) should be activated. Through fog/edge computing, PigTalk can
    save piglets from being crushed within 0.05 seconds with a 99.93 percent success
    rate. The PigTalk system consists of several farrowing houses, each of which is
    an AgriTalk-FE (called PigTalk-FE). In a PigTalk-FE, the control path for piglet
    crushing avoidance is (6) → (12) → (13) → (15) → (16) → (8) in Fig. 3, where the
    control message is delivered locally through Asymmetric Digital Subscriber Line
    (ADSL) with the delay tA. A PigTalk-FE communicates with the PigTalk AgriTalk-C
    (called PigTalk-C) through the 4G technology. With the AgriTalk-FE GUIs accessed
    from MapTalk of PigTalk-C, we remotely observe pig activities of all farrowing
    houses within the delay tG. The delay tG in the cloud domain is about twice the
    delay t A in the fog/edge domain for other AgriTalk applications. In cloud computing,
    t A = t G . It is clear that t G is much larger than t A , and piglet crushing
    avoidance should be implemented locally as fog/edge computing instead of cloud
    computing. We enhanced the scream detection accuracy of the existing best solutions
    (up to 92.8 percent). With data pre-processing and subtle parameter setups of
    the CNN model, the piglet scream detection accuracy of PigTalk is up to 99.4 percent.
    Through fog/edge computing, PigTalk can save piglets from being crushed within
    0.05 seconds with a 99.93 percent success rate. Conclusion This article proposed
    the fog/edge approach for AgriTalk, an IoT application development platform for
    smart agriculture. By integrating cloud with edge/fog, we described how AgriTalk
    addresses six issues including device domain development, application generation
    and verification, sensor failure detection and calibration, big data management,
    AI provisioning, and data privacy. We showed how AgriTalk integrates its fog/edge
    applications called FE-Talks, and used rice blast detection and piglet crushing
    avoidance as two examples to indicate that fog/edge computing is a much better
    solution than cloud computing, where the delays can be reduced by 50 percent.
    In our solution, the non-agriculture applications in MapTalk can be transparently
    translated into smart agriculture applications. The examples include the cultivators
    and the tractors management, and agro-photovoltaics applications. Through the
    low-code no-code approach, AgriTalk and MapTalk allow the farmers to create and
    maintain FE-Talks by themselves in the fog/edge computing environment. ACKNOWLEDGMENT
    This work was supported in part by the National Science and Technology Council
    (NSTC) 112-2221-E-033-023, 112-2221-E-468 -005 -MY2, 111-2221-E-468 -012, 110-2622-8-A49-022,
    NSTC112-2221-E-A49-049, NCKU Miin Wu School of Computing, Research Center for
    Information Technology Innovation, Academia Sinica. Authors Figures References
    Citations Keywords Metrics More Like This Artificial Intelligence and Internet
    of Things for Sustainable Farming and Smart Agriculture IEEE Access Published:
    2023 Analysis of Internet of Things based Artificial Intelligence in Agriculture
    Fertilizer Process Management 2023 2nd International Conference on Automation,
    Computing and Renewable Systems (ICACRS) Published: 2023 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Communications Magazine
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Moving from Cloud to Fog/Edge: The Smart Agriculture Experience'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kaur G.
  - Bhattacharya M.
  citation_count: '1'
  description: In today's era, the artificial intelligence of things (AIT) has revolutionized
    every sphere of human life. Artificial intelligence (AI) approaches can effectively
    manage the heterogeneity of IoT devices. The applications of AIT are seen in various
    verticals, including smart homes/offices, smart factories, Industrial IoT, precision
    agriculture, etc. In particular, AIT has been a huge asset to the farming sector.
    Smart farm monitoring requires a huge number of sensors deployed in the monitoring
    field that measure various physical parameters such as humidity, soil moisture,
    temperature, etc. However, the main challenge is to handle the vulnerability of
    sensor node failure due to any natural calamity. This leads to the malfunctioning
    of sensor modules, which degrades the performance of the network. Also, sensor
    nodes are battery-limited. It is difficult to recharge and replace the sensors
    frequently. This article proposes an AI-based hyperparameter-Tuned least square
    support vector machine (HT-LS-SVM) for fault diagnosis that detects faults with
    high accuracy. Also, it proposes mobile sink that applies reinforcement learning
    (RL)-based algorithm to perform obstacle-Aware path planning. This algorithm adds
    self-learning capability to the mobile sink, which makes the system autonomous
    and improves network lifetime significantly. The simulation and testbed results
    depict the outperformance of the proposed scheme in terms of false detection accuracy
    (FDA), false alarm rate (FAR), false-positive rate (FPR), F1 score, network lifetime,
    latency, and energy consumption.
  doi: 10.1109/JSEN.2023.3321417
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Sensors Journal >Volume:
    23 Issue: 22 Intelligent Fault Diagnosis for AIT-Based Smart Farming Applications
    Publisher: IEEE Cite This PDF Gagandeep Kaur; Mahua Bhattacharya All Authors 1
    Cites in Paper 236 Full Text Views Abstract Document Sections I. Introduction
    II. Related Work III. System Model IV. Proposed Scheme V. Simulation Results Show
    Full Outline Authors Figures References Citations Keywords Metrics Abstract: In
    today’s era, the artificial intelligence of things (AIT) has revolutionized every
    sphere of human life. Artificial intelligence (AI) approaches can effectively
    manage the heterogeneity of IoT devices. The applications of AIT are seen in various
    verticals, including smart homes/offices, smart factories, Industrial IoT, precision
    agriculture, etc. In particular, AIT has been a huge asset to the farming sector.
    Smart farm monitoring requires a huge number of sensors deployed in the monitoring
    field that measure various physical parameters such as humidity, soil moisture,
    temperature, etc. However, the main challenge is to handle the vulnerability of
    sensor node failure due to any natural calamity. This leads to the malfunctioning
    of sensor modules, which degrades the performance of the network. Also, sensor
    nodes are battery-limited. It is difficult to recharge and replace the sensors
    frequently. This article proposes an AI-based hyperparameter-tuned least square
    support vector machine (HT-LS-SVM) for fault diagnosis that detects faults with
    high accuracy. Also, it proposes mobile sink that applies reinforcement learning
    (RL)-based algorithm to perform obstacle-aware path planning. This algorithm adds
    self-learning capability to the mobile sink, which makes the system autonomous
    and improves network lifetime significantly. The simulation and testbed results
    depict the outperformance of the proposed scheme in terms of false detection accuracy
    (FDA), false alarm rate (FAR), false-positive rate (FPR), F1 score, network lifetime,
    latency, and energy consumption. Published in: IEEE Sensors Journal ( Volume:
    23, Issue: 22, 15 November 2023) Page(s): 28261 - 28269 Date of Publication: 09
    October 2023 ISSN Information: DOI: 10.1109/JSEN.2023.3321417 Publisher: IEEE
    Nomenclature AbbreviationExpansion Notations Meaning Ω Distance between transmission
    range. Ω o Threshold distance. E elec Transmitting circuit loss. ϵ efs Free space
    energy model. j∈N Set of sensors. p∈P Set of RPs. m p Total weight at R P j .
    R Maximum range of RP. Ex(rw)t Maximized expected reward. rw Reward. Γ Discount
    factor. S t Current states. A t Current action. r w t Reward value. S t+1 Next
    state. α Learning rate. Q π (s,a) Q -value for the given state. E π Discounted
    reward for the given state. QM Q -matrix. x∈D Candidate solution x in domain D.
    y=f(x) Objective function. x∗ Best solution found so far. ϕ(x) Feature map. C
    Regularization parameter. σ Parameter on which distribution complexity depends.
    ξ i Slack variables. TP Real faulty nodes that are recognized as faulty. TN Real
    non-faulty nodes that are recognized as non-faulty. FP Real non-faulty nodes that
    are recognized as faulty. FN Real faulty nodes that are recognized as non-faulty.
    SECTION I. Introduction A recent report states that the smart farming sector will
    reach $ 8.42 Billion by 2027 [1]. This means that cutting-edge smart technologies
    like the Internet of Things (IoT), artificial intelligence (AI), etc., will be
    adopted more widely. A survey by McKinsey revealed that by 2030, the AI of things
    (AIT) could generate a massive $ 5.5– $ 12.6 trillion in global economic value
    [2]. The increase in IoT technology thereby increases the demand for sensors for
    agriculture industry applications [3]. Smart farming has effectively impacted
    the traditional food supply chain and agriculture business model by including
    big data analytics and real-time decision-making that provides useful insights
    [4]. Smart farming has been adopted worldwide and has revolutionized crop production
    by adding numerous benefits. Although advanced IoT technology has benefited the
    productivity of the agricultural industry immensely, there are various risks associated
    with reliable communication among the sensors in the smart farming environment.
    The IoT system is capable of collecting data from various “things.” The sensors
    are embedded in the “things” to add sensing capability. These “things” with embedded
    sensors communicate in wireless mode to gather useful information, forming a network.
    Such a network is termed a wireless sensor network. Wireless sensor networks form
    the backbone of the IoT [5]. However, there are certain challenges in smart farming
    environments, such as highly complexity, with diverse obstacles and unpredictable
    conditions. First, the complexity in such an environment is that battery-limited
    sensors cannot be recharged or replaced frequently. The data collected from these
    sensor nodes needs to be routed to the base station (BS). As the sensor nodes
    have limited batteries, the multihop data communication drains extra energy and
    requires huge data delivery times. Second, smart farming environments can have
    various obstacles and unpredictable conditions. These unpredictable conditions
    may lead to the hardware failure of sensor nodes. The fault in sensor nodes are
    broadly of two kinds, namely hard fault and soft fault [6]. The hard fault occurs
    in the sensor module if failure of any of the units occur, such as microcontroller,
    transmitter, and battery. In hard faults, the sensor loses the capability to send
    or receive information. Another kind of fault is a soft fault were the readings
    generated by sensor nodes turn erroneous [7], [8]. Hence, mobile sinks are introduced
    to detects such faults and collects the data by avoiding obstacles on the route.
    Also, mobile sinks reduce the burden on energy-constrained sensor nodes, which
    enhances the network’s lifetime. Rendezvous points (RPs) are sojourn points required
    for efficient path planning of mobile sinks. The mobile sink visits RPs for data
    collection from the monitoring field. Also, the judicious selection of RPs is
    required to efficiently collect the data and reduce the data delivery time [9].
    Third, in smart farming environment, sensors collect various heterogeneous physical
    parameters such as temperature, pressure, voltage, etc. The heterogeneous data
    values may be scalars, time series, etc. The challenges faced while processing
    such heterogeneous data may include uncertainty, imprecision, and incompleteness.
    The AI techniques are capable of processing and handling heterogeneous data collected
    from sensors. AI can solve complex problems and adds intelligence to real-world
    applications such as finance, agriculture, healthcare [10], [11], etc. The motivation
    of this article is to resolve the aforementioned challenges through AI-based techniques.
    In this article, AI-based algorithms are applied on mobile sinks that reduce the
    burden on sensor nodes. AI-based reinforcement learning (RL) provides obstacle-aware
    path planning for mobile sinks. Also, an AI-based LS-SVM technique is applied
    to the mobile sink to detect faults in the sensor nodes. Deployment of AI algorithms
    on mobile sink is feasible and enhances the network’s longevity and reliability.
    This has positive impact on the quality of service (QoS), crop output, effective
    monitoring, management of irrigation, pesticide use, and other crucial tasks necessary
    in smart farms. The major contribution of this article is as follows. The article
    presents AI-based RL for fault-tolerant data collection by an intelligent mobile
    sink that improves network reliability and longevity. Also, the article proposes
    obstacle-aware intelligent mobile sink path planning that enhances the network
    lifetime and reduces the latency of a smart farming environment. Furthermore,
    the article presents an AI-based hyperparameter-tuned least square support vector
    machine (HT-LS-SVM) for fault diagnosis, which improves fault detection accuracy
    and F1-Score significantly. Extensive simulation and outdoor testbed experiments
    are performed to validate the performance of the proposed scheme against other
    state-of-the-art algorithms. The article is organized as follows. Section II describes
    the related work. Section III presents the proposed system model. The proposed
    scheme is explained in Section IV. Section V describes the performance analysis
    of the proposed work. Section VI concludes the article. SECTION II. Related Work
    This Section discusses the state-of-the-art smart farming and fault diagnosis
    approaches in sensor networks. Tong et al. [12] proposed a fault-tolerance mechanism
    based on the Markov model in a smart environment. In this mechanism, dynamic timing
    monitoring is used to detect faults. However, this mechanism suffers from poor
    reliability. Mahmood et al. [13] proposed a machine learning approach-based fault
    detection mechanism in sensor networks. Maivizhi and Yogesh [14] proposed a Q
    -learning-based fault-tolerant routing mechanism in sensor networks. The main
    disadvantage of this approach is that it suffers from poor fault detection accuracy.
    Chaudhary et al. [15] proposed reactive fault detection and classification (RFDC)
    clustering scheme for fault detection. In this approach, correlations between
    the sensed data are used to diagnose the faults. However, it suffers from poor
    reliability. Kumar and Rao [16] proposed an optimal emperor penguin optimization
    (OEPO) for fault diagnosis in wireless sensor networks. In this approach, optimization
    is applied to the flower pollination algorithm to achieve better fault detection
    capability. However, the limitation of this approach is heavy computational cost
    and poor network lifetime. Pankajavalli and Karthick [17] proposed a paired fault-tolerant
    approach. In this approach, efficient free Poisson Law based on data Flow graph
    modeling is proposed for fault tolerance (EPLFT) in a smart environment. Dhiman
    et al. [18] proposed a twin support vector machine (TWSVM)-based wind turbine
    gearbox anomaly detection in smart farms. The key drawback of this approach is
    poor fault detection accuracy. Thorat et al. [19] proposed a machine learning
    and computer vision method for pest identification and insecticide recommendation
    for smart farming. Zou et al. [20] presented current research on sensor fault
    diagnosis in the agricultural IoT based on AI and deep learning approaches. However,
    the techniques are applied on resource-constrained sensors. This increases the
    load on sensors and reduces the network’s lifetime. Fan et al. [21] proposed hybrid
    particle swarm optimization (PSO) to optimize the initial weights and biases of
    the back propagation neural network (BPNN) for fault detection in WSNs. However,
    it is complex and has poor fault-detection accuracy. The existing state-of-the-art
    mechanisms do not consider obstacle-aware fault diagnosis using intelligent mobile
    sinks for data gathering, which degrades the performance of a network. This negligence
    degrades the QoS in real-life applications such as smart farming [19]. Also, the
    existing approaches do not address network lifetime and reliability [21]. Furthermore,
    the emphasis is not on an efficient obstacle-aware fault diagnosis path mechanism
    for the mobile sink, which leads to poor data collection latency. SECTION III.
    System Model Let n number of sensor nodes be deployed randomly in the L×L[ m 2
    ] smart farming environment. Let O number of obstacles are present in the monitoring
    area, where O≪n . The sensor nodes and obstacles are randomly deployed in the
    monitoring field. Sensor nodes have limited energy and computational capacity.
    The mobile sink is assumed to have more energy as compared to the normal sensor
    node. The BS is static and has infinite energy. The radio model similar to [15]
    is developed to describe the energy consumption of the sensor node. Communication
    among sensor nodes is established only if the distance among sensor nodes is less
    than their transmission range. The energy required for transmitting ω bits of
    data over distance Ω is E (tx) . E (tx) is calculated as follows: E (tx) (ω,Ω)={
    ω× E elec + ϵ efs × Ω 2 , ω× E elec + ϵ amp × Ω 4 , Ω< Ω o Ω≥ Ω o . (1) View Source
    Energy required for receiving of ω bits of data over distance Ω is E (rx) which
    is calculated as follows: E rx (ω)= E elec  ×Ω. (2) View Source The threshold
    distance between sensor node is calculated as follows: Ω 0 = ϵ efs ϵ amp − − −
    − √ . (3) View Source Nomenclature describes the list of symbols used in this
    article. SECTION IV. Proposed Scheme The proposed scheme for fault diagnosis in
    the smart farming environment is described in this section. A. Intelligent Obstacle-Aware
    Data Gathering Phase for Smart Farms In this phase, mechanisms are proposed to
    select the optimal number of RPs and then calculate the optimal path for mobile
    sink for data gathering in smart farms. Algorithm. 1 is the pseudocode of obstacle-aware
    path planning for intelligent mobile sink in smart farms. In this mechanism, aim
    is to maximize the number of sensor nodes that covers a single RP. The objective
    function is formulated as follows: Max ∑ p∈P m p Z p s.t.Constraint 1: ∑ j∈N l
    j =Th Constraint 2: ∑ j∈ N j l j ≥ Z p ∀p∈P Constraint 3: l j , Z p ∈{0,1}∀j∈N∀p∈P.
    (4) (5) (6) (7) View Source Constraint 1 puts a restriction on the number of sensors,
    Constraint 2 promises maximum coverage by each RP, Constraint 3 restricts to binary
    values, where N j is {j∈N∣ D jrp ≤R} l j = Z p = { 1, 0, a S N i is at location
    j otherwise  { 1, 0, Ppis assigned to a S N i otherwise. View Source Algorithm
    1 Obstacle-Aware Path Planning for Intelligent Mobile Sink in Smart Farms Show
    All Anything that blocks the communication between the sensor nodes are considered
    as obstacles such as large size rocks, soil heap, big size trees, etc. Obstacles
    are considered of polygon-shaped that are opaque to the signals that are transmitted
    by the sensors [22], [23]. In this article, triangulation technique is used as
    shown in Fig. 1 to detect obstacles in the monitoring field [24]. In Fig. 1(b)
    There are 15 sensor nodes and two obstacles shown in polygon shapes. The green
    points in Fig. 1(c) represents the RPs through which mobile sink travel to collect
    the data. Initially, the sensor nodes transmits a READY message within its transmission
    range. The READY message contains the sender node ID, sender’s x - and y -coordinate.
    If sensor node receives the READY message, then it replies with the SET message.
    The SET message contains the receiver node ID, receiver’s x - and y -coordinate.
    If the sensors nodes are unable to communicate the above messages within the line
    of sight of the communication path, it confirms the presence of an obstacle. The
    Mobile sinks visit all RPs by choosing the optimal path using the RL mechanism.
    The St state in the RL is the initial location of the mobile sink, and Act is
    the action taken by the mobile sink which is acting as an agent. The mobile sinks
    travel the tour by visiting each RPs ∈ ( P 1 , P 2 , P 3 ,…, P p ). For each time-step,
    the mobile sink (agent) takes action to earn rewards and change its state from
    old to new. The states here are referred to as RPs. The main objective of agent
    is to earn the maximize the expected reward until the optimal path is found which
    is formulated as follows: Ex(rw ) t Ex(rw ) t =r w (t+1) +Γr w (t+2) + Γ 2 r w
    (t+3) +⋯ = ∑ k=0 ∞ Γ k r w (t+k+1) . (8) (9) View Source Fig. 1. Obstacle avoidance
    optimal fault detection tour planning mechanism for 15 nodes. (a) Triangulation
    without obstacles. (b) Triangulation with obstacles. (c) Obstacle-aware tour through
    RPs. Show All Equation (9) is the maximized expected reward. The range of Γ value
    lies between 0 and 1. When the value of Γ is close to zero, then the agent put
    its effort more on the immediate reward (IR). RL is a self-learning approach in
    which mobile sink applies a series of actions to achieve expected rewards (Fig.
    2). Based on a policy agent gets a reward which are Q values for taking optimal
    actions. Furthermore, the agent updates the Q -values by using the formula given
    below Q( S t , A t )=Q( S t , A t )+α(r w t+1 +Γ max a Q( S t+1,a ) −Q( S t ,
    A t ) ). (10) View Source The max optimal possible action is calculated by the
    equation given below A t =Γ max a Q( S t+1,a ). (11) View Source The Bellman equation
    is defined as follows: Q π (s,a)= E π [r w t+1 +Γr w t+2 + Γ 2 r w t+3 +⋯∣ S t
    =s, A t =a]. (12) View Source Fig. 2. Reinforcement learning. Show All The IR
    ( I ) is calculated based on distance between two RPs (x,y) given by I= 1 D xy
    (s,a) . (13) View Source The maximum reward M for the given policy is formulated
    as M=maxQM(s,a). (14) View Source The updated Q -matrix( QM ) is defined as QM=QM+α⋅(I+
    α ′ ⋅M−QM). (15) View Source The optimal path is calculated based on the QM by
    the mobile sink. When the mobile sink reaches a particular RP following the optimal
    path obtained by RL, it broadcasts a message for data uploading DUMsg. The DUMsg
    is broadcasted in the transmission range of the mobile sink. The DUMsg constitutes
    the ID of the mobile sink and location information. If the sensor nodes receive
    the DUMsg, it reply with RepMsg. The RepMsg constitutes ID of sensor nodes, flag
    value, and location information. If value of flag is set to 1, it indicates the
    presence of obstacles. This helps the Mobile sink to travel obstacle-aware path.
    Also, sensor node checks its buffer condition. If the buffer is empty, then it
    discards the DUMsg, otherwise, it sends the data. The agent collects the data
    from the current RP and looks for the next RP using self-learning. The mobile
    sink collects the data from the optimal RPs selected from the proposed mechanism.
    Thus, if the sensor nodes that are covered by a respective RP turn faulty, it
    can efficiently tolerate the fault. This is due to the fact that sensors that
    are spatially correlated transmit the same sensor reading data. Also, RL has self-learning
    capability and routes the data from nonfaulty nodes, which offers smooth communication
    within the smart farming environment. B. Intelligent Fault Detection Phase for
    Smart Farms In this phase, sensor faults are detected. The sensor nodes are considered
    as hard faulty if they lose the capability to send or receive information. Also,
    the sensor nodes are considered soft faulty if the readings generated are erroneous.
    The various soft faults considered in this article are namely gain fault, offset
    fault, stuck-at-fault, out-of-bounds, random fault, and spike fault. In gain fault,
    the faulty reading (Gain-faultyread) is a gain in the value of the original sensed
    reading observed. It is defined as follows: Gain-faulty read = Original read α+η
    (16) View Source where Gain-faultyread is the faulty reading and Originalread
    is the original reading. α and η are constants. In offset fault, the faulty reading
    (Offset-faultyread) is observed as an addition of some constant value β p . It
    is defined as follows: Offset-faulty read = β p + Original read +η. (17) View
    Source In Stuck-at-fault (Stuck-faultyread), the fault in the reading is observed
    when value remains nil for long duration T . It is defined as follows: Stuck-faulty
    read = Original rea d T 1 ,…, T j (18) View Source where t 1 ,…, t j are constant
    readings for long duration t . In out-of-bounds fault (OutofBound-faultyread),
    the fault in the reading is observed when reading fluctuates between the certain
    limits. It is defined as follows: OutofBound-faulty read > ϕ 1 or  OutofBound-faulty
    read < ϕ 2 (19) View Source where, data reading fluctuates between [ ϕ 1 to ϕ
    2 ]. Algorithm 2 describes the pseudocode for intelligent fault detection mechanism
    in smart farm environment. The mobile sink visits each optimal RP and collects
    the data from the sensor nodes lying under its transmission range in a time frame
    F=( T 1 , T 2 , T 3 ,…, T q ) . The data collected for instance D T 1 is ( D 1,
    T 1 , D 2, T 1 ,…, D z, T 1 ) . Similarly, the data reading collected by MS for
    whole time frame DF={( D 1, T 1 , D 2, T 1 ,…, D z, T 1 ),…, ( D 1, T q , D 2
    , T q ,…, D z, T q )}. (20) View Source The sensor values collected DF are classified
    into either faulty or nonfaulty. In the proposed fault detection mechanism, this
    classification is performed using a HT-LS-SVM classifier. The HT-LS-SVM is used
    due to its capability to classify the nonlinear inseparable data accurately. Algorithm
    2 Intelligent Fault Detection Mechanism in Smart Farm Environment Show All The
    LS-SVM is mathematically modeled as follows: y(x)= w T Φ(x)+b. (21) View Source
    The LS-SVM optimization problem is given by minJ(w,ξ)= 1 2 ∥w ∥ 2 + 1 2 C ∑ i=1
    l ξ 2 i s.t. y i = w T Φ( x i )+b+ ξ i i=1,…,l. (22) (23) View Source The linear
    equations formed after transforming optimization problem is given by [ 0 1 l×1
    1 T l×1 Ω+ C −1 I ][ b α ]=[ 0 y ] (24) View Source where y 1 l×1 I Ω Ω ij = [
    y 1 , y 2 , y 3 ,…, y l ] T =[1,1,…,1 ] T =diag[1,1,…,1] = { Ω ij } l×l =Φ( x
    l )Φ( x j ). (25) (26) (27) (28) (29) View Source The kernel makes the training
    data linearly separable. In this article, the radial basis kernel function (RBF)
    is considered which allows the separation of nonlinearly separable data. It is
    formulated as K( x i ,x)=exp( − | x i −x| 2 2 σ 2 ). (30) View Source The LS-SVM
    classification hyperplane is formulated as y(x)=sgn[ ∑ i=1 l α i y i K( x i ,x)+b].
    (31) View Source In this article, random search is used to find the optimal hyperparameter
    values which are less complex than other meta-heuristic-based optimization techniques
    and provides better accuracy results. Random search is a simple optimization algorithm
    that involves randomly generating candidate solutions and evaluating them to find
    the best solution. In this article, cross-validation-based random search for hyperparameter
    tuning of LS-SVM is used. In the proposed scheme, LS-SVM utilizes a random search
    technique to optimize C and σ in LS-SVM. The lower bound (LB) and upper bound
    (UB) of C lies between [2−2, 215] and σ lies between [2−15, 23]. The dataset is
    split into k stratified divisions each time a tuning approach is applied. For
    each potential solution identified by the method, LS-SVM is trained using k -1
    partitions (training folds), one for testing (test fold) Fig. 3. The model created
    using the training partitions and the hyperparameter values discovered using the
    optimization technique is used to evaluate the test accuracies. In random search,
    this procedure is done for each of the k permutations Tt← T i , T tr ←{T∣ T i
    } (32) View Source where T t is test data and T tr is training data. The model
    M is trained on training data T tr . The testing data Tt is used periodically
    to assess the model performance which is formulated as E j t (i)=error( M j (
    T t )). (33) View Source Fig. 3. Proposed flowchart for HT-LS-SVM-based fault
    detection. Show All The performance of the model is evaluated by E j t = 1 k ∑
    i=1 k E j t (i). (34) View Source The fitness value is then calculated using the
    average test accuracy, and this value will be used to direct the search. Thus,
    the fault status of each sensor node is achieved. SECTION V. Simulation Results
    The network simulation is performed in ns 2.35. The results of the proposed scheme
    are compared with RFDCS [15], OEPO [16], EPLFT [17] mechanisms in terms of false
    detection accuracy (FDA), false alarm rate (FAR), false-positive rate (FPR), F1
    score, network lifetime, latency, and energy consumption. The sensor nodes are
    fault-free at early stage. However, during the simulation various types of faults
    are injected into the network. These faults are injected at various rates of about
    5%–25%. The faults constitutes of 25% of hard, 20% out-of-bounds, 19% stuck-at-fault,
    18% offset, and 18% gain faulty nodes. Table I shows the detailed faulty nodes
    percentage injected. Table II depicts various simulation parameters. The various
    performance metrics are given as follows: FDA FAR FPR F1−score  = TP+TN TP+TN+FP+FN
    = FP TN+FP = FN TP+FN = 2×(Recall×Precision) (Recall+Precision) (35) (36) (37)
    (38) View Source where Recall = TP TP+FN and Precision = TP TP+FP . View Source
    TABLE I Division of Faulty Nodes TABLE II Simulation Parameters Fig. 4(a) shows
    FDA for various fault probabilities. The FDA of the proposed scheme is increased
    up to 49.2% than EPLFT, 46.4% than OEPO, and 40.3% than RFDCS. The reason for
    better FDA is due to AI-based HT-LS-SVM which outperforms in large scale smart
    farming environment as compared to Poisson’s law, flower pollination algorithm.
    Fig. 4(b) depicts FAR for various fault probabilities. The FAR of the proposed
    scheme is reduced up to 47.6% than EPLFT, 41.3% than OEPO, and 40.2% than RFDFC.
    The reason for reduced FAR is due to the efficiency of the hyperparameter-tuned
    LS-SVM which classify the nonlinearly separable data efficiently. Fig. 4(c) depicts
    FPR for various fault probabilities. The FPR of the proposed scheme is reduced
    up to 46.8% than EPLFT and 43.2% than OEPO and 40.7% than RFDFC. The reason for
    reduced FPR is due to random search-based cross-validation for training data.
    Fig. 4(d) depicts F1-score for various fault probabilities. The F1-score of the
    proposed scheme is increased by 53.3% than EPLFT, 43.6% than OEPO and 41% than
    RFDFC. The reason for better F1-score is due to proposed random search-based fault
    detection using LS-SVM. Fig. 5 depicts the total energy consumption of the networks
    across different node counts. The energy consumption of the proposed scheme is
    reduced by 62.4% than EPLFT, 60.3% than OEPO, and 58% than RFDCS. The reason for
    reduced energy consumption is due to introduction of mobile sink for data collection
    in the network that avoids multihop data routing and reduce extra burden on the
    sensor nodes. Fig. 6 shows the network lifetime across different node counts.
    The network lifetime of the proposed scheme is increased by 69.4% than EPLFT,
    67.3% than OEPO, and 65% than RFDCS. The reason for better network lifetime is
    due to reduced load on sensor for data routing. The mobile sink traverse across
    the monitoring field and visit the judiciously selected RPs for data collection
    that avoids multihop communications. Fig. 7 illustrates the comparison of the
    proposed scheme in terms of data transmission latency. The simulation result shows
    the data transmission latency of the proposed scheme is reduced up to 40.48% than
    EPLFT, 38.90% than OEPO, and 36.7% than RFDCS. The reason for reduced data transmission
    latency is due the intelligent selection of RPs and path identification through
    Q -learning for mobile sink data collection. Fig. 8 and Table III show the in
    depth analysis of each fault in the proposed scheme. TABLE III Performance Analysis
    of Each Fault Fig. 4. Performance analysis compared with RFDCS, OEPO, and EPLFT.
    (a) FDA. (b) FAR. (c) FPR. (d) F1-score. Show All Fig. 5. Energy consumption.
    Show All Fig. 6. Network lifetime. Show All Fig. 7. Data transmission latency.
    Show All Fig. 8. Performance analysis of each fault. (a) FDA. (b) FAR. (c) FPR.
    (d) F1-score. Show All A. Testbed Experiment This Section presents testbed results
    for an outdoor scenario. Fig. 9 shows the real testbed where seven sensor nodes
    are deployed. DHT11 sensors are used to measure temperature and humidity. The
    test monitoring area is 20×25 [ m 2 ] area. In this testbed, BS is a laptop computer.
    Also, mobile sink is a robotic vehicle. The data transmission protocol used in
    testbed is Zigbee. The mobile sink and static sensor nodes detect obstacles through
    infrared signals. Readings are collected continuously between 7 A.M. and 2 P.M.
    In the initial stage, nodes are fault free. 25% nodes are turned hardware fault
    to test the performance of the proposed scheme. In the implementation process,
    20% out-of-bounds fault are injected with threshold limits as threshold limits
    [ ϕ 1 = 26 ∘ C, ϕ 2 = 31 ∘ C] . In Stuck-at fault, reading is constant value (
    β= 28 ∘ C ). In this real-time implementation, 19% stuck-at-fault are injected.
    In offset fault, a constant value β=6 is added to the original reading. The 18%
    offset fault are injected. In testbed, 18% gain fault are injected within the
    networks. The sensed reading is multiplication of η=3 . Fig. 9. Testbed in outdoor
    environment. Show All Fig. 10(a) depicts FDA for various fault probabilities.
    The FDA of the proposed scheme is increased by 48% than EPLFT, 44% than OEPO,
    and 40% than RFDCS. The reason for better FDA is due to the outperformance of
    the HT-LS-SVM in large-scale smart farming environment due to its efficiency to
    classify the nonlinearly separable data. Fig. 10(b) shows FAR for various fault
    probabilities. The FAR of the proposed scheme is reduced up to 46% than EPLFT,
    40% than OEPO, and 39.2% than RFDFC. The reason for reduced FAR is due to the
    efficiency of the hyperparameter-tuned LS- SVM that uses high dimensional feature
    space to classify faulty and nonfaulty nodes. Fig. 10(c) depicts FPR for various
    fault probabilities. The FPR of the proposed scheme is reduced up to 45% than
    EPLFT and 42.2% than OEPO and 39% than RFDFC. The reason for reduced FPR is due
    to cross-validation and hyperparameter-tuned LS-SVM for classification of faulty
    and nonfaulty data. Fig. 10. Testbed results. (a) FDA. (b) FAR. (c) FPR. (d) F1-score.
    (e) Energy consumption. (f) Data transmission latency. Show All Fig. 10(d) shows
    F1-score for various fault probabilities. The F1-score of the proposed scheme
    is increased by 52.3% than EPLFT, 41.6% than OEPO, and 40% than RFDFC. The reason
    for better F1-score is due to proposed random search-based fault detection using
    LS-SVM. Fig. 10(e) shows the total energy consumption measured based on voltage
    change over the lifetime. The energy consumption of the proposed scheme is reduced
    up to 60.4% than EPLFT, 59.3% than OEPO, and 57% than RFDCS. The reason for reduced
    energy consumption is due to intelligent mobile sink-based data collection that
    avoids multihop data routing. Fig. 10(f) illustrates the comparison of the proposed
    scheme in terms of data transmission latency. The simulation result shows the
    data transmission latency of the proposed scheme is reduced up to 39.8% than EPLFT,
    36.90% than OEPO, and 34.3% than RFDCS. The reason for reduced data transmission
    latency is due to path identification through Q -learning. The detailed performance
    in real testbed experiment is presented in Table IV. TABLE IV Performance Analysis
    of Testbed Experiment SECTION VI. Conclusion In this article, an intelligent mechanism
    for rendezvous point selection and obstacle-aware path formation for the mobile
    sink is presented. Also, intelligent fault diagnosis based on AI technique is
    proposed for smart farming environment. The novel proposed mechanism enhances
    reliability, and network lifetime and reduces latency. The intelligent fault detection
    scheme uses hyperparameter-tuned LS-SVM that improves FDA and F1 Score. Extensive
    simulations and testbed experiments were performed to demonstrate the effectiveness
    of the proposed scheme. In future work, we plan to enhance the sustainability
    and ethics of such AIT-based systems through block-chain and other lightweight
    encryption techniques. This will prevent such AIT-based systems from various security
    attacks. The proposed scheme is applicable in various real-world applications
    such as Industrial IoT, office automation, smart healthcare, and other sustainable
    AIT applications. Authors Figures References Citations Keywords Metrics More Like
    This Internet of Things and Wireless Sensor Networks for Smart Agriculture Applications:
    A Survey IEEE Access Published: 2023 Weighted Connected Vertex Cover Based Energy-Efficient
    Link Monitoring for Wireless Sensor Networks Towards Secure Internet of Things
    IEEE Access Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Sensors Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Intelligent Fault Diagnosis for AIT-Based Smart Farming Applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zhou J.
  - Xie W.
  - Wu X.
  - Liu X.
  - Liu T.
  citation_count: '0'
  description: The rotary vector (RV) reducer is one of the most important transmission
    components inside the joints of robots. The high precision motion control of the
    robot can be realized in the normal operation and service life of agricultural
    robots. However, the complex structure of the RV reducer cannot fully meet the
    variable conditions in actual work and the harsh working environment. Mechanical,
    cracks, and pitting faults can often occur at the same time or successively in
    actual operation, due to lubrication, manufacturing errors, and unreasonable forces.
    The signals collected by the sensor are also the mutual coupling of multiple fault
    sources. Therefore, it is necessary to explore the composite fault diagnosis of
    the RV reducer. In this study, a blind fault separation was proposed from the
    compound signals of the RV reducer using time-frequency image ridge extraction
    and improved sparse component analysis. The fault feature of the RV reducer was
    then extracted from the core transmission component of agricultural robots. The
    composite fault diagnosis of the RV reducer was finally realized with the unknown
    number of fault sources under the reciprocating motion of the joint arm and the
    time-varying speed of the agricultural robot. Firstly, the ridge extraction from
    time-frequency images (RETF) was used to synchronously intercept the vibration
    signals of the manipulator in the constant speed period. Then, the blind source
    separation (SMF-DPC-OMP) was combined with the sinC function to improve morphological
    filtering (SMF), density peak clustering (DPC), and orthogonal matching pursuit
    (OMP), in order to separate and extract the composite faults of stationary signals.
    The sinC function was taken as a new structural element to construct the average
    combined morphological filter. The vibration signal in the constant speed period
    was subjected to morphological filtering for better impact characteristics and
    sparsity of the signal. The DPC was used to estimate the mixing matrix of sparse
    signals, and then the sensing matrix was constructed. The separation source signal
    was reconstructed to combine with the OMP algorithm in the frequency domain. Finally,
    the reconstructed time-domain signal was subjected to the fast Fourier transform
    for fault identification. The test bench was utilized to collect the composite
    fault signals of the sun gear and planetary gear wear of the RV reducer. The results
    show that the blind separation was effectively realized on the composite faults
    of the RV reducer. The RETE was used to identify the motion state of the RV reducer,
    when the time-frequency diagram was blurred, due to the variable speed condition.
    The SMF-DPC-OMP effectively completed the blind separation of composite faults
    when the number of fault sources was unknown. The SMF-DPC-OMP saved about 75%
    of the running time cost than before. A more concise spectrum was achieved to
    better suppress the fine side frequency and interference components. It is suitable
    for the composite fault diagnosis of the RV reducer in the articulated industrial
    robot. The finding can provide a strong reference for the fault feature extraction
    in the actual production.
  doi: 10.11975/j.issn.1002-6819.202305086
  full_citation: '>'
  full_text: '>

    "农业工程学报 基于时频脊线提取与改进稀疏分量分析的RV减速器复合故障盲分离 DOI:10.11975/j.issn.1002-6819.202305086
    PDF HTML XML 导出 引用提醒 作者 周俊     谢文松     伍星     柳小勤     刘韬     中图分类号 HT165 基金项目
    国家自然科学基金项目（52165067，51965025，52165065）；云南省科技厅重点项目（202102AC080002）；云南省科技厅计划项目（202002AC080001）
    Blind fault separation of RV reducers using time-frequency ridge extraction and
    improved sparse component analysis Author ZHOU Jun     XIE Wensong     WU Xing     LIU
    Xiaoqin     LIU Tao     摘要 访问统计 参考文献 相似文献 引证文献 资源附件 摘要: 针对农业机器人的核心传动部件旋转矢量（rotate
    vector，RV）减速器的故障特征提取问题，该研究提出一种基于时频图像脊线提取与改进稀疏分量分析相结合的RV减速器复合故障盲提取方法。首先利用提出的时频图像脊线提取（ridge
    extraction from time-frequency images，RETF）方法同步截取机械臂恒速时段的观测振动信号，然后利用提出的sinC函数改进形态滤波（sinC-morphological
    filtering，SMF）算法、密度峰值聚类（density peak clustering，DPC）算法和正交匹配追踪（orthogonal matching
    pursuit，OMP）算法相结合的盲源分离方法（SMF-DPC-OMP）实现平稳信号复合故障的分离提取。以sinC函数作为新的结构元素构造平均组合形态滤波器，对恒速时段的振动信号进行形态滤波处理，以提升信号的冲击特性以及稀疏性；利用DPC估计稀疏信号的混合矩阵，构建传感矩阵，并结合OMP在频域完成分离源信号重构，最后对重构的时域信号进行快速傅里叶变换完成故障识别。试验台采集的RV减速器的太阳轮和行星轮磨损复合故障信号的分析结果显示，该算法能有效实现RV减速器复合故障的盲分离。RETE算法能够在变转速工况导致时频图较为模糊的情况下，识别出RV减速器的运动状态；SMF-DPC-OMP算法能够在故障源数目未知的情况下，有效完成复合故障的盲分离。与已有方法相比，SMF-DPC-OMP方法能够节省约75%的时间成本，频谱更为简洁，能够抑制精细侧频和干扰分量，适用于关节型农业机器人RV减速器复合故障盲分离，对生产实际中的故障特征提取具有一定的参考意义。
    关键词:机器人;故障诊断;RV减速器;脊线提取;密度峰值聚类;正交匹配追踪;复合故障 Abstract: The rotary vector (RV) reducer
    is one of the most important transmission components inside the joints of robots.
    The high precision motion control of the robot can be realized in the normal operation
    and service life of agricultural robots. However, the complex structure of the
    RV reducer cannot fully meet the variable conditions in actual work and the harsh
    working environment. Mechanical, cracks, and pitting faults can often occur at
    the same time or successively in actual operation, due to lubrication, manufacturing
    errors, and unreasonable forces. The signals collected by the sensor are also
    the mutual coupling of multiple fault sources. Therefore, it is necessary to explore
    the composite fault diagnosis of the RV reducer. In this study, a blind fault
    separation was proposed from the compound signals of the RV reducer using time-frequency
    image ridge extraction and improved sparse component analysis. The fault feature
    of the RV reducer was then extracted from the core transmission component of agricultural
    robots. The composite fault diagnosis of the RV reducer was finally realized with
    the unknown number of fault sources under the reciprocating motion of the joint
    arm and the time-varying speed of the agricultural robot. Firstly, the ridge extraction
    from time-frequency images (RETF) was used to synchronously intercept the vibration
    signals of the manipulator in the constant speed period. Then, the blind source
    separation (SMF-DPC-OMP) was combined with the sinC function to improve morphological
    filtering (SMF), density peak clustering (DPC), and orthogonal matching pursuit
    (OMP), in order to separate and extract the composite faults of stationary signals.
    The sinC function was taken as a new structural element to construct the average
    combined morphological filter. The vibration signal in the constant speed period
    was subjected to morphological filtering for better impact characteristics and
    sparsity of the signal. The DPC was used to estimate the mixing matrix of sparse
    signals, and then the sensing matrix was constructed. The separation source signal
    was reconstructed to combine with the OMP algorithm in the frequency domain. Finally,
    the reconstructed time-domain signal was subjected to the fast Fourier transform
    for fault identification. The test bench was utilized to collect the composite
    fault signals of the sun gear and planetary gear wear of the RV reducer. The results
    show that the blind separation was effectively realized on the composite faults
    of the RV reducer. The RETE was used to identify the motion state of the RV reducer,
    when the time-frequency diagram was blurred, due to the variable speed condition.
    The SMF-DPC-OMP effectively completed the blind separation of composite faults
    when the number of fault sources was unknown. The SMF-DPC-OMP saved about 75%
    of the running time cost than before. A more concise spectrum was achieved to
    better suppress the fine side frequency and interference components. It is suitable
    for the composite fault diagnosis of the RV reducer in the articulated industrial
    robot. The finding can provide a strong reference for the fault feature extraction
    in the actual production. Key words:robots;fault diagnosis;RV reducer;ridge extraction;density
    peak clustering;orthogonal matching pursuit;composite fault [1] 杨子涵，宋正河. 利用优选状态数的MCMC模拟农机装备负载[J].
    农业工程学报，2021，37(20)：15-22. YANG Zihan, SONG Zhenghe. Simulation of agricultural
    equipment load using MCMC with optimal state number[J]. Transactions of the Chinese
    Society of Agricultural Engineering(Transactions of the CSAE), 2021, 37(20): 15-22.
    (in Chinese with English abstract) [2] 王霖宽，孙首群，孙福佳. 农业机械中的摆线轮齿参数优化设计[J]. 农业装备与车辆工程，2018，56(1)：37-41.
    WANG Linkuan, SUN Shouqun, SUN Fujia. Cycloidal pinwheel reducer parameters optimization
    design based on MATLAB[J]. Agricultural Equipment & Vehicle Engineering, 2018,
    56(1): 37-41. (in Chinese with English abstract) [3] CHEN L R, CAO J F, WU K,
    et al. Application of generalized frequency response functions and improved convolutional
    neural network to fault diagnosis of heavy-duty industrial robot[J]. Robotics
    and Computer-Integrated Manufacturing, 2022, 73: 102228. [4] 赵小强，郭海科. 多特征融合的滚动轴承故障诊断[J].
    农业工程学报，2023，39(13)：80-88. ZHAO Xiaoqiang, GUO Haike. Fault diagnosis of rolling
    bearings using multi-feature fusion[J]. Transactions of the Chinese Society of
    Agricultural Engineering(Transactions of the CSAE), 2023, 39(13): 80-88. (in Chinese
    with English abstract) [5] 施杰，伍星，刘韬. 采用HHT算法与卷积神经网络诊断轴承复合故障[J]. 农业工程学报，2020，36(4)：34-43.
    SHI Jie, WU Xing, LIU Tao. Bearing compound fault diagnosis based on HHT algorithm
    and convolution neural network[J]. Transactions of the Chinese Society of Agricultural
    Engineering(Transactions of the CSAE), 2020, 36(4): 34-43. (in Chinese with English
    abstract) [6] 万安平，杨洁，王景霖，等. 基于深度学习的航空发动机齿轮故障诊断[J]. 振动、测试与诊断，2022，42(6)：1062-1067.
    WAN Anping, YANG Jie, WANG Jinglin, et al. Progress and prospects in piezoelectric
    actuation technologies[J]. Journal of Vibration, Measurement and Diagnosis, 2022,
    42(6): 1062-1067. (in Chinese with English abstract) [7] 耿令新，李康，庞靖，等. 基于时频和功率谱密度的移栽机振动特性测试与分析[J].
    农业工程学报，2021，37(11)：23-30. GENG Lingxin, LI Kang, PANG Jing, et al. Test and analysis
    of vibration characteristics of transplanting machine based on time frequency
    and power spectral density[J]. Transactions of the Chinese Society of Agricultural
    Engineering(Transactions of the CSAE), 2021, 37(11): 23-30. (in Chinese with English
    abstract) [8] 刘桂敏，马军，熊新，等. 基于改进 CYCBD 的滚动轴承复合故障自适应诊断方法[J]. 农业工程学报，2022，38(16)：98-106.
    LIU Guimin, MA Jun, XIONG Xin, et al. Adaptive diagnosis method of composite fault
    for rolling bearings using improved CYCBD[J]. Transactions of the Chinese Society
    of Agricultural Engineering(Transactions of the CSAE), 2022, 38(16): 98-106. (in
    Chinese with English abstract) [9] 汪久根，柯梁亮. 基于残差网络的RV减速器故障诊断[J]. 机械工程学报，2019，55(3)：73-80.
    WANG Jiugen, KE Liangliang. Fault diagnosis of RV reducer based on residual network[J].
    Journal of Mechanical Engineering, 2019, 55(3): 73-80. (in Chinese with English
    abstract) [10] YIN T, LU N, GUO G, et al. Knowledge and data dual-driven transfer
    network for industrial robot fault diagnosis[J]. Mechanical Systems and Signal
    Processing, 2023, 182: 109597. [11] 彭鹏，柯梁亮，汪久根. 噪声干扰下的RV减速器故障诊断[J]. 机械工程学报，2020，56(1)：30-36.
    PENG peng, KE Liangliang, WANG Jiugen. Fault diagnosis of RV reducer under noise
    interference[J]. Journal of Mechanical Engineering, 2020, 56(1): 30-36. (in Chinese
    with English abstract) [12] 韩特，李彦夫，雷亚国，等. 融合图标签传播和判别特征增强的工业机器人关键部件半监督故障诊断方法[J].
    机械工程学报，2022，58(17)：116-124. HAN Te, LI Yanfu, LEI Yaguo, et al. Semi-supervised
    fault diagnosis method for key parts of industrial robots by integrating graph
    label propagation and discriminative feature enhancement[J]. Journal of Mechanical
    Engineering, 2022, 58(17): 116-124. (in Chinese with English abstract) [13] XIE
    W S, ZHOU J, LIU T, et al Characteristic enhancement of RV reducer under non-stationary
    condition based on WDT-IF-SS-VMD[J]. Measurement Science and Technology, 2023,
    34(10): 105108. [14] YAN Y H, GUO Y, LIU X Q. Tooth root crack detection of planet
    gear in RV reducer based on improved compute order tracking and angular domain
    synchronous averaging[J]. Journal of Physics:Conference Series, 2022, 2184: 012019.
    [15] 雷亚国，何平，乔煜庭，等. 基于平稳工况数据截取的RV减速器故障诊断方法[J]. 电子机械工程，2023，39(4)：1-7. LEI Yaguo,
    HE Ping, QIAO Yuting, et al. A fault diagnosis method for RV reducer based on
    stationary condition data capturing[J]. Electro-Mechanical Engineering, 2023,
    39(4): 1-7. (in Chinese with English abstract) [16] 黄维新，刘敦文. 基于变分模态分解和独立成分分析的矿山微震信号降噪[J].
    振动与冲击，2019，38(4)：56-63. HUANG Weixin, LIU Dunwen. Mine microseismic signal noise
    reduction based on variational mode decomposition and independent component analysis[J].
    Vibration and Shock, 2019, 38(4): 56-63. (in Chinese with English abstract) [17]
    HAO Y, SONG L, REN B, et al. Step-by-step compound faults diagnosis method for
    equipment based on majorization-minimization and constraint SCA[J]. IEEE/ASME
    Transactions on Mechatronics, 2019, 24(6): 2477-2487. [18] WANG J D, CHEN X, ZHAO
    H Y, et al. An effective two-stage clustering method for mixing matrix estimation
    in instantaneous underdetermined blind source separation and its application in
    fault diagnosis[J]. IEEE Access, 2021, 9: 115256-115269. [19] NORSALINA H, DZATI
    A R. Sparse component analysis (SCA) based on adaptive time-frequency thresholding
    for underdetermined blind source separation (UBSS)[J]. Sensors, 2023, 23(2060):
    2060. [20] DING T, CHEN H K, CHEN L, et al. Improved sparse component analysis
    for multi-point harmonic contribution evaluation under incomplete measurement[J].
    IEEE Transactions on Power Delivery, 2022, 37(5): 4019-4031. [21] 徐晓，丁世飞，丁玲. 密度峰值聚类算法研究进展[J].
    软件学报，2022，33(5)：1800-1816. XU Xiao, DING Shifei, DING Ling. Survey on density
    peaks clustering algorithm[J]. Journal of Software, 2022, 33(5): 1800-1816. (in
    Chinese with English abstract) [22] BU H, TAO R, BAI X, et al. Regularized smoothed
    ?0 norm algorithm and its application to CS-based radar imaging[J]. Signal Processing,
    2016, 122: 115-122. [23] ZHANG C, HAO D, HOU C, et al. A new approach for sparse
    signal recovery in compressed sensing based on minimizing composite trigonometric
    function[J]. IEEE Access, 2018, 6: 44894-44904. [24] WANG H M, YANG S P, LIU Y
    Q. Compressive sensing reconstruction for rolling bearing vibration signal based
    on improved iterative soft thresholding algorithm[J]. Measurement, 2023, 210:
    112528. [25] 刘素娟，崔程凯，郑丽丽，等. 基于压缩感知的贪婪类重构算法原子识别策略综述[J]. 电子与信息学报，2023，45(1)：361-370.
    LIU Sujuan, CUI Chengkai, ZHENG Lili, et al. A review of atom recognition strategies
    for greedy class reconstruction algorithms based on compressed sensing[J]. Journal
    of Electronics & Information Technology, 2023, 45(1): 361-370. (in Chinese with
    English abstract) [26] MA S, ZHANG H J, MIAO Z Y. Blind source separation for
    the analysis sparse model[J]. Neural Computing and Applications 2021, 33(14):
    8543-8553. [27] 赵雅琴，聂雨亭，吴龙文，等. 基于脊路跟踪的变分非线性调频模态分解方法[J]. 浙江大学学报（工学版） ，2020，54(10)：1874-1882.
    ZHAO Yaqin, NIE Yuting, WU Longwen, et al. Multi-component signal separation using
    variational nonlinear chirp mode decomposition based on ridge tracking[J]. Journal
    of Zhejiang University (Engineering Science), 2020, 54(10): 1874-1882. (in Chinese
    with English abstract) [28] TANG M J, LIAO Y H, HE D, et al. Rolling bearing diagnosis
    based on an unbiased-autocorrelation morphological filter method[J]. Measurement,
    2022, 189: 110617. [29] 李豫川，伍星，迟毅林，等. 基于形态滤波和稀疏分量分析的滚动轴承故障盲分离[J]. 振动与冲击，2011，30(12)：170-174.
    LI Yuchuan, WU Xing, CHI Yilin, et al. Blind fault separation of rolling bearings
    based on morphological filtering and sparse component analysis[J]. Vibration and
    Shock, 2011, 30(12): 170-174. (in Chinese with English abstract) [30] WEI X X,
    PENG M S, HUANG H J, et al. An overview on density peaks clustering[J]. Neurocomputing,
    2023, 554: 126633. 引用本文 周俊,谢文松,伍星,柳小勤,刘韬.基于时频脊线提取与改进稀疏分量分析的RV减速器复合故障盲分离[J].农业工程学报,2023,39(22):18-26.
    DOI:10.11975/j. issn.1002-6819.202305086  ZHOU Jun, XIE Wensong, WU Xing, LIU
    Xiaoqin, LIU Tao. Blind fault separation of RV reducers using time-frequency ridge
    extraction and improved sparse component analysis[J]. Transactions of the Chinese
    Society of Agricultural Engineering (Transactions of the CSAE),2023,39(22):18-26.
    DOI:10.11975/j. issn.1002-6819.202305086 复制 分享 0 文章指标 点击次数:99 下载次数: 78 Html阅读次数:
    0 引用次数: 0 历史 收稿日期:2023-05-12 最后修改日期:2023-10-13 在线发布日期: 2023-12-25 ICP:京ICP备06025802号-3
    农业工程学报 ® 2024 版权所有 技术支持：北京勤云科技发展有限公司"'
  inline_citation: '>'
  journal: Nongye Gongcheng Xuebao/Transactions of the Chinese Society of Agricultural
    Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Blind fault separation of RV reducers using time-frequency ridge extraction
    and improved sparse component analysis
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Oliveira M.
  - Chauhan S.
  - Pereira F.
  - Felgueiras C.
  - Carvalho D.
  citation_count: '1'
  description: “Industry 5.0” is the latest industrial revolution. A variety of cutting-edge
    technologies, including artificial intelligence, the Internet of Things (IoT),
    and others, come together to form it. Billions of devices are connected for high-speed
    data transfer, especially in a 5G-enabled industrial environment for information
    collection and processing. Most of the issues, such as access control mechanism,
    time to fetch the data from different devices, and protocols used, may not be
    applicable in the future as these protocols are based upon a centralized mechanism.
    This centralized mechanism may have a single point of failure along with the computational
    overhead. Thus, there is a need for an efficient decentralized access control
    mechanism for device-to-device (D2D) communication in various industrial sectors,
    for example, sensors in different regions may collect and process the data for
    making intelligent decisions. In such an environment, reliability, security, and
    privacy are major concerns as most of the solutions are based upon a centralized
    control mechanism. To mitigate the aforementioned issues, this paper provides
    the opportunities for and highlights some of the most impressive initiatives that
    help to curve the future. This new era will bring about significant changes in
    the way businesses operate, allowing them to become more cost-effective, more
    efficient, and produce higher-quality goods and services. As sensors are getting
    more accurate, cheaper, and have lower time responses, 5G networks are being integrated,
    and more industrial equipment and machinery are becoming available; hence, various
    sectors, including the manufacturing sector, are going through a significant period
    of transition right now. Additionally, the emergence of the cloud enables modern
    production models that use the cloud (both internal and external services), networks,
    and systems to leverage the cloud’s low cost, scalability, increased computational
    power, real-time communication, and data transfer capabilities to create much
    smarter and more autonomous systems. We discuss the ways in which decentralized
    networks that make use of protocols help to achieve decentralization and how network
    meshes can grow to make things more secure, reliable, and cohere with these technologies,
    which are not going away anytime soon. We emphasize the significance of new design
    in regard to cybersecurity, data integrity, and storage by using straightforward
    examples that have the potential to lead to the excellence of distributed systems.
    This groundbreaking paper delves deep into the world of industrial automation
    and explores the possibilities to adopt blockchain for developing solutions for
    smart cities, smart homes, healthcare, smart agriculture, autonomous vehicles,
    and supply chain management within Industry 5.0. With an in-depth examination
    of various consensus mechanisms, readers gain a comprehensive understanding of
    the latest developments in this field. The paper also explores the current issues
    and challenges associated with blockchain adaptation for industrial automation
    and provides a thorough comparison of the available consensus, enabling end customers
    to select the most suitable one based on its unique advantages. Case studies highlight
    how to enable the adoption of blockchain in Industry 5.0 solutions effectively
    and efficiently, offering valuable insights into the potential challenges that
    lie ahead, particularly for smart industrial applications.
  doi: 10.3390/s23229174
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 22 10.3390/s23229174 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Francesco Longo
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 1263 Citations 1 Table of Contents Abstract Introduction Cybersecurity
    Current Overview Blockchains: Public and Private Industry 5.0 and Edge Computing
    The “New Industry” Challenges Major Challenges in Blockchain Adoption Gathering
    Blockchain and Edge Computing: A Proposal Distributed Computing Solution Conclusions
    Author Contributions Funding Data Availability Statement Conflicts of Interest
    References Altmetric share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessArticle Blockchain Protocols and Edge Computing Targeting
    Industry 5.0 Needs by Miguel Oliveira 1,*, Sumit Chauhan 2, Filipe Pereira 3,
    Carlos Felgueiras 3 and David Carvalho 2 1 Aveiro-North Polytechnic School, University
    of Aveiro, 3720-511 Oliveira de Azeméis, Portugal 2 Naoris Protocol, Wilmington,
    DE 19808, USA 3 Oporto Higher Institute of Engineering, Oporto Polytechnic School,
    4249-015 Porto, Portugal * Author to whom correspondence should be addressed.
    Sensors 2023, 23(22), 9174; https://doi.org/10.3390/s23229174 Submission received:
    1 September 2023 / Revised: 2 October 2023 / Accepted: 10 November 2023 / Published:
    14 November 2023 (This article belongs to the Section Industrial Sensors) Download
    keyboard_arrow_down     Browse Figures Review Reports Versions Notes Abstract
    “Industry 5.0” is the latest industrial revolution. A variety of cutting-edge
    technologies, including artificial intelligence, the Internet of Things (IoT),
    and others, come together to form it. Billions of devices are connected for high-speed
    data transfer, especially in a 5G-enabled industrial environment for information
    collection and processing. Most of the issues, such as access control mechanism,
    time to fetch the data from different devices, and protocols used, may not be
    applicable in the future as these protocols are based upon a centralized mechanism.
    This centralized mechanism may have a single point of failure along with the computational
    overhead. Thus, there is a need for an efficient decentralized access control
    mechanism for device-to-device (D2D) communication in various industrial sectors,
    for example, sensors in different regions may collect and process the data for
    making intelligent decisions. In such an environment, reliability, security, and
    privacy are major concerns as most of the solutions are based upon a centralized
    control mechanism. To mitigate the aforementioned issues, this paper provides
    the opportunities for and highlights some of the most impressive initiatives that
    help to curve the future. This new era will bring about significant changes in
    the way businesses operate, allowing them to become more cost-effective, more
    efficient, and produce higher-quality goods and services. As sensors are getting
    more accurate, cheaper, and have lower time responses, 5G networks are being integrated,
    and more industrial equipment and machinery are becoming available; hence, various
    sectors, including the manufacturing sector, are going through a significant period
    of transition right now. Additionally, the emergence of the cloud enables modern
    production models that use the cloud (both internal and external services), networks,
    and systems to leverage the cloud’s low cost, scalability, increased computational
    power, real-time communication, and data transfer capabilities to create much
    smarter and more autonomous systems. We discuss the ways in which decentralized
    networks that make use of protocols help to achieve decentralization and how network
    meshes can grow to make things more secure, reliable, and cohere with these technologies,
    which are not going away anytime soon. We emphasize the significance of new design
    in regard to cybersecurity, data integrity, and storage by using straightforward
    examples that have the potential to lead to the excellence of distributed systems.
    This groundbreaking paper delves deep into the world of industrial automation
    and explores the possibilities to adopt blockchain for developing solutions for
    smart cities, smart homes, healthcare, smart agriculture, autonomous vehicles,
    and supply chain management within Industry 5.0. With an in-depth examination
    of various consensus mechanisms, readers gain a comprehensive understanding of
    the latest developments in this field. The paper also explores the current issues
    and challenges associated with blockchain adaptation for industrial automation
    and provides a thorough comparison of the available consensus, enabling end customers
    to select the most suitable one based on its unique advantages. Case studies highlight
    how to enable the adoption of blockchain in Industry 5.0 solutions effectively
    and efficiently, offering valuable insights into the potential challenges that
    lie ahead, particularly for smart industrial applications. Keywords: blockchain;
    edge computing; protocols; Industry 5.0; sensing; 5G networks 1. Introduction
    In the rapidly evolving technological landscape, the combination of 5G, Industrial
    Internet of Things (IIoT), and advanced sensor technologies has generated tremendous
    interest and potential for unprecedented growth in blockchain and edge computing
    research. 5G, with unparalleled speed, extremely low latency, and massive connectivity,
    promises to revolutionize data transmission and enable seamless real-time communication
    between devices, paving the way for functional IIoT networks efficiently and effectively.
    These networks are built with a combination of smart devices and sensors, generating
    unprecedented amounts of data from multiple sources. Known for its secure, transparent,
    and decentralized nature, blockchain technology is well suited to address the
    challenges posed by handling and securing this huge data stream. Furthermore,
    5G, IIoT, and sensors together create a dynamic edge computing environment. The
    combination of these groundbreaking technologies has tremendous potential to redefine
    businesses, improve data management, and facilitate innovation across many industries,
    informing that their research is a major focus of researchers in blockchain and
    sophisticated computing. When discussing 5G networks, sensing is becoming an increasingly
    important touchstone. These devices, which include sensors that measure or detect
    physical phenomena and transducers, produce a large amount of data that can have
    a significant impact on the management of production as well as the efficiency
    with which it operates. The growth of sensors in the Industrial Internet of Things
    (IIoT) is important for the growth of automated manufacturing [1]. The vast majority
    of the work that humans were once responsible for in every industrial physical
    process can now be performed by sensors, which are more accurate and less expensive
    (Figure 1). Figure 1. Average cost of IoT sensor [2]. The data from 2019 are presented
    in the previous chart because they are the most accurate stats that are available
    since the pandemic crisis. Even though the use of sensors has increased over the
    past few years, they still present new challenges in terms of data and communication.
    These challenges include the necessity of ensuring that the data are accurate,
    the volume and the amount of time it requires to send them, and the manner in
    which they need to be processed. It is possible for a variety of issues to arise
    if data integrity is not maintained for a variety of reasons. Some of these issues
    include data breaches, the loss of access to data sets, incoherence in production
    databases, and many others. In a recent study by IBM [3], the annual global average
    cost of a data breach was estimated to be USD 4.24 million, while the cost of
    lost business was estimated to be USD 1.59 million, or 38% of the total cost.
    Lost business includes business disruption and revenue losses from a system downtime,
    the cost of losing customers and gaining new ones, reputation losses, and decreased
    goodwill. Secondly, the detection and escalation costs represent USD 1.24 million
    (29%) of the total cost, followed by post-breach responses, costs of USD 1.14
    million (27%), and notifications of USD 0.27 million (6%) (Figure 2). Figure 2.
    Average cost of a data breach [3]. In report [3], it is predicted that the amount
    of data that will be created in the year 2021 is estimated to be 79 zettabytes
    [4], even though “less than 0.5% of all data is ever analyzed and used” [5]. This
    occurs for a variety of reasons, including limited budgets for data analysis,
    poor data integration tools, manual data entry and collection processes, multiple
    standalone and distributed analytical tools, poor auditing procedures, and a lack
    of reliance on and training in system solutions to fix these issues. To address
    these issues, it is necessary to rely on and receive training in system solutions.
    It is necessary to have extremely low latencies of 0.5–1 millisecond [6] to solve
    the problems described above and to collect data at the same time. As the latency
    in 4G networks is approximately 200 milliseconds, only 5G networks are currently
    capable of providing solutions for this range. A 5G network can connect up to
    one million devices per kilometer [7], and it has been demonstrated that a “5G
    frame structure” enables devices to share available 5G bandwidth even better through
    a combination of time and frequency division multiplexing [8] and by mitigating
    signal and radio interferences. 5G networks can achieve speeds of up to 20 Mbps.
    One of the issues that currently exists with 5G is that there is a lack of industrial
    5G equipment. However, over time, this issue will most likely be resolved within
    the next six months to one year. To satisfy this demand, manufacturers are not
    developing nor producing a new large-scale piece of hardware. However, to overcome
    these obstacles, constraints, and issues, a distributed network infrastructure
    is required. This infrastructure must be able to deal with the outcomes of data
    integrity, coherence, and immutability. This is the reason why blockchain is thriving
    across industry. In a peer-to-peer network, blockchain operates as a shared, immutable
    ledger that not only records transactions but also keeps track of ownership and
    assets. Blockchain is a decentralized and distributed network. When a block is
    finished, the ledger entry for it can no longer be changed in any way. In this
    document, we aimed to present the technology “assets” (such as blockchain, edge
    computing, sensors, and transfer data communications) needed to power industry
    challenges, regarding rapidness, security, and data integrity and cohesion. In
    the following sections, we present an architecture that gathers the technologies
    that should been implemented in this field. 2. Cybersecurity Current Overview
    Digital system and infrastructure security, policies, and strategies have never
    been more important than now. Companies and governmental entities will spend USD
    10.5 trillion yearly by 2025, which is USD 3 trillion more than in 2015 [9], with
    global cybercrime costs estimated to grow by 15% per year over the next five years.
    Also, the global spending on cybersecurity products and services will be USD 1.75
    trillion, cumulatively, for the five-year period from 2021 to 2025 [10]. Blockchain’s
    main feature is a distributed ledger, which makes it more secure than both traditional
    distributed and centralized systems. This makes it harder for cybercriminals to
    act. This approach mitigates vulnerabilities by having a robust architecture (blocks)
    that records ownerships and transactions, ensuring integrity and data consistency.
    For instance, it reduces the chance of a single point of failure and makes it
    harder for hackers to break into a network. Similarly, once a block is added to
    the blockchain, it cannot be altered or deleted. This helps to ensure that the
    data stored on the blockchain is tamper-proof and can be trusted to be accurate.
    As the ledger is spread across every node of the network, it increases the complexity
    and difficulty for hackers to compromise, steal, or delete data. It uses cryptography
    to secure the data stored on the network, which helps protect against unauthorized
    access and ensures that only authorized parties can view or modify the data. Encryption,
    either symmetric or asymmetric cryptography (or cryptographic hashes), is built
    into the blockchain. This makes the architecture more robust. With the system’s
    public keys and digital signatures, it can protect any kind of edge device. Transparency,
    meaning that all transactions can be viewed by anyone, makes it more difficult
    for malicious actors to hide their activities and makes it easier for network
    participants to detect suspicious activities. Self-executing contracts help to
    reduce fraud and errors. Scaling network security with consensus algorithms makes
    it hard for someone to take over the network. Also, the consensus algorithm prevents
    anomalies without the need for a centralized and hierarchical system. A recent
    study from Palo Alto Networks [11] says that (a) 98% of all IoT device traffic
    is not encrypted; (b) 51% of threats to healthcare organizations involve imaging
    devices; (c) 72% of healthcare VLANs mix IoT and IT assets; and 57% of IoT devices
    are vulnerable to medium- or high-severity attacks and 41% of attacks take advantage
    of device vulnerabilities, making them an easy and desirable target for attackers.
    Blockchain technology eliminates the possibility of any form of distributed denial
    of service attack (DDoS) by not having a central point of access and by not being
    centralized. 3. Blockchains: Public and Private There are public blockchains and
    private blockchains, and the distinction between the two is based on the amount
    of transparency that is provided. A public blockchain does not restrict who can
    participate, allows transactions to be verified in a way that is both transparent
    and decentralized, and is open to anyone who wants to use it. Bitcoin, Ethereum,
    and other cryptocurrencies come to mind as examples. On the other hand, a private
    blockchain is permissioned, which means that only participants who have been pre-approved
    can access it. When compared to public blockchains, these private blockchains
    are easier to scale and provide greater levels of privacy; however, they are also
    less open and centralized. Organizations frequently make use of them for the purpose
    of maintaining their internal records and keeping tabs on their assets. Examples
    include Hyperledger, etc. The fifth industrial revolution makes the most of both
    blockchain types. Public blockchains provide a high degree of transparency while
    also being decentralized. This facilitates trust, security, and accountability
    among users. On the other hand, private blockchains provide an increased level
    of control in addition to increased levels of privacy, which makes them suitable
    for circumstances in which sensitive information needs to be protected. Both types
    of blockchain need consensus mechanisms to make sure that the network is stable
    and safe. Consensus mechanisms are the ideas, protocols, and incentives that make
    it possible for a group of nodes in different places to agree on the state of
    a blockchain. According to the Oxford Dictionary [12], “consensus” refers to a
    general agreement. There are different algorithms that are used to achieve a consensus
    on the blockchain. Public blockchains use decentralized consensus mechanisms,
    in which several nodes compete to validate transactions. Regarding Ethereum, “blockchain”
    means that at least 66% of the nodes on the network agree on the global state
    of the network [13]. The fact that every node depends on the blockchain network
    is shown by the fact that everyone agrees on protocols, incentives, and ideas.
    On the other hand, private blockchains can use either centralized or decentralized
    consensus mechanisms, depending on the network’s needs and goals. Most of the
    time, centralized consensus mechanisms are faster and more efficient but are less
    safe and easier to manipulate. Decentralized consensus mechanisms provide more
    security but are slower and less efficient. The following subsection describes
    the various consensus mechanisms available for public and private blockchains.
    3.1. Proof of Work (PoW) Proof of Work (PoW) is a consensus algorithm used to
    secure blockchain networks and validate transactions. PoW is the consensus mechanism
    used by Bitcoin, Litecoin, and Dogecoin. It was created by Satoshi Sakamoto, the
    creator of the Bitcoin blockchain. Ethereum, until Ethereum 2.0, uses PoW. The
    idea behind PoW is that the puzzle is difficult to solve but easy to verify. Proof
    of Work involves scanning for a value that, when hashed, such as with SHA-256,
    begins with a number of zero bits. The average amount of work needed grows by
    a factor of the number of zero bits needed, and this can be checked by running
    a single hash. For our timestamp network, we perform Proof of Work by increasing
    a nonce in the block until we find a value that provides the block’s hash with
    the required zero bits [14]. When the block meets the hash requirement of zeros,
    the block is “chained” to the network and can no longer be edited. A consensus
    convinces attackers that if they try to change a block, they will have to redo
    Proof of Work for the existing block in the chain of blocks and, if they do that,
    they will have to redo other blocks as well. The system provides users with bitcoins,
    whose value has been going down over time, when they find a mistake. Thus, centralization
    could happen if some users are rewarded more than others, which would favor the
    computing power of the rewarded users. Moreover, centralization may compromise
    data integrity. PoW is the most prevalent consensus mechanism for modeling public
    blockchains in general. Proof of Work (PoW) is not usually used in private blockchains
    because it was made for public blockchains, which need a decentralized consensus
    and protection from bad actors. Ethereum Classic is a private version of Ethereum
    that uses a PoW consensus. PoW has been an important part of the blockchain industry
    since the beginning, but it has not contributed much for Industry 5.0. PoW is
    hard to use for integrating advanced technologies because it uses a lot of energy,
    is hard to scale up, and could become centralized. 3.2. Proof of Stake (PoS) Proof
    of Stake (PoS) is an alternative to Proof of Work (PoW) that was implemented to
    address the shortcomings of PoW. PoS is better for the environment and uses less
    energy than PoW because it does not require miners to solve hard math problems
    to verify transactions. In PoS, the validation of transactions is carried out
    by validators, who are selected based on the amount of cryptocurrency they hold
    in the network. This is why PoS is also referred to as “staking” because, as they
    have a stake in the network, the validators have a reason to check transactions
    honestly. If they check transactions with bad intentions or if the network is
    attacked, they could lose the tokens they staked. The process starts with a proposer,
    then a proposed block, and finally the validation of the proposed block [15].
    The amount of cryptocurrency a validator has in the network affects how likely
    it is that they will be chosen as a validator. Bigger token ownerships have more
    chances to be selected, even though the selection is random. Since there is no
    reward for mining, it encourages more nodes to take part in creating and validating
    blocks, which saves energy. In PoW, the validation process becomes more difficult
    as the network grows, which slows down the process of validating transactions.
    In PoS, the validation process remains constant, regardless of the size of the
    network. This makes it a more scalable solution, especially for blockchain networks
    with many users. The PoS is not without its drawbacks. One of the main criticisms
    of PoS is that it is vulnerable to the “nothing at stake” problem. In this case,
    validators have no reason not to switch to a different chain if a new chain with
    better rewards is made. This can lead to a situation where the original blockchain
    becomes vulnerable to attacks. Despite being a “fairer” mechanism, it still has
    flaws for individuals with lower holdings because ownership is correlated with
    the likelihood of selection, increasing the potential for centralization. Again,
    the mechanism may compromise decentralization, having in mind that smaller networks
    are less efficient at staking, leading the network for centralized nodes. PoS
    is used in both public and private blockchains. Ethereum (as of Ethereum 2.0),
    Cosmos, Tezos, Algorand, EOS, etc. are some public blockchains that make use of
    this consensus. Hyperledger Besu, Corda, Quorum, Chain Core, etc. are examples
    of private blockchains. Proof of Stake has several advantages that make it well-suited
    for contributing to Industry 5.0, including its energy efficiency, scalability,
    and decentralization. 3.3. Delegated Proof of Stake (DPoS) DPoS relies on a select
    group of individuals, known as “delegates” or “witnesses”, who are responsible
    for achieving a consensus during the block validation [16] to validate transactions.
    These delegates are elected by the community, and they are incentivized to act
    in the best interest of the network by being rewarded with transaction fees. The
    block validation is subject to a voting system by stakeholders to choose the external
    validator. The key difference between DPoS and other consensus mechanisms is that
    DPoS uses a democratic voting process to select its delegates. This process allows
    for a more efficient and secure network, as it eliminates the need for large amounts
    of computational power to validate transactions. One of the major benefits of
    DPoS is its ability to process transactions at a much faster rate than other consensus
    mechanisms. This is because DPoS networks have a much smaller number of delegates
    who are responsible for validating transactions, which allows for a more streamlined
    process. DPoS networks are also more scalable than other consensus mechanisms.
    This is because the number of delegates can be adjusted to meet the demands of
    the network, which means that the network can continue to grow and process more
    transactions without sacrificing its speed or security. This mechanism promotes
    energy efficiency, but it may lead to further centralization and questionable
    ethical behavior because blockchain-based validation can stifle the spread of
    public opinion due to the limited number of delegates. Nonetheless, cases may
    force the mechanism to rely on centralized processes because a small number of
    token holders can impact and influence networks. DPoS is used in both public and
    private blockchains. EOS, Ark, TRON, and BitShares are some examples of public
    blockchains that use this consensus. Hyperledger Iroha, Symbiont, and Eris Industries
    are some examples of private blockchains that use this consensus. Delegated Proof
    of Stake has several advantages that make it well-suited for contributing to Industry
    5.0, including its fast block times (speed), low latency, efficiency, scalability,
    and decentralization. 3.4. Byzantine Fault Tolerance Family (BFT) The BFT is the
    feature of a distributed network to reach a consensus (agreement on the same value),
    even when some of the nodes in the network fail to respond or respond with incorrect
    information [17]. It aims to protect the system against failures by employing
    collective decision making on correct and incorrect nodes—this enables a reduction
    in faulty nodes. The concept is inspired by the well-known Byzantine Generals’
    Problem [18]. The problem represents several Byzantine divisions, each led by
    a general and stationed outside an enemy city where generals can communicate via
    messages. Before they take any action, they must agree on a common strategy. However,
    some generals are not trustworthy, and they will try to avoid loyal generals to
    reach an agreement. Facing this problem, generals must decide what to do, based
    on a strong majority of generals to have a common attack plan at the same time.
    The generals must have an algorithm to ensure that loyal generals decide the same
    action against the minority of the not trustworthy generals’ bad plan. Finally,
    untrustworthy generals may carry out the bad plan without causing any harm because
    the majority of loyal generals carry out the same strategy at the same time, meeting
    a reasonable plan and agreement. In conclusion, an agreement problem can be solved
    if most n processors are faulty, which means that strictly more than two-thirds
    of the total number of processors should be honest (if we have 3n + 1 working
    processors), allowing tolerance for n faults [18]. The consensus mechanisms are
    based on the BFT concept and different approaches, although they all rely on three
    key properties: (1) safety, (2) liveness, and (3) fault tolerance. (1) A consensus
    protocol is determined to be safe if all nodes in the network agree on the same
    state of the blockchain. This means that the network will always reach a consensus
    and all nodes will have the same view of the blockchain, even in the presence
    of network partitions or other failures. This is also referred to as the “consistency”
    of the shared state. (2) A consensus protocol guarantees liveness if all non-faulty
    nodes participating in a consensus eventually produce a value, meaning the network
    can continue to operate even in the presence of failures or other issues. (3)
    A consensus protocol provides fault tolerance if it can recover from the failure
    of a node participating in a consensus. This is performed with the help of redundancy,
    finding and fixing errors, and other methods [19]. BFT algorithms are designed
    to ensure that the network can reach a consensus even in the presence of failures,
    and that the network continues to operate even in the presence of network partitions
    or other issues. The BFT concept is widely used in distribution systems. BFT has
    some limitations, such as (1) scalability, (2) latency, and (3) resource consumption.
    (1) BFT algorithms need a lot of messages to be sent between network nodes, which
    can make it harder for the network to grow as the number of nodes increases. (2)
    BFT algorithms can also be slow, with high latency between nodes in the network.
    This can result in slow transaction processing times and a less responsive network.
    (3) BFT algorithms can use a lot of resources, such as a lot of processing power,
    memory, and network bandwidth. This can limit the deployment of BFT algorithms
    in resource-constrained environments. To overcome BFT limitations, the PBFT algorithm
    was developed. PBFT is a modification of BFT that aims to make a consensus in
    a blockchain network more scalable, efficient, and useful. PBFT uses a pre-consensus
    protocol to reduce the number of messages sent between network nodes. This helps
    to improve scalability and reduce latency. Also, PBFT uses a more efficient way
    to reach a consensus. This makes the network use less resources and lets it work
    in places where resources are limited. PBFT assumes that nodes may act maliciously
    and tries to overcome this by using a majority agreement mechanism, where the
    majority of nodes must agree on a single value. This helps to ensure that the
    network reaches a consensus on a correct value, even in the presence of malicious
    nodes [20]. PBFT relies upon a combination of digital signatures, cryptographic
    hash functions, and a majority agreement to ensure the authenticity and integrity
    of the data exchanged between nodes and to reach a consensus on a correct value
    [21]. Like pBFT, the BFT comprises multiple other implementations, such as (1)
    iBFT, (2) dBFT, (3) Tendermint, (4) mBFT, (5) fBFT, (6) DiemBFT, etc. (1) Istanbul
    BFT [22], also known as iBFT, is intended for use in large networks containing
    thousands of nodes. It uses a committee-based approach to reach a consensus, where
    a group of nodes are selected to reach a consensus. It is used in private blockchain
    networks. For example, iBFT is used with Quorum, Pantheon, etc. (2) Delegated
    Byzantine Fault Tolerance, or dBFT [23], is designed to handle malicious nodes
    in the network and ensures the authenticity and integrity of the data being exchanged
    between nodes. dBFT is a combination of the Delegated Proof of Stake (DPoS) and
    Byzantine Fault Tolerance (BFT) algorithms, which means it offers scalability
    and high performance, such as DPoS, and the security and reliability of BFT. In
    dBFT, token holders vote for a set of nodes to act as bookkeepers, who then reach
    a consensus on the next block in the chain using a BFT consensus mechanism. When
    compared to other BFT consensus algorithms, dBFT is known for being fast and having
    low latency. It is used in public blockchain networks, for example, in NEO. (3)
    Tendermint [24] uses a leader-based approach to reach a consensus, where a main
    node acts as the leader and is followed by backup nodes. Tendermint is known for
    its fast finality and low latency compared to other BFT consensus algorithms.
    When compared to other BFT consensus algorithms, Tendermint is known for being
    fast and having low latency. It is used in both public and private blockchain
    networks. For example, the Cosmos network, a decentralized public network of independent
    blockchains, and Binance Smart Chain, a decentralized private network. (4) Modified
    Byzantine Fault Tolerance, or mBFT [24], is also designed to improve its performance
    and scalability. mBFT uses a combination of digital signatures, cryptographic
    hash functions, and message broadcasts to reach a consensus on the next block
    in the chain. Unlike traditional BFT algorithms, mBFT uses a simpler communication
    protocol and relies on a smaller number of nodes to reach a consensus, making
    it more efficient and scalable. Despite its improved performance, mBFT still maintains
    the security and reliability of traditional BFT algorithms. It is used in private
    blockchain networks, for example, in Hyperledger Besu. (5) Fast Byzantine Fault
    Tolerance, or fBFT [25], is optimized for fast block confirmation times and high
    transaction throughput, making it ideal for decentralized systems that require
    quick, reliable transaction processing. It is used in private blockchain networks,
    for example, in the Chain network. (6) DiemBFT [26] is directly based on PBFT
    and indirectly based on BFT and aims to provide a stable, secure, and scalable
    platform for digital transactions and financial applications. It is based on the
    HotStuff (https://arxiv.org/pdf/1803.05069.pdf (accessed on 14 August 2023)) protocol,
    built on pBFT, and aims to increase efficiency by reducing the number of messages
    and, thus, communications between nodes, while maintaining pBFT security and efficiency.
    The leader has a bigger role, rather than interacting between nodes. Security
    is improved because a leader is selected randomly (the leader/follower concept).
    Members are assumed to be nodes, and transactions are sent to them by clients,
    operating through a shared mempool [27]. A rotation rule allows nodes to become
    leaders, based on HotStuff, with controlled timeouts, and can propose new blocks
    to be added to the chain that must be approved by followers. When a block obtains
    the majority of votes, it is added to the chain and obtains a “quorum certificate”,
    which is spread across the network for validation. If the process goes well, it
    is stored in the chain. This allows the consensus to be faster at a minimum cost:
    compared with 7 transactions per second, the DiemBFT consensus allows for 1000
    transactions per second. Although speed and efficiency features exist, there are
    some problems with security, integrity, and privacy. Nevertheless, there is a
    centralized consensus. It requires power to compute because nodes must commit
    at least USD 10 million in Diem stable coins to participate. This consensus is
    used with Diem and Facebook’s Libra. It is used in private blockchain networks,
    for example, in Diem Blockchain. By comparing iBFT with PBFT we know that iBFT
    is more scalable than PBFT and has a faster finality compared to PBFT. Instead
    of “leaders” and backup nodes, iBFT uses “proposers” (who act as leaders) and
    “validators” (who act like backup nodes)—they can validate blocks but have no
    active role on the consensus protocol. In each round, validators may choose a
    new proposer responsible for adding the next block for validation. The biggest
    difference between pBFT and iBFT is that validators in iBFT can change, while
    in pBFT they are static, which means, by principle, that validators in iBFT are
    more truthful and involved. Like other consensus mechanisms, pBFT and iBFT operate
    where malicious nodes do not exceed 66% of all nodes and block states do not require
    confirmation, similarly to how they operate on public consensus mechanisms (trust
    is assumed in private mechanisms). Also, compared with the public consensus, pBFT
    and iBFT consume less energy, considering the inexistence of minors to solve mathematical
    operations. As they use a large number of messages to keep track between blocks
    and collective decisions, these consensus systems work better with a limited number
    of nodes. More nodes imply that more actions need to be performed. Even though
    pBFT and iBFT are still vulnerable to attacks and compromise security, a node
    may be attacked, and the leader may manipulate other nodes. Due to the leader/proposer,
    a consensus allows nodes to be controlled in a closed system, which is different
    from public consensus mechanisms (where nodes are open and free). 3.5. Distributed
    Proof of Security (dPoSec) The dPoSec consensus algorithm was developed with the
    goal of simplifying the operation of the blockchain network during communication
    and increasing the amount of work that can be performed in a set amount of time
    [17]. It intends to function in a highly secure mode while also scaling itself
    towards a Phase-3 solution, which will make it a significant improvement in the
    field of blockchain consensus algorithms. In order to provide a blockchain solution
    that is both quick and scalable, the dPoSec algorithm combines the most beneficial
    aspects of the Proof of Stake (PoS) protocol and the Byzantine Fault Tolerance
    (BFT) protocol. It incorporates advanced security measures, such as trust establishment,
    among nodes to ensure a fast, scalable, and secure network operation. It is a
    significant improvement over traditional consensus algorithms and represents a
    significant step forward in the evolution of consensus algorithms. As the dPoSec
    is built on the Ethereum Virtual Machine (EVM), it is able to execute all smart
    contracts, and offers a flexible platform for the development of decentralized
    applications. This makes it possible for developers to build a diverse set of
    decentralized applications on the platform. Due to this, it is a flexible solution
    that can be implemented in a variety of fields, including the healthcare industry,
    the financial sector, and others. dPoSec is a balanced protocol that enables versatile
    platforms because, in addition to its robust security features, it also provides
    on-demand privacy and efficient peer-to-peer discovery. This makes it a better
    solution for any situation. This algorithm was developed to be highly scalable,
    and its architecture makes use of ultimate blockchain primitives to improve both
    its performance and its efficiency. dPoSec’s blockchain primitives are designed
    to be more efficient than those of other blockchains, which results in a number
    of benefits, including a reduction in the amount of time needed to process transactions
    and an increase in scalability. As dPoSec is an on-demand privacy platform, users
    are able to protect the confidentiality of their data and take advantage of the
    privacy benefits that come along with using the service. This means that users
    can choose which information they want to share and with whom, providing them
    with full control over their data and giving them the ability to make decisions
    based on all gathered data. The peer-to-peer discovery feature of the platform
    makes it easy for nodes to find each other and establish connections, thereby
    lowering the network’s latency and increasing its overall efficiency. This is
    achieved through incentivized schema, strong consistency across nodes and across
    verge clusters (decentralized mesh of nodes across shard-like structures known
    as verge clusters). One of the most significant obstacles that blockchain networks
    must overcome is the requirement for a high level of coordination and communication
    between nodes. This can make the network move more slowly and raise the likelihood
    of it failing altogether. dPoSec is able to circumvent this difficulty by employing
    a unique validator selection process. This method was developed with the intention
    of lowering the likelihood that malicious actors will compromise the network and
    raising the level of network security overall. In order to maintain the reliability
    and safety of the network, validators are chosen using a variety of criteria,
    including the amount of stake they hold, their reputation, and their performance.
    dPoSec makes use of a sophisticated reward mechanism for validators in order to
    ensure that the network’s integrity is preserved and to thwart any attempts by
    malicious actors to compromise it. This incentivizes good behavior and punishes
    malicious actors, helping to maintain the network’s security. The algorithm also
    eliminates the danger of “nothing at stake” attacks, which occur when validators
    carry out malicious behavior without fear of any repercussions as a result of
    their actions. dPoSec addresses this issue through its punishment mechanisms,
    which penalize malicious validators and incentivize good behavior. dPoSec is a
    secure and reliable consensus mechanism because it uses advanced security measures
    to increase trust in the running nodes. These measures include cryptographic signatures
    and consensus algorithms, among other things. This ensures that the network is
    protected against a variety of attacks, including those that exploit vulnerabilities
    in the consensus algorithm. This also protects the network from being compromised.
    For example, the use of cryptographic signatures helps to ensure that the network’s
    integrity is maintained, even in the event that one or more of its nodes are breached.
    dPoSec was developed with a particular emphasis on security, efficiency, and scalability
    in order to cater to the requirements of a wide range of sectors and assist those
    sectors in maximizing the potential of blockchain technology. This algorithm is
    highly adaptable and can be tailored to the particular requirements of each sector,
    which enables it to function as a solution that is both versatile and scalable.
    For instance, it can be used in the financial sector to ensure the safety and
    efficacy of payment transactions, and it can also be used in the healthcare sector
    to secure and manage electronic medical records. Both of these applications can
    be found in the financial sector. It is designed to meet the needs of a variety
    of industries and to assist those industries in making use of the benefits offered
    by blockchain technology. It accomplishes this by combining advanced security
    measures with a focus on scalability [17]. Both public and private blockchains
    are compatible with and capable of using dPoSec. This consensus is used by the
    Naoris Protocol, which is a hybrid public/private blockchain as per the end need.
    dPoSec may contribute considerably to Industry 5.0 by offering a reliable and
    effective consensus mechanism for industrial blockchain applications. For instance,
    it can be used to safeguard the accuracy of information gathered from Internet
    of Things devices in a supply chain management system or to safely track the flow
    of goods through the supply chain. 3.6. Proof of Elapsed Time (PoET) PoET is designed
    to address the problem of energy waste in Proof of Work (PoW) and Proof of Stake
    (PoS) systems. The main goal of this consensus is to reduce energy consumption.
    Each node in the network waits for a random amount of time before it can participate
    in block validation. This waiting time is verified by a trusted entity, called
    the “Validator”, who verifies that the node indeed waited for the specified amount
    of time. Developed by Intel, this consensus enables a tool to solve the problem
    of randomly selecting a leader who makes decisions about mining permissions and
    to block winners, aiming to spread winnings across a large number of participants
    [28]. By managing waiting times and managing energy consumption, the shortest
    randomly generated waiting time by a node wins the block. This consensus is fairer
    because it promotes a way of rewarding centralization and random leader selection;
    thus, this consensus remains probabilistic instead of deterministic. Hyperledger
    Sawtooth uses this consensus. PoET can be used in both public and private blockchain
    networks. Hyperledger Sawtooth is a public blockchain that uses this consensus.
    Intel SGX is a private blockchain that uses this consensus. 3.7. Proof of X (PoX)
    Revolutionary change is often accompanied by growing pains, and the world of blockchain
    technology is no exception. As the field continues to evolve, new problems arise
    and demand new solutions. One such area of innovation is the development of many
    such consensus algorithms, and discussing them all will be out of the scope for
    this paper. There is currently more than 30+ different consensus algorithms that
    support either public or private blockchain networks, or both, and the list is
    constantly growing [29]. Some of the other most popular Proof of X algorithms
    include the following: Proof of Capacity/Space ○ This consensus algorithm uses
    disk space instead of computational power to validate transactions. The idea is
    that disk space is cheap and readily available, making it a more sustainable and
    energy-efficient alternative to PoW. Proof of Burn ○ This consensus algorithm
    requires users to “burn” tokens by sending them to a public address with no known
    private key. This reduces the supply of tokens in circulation, making it more
    difficult for attackers to accumulate a large amount of tokens to launch an attack.
    Hybrid Models ○ As the name suggests, hybrid models combine two or more consensus
    algorithms to take advantage of their strengths and mitigate their weaknesses.
    For example, a hybrid of PoW and Proof of Stake (PoS) might use PoW to secure
    the network against attacks, and might use PoS to validate transactions. Directed
    Acyclic Graph (DAG) ○ A DAG is a type of data structure that can be used to create
    a distributed ledger. In a DAG-based blockchain, transactions are validated based
    on their position in the graph, rather than through a traditional consensus mechanism.
    By constantly pushing the boundaries and exploring new solutions, the field of
    blockchain transaction’s reaches its finality if it the following aspects occur:
    uses probabilistic or deterministic algorithms; if participants have or do not
    have permission to join the network and contribute to its maintenance [30]; uses
    tokens needed to operate; exceeds the scalability capacity in order to grow the
    network; transaction speeds are classified; computes any costs of participation
    in the infrastructure, computing power, and operations in or on the network; does
    not reach the required energy efficiency; the network does not trust the processes
    and transaction independently from participants and entities; is not resilient
    to maintain a stable and common state across blocks; if decentralization is not
    well implemented; tolerance is allowed in order to make decisions and validate
    blocks; if decentralization, security, and scalability are addressed, at least
    theoretically, known as blockchain trilemma; the layer type of blockchain, type
    1, base layer, type 2, blockchains built in base layers type 1 and type 3, and
    decentralized blockchains and protocols are not used. 3.8. Discussion As expected,
    there is no “magic” consensus for all scenarios at sight, services, or industries.
    Issues, such as the size of the infrastructure, the expected time of interactions,
    the classification of participants, the data to be exchanged, and so on, must
    be addressed. Nevertheless, there are some considerations to keep in mind, such
    as energy efficiency, decentralization, security of actions and transactions,
    the expected growth of devices, always keeping some guidelines in mind for achievement,
    business success, and costs. Trust, resilience, and tolerance are properties that
    should help in a decision concerning which consensus to adopt. This should also
    be planned according to the technologies that are available to the organizations
    and infrastructures where the consensus mechanism is the very heart of every blockchain
    solution [31]. Ultimately, any choice about the adoption of a blockchain solution
    should be made with a focus on the consensus process that underpins the solution,
    and with a comprehensive grasp of the technologies and infrastructures that are
    currently accessible. 4. Industry 5.0 and Edge Computing The digitalization of
    industries is an ongoing process, and is also known as Industry 5.0. Since automation,
    this is probably the most important stage of all time, with the aim for better
    management and optimization of all aspects of the manufacturing processes and
    supply chains. Like Harald Lesch said, digitalization is the purest form for monetizing
    time [32]—to achieve this goal, there are a set of technologies and systems that
    are needed, such as sensors, 5G networks, and (at the core) robust distributed
    systems, to gather and process all the data. As presented previously, the growth
    of sensors for different purposes is exponentially growing, while prices are continuously
    dropping. However, to make use of all end-of-line devices, computers are needed
    to gather and store all the data they transmit (1), process all the data in a
    way for achieving knowledge, validation, and refinement of the decisions in the
    supply chain (2) and, nevertheless, do it in the smallest time frame window that
    can be achieved (3) with the smallest amount of energy needed. Companies such
    as Bosch [33], Airbus [34], or BMW [35] have now implemented 5G networks in their
    production lines with the aim of gathering data to improve efficiency. Along with
    secure and reliable communication, another important aspect is to achieve high-speed
    communication. To obtain results from 5G, the use of remote servers in an edge
    computing architecture can provide greater power flexibility and overall process
    performance, resulting in lower implementation costs and greater sustainability.
    In an edge computing architecture, kilometers of cables are not required to connect
    sensors to communicate with control systems [33]. Let us proceed to a briefing
    on edge computing enhancements. Edge Computing Enhancement for Industry Edge computing
    is a distributed computing paradigm that allows data processing to occur closer
    to the source of data, rather than in a centralized location. The main goal of
    edge computing is to reduce the amount of data that needs to be sent to centralized
    data centers, which can improve the speed and reliability of data processing,
    as well as reduce the costs associated with data transfer and storage. It is expected
    that the edge computing market size is projected to reach USD 101.3 billion by
    2027, at a CAGR of 17.8% [36], from components to applications. In a comparison
    study between cloud computing and edge computing [37], wireless networks are more
    suitable for sensor communications than wired networks for the cloud; thus, more
    mobile implementation is desirable as well as greater scalability, allowing a
    wider distribution of digital devices. Due to the reduction in cables, less power
    consumption is needed, reducing operational costs as well as storage costs. Other
    advantages are related to privacy and security, reducing data leakage during transmissions;
    low latency rates (thanks to a decentralized network), enabling better data transmission
    and real-time results; more manageable data for analytics; and better interoperability
    (thanks to the computing processing moving to the edge), which eliminates the
    need for universal device standards that are not yet defined. Also, industrial
    process monitoring and predictive maintenance are two of the most common use cases
    for edge computing implementations. Efficient communication across highly complex
    SCADA (supervisory control and data acquisition) systems to manage the high volumes
    of data from sensors and PLCs (programmable logic controllers) and the ability
    to track a variety of metrics and monitor the performance of machinery is becoming
    a standard in state-of-the-art factory plants [38]. 5. The “New Industry” Challenges
    The new industrial revolution, also known as Industry 5.0, has significantly improved
    technology and changed how various industries function. Despite all of its advantages,
    Industry 5.0 has also created important challenges that must be overcome for its
    successful adoption. Standardization, which is essential for seamless communication
    and collaboration across many platforms and systems, is one of the main issues.
    Latency, or the delay in data transport, is another important restriction that
    presents a problem for real-time applications. Additionally, to guarantee the
    secure and effective functioning of Industry 5.0 technologies, security, scalability,
    and dependability are significant challenges that must be addressed. For Industry
    5.0 to reach its full potential and for industries all around the world to experience
    sustainable growth, it is essential to address these obstacles. 6. Major Challenges
    in Blockchain Adoption This section presents, in the form of an itemized list,
    the concerns regarding the implementation of blockchain architectures in industries
    and the consensus mechanism characteristics (Table 1). Table 1. Comparison of
    consensus mechanisms. 6.1. Devices Incompatibility The adoption of blockchain
    in low-end IoT devices is challenging due to their limited processing power, memory,
    and energy resources. Low-end IoT devices may struggle to perform complex blockchain
    computations, resulting in slow transaction processing times and overall system
    performance degradation. These limitations make it difficult to adopt blockchain
    as a direct solution for Industry 5.0 legacy-based systems that rely on low-end
    IoT devices. Therefore, careful consideration must be provided to the performance
    requirements of blockchain solutions and the capabilities of low-end IoT devices
    when implementing blockchain in Industry 5.0 applications. 6.2. Scalability The
    massive amount of data produced by numerous linked devices presents a significant
    challenge for blockchain technology. Blockchain is known for being slow and not
    scalable, potentially causing a bottleneck in the adoption of devices in Industry
    5.0 systems. As a result, implementing blockchain in Industry 5.0 applications
    requires careful consideration of scalability issues to ensure efficient processing
    of the vast amounts of data. 6.3. Interoperability The integration of Industry
    5.0 devices with blockchain systems may be challenging due to the use of multiple
    protocols and standards that are incompatible with blockchain technology. The
    diverse range of protocols used in Industry 5.0 devices could potentially hinder
    the seamless integration of blockchain, making it difficult to establish effective
    communication and collaboration. Therefore, addressing interoperability issues
    is crucial for the successful integration of Industry 5.0 devices with blockchain
    technology. 6.4. Security Although Industry 5.0 devices are generally considered
    secure, they may not be as secure as blockchain technology. The interconnectivity
    of devices in Industry 5.0 makes them vulnerable to security breaches, which could
    potentially compromise the integrity of the entire blockchain network. Therefore,
    ensuring the security of Industry 5.0 devices is critical to the successful implementation
    of blockchain technology in Industry 5.0 applications. 6.5. Privacy Industry 5.0
    devices often collect sensitive data, which must be protected to ensure the privacy
    of individuals. Integrating blockchain with IoT requires careful consideration
    to ensure that data privacy is not compromised. Robust security measures must
    be established to safeguard sensitive data from unauthorized access and ensure
    the integrity of the blockchain network. Therefore, careful attention must be
    provided to the privacy and security implications of integrating blockchain with
    IoT to ensure the successful implementation of Industry 5.0 applications. 6.6.
    Cost The integration of blockchain technology into an Industry 5.0 system can
    be a costly affair and may require significant investments in infrastructure,
    software, and hardware. The deployment of blockchain technology may require additional
    resources to support the increased computational demands and data storage requirements
    of the system. Therefore, implementing blockchain in Industry 5.0 applications
    requires careful consideration of the costs involved to ensure the feasibility
    of the integration. 6.7. Trustlessness While trustlessness is a key benefit of
    blockchain technology, it also presents a significant challenge. While this eliminates
    the need for trust in centralized entities, it can create vulnerabilities in the
    system that malicious actors can exploit. One of the significant security challenges
    presented by trustlessness is the potential for 51% attacks. A 51% attack occurs
    when an entity gains control of over 50% of the computing power of the blockchain
    network. Furthermore, the absence of trusted intermediaries in a trustless system
    can also make it challenging to identify and address security breaches, as there
    is no central authority to oversee the transactions. 6.8. Storage Another significant
    challenge in adopting blockchain for devices is the issue of storage space. Industry
    5.0 devices generate massive amounts of data, and recording all the data on the
    blockchain network can quickly exhaust the storage capacity of the devices. Moreover,
    storing large amounts of data on the blockchain can increase the overall size
    of the blockchain, making it less scalable and less efficient. 7. Gathering Blockchain
    and Edge Computing: A Proposal Distributed Computing Solution While many blockchain
    solutions have been proposed to address various challenges, none of them resolve
    all the issues. As a result, the adoption of blockchain has been challenging,
    as individual blockchain solutions may not be sufficient to address all the problems.
    As a result, a set of components, devices, applications, architectures, and technologies
    may address the challenges and needs of the industry. As an example, Bosch Security
    Systems, S.A, located in the northern region of Portugal, is now using more than
    5000 5G sensor devices to improve the production on their products. This industry
    is using more sensors each day to collect data and process data to improve maintenance
    (predicted), reduce waiting times, and produce more with higher cost-efficient
    ratios. Despite the implementation of these changes, most of the processing is
    performed with an edge computing strategy—which means that it utilizes local processing,
    which is good for data privacy and rapid data analysis—but cannot be integrated
    into a blockchain network (Figure 3). Figure 3. Blockchain implementation roadmap.
    If the dPoSec consensus mechanism, designed with a security-first approach for
    industrial blockchain applications, has the potential to significantly enhance
    Industry 5.0 by providing improved security, scalability, and interoperability,
    its integration into the industrial ecosystem will enable more reliable and accurate
    information gathering from IoT devices across diverse domains, making it easier
    to implement and manage complex blockchain solutions. As previously stated, dPoSec
    has been designed to address almost all the challenges discussed earlier, and
    can play a crucial role in Industry 5.0. It offers a customized EVM-based robust
    and efficient consensus mechanism designed with a security-first approach for
    industrial blockchain applications, and can be utilized to ensure the accuracy
    and reliability of information gathered from Internet of Things (IoT) devices
    across various domains. By utilizing dPoSec, Industry 5.0 can benefit from enhanced
    security, scalability, and interoperability, making it easier to implement and
    manage complex blockchain solutions. If the dPoSec consensus mechanism leverages
    the synergy of edge computing and local processing, which play a pivotal role
    in bolstering the trust and security of the blockchain network, and enable IoT
    devices to actively participate in the consensus process through local processing,
    dPoSec can thus enhance network security and efficiency. Moreover, if the mechanism’s
    capacity can learn from network operations and develop tailored defenses for associated
    devices, it may foster adaptability and collaboration, instilling confidence among
    devices. Consequently, dPoSec has the potential to effectively address various
    key challenges in Industry 5.0, including scalability, interoperability, and security,
    thereby simplifying the implementation of sophisticated blockchain solutions.
    dPoSec is a consensus mechanism that combines the power of edge computing and
    local processing to establish trust and enhance the security of the blockchain
    network. By utilizing local processing power, dPoSec can provide IoT devices with
    the ability to participate in the consensus process, which enhances the security
    and efficiency of the network. Furthermore, dPoSec is designed to learn from the
    knowledge gained during network operation and to develop defenses for all associated
    devices. This enables the network to adapt and evolve, building confidence among
    devices and promoting collaboration. As a result, dPoSec can help to overcome
    some of the most significant challenges of Industry 5.0, such as scalability,
    interoperability, and security, making it easier to implement complex blockchain
    solutions. How can the implementation of dPoSec in Industry 5.0 improve the security
    of the blockchain network, allowing IoT devices to operate with bigger trust and
    efficiency? And, thus, what are the specific advantages of this, such as improved
    data accuracy, faster processing times, and increased resilience against cyber
    attacks, that can be attributed to the combination of edge computing and local
    processing provided by dPoSec, ultimately unlocking the full potential of Industry
    5.0 in the realm of industrial blockchain applications? By leveraging dPoSec,
    Industry 5.0 can benefit from an enhanced security posture that enables IoT devices
    to operate with greater trust and efficiency within the blockchain network. This
    can lead to improved data accuracy, faster processing times, and increased resilience
    against cyber attacks. Ultimately, the combination of edge computing and local
    processing provided by dPoSec offers a more reliable and effective consensus mechanism
    for industrial blockchain applications, helping to unlock the full potential of
    Industry 5.0. You may have a blockchain network in a powerplant, gathering and
    controlling data across servers, desktops, and tablets, and you also may have
    data sensors in devices, gathering data for local processing in the form of edge
    computing. However, the two worlds do not exchange information. Our proposal to
    integrate the dPoSec protocol as a blockchain network with sensor devices, providing
    information for the blockchain network and edge computer processing. Figure 4
    shows dPoSec blockchain networking with a plethora of connected verge clusters
    and their separate meshes. Each mesh may be composed of several IIoT sensors with
    blockchain firmware. What are the potential strategies or approaches to overcome
    the challenge of integrating sensors and machinery for data acquisition, which
    require support the upload of blockchain firmware for posterior edge processing,
    given the prevalence of proprietary and closed solutions offered by various manufacturers?
    Figure 4. dPoSec blockchain networking. To address the challenges in this field,
    sensors and machinery, which perform data acquisition for posterior edge processing,
    need to be prepared to support the upload of blockchain firmware. Despite the
    fact that there are several manufacturers that support this technology, most of
    them are proprietary and closed solutions. dPoSec-based networks comprise of the
    following aspects (Figure 5): Figure 5. dPoSec blockchain upload process. 8. Conclusions
    As a result, a set of components, devices, applications, architectures, and technologies
    are now available to drive industry digitalization and efficiency while addressing
    new challenges. The touchstone at the present moment must be the integration of
    these built-in simple use cases and their spread in this field. The digitalization
    of industries is an ongoing process, also referred to as Industry 5.0, which involves
    the use of various advanced technologies, such as artificial intelligence, robotics,
    IIoT, cloud computing, virtual reality, augmented reality, and blockchain. It
    is transforming how organizations operate from the stage of production to customer
    service, enabling the integration of data from a variety of sources and helping
    in the automation of processes. It is also reducing the need for human resources
    and increasing the efficiency of many organizations [39]. The use of digital technologies
    has enabled companies to optimize their operations and create new products and
    services that are more personalized to customers [40]. Combining the discussed
    technologies will enable improvements in supply chains and within the standard
    procedures of industries. Sensorization can provide greater accuracy and real-time
    data, allowing for more informed decisions to be made in real time. Blockchain
    consensus can help to provide a secure, truthful, and immutable platform for data
    and transactions, eliminating the need to verify transactions through a centralized
    authority. Edge computing can reduce latency and increase data processing speeds,
    allowing for quicker decisions to be made and for more complex tasks to be performed.
    5G can provide faster internet speeds and increased bandwidth, allowing for more
    data and devices to be transmitted and processed faster. Overall, the combination
    of these technologies can offer organizations and individuals greater efficiency,
    security, transparency, and cost reductions. Also, edge computing and blockchain
    complement each other: they are not inherently similar. Edge computing can also
    optimize the performance of blockchain-based systems by reducing latency and improving
    response times. Nevertheless, challenges and constraints arise for companies when
    facing new outcome standards. Lack of knowledge and expertise: companies may lack
    the knowledge and expertise to implement Industry 5.0 technologies, making it
    difficult to take advantage of the benefits they offer (1) [41]. High cost of
    implementation: implementing Industry 5.0 requires significant capital investment
    in expensive technologies, such as artificial intelligence, robotics, and Internet
    of Things (IoT) systems (2) [42]. Security risks: connecting systems and data
    to the Internet creates potential security risks, and companies must invest in
    security measures to protect their data and networks (3) [43]. Adaptability and
    scalability: companies must be able to quickly adapt to changing technologies
    and customer needs, which can be difficult for companies to do without the right
    infrastructure in place (4) [44]. Regulatory restrictions: depending on the industry,
    there may be regulatory restrictions in place that limit the use of certain technologies,
    such as autonomous vehicles or drones (5) [45]. One of the key challenges in implementing
    edge computing is ensuring the security and privacy of the data that is being
    processed and transmitted. Data breaches and cyberattacks are becoming more and
    more likely as more gadgets are connected to the internet. Blockchain can fill
    this need by offering a safe and unhackable method of data storage and distribution,
    for example, a smart factory where hundreds of sensors are gathering information
    on the functionality of various machines and pieces of equipment. To enable predictive
    maintenance and other uses, these data must be analyzed in real time, but they
    must also be secured to prevent unwanted access. The factory can guarantee that
    only authorized parties have access to the data and that any modifications or
    updates to the data are documented and confirmed by using blockchain to store
    and exchange these data. Similarly, to enable safe and effective navigation, self-driving
    cars need to handle a lot of data in real time, including data from cameras, lidar,
    and other sensors. Cars can make judgments more quickly and react to changing
    situations in real time if edge computing is used to process these data locally,
    rather than sending them to a centralized cloud-based system. As a car is gathering
    information about its surroundings and the actions of other drivers, this also
    raises questions regarding data security and privacy. The automobile can make
    sure that only authorized parties have access to the data, that any modifications
    or updates to the data are recorded and confirmed, and that the data are securely
    stored and shared via blockchain. Extending businesses surely increases effectiveness
    and transparency by employing sensors and other IoT devices to monitor the movements
    and conditions of their products, and the data are securely stored and shared
    by using blockchain technology. When combined, edge computing and blockchain—two
    of the most exciting and promising technologies of our time—offer a potent solution
    that can present a wide range of new use cases and applications. Edge computing
    and blockchain are poised to disrupt numerous industries as well as how we live
    and work by enhancing data security and privacy, enabling new business models
    and revenue sources, and enhancing the efficiency and transparency of supply chains.
    It is important to emphasize that nothing similar has been performed thus far.
    Only works related to the implementation of blockchain distributed systems were
    created, although they were never merged with edge computing processing, due to
    its complex application. The scientific contribution of this work consists of
    the creation of an innovative architecture that combines a blockchain protocol
    used as firmware in industrial sensors, which collect data that will be used with
    edge computing processing in various industries. The use of the blockchain dPoSec
    protocol is the most reliable way to ensure the safety of industries and data
    integrity. Author Contributions Conceptualization, M.O., S.C. and D.C.; methodology,
    M.O., F.P. and C.F.; software, S.C. and D.C.; validation, M.O., S.C. and D.C.;
    formal analysis, M.O. and S.C.; investigation, M.O., S.C., F.P. and D.C.; resources,
    M.O., F.P. and C.F.; data curation, M.O. and S.C.; writing—original draft preparation,
    M.O., S.C. and F.P.; writing—review and editing, M.O. and S.C.; visualization,
    M.O.; supervision, M.O.; project administration, M.O. and D.C.; funding acquisition,
    M.O. and D.C. All authors have read and agreed to the published version of the
    manuscript. Funding This research received no external funding. Data Availability
    Statement Data are contained within the links: https://naorisprotocol.com/, https://medium.com/@NaorisProtocol,
    https://www.linkedin.com/company/naorisprotocol, accessed on 14 August 2023. Conflicts
    of Interest Sumit Chauhan and David Carvalho were employed by the Naoris Protocol.
    The remaining authors declare that the research was conducted in the absence of
    any commercial or financial relationships that could be construed as a potential
    conflict of interest. References Javaid, M.; Haleem, A.; Singh, R.P.; Rab, S.;
    Suman, R. Significance of sensors for industry 4.0: Roles, capabilities, and applications.
    Sens. Int. 2021, 2, 100110. [Google Scholar] [CrossRef] 2019 Manufacturing Trends
    Report. 2019. Available online: https://info.microsoft.com/rs/157-GQE-382/images/EN-US-CNTNT-Report-2019-Manufacturing-Trends.pdf
    (accessed on 8 November 2022). Cost of a Data Breach Report 2021; IBM Corporation:
    Armonk, NY, USA, 2021. Statista. Volume of Data/Information Created, Captured,
    Copied, and Consumed Worldwide from 2010 to 2020, with Forecasts from 2021 to
    2025. 2021. Available online: https://www.statista.com/statistics/871513/worldwide-data-created/
    (accessed on 10 November 2022). Myler, L. Better Data Quality Equals Higher Marketing
    ROI. Forbes. 2017. Available online: https://www.forbes.com/sites/larrymyler/2017/07/11/better-data-quality-equals-higher-marketing-roi/?sh=53fe05867b68
    (accessed on 10 November 2022). Orfanus, D.; Indergaard, R.; Prytz, G.; Wien,
    T. Ethercat-based platform for distributed control in high-performance industrial
    applications. In Proceedings of the 2013 IEEE 18th Conference on Emerging Technologies
    & Factory Automation (ETFA), Cagliari, Italy, 10–13 September 2013; pp. 1–8. [Google
    Scholar] Statista. Connection Density of 4G, 5G, and 6G Mobile Broadband Technologies.
    Available online: https://www.statista.com/statistics/1183690/mobile-broadband-connection-density/
    (accessed on 10 November 2022). GSMA. 5G for Industry 4.0 Operational Technology
    Networks—A Comparison of the Features and Application of 5G and Wi-Fi 6 for Manufacturing,
    Production and Supply Chain Use Cases. 2021. Available online: https://www.gsma.com/iot/wp-content/uploads/2021/03/2021-03-GSMA-5G-Industry-4.0-Op-Tech-Networks.pdf
    (accessed on 21 November 2022). Microsoft Secure Blog Staff. The Emerging Era
    of Cyber Defense and Cybercrime. 2016. Available online: https://www.microsoft.com/en-us/security/blog/2016/01/27/the-emerging-era-of-cyber-defense-and-cybercrime/
    (accessed on 22 November 2022). Braue, D. Global Cybersecurity Spending to Exceed
    $1.75 Trillion from 2021–2025. Cybersecur. Ventur. 2021. Available online: https://cybersecurityventures.com/cybersecurity-spending-2021-2025/
    (accessed on 22 November 2022). Unit 42. 2020 Unit 42 IoT Threat Report. 2020.
    Available online: https://unit42.paloaltonetworks.com/iot-threat-report-2020/
    (accessed on 23 November 2022). Oxford English Dictionary, 2nd ed.; Clarendon
    Press: Oxford, UK, 1989. Kropec, L.; Wackerow, P.; Cook, J.J.; Richards, S.; Green,
    S.A.; Saxena, S.; Rodriguez, B.; Fowler, H.; Smith, C.; Luna, V.; et al. Consensus
    Mechanisms, Ethereum Development Documentation. 2022. Available online: https://ethereum.org/en/developers/docs/consensus-mechanisms/
    (accessed on 24 November 2022). Sakamoto, S. Bitcoin: A Peer-to-Peer Electronic
    Cash System. 2008. Available online: https://bitcoin.org/bitcoin.pdf (accessed
    on 24 November 2022). Kropec, L.; Wackerow, P.; Cook, J.J.; Richards, S.; Green,
    S.A.; Saxena, S.; Rodriguez, B.; Fowler, H.; Smith, C.; Luna, V.; et al. Proof-of-Stake,
    Ethereum Development Documentation. 2022. Available online: https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/
    (accessed on 25 November 2022). Kaur, S.; Chaturvedi, S.; Sharma, A.; Kar, J.
    A Research Survey on Applications of Consensus Protocols in Blockchain. In Hindawi
    Security and Communication Networks; Hindawi Publishing Corporation: London, UK,
    2021; Volume 2021. [Google Scholar] Carvalho, D.; Chauhan, S. CyberSecurity Mesh
    HyperStructure for the Digital World. Naoris Procotol. 2022. Available online:
    https://docsend.com/view/piiy2cvzghx262ma (accessed on 23 July 2023). Pease, M.;
    Shostak, R.; Lamport, L. Reaching Agreement in the Presence of Faults. J. Assoc.
    Comput. Mach. 1980, 27, 228–234. [Google Scholar] [CrossRef] Baliga, A. Understanding
    Blockchain Consensus Models. Persistent 2017, 4, 14. [Google Scholar] Bains, P.
    Blockchain Consensus Mechanisms: A Primer for Supervisors. Fintech Notes. 2022.
    Available online: https://www.imf.org/-/media/Files/Publications/FTN063/2022/English/FTNEA2022003.ashx/
    (accessed on 25 November 2022). Florian, M.; Henningsen, S.; Ndolo, C.; Scheuermann,
    B. The sum of its parts: Analysis of federated byzantine agreement systems. Distrib.
    Comput. 2022, 35, 399–417. [Google Scholar] [CrossRef] Ethereum Community Members.
    Istanbul: ETH 1616 (Ethereum Improvement Proposal 1679 (EIP-1679)). 2019. Available
    online: https://eips.ethereum.org/EIPS/eip-1679 (accessed on 25 September 2023).
    Zhang, E.; Hongfei, D. NEO—An Open Network for Smart Econo. 2017. Available online:
    https://docs.neo.org/docs/en-us/basic/whitepaper.html (accessed on 25 September
    2023). Kwon, J.; Buchman, E. Tendermint: Byzantine Fault Tolerance in the Age
    of Blockchains. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and
    Communications Security (CCS ‘18), Toronto, ON, Canada, 15–19 October 2018. [Google
    Scholar] [CrossRef] Castro, M.; Liskov, B. Fast Byzantine Consensus. In Proceedings
    of the 3rd Symposium on Operating Systems Design and Implementation (OSDI ‘99),
    New Orleans, LA, USA, 22–25 February 1999. [Google Scholar] [CrossRef] The Diem
    Team. DiemBFT v4: State Machine Replication in the Diem Blockchain. 2021. Available
    online: https://developers.diem.com/papers/diem-consensus-state-machine-replication-in-the-diem-blockchain/2021-08-17.pdf
    (accessed on 25 September 2023). The Ontology Team. HotStuff: The Consensus Protocol
    Behind Facebook’s LibraBFT. Ontol. Tech Point. 2019. Available online: https://medium.com/ontologynetwork/hotstuff-the-consensus-protocol-behind-facebooks-librabft-a5503680b151
    (accessed on 25 November 2022). Karame, G.; Huth, M.; Vishik, C. An overview of
    blockchain science and engineering. R. Soc. Open Sci. 2020, 7, 200168. Available
    online: https://royalsocietypublishing.org/doi/10.1098/rsos.200168 (accessed on
    26 November 2022). [CrossRef] [PubMed] Saini, V. ConsensusPedia: An Encyclopedia
    of 30+ Consensus Algorithms—A complete list/comparison of all consensus algorithms.
    Medium. 2018. Available online: https://medium.com/hackernoon/consensuspedia-an-encyclopedia-of-29-consensus-algorithms-e9c4b4b7d08f
    (accessed on 25 September 2023). Law, F. Permissioned and Permissionless Blockchains.
    Available online: https://freemanlaw.com/permission-and-permissionless-blockchains/
    (accessed on 2 December 2022). Nyante, K. [EP-2] The Magic Behind Blockchain:
    ⇛ Partial Exploit ⇚. Medium. 2022. Available online: https://medium.com/naoris-protocol/ep-2-the-magic-behind-blockchain-partial-exploit-42d511d5db7e
    (accessed on 2 December 2022). Lesch, H. So Much about Digital. In Netflix Documentary
    Series; Netflix: Los Gatos, CA, USA, 2022. [Google Scholar] Bosch Implementa Rede
    Local 5G Para Produção Mais Inteligente em Aveiro e Ovar. Bosch Notícias e Histórias.
    2022. Available online: https://www.bosch.pt/noticias-e-historias/2021/bosch-implementa-rede-local-5g-para-producao-mais-inteligente-em-aveiro-e-ovar/
    (accessed on 5 December 2022). Airbus Launches Airspace Link 5G Air-to-Ground
    Broadband Connectivity in China. Airbus Aircr. Newsroom. 2022. Available online:
    https://aircraft.airbus.com/en/newsroom/news/2022-06-airbus-launches-airspace-link-5g-air-to-ground-broadband-connectivity-in
    (accessed on 5 December 2022). Intelligent Connected Factory with 5G Technology:
    Autonomous Logistics at BMW Group Plant Landshut Calculates Data in the Cloud.
    BMW PressClub Global. 2022. Available online: https://www.press.bmwgroup.com/global/article/detail/T0396773EN/intelligent-connected-factory-with-5g-technology:-autonomous-logistics-at-bmw-group-plant-landshut-calculates-data-in-the-cloud?language=en
    (accessed on 5 December 2022). Edge Computing Market by Component (Hardware, Software,
    and Services), Application (Smart Cities, Remote Monitoring, IIoT, AR and VR,
    Content Delivery), Organization Size (Large Enterprises and SMEs), Vertical and
    Region—Global Forecast to 2027, Markets and Markets. 2022. Available online: https://www.marketsandmarkets.com/Market-Reports/edge-computing-market-133384090.html?gclid=Cj0KCQiAyracBhDoARIsACGFcS4u9IrlmsvkM6lO-46_9MclyK7W47ujY4SsyN31ryb9k-Jy_D_PGZ8aAqMVEALw_wcB
    (accessed on 5 December 2022). Qiu, T.; Chi, J.; Zhou, X.; Ning, Z.; Atiquzzaman,
    M.; Wu, D.O. Edge Computing in Industrial Internet of Things: Architecture, Advances
    and Challenges. In IEEE Communications Surveys & Tutorials; Institute of Electrical
    and Electronics Engineers Inc.: Piscataway, NJ, USA, 2020; Volume 22, No. 4, 4th
    Quarter. [Google Scholar] Moser, B. Edge Computing Examples Across Vertical Industries,
    Digi Blog. 2022. Available online: https://digi.com/blog/post/edge-computing-examples-across-vertical-industries
    (accessed on 5 December 2022). Kumar, A.; Prakash, A. Impact of AI and Robotics
    on Human Resource Management. Int. J. Adv. Res. Manag. Soc. Sci. 2019, 8, 189–193.
    [Google Scholar] Freeman, R.B. The Use of Digital Technologies Has Enabled Companies
    to Optimize Their Operations and Create New Products and Services that Are More
    Personalised to Customers. Int. J. Bus. Econ. 2017, 16, 23–32. [Google Scholar]
    Jha, R. Challenges of Industry 4.0: The Lack of Knowledge and Expertise. 2019.
    Available online: https://www.themanufacturer.com/articles/industry-4-0-challenges/
    (accessed on 19 December 2022). Das, S. Top 4 Challenges of the Industry 4.0 Revolution.
    2020. Available online: https://www.forbes.com/sites/forbestechcouncil/2020/01/15/top-4-challenges-of-the-industry-4-0-revolution/?sh=7d3c3d48e7a2
    (accessed on 19 December 2022). Thalmann, N. What Are the Security Risks Associated
    with Industry 4.0? 2020. Available online: https://www.techrepublic.com/article/what-are-the-security-risks-associated-with-industry-4-0/
    (accessed on 19 December 2022). David, S.; Ngo, M. The Biggest Challenges of Industry
    4.0. 2020. Available online: https://www.manufacturingglobal.com/technology/biggest-challenges-industry-40
    (accessed on 19 December 2022). Abboud, M. Challenges of Implementing Industry
    4.0. 2020. Available online: https://www.sapinsider.com/it-strategy/challenges-of-implementing-industry-4-0/
    (accessed on 19 December 2022).      Disclaimer/Publisher’s Note: The statements,
    opinions and data contained in all publications are solely those of the individual
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to people or property resulting
    from any ideas, methods, instructions or products referred to in the content.  ©
    2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open
    access article distributed under the terms and conditions of the Creative Commons
    Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share
    and Cite MDPI and ACS Style Oliveira, M.; Chauhan, S.; Pereira, F.; Felgueiras,
    C.; Carvalho, D. Blockchain Protocols and Edge Computing Targeting Industry 5.0
    Needs. Sensors 2023, 23, 9174. https://doi.org/10.3390/s23229174 AMA Style Oliveira
    M, Chauhan S, Pereira F, Felgueiras C, Carvalho D. Blockchain Protocols and Edge
    Computing Targeting Industry 5.0 Needs. Sensors. 2023; 23(22):9174. https://doi.org/10.3390/s23229174
    Chicago/Turabian Style Oliveira, Miguel, Sumit Chauhan, Filipe Pereira, Carlos
    Felgueiras, and David Carvalho. 2023. \"Blockchain Protocols and Edge Computing
    Targeting Industry 5.0 Needs\" Sensors 23, no. 22: 9174. https://doi.org/10.3390/s23229174
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations ads   1 Crossref   1
    Scopus   1 Web of Science   1 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 10. Jan 20. Jan 30. Jan 9.
    Feb 19. Feb 29. Feb 10. Mar 20. Mar 30. Mar 0 500 1000 1500 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Blockchain Protocols and Edge Computing Targeting Industry 5.0 Needs
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Violino S.
  - Figorilli S.
  - Ferrigno M.
  - Manganiello V.
  - Pallottino F.
  - Costa C.
  - Menesatti P.
  citation_count: '3'
  description: In recent years, there has been an increasing demand for water to meet
    the world's growing population. At the same time, increasing drought phenomena
    reduce water availability. At present, traditional irrigation systems used by
    farmers allow them to supply the necessary amount of water to crops, but they
    often result in over-irrigation. The latter over time could lead to a loss of
    water resources. On the other hand, especially in case of water shortage, inefficient
    use of water may fail to meet irrigation needs. To remedy this problem, precision
    irrigation methods are being developed to dose the amount of water needed by crops
    without wasting both raw material and economics, in order to produce more with
    less. Specifically, the main technologies used in precision irrigation are IoT-based
    sensors and machine learning algorithms. In this sense, a data-driven bibliometric
    review on precision irrigation was conducted from 2001 to 2023; the analysis evidenced
    10 main clusters discussed considering the very recent literature after 2020.
    Among the clusters extracted through CiteSpace are those concerning UAVs (unmanned
    aerial vehicles), machine vision, WSN sensors (wireless sensor network) and energy
    savings. This shows that these topics concerning a new way of seeing precision
    irrigation, placing greater attention to new technologies and algorithms. The
    focus is on recent research related to monitoring and advanced control concepts
    for precision irrigation. It is expected that this revision work will serve as
    a useful reference to improve the reader's knowledge of advanced monitoring and
    control opportunities linked to precision irrigation.
  doi: 10.1016/j.atech.2023.100320
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Advanced bibliometric
    review on precision irrigation 3. Results and discussion 4. Conclusions Ethics
    statement Funding Declaration of Competing Interest Acknowledgments Appendix.
    Supplementary materials Data availability References Show full outline Cited by
    (3) Figures (4) Tables (2) Table 1 Table 2 Extras (1) Document Smart Agricultural
    Technology Volume 5, October 2023, 100320 A data-driven bibliometric review on
    precision irrigation Author links open overlay panel Simona Violino a, Simone
    Figorilli a, Marianna Ferrigno b, Veronica Manganiello c, Federico Pallottino
    a, Corrado Costa a, Paolo Menesatti a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.atech.2023.100320
    Get rights and content Under a Creative Commons license open access Highlights
    • Precision irrigation is a technique that optimizes irrigation water use. • A
    data driven bibliometric review has written based on citespace bibliometric tool.
    • A review was conducted from 2001 to 2023 evidencing 10 main clusters. • The
    technologies most highlighted by the cluster analysis are IoT and ML. Abstract
    In recent years, there has been an increasing demand for water to meet the world''s
    growing population. At the same time, increasing drought phenomena reduce water
    availability. At present, traditional irrigation systems used by farmers allow
    them to supply the necessary amount of water to crops, but they often result in
    over-irrigation. The latter over time could lead to a loss of water resources.
    On the other hand, especially in case of water shortage, inefficient use of water
    may fail to meet irrigation needs. To remedy this problem, precision irrigation
    methods are being developed to dose the amount of water needed by crops without
    wasting both raw material and economics, in order to produce more with less. Specifically,
    the main technologies used in precision irrigation are IoT-based sensors and machine
    learning algorithms. In this sense, a data-driven bibliometric review on precision
    irrigation was conducted from 2001 to 2023; the analysis evidenced 10 main clusters
    discussed considering the very recent literature after 2020. Among the clusters
    extracted through CiteSpace are those concerning UAVs (unmanned aerial vehicles),
    machine vision, WSN sensors (wireless sensor network) and energy savings. This
    shows that these topics concerning a new way of seeing precision irrigation, placing
    greater attention to new technologies and algorithms. The focus is on recent research
    related to monitoring and advanced control concepts for precision irrigation.
    It is expected that this revision work will serve as a useful reference to improve
    the reader''s knowledge of advanced monitoring and control opportunities linked
    to precision irrigation. Previous article in issue Next article in issue Keywords
    IoTMachine learningSmart irrigationNew advancementsWater resources 1. Introduction
    Precision irrigation is a water-saving technique that minimizes wastage and maximizes
    water requirements based on the actual needs of the plant, both in terms of water
    and nutrients, following site-specific soil texture and characteristics [1]. To
    date, precision irrigation aims to fulfill the growing food demand of an increasingly
    expanding population while minimizing environmental impact such as e.g., greenhouse
    gasses and fuel consumption [2]. In this regard, the Food and Agriculture Organization
    of the United Nations (FAO) has predicted that by 2050 there will be an increase
    of more than 50 percent in irrigated food production. This will lead to a 10 percent
    increase in water withdrawn in agriculture due to the raising productivity needs
    [3]. At the same time, climate change will affect the availability of water, generating
    conflicts between human activity depending on water, including crop productions
    and therefore also threatening food security [4]. The efficient use of water resources
    is essential to pursue sustainable development and to achieving the Sustainable
    Development Goals of 2030 Agenda for Sustainable Development, especially in developing
    world. The water related European policies, the Water Framework Directive [5]
    first, promote water use efficiency to pursue the quantitative and qualitative
    protection of water. The Farm to Fork strategy [5], (declining the Green Deal
    initiative in the agri-food sector) and its application within the Common Agricultural
    Policy also go in the direction of guiding the transition towards a fair, healthy
    and environmentally-friendly food system. Together with the Biodiversity strategy,
    it proposes ambitious actions and commitments to achieve specific objectives by
    2030, requiring the agri-food system to review its production models, also to
    tackle climate change and protect the environment and biodiversity. One of the
    advantages of precision irrigation is the reduction of greenhouse gas emissions
    thanks to the improvement of the carbon reserve function of the soil. New precision
    irrigation technologies can be applied to greenhouse gas mitigation measures by
    significantly reducing the amount of inputs that are responsible for the contribution
    of greenhouse gasses and could contribute to the goal of minimizing the impact
    agriculture on climate change [6]. This is the rationale that has raised many
    concerns, not only among agronomists who see water use efficiency for crop purposes
    only, but also among researchers because, besides inferior productions, low water
    quantity can cause adverse effects and lead to really significant climate change.
    These pressing concerns have prompted several sectors to reevaluate agricultural
    water use strategies the way water is used in agriculture, embracing innovative
    monitoring strategies for optimal irrigation use that take into account site-specific
    soil texture, moisture conditions, weather changes, and plant physiological conditions
    [7]. Smart, precision agriculture and DSS (Decision Support Systems) represent
    innovative approaches to monitor and increase the irrigation performances in comparison
    to traditional methods [8] and to reduce use of nutrient [9], contributing to
    reduce agricultural pressure on water quality and quantity. Lower water use due
    to precision irrigation could mitigate water scarcity caused by climate change
    [10]. In fact, considering water scarcity as the condition in which the availability
    of water resource is insufficient compared to its demand, reducing the demand
    for water helps prevent scarcity [11]. Over the past 100 years, global water demand
    has grown twice as fast as the world''s population increase. And with climate
    change in between, the situation is set to get worse in the coming decades. By
    2050, in fact, water scarcity will grow for 80% of agricultural land worldwide.
    This is revealed by a study of the Chinese Academy of Sciences that has developed
    a more complete index of water availability measurement than those used so far.
    The researchers have integrated in a single index is the so-called blue water,
    that is, the water supply that derives from irrigation from rivers, lakes and
    aquifers, both the green water, that is, the water that remains in the soil, available
    to plants, and rainfall drift. Until now, measurements were made without taking
    into account green water [11]. Water deficiency can be identified via the Water
    stress index (WSI). Initially this index was born to prevent food self-sufficiency
    in the light of the future expected droughts and a growing population in Africa.
    For this reason, the WSI has become the most widely applied measure for testing
    water scarcity. The WSI originally defined water scarcity in terms of the number
    of people competing to be supported by a single unit of water flow [12]. In 1981
    a stress index for crop water (CWSI) was formulated, based on the temperature
    difference between crown and air (T c T a) [13]: where (Tc - Ta) is measured foliage–air
    temperature differential, (Tc - Ta)LL expected lower limit of (Tc - Ta) in the
    case of a canopy which is transpiring at the potential rate, and (Tc - Ta)UL expected
    differential in the case of a non-transpiring canopy. Along with water availability
    to the plant, also its quality plays a crucial role. The Irrigation Water Quality
    Index (IWQI) [14]. Although the Index has been developed for potability assessment,
    it is used for agricultural purposes as well. El Behairy et al. [14] carried out
    a study assessing and classifying the IWQI using GIS for sustainable agricultural
    purposes. Indeed, the index include a series of parameters that are weighted such
    as i.e. salinity hazard, specific ion toxicity, trace element toxicity (Arsenic,
    Chloride, Cobalt, copper etc.) and others. The main function of precision irrigation
    is to safeguard water management because it allows to provide plants with the
    appropriate amount of irrigation water responding to the needs of crops in different
    periods of time without stress. Therefore, crop productivity is maximized with
    a minimum amount of water [15]. Among DSS, Irrigation advice systems are a useful
    tool for quantifying the water savings guaranteed by an irrigation investment,
    required by the regulations of the European investment funds (ESI) and by cohesion
    policy funds as a precondition for funding; this through the quantification of
    water amount used “ex ante” and “ex post”. At national level, the DSS as Irrigation
    advice systems have also been identified as potential tools for estimating the
    volumes withdrawn and used at regional and local level, where it was not technically
    and economically possible to install the meter. This as part of the regulatory
    actions aimed at applying water price policies based on quantification of water
    volume, implemented to comply with the ex-ante conditionalities for water resources
    applicable to the EAFRD (European agricultural fund for rural development) [16].
    Smart irrigation requires sensors to monitor soil, plant, and weather conditions.
    Through data acquisition and modeling, sensors allow the definition of precise
    differential inputs on the base of crops specific needs and thus to provide the
    necessary amount of water, avoiding over-irrigation and under-irrigation [17].
    Modern technologies not only optimize water requirements and decrease pollution,
    but also reduce costs and manual labor. In fact, farmers can easily monitor various
    parameters on smartphones or other computing devices to guide their decisions
    manually or intelligently [12]. As reported by Abioye et al. [18], 90 percent
    of farmers agree that better irrigation management through the use of mobile and
    web applications can help improve the yield and productivity of their farms. Moreover,
    historical database can help planning appropriate farming management activities.
    In general, as reported by Plaščak et al. [19], the first strategy to be evaluated
    in precision irrigation is the combination of crop and soil monitoring and crop
    growth simulation. Once this strategy is identified, the four actions underlying
    precision irrigation, namely data collection, data analysis, and system monitoring
    and evaluation, must be undertaken. In fact, precision irrigation systems require
    spatially accurate and up-to-date data through measurements taken in the field
    and collected with an array of sensors. Then, the data obtained are interpreted
    and analyzed by software to aid decision making. Finally, all the previous steps
    are implemented to avoid waste focusing on real agricultural needs allowing water
    conservation over time [20]. In light of the panorama outlined above, this review
    work expanded the scope of the literature in this research area. In detail, bibliometric
    analysis was performed as a research method to explore the structure and characteristics
    of scientific articles published on the topic of precision irrigation. Specifically,
    publications from 2001 to 2023 on Scopus were extracted to perform a bibliometric
    mapping and analysis. Then, the publications retrieved were analyzed through CiteSpace
    software (6.2.R2 −64-bit- Basic); [21] from which 10 clusters were identified
    based on the keywords used by the authors in the publications. This software allows
    you to analyze quotes in each article based on quotes from all other articles.
    Next, the software automatically creates identified clusters, based on the amount
    of cross-referencing by naming each cluster [21]. The identified clusters are
    discussed with reference to publications after 2020. A time scan of the publications
    on precision irrigation was also carried out, obtaining the list of the 20 strongest
    keywords used in the years included in the search. 2. Advanced bibliometric review
    on precision irrigation 2.1. Database search The Scopus database was accessed
    on February 27, 2023, and used to retrieve bibliographic records related to precision
    irrigation research for the period 2001–2023; 1688 publications were identified
    in the initial stages. The SCOPUS database was chosen because it contains one
    of the largest selections of scientific literature in the natural sciences [22].
    To identify relevant publications on precision irrigation, the following keywords
    were used in the combined title, abstract, and keyword fields (for each publication):
    “precision irrigation” AND “smart irrigation”. Because the Scopus search was conducted
    in February 2023, publications from 2022 to 2023 had not yet been fully entered
    into the Scopus database by Scopus staff and may be underestimated. Only terms
    that recurred in the combined title, abstract, or keyword fields at least in ten
    publication were extracted [23]. A RIS file for this search is included in Supplementary
    Information S1. 2.2. CiteSpace software CiteSpace software is designed to answer
    questions about a knowledge domain, which is a broadly defined concept covering
    a scientific field, research area, or scientific discipline. A knowledge domain
    is typically represented by a set of bibliographic records of relevant publications.
    The goal of CiteSpace is the analysis and visualization of networks. Through network
    modeling and visualization, the intellectual landscape of a knowledge domain can
    be explored [21]. Clusters are created using the tf-idf algorithm. This algorithm
    converts the different forms of the word and that of the same root into a single
    form by selecting word suffixes from the same root [24,25]. In this work, CiteSpace
    was used to examine documents related to precision irrigation between 2001 and
    2023. Keyword clustering analysis was performed which is then performed on the
    keyword co-occurrence network to obtain a knowledge map of keyword clustering
    analysis with 10 main clustering keywords. Subsequently, the analysis was performed
    to obtain the 20 keywords in strength over the period 2001–2023, thanks to which
    it was possible to estimate the year in which they began and ended their burst
    strength. In detail, the table with 20 keywords in strength was obtained through
    the Citation Burst function, which represents the detection of a burst event,
    which can last for several years and for a single year. A series of quotations
    indicates that a particular publication is associated with a wave of quotations.
    The explosion of citations in the CiteSpace occurs through the Kleinberg algorithm
    [26]. Through Citation Burst History is able to generate a summary list of articles
    associated with citations. This view shows which references have the strongest
    citation outbursts and the time periods when the strongest outbursts occurred
    [21]. 3. Results and discussion 3.1. Number of publications Fig. 1 shows the trend
    in the number of publications on precision irrigation over time. From the graph,
    we can see that in 2001, publications appeared in almost no quantity until 2006.
    Download : Download high-res image (139KB) Download : Download full-size image
    Fig. 1. The numbers of publications per year. In 2007, publications started to
    increase significantly, and by 2018 a total of 125 publications were detected
    in Precision Irrigation. By 2022, publications totalled 320. A first Increase
    in Publications occurred in 2007. In this period, we begin to talk about precision
    irrigation associated to wireless sensor network (Moisture Sensors of the Soil),
    control automatic system, drip irrigation and mathematical models to measure water
    management. Also, in 2019 there is a Second Increase in Publications. In these
    we begin to talk about near infrared, hyperspectral index linked to water content,
    Internet of Things (IoT), UAV, Agricultural Robot, Machine learning and Lora-Technologies.
    This shows a significant increase in the interest regarding this topic in recent
    years. The low number of publications in 2023 is due to the research including
    only the first two months of the year were considered. Therefore, the number is
    underestimated and will grow over time probably following the same pattern. Also,
    the number of publications in 2022 is underestimated because the articles are
    inserted until June of the same year because of the impact factor. Considering
    the authors’ countries affiliation, Table 2 reported the top 10 countries. In
    Table 2 it is possible to observe how the top countries are India, followed by
    the USA and China. As for the EU countries, there are Italy and Spain. Then Brazil,
    Australia, Saudi Arabia, Canada and Malaysia. In the work of Pallottino et al.
    [27] which has a range of publications between 2000 and 2016 the three top countries
    are USA, China and Germany. In contrast, in this work focused on precision irrigation
    the top country is India which probably for climate problems gives a huge contribution
    due to 400 occurences of publications by Indian authors. Regarding EU countries
    in this work there is no Germany but there is Italy and Spain which are important
    countries from an agricultural point of view. In the work of Pallottino et al.
    [27] they are at point 5 and 8 while in this work they are above Germany which
    does not appear among the top 10 top countries. Probably, Italy and Spain appear
    in the top 10 top countries for climate reasons. Other countries that invest in
    research for climate reasons and appear among the top 10 countries are Brazil,
    Australia, Saudi Arabia, Canada, and Malaysia [27]. 3.2. Cluster of research The
    visual analytics of the corresponding clusters, node by clusters on the authors’
    keywords reported by CiteSpace software was reported in Fig. 2. In this Figure
    keywords were connected by forming groups, each one corresponding to a specific
    homogeneous theme. Connecting the themes is the basis for linking the keywords
    together. The process of keyword synthesis and theme identification represents
    cluster analysis [28]. Download : Download high-res image (290KB) Download : Download
    full-size image Fig. 2. CiteSpace map of research trends. The number and name
    of each group are assigned based on the quantity of keywords to selected papers.
    As shown in Fig. 2, 10 clusters were extracted numbered #0 to #10; the smaller
    the number, the more literature was included. Based on the clustering themes,
    the research on precision irrigation (2001–2023) was divided into two phases of
    the time series. The clusters were presented in the following form: cluster label
    and size of the cluster. The highest-ranking clusters (i.e., #0, i.e., the most
    numerous) are represented in the middle part compared with the lowest ranking
    clusters (i.e., #10). As observed in Fig. 3, starting with the highest cluster,
    cluster #0 is about using internet, cluster #1 is about unmanned aerial vehicles
    (UAVs), cluster #2 is about crop coefficient, cluster #3 is about precision irrigation,
    cluster #4 is about lawn turf, cluster #5 is about irrigation system, cluster
    #6 is about cost-effective, cluster #7 is about using machine vision, cluster
    #8 is about wireless sensors network, cluster #9 is about sprinkler irrigation
    and cluster#10 is about energy saving (Fig. 3). Download : Download high-res image
    (852KB) Download : Download full-size image Fig. 3. A compendium of thematic areas
    on precision irrigation. Below, individual clusters will be examined in detail
    considering the most recent publications (≥ 2020) except for cluster #3 because
    it concerns precision irrigation i.e., the central topic of the review presented,
    encapsulating all other clusters (Table 1): Table 1. Some of the recent (2020–2023)
    technologies and methods in precision irrigation. Technological and methods applications
    Objective References Using of Internet e WSN An Open-Source Low-Cost Device for
    Apple Trentino (Italy) Precision Irrigation Figorilli et al. [21] IoT technology
    for smart agriculture Farooq et al. [22] UAV UAV Characteristics for Precision
    Agriculture Delavarpour et al. [23] Soil moisture content under high maize canopy
    coverage from UAV Cheng et al. [24] Estimation of canopy water status in maize
    using UAV-based digital and hyperspectral images Meyan et al. [25] Crop coefficient
    Crop Coefficient of Rain-Fed Tea Plants under a Subtropical Climate Zheng et al.
    [26] The effect of soil salinity on the crop coefficient (Kc) for cotton (Gossypium
    hirsutum L.) Ma et al. [27] Irrigation system for the purpose of minimizing water
    use but keeping lawn grass still green Gu et al. [28] Irrigation systems and sprinkler
    irrigation Drip Irrigation Prototype for Precision Irrigation AL-agele et al.
    [29] Development in sprinkler irrigation technology Yan et al. [30] Controlled
    sprinkler irrigation system for agricultural plant cultivation Satriyo et al.
    [31] A method to automatically detect and map center pivot irrigation systems
    Saraiva et al. [32] Cost-effective design Precision irrigation based on low-cost
    systems Plaščak et al. [13] Low-cost soil moisture sensors for precision irrigation
    Iqbal et al. [33] IoT system for precision irrigation in plasticulture fresh-market
    tomato Zhang et al. [34] Machine learning to monitoring a real-time irrigation
    management Gumiere et al. [2] Machine learning approach for an automatic irrigation
    system Blasi et al. [35] Machine learning analysis of crop color for autonomous
    irrigation Tschand [36] Energy saving Machine Vision in Precision Irrigation for
    Grapevines Liu et al. [20] Table 2. Top 10 authors’ countries affiliation. Countries
    Occurences India 400 United States 299 China 282 Italy 88 Spain 79 Brazil 58 Australia
    40 Saudi Arabia 40 Canada 37 Malaysia 37 3.2.1. Cluster #0 using internet and
    cluster#8 WSN These two clusters will be discussed together because as can be
    seen in Fig. 3, they are also almost overlapping graphically and have strictly
    common themes, because sensors networking is strictly correlated to the Internet
    in precision irrigation. This hypothesis prompted us to discuss together these
    two clusters. One of the way farmers use the Internet for precision irrigation
    is by accessing data from weather stations and other sensors (such as WSNs, which
    are small, low-power sensors that can be placed in a field to collect data on
    soil moisture, temperature, and other environmental factors). Figorilli et al.
    [29] performed a study using an IoT open-source LoRa (long-range) soil moisture
    device and data analysis in a cultivated area in the municipality of Tenna (Trentino,
    South Tyrol, Italy) The experiment was conducted on two different apple varieties
    during summer 2019. In the study by Farooq et al. [30], a smart gateway equipped
    with WSN sensors was developed to measure water level and flow for open-channel
    precision irrigation. The smart gateway allowed water content to be delivered
    according to crop needs by calculating the amount of water based on fuzzy decisions.
    The mobile dashboard provided real-time information and control to the farmer.
    The system has been tested on a pilot scale and with a MATLAB simulation. The
    rate of moisture decline at different temperatures was tested to predict irrigation
    days. In conclusion, the Internet is a powerful tool for precision irrigation
    because it provides access to real-time data and modeling tools that can help
    farmers optimize water use and improve crop yields. In detail, WSNs enable real-time
    data collection on soil moisture and other environmental factors, can help farmers
    make more informed decisions about when and how much water to apply to crops,
    improving water use efficiency and crop yields. In addition to that a connected
    system can alert the farmer with error messages evidencing in real-time a field
    problem such as a flood, the breakage of a sensor, through the installation of
    flow meters, part of the irrigation system with consequent waste of water and
    potential damage to crops or even problem with the energy supply which means pumps
    not working or an interrupted line. 3.2.2. Cluster #1 unmanned aerial vehicles
    (UAVs) Over the past decade, the use of UAVs has enabled many practical applications
    in precision agriculture (PA). The importance of this cluster is demonstrated
    by how these vehicles enable increased agricultural productivity while reducing
    operational costs. UAVs facilitate a range of agricultural activities, including
    scanning soil health, planning irrigation schedules, planting, fertilizer application,
    and analysing weather conditions [31]. As reported by Cheng et al. [32], UAVs
    are inexpensive means to perform accurate estimation of soil moisture content
    (SMC) in the field. UAVs had similar performance to machine learning algorithms
    and were stable for SMC estimates at various depths and even produced a lower
    relative error for deeper (20 cm) estimates. Therefore, this method can be used
    to monitor SMC and support precision irrigation systems with a contained budget.
    The work of Meyan et al. [33] also showed an important help of UAVs equipped with
    sensor technologies for estimating the water status of crops and corn in particular.
    This study aimed to estimate the leaf and canopy water status of inbred corn lines
    using digital and hyperspectral UAV data. The results obtained show that the leaf
    cover extracted directly from digital images acquired by UAV is suitable to replace
    the leaf area index, improving the data availability for canopy water status estimation;
    therefore, the UAV hyperspectral camera, through the application of appropriate
    image analysis techniques, can accurately estimate the water status of inbred
    maize lines. In conclusion, UAVs are a powerful tool for precision irrigation,
    providing farmers with valuable data on crop health, soil moisture and other variables
    that can be used to optimize irrigation practices. As technology advances, it
    is likely that the role of UAVs in precision agriculture will continue to grow.
    Moreover, drone can provide additional benefit to the farm management since normally
    sensors embedded generate info also related to the crop health within the same
    flight economically maximizing the output obtained i.e., for the increasing adoption
    of fertigation and chemigation strategies. Must be added as drone flight can aid,
    not only in discriminating differences and providing watering bulletin, but also
    in detecting potential pooling and leaks in the system giving the ability to intervene
    quickly. 3.2.3. Cluster #2 crop coefficient The culture coefficient (Kc) is a
    key factor in precision irrigation, as it plays a key role in determining the
    amount of water that crops need to grow and thrive. The culture coefficient is
    a dimensionless factor that links the actual water use of a crop to its potential
    water use under ideal growing conditions. By accurately estimating the crop coefficient
    for a particular crop and growing environment, farmers can optimize their irrigation
    practices and achieve maximum crop yield. The way farmers employ the crop coefficient
    in precision irrigation is by using weather station data and other sensors to
    calculate the water needs of their crops site-specifically. Using this data in
    combination with the crop coefficient, farmers can determine the amount of water
    that their crops need to grow and adjust their irrigation programs accordingly.
    Zheng et al. [34] determined the culture coefficient (Kc) of two tea cultivars
    (Camellia sinensis), clone varieties Baiye1 (BY1) and Longjing43 (LJ43), based
    on lysimetric data, through the water balance equation. In addition, the effect
    of tea cultivars and tea pruning practices on tea Kc has been verified. The results
    showed the reliability of Kc in the tea plantation showing differences in plant
    growth on the base of Kc. This provided a solid foundation for precise irrigation
    in tea plantations in the specific subtropical climate. Kc can also be a good
    method in soil salinity. In the study conducted by Ma et al. [35], experiments
    were conducted to study cotton Kc (Gossypium hirsutum L.) under different degrees
    of soil salinization. Three grades of irrigation water were used to irrigate the
    mulched cotton. In addition, the Ks model was used to estimate saline stress under
    real conditions. This could be useful for efficient water management in cotton
    cultivation systems under mulched drip irrigation in arid regions. In conclusion,
    the specific research area represented by Cluster #2 show great potential of Kc
    being this is a critical factor in precision irrigation. The information can be
    acquired both proximally or remotely with the ais of drones for the creation of
    Kc map with temporal and spatial variability, allowing farmers to accurately estimate
    the water needs of their crops and optimize their irrigation practices to achieve
    maximum yield. 3.2.4. Cluster #4 lawn turf Precision irrigation is a valuable
    method of managing the use of water in turf production and maintenance. Indeed
    turf is a popular landscape choice in many regions, but it can be difficult to
    maintain due to its high-water requirements. Precisely to reduce the use of water
    while maintaining from the turf, you can resort to precision irrigation, such
    as drip irrigation and micro-sprinklers. A study conducted by Gu et al. [36] highlighted
    the importance of water conservation in California especially during drought seasons,
    creating an automatic irrigation system in order to minimize water use, but keeping
    the turf green. The study exploited an artificial intelligence algorithm based
    on weather data and induced irrigation models. An application was then created
    to notify the user of the irrigation rate automatically calculated by the algorithm.
    This saves money and minimizes water pollution by preserving water resources in
    dry seasons. One advantage of precision irrigation systems for lawn turf is their
    ability to deliver water directly to the roots of the grass. This can help to
    reduce water waste and improve water-use efficiency. In addition, precision irrigation
    can be customized to match the specific water requirements of different types
    of turfgrass, ensuring that each area among several, receives the appropriate
    amount of water. 3.2.5. Cluster #5 irrigation systems Also in this case, the cluster
    will be described together with cluster #9 because the latter is also a precision
    irrigation hardware and technique included in cluster#5. A key component of precision
    irrigation is the use of advanced irrigation systems that can provide water exactly
    where and when it is needed. There are several types of irrigation systems that
    are commonly used for precision irrigation, including drip irrigation, sprinkler
    irrigation, and central pivot irrigation. Drip irrigation systems are one of the
    most common types of irrigation systems used primarily for automatic irrigation
    in the beginning and now for precision irrigation purposes due to the flexibility
    they present in terms of automation. These systems use a network of small tubes
    and emitters to provide water directly to the plant roots. Drip irrigation systems
    are highly efficient, as they can provide water exactly where it is needed, minimizing
    waste, and maximizing crop yields. As for drip irrigation, AL-agele et al. [37]
    has designed and built a variable speed drip sprinkler that monitors individual
    drops of water. Unlike ordinary drip sprinklers, this sprinkler adjusts the water
    application directly by monitoring the applied volume in contrast to the uniform
    drip irrigation systems that control the water application indirectly by pressure
    compensation and operating time. This can also be used to change the distance
    reached. In this way, this tool is valid energetically going to reduce water consumption
    and related costs. Another type of irrigation that is gradually expanding is sprinkler
    irrigation. This allows the water saving and the increase of the yield showing
    further positive effects also in the precision control of water and fertilizers.
    Sprinkler irrigation systems are another irrigation system commonly used for precision
    agriculture. These systems use a series of sprinklers to provide water over a
    large area. Sprinkler irrigation systems can be highly efficient, when used in
    combination with weather sensors and other advanced technologies that allow farmers
    to adjust their irrigation programs and application rates according to the needs
    of their crops [38]. Satriyo et al. [39] conducted a study on an optimized control
    system developed via the Internet of Things to control the rain irrigation systems
    used for growing shallots. The results showed that controlled rain irrigation
    can optimize all important parameters for the plant, allowing irrigation to be
    carried out according to the desired level of soil moisture. The third type of
    precision irrigation is central pivot irrigation. These systems use a self-propelled
    long arm that rotates around a central point, providing water to crops in a circular
    pattern. Central pivot irrigation system is very popular in United States and
    other countries where big field with flat surface are presents. This system is
    under continuous developments and nowadays can be completely controlled remotely
    via specific app. Is interesting how despite in the past End Gun cam be mounted
    at the end of the pipe which is a large sprinkler used to deliver water directly
    to the corners of the field that cannot be covered by the circular pattern of
    the pivot. Central pin irrigation systems can be highly efficient, especially
    when used in combination with soil moisture sensors and other advanced technologies
    that allow farmers to optimize their irrigation practices. On this topic, Saraiva
    et al. [40] proposed a method to automatically detect and map central pin irrigation
    systems using U-Net, a convolutional neural network architecture of image segmentation,
    applied to a constellation of PlanetScope images from the Cerrado biome of Brazil.
    Through the application of the neural network, 99% accuracy and an 88% recall
    were achieved to detect and map central pin irrigation systems in the study area.
    This method was proposed to detect and map central pin irrigation systems but
    has the potential to be scaled to larger areas also to improve and monitor the
    freshwater use by agricultural activities. 3.2.6. Cluster #6 cost-effective design
    This cluster shows, like always happens with technology under development, a step
    in the TRL (Technology Readiness Level). The implementation and use of a technology
    is strictly correlated with its cost in relation to the benefits it directly produces.
    Indeed, precision irrigation is an effective way to optimize the use of water
    in agriculture, but it can also be expensive to implement. However, recent research
    have focused on developing economic projects for precision irrigation systems
    that can provide the same benefits at a lower cost. One of these is the use of
    low-cost sensors and controllers to monitor and adjust irrigation programs based
    on real-time data. A study by Plaščak et al. [19] used pivot systems for data
    collection of soil temperature and surface temperature of the plant for the development
    of automatic irrigation. These systems have been found to be very convenient thanks
    to the low cost and ease of use even for small farmers. As reported by Iqbal et
    al. [41] ground moisture sensors were built using brass, copper and steel, in
    order to improve water productivity through a precision irrigation application.
    The cost of manufacturing these sensors was 10 times lower than that of imported
    sensors. Therefore, the results of the study showed that moisture sensors made
    of steel are accurate and allow monitoring of soil moisture in real time to promote
    precision irrigation and are low-cost tools which represent a big plus since often
    sensors need to be replaced. Zhang et al. [42] ‘s work was also conducted on the
    Internet of Things (IoT) system to monitor real-time data from sensors and automate
    irrigation systems. In detail, a low-cost and easily implementable IoT system
    was used that can be used for precision crop irrigation (LoRaWAN). The system
    has had advantages related to energy consumption, communication, sensor reading
    and valve control and is implemented for precision and automatic irrigation operations
    for horticultural crops improving crop water efficiency and being cost-effective
    due to the low-cost technology in use. In conclusion, precision irrigation technologies
    are following a trend towards a reduction of the costs of the hardware and therefore
    in line with the needs of companies and farmers who need effective tools available
    at an appropriate price. In addition, there are also open-source software that
    can be used to avoid the payment of services subscriptions. 3.2.7. Cluster #7
    using machine vision This cluster focuses on data analysis. Machine vision technology
    has the potential to revolutionize precision irrigation by providing data elaborated,
    also in real-time, on plant water stress and enabling precise water delivery.
    In recent years, there has been a growing focus on the use of artificial vision
    for precision irrigation, showing very promising results [2]. In the work of Gumiere
    et al. [2] the matrix potential of a soil cultivated with cranberries has been
    monitored through a model based on machine learning comparing it with a deterministic
    model based on physics. The results showed that although both models can accurately
    predict the potential of the soil matrix in the root zone, the machine learning
    model certainly has better performance. Blasi et al. [43] has conducted work to
    provide water irrigation scheduling using artificial intelligence (machine learning)
    to detect soil humidity and temperature by means of sensors that inhibit automatic
    irrigation following the humidity level. The intelligent automatic irrigation
    system model was built using the Decision Tree (DT) algorithm, which is a machine
    learning algorithm. The model showed a predictive accuracy of 97.86%, showing
    a good potential for irrigation scheduling in agriculture. Another Machine Learning
    approach was applied by Tschand [44]. In this work was built an IoT irrigation
    network for African territories. Then, was applied a semi-supervised model used
    to train a two-way recurring neural network. Model tests had a precision percentage
    of 89.1% and a binary classification success of 96.0%. The neural network reduced
    the negative impact of water scarcity on agricultural yields. In conclusion, machine
    vision technology has the potential to greatly improve precision irrigation by
    providing real-time data on plant water stress, health and growth, but can also
    be used for other scope i.e., pests detection. Using machine vision, farmers can
    optimize water use and increase harvests, improving profitability and sustainability.
    3.2.8. Cluster #10 energy saving Probably in line with the emerging problems worldwide,
    energy increasing demand and war just to cite some of them, this Cluster acquired
    importance over the last years. Indeed, the last cluster deals with the main topic
    of precision irrigation, namely Energy saving. This is important because pumping
    and water distribution can be energy intensive processes. There are several ways
    to reduce energy consumption in precision irrigation, such as optimizing system
    design, using efficient irrigation technologies, and using renewable energy sources
    [28]. As reported by Liu et al. [28], optimizing system design can help reduce
    energy consumption in precision irrigation. The work reported that by using smaller
    tubes, friction losses are reduced, and elevation changes minimized. This can
    help reduce pumping requirement and energy consumption. In addition, the use of
    efficient irrigation technologies such as drip irrigation and micro-sprinklers
    can also help reduce energy consumption by reducing water losses and improving
    water use efficiency. Another way to reduce energy consumption in precision irrigation
    is to use renewable energy sources such as solar energy. Overall, energy saving
    is a fundamental consideration in precision irrigation, and there are several
    ways to reduce energy usage while still maintaining effective irrigation practices.
    By optimizing system design, using efficient irrigation technologies, and incorporating
    renewable energy sources, it is possible to achieve both water and energy savings
    in precision irrigation systems. 3.3. Analysis of top 20 keywords in strength
    To better represent the central keywords, we have extracted the top 20 key words
    by diffusion force (Fig. 4). In terms of burst strength, the emergence of the
    frontier of research is likely to lead to an explosion of its keywords in a short
    time, with the result that the frontier evolves into the next hot topic or disappears
    and then we can get an idea of the evolution of research topics in the field from
    burst analysis [28]. Download : Download high-res image (647KB) Download : Download
    full-size image Fig. 4. CiteSpace analysis of keywords within items mentioned
    in search articles retrieved from the query. The color bars on the right represent
    the following period bands. Red: burst in the use of the term; dark blue-green:
    the term was used below the threshold of burst; pale blue-green: the term was
    not used. \" Begins\" and \"Ends\" represent the time interval (i.e., \"Year\")
    in which each term has been used. The bursting period of the term is between 2001
    and 2023. There are terms that in some periods have never been used. The red bar
    is the most indicative of the use of the term and its exploding period. It can
    be observed that in the last years and therefore starting from 2021 there has
    been an explosion of some terms that are absent in the first years of research.
    These keywords are “smart agriculture”, “internet of things”, “learning algorithm”
    and “deep learning”. These words exploded in 2021 and are still in use. Probably,
    this indicates that the theme of precision irrigation via IoT sensors and deep
    learning is expanding compared to traditional methods that are no longer mentioned
    in publications in recent years. In fact, some words such as “central pivot”,
    “control system” and “artificial vision” have ended their explosion already for
    some years, leaving room for technological innovation. As shown in Fig. 1, the
    number of publications remains quite constant between 2001 and 2016 with slight
    increases, while since 2017 a drastic increase could be observed. This trend is
    closely related to that shown in Fig. 3. In fact, in Fig. 3 in recent years the
    most popular words are those related to the implementation of robotics and AI
    technologies. In fact, recently, the traditional precision irrigation techniques
    popular until 2014 are giving way to modern IoT and Machine learning techniques.
    For example, one study that highlights the importance of irrigation systems in
    precision agriculture using sensors is the research conducted by El Chami et al.
    [45]. In their study, was to evaluate the effectiveness of a low-cost wireless
    soil moisture sensor in order to determine the level of irrigation to optimize
    marketable yield, fruit quality and economic profit for tomatoes. 3.3.1. Artificial
    intelligence - AI In precision irrigation, AI is an approach that relies on machine
    learning algorithms to analyze large sets of environmental and plant growth data
    to identify models and relationships that can be used to predict irrigation strategies
    optimal [46]. The raising of AI is due to both, the development of new algorithm,
    and the strong increase of computational power achieved by computers. For example,
    Zhang et al. [46] used machine learning to develop a model for providing optimal
    irrigation programs for tomato crops in greenhouses based on environmental variables
    such as temperature, humidity, and solar radiation. The model was found to significantly
    improve crop yield and reduce water consumption compared to traditional irrigation
    methods. Another approach to precision irrigation via AI is based on decision
    support systems (DSS), which provide real-time recommendations for irrigation
    management based on data from sensors and other sources [47]. For example, Katz
    et al. [47] has developed a DSS for precision irrigation of peach orchards, using
    data from soil moisture sensors, weather stations and satellite images to provide
    recommendations for programming and watering amount. The system was found to significantly
    improve water usage efficiency and crop yield compared to traditional irrigation
    methods. The results showed that the IP was within the operating water status
    range of 15 MC, so excess irrigation was applied to the orchard. AI models, in
    addition to machine learning and DSS approaches, have also been used to predict
    demand for crop water based on plant growth phase and other factors. Among the
    different machine learning techniques that can be used in precision irrigation
    are regression analysis, decision trees, and neural networks. These techniques
    can be used to predict crop water needs, to optimize irrigation planning and to
    predict crop yields. Thus, AI in precision irrigation offers several advantages,
    including [38]: • Improved crop yield: machine learning models can optimize the
    amount and timing of irrigation, which can lead to better crop yield. • Efficient
    water use: Machine learning models can help reduce water waste by optimizing the
    amount of water used for irrigation. • Reduced costs: Efficient use of water can
    reduce irrigation costs. • Environmental benefits: Efficient use of water can
    help reduce the environmental impact of agriculture by reducing water waste and
    preserving water resources. Because of all these advantages, it can be argued
    that machine learning is a powerful technology that can be used to improve precision
    irrigation systems that will lead to more sustainable farming practices for the
    benefit of both farmers and the environment [38]. As reported by Figorilli et
    al. [29] supervised adaptive predictive models can be used for optimization and
    management of precision irrigation agricultural practices, based on data obtained
    through sensors. They are called adaptive because they are self-learning as new
    data are acquired, updating the model over time. The main model employed is based
    on the TimeLag/TimeSeries concept, which accounts for the time interval between
    water supply and soil moisture data by employing cross-correlation analysis. Through
    these models, decisions are made, which in the context of precision irrigation
    is to suggest proper water supply to keep the crop always in the optimal range
    without wasting water-soluble fertilizer and/or energy. In the consortium over
    the course of the 78 days during the dry season, a total saving of 255 mm of irrigated
    water and 44,000 kW of electricity was produced, equal to 10.82%. 3.3.2. Internet
    of things (IoT) In recent years, the Internet of Things (IoT) is a widely used
    approach in precision irrigation, especially for observing various information
    related to soil humidity and temperature and weather conditions. The IoT uses
    low-power wireless technologies, inexpensive devices, and cloud data centers for
    storage [48]. The advantage of IoT irrigation systems lies in the fact that they
    can be used even when farmers do not have much economic resources. In fact, these
    are mostly low-cost sensors and controllers that can be used by anyone [49]. The
    type of sensors used when there is a shortage of water are those designed to be
    operated remotely exploiting IoT ecosystems. They take precise measures for planning
    irrigation, considering parameters such as water quantity, temperature, and humidity
    [29]. Currently, technologies defined as IoT are radio frequency identification
    devices (RFID), lorawan, Zigbee, Bluetooth, Long-Term Evolution (LTE), and other
    wireless communication technologies [50]. There are several works in the literature
    on the use of IoT technologies in precision irrigation. In the work of King et
    al. [51] an IoT system was developed, consisting of several sensors in order to
    monitor the real-time weather conditions, the temperature of the crown of the
    vine, the soil moisture and the amount of irrigation. Roy et al. [52] has developed
    an IoT irrigation planning system for efficient water management in farmland.
    This low-cost sensor is easy to use and results in a 10.21% increase in crop productivity
    compared to traditional manual irrigation methods. In the study of Abioye et al.
    [50] an IoT system was created to monitor irrigation for the cultivation of the
    Mustard Leaff plant showing an excellent method to monitor the volumetric content
    of water in the soil. Thanks to the controller you will have an optimal control
    action for better water saving, reduced energy consumption and higher yields.
    In general, the IoT defines itself as an extension of the Internet to all devices
    that can communicate with electronic equipment and are connected to the Internet
    and for this it is easy to use and manage. The use of IoT sensors is a valuable
    aid for farmers who can better understand crops, reducing environmental impact
    and conserving resources, using fewer resources, such as fertilizers, water and
    seeds [53]. 4. Conclusions In conclusion, the present work showed a panorama that
    underline the potential of precision irrigation to tell farmers where and how
    much to water underlining the deriving benefits. Precision irrigation has emerged
    as a promising solution for sustainable agriculture by improving water use efficiency
    and crop productivity. With the help of advanced technologies, such as sensors,
    machine learning, and data analytics, precision irrigation systems can provide
    accurate information about soil moisture levels, plant water requirements, and
    weather conditions. By using this information to deliver water precisely where
    and when it is needed, farmers can reduce water wastage, save energy costs, and
    increase yields. Souza and Rodrigues (2022) found that through the use of precision
    irrigation it is possible to reach energy savings potentials of up to 4,8% while
    the average potential for raised profitability using precision irrigation equal
    to 16.4%. Precision irrigation not only benefits farmers but also contributes
    to the conservation of water resources and the protection of the environment.
    As precision irrigation technologies continue to advance, it is expected that
    they will play an increasingly critical role in ensuring food security and addressing
    water scarcity challenges in many regions of the world. In this regard, it was
    surprising to see that no specific clusters regarding water consumption, water
    resources depletion and irrigation efficiency were identified by the bibliometric
    analysis. Precision irrigation has already gained significant traction in regions
    with limited water resources, advanced technology and knowledge availability or
    facing frequent droughts, such as the Middle East, America, Australia, and parts
    of Africa. However, there is still a long way to go before precision irrigation
    becomes a mainstream solution for agriculture globally. The high initial investment
    cost and technical complexity of precision irrigation systems pose a barrier for
    many small-scale farmers. Thus, governments and other stakeholders must work towards
    creating incentives and programs that support the adoption of precision irrigation.
    Common Agricultural Policy (CAP), in compliance with Water framework Directive
    (WFD) and Farm to Fork Strategy, promote agriculture and precision irrigation
    as sustainable agronomic practices able for contributing to society''s needs in
    terms of nutrition and health. Furthermore, when providing investment support,
    Member States are required to pay particular attention to the cross-cutting objective
    of modernizing agriculture, promoting innovation and digitalisation in agriculture
    and rural areas. Support for the modernization and development of irrigation infrastructure
    is permitted only where it does not compromise the good quality status of the
    water. Italian CAP Strategic Plan identifies adaptation to climate change and
    rationalization of the use of water for irrigation purposes as one of the priority
    objectives to be pursued, in compliance with the territorial needs and the environmental
    objectives defined at River Basin District level. Therefore, it provides both
    support to investments in more efficient irrigation systems (through investment
    measures) and the adoption (through agro-environmental-climate measures) of agricultural
    practices and Decision Support Systems (DSS), to rationalize the use of fertilizers,
    plant protection products and water, allowing an efficient use of resources and
    the reduction of pollution. Even in the context of Italian Recovery and Resilience
    Plan, under the Next Generation EU, investments for innovation and the digitization
    of irrigation are envisaged. In particular, the investment program for Innovation
    and mechanization in the agricultural and food sector, in charge of Italian Ministry
    of Agriculture, finances the implementation of smart technologies for irrigation
    and water management on farms. Additionally, continuous research and development
    are crucial for improving the efficiency and affordability of precision irrigation
    systems. By addressing these challenges, we can unlock the full potential of precision
    irrigation in sustainable agriculture and ensure a more resilient and food-secure
    future for all. Ethics statement Not applicable: This manuscript does not include
    human or animal research. Funding This work was funded by the Italian Ministry
    of Agriculture, Ministry of Agriculture, Food Sovereignty and Forestry (MASAF),
    national program sub-project “Tecnologie digitali integrate per il rafforzamento
    sostenibile di produzioni e trasformazioni agroalimentari (AgroFiliere)” (AgriDigit
    program) (DM 36503.7305.2018 of 20/12/2018) and AGROENER project (D.D. n. 26329,
    1 April 2016). Declaration of Competing Interest The authors declare that they
    have no known competing financial interests or personal relationships that could
    have appeared to influence the work reported in this paper. Acknowledgments This
    paper, falls under FAO''s 17 Sustainable Development Goals (https://www.fao.org/sustainable-development-goals/goals/goal-1/en/)
    and specifically on SDG 2 (End hunger, achieve food security and improved nutrition
    and promote sustainable agriculture). Appendix. Supplementary materials Download
    : Download text file (15MB) Data availability We shared the data as Supplementary
    material (RIS file). References [1] E.A. Abioye, M.S.Z. Abidin, M.S.A. Mahmud,
    S. Buyamin, M.H.I. Ishak, M.K.I. Abd Rahman, A.O. Otuoze, P. Onotu, M.S.A. Ramli
    A review on monitoring and advanced control strategies for precision irrigation
    Comput. Electron. Agric., 173 (2020), Article 105441, 10.1016/j.compag.2020.105441
    View PDFView articleView in ScopusGoogle Scholar [2] S.J. Gumiere, M. Camporese,
    A. Botto, J.A. Lafond, C. Paniconi, J. Gallichand, A.N. Rousseau Machine learning
    vs. physics-based modeling for real-time irrigation management Front. Water, 2
    (2020), p. 8, 10.3389/frwa.2020.00008 View in ScopusGoogle Scholar [3] FAO World
    Food and Agriculture - Statistical Yearbook 2020 FAO, Rome, Italy (2020), 10.4060/cb1329en
    World Food and Agriculture - Statistical Yearbook Google Scholar [4] UNESCO UN-Water,
    United Nations World Water Development Report 2020:Water and Climate Change UNESCO,
    Paris (2020) https://unesdoc.unesco.org/ark:/48223/pf0000372985.locale=en Google
    Scholar [5] European Commission From Communication, THE commission to the european
    parliament, the council, the european economic and social committee and the committee
    of the regions: A farm to fork strategy for a fair, healthy and environmentally-friendly
    food system, COM 381 (2020). https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:52020DC0381.
    Google Scholar [6] A. Balafoutis, B. Beck, S. Fountas, J. Vangeyte, T. Van der
    Wal, I. Soto, M. Gómez-Barbero, A. Barnes, V. Eory Precision agriculture technologies
    contributing to GHG emissions mitigation, farm and economics Sustainability, 9
    (8) (2017), p. 1339, 10.3390/su9081339 View in ScopusGoogle Scholar [7] E. Bwambale,
    F.K. Abagale, G.K. Anornu Smart irrigation monitoring and control strategies for
    improving water use efficiency in precision agriculture: a review Agric. Water
    Manag., 260 (2022), Article 107324, 10.1016/j.agwat.2021.107324 View PDFView articleView
    in ScopusGoogle Scholar [8] R. Divya, R. Chinnaiyan Reliable AI-based smart sensors
    for managing irrigation resources in agriculture - a review Proceedings of the
    International Conference on Computer Networks and Communication Technologies:
    ICCNCT 2018, Springer, Singapore (2019), pp. 263-274 CrossRefView in ScopusGoogle
    Scholar [9] M. Karaşahin, O. Dündar, A. Samanci The way of yield increasing and
    cost reducing in agriculture: smart irrigation and fertigation TURJFAS, 6 (10)
    (2018), pp. 1370-1380, 10.24925/turjaf.v6i10.1370-1380.1985 Google Scholar [10]
    G. Nikolaou, D. Neocleous, A. Christou, E. Kitta, N. Katsoulas Implementing sustainable
    irrigation in water-scarce regions under the impact of climate change Agronomy,
    10 (2020), p. 1120, 10.3390/agronomy10081120 View in ScopusGoogle Scholar [11]
    X. Liu, W. Liu, Q. Tang, B. Liu, Y. Wada, H. Yang Global agricultural water scarcity
    assessment incorporating blue and green water availability under future climate
    change Earth’s Future, 10 (2022), Article e2021EF002567, 10.1029/2021EF002567
    View in ScopusGoogle Scholar [12] G.K. Ding, S. Ghosh Sustainable Water Management—A
    Strategy for Maintaining Future Water Resources M.A. Abraham (Ed.), Encyclopedia
    of Sustainable Technologies, Elsevier, Oxford, UK (2017), pp. 91-103 View PDFView
    articleView in ScopusGoogle Scholar [13] L. Testi, D.A. Goldhamer, F. Iniesta,
    M. Salinas Crop water stress index is a sensitive water stress indicator in pistachio
    trees Irrig. Sci., 26 (2008), pp. 395-405, 10.1007/s00271-008-0104-5 View in ScopusGoogle
    Scholar [14] R.A. El Behairy, A.A. El Baroudy, M.M. Ibrahim, A.M. Kheir, M.S.
    Shokr Modelling and assessment of irrigation water quality index using GIS in
    semi-arid region for sustainable agriculture Water Air Soil Pollut., 232 (9) (2021),
    p. 352, 10.1007/s11270-021-05310-0 View in ScopusGoogle Scholar [15] P.S. Brahmanand,
    A.K. Singh Precision irrigation water management-current status, scope and challenges
    Indian J. Fertil., 18 (2022), pp. 372-380 Google Scholar [16] R. Zucaro, M. Ferrigno,
    V. Manganiello Italian approach to quantify water for irrigation Proceedings of
    the 11th World Congress of EWRA on Water Resources and Environment, Madrid, Spain
    (2019) 25-29 June Google Scholar [17] C. Kamienski, J.P. Soininen, M. Taumberger,
    R. Dantas, A. Toscano, T. Salmon Cinotti, R.F. Maia, A. Torre Neto Smart water
    management platform: ioT-based precision irrigation for agriculture Sensors, 19
    (2) (2019), p. 276, 10.3390/s19020276 View in ScopusGoogle Scholar [18] E.A. Abioye,
    O. Hensel, T.J. Esau, O. Elijah, M.S.Z. Abidin, A.S. Ayobami, O. Yerima, A. Nasirahmadi
    Precision irrigation management using machine learning and digital farming solutions
    AgriEngineering, 4 (1) (2022), pp. 70-103, 10.3390/agriengineering4010006 View
    in ScopusGoogle Scholar [19] I. Plaščak, M. Jurišić, D. Radočaj, M. Vujić, D.
    Zimmer An overview of precision irrigation systems used in agriculture Teh. Glas.,
    15 (4) (2021), pp. 546-553, 10.31803/tg-20210416103500 View in ScopusGoogle Scholar
    [20] G.P. Lakshmi, P.N. Asha, G. Sandhya, S.V. Sharma, S. Shilpashree, S.G. Subramanya
    An intelligent IOT sensor coupled precision irrigation model for agriculture Measurement,
    25 (2023), Article 100608, 10.1016/j.measen.2022.100608 Google Scholar [21] C.
    Chen The citespace manual CCI, 1 (1) (2014), pp. 1-84 http://cluster.ischool.drexel.edu/∼cchen/citespace/CiteSpaceManual.pdf
    (accessed 12 April 2023) View in ScopusGoogle Scholar [22] P. Mongeon, A. Paul-Hus
    The journal coverage of Web of Science and Scopus: a comparative analysis Scientometrics,
    106 (2016), pp. 213-228, 10.1007/s11192-015-1765-5 View in ScopusGoogle Scholar
    [23] C. Schillaci, S. Saia, M. Acutis Modelling of soil organic carbon in the
    Mediterranean area: a systematic map Rend. Online Soc. Geol., 46 (2018), pp. 161-166
    Ital CrossRefView in ScopusGoogle Scholar [24] G. Miner, I.V.J. Elder, A. Fast,
    T. Hill, R. Nisbet, D. Delen Practical Text Mining and Statistical Analysis For
    Non-Structured Text Data Applica­Tions Academic Press (2012) Google Scholar [25]
    M.F. Porter An algorithm for suffix stripping Program., 14 (3) (1980), pp. 130-137,
    10.1108/eb046814 View in ScopusGoogle Scholar [26] J. Kleinberg Bursty and hierarchical
    structure in streams Proceedings of the Eighth ACM SIGKDD International Conference
    on Knowledge Discovery and Data Mining (2002), pp. 91-101 View in ScopusGoogle
    Scholar [27] F. Pallottino, M. Biocca, P. Nardi, S. Figorilli, P. Menesatti, C.
    Costa Science mapping approach to analyze the research evolution on precision
    agriculture: world, EU and Italian situation Precis. Agric., 19 (6) (2018), pp.
    1011-1026, 10.1007/s11119-018-9569-2 View in ScopusGoogle Scholar [28] H. Liu,
    D. Peng, H.J. Yang, Y. Mu, Y. Zhu Exploring the evolution of sustainable fisheries
    development: focusing on ecological, environmental and management issues Ecol.
    Inform. (2023), Article 102004, 10.1016/j.ecoinf.2023.102004 View PDFView articleView
    in ScopusGoogle Scholar [29] S. Figorilli, F. Pallottino, G. Colle, D. Spada,
    C. Beni, F. Tocci, S. Vasta, F. Antonucci, M. Pagano, M. Fedrizzi, C. Costa An
    open-source low-cost device coupled with an adaptative time-lag time-series linear
    forecasting modeling for apple trentino (Italy) precision irrigation Sensors,
    21 (8) (2021), p. 2656, 10.3390/s21082656 View in ScopusGoogle Scholar [30] M.S.
    Farooq, S. Riaz, A. Abid, T. Umer, Y.B. Zikria Role of IoT technology in agriculture:
    a systematic literature review Electronics, 9 (2) (2020), p. 319, 10.3390/electronics9020319
    Basel View in ScopusGoogle Scholar [31] N. Delavarpour, C. Koparan, J. Nowatzki,
    S. Bajwa, X. Sun A technical study on UAV characteristics for precision agriculture
    applications and associated practical challenges Remote. Sens., 13 (6) (2021),
    p. 1204, 10.3390/rs13061204 View in ScopusGoogle Scholar [32] M. Cheng, X. Jiao,
    Y. Liu, M. Shao, X. Yu, Y. Bai, Z. Wang, S. Wang, N. Tuohuti, S. Liu, L. Shi,
    D. Yin, X. Huang, C. Nie, X. Jin Estimation of soil moisture content under high
    maize canopy coverage from UAV multimodal data and machine learning Agric. Water
    Manag., 264 (2022), Article 107530, 10.1016/j.agwat.2022.107530 View PDFView articleView
    in ScopusGoogle Scholar [33] S. Meiyan, D. Qizhou, F. ShuaiPeng, Y. Xiaohong,
    Z. Jinyu, M. Lei, L. Baugou, M. Yuntao Improved estimation of canopy water status
    in maize using UAV-based digital and hyperspectral images Comput. Electron. Agric.,
    197 (2022), Article 106982, 10.1016/j.compag.2022.106982 View PDFView articleView
    in ScopusGoogle Scholar [34] S. Zheng, K. Ni, L. Ji, C. Zhao, H. Chai, X. Yi,
    W. He, J. Ruan Estimation of evapotranspiration and crop coefficient of rain-fed
    tea plants under a subtropical climate Agronomy, 11 (11) (2021), p. 2332, 10.3390/agronomy11112332
    View in ScopusGoogle Scholar [35] C. Ma, J. Wang, J. Li Evaluation of the effect
    of soil salinity on the crop coefficient (Kc) for cotton (Gossypium hirsutum L.)
    under mulched drip irrigation in arid regions Irrig. Sci., 41 (2023), pp. 235-249,
    10.1007/s00271-022-00842-7 View in ScopusGoogle Scholar [36] W. Gu, Z. Yi Machine
    learning on minimizing irrigation water for lawns J. Sustain. Dev. Energy Water
    Environ., 8 (4) (2020), pp. 701-714, 10.13044/j.sdewes.d7.0304 View in ScopusGoogle
    Scholar [37] H.A. AL-agele, H. Jashami, L. Nackley, C. Higgins A variable rate
    drip irrigation prototype for precision irrigation Agronomy, 11 (12) (2021), p.
    2493, 10.3390/agronomy11122493 View in ScopusGoogle Scholar [38] H. Yan, X. Hui,
    M. Li, Y. Xu Development in sprinkler irrigation technology in China Irrig. Drain.,
    69 (2020), pp. 75-87, 10.1002/ird.2435 View in ScopusGoogle Scholar [39] P. Satriyo,
    I.S. Nasution, D.V. Della Controlled sprinkler irrigation system for agricultural
    plant cultivation Proceedings of the IOP Conference Series: Earth and Environmental
    Science, 922, IOP Publishing (2021), Article 012046, 10.1088/1755-1315/922/1/012046
    View in ScopusGoogle Scholar [40] M. Saraiva, É. Protas, M. Salgado, J.C. Souza
    Automatic mapping of center pivot irrigation systems from satellite images using
    deep learning Remote Sens., 12 (3) (2020), p. 558, 10.3390/rs12030558 View in
    ScopusGoogle Scholar [41] U. Iqbal, A. Bakhsh, M.A. Shahid, S.H.H. Shah, S. Ali
    Development of low-cost indigenized soil moisture sensors for precision irrigation
    Pak. J. Agric., 57 (1) (2020), 10.21162/PAKJAS/20.9154 Google Scholar [42] H.
    Zhang, L. He, F. Di Gioia, D. Choi, A. Elia, P. Heinemann LoRaWAN based internet
    of things (IoT) system for precision irrigation in plasticulture fresh-market
    tomato Smart Agric. Technol., 2 (2022), Article 100053, 10.1016/j.atech.2022.100053
    View PDFView articleView in ScopusGoogle Scholar [43] A.H. Blasi, M.A. Abbadi,
    R. Al-Huweimel Machine learning approach for an automatic irrigation system in
    southern Jordan valley ETASR, 11 (1) (2021), pp. 6609-6613, 10.48084/etasr.3944
    View in ScopusGoogle Scholar [44] A. Tschand Semi-supervised machine learning
    analysis of crop colour for autonomous irrigation Smart Agric. Technol., 3 (2023),
    Article 100116, 10.1016/j.atech.2022.100116 View PDFView articleView in ScopusGoogle
    Scholar [45] A. El Chami, R. Cortignani, D. Dell''Unto, R. Mariotti, P. Santelli,
    R. Ruggeri, G. Colla, M. Cardarelli Optimization of applied irrigation water for
    high marketable yield, fruit quality and economic benefits of processing tomato
    using a low-cost wireless sensor Horticulturae, 9 (3) (2023), p. 390, 10.3390/horticulturae9030390
    View in ScopusGoogle Scholar [46] J. Zhang, K. Guan, B. Peng, C. Jiang, W. Zhou,
    Y. Yang, M. Pan, T.E. Franz, D.M. Heeren, D.R. Rudnick, O. Abimbola, H. Kimm,
    K. Caylor, S. Good, M. Khanna, J. Gates, Y. Cai Challenges and opportunities in
    precision irrigation decision-support systems for center pivots Environ. Res.
    Lett., 16 (5) (2021), Article 053003, 10.1088/1748-9326/abe436 View in ScopusGoogle
    Scholar [47] L. Katz, A. Ben-Gal, M.I. Litaor, A. Naor, M. Peres, A. Peeters,
    V. Alchanatis, Y. Cohen A spatiotemporal decision support protocol based on thermal
    imagery for variable rate drip irrigation of a peach orchard Irrig. Sci. (2022),
    pp. 1-19, 10.1007/s00271-022-00830-x Google Scholar [48] D.M.M. Vianny, A. John,
    S.K. Mohan, A. Sarlan, A. Ahmadian Water optimization technique for precision
    irrigation system using IoT and machine learning Sustain. Energy Technol. Assess.,
    52 (2022), Article 102307, 10.1016/j.seta.2022.102307 Google Scholar [49] L. García,
    L. Parra, J.M. Jimenez, J. Lloret, P. Lorenz IoT-based smart irrigation systems:
    an overview on the recent trends on sensors and IoT systems for irrigation in
    precision agriculture Sensors, 20 (4) (2020), p. 1042, 10.3390/s20041042 View
    in ScopusGoogle Scholar [50] E.A. Abioye, M.S.Z. Abidin, M.S.A. Mahmud, S. Buyamin,
    M.K.I. AbdRahman, A.O. Otuoze, M.S.A. Ramli, O.D. Ijike IoT-based monitoring and
    data-driven modelling of drip irrigation system for mustard leaf cultivation experiment
    Inf. Process. Agric., 8 (2) (2021), pp. 270-283, 10.1016/j.inpa.2020.05.004 View
    PDFView articleView in ScopusGoogle Scholar [51] B.A. King, K.C. Shellie A crop
    water stress index-based internet of things decision support system for precision
    irrigation of wine grape Smart Agric. Technol. (2023), Article 100202, 10.1016/j.atech.2023.100202
    View PDFView articleView in ScopusGoogle Scholar [52] S.K. Roy, S. Misra, N.S.
    Raghuwanshi, S.K. Das AgriSens: ioT-based dynamic irrigation scheduling system
    for water management of irrigated crops IoT J., 8 (6) (2020), pp. 5023-5030, 10.1109/JIOT.2020.3036126
    Google Scholar [53] K. Obaideen, B.A. Yousef, M.N. AlMallahi, Y.C. Tan, M. Mahmoud,
    H. Jaber, M. Ramadan An overview of smart irrigation systems using IoT Energy
    Nexus (2022), Article 100124, 10.1016/j.nexus.2022.100124 View PDFView articleView
    in ScopusGoogle Scholar Cited by (3) An overview of maritime psychology through
    bibliometric analysis: Present state and future prospects 2024, Ocean Engineering
    Show abstract Rural Development Policy for Water Management Sustainability in
    Italy: Opportunities to Achieve Water Framework Directive Objectives 2024, Lecture
    Notes in Civil Engineering Autonecrotic Tomato (Solanum lycopersicum L.) Line
    as a Potential Model for Applications in Proximal Sensing of Biotic and Abiotic
    Stress 2024, Agriculture (Switzerland) © 2023 The Authors. Published by Elsevier
    B.V. Recommended articles Secured telemetry based on time-variant sensing matrix
    – An empirical study of spectroscopic profiling Smart Agricultural Technology,
    Volume 5, 2023, Article 100268 Yinsheng Zhang, Menglei Liu View PDF Development
    of a multi scale interactive web-GIS system to monitor farming practices: A case
    study in Lemnos Island, Greece Smart Agricultural Technology, Volume 5, 2023,
    Article 100313 Kalliopi Avanidou, …, Thanasis Kizos View PDF Solutions and prospects
    for digital documentation of treatment data on-farm Smart Agricultural Technology,
    Volume 5, 2023, Article 100299 Hannah Görge, …, Joachim Krieter View PDF Show
    3 more articles Article Metrics Citations Citation Indexes: 5 Captures Readers:
    31 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Smart Agricultural Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A data-driven bibliometric review on precision irrigation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
