- analysis: '>'
  authors:
  - Chamara N.
  - Bai G.
  - Ge Y.
  citation_count: '1'
  description: 'Precision Agriculture (PA) promises to meet the future demands for
    food, feed, fiber, and fuel while keeping their production sustainable and environmentally
    friendly. PA relies heavily on sensing technologies to inform site-specific decision
    supports for planting, irrigation, fertilization, spraying, and harvesting. Traditional
    point-based sensors enjoy small data sizes but are limited in their capacity to
    measure plant and canopy parameters. On the other hand, imaging sensors can be
    powerful in measuring a wide range of these parameters, especially when coupled
    with Artificial Intelligence. The challenge, however, is the lack of computing,
    electric power, and connectivity infrastructure in agricultural fields, preventing
    the full utilization of imaging sensors. This paper reported AICropCAM, a field-deployable
    imaging framework that integrated edge image processing, Internet of Things (IoT),
    and LoRaWAN for low-power, long-range communication. The core component of AICropCAM
    is a stack of four Deep Convolutional Neural Networks (DCNN) models running sequentially:
    CropClassiNet for crop type classification, CanopySegNet for canopy cover quantification,
    PlantCountNet for plant and weed counting, and InsectNet for insect identification.
    These DCNN models were trained and tested with >43,000 field crop images collected
    offline. AICropCAM was embodied on a distributed wireless sensor network with
    its sensor node consisting of an RGB camera for image acquisition, a Raspberry
    Pi 4B single-board computer for edge image processing, and an Arduino MKR1310
    for LoRa communication and power management. Our testing showed that the time
    to run the DCNN models ranged from 0.20 s for InsectNet to 20.20 s for CanopySegNet,
    and power consumption ranged from 3.68 W for InsectNet to 5.83 W for CanopySegNet.
    The classification model CropClassiNet reported 94.5 % accuracy, and the segmentation
    model CanopySegNet reported 92.83 % accuracy. The two object detection models
    PlantCountNet and InsectNet reported mean average precision of 0.69 and 0.02 for
    the test images. Predictions from the DCNN models were transmitted to the ThingSpeak
    IoT platform for visualization and analytics. We concluded that AICropCAM successfully
    implemented image processing on the edge, drastically reduced the amount of data
    being transmitted, and could satisfy the real-time need for decision-making in
    PA. AICropCAM can be deployed on moving platforms such as center pivots or drones
    to increase its spatial coverage and resolution to support crop monitoring and
    field operations.'
  doi: 10.1016/j.compag.2023.108420
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Materials
    and methods 3. Results and discussion 4. Conclusion and future perspectives Funding
    CRediT authorship contribution statement Declaration of Competing Interest Acknowledgements
    Data availability References Show full outline Cited by (1) Figures (12) Show
    6 more figures Tables (7) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show
    all tables Computers and Electronics in Agriculture Volume 215, December 2023,
    108420 AICropCAM: Deploying classification, segmentation, detection, and counting
    deep-learning models for crop monitoring on the edge Author links open overlay
    panel Nipuna Chamara a, Geng Bai a, Yufeng Ge a b Show more Share Cite https://doi.org/10.1016/j.compag.2023.108420
    Get rights and content Under a Creative Commons license open access Highlights
    • We developed AICropCAM, an edge-computing enabled camera system for crop monitoring.
    • It integrated Raspberry Pi and Arduino for image processing and LoRa communication.
    • It ran a stack of four deep neural networks to characterize multiple plant/canopy
    parameters. • We quantified the power consumption and speed of the system for
    edge image-processing. • AICropCAM is a next-generation enabling technology for
    real-time, low-latency Ag applications. Abstract Precision Agriculture (PA) promises
    to meet the future demands for food, feed, fiber, and fuel while keeping their
    production sustainable and environmentally friendly. PA relies heavily on sensing
    technologies to inform site-specific decision supports for planting, irrigation,
    fertilization, spraying, and harvesting. Traditional point-based sensors enjoy
    small data sizes but are limited in their capacity to measure plant and canopy
    parameters. On the other hand, imaging sensors can be powerful in measuring a
    wide range of these parameters, especially when coupled with Artificial Intelligence.
    The challenge, however, is the lack of computing, electric power, and connectivity
    infrastructure in agricultural fields, preventing the full utilization of imaging
    sensors. This paper reported AICropCAM, a field-deployable imaging framework that
    integrated edge image processing, Internet of Things (IoT), and LoRaWAN for low-power,
    long-range communication. The core component of AICropCAM is a stack of four Deep
    Convolutional Neural Networks (DCNN) models running sequentially: CropClassiNet
    for crop type classification, CanopySegNet for canopy cover quantification, PlantCountNet
    for plant and weed counting, and InsectNet for insect identification. These DCNN
    models were trained and tested with >43,000 field crop images collected offline.
    AICropCAM was embodied on a distributed wireless sensor network with its sensor
    node consisting of an RGB camera for image acquisition, a Raspberry Pi 4B single-board
    computer for edge image processing, and an Arduino MKR1310 for LoRa communication
    and power management. Our testing showed that the time to run the DCNN models
    ranged from 0.20 s for InsectNet to 20.20 s for CanopySegNet, and power consumption
    ranged from 3.68 W for InsectNet to 5.83 W for CanopySegNet. The classification
    model CropClassiNet reported 94.5 % accuracy, and the segmentation model CanopySegNet
    reported 92.83 % accuracy. The two object detection models PlantCountNet and InsectNet
    reported mean average precision of 0.69 and 0.02 for the test images. Predictions
    from the DCNN models were transmitted to the ThingSpeak IoT platform for visualization
    and analytics. We concluded that AICropCAM successfully implemented image processing
    on the edge, drastically reduced the amount of data being transmitted, and could
    satisfy the real-time need for decision-making in PA. AICropCAM can be deployed
    on moving platforms such as center pivots or drones to increase its spatial coverage
    and resolution to support crop monitoring and field operations. Graphical abstract
    Download : Download high-res image (227KB) Download : Download full-size image
    Previous article in issue Next article in issue Keywords Artificial intelligenceComputer
    visionEdge computingInternet of thingsLoRaWANPrecision agriculture 1. Introduction
    The demands for food, feed, fiber, and fuel increase rapidly due to the fast expansion
    of the global population, income growth, technological advancement, and transport
    and logistics improvements (van Dijk et al., 2021). Precision agriculture (PA),
    which seeks to apply the right amount of inputs (fertilizers, irrigation water,
    pesticides, and other chemicals) in the right location at the right time, is essential
    to meet the requirements of future global food production, as well as environmental
    sustainability and climate resilience. PA is predicated on accurate sensor measurements,
    timely and sound decision-making, and automated actuators. The backbone of PA
    is the Internet of Things (IoT) technology that automates data collection, data
    analytics, data presentation, control, and efficient data communication (Chamara
    et al., 2022). Imaging sensors or digital cameras are essential for PA as they
    can capture more information than traditional scalar or vector sensors. Images
    can capture crop phenology for precise decision-making (Taylor and Browning, 2022,
    Tian et al., 2020). Cyclic events such as vegetative growth, flowering, leaf count
    and color change, maturation, and senescence are studied in crop phenology, which
    is essential to PA as it determines the management inputs required by crops. Moreover,
    images have rich information on the scene that allows for pest pressure evaluation.
    At present, a limited number of sensors are available for pest identification
    and pest pressure estimation. Among them, imaging sensors provide the most promising
    solution. Conventional (handcrafted feature extraction) and Artificial Intelligence
    (AI)-based image processing are the two branches of image processing. Traditional
    approaches extract image features defined by shape, texture, and color (Anubha
    et al., 2019, Yuan et al., 2019). The AI-based methods use Convolutional Neural
    Networks (CNN) to extract features from images (Luis et al., 2020). CNN models
    with multiple hidden layers for feature extraction and learning are considered
    Deep Convolutional Neural Networks (DCNN) (LeCun et al., 1998). Conventional imaging
    platforms in PA store images locally using onboard storage memories. Post processing
    refers to the processing of images stored at the central data storage in batches
    at a later time to extract useful information (Aasen et al., 2020). Imaging platforms
    that can access the internet through a stable connection with high bandwidth can
    automatically upload images to Cloud data storage. The vast majority of farmlands
    worldwide are in rural and remote areas with poor access to electric power and
    internet connectivity. This represents a big challenge for camera systems deployed
    in rural farmlands for high-speed image processing, data transmission, and low-latency
    decision-making (Richardson, 2019). Post-processing of crop images has been used
    for the estimation of leaf area index (Aasen et al., 2020), growth rate (Sakamoto
    et al., 2012), leaf chlorophyll and nitrogen content (Wang et al., 2014), fruit
    counts (Wang et al., 2014), and plant height (Sritarapipat et al., 2014). Further
    post-image processing allows for the assessment of biotic stress, such as pest
    density (Barbedo, 2014; Park et al., 2007) and weed pressure (Wang et al., 2019),
    as well as abiotic stress, such as nutrient deficiency (Ghorai et al., 2021).
    Richardson (2019) suggested that deep learning-based methods have the potential
    to facilitate the extraction of more sophisticated phenological data from both
    new and previously archived camera imagery compared to conventional image processing.
    Semantic segmentation-based canopy coverage (CC) estimation (Chamara et al., 2021;
    Liang et al., 2023), image classification-based crop identification (Anubha et
    al., 2019), disease identification (Sharma et al., 2020), growth stage prediction
    (Yasrab et al., 2021) and object detection-based plant feature identification
    (A. Wang et al., 2019) are examples of DCNN applications in agriculture. Conventional
    image processing requires less computational power and less energy, but they are
    limited in adaption to new scenarios, while deep learning requires high computational
    power and consumes more energy. DCNN models require large memory due to the large
    number of parameters these models hold. Therefore, it is not easy to implement
    these models practically in embedded systems that have less memory and computation
    power. These models also require a large amount of data to train to predict with
    high accuracy. Therefore, it is resource intensive. Edge image processing is the
    image processing done on image-capturing devices. The main advantage of edge image
    computing is that it lowers the high throughput data transmission requirement
    over a wireless IoT-enabled imaging network (Cao et al., 2020). Wang et al. (2022a)
    demonstrated the capability of identifying potted flowers with precision above
    89 % in real-time in a Jetson TX 2 computing module based on a DCNN algorithm.
    These authors suggested that a cloud-edge collaborative framework could achieve
    real-time and automatic learning for the DCNN model they have developed. Wang
    et al. (2022b) proposed a real-time weed detection model run on Jetson AGX Xavier
    for field robots. The authors proved it was possible to do real-time weed detection
    with a precision above 90 % yet required expensive hardware. Wang et al. (2022a)
    reviewed Raspberry Pi single-board computer-based real-time image processing applications.
    They concluded that Raspberry Pi (Datasheet Raspberry Pi Model B, 2019) is a cost-effective
    edge computing unit that could potentially be used as an edge image processing
    unit, and the capability of integrating it with IoT was also discussed. Zualkernan
    et al. (2022) demonstrated an edge image processing platform for the classification
    of animals and transmitting the identified animal and time of identification via
    LoRa for a camera trap. Past literature on IoT and image processing applications
    in agriculture has highlighted a research gap in edge image processing with IoT-enabled
    crop monitoring cameras. In-field crop cameras are expected to make real-time
    crop management decisions based on real-time image processing; however, poor internet
    connectivity in agricultural fields severely limits their capability. To address
    this gap, we have developed a novel imaging platform named AICropCAM that extracts
    plant and crop canopy level parameters through DCNN and uploads them to the Cloud
    via low-power, low-throughput communication protocols. We also demonstrated AICropCAM
    on an IoT-enable wireless sensor network in corn and soybean fields. A technology
    that addresses image processing at the lowest level (edge) and transmits only
    useful information can revolutionize real-time decision-making in PA. Therefore,
    the main objective of this paper is to demonstrate AICropCAM to perform edge image
    processing and low-throughput, low-power, and long-range data transmission through
    IoT technology. In this novel AICropCAM platform, multiple DCNN image processing
    algorithms run in series to extract plant-level and canopy-level features in an
    embedded system. Image classification, object detection with classification, and
    image segmentation are the three major applications of DCNN image processing,
    and all three are included in AICropCAM to demonstrate the capabilities of DCNN
    for image processing in PA. AICropCAM has trained models for canopy segmentation,
    crop classification, plant growth stage identification, plant counting, weed counting,
    and plant type identification. All the protocols that transmit data from AICropCAM
    to the Cloud were custom designed. AICropCAM sends the generated data to a cloud
    platform for logging, visualization, and analysis. Furthermore, this paper explains
    the DCNN model training process, model performance, and test results. We reported
    the model training comprehensively because it was essential for AICropCAM development.
    2. Materials and methods Essential activities in this research were data/image
    collection and preprocessing, hardware design for AICropCAM, software design for
    data transmission between the edge and the Cloud, deep learning model design,
    and model training and optimization (Fig. 1). AICropCAM was implemented in a corn
    and soybean field at the field phenotyping facility in Mead, Nebraska, USA (Bai
    et al., 2019). We demonstrated the training of the following DCNNs: CropClassiNet
    for classifying images based on image quality and crop type, CanopySegNet for
    segmenting crop canopy from the background, PlantCountNet for classifying and
    counting soybean and weed plants, and InsectNet for identifying insects and counting
    them. Download : Download high-res image (412KB) Download : Download full-size
    image Fig. 1. Steps of edge image processing program deployment on the embedded
    system (edge devices). 2.1. Image collection, annotation, preprocessing, and augmentation
    Image collection for DCNN model training occurred in four growing seasons using
    three different types of cameras: (i) commercially available Meidas SL122 trail
    cameras in 2019 (Meidas Trail Cameras, 2022), (ii) OV5642 imaging sensors with
    ArduCAM camera shields in 2020, and (iii) Raspberry Pi Camera Module V2 with Raspberry
    Pi Zero in 2021 and 2022 (Chamara, 2021). All the cameras were mounted on the
    bars horizontally extended and fixed on stationary poles erected vertically in
    the fields, as shown in Fig. 2A. The distance between the crop canopy and the
    cameras was maintained between 0.5 and 1.5 m throughout the growing seasons. Images
    used for training the InsectNet were also captured with smartphones as we could
    not collect enough images with insects from the three types of cameras mentioned
    above. Download : Download high-res image (338KB) Download : Download full-size
    image Fig. 2. Left: An Illustration of how AICropCAM was set up in the field for
    image collection. In addition to the camera, other components such as the solar
    panel and data logger were also shown. Right: A close-up view of AICropCAM and
    its hardware components. All three standard image annotation techniques in deep
    learning model training were utilized: (1) folder labeling for the image classification
    models, (2) pixel-level annotation for the semantic segmentation model, and (3)
    bounding boxes for object detection models. Images belonging to the same class
    were grouped into a single folder, and five distinct classes (or folders) were
    created: rejected, corn, soybean, grass, and night. Separating the crop canopy
    from the soil was done with pixel-level annotation and semantic segmentation.
    Bounding boxes, the smallest rectangle around an object, were drawn for corn plants,
    soybean plants, weed plants, and insects. Table 1 explains each type of annotation
    used in the model training. Table 1. Annotation criteria used to generate labels
    from the images to train and test the four deep convolutional neural network models
    in AICropCAM. Labeling Type Class Description Image classification (CropClassiNet)
    Rejected Images were labeled as rejected due to multiple reasons: blurred images
    caused by water droplets on the lens; the cameras turned away from the targeted
    crop; crops growing up to the camera blocking the view or capturing only a few
    leaves; people present in the images; lens covered with different stuff; and the
    camera was not installed in the field. Corn Images entirely covered by corn plants
    at different growth stages. Soybean Images entirely covered by soybean plants
    at different growth stages. Grass/Weed Images only comprise grass/weed plants
    at different growth stages. Night Images captured under low lighting conditions.
    Most of the cameras were not programmed to stop collecting images under low light.
    Crop canopy and background (CanopySegNet) Canopy Pixel labeling was done on the
    crop canopy. We used assisted freehand tool and the superpixel option in the MATLAB
    image labeler. Background Pixel labeling was done on the crop canopy. We used
    assisted freehand tool and the superpixel option in the MATLAB image labeler.
    Plant-type (PlantCountNet) Weed Weed present in the image was labeled using bounding
    boxes. It was challenging to locate the weed after the corn or soybean canopy
    was closed. Soybean Soybean plants present in the image were labeled using bounding
    boxes. Insects (InsectNet) Insects During the labeling process, without distinguishing
    insects based on their type, all the insects present in the images were labeled
    using bounding boxes. Image preprocessing is necessary for DCNN model training
    and real-time edge image processing. Differences in the input layer size in different
    DCNN models demand that images be resized before passing through the model for
    training or prediction purposes. High-resolution images improve accuracy but require
    more computational power. For specific applications, labeled datasets were only
    limitedly available. Therefore, image augmentation techniques were used to increase
    the number of image data sets, including scaling, flipping, cropping, rotation,
    color transformation, PCA color augmentation, and noise rejection (Paymode and
    Malode, 2022). Multiple augmentation techniques were used for each model, as detailed
    in Table 2. Additionally, Table 2 provides the numbers of images in training,
    validation, and testing for the four DCNN models. Table 2. DCNN model image allocation
    and image augmentation. Model Number of images Data Augmentation Techniques Total
    Training Validation Test CropClassiNet 43,611 30,528 9,810 3,273 Random rotation,
    random X  and Y reflection CanopySegNet 51 31 10 10 Transformation (random left/right
    reflection and random X/Y translation of ±10 pixels) PlantCountNet 110 88 11 11
    Transformation (same as CanopySegNet) InsectNet 542 326 108 108 Transformation
    (same as CanopySegNet) Our main objective was not to make the most accurate prediction
    for the DCNN models but to demonstrate the concept of implementing edge image
    processing and transmitting the results to the Cloud for decision-making. Therefore,
    we selected a limited number of images for CanopySegNet, PlantCountNet, and InsectNet,
    which were sufficient to train models with a reasonable degree of accuracy. 2.2.
    DCNN model architecture selection, training, evaluation, and deployment on the
    edge device The steps to select model architecture/model backbone weights and
    image input sizes to train the best model for CropClassiNet, CanopySegNet, PlantCountNet,
    and InsectNet are summarized in Fig. 3. Unlike many DCNN applications that prioritize
    higher accuracy, our application focused on finding the balance between accuracy
    and model deployability on the edge device. Download : Download high-res image
    (771KB) Download : Download full-size image Fig. 3. DCNN model selection process
    during the training and testing by attempting different model architectures, model
    backdone weights, and input image sizes. For example, in the development of CropSegNet
    (Segmentation), we selected DeepLabv3+ (Firdaus-Nawi et al., 2018) with weights
    initialized from pre-trained networks of ResNet18 (He et al., 2016), ResNet50,
    Xception, InceptionresnetV2, and MobileNetV2. The input image sizes tested were
    512 × 512 × 3 and 256 × 256 × 3, and training options were kept constant to find
    the best-performing networks, which should also be deployable to Raspberry Pi
    4B. This process identified DeepLabv3 + with ResNet50 as the most suitable model
    for CropSegNet, with an input image size of 512 × 512 × 3. Table 3 summarizes
    the hyperparameter values and training options for the final DCNN models deployed
    to the edge device. (1) (2) (3) (4) (5) (6) (7) Table 3. Hyperparameter values
    and training options for the best models (SGDM - stochastic gradient descent with
    momentum, RMSProp - Root mean square propagation). Training option and the function/Hyperparameters
    Values for CropClassiNet Values for CanopySegNet Values for InsectNet (320 × 320
    × 3) Values for PlantCountNet (320 × 320 × 3) Optimizer SGDM SGDM SGDM RMSProp
    Momentum 0.9 0.9 0.99 NA Initial learning rate 0.001 0.001 0.001 0.001 Learn rate
    schedule Piecewise Piecewise Piecewise Piecewise Learn rate drop period 10 10
    10 10 Learn rate drop factor 0.3 0.3 0.1 0.3 Minibatch size 16 4 16 32 L2Regularization
    NA 0.005 0.005 0.005 Validation frequency 3 3 3 10 Shuffle Every epoch Every epoch
    Every epoch Every epoch Validation patience 4 10 10 10 Max epochs 100 300 1000
    100 Execution environment Multi GPU Multi GPU GPU GPU The performance of the four
    DCNN models was evaluated using the indices calculated from Eq. (1), (2), (3),
    (4), (5), (6), (7). Accuracy, Precision, Recall, F1 score, and Jaccard index were
    used for the classification models CropClassiNet and CropSegNet, whereas IoU and
    mAP (Mean Average Precision) were used for PlantCountNet and InsectNet. Jaccard
    index gives the proportion of correctly predicted labels to the total number of
    labels. Model training was performed on an NVIDIA GeForce GTX 1650 Ti Mobile processor,
    a dedicated mid-range graphics card with 4 GB GDDR6 memory on a Dell XPS 15 9500
    Laptop. The laptop had an Intel Core i7-10750H 10th Gen processor,16 GB DDR4 RAM,
    and 1 TB SSD hard disk. 2.3. Hardware and software of AICropCAM The IoT data transmission
    and edge image processing hardware comprised the following major components: a
    Raspberry Pi 4B single-board computer, an Arduino MKR1310 development board, an
    Arduino MKR Relay Proto Shield, and a Dragino OLG02 outdoor dual channels LoRa
    Gateway (Fig. 4). The 12 V 8Ah battery powered the Raspberry Pi 4B, controlled
    through the relay shield managed by the Arduino MKR1310. A 3.7 V lithium polymer
    battery powered the Arduino MKR1310 board. There are two advantages of having
    a separate Arduino board. First, the Arduino board consumes less power than the
    Raspberry Pi 4B module. It can be switched on and off according to user requirements.
    Second, it allows uninterrupted communication between the edge node and the Cloud
    with low power. Download : Download high-res image (303KB) Download : Download
    full-size image Fig. 4. Hardware overview of AICropCAM and data flow. AICropCAM
    required programming on two hardware platforms. Arduino was programmed using C++
    in Arduino’s Integrated Development Environment. Raspberry Pi imaging and image
    processing program was developed in MATLAB and deployed onto the Raspberry Pi
    4B using the MATLAB Coder and MATLAB Compiler. A python program was designed to
    read the saved data in the Raspberry Pi 4B and serially communicate to the Arduino
    MKR1310. The primary functions of the MRK1310 program were to (1) turn on the
    Raspberry Pi 4B module based on the user-defined time intervals, (2) get the processed
    data, including the results of DCNN model predictions, through serial communication
    from the Raspberry Pi 4B, and (3) transmit the data to the ThingSpeak Cloud channel
    through the LoRa gateway. All the DCNN models were trained using the MATLAB deep
    learning toolbox. In the edge deployment, a MATLAB program runs multiple models
    logically depending on the prediction result of the previous model estimation,
    as shown in Fig. 5. MATLAB coder generated the C and C++ code derived from the
    program we developed to run on the Raspberry Pi. MATLAB Compiler generated the
    standalone application on the Raspberry Pi (The MathWorks, 2022). Download : Download
    high-res image (477KB) Download : Download full-size image Fig. 5. Overall sequential
    image processing and data generation flow chart. Table 4 lists the parameters
    generated by the models in AICropCAM. The abbreviations in Table 4 are fields
    holding data in the program to reduce the complexity of system development and
    maintain a common standard among different platforms. Fig. 6 shows the data generation
    from images. According to Fig. 6, the size of the images were around 2 MB before
    being fed into the image processing pipeline. The output message contains the
    crop type (CT), plant count (PC), weed count (WC), canopy coverage (CC), and pest
    count (PstC). The resulting message is typically less than 100 bytes. This represents
    a substantial reduction of memory size with the output being 0.00005 times the
    size of the original image. Consequently, this message can be transmitted in a
    single message via LoRa as the maximum LoRa packet size is around 256 bytes. Table
    4. List of parameters used to represent information in the images. Parameter Abbreviation
    Represent information Image location LOC Node ID manually entered/Global positioning
    system location coordinates Image orientation IO Accelerometer/Manually feed/Gravity
    switch Image quality/Crop type CT Image classification based on image quality
    and the crop type Plant count/Weed count PC/WC Multiclass object detection/classification
    Crop canopy coverage CC Semantic segmentation Pest count PstC Multiclass object
    detection/classification Download : Download high-res image (2MB) Download : Download
    full-size image Fig. 6. Examples of message generation and data size reduction
    for LoRa transmission. 2.4. Data transmission, visualization, and storage The
    data generated after image processing were saved on the Raspberry Pi 4B SD card,
    allowing access to the data remotely or through manual retrieval during field
    visits. Two options for transmitting the collected data to the ThingSpeak IoT
    platform are available. Firstly, the data can be uploaded directly from the Raspberry
    Pi 4B if internet connectivity is available for growers with Wi-Fi access. Secondly,
    the Raspberry Pi 4B transmits the recently acquired data to the Arduino MKR1310.
    The Arduino MKR1310 decodes the data received from the Raspberry Pi 4B and forwards
    it to the ThingSpeak. The second method is for low-rate, long-range communication
    beyond the limit of Wi-Fi. A single message receivable to the ThingSpeak server
    includes data for eight fields. In our demonstration, a single message was enough
    to transmit the data generated. Fields 1 and 2 are reserved for geographic coordinates
    (namely, latitude and longitude) to represent the device''s location. The third
    field was for camera orientation. Image quality/crop type, plant count, weed count,
    insect count, and crop canopy coverage were allocated from fields four to eight.
    ThingSpeak supports eight channels per gateway. If additional data is generated
    in the future, we have to create new channels to accommodate them. However, only
    data in a single channel can be passed through a single message. The Arduino-LoRa
    library was used to prepare the LoRa messages forwarded to the gateway (Mistry,
    2016). The message generated from the Arduino MKR1310 includes the device identification
    number and the data with the field number. Once the gateway receives this message,
    it adds the target client ID (generated by ThingSpeak when defining a device),
    host address (mqtt://mqtt3.thingspeak.com), server port number, username and password,
    channel ID, and the data in each field according to the Message Queuing Telemetry
    Transport (MQTT) protocol. Username and password ensure that only authorized devices
    can transmit data to the ThingSpeak platform. ThingSpeak provides two ways to
    interact with its platform, REST (Representative State Transfer) and MQTT protocols.
    The advantages of using MQTT over REST protocol are that it supports ThingSpeak
    data publishing, including immediate and minimum power consumption and data transmission
    over limited bandwidth, which encouraged us to select the MQTT protocol in our
    demonstration. 3. Results and discussion 3.1. DCNN model performance CropClassiNet
    had a test accuracy of 91.26 %, a Jaccard Index of 0.77, and an F1-score of 0.91;
    the confusion matrix is given in Fig. 7. The highest precision is for the “grass”
    class (100 %), and the lowest is for “soybean” (92.0 %). The highest recall is
    for the “corn” class (99.9 %), and the lowest is for “grass” (67.1 %). The primary
    goal of CropClassiNet is to determine the quality of new images and direct them
    for subsequent processing (Fig. 5). This step has never been executed in an image-based
    crop monitoring platform before. Further, CropClassiNet can eliminate erroneous
    images when humans are present in the camera’s field of view or when the camera
    is misaligned due to external factors. AICropCAM can send maintenance requests
    through IoT analytics if rejected images are continuously generated. Download
    : Download high-res image (275KB) Download : Download full-size image Fig. 7.
    Confusion matrix for test images by CropClassiNet. CanopySegNet on the test images
    achieved a global accuracy of 0.93, a weighted IoU of 0.87, and a mean BF score
    of 0.73. Fig. 8 shows an example of an original soybean image and the corresponding
    segmentation result by CanopySegNet, which estimated CC to be 18.72 %. Season-long,
    time-series images can be fed into CanopySegNet to generate diurnal and seasonal
    curves of crop CC, as shown in Fig. 9. Download : Download high-res image (621KB)
    Download : Download full-size image Fig. 8. An image of soybean crop and the segmentation
    result by CropSegNet to calculate canopy coverage. Download : Download high-res
    image (367KB) Download : Download full-size image Fig. 9. Examples of diurnal
    and seasonal variations of canopy coverage as computed by CropSegNet. According
    to Fig. 9, canopy coverage percentage variation is low during the daytime and
    reaches zero at night. This verifies the need to eliminate low-light images before
    segmenting. As shown in Fig. 5, it is possible to eliminate the generation of
    false values when the camera captures images under low light conditions by halting
    the process of running CanopySegNet. There are three diurnal variation series
    on 6/8/2021, 6/26/2021, and 7/12/2021 in Fig. 9. The CC increased from 8 % to
    95 % between 6/8/2021 to 7/12/2021. The seasonal trend showed that the CC reached
    a maximum around 7/8/2021. These results suggest that the proposed stacked models
    can track the daily and seasonal CC variation and eliminate the effect of lighting
    conditions on false value generation. Table 5. Performance of PlantCountNet and
    InsectNet on the test image set (Root mean square error (RMSE)/Final validation
    loss (FVL)). Model Name Architecture Input size Validation RMSE/FVL Mean average
    precision Object class PlantCountNet YOLOv2 320 × 320 × 3 0.888 (RMSE) 0.66 Soybean
    0.86 Weed InsectNet YOLOv4 320 × 320 × 3 26.2 (FVL) 0.02 Insect The overall performance
    of the PlantCountNet and InsectNet is given in Table 5. Fig. 10(A) and 10(B) show
    the result obtained by PlantCountNet for a soybean image at an early vegetative
    stage (V3). Meanwhile Fig. 10(C) and 10(D) shows the result at a reproductive
    stage (R1). It can be seen that, at V3 stage, the model outputs matched the labels
    of soybean and weed plants well, indicating a level of high accuracy. Download
    : Download high-res image (1MB) Download : Download full-size image Fig. 10. The
    result of PlantCountNet for soybean and weed counting: Manually annotated vs.
    model-predicted bounding boxes at V3 growth stage (A and B); manually annotated
    vs. model-predicted bounding boxes at R1 growth stage (C and D). The size of insects
    is very small compared to the size of images (Fig. 11), which is the main reason
    for the low mAP for InsectNet (Table 5). Increasing input image resolution beyond
    480 × 480 × 3 is impractical as it exceeds the memory limitation to load models
    into Raspberry Pi 4B. A potential solution could be to increase the resolution
    of the region of interest by splitting the original image while keeping the resolution
    the same. Also, we suggest using the approach recommended by Tetila et al., 2020a,
    Tetila et al., 2020b in the future on Raspberry Pi model 4B. As technology advances,
    we expect the memory capacities will increase for edge computing units. At the
    same time, the state-of-the-art object detection algorithms will improve the accuracy
    for small object detection. Download : Download high-res image (1MB) Download
    : Download full-size image Fig. 11. The result of InsectNet for insect counting
    in soybean. The top row shows a situation of high false positives and low false
    negatives: (A) and (B) are manually annotated and model-predicted insect labels,
    respectively. The bottom row shows a situation of low false positive and high
    false negative: (C) and (D) are manually annotated and model-predicted insect
    labels. 3.2. Power consumption for Raspberry Pi 4B Since edge cameras in farmlands
    have limited access to electric power, information on their power consumption
    is essential for designing IoT devices and systems. AICropCAM is designed to be
    energized by solar power. It runs on a rechargeable battery when there is no solar
    power. We monitored the maximum energy consumption of each task performed by AICropCAM,
    and the result is presented in Table 6. Four main strategies are available for
    the power management of IoT edge devices: Selecting power-efficient hardware,
    maintaining low power modes, dynamic power management, and cloud-based management.
    Raspberry Pi 4B is an affordable power-efficient single-board computer suitable
    for our application, but it does not naturally support low-power modes. Therefore,
    we introduced the Arduino MKR1310 LoRa module for the Raspberry Pi 4B dynamic
    power management. Furthermore, this Arduino module allows us to perform cloud-based
    central management independently. Table 6. Electrical power consumption of the
    Raspberry Pi 4B and the Arduino MKR1310 during edge image processing. Device Activity
    The maximum current range and the voltage recorded Raspberry Pi 4B Idle run 5.25
    V × (0.45 – 0.53) A Image classification 5.25 V × (0.97 – 1.04) A Image segmentation
    5.25 V × (0.98 – 1.11) A Weed and plant detection 5.25 V × (0.62 – 0.70) A Insect
    detection 5.25 V × (0.62 – 0.70) A Arduino MKR1310 Sleep mode <0.01A Serial communication
    <0.01A LoRa transmission <0.01A For our measurements, we used a Raspberry Pi 4B
    with 8 GB of RAM, connected to an HDMI monitor, a USB keyboard, and a USB mouse,
    and ran a MathWorks® Raspbian image (file used to boot the Raspberry Pi 4B). The
    Raspberry Pi 4B was operated at room temperature and connected to a wireless LAN
    access point and a laptop via an Ethernet cable. The electric current consumption
    for running each DCNN model was recorded during the test. CropClassiNet had the
    highest current consumption, while the PlantCountNet and InsectNet models had
    the lowest. As for LoRa transmission, we could not measure its current consumption
    because the lowest value our instrument could measure was 0.01A. Based on the
    manufacturer''s specifications, the Arduino MKR1310 consumes 104 uA at 5 V. The
    average time to run the DCNN models is essential to estimate the energy consumed
    for each prediction. These parameters listed in Table 7 provide essential guidelines
    for designing IoT sensor nodes with suitable batteries and power sources. We also
    noticed that typically the first prediction of a model took the longest time,
    but the rest take a considerably shorter time to predict. Table 7. Time duration
    needed for the selected DCNN models deployed in the Raspberry Pi 4B. Model/Task
    Input image size Time for predicting results (s) The maximum power demand for
    the activity (W) CropClassiNet/Image quality evaluation and crop classification
    224 × 224 × 3 6.44 5.46 CanopySegNet/Semantic segmentation to separate canopy
    from background 512 × 512 × 3 20.20 5.83 PlantCountNet/Weed and plant detection,
    classification, and counting 320 × 320 × 3 14.38 3.68 InsectNet/Insect detection
    320 × 320 × 3 0.20 3.68 Semantic segmentation was the most power-demanding activity,
    while insect detection was the least. Changing the order of the image processing
    models and adding new models or dropping existing models is possible during regular
    operation. It enables dynamic power management within the Raspberry Pi module.
    The main advantage of AICropCAM is that it implements a stack of four DCNN-based
    image processing models with multiple objectives. To the best of our knowledge,
    this is the first time such a system has been developed for a field crop monitoring
    camera. AICropCAM has applications such as setting up smart in-field or greenhouse
    IoT camera networks with edge computing capability, monitoring crops by attaching
    them to sprinkler irrigation systems (pivots and linear moves), or collecting
    crop information through ground or aerial mobile robots. The relatively short
    time to run each DCNN model makes the system suitable for real-time applications,
    including variable rate irrigation, fertilization, and spraying. For example,
    a pivot irrigated multi-cropping system with AICropCAM can automate irrigation
    or fertigation transition between different crops or crops at different growth
    stages by automatically providing the crop type or growth stage information to
    the irrigation controller. Additionally, existing herbicide or pesticide sprayers
    can get the feedback of the PlantCountNet and InsectNet in the AICropCAM for precision
    spraying. 4. Conclusion and future perspectives This paper outlines the essential
    components of constructing a functional edge image processing framework for real-time
    crop monitoring. From a software standpoint, CropClassiNet can categorize captured
    images according to image quality and detect the presence of specific crop types
    for further processing. CanopySegNet can further quantify the degree of canopy
    coverage; PlantCountNet can count the number of plants and weeds in the image;
    and finally, InsectNet can count the number of insects in the image. These four
    DCNN models, when implemented on edge devices, can extract an array of important
    crop and canopy parameters from field images and enable real-time, low-latency
    decision making and applications. Deep learning-based image processing on the
    edge has excellent potential in PA. Applications of AICropCAM are not limited
    to image classification, segmentation, plant counting, or weed counting. Potential
    future applications include insect classification and crop damage estimation,
    weed classification and pressure estimation, fruit identification and yield estimation,
    decision on replanting (Whigham et al., 2000), and disease identification and
    disease damage estimation in real time using actual field images collected by
    AICropCAM. AICropCAM shows excellent potential in enhancing crop management through
    crop monitoring. However, the current demonstration requires significant improvements
    on both hardware and software fronts. Customized circuitry and modular design
    are required to put AICropCAM in commercial farm applications. The full potential
    of the AICropCAM can be achieved by putting this camera on a moving platform like
    a center pivot with a GPS receiver to generate spatiotemporal data. Crop classification
    must include more crop types, and segmentation models need training data from
    other crop types. The DCNN models for weed and insect identification require the
    capability to identify different weed types, their growth stage, different insect
    types, and their growth stages to generate effective pest control decisions. Additionally,
    improving the models’ accuracy in image classification, segmentation, and object
    detection is crucial. It can be achieved by increasing the number of training
    image data sets. We also planned to expand the research for multiple edge architecture
    evaluation. Architectures such as a high-performance edge computer that accepts
    images from multiple edge devices through short-range, high-speed communication
    (e.g., Wi-Fi) and can run more accurate deep learning models with higher numbers
    of parameters, might be a better solution for the primary objectives addressed
    in this paper. We aim to expand the AICropCAM applications to other crops beyond
    corn and soybean. By making these improvements, AICropCAM will become a more effective
    tool for crop management, potentially revolutionizing how we grow and manage crops.
    Funding This work was supported by the United States Department of Agriculture
    – National Institute of Food and Agriculture grants [Award 2020-68013-32371 to
    YG and GB, Award 2021-67021-34417 to YG]. CRediT authorship contribution statement
    Nipuna Chamara: Methodology, Software, Visualization. Geng Bai: Conceptualization,
    Methodology, Resources. Yufeng Ge: Conceptualization, Resources, Supervision,
    Project administration, Funding acquisition. Declaration of Competing Interest
    The authors declare the following financial interests/personal relationships which
    may be considered as potential competing interests: Nipuna Chamara, Yufeng Ge,
    Geng Bai has patent pending to University of Nebraska-Lincoln. Acknowledgements
    Jianxin Sun assisted in developing the imaging device with Raspberry Pi Zero used
    for image acquisition. David Scoby helped the field management and AICropCAM installation.
    Junxiao Zhang supported the field installation of AICropCAM and smart-phone based
    acquisition of crop images with insects. Data availability Data will be made available
    on request. References Aasen et al., 2020 H. Aasen, N. Kirchgessner, A. Walter,
    F. Liebisch PhenoCams for field phenotyping: using very high temporal resolution
    digital repeated photography to investigate interactions of growth, phenology,
    and harvest traits Front. Plant Sci., 11 (June) (2020), pp. 1-16, 10.3389/fpls.2020.00593
    Google Scholar Anubha et al., 2019 P.S. Anubha, V. Sathiesh Kumar, S. Harini A
    study on plant recognition using conventional image processing and deep learning
    approaches J. Intell. Fuzzy Syst., 36 (3) (2019), pp. 1997-2004, 10.3233/JIFS-169911
    Google Scholar ArduCAM, 2016 ArduCAM ESP8266 UNO board User Guide (pp. 0–9). (2016).
    www.ArduCAM.com. Google Scholar Bai et al., 2019 G. Bai, Y. Ge, D. Scoby, B. Leavitt,
    V. Stoerger, N. Kirchgessner, S. Irmak, G. Graef, J. Schnable, T. Awada NU-Spidercam:
    A large-scale, cable-driven, integrated sensing and robotic system for advanced
    phenotyping, remote sensing, and agronomic research Comput. Electron. Agric.,
    160 (March) (2019), pp. 71-81, 10.1016/j.compag.2019.03.009 View PDFView articleView
    in ScopusGoogle Scholar Barbedo, 2014 J.G.A. Barbedo Using digital image processing
    for counting whiteflies on soybean leaves J. Asia Pac. Entomol., 17 (4) (2014),
    pp. 685-694, 10.1016/j.aspen.2014.06.014 View PDFView articleView in ScopusGoogle
    Scholar Cao et al., 2020 K. Cao, Y. Liu, G. Meng, Q. Sun An Overview on Edge Computing
    Research IEEE Access, 8 (2020), pp. 85714-85728, 10.1109/ACCESS.2020.2991734 View
    in ScopusGoogle Scholar Chamara et al., 2021 N. Chamara, K. Alkhadi, H. Jin, F.
    Bai, A. Samal, Y. Ge A deep convolutional neural network based image processing
    framework for monitoring the growth of soybean crops. 2021 ASABE Annual International
    Meeting, 2100259 (2021), 10.13031/aim.202100259 Google Scholar Chamara et al.,
    2022 N. Chamara, M.D. Islam, G.F. Bai, Y. Shi, Y. Ge Ag-IoT for crop and environment
    monitoring: Past, present, and future Agr. Syst., 203, 103497 (2022), 10.1016/j.agsy.2022.103497
    Google Scholar Chamara, 2021 N. Chamara Development of an Internet of Things (IoT)
    Enabled Novel Wireless Multi-Sensor Network for Infield Crop Monitoring. Master’s
    Thesis, Department of Biological Systems Engineering, University of Nebraska-Lincoln
    (2021) Google Scholar Datasheet Raspberry Pi Model, 2019 Datasheet Raspberry Pi
    Model B, 2019. https://datasheets.raspberrypi.org. Accessed 11 November 2023.
    Google Scholar Firdaus-Nawi et al., 2018 Firdaus-Nawi, M., Noraini, O., Sabri,
    M.Y., Siti-Zahrah, A., Zamri-Saad, M., Latifah, H., 2018. DeepLabv3+_Encoder-Decoder
    with Atrous Separable Convolution for Semantic Image Segmentation. In: Proceedings
    of the European Conference on Computer Vision (ECCV), pp. 801–818. Google Scholar
    Ghorai et al., 2021 A.K. Ghorai, A.R. Barman, B. Chandra, K. Viswavidyalaya, S.
    Jash, B. Chandra, K. Viswavidyalaya, B. Chandra, K. Viswavidyalaya Image processing
    based detection of diseases and nutrient deficiencies in plants SATSA Mukhapatra,
    25 (1) (2021), pp. 1-24 Google Scholar He et al., 2016 He, K., Zhang, X., Ren,
    S., Sun, J., 2016. Deep residual learning for image recognition kaiming. In: Proceedings
    of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 770–778.
    doi: 10.1002/chin.200650130. Google Scholar LeCun et al., 1998 LeCun, Y., Bottou,
    L., Bengio, Y., Haffner, P., 1998. Gradient-based learning applied to document
    recognition. Proc. IEEE 86(11), 2278–2323. doi: 10.1109/5.726791. Google Scholar
    Liang et al., 2023 Liang, W. Z., Oboamah, J., Qiao, X., Ge, Y., Harveson, B.,
    Rudnick, D. R., Wang, J., Yang, H., Gradiz, A., 2023. CanopyCAM – an edge-computing
    sensing unit for continuous measurement of canopy cover percentage of dry edible
    beans. Comput. Electron. Agric. 204 (January), 107498. https://doi.org/10.1016/j.compag.2022.107498.
    Google Scholar Luis et al., 2020 Luis, S., Filipe, N.S., Paulo, M.O., Pranjali,
    S., 2020. Deep Learning applications in agriculture: a short review. Deep Learning
    Applications in Agriculture: A Short Review, 1092 AISC(January), C1. doi: 10.1007/978-3-030-35990-4.
    Google Scholar Meidas Trail Cameras, 2022 Meidas Trail Cameras, 2022. https://www.meidase.com/product-category/trail-cameras/.
    Accessed 11 November 2023. Google Scholar Mistry, 2016 Mistry, S., 2016. Arduino
    LoRa. MIT License. https://github.com/sandeepmistry/arduino-LoRa. Accessed 11
    November 2023. Google Scholar Park et al., 2007 Y. Park, R.K. Krell, M. Carroll
    Theory, technology, and practice of site-specific insect pest management J. Asia
    Pac. Entomol., 10 (2) (2007), pp. 89-101 View PDFView articleView in ScopusGoogle
    Scholar Paymode and Malode, 2022 A.S. Paymode, V.B. Malode Transfer learning for
    multi-crop leaf disease image classification using convolutional neural network
    VGG Artif. Intell. Agric., 6 (2022), pp. 23-33, 10.1016/j.aiia.2021.12.002 View
    PDFView articleView in ScopusGoogle Scholar Richardson, 2019 A.D. Richardson Tracking
    seasonal rhythms of plants in diverse ecosystems with digital camera imagery New
    Phytol., 222 (4) (2019), pp. 1742-1750, 10.1111/nph.15591 View in ScopusGoogle
    Scholar Sakamoto et al., 2012 T. Sakamoto, A.A. Gitelson, A.L. Nguy-Robertson,
    T.J. Arkebauer, B.D. Wardlow, A.E. Suyker, S.B. Verma, M. Shibayama An alternative
    method using digital cameras for continuous monitoring of crop status Agric. For.
    Meteorol., 154–155 (2012), p. 113, 10.1016/j.agrformet.2011.10.014 View PDFView
    articleView in ScopusGoogle Scholar Sharma et al., 2020 P. Sharma, Y.P.S. Berwal,
    W. Ghai Performance analysis of deep learning CNN models for disease detection
    in plants using image segmentation Inf. Process. Agric., 7 (4) (2020), pp. 566-574,
    10.1016/j.inpa.2019.11.001 View PDFView articleView in ScopusGoogle Scholar Sritarapipat
    et al., 2014 T. Sritarapipat, P. Rakwatin, T. Kasetkasem Automatic rice crop height
    measurement using a field server and digital image processing Sensors (Switzerland),
    14 (1) (2014), pp. 900-926, 10.3390/s140100900 View in ScopusGoogle Scholar Taylor
    and Browning, 2022 S.D. Taylor, D.M. Browning Classification of daily crop phenology
    in phenocams using deep learning and hidden markov models Remote Sens. (Basel),
    14 (2) (2022), pp. 1-22, 10.3390/rs14020286 Google Scholar Tetila et al., 2020a
    Tetila, E.C., Machado, B.B., Astolfi, G., Belete, N.A.S., Amorim, W.P., Roel,
    A.R., Pistori, H., 2020. Detection and classification of soybean pests using deep
    learning with UAV images. Computers and Electronics in Agriculture, 179(May).
    doi: 10.1016/j.compag.2020.105836. Google Scholar Tetila et al., 2020b E.C. Tetila,
    B.B. MacHado, G.V. Menezes, N.A. De Souza Belete, G. Astolfi, H. Pistori A deep-learning
    approach for automatic counting of soybean insect pests IEEE Geosci. Remote Sens.
    Lett., 17 (10) (2020), pp. 1837-1841, 10.1109/LGRS.2019.2954735 View in ScopusGoogle
    Scholar The MathWorks, 2022 The MathWorks, I., 2022. MATLAB Coder - MATLAB. MathWorks.
    https://www.mathworks.com/products/matlab-coder.html. Google Scholar Tian et al.,
    2020 H. Tian, T. Wang, Y. Liu, X. Qiao, Y. Li Computer vision technology in agricultural
    automation—a review Inf. Process. Agric., 7 (1) (2020), pp. 1-19, 10.1016/j.inpa.2019.09.006
    View PDFView articleView in ScopusGoogle Scholar van Dijk et al., 2021 M. van
    Dijk, T. Morley, M.L. Rau, Y. Saghai A meta-analysis of projected global food
    demand and population at risk of hunger for the period 2010–2050 Nat. Food, 2
    (7) (2021), pp. 494-501, 10.1038/s43016-021-00322-9 View in ScopusGoogle Scholar
    Wang et al., 2022b Q. Wang, M. Cheng, S. Huang, Z. Cai, J. Zhang, H. Yuan A deep
    learning approach incorporating YOLO v5 and attention mechanisms for field real-time
    detection of the invasive weed Solanum rostratum Dunal seedlings Comput. Electron.
    Agric., 199 (July) (2022), Article 107194, 10.1016/j.compag.2022.107194 View PDFView
    articleView in ScopusGoogle Scholar Wang et al., 2022a J. Wang, Z. Gao, Y. Zhang,
    J. Zhou, J. Wu, P. Li Real-time detection and location of potted flowers based
    on a ZED camera and a YOLO V4-tiny deep learning algorithm Horticulturae, 8 (1)
    (2022), 10.3390/horticulturae8010021 Google Scholar Wang et al., 2014 Y. Wang,
    D. Wang, P. Shi, K. Omasa Estimating rice chlorophyll content and leaf nitrogen
    concentration with a digital still color camera under natural light Plant Methods,
    10 (3) (2014), pp. 273-286, 10.1016/S0378-4290(99)00063-5 View in ScopusGoogle
    Scholar Wang et al., 2019 A. Wang, W. Zhang, X. Wei A review on weed detection
    using ground-based machine vision and image processing techniques Comput. Electron.
    Agric., 158 (January) (2019), pp. 226-240, 10.1016/j.compag.2019.02.005 View PDFView
    articleView in ScopusGoogle Scholar Whigham et al., 2000 K. Whigham, D. Farnham,
    J. Lundvall, D. Tranel Soybean replant decision, Department of Agronomy, Iowa
    State University (2000) Google Scholar Yasrab et al., 2021 R. Yasrab, J. Zhang,
    P. Smyth, M.P. Pound Predicting plant growth from time-series data using deep
    learning Remote Sens. (Basel), 13 (3) (2021), pp. 1-17, 10.3390/rs13030331 View
    in ScopusGoogle Scholar Yuan et al., 2019 W. Yuan, N.K. Wijewardane, S. Jenkins,
    G. Bai, Y. Ge, G.L. Graef Early prediction of soybean traits through color and
    texture features of canopy RGB imagery Sci. Rep., 9 (2019), p. 14089, 10.1038/s41598-019-50480-x
    View in ScopusGoogle Scholar Zualkernan et al., 2022 I. Zualkernan, S. Dhou, J.
    Judas, A.R. Sajun, B.R. Gomez, L.A. Hussain An IoT system using deep learning
    to classify camera trap images on the edge Computers, 11 (1) (2022), pp. 1-24,
    10.3390/computers11010013 Google Scholar Cited by (1) YOLO performance analysis
    for real-time detection of soybean pests 2024, Smart Agricultural Technology Show
    abstract © 2023 The Authors. Published by Elsevier B.V. Part of special issue
    Agricultural Cybernetics: A New Methodology of Analysis and Development for Modern
    Agricultural Production Systems Edited by Yanbo Huang, Manoj Karkee, Lie Tang,
    Dong Chen View special issue Recommended articles LSCA-net: A lightweight spectral
    convolution attention network for hyperspectral image processing Computers and
    Electronics in Agriculture, Volume 215, 2023, Article 108382 Ziru Yu, Wei Cui
    View PDF Joint control method based on speed and slip rate switching in plowing
    operation of wheeled electric tractor equipped with sliding battery pack Computers
    and Electronics in Agriculture, Volume 215, 2023, Article 108426 Qi Wang, …, Yongjie
    Cui View PDF Monitoring maize lodging severity based on multi-temporal Sentinel-1
    images using Time-weighted Dynamic time Warping Computers and Electronics in Agriculture,
    Volume 215, 2023, Article 108365 Xuzhou Qu, …, Yuchun Pan View PDF Show 3 more
    articles Article Metrics Citations Citation Indexes: 1 Captures Readers: 19 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'AICropCAM: Deploying classification, segmentation, detection, and counting
    deep-learning models for crop monitoring on the edge'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Aziz D.A.
  - Asgarnezhad R.
  - Mustafa M.S.
  - Saber A.A.
  - Alani S.
  citation_count: '6'
  description: Generally, it is possible to increase agricultural output while decreasing
    the time required for human oversight by automating routine tasks. In this work,
    the Internet of things (IoT) played a vital role in designing a platform to monitor
    a farm wirelessly, reducing human involvement, allowing remote observing, and
    remote control of the design using a public IP address based cross-platform, Apache,
    MySQL, PHP and Perl (XAMPP) Apache package. A cloud is appealing when a wireless
    sensor network generates a lot of data. Cloud-based wireless communication systems
    are being tested to monitor and manage a set of sensors and actuators to estimate
    paddy (rice) water requirements in a particular location. The proposed design
    shows robust interaction between two microcontrollers to deal with different sensors
    and simultaneously act as a WiFi unit. The row data obtained from the sensors
    is uploaded to the cloud through specific Hypertext Preprocessor (PHP) files to
    store and fetch the data from the database. Through the programming method, the
    system focuses on tracking the paddy growing value and the amount of water available
    in the soil, which should be around (10 Kpa) for an optimum paddy environment.
    The results emphasized that 80% of water is retained when a maximal 10 Kpa of
    soil moisture is achieved.
  doi: 10.12720/jcm.18.3.187-197
  full_citation: '>'
  full_text: '>

    "Home Author Guide Editor Guide Reviewer Guide Special Issues Topics Published
    Issues Journal Menu Aims and Scope Editorial Board   Indexing Service Article
    Processing Charge Open Access Policy Publication Ethics Digital Preservation Policy
    Editorial Process Subscription Contact Us General Information ISSN: 1796-2021
    (Online); 2374-4367 (Print) Abbreviated Title:  J. Commun.  Frequency: Monthly
    DOI: 10.12720/jcm Abstracting/Indexing: Scopus; DBLP; CrossRef, EBSCO, Google
    Scholar; CNKI, etc. E-mail questions or comments to jocm@vip.163.com; jcm@etpub.com  Acceptance
    Rate: 27% APC: 400 USD Average Days to Accept: 121 days Journal Metrics   2.5
    2022 CiteScore     41st percentile Powered by   Editor-In-Chief Prof. Maode Ma
    College of Engineering, Qatar University, Doha, Qatar  I''m very happy and honored
    to take on the position of editor-in-chief of JCM, which is a high-quality journal
    with potential and I''ll try my every effort to bring JCM to a next level...[Read
    More]  What''S New 2024-02-22 Volume 19, No. 1 has been indexed by Scopus. 2024-01-25
    Welcome Assoc Prof. Adib Habbal from Türkiye to join the Editorial board of JCM.
    2024-01-24 Volume 18, No. 11-12 has been indexed by Scopus. Home > Published Issues
    > 2023 > Volume 18, No. 3, March 2023 > A Developed IoT Platform-Based Data Repository
    for Smart Farming Applications Dlnya Abdulahad Aziz 1*, Razieh Asgarnezhad 2,
    Ali Ali Saber 3, and Sameer Alani 4 1. Department of Computer Engineering, Isfahan
    (Khorasgan) Branch, Islamic Azad University, Isfahan, Iran 2. Department of Computer
    Engineering, Aghigh Institute of Higher Education Shahinshahr, 8314678755, Isfahan,
    Iran 3. Computer Technology Engineering, College of Engineering Technology, Al-Kitab
    University, Iraq 4. Department of Law, College of Law, University of Mashreq,
    Baghdad, Iraq Manuscript received October 17, 2022; revised November 15, 2022,
    accepted November 28, 2022. Abstract—Generally, it is possible to increase agricultural
    output while decreasing the time required for human oversight by automating routine
    tasks. In this work, the Internet of things (IoT) played a vital role in designing
    a platform to monitor a farm wirelessly, reducing human involvement, allowing
    remote observing, and remote control of the design using a public IP address based
    cross-platform, Apache, MySQL, PHP and Perl (XAMPP) Apache package. A cloud is
    appealing when a wireless sensor network generates a lot of data. Cloud-based
    wireless communication systems are being tested to monitor and manage a set of
    sensors and actuators to estimate paddy (rice) water requirements in a particular
    location. The proposed design shows robust interaction between two microcontrollers
    to deal with different sensors and simultaneously act as a WiFi unit. The row
    data obtained from the sensors is uploaded to the cloud through specific Hypertext
    Preprocessor (PHP) files to store and fetch the data from the database. Through
    the programming method, the system focuses on tracking the paddy growing value
    and the amount of water available in the soil, which should be around (10 Kpa)
    for an optimum paddy environment. The results emphasized that 80% of water is
    retained when a maximal 10 Kpa of soil moisture is achieved.   Keywords—Smart
    irrigation system, automatic plant watering, intelligent farming system, IoT-based
    monitoring systems, data warehousing, paddy production  Cite: Dlnya Abdulahad
    Aziz, Razieh Asgarnezhad, Mohammed Sulaiman Mustafa, Ali Ali Saber, and Sameer
    Alani, \"A Developed IoT Platform-Based Data Repository for Smart Farming Applications,\"
    Journal of Communications vol. 18, no. 3, pp. 187-197, March 2023. Doi: 10.12720/jcm.18.3.187-197  Copyright
    © 2023 by the authors. This is an open access article distributed under the Creative
    Commons Attribution License (CC BY-NC-ND 4.0), which permits use, distribution
    and reproduction in any medium, provided that the article is properly cited, the
    use is non-commercial and no modifications or adaptations are made. 附件说明 PREVIOUS
    PAPER Design of Miniaturized Half-Mode Substrate Integrated Waveguide Dual-Mode
    Dual-Band Filter for X and Ku Band Applications NEXT PAPER Non-cooperative Game
    Leach for Cluster Distribution Routing Method on Wireless Sensor Network (WSN)
    Copyright © 2013-2024 Journal of Communications, All Rights Reserved         E-mail:
    jocm@vip.163.com Published by "'
  inline_citation: '>'
  journal: Journal of Communications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Developed IoT Platform-Based Data Repository for Smart Farming Applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Contreras-Castillo J.
  - Guerrero-Ibañez J.A.
  - Santana-Mancilla P.C.
  - Anido-Rifón L.
  citation_count: '15'
  description: The Internet of Things (IoT) and convolutional neural networks (CNN)
    integration is a growing topic of interest for researchers as a technology that
    will contribute to transforming agriculture. IoT will enable farmers to decide
    and act based on data collected from sensor nodes regarding field conditions and
    not purely based on experience, thus minimizing the wastage of supplies (seeds,
    water, pesticide, and fumigants). On the other hand, CNN complements monitoring
    systems with tasks such as the early detection of crop diseases or predicting
    the number of consumable resources and supplies (water, fertilizers) needed to
    increase productivity. This paper proposes SAgric-IoT, a technology platform based
    on IoT and CNN for precision agriculture, to monitor environmental and physical
    variables and provide early disease detection while automatically controlling
    the irrigation and fertilization in greenhouses. The results show SAgric-IoT is
    a reliable IoT platform with a low packet loss level that considerably reduces
    energy consumption and has a disease identification detection accuracy and classification
    process of over 90%.
  doi: 10.3390/app13031961
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Applied Sciences All Article Types
    Advanced   Journals Applied Sciences Volume 13 Issue 3 10.3390/app13031961 Submit
    to this Journal Review for this Journal Propose a Special Issue Article Menu Academic
    Editors Róbert Hudec Patrik Kamencay Milan Dado Subscribe SciFeed Recommended
    Articles Related Info Link More by Authors Links Article Views 3068 Citations
    15 Table of Contents Abstract Introduction Related Work SAgric-IoT Platform Description
    Results Conclusions Author Contributions Funding Institutional Review Board Statement
    Informed Consent Statement Data Availability Statement Conflicts of Interest References
    Altmetric share Share announcement Help format_quote Cite question_answer Discuss
    in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article
    Reprints Open AccessArticle SAgric-IoT: An IoT-Based Platform and Deep Learning
    for Greenhouse Monitoring by Juan Contreras-Castillo 1, Juan Antonio Guerrero-Ibañez
    1, Pedro C. Santana-Mancilla 1 and Luis Anido-Rifón 2,* 1 School of Telematics,
    Universidad de Colima, Colima 28040, Mexico 2 atlanTTic Research Center, Universidade
    de Vigo, 36310 Vigo, Spain * Author to whom correspondence should be addressed.
    Appl. Sci. 2023, 13(3), 1961; https://doi.org/10.3390/app13031961 Submission received:
    22 December 2022 / Revised: 30 January 2023 / Accepted: 30 January 2023 / Published:
    2 February 2023 (This article belongs to the Special Issue Soft Sensors Based
    on Deep Neural Networks) Download keyboard_arrow_down     Browse Figures Versions
    Notes Abstract The Internet of Things (IoT) and convolutional neural networks
    (CNN) integration is a growing topic of interest for researchers as a technology
    that will contribute to transforming agriculture. IoT will enable farmers to decide
    and act based on data collected from sensor nodes regarding field conditions and
    not purely based on experience, thus minimizing the wastage of supplies (seeds,
    water, pesticide, and fumigants). On the other hand, CNN complements monitoring
    systems with tasks such as the early detection of crop diseases or predicting
    the number of consumable resources and supplies (water, fertilizers) needed to
    increase productivity. This paper proposes SAgric-IoT, a technology platform based
    on IoT and CNN for precision agriculture, to monitor environmental and physical
    variables and provide early disease detection while automatically controlling
    the irrigation and fertilization in greenhouses. The results show SAgric-IoT is
    a reliable IoT platform with a low packet loss level that considerably reduces
    energy consumption and has a disease identification detection accuracy and classification
    process of over 90%. Keywords: convolutional neural networks; plant disease; precision
    agriculture; precision farming; internet of things; wireless sensor networks;
    IEEE 802.15.4 1. Introduction As the world population increases uncontrollably,
    two critical resources are becoming a severe problem: water and food. The technical
    report published in [1] estimates that the world population will reach 9.15 billion
    in 2050. This trend motivates a growing food production to accommodate the large
    global population with the consequent limitation in farmlands and a decreasing
    number of farmers as fewer people are willing to work in farming. For example,
    a Virginia winery applied to hire foreign workers to pick grapes after the company
    could not find American citizens who wanted the job [2]. Agriculture provides
    the required food but consumes most of the Earth’s available fresh water. In Europe,
    the agricultural sector consumes a third of the total water supplies, affecting
    the quantity and quality of open water for other uses [3]. In Mexico, 75.72% of
    water is used in agriculture [4]. For example, about 240 gallons of water are
    required to produce a loaf of bread, and a pound of cheese takes about 382 gallons.
    So, a simple cheese sandwich takes about 56 gallons of water [5]. Several governments
    have made investing in the agricultural sector a priority. In Mexico, the Federal
    Government defined agricultural technification as a goal of 520 thousand hectares,
    representing 10 percent of the ground with irrigation systems [6]. In a global
    world, it is critical to efficiently monitor crops to significantly increase production
    and rationalize the use of consumables, materials, and supplies, as well as regulate,
    more precisely, the crop needs regarding irrigation water, fertilizers, fumigants,
    and pesticides. Preserving the water is an essential factor that considerably
    affects agriculture and requires the development of automated mechanisms to use
    it efficiently. Fertilizers, fumigants, and pesticides help grow vital crops and
    produce better harvests. However, when misused, they could be detrimental to plants
    and render them inedible for human consumption. The use of technology will improve
    the proper use of resources applied to agriculture. The purpose of applying technology
    is to improve labor and land yields while optimizing the use of resources. However,
    agriculture automation is complex, as several problems must be solved. Applying
    technology to automate the agricultural environment will demand more technically
    savvy farmers who can manage data. That is why it is necessary to modernize the
    process and train the farmer to develop his technological skills. That is why
    it is necessary to generate simple mechanisms that thoroughly explain the data
    obtained. However, the system must be considered an assistant adapted to the needs
    and knowledge of the farmer. Agricultural production can be affected by different
    circumstances, such as plant diseases and pests, which, according to the FAO,
    are responsible for 20 to 40% of production losses [7]. However, manually monitoring
    all supplies, soil variables, environmental conditions, and crop health is a challenge
    that demands a lot of effort. An easy way to monitor and gather ecological information
    over long periods is required [8]. Therefore, the development and deployment of
    new technological solutions and methods to improve and automatize water use and
    detect crop diseases, considering not only the experience of farmers but also
    soil conditions and characteristics, types of plants, and climatic information,
    are needed. Technology in agriculture evolved into the precision agriculture concept,
    which focuses on ensuring that the crops and soil perform optimally. Precision
    agriculture provides profitability, sustainability, and environmental protection
    [9] based on field information such as temperature, humidity, wind speed and direction,
    and pH level, among others. Farmers can make informed decisions about consumable
    resources and supplies (water, fertilizers, and pesticides) to maximize crop yield
    and protect the environment and their product consumers using precision agriculture.
    In [10], authors defined three essential tasks for precision control of the production
    environment: (I) monitoring parameters that influence the product yield and quality,
    (II) performing an in-depth analysis of collected data for making decisions, and
    (III) applying the best actions and mechanisms based on those decisions. Several
    technology-based solutions for gathering and processing information (such as [11,12,13,14,15])
    to support agriculture, facilitate decision making, and enhance productivity have
    been proposed in the literature. Moreover, recent advances in electronic technology
    enabled the creation of new, smaller, and cheaper devices for gathering environmental
    data to support ubiquitous computing, ad-hoc and sensor networks, cloud computing,
    and the Internet of Things [10,16]. IoT helps cultivate the soil using cheap,
    easy-to-install devices to increase farm productions to meet the world’s food
    demands based on precision agriculture [17,18,19], intelligent irrigation control
    [20,21,22], and greenhouse monitoring [23,24,25]. This technology can be applied
    in open and closed spaces to optimize consumables and supplies (fertilizers, pesticides,
    soil, and water) by setting automated alarms and threshold values for each resource.
    Suppose one collected data is out of the threshold value. In that case, a warning
    will be triggered, thus detecting problems affecting production and reducing the
    excessive consumption of supplies shortage risk. On the other hand, plant monitoring
    is imperative to detect diseases early and implement mechanisms to prevent their
    spread and production losses [26]. Traditional methods focus on either I) expert
    visual estimation or II) laboratory studies [27]. The first method is subjective
    and therefore has low accuracy. The second method identifies morphological characteristics
    to detect the disease. The main problem with these methods is that they are expensive,
    time consuming to process, and their detection efficiency is low. In recent years,
    plant disease detection automatization has integrated technologies such as image
    processing [28,29], pattern recognition [30,31], and computer vision [32,33].
    This paper presents SAgric-IoT, a technology platform based on IoT and CNN for
    monitoring physical variables and plant disease detection for precision farming.
    The platform uses communication algorithms for data monitoring and analysis for
    precision control of the production environment. In addition, it uses convolutional
    neural networks for plant disease identification and classification. We aim to
    develop a robust, low-maintenance, and low-cost IoT platform to control and optimize
    crop production. The remaining paper sections are as follows. Section 2 reviews
    IoT and precision agriculture. Section 3 describes the proposed technological
    platform in detail. Section 4 explains the system evaluation, describes the scenario,
    assessment, and results obtained from a small-scale network, and Section 5 summarizes
    our work and proposes future research. 2. Related Work IoT has had a strong impetus
    in the last few years. In the literature, several works propose IoT architectures
    and platforms suited for applications such as agriculture [19,34,35], traffic
    control [36,37,38], smart cities [39,40,41], education [42,43,44], marine environments
    [45,46,47], and health care [48,49,50,51,52]. Technology and IoT-based agricultural
    applications for control and automatization of physical variables monitoring (such
    as soil temperature and moisture, leaf wetness) for precision agriculture have
    been published in the literature [53,54,55,56,57,58]. The results obtained in
    this work were the nodes’ design, the simple node interconnection architectures
    based on IoT or wireless sensor networks design, and a combination to create a
    communication network of nodes for crop monitoring. Other IoT-based platforms
    control water consumption using cellular technologies and cloud services [59,60,61].
    However, the main problem of these works is that they only show prototype nodes
    that control or monitor water usage but only evaluate their performance without
    showing concrete results. In [62], the authors present a collaboration between
    process control and remote sensors. However, the authors did not explain the data
    acquisition and delivery process from different sources (sensors, actuators, coordinators).
    Most of these applications use proprietary systems to generate and process vast
    amounts of data, sometimes only at the research level [63]. The main problem with
    these works is that they only remain in architecture proposals without developing
    prototype nodes to test in real scenarios. Authors in [64,65] focused on minimizing
    production risk using wireless sensor networks for real-time monitoring and studying
    the inter-temporal environmental variability. Their results showed the importance
    of measuring and recording inter-temporal conditions that contribute to making
    decisions that improve productivity in agriculture, reinforcing the rationale
    for how IoT technology contributes to and facilitates the data collection process.
    In [66,67], authors studied the effects of energy balance in greenhouse production
    and the optimization of energy consumption in grape production to increase energy
    efficiency. The results show an improvement of up to 31% in energy consumption
    in greenhouses compared to those that do not use IoT technologies. In reference
    [68], the authors argue that cleaner crop production procedures would improve
    energy efficiency in agriculture. However, authors in [69] argued that technology
    is not the unique factor influencing modern agriculture. The key to a smooth transition
    toward sustainable agriculture requires the collaboration of technology, farmers,
    industries, financial institutions, and policy and decision-makers, among others.
    This collaboration would resolve conflicts and reduce deficiencies to promote
    sustainable development [70]. For disease detection, convolutional neural networks
    have become one of the most widely used tools for this activity [71,72,73,74].
    In [75], CNNs have been combined with learning vector quantization (LVQ) to detect
    and classify tomato leaf diseases. In another work, the authors combined four
    CNN models (Inception, Resnet, Inception Resnet, and Densenet) for plant disease
    detection, achieving an accuracy of 87% [76]. Other authors have focused on creating
    real-time models for rapidly detecting plant diseases [77,78,79,80] and evaluated
    the performance of models such as LeNet, VGG16, ResNet, and Xception in plant
    disease detection, obtaining accuracy levels of around 95%. Finally, some authors
    have proposed their models, getting results with accuracy levels of up to 98%
    [81,82,83,84]. 3. SAgric-IoT Platform Description SAgric-IoT is an easy-to-deploy,
    use, maintain, and upgrade platform for monitoring and controlling IoT for agricultural
    production. SAgric-IoT is based on low-cost and low-powered components which would
    be adapted to the farmer’s requirements. SAgric-IoT is focused on monitoring,
    data gathering, data processing, and data analysis to improve the efficiency of
    open and closed fields, reducing human interactions and rationalizing the use
    of water and other resources. In this section, we first describe the general scenario
    used in SAgric-IoT. Next, we provide a review of the logical architecture of SAgric-IoT.
    Then, we explain in detail the designed hardware for our platform. We describe
    the dissemination protocol used in SAgric-IoT. Finally, we describe the convolutional
    neural network model implemented for plant disease detection. 3.1. General Scenario
    Figure 1 shows the IoT on-site scenario for the SAgric-IoT platform. The architecture
    consists of four main nodes: the sensor nodes, the camera nodes, the gateway node,
    and the processing and storage node. Sensor nodes gather data from all sensors
    and periodically send it to the gateway node via other sensor nodes or directly,
    depending on the node’s distance from the gateway node. They are deployed on the
    greenhouses and establish a wireless network (based on 802.15.4) to communicate
    among themselves using radio-frequency links. The camera nodes send the images
    via Wi-Fi to the gateway node, where the trained CNN model for plant disease detection
    is stored. When the model identifies a possible disease situation in the crop
    area, a notification indicates the camera’s location and the detection image.
    A gateway node is also deployed along with the sensor nodes to enable a connection
    between the SAgric-IoT platform and the Internet (cloud server). The gateway node
    supports three communication interfaces: ZigBee to maintain communication with
    the sensor nodes, Wi-Fi to connect to the camera nodes, and a cellular interface
    to transmit data to the storage and processing node. A farmer has remote access
    to the gathering data to know the greenhouse conditions and control the different
    sensor and actuator devices and alert notifications when the CNN model detects
    a crop health problem situation. The gateway node includes a cellular network
    interface to transmit all gathered data to the cloud server. A web and mobile
    application were created as a cloud service to consult data information, receive
    alert notifications, and decide about control systems. Figure 1. General scenario
    for SAgric-IoT. 3.2. Layered IoT Architecture The SAgric-IoT design complies with
    the remote monitoring needs, contributing to reducing human resource investment.
    SAgric-IoT defines a five-layered model (as shown in Figure 2) with a transparent
    interconnection of all platform components and data dissemination in the agriculture
    precision area. The defined architecture covers all seven OSI model layers, as
    described in the following sentences. The gathering layer comprises the data link
    and physical layers. The communication layer is integrated with the data link
    and network layers. Finally, the processing and end-user layers are directly related
    to the four upper layers (transport, session, presentation, and application).
    The security layer is a transversal layer that interacts with the other layers
    of the architecture to obtain an end-to-end security level. Figure 2. SAgric-IoT
    five-layered architecture. 3.2.1. Gathering Layer The gathering layer collects
    data relevant to physical environmental parameters from a given area of interest
    from all the sources on farmland and sensor nodes on the fields (such as air temperature
    and humidity, soil temperature and moisture, and pH, among others). It also captures
    images through the cameras distributed in the monitoring region. In the last decade,
    several efforts have developed and defined low-power D2D standards and solutions
    [85,86,87], generating many promising radio technologies for D2D connectivity
    for local and wide area networks. One of the key challenges is determining the
    best data-transmission networking technology based on: transmission time, range,
    network size, and so on [88,89,90]. Table 1 summarizes some of the results of
    these past studies. Table 1. Comparison of wireless technologies for inter-node
    communication. 3.2.2. Communication Layer The communication layer transmits all
    data collected by sensor nodes to the gateway. This layer defines the communication
    protocol for data transmission. As sensors are stationary, the network topology
    does not change. Additionally, data transmission requires low latency, high reliability,
    and a high level of security to protect the collected data. The gateway node is
    powered by both ZigBee and Wi-Fi interfaces. This layer selects the best route
    to send the information by using several selection parameters, such as RSSI and
    the number of hops. 3.2.3. Processing Layer This layer processes large amounts
    of information using policy-based management to trigger alarms and improve production.
    Additionally, government agencies use processed results (such as SAGARPA in México)
    to develop production maps to help farmers define the best crops, the best fertilizers,
    and the quantity of water required for each season or production phase. Each crop
    type has its own value range for each physical parameter (such as soil temperature
    and humidity, pH level, environmental temperature, and moisture). These values
    are recorded on the platform. Table 2 shows an example of ideal physical parameters
    for tomatoes. Data are evaluated in real time to detect atypical values from the
    different physical parameters (values outside the defined range) that can represent
    abnormal conditions. Based on the data, the system can activate other systems
    (such as irrigation systems). Table 2. Physical parameters for tomatoes [89].
    The processing layer supports an extensive database that can accommodate massive
    amounts of data from the sensor nodes relayed through the communication layer.
    The database is interfaced with data analysis algorithms and real-time scripts
    for data visualization and evaluation (Figure 3). Figure 3. Block diagram of the
    cloud server in SAGric-IoT. The gateway node also implements the processing layer,
    where the CNN model is stored and processed to identify and classify diseases
    in the crop. 3.2.4. End User Layer This layer is responsible for facilitating
    the farmer’s access to the data through a web service and software tools using
    a web and mobile application. 3.2.5. Security Layer Security in the sensor nodes’
    communication is essential within the SAgric-IoT system. The nodes provide mechanisms
    for devices’ access control to the network, encryption (using symmetric key cryptography),
    and integrity to verify that the received frames were not altered, following the
    security schemes defined in the 802.15.4 standard. The data are encrypted before
    being sent (128-bit AES encryption) and then decrypted at the receiver for use.
    The following parameters were configured in each Xbee node: first, E.E. = 1: AES
    encryption enable, and the parameter KY: AES encryption key with a string of 32
    hexadecimal characters. Second, the camera nodes’ security with WPA2. The service
    provider controls the security of the processing and storage layers. Finally,
    the end-user accesses the system using a specific username and password and the
    secure HTTP protocol for connection to the system. 3.3. Electronical Board The
    main challenge of the design of the SAgric-IoT was to build low-cost and energy-efficient
    hardware capable of monitoring, gathering, and controlling physical parameters.
    The hardware board comprises four modules: microcontroller, sensors and actuators,
    energy, and a wireless communication module, as shown in Figure 4. Figure 4. Sensor
    node block diagram. The microcontroller module gathers information from the attached
    sensors and relays such data to the gateway node. Depending on the application,
    the microcontroller can be battery-powered, solar-powered, or backup battery-powered.
    We used the Microchip PIC18LF46K22 microcontroller that executes up to 16 MIPS
    (millions of instructions per second); an input voltage of 3.3 V is required,
    and its CPU max current is 9.0 mA due to its specifications and low cost. The
    microcontroller has 64 K bytes for program memory, 3896 bytes for RAM, and 1024
    bytes for EEPROM memory. An onboard 10-bit analog-to-digital converter (ADC) with
    28 analog input channels and 35 I/O pins. Sensors and actuators are used in precision
    agriculture to measure different environmental parameters. We use the sensor shown
    in Table 3. Table 3. Used sensors in SAgric-IoT. AM2315 is an I2C-interface temperature
    and humidity sensor (Figure 5a). This sensor contains a DS18B20 temperature sensor
    and a capacitive humidity sensor. It has 3.5 to 5.5 V power and I/O and uses 10
    mA max current during conversion. On the other hand, the AM2302 is a basic, low-cost
    digital temperature and humidity sensor (Figure 5b). It uses a capacitive humidity
    sensor and a thermistor to measure the surrounding air and outpost a digital signal
    on the data pin. The SHT-10 sensor includes a temperature/humidity sensor module
    (Figure 5c). The casing is weatherproof and will keep water from seeping into
    the sensor’s body and damaging it, but it allows air to pass through so it can
    measure the soil’s humidity (moisture). Humidity and temperature have 4.5% and
    0.5% precision readings, respectively. Figure 5. Sensors for SAgric-IoT (a) AM2315,
    (b) AM2302, and (c) SHT-10. We use XBee S2C radios connected to a microcontroller
    through a UART (universal asynchronous receiver-transmitter). This module operates
    on the 2.4 GHz ISM band, which significantly reduces the power consumption of
    our design. In addition, the module has a coverage area of up to 60 m in indoor
    spaces and 1200 m in outdoor locations with a line-of-sight range. It has a transmit
    power output of 3.1 mW. XBee modules provide wireless connectivity to end-point
    devices in ZigBee mesh networks. The gateway nodes use Raspberry Pi 3 Model B,
    which has a 1.2 GHz 64-bit quad-core ARMv8 CPU, an integrated 802.11n wireless
    LAN and Bluetooth 4.1, Bluetooth Low Energy (BLE), 4 USB ports, a display interface
    (DSI), and a micro-SD card slot. The camera nodes consist of an ESP32-CAM board
    with Wi-Fi and Bluetooth and an OV2640 camera (Figure 6). This module contains
    a microSD card slot that serves as a support for the storage of images captured
    with the camera. Figure 6. ESP32-CAM module used for plant monitoring. 3.4. Proposed
    Dissemination Protocol For the design of the dissemination protocol, we considered
    two critical issues: energy and reliability. Energy is the most important issue
    when designing dissemination protocols for IoT, where the application demands
    continuous information from the network field. For the design of the dissemination
    protocol: (I) we defined a static network architecture based on clusters; (II)
    the gateway node has no energy constraints; (III) the gateway node is not within
    the range of each sensor node, so a multi-hop transmission is needed; and (IV)
    heterogeneous sensors are implemented in each node. Our protocol defines three
    types of nodes: end-node, routing, and gateway. End-node nodes gather data from
    the sensors but cannot retransmit data to other sensor nodes. Routing nodes are
    responsible for collecting and retransmitting data from different sensor nodes.
    They also maintain a routing table that allows nodes to choose the best route
    for data transmission. Finally, the gateway node is the central node that receives
    all the gathered data from different sensor nodes and sends it to the Internet.
    Figure 7 shows the state diagram for the protocol. Figure 7. States diagram for
    SAGric-IoT. Our protocol defines data and controls messages. The protocol starts
    when a sensor node switches on. Each sensor node starts in the gateway node and
    sends a control message (Register.request) requesting its inclusion on the IoT
    network. The gateway node registers the new node and sends it the response (Register.response),
    where indicated, the type of node in the network (sensor or routing node), according
    to the number of hops the message takes to reach the gateway node. If the sensor
    node is an end node, it gathers data from different sensors, sends them to the
    gateway node, and changes its status to sleep to save energy. If the sensor node
    is a routing node, the node is also responsible for retransmitting the data from
    other sensors, so the sensor nodes wake up using a timer or a routing transmission
    request. The sensor node changes its status from disconnected to setup status
    when it receives the response. Afterward, the sensor and gateway nodes exchange
    messages (setup.request, and setup.response) to establish the gathering time for
    each sensor. At that moment, a sensor node is ready to begin the data gathering,
    so its status changes to the gathering status. In this status, the sensor nodes
    get sensor values, structure them into frames, and send them to the gateway node.
    When a sensor node gathers data from the different sensors, it sends a new message
    to the gateway node. SAgric-IoT uses the MAC data frame defined by IEEE 802.15.4
    to build the message (Figure 8). Figure 8. Data message structure used in SAgric-IoT.
    The message contains frame control fields, destination address fields (in our
    case, we used 16-bit destination addresses), a data field where the data from
    the different sensors are included, and a checksum field to check that the message
    is not corrupted. This frame is sent to the gateway node through the data.transmit
    message. When the sensor node finishes sending data, it changes its status to
    Sleeping status (Sleep.on) to save energy for an established period. All sensors
    in the node and the microcontroller are off, and the node is considered a sleep
    node. When the sleeping time finishes, the sensor node wakes up and starts another
    data-gathering session from the sensors, or when the gateway node sends a request
    for information on data from the sensors. After the node gathers data and sends
    it to the gateway node, it goes to sleep again to save the battery (Sleep.on).
    3.5. Convolutional Neural Network Model The following paragraphs explain the proposed
    architecture for the plant leaf disease detection and classification model. The
    proposed model takes color images of plant leaves as input and displays the image
    with a series of labels representing the plant leaf health state (whether it is
    healthy or the name of the detected disease) and the prediction percentage value
    obtained by the model as output. 3.5.1. Dataset We used the public PlantVillage
    dataset of 20,600 images in 10 categories, available at [91]. Table 4 shows the
    categorized information contained in the dataset. Table 4. Categories of the PlantVillage
    dataset. For the project, only the tomato categories were used to test the model
    (a total of 16,012 images) [92]. The total dataset was divided into two parts,
    assigning 80% of the images for training (12,810 images) and the rest for validation
    (3202 images). The problem with the models is that during the training process,
    overfitting can occur (i.e., the model “memorizes” the dataset) [93]. Thus, we
    applied a method known as data augmentation [88] to increase the dataset. New
    images were created using transformation methods (rotation, brightness adjustment,
    and Gaussian noise) to complement the dataset. 3.5.2. Model Creation A model based
    on a convolutional neural network architecture was developed for the plant disease
    detection process. The model takes color 200 × 200 images normalized to (0,1)
    as input for training and validation. The neural network architecture consists
    of five convolutional layers using 256, 128, 64, 32, and 16 filters, respectively.
    The kernel size for the 2D convolution window was 3 × 3. Rectified linear unit
    (ReLU) was used as the activation model for each convolutional layer. MaxPooling
    layers were applied to each convolutional layer. In addition, a global average
    pooling layer was applied to convert the data to a column vector. This layer is
    connected to a dense layer of 10 output nodes (which represent the categories
    used in the model) that uses softmax as the activation model. 3.5.3. Model Training
    Table 5 shows the parameters for training the model and the Adam optimization
    algorithm. The model’s loss function was categorical_cross_entropy, one of the
    most widely used functions for multi-class classification. The number of epochs
    was 200. Table 5. Parameters for the training of the model. 4. Results 4.1. Prototype
    Evaluation We examined two scenarios to demonstrate the benefits of using SAgric-IoT.
    For the first scenario, we validate the performance of the sensor node and the
    data gathered from the different sensors by performing tests in a controlled environment
    (laboratory). Data measurements for the environmental parameters such as temperature
    and humidity were recorded every minute for three days using a set of sensor nodes
    separated by 10 m from the base station and connected directly in a star topology.
    The idea was to determine the node’s energy consumption and data transmission
    reliability in a situation of maximum sense frequency. For the second scenario,
    sensor nodes were deployed throughout the field to evaluate the dissemination
    protocol’s data-transmission performance. The environmental parameter data measurements
    were collected every 5 min for three days. The set of sensor nodes separated approximately
    50 m from each other, covering an area of 200 × 200 m, as shown in Figure 9. We
    defined levels to enable the multi-hop transmission model. Figure 9. Distribution
    of nodes for scenario 2. We evaluated SAgric-IoT performance by analyzing the
    nodes’ energy consumption and reliability. Moreover, we examined the performance
    of the SAgric-IoT protocol in comparison with an average transmission model without
    a sleep function into the node. For both scenarios, nine sensor nodes designed
    at the INNOVA THING® company (Colima, Mexico) and a gateway node were employed
    to interconnect a small-scale network. Two sensors per node gathered data from
    four physical variables (air temperature and humidity and soil humidity and temperature).
    For the cloud server, both Apache and MySQL were running on a computer with Ubuntu
    14.04. The gateway node uses a Raspberry Pi 3 Model B with a 1.2 GHz 64-bit quad-core
    ARMv8 CPU, an integrated 802.11n wireless LAN and Bluetooth 4.1, Bluetooth Low
    Energy (BLE), 4 USB ports, a display interface (DSI), and a micro-SD card slot.
    Each sensor node was set to sense each variable every five minutes. In the test,
    we gathered around five thousand values from the sensors and stored them in the
    cloud server database. Scenarios Results Figure 10a,b shows the energy consumption
    for scenario 1 with different nodes in a controlled environment. Results show
    the battery lifetime of a system by continually logging the measurement data.
    We observed that a node used in SAgric-IoT decreased around 11% of the battery
    life of its maximal level. However, a node with a standard transmission without
    sleep mode decreased 62% the battery life of its maximal level. These test results
    showed that high measurement frequency and data transmission should be avoided
    as the battery life would significantly decrease over a few days, resulting in
    lower quality of measured data and frequent battery exchange. As shown, SAgric-IoT
    reduces the average energy consumption by almost 44% compared to a standard transmission
    without sleep mode. Figure 10. Results for scenario 1. (a) Energy consumption
    per node; (b) received packets per node. Figure 10b shows the percentage of received
    packets per node for both types of transmission. The rate of received packets
    obtained by both transmission models, considering a directly connected scenario,
    is similar, with a percentage of successful transmissions at 99%. Figure 11 shows
    the results obtained for the second scenario, and Figure 11a illustrates the energy
    consumption for the different nodes in the field environment. The difference was
    significant in the energy consumption from the various nodes. Nodes 1 and 2 consumed
    only 13% of their energy; nodes 3 to 5 consumed 9%, while nodes 6 and 7 consumed
    5.6%, and nodes 8 and 9 consumed 3%. The main reason for that difference is the
    number of transmissions per node. As the nodes are nearer the gateway node, more
    communications are performed because they must transmit their data and data from
    other nodes. However, we observed that SAgric-IoT nodes saved around 26% more
    energy than nodes using transmission without our sleep mode, increasing the battery
    lifetime. Figure 11. Results for scenario 2. (a) Energy consumption per node;
    (b) received packets per node. The results show a significant difference between
    the two transmission modes, considering a multi-hop scenario. SAgric-IoT had a
    maximum loss of transmitted packets of 2%, while the other model had a total loss
    of 9%, as shown in Figure 11. In the initial conclusion, we can observe that the
    efficiency of SAgric-IoT is due to better control of the energy consumption for
    the sleep mode. If the energy consumption of the microcontroller and the sensors
    is regulated, the sensor nodes maximize their energetic benefits, increasing the
    node’s battery lifetime. 4.2. Model Evaluation The model was developed in Python
    with TensorFlow, Keras, and other libraries such as NumPy, Matplotlib, and TensorBoard.
    Accuracy, precision, recall, and f1 score were the evaluation metrics. The following
    equations represent how to calculate each. 𝐴𝑐𝑐𝑢𝑟𝑎𝑐𝑦= 𝑇𝑃+𝑇𝑁 𝑇𝑃+𝑇𝑁+𝐹𝑃+𝐹𝑁 (1) 𝑃𝑟𝑒𝑐𝑖𝑠𝑖𝑜𝑛=
    𝑇𝑃 𝑇𝑃+𝐹𝑃 (2) 𝑅𝑒𝑐𝑎𝑙𝑙= 𝑇𝑃 𝑇𝑃+𝐹𝑁 (3) 𝐹1 𝑆𝑐𝑜𝑟𝑒=2× (𝑝𝑟𝑒𝑐𝑖𝑠𝑖𝑜𝑛×𝑟𝑒𝑐𝑎𝑙𝑙) (𝑝𝑟𝑒𝑐𝑖𝑠𝑖𝑜𝑛+𝑟𝑒𝑐𝑎𝑙𝑙)
    (4) TP represents the number of optimistic predictions, TN represents the number
    of negative projections, FP represents the number of false positives, and FN represents
    the number of false negatives. Results Obtained Figure 12 shows the model’s performance
    for leaf disease identification and classification during the training and validation
    phases. The results show an accuracy of 97.4% in the training phase and 92% in
    the validation phase, which are pretty good values and are within the range of
    values obtained in other published works in the literature. Figure 12. Model’s
    accuracy values during the training and validation processes. A confusion matrix
    was generated to analyze the results of how our supervised algorithm works [94,95].
    Figure 13 shows the confusion matrix. Figure 13. Confusion matrix of the proposed
    model, (0) tomato bacterial spot, (1) tomato late blight, (2) tomato yellow leaf
    curl virus, (3) tomato early blight, (4) tomato Septoria leaf spot, (5) tomato
    mosaic virus, (6) tomato target spot, (7) tomato leaf mold, (8) tomato spider
    mites two spotted, (9) tomato healthy. Results show that the proposed model predicted
    half of the classes with an accuracy equal to or greater than 98%. Only the class
    with the lowest number of images for training (Tomato_mosaic_virus) obtained a
    94% value. Table 6 concentrates on the proposed model’s results in the dataset’s
    disease classification process for each class. The recall metric is high in each
    category of the dataset, showing that the accuracy of the proposed model is high
    (>90%), correctly classifying the diseases. Table 6. Class-wise performance of
    the proposed model. The model was saved as a hierarchical data file and was used
    during the prediction process, with some results shown in Figure 14. Figure 14.
    Sample predicted images using the proposed model. Finally, a comparison was made
    with a work that analyzes different techniques for disease detection in tomato
    plants [96]. ResNet50, Xception, MobileNet, ShuffleNet, and DenseNet were compared
    with the five techniques used in this work. Our model was trained with the dataset
    used in that work (Plant Village), but with 13,112 images. The dataset was distributed
    80% for training and 20% for validation. The accuracy of the training process
    was compared. The results are shown in Figure 15. From these results, we can conclude
    two things. The first is that the proposed model only underperforms the VGG16
    model structure with a difference of about 1.2%. The second conclusion is that
    our model had a similar performance even when the training used a smaller number
    of images, which shows the stability of the proposed model. Figure 15. Performance
    comparison of the proposed model and existing models. 5. Conclusions In this paper,
    we evaluated SAgric-IoT, an IoT platform, in terms of packet delivery ratio and
    energy consumption in a small-scale network under a controlled environment (laboratory)
    and test bed conditions in a field, including its embedded system, the communication
    protocol, and its algorithms. SAgric-IoT reduces the intensive human involvement
    required in current agricultural information collection systems and provides information
    in a faster way. Results proved that SAgric-IoT is superior in energy saving and
    reliability of transmission. On the other hand, the CNN model for identifying
    diseases in the crop has high levels of accuracy, with average values greater
    than 95%. This value has an acceptable reliability level for detecting early disease
    problems affecting the yield. We conclude that SAgric-IoT is a viable solution
    to improve precision agriculture because it is a wireless platform that uses low-power
    algorithms for gathering data. Our future work focuses on the platform’s security
    to avoid integrity problems with the collected data that cause a reduction in
    the quality or quantity of production. Another significant challenge to solve
    in the next phase is to go from a model trained with images taken in the laboratory
    to images generated directly in the sowing field. Due to the lack of context and
    diversity in plant appearance, deep learning models trained on individual leaf
    photographs may need help identifying plant diseases in full plant images. However,
    several studies have shown that the use of a combination of leaf and full plant
    images, and the use of deep learning techniques, can improve the accuracy of plant
    disease detection. For example, a study [97] to detect tomato plant diseases used
    a convolutional neural network (CNN) trained with laboratory-taken leaf images
    and real-world leaf images. The real-world leaf includes other elements, such
    as stems and other leaves. With this combination of training, they achieved an
    accuracy rate of 99.53%. Another recent study [98] used various images from a
    leaf dataset and manually taken photos, along with deep learning techniques, to
    detect diseases in grapevine plants and achieved over 80% accuracy in this mixed
    scenario. In summary, a deep learning model trained only with images of a single
    leaf may have difficulties recognizing diseases in plants in pictures of a whole
    plant. Still, the combination of leaf and entire plant images, as well as deep
    learning techniques, can significantly improve accuracy in disease detection in
    plants. In future work, the model will be trained with complete plant images and
    implemented in the real-time plant monitoring scenario. This way, it will be possible
    to check the crops’ conditions by leaf samples and directly monitor the plants
    from the images captured by the camera system, fully integrating it into the SAgric-IoT
    platform. Author Contributions Conceptualization, J.A.G.-I. and J.C.-C.; methodology,
    P.C.S.-M. and L.A.-R.; formal analysis, J.A.G.-I., J.C.-C. and P.C.S.-M.; data
    curation, L.A.-R.; writing—original draft preparation, J.A.G.-I. and J.C.-C.;
    writing—review and editing, P.C.S.-M. and L.A.-R. All authors have read and agreed
    to the published version of the manuscript. Funding This research received no
    external funding. Institutional Review Board Statement Not applicable. Informed
    Consent Statement Not applicable. Data Availability Statement The data presented
    in this study are available on request from the corresponding author. Conflicts
    of Interest The authors declare no conflict of interest. References Alexandratos,
    N.; Bruinsma, J.; Alexandratos, N.; Bruinsma, J. World Agriculture towards 2030/2050:
    The 2012 Revision; 2012. Available online: https://ageconsearch.umn.edu/record/288998
    (accessed on 21 December 2022). The Associated Press. Trump Winery Seeks More
    Foreign Workers This Season. In Denver Post; MediaNews Group: Denver, CO, USA,
    2017; Available online: https://www.denverpost.com/2017/03/20/trump-winery-foreign-workers/
    (accessed on 1 February 2023). European Environment Agency. Water for Agriculture.
    European Environment Information and Observation Network. Eionet: Copenhagen,
    Denmark. 2012. Available online: https://www.eea.europa.eu/articles/water-for-agriculture
    (accessed on 1 February 2023). CONAGUA. Estadísticas Del Agua En México 2014;
    Secretaría de Medio Ambiente y Recursos Naturales: Ciudad de México, Mexico, 2015;
    Available online: https://agua.org.mx/wp-content/uploads/2015/02/EstadisticasAguaenMexico2014.pdf
    (accessed on 1 February 2023). Hoekstra, A. The Water Footprint of Food; Water
    for food; University of Twente: Enschede, The Netherlands, 2008. [Google Scholar]
    Presidencia de la República. Se Han Sentado Las Nuevas Bases Del Sector Agropecuario,
    Afirma Presidente López Obrador al Informar Avances Para El Campo Mexicano. Gob.
    México 2019. [Google Scholar] FAO. Climate Change Fans Spread of Pests and Threatens
    Plants and Crops; FAO: Rome, Italy, 2021. [Google Scholar] Santoshkumar, K.C.;
    Chavhan, S. Development of Wireless Sensor Node to Monitor Poultry Farm. In Mobile
    Communication and Power Engineering; Das, V.V., Chaba, Y., Eds.; Communications
    in Computer and Information Science; Springer: Berlin/Heidelberg, Germany, 2013;
    Volume 296, pp. 27–32. ISBN 978-3-642-35863-0. [Google Scholar] Zhou, L.; Chen,
    N.; Chen, Z.; Xing, C. ROSCC: An Efficient Remote Sensing Observation-Sharing
    Method Based on Cloud Computing for Soil Moisture Mapping in Precision Agriculture.
    IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens. 2016, 9, 5588–5598. [Google Scholar]
    [CrossRef] Srbinovska, M.; Gavrovski, C.; Dimcev, V.; Krkoleva, A.; Borozan, V.
    Environmental Parameters Monitoring in Precision Agriculture Using Wireless Sensor
    Networks. J. Clean. Prod. 2015, 88, 297–307. [Google Scholar] [CrossRef] Chen,
    N.; Zhang, X.; Wang, C. Integrated Open Geospatial Web Service Enabled Cyber-Physical
    Information Infrastructure for Precision Agriculture Monitoring. Comput. Electron.
    Agric. 2015, 111, 78–91. [Google Scholar] [CrossRef] Misra, S.; Krishna, P.V.;
    Saritha, V.; Agarwal, H.; Shu, L.; Obaidat, M.S. Efficient Medium Access Control
    for Cyber–Physical Systems with Heterogeneous Networks. IEEE Syst. J. 2015, 9,
    22–30. [Google Scholar] [CrossRef] Behzadan, A.; Anpalagan, A.; Woungang, I.;
    Ma, B.; Chao, H.-C. An Energy-Efficient Utility-Based Distributed Data Routing
    Scheme for Heterogenous Sensor Networks: An Energy-Efficient Scheme for Heterogenous
    Sensor Networks. Wirel. Commun. Mob. Comput. 2015, 15, 2020–2037. [Google Scholar]
    [CrossRef] Dhurandher, S.K.; Sharma, D.K.; Woungang, I.; Saini, A. Efficient Routing
    Based on Past Information to Predict the Future Location for Message Passing in
    Infrastructure-Less Opportunistic Networks. J. Supercomput. 2015, 71, 1694–1711.
    [Google Scholar] [CrossRef] Du, L.; Gong, W.; Shi, S.; Yang, J.; Sun, J.; Zhu,
    B.; Song, S. Estimation of Rice Leaf Nitrogen Contents Based on Hyperspectral
    LIDAR. Int. J. Appl. Earth Obs. Geoinf. 2016, 44, 136–143. [Google Scholar] [CrossRef]
    Guzman-Sandoval, V.M.; Gaytan-Lugo, L.S.; Santana-Mancilla, P.C. I-Care: An IoMT
    Remote Monitoring System of Physiological Pain in Pediatric Patients. In Proceedings
    of the 2021 Mexican International Conference on Computer Science (ENC), Morelia,
    Mexico, 9 August 2021; pp. 1–4. [Google Scholar] Cambra, C.; Díaz, J.R.; Lloret,
    J. Deployment and Performance Study of an Ad Hoc Network Protocol for Intelligent
    Video Sensing in Precision Agriculture. In Ad-hoc Networks and Wireless; Garcia
    Pineda, M., Lloret, J., Papavassiliou, S., Ruehrup, S., Westphall, C.B., Eds.;
    Lecture Notes in Computer Science; Springer: Berlin/Heidelberg, Germany, 2015;
    Volume 8629, pp. 165–175. ISBN 978-3-662-46337-6. [Google Scholar] Barcelo-Ordinas,
    J.M.; García-Vidal, J.; Chanet, J.P.; Hou, J.M. A Survey of Wireless Sensor Technologies
    Applied to Precision Agriculture. In Precision Agriculture ’13; Wageningen Academic
    Publishers: Gelderland, The Netherlands, 2013; pp. 801–808. [Google Scholar] Dholu,
    M.; Ghodinde, K.A. Internet of Things (IoT) for Precision Agriculture Application.
    In Proceedings of the 2018 2nd International Conference on Trends in Electronics
    and Informatics (ICOEI), Tirunelveli, India, 11–12 May 2018; pp. 339–342. [Google
    Scholar] Lee, S.; Yang, Y.; Ibrahim, M.A.; Jun, C.; Lim, E.G.; Zhai, Y. Design
    on Smart Grid and Irrigation Management: Based on Information Sharing. In Proceedings
    of the 2021 18th International SoC Design Conference (ISOCC), Jeju Island, Republic
    of Korea, 6 October 2021; pp. 191–192. [Google Scholar] Vaishali, S.; Suraj, S.;
    Vignesh, G.; Dhivya, S.; Udhayakumar, S. Mobile Integrated Smart Irrigation Management
    and Monitoring System Using IOT. In Proceedings of the 2017 International Conference
    on Communication and Signal Processing (ICCSP), Chennai, India, 6–8 April 2017;
    pp. 2164–2167. [Google Scholar] Qiong, D.; Hao, P. Design and Implementation of
    Irrigation Water Saving Control System Based on WSN. In Proceedings of the 2021
    International Conference on Intelligent Transportation, Big Data & Smart City
    (ICITBS), Xi’an, China, 27–28 March 2021; pp. 75–78. [Google Scholar] Yang, J.;
    Xu, Z.; Sun, Q. Research and Design of Greenhouse Environment Monitoring System
    Based on NB-IoT. In Proceedings of the 2021 33rd Chinese Control and Decision
    Conference (CCDC), Kunming, China, 22 May 2021; pp. 5641–5646. [Google Scholar]
    Singh, R.K.; Berkvens, R.; Weyn, M. Energy Efficient Wireless Communication for
    IoT Enabled Greenhouses. In Proceedings of the 2020 International Conference on
    Communication Systems & NETworkS (COMSNETS), Bengaluru, India, 7–11 January 2020;
    pp. 885–887. [Google Scholar] Sundari, M.S.; Mathana, J.M.; Nagarajan, T.S. Secured
    IoT Based Smart Greenhouse System with Image Inspection. In Proceedings of the
    2020 6th International Conference on Advanced Computing and Communication Systems
    (ICACCS), Coimbatore, India, 6–7 March 2020; pp. 1080–1082. [Google Scholar] DeChant,
    C.; Wiesner-Hanks, T.; Chen, S.; Stewart, E.L.; Yosinski, J.; Gore, M.A.; Nelson,
    R.J.; Lipson, H. Automated Identification of Northern Leaf Blight-Infected Maize
    Plants from Field Imagery Using Deep Learning. Phytopathology 2017, 107, 1426–1432.
    [Google Scholar] [CrossRef] Bock, C.H.; Poole, G.H.; Parker, P.E.; Gottwald, T.R.
    Plant Disease Severity Estimated Visually, by Digital Photography and Image Analysis,
    and by Hyperspectral Imaging. Crit. Rev. Plant Sci. 2010, 29, 59–107. [Google
    Scholar] [CrossRef] Devaraj, A.; Rathan, K.; Jaahnavi, S.; Indira, K. Identification
    of Plant Disease Using Image Processing Technique. In Proceedings of the 2019
    International Conference on Communication and Signal Processing (ICCSP), Chennai,
    India, 4–6 April 2019; pp. 0749–0753. [Google Scholar] Mugithe, P.K.; Mudunuri,
    R.V.; Rajasekar, B.; Karthikeyan, S. Image Processing Technique for Automatic
    Detection of Plant Diseases and Alerting System in Agricultural Farms. In Proceedings
    of the 2020 International Conference on Communication and Signal Processing (ICCSP),
    Chennai, India, 28–30 July 2020; pp. 1603–1607. [Google Scholar] Phadikar, S.;
    Sil, J. Rice Disease Identification Using Pattern Recognition Techniques. In Proceedings
    of the 2008 11th International Conference on Computer and Information Technology,
    Khulna, Bangladesh, 24–27 December 2008; pp. 420–423. [Google Scholar] Sarayloo,
    Z.; Asemani, D. Designing a Classifier for Automatic Detection of Fungal Diseases
    in Wheat Plant: By Pattern Recognition Techniques. In Proceedings of the 2015
    23rd Iranian Conference on Electrical Engineering, Tehran, Iran, 10–14 May 2015;
    pp. 1193–1197. [Google Scholar] Thangadurai, K.; Padmavathi, K. Computer Visionimage
    Enhancement for Plant Leaves Disease Detection. In Proceedings of the 2014 World
    Congress on Computing and Communication Technologies, Trichirappalli, India, 27
    February–1 March 2014; pp. 173–175. [Google Scholar] Yong, Z.; Tonghui, R.; Changming,
    L.; Chao, W.; Jiya, T. Research on Recognition Method of Common Corn Diseases
    Based on Computer Vision. In Proceedings of the 2019 11th International Conference
    on Intelligent Human-Machine Systems and Cybernetics (IHMSC), Hangzhou, China,
    24–25 August 2019; pp. 328–331. [Google Scholar] Puranik, V.; Sharmila; Ranjan,
    A.; Kumari, A. Automation in Agriculture and IoT. In Proceedings of the 2019 4th
    International Conference on Internet of Things: Smart Innovation and Usages (IoT-SIU),
    Ghaziabad, India, 18–19 April 2019; pp. 1–6. [Google Scholar] Guo, T.; Zhong,
    W. Design and Implementation of the Span Greenhouse Agriculture Internet of Things
    System. In Proceedings of the 2015 International Conference on Fluid Power and
    Mechatronics (FPM), Harbin, China, 5–7 August 2015; pp. 398–401. [Google Scholar]
    Guerrero-ibanez, J.A.; Zeadally, S.; Contreras-Castillo, J. Integration Challenges
    of Intelligent Transportation Systems with Connected Vehicle, Cloud Computing,
    and Internet of Things Technologies. IEEE Wirel. Commun. 2015, 22, 122–128. [Google
    Scholar] [CrossRef] Celesti, A.; Galletta, A.; Carnevale, L.; Fazio, M.; Lay-Ekuakille,
    A.; Villari, M. An IoT Cloud System for Traffic Monitoring and Vehicular Accidents
    Prevention Based on Mobile Sensor Data Processing. IEEE Sens. J. 2018, 18, 4795–4802.
    [Google Scholar] [CrossRef] Contreras-Castillo, J.; Zeadally, S.; Guerrero-Ibanez,
    J.A. Internet of Vehicles: Architecture, Protocols, and Security. IEEE Internet
    Things J. 2018, 5, 3701–3709. [Google Scholar] [CrossRef] Ji, Z.; Ganchev, I.;
    O’Droma, M. A Generic IoT Architecture for Smart Cities. In Proceedings of the
    25th IET Irish Signals & Systems Conference 2014 and 2014 China-Ireland International
    Conference on Information and Communities Technologies (ISSC 2014/CIICT 2014),
    Limerick, Ireland, 26–27 June 2014; Institution of Engineering and Technology:
    Limerick, Ireland, 2014; pp. 196–199. [Google Scholar] Hajam, S.S.; Sofi, S.A.
    IoT-Fog Architectures in Smart City Applications: A Survey. China Commun. 2021,
    18, 117–140. [Google Scholar] [CrossRef] Kaushik, N.; Bagga, T. Smart Cities Using
    IoT. In Proceedings of the 2021 9th International Conference on Reliability, Infocom
    Technologies and Optimization (Trends and Future Directions) (ICRITO), Noida,
    India, 3 September 2021; pp. 1–6. [Google Scholar] Ramos-García, O.I.; Vuelvas-Alvarado,
    A.A.; Osorio-Pérez, N.A.; Ruiz-Torres, M.Á.; Estrada-González, F.; Gaytan-Lugo,
    L.S.; Fajardo-Flores, S.B.; Santana-Mancilla, P.C. An IoT Braille Display towards
    Assisting Visually Impaired Students in Mexico. In Proceedings of the The 9th
    International Electronic Conference on Sensors and Applications, Online, 1 November
    2022; p. 11. [Google Scholar] Santana-Mancilla, P.C.; Magaña Echeverría, M.A.;
    Rojas Santos, J.C.; Nieblas Castellanos, J.A.; Salazar Díaz, A.P. Towards Smart
    Education: Ambient Intelligence in the Mexican Classrooms. Procedia-Soc. Behav.
    Sci. 2013, 106, 3141–3148. [Google Scholar] [CrossRef] Contreras-Castillo, J.;
    Santana-Mancilla, P.C.; Barón-Ramírez, N.; Morales Vanegas, E.A. IoET Enabled
    Classrooms to Foster Education 4.0 in Mexican Elementary Schools. Asia-Pac. Collab.
    Educ. J. 2020, 16, 26–30. [Google Scholar] Adiono, T.; Toha, A.M.; Pamungkas,
    S.; Sutisna, N.; Sumiarsih, E. Internet of Things for Marine Aquaculture. In Proceedings
    of the 2021 International Symposium on Electronics and Smart Devices (ISESD),
    Bandung, Indonesia, 29 June 2021; pp. 1–5. [Google Scholar] Guerrero, J.A.; Cosio,
    M.; Espinoza, A.; Ruiz, E.; Sanchez, J.D.; Contreras, J.; Nieto, J.I. GeoSoc:
    A Geocast-Based Communication Protocol for Monitoring of Marine Environments.
    IEEE Lat. Am. Trans. 2017, 15, 324–332. [Google Scholar] [CrossRef] Guerrero Ibanez,
    J.A.; Garcia Morales, L.A.; Contreras Castillo, J.J.; Buenrostro Mariscal, R.;
    Cosio Leon, M. HYRMA: A Hybrid Routing Protocol for Monitoring of Marine Environments.
    IEEE Lat. Am. Trans. 2015, 13, 1562–1568. [Google Scholar] [CrossRef] Gopinath,
    A.R.; Singh, Y.P.; Narawade, N.S. Design of Fog Computing System For Health Care
    Applications Based On IoT. In Proceedings of the 2022 3rd International Conference
    for Emerging Technology (INCET), Belgaum, India, 27 May 2022; pp. 1–4. [Google
    Scholar] Al-Mahmud, O.; Khan, K.; Roy, R.; Mashuque Alamgir, F. Internet of Things
    (IoT) Based Smart Health Care Medical Box for Elderly People. In Proceedings of
    the 2020 International Conference for Emerging Technology (INCET), Belgaum, India,
    5–7 June 2020; pp. 1–6. [Google Scholar] Ahmad, N.; George, R.P.; Jahan, R. Emerging
    Trends in IoT for Categorized Health Care. In Proceedings of the 2019 2nd International
    Conference on Intelligent Computing, Instrumentation and Control Technologies
    (ICICICT), Kannur, Kerala, India, 5–6 July 2019; pp. 1438–1441. [Google Scholar]
    Santana-Mancilla, P.C.; Anido-Rifón, L.E.; Contreras-Castillo, J.; Buenrostro-Mariscal,
    R. Heuristic Evaluation of an IoMT System for Remote Health Monitoring in Senior
    Care. Int. J. Environ. Res. Public. Health 2020, 17, 1586. [Google Scholar] [CrossRef]
    [PubMed] Durán-Vega, L.A.; Santana-Mancilla, P.C.; Buenrostro-Mariscal, R.; Contreras-Castillo,
    J.; Anido-Rifón, L.E.; García-Ruiz, M.A.; Montesinos-López, O.A.; Estrada-González,
    F. An IoT System for Remote Health Monitoring in Elderly Adults through a Wearable
    Device and Mobile Application. Geriatrics 2019, 4, 34. [Google Scholar] [CrossRef]
    [PubMed] De la Rosa, J.; Conesa, M.; Domingo, R.; Aguayo, E.; Falagán, N.; Pérez-Pastor,
    A. Combined Effects of Deficit Irrigation and Crop Level on Early Nectarine Trees.
    Agric. Water Manag. 2016, 170, 120–132. [Google Scholar] [CrossRef] Morillo, J.G.;
    Martín, M.; Camacho, E.; Díaz, J.A.R.; Montesinos, P. Toward Precision Irrigation
    for Intensive Strawberry Cultivation. Agric. Water Manag. 2015, 151, 43–51. [Google
    Scholar] [CrossRef] López, J.A.; Navarro, H.; Soto, F.; Pavón, N.; Suardíaz, J.;
    Torres, R. GAIA2: A Multifunctional Wireless Device for Enhancing Crop Management.
    Agric. Water Manag. 2015, 151, 75–86. [Google Scholar] [CrossRef] Ryu, M.; Yun,
    J.; Miao, T.; Ahn, I.Y.; Choi, S.C.; Kim, J. Design and Implementation of a Connected
    Farm for Smart Farming System. In Proceedings of the 2015 IEEE SENSORS, Busan,
    Republic of Korea, 1–4 November 2015; pp. 1–4. [Google Scholar] Baranwal, T.;
    Nitika; Pateriya, P.K. Development of IoT Based Smart Security and Monitoring
    Devices for Agriculture. In Proceedings of the 2016 6th International Conference–Cloud
    System and Big Data Engineering (Confluence), Noida, India, 14–15 January 2016;
    pp. 597–602. Ahmad, N.; Hussain, A.; Ullah, I.; Zaidi, B.H. IOT Based Wireless
    Sensor Network for Precision Agriculture. In Proceedings of the 2019 7th International
    Electrical Engineering Congress (iEECON), Hua Hin, Thailand, 9–11 March 2019;
    pp. 1–4. [Google Scholar] Mhaisen, N.; Abazeed, O.; Hariri, Y.A.; Alsalemi, A.;
    Halabi, O. Self-Powered IoT-Enabled Water Monitoring System. In Proceedings of
    the 2018 International Conference on Computer and Applications (ICCA), Beirut,
    Lebanon, 25–26 August 2018; pp. 41–45. [Google Scholar] Hernandez-Alpizar, L.;
    Carrasquilla-Batista, A.; Sancho-Chavarria, L. IoT Application for Water Quality
    Monitoring: Nitrates. In Proceedings of the 2020 IEEE 11th Latin American Symposium
    on Circuits & Systems (LASCAS), San Jose, Costa Rica, 25–28 February 2020; pp.
    1–4. [Google Scholar] Ghanim, M.E.; Alammary, J. AgroBahrain: A Conceptual Framework
    for Agriculture Big Data for Bahrain. In Proceedings of the 2021 International
    Conference on Electronic Information Technology and Smart Agriculture (ICEITSA),
    Huaihua, China, 10–12 December 2021; pp. 545–550. [Google Scholar] Pesonen, L.A.;
    Teye, F.K.-W.; Ronkainen, A.K.; Koistinen, M.O.; Kaivosoja, J.J.; Suomi, P.F.;
    Linkolehto, R.O. Cropinfra—An Internet-Based Service Infrastructure to Support
    Crop Production in Future Farms. Biosyst. Eng. 2014, 120, 92–101. [Google Scholar]
    [CrossRef] López-Riquelme, J.A.; Pavón-Pulido, N.; Navarro-Hellín, H.; Soto-Valles,
    F.; Torres-Sánchez, R. A Software Architecture Based on FIWARE Cloud for Precision
    Agriculture. Agric. Water Manag. 2017, 183, 123–135. [Google Scholar] [CrossRef]
    Hokazono, S.; Hayashi, K. Variability in Environmental Impacts during Conversion
    from Conventional to Organic Farming: A Comparison among Three Rice Production
    Systems in Japan. J. Clean. Prod. 2012, 28, 101–112. [Google Scholar] [CrossRef]
    Wu, D.D.; Olson, D.L.; Birge, J.R. Risk Management in Cleaner Production. J. Clean.
    Prod. 2013, 53, 1–6. [Google Scholar] [CrossRef] Bouadil, S.; Skouri, S.; Kooli,
    S.; Lazaar, M.; Farhat, A. Solar Energy Storage Application in Tunisian Greenhouse
    by Means of Phase Change Materials. In Proceedings of the 2014 International Conference
    on Composite Materials & Renewable Energy Applications (ICCMREA), Sousse, Tunisia,
    22–24 January 2014; pp. 1–4. [Google Scholar] Khoshroo, A.; Mulwa, R.; Emrouznejad,
    A.; Arabi, B. A Non-Parametric Data Envelopment Analysis Approach for Improving
    Energy Efficiency of Grape Production. Energy 2013, 63, 189–194. [Google Scholar]
    [CrossRef] Kubota, F.I.; da Rosa, L.C. Identification and Conception of Cleaner
    Production Opportunities with the Theory of Inventive Problem Solving. J. Clean.
    Prod. 2013, 47, 199–210. [Google Scholar] [CrossRef] Bardi, U.; El Asmar, T.;
    Lavacchi, A. Turning Electricity into Food: The Role of Renewable Energy in the
    Future of Agriculture. J. Clean. Prod. 2013, 53, 224–231. [Google Scholar] [CrossRef]
    Perc, M.; Gómez-Gardeñes, J.; Szolnoki, A.; Floría, L.M.; Moreno, Y. Evolutionary
    Dynamics of Group Interactions on Structured Populations: A Review. J. R. Soc.
    Interface 2013, 10, 20120997. [Google Scholar] [CrossRef] [PubMed] Lakshmanarao,
    A.; Babu, M.R.; Kiran, T.S.R. Plant Disease Prediction and Classification Using
    Deep Learning ConvNets. In Proceedings of the 2021 International Conference on
    Artificial Intelligence and Machine Vision (AIMV), Gandhinagar, India, 24 September
    2021; pp. 1–6. [Google Scholar] Militante, S.V.; Gerardo, B.D.; Dionisio, N.V.
    Plant Leaf Detection and Disease Recognition Using Deep Learning. In Proceedings
    of the 2019 IEEE Eurasia Conference on IOT, Communication and Engineering (ECICE),
    Yunlin, Taiwan, 3–6 October 2019; pp. 579–582. [Google Scholar] Marzougui, F.;
    Elleuch, M.; Kherallah, M. A Deep CNN Approach for Plant Disease Detection. In
    Proceedings of the 2020 21st International Arab Conference on Information Technology
    (ACIT), Giza, Egypt, 28 November 2020; pp. 1–6. [Google Scholar] Montesinos-López,
    O.A.; Montesinos-López, A.; Pérez-Rodríguez, P.; Barrón-López, J.A.; Martini,
    J.W.R.; Fajardo-Flores, S.B.; Gaytan-Lugo, L.S.; Santana-Mancilla, P.C.; Crossa,
    J. A Review of Deep Learning Applications for Genomic Selection. BMC Genomics
    2021, 22, 19. [Google Scholar] [CrossRef] [PubMed] Sardogan, M.; Tuncer, A.; Ozen,
    Y. Plant Leaf Disease Detection and Classification Based on CNN with LVQ Algorithm.
    In Proceedings of the 2018 3rd International Conference on Computer Science and
    Engineering (UBMK), Sarajevo, Bosnia and Herzegovina, 15–16 September 2018; pp.
    382–385. [Google Scholar] Guan, X. A Novel Method of Plant Leaf Disease Detection
    Based on Deep Learning and Convolutional Neural Network. In Proceedings of the
    2021 6th International Conference on Intelligent Computing and Signal Processing
    (ICSP), Xi’an, China, 9 April 2021; pp. 816–819. [Google Scholar] Mattihalli,
    C.; Gedefaye, E.; Endalamaw, F.; Necho, A. Real Time Automation of Agriculture
    Land, by Automatically Detecting Plant Leaf Diseases and Auto Medicine. In Proceedings
    of the 2018 32nd International Conference on Advanced Information Networking and
    Applications Workshops (WAINA), Krakow, Poland, 16–18 May 2018; pp. 325–330. [Google
    Scholar] Divyashri, P.; Pinto, L.A.; Mary, L.; Manasa, P.; Dass, S. The Real-Time
    Mobile Application for Identification of Diseases in Coffee Leaves Using the CNN
    Model. In Proceedings of the 2021 Second International Conference on Electronics
    and Sustainable Communication Systems (ICESC), Coimbatore, India, 4 August 2021;
    pp. 1694–1700. [Google Scholar] Tm, P.; Pranathi, A.; SaiAshritha, K.; Chittaragi,
    N.B.; Koolagudi, S.G. Tomato Leaf Disease Detection Using Convolutional Neural
    Networks. In Proceedings of the 2018 Eleventh International Conference on Contemporary
    Computing (IC3), Noida, India, 2–4 August 2018; pp. 1–5. [Google Scholar] Kumar,
    A.; Vani, M. Image Based Tomato Leaf Disease Detection. In Proceedings of the
    2019 10th International Conference on Computing, Communication and Networking
    Technologies (ICCCNT), Kanpur, India, 6–8 July 2019; pp. 1–6. [Google Scholar]
    Agarwal, M.; Gupta, S.K.; Biswas, K.K. Development of Efficient CNN Model for
    Tomato Crop Disease Identification. Sustain. Comput. Inform. Syst. 2020, 28, 100407.
    [Google Scholar] [CrossRef] Widiyanto, S.; Fitrianto, R.; Wardani, D.T. Implementation
    of Convolutional Neural Network Method for Classification of Diseases in Tomato
    Leaves. In Proceedings of the 2019 Fourth International Conference on Informatics
    and Computing (ICIC), Semarang, Indonesia, 16–17 October 2019; pp. 1–5. [Google
    Scholar] Kaur, M.; Bhatia, R. Development of An Improved Tomato Leaf Disease Detection
    And Classification Method. In Proceedings of the 2019 IEEE Conference on Information
    and Communication Technology, Allahabad, India, 6–8 December 2019; pp. 1–5. [Google
    Scholar] Montesinos-López, O.A.; Montesinos-López, A.; Cano-Paez, B.; Hernández-Suárez,
    C.M.; Santana-Mancilla, P.C.; Crossa, J. A Comparison of Three Machine Learning
    Methods for Multivariate Genomic Prediction Using the Sparse Kernels Method (SKM)
    Library. Genes 2022, 13, 1494. [Google Scholar] [CrossRef] Andreev, S.; Galinina,
    O.; Pyattaev, A.; Gerasimenko, M.; Tirronen, T.; Torsner, J.; Sachs, J.; Dohler,
    M.; Koucheryavy, Y. Understanding the IoT Connectivity Landscape: A Contemporary
    M2M Radio Technology Roadmap. IEEE Commun. Mag. 2015, 53, 32–40. [Google Scholar]
    [CrossRef] ETSI Industry Trends for M2M/IoT Survey Results from the ETSI M2M Workshop
    2014; ETSI: Sophia-Antipolis, France, 2014. oneM2M. OneM2M Functional Architecture
    Baseline Draft; Memphis, USA. 2014. Available online: https://www.onem2m.org/images/files/deliverables/TS-0001-oneM2M-Functional-Architecture-V-2014-08.pdf
    (accessed on 1 February 2023). Lee, J.-S.; Su, Y.-W.; Shen, C.-C. A Comparative
    Study of Wireless Protocols: Bluetooth, UWB, ZigBee, and Wi-Fi. In Proceedings
    of the IECON 2007–33rd Annual Conference of the IEEE Industrial Electronics Society,
    Taipei, Taiwan, 5–8 November 2007; pp. 46–51. [Google Scholar] Kone, C.T.; Hafid,
    A.; Boushaba, M. Performance Management of IEEE 802.15.4 Wireless Sensor Network
    for Precision Agriculture. IEEE Sens. J. 2015, 15, 5734–5747. [Google Scholar]
    [CrossRef] Buenrostro-Mariscal, R.; Santana-Mancilla, P.C.; Montesinos-López,
    O.A.; Nieto Hipólito, J.I.; Anido-Rifón, L.E. A Review of Deep Learning Applications
    for the Next Generation of Cognitive Networks. Appl. Sci. 2022, 12, 6262. [Google
    Scholar] [CrossRef] Tairu, O.E. PlantVillage Dataset. Kaggle. 2018. Available
    online: https://www.kaggle.com/datasets/emmarex/plantdisease (accessed on 1 February
    2023). Buschermohle, M.J.; Grandle, G.F. Controlling the Environment in Greenhouses
    Used for Tomato Production; Plant Sciences Commons; The University of Tennessee
    Agricultural Extension Service: Knoxville, TN, USA, 2010; Available online: https://trace.tennessee.edu/utk_agexcomhort/29/
    (accessed on 1 February 2023). Konidaris, F.; Tagaris, T.; Sdraka, M.; Stafylopatis,
    A. Generative Adversarial Networks as an Advanced Data Augmentation Technique
    for MRI Data. In Proceedings of the 14th International Joint Conference on Computer
    Vision, Imaging and Computer Graphics Theory and Applications, Prague, Czech Republic,
    25–27 February 2019; SCITEPRESS—Science and Technology Publications: Prague, Czech
    Republic, 2019; pp. 48–59. [Google Scholar] Kukačka, J.; Golkov, V.; Cremers,
    D. Regularization for Deep Learning: A Taxonomy. arXiv 2017, arXiv:1710.10686.
    [Google Scholar] Geetharamani, G.; Pandian, A. Identification of Plant Leaf Diseases
    Using a Nine-Layer Deep Convolutional Neural Network. Comput. Electr. Eng. 2019,
    76, 323–338. [Google Scholar] [CrossRef] Hong, H.; Lin, J.; Huang, F. Tomato Disease
    Detection and Classification by Deep Learning. In Proceedings of the 2020 International
    Conference on Big Data, Artificial Intelligence and Internet of Things Engineering
    (ICBAIE), Fuzhou, China, 12–14 June 2020; pp. 25–29. [Google Scholar] Ferentinos,
    K.P. Deep Learning Models for Plant Disease Detection and Diagnosis. Comput. Electron.
    Agric. 2018, 145, 311–318. [Google Scholar] [CrossRef] Morellos, A.; Pantazi,
    X.E.; Paraskevas, C.; Moshou, D. Comparison of Deep Neural Networks in Detecting
    Field Grapevine Diseases Using Transfer Learning. Remote Sens. 2022, 14, 4648.
    [Google Scholar] [CrossRef] Disclaimer/Publisher’s Note: The statements, opinions
    and data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2023 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Contreras-Castillo, J.; Guerrero-Ibañez, J.A.; Santana-Mancilla,
    P.C.; Anido-Rifón, L. SAgric-IoT: An IoT-Based Platform and Deep Learning for
    Greenhouse Monitoring. Appl. Sci. 2023, 13, 1961. https://doi.org/10.3390/app13031961
    AMA Style Contreras-Castillo J, Guerrero-Ibañez JA, Santana-Mancilla PC, Anido-Rifón
    L. SAgric-IoT: An IoT-Based Platform and Deep Learning for Greenhouse Monitoring.
    Applied Sciences. 2023; 13(3):1961. https://doi.org/10.3390/app13031961 Chicago/Turabian
    Style Contreras-Castillo, Juan, Juan Antonio Guerrero-Ibañez, Pedro C. Santana-Mancilla,
    and Luis Anido-Rifón. 2023. \"SAgric-IoT: An IoT-Based Platform and Deep Learning
    for Greenhouse Monitoring\" Applied Sciences 13, no. 3: 1961. https://doi.org/10.3390/app13031961
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   13
    Web of Science   8 Scopus   15 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 10. Jan 20. Jan 30. Jan 9.
    Feb 19. Feb 29. Feb 10. Mar 20. Mar 30. Mar 0k 1k 2k 3k 4k For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Appl. Sci., EISSN 2076-3417, Published by MDPI RSS
    Content Alert Further Information Article Processing Charges Pay an Invoice Open
    Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For
    Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Applied Sciences (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'SAgric-IoT: An IoT-Based Platform and Deep Learning for Greenhouse Monitoring'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Chollet N.
  - Bouchemal N.
  - Ramdane-Cherif A.
  citation_count: '0'
  description: The global increase in population necessitates enhanced food security,
    yet current agricultural practices are inadequate in feeding everyone and are
    detrimental to the environment. Consequently, agriculture faces the task of increasing
    production while minimizing resource usage and prioritizing sustainability. To
    assist farmers, new technological tools using AI, Robotics and IoT have been developed
    in a new field called Smart Farming. Unfortunately, these tools are primarily
    employed in unsustainable farming practices, such as mono-cropping. However, sustainable
    methods like Agroecology exist, which involve observing how plants interact with
    their environment to devise crop management strategies that work harmoniously
    with nature, requiring minimal resources and ensuring sustainability. In this
    paper, we propose an Internet of Things (IoT) platform that utilizes an ontology
    and a set of rules to provide farmers with recommendations for optimizing crop
    development while adhering to agroecology principles. This platform employs Knowledge-based
    reasoning to correlate crop requirements with local environmental data obtained
    through a wireless sensor network deployed on the farm. It can suggest crop layouts,
    crop calendars, detect relevant events, and manage irrigation. Our system has
    been tested in a simulated environment and yielded promising results, leaving
    ample room for future improvements and developments.
  doi: 10.5220/0012183500003598
  full_citation: '>'
  full_text: '>

    "Home About Us Ethics of Publication Ethics of Review Contacts Sitemap Papers
    Papers/2022 Papers Papers/2022 Login Sign-Up Research.Publish.Connect. Proceedings
    Papers Authors Advanced Search Paper IoT-Enabled Agroecology: Advancing Sustainable
    Smart Farming Through Knowledge-Based Reasoning Topics: Applications and Case-Studies;
    Domain Ontologies; Knowledge Engineering; Ontology Engineering; Semantic Web In
    Proceedings of the 15th International Joint Conference on Knowledge Discovery,
    Knowledge Engineering and Knowledge Management - Volume 2: , 190-199, 2023 , Rome,
    Italy Prev Next Authors: Nicolas Chollet 1 ; Naila Bouchemal 1 and Amar Ramdane-Cherif
    2 Affiliations: 1 ECE Paris, 10 rue Sextius Michel, 75015, Paris, France ; 2 Université
    Paris-Saclay, UVSQ, LISV (Laboratoire d’Ing enierie des Systèmes de Versailles),
    78140, Velizy-Villacoublay, France Keyword(s): Ontology, Knowledge Base, IoT,
    Agroecology, Smart Farming. Abstract: The global increase in population necessitates
    enhanced food security, yet current agricultural practices are inadequate in feeding
    everyone and are detrimental to the environment. Consequently, agriculture faces
    the task of increasing production while minimizing resource usage and prioritizing
    sustainability. To assist farmers, new technological tools using AI, Robotics
    and IoT have been developed in a new field called Smart Farming. Unfortunately,
    these tools are primarily employed in unsustainable farming practices, such as
    mono-cropping. However, sustainable methods like Agroecology exist, which involve
    observing how plants interact with their environment to devise crop management
    strategies that work harmoniously with nature, requiring minimal resources and
    ensuring sustainability. In this paper, we propose an Internet of Things (IoT)
    platform that utilizes an ontology and a set of rules to provide farmers with
    recommendations for optimizing crop development while adhering to ag (More) CC
    BY-NC-ND 4.0 Guest: Register as new SciTePress user now for free. SciTePress user:
    please login. My Papers You are not signed in, therefore limits apply to your
    IP address 129.93.161.219 In the current month: Recent papers: 100 available of
    100 total 2+ years older papers: 200 available of 200 total Paper citation in
    several formats: Harvard Bibtex EndNote Chollet, N.; Bouchemal, N. and Ramdane-Cherif,
    A. (2023). IoT-Enabled Agroecology: Advancing Sustainable Smart Farming Through
    Knowledge-Based Reasoning. In Proceedings of the 15th International Joint Conference
    on Knowledge Discovery, Knowledge Engineering and Knowledge Management - KEOD;
    ISBN 978-989-758-671-2; ISSN 2184-3228, SciTePress, pages 190-199. DOI: 10.5220/0012183500003598                          -
    Science and Technology Publications, Lda. RESOURCES Proceedings Papers Authors
    Ontology CONTACTS Science and Technology Publications, Lda Avenida de S. Francisco
    Xavier, Lote 7 Cv. C, 2900-616 Setúbal, Portugal. Phone: +351 265 520 185 (National
    fixed network call) Fax: +351 265 520 186 Email: info@scitepress.org EXTERNAL
    LINKS PRIMORIS INSTICC SCITEVENTS CROSSREF PROCEEDINGS SUBMITTED FOR INDEXATION
    BY: dblp Ei Compendex SCOPUS Semantic Scholar Google Scholar Microsoft Academic
    © 2021 SciTePress, Science and Technology Publications, Lda - All rights reserved."'
  inline_citation: '>'
  journal: International Joint Conference on Knowledge Discovery, Knowledge Engineering
    and Knowledge Management, IC3K - Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'IoT-Enabled Agroecology: Advancing Sustainable Smart Farming Through Knowledge-Based
    Reasoning'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dhal S.
  - Wyatt B.M.
  - Mahanta S.
  - Bhattarai N.
  - Sharma S.
  - Rout T.
  - Saud P.
  - Acharya B.S.
  citation_count: '2'
  description: Climate change, land degradation, and limited land and water resources
    have challenged our ability to meet the food demand of a rapidly growing population.
    To tackle this challenge, modern agricultural systems are relying on new technologies
    like the Internet of Things (IoT) to improve agricultural productivity and resource
    use efficiency. Although IoT has gained considerable attention in the last few
    years, the key concepts of IoT and their applicability across different domains
    of agriculture are still new to many researchers, practitioners, managers, and
    policymakers. In this paper, we provide a comprehensive review of the use of different
    IoT platforms, wireless sensor networks, and other associated technologies like
    remote sensing, cloud computing, and big data analytics in digital agriculture.
    The review also explores the use of communication technologies, microcontrollers,
    and machine learning in smart irrigation and decision support systems. The necessity
    of interoperability (data transfer and communication without human interference)
    among devices is discussed in detail with regard to facilitating and exchanging
    agricultural data more effectively. The discussion also includes opportunities
    and challenges in standardizing IoT; developing energy-efficient and affordable
    technologies; and improving data collection, transfer, storage, processing, security,
    anonymity, and privacy. This paper further calls for collaborative research in
    sensor and communication technologies in the agricultural sector.
  doi: 10.1002/agj2.21385
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register JOURNALS MAGAZINES OTHER PUBLICATIONS BOOKS Membership Agronomy Journal
    SPECIAL SECTION: MACHINE LEARNING IN AGRICULTURE Full Access Internet of Things
    (IoT) in digital agriculture: An overview Sambandh Dhal,  Briana M. Wyatt,  Shikhadri
    Mahanta,  Nishan Bhattarai,  Sadikshya Sharma,  Tapas Rout,  Pradip Saud,  Bharat
    Sharma Acharya First published: 27 May 2023 https://doi.org/10.1002/agj2.21385Citations:
    1 Assigned to Associate Editor Kathleen Yeater. SECTIONS PDF TOOLS SHARE Abstract
    Climate change, land degradation, and limited land and water resources have challenged
    our ability to meet the food demand of a rapidly growing population. To tackle
    this challenge, modern agricultural systems are relying on new technologies like
    the Internet of Things (IoT) to improve agricultural productivity and resource
    use efficiency. Although IoT has gained considerable attention in the last few
    years, the key concepts of IoT and their applicability across different domains
    of agriculture are still new to many researchers, practitioners, managers, and
    policymakers. In this paper, we provide a comprehensive review of the use of different
    IoT platforms, wireless sensor networks, and other associated technologies like
    remote sensing, cloud computing, and big data analytics in digital agriculture.
    The review also explores the use of communication technologies, microcontrollers,
    and machine learning in smart irrigation and decision support systems. The necessity
    of interoperability (data transfer and communication without human interference)
    among devices is discussed in detail with regard to facilitating and exchanging
    agricultural data more effectively. The discussion also includes opportunities
    and challenges in standardizing IoT; developing energy-efficient and affordable
    technologies; and improving data collection, transfer, storage, processing, security,
    anonymity, and privacy. This paper further calls for collaborative research in
    sensor and communication technologies in the agricultural sector. Abbreviations
    ANFIS Adaptive Neuro-Fuzzy Inference System ARPANET Advanced Research Projects
    Agency Network DSS decision support system EVI enhanced vegetation index FAO the
    Food and Agriculture Organization of the United Nations GPS global position satellite
    IaaS Infrastructure as a Service ICAO International Civil Aviation Organization
    ICT information communication technology LAI leaf area index LiDAR light detection
    and ranging MCC mobile cloud computing MDWI maximum difference water index MSI
    moisture stress index NDII normalized difference infrared index NDVI normalized
    difference vegetation index NIR near-infrared NodeMCU Node MicroController Unit
    OSAVI optimized soil adjusted vegetation index PaaS platform as a service PLSR
    partial least square regression RAM random access memory RDVI renormalized difference
    vegetation index RFID radio frequency identification RGB red, green, and blue
    SaaS Software as a Service SAVI soil adjusted vegetation index SoC system on chip
    WDRVI wide dynamic range vegetation index WSN wireless sensor network 1 BACKGROUND
    The global food system is currently under pressure due to rising population, economic
    growth, land degradation, and increased demand for animal-based products (Keating
    et al., 2014; Lal, 2013). For example, global food production needs to be increased
    by about 70% to ensure food security for an estimated world population of more
    than 9.7 billion people in 2050 (Cole et al., 2018; FAO, 2017). Further, climate
    change is projected to affect global food production and efforts to increase food
    productivity. Notably, crop production across the globe has already experienced
    negative effects from warming temperatures, changes in precipitation patterns,
    and increased extreme weather events (IPCC, 2022; Paudel et al., 2014). This will
    likely be exacerbated by climate change in the future (Hasegawa et al., 2021;
    Lobell et al., 2008; Rosenzweig & Parry, 1994). As such, researchers, scientists,
    policymakers, and organizations like the Food and Agriculture Organization of
    the United Nations (FAO) call for a radical transformation in global agricultural
    and food systems. Therefore, improved technologies that aim at enhancing production
    and supply-chain efficiencies under a resource-constrained environment are crucial
    to ensuring food security in the face of climate change (FAO, 2017). One such
    technology is the Internet of Things (IoT), which has recently shown the potential
    to provide solutions to several challenges associated with increased agricultural
    productivity under climatic changes and variability (Figure 1). FIGURE 1 Open
    in figure viewer Uses of the Internet of Things (IoT) in agriculture (Source:
    Salam, 2022, used with permission). Although there is no single definition of
    IoT, it could be broadly described as a system of devices, software programs,
    sensors, and other technologies that are either connected or are able to become
    connected via the Internet to exchange information and data (Borgia, 2014). The
    first application of IoT is believed to be an information-sharing network used
    by US defense sectors in 1969, then called the Advanced Research Projects Agency
    Network. The chronological timeline detailing the evolution process of various
    technologies within IoT since 1969 is summarized in Table 1 (Balas et al., 2019).
    In recent years, there has been an exponential increase in the number of common
    devices that might be considered to be a part of the IoT framework, including
    cell phones, televisions, thermostats, vehicles, refrigerators, home lighting
    systems, and smart watches among many others. Such IoT infrastructure is projected
    to substantially impact the global economy, with more than 100 billion connections
    (Huawei Technologies Co., 2015) and a financial impact of more than $11 trillion
    by 2025 (Manyika et al., 2015). Their impact is largely apparent in the agricultural
    sector, which currently contributes up to 60% of the national gross domestic product
    in many countries (The World Bank, 2019). TABLE 1. Chronological evolution of
    the technologies in Internet of Things (IoT) domain. Year Evolution Reference
    1969 Used by academic and research fraternity in the form of ARPANET to share
    information among defense sectors Townsend (2001) 1973 Used in RFID tags to lock
    and unlock doors; barcode scanners Suresh et al. (2014) 1974 Embedded computer
    systems were implemented using single on-board computers Eickhoff (2011) 1984
    Used in coke vending machines to generate the temperature and availability of
    the drink product Wu et al. (2014) 1990 Became popular in business and consumer
    markets Remondes and Afonso (2019) 1991 The concept of “ubiquitous computing”
    became popular Lyytinen et al.(2002) Mid 1990s Sensor nodes were designed to sense
    and detect data from embedded devices Han et al. (2005) 1999 IoT was used in “Device
    to Device” communication Asadi et al. (2014) 2000 IoT was used for routing and
    inventory management (used by LG to make smart refrigerators) Zhang et al. (2018)
    2003 IoT was used by the US Army in their System Architecture and Virtual Integration
    (SAVI) program Simi et al. (2013) 2010 IoT was used for surveillance, security,
    and transportation applications Jyothi and Vardhan (2016) 2015 IoT was used for
    locating people and objects Sharma and Lohan (2019) 2020 IoT was used for monitoring
    and controlling distant objects such as water levels in tanks in crop fields Rajalakshmi
    and Mahalakshmi (2016) The use of IoT in agriculture emerged due to advancements
    in data science, remote sensing, and computer technologies, and the need for optimizing
    decisions regarding agricultural management practices (King, 2017). Specifically,
    IoT use in precision and smart agriculture is notable with applications in data-informed,
    site-specific, and real-time management and decision-making. International Society
    of Precision Agriculture defines precision agriculture as “a management strategy
    that gathers, processes and analyzes temporal, spatial and individual data and
    combines it with other information to support management decisions according to
    estimated variability for improved resource use efficiency, productivity, quality,
    profitability and sustainability of agricultural production.” Smart agriculture
    refers to farming using softwares, sensors, automation, and data technologies.
    Digital agriculture seeks to utilize data from precision farming and the power
    of Artificial Intelligence. Digital agricultural technologies and the use of IoT
    are illustrated in Figure 1. Development of pilot research farms is already underway
    in several countries to determine the feasibility of IoT-informed decision-making
    for improving the efficiency and sustainability of agricultural production. Some
    examples include the Accelerating Precision Agriculture to Decision Agriculture
    (P2D) project in Australia (Zhang et al., 2017) and SmartAgriHubs (Chatzikostas
    et al., 2019) and SmartAgriFood (Kaloxylos et al., 2012) in Europe. Yet, the adaptation
    of IoT technology in the agricultural sector is still in its infancy (Villa-Henriksen
    et al., 2020). IoT enables us to gather information from enclosed proximity to
    the physical location using fog computing, edge computing, communication protocols,
    and sensor technologies. They show potential in improving decision-making and
    productivity in various stages of agricultural production. Examples include the
    use of wireless in-field sensors in improving the measurement of soil moisture
    and permittivity (Salam, 2020; Bogena et al., 2010), autonomous precision irrigation
    systems (Dong et al., 2013), and identification and tracking of livestock animals
    (Trotter et al., 2010). Satellites, unmanned aerial vehicles (UAVs), and new remote
    sensing approaches (e.g., PlanetLab) are increasingly used in IoT. For example,
    UAVs have been used for plant height estimation (Anthony et al., 2014; Herwitz
    et al., 2004), biomass estimation (Sinha et al., 2015), crop yield prediction
    (Ashapure et al., 2020; Panday et al., 2020), detection of weeds (De Castro et
    al., 2017), soil nitrogen management (Ballester et al., 2017), crop disease detection
    (Sugiura et al., 2016), and estimation of the leaf area index (LAI) (Hunt et al.,
    2008). Despite the growing interest of the agricultural research community in
    integrating IoT-enabled devices into production, to date, such technologies are
    not widely adopted by producers due to concerns associated with cost and return
    on investment (Narwane et al., 2022; Pillai & Sivathanu, 2020). More specifically,
    there is a need to understand the benefits and utilities of IoT from different
    perspectives (users, developers, and researchers) to fully utilize its potential
    to improve crop production under limited resources and climate change. Therefore,
    in this paper, we review existing literature and discuss the concepts, applications,
    potential challenges, and opportunities associated with IoT with a specific focus
    on its application in digital agriculture. First, we provide the concepts and
    technical details of different components of IoT, followed by its applications
    in digital agriculture, and associated challenges and opportunities. Overall,
    this review is expected to provide useful insights into how IoT could be integrated
    into the smart agriculture framework for improving crop productivity and food
    security in the face of climatic change and variability. Core Ideas Different
    platforms, sensors, and structures of IoT in digital agriculture were reviewed.
    The application of IoT in data management, interoperability, and precision farming
    was reviewed. Potential of IoT to improve agricultural quality and productivity
    was highlighted. Challenges and opportunities of IoT in digital agriculture were
    discussed. 2 COMPONENTS OF THE IOT The key components of the IoT include IoT platforms,
    wireless sensor networks (WSNs), and the IoT structure. An IoT platform can be
    defined as an on-premises software suite or a cloud service (IoT platform as a
    service [PaaS]) that monitors and may manage and control different kinds of endpoints,
    generally through apps installed on the platform. Similarly, WSN refers to an
    infrastructure-less wireless network that is installed ad hoc in a large number
    of wireless sensors to monitor system, physical, or environmental factors. The
    structure of IoT largely consists of devices, network structure, and cloud technology
    that allow IoT devices to communicate with each other. These components are discussed
    separately below. 2.1 IoT platforms IoT platforms provide proprietary or open-source
    suite for controlling devices and data in IoT system. Various IoT platforms, both
    proprietary and open source, are currently available to handle data from diverse
    sources using different devices. They serve functions like ingestion, filtering,
    aggregation, storing, and computation of data (Jayaraman et al., 2016). These
    platforms support specific microcontrollers, transceivers, data and extension
    memory, and programming. Some select platforms in agriculture are available from
    Tzounis et al. (2017) and are discussed in detail as follows. 2.1.1 FarmBot FarmBot
    is an open-source precision agricultural project platform that consists of a farming
    machine, software, and a repository for farming data. The three main components
    of FarmBot include mechanisms for seed planting, a nutrient delivery system, and
    a universal tool mounting system. FarmBot is generally used in urban farming for
    monitoring plant growth parameters and predicting a suitable harvest date at a
    future point in time (Nugraha et al., 2020). FarmBot can plant seeds with a regular
    watering schedule and can be remotely accessed with ease from Internet-connected
    devices (Murdyantoro et al., 2019). It takes the location of each plant into account
    to facilitate essential nutrients and water application for optimal plant growth
    based on feedback from the online database of records from various agricultural
    fields. The main purpose of FarmBot technology is to optimize the quality and
    quantity of agricultural produce and to enhance resource efficiency. Arduino,
    an open-source hardware and software company, which manufactures microcontrollers,
    is used to control the FarmBot and is connected to the Internet using a Raspberry
    Pi 3 board. A decision support system (DSS) has been implemented to help in data-driven
    design, access to the open repository, and real-time control of the parameters.
    An Android application can be designed to monitor the stepper motor location to
    carry out different farm operations, plant seeds using the vacuum pump in the
    field, and capture images. 2.1.2 Raspberry Pi Raspberry Pi is a small, low-cost
    computer chip capable of being used with a computer monitor, mouse, and keyboard.
    The basic structure of a Raspberry Pi includes random access memory (RAM), a processor,
    USB ports, general purpose input/output pins, an Ethernet port, a full HDMI port,
    a camera interface, a display interface, and a micro SD card slot (Balamurugan
    et al., 2017). The Raspberry Pi has been used in a wide variety of applications
    in agricultural systems. The growing availability of Raspberry Pi with high processing
    capacity has enabled many remote sensing tasks in agriculture, including crop
    imaging, determination of soil fertility, crop yield estimation, and spraying
    of fertilizers (Mathe et al., 2022). Flores et al. (2016) utilized a Raspberry
    Pi as a local server to display the relative humidity, air temperature, soil moisture,
    soil electrical conductivity, and soil pH through the use of a graphical user
    interface. Kamath et al. (2019) used a Raspberry Pi to monitor weeds in paddy
    crops and Bluetooth 4.0 to send data to remote base station using visual sensor
    nodes. These sensor readings were then processed using machine learning models
    (e.g., support vector machines and random forests) to distinguish weeds from paddy
    crops using shape features. 2.1.3 IRIS Mote An IRIS Mote (Crossbow) is a computing
    system consisting of a microcomputer plus one or more sensors that are connected
    wirelessly via a radio link. The IRIS Mote has one of the highest communication
    ranges (close to 500 m) using a 2.4 GHz IEEE 802.15.4 wireless module. It also
    includes an Intel XScale processor, 8 KB of RAM, 512 KB of flash memory, and a
    transmission rate of 250 kbps. The expansion connector has eight channel analog
    inputs. The IRIS Mote handles task scheduling and input/output processing (Liu
    et al., 2015) using an open-source TinyOS operating system based on an ATMega1281
    low-power microcontroller (Sivagami et al., 2010). The transmission current of
    IRIS Mote is 10–17 mA, whereas the receiver current is 16 mA. The indoor communication
    range of the device is greater than 300 m, and the outdoor communication range
    is greater than 50 m (Narayanan et al., 2016). The underground communication range
    is reduced to less than 30 m due to interference in radio frequency communication.
    The IRIS Mote is used in small agricultural fields to monitor climatic and hydrologic
    parameters like rain, sunlight, humidity, and temperature of a system. 2.1.4 Zolertia
    The Zolertia Z1 Mote (Zolertia S.L., Barcelona, Spain) is a platform designed
    for WSNs. It is compatible with TinyOS, OpenWSN, and RIOT OS. It supports analog
    and digital sensors and includes an MSP432 microcontroller, 8 KB of RAM, and 92
    KB of flash memory. It can operate in the temperature range of −25 to −85°C. It
    is designed to work in the range of 0.3–3.6 V, powered by two 1.5 V AA standard
    batteries (Zolertia, 2010). Agricultural use of Zolertia has previously been reported
    in greenhouse-based tomato farming, where the attenuation of radio waves in the
    2.4 GHz freeband was measured using a received signal strength indicator (Cama-Pinto
    et al., 2021). Zolertia Z1 Mote has also been used in determining agro-climatic
    variables like temperature and soil moisture in cassava (Manihot spp.) production
    (Caicedo-Ortiz et al., 2018). 2.1.5 Node MicroController Unit Node MicroController
    Unit (NodeMCU) is an open-source IoT platform with an ESP8266 microcontroller
    and Wi-Fi system on chip (SoC) from Expressif Systems, and hardware, which runs
    on an ESP-12 module. This firmware runs on Lua scripting language (Vanaja et al.,
    2018). It functions the same way as a Raspberry Pi in the case of agricultural
    applications and may be connected to various sensors for real-time monitoring
    of soil moisture, relative humidity, and air temperature. In one study, NodeMCU
    was used to monitor the environmental conditions of indoor greenhouses (Wan et
    al., 2019). A cloud-based platform has been used to store the environmental sensor
    readings and has been used for automatic irrigation systems for controlling agriculture
    pumps and remote monitoring systems resulting in increased economic benefits (Bentabet,
    2020). 2.1.6 Intel Galileo/Edison The Intel Galileo (Intel) board is based on
    Intel architecture (Intel Quark SoC X1000, 400 MHz processor) and is designed
    to have powerful functionalities with minimum power consumption. This allows users
    to apply shields compatible with Intel Galileo and extend the functionality of
    the board. It comprises two levels—legacy controlled blocks and microbuses. The
    legacy-controlled blocks are used for specific functions using dedicated channels.
    It has a dedicated point-to-point connection to connect to standard modules like
    Wi-Fi, Bluetooth, and SIM card modules for cell phones. The issues of these boards
    within agriculture are similar to that of the Raspberry Pi (Silpa et al., 2018).
    These boards are used in a house environment monitoring system, which helps in
    producing high-quality crops with minimal labor costs (Ajith et al., 2020). Some
    other applications are observed in the monitoring of soil pH and nutrients of
    cultivated crops (Sakthisudhan et al., 2019). 2.2 Wireless sensor network WSN
    is an important component of IoT, and its use in the agricultural sector has been
    widely discussed (Mahbub, 2020; Sanjeevi et al., 2020). A WSN is a wireless network
    consisting of spatially distributed sensors and sensor nodes to monitor physical
    or environmental conditions and transfer data to a base station. These systems
    are often inexpensive, scalable, and consist of mobile nodes (Kiani & Seyyedabbasi,
    2018). Briefly, the WSN system consists of two major components, sensor nodes
    and sink nodes (base station) (Kocakulak & Butun, 2017). The sensor node consists
    of a power unit, a sensing unit, and a computing unit. These nodes may be placed
    inside or outside an agricultural field to continuously feed data to the base
    station. Depending on the ad hoc system configuration or network type, the sensor
    node could behave as a data originator or router. Sensor nodes can collect real-time
    physical or environmental conditions such as temperature, vibration, or motion
    time and produce sensory data (Pottie, 1998; Senouci & Mellouk, 2016). At the
    same time, the sink node collects sensor data and communicates with the end user
    via a direct connection. This connection between the sensor and sink nodes is
    established via the Internet, satellite, or any wireless link, and the data is
    accessed through an app or end-user interface. 2.3 IoT structure IoT structure
    is a system that helps in connecting objects to the Internet through information-sensing
    equipment to establish data exchange and communication and to monitor and manage
    digital systems (Ye et al., 2014). To achieve such functions, IoT uses the perception,
    network, and application layers, as well as the security strategy for each layer,
    as a part of its framework (Gou et al., 2013). The IoT structural hierarchy is
    shown in Figure 2 (Zhong et al., 2015), but more generalized structural components
    are discussed in sub-sections below. Different layers within the hierarchy are
    crucial to address issues like computational loss, poor access control, data leaks,
    malware risks, and cyberattacks (apriorit.com/dev-blog). FIGURE 2 Open in figure
    viewer Hierarchy of the Internet of Things (IoT) structure. 2.3.1 The perception
    layer The perception layer is the foundation of IoT and is the interface between
    the physical world and the digital world. This layer functions as “nerve endings”
    collecting measured signals and transporting those signals to the rest of the
    system (Yang et al., 2012). It uses radio frequency identification technology,
    barcode technology, sensor, and positioning technology to complete information
    collection and helps in controlling the perception by the actuators. The main
    security issues in a perception layer are related to information collection and
    transmission as most sensors have a simple structure and processor and do not
    have complex security protection capabilities (Zhao & Ge, 2013). 2.3.2 The network
    layer The network layer is generally composed of two layers—the network access
    layer and the network transmission layer. The access layer consists of a base
    station node and a gateway. Current methods of network access are Wi-Fi, Ad Hoc,
    Mesh, and Zigbee. The network transmission layer is responsible for the transmission
    and exchange of information, including satellite, mobile, and optical fiber communication
    networks. It is analogous to a person''s nervous system and brain, which are used
    to transmit and cope with the information from the perception layer. The most
    common security issues in a network layer occur when a number of malicious nodes
    send data at the same time, which may lead to a denial of service attack (Bello
    et al., 2017). 2.3.3 The application layer The application layer is generally
    composed of two layers—the application support layer and the application presentation
    layer. The support layer is responsible for data storage, information processing,
    and the exchange of information. The presentation layer is used for processing
    data from the application support layer. It uses technology with multimedia, virtual
    reality, and human–computer interfaces to connect the IoT and the user. The main
    security issues concerning the application layer may include data access permission,
    identity authentication, data protection and recovery, big data handling, and
    software vulnerabilities, among others (Karagiannis et al., 2015). 3 APPLICATIONS
    OF IOT IN DIGITAL AGRICULTURE Digital agriculture is directly linked with IoT.
    Indeed, IoT offers multiple applications in the production, circulation, and modernization
    of farming businesses (Chen & Jin, 2012; Ozdogan et al., 2017). The term “digital
    agriculture” refers to the on-farm and off-farm uses and applications of data
    based on location, weather, energy use, or other factor using sensors, machines,
    or satellites to monitor animals, plants, or soil (Klerkx et al., 2019). It integrates
    concepts from precision and smart farming. The basic framework (Tang et al., 2002)
    of digital agriculture includes: Agricultural databases that include information
    about farmlands, climatic conditions, and socioeconomic background that relates
    agricultural activities to the human society. Real-time monitoring and updating
    of information in the database about meteorology, vegetation, and soil information
    on and under the ground using in situ and satellite-based sensors. A network transmission
    and processing system to analyze collected information, make decisions, and transfer
    signals in controlling the functions of agricultural machinery. The actuation
    framework that includes digitized sowing and harvesting devices enabled with Geographic
    Information System and Global Position Satellite systems. Different crop, soil,
    and weather sensors are increasingly used in monitoring plant growth, diseases,
    pests, yield, weather variables (temperature, humidity, rain, air, etc.), and
    soil physical–chemical and hydraulic properties (Acharya et al., 2017; Sehgal
    et al., 2005). Sensors are used in real-time monitoring and reporting of agricultural
    parameters in the value chain, cloud computing, and integration of these processes
    with advanced technologies like UAVs and satellites to enable highly efficient,
    qualitative, profitable, and environmentally sound agricultural decision-making.
    Sensor-based data is also utilized in formulating predictive models to forecast
    crop yield (Supit et al., 2012). Some applications of IoT systems in digital agriculture
    are discussed as follows. 3.1 UAVs in digital agriculture Traditionally, satellites
    have been used to detect spectral responses from plants and soil (Dematte et al.,
    2018). However, satellite data is often of coarse resolution that is not applicable
    for canopy and plot scale applications and is not available regularly due to cloud
    cover and sensor property. UAVs provide a noninvasive and cost-effective approach
    to collect data at a much finer scale at the desired time scale. UAVs are defined
    as “a set of configurable elements consisting of a remotely piloted aircraft,
    its associated remote pilot station(s), the required command and control links,
    and any other system elements as may be required, at any point during flight operation”
    (International Civil Aviation Organization, ICAO). UAV-derived images can be processed
    to monitor and predict plant growth parameters, disease and pest incidence, yield,
    and different soil physical and hydraulic properties. Nowadays, smart technologies
    have been built into UAVs by integrating open-source technology, autonomous programs,
    smart sensors, and payloads (Puri et al., 2017). Different hyperspectral, multispectral,
    and light detection and ranging (LiDAR) sensors can be mounted to the UAVs for
    near real-time monitoring of vegetation conditions, extraction of soil and vegetation
    indices (Ni et al., 2018), and predicting LAI. For example, multispectral sensors
    are increasingly used to calculate the normalized difference vegetation index,
    normalized difference red-edge index, leaf water content index, soil-adjusted
    vegetation index, enhanced vegetation index, tile drainage, and plant water status
    by capturing the reflectance including those in visible, near-infrared, and shortwave
    regions of the electromagnetic radiation (Tables 2 and 3). TABLE 2. Different
    sensors used in unmanned aerial vehicles (UAVs) and their advantages and disadvantages
    (Modified from Acharya et al., 2021). Sensors Advantages Disadvantages Red/green/blue
    (RGB) Portable, common, relatively inexpensive, provide high-quality RGB images
    for ortho-imagery and digital surface model, easy to integrate with different
    platforms Wider bandwidth and lower spectral resolution lack geometric and radiometric
    calibration Multispectral Multiple wavelengths allow geometric reconstruction
    and radiometric calibration Relatively costly, image processing relatively complex
    compared to RGB, radiometric, and atmospheric corrections may be required, limited
    compatibility to UAVs Hyperspectral High spectral resolution data across various
    wavelengths of the visible and near infrared spectrum Higher cost than multispectral,
    low signal-to-noise ratio, limited compatibility with standard UAVs and flight
    control software packages, radiometric and atmospheric corrections may be required
    Microwave High spatial resolution, useful under low visibility weather conditions
    (e.g., cloud cover) Sensitive to surface roughness Thermal Sense a wide range
    of temperatures, relatively cheaper Thermally sensitive, vignetting effects, low
    spatial resolution, radiometric corrections required, sensitive to change in surface
    roughness LiDAR Generates dense cloud points, high-quality data, direct geometric
    measurements Higher cost, limited compatibility with UAVs, requires ground filtering
    corrections TABLE 3. Selected vegetative indices and their application in agriculture
    (Modified from Acharya et al., 2021). Indices Equation Use Normalized difference
    vegetation index, NDVI Crop monitoring Wide dynamic range vegetation index, WDRVI
    Crop monitoring Renormalized difference vegetation index, RDVI Crop monitoring
    Optimized soil adjusted vegetation index, OSAVI** Soil color, moisture Enhanced
    vegetation index, EVI Crop monitoring Moisture stress index, MSI Canopy water
    content Normalized difference water index, NDWI Canopy water content Normalized
    difference infrared index, NDII Canopy water content Maximum difference water
    index, MDWI Canopy water content Soil adjusted vegetation index, SAVI Soil color,
    moisture, background variability Abbreviations: L, soil adjustment factor; NIR,
    near-infrared; R, red. There are several types of UAV systems used for agricultural
    applications (Table 4; Acharya et al., 2021). Two widely used UAVs include fixed-wing
    and rotary-wing UAVs (Dileep et al., 2020). Fixed-wing UAVs use airplane-like
    wings to generate lift and to move forward. Some of their properties include lower
    cost, higher endurance, and greater flight speed as compared to rotary-wing UAVs.
    Contrastingly, rotary-wing UAVs use rotor blades and are characterized by vertical
    takeoff and landing capacity, lower flight altitude, and lower flight speed. UAVs
    may be used for mid-season crop health monitoring of vegetative indices using
    near-infrared and other regions of the electromagnetic spectrum that cannot be
    sensed by the human eye (Table 3; Cancela et al., 2019; Ren et al., 2020; Veroustraete,
    2015). Pathak et al. (2020) reported the use of UAVs in spraying herbicides on
    up to 20–40 ha per day and to further eradicate farmers’ direct contact with poisonous
    chemicals and hazardous operational conditions. UAVs can be used to generate variable-rate
    application maps from the images to determine the strength of nutrient uptake
    in a single field. This has the potential to further minimize fertilizer costs
    and optimize crop yield (Kulbacki et al., 2018). UAV-based LiDAR systems and software
    have shown potential in stitching together thousands of high-quality aerial photographs
    to develop 3D maps for monitoring soil erosion and developing conservation strategies
    (Acharya et al., 2021). More recently, new types of aerial imagery and satellite
    (e.g., PlanetLab) have shown tremendous potential in monitoring crops, making
    informed decisions, and increasing yield (Cai et al., 2019). TABLE 4. Applications
    of unmanned aerial vehicles (UAVs) in the agricultural domain (adapted and modified
    from Puri et al., 2017). Agricultural UAVs Usage Honeycomb AgDrone system, Wilsonville,
    OR, USA Most sophisticated with ability to cover 600–800 acres of land in an hour
    DJI Matrice 100, Shenzhen, China Includes GPS, flight controller, and navigation
    system, efficient in diverse environmental conditions DJI T600 Inspire 1, Shenzhen,
    China Fast charging, 4 K video recording, camera control, and easy navigational
    capabilities DJI Agras MG-1, Shenzhen, China Equipped with four nozzles for accurate
    spraying of fertilizers over the entire field EBEE SQ-SenseFly, Berlin, Germany
    Equipped with multispectral sensors and has automatic 3D flight planning Lancaster
    5 Precision Hawk, Raleigh, NC, USA Able to detect humidity, temperature, and pressure
    as well as incident light in real time SOLO AGCO Edition, Duluth, GA, USA Includes
    cloud-based advanced mapping software and Agribotix imaging for high-resolution
    aerial imaging and field and crop monitoring 3.2 Cloud-based information communication
    technology (ICT) systems The main purpose of cloud-based information communication
    technology (ICT) systems is to provide tools to software developers to develop
    a variety of cloud-based services to monitor plant growth parameters and predict
    crop yield (Kaloxylos et al., 2012). This infrastructure consists of data collection,
    statistical analysis, and the creation of commands to control farming equipment.
    In a practical setup, data is generally transferred from a local farm management
    system to the cloud repository associated with the monitoring service in order
    to keep track of the farm activities. The data is subsequently analyzed by an
    expert online system such as an e-agriculturist, and outputs are made directly
    available to the farmers. An ICT system has three major components (Patil et al.,
    2012). The first is an information collection layer, which consists of a sensor-based
    climatic and agricultural dataset. Data may include but is not limited to air
    temperature, relative humidity, air pressure, atmospheric gas concentrations;
    names, models, and prices of agricultural products; operating status of agricultural
    equipment, and locations of agricultural products. The second layer is the transport
    or network layer, which is responsible for transmitting and processing data received
    from the sensor layer above. Finally, the application layer analyzes and processes
    information to cultivate digital awareness. One of the leading examples of a cloud-based
    ICT system is GeoFarmer (Eitzinger et al., 2019). GeoFarmer consists of a modular
    design, which is interoperable through an application programming interface. It
    follows open access standards regarding existing tools and technologies and the
    system is designed and developed in accordance with user needs. Further, the entire
    process and lessons learned in the development process are documented. Similar
    software architecture has been defined in FIWARE, an open-source platform for
    a smart digital future, which focuses on agricultural sensors with reprogrammable
    firmware and a set of interfaces already embedded in the General Packet Radio
    Service board. Cloud-based systems have been applied to monitor pesticide use
    and safety in vegetable crops (Qian et al., 2018). Interfaces of such systems
    consist of guidelines for pesticide purchasing and application, optimal harvest
    time estimation, and a feedback system formulation to monitor the health of vegetables.
    A mobile-based cloud architecture was implemented through AgroMobile (Prasad et
    al., 2013), which enhances smart agricultural practices with the help of image
    processing techniques, image visualization, and cloud-based data processing. A
    similar precision agriculture technique using cloud computing has been proposed
    in enhancing the capacity for special education leadership for aggregate farming
    in the cloud (Castillejo et al., 2020) to increase efficiency and productivity
    and reduce labor costs. Other applications include quality control in greenhouse
    production, and monitoring soil moisture levels, humidity, and temperature in
    agricultural plots. 3.3 Big data in agriculture Big data refers to datasets that
    are too large to be analyzed by traditional data processing software and applications.
    The integration of big data technologies and best farming practices has the potential
    to facilitate improved crop production, plant protection, postharvest analysis,
    and environmental conservation. The major applications of big data in different
    topologies of digital agriculture are available from Sarker et al. (2019) and
    are briefly discussed here. The first application of big data is in precision
    agriculture. Thus, data collected using sensor-enabled hardware and software tools
    is used for assessing, controlling, and improving crop management, crop performance,
    and environmental quality. The second application is prescription agriculture,
    where big data is used to prescribe agronomic practices for optimizing yield.
    The third application is in enterprise agriculture, which includes the agribusiness
    platform and links field data to inventory, logistics, machinery, and profit.
    Finally, the fourth application is in automated agriculture, where farm data and
    environmental data are used to automate agriculture through robotic technologies.
    The data lifecycle in agriculture consists of data generation, warehousing, cleaning,
    annotation, and processing to optimize or improve agricultural production while
    maintaining the quality of the environment (Chaterji et al., 2020). In the following
    section, we briefly describe each of these steps. Data generation may involve
    the use of site-specific or public data. Site-specific datasets, such as soil
    nutrient composition and fertilizer usage, are generally privately held. Examples
    of public data may include topographic or soil textural information of a location.
    Data warehousing allows the data to be integrated from multiple sources and then
    restructured for improved performance. Data annotation is a data labeling technique
    that translates an encoded value to raw data. Because classical WSNs have limitations
    in interpreting and understanding the context of raw sensor data, annotation is
    highly recommended for end-user applications (Khan et al., 2015). On the other
    hand, getting rid of the corrupt or inaccurate values from the tables is a very
    important step in processing and helps to eradicate outliers from the dataset.
    Finally, processing imagery data results in more useful formats, which is largely
    accomplished by using a variety of analysis techniques such as Artificial Intelligence.
    Despite the considerable importance of big data in modernizing agriculture, a
    dearth of publicly available, high-quality datasets remains a formidable challenge
    to farming using alternate techniques. A combination of machine learning and IoT
    may be crucial in filling those gaps and in designing interactive wireless sensor–actuator
    networks for the commercial application of alternative farming systems (e.g.,
    Aquaponics) (Dhal et al., 2022a, 2022b; Dhal, Jungbluth, et al., 2022). 3.4 Digital
    twins in agriculture Digital twins generally refer to a digital replica of real-world
    entities mirroring their behavior and states over the entire lifetime in a virtual
    world. It is generally a standardization of real-world variables and can be used
    irrespective of place, time, and human observation (Botín-Sanabria et al., 2022).
    A digital twin in agriculture has been described as a multi-physical, multi-scale,
    and probabilistic simulation model of complex production. It uses a combination
    of in situ sensors and physical models to mirror physical life. Information from
    sensors and satellite data is taken as input to design digital twins (Verdouw
    et al., 2021) and is utilized in reproducing historical statistics and predicting
    future values. The process involves data integration, Artificial Intelligence,
    and machine learning. Digital twins show potential for aiding in planning and
    managing soil operations, irrigation, robotics, and farm machineries (Nasirahmadi
    & Hensel, 2022). WSNs in farmlands and cloud servers that run machine learning
    algorithms can detect plant diseases, weed clusters, and nutrient deficiencies
    (Angin et al., 2020). Indeed, significant progress has been made in using digital
    twins in the field of arable farming, dairy farming, greenhouse horticulture,
    and livestock rearing (Howard et al., 2020; Verdouw et al., 2017). For example,
    digital twins have been designed to monitor the health of cows (Bos taurus) and
    pigs (Sus domesticus), model firmness and loss of vitamin content in mango (Mangifera
    indica), identify diseases and pests in olives (Olea europaea) and other crops,
    assist in fleet management and tracking machinery, and identify pesticide exposure
    in bees (Apis mellifera) (Pylianidis et al., 2021). These applications of the
    digital twins within the agricultural sector have been observed in seven major
    fields: real-time monitoring of data, energy consumption analysis, system failure
    analysis and prediction, optimization of resources, behavioral analysis, technological
    integration, and virtual maintenance (Angin et al., 2020). More recently, the
    concept of digital twins has been applied in postharvest management by categorizing
    simulations into three stages: input, throughput, and output (Dyck et al., 2022).
    This enables monitoring of moisture and temperature of grain to ensure safe storage
    and movement within the elevator. Further, a sensor network could be used in storage
    to ensure the optimal quality of grains. 4 ADVANTAGES OF USING IOT IN AGRICULTURE
    The demand for agricultural products will increase as the global population grows
    and as climate change occurs (Bradshaw & Brook, 2014). IoT shows the potential
    to lower the impact of these challenges while meeting this demand for agricultural
    products. Indeed, IoT offers a potential solution to increase agricultural efficiency
    and productivity while saving time, labor, and money. Because of the cost and
    time effectiveness of IoT systems, the use and installation of IoT devices in
    the agricultural industry are increasing by nearly 20% annually and are expected
    to reach 225 million devices by 2024 (Elijah et al., 2018). In addition, the expansion
    of cellular service and 5G connectivity introduced by satellite and cellular network
    companies in rural areas have boosted the use of IoT in recent years (Di et al.,
    2019; Chen et al., 2022). The advancement of IoT connectivity to personal and
    portable electronic items, such as cell phones, iPads, and tablets, along with
    the introduction of advanced WSNs and machine learning facilitates real-time data
    retrieval, processing, and decision-making. The advantages of IoT in agriculture
    include interoperability, wide advantages of WSN, and data management using cloud
    and fog computing. In the following section, we discuss these advantages in detail.
    4.1 Interoperability The data collected through WSNs and sensor nodes is made
    available using apps, equipment, and products to communicate and process them
    in a way that does not require any involvement from end users, which is called
    interoperability (Tzounis et al., 2017). In other words, interoperability is the
    data communication approach that allows using different information systems to
    transfer and comprehend information. The interoperability process consists of
    two methods. The first method makes the data available through a local area network
    or a wide area network. The second method shares the data via software or hardware
    between different systems and machines. In the utilization of IoT, interoperability
    plays a vital role in facilitating and exchanging effectively organized data between
    information systems. Interoperability provides multiple benefits, such as system
    adaptability, better productivity, data unity, improved data protection, fewer
    errors, and lower data acquisition costs. The interoperability functionality includes
    three approaches, which include syntactical, structural, and semantical approaches
    (Aydin & Aydin, 2020). Syntactic interoperability allows the use of two or more
    systems simultaneously to communicate and share data even if the interface or
    language is not the same. Structural interoperability defines the standard data
    exchange format from one system to another to understand the information clearly.
    Moreover, semantic interoperability allows connecting two or more systems and
    sharing data between them in a meaningful way. 4.2 Smart irrigation and decision
    support The use of sensors and communication technologies, microcontrollers, and
    actuators has the potential to improve water use efficiency, reduce the cost of
    irrigation, and increase crop productivity (Abbasi et al., 2019). For example,
    UAVs are increasingly used in monitoring plant water use efficiency, which provides
    a base to select plant varieties for breeding and crop improvement, particularly
    in water-limited systems. Soil moisture sensors using capacitance or frequency
    domain technology are able to continuously monitor soil moisture in determining
    irrigation rate and time. Farmers may use mobile phones or wireless personal digital
    assistants to remotely control data loggers and monitor and analyze moisture for
    irrigation scheduling and automation. The applications of different machine learning
    algorithms in developing irrigation support systems are shown in Table 5. The
    irrigation DSS allows a weekly schedule to meet the irrigation water needs of
    a plantation based on inputs to a data-driven model. Some automated and smart
    irrigation systems using WSN, the Internet, cloud computing, and optimization
    tools are discussed in Krishnan et al. (2020) and Ramachandran et al. (2018),
    among others. TABLE 5. Application of machine learning techniques as decision
    support systems in Internet of Things (IoT)-based agricultural applications. Application
    of IoT in irrigation decision support, input, and salient features Reference Input
    variables: Temperature, relative humidity, wind speed, rainfall, dew point, vapor
    pressure deficit Machine learning model used in formulating decision system: partial
    least square regression (PLSR) and adaptive neuro-fuzzy inference system (ANFIS)
    Navarro-Hellín et al. (2016) Input variables: User programed areas, crop types,
    and water supply Major Features: On-board decision system considering existing
    resources, irrigational cost-savings Balafoutis et al. (2017) Input variables:
    Geographic location of experimental plots, crop type, sowing and harvest dates,
    soil texture, and irrigation method Output variables: Soil water balance, irrigation
    scheduling Main Feature: Database for data repository Simionesei et al. (2020)
    Major features: Water management, irrigation estimations, irrigation layouts designing,
    scheduling water deliveries, and recording water consumption Mateos et al. (2002)
    Major features: FAO-56 dual crop coefficient approach used in simulating soil
    water balance taking online weather forecast into account, and based on that,
    future irrigation schedules formulated Li et al. (2018) Input variables: Forecasted
    rainfall and water stress index Major features: Two irrigation scheduling methods
    (decision support system [DSS]-based and soil-moisture based) have been proposed
    to improve cotton yield and water productivity Chen et al. (2020) Irrigation scheduling
    has been formulated using Fuzzy logic methods Giusti and Marsili-Libelli (2015)
    Output variable: Irrigation schedules Machine learning model: Linear regression,
    random forest regression and support vector regression Torres-Sanchez et al. (2020)
    4.3 Smart greenhouse One application of WSNs includes the conversion of a traditional
    greenhouse into a “smart greenhouse” (Kodali et al., 2016). The sensors automatically
    adjust the greenhouse climatic conditions, such as air pressure, relative humidity,
    air temperature, and light conditions, according to a particular set of instructions.
    The real-time greenhouse environment may be monitored via email and SMS alerts
    on mobile phones. For example, the installation of soil moisture sensors in the
    greenhouse activates an irrigation system only when the soil is dry. Recently,
    the use of solar-powered IoT sensors (Hou & Gao, 2010) has made building smart
    greenhouses an inexpensive and popular choice. 4.4 Data management With an increase
    in the application of IoT in multiple sectors and high-performance computing trends,
    the conventional database system has failed to meet the need and demand for massive
    sensor-derived data storage. In this regard, cloud base and fogging data storage
    in IoT platforms play a vital role in managing, transferring, and analyzing data
    into meaningful information using analytical tools. Cloud and fog computing have
    their characteristics to process data burdens and preferences, but they supplement
    each other. Using predictive analytics, a farmer could better predict weather
    conditions, maintain crop quality, and enhance soil fertility to formulate better
    plans and decisions related to crop harvesting and enhance crop quality and productivity.
    4.4.1 Cloud computing Cloud-based data management provides an option for computing
    resources on a pay-per-use basis. It is an extension of cluster and grid computing
    that collects resources at one central place and utilizes them for high-performance
    computing employing wireless connections (Qian et al., 2009; Armburst et al.,
    2020; Dillon et al., 2010). Such a computing system could be divided into two
    parts: front end and backend. The front end consists of client devices, such as
    computers, cell phones, tablets, and iPads, whereas the backend consists of data
    storage and processing located far away from the client. Cloud computing architecture
    provides three types of services, such as Infrastructure as a Service (IaaS),
    PaaS, and Software as a Service (SaaS) (Dempsey & Kelliher, 2018; Jagli et al.,
    2018; Laghari et al., 2016). IaaS platform is a remote data center that provides
    the right to change or configure storage capacity, processing power, and networking
    to their needs. PaaS provides a development platform for an application developer
    to create, test, and launch an application. SaaS deals with ready-made software
    tailored to various business needs and customer services. Cloud technology is
    also used to deliver mobile applications and is called mobile cloud computing
    (MCC). This method handles the information and relocates the storage from mobile
    devices to intense and centralized computing platforms situated in the cloud (Huang,
    2011). MCC takes the pressure off mobile devices by harnessing the power of cloud
    infrastructure. Many cloud service providers are compatible with Windows or Linux
    operating systems, such as Amazon Web Service, Server Space (ITGLOBAL), Microsoft
    Azure (Microsoft Corporation), Google Cloud Platform (Google LLC), IBM Cloud Services
    (International Business Machines Corporation), Adobe Creative Cloud (Adobe Inc),
    and Dropbox (Dropbox Inc). 4.4.2 Fog computing The motivation behind fog computing
    is the need for real-time computing. It is an extension of cloud computing that
    consists of multiple edge nodes directly connected to the physical device. As
    the nodes are physically much closer to the device, it seems more advanced and
    provides better performance than cloud computing for handling user requests and
    emerging standards (Atlam et al., 2018; Khan et al., 2017). Fog computing can
    include cloudlets, a small-scale and robust data center located at the edge of
    the network system to perform computation without sending it to a distant server.
    Thus, fog computing acts as an intermediary between computing hardware and a remote
    server, controls the information being sent to the server, and processes it locally.
    It supports heterogeneous devices to provide greater interoperability than cloud
    computing. However, the security and privacy concerns in Fog computing are big
    issues due to the prevalence of wireless networks from a business point of view
    compared to cloud computing and deserve further research (Khan et al., 2017).
    Because of attacks, such as jamming attacks, and sniffer attacks, numerous organizations
    are focusing on considerable research on the security issue of Fog computing,
    including Cisco, Microsoft Corporation, ARM Holding Plc, and Dell Inc. Farmers
    benefit from cloud and fog data management by registering into the system application.
    The application is often designed to store farmers’ details, agronomic marketing
    details, agronomic vendors, and agricultural service providers, such as fertilizer,
    pesticides, seed, and equipment, and information on the government''s scheme.
    Indeed, cloud and fog data management systems have both advantages and disadvantages
    (Table 6), which largely determine the choice of using one over another. TABLE
    6. Pros and cons of cloud and fog computing in Internet of Things (IoT). Cloud
    for IoT Fog for IoT Pros Cons Pros Cons Improved performance between IoT sensors
    and data processing system High latency because of the distance between client
    devices and data processing centers Low latency because users are geographically
    closer to Fog to get an instant response A more complicated system in data processing
    and storage/decentralized computing Storage capacity can be scalable to store
    and share enormous amounts of data Downtime due to interruption in network and
    multiple connected channels No issues with bandwidth and connection because multiple
    interconnected channels are involved in sending the data Additional expense requires
    routers, hubs, and gateways Virtual processing capabilities on demand via remote
    data center Security and privacy could be limited because thousands of gigabytes
    of data are being transferred simultaneously High security because numerous nodes
    are involved in the complex distribution system Potential for cyberattacks, such
    as jamming and sniffer due to the extension of network''s edge Reduced cost because
    of lower licensing fees than the cost of equipment and maintenance Rescheduling
    of failure management is slow Power efficiency and improved user experiences because
    each node runs efficiently and provides instant response to the users Limited
    scalability—because it cannot be scalable as the cloud 5 CHALLENGES AND OPPORTUNITIES
    OF USING IOT IN AGRICULTURE Data-driven agricultural practices are largely focused
    on precision, predictive, smarter, and efficient farming practices with minimal
    use of resources and enhanced agricultural automation (Ayaz et al., 2019; Patil
    et al., 2012). Therefore, the usage of IoT in agriculture is inevitable with the
    increasing demand for food, land, and changes in climatic conditions. However,
    IoT in agriculture presents several challenges. These challenges and opportunities
    are observed at different levels of data handling and analysis: Collection, data
    transmission, processing and storage, and the application of the data inferred
    (i.e., inference drawn from available data without much expense of resources;
    Tzounis et al., 2017) and are discussed in detail as follows. 5.1 Data collection
    Different IoT sensors are typically designed for a particular agriculture practice
    (Dholu & Ghodinde, 2018). The use of such sensors in different locations and climates
    is often challenging and may require either modification in design or further
    calibration. An ideal sensor should be user-friendly, efficient, robust, and able
    to withstand variable weather conditions. Although experts in the field can set
    up, install, and connect equipment, the application of data by farmers on day-to-day
    basis demands skills and training. The collection of real-time data is increasingly
    important in precision farming and requires an active Internet connection, which
    further presents a major challenge in IoT applications in underdeveloped countries
    and rural areas in the United States (Federal Communications Commission, 2020).
    Although IoT has been widely used in the field of precision agriculture, only
    proprietary solutions are currently being implemented, which creates difficulties
    with device compatibility and connectivity. There is a pressing need to discover
    other approaches that employ interoperable hardware built on open standards and
    platforms. Lower priced alternatives to expensive proprietary solutions can be
    found in the form of many already available products that are built on open hardware,
    at least in part (Stočes et al., 2016). Scaling up the use of integrated IoT technologies
    beyond early adopters is important, especially by making existing solutions easier
    to use and more affordable, thereby improving their selection and use by farmers
    and food companies. Therefore, business models that work for small companies and
    systematic analysis of associated costs and benefits may be necessary. More effort
    is necessary in improving the utilization of IoT technologies in a wide range
    of climates, crops, and soils. Efforts could be centered on the development of
    IoT devices for harsh environments (open air, dirt, dust, moisture, animal manure,
    cold storage, hot cleaning treatments, etc.) and for natural objects (plants,
    animals, square meters of soil, perishable food products), which have limited
    ways to embed IoT devices in the objects themselves. This is especially true for
    devices that use new technologies because there has already been a lot of progress
    in adapting more mature technologies (Verdouw et al., 2017). Indeed, IoT includes
    a large variety of heterogeneous devices; therefore, it is challenging to achieve
    high levels of compatibility among devices if they employ dissimilar standards
    and protocols. In order to overcome such obstacles, standard IoT protocols ought
    to be designed (Abbasi et al., 2019). There are several challenges associated
    with UAV deployments in the agricultural sector, including limited flight durations
    (<1 h), small coverage area, high costs, large amounts of imagery data resulting
    from flights, and geometric and radiometric correction issues. Further, UAVs could
    interfere with civilian aircraft and generate safety issues. There are often stringent
    national laws issued by aviation authorities in each country regarding flying
    UAVs. Typically, the only permission granted is for educational or experimental
    purposes. In the United States, the maximum flight altitude is 120 m above ground
    level, and UAVs are not permitted to fly at night. Finally, processing large volumes
    of imagery data requires special skills, time, and software, often demanding the
    use of machine learning, communication technologies, and data repositories. 5.2
    Data transmission, storage, and processing IoT systems must communicate, store,
    and process the data they have acquired. Data transmission is made feasible with
    adequate connectivity. Many parts of the world, including the United States, have
    poor or no broadband and Internet connection. A significant obstacle to IoT applications
    is the access to internet. Presence of agricultural fields in distinct locations
    limits Internet use and other connectivity (Antony et al., 2020). The data collected
    from one agricultural landscape is often not applicable in other areas. Although
    proper storage and security of the collected data are important, the cost of storage
    and further analysis and processing of stored data to develop an inference for
    its application in the fields remains challenging. New technologies, such as Starlink
    (https://www.starlink.com), free TV band/channels, and other communication channels,
    could be exploited to substitute Internet at remote locations. Further, it is
    important to consider human factors when sharing and communicating information
    between farms, regions, and enterprises. 5.3 Data security Security of routing
    protocols is a major challenge in WSNs. Privacy issues in WSNs are either data-oriented
    or context-oriented. The former is largely associated with handling, preserving,
    and integrity of datasets. The latter deals with contextual information like location
    and time (Abbasi et al., 2019). Indeed, data security, anonymity, and privacy
    present both formidable challenges and opportunities to coordinate data transfer,
    availability, and usability securely for both small and large stakeholders. Agricultural
    data can be difficult to mine because of its volume, noise, gaps, and heterogeneity.
    This, however, provides opportunities for data imputation, standardization of
    IoT, integration of multiple domains, and collaborative research in sensor and
    communication technologies (Abbasi et al., 2019; Verdouw et al., 2017). There
    are opportunities for developing high-throughput phenotypic platforms through
    new sensors or improvements in existing sensors, robotics, remotely sensing vehicles,
    communication technologies, and deep learning methods. 5.4 Application of the
    inferred data IoT provides a foundation for smart logistics, intelligent transportation,
    and affordable agricultural application to address climatic challenges, improve
    resource utilization and efficiency, and increased productivity (Chen & Jin, 2012).
    However, challenges remain in efficient data transmission systems and adaptation
    of outputs by farmers. Indeed, farmers must be technology savvy to understand
    and utilize information. Certain changes may be necessary at farmers’ fields,
    which may incur additional expenses for data collection or processing. Rural farmers
    are often hesitant to adopt new technology. The use of IoT in agriculture is challenging
    due to the complexity of agricultural fields and farming operations. Research
    in IoT is often constrained by short-term funding; thus, limiting data collection
    processes. Antony et al. (2020) reported that 2 to 3 years of funding in the agriculture
    sector is relatively ineffective as plants’ cropping cycle may vary with weather
    conditions. However, the need to feed the growing population has bestowed opportunities
    in utilizing recent advances in IoT (Mahanta et al., 2022) in greenhouse farming,
    vertical farming, hydroponic, and plant phenotyping. Nevertheless, we see a plethora
    of opportunities to utilize WSNs, digital twins, machine learning, and cloud computing
    in soil and crop monitoring, irrigation scheduling, water quality analysis, plant
    breeding, weed control, disease, and pest identification, pesticide spray, reuse
    and recycling of wastes, and livestock management. 6 CONCLUSION This paper reviewed
    the application of different IoT platforms, WSNs, and technologies like UAVs,
    cloud computing, and big data analytics in agricultural production systems and
    value chains, such as crop monitoring, irrigation support, weed and pest control,
    fertilizer application, and soil health assessment. The literature, in general,
    indicates the use of sensors, actuators, microcontrollers, and machine learning
    in automated and smart irrigation systems and agricultural decision support. Different
    red, green, and blue, hyperspectral, multispectral, and LiDAR sensors could be
    mounted on UAVs for improved agricultural monitoring and forecasting to enable
    highly efficient, qualitative, and profitable farm products. Big data, data mining,
    and real-time analysis show promise to support and improve precision, prescription,
    enterprise, and automated agriculture. Cloud and fog data storage in IoT platforms,
    however, appear to be crucial in managing, transferring, and analyzing big agricultural
    data. This review also reveals opportunities in improving data security, anonymity,
    and usability, and developing high-throughput phenotypic platforms through new
    sensors or improvements in existing sensors, robotics, remote vehicles, communication
    technologies, and deep learning methods. Overall, IoT can improve production levels,
    cost-effectiveness, product quality, safety, and traceability through innovation,
    automation, and control while advancing the much-needed digital transformation
    of the agricultural sector in the face of climate change. AUTHOR CONTRIBUTIONS
    Sambandh Dhal: Conceptualization; data curation; formal analysis; methodology;
    visualization; writing—original draft; writing—review and editing. Briana Wyatt:
    Conceptualization; methodology; visualization; writing—original draft; writing—review
    and editing. Shikhadri Mahanta: Methodology; writing—original draft; writing—review
    and editing. Nishan Bhattarai: Conceptualizatoin; methodology; writing—original
    draft; writing—review and editing. Sadikshya Sharma: Conceptualization; writing—original
    draft; writing—review and editing. Tapas Rout, Pradip Saud: Writing—original draft;
    writing—review and editing. Bharat Sharma Acharya: Conceptualization; data curation;
    methodology; project administration; supervision; visualization; writing—original
    draft; writing—review and editing. ACKNOWLEDGMENTS The authors express their sincere
    thanks to two anonymous reviewers and the editor for their valuable comments and
    suggestions, which helped to improve the manuscript substantially. CONFLICT OF
    INTEREST STATEMENT The authors declare that they have no conflict of interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. DISCLAIMER The authors are responsible for the views expressed
    in this paper and do not necessarily represent or reflect the views and policies
    of their universities or organization. REFERENCES Citing Literature Early View
    Online Version of Record before inclusion in an issue Figures References Related
    Information Recommended Digital agriculture platforms: Driving data‐enabled agricultural
    innovation in a world fraught with privacy and security concerns Bryan C. Runck,  Alison
    Joglekar,  Kevin A. T. Silverstein,  Connie Chan-Kang,  Philip G. Pardey,  James
    C. Wilgenbusch Agronomy Journal IoT and ML‐based automatic irrigation system for
    smart agriculture system Anoop E G,  G. Josemin Bala Agronomy Journal RETRACTED:
    Real‐time agricultural field monitoring and smart irrigation architecture using
    the internet of things and quadrotor unmanned aerial vehicles Rajalakshmi Selvaraj,  Venu
    Madhav Kuthadi,  S. Baskar Agronomy Journal Adoption of Precision Agriculture
    Technologies by U.S. Corn Producers Stan G. Daberkow,  William D. McBride Proceedings
    of the Fourth International Conference on Precision Agriculture, [1] Artificial
    intelligence in farming: Challenges and opportunities for building trust Maaz
    Gardezi,  Bhavna Joshi,  Donna M. Rizzo,  Mark Ryan,  Edward Prutzer,  Skye Brugler,  Ali
    Dadkhah Agronomy Journal Download PDF © 2024 American Society of Agronomy, Crop
    Science Society of America, and Soil Science Society of America AGRONOMY.ORG,
    CROPS.ORG, SOILS.ORG MEMBERSHIP: AGRONOMY, CROPS, SOILS MEETINGS CCA SITE CAREERPLACEMENT.ORG
    Advertising Submit an article Author Resources Editorial Policies Librarian Resources
    Contact Publications Additional links ABOUT WILEY ONLINE LIBRARY Privacy Policy
    Terms of Use About Cookies Manage Cookies Accessibility Wiley Research DE&I Statement
    and Publishing Policies HELP & SUPPORT Contact Us Training and Support DMCA &
    Reporting Piracy OPPORTUNITIES Subscription Agents Advertisers & Corporate Partners
    CONNECT WITH WILEY The Wiley Network Wiley Press Room Copyright © 1999-2024 John
    Wiley & Sons, Inc or related companies. All rights reserved, including rights
    for text and data mining and training of artificial technologies or similar technologies."'
  inline_citation: '>'
  journal: Agronomy Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Things (IoT) in digital agriculture: An overview'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Siddiqui M.
  - Akther F.
  - Rahman G.M.E.
  - Elahi M.M.
  - Mostafa R.
  - Wahid K.A.
  citation_count: '9'
  description: 'Water, one of the most valuable resources, is underutilized in irrigated
    rice production. The yield of rice, a staple food across the world, is highly
    dependent on having proper irrigation systems. Alternate wetting and drying (AWD)
    is an effective irrigation method mainly used for irrigated rice production. However,
    unattended, manual, small-scale, and discrete implementations cannot achieve the
    maximum benefit of AWD. Automation of large-scale (over 1000 acres) implementation
    of AWD can be carried out using wide-area wireless sensor network (WSN). An automated
    AWD system requires three different WSNs: one for water level and environmental
    monitoring, one for monitoring of the irrigation system, and another for controlling
    the irrigation system. Integration of these three different WSNs requires proper
    dimensioning of the AWD edge elements (sensor and actuator nodes) to reduce the
    deployment cost and make it scalable. Besides field-level monitoring, the integration
    of external control parameters, such as real-time weather forecasts, plant physiological
    data, and input from farmers, can further enhance the performance of the automated
    AWD system. Internet of Things (IoT) can be used to interface the WSNs with external
    data sources. This research focuses on the dimensioning of the AWD system for
    the multilayer WSN integration and the required algorithms for the closed loop
    control of the irrigation system using IoT. Implementation of the AWD for 25,000
    acres is shown as a possible use case. Plastic pipes are proposed as the means
    to transport and control proper distribution of water in the field, which significantly
    helps to reduce conveyance loss. This system utilizes 250 pumps, grouped into
    10 clusters, to ensure equal water distribution amongst the users (field owners)
    in the wide area. The proposed automation algorithm handles the complexity of
    maintaining proper water pressure throughout the pipe network, scheduling the
    pump, and controlling the water outlets. Mathematical models are presented for
    proper dimensioning of the AWD. A low-power and long-range sensor node is developed
    due to the lack of cellular data coverage in rural areas, and its functionality
    is tested using an IoT platform for small-scale field trials.'
  doi: 10.3390/s21186040
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 21 Issue 18 10.3390/s21186040 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Lei Shu Subscribe
    SciFeed Recommended Articles Related Info Links More by Authors Links Article
    Views 2881 Citations 9 Table of Contents Abstract Introduction Related Work Problem
    Formulation Proposed Solution System Design and Integration Field Trial Performance
    Analysis Conclusions Author Contributions Funding Institutional Review Board Statement
    Informed Consent Statement Data Availability Statement Acknowledgments Conflicts
    of Interest References Altmetric share Share announcement Help format_quote Cite
    question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessArticle Dimensioning of Wide-Area Alternate
    Wetting and Drying (AWD) System for IoT-Based Automation by Mushran Siddiqui 1,
    Farhana Akther 1, Gazi M. E. Rahman 1,2,*, Mohammad Mamun Elahi 3, Raqibul Mostafa
    1 and Khan A. Wahid 2 1 Department of Electrical and Electronic Engineering, United
    International University, United City, Badda, Dhaka 1212, Bangladesh 2 Department
    of Electrical and Computer Engineering, University of Saskatchewan, Saskatoon,
    SK S7N 5A9, Canada 3 Department of Computer Science and Engineering, United International
    University, United City, Badda, Dhaka 1212, Bangladesh * Author to whom correspondence
    should be addressed. Sensors 2021, 21(18), 6040; https://doi.org/10.3390/s21186040
    Submission received: 16 July 2021 / Revised: 5 September 2021 / Accepted: 7 September
    2021 / Published: 9 September 2021 (This article belongs to the Section Internet
    of Things) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract
    Water, one of the most valuable resources, is underutilized in irrigated rice
    production. The yield of rice, a staple food across the world, is highly dependent
    on having proper irrigation systems. Alternate wetting and drying (AWD) is an
    effective irrigation method mainly used for irrigated rice production. However,
    unattended, manual, small-scale, and discrete implementations cannot achieve the
    maximum benefit of AWD. Automation of large-scale (over 1000 acres) implementation
    of AWD can be carried out using wide-area wireless sensor network (WSN). An automated
    AWD system requires three different WSNs: one for water level and environmental
    monitoring, one for monitoring of the irrigation system, and another for controlling
    the irrigation system. Integration of these three different WSNs requires proper
    dimensioning of the AWD edge elements (sensor and actuator nodes) to reduce the
    deployment cost and make it scalable. Besides field-level monitoring, the integration
    of external control parameters, such as real-time weather forecasts, plant physiological
    data, and input from farmers, can further enhance the performance of the automated
    AWD system. Internet of Things (IoT) can be used to interface the WSNs with external
    data sources. This research focuses on the dimensioning of the AWD system for
    the multilayer WSN integration and the required algorithms for the closed loop
    control of the irrigation system using IoT. Implementation of the AWD for 25,000
    acres is shown as a possible use case. Plastic pipes are proposed as the means
    to transport and control proper distribution of water in the field, which significantly
    helps to reduce conveyance loss. This system utilizes 250 pumps, grouped into
    10 clusters, to ensure equal water distribution amongst the users (field owners)
    in the wide area. The proposed automation algorithm handles the complexity of
    maintaining proper water pressure throughout the pipe network, scheduling the
    pump, and controlling the water outlets. Mathematical models are presented for
    proper dimensioning of the AWD. A low-power and long-range sensor node is developed
    due to the lack of cellular data coverage in rural areas, and its functionality
    is tested using an IoT platform for small-scale field trials. Keywords: AWD; IoT;
    WSN; smart irrigation 1. Introduction Rice (Oryza sativa) is the second highest
    ranked food staple in the world, feeding one third (2.6 billion) of the population
    (7.8 billion). About 90% [1] of the world’s rice is produced in Asia, and it is
    the fastest growing staple food in Africa and Latin America [2] due to its ease
    of preparation compared to that of corn and wheat. It provides 21% of global human
    energy per capita and is the largest single source of energy [3]. A total of 75%
    of world rice is produced in 92 million hectares of irrigated lowland, and Asia
    occupies 56% of this land [4]. Irrigated rice uses up to 43% of the world’s irrigated
    water, which is two to three times more than other irrigated crops, and thus places
    an excessive demand on water usage compared to other staple crops. Bangladesh,
    an Asian country with a growing population and an increasing demand for rice,
    is playing an important role in rice research. According to the Bangladesh Rice
    Research Institute (BRRI), the main source of irrigation for rice is from ground
    water. However, the ground water is retrieved using shallow tube wells (STW) and
    deep tube wells (DTW), which is resulting in deteriorating ground water levels
    [5]. The production of 1 kg of rice requires 3000–5000 L of water [6], and Boro
    rice, which is generally grown in dry months, predominantly relies upon the groundwater.
    In order to address this situation, the International Rice Research Institute
    (IRRI) developed an irrigation method called alternate wetting and drying (AWD)
    that requires 30% less water than the traditional irrigation method used during
    the growing phase [7]. Studies presented in [8] have shown that, compared to the
    traditional method, AWD requires five fewer irrigation cycles and fewer pumps
    which saves about 40% of fuel. Besides minimizing the use of groundwater, AWD
    reduces irrigation cycles without affecting the yield [9]. Due to intermittent
    flooding in AWD, emission of the greenhouse gas methane (CH4) is reduced by 73%
    in the dry season and by 21% in the wet season [10], compared to the continuous
    flooding method. This also decreases arsenic concentration in the shoots of rice
    plants [11]. Unlike other countries adopting AWD, where water is charged based
    on volumetric usage, most of Bangladesh’s irrigation water is charged per hectare,
    without any incentives for the farmers to reduce their water usage. Sharing a
    single pump amongst the farmers often gives rise to conflicts that usually deter
    any collaborative effort [11], which is a key point of AWD. The lack of proper
    knowledge and information sharing are also limiting the adoption of the AWD method.
    Research has shown that there is a significant opportunity for AWD in Southeast
    Asian countries such as Bangladesh and Vietnam [12]; however, due to social, economic,
    and technical challenges, the AWD method is not well perceived in these regions
    [13]. Besides the challenges of AWD described above, applying AWD to a wide area
    poses additional challenges, such as monitoring and controlling the complex mechanism,
    before it can become economically feasible. To achieve this, an automated IoT-connected
    wireless sensor network (WSN) is required. WSN is a network of sensors that accumulates
    monitoring data in centrally located storage, such as cloud storage. Most WSNs
    require three different types of network elements including the sensor node (SN),
    the cluster head (CH) and the data sink (DS), also called a base station, as shown
    in Figure 1a. All of the SNs are distributed into multiple, unequal clusters headed
    by a CH that sends sensor data to the DS. Functionally, the clustering process
    and data transfer protocol may vary depending on the nature of the application
    and the distribution of the SNs. Recent applications also require these WSNs to
    be connected with other networks through gateways and to the internet infrastructure
    [14], as shown in Figure 1a. Figure 1. (a) Network elements and functional layers
    of the IoT-connected wireless sensor network (WSN), and (b) Automated AWD-specific
    WSN with IoT connectivity. IoT is the network of various smart devices to facilitate
    information flow to the end-user through the existing internet. The exponential
    growth and distribution of IoT devices are giving rise to numerous innovative
    and real-life applications. COVID-SAFE [15] monitors and predicts the infection
    by monitoring social distancing with the help of wearable IoT devices. Various
    wearable IoT devices are used for human emotion recognition [16] to facilitate
    online communication. The growth of the IoT applications, such as smart health
    using wearable IoT devices and smart cities, results in security threats to the
    network itself. The authors [17] proposed an IoT Botnet Detection using salp swarm
    algorithm (SSA) and ant lion optimization (ALO) models to minimize security threats.
    Authors of [18] proposed an enhanced information-centric networking (ICN) for
    IoT using artificial intelligence (AI) and edge computing in the internet cloud.
    Studies are conducted on the design and fabrication technologies to utilize smart
    IoT devices [19]. The researchers focus on IoT nodes’ accurate and fast localization
    [20]. IoT connected to WSN has been implemented on a limited scale in agriculture
    as reported in [21,22,23,24]. Most WSN- and IoT-based irrigation automation systems
    utilize soil moisture content and other environmental variables to schedule irrigation
    without considering plant growth; however, this is insufficient for automating
    the AWD method and gaining the farmers’ trust. Besides monitoring and controlling
    the pumps, an effective water distribution system through pipes is also required,
    giving rise to the added complexity of having to both monitoring and controlling
    the distribution system. Moreover, present WSN technologies are optimized for
    applications with densely populated SN and small area coverage. Wide-area monitoring
    requires long-range and low-power wireless connectivity [25]. Therefore, wide-area
    AWD automation involves three different WSNs, dedicated for (1) field water-level
    and environmental monitoring; (2) irrigation system monitoring; and (3) irrigation
    system controlling, as shown in Figure 1b. Therefore, densely populated and widely
    distributed sensor and actuator nodes are required for these three different WSNs.
    These three WSNs will be interconnected virtually. Traditional WSN virtualization
    involves multilayer connectivity and control, which increases inter-layer WSN
    traffic [26] for the AWD application. Besides wide-area coverage, automated AWD
    also requires external parameters, such as real-time weather forecast data, plant
    physiological data, and the farmers’ input. These data can be used by connecting
    the WSNs with different servers throughout the IoT network, as shown in Figure
    1b. Literature shows that large-scale irrigation is required to limit water usage
    to provide more water for the growing industrial sectors and increasing urban
    population [27,28]. Large-scale multiple cropping can further limit water usage
    [29] using the automated irrigation framework proposed in this article. Despite
    the inherent advantages of the AWD, both small- and large-scale implementations
    are yet to achieve the expected success for lack of proper adaptation of technologies,
    namely IoT and WSN [30]. Moreover, the large-scale implementation of an irrigation
    system, such as AWD, involves multiple stakeholders and different technologies.
    That may require an effective dimensioning tool for a practical convergent solution.
    The research presented in this article has focused on automation through proper
    technology adoption by providing a mathematical model and addressing all the required
    systems. The proposed mathematical model considers the irrigation system as a
    distributed system. It separates its components into pipe networks, localized
    water control, and clustered pumps with centralized control, thus making the automation
    platform applicable to AWD and non-AWD irrigation systems. The pipe network will
    facilitate both micro- and macro-level irrigation control in a scalable manner.
    The distributed health monitoring of the pipe network and the clustered pumps
    will make the system more fault-tolerant. Various field-level sensors in an IoT-connected
    WSN will help build a long-term database enabling scientific research to study
    the impact of climate change on crop yield [31], physiological changes, greenhouse
    gas emissions for different crops, and the application of various irrigation models.
    The major contributions of this paper can be summarized as follows. (1) Develop
    a dimensioning model for large-scale implementation of AWD using pipes, actuator-based
    water distribution, and clustered pumps. (2) Design WSN architecture combining
    three different functionalities with IoT-based automation for scalability and
    effective control and operation of the overall system. (3) Develop a low-power
    and long-range (LoRa) sensor node and data sink using LoRa, 3G, and WiFi interfaces
    for field monitoring using an IoT network. (4) Sample automation algorithms for
    the closed-loop AWD control using various internal and external parameters that
    can be used in both the WSNs and the IoT connected network. (5) Provision for
    scientific research through the database of long-term sensor data and applying
    Machine Learning (ML) for future wide-area implementation. The rest of the paper
    is organized as follows. Section 2 reviews existing literature related to the
    automation of AWD. Section 3 discusses the problem formulation for the automation
    of large scale AWD while Section 4 provides the proposed solution. Section 5 describes
    the system design and integration of WSN with AWD. Section 6 provides a description
    of the related field trial and Section 7 describes the performance of the system.
    Section 8 concludes the paper outlining future plans and work needed on this topic.
    2. Related Work Irrigation automation is not a very recent phenomenon and, as
    a result, is usually performed by adopting existing mathematical models and optimization
    algorithms. These primarily control the irrigation pumps to maximize water utilization.
    Baki et al. [32] have proposed a numerical scheme that utilizes weather forecasts
    and the water flow in soils to determine the optimal irrigation depth on scheduled
    irrigation days for the highest irrigation efficiency and optimum crop yield.
    Shahdany et al. [33] developed a mathematical model to automate canal irrigation
    using both known and unknown water demands for different irrigation systems. Besides
    the model-based optimization approaches, machine learning is also used by [34]
    to predict crop irrigation requirements based on soil parameters. Linker et al.
    [35] proposed a real-time and sub-optimal irrigation scheduling system that utilizes
    weather data alongside the crop’s physiological state and soil water availability.
    However, users need to decide between yield and irrigation performance depending
    on their applications. To achieve better optimization, Munir et al. [36] included
    parameters such as the plant type, watering time, air humidity, light intensity,
    and soil type for their fuzzy logic-based irrigation scheduling system that uses
    low power sensor-nodes. In [37], the authors designed an irrigation controller
    prototype based on the fuzzy rule to inspect water wastage by providing an optimal
    irrigation environment for farming. An artificial neural network (ANN) is used
    by [38] to predict soil moisture changes and to schedule irrigation based on climatic
    information and rooting depth. This ANN method was compared with the established
    water stress (WS) method, which well predicted the soil moisture during the main
    growing season, but was error prone at lower soil moisture levels. ANN and non-linear
    regression (NLR) were used by [39] to find the distances between the emitters
    in order to achieve optimum drip irrigation in the wet areas. Human expertise
    is also used by [40] for their proposed online decision support system (DSS),
    which consists of a meteorological model for weather forecasts, and a computational
    model for soil water balance and irrigation scheduling. It generates an irrigation
    schedule for a week in advance based on the DSS data repository. Irrigation automation
    is further upgraded by utilizing various sensors, wireless links, and internet
    infrastructure due to the increasing availability and decreasing cost of these
    technologies. Water level-based scheduling was proposed by [41] and uses a low-cost
    water level sensor along with inputs from the local farmers through the IoT. In
    [42], the authors present a framework using an IoT-based water distribution and
    management system that utilizes water flow meters, ultrasonic sensors and motors.
    The over-usage of freshwater for flood irrigation is addressed by [43]. The author
    proposed an IoT-based intelligent decision support system to improve the farmer’s
    water utilization by using weather data and sensor data. A complete irrigation
    supervisory control and data acquisition ( SCADA) with WSN was implemented by
    [44] to compare seven different irrigation scheduling algorithms and found that
    soil-based approaches were not adequate in providing sufficient water for the
    plants. Recently, more irrigation research on automated AWD systems is being reported
    in the academic literature. Localized pump automation is achieved by sensing the
    water level lacking remote monitoring or IoT connectivity and using solar panels
    as the power source [45]. An IoT-based system integrates laser sensors for precise
    water level measurement for automation of the AWD technique [46]. The proposed
    system was implemented for different sizes of fields, from 0.7 acres to 55.8 acres.
    Besides these local and remote irrigation automations, performance optimization
    of the WSN platform is also focused on by [47]. They developed a 3D ray-launching
    (3D-RL) deterministic algorithm to characterize the radio channel of LoRa and
    LoRa wide area network (LoRaWAN) in order to provide better connectivity to transmit
    sensor data in obstacle filled scenarios for irrigation automation. Cardoso et
    al. [48] have proposed a narrow band IoT (NB-IoT) and LoRa-based system to monitor
    and schedule irrigation using machine learning. Unlike irrigation automation,
    AWD requires additional parameters such as plant physiological data in order to
    automate the irrigation system. As discussed in the previous paragraph, some irrigation
    automation utilizes weather data or plant physiological information from the farmer;
    however, this platform targeted only a single pump as the irrigation control unit.
    Most of these solutions are offline, of the open-loop type, and do not synthesize
    the data from all of the different sources. They lack wide-area considerations
    and do not focus on the complexity that comes with the integration of multiple
    physical and logical WSNs with the IoT. Proper dimensioning of pipe-based water
    distribution networks, pump clustering, irrigation depth, and plant lifecycle-specific
    schedule mapping is absent. Therefore, any one of them individually or in combination
    may not be suitable for the automation of the AWD method in wide area applications,
    which is highly required for the socio-economic success of the AWD implementation.
    3. Problem Formulation As one of the rice-producing countries of southwest Asia,
    Bangladesh produces three types of rice: Aus, Aman, and Boro. The north-west part
    of Bangladesh produces more than one-third of these three types of rice and 35%
    of Boro rice is produced in the country. Hence, the irrigated lowland of this
    part can be considered for the AWD implementation, as shown in Figure 2. Figure
    2a shows the annual Boro production areas in overall Bangladesh. Figure 2. Boro
    production and illustrative implementation of AWD in Bangladesh; (a) Total Boro
    cultivation (2015–2016), (b) Portion of the medium Boro production zone focused
    for AWD implementation as marked in (a) by the red box, and (c) closer view of
    an IoT-based AWD system. For implementation of the wide area AWD, a portion of
    the medium Boro production area that produces less than 16% Boro [49] and lacks
    adequate irrigation facilities, as marked by the yellow box in Figure 2b which
    was chosen as the test site. Figure 2c shows the land condition of this area.
    The AWD zone is 5 km by 20 km, covering more than 24 thousand acres of cultivable
    lands that suffers from lack of irrigation. The closest water source is a river
    which is at least 2 km away from the cultivable land. Therefore, traditional canal-based
    irrigation methods are inadequate as they can suffer from water seepage of about
    40% [50]. Furthermore, manual AWD is not able to provide efficient water level
    control over this large area of irrigated land. The proposed IoT-based automation
    system with pipe-based water transportation and distribution using the AWD system
    may reduce the seepage loss by up to 90% [51]. Local or centralized automation
    is not adequate in monitoring and controlling the large number of elements in
    the AWD system. Therefore, an intelligent layered IoT-based closed-loop automation
    system is required and is proposed for this project. 4. Proposed Solution The
    proposed automation of AWD is a closed-loop control system that uses an IoT based
    WSN, which is represented by a simplified block diagram as shown in Figure 3.
    This system has three different types of inputs, which are: (i) environmental
    inputs from the field and weather forecast server; (ii) irrigation inputs from
    a plant physiology database; and (iii) inputs from the users of the pumping network
    and water distribution system. Figure 3. Functional blocks of the IoT–WSN-based
    AWD automation control loop. The environmental parameters to be monitored are
    temperature, pressure, humidity, and the greenhouse gas methane ( 𝐶 𝐻 4 ) . Rice
    fields emit a considerable amount of methane, which can be reduced significantly
    by the intermittent flooding that occurs in the AWD method. The field temperature,
    pressure, and humidity data are required to calculate the evapotranspiration loss,
    seepage loss, and water level of the field, which are used to calculate the basic
    parameters used in the AWD method. Other environmental parameters, such as wind
    speed and daylight, can be collected from the weather forecast server through
    the IoT cloud. The wide area AWD requires an adequate number of pumping machines
    and a pipe-based water distribution system to meet the field irrigation requirement.
    To maintain uniform irrigation throughout the area, the water pressures of the
    pipes need to be monitored continuously. The actuators for the water outlets and
    pumps are controlled to maintain proper pressure and water flow during the wetting
    phase of the AWD method. Additionally, the pump power and mechanical parameters
    need to be monitored continually. The crop coefficient ( 𝐾 𝑐  ) determines the
    AWD stages and can be determined from plant physiological data stored in the database
    and from input entered by farmers. The external data obtained from sensors in
    the field, the weather forecast, the crop coefficient, and user input are combined
    and processed in the closed control loop by the cloud-based AWD server through
    the IoT network. The control logic generated by the cloud server is then sent
    to the actuators and pumps through the IoT network to control the irrigation processes.
    All of the sensor nodes (SN) and actuator nodes (AN) are grouped into clusters
    and connected with the base-station (BS) through the cluster head (CH) using a
    LoRa wireless interface. The BS connects the whole WSN to the IoT network through
    the general packet radio service (GPRS) or third generation (3G) cellular network
    as per availability and coverage. The BS also acts as the WSN to an IoT gateway
    that converts the SN/AN data packets to message query telemetry transport (MQTT)
    messages. 5. System Design and Integration The proposed AWD automation consists
    of two main parts: (a) design and dimensioning of the AWD system; and (b) design
    and integration of the WSN. The AWD method at its core is an irrigation schedule
    that depends on certain the water requirements which vary depending on soil condition
    and the growth stages of the crop. Automation of the AWD using the IoT and WSN
    requires the sensor and actuator networks to be designed together, integration
    of various service modules, and development of the software algorithm. These are
    described in the following sub-sections. 5.1. Irrigation Scheduling The water
    volume of the irrigated field changes due to evapotranspiration and percolation.
    Evapotranspiration is influenced by the crop’s growing stage, wind speed, solar
    radiation, temperature, humidity, and soil properties. The crop evapotranspiration
    (𝐸 𝑇 𝑐 ) [52] can be calculated as 𝐸 𝑇 𝑐 =𝐸 𝑇 0 × 𝐾 𝑐  (1) where ( 𝐾 𝑐 ) is the
    crop coefficient (potency of soil evaporation and crop transpiration), and (𝐸
    𝑇 0 ) is the reference evapotranspiration. Among the different methods, the Food
    and Agriculture Organization’s (FAO) Penman–Monteith method [52] is considered
    to be the best estimation for 𝐸 𝑇 0 , and can be expressed as 𝐸 𝑇 0 = 0.408Δ (
    𝑅 𝑛 −𝐺)+γ 900 𝑇+273 𝑢 2 ( 𝑒 𝑠 − 𝑒 𝑎 ) Δ+γ(1+0.34 𝑢 2 )   (2) where, 𝑅 𝑛 = net
    radiation at the crop surface ( MJ m −2 d −1 ) , G = soil heat flux density (
    MJ m −2 d −1 ) , T = mean air temperature (°C), Δ = slope of saturation vapor
    curve (kPa°C−1), 𝑢 2 = wind speed ( ms −1 ), 𝑒 𝑠 = saturation vapor pressure (kPa),
    and 𝑒 𝑎 = actual vapor pressure (kPa). Water requirements for rice (WRR) in cm/day
    is given in Equation (3), which measures the receding water level. 𝑊𝑅 𝑅 𝑗 =(𝐸
    𝑇 𝑜 × 𝐾 𝑐 𝑗 )+𝑃𝐸𝑅𝐶 (3) where PERC is the percolation loss from water seeping into
    the ground through pores, and j is the growth-stage index (1 to 3). Figure 4 illustrates
    the irrigation scheduling for the AWD method. The irrigation frequency (lower
    row) changes along with the development stages of the crop. Three development
    stages (transplantation, flowering, and panicle initiation) along with a water
    level indicator (middle row) are shown to indicate where continuous standing water
    and irrigation scheduling is required. Figure 4. Irrigation scheduling in alternate
    wetting and drying (AWD) irrigation method. The different crop coefficients, including
    Kc of rice, for these three stages are shown in Figure 4 [53]. It is quite evident
    when AWD is initiated that, for approximately 5 to 8 days, depending on the soil
    type, no irrigation is required [54]. Continuous standing water is required at
    the beginning of all three stages which approximates to about 30 days in total;
    hence, utilization of the AWD method is suspended during these times. Therefore,
    depending on the stages and in accordance with the 𝑊𝑅 𝑅 𝑗 , irrigation scheduling
    is applied. Irrigation scheduling is divided into two sections. The first section
    is for continuous standing water and the second section is for AWD period. Continuous
    Standing Water: For the three development stages, if the standing water level
    recedes to 2 cm from 5 cm as given in Equation (4), then the irrigation schedule
    or cycle 𝐼 1𝑗 is applied using Equation (5). 𝐼 1𝑗 represents the number of times
    the pump is turned on and is used to maintain a continuous water level of 5 cm
    above the ground. In this equation, TPFj is the total number of days related to
    the transplantation, panicle initiation, and flowering stages. 𝑖𝑓 ∑ 𝑡=1 𝑇 𝑊𝑅 𝑅
    𝑗 (𝑡)=3 cm 𝑖𝑛 𝑇 𝑑𝑎𝑦𝑠, 𝑗∈{1,2,3}  (4) 𝐼 1𝑗 = 𝑇𝑃 𝐹 𝑗 𝑇 (5) Establishment of continuous
    standing water during these stages is necessary as rice is quite sensitive to
    fluctuation in water level. Alternate Wetting and Drying Method: For the AWD method,
    when the water level falls 5 cm from above the ground and reaches 15 cm below
    the surface as given in Equation (6), then irrigation 𝐼 2 , which is the number
    of times the pump is turned on, is implemented using Equation (7), where 𝑊 𝑗 is
    the total days for the AWD method, to bring the water level back to 5 cm above
    the surface. 𝑖𝑓 ∑ 𝑡=1 𝑇 1 𝑊𝑅 𝑅 𝑗 (𝑡)=5 cm 𝑖𝑛  𝑇 1  𝑑𝑎𝑦𝑠  𝑎𝑏𝑜𝑣𝑒 𝑡ℎ𝑒 𝑠𝑢𝑟𝑓𝑎𝑐𝑒  𝑎𝑛𝑑  𝑃𝑒𝑟𝑐𝑜𝑙𝑎𝑡𝑖𝑜𝑛
    𝑙𝑜𝑠𝑠 =15 𝑐𝑚 𝑖𝑛  𝑇 2  𝑑𝑎𝑦𝑠 𝑏𝑒𝑙𝑜𝑤 𝑡ℎ𝑒 𝑠𝑢𝑟𝑓𝑎𝑐𝑒     (6) 𝐼 2𝑗 = 𝑊 𝑗 𝑇 1 + 𝑇 2 𝑗∈{1,2,3}
    (7) The AWD method is utilized in three different stages of the plant development
    period: (i) 15 days after transplantation; (ii) then seven days before panicle
    initiation; and (iii) finally seven days after flowering. 5.2. Dimensioning of
    the AWD System Proper dimensioning of the water distribution network’s pipes is
    required for the implementation of a large-scale AWD system. Multiple pumps are
    used in several clusters for a field of 25,000 acres to reflood the field in the
    shortest time possible. Multiple clustered-pumps facilitate the multiple inlet
    rice irrigation (MIRI) option available with AWD which allows the water to flow
    into the fields from several inlets, flooding the field in the shortest amount
    of time. The capacities of the pumps are chosen to meet the recommended minimum
    swift flooding rate of 0.00126 m3/s per acre (20 gallons per minute per acre),
    which varies depending on the type of soil [55]. Equation (8) shows the total
    number of pumps required ( 𝑛 ), when operating for 𝑡 hours with pumping capacity
    ( c ) in m3/s. The available pumping capacities include 0.02524, 0.05047, 0.06309,
    0.1009, and 0.1262 m3/s, and are achieved with 400, 800, 1000, 1600, and 2000
    GPM (gallons per minute) pumps that cover an acre of area (A) with q (150/m for
    one cm per hour water delivery) amount of water. 𝑛= 𝐴 𝑐×𝑞×𝑡       (8) Figure 5a
    shows the number of pumps required to irrigate 100 acre-inches. Using our proposed
    area of 25,000 acre-inches, it will require a total of 250 pumps with 2000 GPM
    capacities. Figure 5. (a) Number of pumps required when operating for duration
    of time (b) Average power consumption between different water lifting devices
    (c) Efficacy of the water lifting devices. Beside the volume of water to be delivered,
    the selection of water pump depends on lifting head, water pressure, and parameters
    of the water sources. Depending on the lifting head and the source of the water,
    there are three different types of pumps used for irrigation in South-East Asian
    countries including Bangladesh. For the surface water on bodies of water such
    as rivers and lakes, low-lift pumps are used where the lifting head is between
    1 to 5 m. A shallow tube well (STW) is used for more than 73% of ground water
    irrigation [56]. The rest is performed by pumps with higher lifting capacities
    called deep tube wells (DTWs). Irrespective of the type of pump used, pumps with
    higher efficiencies must be selected [57]. Pumps with 70% efficiency (as commonly
    used) are chosen for better selection among different lifting capacities. Average
    energy consumption (Ea) is calculated using Equation (9). 𝐸𝑎=ℎ𝑝·𝜂· 𝑡  (9) where
    hp is the horsepower of the pumps, η is the pump efficiency, and t is the operating
    time of the pumps. The efficacy of the system is measured using Equation (10).
    𝑒𝑓𝑓𝑖𝑐𝑎𝑐𝑦=𝑓𝑙𝑜𝑤 𝑟𝑎𝑡𝑒 ( m 3 /s)/ 𝐸𝑎  (10) The average power consumption and efficacy
    of different water lifting devices are shown in Figure 5b,c. The efficacy curves
    in Figure 5c assume 600 GPM, 400 GPM, and 1110 GPM capacities for the low-lift
    pumps (LLP), STW, and DTW pumps. Figure 5b,c shows that LLPs have greater efficacy
    and low energy consumption compared to the other two types. This is mainly due
    to less heads [58] and thus makes the LLP type an economically feasible solution.
    Therefore, multiple low lift pumps are to be used for the wide-area AWD implementation
    as it would allow for proper utilization of the surface water and help lessen
    the exploitation of groundwater irrigation. The proper dimensions of pipes are
    of paramount importance in carrying surface water to the field; therefore, pipes
    are chosen to ensure minimum friction loss while maintaining the recommended water
    flow velocity [59]. The pipes are placed on a downward slope, as shown in Figure
    6a, to overcome the loss of pressure that occurs when travelling larger horizontal
    distances. Moreover, due to multiple inlets for irrigation, the pressure of water
    may fall from one inlet to the other; hence, when needed, the inlets closer to
    the source can be closed, to ensure sufficient water pressure at the opposite
    end of the field. Figure 6. (a) Downward slope water pipe (b) In-field Automated
    AWD setup. According to Equation (8), 250 units of 0.1262 m3/s (2000 GPM) capacity
    pumps need to be formed into clusters to ensure that the field is reflooded within
    16 to 17 h of operating time. The frictional head loss for a steady pipe’s flow
    is calculated using the Hazen–Williams equation [59], which is given by Equation
    (11). ℎ 100𝑓𝑡 =(0.2083× ( 100 𝑐 ) 1.852 × 𝑞 1.852 )/ 𝑑 ℎ 4.8655 (11) where ℎ 100𝑓𝑡
    = friction head loss, in feet, of water per 100 feet of pipe, c = Hazen–Williams
    roughness constant, q = volume flow (gal/min) and 𝑑 ℎ = inside diameter of the
    pipe (inches). Subsequently, the friction loss in psi [59] can be calculated using
    the following Equation (12). 𝑓 100𝑓𝑡 =(1/2.31)× ℎ 100𝑓𝑡 (12) where, 𝑓 100𝑓𝑡 =
    friction loss in psi per 100 feet of pipe. Equations (11) and (12) are required
    to determine the diameter of pipes needed for specific applications. The holes
    of the inlet would need to be 0.0635 m in diameter to obtain a flow of 0.004732
    m3/s (75 GPM) from every inlet in order to fill the field in the shortest possible
    time [55]. Table 1 shows the proposed AWD system with the number of monitoring
    and driver nodes needed to ensure that water gets dispersed evenly throughout
    the field. Figure 6b shows the AWD setup of the field, designed to ensure that
    all farmers receive a fair share of irrigation water, thus resulting in greater
    acceptance of the AWD. Table 1. Proposed AWD system setup. 5.3. WSN and IoT Integration
    IoT-based automation of the AWD system requires different WSNs for sensors and
    actuators. All of these networks work independently with the same base station.
    A WSN collects field parameters such as water level, gas emissions ( 𝐶 𝐻 4 ),
    temperature, pressure, and humidity. These data are then transmitted at 15 min
    intervals. The other WSN monitors the pipe and pump health parameters, such as
    pipe pressure, flow rate of water in pipes, and pump electric power. Based on
    these data, it generates alarms to shut down the pump in emergency situations.
    There is continuous monitoring at the SN which allows for immediate action when
    needed. The actuator network operates the actuators of the pipe to control the
    water flow through the pipe and is updated every 15 min. Comparing the low-power
    wide-area network (LPWAN) technologies, LoRa was chosen for the WSN in order to
    achieve the wide area coverage needed at the monitoring area for the AWD automation.
    Table 2 summarizes the LPWAN technology features [14] including range, data rate,
    and power requirements. It shows that LoRa is the best suited technology in terms
    of range with higher data rates when compared to Sigfox. Table 2. Basic features
    of wireless technologies. LoRa employs chirp spread spectrum (CSS) modulation
    for better noise immunity and sensitivity in order to achieve low-power and long-range
    wireless connectivity. The LoRa data rate ( 𝑅 𝑏 ) depends on the channel bandwidth
    (BW), coding rate (CR), and the CSS spreading factor (SF), and can be calculated
    using Equation (13). Data Rate=SF [ 4 4+CR ] [ 2 SF BW ]  (13) For the proposed
    automated-AWD system, the LoRa physical layer was chosen instead of LoRaWAN in
    order to customize the channel access interval and achieve better channel utilization
    by implementing a custom MAC (Medium Access Control) layer. Furthermore, WSN coverage
    can be improved by increasing the CSS spreading factor of LoRa, without increasing
    transmission power or changing any network elements [14]. Table 3 summarizes the
    LoRa configuration parameters used for the SN where the data rate Rb is calculated
    using Equation (13). Table 3. LoRa parameters. The multi-purpose sensor node (SN),
    shown in Figure 7a, is designed for all WSNs in order to keep the network homogeneous.
    It consists of a LoRa transceiver module (SX1278) unit, main processor (ATMega
    328), and network specific sensors and actuator drivers. Depending on the specific
    application, the sensor node can be used to either drive actuators or collect
    and monitor sensor data. Figure 7 shows the hardware blocks of the SN with the
    power unit and the base station. Figure 7. Hardware block diagram showing (a)
    Sensor node consisting of sensors, actuator drivers, and power unit; (b) base
    station (BS) with LoRa and cellular data connectivity. The base station (BS) consists
    of a Raspberry Pi-4 which acts as a host computer to control the WSN, data communication,
    and gateway functionalities. It has both LoRa and Wi-Fi/3G/LTE to maintain the
    connection with the WSNs and IoT cloud. Figure 7b shows the hardware block diagram
    of the BS. 5.4. Communication Protocol and Automation Algorithm Data transmission
    from the SN is controlled by the BS. The BS initiates data request messages to
    a specific SN using their unique ID and sends an acknowledgement after successful
    reception of the sensor data. For the actuator node (AN), the BS sends the actuator
    control messages to the AN, and updates the actuator nodes in the server database
    after receiving the data and from the AN. All of these communications between
    the WSN and the BS are performed using LoRa with messages transferred as LoRa
    packets. The BS processes the LoRa data packets and sends them to the IoT server
    as MQTT messages. The commands used to control the pumps and actuator, sent from
    the IoT server, also use MQTT. On the user side, a smartphone app and web interface
    are connected with the IoT server through a cloud-implemented MQTT-hypertext transfer
    protocol (HTTP) gateway. All of the data communication and AWD automation processes
    are performed by the SN, BS, and cloud IoT server. Figure 8a,b show the possible
    software algorithms designed for the SN and AN, respectively. At first, it configures
    and initializes the sensors, LoRa module, and driver unit. It then starts reading
    the field, pipe, and pump sensors to monitor their condition continuously. The
    AN takes all necessary actions according to certain pump operating conditions
    and control logic defined by the user during the initialization phase. All the
    internal control variables are updated according to external parameters at regular
    intervals in a closed loop at node A. These external parameters, such as user
    input, plant-specific data, and weather forecasts, are collected through the IoT
    server. Figure 8c shows the AWD automation control logic performed by the IoT
    server. The SN algorithm, shown in Figure 8a, was used for the field trial (described
    in Section 6). The algorithms, shown in Figure 8b,c, intended for wide-area AWD
    automation, were not used in the field trial. Initially, the irrigation phase
    (TPF or AWD) is ascertained, at which point all of the phase specific decisions
    are taken. For example, the surface water level (SWL) is monitored in terms of
    TPF, and, for the AWD, the below surface water level (BSWL) is checked to determine
    whether to toggle the actuator nodes on or off. Subsequently, after toggling the
    actuators and pumps, the SWL is measured for both the TPF and AWD, and then, if
    the SWL reaches 5 cm above the surface, the actuators and pumps are switched off.
    Figure 8. (a) Sensor node software algorithm used for field trial, (b) Proposed
    actuator node algorithm, and (c) Control logic algorithm for the AWD server intended
    for wide-area AWD automation. 6. Field Trial A field trial was performed in two
    phases: (i) WSN formation and data collection at UIU (United International University),
    Bangladesh; and (ii) remote data collection using the IoT network in an AWD plot
    at the Bangladesh Rice Research Institute (BRRI). Figure 9a shows the location
    of the UIU campus fields and Figure 9b shows the BRRI’s research agricultural
    field on Google Maps. Figure 9. Field trial location: (a) On-campus trial at United
    International University. (b) Agricultural land trial at BRRI. Figure 10a shows
    the IoT-connected (wireless sensor and actuator network (WSAN) architecture which
    is comprised of two sensor networks (WSN1 and WSN2) and one wireless actuator
    network (WSN3), as described in Section 5.3. In phase one, four sensor nodes (SNs)
    were placed at each corner of a 500 m by 500 m field with the indoor base station
    (BS) located in a lab on the fifth floor of the campus building. The approximate
    distances between the SNs and the BS were 500 m to 750 m, as shown in Figure 10b.
    Figure 10. (a) IoT-connected WSAN architecture (b) On-campus trial setup with
    sensor devices connected to a base station IoT-connected WSAN architecture. Sensor
    data were collected on a round-robin basis to avoid the co-channel interference
    that occurs at high frequencies (30 s period), and to evaluate the data transfer
    performance of the WSN. The base station (BS) consisted of a Linux-based (Redhat
    7) Apache web server with Node.js, HTM, Python 3, and Maria Database. It also
    acted as a WSN-IoT gateway using the LoRa–WiFi interface. To collect real-life
    data and to evaluate the AWD algorithm’s performance, SNs were placed in the agricultural
    plots of BRRI in a Boro field. The field was divided into irrigation blocks of
    15 m by 15 m, and the SNs were placed 200 m apart from each other. The irrigation
    system was controlled using a central pump. Figure 11 shows the field setup. Figure
    11. Agricultural field level trial setup: (a) Top view of a sensor device in the
    field (b) The receiver base station setup. The BS located at BRRI acquired all
    the sensor data from the field and stored it in the IoT server in a lab at UIU
    through the 3G cellular network. To monitor and process the field data in real-time,
    a distributed application structure was designed, as shown in Figure 12c. Here,
    a smartphone app, web interface, and other automation applications were developed
    and primarily implemented within the central IoT server [60]. Figure 12a,b show
    the smartphone app and the web interface. Figure 12. (a) Mobile Application, (b)
    Web Application, and (c) client-server connectivity for user interface. The mobile
    and web applications were linked to a Node.js server. A mobile Android application
    was used to collect data, a server was used to store the data and generate notifications,
    and a web client was used as a dashboard to display all the AWD specific information.
    The mobile app and web dashboard used rESTful APIs, HTTP requests, and web sockets
    to interface with the server. Sensor data from the external sensor devices was
    recorded on the server, where it was reactively pushed to the mobile client and
    dashboard using web sockets. Web sockets were used to communicate between the
    server and the clients. Both the Android and web apps provided similar services,
    such as user registration, sensor data acquisition, warning generation based on
    sensor data, and data and AWD status reports on the dashboard. The end user, farmers,
    can reconfigure the AWD parameters, such as water level and pump operation time
    using either the smartphone app or web interface. 7. Performance Analysis In traditional
    irrigation systems, water distribution is performed using earthen canals [50]
    due to their low initial cost. However, these canals result in poor distribution
    efficiency, less area coverage, and, in the long run, results in high maintenance
    costs. The greatest concern in using earthen canals is the high water loss, which
    is expressed as water conveyance loss (S) [51] and can be calculated using Equation
    (14). 𝑆={( 𝑄 1 − 𝑄 2 )÷𝐿}×100 (14) where S = the rate of conveyance loss in the
    canal ( m 3  s −1 ) per 100 m distance, Q1 = rate of flow at the inlet ( m 3  s
    −1 ), Q2 = rate of flow at the outlet ( m 3  s −1 ), and L = distance between
    two points (m). The main factor causing this loss in the earthen canals is due
    to seepage loss. Studies have found that about 40% of the water is lost during
    the distribution time through the earthen canals [50]. The proposed automated
    AWD system using plastic pipes can overcome this conveyance loss, and help reduce
    the irrigation time, which in turn results in less energy (fuel or electricity)
    to operate the pumps. The conveyance loss rate for the proposed project derived
    from [51] is shown in Figure 13. It compares the conveyance loss between earthen
    canals and plastic piping when water is transported 5000 m from the water source
    to the field. Thus, the proposed design saves about 90.91% of water when transporting
    it from the source using plastic piping instead of earthen canals. Furthermore,
    studies conducted by [51] have found that the incorporation of the AWD method
    with plastic pipes has saved about 42% of water, and reduced energy consumption
    by 41.2% compared to the traditional method. Figure 13. Conveyance loss compensation
    between earthen canal and plastic pipe. Using Equations (5) and (7), the frequency
    of irrigations, 𝐼 1𝑗  and  𝐼 2𝑗 , can be used to determine the total energy consumption
    of the pumps. For instance, to reflood a 100-acre field with 3 cm of water while
    maintaining continuous water during TPFj, a single 2000-GPM capacity pump with
    70% efficiency and 12 hp, operating for 18 h, would be sufficient as seen in Figure
    5a. Then, using Equation (9), average power consumption of the pump is found to
    be 142.8 KWh. Similarly, the average energy consumption can be determined for
    the AWD method. Therefore, the total energy consumption for the whole season can
    be found by using Equation (15): 𝑇𝑜𝑡𝑎𝑙 𝐸𝑛𝑒𝑟𝑔𝑦 𝐶𝑜𝑛𝑠𝑢𝑚𝑝𝑡𝑖𝑜𝑛 (𝐾𝑊ℎ)= 𝐼 1𝑗 ∗𝐸𝑎(𝑇𝑃 𝐹
    𝑗 )+  𝐼 2𝑗 ∗𝐸𝑎(𝐴𝑊𝐷) (15) where 𝐸𝑎(𝑇𝑃 𝐹 𝑗 ) represents the energy consumption during
    the TPF stages in order to supply 3 cm of water to the field, and 𝐸𝑎(𝐴𝑊𝐷) denotes
    the energy required to supply water when water reaches 15 cm below ground during
    the AWD method. It can be observed that, compared to the traditional method which
    utilizes continuous water, the proposed automated system is expected to require
    less energy. Figure 14 shows the dimensioning steps and mathematical calculations
    that are used for the proposed AWD system. Figure 14. Required dimensioning and
    calculation steps for an IoT-based AWD system. Table 4 compares the automated
    AWD method with manual AWD systems. Manual AWD studies focused on limited field
    sizes, soil types, and water sources. Sharing a limited number of water-lifting
    devices amongst numerous farmers tended to cause conflicts among them. Furthermore,
    the number of farmers it supported was generally quite limited. However, in the
    proposed IoT- and WSN-based automated AWD system, large-scale implementation is
    possible using a pipe and actuator-based water distribution system with cluster
    pump operation and monitoring. In this proposed system, 10 clusters, each containing
    25 pumps with capacities of 0.1262 m 3 /s (2000 GPM), can cover an area of 25,000
    acres. In this system, the pumps have 12 hp with an average pumping efficiency
    of 70%, which can support a large number of farmers while still allowing each
    farmer to obtain a fair share of water. Table 4. Comparison between manual AWD
    and automated AWD. In manual AWD, due to manual inspection of water levels throughout
    the irrigation season, pumps may operate for more hours than necessary, resulting
    in the wastage of valuable resources. However, in automated systems, pumps are
    switched off as soon as the water level reaches a certain threshold level, resulting
    in water and energy savings. The experiments presented in [46] showed that the
    automated AWD saved between 13–20% of water, with a 25% decrease in irrigation
    energy cost, and an increase in rice yields by 2–11% over manual AWD. The AWD
    automation scheme proposed in this paper is expected to reduce irrigation costs
    further since it uses plastic pipes to carry water. Moreover, integration of weather
    forecast data will operate the pumps effectively (e.g., keeping pumps off when
    the forecast predicts precipitation). Research in [45,46] presented automation
    of the AWD process by using sensors to precisely measure the water level precisely.
    These studies focused on small areas compared to that of the system described
    in this paper. For large-scale automation of AWD, multiple WSNs need to be designed
    and implemented. While automated AWD systems offer certain advantages over the
    manual AWD, as described in Table 4, the dimensioning of the wide-area automated
    AWD system may face challenges during implementation. The plant physiological
    database for developing countries such as Bangladesh is not regularly updated
    and is not easily accessible. In Bangladesh, where farmers are largely not exposed
    to technology, their knowledge and experiences about rice and irrigation are not
    readily available. Moreover, one of the research constraints is that the weather
    forecast information is not based on the specific local territory. Rather, it
    is based on the general meteorological information of the whole region. 8. Conclusions
    This paper has presented an approach to automating a wide-area AWD system covering
    a total irrigation area of 25,000 acres. Implementation of AWD in such a large
    irrigation area has not been reported in the existing literature. It is imperative
    that such a large system uses automation instead of the traditional manual operation
    and monitoring approach. The automation can be achieved by integrating three essential
    and intricate wireless sensor networks (WSN): a mechanical subsystem comprised
    of pumps, actuator networks, and a water distribution network, and an IoT system
    that runs the automation algorithm and issues control commands. The data from
    the WSN, along with other operating parameters, are processed at a central server
    that decides whether to activate the pumps and the actuator valves. The system
    is scalable and the algorithm can be adjusted for irrigation areas with different
    sizes within a practical limit. The required set of equations to support the design
    and operation of the overall system is provided in this paper. The hardware for
    the system is presented and described in order to facilitate the implementation
    of the automation system. The communication protocol and automation algorithm
    have also been presented in sufficient detail. A sample study on a small-scale
    field trial is presented as a proof-of-concept to demonstrate the effectiveness
    of the proposed system. An analysis of the proposed system’s expected performance
    is discussed by comparing it with manual and automated AWD systems in the existing
    literature. The analysis highlights the large irrigation area and the complete
    automation aspect of the proposed system. Despite numerous advantages, such as
    reduced water consumption, and economic and environmental benefits, widespread
    adoption of AWD is yet to be materialized due to social, economic, and technical
    challenges. This paper demonstrates that, with the adoption of existing sensor
    networks and IoT-based technologies, wide area adoption [25] is feasible and economically
    viable. The proposed wide-area AWD system allows for continuous monitoring and
    real-time decision making along with a fair distribution of water amongst the
    farmers. The authors are optimistic that, with the adoption of the proposed system,
    wide area AWD will be implemented in rice-growing countries. These countries will
    then reap the full benefits of the technological advantages that AWD has to offer.
    For future expansion of the proposed system, long-term data can be collected and
    analyzed to improve the system further and to further control the greenhouse emissions
    more effectively. Since the proposed system enables the collection of data and
    creation of a large database, new models can be generated and advanced techniques,
    including machine learning and big data, can be applied for better performance.
    Furthermore, incorporating the farmer’s valuable input alongside previous data
    and algorithms will make it possible to accurately identify the different physiological
    stages of plants during the season, resulting in the improved development of plants
    and yields. Author Contributions Conceptualization, G.M.E.R. and R.M.; methodology,
    G.M.E.R. and M.M.E.; software, G.M.E.R. and M.M.E.; validation, M.M.E.; formal
    analysis, G.M.E.R., R.M., M.S. and F.A.; investigation, M.M.E.; resources, R.M.
    and M.M.E.; data curation, M.M.E.; writing—original draft preparation, G.M.E.R.,
    M.M.E., M.S. and F.A.; writing—review and editing, R.M., K.A.W.; visualization,
    G.M.E.R., M.M.E. and M.S.; supervision, R.M.; project administration, G.M.E.R.
    and R.M.; funding acquisition, R.M. and K.A.W. All authors have read and agreed
    to the published version of the manuscript. Funding No external funding was available
    for this research. Institutional Review Board Statement Not applicable. Informed
    Consent Statement Not applicable. Data Availability Statement Not applicable.
    Acknowledgments The authors would like to acknowledge the support from RI@B (Research
    Initiative at Bangladesh), San Diego, CA, USA, an organization for this research
    project, BRRI (Bangladesh Rice Research Institute) who facilitated the field test
    of the sensor-node in an AWD plot, A.U. Chowdhury (Department of CSE, UIU) for
    support in field trials, and S. Labeeba (UG student, Department of Arts and Science,
    U of S, Canada) for rebuilding the AWD web server. Conflicts of Interest The authors
    declare no conflict of interest. References Bandumula, N. Rice Production in Asia:
    Key to Global Food Security. Proc. Natl. Acad. Sci. India Sect. B Boil. Sci. 2017,
    88, 1323–1328. [Google Scholar] [CrossRef] The Global Staple, CGIAR. Available
    online: http://ricepedia.org/rice-as-food/the-global-staple-rice-consumers (accessed
    on 3 November 2020). The Importance of Rice. Available online: http://www.knowledgebank.irri.org/ericeproduction/
    (accessed on 3 November 2020). Rice Almanac. Available online: http://books.irri.org/9789712203008_content.pdf
    (accessed on 3 November 2020). Ekkehard, K.; Henschel, C.; Hildebrandt, T.; Jülich,
    E.; Leineweber, M.; Paul, C. Water Saving in Rice Production– Dissemination, Adoption
    and Short-Term Impacts of Alternate Wetting and Drying (AWD) in Bangladesh; SLE
    Publication Series; Humboldt-Universitat Zu Berlin: Dhaka/Berlin, Germany, 2010.
    [Google Scholar] Neogi, M.; Uddin, A.; Uddin, M.T.; Hamid, M.A. Alternate wetting
    and drying (AWD) technology: A way to reduce ir-rigation cost and ensure higher
    yields of Boro rice. J. Bangladesh Agric. Univ. 2018, 16, 1–4. [Google Scholar]
    [CrossRef] [Green Version] Water Science. Available online: https://www.irri.org/water-science
    (accessed on 5 November 2020). Roy, D.; Sattar, M. Promoting Alternate Wetting
    and Drying (AWD) method in selected locations at Sadar Upazilla of Kustia. J.
    Agric. Eng. 2009, 37, 39–48. [Google Scholar] Alam, M.S.; Islam, S.; Abdus, S.M.;
    Islam, M.A. Economics of Alternate Wetting and Drying Method of Irrigation: Evidences
    from Farm Level Study. Agriculturists 2009, 7, 82–95. [Google Scholar] [CrossRef]
    [Green Version] Sander, B.; Schneider, P.; Romasanta, R.; Samoy-Pascual, K.; Sibayan,
    E.; Asis, C.; Wassmann, R. Potential of Alternate Wetting and Drying Irrigation
    Practices for the Mitigation of GHG Emissions from Rice Fields: Two Cases in Central
    Luzon (Philippines). Agriculture 2020, 10, 350. [Google Scholar] [CrossRef] Pearson,
    K.A.; Millar, G.; Norton, G.J.; Price, A.H. Alternate wetting and drying in Bangladesh:
    Water-saving farming practice and the socioeconomic barriers to its adoption.
    Food Energy Secur. 2018, 7, e00149. [Google Scholar] [CrossRef] Basak, R. Benefits
    and Costs of Climate Change Mitigation Technologies in Paddy: Focus on Bangladesh
    and Vietnam; CCAFS Working Paper no. 160; CGIAR Research Program on Climate Change,
    Agriculture and Food: Copenhagen, Denmark, 2016. [Google Scholar] Pandey, S.;
    Yadav, S.; Hellin, J.; Balié, J.; Bhandari, H.; Kumar, A.; Mondal, M.K. Why Technologies
    Often Fail to Scale: Policy and Market Failures behind Limited Scaling of Alternate
    Wetting and Drying in Rice in Bangladesh. Water 2020, 12, 1510. [Google Scholar]
    [CrossRef] Rahman, G.M.; Wahid, K.A.; Dinh, A. IoT enabled Low power and Wide
    range WSN platform for environment monitoring application. In Proceedings of the
    2020 IEEE Region 10 Symposium (TENSYMP), Dhaka, Bangladesh, 5–7 June 2020; pp.
    908–911. [Google Scholar] [CrossRef] Vedaei, S.S.; Fotovvat, A.; Mohebbian, M.R.;
    Rahman, G.M.E.; Wahid, K.A.; Babyn, P.; Marateb, H.R.; Mansourian, M.; Sami, R.
    COVID-SAFE: An IoT-Based System for Automated Health Monitoring and Surveillance
    in Post-Pandemic Life. IEEE Access 2020, 8, 188538–188551. [Google Scholar] [CrossRef]
    Pal, S.; Mukhopadhyay, S.; Suryadevara, N. Development and Progress in Sensors
    and Technologies for Human Emotion Recognition. Sensors 2021, 21, 5554. [Google
    Scholar] [CrossRef] Abu Khurma, R.; Almomani, I.; Aljarah, I. IoT Botnet Detection
    Using Salp Swarm and Ant Lion Hybrid Optimization Model. Symmetry 2021, 13, 1377.
    [Google Scholar] [CrossRef] Gupta, D.; Rani, S.; Ahmed, S.H.; Verma, S.; Ijaz,
    M.F.; Shafi, J. Edge Caching Based on Collaborative Filtering for Heterogeneous
    ICN-IoT Applications. Sensors 2021, 21, 5491. [Google Scholar] [CrossRef] [PubMed]
    Yi, N.; Gao, Y.; Verso, A.L.; Zhu, J.; Erdely, D.; Xue, C.; Lavelle, R.; Cheng,
    H. Fabricating functional circuits on 3D freeform surfaces via intense pulsed
    light-induced zinc mass transfer. Mater. Today 2021. [Google Scholar] [CrossRef]
    Ghorpade, S.; Zennaro, M.; Chaudhari, B. Survey of Localization for Internet of
    Things Nodes: Approaches, Challenges and Open Issues. Futur. Internet 2021, 13,
    210. [Google Scholar] [CrossRef] Dahane, A.; Kechar, B.; Meddah, Y.; Benabdellah,
    O. Automated Irrigation Management Platform using a Wireless Sensor Network. In
    Proceedings of the 2019 Sixth International Conference on Internet of Things:
    Systems Management and Security (IOTSMS), Granada, Spain, 22–25 October 2019;
    pp. 610–615. [Google Scholar] Kalbande, K.; Choudhary, S.; Singru, A.; Mukherjee,
    I.; Bakshi, P. Multi-Way Controlled Feedback Oriented Smart System for Agricultural
    Application using Internet of Things. In Proceedings of the 2021 5th International
    Conference on Trends in Electronics and Informatics (ICOEI), Tirunelveli, India,
    3–5 June 2021; pp. 96–101. [Google Scholar] [CrossRef] Ferrández-Pastor, F.J.;
    García-Chamizo, J.M.; Nieto-Hidalgo, M.; Mora-Martínez, J. Precision Agriculture
    Design Method Using a Distributed Computing Architecture on Internet of Things
    Context. Sensors 2018, 18, 1731. [Google Scholar] [CrossRef] [Green Version] García,
    L.; Parra, L.; Jimenez, J.; Parra, M.; Lloret, J.; Mauri, P.; Lorenz, P. Deployment
    Strategies of Soil Monitoring WSN for Precision Agriculture Irrigation Scheduling
    in Rural Areas. Sensors 2021, 21, 1693. [Google Scholar] [CrossRef] [PubMed] Rahman,
    G.; Wahid, K. LDAP: Lightweight Dynamic Auto-Reconfigurable Protocol in an IoT-Enabled
    WSN for Wide-Area Remote Monitoring. Remote Sens. 2020, 12, 3131. [Google Scholar]
    [CrossRef] Kaiwartya, O.; Abdullah, A.H.; Cao, Y.; Lloret, J.; Kumar, S.; Shah,
    R.R.; Prasad, M.; Prakash, S. Virtualization in Wireless Sensor Networks: Fault
    Tolerant Embedding for Internet of Things. IEEE Internet Things J. 2017, 5, 571–580.
    [Google Scholar] [CrossRef] [Green Version] Mushtaq, S.; Khan, S.; Hafeez, M.;
    Hanjra, M.A. Does reliability of water resources matter in the adoption of water-saving
    irrigation practices? A case study in the Zhanghe irrigation system, China. Hydrol.
    Res. 2009, 11, 661–679. [Google Scholar] [CrossRef] IRRI and PhilRice. AutoMonPH—An
    IoT Based Irrigation Advisory Service. A Comprehensive Solution for Land-Scape-Scale
    Sustainable Water Management in Rice. Synthesis Report (v 1.0); International
    Rice Research Institute (IRRI) and Philippine Rice Research Institute (PhilRice):
    Los Banos, Philippines, 2020; Available online: https://drive.google.com/file/d/1wmXCe724XdgDgoHoS0_19i6NWybnLoEY/view?usp=sharing
    (accessed on 3 September 2021). Zhao, Y.; Bai, L.; Feng, J.; Lin, X.; Wang, L.;
    Xu, L.; Ran, Q.; Wang, K. Spatial and Temporal Distribution of Multiple Cropping
    Indices in the North China Plain Using a Long Remote Sensing Data Time Series.
    Sensors 2016, 16, 557. [Google Scholar] [CrossRef] [Green Version] Enriquez, Y.;
    Yadav, S.; Evangelista, G.K.; Villanueva, D.; Burac, M.A.; Pede, V. Disentangling
    Challenges to Scaling Alternate Wetting and Drying Technology for Rice Cultivation:
    Distilling Lessons From 20 Years of Experience in the Philippines. Front. Sustain.
    Food Syst. 2021, 5, 194. [Google Scholar] [CrossRef] Ray, D. Climate Change is
    Affecting Crop Yields and Reducing Global Food Supplies. The Conversation. 2019.
    Available online: https://cutt.ly/RWmoNDw (accessed on 3 September 2021). El Baki,
    H.M.A.; Fujimaki, H.; Tokumoto, I.; Saito, T. A new scheme to optimize irrigation
    depth using a numerical model of crop response to irrigation and quantitative
    weather forecasts. Comput. Electron. Agric. 2018, 150, 387–393. [Google Scholar]
    [CrossRef] Shahdany, S.H.; Taghvaeian, S.; Maestre, J.; Firoozfar, A. Developing
    a centralized automatic control system to increase flexibility of water delivery
    within predictable and unpredictable irrigation water demands. Comput. Electron.
    Agric. 2019, 163, 104862. [Google Scholar] [CrossRef] Goap, A.; Sharma, D.; Shukla,
    A.; Krishna, C.R. An IoT based smart irrigation management system using Machine
    learning and open source technologies. Comput. Electron. Agric. 2018, 155, 41–49.
    [Google Scholar] [CrossRef] Linker, R.; Sylaios, G. Efficient model-based sub-optimal
    irrigation scheduling using imperfect weather forecasts. Comput. Electron. Agric.
    2016, 130, 118–127. [Google Scholar] [CrossRef] Munir, M.S.; Bajwa, I.S.; Naeem,
    M.A.; Ramzan, B. Design and Implementation of an IoT System for Smart Energy Consumption
    and Smart Irrigation in Tunnel Farming. Energies 2018, 11, 3427. [Google Scholar]
    [CrossRef] [Green Version] Bin Poyen, F.; Ghosh, A.; Kundu, P.; Hazra, S.; Sengupta,
    N. Prototype Model Design of Automatic Irrigation Controller. IEEE Trans. Instrum.
    Meas. 2020, 70, 9502217. [Google Scholar] [CrossRef] Gu, Z.; Zhu, T.; Jiao, X.;
    Xu, J.; Qi, Z. Neural network soil moisture model for irrigation scheduling. Comput.
    Electron. Agric. 2020, 180, 105801. [Google Scholar] [CrossRef] Karimi, B.; Mohammadi,
    P.; Sanikhani, H.; Salih, S.Q.; Yaseen, Z.M. Modeling wetted areas of moisture
    bulb for drip irrigation systems: An enhanced empirical model and artificial neural
    network. Comput. Electron. Agric. 2020, 178, 105767. [Google Scholar] [CrossRef]
    Simionesei, L.; Ramos, T.B.; Palma, J.; Oliveira, A.R.; Neves, R. IrrigaSys: A
    web-based irrigation decision support system based on open source data and technology.
    Comput. Electron. Agric. 2020, 178, 105822. [Google Scholar] [CrossRef] Roy, S.K.;
    Misra, S.; Raghuwanshi, N.S.; Das, S.K. AgriSens: IoT-Based Dynamic Irrigation
    Scheduling System for Water Management of Irrigated Crops. IEEE Internet Things
    J. 2020, 8, 5023–5030. [Google Scholar] [CrossRef] Maroli, A.A.; Narwane, V.S.;
    Raut, R.D.; Narkhede, B.E. Framework for the implementation of an Internet of
    Things (IoT)-based water distribution and management system. Clean Technol. Environ.
    Policy 2020, 23, 271–283. [Google Scholar] [CrossRef] Zia, H.; Rehman, A.; Harris,
    N.; Fatima, S.; Khurram, M. An Experimental Comparison of IoT-Based and Traditional
    Irrigation Scheduling on a Flood-Irrigated Subtropical Lemon Farm. Sensors 2021,
    21, 4175. [Google Scholar] [CrossRef] Osroosh, Y.; Peters, T.; Campbell, C.S.;
    Zhang, Q. Comparison of irrigation automation algorithms for drip-irrigated apple
    trees. Comput. Electron. Agric. 2016, 128, 87–99. [Google Scholar] [CrossRef]
    [Green Version] Shufian, A.; Haider, R. Hasibuzzaman Results of a simulation to
    propose an automated irrigation & monitoring system in crop production using fast
    charging & solar charge controller. Clean. Eng. Technol. 2021, 4, 100165. [Google
    Scholar] [CrossRef] Pham, V.B.; Diep, T.T.; Fock, K.; Nguyen, T.S. Using the Internet
    of Things to promote alternate wetting and drying irrigation for rice in Vietnam’s
    Mekong Delta. Agron. Sustain. Dev. 2021, 41, 43. [Google Scholar] [CrossRef] Froiz-Míguez,
    I.; Lopez-Iturri, P.; Fraga-Lamas, P.; Celaya-Echarri, M.; Blanco-Novoa, Ó.; Azpilicueta,
    L.; Falcone, F.; Fernández-Caramés, T. Design, Implementation, and Empirical Validation
    of an IoT Smart Irrigation System for Fog Computing Applications Based on LoRa
    and LoRaWAN Sensor Nodes. Sensors 2020, 20, 6865. [Google Scholar] [CrossRef]
    Cardoso, J.; Glória, A.; Sebastiao, P. A Methodology for Sustainable Farming Irrigation
    using WSN, NB-IoT and Machine Learning. In Proceedings of the 2020 5th South-East
    Europe Design Automation, Computer Engineering, Computer Networks and Social Media
    Con-ference (SEEDA-CECNSM), Corfu, Greece, 25–27 September 2020; pp. 1–6. [Google
    Scholar] [CrossRef] South Asia—Crop Production Maps. Available online: https://ipad.fas.usda.gov/rssiws/al/sasia_cropprod.aspx
    (accessed on 17 July 2021). Sayed, A.; Saleh, A.F.M.; Hossain, A.; Basunia, Z.A.;
    Hosain, A. Impact of Lined Canal on Shallow Tubewell Irrigation and Their Acceptability
    by the Farmers. Agriculture 2015, 12, 116–125. [Google Scholar] [CrossRef] [Green
    Version] Hossain, M.; Roy, D.; Paul, P.; Islam, M. Water Productivity Improvement
    Using Water Saving Technologies in Boro Rice Cultivation. Bangladesh Rice J. 2016,
    20, 17–22. [Google Scholar] [CrossRef] [Green Version] Zotarelli, L.; Dukes, M.D.;
    Romero, C.C.; Migliaccio, K.W.; Morgan, K.T. Step by Step Calculation of the Penman-Monteith
    Evapotranspiration (FAO-56 Method). Available online: https://edis.ifas.ufl.edu/pdf/AE/AE45900.pdf
    (accessed on 8 October 2020). Chapter 6—ETc—Single Crop Coefficient (Kc). Food
    and Agriculture Organization (FAO). Available online: http://www.fao.org/3/X0490e/x0490e0b.htm
    (accessed on 23 November 2020). Rice Farming: Saving Water through Alternate Wetting
    Drying (AWD) Method. Food and Agriculture Organization of the United Nations.
    Available online: http://www.fao.org/3/ca4023en/ca4023en.pdf (accessed on 23 November
    2020). Henry, C.; Daniels, M.; Hamilton, M.; Hardke, J. Water Management. University
    of Arkansas System Division of Agriculture. Available online: https://www.uaex.edu/publications/pdf/mp192/chapter-10.pdf
    (accessed on 8 October 2020). Minor Irrigation Survey Report 2018–2019. Bangladesh
    Agriculture Development Corporation. 2019. Available online: https://cutt.ly/emXeXqn
    (accessed on 4 November 2020). Bankston, J.D.; Baker, F.E. Selecting the Proper
    Pump. Southern Regional Aquaculture Center. Available online: https://www.ncrac.org/files/biblio/SRAC0372.pdf
    (accessed on 2 November 2020). Banglapedia: National Encyclopedia of Bangladesh.
    Available online: http://en.banglapedia.org/index.php?title=Irrigation (accessed
    on 23 November 2020). PVC Pipes—Friction Loss and Flow Velocities Schedule 40.
    Available online: https://www.engineeringtoolbox.com/pvc-pipes-friction-loss-d_802.html
    (accessed on 26 October 2020). Chowdhury, A.U.; Elahi, M.M. Design of a Smart
    Gateway for Edge Enabled IoT Applications. In Proceedings of the 2020 IEEE Region
    10 Symposium (TENSYMP), Dhaka, Bangladesh, 5–7 June 2020; pp. 417–420. [Google
    Scholar] [CrossRef] Rahman, M.S.; Sanger, B.O. Application of Alternate Wetting
    and Drying (AWD) in Bangladesh Agriculture: Findings from case studies. In Proceedings
    of the 9th ASAE International Conference: Transformation in agricultural and food
    economy in Asia, Bangkok, Thaildan, 11–13 January 2017. [Google Scholar] [CrossRef]
    Mahadi, M.A.; Rahman, Z.M.; Sarker, A.M. A Climate Resilient Management Practice
    in Rice Farming: Adoption of Alternate Wetting And Drying In Bangladesh. Int.
    J. Agric. Ext. 2018, 6, 25–32. [Google Scholar] [CrossRef]    Publisher’s Note:
    MDPI stays neutral with regard to jurisdictional claims in published maps and
    institutional affiliations.  © 2021 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Siddiqui, M.; Akther, F.; Rahman, G.M.E.; Elahi,
    M.M.; Mostafa, R.; Wahid, K.A. Dimensioning of Wide-Area Alternate Wetting and
    Drying (AWD) System for IoT-Based Automation. Sensors 2021, 21, 6040. https://doi.org/10.3390/s21186040
    AMA Style Siddiqui M, Akther F, Rahman GME, Elahi MM, Mostafa R, Wahid KA. Dimensioning
    of Wide-Area Alternate Wetting and Drying (AWD) System for IoT-Based Automation.
    Sensors. 2021; 21(18):6040. https://doi.org/10.3390/s21186040 Chicago/Turabian
    Style Siddiqui, Mushran, Farhana Akther, Gazi M. E. Rahman, Mohammad Mamun Elahi,
    Raqibul Mostafa, and Khan A. Wahid. 2021. \"Dimensioning of Wide-Area Alternate
    Wetting and Drying (AWD) System for IoT-Based Automation\" Sensors 21, no. 18:
    6040. https://doi.org/10.3390/s21186040 Note that from the first issue of 2016,
    this journal uses article numbers instead of page numbers. See further details
    here. Article Metrics Citations Crossref   9 Web of Science   9 Scopus   9 ads   3
    PMC   1 PubMed   1 Google Scholar   [click to view] Article Access Statistics
    Article access statistics Article Views 10. Jan 20. Jan 30. Jan 9. Feb 19. Feb
    29. Feb 10. Mar 20. Mar 30. Mar 0k 1k 2k 3k 4k For more information on the journal
    statistics, click here. Multiple requests from the same IP address are counted
    as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content Alert Further
    Information Article Processing Charges Pay an Invoice Open Access Policy Contact
    MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors For Librarians
    For Publishers For Societies For Conference Organizers MDPI Initiatives Sciforum
    MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings Series
    Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release notifications
    and newsletters from MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel,
    Switzerland) unless otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Dimensioning of wide-area alternate wetting and drying (Awd) system for iot-based
    automation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Thaher T.
  - Ishaq I.
  citation_count: '7'
  description: Water plays a significant role in the economic development of countries.
    The agriculture sector is the most water-consuming; this sector consumes 69% of
    the freshwater. However, farmers often use traditional irrigation systems to water
    their crops. These systems are ineffective and consume a IoT of time and effort,
    mainly when several fields are distributed in different geographical regions.
    Therefore, employing smart irrigation techniques will significantly overcome these
    problems. This paper proposes an intelligent irrigation framework based on Wireless
    Sensor Network (WSN) and Internet of Things (IoT) cloud services. The proposed
    system consists of three main components; the WSN, the control unit, and cloud
    services. Arduino Uno and XBee ZigBee modules are combined to gather sensors data
    and send them wirelessly to the control unit. YL-69 sensor is used to monitor
    the soil moisture. Raspberry Pi is utilized to gather data, process them, provide
    the proper decision, and transfer them to ThingSpeak IoT cloud. In the cloud,
    the data collected from the system is stored to create instance visualization
    of live data and send alerts. This allows farmers to monitor the status of crops
    and make the required decisions. After inspecting the prototype, many challenges
    are posed for future work.
  doi: 10.1109/ICPET51420.2020.00015
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2020 International Conference...
    Cloud-based Internet of Things Approach for Smart Irrigation System: Design and
    Implementation Publisher: IEEE Cite This PDF Thaer Thaher; Isam Ishaq All Authors
    8 Cites in Papers 284 Full Text Views Abstract Document Sections I. Introduction
    II. Review of Related Works III. The Proposed System and Architecture IV. Implementation
    and Experimental Results V. Conclusion and Future Directions Authors Figures References
    Citations Keywords Metrics Abstract: Water plays a significant role in the economic
    development of countries. The agriculture sector is the most water-consuming;
    this sector consumes 69% of the freshwater. However, farmers often use traditional
    irrigation systems to water their crops. These systems are ineffective and consume
    a IoT of time and effort, mainly when several fields are distributed in different
    geographical regions. Therefore, employing smart irrigation techniques will significantly
    overcome these problems. This paper proposes an intelligent irrigation framework
    based on Wireless Sensor Network (WSN) and Internet of Things (IoT) cloud services.
    The proposed system consists of three main components; the WSN, the control unit,
    and cloud services. Arduino Uno and XBee ZigBee modules are combined to gather
    sensors data and send them wirelessly to the control unit. YL-69 sensor is used
    to monitor the soil moisture. Raspberry Pi is utilized to gather data, process
    them, provide the proper decision, and transfer them to ThingSpeak IoT cloud.
    In the cloud, the data collected from the system is stored to create instance
    visualization of live data and send alerts. This allows farmers to monitor the
    status of crops and make the required decisions. After inspecting the prototype,
    many challenges are posed for future work. Published in: 2020 International Conference
    on Promising Electronic Technologies (ICPET) Date of Conference: 16-17 December
    2020 Date Added to IEEE Xplore: 20 January 2021 ISBN Information: DOI: 10.1109/ICPET51420.2020.00015
    Publisher: IEEE Conference Location: Jerusalem, Palestine SECTION I. Introduction
    Water plays a significant role in the economic development of countries. Specifically,
    the availability and accessibility of freshwater creates enormous opportunities
    for developing countries and is an effective strategy for sustainable economic
    growth, social, and environmental benefits [1]. Thus, investing in water management
    and improving its services is essential to eradicate poverty and make a difference
    in billions of people''s lives. For example, in Palestine, water scarcity is considered
    one of the most critical problems for environmental and political reasons, as
    water resources are limited, and the Israeli occupation controls most of them.
    Consequently, the optimal utilization of the available resources, as well as implementing
    effective strategies, has become an essential requirement to handle this problem
    [2]. According to AQUASTAT (the Food and Agricultural Organization (FOA) global
    information system), 69% of the freshwater is consumed by the agriculture sector
    at the worldwide level [2], [3]. Water is essential for agricultural production
    and plays an important role in food security. Irrigated agriculture contributes
    to about 40% of the total food produced worldwide [4]. However, farmers often
    use traditional irrigation systems to water their crops. These systems are ineffective
    and consume a IoT of time and effort, especially when several fields are distributed
    in different geographical regions. For example, in developing countries, in particular,
    farmers are obliged to visit their agricultural fields regularly and remain present
    during the irrigation process to direct and organize the irrigation for the areas
    concerned. Moreover, traditional irrigation often leads to the problem of over-irrigation
    and hence consuming large amounts of water. It also may cause an under-irrigation
    problem that negatively impacts the quality of crops [5]. Adapting modern technologies
    to build smart automatic irrigation systems has attracted considerable interest
    in the agricultural domain [6]. The proper design and installation of an automated
    irrigation system have many benefits compared to the traditional one. That is
    to say, it will schedule the irrigation process in an optimal way and thus contribute
    to reducing time, effort, and cost. It also saves significant water while improving
    plant quality. The availability of innovative technologies such as the Internet
    of Things (IoT), sensors, wireless sensor networks (WSNs), and embedded processing
    significantly contributed to building effective irrigation systems. The availability
    of such technologies helps in controlling and monitoring the levels of water available
    for crops without or with minimal human intervention [7]. Moreover, they allow
    generating a vast amount of data that can be stored, visualized, and analyzed
    to extract valuable knowledge that will improve the overall planning strategies
    and decision-making process. In this paper, a smart irrigation system was developed
    based on Raspberry Pi, Arduino Uno, and wireless sensor network technologies to
    control and monitor the irrigation process. The main objectives of this project
    are summarized as follows: Transferring the measured quantities by moisture sensors
    wirelessly to a central processing unit (Raspberry Pi). A WSN using XBee modules
    is utilized to achieve this task. The gathered data is transferred to the cloud
    for storing, visualizing, and monitoring the agricultural parameters. The system
    provides efficient automated irrigation that ensures high quality of crops, saving
    water, and reducing human involvement. The proposed solution, if it is generalized,
    especially in developing countries, will contribute to achieving two of the sustainable
    development goals (SDGs) [8]. First, it will ensure Goal#1 (No poverty). Second,
    it will partially ensure Goal#6 (Clean Water and Sanitation). These facts motivate
    us to provide this solution at the global level and also encourage us to provide
    a solution that contributes to the exploitation of our local water resources in
    Palestine, which suffers from the water scarcity problem. The rest of the paper
    is structured as follows: The related approaches for developing smart irrigation
    systems are reviewed in Section II. Section III presents the details of the proposed
    design and architecture. The implementation and experimental results are discussed
    in Section IV. Finally, the conclusion and future directions are drawn in Section
    V. SECTION II. Review of Related Works Several IoT related approaches have been
    employed in different manners for developing automated irrigation solutions. The
    proposed solutions vary in terms of their complexity, and the modules used in
    them, such as Arduino, Raspberry Pi, types of sensors based on the targeted problem
    nature and the main objectives. In this section, we review the recent works that
    are directly related to our proposed system. Anbarasi et. al [9] proposed an IoT-based
    smart irrigation framework with the aim of increasing the crop yield. In this
    system, a real-time decision was made based on the collected data from the land.
    A moisture sensor was used to sense the level of soil moisture, and a pumping
    motor will turn OFF or ON based on the sensed data. To provide the farmer with
    information about moisture content and temperature of the soil at particular times,
    a web-based application was developed. An automated irrigation system using the
    Arduino microcontroller was introduced by Hassan et al. [1]. In this system, a
    soil moisture sensor was utilized to check the soil humidity of the plant. Based
    on the sensed soil moisture level, the system will let the water pump to automatic
    irrigate the plant when it is too dry and turn off the water pump when the soil
    of the plant is wet. The proposed solution is composed of one sensing node. It
    is simple and did not handle the gathered data. It provides the monitoring function
    where users can check the soil moisture based on the reading on the Liquid Crystal
    Display (LCD). In 2018, Al-Omary et al. [10] introduced a smart cloud-based IoT
    strategy for monitoring and controlling the garden irrigation process using Arduino
    Uno. Two sensors (soil moisture and light intensity) were used to monitor and
    maintain the garden soil moisture and the light intensity quantities. These quantities
    are continuously sent to ThingSpeak cloud-based framework in which the received
    data is visualized and analyzed. The proper decision is sent accordingly from
    the cloud to the automatic irrigation system to water the garden. However, the
    authors did not consider other irrigation parameters, such as air humidity and
    temperature. Besides, transferring all gathered data to the cloud would require
    a massive amount of data and increase the latency and privacy issues. Fawzi and
    Jalal [11] utilized a WSN-based IoT strategy to design and implement a smart irrigation
    system. The WSN was employed for gathering, storing, and sharing sensors data.
    Two types of sensors, namely Telosb and VH400, were used. Telosb was employed
    for measuring light, temperature, humidity, and energy, while the VH400 sensor
    was used to measure soil moisture. Gathered data is sent to the cloud server for
    analysis and computation purposes. In this system, the concept of fog computing
    was not considered. In other words, all gathered data is sent to the cloud server
    for analysis and decision making. In 2019, an automatic irrigation system based
    on Arduino was proposed by Okoye et al. [7]. The primary purpose of this study
    was to identify the irrigation time for three different types of soil in Nigeria.
    For this purpose, Arduino Uno integrated with soil moisture was used to control
    the irrigation process. The water level and other essential data status are displayed
    on an LCD. This system is simple and dedicated to studying how irrigation time
    depends on the type of soil. It did not consider the main concept of IoT because
    the collected data are not shared via the internet. Mostly, it is clear from the
    reviewed studies that most of them used Arduino Uno. Few of them deployed WSNs
    and cloud-based approaches. Besides, those who considered the cloud services were
    transferring all gathered data to the cloud for analysis and decision-making.
    Fog computing concepts mostly did not utilize. This strategy is not scalable,
    especially when a massive amount of data is generated and thus increases the latency
    and privacy issues. These facts motivated us to propose an efficient smart irrigation
    framework by utilizing the efficiency of WSN, fog computing, and cloud-based services.
    SECTION III. The Proposed System and Architecture This study aims to propose an
    efficient smart irrigation framework. The system can be divided into three parts
    (or subsystems) that cooperate to achieve the purpose: A Wireless Sensor Network,
    a central processing unit, and cloud computing services. The complete smart watering
    architecture is depicted in Figure 1. The following subsections introduce the
    theoretical background as well as the main components of each part. A. Wireless
    Sensor Network The sensor is a device that measures a property of the physical
    environment, such as moisture, and converts it to data. The WSN consists of interconnected
    sensor nodes that communicate wirelessly to collect data about the surrounding
    environment [12]. In this project, the main parts of the WSN are sensor nodes,
    and the coordinator (gateway). 1) Sensor Node In general, the sensor node is employed
    to gather data from different types of sensors. It can accomplish limited processing
    tasks based on available resources. The main feature is the presence of the transceiver
    that allows the exchange of information with other nodes. The main four units
    that describe any sensor node are sensing unit, processing unit, transceiver unit,
    and power source unit [13]. In this project, we employed the following four components
    as a sensor node (see Figure 2): Fig. 1: The conceptual diagram for the proposed
    smart irrigation framework Show All Fig. 2: Sensing node components Show All •
    Arduino Uno Arduino is an open-source platform utilized for developing electronic
    projects. We selected Arduino Uno due to its flexibility and ease of integration
    with the XBee module. The primary purpose of Arduino in this project is to read
    the input values of the connected sensors and send them serially to the connected
    Xbee module. • YL-69 Moisture Sensor This sensor is usually used to measure the
    humidity of the soil (see Figure 2 (b)). In this project, we used the analog signal
    pin, and thus the output voltage value will be between 0 and 1023. The voltage
    value decreases as the soil becomes more moisture while it increases as the soil
    becomes dry. • The Humidity and Temperature Sensor (DH22) The DH22 is a digital-output
    sensor utilized to measure relative humidity and temperature. This sensor can
    get new readings every 2 second, so timing should be considered carefully. For
    more details, refer to the sensor datasheet [14]. • XBee Wireless Communication
    Module It is a wireless communication module useful for applications that require
    low-power consumption. It is easy to deploy and can be configured using the XBee
    Configuration and Test Utility (XCTU) platform [15]. XBee can also ensure the
    safe delivery of data to the targeted node using addressing, acknowledgments,
    and retries. The checksum approach is used to ensure error-free communication.
    XBee module can be distinguished by two addresses: a fixed 64-bit address that
    is not configurable (MAC address) and a 16-bit configurable address. Two types
    of communication modes, called transparent mode and Application Programming Interface
    (API) mode, can be utilized to describe the way the host device communicates with
    an XBee module through the serial interface. In the API mode, a protocol is used
    to identify the way information is exchanged. In this mode, data is encapsulated
    in a structured packets called frames, the structure of the frame is defined by
    four parts: start delimiter, length, Frame Data, and checksum as shown in Figure
    3. This mode is better for large WSN when data collected from multiple remote
    locations. Therefore, we used it in this work. • Power Source Unit and Power Management
    The moisture sensor will be planted in the soil, so the nodes, as well as the
    attached sensors, are far from the power source. In this prototype, we used a
    9v Alkaline battery to provide the sensor node with the required power. We can
    also utilize solar panels to recharge the batteries. Minimizing the energy used
    by the device or increasing the battery capacity will increase the lifetime of
    the battery and reduce the total cost of ownership of the product. XBee transceiver
    is the most critical part of this project (the most significant energy-consumption
    part). Therefore, the XBee should be appropriately configured to allow it to work
    in the sleep mode most of the time. In this project, the remote XBee remains in
    the sleeping mode for a while and wakes up when it receives data from the microcontroller.
    Moreover, the ZigBee communication protocol used in our solution is distinguished
    as a low power consumption protocol compared to other wireless protocols such
    as Wi-Fi. Fig. 3: API mode frame structure Show All B. Zigbee Wireless Communication
    Protocol ZigBee is a primary type of wireless communication protocol that is used
    for communication in Wireless Personal Area Network (WPAN). The low power consumption,
    low data rate, and low cost are the main features of ZigBee. Therefore, it is
    practical for low power and low data rate application domains. A Zigbee device
    in the WSN can be configured to be an end device, router, and coordinator [16].
    In this work, we implemented a WSN that contains two end nodes and one coordinator.
    The XBee modules attached with Arduino are configured to be the end devices, while
    the XBee module connected to Raspberry Pi is configured to be the coordinator.
    C. The Processing Node This is the second subsystem of the proposed framework.
    This subsystem consists of a Raspberry Pi, a coordinator XBee module, and a solenoid
    water electrical valve. The primary purpose of this node is to collect data from
    the remote devices, analyze them, and control the irrigation process. 1) Raspberry
    Pi We utilized a raspberry Pi 3 [17] to control the smart irrigation process.
    The main tasks are summarized as follows: Read data from the connected coordinator
    XBee module, which is collected from the remote wireless nodes. Python code is
    implemented to analyze the gathered sensors quantities. Based on the analyzed
    data, the general purpose input/output (GPIO) pins are utilized to control the
    electrical water valve. In other words, it will decide whether to irrigate or
    not. The collected data are transferred to cloud using ThingSpeak API. Fig. 4:
    The processing node components Show All It is worth mentioning that the Raspberry
    Pi in our solution is considered as the fog computing node. As mentioned earlier
    it has the ability to analyze the data and provide the proper decision. This will
    handle the problems of cloud-based computing, such as high latency and security
    issues. Due to the limited resources available in the Raspberry Pi, we transfer
    the data to the cloud for storing, visualizing, and analyzing the vast amount
    of generated data. 2) The Coordinator XBee and Explorer Dongle We used one XBee
    module as a coordinator. The main purpose is to collect data sent from the remote
    end devices. It is connected directly to the raspberry pi by using the XBee explorer
    dongle, as shown in Figure 4(b). 3) Solenoid Electrical Valve In our prototype,
    we used a 12v solenoid valve to control the flow of water. However, the Raspberry
    Pi can provide a maximum of 5 volts. To handle this issue, we used a 2-channel
    relay module. D. The Cloud Computing Unit (Thingspeak IoT Cloud) Since there is
    a massive amount of generated data, analyzing and storing it is a significant
    challenge. The IoT makes the ability of providing and exchanging different physical
    data efficiently possible. This is achieved by connecting electronic sensors used
    in physical devices to the internet [10]. To improve the effectiveness of the
    proposed system and to benefit from the cloud services, we used ThingSpeak IoT
    cloud. ThingSpeak is an IoT analytical platform cloud service that can be utilized
    to aggregate, visualize, and analyze live data streams in the cloud. The REST
    API calls such as GET, POST, PUT, and DELETE, can be used to create and update
    ThingSpeak channels and charts (update an existing channel, clear a channel feed,
    and delete a channel) or retrieve data from channels. In this project, since the
    Raspberry Pi is connected directly to a stable power supply, and we have enough
    resources, we used the REST API to send data. In summary, we utilize ThingSpeak
    cloud service for three main purposes: Store and visualize the received data from
    the Raspberry Pi using different types of charts. Provide farmers and interest
    persons with a live streaming platform to monitor the status of the plants, create
    instance visualization, and sending alerts. The gathered data can be utilized
    to extract hidden and valuable knowledge by employing Data Mining and Machine
    Learning techniques. This helps farmers and others for planning and decision-making.
    It is also helpful for early prediction purposes. E. Addressing the Major Security
    Issues Protecting the system from intruders is becoming very important challenge
    that should be considered when designing WSN and IoT solutions [13]. In WSNs,
    various threats may pose due to several security issues. These issues are at the
    hardware and software levels. The deployment nature of sensor networks makes them
    more vulnerable to various attacks [18]. For instance, in our proposed WSN, the
    moisture sensor employed in the sensor node should be placed in the soil that
    makes it highly prone to capture and physical vandalism. To handle the majority
    of security issues, our proposed solution have already some efficient techniques,
    and we will suggest other solutions for future application and to make the system
    safer. Regarding the physical/hardware security, we suggest employing a surveillance
    system based on cameras and motion detection techniques to protect and observe
    the whole farm. At the software level, we used the XBee ZigBee module to provide
    efficient strategies that will prevent most of the attacks. It can ensure the
    safe delivery of data to the targeted node using addressing, acknowledgments,
    and retries. The device does not process frames sent through the serial interface
    with incorrect checksums and ignores their data. Moreover, ZigBee offers encryption
    services, authentication, and application services such that each node belongs
    to a predefined cluster and can take a predefined number of actions. These techniques
    are useful against passive information gathering, message corruption, and traffic
    analysis attacks. SECTION IV. Implementation and Experimental Results A. Design
    and Implementation The proposed prototype was designed and implemented using different
    hardware and software components as follows: • Hardware Components 1 x Raspberry
    Pi 3, 2x Arduino Uno, 2x Moisture sensor YL-69, 2x Humidity and temperature sensor
    DH22/AM2302, 3x XBee RF series 1 (2 end devices and 1 coordinator), lx XBee explorer
    dongle, 2x 9v and 1x12 v batteries, 2-channel relay module, 2x solenoid electrical
    valve 12v. • Software and Protocols XCTU, Raspbian Operating System, Arduino IDE,
    Python 3, ZigBee communication protocol, ThingSpeak IoT platform, XBee libraries
    The Arduino is programmed using IDE and C++ programming language, while Raspberry
    Pi was programmed using Python programming language. XCTU platform was used to
    setup the configuration for XBee modules such as PAN, source and destination 16-bit
    addresses, names, and operation modes. The main configurations for the employed
    XBee modules are reported in Table I. The performed steps by the sensing node
    and control unit are presented in Figures 5 and 6, respectively. Fig. 5: Sensor
    node process Show All Table I: XBee modules configurations B. Experimental Results
    At this phase of the project, we were satisfied with verifying that the proposed
    model is working properly in all its parts. The investigated prototype is shown
    in Figure 7. Figure 8 shows a sample of the live data streams visualization obtained
    from ThingSpeak platform over a period of time. Fig. 6: Control unit process Show
    All Fig. 7: The proposed irrigation system prototype Show All Fig. 8: Charts obtained
    from thingspeek cloud platform Show All SECTION V. Conclusion and Future Directions
    In this paper, an efficient cloud-based IoT framework for controlling and monitoring
    the irrigation process was designed and implemented. The main objective is to
    save water and improve the quality of crops. The proposed system was implemented
    based on WSN, Raspberry Pi, and ThingSpak IoT cloud platform. It was obvious from
    the implemented prototype that the WSN integrated with ThingSpeak platform provides
    more flexibility in monitoring and managing the system. For future work, extensive
    experiments will be conducted on real crops and analyze the resulting data using
    machine learning to obtain useful recommendations. A comparison can be performed
    with the traditional irrigation systems in terms of water consumption and the
    quality of crops to ensure the effectiveness of the proposed model. Moreover,
    the system can be adapted to consider more environmental data by adding different
    types of sensors. Authors Figures References Citations Keywords Metrics More Like
    This IoT enabled plant soil moisture monitoring using wireless sensor networks
    2017 Third International Conference on Sensing, Signal Processing and Security
    (ICSSS) Published: 2017 Application and evaluation of high power Zigbee based
    wireless sensor network in water irrigation control monitoring system 2009 IEEE
    Symposium on Industrial Electronics & Applications Published: 2009 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - 2020 International Conference on Promising Electronic Technologies,
    ICPET 2020
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Cloud-based internet of things approach for smart irrigation system: Design
    and implementation'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zhou B.
  - Li L.
  citation_count: '1'
  description: The Editor-in-Chief has retracted this article [1], which was published
    as part of special issue “Multi-source Weak Data Management using Big Data”, because
    there was evidence suggesting authorship manipulation and an attempt to subvert
    the peer review process. Corresponding author Lin Li stated on behalf of both
    authors that they agree to this retraction.
  doi: 10.1007/s11042-017-5481-4
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Multimedia Tools and Applications
    Article RETRACTED ARTICLE: Security monitoring for intelligent water-saving precision
    irrigation system using cloud services in multimedia context Published: 22 December
    2017 Volume 79, page 9705, (2020) Cite this article Download PDF Multimedia Tools
    and Applications Aims and scope Submit manuscript Baiqing Zhou & Lin Li  1919
    Accesses 3 Citations 1 Altmetric Explore all metrics The Editor-in-Chief has retracted
    this article [1], which was published as part of special issue “Multi-source Weak
    Data Management using Big Data”, because there was evidence suggesting authorship
    manipulation and an attempt to subvert the peer review process. Corresponding
    author Lin Li stated on behalf of both authors that they agree to this retraction.
    References 1. Zhou, B. & Li, L. Security monitoring for intelligent water-saving
    precision irrigation system using cloud services in multimedia context. Multimed
    Tools Appl (2017). https://doi.org/10.1007/s11042-017-5481-4 Author information
    Authors and Affiliations Zhejiang Tongji Vocational College Of Science and Technology,
    Hangzhou Shi, Province Zhejiang, China Baiqing Zhou Yunnan Vocational College
    of Mechanical and Electrical Technology, Kunming, Province Yunnan, China Lin Li
    Corresponding author Correspondence to Lin Li. Additional information The Editor-in-Chief
    has retracted this article [1], which was published as part of special issue “Multi-source
    Weak Data Management using Big Data”, because there was evidence suggesting authorship
    manipulation and an attempt to subvert the peer review process. Corresponding
    author Lin Li stated on behalf of both authors that they agree to this retraction.
    References: 1. Zhou, B. & Li, L. Security monitoring for intelligent water-saving
    precision irrigation system using cloud services in multimedia context. Multimed
    Tools Appl (2017). https://doi.org/10.1007/s11042-017-5481-4 Electronic supplementary
    material ESM 1 Former article version (PDF 1.23 mb) About this article Cite this
    article Zhou, B., Li, L. RETRACTED ARTICLE: Security monitoring for intelligent
    water-saving precision irrigation system using cloud services in multimedia context.
    Multimed Tools Appl 79, 9705 (2020). https://doi.org/10.1007/s11042-017-5481-4
    Download citation Received 23 November 2017 Revised 27 November 2017 Accepted
    29 November 2017 Published 22 December 2017 Issue Date April 2020 DOI https://doi.org/10.1007/s11042-017-5481-4
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Multimedia Context Cloud Computing RETRACTED ARTICLE Security
    Monitoring Information Theory Use our pre-submission checklist Avoid common mistakes
    on your manuscript. Sections Author information Additional information Electronic
    supplementary material About this article Advertisement Discover content Journals
    A-Z Books A-Z Publish with us Publish your research Open access publishing Products
    and services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Multimedia Tools and Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'RETRACTED ARTICLE: Security monitoring for intelligent water-saving precision
    irrigation system using cloud services in multimedia context (Multimedia Tools
    and Applications, (2020), 79, (9705), 10.1007/s11042-017-5481-4)'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Verma S.K.
  - Rajesh M.
  - Vincent R.
  citation_count: '3'
  description: In India, 47% of people are involved in the agriculture sector. A large
    part of the population of India depends upon the agriculture. In this work, we
    assemble a smart farming field screening system that helps farmers to take information
    about their field in the sense soil moisture, humidity and temperature of the
    environment. And it allows smart irrigation to the field and gives a better result
    for doing agriculture and provide better profit for good crop production. In our
    work, we can use a different type of sensors and some wireless technologies like
    the Internet of things (IoT) and an android application to provide a smart platform
    to farmers to read data from the sensors with the help of microcontroller and
    giving instructions in term of the graphical interface. Hence, we can use an IoT
    platform that gives the primary thing to access anywhere by using the internet.
    The Wireless sensor network consists of sensors like moisture, humidity and temperature,
    and Infrared sensor. Using Bluetooth and GSM module for the clustering with sensors
    and other microcontroller devices are connected to the solar panel or battery
    for the power supply. In this paper, we design an IoT platform for doing farming
    in an efficient way. That helps the farmers for real-time monitoring regarding
    their fields.
  doi: 10.1166/jctn.2020.8646
  full_citation: '>'
  full_text: '>

    "University of Nebraska-Lincoln About Contact Help Cart youtube twitter linkedIn
    Link to Ingenta Connect home page Search Search by Submit search Advanced Search
    BROWSE BY: Publications Publisher Subjects Home / Journal of Computational and
    Theoretical Nanoscience, Volume 17, Number 1 Smart-Farming Using Internet of Things
    Buy Article: $107.14 + tax (Refund Policy) 4 Authors: Verma, Shivam Kumar; Rajesh,
    M.; Vincent, Rajiv Source: Journal of Computational and Theoretical Nanoscience,
    Volume 17, Number 1, January 2020, pp. 172-176(5) Publisher: American Scientific
    Publishers DOI: https://doi.org/10.1166/jctn.2020.8646 < previous article | view
    table of contents | next article > Abstract References Citations Supplementary
    Data Suggestions In India, 47% of people are involved in the agriculture sector.
    A large part of the population of India depends upon the agriculture. In this
    work, we assemble a smart farming field screening system that helps farmers to
    take information about their field in the sense soil moisture, humidity and temperature
    of the environment. And it allows smart irrigation to the field and gives a better
    result for doing agriculture and provide better profit for good crop production.
    In our work, we can use a different type of sensors and some wireless technologies
    like the Internet of things (IoT) and an android application to provide a smart
    platform to farmers to read data from the sensors with the help of microcontroller
    and giving instructions in term of the graphical interface. Hence, we can use
    an IoT platform that gives the primary thing to access anywhere by using the internet.
    The Wireless sensor network consists of sensors like moisture, humidity and temperature,
    and Infrared sensor. Using Bluetooth and GSM module for the clustering with sensors
    and other microcontroller devices are connected to the solar panel or battery
    for the power supply. In this paper, we design an IoT platform for doing farming
    in an efficient way. That helps the farmers for real-time monitoring regarding
    their fields. Keywords: Android; Automation of Irrigation System; Cloud; Embedded;
    Humidity; Internet of Things (IoT); Remote Monitoring; Soil Moisture; Temperature;
    Wireless Sensor Network (WSN) Document Type: Research Article Affiliations: School
    of Computing Science and Engineering, Vellore Institute of Technology University,
    Chennai 600127, Tamil Nadu, India Publication date: January 1, 2020 More about
    this publication? We recommend Smart Farm Monitoring Using Internet of Things
    and LoRa Technology Based on Wireless Sensor Networks G. P. Revathi et al., Journal
    of Computational and Theoretical Nanoscience, 2020 Intrusion Detection in Agriculture
    Field Based on Internet of Things (IoT) P Abinaya et al., Journal of Computational
    and Theoretical Nanoscience, 2018 An Intelligent Irrigation System and Prediction
    of Environmental Weather Based on Nano Electronics and Internet of Things Devices
    Sultan Ahmad et al., Journal of Nanoelectronics and Optoelectronics, 2023 A Review:
    Precision Agriculture (PA) Using Energy-Efficient Wireless Sensor Networks R Srinivasan
    et al., Journal of Computational and Theoretical Nanoscience, 2018 Smart New Era
    Agri Applications Using Optoelectric System Ravi V Angadi et al., Journal of Computational
    and Theoretical Nanoscience, 2018 Security and Privacy in Solar Insecticidal Lamps
    Internet of Things: Requirements and Challenges Qingsong Zhao et al., IEEE/CAA
    Journal of Automatica Sinica, 2024 A Comprehensive Evaluation of Tinnitus Apps
    Aniruddha K. Deshpande et al., American Journal of Audiology, 2019 Masked FPGA
    Bitstream Encryption via Partial Reconfiguration Yanping Gong et al., International
    Journal of High Speed Electronics and Systems, 2020 Inkjet-/3D-/4D-Printed Wireless
    Ultrabroadband Modules for IoT, Smartag and Smart City Applications Ajibayo Adeyeye
    et al., International Journal of High Speed Electronics and Systems, 2020 A methodology
    for reliability of WSN based on software defined network in adaptive industrial
    environment Ying Duan et al., IEEE/CAA Journal of Automatica Sinica, 2017 Powered
    by Register You are signed in as: University of Nebraska-Lincoln (Institutional
    registration) Center for Research Libraries (CRL) (Institutional registration)
    Additional Sign In Sign Out Tools Reference exports + Linking options + Latest
    TOC RSS Feed Recent Issues RSS Feed © Get Permissions Accessibility Select Language
    Afrikaans Albanian Amharic Arabic Armenian Assamese Aymara Azerbaijani Bambara
    Basque Belarusian Bengali Bhojpuri Bosnian Bulgarian Catalan Cebuano Chichewa
    Chinese (Simplified) Chinese (Traditional) Corsican Croatian Czech Danish Dhivehi
    Dogri Dutch Esperanto Estonian Ewe Filipino Finnish French Frisian Galician Georgian
    German Greek Guarani Gujarati Haitian Creole Hausa Hawaiian Hebrew Hindi Hmong
    Hungarian Icelandic Igbo Ilocano Indonesian Irish Italian Japanese Javanese Kannada
    Kazakh Khmer Kinyarwanda Konkani Korean Krio Kurdish (Kurmanji) Kurdish (Sorani)
    Kyrgyz Lao Latin Latvian Lingala Lithuanian Luganda Luxembourgish Macedonian Maithili
    Malagasy Malay Malayalam Maltese Maori Marathi Meiteilon (Manipuri) Mizo Mongolian
    Myanmar (Burmese) Nepali Norwegian Odia (Oriya) Oromo Pashto Persian Polish Portuguese
    Punjabi Quechua Romanian Russian Samoan Sanskrit Scots Gaelic Sepedi Serbian Sesotho
    Shona Sindhi Sinhala Slovak Slovenian Somali Spanish Sundanese Swahili Swedish
    Tajik Tamil Tatar Telugu Thai Tigrinya Tsonga Turkish Turkmen Twi Ukrainian Urdu
    Uyghur Uzbek Vietnamese Welsh Xhosa Yiddish Yoruba Zulu Powered by Translate Share
    Content Access Key Free content Partial Free content New content Open access content
    Partial Open access content Subscribed content Partial Subscribed content Free
    trial content Browse by Publication Browse by Subject Browse by Publisher Advanced
    Search About us Researchers Librarians New featured titles Help Contact us   Youtube
    twitter linkedIn Website © 2024 Ingenta. Article copyright remains with the publisher,
    society or author(s) as specified within the article. Ingenta is not the publisher
    of the publication content on this website. The responsibility for the publication
    content rests with the publishers providing the material. Please refer to our
    Terms and Conditions. Terms and Conditions Privacy Information for Advertisers
    Cookie Policy Highlights visible"'
  inline_citation: '>'
  journal: Journal of Computational and Theoretical Nanoscience
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Smart-farming using internet of things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Aafreen R.
  - Neyaz S.Y.
  - Shamim R.
  - Beg M.S.
  citation_count: '10'
  description: Maintaining suitable environmental conditions like soil moisture, temperature,
    humidity etc. is required for good crop produce in industrial greenhouses. Internet
    of Things (IoT) can enable a complete remote visualisation and control of greenhouse
    environmental parameters in real time. The state of art systems use zigbee based
    wireless sensor networks for monitoring and control, which have a limited range
    of operation, bandwidth and cognitive abilities. This paper presents a novel IoT
    based system for telemetry and control of greenhouse environment. The developed
    system provides real time wireless sensor data transmission, data visualization
    and processing at the central monitoring server / PC via ThingSpeak cloud and
    ubiquitous GSM infrastructure. The use of lightweight and fast Blynk IoT platform
    for implementing the mobile app for messaging and control of greenhouse environment
    is a key feature of the developed system. Real time irrigation needs are received
    via messages on the Blynk app installed on the mobile phone. The experimental
    results show that the proposed system is an effective solution for energy efficient
    smart farming in greenhouse and thus contribute towards a sustainable and green
    environment.
  doi: 10.1109/UPCON47278.2019.8980258
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2019 International Conference...
    An IoT based system for telemetry and control of Greenhouse environment Publisher:
    IEEE Cite This PDF Rubeena Aafreen; Salwa Yasmeen Neyaz; Raaziyah Shamim; M. Salim
    Beg All Authors 10 Cites in Papers 421 Full Text Views Abstract Document Sections
    I. Introduction II. System Architecture III. System Implementation IV. System
    Working and Results V. Conclusions Authors Figures References Citations Keywords
    Metrics Abstract: Maintaining suitable environmental conditions like soil moisture,
    temperature, humidity etc. is required for good crop produce in industrial greenhouses.
    Internet of Things (IoT) can enable a complete remote visualisation and control
    of greenhouse environmental parameters in real time. The state of art systems
    use zigbee based wireless sensor networks for monitoring and control, which have
    a limited range of operation, bandwidth and cognitive abilities. This paper presents
    a novel IoT based system for telemetry and control of greenhouse environment.
    The developed system provides real time wireless sensor data transmission, data
    visualization and processing at the central monitoring server / PC via ThingSpeak
    cloud and ubiquitous GSM infrastructure. The use of lightweight and fast Blynk
    IoT platform for implementing the mobile app for messaging and control of greenhouse
    environment is a key feature of the developed system. Real time irrigation needs
    are received via messages on the Blynk app installed on the mobile phone. The
    experimental results show that the proposed system is an effective solution for
    energy efficient smart farming in greenhouse and thus contribute towards a sustainable
    and green environment. Published in: 2019 International Conference on Electrical,
    Electronics and Computer Engineering (UPCON) Date of Conference: 08-10 November
    2019 Date Added to IEEE Xplore: 06 February 2020 ISBN Information: ISSN Information:
    DOI: 10.1109/UPCON47278.2019.8980258 Publisher: IEEE Conference Location: Aligarh,
    India SECTION I. Introduction According to the UN Food and Agriculture Organization
    (FAO), providing adequate food for the increasing world population is one of the
    most serious challenges of the 21st century. Limited cultivable land, declining
    freshwater resource, unsuitable climate, inadequate light for photosynthesis and
    constrained financial resources are some of the major challenges to increasing
    agricultural produce. In this context, industrial greenhouses have a huge potential
    in providing food security in many parts of the world, particularly if they are
    used properly and efficiently. However, greenhouse ecosystem is a complex system
    coupled with dynamics of environmental factors like soil moisture, temperature,
    humidity, light and CO2 concentration. Maintaining an optimal greenhouse environment
    may lead to significant improvements in crop produce and hence a key goal for
    today''s advanced agriculture and this is the motivation behind carrying out the
    work described in this paper. IoT driven agriculture monitoring may potentially
    revolutionize the agriculture industry. It enables quality remote monitoring and
    control from anywhere at any time through a combination of devices and also improved
    access to quality information. Reduction in electricity and labour costs, and
    higher convenience are added advantages. The use of IoT based systems for the
    purpose of monitoring and control of greenhouse ecosystem provide several advantages
    over existing methods. A reduction in wiring deployment and maintenance cost,
    quick and easy retrofitting in the existing infrastructure, convenient and non-invasive
    remote monitoring and control without disturbing the plant biome by frequent visits,
    less disturbance to normal farming operations are some of the benefits. In addition
    to these benefits, these systems are more reliable, easily scalable and can be
    extended to more advanced functionalities such as fusion of information from more
    than one sensor node for better inference and precise control of the environment.
    A research carried out by LOFAR Agro Consortium in Netherlands is reported where
    wireless sensor network is used to monitor temperature and humidity for potato
    crop cultivation and hence control Phytophtora Infestans fungous disease [1].
    Zhang et al. developed a small network for monitoring humidity and temperature
    at various points in a plant nursery [2]. Belasare et al. developed a system to
    monitor Vapour Pressure Deficit (VPD) in a greenhouse using WSN and visualize
    the data on LabView [3]. Roop Pahuja et al. proposed a GSM based system for remote
    control of various parameters such as humidity, light and temperature using ARM7
    microcontroller in a greenhouse [4]. Ravi et al. (2016) monitored nitrogen, phosphorus,
    potassium and other minerals in soil using electrochemical sensors, and carry
    out drip fertigation when required [5]. Koprda et al. implemented a GSM based
    system for monitoring and control of soil moistures using soil humidity sensors
    [6]. The control is done using Android app. Nattapol et al. proposed the use of
    Wireless Sensing Networks (WSN) and smartphone for monitoring and control of various
    crop parameters like soil moisture, temperature and humidity [7]. Sekulic'' et
    al. developed a smart spraying system for disease forecasting of grapevine downy
    mildew (Plasmopara Viticola) in the vineyard region of Montenegro [8]. The system
    collects weather data from the sensor nodes. Based on the measurements, grapevine
    growth stages and field monitoring of the pathogen development, the system is
    calibrated for disease forecasting. The above-mentioned literature report monitoring
    and control of temperature, soil moisture, soil nutrient content, vapour pressure
    deficit etc. However, research suggests that quality of air as well as intensity
    of individual spectral components of light also affect the growth of plants. Besides,
    most of the systems mentioned above use zigbee based wireless sensor networks
    for monitoring and control, with a limited range of operation, a limited bandwidth
    and lack of cognitive abilities due to limited computing power. In the work presented
    in this paper, an IoT based cloud integrated telemetry and control system is developed
    to remotely monitor and maintain environment suitable for plant sustenance and
    growth in greenhouse. The proposed cloud integrated IoT system has no range limitations,
    the only constraint is the availability of GSM and ethernet/WiFi connections.
    The main objective of the design was to develop a low cost, user friendly system
    for field measurement with the aim of reducing the manual operations and using
    the measured data from the sensor nodes for intelligent inference and remote control.
    The developed system provides realtime wireless sensor data transmission, data
    visualization and processing at the central monitoring server / PC via ThingSpeak
    cloud and ubiquitous GSM infrastructure. The use of lightweight and fast Blynk
    IoT platform for implementing the mobile app for messaging and control of greenhouse
    environment is a key feature of the developed system. Blynk platform enables a
    multilateral connection with the sensor node, Blynk server/software, and mobile
    phone. Real time irrigation needs are received via messages on the Blynk app installed
    on the mobile phone. In order to test system developed in this work, experimental
    tests were conducted in greenhouse by us and the results obtained have been presented
    and discussed in this paper. The paper is organized as follows: Section II describes
    the overall architecture of the proposed system. Section III and IV give the hardware
    and software details of the system, respectively. Section V and VI report the
    experimental results and conclusions, respectively. SECTION II. System Architecture
    Fig. 1. gives the system architecture of the IoT based remotely monitored and
    controlled greenhouse ecosystem. The system comprises of three major components:
    GPRS enabled sensor nodes deployed at various locations in the field, an Ethernet
    connected central monitoring server/PC at the remote station, and mobile controlling
    of actuator connected to the switches controlling devices. A. Sensor Node (SN)
    Each sensor node comprises of sensors, a microcontroller and GSM shield for communication.
    The sampled sensor data is processed, packetized and transmitted wirelessly to
    the server through General Packet Radio Service (GPRS). B. Central Monitoring
    Server The central monitoring server receives, stores, displays and analyse live
    data from the sensor nodes. It may also be programmed/configured to generate/send
    notifications under certain conditions. The server processes the received information,
    makes suitable inferences and send control command to the actuator node. C. Mobile
    Phone Based Monitoring and Control Unit /AN The actuator node (AN) is used to
    wirelessly receive and execute the control commands from the Blynk server. It
    has connections to various coloured LEDs, irrigation pumps fan/cooler etc. Fig.
    1: Data flow architecture of IoT based telemetry and control system for a greenhouse
    Show All SECTION III. System Implementation A. Sensor Node The sensor node employed
    in this work for IoT based greenhouse monitoring uses an Arduino Mega 2560 microcontroller
    based on ATMega1280. The board requires a power supply of 7-12V supplied either
    at VIN via an on-board regulator or USB. It operates at frequencies of up to 1
    MHz. It includes up to 128 kB of flash memory, up to 8 kB of SRAM, USB Device
    interface, SPI interface, 4 UART serial ports, digital input-output pins, 1 PWM
    pins and 1 analog input pins[9]. The soil moisture sensor used in the node is
    EVANA SM12. It estimates the soil volumetric water content by measuring the dielectric
    constant (soil bulk permittivity) of the soil. The soil water content and dielectric
    constants are directly proportional to each other. This sensor measures the resistance
    between two pins of its Printed Circuit Board (PCB). Hence, it gives a lower resistance
    when soil moisture is high and vice-versa. The operation of the sensor requires
    a biasing voltage of 3.3-5V. The sensor has a digital as well as analog output
    interface (EVANA SM12 Datasheet) [10]. The ambient light intensity sensor used
    is BH1750. It measures the intensity of the incident light using a photo diode.
    It has a measurement range of 1–553 lx and a resolution of 0.1 lx. The maximum
    input voltage of BH1750 is 4.5V and the operating voltage being around is 3.6V.
    The influence of the infrared radiations on the sensor output is small [11]. The
    air quality sensor MQ135 is used in the node to monitor the CO2 content of the
    atmosphere. As the concentration of CO2 increase, the conductivity of gas sensor
    also increases. It is assumed that the other gases like ammonia, aromatic compounds,
    Sulphur, benzene vapor, smoke etc. to which the sensor is sensitive are constant
    in the atmosphere. The output of MQ135 can be an analog signal that can be read
    with an analog input port of the Arduino or a digital TTL output that can be read
    with a digital input port of the Arduino [12]. GSM Shield SIM900A is used to enable
    communication of the developed sensor node with remote server. The interfacing
    of sensor node electronics comprising microcontroller, sensors and GSM Shield
    is shown in Fig. 2. The function of the sensor node include periodically measuring
    the environmental parameters, data processing and packetization, and wireless
    transmission to ThingSpeak channel. These functions were implemented by a program
    in embedded C language, uploaded on the microcontroller using Arduino IDE (Integrated
    Development Environment). When the sensor node is powered on the program automatically
    starts and follows the logic in the flowchart indicated in Fig. 3. B. Central
    Monitoring Server In the prototype in this work, ThingSpeak is used as a monitoring
    cloud server. ThingSpeak is an IoT analytics platform that enables real time data
    collection, visualization and analysis. The information can be viewed by the user
    when required. Online analysis and processing of the data may also be done in
    MATLAB. Fig. 4 shows the program flow for cloud server used in this work. Fig.
    2: Sensor node electronics Show All Fig. 3: Sensor node program flow Show All
    C. Mobile Phone Based Monitoring and Control Unit (AN) The actuator node consists
    of a microcontroller programmed to sense any control commands from Blynk app installed
    on the remote mobile phone. Whenever, the intensity of light displayed at ThingSpeak
    channel is outside the desired ambient light intensity range, a command is sent
    from the Blynk app to switch on / off the light. Likewise, the irrigation pump
    is switched on / off when the received sensed soil moisture values fall outside
    the desired levels. Microcontroller executes the received commands by controlling
    the relevant switches via the digital input / output pins and connected relays.
    The flowchart for actuator node is shown in Fig. 5. Fig. 4: Cloud server routine
    Show All Fig. 5: Actuator node routine for environment controlling devices Show
    All SECTION IV. System Working and Results The working of the developed system
    is shown in Fig. 6. The working of the developed system is shown in Fig. 6. The
    developed system was tested to perform a real-time remote environmental monitoring
    of soil moisture, air quality and light for cultivation of tomato plants. The
    sensor and the actuator nodes were installed in the in-vitro culture lab, Department
    of Botany, Faculty of Life Sciences, Aligarh Muslim University (AMU). The monitoring
    started since November 16, 2017 with every one minute interval of measurement.
    The central monitoring server was placed at Advanced Communication Laboratory,
    Department of Electronics Engineering, AMU. The environmental data comprising
    air quality, light intensity and soil moisture was monitored for seven days. Fig.
    7. shows the implemented system setup at the in-vitro culture lab, Department
    of Botany. The actuation function was successfully tested for controlling the
    irrigation pump, air conditioner and artificial lights. Fig. 6: Working of the
    developed system Show All Fig. 7: Testing of the implemented system prototype
    Show All Fig. 8. shows the successful real-time visualization of received measurements
    on ThingSpeak server for a) soil moisture sensor b) light sensor and c) air quality
    sensor. Offline measurement data were also observed on the personal computer.
    The offline measurement record may help keep continuity and robustness of monitoring
    in case of unstable GSM network. The offline data observed on serial monitor of
    Arduino IDE is shown in Fig. 9. Table 1 shows a sample series of successfully
    received environmental data for soil moisture, light intensity and air quality
    over time. Soil moisture sensor values above 1000 indicate the need for irrigation.
    Light intensity values less than 50 indicate darkness. Similarly, air quality
    measurements more than 350 indicate poor air quality. The data can be utilized
    to support daily farm activity. In view of the use of cloud-based system, the
    measured environmental data could be checked using PCs and smartphones anytime
    and anywhere. Depending upon the measured sensor values, required actuation of
    devices can be performed via Blynk app. Analog voltage values measured by the
    above sensors can be calculated from raw mentioned values using the formula: Analog
    sensor voltage output= raw sensor output value 1023 View Source These voltages
    are proportionally indicative of soil moisture percentage, light intensity and
    air quality respectively. Table I: Reading of different sensors collected by ThingSpeak
    server Fig. 8: ThingSpeak server data for different sensors Show All Fig. 9: Data
    on serial monitor of arduino IDE Show All As soon as the levels rise/fall below
    the set threshold for soil moisture sensor, the ThingSpeak server displays an
    alert notification on mobile as shown in Fig. 10. Fig. 10: Alert notification
    received on mobile Show All The control of these parameters is done remotely and
    wirelessly via Blynk app which allows user to press a button and turn on/off the
    equipments. This wireless control via Blynk app was tested for switching ON/OFF
    the LED and the results are shown in Fig. 11. These LEDs were replaced by relays
    connecting to the appliances used for actual actuation. Fig. 11: Testing control
    via blynk app Show All SECTION V. Conclusions In this paper, a prototype cloud
    integrated Internet of Things system for tele-monitoring and control of greenhouse
    environment is developed and successfully tested. The system collects measured
    environmental sensor data on ThingSpeak cloud server from the GPRS enabled sensor
    nodes. The sensor node data can be monitored from anywhere using an Internet connected
    laptop / mobile phone. The ThingSpeak platform can analyse the effect of greenhouse
    environment on plant growth from the received sensor data. Through the analysis,
    it enables intelligent control of the greenhouse environment suitable for plant
    growth. The use of lightweight and fast Blynk IoT platform for implementing the
    mobile app for messaging and control of greenhouse environment is a key feature
    of the developed system. Blynk platform enables a multilateral connection with
    the sensor node, Blynk server/software, and mobile phone. Real time irrigation
    needs are received via messages on the Blynk app installed on the mobile phone.
    Fan, lights and irrigation pump in greenhouse are also successfully controlled
    via Blynk mobile phone app using GPRS transmission to the sensor node. Computing
    and telecommunications technologies are still not widely adopted for agriculture
    applications, in many regions of the world. Increasing bandwidths in terms of
    high speed mobile and internet services to rural areas are gradually becoming
    available in these regions. In this scenario, the work presented in this paper
    assumes great significance as the advent of IoT has a great potential to revolutionise
    farming and agricultural practices. ACKNOWLEDGMENT The paper authors would like
    to place on record their acknowledgement for the financial assistance by TEQIP
    for the procurement of components. The authors would also like to acknowledge
    the support and facilities provided by the Department of Electronics Engineering
    and Department of Botany at AMU, Aligarh. Authors Figures References Citations
    Keywords Metrics More Like This Precision Agriculture for Greenhouses Using a
    Wireless Sensor Network 2017 Palestinian International Conference on Information
    and Communication Technology (PICICT) Published: 2017 Design and implementation
    of a wireless sensor network for rose greenhouses monitoring 2015 6th International
    Conference on Automation, Robotics and Applications (ICARA) Published: 2015 Show
    More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - 2019 International Conference on Electrical, Electronics
    and Computer Engineering, UPCON 2019
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An IoT based system for telemetry and control of Greenhouse environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Wang F.
  - Zhao B.
  - Wang H.
  - Liu Y.
  - Li Y.
  - Wang L.
  citation_count: '6'
  description: In order to promote the application of modern information technology
    in the field of management of saline-alkali land and get an effective mean for
    evaluating improved effect on soil, a real-time information collection and control
    system was designed, including online underwater pipe monitoring subsystem, field
    microclimate monitoring subsystem, pest diagnosis subsystem, crop growth monitoring
    subsystem, and automation irrigation subsystem. And ZigBee multi-hop ad-hoc network
    was constructed for field data transmission. Based on the regional characteristics
    of Dongying Agricultural High Technology Zone, a cost function was defined in
    the comprehensive consideration of maximum network connectivity, robustness and
    timelines. And then, a global optimization deployment scheme for ZigBee network
    nodes was proposed with the maximum connectivity of the network. Meanwhile, a
    local data collection software with LabVIEW and the remote cloud service platform
    under Brower/Server structure were all achieved. The communication between local
    control software and remote server was achieved through TCP/IP, where the communication
    reliability was guaranteed by the mechanism of offline detection and reconnection.
    A large amount of monitoring data can be accumulated in the remote server, providing
    data support for the treatment of saline soil in the future. The system was put
    into use, the test showed that the system met the functional requirements of data
    monitoring and automation control for irrigation and fertilization, where monitoring
    data can be shown on the website in real-time and control commands can reach the
    correct actuator through the website quickly. Meanwhile, the communication test
    showed that the packet loss rate of the designed ZigBee network data transmission
    was less than 1%.
  doi: 10.6041/j.issn.1000-1298.2019.S0.032
  full_citation: '>'
  full_text: '>

    "首页 | 学会首页 | 学报简介 | 投稿须知 | 编委会 | 期刊浏览 | EI收录结果 | 联系我们 | OSID建码 | English | 加入收藏
    汪凤珠,赵博,王辉,刘阳春,李阳,王丽丽.基于ZigBee和TCP/IP的盐碱地田间监控系统研究[J].农业机械学报,2019,50(Supp):207-213.
    WANG Fengzhu,ZHAO Bo,WANG Hui,LIU Yangchun,LI Yang,WANG Lili.Design and Experiment
    of Field Monitoring System in Alkaline Land Based on ZigBee and TCP/IP[J].Transactions
    of the Chinese Society for Agricultural Machinery,2019,50(Supp):207-213. 摘要点击次数:1435
    全文下载次数:539 基于ZigBee和TCP/IP的盐碱地田间监控系统研究   [下载全文] Design and Experiment of Field
    Monitoring System in Alkaline Land Based on ZigBee and TCP/IP   [Download Pdf][in
    English] 投稿时间：2019-04-19   DOI：10.6041/j.issn.1000-1298.2019.S0.032 中文关键词:  盐碱地  治理  无线传感器网络  节点部署  远程监控  云服务
    基金项目:国家重点研发计划项目（2017YFD0701104） 作者 单位 汪凤珠  中国农业机械化科学研究院  赵博  中国农业机械化科学研究院  王辉  中国农业机械化科学研究院  刘阳春  中国农业机械化科学研究院  李阳  中国农业机械化科学研究院  王丽丽  中国农业机械化科学研究院  中文摘要:为实现现代信息技术在盐碱地良性管理领域的技术应用，解决当前盐碱地管理中缺乏监测数据、无法有效进行改良效果评估的问题，设计了田间智能化信息化采集与控制系统，实现了暗管水质信息监测、田间气候监测、病虫害监测、作物长势监测和自动灌溉控制，构建了用于田间数据传输的ZigBee无线传感器网络，并依据山东东营农业高新技术园区的区域特点，综合考虑信号传输的鲁棒性和时效性，提出了ZigBee网络节点部署的全局优化方案。同时，应用TCP/IP协议，设计了盐碱地综合治理信息采集软件和远程信息云服务平台，实现了盐碱地资源的全方位信息监测。试验表明，系统能够满足盐碱地信息监测和田间灌溉水肥一体化自动控制的功能需求，且所设计网络数据传输的综合丢包率低于1%。
    WANG Fengzhu  ZHAO Bo  WANG Hui  LIU Yangchun  LI Yang  WANG Lili Key Words:alkaline
    land  treatment  wireless sensor network  node deployment  remote monitoring and
    control  cloud service Abstract:In order to promote the application of modern
    information technology in the field of management of saline alkali land and get
    an effective mean for evaluating improved effect on soil, a real time information
    collection and control system was designed, including online underwater pipe monitoring
    subsystem, field microclimate monitoring subsystem, pest diagnosis subsystem,
    crop growth monitoring subsystem, and automation irrigation subsystem. And ZigBee
    multi hop ad hoc network was constructed for field data transmission. Based on
    the regional characteristics of Dongying Agricultural High Technology Zone, a
    cost function was defined in the comprehensive consideration of maximum network
    connectivity, robustness and timelines. And then, a global optimization deployment
    scheme for ZigBee network nodes was proposed with the maximum connectivity of
    the network. Meanwhile, a local data collection software with LabVIEW and the
    remote cloud service platform under Brower/Server structure were all achieved.
    The communication between local control software and remote server was achieved
    through TCP/IP, where the communication reliability was guaranteed by the mechanism
    of offline detection and reconnection. A large amount of monitoring data can be
    accumulated in the remote server, providing data support for the treatment of
    saline soil in the future. The system was put into use, the test showed that the
    system met the functional requirements of data monitoring and automation control
    for irrigation and fertilization, where monitoring data can be shown on the website
    in real time and control commands can reach the correct actuator through the website
    quickly. Meanwhile, the communication test showed that the packet loss rate of
    the designed ZigBee network data transmission was less than 1%. Transactions of
    the Chinese Society for Agriculture Machinery (CSAM), in charged of China Association
    for Science and Technology (CAST), sponsored by CSAM and Chinese Academy of Agricultural
    Mechanization Science(CAAMS), started publication in 1957. It is the earliest
    interdisciplinary journal in Chinese which combines agricultural and engineering.
    It always closely grasps the development direction of agriculture engineering
    disciplines and the published papers represent the highest academic level of agriculture
    engineering in China. Currently, nearly 8,000 papers have been already published.
    There are around 3,000 papers contributed to the journal each year, but only around
    600 of them will be accepted. Transactions of CSAM focuses on a wide range of
    agricultural machinery, irrigation, electronics, robotics, agro-products engineering,
    biological energy, agricultural structures and environment and more. Subjects
    in Transactions of the CSAM have been embodied by many internationally well-known
    index systems, such as: EI Compendex, CA, CSA, etc.    下载PDF阅读器 相似文献(共20条): [1]
    郭文川,程寒杰,李瑞明,吕健,张海辉.基于无线传感器网络的温室环境信息监测系统[J].农业机械学报,2010,41(7):181-185. [2] 殷建军,潘春华,肖克辉,叶耀文,刘小平,肖德琴.基于无线图像传感器网络的农田远程监测系统[J].农业机械学报,2017,48(7):286-293.
    [3] 杨信廷,吴滔,孙传恒,刘燕德,周超.基于WMSN的作物环境与长势远程监测系统[J].农业机械学报,2013,44(1):167-173. [4] 薛涛,杜岳峰,田纪云,朱忠祥,毛恩荣,刘守荣.基于ZigBee技术的棉田滴灌监测与控制系统[J].农业机械学报,2016,47(S1):261-266.
    [5] 齐林,韩玉冰,张小栓,邢少华,傅泽田.基于WSN的水产品冷链物流实时监测系统[J].农业机械学报,2012,43(8):134-140. [6] 何东健,刘畅,熊虹婷.奶牛体温植入式传感器与实时监测系统设计与试验[J].农业机械学报,2018,49(12):195-202.
    [7] 蒋鼎国,张宇林,徐保国.节水灌溉监控系统设计——基于WSN和模糊控制策略[J].农机化研究,2012,34(2):167-171. [8] 柯永斌,张新荣.基于WSN和模糊策略的粮情监控系统设计[J].农业机械,2011(23):107-110.
    [9] 郁晓庆,吴普特,韩文霆,张增林.基于无线传感器网络的农田灌溉远程监控系统[J].排灌机械工程学报,2013(1):66-69,80. [10] 王莉,赵艳阳,惠延波,阳雨妍,陈振.基于ZigBee网络和机械臂的智能灌溉系统设计[J].农机化研究,2017(7):137-142.
    [11] 杨自栋,李洪文,宋景玲.基于ZigBee的农田秸秆禁烧无线监测系统的设计[J].农机化研究,2009,31(11). [12] 金玉麟,王海伦.基于无线传感器网络的中央监控系统的设计[J].农机推广与安全,2011(8):4-6.
    [13] 盛平,王玉秀,郭洋洋,王雷强.基于ZigBee和3G的多污水处理厂监控系统设计[J].排灌机械,2011,29(6):503-507. [14]
    陆洲,李江华.农用灌溉水水质监测系统设计-基于无线传感设备网络[J].农机化研究,2017(7):235-239. [15] 方旭杰,周益明,程文亮,丁潮洪,杨祥龙.基于ZigBee技术的无线智能灌溉系统的研制[J].农机化研究,2009,31(1).
    [16] 崔天时,孙建伟,吕信超,郑铁,孟祥远,李昕洋,林珊.基于 GPRS 的农田灌溉系统[J].农机化研究,2016(10):193-197. [17]
    张增林,党革荣,郁晓庆,穆创国.基于无线传感器网络的节水灌溉远程监控系统[J].节水灌溉,2012(3):75-78. [18] 张新荣,张宇林,周红标,唐中一.无线传感网技术在水产养殖环境参数监测中的应用[J].农机化研究,2012,34(5):191-195.
    [19] 孔晓红,李瑞华,何军和.基于GPRS+ZigBee的远程路灯控制系统的设计[J].农业科技与装备,2016(6). [20] 侯存峰,谢菊芳,胡东.基于ZigBee技术的CO2监测节点设计与实现[J].农业科技与装备,2012(3):47-51.
    主管单位：中国科学技术协会 主办单位：中国农业机械学会;中国农业机械化科学研究院集团有限公司  主编：任露泉 地址：北京德胜门外北沙滩1号6信箱  邮政编码：100083
    电话：64882610  技术支持：北京勤云科技发展有限公司  京ICP备11001094号-1 京公网安备 11010502033880号"'
  inline_citation: '>'
  journal: Nongye Jixie Xuebao/Transactions of the Chinese Society for Agricultural
    Machinery
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design and Experiment of Field Monitoring System in Alkaline Land Based on
    ZigBee and TCP/IP
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Baseca C.C.
  - Sendra S.
  - Lloret J.
  - Tomas J.
  citation_count: '88'
  description: New technologies have the potential to transform agriculture and to
    reduce environmental impact through a green revolution. Internet of Things (IoT)-based
    application development platforms have the potential to run farm management tools
    capable of monitoring real-time events when integrated into interactive innovation
    models for fertirrigation. Their capabilities must extend to flexible reconfiguration
    of programmed actions. IoT platforms require complex smart decision-making systems
    based on data-analysis and data mining of big data sets. In this paper, the advantages
    are demonstrated of a powerful tool that applies real-time decisions from data
    such as variable rate irrigation, and selected parameters from field and weather
    conditions. The field parameters, the index vegetation (estimated using aerial
    images), and the irrigation events, such as flow level, pressure level, and wind
    speed, are periodically sampled. Data is processed in a decision-making system
    based on learning prediction rules in conjunction with the Drools rule engine.
    The multimedia platform can be remotely controlled, and offers a smart farming
    open data network with shared restriction levels for information exchange oriented
    to farmers, the fertilizer provider, and agricultural technicians that should
    provide the farmer with added value in the form of better decision making or more
    efficient exploitation operations and management.
  doi: 10.3390/agronomy9050216
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Agronomy All Article Types Advanced   Journals
    Agronomy Volume 9 Issue 5 10.3390/agronomy9050216 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Subscribe SciFeed Recommended
    Articles Related Info Link More by Authors Links Article Views 14880 Citations
    87 Table of Contents Abstract Introduction Related Works Rule-Based Preparation
    Work Software Components Web Platform View Conclusions and Future Work Author
    Contributions Funding Acknowledgments Conflicts of Interest References Altmetric
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessArticle A Smart Decision System for Digital Farming by Carlos Cambra Baseca
    1, Sandra Sendra 2,3,*, Jaime Lloret 3 and Jesus Tomas 3 1 Grupo de Inteligencia
    Computacional Aplicada (GICAP), Departamento de Ingeniería Civil, Escuela Politécnica
    Superior, Universidad de Burgos, 09006 Burgos, Spain 2 Department of Signal Theory,
    Telematics and Communications, Universidad de Granada, 18071 Granada, Spain 3
    Instituto de Investigación para la Gestión Integrada de zonas Costeras, Universitat
    Politècnica de València, 46730 Valencia, Spain * Author to whom correspondence
    should be addressed. Agronomy 2019, 9(5), 216; https://doi.org/10.3390/agronomy9050216
    Submission received: 26 January 2019 / Revised: 21 April 2019 / Accepted: 23 April
    2019 / Published: 27 April 2019 Download keyboard_arrow_down     Browse Figures
    Versions Notes Abstract New technologies have the potential to transform agriculture
    and to reduce environmental impact through a green revolution. Internet of Things
    (IoT)-based application development platforms have the potential to run farm management
    tools capable of monitoring real-time events when integrated into interactive
    innovation models for fertirrigation. Their capabilities must extend to flexible
    reconfiguration of programmed actions. IoT platforms require complex smart decision-making
    systems based on data-analysis and data mining of big data sets. In this paper,
    the advantages are demonstrated of a powerful tool that applies real-time decisions
    from data such as variable rate irrigation, and selected parameters from field
    and weather conditions. The field parameters, the index vegetation (estimated
    using aerial images), and the irrigation events, such as flow level, pressure
    level, and wind speed, are periodically sampled. Data is processed in a decision-making
    system based on learning prediction rules in conjunction with the Drools rule
    engine. The multimedia platform can be remotely controlled, and offers a smart
    farming open data network with shared restriction levels for information exchange
    oriented to farmers, the fertilizer provider, and agricultural technicians that
    should provide the farmer with added value in the form of better decision making
    or more efficient exploitation operations and management. Keywords: smart farming;
    IoT farming; agriculture smart system; WSN agriculture; digital farming 1. Introduction
    Precision agriculture (PA) consists of managing crops by observing, measuring,
    and acting against the many variable factors that affect them. Systems for PA
    can be based on satellite navigation systems or terrestrial systems for geographic
    information and sensors located in the plot. These systems collect information
    to be used to make decisions with greater precision and to optimize crop yields.
    PA contributes to producing a more efficient and ecological agriculture. It allows
    saving on phytosanitary products, fertilizers, and reducing the amount of nitrogen
    used. PA reduces costs and optimizes agriculture. It also reduces the environmental
    impact by optimizing the use of water, pesticides, and machinery fuel; thus, greater
    production is obtained with fewer resources. In order to develop efficient PA
    systems, there is an increasing trend towards using smart decision systems (SDS).
    The acceptance of SDS solutions in many industrial sectors that specialize in
    agriculture is limited by the fact that building an SDS requires a significant
    investment of time and knowledge. If it is to benefit from technological advances,
    agricultural activity has therefore to absorb not only technical expertise, but
    also skilled knowledge of engineering. The Internet of Things (IoT) [1] can be
    used for that purpose, despite several immense challenges linked to big data analytics,
    cloud computing, and new business models in SDS. These features typically include
    intelligent assistance with the implementation of technology and its maintenance
    and use. The concept of smart farming is summarized in Figure 1, together with
    the management cycle as a cyber-physical system, leading eventually to smart online
    devices capable of controlling a range of farming systems. Figure 1. The cycle
    of smart farming data management. Sundmaeker [2] reported rapid developments in
    the IoT and cloud computing, applied in this paper to a field known as smart farming.
    Algorithmic training processes for decision-making support are highly complex
    tasks, with many problematic issues found in models that are automatically induced
    from data through big data applications [3]. Perhaps the most problematic is the
    value chain that refers to the sequence of activities from data capture to decision
    making, involving data marketing, decision trees, and rule injection procedures.
    The advantage of these models is that they consist of individual units of knowledge
    (rules) that can be separately viewed, evaluated, processed, deleted, and even
    edited. In a business process [4], for example, work laid out in a set of logically
    related tasks can be performed to achieve a defined business outcome. Big data
    represents the information assets that are characterized by high volumes, high-speed
    processing and a variety of inputs. Processing such information requires specific
    technology and analytical methods [5] for their transformation into a value chain.
    This paper presents a complete implementation of a smart decision support system
    prototype, which automatically learns decision rules from data, thereby permitting
    the domain expert to edit the resulting rule base, which can apply the rules to
    achieve incoming objects. As agriculture consumes about 70% of all fresh water
    resources, one important aspect of green farming is economical and efficient use
    of water [6]. Water consumption percentages can be decreased through efficient
    water management, where irrigation needs are adjusted to supply. Decision trees
    generate rules to enhance the use of irrigation water, fertilizers, pesticides,
    etc. A web platform can convert the results of data-based decision making into
    user-friendly public information that is only posted following a decision maker
    review process. The major advantage is integration into a unique platform to control
    farming decisions such as irrigation system control, fertilization, pesticides,
    and an open data network, all in one. In addition, our system includes rules based
    on variable-rate irrigation (VRI) [7]. VRI is a new technique that allows optimization
    of irrigation application, considering the status of field and weather. In most
    cases, these systems are implemented by using a center pivot irrigation system
    that can reduce the total irrigation water volume required to grow field crops.
    According to Reference [8], this kind of system is able to reduce irrigation water
    use by 8% compared to uniform irrigation application. Considering this idea, we
    designed [9], developed, and tested an intelligent system for irrigation control
    of urban lawns. The system is based on the use of a multisensor node composed
    by humidity and temperature for soil and air, as well as a rain sensor. The multisensor
    node is controlled by an intelligent algorithm that takes into account the real
    time values provided by the sensors and the stored data of previous measurements.
    The intelligent algorithm is responsible for analyzing the data and deciding on
    the amount of water to be used in a given area. Using actual annual meteorological
    values of a city with different water requirements, the system’s operation was
    simulated. The results showed that for a landscaped area of about 140 ha, we could
    save around 6% of the irrigation water, which would be equivalent to about 22
    million liters of water. Finally, the complete system behaves as a collaborative
    platform, taking into account the experience of other users and previous events
    introduced into the system. A system with these features can help farmers to enhance
    the activity sustainability, at the same time, that a more controlled use of chemical
    products and natural resources will protect our environment and groundwater resources.
    This study is organized as follows. Section 2 will present the reasoning behind
    the study and related works. Section 3 will describe the individual steps of the
    preparation process of a classification rule set. Section 4 will then detail the
    software components of the engine and, in Section 5, the web platform and the
    processing of open data will be outlined. Finally, in Section 6, the conclusions
    will present the advantages of the demonstrated model and future avenues of work
    will be suggested. 2. Related Works The generation of “business rules” from data-mining
    results is an emerging research area. To the best of our knowledge, the only publicly
    available software solution to business rule learning is Rule Learner, which forms
    part of the Open-Rules Decision Management System. According to the SOA paradigm,
    software should function as cooperating services, as described in a previous work
    [1]. However, there have been several experimental systems developed in the machine
    learning community with related functionality. The Drools system [3], used in
    our solution, is a business rules management system that combines user needs and
    constraints in the search space with interactive mining. The interactive nature
    of both systems, MIME and Drools, can help to address the excessive number of
    rules that typically form the output of rule learning. Additionally, in Reference
    [4], we showed that the database-pruning algorithm can significantly reduce the
    number of rules that Drools outputs, without adversely impacting on the quality
    of the classifier. The smart farming decision system proposed in this paper is
    called PLATEM. Drools is the core of this system, which is integrated in a single
    web application. The user can launch multiple farm functionalities, export the
    results that are selected, and apply the rules on test data in auto mode. The
    rule-learning algorithm used in Drools for building the classifier from association
    rules is evaluated and described in detail in the following sections. The software
    solution is presented and implemented in demo form. Its main contribution, with
    respect to the previous results in References [5,6], is in the integration of
    the periodically sampled indoor and outdoor irrigation system linked to a wireless
    sensor network, the SDS, and the web, which together form the complete PLATEM
    system. This pervasive paradigm [10] of the Internet of Things (IoT) is to increase
    the value of the information generated by the number of interconnections between
    people and gadgets, denoted by things, and to transform of the processed information
    into knowledge for the benefit of mankind and society. The architecture of the
    IoT unit [11] is built from a man-like neural network (MLN) model and its modified
    model. Ubiquitous IoT refers to the global IoT and its integration in multiple-unit
    IoTs. Its architecture employs a social organization framework (SOF) model. The
    models for future IoTs are not only helpful to interpret the relationship between
    IoT and the real world, but are also beneficial for the implementation of IoT
    in its current form. Vazquez et al. explored [12] the different criteria for designing
    IoT architectural solutions, together with illustrative examples of prototypes
    that have implemented these approaches. Likewise, Misra [13] proposed a community
    detection scheme in an integrated Internet of Things (IoT) and social network
    (SN) architecture. The paper follows a graph mining approach to solve the problem
    in a complex network of IoT and SN. There are a few studies in the literature
    on community detection in SNs; however, to the best of our knowledge, there are
    no specific studies that address the integration of IoT and SN architecture. Atzori
    [14] analyzed the major opportunities arising from the integration of social networking
    concepts in the Internet of Things, presenting the mainstream research activities
    and pointing to the most critical technical challenges. Smart farming technology
    is continuously reinventing new business models using real-time data with automated
    data-acquisition devices. The sector needs open infrastructure between technologies,
    because of a concern that key data processing techniques may become the exclusive
    domain of multinational AgTech corporations. In the current market, applications
    developed by AgTech corporations and AgBusiness companies, with patented specifications,
    are commonly found for machine manufacturing processes. There are also applications
    that function exclusively with irrigation. These underlying reasons prompt us
    to work towards integrated components in technology, both for device interaction,
    such as fertirrigation controllers, and for data processing, to produce information
    for greater agricultural efficiency. Basing our work on agricultural knowledge,
    and in consultation with individual farmers and agronomists, the focus of this
    work is on the development of a platform that integrates the core control operations
    and that monitors data on crop yields, in order to build on synergetic results
    from multidisciplinary expertise. PLATEM PA is a combination of a smart fertirrigation
    manager application that displays historical data, and social networking forums
    that share productive data. The main complexity of such applications is that they
    require collaboration between many different elements with different contributions
    to the data values and related decisions over the consequential actions. An overview
    of current European applications in PA is presented below, identifying the major
    functions of each one in comparison with PLATEM PA. Table 1 shows the aspects
    that PLATEM introduces in relation to the different elements of other smart farming
    platforms. The integration of several tools in the main user profile is central
    to PLATEM, enabling the development of a social network between professionals
    in different areas where they can discuss data acquisitions, notifications, and
    crops risks. The ultimate goal is an open communication protocol and open data
    platform between large precision agriculture technologies, oriented towards indoor
    and outdoor VRF and VRI. Table 1. Smart farming platforms comparison. Smart-Akis
    [15] represents the application of modern information and communication technologies
    (ICT) in agriculture, leading to what can be called a third Green Revolution.
    Agrivi [16] is a crop management software for crop planning, monitoring, and analysis.
    Advice and relevant data on tillage, sowing, fumigation, fertilization, irrigation,
    and harvesting, and almost all other activities, can be accessed with a few clicks.
    In addition, volumetric calculations, and costs and hours of work are suggested
    for each activity. The processes, based on best practices gathered in relation
    to over 100 crops, are designed to improve productivity. The main objective of
    the sigAGROasesor [17] project is the development of decision support tools for
    the agricultural sector, through a web platform for online services to farmers,
    assisting efficient, effective, and competitive farming activities, based on environmental
    and social sustainability. In relation to a smart water-saving irrigation system
    [18], X, Kehui et al. published a scientific paper based on an intelligent irrigation
    programmer with sensory connectivity and 433 MHz ISM communication. The research
    focused on applications in precision agriculture, using a wireless humidity sensor.
    A network of wireless sensors was configured to monitor the moisture content and
    the amount of water in the field soil samples. The architectures of both the wireless
    sensor network and the intelligent system were based on the network of sampled
    irrigation controllers. The irrigation test was performed with real-time humidity
    data and expert inputs. A feasible system was demonstrated in the rice cultivation
    process, and a good exploration in the field of precision agriculture and sustainable
    water resources. The APOLLO project [19] shares similarities with the PLATEM PA
    project proposal design. The technology was analyzed in depth for the consolidation
    of the PLATEM PA system, improving its potential for use with other innovative
    ultra-low power communications and dynamic routing protocols, and in the latest
    business rule engine models applied to the multimedia platform. APOLLO aims to
    bring the benefits of precision agriculture to farmers through affordable information
    services, making extensive use of free and open Earth observation data, such as
    those provided by the EU Copernicus program. These services are intended to assist
    agricultural decision making, while observing crop growth and conditions, providing
    advice on irrigation and tilling, and providing crop estimations. Ultimately,
    these interventions are designed to reduce agricultural inputs and increase competitive
    production levels and benefits. As Table 1 shows, the novelty of our platform
    is that PLATEM PA can be considered as a collaborative tool where farmers can
    post their experiences. It is able to monitor the different parameters of soil
    and environment to better growth of crops. In addition, PLATEM PA is able to improve
    their decision, regarding to actions to be performed over the field, taking into
    account previous stored information and farmers posts. Finally, its operation
    is based on the use of an intelligent Virtual Routing and Forwarding (VRF) and
    Virtual Router Instances (VRI). PLATEM PA therefore represents a competitive sample
    of European supplier networks focused on Precision Agriculture management and
    a multimedia platform with basic group tools to control and monitor data and relations
    between all participants for sharing results. The PLATEM system presented in this
    paper can be used to accomplish the task through a chain of web-based graphical
    tools, running on standard BRMS software with open-source formats. Our technological
    solution is capable of adapting “high-tech tools” to be used by farmers, many
    of whom may have little or no technical hi-tech expertise. One problem is the
    necessary automatization of several systems (irrigation controller, fertirrigation
    pump, pH sensor node, …) from different manufacturers that need to be adapted
    to specific communication protocol. PLATEM PA combines several data integration
    processes in a single easy-to-use platform with a standard communication protocol.
    Although the final system will be composed by both hardware part (in charge of
    collecting data from the field) and software part (in charge of processing data),
    this paper is focused on data computation and not in the agronomic side and to
    perform the tests we will take a data base with the needs of fertilization, weekly
    irrigation liters and different Kc for corn varieties of alfalfa, barley and wheat.
    3. Rule-Based Preparation Work The first step to develop our management platform
    was to know the variable inputs the system has and how they have to be processed
    by using the rules. Taking into account that the final goal is to enhance the
    sustainability and competitiveness of the activity, the system also includes business
    process management (BPM) and business rules. It is also important to define the
    platform architecture. This section therefore presents the server-based decision-making
    structure for decision making on irrigation device settings, which processes data
    inputs on edaphic and environmental conditions, images of crop growth, and crop
    status. The objective of this server-based decision-making structure is the integration
    of a BPMS and a business rules management system. A middleware data-exchange system
    serves as a link between both. The middleware that serves to relay data from Bonita
    BPM and Drools includes the following developments: Performance of an integrated
    architecture for a business rules management system and a business rule management
    system (BRMS). Dialogue through the intermediate middleware component that is
    responsible for the data management model and the rule-based activities. Bonita
    Soft provides connectors to interact with the Drools manager that connect with
    the Drools API Engine to run the execution of a certain rule, in order to obtain
    results that conclude with the previously triggered decision-making process. The
    process of preparing a rule base in Drools can be divided into several consecutive
    steps that are presented in Figure 2, wherein several layers are created: data
    preparation, association rule learning, rule selection, classification model testing,
    rule set editing, and deployment of rules. Figure 2. Farming smart decision systems
    (SDS) flow diagram. These steps, which can be performed with a standard web browser,
    are described below in Figure 2: Data are collected for the smart decision system,
    (soil sensors, leaf sensor, etc.) weather and environmental conditions, and machinery
    (pivot irrigation, controllers, pumps, etc.) from a range of devices, and the
    information is then transmitted through the network coordinator to the middleware.
    These data, once pre-processed and formatted, are sent to the rule engine for
    rule-based processing to produce relevant results. Historical database information
    may be required for some rules. Having obtained the results, the coordinator module
    communicates with the appropriate services (e.g., pumps, irrigation controllers,
    etc.), sends their recommendations via virtual routing and forwarding (VRF) and
    virtual router instances (VRI), and reports either to the farmer profile or directly
    to systems installed on the farm for automated implementation, if the system device
    is configured to do so. The type of setting and the basic information for a range
    of settings—i.e., turn on, watering time, turn off—are configurable by the farmer
    with appropriate permissions for automatic SDS adjustment. 3.1. Data Preparation
    The user starts with a dataset for training the classification model. Typically,
    the dataset is divided into a training and a testing part. The design of data
    management and processing procedures, associated with a long-term wireless monitoring
    system, can join all these farming systems and data acquisition elements (see
    backend structure in Figure 2). The data from WSN is stored in a MySQL database
    via middleware through a management process and a communication socket. The user
    can, for instance, upload a profile of crops and fields that will be stored in
    the MySQL database. The weather forecast updates from a weather server can then
    be added, including field coordinates and responses with forecasts in XML, which
    will also be stored in MySQL as the weather profile. Data from aerial images (drone
    or satellite) may be manually uploaded for users via web view (Image and NDVI
    index file). The general structure of the system is shown in Figure 3, where the
    server layers are described: database, middleware, Server Web, BPM, and responsive
    web view. Figure 3. Farming SDS backend structure. The system supports several
    types of pre-processing. Middleware prepares information to store, and the user
    can do pre-processing using intervals of determinate values. The user can then
    merge values at different intervals. 3.2. Association Ruler Learner As a rule-learning
    algorithm, the current version uses a simple procedure implemented in the system.
    The user is required to input a defined rule pattern for the crop and field profile
    to commence the associative rule learning process in Drools. The user then selects
    the attributes from attributes and selects a list in a rule pattern container
    DB. By default, the attributes are connected with a conjunction, but the system
    also supports disjunction and negation connectives. New rules may be introduced
    for each attribute in the rule pattern as a set of its values considered during
    the matching process. 3.3. Rule Selection The user can then change the parameters
    of the rule-learning task, typically by introducing changes to the rule pattern,
    sometimes with a different location or season; some values will therefore need
    adjusting. The rules are saved, grouped by data mining tasks, and the rule container
    updates the attributes of each one. For classification, it is essential that the
    rules entered on the clipboard be chosen to maximize data accuracy. The accuracy
    is computed either on the training dataset or on a separate test dataset. The
    system exports the rule results saved in the Rule Clipboard to the MySQL, where
    middleware is then able, for example, to send reconfiguration instructions to
    the irrigation controller. The system can also be used to post user friendly data
    in web view, informing users of the results of certain rules. 3.4. Rule Editor
    The results can be suitably combined (association rules) for the construction
    of a classification model selected from multiple data-mining tasks. The user can
    export/import rules from the Rule section into the “business rules” base. For
    practical purposes, the rules are internally saved in a JSON format. The system
    then converts the rules into the Drools DRL format. The user can display the rules
    saved in the “business rules” knowledge base and edit them using a web interface.
    An irrigation schedule business process is displayed in Figure 4. Figure 4. Diagram
    of business process management (BMP) process. 4. Software Components Once the
    platform architecture and the rules association had been defined, it was required
    to develop the software part that would implement our web platform. To perform
    that, this section presents the implementation of server rules in the Drools engine.
    The server has three main components. The first one is an application that is
    able to register the external sensor data in the system. A device or application
    simply registers as a data source by sending information via socket communication
    to the middleware, which then prepares the data in a specified format, depending
    on the type of sensor. The system architecture is divided into the following layers:
    User interface: enables farmers, providers, and technics to interact with the
    system and execute computerized workflow activities. To do so, it invokes operations
    of the interfaces published by the business layer. It is a set of HTML and Php
    pages hosted on an Apache web server that are displayed in a web browser. Business
    layer: responsible for making calculations, queries, and invoking the execution
    of business rules. To do this, it accesses the data layer and the rules services
    layer. It is a set of PHP pages hosted on an Apache web server. Data layer: in
    charge of managing the system’s database, which contains information about all
    the data of the process and its stages for each field. It provides interfaces
    so that the business layer can access it. To implement this layer, the MySQL database
    management system was used. Service layer of business rules: exposes interfaces
    through web services to business rules. It is invoked from the business layer
    and executes the rules contained in the rules layer. It is made up of web services,
    programmed in Java, which run on a Tomcat web server. Rules layer: makes it possible
    to manage business rules, for which it provides interfaces to the rules services
    layer. To implement this layer, a free, open source, java-developed BRMS was used.
    The BRMS is deployed on a Tomcat web server. Figure 5 shows the architecture of
    BRMS used by our platform. As we can see, the main component of our BRMS is an
    Apache web server, which uses the data stored in our database (DB). In order to
    enhance our server, we used a Tomcat web server. Tomcat is an extension of Apache
    that works as a container of servlets, and can help us to include new functionalities
    to our server. Using the servlets, we can extend applications held in web servers
    to be seen as JAVA Applets. To generate and manage the different rules we need
    to enhance the system performance, we used Drools, a common tool used for managing
    business rules that we have adapted to our application. These rules are sent to
    the Tomcat web server through the API. These rules are sent to the Apache web
    server, which combines them with the data stored in the DB. Finally, the users
    can see the results of these decisions by using a web browser and surfing the
    different options the platform offers. Figure 5. System architecture that integrates
    Drools into the workflow. The following section introduces the Drools management
    based on the Rete pattern-matching algorithm [20]. It provides the basis for a
    more efficient implementation that can check each rule against facts in a knowledge
    base, firing the rule if necessary. Figure 6 shows the *.drl file where basic
    rules for operating with Drools are located. Figure 6. SDS verification rule definition.
    There are several benefits of this algorithm, such as reducing or removing redundancy
    and efficient memory erasure when the facts are retracted. The rule container
    refers to the part of the database where the rules of the system are saved. There
    are internal entities that contain the parameter rules of each individual rule
    set: system irrigation functionality, fertilization, pest control, agronomy parameter,
    and weather; there is a rule for each type only in the basic demo mode. The system
    needs to gain experiences and broker new rule-based relations. Each rule contains
    two main sections: the conditions section and the actions section. The next table,
    Table 2, is a resume of tools and related main features were used in the PLATEM
    development of its different levels. Table 2. SW technologies used in the PLATEM
    system. 5. Web Platform View The last step to make the web platform usable was
    to develop a graphic user interface (GUI) to facilitate its use by farmers. Additionally,
    PLATEM should be tested in terms of data collected and operation. In this section,
    the web view development is presented, with the aim of offering a high usability
    level for non-IT-experts. PLATEM incorporates a web-based data-mining system [21,22].
    The web provides an important interaction model for the smart farming IoT by letting
    users obtain device-related information and, in some cases, control their devices
    through the ubiquitous web browser. The conventional web is a convenience we enjoy
    as we search for information, irrigation Tele Management control, and post historical
    data in social networking. Users can refer to devices that are part of the IoT
    and that are directly accessed, monitored, and controlled by web technologies
    as the Physical Web: web technology + IoT. The web interface supports pre-processing
    definitions such as uploading data to DB, and post processing ones such as the
    data results viewer [23]. The backend is written in PHP; the frontend is based
    on PHP/HTML5, CSS3, and JavaScript libraries. The PLATEM platform is a web view
    application written in PHP. The user module can share restricted postings and
    control security. Communication is performed through a MySQL extension. MySQL
    is great at performance database technology, but we see databases becoming more
    popular when they simply provide more and more features that are easily connectable
    and manageable with existing systems. The more features a database has, the easier
    it will be for users to develop their systems, thus making them better and raising
    the general level of the applications that are made through MySQL. Since MySQL
    is very popular, any major improvements or added features affect many people.
    The web view uses direct communication with Drools only in parts, with specific
    functionality where it is accessible through REST web services in JSON. The remaining
    fields interact, such as: make a post, likes, upload images, write commentaries
    to status or in images, search and list friends, friend request (send and accept),
    send messages to friends. They are all accessible through the web interface without
    setters to the rule engine. In addition, there is a settings view to update user
    profiles that is accessible to friends, which can be edited (clicking on Edit
    Information). The next important point is a notifications menu located on the
    top-right of the screen in main view, where the notification icons flash for alerts/notifications,
    friends, and messages. The user can search for other users in the database by
    writing the name in edit text “Search People,” and can view an open profile, send
    a message, and add a name to a list of friends. Figure 7 shows the My Friends
    list with a “View profile” button and “Send message” button. Figure 7. My Friends
    list. Testing Scenario In this section, the performance results will be explained
    at the level of erroneous data, in the sensor environments, and in the traffic
    generated for two different transmission scenarios. The network server analysis,
    another important aspect, shows the server bandwidth. A real scenario was simulated
    with virtual users where they pretended to be farmers in action, making queries
    and publications in their virtual profiles to check the server response capacity,
    in which a query was analyzed and the data were simultaneously fed into the database
    and the connections. The results were very positive, with low usage of system
    capacity. Figure 8 shows a sample of the server test. On the first graphs, the
    number of queries appear, and a login action test period with several database
    queries. Figure 8. Database access analysis of query actions. Figure 9 shows a
    sample of the server test. The graph shows that the number of connections to DB
    is in a period of login action. Figure 9. Connections to DB by processes. Network
    traffic can be displayed, as shown in Figure 10. The insert process starts when
    PLATEM adds the user as new friend, and a request can then be sent to the user.
    Figure 10. Network traffic in the test scenario. The capture generated by Wireshark
    of the server bandwidth and response time test during user posting of an uploaded
    image on the social network can be seen in Figure 11. This scenario implies the
    dedication of network server resources at a high level. Optimal performance of
    this task is the key to the proper functioning of the system. It is possible to
    analyze user queries and server data responses, where the length of each package
    is marked with the server response time. It may be the case that the data are
    images or big data sets. The server was capable of facilitating basic navigation
    for many users on the multimedia platform where many sender packets are ACKs,
    but server communications were congested when responding to big data, such as
    images, tables of historical data, and some user posts. The network analysis was
    based on uploaded messages with image posting, and the server network had to allocate
    additional resources for uploading and saving images. Figure 11. Network analysis,
    server traffic. Additionally, through the platform, we can collect data from sensors
    placed in the field, such as temperature (see Figure 12) or wind speed (see Figure
    13). Figure 12 and Figure 13 show the average temperature per day (in °C) and
    average wind speed per day (in m/s), respectively, measured over 10 months. These
    values are used to calculate the irrigation needs. Figure 12. Average temperature
    measured over 10 months. Figure 13. Average wind speed measured over 10 months.
    An example of the rules implementation on the server is given to solve a problem
    involving nitrogen application with an irrigation system. The dosages can be tuned
    with a nitrogen adjustment rule, e.g., as shown in Figure 14, in this case a PossibleFertiEvent
    rule that is capable of detecting the potentially low vegetation index in one
    part of a field, labelled area 1. The rule conditions determine when the action
    has to be implemented. In this example, two events must occur: manual user upload
    of the index calculation data of the field, with an NDVI level lower than 0.42,
    and pressure sensor detection of an operational irrigation system ready to begin
    fertilization. These real-life events are mapped to events in the system, dependent
    on LowNDVI and WaterPressureEvent. When all the conditions are fulfilled, the
    new event can be created. The last line of the actions section inserts this event
    in the rule engine. In this way, the new event can be used by other rules. Rules
    give great flexibility to the user to combine low level events and higher-level
    events, which should trigger proper services and generate user notifications.
    Drools Guvnor rule management tools provide a user-friendly interface for building
    rules so the user does not have to know all the language details, e.g., possible
    Low level on Vegetation Index detected in Aerial Mapping Data changes. Integration
    with service layers was also tested with sensor data and notification services.
    Complex events added several additional dimensions to the monitoring process.
    It was proven in the test scenario that the decisions based on extra assumptions
    were more accurate. Figure 14. Event triggered. Users have the option of sharing
    an NDVI index image in PLATEM view. The data is stored in numerical form in the
    DB, and as an image for visual display of the NDVI index. See Figure 15. Figure
    15. User post sharing NDVI results. PLATEM supports the auto notification mode
    when posting directly via JSON to the user web profile and when posting new alerts
    either for user friends or for the general public with the business rules engine.
    Figure 16 shows PLATEM predictions of the fungal mildew risk factor based on the
    historical weather DB, the forecast, and thermal integral. Figure 16. Auto post,
    rule triggered. The irrigation management application has a high usable visual
    functionality backed up by an intelligent system, which adjusts the irrigation
    schedules that are introduced on the basis of the variables acquired by the sensors.
    In this way, intelligent programming can be achieved for farmers with simple programming
    settings. Smart conditions come from weather environment data, plant growth status,
    edaphic data, and aerial data from NDVI images (UAV or Satellite). The irrigation
    manager needs a basic irrigation configuration that will eventually be capable
    of auto-tuning with sufficient inputs. Figure 17 shows the irrigation sectors
    of a single controller. Figure 17. Irrigation controller view. Each program can
    be modified by clicking on a program number that will launch the edit view. Basic
    parameters can be adjusted to start the work (see Figure 18). The system will
    adjust itself on the basis of information from sensors, images, and weather conditions.
    The type of start (weekdays or intervals), add restrictions, time start, and additional
    starts can all be added. Figure 18. Irrigation edition parameters view. A graphic
    view of the historical irrigation schedule was introduced to monitor total water
    consumption, and to establish water consumption levels in each irrigation sector,
    irrigation cycle, and fertirrigation event, all presented as basic visual data
    in a user-friendly way for farmers. When the crops are harvested, and at any other
    time, the irrigation records (see Figure 19) can be compared with past weather
    conditions to establish relationships between them. Figure 19. Historical water
    programs. Finally, PLATEM allows the farmers to graphically see the irrigation
    needs as a function of the measured values in the field and weather (see Figure
    20). Figure 20. View of irrigation needs of PLATEM. 6. Conclusions and Future
    Work In this work, we have presented the results of new decision rules to create
    variable rate irrigation parameters and variable rate fertirrigation rules for
    parametric optimization of agricultural inputs. In addition, we tested a new multimedia
    platform for user manager (farmer) profiles to notify events, to share postings
    and data with the community, and to interact with the irrigation–fertirrigation
    system controller. Comparing our study with other applications, we can highlight
    the potential of PLATEM: that integrates all the tools that a farmer may need
    on a day-to-day basis, so that many fertirrigation operations can bring in results
    with a rule engine and a list of rules or models based on historical data acquisition
    and user-inserted values. Another important function is information sharing through
    forums with input from agronomists, agricultural technicians, and other farmers
    on doses, plagues, water restrictions, etc. Work continues on expansions of the
    rules for the integration of the business engine system. The goal of this integration
    is to present the basic user-demanded rules defined in the system, enabling a
    simple and unique functional platform for smart farming in irrigation areas, both
    under cover and in the field, for fertilization and pest control. In future work,
    further development of smart system applications will be necessary, and is likely
    to produce two opposing supply chain scenarios: one with further integration of
    the supply chain, in which farmers have private data, and another in which farmers
    are empowered by big data and open collaboration and can easily switch between
    suppliers, sharing data with agricultural organizations and the Ministry of Agriculture,
    and participating in short supply chains rather than integrated long supply chains.
    Currently, PLATEM is working well for relatively small data sets. A further action
    required to process bigger amount of data is to apply different decision-making
    tools, since the rule engine and decision tree become inefficient because of the
    swapping of training tuples in and out of the main memory. The situation is likely
    to navigate a steady course between these two extremes differentiated by cropping
    methods, commodity, market structure, etc. In this work, the use of open data
    is fostered with the aim of promoting communication channels between farmer, researcher,
    commercial intermediary, and technological expert. Another focus is on the extension
    of the system that would allow mixing rules from multiple datasets in a single
    knowledge base and a common communication protocol through various sources, e.g.,
    manufacturers of irrigation controllers, real-time information from satellites,
    and weather forecasting servers. Finally, we have to consider supporting alternative
    backend rule learning adjusted to each user profile (horticulture, cereal, and
    fruit farmers, etc.) to classify the rules on use in the rule container. The promise
    of big data in agriculture is alluring, but the above challenges have to be addressed
    for increased uptake of big data applications. Although there are certainly technical
    issues to be resolved, we recommend focusing on the most significant obstacles
    above all, the initially identified governance issues, and the design of suitable
    business models. Author Contributions C.C.B. designed the platform. J.L. and S.S.
    conceived the test platforms. J.T. contributed to the results discussion. All
    authors have contributed writing the paper. Funding This paper has been partially
    supported by the European Union through the ERANETMED (Euromediterranean Cooperation
    through ERANET joint activities and beyond) project ERANETMED3-227 SMARTWATIR
    and by the “Ministerio de Ciencia, Innovación y Universidades” through the “Ayudas
    para la adquisición de equipamiento científico-técnico, Subprograma estatal de
    infraestructuras de investigación y equipamiento científico-técnico (plan Estatal
    i+d+i 2017-2020)” (project EQC2018-004988-P). Acknowledgments This paper has been
    partially supported by the European Union through the ERANETMED (Euromediterranean
    Cooperation through ERANET joint activities and beyond) project ERANETMED3-227
    SMARTWATIR and by the “Ministerio de Ciencia, Innovación y Universidades” through
    the “Ayudas para la adquisición de equipamiento científico-técnico, Subprograma
    estatal de infraestructuras de investigación y equipamiento científico-técnico
    (plan Estatal i+d+i 2017-2020)” (project EQC2018-004988-P). Conflicts of Interest
    The authors declare no conflict of interest. References Atzori, L.; Lera, A.;
    Morabito, G. The Internet of Things: A survey. Comput. Netw. J. 2010, 54, 2787–2805.
    [Google Scholar] [CrossRef] Sundmaeker, H.; Verdouw, C.; Wolfert, S.; Pérez Freire,
    L. Internet of food and farm 2020. In Digitising the Industry-Internet of Things
    Connecting Physical, Digital and Virtual Worlds; Vermesan, O., Friess, P., Eds.;
    River Publishers: Delft, The Netherlands, 2016; pp. 129–151. [Google Scholar]
    Chen, M.; Mao, S.; Liu, Y. Big Data: A survey. Mob. Netw. 2014, 19, 171–209. [Google
    Scholar] [CrossRef] Davenport, T.H.; Short, J.E. The new industrial-engineering-information
    technology and business process redesign. Sloan Manag. Rev. 1990, 31, 11–27. [Google
    Scholar] De Mauro, A.; Greco, M.; Grimaldi, M. A formal definition Big Data based
    on its essential features. Lib. Rev. 2016, 65, 122–135. [Google Scholar] [CrossRef]
    Fry, A. Facts and Trends, Water. In World Business Council for Sustainable Development;
    Earthprint Ltd.: Stevenage, UK, 2005. [Google Scholar] Haghverdi, A.; Leib, B.G.;
    Washington-Allen, R.A.; Ayers, P.D.; Buschermohle, M.J. Perspectives on delineating
    management zones for variable rate irrigation. Comput. Electron. Agric. 2015,
    117, 154–167. [Google Scholar] [CrossRef] Sadler, E.J.; Evans, R.; Stone, K.C.;
    Camp, C.R. Opportunities for Conservation with Precision Irrigation. J. Soil Water
    Conserv. 2005, 60, 371–379. [Google Scholar] Marín, J.; Sendra, S.; Parra, L.;
    Lloret, J.; Mauri, P.V.; Masaguer, A. Smart Irrigation System for the Sustainable
    Watering of Urban Lawns. In Proceedings of the New Engineering Concepts for a
    Valued Agricultura Conference (AgEng 2018), Wageningen, The Netherlands, 8–12
    July 2018. [Google Scholar] Cambra, C.; Sendra, S.; Lloret, J.; Garcia, L. An
    IoT Service-Oriented System for Agriculture Monitoring. In Proceedings of the
    IEEE 2017 International Conference on Communications (ICC 2017), Paris, France,
    21–25 May 2017. [Google Scholar] Goethals, B.; Moens, S.; Vreeken, J. MIME: A
    framework for interactive visual pattern mining. In Proceedings of the 17th ACM
    SIGKDD International Conference on Knowledge Discovery and Data Mining, San Diego,
    CA, USA, 21–24 August 2011; pp. 757–760. [Google Scholar] Vazquez, J.I.; Ruiz-de-Garibay,
    J.; Eguiluz, X.; Rentería, S.; Ayerbe, A. Communication architectures and experiences
    for web-connected physical Smart objects. In Proceedings of the 8th IEEE International
    Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops),
    Mannheim, Germany, 29 March–2 April 2010; pp. 684–689. [Google Scholar] [CrossRef]
    Misra, S.; Barthwal, R.; Obaidat, M.S. Community detection in an integrated Internet
    of Things and social network architecture. In Proceedings of the IEEE Global Communications
    Conference (GLOBECOM), Anaheim, CA, USA, 3–7 December 2012; pp. 1647–1652. [Google
    Scholar] [CrossRef] Atzori, L.; Lera, A.; Morabito, G. From “smart objects” to
    “social objects”: The next evolutionary step of the internet of things. IEEE Commun.
    Mag. 2014, 52, 97–105. [Google Scholar] [CrossRef] Garriz, I.; Gorroti, I.; Cambra,
    C. Smart Agriculture European Platform; Navarra Agraria INTIA: Navarra, Spain,
    2017; p. 223. ISBN 0214-6401. [Google Scholar] Agrivi App. Available online: http://www.agrivi.com/en/re
    (accessed on 13 March 2019). Armesto, A.; Lafarga, A.; Goñi, J.; Orcaray, L. La
    HAD NITRO de sigAGROsesor; Navarra Agraria INTIA: Navarra, Spain, 2017; pp. 26–37.
    ISSN 0214-6401. [Google Scholar] Xiao, K.; Xiao, D.; Luo, X. Smart water-saving
    irrigation system in precision agriculture based on wireless sensor network. Trans.
    CSAE 2010, 26, 170–175. [Google Scholar] Apollo Project. Available online: http://apollo-h2020.eu/
    (accessed on 13 March 2019). Cambra, C.; Sendra, S.; Lloret, J.; Lacuesta, R.
    Smart system for bicarbonate control in irrigation for hydroponic precision farming.
    Sensors 2018, 18, 1333. [Google Scholar] [CrossRef] [PubMed] Ortiz, A.M.; Hussein,
    D.; Park, S.; Han, S.N.; Crespi, N. The Cluster Between Internet of Things and
    Social Networks: Review and Research Challenges. IEEE Internet Things J. 2014,
    1, 206–215. [Google Scholar] [CrossRef] Ji, Z.; Ganchev, I.; Xueji, Z. A Cloud-Based
    Car Parking Middleware for IoT-Based Smart Cities: Design and Implementation.
    Sensors 2014, 14, 22372–22393. [Google Scholar] [CrossRef] [PubMed] [Green Version]
    Ning, H.; Wang, Z. Future Internet of Things Architecture: Like Mankind Neural
    System or Social Organization Framework? IEEE Commun. Lett. 2011, 15, 461–463.
    [Google Scholar] [CrossRef]             © 2019 by the authors. Licensee MDPI,
    Basel, Switzerland. This article is an open access article distributed under the
    terms and conditions of the Creative Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Cambra Baseca, C.; Sendra, S.; Lloret, J.; Tomas,
    J. A Smart Decision System for Digital Farming. Agronomy 2019, 9, 216. https://doi.org/10.3390/agronomy9050216
    AMA Style Cambra Baseca C, Sendra S, Lloret J, Tomas J. A Smart Decision System
    for Digital Farming. Agronomy. 2019; 9(5):216. https://doi.org/10.3390/agronomy9050216
    Chicago/Turabian Style Cambra Baseca, Carlos, Sandra Sendra, Jaime Lloret, and
    Jesus Tomas. 2019. \"A Smart Decision System for Digital Farming\" Agronomy 9,
    no. 5: 216. https://doi.org/10.3390/agronomy9050216 Note that from the first issue
    of 2016, this journal uses article numbers instead of page numbers. See further
    details here. Article Metrics Citations Crossref   59 Web of Science   60 Scopus   87
    Google Scholar   [click to view] Article Access Statistics Article access statistics
    Article Views 10. Jan 20. Jan 30. Jan 9. Feb 19. Feb 29. Feb 10. Mar 20. Mar 30.
    Mar 0k 5k 10k 15k 20k For more information on the journal statistics, click here.
    Multiple requests from the same IP address are counted as one view.   Agronomy,
    EISSN 2073-4395, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Agronomy
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A smart decision system for digital farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Joshi K.
  - Jain S.
  - Patwari A.
  citation_count: '1'
  description: The agriculture sector has always been a crucial factor in India’s
    growth. It is utmost important to bring efficiency and precision in farming. This
    paper proposes the use of a Wireless Sensor Network (WSN) to develop an automated
    and intelligent irrigation system. The SENSEnuts embedded platform is used to
    create and maintain the WSN. The proposed system uses soil moisture data from
    different nodes which are deployed at various locations in the crop field. The
    nodes form a WSN. Each node (consisting of NXP JN5168, a 32-bit microcontroller)
    collects the data regarding the soil moisture and transmits it to the coordinating
    station (through Zigbee) which then takes the decision on whether or not to activate
    the sprinkler/motor pump. The decision is communicated to the corresponding node
    for further action. This enables precise watering only in the dry portion of the
    cultivation field and reduces the wastage of water or overwatering other moist
    areas. Apart from the soil moisture data, readings from the temperature, light,
    and humidity sensors are also transmitted to the coordinator. Such data is useful
    for indoor, underground or nursery crop monitoring. A working prototype of the
    proposed WSN is made and the functionality is verified. The data from various
    sensors is uploaded to the Thing Speak Internet of Things (IoT) platform for remote
    monitoring and further data analytics.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Journal of Innovative Technology and Exploring Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: WSN hardware prototype for irrigation control and multi-parameter plant growth
    monitoring using iot
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 79 papers. The special focus in this conference
    is on Communications and Cyber Physical Engineering. The topics include: Design
    of a smart water-saving irrigation system for agriculture based on a wireless
    sensor network for better crop yield; SVM—A way to measure the trust ability of
    a cloud service based on rank; an optimized five-layer model with rainfall effects
    for wireless propagation in forests; leak detection methods—A technical review;
    text message classification using supervised machine learning algorithms; error
    assessment of fundamental matrix parameters; a two-band convolutional neural network
    for satellite image classification; dimensionally reduced features for hyperspectral
    image classification using deep learning; asymptotic symbol error rate analysis
    of weibull/shadowed composite fading channel; fog computing: Overview, architecture,
    security issues and applications; Vehicle detection and categorization for a toll
    charging system based on TESSERACT OCR using the IoT; transmission spectrum of
    a typical waveguide in photonic crystal with tunable width: Simulation and analysis;
    An anamnesis on the internet of nano things (IoNT) for biomedical applications;
    Minimization of the size of an antipodal vivaldi antenna for Wi-MAX and WLAN applications;
    Physical layer impairment (PLI) aware lightpath selection in WDM/DWDM networks;
    Miniaturized MIMO wideband antenna with L-shaped DGS for wireless communication;
    An enhanced reputation-based data forwarding mechanism for VANETs; statistical
    metric measurement approach for hazy images; image enhancement for fingerprint
    recognition using Otsu’s method; estimation of success probability in cognitive
    radio networks; proposal of linear specific functions for R-L-C as fundamental
    elements in terms of considered specific electric constants.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Electrical Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: International Conference on Communications and Cyber Physical Engineering,
    ICCCE 2018
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Cambra C.
  - Sendra S.
  - Lloret J.
  - Garcia L.
  citation_count: '126'
  description: Wireless Sensor Networks (WSNs), Internet of things (IoT) and aerial
    mapping are nowadays being used very much in agriculture. The challenge of joining
    those technologies requires a new and smart wireless network topology for devices
    communication. Problems like scalability and manageability are important challenges
    when there are many devices. This paper presents the design of a smart IoT communication
    system manager used as a low cost irrigation controller. The proposal is a powerful
    irrigation tool that uses real time data such as the variable rate irrigation
    and some parameters taken from the field. The field parameters, the index vegetation
    (estimated using aerial images) and the irrigation events, such as flow level,
    pressure level or wind speed, are periodically sampled. Data is processed in a
    smart cloud service based on the Drools Guvnor (a Business Rules Manager). The
    developed multimedia platform can be controlled remotely by a mobile phone. Finally,
    we measured the bandwidth consumed when the system is sending different kinds
    of commands and data.
  doi: 10.1109/ICC.2017.7996640
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2017 IEEE International Confe...
    An IoT service-oriented system for agriculture monitoring Publisher: IEEE Cite
    This PDF Carlos Cambra; Sandra Sendra; Jaime Lloret; Laura Garcia All Authors
    90 Cites in Papers 2973 Full Text Views Abstract Document Sections I. Introduction
    II. Related Work III. System Description IV. Experimental Scenario V. Conclusion
    Authors Figures References Citations Keywords Metrics Abstract: Wireless Sensor
    Networks (WSNs), Internet of things (IoT) and aerial mapping are nowadays being
    used very much in agriculture. The challenge of joining those technologies requires
    a new and smart wireless network topology for devices communication. Problems
    like scalability and manageability are important challenges when there are many
    devices. This paper presents the design of a smart IoT communication system manager
    used as a low cost irrigation controller. The proposal is a powerful irrigation
    tool that uses real time data such as the variable rate irrigation and some parameters
    taken from the field. The field parameters, the index vegetation (estimated using
    aerial images) and the irrigation events, such as flow level, pressure level or
    wind speed, are periodically sampled. Data is processed in a smart cloud service
    based on the Drools Guvnor (a Business Rules Manager). The developed multimedia
    platform can be controlled remotely by a mobile phone. Finally, we measured the
    bandwidth consumed when the system is sending different kinds of commands and
    data. Published in: 2017 IEEE International Conference on Communications (ICC)
    Date of Conference: 21-25 May 2017 Date Added to IEEE Xplore: 31 July 2017 ISBN
    Information: Electronic ISSN: 1938-1883 DOI: 10.1109/ICC.2017.7996640 Publisher:
    IEEE Conference Location: Paris, France SECTION I. Introduction Smart technology
    deployed for modern farms grow together with the area of Precision Agriculture
    (PA). Public administration and farmers have access to many multimedia browsers
    and auto-guidance systems provided by agromachinery manufacturers. There exist
    many additional sensors and devices which could add new and useful features to
    the agro-system if they could only be integrated with it. The Internet of Things
    (IoT) can help us to join all these elements. Our motivation to perform this research
    comes up because farmers demand a new multimedia platform to determine the most
    efficient decisions to manage and monitor their agricultural fields, especially
    for fertilizing tasks. Common Agricultural Policy (CAP) 2014/2020 implements new
    points inside of the new term “Greening” [1]. This policy aims to obtain energy
    efficiency and the reduction of fertilizers in agriculture productions. These
    goals can be achieved by applying new technologies in farms with strong traditional
    thinking in growth methods, obtaining productions destined to human consumptions
    in a sustainable and healthy way, while decreasing around 70% the use of chemical
    herbicibes. All these issues require additional management tools and applications.
    It could be interesting to implement a direct integration in some few systems
    but it is nearly impossible to develop it on large scale fields as in the case
    of crop production systems. Information technology (IT) industry is aware of this
    problem and tries to solve it with Service Oriented Architectures (SOA), where
    each module exposes a standard interface for communicating with other systems.
    The current documentation and the tutorial are published on the official website
    [2]. Therefore, SOA principles should be investigated in a distributed smart agro
    big data environment. It is another emerging trend in software integration research
    that is suitable to be used in industry with Complex Processing (CP). Related
    literature demonstrates that there are many requirements for agriculture decision
    [3]. These requirements are focused on environment data collection for big data
    systems, vegetation index decision based systems and Wireless Sensor Networks
    (WSNs) using complex algorithm models or decision systems. Other requirements
    include scalability issues or ontologies for crop production systems. The quality
    and performance of new integration modeling systems should be addressed here as
    well [4]. Autonomous irrigation controller based on a timer is in most cases insufficient
    to satisfy the growing expectations put on the crop production systems. Research
    interests are nowadays focused on integrating aerial images, smart irrigation
    controllers and data originated by other sensors such as soil humidity sensors,
    temperature and crop aerial Normalized Difference Vegetation Index (NDVI) analysis.
    Methods based on combining visual data from several data sources like ground sensors
    or events between them are also an interesting research subject [5]. Scalability,
    effective management, and QoS in large and distributed monitoring systems are
    also important topics that must be taken into account. This paper shows how IoT,
    aerial images and SOA can be applied to large and smart farming systems, which
    should be scalable and easily configurable. It presents the design and development
    of the multimedia platform for precision agriculture (called PLATEM PA). It integrates
    an intelligent IoT irrigation system based on a mesh network using the new aerial
    mapping sensor included in AR Drones with HD cameras to monitor an area for growing
    crops (See Fig. 1). The captured video is used to control the irrigation system
    and the blocking of the sprayers, which may produce problems and crop death if
    they are not properly irrigated (See Fig. 2) [6]. The whole system is based on
    an 868 MHz wireless mesh network. The communication system lets the nodes transmit
    data up to 12 Km. Some previous contributions were described in [7]. The rest
    of paper is organized as follows. Section II describes the state of the art about
    the last technologies applied to agriculture, WSN s and aerial image mapping data.
    Section III describes the communication layers architecture, the Low Energy Consumption
    Wireless Mesh Network as well as the system operation. The entire data source
    is integrated on the context service where data is processed by a rule engine.
    It will be in charge of the matching rules, taking decisions and monitoring data,
    sending notification and computing statistics. The implementation is shown in
    Section IV. Section V presents the conclusion and describes the next steps in
    the development of PLATEM PA. SECTION II. Related Work Some time ago, autonomous
    irrigation controllers were designed using analog technology based on timers.
    In the most trivial case, an alarm event was detected with plastic bottles. If
    the bottle was full of water, the irrigation system was working well. If the bottle
    was empty, the system was incorrectly working due to false positives. Currently,
    most of the irrigation controllers can be manually programmed by mobile messages
    or smartphone applications. With high performance computers, additional features
    can be included, e.g. real time irrigation alarm detection and smart irrigation
    schedule according to the index vegetation or environment data. This section shows
    some of the existing works related to our proposal. E. Playán et al. [8] described
    the evolution of irrigation controllers based on simulation models. They found
    two models. The sprinkler irrigation model, which is based on a ballistic model.
    The sprinkler sends the water to the drops, subjected to a velocity vector, wind
    vector and the force resistance. Another type is the crop model, which combines
    the soil water balance, crop growth, and crop yield by using mathematical equations
    implemented in a software application. We focus this proposal on the real time
    image analysis of corn crops using smartphones or tablets to control the irrigation
    system. Sometimes the quality of water changes can include grit or clay that is
    not captured by the filter of the irrigation system. This may result in important
    problems due to the blockading sprinklers. It is necessary to solve this issue
    because the production during the summer period can suffer a drought in warm days.
    H. Z. Wang [9] explored the architecture using IoT based on heterogeneous sensor
    data. They proposed a design for implementing IoT in agriculture based on cloud
    computing. The design was based on a two-tier storage structure of HBase, which
    is a distributed database with high scalability. The access to the database using
    Map Reduce model was performed using a distributed programming framework. Hence,
    this design provided scalable storage, efficient data access, and facilitated
    other data processing tasks. Fig. 1. Weeds detection on maize crops using aerial
    video processing. Show All Captured images are used to estimate parameters usually
    measured by sensors. Depending on the quality of the video stream and the used
    algorithms, the system can classify vehicles, trace lane changes or even recognizing
    license plates. The system usually requires only one camera per monitored location.
    The aerial image, ground data sensor and environment data must be segmented and
    transformed into objects. Their behavior is recognized and tracked. An example
    of such a system was described in [10]. In this case, high multispectral cameras
    are used to monitor the vegetation index by bands reflection processed on normalized
    difference vegetation index (NDVI) measurement. C. Cambra et al. [11] presented
    an analysis to determine the bandwidth requirements to transmit video in system
    applied to detect problems in the Coefficient Uniformity (CU) of an irrigation
    system. They also analyzed weeds conflicts on maize crop. The key idea of their
    work was to enhance the monitoring tasks with sensors or integrate them with the
    whole sensor network where the aerial sensors are just one type of sensors. Physical
    sensors are connected directly to first level nodes according to their location.
    Nodes create a hierarchical structure. According to the SOA paradigm, software
    should be delivered as loosely coupled and cooperating services, which should
    be described, published and easily discovered. In such environment, new applications
    called business processes can be created by composition of existing services.
    Fig. 2. Aerial video analysis detecting blocked sprinklers. Show All SECTION III.
    System Description This section presents the proposed solution. The proposal is
    based on a WSN connected to irrigation controllers. Layer 2 consists of a network
    coordinator middleware, a storage system and a multimedia platform browser (See
    Fig. 3). Fig. 3. Layered conceptual framework iot data integration service oriented
    service. Show All The goal of PLATEM PA is to build a platform in order to offer
    services to the farmers through multimedia communication (Fig. 4). The proposal
    is adaptable and offers information about the weather of different places, lands
    conditions, and water requirements necessary for improving the farm efficiency.
    We propose to include the potential of mesh networks in a smart irrigation system
    to adapt the irrigation schedule in order to have a better agronomy decision system,
    to improve the efficiency and save resources. Moreover, intelligent channel assignment
    systems are taken into account to avoid interferences between them [12]. Irrigation
    controllers consist of a mesh network that operates at the 868 MHz ISM Frequency
    Band [13] as LoRa WAN [14] or Sigfox [15]. Irrigation controller and 868 MHz communication
    module are designed with low energy consumption technology that can work during
    one year, transmitting data up to 15 km. Lora Alliance describes a LoRa WAN as
    standard specification of low consumption and wide bandwidth to use data acquisition
    devises thought to be implemented in the world IoT. LoRa WAN aims to provide secure
    bi-directional mobility, location and communication services for smart devices
    in mesh networks. Network Middleware is an implementation which is able to create
    a dynamic transmission based on Multi hop routes between the coordinator access
    point and several irrigation controllers. Sensor inputs can be used as well to
    gather environmental data from weather stations. Sensor probes collect data of
    soil moisture and the system functionality such as pressure and flow sensors.
    Fig. 5 shows the mesh network of irrigation controllers. It also includes the
    irrigation sensor events (pressure, flow and pH) and weather data. Any new monitoring
    scheme for event and danger detection [16] can be added easily. Gathered data,
    i.e., data from the field and controller status are stored in a MySQL data base.
    The rule engine are in charge of getting decision and generating notifications
    taking into account previous data from sensors and status controller''s analysis
    to match a possible rule to trigger. The visual user application is used to interact
    and executing actions in the system such as opening a hydraulic valve or showing
    data in regard to accumulated degrees-day temperature of a specific crop. Modular
    mobile sensor devices gather data from any place. It is easy to connect, add and
    remove devices, which suppose a great advantage. Mesh networks increase the mobility
    of nodes because they allow communication without infrastructure. It benefits
    rural areas and landscapes where there is not electricity and, in most cases,
    without GSM or 3G coverage. We deploy a private radio network with dynamic routes
    inside the monitoring area. For example, irrigation controllers are working with
    a digital radio system with the 868 MHz ISM frequency band. The first part is
    the radio receiver, which has a low bandwidth and a data rate of 1,200 bits/sec.
    The narrow band is spaced in time and has more coverage range. The second part
    is a filter with a very narrow band reception, which is better for noise filtration.
    The network middleware (identified as layer 2) has the role to create the best
    route to communicate devices and add new nodes by the method of discovering neighbors
    with the best signal strength. With the study of this parameter, the best route
    to transmit the information is designed. The system also uploads some essential
    information to the database such as the battery status, the signal strength and
    the deviceID. When a packet is transmitted from the coordinator to the node endpoint,
    2 bytes of this packet include the information about the signal strength. Carrier
    blank method is used to listen to the bursts during 1 minute. Nodes are able to
    discover nodes and provide dynamic routing up to 3 hops. During the data transmission,
    the transmitter emits during 10 msec. short periods of data, which improves energy
    saving. The proposed solution for data computing is based on SOA principles in
    order to address flexibility and easily allow the integration of issues presented
    in crop production systems. It facilitates making quick and smart decisions. SOA
    is an architectural style that supports service orchestration. In particular,
    SOA defines the find-bind-execute paradigm to differentiate between service providers
    and service consumers and their loose coupling. We propose to apply this main
    paradigm to the intelligent farming system, instead of creating a direct relationship
    between the service provider (WSN, aerial crop analysis, irrigation systems and
    weather) and farmers (typically a person who produces cereals or group of them).
    All sensor data belong to the service cloud. Then, someone who acts as a service
    consumer explores the cloud in order to find a relevant service. It can bind to
    its endpoint and execute the service. Referring to SOA principles, a prototype
    solution for a mobile monitoring station has been designed. Fig. 4. PLATEM PA
    visual concept Show All Fig. 5. 868 mhz mesh network with low energy consumption
    technology. Show All Fig. 6. Data annotation processing path Show All The server
    has three main components. The first one is an application that is able to register
    the external sensor data in the system. The only requirement for a device or application
    to register and become a data source is to send the values according to the specified
    format which depends to the type of sensor. The next part introduces the Drools
    Guvnor business management based on the Rete pattern matching algorithm [17].
    It provides the basis for a more efficient implementation that might check each
    rule with facts in a knowledge base, firing the rule, if necessary. There are
    several benefits of this algorithm such as reducing or removing the redundancy
    or allowing an efficient delete of memory when facts are retracted. We called
    rule container to the part of data base where the rules of the system are saved.
    There are inside entities to contain the parameter rules of the system irrigation
    functionality, the agronomy parameter rules and the weather rules. Fig. 7. Flow
    diagram of PLATEM PA operation Show All The system needs to get experiences and
    create new relationships between rules. Each rule contains two main sections:
    the conditions section and the actions section. Declarations start with the rule
    keyword followed by the name of the rule. Fig. 6 shows the process and exchanged
    packets performed by the system to implement the different rules, monitor data
    and, finally, show data through the multimedia platform. Fig. 7 presents the flow
    diagram of PLATEM PA Operation. SECTION IV. Experimental Scenario In order to
    test our system, is this section we implement the rule that detects the potential
    fungus attack. This section also shows the resulting overlapping layers obtained
    by the gathered images and, finally, we check the consumed bandwidth of each node
    during different operation phases. Firstly, Fig. 8 shows the PossiblePesticideEvent
    rule which is able to detect the potential fungus attack in a part of the field,
    concretely area 1. Rule conditions determine when the action has to be implemented.
    In this example, two events must occur: accumulated degree-day temperature is
    1300 °C and five days ago rain sensor storage 5 litters/m2. In our historical
    data base crops ago, fungus appeared when barley has 1300 °C life and the environment
    has a high humidity level. When all conditions are fulfilled, the new event is
    created. The last line of the actions section inserts this event to the rule engine.
    In this way, the new event can be used by other rules. Rules give the user a great
    flexibility in combining low level events into higher level events which should
    trigger proper services or notify the user. Drools Guvnor provides a user-friendly
    interface for building rules so the user does not have to know all the language
    details, e.g., possible fungus attack detected on humidity air data changes. Integration
    with services layer was also tested thanks to sensor data and notification services.
    Complex events add several additional dimensions to the monitoring process. It
    was proven that in the test scenario, the decisions based on extra assumptions
    are more accurate. On the other hand, one sensor usually is not enough to make
    the right decision and take the specified action. We used several sensors as temperature,
    humidity air sensor and rain sensor. When using the combination of those events
    the false calibration rate decreases. In order to detect some real-life context
    events, rules were written in special Drools domain and specific language. The
    experimental scenario comprises the context service that may occur barley fungus
    attack through the context service model to detect humidity air in a 1300°C barley
    life. In the following example, the rule engine automatically starts to select
    possible rules and conflicts and identify two possible rules that can be triggered.
    The rule showed in Fig. 8 has been tested in this case. Checking historical of
    accumulated degree-day temperature and humidity air sensor rules of specific crop
    zone conclude that the scenario is perfect to fungus attack. PossiblePestEvent
    triggers and creates new farmer notification to prepare a pesticide sprayer application
    in few days and irrigation program will be pause during 7 days. After sprayer
    application we can check the effects of fungus attack by aerial tools (satellite
    image or UAV Image) that provide PLATEM PA. The gathered and processed data images
    are represented in Fig. 9. Source data layers, such as satellite layer, provide
    the GPS coordinates of the digital terrain model to geo-locate the areas. The
    next source layer, NDVI, is the result of the vegetation index calculation algorithm,
    which decides how is the health of the plant, the stress hydric, or over hydric,
    by gathering aerial mapping images from UAV or Satellite. The computational result
    layer is able to create differential classification zones where irrigation controllers
    have different parameters such as water and fertilizer for each zone. Finally,
    CAD irrigation layer can be used to elaborate maps and redesign the area. The
    last test performed was to check the consumed bandwidth per node during the different
    phases (Fig. 10 and Fig. 11). We performed two different tests. The first one
    was more focused on basic tasks as starting and stopping the system and sending
    data. In this case, Fig. 10 shows that the biggest value of bytes/s is registered
    when we manually open a valve, although the time is very short. The task that
    generates bigger amount of data as a function of the time is the data sending.
    The second test (Fig. 11) was focused on obtaining data during sending commands
    to modify the program contained in the programmer. Fig. 8. Rule engine example
    (fungus attack conflit set) Show All Fig. 9. Layer overlapping (system irrigation
    project layer, index vegetation layer, post processing sectorized layer. Show
    All Fig. 10. Bandwidth consumed by a node during basic tasks. Show All Fig. 11.
    Bandwidth consumed by a node when sending control commands. Show All In this case,
    the actions that implies bigger bandwidth are the sending the programming contained
    in the programmer to the data base of server with maximum values of (130 Bytes/s)
    and sending the keep alive messages with the Received Signal Strength Index (RSSI)
    to the server (108 Bytes/s) although this action is very short. To understand
    the advantages of using LoRa WAN, we have compared a LoRa WAN and a Zigbee network.
    While Zigbee cannot communicate beyond 1,160 m., LoRa WAN can send commands at
    distances up to 12,300 m. A crop fields can have an extensions of 5 hectares.
    Zigbee is not a suitable solution for that. Regarding to the consumed bandwidth,
    its requirements are very similar. SECTION V. Conclusion This paper describes
    the way that communication technologies and intelligent context-service systems
    provide autonomous decision without human interactions. It uses LoRa WAN network
    protocol, which provides a long distance communication with very low energy consumption
    levels. Recent studies on mesh network [18] show the easy adaptation of Wi-Fi
    protocol to connect devices without infrastructure but it has high energy consumption.
    In this paper, we demonstrated the potential of IoT networks on PA. Results demonstrated
    that the use of 868 MHz mesh networks is the best solution for data acquisition
    in farming systems. Our context service proposal is based on SOA principles and
    tools that can enhance the modern agricultural systems and allow the precision
    agriculture. The flexible composition of smart agricultural services, like smart
    and efficiency irrigation season inside of farmer community, is a great advantage
    for irrigation turns and for saving energy and water. The system events and data
    processing rules can be extended during the development process. The irrigation
    services are described to demonstrate the capabilities of the proposed system.
    We also show the future opportunities of such services in the domain of agricultural
    decision systems. This IoT architecture and the way of taking decisions could
    be adapted to many other applications such as emergency rescues [19] among others.
    The crucial part of further development works will be the development of a standard
    communication protocol between irrigation devices, like ISOBus [20], for agro-machinery.
    Moreover, in the first evaluation we have discovered that different irrigation
    controller makers cannot communicate between them or with stations water pumps
    by using private communications protocols, thus, in future works, we want to design
    a standard irrigation communication protocol in cooperation with main irrigation
    manufactures, which will include new secure systems [21] [22]. Authors Figures
    References Citations Keywords Metrics More Like This A Privacy-Preserving Authentication,
    Authorization, and Key Agreement Scheme for Wireless Sensor Networks in 5G-Integrated
    Internet of Things IEEE Access Published: 2020 Implementing the Internet of Things
    vision in industrial wireless sensor networks 2014 12th IEEE International Conference
    on Industrial Informatics (INDIN) Published: 2014 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE International Conference on Communications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An IoT service-oriented system for agriculture monitoring
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Brinkhoff J.
  - Hornbuckle J.
  - Quayle W.
  - Lurbe C.B.
  - Dowling T.
  citation_count: '17'
  description: A new agricultural sensor data logging platform (WiField) is described,
    based on IEEE 802.11 WiFi technology. It is low-cost, low-power, and achieves
    long (>2km) range communication to on-farm WiFi access points. WiFi is an attractive
    choice for this application because of the wide range of other devices that increasingly
    need internet access in farming systems. The WiField devices include interfaces
    for many sensor types; weather, infrastructure (tank and irrigation water levels),
    and soil status sensing. The interfaces and example corresponding sensors include
    SDI-12 (capacitive soil moisture probes), soil tension (matric potential), analog
    voltage and current, UART (water depth sensing using ultrasonic transducers with
    a digital interface), RS-422 (integrated weather stations), one-wire (DS18B20
    temperature sensors) and pulse (flow meters, wind and rain sensors). It integrates
    solar charging of rechargeable batteries, or can be run off disposable batteries
    for at least an entire growing season due to design choices that minimize power
    consumption. It is designed to upload data to cloud services in real-time. The
    data is then processed in the cloud and interactive graphs are produced, so multiple
    users can access up-to-date information in order to make optimized, timely farming
    decisions. The use of the WiField devices in a cotton farming operation is described,
    for scheduling irrigations and determining crop water use through the soil profile.
  doi: 10.1109/ICSensT.2017.8304434
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2017 Eleventh International C...
    WiField, an IEEE 802.11-based agricultural sensor data gathering and logging platform
    Publisher: IEEE Cite This PDF James Brinkhoff; John Hornbuckle; Wendy Quayle;
    Carlos Ballester Lurbe; Tom Dowling All Authors 9 Cites in Papers 392 Full Text
    Views Abstract Document Sections I. Introduction II. System Design III. Wifield
    Device Design IV. Results V. Discussion Authors Figures References Citations Keywords
    Metrics Footnotes Abstract: A new agricultural sensor data logging platform (WiField)
    is described, based on IEEE 802.11 WiFi technology. It is low-cost, low-power,
    and achieves long (>2km) range communication to on-farm WiFi access points. WiFi
    is an attractive choice for this application because of the wide range of other
    devices that increasingly need internet access in farming systems. The WiField
    devices include interfaces for many sensor types; weather, infrastructure (tank
    and irrigation water levels), and soil status sensing. The interfaces and example
    corresponding sensors include SDI-12 (capacitive soil moisture probes), soil tension
    (matric potential), analog voltage and current, UART (water depth sensing using
    ultrasonic transducers with a digital interface), RS-422 (integrated weather stations),
    one-wire (DS18B20 temperature sensors) and pulse (flow meters, wind and rain sensors).
    It integrates solar charging of rechargeable batteries, or can be run off disposable
    batteries for at least an entire growing season due to design choices that minimize
    power consumption. It is designed to upload data to cloud services in real-time.
    The data is then processed in the cloud and interactive graphs are produced, so
    multiple users can access up-to-date information in order to make optimized, timely
    farming decisions. The use of the WiField devices in a cotton farming operation
    is described, for scheduling irrigations and determining crop water use through
    the soil profile. Published in: 2017 Eleventh International Conference on Sensing
    Technology (ICST) Date of Conference: 04-06 December 2017 Date Added to IEEE Xplore:
    01 March 2018 ISBN Information: Electronic ISSN: 2156-8073 DOI: 10.1109/ICSensT.2017.8304434
    Publisher: IEEE Conference Location: Sydney, NSW, Australia SECTION I. Introduction
    There is increasing demand to improve agricultural productivity, with the world''s
    population set to reach 9 billion by the middle of this century [1]. At the same
    time, there are competing demands on limited resources such as land and water.
    This has led to multi-disciplinary research on improving crop yields relative
    to inputs, such as water and fertilizer, while improving environmental sustainability.
    This research has involved agricultural scientists, geneticists, irrigation engineers,
    hydrologists, chemical engineers, among others. There is a demand to improve overall
    cropping productivity across fields, farms and countries. A crucial factor in
    this work is gathering data on the drivers of crop growth, including water, weather
    and soil properties. Being able to collect and process such data as cheaply, accurately
    and robustly as possible will enable more growers access to optimize day-to-day
    farming decisions. It will also provide researchers with the information needed
    to study crop yield versus inputs, thus allowing the overall productivity and
    profitability of farming operations to be maximized. Advances in electronics,
    communications, data analysis and visualization provides opportunities to greatly
    improve the volume and usefulness of data being gathered. The internet-of-things
    (IoT) revolution is of particular interest, as it is enabling low cost, low power
    consumption and highly scalable sensor networks to be deployed [2]. Example sensor
    data of interest is environmental data such as wind speed, solar radiation and
    rainfall; soil data such as moisture content, oxygen status and temperature; and
    plant data that indicate stress such as leaf temperature and sap flow. Having
    online access to this kind of data is enabling smarter farming decisions in terms
    of the timing and quantity of irrigation, fertilization and herbicide application.
    This can lead to improved outcomes in terms of yield, profit, and environmental
    management. Agricultural data has historically been gathered using expensive and
    dedicated sensors and loggers. Data had to be downloaded periodically and manually
    over wired interfaces, such as RS-232. This was cumbersome and inefficient, and
    did not facilitate real-time monitoring and sharing of data. More recently, sensors
    with wireless upload capability have been deployed. Some of these devices have
    a cellular connection per sensor. This results in high cellular subscription costs
    if many sensors are needed, and there are difficulties providing reliable connectivity
    in many farming areas with poor cellular coverage. Other systems use mesh or machine-to-machine
    networks such as Zigbee (based on IEEE 802.15.4), with a central gateway to the
    internet. Such networks have limited data rates, which means they are only useful
    for sensors with low bandwidth requirements. In addition, the end devices are
    not directly accessible through the internet, so remote software upgrade and debugging
    is difficult. When device updates are needed, expensive and time consuming travel
    to farm sites is required. Available wireless protocols are described in [3] and
    summarized in Table I. There are a number of upcoming longer range and lower power
    protocols such as LoRa [4] and 802.11 ah [5], which will be attractive in agricultural
    settings. The IEEE 802.11 a/b/n protocol (WiFi) has traditionally been considered
    too expensive, power hungry and short-range to be useful for agriculture sensor
    networks [6]. However, we see a number of distinct advantages of this technology.
    Firstly, WiFi is the wireless protocol of the internet - it is widely available
    in portable devices including those used in farming scenarios. Secondly, it supports
    high data-rates, which is becoming increasingly important in farming applications
    such as wireless cameras monitoring irrigation flow, and interaction with drone
    and satellite imagery. Such applications are not possible with low data-rate networks
    such as Zigbee. Thirdly, the transmission range is very workable in the outdoor
    on-farm scenario as will be demonstrated later in this paper. Thus, given that
    WiFi supports many applications of interest to farms, not only the wireless sensor
    network application, we considered it an attractive proposal to base a wireless
    data logging platform on it. It will be demonstrated that the perceived disadvantages
    of the WiFi protocol for farming applications can be overcome using thoughtful
    system and device design. Table I Comparison of wireless technologies for agricultural
    applications. All numbers are approximate, as a simple indication of the order
    of each parameter. This paper describes a new data gathering platform using WiFi,
    named WiField. It uses various techniques to provide a low-cost, low-power and
    flexible solution. It enables gathering data from a wide range of sensors, including
    soil properties and weather. New sensor types and functionality can easily be
    added through remote, wireless software updates. It is highly scalable, so many
    devices can be deployed across a field or farm. It will be demonstrated that on-farm
    communication ranges of greater than 1km are easily achievable. Many devices have
    been deployed on farms both in Australia and South-East Asia, and the real-time
    data is being used by researchers and growers to study and improve crop productivity.
    Goanna Telemetry Systems1 are now providing the technology to commercial farming
    operations, monitoring soil moisture, rainfall, canopy temperature, water and
    fuel levels (rice paddy, storage, channel, tank), and weather stations. SECTION
    II. System Design The system is illustrated in Fig. 1 and consists of: the on-farm
    WiFi network provided by an internet-connected WiFi access point; the WiField
    devices that can connect to this network; and the cloud-based data storage, processing
    and internet interface. The internet interface includes data visualization to
    support farm decision-making, and tools to check device configuration and status.
    The WiFi network used to connect the WiField devices to the internet may take
    several forms, depending on requirements and the availability of power and network
    at each site. An example farm scenario making use of WiField devices is shown
    in Fig. 2. On large farms with loggers across multiple fields, there is the option
    of using point-to-point links to share the internet connection with another WiFi
    access point. Distances around 10km are easily achievable with these links. Fig.
    1. Wifield system overview. Show All Fig. 2. Example on-farm wifi network, providing
    direct internet access to many wifield devices along with machines and computers.
    Show All A. Continuous Upload Using Fixed Wifi Access Points The preferred use
    case, illustrated in Fig. 2, is to have a WiFi access point providing continuous
    internet connection across a farm. This may be powered from the mains, with data
    supplied by a wired ethernet connection if available. However, often power and
    network are not available on farms. In this case, a solar-powered WiFi access
    point is set up. This includes a cellular antenna, and a 3G modem with SIM card
    supplying the internet connection to the WiFi access point. In remote sites with
    poor cellular coverage, high-gain Yagi cellular antennas pointed at the nearest
    cell tower have provided a robust internet connection. For the WiFi access point,
    devices such as the Ubiquiti Nanostation M2 have been used, which have a beamwidth
    of around 60 degrees, giving 10dBi gain for the WiFi signal. As will be discussed
    in Section IV-A, this has provided connectivity to the WiField loggers over a
    range of more than 2.5km. For powering the 3G modem and WiFi access point at these
    remote sites, a 12V battery is used, typically with 15Ah capacity. This is kept
    charged using a solar panel, typically 40W. One cellular data connection can be
    shared among many loggers on a site, thus reducing cellular access costs, making
    this a very scalable solution. B. Infrequent Upload Using Portable Wifi Access
    Points In some cases, a continuous internet connection is not required or available.
    For these cases, the WiField devices contain 32kB of memory, which can be used
    to store data. As an example, assuming a WiField device is attached to a capacitive
    moisture probe with 12 sensors each providing moisture, temperature and salinity
    data. This uses 44 bytes per reading. There is then memory to store more than
    700 readings. If the device is configured to take one reading per hour, this equates
    to more than 4 weeks of data storage. To upload stored data, a portable WiFi access
    point or a smartphone with WiFi tethering enabled can be taken to each WiField
    device and the data uploaded as often as needed. There is a button on the WiFields
    that causes the device to wake up, take a reading from the sensors, and attempt
    to upload all stored data (entering the loop in Fig. 3 at “Wake from deep sleep”).
    If there is new configuration data or new software available, this will be pushed
    to the device at the same time. C. Wireless Configuration One advantage of using
    the WiFi interface is that the devices can have their software updated or be re-configured
    remotely over the internet. The configuration is sent to a particular device using
    its unique http address. Some of the features that can be configured in this way
    are: Logging interval Level of status information to store and send What type
    of logger scenario and power management is being used (eg solar-powered weather
    station or battery-powered logger) What types of sensors are connected Adding
    WiFi SSID and password credentials if a new network is to be used Addresses and
    types of cloud-based services that data should be uploaded to. Currently implemented
    examples include Google Sheets using the Google API, proprietry APIs for commercial
    agriculture data providers (e.g. Goanna Telemetry Systems) and FTP to weather
    data providers. WiField users can re-configure their devices as farm monitoring
    needs change. For example, they might have soil tension and SDI-12 moisture sensors
    connected to schedule irrigation during the wheat growing season, and water-depth
    and temperature sensors to set ponded water depth during the rice-growing season.
    Device status and debugging data is sent to a cloud-based spreadsheet. This allows
    an administrator to keep abreast of device performance, any issues that arise
    with sensors and how the WiFi network is performing as crops grow (through examining
    received signal strength indicator). SECTION III. Wifield Device Design The WiField
    data loggers are based on the Electric Imp imp002 module2. The module integrates
    a low-power microprocessor, WiFi transceiver and antenna. Code is written in Squirrel,
    a Javascript-like language. The Electric Imp infrastructure defines device code
    that runs on the device hardware; and agent code that runs on their cloud-based
    servers. Electric Imp provide code libraries to facilitate agent interaction with
    web services and common sensors, and they also manage IoT security. This greatly
    reduces development time by allowing engineers to focus on the end-user applications.
    Fig. 3 shows a simplified view of how the WiField device, agent and web interact.
    Fig. 3. Wifield sleep/wake algorithm and flow of data between device, agent and
    web. Show All A. Power Management There are two main application scenarios for
    the WiField devices. The first is where the device is connected to a self-sustaining
    power supply, such as a solar-charged battery. The WiField includes a port for
    a solar panel and can be configured to keep the battery charged using the solar
    panel, making use of analog sensing of both the battery and solar voltages to
    optimize charging. The second case is where the device is connected to disposable
    batteries, which will be replaced by the user periodically. In this case, it is
    desirable that the device power consumption is minimized so it can keep operating
    without user intervention for at least a growing season. A number of techniques
    are used to minimize power consumption. A buck converter is used to regulate the
    battery voltage to the imp002 supply of 3.3V. This maximizes efficiency, compared
    to using linear regulator. The module has a low power sleep state, during which
    it draws less than 10μA . During the sleep time, the power supplies (Vbat, 5V,
    3.3V) to all sensors are shut down using field-effect transistor (FET) switches,
    which helps keep sleep current very low. The module is woken at the interval specified
    by the user as described in Section II-C. The typical wake/sleep flow is shown
    in Fig. 3. An example measurement of WiField wake current is shown in Fig. 4.
    The wake time is typically around 20 seconds, including 10 seconds to read the
    sensors and 10 seconds to attempt connection to a WiFi network and upload data.
    The typical current while reading sensors, and while WiFi is active, is 50mA (depending
    on sensor type). So, assuming a wake interval of one hour, the average current
    over an hour is (20×50 + (60×60–20)×0.01)/3600 < 0.3mA, which is dominated by
    the wake time current. If standard Alkaline 2500mAh AA batteries are used, the
    battery life will be on the order of a year. Using AA batteries is inexpensive
    and allows users to easily replace them when needed. However, the WiField can
    be supplied by any battery type with voltage from 6-17V. Higher battery voltages
    and capacities will increase battery life proportionally due to buck regulation.
    Fig. 4. Example current consumption from 9v. Show All B. Hardware Design The physical
    design of a WiField logger is shown in Fig. 5. The Electric Imp imp002 module
    with integrated WiFi antenna is on the right of the PCB. There is a switch array
    to enable/disable sensor interfaces, for example to switch between weather station
    and probe scenarios. There are a number of FETs, used for power management functions
    such as switching the power to sensors off during sleep and enabling/disabling
    solar charging of a connected battery. Other FETs and ICs are used to implement
    non-standard sensor interfaces that the imp002 module doesn''t support natively.
    The boards are assembled at a medium-scale production facility and mounted into
    rugged farm-ready casing with waterproof connectors. The platform was originally
    designed for an irrigation research group, so flexibility and the ability to capture
    data from new sensor types was a priority, as was having a single platform for
    both weather stations and crop/soil monitoring. Few existing loggers on the market
    provide such flexibility in a single product. The digital sensor interfaces that
    are supported by the WiField platform include I2C, SPI, UART, OneWire, SDI-12,
    RS-422 and pulse counting. Analog interfaces include 4-20mA, voltage and soil
    tension (AC resistance). Soil tension, sensed by gypsum blocks and Watermark sensors,
    is measured using multiplexer ICs. These ICs drive the tension sensors with AC
    pulses. The soil tension in kPa is calculated from the resistance of these sensors.
    Up to 4 soil tension sensors can be connected to each WiField. Fig. 5. A wifield
    unit, as assembled by goanna telemetry. Show All SECTION IV. Results WiField devices
    have been deployed on farms across Australia and South-East Asia since 2016. The
    devices are being used with weather stations, capacitive and gypsum block soil
    moisture probes, tank level monitoring, rice paddy temperature and water level
    sensing, and soil redox potential sensors. The coming season will see additional
    sensor types deployed, including sap flow and infra-red canopy temperature sensors.
    A. Wifi Signal Range One concern that has limited WiFi adoption in farming scenarios
    is signal range. However, tests have shown WiFi range between a Ubiquiti Nanostation
    M2 antenna and the WiField devices of more than 1km on many farms. An example
    is shown in Fig. 6. A WiField was connected to a GPS unit using a UART interface,
    and was programmed to log GPS coordinates and received signal-strength indicator
    (RSSI) every 10 seconds. The device was placed on the dashboard of a car, which
    was driven around the channel banks of the farm. The figure shows logged position
    and RSSI. The maximum measured distance between the Ubiquiti access point and
    the WiField device where the internet connection was still reliable was 2.6km.
    Trees, geography, crop height and weather conditions will affect RSSI, and will
    be the subject of further study. Tests performed towards this study so far indicate
    that the signal range exceeds 1km in all crops tested, provided the logger is
    20cm above the crop canopy. B. Example Data Use and Device Performance An example
    application making use of distributed WiField loggers is now described. The site
    is a large-scale cotton operation in NSW, Australia. A research project studying
    the effects of different irrigation schedules, fertilizer rates and their interactions
    was established in the 2016–2017 season. One of the research questions was: how
    do shorter and longer intervals between irrigations (compared with usual industry
    practice) affect cotton plant growth, yield, water and nitrogen fertilizer use
    efficiency. A randomized complete block design trial comprising three irrigation
    treatments (short deficit, usual practice, long deficit) and two nitrogen rates
    were established. Fig. 6. Ubiquiti nanostation m2 to wifield wifi signal range
    on a cotton and maize farm. The color of the trace indicates received signal strength
    indicator. The blue line measures the maximum tested distance from the access
    point to the device, which was 2.6km. Show All Ten WiField loggers were deployed.
    Six of these measured soil moisture status and temperature in the various treatments,
    from which the irrigation timing was scheduled and the depth of soil the cotton
    roots were drawing water from could be assessed. Three WiFields were used to assess
    soil redox potential, which is a measure of waterlogging after irrigation or rain
    events. An addition WiField was configured as a weather station, collecting temperature,
    humidity, solar radiation, rain, wind speed and direction every ten minutes. The
    weather data was used to calculate evapotranspiration, which is a measure of total
    crop water use. Some of the data derived from the array of WiFields is shown in
    Fig. 7. The graphs are described from top to bottom. The three irrigation deficits
    (short, standard, long) were defined by the soil tension in kPA, a measure of
    how much suction is required for roots to draw water. More negative values indicate
    that greater suction is needed draw water from the soil. The top graph shows the
    soil tension in kPa vs date, measured using Watermark soil tension sensors connected
    to the WiField loggers. There are multiple sensors at different depths, but for
    brevity, only those at 23cm are shown. The plants in the short irrigation treatment
    were irrigated when tension was less than −20kPa, the standard when tension was
    less than −60kPa, and the long when tension was less than −100kPa, as indicated
    by the horizontal lines on the graph (Fig. 7a). Fig. 7b shows the Normalized Difference
    Vegetation Index (NDVI). This is calculated from plant reflectance in the red
    and near-infrared bands from multi-spectral imagery [7] and is correlated with
    plant biomass. NDVI was captured on a number of dates over the season using a
    MicaSense RedEdge multi-spectral camera mounted on a drone. The mean NDVI in each
    of the irrigation treatments was computed. It can be seen that the short irrigation
    treatment had the highest NDVI, corresponding to highest biomass. The dashed line,
    referenced to the right y-axis, is the reference evapotranspiration (ETo) in mm,
    from WiField weather station data. It is calculated using the Penman-Monteith
    equations [8] from measured temperature, humidity, solar radiation and wind speed.
    Fig. 7c shows the cumulative water use. The daily water use is the actual evapotranspiration
    ETc which is related to reference evapotranspiration and plant biomass (NDVI)
    [7]: ETc=ETo× k c =ETo×(1.37×NDVI−0.086) (1) View Source The daily water use is
    summed to show the total water use, and the water use is reset to 0 after an irrigation.
    Figures 7d-f illustrate the data from SDI-12 EnviroPro capacitance moisture probes,
    placed in each irrigation treatment. These are cylindrical probes that are inserted
    into the soil, and have a number of sensors at 100mm increments. Each sensor measures
    the volumetric water content of the soil amongst other parameters. The graphs
    show the water content through the soil profile, from the soil surface (Omm) down
    to −900mm. Green indicates high water content, red very low water content. It
    gives a dynamic display of the depths the roots of the cotton plants are drawing
    water from as the season progresses. In the short irrigation frequency treatment,
    the roots don''t need to draw water below 400mm for most of the season, due to
    constant water availability closer to the surface. In contrast, the long treatment
    plants are drawing water from increasing depths, even below 900mm by February.
    After the final irrigations as the crop is being readied for harvest, all of the
    treatments exhaust water supplies near the surface. This set of example results
    from WiField loggers demonstrate how they are being used to schedule irrigations
    and study plant water use and growth. Such data is possible due to the wide range
    of sensors that can be connected, the low per-unit cost (so many can be deployed
    across a site), and the WiFi connectivity that facilitates effective data collection
    over a site from many loggers. SECTION V. Discussion The WiField data logging
    platform has been demonstrated to be a robust and flexible solution to enable
    real-time use of agricultural sensor data to make farming decisions. WiFi is an
    attractive technology to gather data from wireless sensor nodes on farms. The
    power consumption is not prohibitive, the device costs are low, and in the outdoor
    farming environment the transmission range can easily exceed 1km. Deploying on-farm
    WiFi enables many other connected devices and applications, all using the same
    data account. Some of these applications rely on the high data rates and immediate
    internet connectivity that only WiFi can provide. In our experience, growers are
    very pleased with the new opportunities provided by a fast internet connection
    covering their fields. Fig. 7. Data from numerous wifield loggers on a cotton
    farm. The top three graphs show soil tension, NDVI and eto and calculated crop
    water use. The bottom three graphs show the soil moisture profiles in each irrigation
    treatment and how it progresses throughout the growing season. Show All WiFi in
    indoor environments has been studied thoroughly. There is little work on WiFi
    links in outdoor environments, although one example is [9]. Farming environments
    present unique physical characteristics affecting signal propagation. Therefore,
    it will be useful to investigate signal range and link reliability in these environments.
    The WiField devices are continuously gathering received signal strength indicator
    (RSSI) data, and have been deployed on cotton, maize and rice farms. All of these
    have different characteristics which affect the performance of the wireless link.
    For example, the cotton plants are quite short (<1m), whereas maize is tall (>2m).
    How does crop height affect WiFi performance? Rice is grown in ponded water. How
    does the water affect WiFi performance? Does weather have an impact? A study of
    some of these questions has recently been described in [10]. A natural extension
    of the WiField platform would be to add farm automation capabilities. This could
    be used to control irrigation actuators and channel gates. The loop from sensing
    to control could then be closed, allowing the optimization of automated irrigation
    systems. Such optimization is already a topic of active research [11], and the
    WiFi platform here could contribute because of its low cost and ease of connection
    to cloud-based analytics. The new WiFi protocol, IEEE 802.11 ah will be of interest
    to this system in the future [5]. There are currently no chipsets available supporting
    this protocol. When they are available, there should be the potential of further
    increasing the signal transmission range and lowering power consumption, as well
    as enabling device-to-device communication. ACKNOWLEDGEMENTS The authors thank
    Goanna Telemetry Systems for providing feature requirement specifications, physical
    design and support. Funding for experimental field work was provided by the Cotton
    Research and Development corporation, and the Rural Industries Research and Development
    Corporation. Staff of Point Farms (Stott Management Group Pty Ltd), in particular
    Mr James Hill, are thanked for project planning, implementation and cotton agronomy
    contributions. Authors Figures References Citations Keywords Metrics Footnotes
    More Like This Wireless Sensor Network based Water Well Management System for
    precision agriculture 2016 26th International Telecommunication Networks and Applications
    Conference (ITNAC) Published: 2016 Application of Non-Orthogonal Multiple Access
    in Wireless Sensor Networks for Smart Agriculture IEEE Access Published: 2019
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of the International Conference on Sensing Technology, ICST
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: WiField, an IEEE 802.11-based agricultural sensor data gathering and logging
    platform
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - López-Riquelme J.A.
  - Pavón-Pulido N.
  - Navarro-Hellín H.
  - Soto-Valles F.
  - Torres-Sánchez R.
  citation_count: '82'
  description: Using suitable information storage, management and processing resources
    is essential when Precision Agriculture-based applications are developed. Nowadays,
    traditional client-server paradigm is useful but it might not be enough for this
    purpose. The amount of data that could be stored and processed, and the need of
    generating complex knowledge and rules that allow stakeholders to take appropriate
    decisions related to crop optimization are leading researchers to pay attention
    to new solutions based on designing software architectures in the Cloud. This
    paper demonstrates that using cloud services in the agronomic context could be
    considered as highly beneficial. In particular, the used cloud provider is FIWARE,
    since it provides open source and free development modules, and even, several
    enablers for agriculture. An application has been developed by using the FIWARE
    components, and it has been validated in real crops located in a semiarid area
    of the South of Spain with the aim of reducing the amount of water necessary for
    irrigation tasks. The advantages of using FIWARE, opposite to the use of traditional
    systems, are properly analysed and highlighted. In addition, a discussion that
    emphasizes the advantages of using FIWARE instead of other well-known cloud providers
    is also presented.
  doi: 10.1016/j.agwat.2016.10.020
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. Results and discussion 4. Conclusions Acknowledgments References Show full
    outline Figures (15) Show 9 more figures Tables (1) Table 1 Agricultural Water
    Management Volume 183, 31 March 2017, Pages 123-135 A software architecture based
    on FIWARE cloud for Precision Agriculture Author links open overlay panel J.A.
    López-Riquelme a, N. Pavón-Pulido b, H. Navarro-Hellín a, F. Soto-Valles a, R.
    Torres-Sánchez a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.agwat.2016.10.020
    Get rights and content Highlights • Development of a cloud-based software architecture
    using FIWARE that allow agronomical data to be reliably and safely stored. • Tests
    verifies that using the proposed system enables agronomical data registration,
    regardless of the hardware architecture. • The system enables the crop growth
    to be tracked by users. Thus, it is easy to take decisions about irrigation control.
    • From the developer point of view, the system is scalable, and FIWARE properly
    hosts the software architecture. Abstract Using suitable information storage,
    management and processing resources is essential when Precision Agriculture-based
    applications are developed. Nowadays, traditional client-server paradigm is useful
    but it might not be enough for this purpose. The amount of data that could be
    stored and processed, and the need of generating complex knowledge and rules that
    allow stakeholders to take appropriate decisions related to crop optimization
    are leading researchers to pay attention to new solutions based on designing software
    architectures in the Cloud. This paper demonstrates that using cloud services
    in the agronomic context could be considered as highly beneficial. In particular,
    the used cloud provider is FIWARE, since it provides open source and free development
    modules, and even, several enablers for agriculture. An application has been developed
    by using the FIWARE components, and it has been validated in real crops located
    in a semiarid area of the South of Spain with the aim of reducing the amount of
    water necessary for irrigation tasks. The advantages of using FIWARE, opposite
    to the use of traditional systems, are properly analysed and highlighted. In addition,
    a discussion that emphasizes the advantages of using FIWARE instead of other well-known
    cloud providers is also presented. Previous article in issue Next article in issue
    Keywords Precision AgricultureFIWARECloud ComputingWSN 1. Introduction Water and
    food are the main resources that meet the needs of human beings. Agriculture provides
    most of the food, but it also consumes most of the Earth’s available fresh water.
    Furthermore, agriculture is not only a food source, but the main income stream
    for more than 70% of population in certain regions of Earth, such as many areas
    in Africa with low-income economies (Chibuzor and Lionel, 2006). On the other
    hand, the food and agriculture sector represents 5.9% of world Gross Domestic
    Product (GDP), at least 35% of worldwide employment, and in the European context
    it is one of the largest manufacturing sectors (Brewster et al., 2012). In arid
    and semiarid regions, as Southern Spain, the water supply is an important factor
    that considerably affects agriculture. In fact, water optimization is a key requirement
    for sustainable and economically profitable crops in such areas (IDAE, 2005).
    Development of innovative irrigation systems that efficiently use water is a major
    priority. In these regions, farmers must irrigate their crops effectively; therefore,
    they must find new solutions and methods that improve the irrigation programming
    systems, taking into account not only the state of the soil and the plants, but
    also climate information. All these data should be properly interpreted to decide
    the most suitable actions to carry out. Precision Agriculture (PA) is a set of
    techniques that provide a suitable solution to these problems because it aims
    to optimize field-level management with regard to crop science by matching farming
    practices more closely to crop needs. Economic advantages are also obtained by
    boosting competitiveness through more efficient practices (e.g. better management
    of water usage and costs). On the other hand, Information and Communication Technologies
    (ICTs), such as Global Positioning Systems (GPS), and Geographic Information Systems
    (GIS), Remote Sensing and Wireless Sensor Networks (WSNs), among others, are used
    to acquire information about the crop needs. PA techniques use this information
    to achieve the proposed objectives, in particular, intensive monitoring of crops,
    data analysis, decision making and application of control actions (López et al.,
    2015, Zhang et al., 2002). According to scientific literature, many ICT-based
    agricultural applications have been carried out during the last two decades (De
    la Rosa et al., 2016, García Morillo et al., 2015, López et al., 2015, Navarro-Hellín
    et al., 2015, Oates et al., 2015, Puerto et al., 2013). Most of these applications
    need to use a great amount of information that should be properly acquired or
    generated, processed and stored. Almost all of these solutions are based on proprietary
    systems or simply developed at research level, and both approaches are usually
    incompatible. Consequently, there is not currently (and it is probably hard to
    obtain), a common worldwide database with a normalized schema for freely sharing
    agricultural information between stakeholders in the context of PA. Having this
    database available would be very interesting for administrations and governments,
    since water resources distribution could be more efficiently planned. Moreover,
    appropriately processing the information by using novel statistical and Soft Computing-based
    approaches should be very useful for generating knowledge that enables taking
    decisions and predicting future undesirable happenings (or their consequences),
    such as droughts, plagues or climate events, among others. Given that building
    this kind of agricultural information storage should be enormously beneficial,
    new Cloud Computing-based techniques should be considered for meeting this goal.
    However, many of the existing PA-based systems are currently implemented by using
    traditional web hosting servers (Vyas et al., 2016). On the other hand, those
    that include Cloud Computing techniques often use general purpose cloud providers
    that do not offer agriculture-oriented specific services. Furthermore, most PA-based
    systems are usually designed ad-hoc with the purpose of solving a specific problem
    in a specific kind of crop; therefore, most solutions are not easily applicable
    in another context (Sales et al., 2013). Future Internet-based solutions could
    successfully address the problem. In particular, the Future Internet (FI) could
    be considered as a set of related emerging technologies and standards (Granell
    et al., 2016). Specifically, the pervasive connectivity promised by the Cloud
    Computing paradigm, the Internet of Things (IoT) phenomenon and Big Data innovations
    might lead to disruptive changes in the design and development of data-intensive
    applications as the required in PA. In particular, the EU’s Future Internet Public-Private
    Partnership (FI-PPP) is a program that aims to make service infrastructures and
    business processes more intelligent, more efficient and more sustainable through
    tighter integration with FI technologies (Brewster et al., 2012). The use of these
    technologies could allow researchers and developers to design and implement normalized
    storage systems for saving worldwide agronomical information that stakeholders
    could easily share and process with the aim of generating knowledge, useful for
    decision making in an agronomical context. In literature, works that analyse the
    possible benefits of applying Cloud Computing to Smart Farming can be found (Zhu
    et al., 2013, Choudhary et al., 2016); however, most of them do not address how
    to design software architectures in this context. The main objective of this work
    is focused on designing a cloud-based software architecture that enables the deployment
    of PA systems, based on the use of WSNs, capable of acquiring information of the
    crop, sending it to the cloud and transparently storing, managing and sharing
    such information. Such architecture consists of a set of software components that
    allow worldwide agronomical information to be warehoused in a common data warehouse
    that stores normalized information from the agronomical point of view. The Cloud
    Computing paradigm has been selected for designing and developing the mentioned
    architecture, since it exhibits interesting features, such as cost reduction,
    agility, scalability and elasticity, among others, when such paradigm is compared
    to other traditional web hosting services. In particular, the system has been
    deployed and proved in the FIWARE Cloud, since FIWARE is a part of the mentioned
    FI-PPP program and it provides certain advantages over other known cloud providers,
    mainly related to cost and the existence of specific products and services that
    could be used in the agricultural context. The tests have demonstrated that using
    such architecture, agronomical data registration is easy and transparent regardless
    of the used hardware architecture. The paper is organized as follows. Section
    2 describes the methodology, tools and software modules that have been used in
    this work, together with the hardware architecture that has allowed the Cloud-based
    software architecture to be properly validated. Section 3 shows the main obtained
    results. Such results have been appropriately discussed with the purpose of demonstrating
    that the proposed architecture (and, in general, the FI paradigm), provides interesting
    benefits and advantages in the agronomical context. Finally, main conclusions
    and future work are shown in Section 4. 2. Materials and methods In the PA context
    it is necessary to design systems capable of monitoring different variables that
    affect the crop growing process (soil, environment, water and plant), and to use
    appropriate techniques to analyse such information allowing stakeholders to take
    decisions related to production optimization. For this purpose, an autonomous,
    compact and wireless device, compatible with most agronomic sensors found in the
    market and which could be placed anywhere in the crop, has been developed. Specifically,
    the device is capable of sensing different parameters such as water content, temperature
    or electrical conductivity and matric potential in the soil, among others, at
    present. This allows the farmer to get information about the water needs of the
    crop in real time, and to take decisions about how to manage irrigation in an
    optimal manner. Such device is the essential component of a Wireless Sensor Network,
    that can be deployed with the aim of monitoring crops. The retrieved information
    should be properly stored and processed; consequently, an appropriate software
    architecture should be defined and implemented for this purpose. This software
    architecture should have a set of specific features and should meet some requirements.
    Particularly, it should allow the implementation of a distributed, reliable and
    secure collection of modules and components, which should be easily shared and
    reused. The mentioned architecture is also required to be scalable and elastic
    (from the hardware and software resources point of view). Finally, and not less
    important, such architecture should provide a set of rich, universal and easy
    to use Web Services, which enable the storage and management of information generated
    by most of devices and hardware architectures used in the context of agriculture.
    According to this purpose, a common worldwide database with a normalized schema
    for freely sharing agricultural information between stakeholders involved, in
    the context of PA, should be achieved. As it will be explained and justified below,
    the FIWARE platform has been selected for meeting the aforementioned features
    and requirements. The following subsections describe the farms where the sensor
    nodes have been deployed (with the purpose of validating the correct operation
    of the proposed software architecture). After this, the hardware architecture
    components and FIWARE modules that have been used will be described. Finally,
    the tests carried out for validating the cloud-based architecture will be also
    detailed. 2.1. Experimental plots/description of the farms Widhoc Smart Solutions
    S.L. is a Spin-Off of the Technical University of Cartagena, in Murcia (Spain)
    which provides products and services, mainly, for optimizing the irrigation water
    in the agricultural sector. This company, which has a lot of costumers of woody
    and horticultural crops, distributed in the southern of Spain (see Fig. 1), has
    allowed the proposed cloud PA-based system to be validated in a real environment
    with different kind of crops. This fact is relevant because most works in literature
    present ad-hoc case studies whose results are hardly applied to other environments
    and crops. However, in this work, the proposed software architecture has been
    validated in two of the Widhoc’s customers’ farms. Download : Download high-res
    image (1MB) Download : Download full-size image Fig. 1. Woody and horticultural
    crops, distributed in the southern of Spain where several WSNs have been deployed
    by the Widhoc company. Note that, since the Widhoc company has also deployed PA-based
    systems hosted by a traditional web hosting service, it has been possible to analyse
    and compare the results obtained with the new proposed system and the traditional
    web hosted system. The first experiment was carried out in a farm (FARM #1) of
    fino lemon trees (Citrus limon L. Burm.fil cv. 49.) on C. macrophylla Wester (Navarro-Hellín
    et al., 2015). The orchard consists of 10-year-old lemon trees, and it is located
    in Murcia (SE Spain), with GPS coordinates 38° 06’ 45.76” N, 1° 07’ 49.76” W and
    166 m of elevation. Tree spacing was 7.0 m × 5.5 m, with an average ground coverage
    of about 47%. Two drip irrigation lines (0.8 m apart) were used for each tree
    row. There were 4 emitters (4 L h−1) on both sides of each tree. The second experiment
    was carried out in a commercial plantation (FARM #2) of 12-years-old almond trees
    (Prunus dulcis (Mill.) D.A. Webb cv ‘Guara’), grafted on ‘GF 677’ rootstock, planted
    at a tree spacing 6 × 6 m, and located in Murcia SE Spain with coordinates 37°
    41’ 17.89” N, 0° 56’ 58.95” W and elevation of 33 m. The soil is characterized
    by a deep and homogeneous sandy – clay – loam with low organic matter (1.1%).
    The soil has a water-holding capacity of about 150 mm m−1 and bulk density varying
    within 1.3–1.59 Mg m−3. One drip irrigation line was used for each tree row with
    4 emitters (4 L h−1) for tree. The climate in the aforementioned farms is Mediterranean
    type. Average values of mean annual temperature and annual rainfall determined
    over 3 years of experiment (2013–2015), at a nearby automatic weather station
    were 18.1 ± 0.4 °C and 204.7 ± 18.7 mm, respectively. The corresponding value
    of reference crop evapotranspiration (ET0) calculated by using the FAO–Penman–Monteith
    equation (Allen et al., 1998) was 1304.5 ± 30.4 mm. The information about soil
    characterization has been previously obtained from available data before installing
    the new system. 2.2. Hardware architecture The Widhoc GPRS Node, which is manufactured
    by the Widhoc Smart Solutions company, has been used with the purpose of validating
    the proposed software architecture. The electronic design of the node includes
    basic components plus several functionalities and characteristics described in
    this section. The modular design consists of several electronic boards: (1) A
    main board named MEWiN Mainboard (Multi-Environmental Wireless Node Mainboard),
    which includes the common components used in any WSN-based application. Some of
    these components are a microcontroller, a radio module, a real time clock and
    a microSD interface, among others. (2) A second board, named MEWiN GPRS-Board,
    which allows different types of commercial sensors to be connected. (3) Finally,
    a GPRS module is used with the aim of sending data from the sensors to the data
    server (Navarro-Hellín et al., 2015). The core of the MEWiN platform (see Fig.
    2a and b) is the low power microcontroller MSP430F2618 by Texas Instruments, in
    charge of managing the behaviour of the node. It includes a GPRS modem in the
    MEWiN GPRS-Board (see Fig. 2c), that is connected to the MEWiN Main-Board (see
    Fig. 2d), through expansion connectors, which are redirected to different analogue
    and digital I/O, to UART from microcontroller, to energy supply and to ground
    lines. The MEWIN GPRS-Board consists of several interfaces and voltage converters
    (two CC/CC converters of 12 V and 5 V; SDI-12, 0–3 V and 4–20 mA interfaces; and
    digital I/O), which allows the device to be connected with a large range of commercial
    sensors to use in several applications. One of the main characteristics of this
    interface board is the connection of a GSM modem in order to send information
    to the data server. In particular, the used modem is the SIM900 (SIMCom, Ida-Virumaa,
    Estonia), with the purpose of sending HTTP requests. Download : Download high-res
    image (1MB) Download : Download full-size image Fig. 2. Widhoc GPRS Node’s pictures
    and specifications. (a) Main technical details of the device. (b) Final setup
    showing the three boards connected. (c) MEWiN GPRS-Board. (d) MEWiN Mainboard.
    2.3. The FIWARE platform Cloud Computing, also named on-demand computing, is defined
    as a kind of Internet-based computing that delivers on-demand shared data storage
    and processing resources to a wide range of devices. It is considered as a model
    that enables ubiquitous access to a shared pool of configurable computing resources,
    which are fast provided and released with minimal management effort, according
    to the existing demand (Kavis, 2014). Note that, Cloud Computing model goes beyond
    the concept of Internet hosting service. In fact, this paradigm offers different
    models of deployment, depending on the selected provider: private, public or hybrid
    clouds. In addition, the cloud model is designed by considering three connected
    layers: Infrastructure as a Service (IaaS), Platform as a Service (PaaS) and Software
    as a Service (SaaS), as shown in Fig. 3. SaaS layer enables final users to access
    Internet-based applications by using “thin” clients, such as those based on the
    use of browsers (HTTP/HTTPS clients), or apps executed in smart mobile devices.
    PaaS layer allows software developers to design and implement a wide range of
    applications delivered through the SaaS layer. Finally, IaaS layer could be considered
    as the most basic cloud-service model that provides physical machines and resources
    by using virtualization technologies (Voorsluys et al., 2011). Download : Download
    high-res image (259KB) Download : Download full-size image Fig. 3. A graphical
    representation of the three cloud layers available when a software architecture
    is implemented in a cloud provider. Nowadays, there are many providers that offer
    a wide variety of cloud-based services at the level of SaaS, PaaS and IaaS. In
    fact, many big companies, such as, Google, Microsoft or Amazon, among others,
    provide a great number of cloud services in the context of cloud storage, virtual
    servers, Business Intelligence (BI), Big Data management, Internet of Things (IoT),
    mobile applications, websites and web apps, financial services, genomics, retail
    and commerce, gaming or machine learning. There are even IoT platforms based on
    using services provided by such companies. For instance, the Kaa IoT platform
    offers services in a local virtual machine or in a virtual machine deployed by
    using an Amazon Web Services (AWS) account. Most providers are oriented to supply
    a general framework that stakeholders can configure and customize according to
    the expected objectives; however, almost no provider provides specific services
    related to specific fields, such as, for example, agriculture. In addition, such
    providers often offer a very limited number of free resources, both at the level
    of PaaS and IaaS layers, by using a quotas-based system. One of the main problems
    in systems such as Google or Amazon is to easily estimate when free quotas will
    be exceeded. This problem could become serious since when an application exceeds
    the free quotas, the owner is charged for the additional usage up to a daily maximum
    amount that can be properly configured. Such configuration is not easy to define
    a priori. Consequently, the economic cost grows according to the usage. This paying-for-usage
    model could be a good strategy for many companies and developers that work in
    the field of ICT; however, it could also curb the intention of many non-ICT related
    users of using Cloud-based systems; in particular, in the context of Agriculture,
    where people could not become familiar with PA-based solutions. After considering
    the aforementioned benefits and drawbacks, the selected cloud framework for this
    work is FIWARE, which could be defined as a platform that “provides a rather simple
    yet powerful set of APIs (Application Programming Interfaces) that ease the development
    of smart applications in multiple vertical sectors”. Moreover, “the specifications
    of these APIs are public and royalty-free” and “an open-source reference implementation
    of each of the FIWARE components is publicly available, so that, multiple FIWARE
    providers can emerge faster in the market with a low-cost proposition” (Fiware
    Project, 2016). Furthermore, FIWARE community is committed to materialise the
    FIWARE mission, that is: “to build an open sustainable ecosystem around public,
    royalty-free and implementation-driven software platform standards that will ease
    the development of new smart applications in multiple sectors” (Fiware Project,
    2016). Particularly, FIWARE ecosystem provides both general and specific enablers
    for allowing developers to design, implement and deploy cloud-based solutions
    for many different problems that can be also delivered through the FIspace platform
    (an integrated collaboration system). More specifically, FIspace is a “Future-Internet-based
    extensible SaaS-platform fostering seamless, efficient, and effective business
    collaboration across organizational boundaries” (FIspace D200.1, 2013). This is
    another interesting feature that many cloud providers do not offer. One of the
    sectors considered by FIWARE is specifically the Agriculture field, throughout
    the SmartAgriFood Accelerator, which supports Small and Medium-sized Enterprises
    (SMEs) that develop smart services and apps to be addressed in the agri-food sector.
    In particular, the SME Widhoc, which has enabled the experiments of this work
    to be carried out, belongs to the set of companies that comprises such accelerator.
    In order to build a cloud software architecture deployed in FIWARE, it is necessary
    to know the set of components that the platform provides. In this work, the main
    goal of the proposed system is to allow agricultural information to be easily
    stored, shared and interchanged, in a reliable, secured, standardized and normalized
    way, by using a software architecture, whose modules are based on FIWARE components.
    In particular, in the experiments, such information is acquired by the WSN nodes
    described in Section 2.2, which have been specifically designed with the purpose
    of carrying out monitoring tasks in real agricultural environments. FIWARE provides
    a set of generic enablers (GE), that can be used as software components of different
    applications and/or architectures. Moreover, it includes security protocols, such
    as OAuth2, when the information is interchanged, since it is necessary to ensure
    the involved agents privacy. Table 1 shows a brief description of the main GEs
    that are available. Table 1. Set of main generic enablers provided by the FIWARE
    platform. Enabler Description Context Broker (CB) One of the main modules. It
    follows the Publish/Subscribe paradigm. It allows data communication to be conducted
    in an easy way by using a standard communication protocol based on Restful over
    HTTP. Main Context Broker (Orion CB) It is used at the SaaS level. Particular
    instance of CB GE It could be hosted by launching virtual machines in the context
    of IAAS. (More flexibility and privacy). Cosmos It is used with the aim of persisting
    such historical information coming from the CB (which is only capable of storing
    current data), achieving historical data storage and allowing the big data analysis,
    if required. Cygnus Injector It allows the CB GE to be connected to the Big Data
    Analysis GE. It is used for storing persistent data in Cosmos. Access control
    It is needed for authentication management. Wirecloud Application Mashup It is
    used with the aim of developing the apps user interfaces. Summarizing, in this
    work, a set of GEs, such as the CB GE, the Cosmos GE, the Cygnus Injector or the
    Wirecloud Application Mashup, are employed with the aim of easily making data
    flow between crops and users possible, in a standardized and normalized way, see
    Fig. 4. Once the necessary virtual machines (VM) have been created with the required
    resources, the CB instances are deployed on those servers that FIWARE makes available
    for developers on FI-Lab, defined as “a non-commercial sandbox environment where
    innovation and experimentation based on FIWARE technologies takes place” (Fiware
    Project, 2016). Download : Download high-res image (300KB) Download : Download
    full-size image Fig. 4. Diagram that summarizes the main hardware and software
    components used in this work. 2.4. Description of the experiments Several experiments
    have been conducted with the aim of demonstrating the benefits of using the proposed
    FIWARE-based software architecture. First, a set of specific trials, at the laboratory,
    were designed in order to validate the performance of the GPRS node described
    in Section 2.2, when it exchanges information with the FIWARE cloud. Later, several
    nodes were deployed in the two farms described in Section 2.1, with the aim of
    ensuring that the system properly works in real scenarios. In this case, the farmers’
    feedback was also taken into account throughout a set of events organized by the
    Widhoc company, which allowed some selected customers to know the offered service.
    Such feedback has been especially useful to enhance the provided service. Specifically,
    three GPRS sensor nodes were deployed in FARM #1. On the other hand, four devices
    were deployed in FARM #2 for monitoring this crop. The selection of the number
    of nodes were made by several agronomists that works with the Widhoc company by
    considering several aspects, such as, economic cost of the components, suitability
    according to the parameters that should be measured and geographical and crop
    size issues. By taking into account all these features, only three and four nodes
    were needed, respectively. Particularly, four sensors were connected to all the
    GPRS nodes installed in both farms: (1) a MPS-6 (Decagon Devices, Pullman WA-USA)
    for measuring the soil matric potential and the temperature of the soil at a depth
    of 30 cm, and (2) three 10-HS (Decagon Devices, Pullman WA-USA) for measuring
    the volumetric water content at 20, 40 and 80 cm of depth, and located at 25 cm
    from a representative dripper and 2.25 m from the trunk. The mentioned sensors
    were used for measuring the matric potential (Ψm) and volumetric soil water content
    (θv) every 15 min. The data was sent to the platform every hour with the purpose
    of optimizing the power consumption. 3. Results and discussion This section details
    the main results obtained in this work and shows the main benefits of using the
    proposed FIWARE-based software architecture, whose working is fully described.
    3.1. Description of the proposed FIWARE software architecture As mentioned before,
    FIWARE could be defined as a Cloud Computing ecosystem that enables the design
    and development of applications in the Cloud, by using a set of free and open
    source generic and specific enablers. The software architecture proposed in this
    work has been developed by using the generic enablers previously described. The
    main objective is to provide an online, distributed, scalable, elastic, reliable
    and secured framework that allows stakeholders to store and process information
    and to generate valuable knowledge aimed to enable decision making in the PA context.
    In order to do this, a common worldwide database with a normalized schema, for
    freely sharing agricultural data, has been designed. Such database has been implemented
    by using the Cosmos and CB GEs. The global architecture of the system (see Fig.
    4), consists of the following modules: • A completely autonomous hardware device
    named “FIWARE Smart Agricultural Node”, that is in charge of reading the agricultural
    sensors connected to it and sending the information to the FIWARE server component.
    • A FIWARE software component capable of receiving all the information sent by
    the remote nodes, that is, a customized CB GE that runs in a private virtual machine.
    Later, such information is properly stored by using the Cosmos GE throughout the
    Cygnus connector. • A customizable graphic user interface that enables the visualization
    of the information. In particular, three interconnected widgets have been developed
    for this purpose in the FIspace platform. 3.1.1. The FIWARE server component The
    FIWARE server is in charge of receiving the information from the smart agricultural
    node, storing it and providing the suitable webservices that will be used by the
    graphical user interface to visualize the sensor information. It could be considered
    as a key element for the proposed software architecture, since it hosts the set
    of proposed software components that runs in the backend, since it runs in a virtual
    machine (VM), hosted in the FIWARE Lab (FILab), which allows developers to setup
    the basic virtual infrastructure needed to run applications that make use of the
    APIs provided by FIWARE GEs. As mentioned before, several FIWARE GEs have been
    used to implement the software architecture components (see Fig. 5), that runs
    in the FIWARE server: • The Context Broker GE (CB GE): It receives the data sent
    by the Smart Agricultural Node, throughout the Cygnus connector. A MySQL database
    (with one table) has been specifically designed for storing the sensor readings
    acquired by the GPRS nodes, see Fig. 6a; and the Cosmos GE (which uses four tables),
    see Fig. 6b, has been designed for storing information about how the nodes and
    sensors are organized. The tables of the Cosmos database are SystemAMS for saving
    the description of the installation; NodeAMS for storing the description of each
    deployed node in all the available installations; and SensorAMS and SensorTypeAMS
    for saving information about the type of sensors and the specific sensors connected
    to each node. Download : Download high-res image (380KB) Download : Download full-size
    image Fig. 6. Tables of the two defined databases. (a) Structure of the table
    defined in the MySQL database. (b) Structure of the four tables defined in the
    Cosmos Server. • Tomcat Server: The Tomcat server communicates with both the Cosmos
    GE and the MySQL database, and provides the set of webservices that the frontend
    widgets use. • MySQL database: The purpose of the MySQL database (which stores
    the sensor readings with their timestamps), is to enable the development of those
    webservices that provide information to the frontend widgets with a very low latency.
    Download : Download high-res image (205KB) Download : Download full-size image
    Fig. 5. Architecture of the FIWARE Server Component. The dataflow between the
    GPRS node and the Cosmos GE is shown in Fig. 7. The CB GE can be considered as
    the FIWARE entry point of the information generated by all the available sensors,
    and it stores the last received value from each one. The interaction between the
    sensors and the server is carried out by using properly configured Update Context
    and Subscribe Context operations. The connection between Cosmos and the CB is
    enabled by the Cygnus connector by using a subscribe operation. Thus, each sensor
    value (with its timestamp), is received by the CB entity and properly saved in
    the database. The persistence of data can be configured in two different ways:
    (1) Storing data according to specific time intervals (ONINTERVAL option); and
    (2) storing data when an attribute value changes (ONCHANGE option). In the proposed
    system, the ONINTERVAL option has been selected. Download : Download high-res
    image (290KB) Download : Download full-size image Fig. 7. A graphical representation
    of the data-flow between the GPRS node, the backend and the frontend. 3.1.2. Description
    of the graphical user interface The Application Mashup or Wirecloud GE (available
    in both FIWARE and FIspace), has been used during the graphical user interface
    design stage. In particular, if the user wants to access the information generated
    by the available sensors, he/she has to use the designed frontend. Only the Wirecloud
    API is needed if the frontend requests the last value of a specific sensor; however,
    it is necessary to implement other PHP and Javascript modules, if the historical
    information of an entity is required to be retrieved by using a frontend. The
    Wirecloud GE grants the ability of creating different applications that will be
    finally uploaded to the FIspace market place. Such applications can be developed
    using a wide range of different web programming languages, such as HTML, CSS,
    Javascript, PHP or XML, among others. In this work, different widgets are used
    as key elements of the user interface. One widget is the WIDHOC Field Status,
    which shows the location of the nodes and the graphical representation of the
    set of data retrieved from each sensor (see Fig. 8). Another one is the WIDHOC
    Multisensor Indicator, which displays the last data received by the node that
    is selected in the Google map (see Fig. 9). The WIDHOC Multisensor Monitor widget
    display the last 50 values received by the sensors connected to a specific node
    (see Fig. 10). Finally, Fig. 11 shows a picture of the whole system. Download
    : Download high-res image (449KB) Download : Download full-size image Fig. 8.
    A screenshot of the “WIDHOC Field Status” widget. The central graphical representation
    shows soil matric potential and volumetric water content and temperature collected
    during 5 days in a specific crop. Download : Download high-res image (152KB) Download
    : Download full-size image Fig. 9. A screenshot of the “WIDHOC Multisensor Indicator”
    widget. Download : Download high-res image (451KB) Download : Download full-size
    image Fig. 10. A screenshot of the “WIDHOC Multisensor Monitor” widget. Download
    : Download high-res image (390KB) Download : Download full-size image Fig. 11.
    A picture of the GPRS node, the sensors and the frontend of the implemented system.
    3.2. Agronomical results generated by the FIWARE architecture Verifying that all
    the relevant information is suitably acquired, sent to and stored in the FIWARE
    cloud is required. Furthermore, it is also particularly important to analyse several
    performance parameters related to for instance, nodes’ electrical consumption,
    network latency, response delays, or number of loss messages and data, if it is
    desired to satisfy the expectations of users; since, if data are not properly
    sent, stored and retrieved, the crop monitoring process could lead to stakeholders
    to misunderstand the crop behaviour and, then, to take wrong decisions about the
    irrigation model that should be applied. In particular, several experiments (described
    in Section 2.4), have allowed the system to be properly analysed and validated,
    considering all the aforementioned issues. In this section, the obtained results
    after conducting such trials are detailed. First, data obtained from laboratory
    tests are shown and discussed. Then, the performance of the Cloud system is evaluated
    from the results obtained in the real crops described in Section 2.1. 3.2.1. Laboratory
    results Obtaining results from laboratory tests is necessary to validate the system
    before going to the deployment stage. Specifically, power consumption and autonomy
    tests in a controlled environment are particularly useful to ensure that the node
    is capable of carrying out its tasks in the real crop with a minimum (or even
    without), human intervention. Therefore, this section shows and discusses those
    results related to node autonomy from the power consumption point of view. As
    mentioned before, the designed node is capable of sending information to the Cloud
    by using a GPRS device, which implies variable throughput and latency that depend
    on the number of other users concurrently sharing the service. Furthermore, the
    speed of data transfer could vary depending on the technology. In addition, the
    behaviour of the Cloud backend is also relevant to estimate such communication
    parameters. Latency is an important feature because it has a certain influence
    in power consumption, since the longer the node takes to send a message and receive
    the response, the higher the node power consumption is, because the radio module
    has to be turned on during the whole process. With the purpose of testing that
    the GPRS node power consumption is within an appropriate range, several real power
    consumption values have been calculated both in a controlled laboratory environment
    and after deploying a set of nodes in real plots. As mentioned before, the GPRS
    node is equipped with a microSD card that locally stores information about the
    connected sensors, the sample period and the transmission rate or the GPRS and
    remote server configurations, among others. The installer could easily change
    the operation mode by simply rewriting some parameters in a few files. In addition,
    the device also implements an algorithm specifically designed for battery life
    optimization. In fact, the solar panel connection is only activated if the battery
    is outside a specified voltage range. According to the node state, that is: (1)
    initialization and configuration, (2) standby, (3) interface warm-up, (4) digital
    sensor data acquisition, (5) GPRS standby and (6) GPRS module transmission; node
    consumption and then node autonomy could vary. Fig. 12 shows the power consumption
    values of such states. They were measured with the YOKOGAWA WT210 wattmeter and
    the associated WTVIEWER software. Download : Download high-res image (147KB) Download
    : Download full-size image Fig. 12. Power consumption of the device in any state.
    As shown in the experiments, the node only reaches the state (1) when it is switched
    on or the reset button is pressed. The device worked in the state (2) during the
    most part of the time. In this case, the power consumption was kept below 600
    μA. The sequence of states (3) and (4) was repeated every 15 min (sample rate),
    first reading the digital sensors and later the analogue sensors. After 1 h (sending
    rate), all the collected data from sensors, which were available in the card,
    were sent to the server. Obviously, as this procedure requires the radio module
    to be turned on, the consumption could be affected by network latency. Finally,
    an average power consumption of the device of 4.29 mA was calculated. More information
    about this process could be found in (Navarro-Hellín et al., 2015). Results demonstrate
    that the consumption values are in the expected range. In fact, as the devices
    are equipped with a Li-Po of 2300mAh, 3.7 nominal voltage and an external solar
    panel of 0.8 W (5 V/160 mA), the estimated autonomy of the device is of approximately
    22 days without Sun and unlimited if the whole charging system is properly working.
    3.2.2. Results obtained from the experiments in real crops The experiments in
    real crops have been designed with the purpose of demonstrating that using a Cloud
    software architecture (particularly when the FIWARE platform is used), is very
    useful for farmers and other stakeholders in the agri-food sector, since the proposed
    cloud system allows agricultural information to be monitored, properly retrieved
    and processed, in a standardized, normalized, reliable and safe way, with the
    aim of generating enough knowledge that enables decision making in the context
    of crop management, in an optimal manner. In particular, in the farms where the
    system has been tested, the main objective has been aimed to both minimize the
    water consumption and improve the crop production. In order to do this, the farms’
    owners hired the Widhoc SME’s services. Such company properly installed the proposed
    solution (including all the required sensors and nodes and deploying the FIWARE-cloud-based
    software architecture). All the information monitored by the system was at the
    disposal of not only the farmers, but a set of agronomist experts that collaborate
    with Widhoc, with the purpose of generating a suitable and optimized irrigation
    strategy (which should be applied by such farmers), according to the retrieved
    data and the expected goals. In this case, both farmers and agronomist experts
    can be considered as system’s stakeholders. In fact, they are specifically the
    final users of the proposed system. With the purpose of proving the proper operation
    of the full charging system and validating the autonomy results obtained at the
    laboratory, a real test was carried out over a period of two months. Fig. 13 shows
    the voltage recorded over the mentioned period (1st April to 28th May 2016), in
    detail. Note that, the battery voltage was kept between the desired values thanks
    to the solar panel and the charging algorithm. Download : Download high-res image
    (315KB) Download : Download full-size image Fig. 13. Battery voltage discharge
    and charge curve during 2 months period of NODE #2 and NODE #3 deployed in FARM
    #1 and FARM #2, respectively. On the other hand, it is necessary to ensure that
    the system is reliably working, in the sense that messages are properly sent and
    received by the cloud backend, and the stored information is consistent. Data
    provided by the nodes installed in the plots described in Section 2.1 have been
    properly analysed with the purpose of validating the performance of the system.
    A representative set of obtained results are shown in this section. Fig. 14, Fig.
    15 respectively show the soil matric potential and the soil volumetric water content
    acquired with the soil sensors MPS-6 and 10-HS, in both the fino lemon crop (FARM
    #1) and the almonds crop (FARM #2). Specifically, Fig. 14 represents the data
    acquired by the Node #1 of FARM #1 during May 2016. Such representation demonstrates
    that the water needs has been kept, since the Ψm values are greater than −20 kPa.
    Moreover, the variations in the θv values are related to the irrigations cycles
    applied to the crop during the aforementioned month. Finally, the θv values measured
    at 40 and 80 cm of depth reveal a correct drain and an appropriate selected irrigation
    frequency when the retentive soil characteristics are considered. On the other
    hand, a similar analysis for the Ψm and the θv values measured with Node #2 of
    FARM #2 could be determined in Fig. 15. Download : Download high-res image (351KB)
    Download : Download full-size image Fig. 14. Soil matric potential and volumetric
    water content values collected during one month with the NODE #1 deployed in the
    fino lemon crop (FARM #1). Download : Download high-res image (317KB) Download
    : Download full-size image Fig. 15. Soil matric potential and volumetric water
    content values collected during one month with the NODE #2 deployed in the almonds
    crop (FARM #2). 3.2.3. Final remarks Summarizing, results show that the whole
    proposed cloud-based system is properly working both at the laboratory and in
    real crops. One major advantage of the system is related to scalability from both
    hardware and software points of view. In fact, the node has been designed to enable
    the inclusion of new sensors frequently used in agriculture, thanks to the set
    of interfaces embedded in the GPRS board. In addition, reprogramming the firmware
    is also a relatively simple task. On the other hand, from the software developer
    point of view, the system maintenance is easy, since the software architecture
    is based on reusable components hosted in the FIWARE cloud. Moreover, the databases’
    schemas are generic enough for including information of new sensors that could
    be easily added, if required; consequently, the objective of designing a scalable,
    reusable and easy-of-sharing warehouse, in the context of PA, is met. On the other
    hand, it is not necessary to acquire and maintain expensive computing equipment,
    because FIWARE offers a set of virtual machines that can be properly configured
    and are automatically scaled according to the application requirements. When the
    FIWARE cloud provider is compared to other well-known public cloud providers,
    the first one offers an open source and free solution that supplies all the necessary
    modules for Cloud Computing (including Big Data), in a safe and reliable manner.
    Furthermore, FIspace and the SmartAgriFood project offer interesting modules focused
    on the design and development of solutions for the agri-food sector, including
    components that enable the business to business processes, as for example, the
    Business Collaboration Module (BCM) and the Event Processing Module (EPM), among
    others. Note that, other general providers such as Google or Amazon only allows
    some general services to be used free of charge, but subject to the conditions
    of a system based on quotas; therefore, FIWARE is cheaper and offers more services.
    4. Conclusions In this paper, a software architecture hosted in the FIWARE cloud
    has been presented. The designed software components allow worldwide agronomical
    information to be stored in a common data warehouse that saves normalized information
    from the agronomical point of view. Stakeholders and particularly agronomists
    can effortlessly analyse (by using an easy and usable user interface, see Fig.
    8), the monitored information that allow them to take decisions about irrigation
    control and other crop management procedures. In fact, agronomists that works
    with Widhoc make useful reports for customers by using the valuable knowledge
    that the proposed system provides. Such reports are helping farmers to improve
    their productivity and to minimize the water consumption. Experiments have demonstrated
    that using the proposed system easily and transparently enables agronomical data
    registration, regardless of the used hardware architecture, since all the software
    modules (firmware, backend and frontend), are highly uncoupled. From both the
    hardware and software developer points of view, the system is easily scalable.
    The FIWARE cloud provides a suitable hosting site for the software architecture,
    whose modules are reusable and can be easily maintained, without the need of acquiring
    expensive computing hardware equipment. The virtual machines provided by FIWARE
    are easily to configure and the system is automatically scaled according to the
    application requirements. Moreover, the FIWARE cloud offers a set of interesting
    benefits for the agri-food sector, since it provides a collection of specific
    enablers that allow stakeholders to share agricultural information in a normalized,
    reliable and secure manner. In fact, the proposed software architecture will be
    properly extended by including features supplied by FISpace, in the context of
    Agriculture, with the purpose of integrating modules that make the business to
    business procedures easier. Acknowledgments The development of this work was supported
    by the Spanish Ministry of Science and Innovation through the projects cDrone
    (ref. TIN2013-45920-R) and RIDEFRUT (ref. AGL2013-49047-C2-1-R). We would like
    to thank Widhoc Smart Solutions S.L. for letting us to use their facilities to
    carry out the tests. This article also is the result of the activity carried out
    under the “Research Programme for Groups of Scientific Excellence at Region of
    Murcia” of the Seneca Foundation (Agency for Science and Technology of the Region
    of Murcia). References Allen et al., 1998 R.G. Allen, L.S. Pereira, D. Raes, M.
    Smith Crop evapotranspiration: guidelines for computing crop water requirements
    Irrigation and Drainage Paper No. 56, Food and Agriculture Organization of the
    United Nations, Rome, Italy (1998) Google Scholar Brewster et al., 2012 C. Brewster,
    S. Wolfert, H. Sundmaeker Identifying the ICT challenges of the agri-food sector
    to define the architectural requirements for a future internet core platform Proceedings
    of the eChallenges e-2012 Conference, Lisbon, October (2012) Google Scholar Chibuzor
    and Lionel, 2006 E. Chibuzor, S. Lionel Self organising wireless sensor networks
    as a land management tool in developing countries: a preliminary survey Proceedings
    of the London Communications Symposium (LCS 2006), London September (2006) Google
    Scholar Choudhary et al., 2016 S.K. Choudhary, R.S. Jadoun, H.L. Mandoriya Role
    of cloud computing technology in agriculture fields Comput. Eng. Intell. Syst.,
    7 (2016), pp. 1-7 View in ScopusGoogle Scholar Cosmos GE, 2016 Cosmos GE. Description
    Architecture of the BigData Analysis Generic Enabler (GE) (2016) https://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FIWARE.ArchitectureDescription.Data.BigData.
    Consultedon May 2016 Google Scholar De la Rosa et al., 2016 J.M. De la Ros, M.R.
    Conesa, R. Domingo, E. Aguayo, N. Falagán, A. Pérez-Pastor Combined effects of
    deficit irrigation and crop level on early nectarine trees Agric. Water Manage.,
    170 (2016), pp. 120-132, 10.1016/j.agwat.2016.01.012 ISSN 0378-3774 Google Scholar
    FIspace, 2013 FIspace D200.1, 2013. FIspace Design and Release Plan WP200 Deliverable.
    Consulted on May 2016. Google Scholar Fiware Project, 2016 Fiware Project Core
    Platform for the Future Internet Private Public Partnership Project (PPP) (2016)
    https://www.fiware.org. Consulted on May 2016 Google Scholar García Morillo et
    al., 2015 J. García Morillo, M. Martín, E. Camacho, J.A. Rodríguez Díaz, P. Montesinos
    Toward precision irrigation for intensive strawberry cultivation Agric. Water
    Manage., 151 (2015), pp. 43-51, 10.1016/j.agwat.2014.09.021 Google Scholar Granell
    et al., 2016 C. Granell, D. Havlik, S. Schade, Z. Sabeur, C. Delaney, J. Pielorz,
    T. Usländer, P. Mazzetti, K. Schleidt, M. Kobernus, F. Havlik, N. Rune Bodsberg,
    A. Berre, J.L. Mon Future Internet technologies for environmental applications
    Environ. Modell. Software, 78 (2016), pp. 1-15, 10.1016/j.envsoft.2015.12.015
    ISSN 1364-8152 View PDFView articleView in ScopusGoogle Scholar IDAE, 2005 IDAE
    (Energy Diversification and Saving Institute, spanish Ministry of Industry, Tourism
    and Commerce), 2005. Ahorro y Eficiencia Energética en Agricultura de Regadío,
    Madrid. Google Scholar Kavis, 2014 M.J. Kavis Architecting the Cloud: Design Decisions
    for Cloud Computing Service Models (SaaS, PaaS, and IaaS) Wiley (2014) ISBN-13
    978-1118617618, ISBN-10 1118617614 Google Scholar López et al., 2015 J.A. López,
    H. Navarro, F. Soto, N. Pavón, J. Suardíaz, R. Torres GAIA2: amultifunctional
    wireless device for enhancing crop management Agric. Water Manage., 151 (2015),
    pp. 75-86, 10.1016/j.agwat.2014.10.023 View PDFView articleView in ScopusGoogle
    Scholar Navarro-Hellín et al., 2015 H. Navarro-Hellín, R. Torres-Sánchez, F. Soto-Valles,
    C. Albaladejo-Pérez, J.A. López-Riquelme, R. Domingo-Miguel A wireless sensors
    architecture for efficient irrigation water management Agric. Water Manage., 151
    (2015), pp. 64-74, 10.1016/j.agwat.2014.10.022 View PDFView articleView in ScopusGoogle
    Scholar Oates et al., 2015 M.J. Oates, A.L. Vázquez de León, D.S. Intrigliolo,
    J.M. Molina Martínez, A. Ruiz-Canales Evaluation of an experimental system of
    soil moisture registration for irrigation management in potted vineyard (Vitis
    vinifera L. CV Bobal) of multi-depth temperature compensation based in resistivity
    measurements Agric. Water Manage., 151 (2015), pp. 126-135, 10.1016/j.agwat.2014.10.029
    View PDFView articleView in ScopusGoogle Scholar Puerto et al., 2013 P. Puerto,
    R. Domingo, R. Torres, A. Pérez-Pastor, M. García-Riquelme Remote management of
    deficit irrigation in almond trees based on maximum daily trunk shrinkage. Water
    relations and yield Agric. Water Manage., 126 (2013), pp. 33-45 View PDFView articleView
    in ScopusGoogle Scholar Sales et al., 2013 N. Sales, O. Remedios, A. Arsenio Wireless
    sensor and actuator system for smart irrigation on the cloud IEEE 2nd World Forum
    on Internet of Things (WF-IoT), 2015 (2013), pp. 1-6 View in ScopusGoogle Scholar
    Voorsluys et al., 2011 W. Voorsluys, J. Broberg, R. Buyya R. Buyya, J. Broberg,
    A. Goscinski (Eds.), Introduction to Cloud Computing, in Cloud Computing: Principles
    and Paradigms, John Wiley & Sons, Inc., Hoboken, NJ, USA (2011), 10.1002/9780470940105
    ch1 Google Scholar Vyas et al., 2016 D. Vyas, A. Borole, S. Singh Smart agriculture
    monitoring and data acquisition system Int. Res. J. Eng. Technol. (IRJET), 03
    (2016), pp. 1823-1826 Google Scholar Zhang et al., 2002 N. Zhang, M. Wang, N.
    Wang Precision agriculture-a worldwide overview Comput. Electron. Agric., 36 (2002),
    pp. 113-132 View PDFView articleView in ScopusGoogle Scholar Zhu et al., 2013
    Y. Zhu, D. Wu, S. Lil Cloud computing and agricultural development of China: theory
    and practice IJCSI Int. J. Comput. Sci. Issues, 10 (2013), pp. 7-12 View in ScopusGoogle
    Scholar Cited by (0) View Abstract © 2016 Elsevier B.V. All rights reserved. Part
    of special issue Special Issue: Advances on ICTs for Water Management in Agriculture:
    Overseen by: J.E. Fernández Edited by Manuel Ferrández-Villena, Antonio Ruiz-Canales
    Download full issue Other articles from this issue Energy and water management
    for drip-irrigation of tomatoes in a semi- arid district 31 March 2017 Imene Yahyaoui,
    …, Marcello Vieira Segatto View PDF Evaluation of event-based irrigation system
    control scheme for tomato crops in greenhouses 31 March 2017 A. Pawlowski, …,
    S. Dormido View PDF Irrigation management of greenhouse zucchini with different
    soil matric potential level. Agronomic and environmental effects 31 March 2017
    J.I. Contreras, …, R. Baeza View PDF View more articles Recommended articles Article
    Metrics Citations Citation Indexes: 82 Captures Readers: 260 View details About
    ScienceDirect Remote access Shopping cart Advertise Contact and support Terms
    and conditions Privacy policy Cookies are used by this site. Cookie settings |
    Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Agricultural Water Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A software architecture based on FIWARE cloud for Precision Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Li L.
  - Zhang M.
  - Li M.
  - Sigrimis N.
  - Anastasiou A.
  - Wang M.
  citation_count: '5'
  description: 'This paper is an overview of a large knowledge based operations optimization
    system that is partially in operation and in part under development for implementing
    deep knowledge schemes as well as adapting protocols and hardware to comply with
    the expected wave on IOT. With the development of sensing, wireless communication,
    and Internet technologies, we are now living in a world that is filled with various
    smart things - the Internet of Things. This paper introduces and prospects an
    emerging research area - the Embedded Intelligence (EI) for agricultural operations.
    This field, in its humanistic scope, aims at revealing the individual behaviors,
    spatial contexts, as well as social patterns and urban dynamics by mining the
    digital traces left by people while interacting with Internet of Smart Things
    (cameras, smart cars, smart cards, etc). In the agricultural sector we add mining
    of existing technology (books, articles, blue prints) to generate high depth Ontologies
    for reasoning and making pro-active decisions. We further include Intelligent
    Data Analysis to discover new knowledge from data records. The paper discusses
    the research history, characteristics, general architecture, major applications,
    and research issues of EI and exemplifies an application of the team in IOT Smart
    Irrigation. In this paper, a greenhouse management system based on knowledge supporting
    technology is designed. It includes three parts: a wireless sensor network (WSN),
    a service platform operating in Internet, and a decision-making support system
    (DMSS) based on knowledge supporting technology. The wireless sensor network is
    used to monitor and acquire all types of environmental information for the crop
    growth, such as air temperature, air relative humidity, CO2 concentration, substrate
    temperature, soil water content, etc. All data collected by WSN is sent to the
    service platform via Internet, and then the data are analyzed through DMSS based
    on cloud service technology. In the DMSS, the data from WSN are sent to the service
    platform where processed with expert''s knowledge, and then derive an optimal
    decision to send back to ground equipment to control the greenhouse. This process
    would realize high resolution optimization management in greenhouse. The efficiency
    of the whole system based on IoT is expected to succeed in many aspects from environmental
    indices (IPM) to economic sustainability, based on targets set to the service
    by the grower.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: American Society of Agricultural and Biological Engineers Annual International
    Meeting 2012, ASABE 2012
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Application of IoT technology in greenhouse management
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
