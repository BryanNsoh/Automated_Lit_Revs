- DOI: https://doi.org/10.1109/access.2020.3048415
  analysis: '>'
  authors:
  - Abhinav Sharma
  - Arpit Jain
  - Prateek Gupta
  - Vinay Chowdary
  citation_count: 272
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy IEEE.org IEEE Xplore IEEE
    SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse
    My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out
    All Books Conferences Courses Journals & Magazines Standards Authors Citations
    ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 9 Machine Learning
    Applications for Precision Agriculture: A Comprehensive Review Publisher: IEEE
    Cite This PDF Abhinav Sharma; Arpit Jain; Prateek Gupta; Vinay Chowdary All Authors
    289 Cites in Papers 43783 Full Text Views Open Access Comment(s) Under a Creative
    Commons License Abstract Document Sections I. Introduction II. Impact of Artificial
    Intelligence and IoT in Agriculture III. Machine Learning Algorithms IV. Machine
    Learning Applications in Precision Agriculture V. IoT Applications in Precision
    Agriculture Show Full Outline Authors Figures References Citations Keywords Metrics
    Abstract: Agriculture plays a vital role in the economic growth of any country.
    With the increase of population, frequent changes in climatic conditions and limited
    resources, it becomes a challenging task to fulfil the food requirement of the
    present population. Precision agriculture also known as smart farming have emerged
    as an innovative tool to address current challenges in agricultural sustainability.
    The mechanism that drives this cutting edge technology is machine learning (ML).
    It gives the machine ability to learn without being explicitly programmed. ML
    together with IoT (Internet of Things) enabled farm machinery are key components
    of the next agriculture revolution. In this article, authors present a systematic
    review of ML applications in the field of agriculture. The areas that are focused
    are prediction of soil parameters such as organic carbon and moisture content,
    crop yield prediction, disease and weed detection in crops and species detection.
    ML with computer vision are reviewed for the classification of a different set
    of crop images in order to monitor the crop quality and yield assessment. This
    approach can be integrated for enhanced livestock production by predicting fertility
    patterns, diagnosing eating disorders, cattle behaviour based on ML models using
    data collected by collar sensors, etc. Intelligent irrigation which includes drip
    irrigation and intelligent harvesting techniques are also reviewed that reduces
    human labour to a great extent. This article demonstrates how knowledge-based
    agriculture can improve the sustainable productivity and quality of the product.
    A graphical abstract for Machine Learning Applications for Precision Agriculture:
    A Comprehensive Review. Published in: IEEE Access ( Volume: 9) Page(s): 4843 -
    4873 Date of Publication: 31 December 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.3048415
    Publisher: IEEE CCBY - IEEE is not the copyright holder of this material. Please
    follow the instructions via https://creativecommons.org/licenses/by/4.0/ to obtain
    full-text articles and stipulations in the API documentation. Nomenclature AbbreviationExpansion
    AI Artificial Intelligence ML Machine Learning DL Deep Learning IoT Internet of
    Things GPS Global Positioning System UAV Unmanned Aerial Vehicle ASC Agriculture
    Supply Chain NLP Natural Language Processing SI Swarm Intelligence ANN Artificial
    Neural Network NN Neural Network K-Nearest kNN Neighbour SVM Support Vector Machines
    RNN Recurrent Neural Network ELM Extreme Learning Machines RELM Regularized Extreme
    Learning Machine XGBoost Extreme Gradient Boosting MLP Multi-Layer Perceptron
    CNN Convolutional Neural Network PCA Principal Component Analysis RBFN Radial
    Basis Function Network RF Random Forest GBM Gradient Boosting Model SVR Support
    Vector Regression BPNN Back Propagation Neural Network LS-SVM Least square support
    vector machine GRNN Generalized Regression Neural Networks RELM Residual Maximum
    Likelihood DBN Deep Belief Network RT Regression Tree MLR Multiple Linear Regression
    LASSO Least Absolute Shrinkage and Selection Operator Regression RIDGE Ridge Regression
    SNN Shallow Neural Network GCN Graph Convolutional Network GEP Gene Expressions
    Programming RCNN Regions-CNN GA Genetic Algorithm PSO Particle Swarm Optimization
    PLSR Partial Least Square Regression ANFIS Adaptive Neuro Fuzzy Inference System
    TCN Temporal Convolution Network SCC Somatic Cell Count OPF Optimum-Path Forest
    BVDV Bovine Viral Diarrhea Virus MC Moisture Content SOC Soil Organic Carbon TN
    Total Nitrogen SOM Soil Organic Matter NDVI Normalized Difference Vegetation Index
    CEC Cation Exchange Capacity ETc Estimation of evapotranspiration SOM Soil Organic
    Matter LAI Leaf-Area Index RGB Red Green Blue DW Accumulated Dry Weight VRI Variable
    Rate Irrigation ET Evapo-Transpiration EC Electrical Conductivity SCM Sub-Clinical
    Mastitis SI Scatter Index AWM Attribute Weighting Model AUC Area Under the Curve
    R Correlation Coefficient R2 Coefficient of Determination MSPE Mean Squared Prediction
    Error MAPE Mean Absolute Percentage Error MAE Mean Absolute Error RMSE Root Mean
    Square Error RRMSE Relative Root Mean Square Error RPD Residual Prediction Deviation
    ROC Receiver Operating Characteristic RMSD Root Mean Square Difference NS Nash–Sutcliffe
    coefficient WSN Wireless Sensor Network GWO Grey Wolf Optimization SPI Serial
    Peripheral Interface I2C Inter-Integrated Circuit UART Universal Asynchronous
    Receiver Transmitter USB Universal Serial Bus BLE Bluetooth Low Energy SECTION
    I. Introduction The population of the world will increase to 9.1 billion approximately
    thirty-four percent as of today by the end of 2050. Food requirement will increase
    by 70 percent and due to rapid urbanization, land availability for agriculture
    will decrease drastically in the coming years. India will be the most populated
    country by 2050 and presently it is already lagging the domestic food production.
    The main reason for reduced food production is the lack of planning, unpredictable
    weather conditions, improper harvesting and irrigation techniques and livestock
    mismanagement. In the last few years, nature has experienced a drastic change
    in weather conditions due to global warming. The average temperature of the earth
    has been increased due to which there is uncertainty in climatic conditions. Frequent
    droughts, heavy rainfall are the biggest challenge for poor farmers. According
    to the government of India annual economic survey, adverse climatic conditions,
    reduce the farmer’s income by 20-25%. Precision agriculture [1], [2] is one of
    the solutions to ensure food security for the entire world [3]. Precision agriculture
    also abbreviated as digital agriculture is a technology-enabled data-driven sustainable
    farm management system. It is basically the adoption of modern information technologies,
    software tools, and smart embedded devices for decision support in agriculture
    [4] as shown in figure 1. Mechanized agriculture and the green revolution are
    the two key components of the first and second agriculture revolution. Precision
    farming is an important part of the third agriculture revolution [5]. FIGURE 1.
    Precision agriculture. Show All John Deere introduced this technology in 1990
    for the sowing of seeds and spraying of fertilizers using global positioning system
    (GPS) controlled tractors. The main focus of precision farming is to reduce the
    production cost and environmental effects to increase the farm’s profitability.
    Digital technologies such as IoT [6], AI, data analytics, cloud computing, and
    block-chain technology play a key role in precision agriculture. In precision
    farming, IoT based smart sensors are deployed in the agriculture land for collecting
    data related to soil nutrients, fertilizers, and water requirements as well as
    for analysing the crop growth. Autonomous and semi-autonomous devices such as
    an unmanned aerial vehicle (UAV) [7] and robots are used for identifying weed
    and disease in the plants using computer vision techniques. Satellite images are
    also used in precision agriculture for monitoring the field and identifying the
    diseases in the plants. The data obtained from the deployed sensors [8] are processed
    and analyzed using ML algorithms to make farming practice more controlled and
    optimized. ML algorithms are also used for weather and rainfall prediction based
    on the data obtained from sensors, climatic records, and satellite images. This
    could save the lives of thousands of farmers who commit suicide because of crop
    loss due to uncertainty in weather conditions. Smart livestock management is an
    important component of precision agriculture. It helps in monitoring the health,
    welfare, productivity, and reproduction of animals throughout their life cycle.
    Sensors and cameras monitor animal’s health and computer vision techniques help
    in making intelligent decisions such as stopping the communal spread of diseases.
    Autonomous tractors and automated irrigation systems provide modern farming solutions
    to farmers. The widespread utilization of precision farming across the world is
    due to the presence of innovative machine and deep learning (DL) algorithms, high-speed
    internet access, and efficient computational devices. In [10] authors have discussed
    applications of ML for sustainable agriculture supply chain (ASC) performance.
    Authors have presented a unique ML-ASC framework that can guide researchers and
    agriculture practitioners to understand the role and importance of digital technologies
    in the agriculture industry. In [11] authors reviewed different ML applications
    in agriculture and discussed how digital technologies will benefit the agriculture
    industry. In this paper, the authors have presented a comprehensive review of
    the ML application for precision agriculture. This review article will provide
    an insight into the research community about the adoption of digital practices
    in the agriculture management system. It is anticipated that government agencies
    will frame policies to promote precision farming across the world. The main contribution
    of the article is outlined as follows: Applications of artificial intelligence
    and IoT in precision agriculture are discussed along with their practical implications.
    Foundation of ML and DL algorithms which find their application in precision agriculture
    has been discussed. Performance comparison for various ML, DL algorithms in precision
    farming has been carried out based on the state-of-art literature. Assessment
    of artificial intelligence techniques in precision agriculture is outlined along
    with its statistical and performance analysis. Comparison of performance parameters
    of sensors used in IoT applications in precision agriculture is presented. Integration
    of wireless sensor network (WSN) with IoT and artificial intelligence in precision
    agriculture is discussed. Challenges and future trends of artificial intelligence
    in precision farming are briefly outlined. Table 1 highlights the major differences
    of this review article with other articles published in this field. The paper
    is organized as follows. Section 2 presents the impact of artificial intelligence
    (AI) and IoT in the field of agriculture. Section 3 briefly elucidate ML algorithms.
    In section 4 different ML applications in precision farming are briefly reviewed.
    Section 5 presents the IoT application in precision agriculture. Section 6 evaluates
    and access the knowledge-based agriculture system. Section 7 outlines the challenges
    and limitation of AI in precision agriculture. Section 8 presents the future trends
    of AI in precision agriculture. Section 9 provides conclusive remarks to summarize
    the paper. TABLE 1 Key Differences of the Article With Published Articles SECTION
    II. Impact of Artificial Intelligence and IoT in Agriculture The term AI was first
    coined in the Dartmouth conference in the year 1956 by John McCarthy and he defined
    it as a science and engineering of making intelligent machines or more specifically
    intelligent computer programs. AI technology provides computational intelligence
    to machines so that they can learn, understand and react according to the situation.
    ML, DL, natural language processing (NLP), swarm intelligence (SI), expert systems,
    fuzzy logic, and computer vision are the subfields of AI as shown in figure 2.
    This field finds endless applications across different sectors of human life.
    Intelligent AI programs are widely explored in health-care, agriculture, finance,
    robotics, e-commerce and the automation industry. Samsung, Apple, and other electronics
    giant companies announced that they will be utilizing this technology in every
    device they will manufacture in the near future. IoT is another emerging technology
    in which smart sensors, devices are interconnected through the internet. These
    smart sensors can be utilized to gather data across different disciplines such
    as solar plants, agriculture fields, disaster-prone areas, manufacturing industry
    for efficient resource utilization. With the increase in population over the year’s
    demand for agriculture products is increasing day by day. However, with limited
    land availability for farming and reduce interest among the young generation to
    adopt farming as their profession, it has become a challenging task for the agriculture
    industry to satisfy the food requirement of millions of people. Now, the agriculture
    industry is widely adopting smart technologies like IoT and AI to efficiently
    cultivate organic products in limited land areas as well as to overcome the traditional
    challenges of farmers. FIGURE 2. Artificial intelligence techniques. Show All
    IoT based smart farming system is built for monitoring soil nutrients and soil
    moisture using sensors. ML algorithms are explored for determining the optimum
    amount of fertilizers required for soils before the sowing of crops. Drones are
    revolutionizing the agriculture industry. These drones are cameras enabled and
    are used for different applications such as field and crop monitoring, spraying
    of pesticides, and drip irrigation. The images captured by the drones over the
    entire lifecycle of crops can be examined using DL and computer vision algorithms
    for disease and weed identification. Thereafter, these drones are used for spraying
    pesticides over the weeds and infected crops. Over the years uncertainty in weather
    conditions is the main concern of farmers. Drip irrigation using drones is an
    efficient AI-empowered irrigation system which is basically trained on weather
    pattern and can effectively reduce the water problems of farmers. AI-enabled robots
    can be used for harvesting the crops at a much faster pace and in large volumes.
    Robots can reduce human labour to a large extent and can be used along with drones
    for monitoring the field. Livestock management is another major concern for farmers.
    IoT based sensors can be deployed in the field for health monitoring of cattle.
    This information can be utilized for protecting the bunch of cattle from diseased
    cattle. NLP based virtual assistant applications like chatbots can update the
    farmers with the latest advancement in technologies for agriculture. Farmers can
    finds solutions for their problems and incorporate the latest technology in their
    farming for improving their field productivity. Thus, AI and IoT are the two major
    technologies that will play a vital role in the agriculture industry. SECTION
    III. Machine Learning Algorithms ML is the subfield of computer science that gives
    computers the ability to learn without being explicitly programmed. (Arthur Samuel,
    1959) [12]. Alan Turing in the year 1950 proposed the concept of learning machines
    and wrote a research article “The Turing Test for Machine Intelligence” [13].
    He performed a test and examined the machine’s ability to demonstrate intelligent
    behaviour similar to humans. A machine or intelligent computer program learns
    and extract knowledge from the data, builds a framework for making predictions
    or intelligent decisions. Thus, the ML process is divided into three key parts,
    i.e. data input, model building, and generalization as shown in figure 3. Generalization
    is the process for predicting the output for the inputs with which the algorithm
    has not been trained before. ML algorithms are mainly used to solve complex problems
    where human expertise fails such as weather prediction, spam filtering, disease
    identification in plants, pattern recognition. FIGURE 3. A Machine learning process.
    Show All Today, due to the availability of innovative algorithms and large data
    sets through internet resources industries and research communities are widely
    using ML algorithms for solving a diverse set of problems. DL is the subfield
    of the family of ML algorithms which is trained from large sets and uses an artificial
    neural network (ANN) to make intelligent decisions. ML algorithms are categorized
    as supervised learning, unsupervised learning, and reinforcement learning as shown
    in figure 4. Supervised learning as the name suggests is learning with the supervisor
    or teacher. This set of algorithms works with labeled data-set which means corresponding
    to each input there are outputs. The algorithm builds an input-output relationship
    with this labeled data set and thereafter generalize or predicts outputs for unseen
    inputs. Supervised learning algorithms used for predicting the categorical value
    are known as classification algorithms and the algorithms that are used for predicting
    the numerical value are known as regression algorithms. Unsupervised learning
    algorithms works with unlabelled data and discovers unknown objects by grouping
    similar objects. The goal of an unsupervised learning algorithm is to extract
    hidden knowledge from the training data set thus this approach is difficult to
    implement than supervised learning algorithms. Reinforcement learning is another
    approach that learns from the environment through reward and punishment. AlphaGo,
    a chess-playing game developed by DeepMind utilized reinforcement learning for
    defeating the world’s best chess-playing computer program. FIGURE 4. Categorization
    of machine learning algorithms. Show All In this paper the performance of different
    ML algorithms are analysed and discussed in the field of agriculture. Table 2
    presents different types of supervised, unsupervised and reinforcement learning
    algorithms utilized for soil and weather prediction, disease and weed identification,
    intelligent irrigation and harvesting techniques as well as livestock management.
    TABLE 2 Machine Learning Algorithms SECTION IV. Machine Learning Applications
    in Precision Agriculture In many countries, the farmers rely on the traditional
    ways of farming which is based on the reliability of the suggestions from the
    elderly and their experience. This method leaves farmers at the mercy of random
    climatic conditions which are already getting random due to global warming and
    uneven rainfall patterns. The manual spraying method for pesticides led to improper
    usage of resources and harms the environment. AI and IoT enabled precision agriculture
    removes the randomness and assist new age farmer to optimize every step of the
    farming process. Figure 5 (a) and (b) presents a pictorial view of traditional
    agriculture and technology enabled farm management system. FIGURE 5. (a) Traditional
    agriculture cycle (b) Precision agriculture cycle. Show All Gaitán [14] provided
    a systematic study of the impact of extreme weather events, such as hail events,
    cold waves, heat waves, and their impact on agricultural practices. The author
    reported floods, droughts, frost, hail, heatwaves, and pest outbreaks are impacted
    by climatic conditions. The AI systems are applicable in each farming operation
    as depicted in figure 4 and some of them even extend beyond the conventionally
    recognized steps. In this section we will discuss the state of art techniques
    proposed/implemented by various researchers and practitioners worldwide. A. Soil
    Properties and Weather Prediction Prediction of soil properties is the first and
    the most crucial step which influences the selection of crop, land preparation,
    selection of seed, crop yield, and selection of fertilizers /manure. The soil
    properties are directly related to the geographic and climatic conditions of the
    land in use and hence is an important factor to take into consideration. The soil
    properties prediction mostly consists of predicting nutrients in the soil, soil
    surface humidity, weather conditions during the lifecycle of the crop. Human activities
    have highly affected the properties of soil and hence our ability to cultivate
    the crops [15]. In general, there are 17 essential elements as listed in table
    3 which play an important role in plant growth [16]. The growth of crops depends
    on the nutrients available in a particular soil. The soil nutrients are mostly
    monitored by electric and electromagnetic sensors [8]. Depending on the nutrients
    farmers make informed decisions as to which crop is optimal for the land. However,
    the nutrients can be added through fertilizers, manure, etc. but with an additional
    cost. Some of them may also damage the environment and have an adverse effect
    on the soil cycle. TABLE 3 Essential Plant Nutrients [2] A scientific analysis
    of soil nutrients, soil moisture, pH is important for determining the soil properties.
    Acar et al. [17] employed an extreme learning machine (ELM) based regression model
    for prediction of soil surface humidity. The author selected two terrains having
    area 4 KM2 and 16 KM2 located in Dicle university campus for experimental analysis.
    The real-time field data was extracted using polarimetric Radarsat-2 data, which
    was pre-processed using the SNAP toolbox [18] and features were added with the
    help of local measurements by separating the field into square grids. Once the
    pre-processing and feature extraction is done the data is passed to ELM based
    regression model to predict the soil surface humidity. The algorithm was tested
    with 5 different kernel functions and the prediction was validated using leave-one-out
    cross-validation technique. The experimental results confirmed the lowest root
    mean square error (RMSE) of 2.19% when using ‘sine’ kernel function. Wang et al.
    [19] deployed soft sensors based on ELM for the measurement of nutrient solution
    composition in the soilless cultivation method. The soilless cultivation method
    is an emerging planting method. It is imperative to monitor the pH value, temperature
    and concentration changes in nutrient solution composition as the performance
    of soilless cultivation is highly dependent on these parameters. The significant
    variables in a nutrient solution cannot be measured directly hence these are determined
    with the help of auxiliary variables. The authors utilized conductivity, pH value,
    flow rate, and temperature measurements for auxiliary measurements. These auxiliary
    measurements are fed to a deep belief network-based ELM which predicts the values
    of significant variables. For experimental analysis, the authors deployed the
    model to measure the concentration of SO 2− 4 , and H 2 PO − 4 in a nutrient solution.
    The authors reported an average RMSE of 1.2414 for predictions in SO 2− 4 and
    RMSE of 0.8892 for prediction of H 2 PO − 4 . Park et al. [20] utilized ML algorithms
    to predict the soil moisture using data from MODIS. The authors downscaled the
    AMSR2 soil moisture to 1KM using random forest (RF) and Cubist algorithms. An
    ensemble of these algorithms was used to obtain soil moisture data. The results
    obtained through the ML methods were compared with the statistical ordinary least
    squares technique. The ML model exhibited a R 2 (coefficient of determination)
    of 0.96 and an RMSE of 0.06, whereas a R 2 of 0.47 and a RMSE of 0.16 was associated
    with the statistical ordinary least squares. Reda et al. [21] explored ML algorithms
    to estimate soil organic carbon (SOC) and total nitrogen (TN) in soil samples
    collected from four agricultural lands of Moroccan. Data set of near-infrared
    spectroscopy is utilized in comparison to traditional chemical methods as this
    technique reduces the computation time and resource utilization. The ensemble
    learning modeling algorithm presents the best performance among other regression
    models and back-propagation neural networks (BPNN) algorithm. The proposed algorithm
    presents R 2 of 0.96, RMSE of 1.92, performance to deviation (RPD) of 4.87 for
    SOC and R 2 of 0.94 and RMSE of 0.57, RPD of 4.91 for TN prediction. Morellos
    et al. [22] also utilized visible and infrared spectroscopy to determine TN, SOC,
    and moisture content (MC) in the arable field in Premslin Germany. Spectroscopy
    dataset is used for building the predictive ML model for estimating all three
    soil properties. Least square support vector machine (LS-SVM) and cubist ML algorithms
    outperform principal component regression and partial least square regression
    multivariate methods in terms of RMSE and residual prediction deviation (RPD).
    LS-SVM best predict SOC and MC with RMSE of 0.062 and 0.457, RPD of 2.24, and
    2.20. Cubist best predicts for TN with RMSE of 0.071 and RPD of 1.96. Andrade
    et al. [23] build ordinary least square regression, RF, cubist regression, XGboost
    prediction model for determining soil properties from portable X-ray fluorescence
    (pXRF) spectrometry dataset in Brazilian coastal plains. Three soil properties
    total nitrogen, soil organic matter (SOM), cation exchange capacity (CEC) were
    analyzed using RF, ordinary least squares regression (OLS), cubist regression
    (CR), XGBoost (XGB). RF algorithm gives the best performance with R 2 of 0.50
    for TN, R 2  0.75 for CEC and 0.56 for SOM. Deiss et al. [24] estimated the soil
    properties (clay, sand, pH, SOC) in northern Tanzania and USA Midwest from the
    spectroscopy dataset using ML algorithms. THE tuned SVM model outperforms the
    partial least square (PLS) regression model in terms of predicting all the soil
    parameters. Mahmoudzadeh et al. [25] explored the ML algorithm to predict SOC
    in the Kurdistan province of Iran. The simulation results suggest that RF accurately
    predicts SOC with R 2 of 0.60 and RMSE of 0.35% in comparison to SVM, kNN, Cubist,
    and Extreme Gradient Boosting (XGBoost) ML algorithm. The study also suggests
    that air temperature, annual rainfall, valley depth, texture of terrain surface
    are some of the important factors that influence SOC spread over the Kurdistan
    region. Veres et al. [26] explored DL architecture such as CNN for predicting
    the soil properties from the infra-red spectroscopy dataset. Benke et al. [27]
    predict soil electrical conductivity (EC) and SOC in different regional locations
    of Victoria, Australia using pedotransfer function (PTF) based on ML algorithm.
    PTF basically converts soil measurement into soil properties and provides inputs
    for ML simulation algorithms. In the proposed approach PTF use Generalised Linear
    Mixed Effects Model (GLMM) model and Residual Maximum Likelihood (REML) to predict‘
    the soil properties. Traditional approaches to soil properties and crop yield
    prediction require time-consuming field surveys and the deployment of expensive
    sensors. Khanal et al. [28] proposed an alternative approach in which the dataset
    for the prediction of soil properties and crop yield is generated using remotely
    sensed aerial images of agricultural land. Five soil properties, viz. pH value,
    magnesium (Mg), potassium (K), SOM, CEC, and crop yield were predicted using RF,
    SVM, Cubist, NN, Gradient Boosting Model (GBM) ML algorithms. NN presents the
    highest prediction accuracy for SOM having R 2 of 0.64, RMSE of 0.44 and CEC having
    R 2 of 0.67, RMSE of 2.35; SVM best predicts K having R 2 of 0.21, RMSE of 0.49
    and Mg having R 2 of 0.22, RMSE of 4.57; and GBM best predicts pH having R 2 of
    0.15, RMSE of 0.62. RF outperforms other algorithms in terms of crop yield prediction
    and presents higher accuracy having R 2 of 0.53 and RMSE of 0.97. Labrador et
    al. [29] estimate calcium and Mg content in soil using generalized regression
    NN and genetic algorithm (GA). The digital elevation model and satellite images
    were used as input to the prediction model for estimating the soil properties.
    Chlingaryan et al. [30] discussed different ML approaches used in precision agriculture
    for accurate crop yield prediction and soil nitrogen estimation over the last
    fifteen years. Ju-Young et al. [31] investigated a seasonal climatic forecasting
    model using regularized ELM to predict day-wise mean air temperature at field
    level for a period of 90 days. The authors selected data from Korea Metrological
    Administration using the Met GloSea5GC2 model [32]. The authors fed 240 days of
    forecast data and hindcast data from the ensemble based model to the RELM algorithm.
    The algorithm performance was evaluated by measuring: RMSE, mean absolute error
    (MAE) the model prediction vs the actual values. The authors achieved an RMSE
    in the range of 1.02 to 3.35 which outperformed the meteorological data which
    has an RMSE range of 1.61 to 3.37. Soil moisture content is an important parameter
    to acknowledge in the agriculture industry as it addresses precise irrigation
    scheduling. Stamenkovic et al. [33] build a support vector regression (SVR) prediction
    model to predict soil moisture content from remotely sensed hyperspectral images.
    Song et al. [34] proposed a macroscopic cellular automata (MCA) model and combined
    its deep belief network (DBN) to predict soil moisture content over a cornfield
    in northwest china. The simulation results of DBN-MCA outperforms the multi-layer
    perceptron (MLP)-MCA in terms of RMSE. Acheing [35] explored the SVR model (i.e.
    RBF), ANN, DNN for simulating soil water retention curve (SWRC) curve of loamy
    sand. Dataset of loamy sand subjected to wetting and drying condition is collected
    using a reflectometer and tensiometer. RBF based SVR model best predicts SWRC
    under both wet and dry conditions. Feng et al. [36] estimate soil temperature
    at various soil depths of Loess Plateau of China. Four different ML algorithms
    ELM, generalized regression neural networks (GRNN), backpropagation neural networks
    (BPNN), and RF were investigated for predicting the soil temperature. ML algorithms
    were trained with air temperature, wind speed, relative humidity, and vapour pressure
    and solar radiation as input parameters and the simulations show that ELM outperforms
    other ML algorithms in terms of RMSE, MAE, Nash–Sutcliffe coefficient (NS) and
    concordance correlation coefficient. Mohammadi et al. [37] explored ELM for predicting
    daily dew point temperature in different parts of Iran. This part of the world
    experience different climatic conditions throughout the year. The proposed model
    accurately predicts dew point temperature than SVM and ANN algorithms. Zhu et
    al. [38] accurately predict daily evapotranspiration in Northwest China using
    hybrid particle swarm optimization (PSO)-ELM model to optimize crop water requirement
    in agriculture. Alizamir et al. [39] accurately predicts soil temperature at different
    depths of 5, 10, 50 and 100 cm using ELM, ANN, classification and regression trees,
    group method of data handling using dataset obtained from Mersin station operated
    by Turkish Meteorological Service. The simulation results suggest that soil temperature
    can be estimated easily using air temperature upto depth of 50 cm while for depth
    of 100 cm additional information of solar radiation and wind speed is required.
    Rainfall prediction plays a critical role in the water resource management system,
    flood risk assessment, and the agriculture industry. Acknowledging the chaotic
    nature of rainfall, it is very difficult for statistical approaches to accurately
    predict the rainfall. Cramer et al. [40] evaluated the performance of seven ML
    algorithms for rainfall prediction. The statistical results show that the radial-basis
    function neural network (RBFNN) shows the best performance among other state of
    the art algorithms. Sierra and Jesus [41] predicted the rainfall in Tenerife,
    an island in Spain based on atmospheric synoptic patterns using different ML algorithms
    and found NN gave the best performance among other ML algorithms. Kamatchi and
    Parvathi [42] employed NN for weather prediction and proposed a hybrid recommender
    system for enhancing the success ratio of the system. Lazri et al. [43] build
    a multi-classifier model for estimating precipitation using MSG images (Meteosat
    second generation) and dataset obtained using radar. The proposed approach shows
    that the proposed multi-classifier improves the standard of classification. Shardoor
    and Rao [44] surveyed three different approaches i.e. ML techniques, data mining
    techniques, and satellite forecasting techniques for rainfall prediction. Table
    4 presents a comparative study of different ML algorithms for prediction of soil
    properties and weather prediction. TABLE 4 Different ML Algorithms for Prediction
    of Soil Properties and Weather Conditions B. Crop Yield Prediction A significant
    piece of information for any farmer is the prediction of crop yield and how the
    yield can be increased. pH value, soil type, and quality, weather pattern: temperature,
    rainfall, humidity, sunshine hours, fertilizers, and harvesting schedules are
    some of the parameters which play an important role in predicting the crop yield
    [45]. Scientifically manual farming can be considered as a feedback control system
    in which the corrective action is taken once a setback in a crop is observed.
    The crop yield will highly depend on the efficiency of the optimal utilization
    of the above-mentioned resources. If some kind of anomaly goes undetected in the
    initial stage may harm the crop yield in an unprecedented way. Singh et al. [46]
    assessed hailstorms on India’s wheat production and observes that in February
    and March 2015 alone the hailstorm events caused a decline of 8.4% in national
    wheat production. For financially weak farmers in a country such as India, where
    intermittent storage of harvested crops is a rare resource, accurate weather predictions
    may turn to be miraculous for farmers. ML models when systematically applied to
    a system act as feedforward control. With the help of accurate ML models, we can
    anticipate the factors which are going to affect the crop yield. Hence the corrective
    action can be taken before even an anomaly hits the crop production. Kamir et
    al. [47] used ML models to identify the yield gap hotspots in wheat production.
    Authors generated very high-resolution yield maps using data from various sources
    between 2009 and 2015. The data was collected from various sources:(a) NDVI time-series
    data across Australia using the MOD13Q1 data set [48], (b) rainfall and temperature
    data were collected from historic climate data at Australia bureau of metrology,
    (c) maps for observed grain yield were collected at source using intelligent harvesting
    machines. The dataset generated were tested with 9 ML algorithms: RF, XGBoost,
    Cubist, MLP, SVR, Gaussian Process, k-NN, and Multivariate Adaptive Regression
    Splines. The authors combined predictions from each of the algorithms into ensembles
    for prediction optimization [49]. Out of these algorithms, SVR with RBFNN outperformed
    other algorithms and investigators were able to achieve the yield estimate with
    an R 2  of 0.77 and an RMSE value of 0.55t ha −1 . The results were validated
    using 10-fold cross-validation techniques applied to the full data set. Aghighi
    et al. [50] used various advanced regression algorithms to predict the yield of
    silage maize crops. The authors selected maize fields located at Moghan Agro-Industrial
    and Animal Husbandry Company (MAIAHC), which is about 28,000 hectares’ area and
    located in Iran. The crop yield dataset was collected for around 40 silage maize
    fields were collected for a period from 2013-2015. In addition to it, the historic
    crop yield data the authors also gathered time-series NDVI data from Landsat 8
    OLI satellite. The data was fed to advanced regression algorithms: (a) Gaussian
    Process Regression, (b) SVR, (c) Boosted Regression tree (d) RF Regression models
    and the prediction form each of the regression models were compared and evaluated.
    Authors found out the boosted regression tree reported best evaluation parameters
    with an average R-value of higher than 0.87, and RMSE in a range of 8.5 to 11.10,
    with a mean value of 9.5 during the period 2013-14. Kuwata and Shibasaki [51]
    employed DL models to estimate the crop yield. Authors deployed SVR for predicting
    the yield of corn in Illinois. For input following dataset was employed by the
    authors: (a) 5 year moving average of corn crop yield, (b) The enhanced vegetation
    index is obtained using the MOD09A1 dataset MODIS satellite, and (c) Historic
    climatic data. The dataset was fed to support the vector regression model and
    the authors reported an RMSE of 8.204 and a correlation coefficient of 0.644 for
    the model. For result, validation authors conducted 10-fold cross-validation on
    the full data set. Kulkarni et al. [52] utilized DL models to predict rice crop
    yield. The authors utilized soil properties and nutrients measurements recorded
    over 31 years and historic rainfall data. The input data was fed to recurrent
    neural network models for crop yield prediction. For effective prediction the
    authors explored different activation functions viz. sigmoid, reLu, and linear
    in the neural network. Chu and Yu [53] builds an end to end summer and winter
    rice prediction model in 81 counties in the Guangxi Zhuang Autonomous Region,
    China. The proposed BBI model works in three stages, in the first stage the original
    area data and time series metrological data is pre-processed and its output works
    as input for the second stage where BPNN and RNN (recurrent neural network) learns
    deep spatial and temporal features from the input data. In the third stage, BPNN
    learns the relationship between deep features and rice yield to predict the summer
    and winter rice yields. The performance of the model is evaluated in terms of
    error and rate of convergence, the model presents lowest error values with MAE
    and RMSE of 0.0044 and 0.0057 for summer rice prediction and 0.0074 and 0.0192
    for winter rice prediction while the algorithm converges within 100 iterations.
    Feng et al. [54] proposed a hybrid approach for wheat yield prediction in new-south
    Wales in southeastern Australia. Multiple growth specific indicators, viz. agricultural
    production system simulators (APSIM), NDVI, and SPEI (Standardized Precipitation
    and Evapotranspiration Index) are used before the prediction of wheat yield using
    regression models (multiple linear regression (MLR) and RF). APSIM+ RF hybrid
    model presents the best performance among other predictors in terms of prediction
    accuracy. Cai et al. [55] integrated two data sources, i.e. climate data and satellite
    data over fourteen years to predict the wheat yield in Australia using ML algorithms
    (SVM, RF, and NN). Simulation results show that climate data provides distinctive
    information in comparison to satellite data for yield prediction with R 2 of around
    0.75. Planting the crops on accurate date plays an important role in improving
    productivity and reducing financial loss. Gumuscu et al. [56] explored three supervised
    ML algorithms; kNN, SVM, and decision trees for predicting planting dates; early,
    normal, and late for wheat crops in Turkey. The authors utilized climate data
    of the last 300 days to train ML algorithms and explored GA for feature selection.
    kNN classification ML algorithm shows robust performance and best predicts the
    planting dates of wheat crops. Several African, American, and Asian countries
    are the major producer of coffee in the world. Nevavuori et al. [57] explored
    a deep learning approach, i.e. CNN for wheat and barley yield prediction in the
    agriculture field of Pori, Finland. NDVI and RGB dataset obtained from cameras
    installed in UAV is used to train the six-layer CNN. RGB dataset best predicts
    the crop yield in CNN with MAE of 484.3 kgha−1 and mean absolute percentage error
    (MAPE) of 8.8%. Koirala et al. [58] reviewed deep learning approaches for fruit
    detection and yield estimation. CNN in the context of computer vision is widely
    used for feature extraction from images that provide useful insight to object
    detection and yield estimation. Kouadio, et al. [59] predicted the Robusta coffee
    yield using ML techniques from soil fertility dataset of Vietnam. ELM model outperforms
    multiple linear regression and RF algorithm with RMSE of 496.35 kg ha−1 and MAE
    of 326.40 kg ha−1. Gamboa et al. [60] predict the cocoa yield in Santander, Columbia
    using a generalized linear model (GLM) and SVM. In recent decades researchers
    have explored statistical and probabilistic models for crop yield prediction.
    Gyamerah et al. [61] proposed a novel robust probabilistic forecasting model based
    on quantile random forest and Epanechnikov kernel function (QRF-E) for crop yield
    prediction in Ghana. The proposed approach didn’t only predict discrete yield
    values but completely showcase probability descriptions for prediction interval
    for the two crops groundnut and millet. The simulation result shows the superior
    performance of the proposed algorithm in terms of prediction intervals coverage
    probability and prediction interval normalized average width under uncertain weather
    conditions. Peng et al. [62] explored remote sensed satellite-based Solar-Induced
    Chlorophyll Fluorescence (SIF) dataset for training ML algorithms to predict maize
    and soybean yield in the mid-west region of the United States. Simulation results
    show that non-linear algorithms such as SVM, ANN, RF best predict the crop yield
    in comparison to least absolute shrinkage and selection operator regression (LASSO)
    and ridge regression (RIDGE) algorithm. Khaki and Wang [63] predicted the hybrid
    maize yield with a dataset of 2,267 locations of the United States and Canada
    between the years 2008 to 2016 using deep neural networks (DNN). Genotype, weather,
    and soil properties were the three components used to train DNN. The proposed
    model accurately predicts the maize yield with RMSE of 12% of the average yield
    for predicted weather dataset and 11% of the average yield for perfect weather
    dataset and outperforms LASSO, shallow neural network (SNN) and regression tree
    (RT). Simulation results show that environmental factors have a large impact on
    the prediction accuracy of crop yield. In most areas of Africa, agriculture field
    data is scarcely available thus remotely sensed dataset is widely used for monitoring
    the field. Leroux et al. [64] explored the ML algorithm for predicting the maize
    yield in Burkina Faso with a remotely sensed dataset. A process-based crop model
    SARRO which is basically designed to simulate attainable agricultural yields under
    tropical conditions is used in this study. RF outperforms MLR in maize yield prediction
    with R 2 of 0.59 at the end of the season and 0.49 before two months of harvest.
    Li et al. [65] build a statistical model for predicting the rain-fed crop yield
    using climate, satellite, and country-specific datasets in the mid-west region
    of the USA. Maimaitijiang et al. [66] explored the potential of UAV with DNN for
    soybean yield prediction from the fields of Columbia, Missouri, USA. Multi-modal
    information such as canopy spectral, structural, and thermal features extracted
    from images obtained from the sensors installed on UAV is used as the input dataset
    for training DNN. The simulation result shows that DNN accurately predict the
    crop yield and outperforms partial least square regression (PLSR), RF, SVR algorithms
    with R 2 of 0.720 and RMSE of 15.9%. Zhang et al. [67] explored ANN for prediction
    of annual crop planting utilizing a historical cropland data layer (CDL) dataset
    of corn-belt of mid-west, USA. Kocian et al. [68] utilized both approaches to
    predict crop growth in greenhouses. IoT smart sensors are installed in the greenhouses
    to monitor different environmental parameters, soil properties and plant growth
    parameters such as leaf area index (LAI), accumulated dry weight (DW) and evapo-transpiration
    (ET). These parameters are in real-time send to the cloud through IoT devices
    and permit the implementation of an agriculture decision-support system. The probabilistic
    Bayesian network is explored in the proposed system to predict crop development
    parameters. Shahinfar and Kahn [69] explored ML algorithms for early prediction
    of adult wool growth in Merino sheep of Australia. Model Tree algorithms best
    predict the wool growth in comparison with NN with a correlation coefficient of
    0.93, 0.90, 0.94, 0.81 and 0.59, MAE of 0.48 kg, 0.41 kg, 0.92 μm , 6.91mm and
    6.82 N/ktex, for predicting Greasy Fleece Weight, adult Clean Fleece Weight, adult
    Fibre Diameter and adult Staple Length. Table 5 presents a comparative study of
    different ML algorithms for crop yield prediction. TABLE 5 Different ML Algorithms
    for Crop Yield Prediction C. Disease and Weed Detection Disease fungi, microorganisms,
    and bacteria take their energy from the plants they live on, which in turn affects
    the crop yield. If not detected at the right time may account for a huge economic
    loss to farmers. A lot of financial burden goes to a farmer in the form of pesticides,
    to get rid of diseases and restore the functioning of crops. Excessive use of
    pesticides also leads to environmental damage and the effects of the water and
    soil cycle of the agricultural land. Using an optimally designed AI system during
    crop growth period not only reduces the risk of crop disease and minimizes the
    economic impact, but it also results in minimizing the adverse impact of unsystematic
    farming on the environment. Sambasivan and Opiyo [70] used a CNN based DL model
    to detect disease in cassava crops for imbalanced datasets. The authors took a
    database of 10,000 labeled images that were pre-processed to improve the image
    contrast using contrast limited adaptive histogram equalization algorithm. The
    model evaluation was done using the performance metrics: confusion matrix, accuracy
    measure, precision measure, sensitivity, and F1 score. The authors reported a
    best-case accuracy of 99.30% and the lowest accuracy was reported as 76.9%. Ramcharan
    et al. [71] used DL algorithms to detect diseases in cassava crops. Authors deployed
    deep CNN to identify three different diseases and two types of pests from a set
    of 11,670 images dataset. Author’s utilized GoogLeNet algorithm based Inception
    v3 in Tensor Flow. The authors achieved efficiency in a range of 80% to 93.0%,
    and the validation of the results was done with the help of the confusion matrix.
    Mohanty et al. [72] employed DL methods to detect crop disease from the image
    dataset of plant leaves. The authors used a public database consisting of smartphone
    generated 54,306 images of diseased and healthy plants leaves. These images were
    resized to 256×256 pixels and were assigned 38 different class labels of crop-disease
    pair, and transformed into 3 datasets color, grayscale and segmented. The dataset
    was then fed to two of the most common deep CNNs: AlexNet [73] and GoogLeNet [74].
    The authors achieved an accuracy of 99.34% for GoogLeNet, and an accuracy of 85.53%
    for AlexNet network. The results were validated using F1 score, authors achieved
    a mean F1 score of 0.9886 for GoogLeNet, and a mean F1 score of 0.9848 for AlexNet.
    Amara et al. [75] used LeNet based CNN architecture for disease detection in banana
    leaves. Authors utilized data from open source local and digital libraries which
    were pre-processed and resized to 60×60 pixels, and the model was implemented
    for RGB as well as grayscale images. Hughes and Salathe [76] utilized this developed
    model for the identification of diseases in the images dataset. The authors achieved
    the best F1 score of 0.9971 for detection in RGB images and a score of 0.976 for
    grayscale images. Ferreira et al. [77] deployed CNN for the identification of
    weeds in soybean crops. The image dataset for soy plantation located at São José
    farm, Campo Grande Brazil was acquired using phantom DJI3 drone. The images are
    segmented using the SLIC algorithm into square grids. For training, the segmented
    images were manually annotated to their class. The segmented images dataset was
    fed to AlexNet (a convolution neural network) for classification. The performance
    of the AlexNet was compared with SVM, AdaBoost, and RF. To evaluate the performance
    of the AlexNet the model was fed with a balanced dataset and the authors reported
    an overall accuracy of above 90% and 96.3% images were correctly classified. Waheed
    et al. [78] proposed a cost-effective optimized dense CNN (DenseNet) for disease
    detection in corn leaves with an accuracy of 98.0%. Simulation results show that
    the proposed model outperforms other CNN models such as EfficientNet, VGG19Net,
    NASNet, and XceptionNet in terms of fewer parameters, accuracy, computation complexity,
    and computation time. Pereira et al. [79] proposed an expert system for identifying
    three species of aquatic weeds from aquatic weed leaves dataset based on their
    shape and supervised pattern recognition techniques. The author explored five
    shape descriptors with different shape-based skills viz. Beam Angle Statistics
    (BAS), Fourier Descriptors (FD), Moment Invariants (MI), Multi-scale Fractal dimension
    (MS), and Tensor Scale Descriptor (TSD) along with five ML algorithms viz. Optimum-Path
    Forest (OPF), SVM, Naive Bayes, ANN, MLP. Simulation results show that OPF using
    the BAS-100 descriptor presents the best results with a recognition rate of 96.41%
    in comparison to other approaches. Jiang et al. [80] proposed a semi-supervised
    CNN feature-based Graph Convolutional Network (GCN) for identifying weeds utilizing
    6000 images of corn, lettuce, radish, and mixed weed dataset. The proposed approach
    works in two parts, i.e. in the first part CNN model is used for feature extraction
    thereafter in the second part GCN graph is explored utilizing CNN feature dataset
    for extracting feature of an unlabelled dataset using labelled dataset. The proposed
    approach shows the best results in comparison with AlexNet, VGG16, and ResNet-101
    approaches with recognition accuracies of 97.80%, 99.37%, 98.93%, and 96.51% on
    four different weed datasets. Oppenheim and Shani [81] explored CNN for identifying
    four different types of diseases in potatoes. The simulation result shows that
    the model trained on 90% of the images and tested on 10% of images give the best
    results with 96% accuracy. Sugar beet contributes around 30% of world sugar production.
    Leaf spot diseases in sugar beet can create a loss of around 10 % to 50 % of yearly
    sugar yield. Rumpf et al. [82] proposed SVM with a radial basis function as a
    kernel based model for early detection and classification of three diseases Cercospora,
    leaf spot, leaf rust, and powdery mildew in sugar beet leaves. Diseased and non-diseased
    leaves were classified with an accuracy of 97% and three diseases were identified
    with accuracy higher than 86%. Ozguven and Adem [83] proposed updated faster R-CNN
    for leaf spot disease identification and classification in sugar beet. Leaf spot
    disease initially generates as small circular spots and later spread over the
    entire leaf surface. The proposed R-CNN architecture changes its parameters according
    to the images and the disease infected regions, which improves the overall classification
    rate to 95.48%. Bah et al. [84] explored CNN for weed detection in images obtained
    using UAV from bean and spinach fields. The proposed model first identifies the
    crop rows and then identifies the inter-crop row weeds which are used as a training
    dataset for CNN for crop and weed identification and classification. Kerkech et
    al. [85] identified the vine diseases from visible and infrared UAV images obtained
    in the Center Val de Loire region in France. A CNN model is trained with this
    dataset of images to classify each pixel according to different instances, namely,
    shadow, ground, healthy, and symptom. The model identifies with an accuracy of
    92% at grapevine-level and 87% at leaf level. Oslen et al. [86] explored robust
    deep learning models Inception-v3 and ResNet-50 for weed species identification
    and classification from a dataset of images collected in Australian rangeland.
    Simulation results show that the average classification performance of both the
    models is 95.1% and 95.7%. These results found fruitful for automatic real-time
    robotic weed control in the agricultural field. Sudars et al. [87] establish an
    experimental set up with RGB digital cameras in Latvia to collect images of the
    field having 6 food crops and 8 weed species grown in normal field conditions
    and controlled environment. This dataset can be utilized by deep learning algorithms
    for weed identification and classification. Sethy et al. [88] identified the rice
    leaf disease based on a hybrid CNN and SVM. In this model, CNN is explored for
    deep feature extraction from 5932 diseased rice leaf images and this data is used
    as input for SVM classifier. The resnet50 with SVM classification model best classify
    with respect to other models with F1 score of 0.9838. Garcia et al. [89] proposed
    an ML and DL learning hybrid approach for weed and crop identification in the
    agriculture fields of Greece. Image dataset of two crops tomato and cotton and
    two weeds black nightshade and velvetleaf was generated for training and testing
    of the model. Initially CNN (Xception, Inception-Resnet, Vignette’s, Mobilenet,
    and Densenet)) is used for feature extraction and this feature set is later used
    to train ML classifier (SVM, XGBoost and Logistic Regression) for classification.
    The simulation result shows that Densenet and Support Vector Machine outperforms
    other approaches with F1 score of 99.29%. Shah and Jain [90] identified the disease
    in cotton leaf through ANN with some image pre-processing techniques. Yu et al.
    [91] explored deep learning algorithms with a dataset of images for identifying
    dandelion, ground ivy, and spotted spurge in perennial ryegrass. Parraga-Alava
    et al. [92] generated a robusta coffee leaf image dataset (RoCoLe) for disease
    identification using ML algorithms. Glezakos et al. [93] proposed an innovative
    method to identify two viruses Tobacco Rattle Virus (TRV) and the Cucumber Green
    Mottle Mosaic Virus (CGMMV) in plants. In the proposed research Bio-Electric Recognition
    Assay (BERA) technique is utilized to obtain time-series information of the two
    viruses by measuring the waves through biosensors for 331s. This time-series data
    is preprocessed using GA to eliminate noise and for dimensionality reduction of
    a large dataset. Thereafter this meta-data is used to train MLP neural network
    classifier. The proposed model is tested against other ML classifiers via cross-validation.
    Ramesh and Vydeki [94] explored optimized deep NN with the Jaya algorithm for
    the identification of paddy leaf diseases. A dataset of rice plant leaves was
    taken from the agricultural field to identify and classify normal, bacterial blight,
    brown spot, sheath rot, and blast diseases. Simulation results show that the proposed
    model accurately classifies the diseased and normal images with an accuracy of
    98.9%, 95.78%, 92%, 94%, and 90.57% for blast affected, bacterial blight, sheath
    rot, brown spot, and normal rice leaf images. Chechlin’ ski et al. [95] explored
    CNN for weed identification in four plant species at different growth level and
    under varying light conditions. CNN architecture combines U-Net, MobileNets, DenseNet,
    and ResNet models for classification of weeds in crops. In [96]–[99] author has
    reviewed machine and deep learning techniques for weed, pests and disease identification,
    and classification in crops at different growth stages. Table 6 presents a comparative
    study of different ML algorithms for disease and weed identification. TABLE 6
    Different ML Algorithms for Disease and Weed Identification D. Drip Irrigation
    In the modern era, irrigation for crops has been improvised using the concept
    of drip irrigation [100], where the system consists of thin plastic tubes placed
    in or above the soil along the vertical rows of the plants for nurturing the water
    supply to the crops. Employing the proper operational management of drip irrigation,
    minimizes the utilization of water supply for crop production, and provides a
    better yield of crops. Socio-economic and environmental demands have widely appreciated
    in use of drip irrigation on farmlands for agriculture, especially for the high
    cost valued crops i.e., vegetables and fruits. Furthermore, drip irrigation is
    based on the low-pressure watering system in comparison to sprinkler systems;
    this makes the system more efficient in terms of energy consumption [101]. Various
    advantages have been observed using drip irrigation in agriculture over other
    irrigation systems which include sub-irrigation systems or sprinkler irrigation
    systems. These advantages are entitled to minimal usage of water supply, usage
    of soluble fertilizers through a drip irrigation system, automated system, minimization
    of soil erosion, uninterrupted activities, minimized weed problems, facilitation
    of double-cropping. Precision irrigation is another innovative approach in intelligent
    farming where it uses the water intelligently that further helps the farmers to
    achieve better yield in crops with minimal water usage. It can also be featured
    as providing the right amount of water, at the right time and the right place
    in the field. It focuses its implementation based on variable rate irrigation
    (VRI) methods employing drips or sprinklers. [102]–[104]. Advancements in the
    field of on-farm sensor technologies, weather forecasting, IoT based sensor detection
    system of vegetation and precision-based smart irrigation produces a huge size
    of data that ultimately benefits the farmers in optimizing the usage of water
    resources, improve the yield of crops and maximizes the profit of farmers [105].
    ML and DL and reinforcement learning are employed on the historical data and it
    provides various opportunities for real-time prediction and decision making purposes
    for smart irrigation which are solely based on the data collected by the sensors
    and IoT enabled systems [106]–[109]. Roberts et al. [110] have discussed that
    a sensor-based control system might create some bottleneck in terms of reducing
    the reliability of decision support tools on process-based crop models, which
    further may require costly calibration and affect in generating an uncertain representation
    of soil-plant-atmosphere processes. Further, ML techniques have been employed
    extremely well for protection analysis of hydrological processes i.e., soil moisture
    and groundwater levels [111], [112]. Li et al. [113] utilized ANN for estimating
    nitrate distribution in different types of soils under a drip irrigation system.
    Kavianand et al. [114] proposed a fully automated drip irrigation system based
    on the ARM9 processor along with different kinds of sensors equipped for monitoring
    the PH content and nitrogen content of the soil and controlling the irrigation
    of the field. Emmanuel et al. [115] establishes an experimental set-up in a greenhouse
    in Malaysia to monitor the growth of mustard leaf vegetable plants through IoT
    devices and alongside developed a data-driven model of drip irrigation system.
    Soil moisture, irrigation volume, evapotranspiration were measured through sensors
    and were given to the Raspberry Pi 3 controller for storing it in the cloud. This
    data was utilized by different predictive models ARX, BJ, and state-space models
    to predict soil moisture content for an optimized drip irrigation system. ARX
    model outperforms other predictive models in terms of MSE and response time. Seyedzadeh
    et al. [116] explored ML algorithms to optimize the uniform emitter discharge
    rate of drip irrigation system under varying pressure and temperature conditions.
    In this model operating pressure, water temperature, discharge coefficient, pressure
    exponent, and nominal discharge were taken as input parameters while ration of
    emitter discharge to nominal discharge is taken as output temperature. Authors
    explored four different ML algorithms for optimizing emitter discharge rate and
    simulation results show that LS-SVM presents best results with the least error
    of mean absolute error. Peng et al. [117] utilize soil moisture, soil electrical
    conductivity, air temperature, and light intensity parameters to build an optimized
    irrigation prediction model using backpropagation NN in China. The proposed prediction
    model presents good results with MSE of 0.00857724. The authors also identified
    an optimized layout and network arrangement for pipe in a drip irrigation system
    using computational fluid dynamics (CFD) software. The simulation results present
    that the H-shaped network layout is more suitable for field crop irrigation than
    the comb-shaped and fish bone-shaped layout. Drip irrigation system gives the
    best performance when the wetting front dimension, i.e. diameter, depth, and upward
    movement are optimized. Shiri et al. [118] explored soft-computing approaches
    viz., gene expressions programming (GEP), and RF techniques in modeling wetting
    front dimensions over different soil types for surface and sub-surface irrigation
    system. Proposed model, best predicts ETc with an improved correlation coefficient
    and decreases MSE and MAE. Elnesr and Alazba [119] explored ANN for predicting
    the wetting front dimensions from the dataset of a well-tested HYDRUS 2D/3D model.
    The simulation results show that the proposed model has a good correlation of
    0.93-0.99. Chang et al. [120] developed a smart irrigation model based on ML with
    the LoRa P2P network to learn the irrigation experiences from the expert farmers
    working on greenhouse organic crops. Singh et al. [121] have discussed an ML and
    IoT based model for soil moisture prediction during irrigation. Torres-Sanchez
    et al. [122] proposed a decision support system for irrigation management of citric
    crops in southeast Spain. In the proposed model smart sensors are deployed in
    the field to monitor water supplied previous week, weather data, soil water status,
    and based on this data three regression models SVM, RF, and Linear regression
    was trained to build the irrigation decision support system. RF best predicts
    with comparatively less prediction error. Hellín et al. [123] explored the Partial
    Least Square Regression (PLSR) and Adaptive Neuro-Fuzzy Inference System (ANFIS)
    model for building a smart irrigation decision support system crops in southeast
    Spain. Goumopoulos et al. [124] proposed a real-time adaptable intelligent and
    autonomous closed-loop irrigation management system. The authors built an experimental
    set-up in a greenhouse and deployed wireless sensors for monitoring the plant
    growth and environmental conditions along with plant growth control actuators.
    Estimation of evapotranspiration (ETc) plays a vital role in water resource management
    system. Chen et al. [125] estimate crop actual ETc from temporal convolution network
    (TCN) from the dataset of lysimeters for maize under drip irrigation with film
    mulch. Simulation results show that the proposed model best predicts ETc with
    an improved correlation coefficient and decreases MSE and MAE. Table 7 presents
    a comparative study of different ML algorithms for drip irrigation. TABLE 7 Different
    ML Algorithms for Drip Irrigation E. Livestock Production and Management Livestock
    production is basically related to the production and management of cattle i.e.,
    sheep, pigs, etc. for human consumption in terms of meat. Livestock production
    and their management are based on the farming parameters of these cattle i.e.,
    health, food, nutrition, and behaviour to optimize their production in such a
    way that the economic efficiency of this livestock can be maximized. In the present
    scenario, Artificial intelligence, IoT and Blockchain technologies [126] are widely
    explored to improves livestock sustainability and for analysis of their chewing
    habits, eating patterns, their movement patterns i.e., standing, moving, drinking
    and feeding habits, indicate the amount of stress the animal is going through
    which in turn helps in predicting the vulnerability to disease, weight gain, and
    production of the livestock. Furthermore, an ML-based weight predicting system
    can help in the estimation of their body weight 90–180 days before the slaughtering
    day. According to these analyses and estimations, farmers can change their diet
    plans and living conditions for their better growth in terms of health, behaviour,
    and weight gain which in turn will improve the economic efficiency of these livestock
    [127], [128]. Villeneuve et al. [129] build a decision support system that encounters
    not only real-time data but also expert knowledge for precision sheep farming.
    Livestock production and management can be further classified into two sub-categories,
    i.e., animal welfare and livestock production. Animal welfare generally deals
    with the animal’s health and their well-being; for this ML techniques are applied
    to their health monitoring feature for prospective of early disease detection.
    Whereas, livestock production employs the ML on the estimation of the balanced
    production of livestock for the producers to achieve economic benefits. Dutta
    et al. [130] described a procedure for the classification of cattle behaviour
    employing the ML techniques for data collection using collar-based sensors i.e.,
    magnetometers and three-axis accelerometers. In this study, events such as oestrus
    and dietary changes on cattle have been analyzed for their well-nutrition. Pegorini
    et al. [131] presented an automatic identification and classification of chewing
    habits of claves employing ML-based techniques for analysing their health and
    behavioural patterns. Ebrahimie et al. [132] proposed ML predictive model for
    estimating Sub-Clinical Mastitis (SCM) from milking parameters in dairy herds.
    Mastitis is an inflammatory disease that is widely affecting the dairy industry.
    Author’s explored four classification models decision trees, stump decision trees,
    parallel decision trees, and random forest to discover SCC independent of Somatic
    Cell Count (SCC) which is widely used to measure SCM worldwide. RF with Gini Index
    criteria best predicts SCM with an accuracy of 90%. Ebrahimie et al. [133] explored
    the attribute weighting model (AWM) for identifying lactose concentration and
    electrical conductivity in milk, which are two of the major indicators of SCM
    in dairy cattle. Hyde et al. [134] also explored RF to predict the route of transmission
    of germs and classify them into contagious (CONT) or environmental (ENV) with
    ENV further sub-classified into non-lactating “dry” period (EDP) or lactating
    period (EL). The simulation results show that an accuracy of 98% was achieved
    for discovering CONT vs ENV and 78% for discovering EDP and EL. Esener et al.
    [135] utilized spectral profiles dataset to discriminates CONT and ENV strains
    using GA, NN, and quick classifier. Ebrahimi et al. [136] predicted sub-clinical
    bovine mastitis using a large milking dataset collected through an automated in-line
    monitoring system in commercial New Zealand dairy farm. The simulation results
    show that GBM outperforms other ML model and best predict sub-clinical bovine
    mastitis with an accuracy of 84.9%. Sharifi et al. [137] explored meta-analysis
    and decision trees data mining tools to discover genes that can help to find mastitis
    in dairy cattle. Machado et al. [138] explored the RF model to identify factors
    influencing the occurrence of Bovine viral diarrhea virus (BVDV) viral disease
    in cattle in southern Brazil. The proposed approach identifies that insemination,
    the number of cattle in neighbouring farms, and routine rectal palpation are among
    the main factors of the occurrence of this disease. Matthews et al. [139] developed
    an ML-based automated monitoring system for tracking animal behaviour and movement
    i.e., standing, moving, feeding, and drinking by employing the depth video cameras
    and sensors. Qiao et al. [140] explored the DL technique Mask R-CNN for examining
    cattle health and welfare information in precision livestock management. The proposed
    model extract key features from image frames, enhance the image to remove non-uniform
    illumination shadow influences, segment image of cattle from the background image
    using the Mask R-CNN DL tool, and lastly extract cattle contour lines from the
    segmented image. The proposed approach outperforms SharpMask and DeepMask image
    segmentation models with mean pixel accuracy of 0.92 and an average distance error
    of 33.56 pixels. Liakos et al. [141] explored ML model for predicting healthy
    cattle and cattle suffering from lameness utilizing basic features of cattle which
    includes per day habits of cattle like steps taken, overall walking, lying, and
    eating habits. Morales et al. [142] employed a method based on SVM for early detection,
    warnings, and production issues of eggs in the poultry farms. The simulation results
    show that the proposed technique alerts a day before with an estimation accuracy
    of 0.9854. The identification of livestock is an important aspect of monitoring
    growth and animal welfare. Hansen et al. [143] explored deep learning techniques
    CNN for identifying pigs faces from the dataset of digital images of pigs obtained
    from commercial farm environment where the parameters such as dirt and lighting
    are highly unpredictable. The proposed approach accurately predicts the faces
    with an accuracy of 96.7%. Fenlon et al. [144] build a decision support system
    using predictive ML algorithms to provide calving assistance in the dairy industry.
    Four ML techniques multimodal regression, decision trees, RF, and NN were explored
    to predict three calving difficulties unassisted, slight assistance, and veterinary
    assistance. The simulation result shows that NN and multimodal regression models
    accurately classify 75% of calving difficulties with an average prediction error
    of 3.7% and 4.5%. Fenlon et al. [145] analyzed calving difficulties in dairy herds
    in Ireland using ML algorithms. A dataset of parity, log days in milk, inter-service
    interval, difficulties faced in the last calving, herd body conditions were built
    to predict conceptions using artificial insemination in the Iris dairy industry.
    Logistic regression outperforms RF, decision trees, and Naive Bayes in predicting
    conception using artificial insemination. Borchers et al. [146] explored RF, linear
    discriminant, and NN for calving prediction in dairy cattle by examining their
    behaviour which includes number the of steps, lying time, standing time, transition
    from one state to other and total motion 14 days before the predicted calving
    date. Although, the innovative algorithms play a crucial role in livestock management
    but combining livestock data with public data will improve precision livestock
    farming standards [147]. Table 8 presents a comparative study of different ML
    algorithms for livestock production and management. TABLE 8 Different ML Algorithms
    for Livestock Production and Management F. Intelligent Harvesting Techniques Smart
    harvesting systems helps the farmers to harvest agriculture goods by reducing
    human efforts. In this approach, technologies such as smart sensors, robotics,
    UAVs, and IoT devices [148], AI, and ML-based computer vision techniques are employed
    to intelligently harvest the crops. The research community has provided a comprehensive
    review of different intelligent techniques used to automate the agriculture industry
    [149]–[151] and have analyzed the potential and challenges of this decision support
    system [152]. In the last few years, different robots have been developed for
    harvesting fruits and vegetables [153]. Smart harvesting offers better insight
    into the crops and helps farmers to achieve the potential harvest of crops which
    leads to increased productivity. Smart harvesting system has numerous advantages
    in comparison to traditional harvesting approaches like it requires less labour,
    optimized crop yield, maximum probability, better insight into crops, reduced
    cost of harvesting, and cost-efficient production. A significant problem in the
    Japanese agriculture industry is a labour shortage. Sakai et al. [154] utilized
    machine vision for asparagus robot harvesting in Nagasaki prefecture. The speed
    of asparagus robot harvesting is three times faster than the human being. Since
    asparagus harvesting is modeled on their size and doesn’t require color properties
    thus laser sensor is used to collect 3D distance information in the proposed work.
    Monta et al. [155] also explored laser sensors along with color cameras for tomato
    harvesting through robots. Preter et al. [156] developed an autonomous system
    consisting of e-vehicle, cameras, robotic arm, localization system, gripper, quality
    monitoring, and logistic handling system, which can efficiently detect, plucks,
    and puts the strawberries in a box. The proposed robot prototype is fast enough
    to pluck the fruit in just 4 seconds. Hayashi et al. [157] practically evaluated
    the performance of strawberry harvesting robots in a greenhouse test field. The
    proposed autonomous system efficiently access the fruit position and its maturity
    level and pick the fruit with and without suction in a duration of two to three
    weeks without damaging the fruit. Horng et al. [158] proposed a smart harvesting
    system that employs IoT and smart image recognition systems for the detection
    of mature crops using object detection feature trained on MLP neural network.
    The mature crop can be harvested using a robotic arm whose movement is predicted
    using ML algorithms. Zhang et al. [159] explored Regions-CNN (RCNN) for multi-class
    canopy object detection in shake and catch the apple harvesting system. A dataset
    of RGB images was created in the commercial orchard using a Kinect v2 sensor and
    pre-trained RCNN is utilized for real-time detection of apple, branches, and trunks.
    The authors also developed an estimation algorithm to predict shaking location
    based on the results of RCNN. Spectral and thermal images have also been explored
    for the detection of fruits and vegetables [160], [161]. Zhang et al. [162] investigated
    eleven canopy parameters using principal component analysis (PCA) and classified
    the removal status of apples into mechanically harvested and mechanically unharvested.
    Zhang et al. [163] reviewed technology progress in the mechanical harvesting of
    apples which includes shake and catch, robots, and harvest assist platforms. Pise
    and Upadhye [164] explored Naive Bayes and SVM ML techniques for grading of harvested
    mangoes based on their color, size, features, quality, and maturity. Grading of
    fruits increases the profit of the agriculture and food industries. A mango image
    dataset comprising of three different colors red, green, and yellow is created
    and is used for training and testing the ML algorithm. The proposed approach presents
    limited scope as it can detect defects in a particular surface area which can
    be overcome by creating a dataset of rotational view images. Wu et al. [165] explored
    NN for recognition, classification of fruits and vegetables, and obstacle avoidance
    in a harvesting robot. Table 9 presents a comparative study of different ML algorithms
    for intelligent harvesting. TABLE 9 Different ML Algorithms for Intelligent Harvesting
    SECTION V. IoT Applications in Precision Agriculture Precision agriculture refers
    to a system with minimizing direct involvement of the caretaker/farmer except
    when there is an urgent need or an emergency i.e. when there is a failure in the
    system. IoT helps in maintaining the defined standards of parameters needed for
    day to day work in agriculture. The parameters can be measured using the required
    sensors and can be uploaded to an IoT cloud for remote monitoring so that the
    direct involvement of farmers is minimized. The IoT cloud can be used for control
    purposes also, say for example in detecting and avoiding animal intrusion in the
    agriculture field. Sensors are an integral part of IoT for precision agriculture
    without which the monitoring and controlling becomes next to impossible task.
    Figure 6 shows the trend search of keywords “IoT in agriculture” and “sensor in
    agriculture” on google in the last 10 years. Apart from monitoring and controlling,
    IoT in agriculture is also used as data-storage technology. Parameters like properties
    of soil, crop yield, seasonal behaviour data, temperature changes, etc can be
    stored on the IoT cloud which will be helpful in analyses, prediction, and deciding
    on estimated crop production. FIGURE 6. Google trend response for keywords IoT
    in agriculture and sensor in agriculture for the last 10 years. Show All A. Sensors
    for IoT in Precision Agriculture IoT is defined as the interconnection of things,
    where one example of a thing is a sensor. A group of sensors can communicate with
    every other sensor and thereby with the control center. A WSN in IoT has the benefits
    of increasing the efficiency of production, enhancing the yield quality, detecting
    and avoiding plant-eating pets, detecting the fires in the farms [166]. IoT has
    helped in increasing the scope of farming, animal, and pet rearing along with
    smart irrigation [167]. Sensors form an integral part of IoT architecture in agriculture.
    A sensor is defined as a transducer that converts the sensed parameter (soil moisture,
    for example) into the equivalent electrical signal. Depending on the nature of
    the output signal they generate, sensors are classified as analog or digital sensors.
    An analog sensor’s output needs to be converted to digital before it is being
    fed, processed by any IoT system. On the other hand, sensors that generate signals
    in digital form can be directly connected to any IoT system. Table 10 compares
    the list of some important sensors applicable in precision agriculture. Addressing
    the complete list of sensors available for precision agriculture is beyond the
    scope of this article, although, table 10 provides the list of sensors and their
    parameters that are very widely used and covers almost every aspect of IoT in
    agriculture. A pair of sensors and actuators can be used to collect information
    about some of the vital parameters of precision agriculture and react to perform
    predefined action whenever required. IoT plays an important role in assuring that
    the action performed happens instantaneously with minimum delay. The factors that
    can affect the real-time decision making and causes a delay is the tolerance of
    the measuring parameter and the communication protocol used. The operating temperature
    where the sensors are placed have a proportional effect on tolerance. An increase
    temperature on either side will increase the tolerance of the measuring parameter
    and sensor reading will deviate the value of the measurand from the actual value.
    The communication protocol is used to send the readings of the sensor to the microcontroller
    from where the value will be uploaded to the IoT cloud. The data rate of communication
    protocol decides the time required for this data transfer. TABLE 10 Sensor Parameters
    Used in Precision Agriculture B. Wireless Sensor Networks in Precision Agriculture
    WSN is the collection of spatially displaced sensor deployed to monitor the physical
    parameters of the environment and coordinating the collected data at central location.
    IoT transfers the recorded data to cloud which is further processed and analyzed
    through intelligent algorithms. In precision agriculture integration of artificial
    intelligence with WSN allows real time monitoring and intelligent decision making
    in agriculture fields. IoT sensor network which includes soil moisture senor,
    electrochemical sensor, optical sensors, etc. continuously monitor the field data
    and works as a training data for ML and DL algorithms. Edge computing enabled
    AI systems assist in reducing the amount of data to be uploaded to IoT cloud by
    identification of meaningful data to be communicated and discarding the redundant
    data. Intelligent processing of data generated from nodes result in better management
    of sensor network In [185] author utilized AI driven sensor network to classify
    land as suitable, more suitable, moderately suitable and unsuitable after every
    cultivation. In [186] author developed a power efficient WSN using Arduino microcontroller
    and ZigBee module to monitor and control essential parameters that effect crop
    growth such as soil and weather conditions in Florida, USA. In [187] author integrating
    sensor nodes with AI systems to reduce the power consumption of nodes by optimizing
    the performance and data transmission of respective nodes. RNN based Long-Short
    term (LSTM) network was built which increases the runtime of a single sensor and
    guarantees 180 days autonomous operation using Li-ion battery. The proposed system
    continuously monitors the growth dynamics of plant leaves. In [188] author presents
    an autonomous system built with low power sensor nodes and IoT based cloud platform
    to estimate level of phosphorous in soil through ANN. Author incorporates dynamic
    power management system to maintain balance between energy consumption and estimation
    accuracy. In [189] author presents GA optimized WSN for precision agriculture
    applications. Thus, we conclude that integrating artificial intelligence with
    WSN, IoT plays a key role in assuring the best yield of crops. SECTION VI. Assessment
    and Evaluation of Knowledge-Based Agriculture System In this section ML algorithms
    used by different researchers in the precision agriculture system are analyzed.
    The agriculture industry is facing many challenges across the world, and a knowledge-based
    agriculture system allows sustainable use of resources by the farmers aiming to
    get maximum output from the agriculture land. There are two basic stages in precision
    agriculture, i.e. pre-processing stage and processing stage. In the pre-processing
    phase market trends are studied and based on geographical conditions and soil
    properties of the land seeds are selected and the land is prepared for precision
    agriculture system. In the post-processing stage machine vision techniques are
    explored for disease and weed identification while intelligent techniques are
    used for irrigation and harvesting. In this article, author reviewed and discussed
    70 articles where multiple ML algorithms are presented for performance optimization
    of the agricultural cycle. Figure 7 shows the classification of articles based
    on different applications of precision agriculture. FIGURE 7. Classification based
    on agriculture cycle. Show All Figure 8 depicts the cumulative distribution of
    the ML and DL models used by researchers in precision agriculture. The graph depicts
    the broad categorisation of the techniques with their applications to agricultural
    cycle. It has been observed that in majority of the literature the researchers
    have applied multiple algorithms for classification and parameter prediction.
    Regression models and ANN together make up around 65% of the AI techniques employed
    by researchers. Hence, it is important to investigate the techniques used and
    compared by the authors. The individual best performing algorithms have already
    been covered in appropriate sections, however the figure 8 depicts the distribution
    of the various regression algorithms and DL models throughout the literature.
    ELM algorithm is widely explored in prediction of soil properties such as soil
    moisture, soil temperature, surface humidity, ETc. ANN accurately predicts the
    rainfall and crop yield across different regions of globe. DL based CNN model
    finds wide applications for accurate disease and weed classification in agriculture
    crops. ANN model best predicts the nitrate content and water requirement in drip
    irrigation system. SVM regression model estimates the emitter outflow discharge
    under varying temperature and pressure conditions. Decision Tree algorithm accurately
    identify the chewing habits and predicts SCM in dairy herds. CNN have widely explored
    for livestock identification. Metaheuristic optimized ML algorithms are also explored
    by researchers in precision agriculture. FIGURE 8. ML techniques used in precision
    agriculture applications. Show All In the reviewed articles, authors have used
    around 22 different regression algorithms for prediction, however 5 most commonly
    used algorithms are identified and depicted in the figure 9. Remaining 17 algorithms
    which are used either only for comparison or employed as a support algorithms
    have been classified into others. FIGURE 9. Regression algorithm in precision
    agriculture. Show All DL models have contributed significantly and outperforms
    ML classification algorithms in classification of crop disease and weed as well
    as for livestock diseases identification. Figure 10 shows CNN, ANN and RNN algorithms
    explored in precision agriculture. In the reviewed articles, authors have used
    around 10 different DL/NN algorithms for prediction/classification, however 8
    most commonly used algorithms are identified and depicted in the figure 10. Remaining
    2 (LeNet, and Caffee) algorithms which are used either only for comparison or
    employed as a support algorithms have been classified into others. FIGURE 10.
    Classification algorithm in precision agriculture. Show All A. Performance Comparison
    of ML Algorithms in Precision Agriculture The application of ML and DL algorithms
    highly depends on the agriculture cycle and the dataset involved. This section
    discusses the advantages and limitations of various ML and DL algorithms such
    as regression and classification algorithms based on the agriculture cycle involved.
    1) Soil Properties and Weather Prediction The application of AI techniques in
    prediction of soil parameters and weather is dependent on various factors. The
    researchers generally employ around 3 to 4 algorithms in for prediction and select
    the algorithms which has most accurate prediction and is robust to factors such
    as: noise, non-linearity, outliers etc. the most commonly employed algorithms
    are ELM, RF, SVR, and cubist algorithm. Advantages of using ML in prediction of
    soil properties and weather pattern: Non-linear dataset – these predictions often
    attributes a non-linear dataset which can be utilized for accurate prediction
    by regression algorithms such as: ELM, RF, SVR Large dataset – the dataset for
    is often obtained from satellite which can be well handled by the regression algorithms
    with less convergence time and accurate predictions. Insensitivity to outliers
    – Weather patterns often encounter outlier events which may affect the prediction
    accuracy, however algorithms such as ELM, NN are robust to outliers and provide
    accurate predictions. Accurate prediction – prediction of parameters using ML
    exhibit low error indices such as RMSE, and R2 which are standard measures of
    accuracy for statistical analysis. Challenges and limitations in prediction of
    soil properties and weather pattern: Varying geographical conditions poses a challenge
    for universal design of the prediction algorithms. Soil parameters prediction
    is highly dependent on the sample selection philosophy. Dataset selection and
    filtering is a challenge for researchers with non-computing background. 2) Crop
    Yield Prediction The application of AI techniques in prediction of crop yield
    is a mammoth task and lack of availability of a universal model makes designing
    of the algorithm challenging. The most promising algorithms for crop yield prediction
    are regression algorithms, and neural networks. Advantages of using ML in crop
    yield prediction: Complex dataset – crop yield prediction involves enormous dataset
    composing of satellite data and/or historic data. Faster and accurate predictions
    can be made by utilizing the AI techniques such as regression algorithms (SVR,
    RF) Neural networks (CNN). Parameter variation – the crop yield depends on a lot
    of parameters, like climatic factors, soil quality, NDVI, altitude, air parameters.
    The AI based prediction systems handle the parameters dependency efficiently.
    Accurate prediction – prediction of parameters using ML exhibit low error indices
    such as RMSE, and R2 which are standard measures of accuracy for statistical analysis.
    Challenges and limitations in prediction of crop yield: Varying parameters and
    complex datasets pose a challenge for universal design of the prediction algorithms.
    Dataset selection is critical due to the complexity; as an improper selection
    of data may result in underfit/overfit prediction pattern. 3) Disease and Weed
    Detection The applications of AI techniques in disease and weed detection primarily
    depends on the advances in image processing. CNN’s are the most prominent choice
    for building a disease identification system. Training dataset will govern the
    performance of the algorithm, although these are available in open-source format,
    users have to be cautious while using the dataset. Advantages of using ML in detection
    of weed and disease in a crop field: Prediction accuracy – AI offer accurate detection
    of disease and weeds with an accuracy of 99% which is better compared to manual/classical
    techniques. Robust prediction – the algorithms can predict the disease/weed even
    with smartphone images, which is commonly available with farmers. Easy configuration
    – with CNN being the most common and reliable technique, designing a disease/weed
    detection system is not a complex job unlike other systems discussed in text.
    Challenges and limitations in detection of weed and disease in a crop field: The
    accuracy of prediction depends on the quality of training dataset some of which
    is available as an open-source dataset, but is applicable to only a limited number
    of crops. Improperly labelled data may result in a disastrous prediction system,
    as the training of the system plays a major role in the performance of the system.
    Overtraining the model may result in a sensitive prediction system. 4) Drip Irrigation
    Smart irrigation systems are not only crop friendly but are environmental friendly
    too. The combination of IoT with the AI not only reduces the manual intervention
    but also utilizes the available in an optimum way to ensure no adverse effect
    to environment. Regression and Advantages of using ML in drip irrigation for an
    agricultural field: Optimum resource utilization – accurate estimation of irrigation
    requirements results in a system which optimizes the resource (water, electricity)
    utilization (NN algorithms). Crop protection – optimized irrigation practices
    minimizes water related damage to the crops and hence increases the crop yield.
    Robust to weather variations – an accurately designed AI based (Regression algorithms)
    irrigation system handles the random weather events in a better way when compared
    with the non-AI based irrigation methods. Challenges and limitations in drip irrigation
    for an agricultural field: Accurate prediction sometimes depends on the number
    of sensors and hence increases the initial investment of the farmers. An incorrect
    sensor placement in the filed affects the accuracy of the system, hence sensor
    optimization becomes imperative in designing a smart irrigation system. The architecture
    of prediction system highly depends on the dataset; hence no universal guidelines
    can be laid out for system design. 5) Livestock Production and Management The
    livestock management primarily focuses on the well-being of the farm animals and
    uses advanced image recognition (CNN) algorithms, and regression techniques to
    detect and predict the disease/ disease spread. Advantages of using ML in livestock
    production and management: Decreased risk of diseases – AI systems assists in
    identifying the livestock diseases and also helps in combating the disease, by
    predicting the root of diseases and transmission (Regression algorithms). Minimization
    of disease spread – timely diagnosis and treatment reduces the risk of spreading
    the disease. Psychological analysis – advanced image recognition and behavioural
    analysis (CNN techniques) help is detecting the stress in animals ensuring heath
    of the livestock. Challenges and limitations in drip irrigation for an agricultural
    field: With varying geographic and climatic conditions the attributes of the cattle
    and diseases changes hence, no universal system can be designed to cater to the
    diversities. Some viruses are difficult to predict even using the state-of-art
    prediction algorithms. 6) Intelligent Harvesting The applications of AI techniques
    in harvesting is primarily an assistive technology for automatic harvesting systems.
    Harvesting prediction system largely relies on the advances in image processing
    and CNN’s are the most prominent choice for building these systems. Advantages
    of using ML in intelligent harvesting: Assistive technology – AI in conjunction
    with existing harvesting robots exhibit high accuracy in harvesting. Image processing
    – the identification of harvesting relies on the state-of-art image processing
    algorithm (CNNs) and hence the developments in the image processing algorithms
    result in direct accuracy enhancement of intelligent harvesting techniques. Universal
    algorithms – the AI harvesting techniques largely depend on image recognition
    methods, hence CNNs can easily be deployed for implementing intelligent harvesting
    techniques. Challenges and limitations in intelligent harvesting: The accuracy
    of the prediction systems largely depends on the training dataset, hence accurately
    labelled dataset is a primary requirement of implementing an intelligent harvesting
    system. Inaccurate harvesting recognition system result in economic loss for farmers,
    as a delay in harvesting might lead to an overripe crop or early harvesting might
    lead to rejection of the product. SECTION VII. Challenges and Limitations of Artifical
    Intelligence in Precision Agriculture Artificial intelligence has the potential
    of playing an important role in meeting the food requirement of entire world.
    However, there are certain challenges which are hampering its adoption in agriculture
    industries which are outlined as follows: A recent government survey in India
    estimated that literacy rate of Indian farmers is very low therefore bridging
    the gap between farmers and technology is a challenging task. Farmers are less
    motivated to come out from their comfort zone and learn digital skills to improve
    their farming standards. Agriculture lands are mostly situated in rural areas.
    Implementation of IoT architecture and WSN which requires cloud services for data
    storage and analysis is a big issue in rural areas where reliable internet connectivity
    is not available. Accurate prediction and classification through cognitive ability
    of machines is difficult in varying geographical conditions. Initial set up of
    digital farming which includes hardware and software requires huge investment.
    Deployment of smart sensors and other electronic gadgets requires heavy energy
    consumption. SECTION VIII. Future Trends of Artifical Intelligence and IoT in
    Precision Agriculture Agriculture industry is globally US$5 trillion industry
    and now it has been revolutionized with artificial intelligence and IoT technologies.
    These innovative tools are assisting famers to improve crop yield, monitor soil
    parameters, livestock health and temperature conditions, control pests and improve
    other agriculture related tasks. Conventional ML and DL models such as SVM, RF,
    ANN finds difficult to accurately estimate soil parameters and weather conditions
    in varying ecosystem. Therefore, swarm intelligence optimized robust and adaptive
    ML and DL algorithms such as SVM-PSO, ANN-GWO algorithms can be explored to effectively
    forecast different parameters in precision agriculture. In large agriculture fields
    swarm intelligence inspired autonomous system can be built for crop health and
    growth monitoring. UAV swarm can be utilized for near real time field and livestock
    monitoring through computer vision and DL algorithms and accordingly swarm of
    UAV can be used for spraying of pesticides and fertilizers in the infected crops.
    Greenness of crops can be identified through UAVs installed cameras and an automated
    irrigation system can be built in large agriculture fields. Swarm of mobile robots
    can be used in the agriculture fields to efficiently automate task such as harvesting,
    weed identification and elimination, etc. Metaheuristic algorithms can be explored
    for nodes localization in agriculture fields in order to optimize the sensor deployment
    in the field and keep the minimize cost to farmers. Offline service chatbots can
    be built to assist farmers in developing countries where farmers don’t have good
    internet connectivity. These chatbots can assist farmers by providing timely advice
    based on expert recommendations and will help to resolve their specific farming
    problems. Artificial intelligence assisted renewable energy plants can be installed
    in agriculture lands to maximize the power output of clean energy in unpredictable
    weather conditions. This will allow for sustainable agricultural practices. Artificial
    intelligence can also be explored in vertical and soilless agriculture. In near
    future artificial intelligence systems, robotics and smart sensor technology will
    automate the whole farming process starting from seed sowing to intelligent fruits
    and vegetables harvesting and packaging. SECTION IX. Conclusion Precision agriculture
    is empowering the farmers with technology intending to get optimum outputs with
    precise inputs. IoT enabled smart sensors, actuators, satellite images, robots,
    drones are some of the key technological revolutions that boosted the agriculture
    industry. These components play a vital role in collecting real-time data and
    accordingly making decisions without human support. Artificial intelligence which
    is the automation of intelligent behaviour is continuously benefiting our planet
    and helping humans in various aspects of life. In this paper, authors have reviewed
    ML applications for precision agriculture. The impact of AI and IoT in smart farm
    management is discussed with a brief introduction to ML algorithms which are most
    commonly used in precision agriculture. Regression algorithms are the backbone
    for soil properties, weather, and crop yield prediction. DL algorithms such as
    CNN and ML classification algorithms such as SVM, Decision trees, and RF were
    explored for the identification of disease and weeds in the plants. Smart irrigation
    systems and harvesting techniques play an important component in precision agriculture
    as these techniques quickly complete the work and reduces human labour. Drones
    and robots enabled with a digital camera are employed for this work. Livestock
    management is an important concern for farmers across the world. Knowledge-based
    agriculture system which includes smart IoT devices and AI tools efficiently handle
    livestock management. As a scope of future work, NLP based chatbots can be built
    for famers and more ML, DL and hybrid algorithms can be explored in the agriculture
    industry for sustainable use of available resources. Authors Figures References
    Citations Keywords Metrics More Like This Internet of Things and Wireless Sensor
    Networks for Smart Agriculture Applications: A Survey IEEE Access Published: 2023
    Precision Agriculture Using Internet of Things and Wireless Sensor Networks 2023
    International Conference on Disruptive Technologies (ICDT) Published: 2023 Show
    More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/9312710/09311735.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Machine Learning Applications for Precision Agriculture: A Comprehensive
    Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1155/2021/5584754
  analysis: '>'
  authors:
  - Rayda Ben Ayed
  - Mohsen Hanana
  citation_count: 69
  full_citation: '>'
  full_text: ">\nReview Article\nArtificial Intelligence to Improve the Food and Agriculture\
    \ Sector\nRayda Ben Ayed\n1 and Mohsen Hanana\n2\n1Laboratory of Molecular and\
    \ Cellular Screening Processes, Centre of Biotechnology of Sfax, P. B. 1177, Sfax\
    \ 3018, Tunisia\n2Laboratory of Extremophile Plants, Biotechnology Center of Borj-C´edria,\
    \ B. P. 901, Hammam Lif 2050, Tunisia\nCorrespondence should be addressed to Rayda\
    \ Ben Ayed; raydabenayed@yahoo.fr\nReceived 19 February 2021; Revised 6 April\
    \ 2021; Accepted 12 April 2021; Published 22 April 2021\nAcademic Editor: Rijwan\
    \ Khan\nCopyright © 2021 Rayda Ben Ayed and Mohsen Hanana. Tis is an open access\
    \ article distributed under the Creative Commons\nAttribution License, which permits\
    \ unrestricted use, distribution, and reproduction in any medium, provided the\
    \ original work is\nproperly cited.\nTe world population is expected to reach\
    \ over 9 billion by 2050, which will require an increase in agricultural and food\n\
    production by 70% to ﬁt the need, a serious challenge for the agri-food industry.\
    \ Such requirement, in a context of resources\nscarcity, climate change, COVID-19\
    \ pandemic, and very harsh socioeconomic conjecture, is diﬃcult to fulﬁll without\
    \ the in-\ntervention of computational tools and forecasting strategy. Hereby,\
    \ we report the importance of artiﬁcial intelligence and machine\nlearning as\
    \ a predictive multidisciplinary approach integration to improve the food and\
    \ agriculture sector, yet with some\nlimitations that should be considered by\
    \ stakeholders.\n1. Introduction\nTe estimation of the global food production\
    \ must be in-\ncreased by 60–110% to feed 9-10 billion of the population by\n\
    2050 [1, 2]. Tus, the sustainability of agriculture ﬁeld is the\nkey to guarantee\
    \ food security and hunger eradication for\nthe ever-growing population. In addition,\
    \ due to the ap-\npearance of several food safety scandals and incidents in the\n\
    food sector such as bovine spongiform encephalopathy and\ndioxin in poultry [3],\
    \ a well-documented traceability system\nhas become a requirement for quality\
    \ control in the food\nchain. Moreover, weather and climate change conditions,\n\
    together with the sustainable water management due to\nwater scarcity, are crucial\
    \ challenges in the next years. For\nthese reasons, urgently, the establishment\
    \ of a strategic shift\nfrom the current paradigm of enhanced agricultural pro-\n\
    ductivity to agricultural sustainability is needed. To antici-\npate eﬃcient solutions,\
    \ helping farmers and stakeholders to\nenhance their decision by adopting sustainable\
    \ agriculture\npractices is a crucial choice, especially the use of digital\n\
    technologies including Internet of things (Iot), Artiﬁcial\nIntelligence (AI),\
    \ and cloud computing. Additionally, the\nsubsets of AI (machine and deep learning\
    \ algorithms)\ncombined with location intelligence technologies are ex-\ntensively\
    \ used. Te goal of our review is to present the main\napplications of artiﬁcial\
    \ intelligence and machine learning\ntechniques in the agri-food sector.\n2. Artificial\
    \ Intelligence and Machine\nLearning Approach\nTe artiﬁcial intelligence (AI)\
    \ is a creative tool that simulates\nthe human intelligence and ability processes\
    \ by machines,\nprincipally computer systems, robotics, and digital equip-\nment\
    \ [4]. Several applications of the AI include natural\nlanguage processing (NLP)\
    \ to comprehend human verbal\ncommunication as it is spoken, computer vision to\
    \ see an\nanalog-to-digital conversion such as video, and speech\nrecognition\
    \ and expert systems to simulate the judgment.\nTe AI encoding is based on learning\
    \ (acquire data and then\ncreate algorithms to turn them into actionable information),\n\
    reasoning (choose the right algorithm to reach a preferred\nresult), and self-correction\
    \ (continually adjust designed\nalgorithms and ensure that they provide the most\
    \ accurate\nresults) as three cognitive skills [5]. Te AI technique is being\n\
    used in several sectors which are seeing the fastest growth in\nthe recent years\
    \ such as ﬁnance, healthcare, retail, phar-\nmaceutical research, intelligent\
    \ process automation, and\nmarketing. Machine learning (ML) is one of the central\n\
    themes of AI and helps people to work more creatively and\nHindawi\nJournal of\
    \ Food Quality\nVolume 2021, Article ID 5584754, 7 pages\nhttps://doi.org/10.1155/2021/5584754\n\
    eﬃciently. In ML, statistical and mathematical methods are\nused to learn from\
    \ datasets to make data-driven predictions/\ndecisions. Several diﬀerent methods\
    \ exist for this. General\ndistinction can be made by two systems; the ﬁrst one\
    \ is the\nsymbolic approaches (the induced rules and the examples\nare explicitly\
    \ represented) and the second one is the sub-\nsymbolic approaches (artiﬁcial\
    \ neuronal networks: ANN).\nTe ML approach is classiﬁed into three major tasks:\
    \ su-\npervised,\nunsupervised,\nand\nreinforcement\nlearning.\nAccording to the\
    \ supervised learning, the aim of this ap-\nproach is to map the variables to\
    \ the preferred output\nvariable [6]. Te predictive model is created using the\
    \ labeled\ndata with the prior knowledge of the input and the desired\noutput\
    \ variables. Algorithms used under supervised learning\ntechniques are numerous,\
    \ particularly, decision trees,\nBayesian networks, and regression analysis. Concerning\
    \ the\nunsupervised learning, it includes algorithms such as Ar-\ntiﬁcial Neural\
    \ Networks (ANNs), clustering, genetic algo-\nrithm, and deep learning and uses\
    \ unlabeled datasets\nwithout prior knowledge of the input and output variables.\n\
    In fact and as mentioned by Jordan and Mitchell [7], this\ncase of unsupervised\
    \ machine learning method establishes\nthe hidden patterns by using the unlabeled\
    \ dataset and is\nprimarily used for dimensionality reduction and exploratory\n\
    data analysis. According to the third category of ML task\nnamed the reinforcement\
    \ learning, numerous algorithms are\nused for machine skill acquisition, robot\
    \ navigation, and\nreal-time decision making such as Q-learning and deep\nQ-learning.\
    \ In this case of ML task, the learner interacts with\nthe environment to collect\
    \ information and the two steps of\ntraining and testing datasets are combined.\
    \ Te learner gets\nawarded for his actions with the environment leading to an\n\
    exploration versus exploitation dilemma. Te learner must\nexplore new unknown\
    \ actions to gain more information as\ncompared to exploiting the information\
    \ already collected\n[8]. Recently, AI technology has opened the doors of its\n\
    implementation in the agri-food sector. In fact, AI ap-\nproaches oﬀer signiﬁcant\
    \ contributions and assistances to\nunderstanding a model’s identiﬁcation, service\
    \ creation, and\nthe decision-making processes as support to the diﬀerent\nagri-food’s\
    \ applications and supply chain stages. Te prin-\ncipal goal of AI in agriculture\
    \ is to provide precision and\nforecasting decision in order to improve the productivity\n\
    with resource preservation [4]; through this, AI tools pro-\npose algorithms to\
    \ evaluate performance, classify patterns,\nand to predict unexpected problems\
    \ or phenomena in order\nto solve comprehension problems in the agricultural ﬁeld\n\
    and for the identiﬁcation of pests and its suitable method of\ntreatment, as well\
    \ as the management of the irrigation\nprocess and water consumption by setting\
    \ up smart irri-\ngation systems. Abiotic and biotic factors are being assessed\n\
    through remote sensing and sensors in order to optimize\ncrop and livestock management\
    \ [4, 9]. In addition, the AI\nimplementation and applications have enormous advan-\n\
    tages which could revolutionize the agri-food sector and its\nrelated business.\
    \ Firstly, AI provides more eﬃcient ways to\nproduce, harvest, and sell crops\
    \ products as well as emphasis\non checking defective crops and improving the\
    \ potential for\nhealthy crop production and also AI is being used in\napplications\
    \ such as automated machine adjustments for\nweather forecasting and disease or\
    \ pest identiﬁcation with\n98% accuracy. In fact, recently, Sujatha et al. [10]\
    \ compared\nthe performance of machine learning (ML) and deep\nlearning (DL) methods\
    \ to detect and identify the citrus plant\nleaf disease. Tey showed that the VGG-16\
    \ deep learning\nmethod gave the best result in terms of disease classiﬁcation\n\
    accuracy. Secondly, the progression in the AI technique has\nreinforced agro-based\
    \ businesses to run more proﬁciently by\nimproving crop management practices,\
    \ thus helping many\ntech businesses invest in algorithms that are becoming useful\n\
    in agriculture as well as by solving the contrasts farmers face\nsuch as climate\
    \ variation and an infestation of pests and\nweeds that decreases yields. Indeed,\
    \ Crane-Droesch [11]\ndeveloped a novel modeling approach for augmenting\nparametric\
    \ statistical models with deep neural networks,\nwhich we term semiparametric\
    \ neural networks (SNNs), and\nby using data on corn yield from the US Midwest,\
    \ they\nshowed the outperformance of this approach in predicting\nyields of years\
    \ withheld during model training compared to\nclassical statistical methods and\
    \ fully nonparametric neural\nnetworks. Tirdly, by using AI tools, farmers could\
    \ be able to\nremain updated with the data related to weather forecasting\nand,\
    \ therefore, predicted weather data help farmers to in-\ncrease yields and proﬁts\
    \ without risking the crop, and as a\nresult, after analyzing the generated data,\
    \ AI allows the\nfarmers to better understand and learn and then to take the\n\
    precaution by implementing practices in order to make a\npunctual smart decision.\
    \ In fact, Fente and Singh [12]\ncollected diﬀerent weather parameters (temperature,\
    \ pre-\ncipitation, wind speed, pressure, dew point visibility, and\nhumidity)\
    \ from the Indian climate data center and imple-\nmented a weather forecasting\
    \ model by using a recurrent\nneural network (RNN) with the long-short-term memory\n\
    (LSTM) technique. Tey concluded that the used technique\ngave high-accuracy results\
    \ compared to other weather\nforecasting approaches. Fourthly, AI approaches are\
    \ capable\nof monitoring soil health and management by conducting\nand identifying\
    \ the possible defects and nutrient deﬁciencies\nin the soil either by image captured\
    \ with the camera rec-\nognition tool or by deep learning based tool to analyse\
    \ ﬂora\npatterns in farms and to simultaneously understand soil\ndefects, plant\
    \ pests, and diseases. In fact, Suchithra and Pai\n[13] classiﬁed and predicted\
    \ the soil fertility indices and pH\nlevels of Kerala north central laterite Indian\
    \ region soil by\nusing the Extreme Learning Machine (ELM) technique with\ndiﬀerent\
    \ activation functions such as hard limit, sine-\nsquared, triangular basis, hyperbolic\
    \ tangent, and gaussian\nradial basis. Tey revealed that the maximum performance\n\
    (80% of the accuracy rate calculations in every problem) for\nfour out of ﬁve\
    \ problems was obtained with the Gaussian\nradical basis function followed by\
    \ hyperbolic tangent.\nHowever, the best performance (90%) of the pH classiﬁ-\n\
    cation problem was given by the hyperbolic tangent, whereas\nthe moderate values\
    \ were given by the gaussian radial basis.\nFifthly, an important functional beneﬁt\
    \ of the AI technology\nemployment is the environmental protection by decreasing\n\
    pesticide usage. For example and in order to manage weeds\nfaster\nand\nwith\n\
    greater\naccuracy,\nAI\ntechniques\nby\n2\nJournal of Food Quality\nimplementing\
    \ robotics, computer vision, and machine\nlearning could help farmers to spray\
    \ chemicals only where\nthe weeds are; thus, this directly reduced the use of\
    \ the\nchemical substance spraying on the whole ﬁeld. Conse-\nquently, AI tools\
    \ are helping farmers ﬁnd more eﬃcient\nactions to protect their crops from weeds.\
    \ Finally, the\npractice of the advanced AI-based technologies has other\nadvantages\
    \ on the agri-food supply chain such as reducing\nemployee training costs, reducing\
    \ the time needed to solve\nproblems, reducing the amount of human errors, reducing\n\
    human intervention, and oﬀering an automated good, ac-\ncurate, and robust decision-making\
    \ on the right time with\nlow cost [14].\n3. Artificial Intelligence Technology\
    \ and\nApplication to Improve Agriculture and\nFood Industries\nCurrently, the\
    \ use of ML algorithms in the main four clusters\n(preproduction, production,\
    \ processing, and distribution) of\nthe agriculture supply chain is becoming more\
    \ and more\nimportant [15]. In fact, in the preproduction step, the ML\ntechnologies\
    \ are used, especially for the prediction of crop\nyield, soil properties, and\
    \ irrigation requirements. In the\nnext stage of the production phase, the ML\
    \ could be used for\ndisease detection and weather prediction. Concerning the\n\
    third cluster of the processing phase, utilization of ML\napproaches is applied,\
    \ especially to estimate of the pro-\nduction planning to reach a high and safe\
    \ quality of the\nproduct. ML algorithms could be used also to the distri-\nbution\
    \ cluster, especially in storage, transportation, and\nconsumer analysis. Te preproduction\
    \ cluster is the initial\nstep in the agriculture supply chain. It mainly concerns\
    \ the\nprediction of crop yield, soil properties, and irrigation re-\nquirement.\
    \ Many researchers report the importance of the\ncrop yield production in order\
    \ to better support plant\nmanagement. In fact, by using as an input data (equipment\n\
    requirements, nutrients, and fertilizers) in predicting eﬃ-\ncient models based\
    \ on ML algorithms, these precision ag-\nriculture tools aim to make stakeholders\
    \ and farmers\nsupport ideal decision in crop yield forecasting and improve\n\
    the smart farming practices. Recently, diﬀerent ML algo-\nrithms are used for\
    \ crop yield prediction such as the\nBayesian network, regression, decision tree,\
    \ clustering, deep\nlearning, and ANN [16–18]. According to the prediction of\n\
    soil management properties, several ML algorithms are used\nin learning soil properties.\
    \ Among them, the LS-SVM (least-\nsquares support vector machine) method was used\
    \ by\nMorellos et al. [19] to study 140 soil samples. Nahvi et al. [20]\nused\
    \ the SaE (self-adpative evolutionary) ML algorithm to\nboost the performance\
    \ of the extreme learning machine\n(ELM) architecture to estimate daily soil temperature.\
    \ Ad-\nditionally, Kumar et al. [21] proposed a novel method named\nthe CSM (Crop\
    \ Selection Method) to resolve crop selection\nproblems and help improve net yield\
    \ rate of crops over the\nseason. In addition, Ben Ayed et al. [16] analyzed 18\n\
    worldwide table olive cultivars by using morphological,\nbiological,\nand\nphysicochemical\n\
    parameters\nand\nthe\nBayesian network to study the inﬂuence of these parameters\n\
    in tolerance, productivity, and oil content. Tey revealed that\noil content was\
    \ highly inﬂuenced by the tolerance of the\ncrop. Another important parameter\
    \ in the preproduction\ncluster is the irrigation management that plays a crucial\
    \ role\nin aﬀecting the quality and quantity of the crops. In fact, to\nachieve\
    \ an eﬀective irrigation system (better decision in\nwhen, where, and how much\
    \ to irrigate), researchers used\nsoil moisture data, precipitation data, evaporation\
    \ data, and\nweather forecasts as input data for simulation and optimi-\nzation\
    \ of predicted models based on ML adequate algo-\nrithms [22]. In fact, Arvind\
    \ et al. [23] demonstrated that\nusing ML algorithm associated with other technologies\
    \ such\nas sensors, Zigbee, and Arduino microcontroller was eﬃ-\ncient for prediction\
    \ and tackles drought situations. In ad-\ndition, Cruz et al. [24] exploited the\
    \ ANN feed-forward and\nback-propagation technologies to optimize the water re-\n\
    sources in a smart farm. More recently, Choudhary et al. [25]\nused PLSR and other\
    \ regression algorithms as an artiﬁcial\nintelligence tool combined with sensors\
    \ for data collection\nand Internet of things hardware implementation to increase\n\
    eﬃciency and economic feasibility.\nTe production cluster is the second phase\
    \ in the ag-\nriculture supply chain. Tere are numerous parameters that\naﬀect\
    \ and play a key role in the crop production step. Among\nthem are the weather\
    \ forecasts (sunlight, rainfall, humidity,\netc.), crop protection against biotic\
    \ stress factors (weeds and\npathogens) and abiotic stress factors (nutrient and\
    \ water\ndeﬁciency), crop quality management, and harvesting. Many\ndiﬀerent ML\
    \ algorithms are used to simulate eﬀective\nmodels for weather prediction (ANN,\
    \ deep learning, deci-\nsion tree, ensemble learning, and instance-based learning)\n\
    [26], for crop protection (clustering and regression) [27],\nANN, deep learning\
    \ [14], weed detection (ANN, decision\ntree, deep learning, and instance-based\
    \ learning) [28], crop\nquality management (clustering and regression) [29], and\n\
    harvesting (deep neural networks, data mining techniques\nsuch as k mean clustering,\
    \ k nearest neighbor, ANN, and\nSVM) [30]. During the harvest stage which is the\
    \ ﬁnal\nhorticultural stage after the ripening of the crops, ML al-\ngorithms\
    \ are also used to predict the transformation of the\nfruit or crop color. In\
    \ fact, many research teams used ML\nalgorithms to predict the fruit ripening\
    \ stages and fruit\nmaturity such as Gao et al. [31] who achieved 98.6% clas-\n\
    siﬁcation accuracy when they used hyperspectral datasets\nand the AlexNet CNN\
    \ deep learning model to classify the\nstrawberry fruits into early-ripe and ripe\
    \ stages. Te pro-\ncessing cluster is the third stage in the agriculture supply\n\
    chain. Tere are many types of processing techniques of\nagriculture products such\
    \ as heating, cooling, milling,\nsmoking, cooking, and drying. Te choice of eﬀective\n\
    combined parameters in the processing stage results in a\nhigh quality and quantity\
    \ of food product and, at the same\ntime, avoiding overutilization of resources.\
    \ To achieve this\ngoal, several food industries use modern food processing\n\
    technologies by installing software algorithms based on ML.\nAmong the used ML\
    \ algorithms, there are genetic algorithm,\nANN, clustering, and Bayesian network\
    \ [32]. In fact, Arora\nand Mangipudi [33] proposed support vector machine\nJournal\
    \ of Food Quality\n3\n(SVM) classiﬁer and artiﬁcial neural network (ANN) models\n\
    to detect the presence of nitrosamine in the red meat food\nsamples, and the obtained\
    \ predictive modeling results\nrevealed that the highest testing accuracy was\
    \ obtained using\nthe deep learning model. Additionally, Farah et al. [34] used\n\
    diﬀerential scanning calorimetry combined with ML tools\n(such as gradient boosting\
    \ machine, random forest, RF,\nmultilayer perceptron, MLP, and GBM) to determine\
    \ the\nmilk characteristics and authenticity and to detect fraud. Te\nmost eﬃcient\
    \ results were obtained with GBM and MLP\nmachine learning tools which were able\
    \ to classify 100% of\nadulterated samples. Te distribution cluster is the ﬁnal\
    \ step\nin the agriculture supply chain. Tis stage is the connection\nbetween\
    \ food production and processing and the ﬁnal use or\nﬁnal consumer. ML algorithms\
    \ could be used in storage,\ntransportation, consumer analytics, and inventory\
    \ man-\nagement. In transportation and storage steps, the mainly\nused algorithms\
    \ are genetic algorithm, clustering, and re-\ngression. Tese predictive techniques\
    \ aim to better preserve\nthe food product quality, to ensure safe food products\
    \ and to\nminimize the product damage by tracing the product [16].\nFor the consumer\
    \ analytics, ML techniques such as deep\nlearning and ANN are used in the food\
    \ retailing phase for\npredicting consumer demand, perception, and buying be-\n\
    havior. For the inventory management, the use of ML ge-\nnetic algorithms helps\
    \ in predicting daily demand and to\nensure that there are no inventory-related\
    \ problems [35].\nExamples of AI-applied technology are numerous in the\nagri-food\
    \ sector, i.e., robotics and mechatronics [2], drones\n[2, 36], geographic information\
    \ systems (GISs) [37],\nblockchain (BC) [38], and satellite guidance [2]. Miranda\n\
    et al. [39] have reported and described these items as sensing,\nsmart, and sustainable\
    \ technologies, providing systematic\nprocess where connectivity, automation,\
    \ precision, moni-\ntoring, and digitization are prevalent [40–43]. Smart\nmechanization,\
    \ robotics, and mechatronics in agriculture\naim to reduce drudgery and minimize\
    \ inputs using highly\nautonomous and intelligent machines [2]. From horse to\n\
    tractor, robots, and intelligent vehicles, a revolutionary era\nhas come for agriculture\
    \ and food industry, from rudi-\nmentary to high eﬃciency of agriculture with\
    \ the intro-\nduction\nof\nmechanization,\ninnovative\ntechnologies,\ncomputerized\
    \ analysis, and decision, improving farming\nactivities and crop productivity\
    \ [2]. Revolutionizing ma-\nchines, often called “agribots,” are now used in agriculture\n\
    for all kinds of activities, namely, soil preparation, seed\nsowing, weed and\
    \ pest treatment, irrigation, fertilization,\nand ultimately, grain and fruit\
    \ harvesting, minimizing eﬀort\nand energy cost [2, 44–47]. As a whole crop management,\n\
    agricultural drones can be used starting from soil treatment\n(herbicide), going\
    \ to sowing step, plant treatment (pesti-\ncide), and physiological control and\
    \ observation, and ending\nwith harvest time determination [2, 36, 48–51]. Agricultural\n\
    drones are now able to supply water, fertilizers, herbicides,\nand pesticides\
    \ and even ﬁlm, capture images, and generate\nmaps in real time of plants and\
    \ ﬁeld in order to help farmers\ntake management decision [2, 48, 52–56]. Today,\
    \ farmers use\ndrones for livestock surveillance for monitoring illnesses,\ninjuries,\
    \ and even pregnancies [57]. In 2019, the worldwide\nagriculture drone market\
    \ value was about USD one million\nand is expected to reach USD 3.7 million by\
    \ 2027 [58],\nwhereas the robot and agriculture drone market is projected\nto\
    \ reach USD 23 billion by 2028 [59, 60]. Based on geospatial\ntechnology that\
    \ relies on satellite, GIS is applied on several\nﬁelds of agriculture: crop management,\
    \ irrigation control,\nyield estimation, disease and weed control, farming auto-\n\
    mation, livestock monitoring, vegetation mapping, erosion,\nand land degradation\
    \ forecast [37, 61–68]. Application of\nGIS is, therefore, suitable in precision\
    \ agriculture, real-time\ncontrol, and raising awareness and signiﬁcantly contributes\n\
    to meet the needs of continuous rise in food demand.\nBlockchain is another technology\
    \ that answers to con-\nsumer’s awareness about food origin, quality, and mainly,\n\
    safety. BC aﬀords transparency, trust, certiﬁcation, and\ntraceability of food\
    \ product supply chain from farm to fork,\nwhere every single operation and data\
    \ are timely registered,\nsaved, encrypted, and secured, not in a single central\
    \ server\nnor under a single control, but in a common platform\ndatabase where\
    \ every user could access and take part in\ntransactions [38, 69–79]. Such digital\
    \ and computerized\ntraceability of the whole food supply chain would allow\n\
    detection of deﬁciency, contamination, and adulteration of\nthe product, thus\
    \ optimizing its quality and safety; therefore,\na multitude of agencies, consortia,\
    \ and platforms were born\nin this context [79]. In 2020, the worldwide market\
    \ of BC in\nagri-food market size was about USD 133 million; it is es-\ntimated\
    \ to grow and reach around USD 950 million by 2025\n[69]. Satellite-guided technology\
    \ applied to agriculture\nimproved farm monitoring and aided mapping agricultural\n\
    zones, soil management, crop husbandry, irrigation disease\nand\nweed\ncontrol,\n\
    yield\nestimation,\nand\nharvesting\n[2, 80–88]. Hence, in the late 1900s, one\
    \ single farmer was\nable to produce food grains for 128, actually, and in the\n\
    future, through smart agriculture, this ratio will greatly\nincrease [2].\n4.\
    \ Limits and Drawbacks of AI and ML\nHowever, despite all these advantages, the\
    \ AI technology has\nalso some drawbacks representing challenges. Firstly, the\n\
    most important social challenge is the unemployment that\ncould be a threat; in\
    \ fact, smart machines and robots could\nreplace the majority of the repetitive\
    \ works and tasks; thus,\nhuman interference is becoming less, which will cause\
    \ a\nmajor problem in the employment standards. Other tech-\nnological challenges,\
    \ for instance, machines can do only\nthose tasks which they are programmed or\
    \ developed to do,\nand anything out of that they tend to crash or give irrelevant\n\
    outputs could be a major backdrop. In addition, the high\ncosts of creation and\
    \ maintenance of the smart machines as\nwell as the cleaver computers could be\
    \ considered as\ntechnological limits of the AI technologies, especially that\
    \ AI\nis updating every day which is why the hardware and\nsoftware need to get\
    \ updated with time to meet the latest\nrequirements. Machines need repairing\
    \ and maintenance\nwhich is expensive. Te creation requires huge costs as they\n\
    are very complex machines. Other issues related to these\napplications are their\
    \ high cost that could increase the price\n4\nJournal of Food Quality\nof the\
    \ products. Moreover, beyond the opportunities\naﬀorded by smart and computerized\
    \ technologies, some\nrisks and apprehensions could be posed for sustainability,\n\
    particularly the massive energy consumption, e-waste\nproblem, market concentration,\
    \ job displacement, and even\nthe ethical framework [79, 89].\n5. Conclusions\n\
    Te agriculture and food industries are one of the most vital\nﬁelds for humanity.\
    \ Te ﬁrst products of agriculture are used\nas inputs in several multiactor distributed\
    \ supply chains,\nincluding four clusters or stages of the agriculture supply\n\
    chain (preproduction, production, processing, and distri-\nbution) in order to\
    \ reach the end user or consumer. Due to\nseveral challenges in the future for\
    \ the agriculture and food\nsector and various factors such as climate change,\
    \ pop-\nulation growth, technological progress, and the state of\nnatural resources\
    \ (water, etc.), it is urgent to use the digital\ntechnologies at diﬀerent stages\
    \ of agriculture supply chain\nsuch as automation of farm machinery, use of sensors\
    \ and\nremote satellite data, artiﬁcial intelligence, machine learning\nfor improved\
    \ monitoring of crops, and water, for agriculture\nfood product traceability.\
    \ In the present study, we dem-\nonstrate the main applications of the AI and\
    \ ML algorithms\nin diﬀerent clusters of the agriculture supply chain and the\n\
    unquestionable growing tendency in the adoption of these\nalgorithms to improve\
    \ food industries.\nData Availability\nTe data used to support the ﬁndings of\
    \ this study are\navailable from the corresponding author upon request.\nConflicts\
    \ of Interest\nTe authors declare no conﬂicts of interest.\nReferences\n[1] J.\
    \ Rockstr¨om, J. Williams, G. Daily et al., “Sustainable in-\ntensiﬁcation of\
    \ agriculture for human prosperity and global\nsustainability,” Ambio, vol. 46,\
    \ no. 1, pp. 4–17, 2017.\n[2] K. R. Krishna, Push Button Agriculture: Robotics,\
    \ Drones,\nSatellite-Guided Soil and Crop Management, Apple Academic\nPress, Waretown,\
    \ NJ, USA, 2016.\n[3] R. Ben-Ayed, N. Kamoun-Grati, and A. Rebai, “An overview\n\
    of the authentication of olive tree and oil,” Comprehensive\nReviews in Food Science\
    \ and Food Safety, vol. 12, pp. 218–227,\n2013.\n[4] G. S. Patel, A. Rai, N. N.\
    \ Das, and R. P. Singh, Eds., Smart\nAgriculture: Emerging Pedagogies of Deep\
    \ Learning, Machine\nLearning and Internet of Tings, CRC Press, Boca Raton, FL,\n\
    USA, 1st edition, 2021.\n[5] A. Gharaei, M. Karimi, and S. A. Hoseini Shekarabi,\
    \ “An\nintegrated multi-product, multi-buyer supply chain under\npenalty, green,\
    \ and quality control polices and a vendor\nmanaged inventory with consignment\
    \ stock agreement: the\nouter approximation with equality relaxation and augmented\n\
    penalty algorithm,” Applied Mathematical Modelling, vol. 69,\npp. 223–254, 2019.\n\
    [6] B. B. Traore, B. Kamsu-Foguem, and F. Tangara, “Data mining\ntechniques on\
    \ satellite images for discovery of risk areas,”\nExpert Systems with Applications,\
    \ vol. 72, pp. 443–456, 2017.\n[7] M. I. Jordan and T. M. Mitchell, “Machine learning:\
    \ trends,\nperspectives, and prospects,” Science, vol. 349, 2015.\n[8] M. Mohri,\
    \ A. Rostamizadeh, and A. Talwalkar, Foundations of\nMachine Learning, MIT Press,\
    \ Cambridge, MA, USA, 2018,\nhttps://cs.nyu.edu/∼mohri/mlbook/.\n[9] A. Suprem,\
    \ N. Mahalik, and K. Kim, “A review on application\nof technology systems, standards\
    \ and interfaces for agricul-\nture and food sector,” Computer Standards & Interfaces,\n\
    vol. 35, no. 4, pp. 355–364, 2013.\n[10] R. Sujatha, J. M. Chatterjee, N. Jhanjhi,\
    \ and S. N. Brohi,\n“Performance of deep learning vs machine learning in plant\n\
    leaf disease detection,” Microprocessors and Microsystems,\nvol. 80, p. 103615,\
    \ 2021.\n[11] A. Crane-Droesch, “Machine learning methods for crop yield\nprediction\
    \ and climate change impact assessment in agri-\nculture,” Environmental Research\
    \ Letters, vol. 13, no. 11,\np. 114003, 2018.\n[12] D. N. Fente and D. K. Singh,\
    \ “Weather forecasting using\nartiﬁcial neural network,” in Proceedingsof the\
    \ 2018 Second\nInternational Conference on Inventive Communication and\nComputational\
    \ Technologies (ICICCT), Coimbatore, India,\nApril 2018.\n[13] M. S. Suchithra\
    \ and M. L. Pai, “Improving the prediction\naccuracy of soil nutrient classiﬁcation\
    \ by optimizing extreme\nlearning machine parameters,” Information Processing\
    \ in\nAgriculture, vol. 7, no. 1, pp. 72–82, 2020.\n[14] A. Kamilaris and F. X.\
    \ Prenafeta-Bold´u, “Deep learning in\nagriculture: a survey,” Computers and Electronics\
    \ in Agri-\nculture, vol. 147, pp. 70–90, 2018.\n[15] O. Ahumada and J. R. Villalobos,\
    \ “Application of planning\nmodels in the agri-food supply chain: a review,” European\n\
    Journal of Operational Research, vol. 196, no. 1, pp. 1–20, 2009.\n[16] R. Ben\
    \ Ayed, K. Ennouri, F. Ben Amar, F. Moreau, M. A. Triki,\nand A. Rebai, “Bayesian\
    \ and phylogenic approaches for\nstudying relationships among table olive cultivars,”\
    \ Bio-\nchemical Genetics, vol. 55, no. 4, pp. 300–313, 2017.\n[17] D. Elavarasan,\
    \ D. R. Vincent, V. Sharma, A. Y. Zomaya, and\nK. Srinivasan, “Forecasting yield\
    \ by integrating agrarian\nfactors and machine learning models: a survey,” Computers\n\
    and Electronics in Agriculture, vol. 155, pp. 257–282, 2018.\n[18] C. Zhang, J.\
    \ Liu, J. Shang, and H. Cai, “Capability of crop\nwater content for revealing\
    \ variability of winter wheat grain\nyield and soil moisture under limited irrigation,”\
    \ Science of\nTe Total Environment, vol. 631-632, pp. 677–687, 2018.\n[19] A.\
    \ Morellos, X.-E. Pantazi, D. Moshou et al., “Machine\nlearning based prediction\
    \ of soil total nitrogen, organic\ncarbon and moisture content by using VIS-NIR\
    \ spectros-\ncopy,” Biosystems Engineering, vol. 152, pp. 104–116, 2016.\n[20]\
    \ B. Nahvi, J. Habibi, K. Mohammadi, S. Shamshirband, and\nO. S. Al Razgan, “Using\
    \ self-adaptive evolutionary algorithm\nto improve the performance of an extreme\
    \ learning machine\nfor estimating soil temperature,” Computers and Electronics\
    \ in\nAgriculture, vol. 124, pp. 150–160, 2016.\n[21] R. Kumar, M. P. Singh, P.\
    \ Kumar, and J. P. Singh, “Crop\nSelection Method to maximize crop yield rate\
    \ using machine\nlearning technique,” in Proceedings of the 2015 International\n\
    Conference on Smart Technologies and Management for\nComputing, Communication,\
    \ Controls, Energy and Materials\n(ICSTM), pp. 138–145, Avadi, India, May 2015.\n\
    [22] A. Goap, D. Sharma, A. K. Shukla, and C. Rama Krishna, “An\nIoT based smart\
    \ irrigation management system using\nJournal of Food Quality\n5\nMachine learning\
    \ and open source technologies,” Computers\nand Electronics in Agriculture, vol.\
    \ 155, pp. 41–49, 2018.\n[23] G. Arvind, V. G. Athira, H. Haripriya, R. A. Rani,\
    \ and\nS. Aravind, “Automated irrigation with advanced seed ger-\nmination and\
    \ pest control,” in Proceedings of the 2017 IEEE\nTechnological Innovations in\
    \ ICT for Agriculture and Rural\nDevelopment (TIAR), pp. 64–67, Chennai, India,\
    \ April 2017.\n[24] J. R. Dela Cruz, R. G. Baldovino, A. A. Bandala, and\nE. P.\
    \ Dadios, “Water usage optimization of smart farm au-\ntomated irrigation system\
    \ using artiﬁcial neural network,” in\nProceedings of the 2017 5th International\
    \ Conference on In-\nformation and Communication Technology (ICoIC7), pp. 1–5,\n\
    Melaka, Malaysia, May 2017.\n[25] V. Gaurav, S. Choudhary, A. Singh, and S. Agarwal,\
    \ “Au-\ntonomous crop irrigation system using artiﬁcial intelligence,”\nInternational\
    \ Journal of Engineering and Advanced Technology\n(IJEAT), vol. 8, 2019.\n[26]\
    \ M. K. Saggi and S. Jain, “Reference evapotranspiration esti-\nmation and modeling\
    \ of the Punjab Northern India using\ndeep learning,” Computers and Electronics\
    \ in Agriculture,\nvol. 156, pp. 387–398, 2019.\n[27] A. Singh, N. Shukla, and\
    \ N. Mishra, “Social media data an-\nalytics to improve supply chain management\
    \ in food in-\ndustries,” Transportation Research Part E: Logistics and\nTransportation\
    \ Review, vol. 114, pp. 398–415, 2018.\n[28] K. Liakos, P. Busato, D. Moshou,\
    \ S. Pearson, and D. Bochtis,\n“Machine learning in agriculture: a review,” Sensors,\
    \ vol. 18,\nno. 8, p. 2674, 2018.\n[29] A. Chlingaryan, S. Sukkarieh, and B. Whelan,\
    \ “Machine\nlearning approaches for crop yield prediction and nitrogen\nstatus\
    \ estimation in precision agriculture: a review,” Com-\nputers and Electronics\
    \ in Agriculture, vol. 151, pp. 61–69, 2018.\n[30] E. J. Sadgrove, G. Falzon,\
    \ D. Miron, and D. W. Lamb, “Real-\ntime object detection in agricultural/remote\
    \ environments\nusing the multiple-expert colour feature extreme learning\nmachine\
    \ (MEC-ELM),” Computers in Industry, vol. 98,\npp. 183–191, 2018.\n[31] Z. Gao,\
    \ Y. Shao, G. Xuan, Y. Wang, Y. Liu, and X. Han, “Real-\ntime hyperspectral imaging\
    \ for the in-ﬁeld estimation of\nstrawberry ripeness with deep learning,” Artiﬁcial\
    \ Intelligence\nin Agriculture, vol. 4, pp. 31–38, 2020.\n[32] X. Ma, S. Wang,\
    \ and Q. Bai, “Coordination of production\nscheduling and vehicle routing problems\
    \ for perishable food\nproducts,” International Journal of Internet Manufacturing\n\
    and Services, vol. 6, no. 1, p. 79, 2019.\n[33] M. Arora and P. Mangipudi, “A\
    \ computer vision-based\nmethod for classiﬁcation of red meat quality after nitrosamine\n\
    appendage,” International Journal of Computational Intelli-\ngence and Applications,\
    \ vol. 20, no. 1, p. 2150005, 2021.\n[34] J. S. Farah, R. N. Cavalcanti, J. T.\
    \ Guimarães et al., “Diﬀer-\nential scanning calorimetry coupled with machine\
    \ learning\ntechnique: an eﬀective approach to determine the milk au-\nthenticity,”\
    \ Food Control, vol. 121, p. 107585, 2021.\n[35] A. Dolgui, M. K. Tiwari, Y. Sinjana,\
    \ S. K. Kumar, and\nY.-J. Son, “Optimising integrated inventory policy for per-\n\
    ishable items in a multi-stage supply chain,” International\nJournal of Production\
    \ Research, vol. 56, no. 1-2, pp. 902–925,\n2018.\n[36] K. R. Krishna, Agricultural\
    \ Drones : A Peaceful Pursuit/K,\nApple Academic Press, Palm Bay, FL, USA, 2017.\n\
    [37] S. Ravensberg, “GIS in agriculture, integrate sustainability,”\n2018, https://www.integratesustainability.com.au/2018/11/23/\n\
    gis-in-agriculture/.\n[38] G. Zhao, S. Liu, C. Lopez et al., “Blockchain technology\
    \ in\nagri-food value chain management: a synthesis of applica-\ntions, challenges\
    \ and future research directions,” Computers\nin Industry, vol. 109, pp. 83–99,\
    \ 2019.\n[39] J. Miranda, P. Ponce, A. Molina, and P. Wright, “Sensing,\nsmart\
    \ and sustainable technologies for agri-food 4.0,” Com-\nputers in Industry, vol.\
    \ 108, pp. 21–36, 2019.\n[40] L. Trivelli, A. Apicella, F. Chiarello, R. Rana,\
    \ G. Fantoni, and\nA. Tarabella, “From precision agriculture to Industry 4.0,”\n\
    British Food Journal, vol. 121, no. 8, pp. 1730–1743, 2019.\n[41] M. Bacco, P.\
    \ Barsocchi, E. Ferro, A. Gotta, and M. Ruggeri,\n“Te digitisation of agriculture:\
    \ a survey of research activities\non smart farming,” Array, vol. 3-4, p. 100009,\
    \ 2019.\n[42] M. J. O’Grady, D. Langton, and G. M. P. O’Hare, “Edge\ncomputing:\
    \ a tractable model for smart agriculture?” Artiﬁcial\nIntelligence in Agriculture,\
    \ vol. 3, pp. 42–51, 2019.\n[43] K. Jha, A. Doshi, P. Patel, and M. Shah, “A comprehensive\n\
    review on automation in agriculture using artiﬁcial intelli-\ngence,” Artiﬁcial\
    \ Intelligence in Agriculture, vol. 2, pp. 1–12,\n2019.\n[44] G. Kootstra, X.\
    \ Wang, P. M. Blok, J. Hemming, and\nE. van Henten, “Selective harvesting robotics:\
    \ current re-\nsearch, trends, and future directions,” Current Robotics Re-\n\
    ports, vol. 2, no. 1, pp. 95–104, 2021.\n[45] K. Sennaar, “Agricultural robots-present\
    \ and future appli-\ncations,”\n2021,\nhttps://emerj.com/ai-sector-overviews/\n\
    agricultural-robots-present-future-applications/.\n[46] C. W. Bac, E. J. Van Henten,\
    \ J. Hemming, and Y. Edan,\n“Harvesting robots for high-value crops: state-of-the-art\
    \ re-\nview and challenges ahead,” Journal of Field Robotics, vol. 31,\n2014.\n\
    [47] A. Zujevs, V. Osadcuks, and P. Ahrendt, “Trends in robotic\nsensor technologies\
    \ for fruit harvesting: 2010–2015,” Procedia\nComputer Science, vol. 77, 2015.\n\
    [48] J. Huuskonen and T. Oksanen, “Soil sampling with drones\nand augmented reality\
    \ in precision agriculture,” Computers\nand Electronics in Agriculture, vol. 154,\
    \ pp. 25–35, 2018.\n[49] “Importance of drone technology in Indian agriculture,\
    \ farm-\ning,” 2021, https://www.equinoxsdrones.com/blog/importance-\nof-drone-technology-in-indian-agriculture-farming.\n\
    [50] “Drones and precision agriculture: the future of farming,”\n2021, https://www.microdrones.com/en/content/drones-and-\n\
    precision-agriculture-the-future-of-farming/.\n[51] How Drones Can Help Manage\
    \ the World’s Food Supply, World\nEconomic Forum, Cologny, Switzerland, 2021,\
    \ https://www.\nweforum.org/agenda/2018/09/how-drones-can-manage-the-fo\nod-supply-chain-and-tell-you-if-what-you-eat-is-sustainable/.\n\
    [52] Agricultural Drones: A Peaceful Pursuit, Routledge & CRC\nPress, Boca Raton,\
    \ FL, USA, 2021, https://www.routledge.com/\nAgricultural-Drones-A-Peaceful-Pursuit/Krishna/p/book/9781\n\
    774636428.\n[53] How Drones are Being Used in Australia to Make Farming More\n\
    Eﬃcient, ForestTECH, Rotorua, New Zealand, 2021, https://\nforesttech.events/how-drones-are-being-used-in-australia-to-ma\n\
    ke-farming-more-eﬃcient/.\n[54] Robots and Drones: Addressing Agriculture’s Long-Term\n\
    Challenges, IDTechEx, Cambridge, UK, 2018, https://www.\nidtechex.com/fr/research-article/robots-and-drones-addressi\n\
    ng-agricultures-long-term-challenges/14126.\n[55] Drones in Agriculture Industry\
    \ Helps with Demand for Food\nProduction, ITChronicles, Montreal, Canada, 2020,\
    \ https://\nitchronicles.com/artiﬁcial-intelligence/game-of-drones-in-big-\ndata-and-agriculture-industry/.\n\
    6\nJournal of Food Quality\n[56] Robots Agricoles, Drones et IA : 2020–2040 :\
    \ Technologies,\nMarch´es et Joueurs, https://www.idtechex.com/fr/research-\n\
    report/agricultural-robots-drones-and-ai-2020-2040-techn\nologies-markets-and-players/749,\n\
    Cambridge,\nUK,\nIDTechEx.\n[57] T. Jennings, Farming Drones: the Future of Agriculture?,\n\
    CropLife, Brussels, Belgium, 2017, https://www.croplife.com/\niron/farming-drones-the-future-of-agriculture/.\n\
    [58] Agriculture Drone Market Size, Share, Industry Analysis, 2027,\nFortune Business\
    \ Insights, Pune, Maharashtrahttps://www.\nfortunebusinessinsights.com/agriculture-drones-market-\n\
    102589.\n[59] BIS Research, Te Rising Demand for Agriculture Drones and\nRobots,\
    \ BIS Research, Fremont, CA, USA, 2021, https://blog.\nmarketresearch.com/the-rising-demand-for-agriculture-\n\
    drones-and-robots.\n[60] Global Agriculture Drones and Robots Market: Focus on\n\
    Drones, Robot Type (Milking Robot, Harvesting & Picking\nRobot, Autonomous Robot\
    \ Tractor), Farm Produce, Farming\nEnvironment, Business Model, Regulations, and\
    \ Patent-\ns–Analysis & Forecast, 2018–2028, BIS Research, Fremont,\nCA,\nUSA,\n\
    2021,\nhttps://www.marketresearch.com/BIS-\nResearch-v4011/Global-Agriculture-Drones-Robots-Focus-\n\
    12393359/?progid\x8891587.\n[61] GIS Applications in Agriculture, Routledge &\
    \ CRC Press, Boca\nRaton,\nFL,\nUSA,\n2021,\nhttps://www.routledge.com/GIS-\n\
    Applications-in-Agriculture/Pierce-Clay/p/book/\n9780849375262.\n[62] GIS Applications\
    \ in Agriculture, Routledge & CRC Press, Boca\nRaton,\nFL,\nUSA,\n2021,\nhttps://www.routledge.com/GIS-\n\
    Applications-in-Agriculture/book-series/GIS.\n[63] GIS Applications in Agriculture,\
    \ Volume 1, CRC Press, Boca\nRaton,\nFL,\nUSA,\n2021,\nhttps://www.nhbs.com/gis-\n\
    applications-in-agriculture-volume-1-book.\n[64] GIS Applications in Agriculture,\
    \ Volume 2: in Nutrient\nManagement for Energy Eﬃciency, Washington State Uni-\n\
    versity, Prosser, WA, USA, 2021, https://www.nhbs.com/gis-\napplications-in-agriculture-volume-2-book.\n\
    [65] GIS Applications in Agriculture, Volume 3: Invasive Species,\nCRC Press,\
    \ Boca Raton, FL, USA, 2021, https://www.nhbs.\ncom/gis-applications-in-agriculture-volume-3-book.\n\
    [66] GIS Applications in Agriculture, Volume 4: Conservation\nPlanning, CRC Press,\
    \ Boca Raton, FL, USA, 2021, https://\nwww.nhbs.com/gis-applications-in-agriculture-volume-4-\n\
    book.\n[67] Use of GIS in Agriculture, Cornell Small Farms, Ithaca, NY,\nUSA,\n\
    2017,\nhttps://smallfarms.cornell.edu/2017/04/use-of-\ngis/.\n[68] GIS in Agriculture\
    \ as the Key to Eﬀective Decision-Making,\nIntellias, Lviv, Ukraine, 2020, https://www.intellias.com/gis-\n\
    in-agriculture/.\n[69] Blockchain in Agriculture: Solving Agri-Food Supply Chain,\n\
    Farrelly Mitchell, Dubai, UAE, 2020, https://farrellymitchell.\ncom/blockchain-in-agriculture-solving-food-supply-chain/.\n\
    [70] F. Antonucci, S. Figorilli, C. Costa, F. Pallottino, L. Raso, and\nP. Menesatti,\
    \ “A Review on blockchain applications in the\nagri-food sector,” Journal of the\
    \ Science of Food and Agri-\nculture, vol. 99, 2019.\n[71] M. P. Caro, M. S. Ali,\
    \ M. Vecchio, and R. Giaﬀreda,\n“Blockchain-based traceability in agri-food supply\
    \ chain\nmanagement: a practical implementation,” in Proceedings of\nthe 2018\
    \ IoT Vertical and Topical Summit on Agriculture-\nTuscany (IOT Tuscany), pp.\
    \ 1–4, Tuscany, Italy, May 2018.\n[72] A. M. G. Lamparte, Use of Blockchain Technologies\
    \ in the Agri-\nFood Sector, EIP-AGRI-European Commission, Brussels,\nBelgium,\
    \ 2020, https://ec.europa.eu/eip/agriculture/en/event/\nuse-blockchain-technologies-agri-food-sector\
    \ (accessed April\n4, 2021).\n[73] G. A. Motta, B. Tekinerdogan, and I. N. Athanasiadis,\n\
    “Blockchain applications in the agri-food domain: the ﬁrst\nwave,” Frontiers in\
    \ Blockchain, vol. 3, 2020.\n[74] M. Tripoli and J. Schmidhuber, Emerging Opportunities\
    \ for the\nApplication of Blockchain in the Agri-Food Industry, FAO and\nICTSD,\
    \ Rome, Italy, 2018.\n[75] SmartAgriFood-Blockchain AgriOpenData, SmartAgriFood,\n\
    Brussels,\nBelgiumhttps://www.smartagrifood.it/index-en.\nhtml.\n[76] 2021 Blockchains\
    \ in agrifood project, TNO. /projects/\nagrifood.\n[77] “Blockchain in agriculture\
    \ and food supply chain market size,\nindustry statistics, trends and analysis.\
    \ COVID-19 impact\nanalysis,” 2021, https://www.marketsandmarkets.com/Market-\n\
    Reports/blockchain-agriculture-market-and-food-supply-chain-\n55264825.html?gclid\x88\
    CjwKCAjwx6WDBhBQEiwA_dP8rb1pY\nwZtfgPGY6Q7ITPmnCa5zDe7yJliCkiWjDEZtKbGWInzZh6p\n\
    UBoCAdEQAvD_BwE.\n[78] Blockchain in Agrifood: A Great Opportunity. . . Disguised\
    \ as a\nTrend?, AgFunderNews, San Francisco, CA, USA, 2021.\n[79] N. Patelli and\
    \ M. Mandrioli, “Blockchain technology and\ntraceability in the agrifood industry,”\
    \ Journal of Food Science,\nvol. 85, no. 11, pp. 3670–3678, 2020.\n[80] Satellite\
    \ Guidance, CropWatch, Beijing, China, 2015, https://\ncropwatch.unl.edu/ssm/guidance.\n\
    [81] Digital Cameras, Remote Satellites Measure Crop Water De-\nmand, EurekAlert\
    \ Science News, Washington, DC, USA,\n2021, https://www.eurekalert.org/pub_releases/2008-07/asfh-\n\
    dcr071708.php.\n[82] A. I. De Castro, F. L´opez-Granados, and M. Jurado-Exp´osito,\n\
    “Broad-scale cruciferous weed patch classiﬁcation in winter\nwheat using QuickBird\
    \ imagery for in-season site-speciﬁc\ncontrol,” Precision Agriculture, vol. 14,\
    \ no. 4, pp. 392–413,\n2013.\n[83] “Ground-based remote sensing system for irrigation\
    \ sched-\nuling-sciencedirect,”\n2021,\nhttps://www.sciencedirect.com/\nscience/article/abs/pii/S1537511012001523.\n\
    [84] “New satellite data will help farmers facing drought–climate\nchange: vital\
    \ signs of the planet,” 2021, https://climate.nasa.\ngov/news/1145/new-satellite-data-will-help-farmers-facing-\n\
    drought/.\n[85] N. C. Coops and T. R. Tooke, “Introduction to remote\nsensing,”\
    \ in Learning Landscape Ecology: A Practical Guide to\nConcepts and Techniques,\
    \ S. E. Gergel and M. G. Turner, Eds.,\nSpringer, New York, NY, USA, pp. 3–19,\
    \ 2017.\n[86] Precision Ag: Applying Agronomy Innovatively in Production\nCrop\
    \ Consulting, Crop Quest, Dodge City, KS, USA, 2021,\nhttps://www.cropquest.com/category/precision-ag/.\n\
    [87] NASA, NASA Uses Satellite to Unearth Innovation in Crop\nForecasting, NASA,\
    \ Washington, DC, USA, 2021, https://\nwww.nasa.gov/topics/earth/features/crop_forecast.html.\n\
    [88] 2021 Home GDA. https://www.gdacorp.com.\n[89] GAG, Digitising Agrifood, BCFN\
    \ Foundation, Parma, Italy,\n2021, https://www.barillacfn.com/en/publications/digitising-\n\
    agrifood/.\nJournal of Food Quality\n7\n"
  inline_citation: '>'
  journal: Journal of food quality
  limitations: '>'
  pdf_link: https://downloads.hindawi.com/journals/jfq/2021/5584754.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: Artificial Intelligence to Improve the Food and Agriculture Sector
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/comst.2016.2610578
  analysis: '>'
  authors:
  - Zesong Fei
  - Bin Li
  - Shaoshi Yang
  - Chengwen Xing
  - Hongbin Chen
  - Lajos Hanzo
  citation_count: 313
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Communications Surveys
    &... >Volume: 19 Issue: 1 A Survey of Multi-Objective Optimization in Wireless
    Sensor Networks: Metrics, Algorithms, and Open Problems Publisher: IEEE Cite This
    PDF Zesong Fei; Bin Li; Shaoshi Yang; Chengwen Xing; Hongbin Chen; Lajos Hanzo
    All Authors 312 Cites in Papers 7493 Full Text Views Abstract Document Sections
    I. Introduction II. Related Surveys and Tutorials III. Fundamentals of WSNs IV.
    Techniques of MOO V. Existing Literature on Using MOO in WSNs Show Full Outline
    Authors Figures References Citations Keywords Metrics Footnotes Abstract: Wireless
    sensor networks (WSNs) have attracted substantial research interest, especially
    in the context of performing monitoring and surveillance tasks. However, it is
    challenging to strike compelling tradeoffs amongst the various conflicting optimization
    criteria, such as the network''s energy dissipation, packet-loss rate, coverage,
    and lifetime. This paper provides a tutorial and survey of recent research and
    development efforts addressing this issue by using the technique of multi-objective
    optimization (MOO). First, we provide an overview of the main optimization objectives
    used in WSNs. Then, we elaborate on various prevalent approaches conceived for
    MOO, such as the family of mathematical programming-based scalarization methods,
    the family of heuristics/metaheuristics-based optimization algorithms, and a variety
    of other advanced optimization techniques. Furthermore, we summarize a range of
    recent studies of MOO in the context of WSNs, which are intended to provide useful
    guidelines for researchers to understand the referenced literature. Finally, we
    discuss a range of open problems to be tackled by future research. Published in:
    IEEE Communications Surveys & Tutorials ( Volume: 19, Issue: 1, Firstquarter 2017)
    Page(s): 550 - 586 Date of Publication: 16 September 2016 ISSN Information: DOI:
    10.1109/COMST.2016.2610578 Publisher: IEEE Funding Agency: Glossary AbbreviationExpansion
    2D two-dimensional. 3D three-dimensional. ABC artificial bee colony. ACO ant colony
    optimization. AHP analytical hierarchy process. AI artificial intelligence. ANN
    artificial neural network. APF artificial potential field. BER bit-error rate.
    BOA Bayesian optimization algorithm. CIVA centralized immune-Voronoi deployment
    algorithm. CR cognitive radio. CR-WSN cognitive radio aided WSN. DE differential
    evolution. DoS denial-of-service. DPAP deployment and power assignment problem.
    DSA dynamic spectrum access. DSC disjoint set cover. EA evolutionary algorithm.
    EDLA energy-density-latency-accuracy. EMOCA evolutionary multi-objective crowding
    algorithm. FA firefly algorithm. FL fuzzy logic. FRMOO fuzzy random multi-objective
    optimization. GA genetic algorithm. GP goal programming. HBOA hierarchical Bayesian
    optimization algorithm. ICA imperialist competitive algorithm. IoT Internet of
    Things. ISM industrial, scientific, and medical. MA memetic algorithm. MAC medium
    access control. MDP Markov decision process. MODA multi-objective deployment algorithm.
    MODE multi-objective differential evolution. MOEA multi-objective evolutionary
    algorithm. MOEA/D multi-objective evolutionary algorithm based on decomposition.
    MOEA/DFD multi-objective evolutionary algorithm based on decomposition with fuzzy
    dominance. MOGA multi-objective genetic algorithm. MOGLS multi-objective genetic
    local search. MOICA multi-objective imperialist competitive algorithm. MOMGA multi-objective
    messy genetic algorithm. MOMGA-II multi-objective messy genetic algorithm-II.
    MOO multi-objective optimization. MOP multi-objective optimization problem. MOSS
    multi-objective scatter search. MOTS multi-objective tabu search. NPGA niched
    Pareto genetic algorithm. NSGA non-dominated sorting genetic algorithm. NSGA-II
    non-dominated sorting genetic algorithm-II. NUM network utility maximization.
    OSI open systems interconnection. PAES Pareto archive evolution strategy. PESA
    Pareto envelope-based selection algorithm. PESA-II Pareto envelope-based selection
    algorithm-II. PF Pareto front. PHY physical layer. PS Pareto set. PSO particle
    swarm optimization. QoS quality-of-service. RL reinforcement learning. SDD subgradient
    dual decomposition. SINR signal-to-interference-plus-noise ratio. SIOA swarm intelligence
    based optimization algorithm. SPEA strength Pareto evolutionary algorithm. SPEA2
    strength Pareto evolutionary algorithm-2. WBAN wireless body area network. WLAN
    wireless local area network. WSN wireless sensor network. SECTION I. Introduction
    A. Motivation Wireless sensor networks (WSN) consist of a large number of compact,
    low-cost, low-power, multi-functional sensor nodes that communicate wirelessly
    over short distances [1], [2]. In WSNs, the sensor nodes are generally deployed
    randomly in the field of interest, which are extensively used for performing monitoring
    and surveillance tasks [3]–[5]. Depending on the specific application scenarios,
    WSNs may rely on diverse performance metrics to be optimized. For example, the
    energy efficiency and network lifetime are among the major concerns in WSNs, since
    the sensor nodes are typically powered by battery, whose replacement is often
    difficult. Furthermore, the network coverage, latency and the fairness among sensor
    nodes are important for maintaining the quality-of-service quality-of-service
    (QoS) [6], [7]. In practice, these metrics often conflict with each other, hence
    the careful balancing of the trade-offs among them is vital in terms of optimizing
    the overall performance of WSNs in real applications. In conventional WSN designs,
    typically the most salient performance metric is chosen as the optimization objective,
    while the remaining performance metrics are normally treated as the constraints
    of the optimization problem. Such single-objective optimization approaches, however,
    may be unfair and unreasonable in real WSN applications, since it artificially
    over-emphasizes the importance of one of the metrics to the detriment of the rest
    [8]. Hence, a more realistic optimization is to simultaneously satisfy multiple
    objectives, such as the maximal energy efficiency, the shortest delay, the longest
    network lifetime, the highest reliability, and the most balanced distribution
    of the nodes’ residual energy, or the trade-offs among the above objectives [9],
    [10]. Accordingly, multi-objective optimization multi-objective optimization (MOO)
    can be naturally adopted for solving the above problem, since it may be more consistent
    with the realistic scenarios [11]. MOO algorithms have been a subject of intense
    interest to researchers for solving diverse multi-objective optimization problems
    (MOP), in which multiple objectives are treated simultaneously subject to a set
    of constraints [12]. However, it is infeasible for multiple objectives to achieve
    their respective optima at the same time, thus there may not exist a single globally
    optimal solution, which is the best with respect to all objectives. Nevertheless,
    there exists a set of Pareto-optimal or non-dominated solutions generating a set
    of Pareto-optimal outcomes/objective vectors, which is called Pareto front/frontier
    Pareto front (PF) or Pareto boundary/curve/surface. Explicitly, the PF is generated
    by the specific set of solutions, for which none of the multiple objectives can
    be improved without sacrificing the other objectives [13]. This set of Pareto-optimal
    or non-dominated solutions constitutes the focus of our interest, and it is also
    called the Pareto-efficient set or Pareto set Pareto set (PS) that is mapped to
    the PF in the objective function space [14]. Diverse approaches, such as mathematical
    programming based scalarization methods and nature-inspired metaheuristics, may
    be used for finding the PSs of MOPs. Scalarizing an MOP means formulating a single-objective
    optimization problem such that optimal solutions to the single-objective optimization
    problem are Pareto-optimal solutions to the MOP [15]. In addition, it is often
    required that every Pareto-optimal solution can be reached with the aid of specific
    parameters of the scalarization. Representatives of scalarization methods include
    the linear weighted-sum method, the ε -constraints method [15] and goal programming
    goal programming (GP) based methods. MOPs are more often solved by bio-inspired
    metaheuristics, such as multi-objective evolutionary algorithms (MOEAs) [16],
    [17] and swarm intelligence based optimization algorithms (SIOAs) [18]. MOEAs
    aim for finding a set of representative Pareto-optimal solutions in a single run
    [14], [19], [20]. As a subset of MOEAs, the multi-objective genetic algorithms
    (MOGAs), such as the strength Pareto evolutionary algorithm strength Pareto evolutionary
    algorithm (SPEA) [16] and the non-dominated sorting genetic algorithm-II non-dominated
    sorting genetic algorithm-II (NSGA-II) [21], have been particularly widely researched
    in the family of MOO algorithms [22], because they are capable of efficiently
    constructing an approximate PF. This is mainly due to the fact that MOGAs accommodate
    a diverse variety of bio-inspired operators to iteratively generate a population
    of feasible solutions. Compared to genetic algorithms (GAs) that rely on the interplay
    between genetics and biological evolution, SIOAs seek to understand the collective
    behavior of animals, particularly insects, and to use this understanding for solving
    complex, nonlinear problems. One of the most widely used SIOAs is the ant colony
    optimization ant colony optimization (ACO) algorithm [23], which has indeed been
    invoked for solving the MOPs in WSNs [24]. Several other bio-inspired algorithms
    related to swarm intelligence will be surveyed in Section IV. B. Contributions
    of This Survey In this paper, we focus our attention on various basic concepts,
    conflicting performance criteria/optimization objectives, as well as the MOO techniques
    conceived for striking a trade-off in the context of WSNs. The contributions of
    our work are four-fold, which are listed as follows: We provide in-depth discussions
    on the basics, metrics and relevant algorithms conceived for MOO in WSNs. We present
    a comprehensive coverage and clear classification of various prevalent MOO algorithms
    conceived for solving MOPs, and clarify the strengths and weaknesses of each MOO
    algorithm in the context of WSNs. We provide an exhaustive review of the up-to-date
    research progress of MOO in WSNs according to different trade-off metrics. We
    highlight a variety of open research challenges and identify possible future trends
    for MOO in WSNs, according to the latest developments of WSNs. C. Paper Organization
    The reminder of this paper is organized as follows. In Section II, we summarize
    the related surveys of MOO in WSNs. In Section III, we commence with an overview
    of WSNs in terms of their system model and applications. Furthermore, we introduce
    the main optimization objectives of interest in WSNs. In Section IV, we present
    the family of MOO techniques that can in principle be used for solving this kind
    of problems. In Section V, we provide an overview of the existing studies dedicated
    to multi-objective methods in WSNs. Finally, in Section VI we describe a range
    of open problems and possible future research directions, followed by our conclusions
    in Section VII. For the sake of explicit clarity, the organization of this paper
    is shown in Fig. 1. Fig. 1. The organization of this paper. Show All SECTION II.
    Related Surveys and Tutorials A range of surveys have been dedicated to diverse
    single-objective research domains in WSNs, such as their energy efficiency [25],
    routing [26], congestion control [27], their MAC protocols [28], data collection
    [6], privacy and security [29], localization [30], [31], cross-layer QoS guarantees
    [32], sink mobility management [33], and network virtualization [34]. In recent
    years, several surveys and tutorials advocated MOO methods for optimizing the
    conflicting performance objectives of WSNs. Specifically, Wang et al. [35] provided
    a review of recent studies on multi-objective scheduling and discussed its future
    research trends. In [36], the MOO criteria and strategies conceived for node deployment
    in WSNs were surveyed. Performance trade-off mechanisms of the routing protocols
    designed for energy-efficient WSNs were reviewed in [37], where various artificial
    intelligence techniques and the related technical features of the routing protocols
    were discussed. Coello [38] surveyed the most representative MOEAs and their major
    applications from a historical perspective. Konak et al. [39] presented a comprehensive
    survey and tutorial of MOGAs. Furthermore, Adnan et al. [40] provided a holistic
    overview of bio-inspired optimization techniques, such as particle swarm optimization
    particle swarm optimization (PSO), ACO and GA. In particular, Kulkarni and Venayagamoorthy
    [41] presented a brief survey of how to apply PSO in WSN applications, while bearing
    in mind the peculiar characteristics of sensor nodes. They also presented a state-of-the-art
    survey of computational intelligence in the context of WSNs and highlighted numerous
    challenges facing each of the MOPs discussed [42]. Additionally, Jabbar et al.
    [43] reviewed the optimization in biological systems and discussed bio-inspired
    optimization of non-biological systems. In contrast to other surveys, Deif and
    Gadallah [44] provided a classification of algorithms proposed in the literature
    for planned deployment of WSNs. They discussed and compared diverse WSN deployment
    algorithms in terms of their assumptions, objectives and performance. Additionally,
    in a more recent study Iqbal et al. [45], [46] reviewed the MOO techniques and
    simulation tools conceived for solving different problems related to the design,
    operation, deployment, placement, planning and management of WSNs. The above-mentioned
    surveys related to MOO in WSNs are outlined at a glance in Table I, which allows
    the readers to capture the main contributions of each of the existing surveys.
    TABLE I Existing Surveys Relating to MOO in WSNs SECTION III. Fundamentals of
    WSNs A. System Model WSNs generally consist of hundreds or potentially even thousands
    of spatially distributed, low-cost, low-power, multi-functional, autonomous sensor
    nodes and communicate over short distances [1]. Each node is usually equipped
    with a sensor unit, a processor, a radio transceiver, an A/D converter, a memory
    unit, and a power supply (battery). The typical architecture of a WSN node is
    illustrated in Fig. 2. A WSN node may also have additional application-dependent
    components attached, such as the location finding system and mobilizer. By combining
    these different components into a miniaturized device, these sensor nodes become
    multi-functional. In other words, the structure and characteristics of sensor
    nodes depend both on their electronic, mechanical and communication limitations,
    as well as on their application-specific requirements. One of the great challenges
    facing WSNs is to use such resource-constrained sensor nodes to meet certain application
    requirements, including sensing coverage, network lifetime and end-to-end delay.
    Fig. 2. Typical architecture of a WSN node. Show All Typically, sensor nodes are
    grouped into clusters, and each cluster has a node that acts as the cluster head,
    which has more resources and computational power than the other cluster nodes.
    All nodes gather and deliver their sensed information to the cluster head, which
    in turn forwards it to a specialized node, namely the sink node or base station,
    via a hop-by-hop wireless communication link. In indoor scenarios, a WSN is typically
    rather small and consists of a single cluster supported by a single base station.
    Multiple clusters relying on multiple base stations are possible in a large-scale
    deployment of WSNs. Fig. 3 shows the relationship between WSNs and the infrastructure-based
    networks. Typically, a sink node or base station is responsible for gathering
    the uplink information gleaned from sensor nodes through either single-hop or
    multi-hop communications. Then, the sink node sends the collected information
    to the interested users via a gateway, often using the internet or any other communication
    path [47]. It should be noted that with the development of machine-to-machine
    communications, it is possible to have sensors and machines directly connected
    to cellular network based mobile Internet. Fig. 3. Wireless sensor networks and
    their relationship to infrastructure-based networks. Show All At the time of writing,
    the most common way of constructing WSNs relies on the ZigBee communications protocol,
    which complies with the IEEE 802.15.4 standard, outlining the specifications of
    both the physical layer physical layer (PHY) and the medium access control medium
    access control (MAC) layer. This is widely regarded as the de facto standard for
    WSNs [48]. A WSN operates in the unlicensed industrial, scientific, and medical
    industrial, scientific, and medical (ISM) band, in which it coexists with many
    other successful communication systems, such as the IEEE 802.11 standard based
    wireless local area network wireless local area network (WLAN) and the 802.15.1
    standard based Bluetooth communication systems. Therefore, a WSN may face the
    challenge of co-channel interferences imposed by both other WSNs and other co-existing
    heterogeneous wireless systems. This coexistence problem may substantially affect
    the performance of WSNs. B. Applications In WSNs, sensor nodes are generally deployed
    randomly in the majority of application domains. When the sensor nodes are deployed
    in hostile remote environments, they may be equipped with high-efficiency energy
    harvesting devices (e.g., solar cells) for extending the network lifetime [49].
    Numerous practical applications of WSNs have been rolled out with the advancement
    of technologies. In general, the applications of WSNs can be classified into two
    types: monitoring and tracking. Monitoring is used for analyzing, supervising
    and carefully controlling operation of a system in real-time. Tracking is generally
    used for following the change of an event, a person, an animal, and so on. Existing
    monitoring applications include indoor/outdoor environmental monitoring [50],
    industrial monitoring [51], precision agriculture (e.g., irrigation management
    and crop disease prediction) [52], biomedical or health monitoring [53], electrical
    network monitoring [54], military location monitoring [55], and so forth. Tracking
    applications include habitat tracking [56], traffic tracking [57], military target
    tracking [58], etc. We summarize their classification in Fig. 4. Fig. 4. Taxonomy
    of WSN applications. Show All A more detailed portrayal of WSN applications is
    given in Fig. 5. For instance, in environmental monitoring, WSNs can help us perform
    forest fire detection, flood detection, forecast of earthquakes and eruptions,
    pollution monitoring, etc. [50], [59]. In industry and agriculture, WSNs can sense
    and detect farming and wildlife, monitor equipment and goods, protect commercial
    property, predict crop disease and production quality, control pests and diseases,
    etc. [51], [52]. In healthcare and biomedical applications, WSNs can be utilized
    for diagnostics, distance-monitoring of patients and their physiological data,
    as well as for tracking the medicine particles inside patients’ body, etc. [53].
    In particular, WSN based wireless body area networks (WBAN) can help monitor human
    body functions and characteristics (e.g., artificial retina, vital signs, automatic
    drug delivery, etc.), acting as an in vitro or in vivo diagnostic system [60].
    In the infrastructure, WSNs have been widely used for monitoring the railway systems
    and their components, such as bridges, rail tracks, track beds, track equipment,
    as well as chassis, wheels, and wagons that are closely related to rolling stock
    quality [61]. WSNs also allow users to manage various appliances both locally
    and remotely for building automation applications [62]. In military target tracking
    and surveillance, a WSN can assist in intrusion detection and identification.
    Specific examples include enemy troop and tank movements, battle damage assessment,
    detection and reconnaissance of biological, chemical and nuclear attacks, etc.
    [58]. Fig. 5. Overview of WSN applications in real environments. Here, SHIMMER
    represents the Intel digital health group’s “sensing health with intelligence,
    modularity, mobility, and experimental re-usability” [47]. Show All Furthermore,
    several novel WSN application scenarios, such as the Internet of Things [63],
    cyber-physical systems [64] and smart grids [65], among others, have adopted new
    design approaches that support multiple concurrent applications on the same WSN.
    The applications of WSNs are not limited to the areas mentioned in this paper.
    The future prospects of WSN applications are promising in terms of revolutionizing
    our daily lives. C. MOO Metrics In this subsection, a succinct overview of the
    most popular optimization objectives of WSNs is provided. Over the past years,
    a number of research contributions have addressed diverse aspects of WSNs, including
    their protocols [66], routing [67], energy conservation [25], lifetime [68] and
    so forth. The QoS, as perceived by the users or applications, was given insufficient
    attention at the beginning. However, at the time of writing, how to provide the
    desired QoS is becoming an increasingly important topic for researchers. Different
    applications may have their own specific QoS requirements, but some of the more
    commonly used metrics for characterizing QoS are the coverage area and quality,
    the delay, the number of active nodes, the bit-error rate bit-error rate (BER)
    and the overall WSN lifetime. There are many other QoS metrics worth mentioning,
    and a range of factors affecting the QoS in WSNs are portrayed in Fig. 6, which
    was directly inspired by [69] and reflects the application requirements of a WSN.
    It is indeed plausible that the network’s performance can be quantified in terms
    of its energy conservation, lifetime, and QoS-based metrics in specific applications.
    However, multiple metrics usually conflict with each other. For example, when
    more energy is consumed by the nodes, the operating lifetime of the network reduces.
    Similarly, if more active nodes are deployed in a given region, a lower per-node
    power is sufficient for maintaining connectivity, but the overall delay is likely
    to be increased due to the increased number of hops. Hence, an application-specific
    compromise has to be struck between having more short hops imposing a lower power
    dissipation but higher delay and having more longer hops, which reduces the delay
    but may increase the transmit-power dissipation. Fig. 6. The interplay of factors
    affecting the QoS in WSNs. Show All 1) Coverage: “Coverage” is one of the most
    important performance metrics for a sensor network. In other wireless communication
    networks, coverage typically means the radio coverage. By contrast, coverage in
    the context of WSNs corresponds to the sensing range, while connectivity corresponds
    to the communication range. WSN coverage can be classified into three types: area
    coverage, point coverage and barrier coverage [44]. In area coverage, the coverage
    quality of an entire two-dimensional two-dimensional (2D) region is considered,
    where each point in the region is observed by at least one sensor node. In point
    coverage, the objective is to simply guarantee that a finite set of points in
    the region are observed by at least one sensor node. Barrier coverage usually
    deals with the detection of movement across a barrier of sensor nodes. The most
    richly studied coverage problem in the WSN literature is the area coverage problem.
    The characterization of the coverage varies depending both on the underlying models
    of each node’s field of view and on the metric used for appraising the collective
    coverage. Several coverage models [70]–[72] have been proposed for different application
    scenarios. A coverage model is normally defined with respect to the sensing range
    of a sensor node. The most commonly used node coverage model is the so-called
    sensing disk model, where all points within a disk centered at the node are considered
    to be covered by the node [73]. More specifically, a point p is regarded to be
    covered/monitored by at least a node v if their Euclidean distance is less than
    the sensing range R s of node v . Given a set of nodes, finding the optimal positions
    of these nodes to achieve maximum coverage is in general an NP-complete problem
    [11]. There are many different ways of solving the coverage optimization problem
    suboptimally. Here, in order to make the coverage problem more computationally
    manageable, we consider an area A represented by a rectangular grid, which is
    divided into G=xy rectangular cells of identical size, and let ( x j , y j ) denote
    the coordinate of node j . As a result, the network coverage C v (x) is defined
    as the percentage of the adequately covered cells over the total cells of A and
    it is evaluated as follows [11], [74]: C v (x)= ∑ x x ′ =0 ∑ y y ′ =0 g( x ′ ,
    y ′ ) xy , (1) View Source and g( x ′ , y ′ )={ 1, if ∃ j∈{1,…,N}, d ( x j , y
    j ),( x ′ , y ′ ) ≤ R s , 0, otherwise, (2) View Source where N is the number
    of nodes, g( x ′ , y ′ ) is the monitoring status of the cell centered at ( x
    ′ , y ′ ) , R s is the sensing range of a node, and d ( x j , y j ),( x ′ , y
    ′ ) is the distance from the location of node j to the cell centered at ( x ′
    , y ′ ) . Having a better coverage also leads to a higher probability of detecting
    the event monitored [75]. 2) Network Connectivity: Another issue in WSN design
    is the network connectivity that is dependent on the selected communication protocol
    [76]. Two sensor nodes are directly connected if the distance of the two nodes
    is smaller than the communication range R c . Connectivity only requires that
    the location of any active node is within the communication range of one or more
    active nodes, so that all active nodes can form a connected communication network.
    The most common protocol relies on a cluster-based architecture, where all nodes
    in the same cluster can directly communicate with each other via a single hop
    and all nodes in the same cluster can communicate with all nodes in the neighboring
    clusters via the cluster head. In a given cluster only a single node acts as the
    cluster head, which has to be active in terms of collecting all information gleaned
    by the other nodes for the sake of maintaining connectivity. In cluster-based
    WSNs, the connectivity issues tend to hinge on the number of nodes in each cluster
    (because a cluster head can only handle up to a specific number of connected nodes),
    as well as on the coverage issues related to the ability of any location to be
    covered by at least one active sensor node. For an area represented by a rectangular
    grid of size x×y , let R c i and R s i denote the communication range and sensing
    range of the i th sensor node, respectively. To guarantee each sensor node is
    placed within the communication range of at least another sensor node and to prevent
    sensor nodes from becoming too close to each others, the objective function associated
    with the network connectivity can be expressed as [77] f con = ∑ i=1 x×y 1− e
    −( R c i − R s i ) , (3) View Source where R c i − R s i >0 has to be satisfied
    for achieving network connectivity. Maintaining the network’s connectivity is
    essential for ensuring that the messages are indeed propagated to the appropriate
    sink node or base station, and the loss of connectivity is often treated as the
    end of the network’s lifetime. Network connectivity is closely related to the
    coverage and energy efficiency of WSNs. To elaborate a little further, substantial
    energy savings can be achieved by dynamic management of node duty cycles in WSNs
    having high node density. In this method, some nodes can be scheduled to sleep
    (or enter a power-saving mode), while the remaining active nodes provide continuous
    service. As far as this approach is concerned, a fundamental problem is to minimize
    the number of nodes that remain active while still achieving acceptable QoS. In
    particular, maintaining an adequate sensing coverage and network connectivity
    with the active nodes is a critical requirement in WSNs. The relationship between
    coverage and connectivity hinges on the ratio of the communication range to the
    sensing range. A connected network may not be capable of guaranteeing adequate
    coverage regardless of the ranges. By contrast, Wang et al. [78] and Xing et al.
    [79] presented a sufficient condition for guaranteeing network connectivity, which
    states that for a set of nodes that cover a convex region, the network remains
    connected if R c ≥2 R s . There exist tighter relationships between R c and R
    s for achieving network connectivity, provided that adequate sensing coverage
    is guaranteed [80]–[82]. Intuitively, if the communications range of sensor nodes
    is sufficiently large, then maintaining connectivity is not a problem, because
    in this case there always exists a node to communicate with. A more in-depth discussion
    of the relationship between coverage, connectivity and energy efficiency of WSNs
    can be found in [78]–[82]. 3) Network Lifetime: Another important performance
    metric in WSNs is their lifetime. Tremendous research efforts have been invested
    into solving the problem of prolonging network lifetime by energy conservation
    in WSNs. Indeed, the energy source of each node is generally limited, while recharging
    or replacing the battery at the sensors may be impossible. Hence, both the radio
    transceiver unit and the sensor unit of each node have to be energy-efficient,
    and it is vitally important to maximize the attainable network lifetime [83],
    defined as the time interval between the initialization of the network and the
    depletion of the battery of any of the sensor nodes. For the simplicity of exposition,
    typically all sensor nodes are assumed to be of equal importance, which is a reasonable
    assumption, since the “death” of one sensor node may result in the network becoming
    partitioned, or some area requiring monitoring to be uncovered. Thus, the network’s
    lifetime is defined as the time duration from the application’s first activation
    to the time instant when any of the sensor nodes in the cluster fails due to its
    depleted energy source. More explicitly, this objective can be formulated as T
    net =min T j , (4) View Source where j=1,2,…,N . The lifetime of a sensor node
    is generally inversely proportional both to the average rate of its own information
    generated and to the information relayed by this node. Hence, the network’s lifetime
    is also partially determined by the source rates of all the sensor nodes in the
    network. 4) Energy Consumption: Sensor nodes are equipped with limited battery
    power and the total energy consumption of the WSN is a critical consideration.
    Each node consumes some energy during its data acquisition, processing and transmission
    phases. For instance, in a heterogeneous WSN, different sensor nodes might have
    diverse power and data processing capabilities. Hence, the energy consumption
    of a WSN depends both on the Shannon capacity of the channels among the nodes
    and on these nodes’ functionality. The energy consumption of a path P is the sum
    of the energy expended at each node along the path, hence the total energy consumption
    E(P) of a given path is given by [84] E(P)= ∑ i=0 L ( t a i + t p i )× P o i +
    P t i × t m , (5) View Source where t a i and t p i indicate the time durations
    of data acquisition and data processing taking place at node i , respectively.
    L is the number of nodes on the given path. Furthermore, t m is the message transmission
    time, while P o i and P t i denote the operational power and transmission power
    dissipation of node i , respectively. 5) Energy Efficiency: Energy efficiency
    is a key concern in WSNs, and this metric is closely related to network lifetime
    in the particular context of WSNs [90].1 As an example, herein the energy efficiency
    of node i is defined as the ratio of the transmission rate to the power dissipation.
    Explicitly, it is formulated as η i = W log 2 (1+ γ i ) p i , (6) View Source
    where W denotes the communication bandwidth, p i is the transmission power of
    node i and γ i denotes the signal-to-interference-plus-noise ratio signal-to-interference-plus-noise
    ratio (SINR) at the destination receiver relative to node i , respectively. Due
    to the limited energy resources of each node, we have to utilize these nodes in
    an efficient manner so as to increase the lifetime of the network [91]. There
    are at least two approaches to deal with the energy conservation problem in WSNs.
    The first approach is to plan a schedule of active nodes while enabling the other
    nodes to enter a sleep mode. The second approach is to dynamically adjust the
    sensing range of nodes for the sake of energy conservation. 6) Network Latency:
    For a WSN, typically a fixed bandwidth is available for data transfer between
    nodes. Again, having an increased number of nodes results in more paths becoming
    available for simultaneously routing packets to their destinations, which is beneficial
    for reducing the latency. Meanwhile, this may also degrade the latency that increases
    proportionally to the number of nodes on the invoked paths. This is due to additional
    contention for the wireless channel when the node density increases, as well as
    owing to routing and buffering delays. The delay between source node u so and
    sink node u si , denoted as D u so , u si , is defined as the time elapsed between
    the departure of a collected data packet from u so and its arrival to u si , and
    is given by [92], [93] D u so , u si = = ∝ ( T q + T p + T d )×N( u so , u si
    ) c×N( u so , u si ) N( u so , u si ), (7) View Source where T q is the queue
    delay per intermediate forwarder, T p is the propagation delay and T d is the
    transmission delay. All of them are, for the sake of simplicity, regarded as constants
    and collectively denoted by c . Finally, N( u so , u si ) denotes the total number
    of data disseminators between u so and u si . As a consequence, the minimization
    of the delay corresponds to minimizing the number of intermediate forwarders between
    the source and the sink. It is worth noting that Haenggi and Puccinelli [94] astutely
    argued that long-hop based routing is a very competitive strategy compared to
    short-hop aided routing in terms of latency, albeit this design dilemma also has
    ramifications as to the scarce energy resource of the nodes. 7) Differentiated
    Detection Levels: Differentiated sensor network deployment is also an important
    issue. In many real WSN applications, such as underwater sensor deployments or
    surveillance applications, certain parts of the supervised region may require
    extremely high detection probabilities if these parts constitute safety-critical
    geographic area. However, in the less sensitive geographic area, relatively low
    detection probabilities have to be maintained for reducing the number of nodes
    deployed, which corresponds to reducing the cost imposed. Therefore, different
    geographic areas require different densities of deployed nodes, and the sensing
    requirements are not necessarily uniformly distributed within the entire supervised
    region. Let us use d((m,n),(i,j)) to denote the Euclidean distance between the
    coordinates (m,n) and (i,j) . A probabilistic node detection model can be formulated
    as [95]–[97] p((m,n),(i,j))={ e −ad((m,n),(i,j)) , 0, d((m,n),(i,j))≤ R s , d((m,n),(i,j))>
    R s , (8) View Source where a is a parameter associated with the physical characteristics
    of the sensing device and R s is the sensing range. 8) Number of Nodes: Each sensor
    node imposes a certain cost, including its production, deployment and maintenance.
    As a result, the total cost of the WSN increases with the number of sensor nodes.
    When deploying a WSN in a battleground, sensor nodes have to operate as stealthily
    as possible to avoid being detected by the enemy. This implies that the number
    of nodes has to be kept at a minimum in order to reduce the probability of any
    of them being discovered. [98]–[103] are dedicated to optimal node deployment
    by considering the accomplishment of the specified goals at a minimum cost. Minimizing
    the number of active nodes is equivalent to maximizing the following objective
    [104]: f( K ′ )=1− | K ′ | |K| , (9) View Source where | K ′ | is the number of
    active nodes and |K| is the total number of nodes. 9) Fault Tolerance: Sensor
    nodes may fail, for example, due to the surrounding physical conditions or when
    their energy runs out. It may be difficult to replace the existing nodes, hence
    the network has to be fault tolerant in order to prevent individual failures from
    reducing the network lifetime [36], [105]. In other words, fault tolerance can
    be viewed as an ability to maintain the network’s operation without interruption
    in the case of a node failure, and it is typically implemented in the routing
    and transport protocols. The fault tolerance or reliability R k (t) of a sensor
    node can be modeled using the Poisson distribution in order to capture the probability
    of not having a failure within the time interval (0,t) as [1]: R k (t)= e − λ
    k t , (10) View Source where λ k is the failure rate of sensor node k and t is
    the time period. Numerous studies have been focused on forming k -connected WSNs
    [78], [79], [106]. The k -connectivity implies that there are k independent paths
    in the full set of the pair of nodes. For k≥2 , the network can tolerate some
    node and link failures. Due to the many-to-one interaction pattern, k -connectivity
    is a particularly important design factor in the neighborhood of base stations
    and guarantees maintaining a certain communication capacity among the nodes [106].
    10) Fair Rate Allocation: It is important to guarantee that the sink node receives
    information from all sensor nodes in a fair manner when the bandwidth is limited.
    The accuracy of the received source information depends on the allocated source
    rate. Simply maximizing the total throughput of the network is insufficient for
    guaranteeing the specific application’s performance, since this objective may
    only be achieved at the expense of sacrificing the source rate supposed to be
    allocated to some nodes [107]. For example, in a sensor network that tracks the
    mobility of certain objects in a large field of observation, lower rates impose
    a reduced location tracking accuracy and vice versa. By simply maximizing the
    total throughput instead of additionally considering the above fairness issues
    among sources, we may end up with a solution that shuts off many sources in the
    network and enables only those sources whose transport energy-cost to the sink
    is the lowest. Hence, considering the fairness of rate allocation among different
    sensor nodes is of high significance. An attractive methodology of achieving this
    goal is to adopt a network utility maximization network utility maximization (NUM)
    framework [107], in which a concave, non-decreasing and twice differentiable utility
    function U i ( x i ) quantifies the grade of satisfaction of sensor node i with
    the assigned rate x i , and the goal is to maximize the sum of individual utilities.
    A specific class of utility functions that has been extensively used for achieving
    fair resource allocation in economics and distributed computing [108] is formulated
    as: U α (x)={ logx 1 1−α x 1−α  α=1,  α>1, (11) View Source where x=( x i ,∀i)
    and the functional operations are elementwise. When we have α=1 , the above utility
    function leads to the so-called proportional fairness, whereas when α→∞ , this
    utility function leads to max–min fairness.2 11) Detection Accuracy: Having a
    high target detection accuracy is also an important design goal for the sake of
    achieving accurate inference about the target in WSNs. Target detection accuracy
    is directly related to the timely delivery of the density and latency information
    of the WSN. Assume that a node k receives a certain amount of energy e k (u) from
    a target located at location u and K o is the energy emitted by the target. Then,
    the signal energy e k (u) measured by node k is given by [84] e k (u)= K o /(1+α
    d p k ), (12) View Source where d k is the Euclidean distance between the target
    location and the location of node k , p is the pathloss exponent that typically
    assumes values in the range of [2, 4], while α is an adjustable constant. 12)
    Network Security: Sensor nodes may be deployed in an uncontrollable environment,
    such as a battlefield, where an adversary might aim for launching physical attacks
    in order to capture sensor nodes or to deploy counterfeit ones. As a result, an
    adversary may retrieve private keys used for secure communications by eavesdropping
    and decrypt the communications of the legitimate sensors. Recently, much attention
    has been paid to the security of WSNs. There are two main types of privacy concerns,
    namely data-oriented and context-oriented concerns [29]. Data-oriented concerns
    focus on the privacy of data collected from a WSN, while context-oriented concerns
    concentrate on contextual information, such as the location and timing of traffic
    flows in a WSN. A simple illustration of the two types of security attacks is
    depicted in Fig. 7. Fig. 7. Two types of privacy attacks in a WSN [29]: Data analysis
    attack and traffic analysis attack conducted by a malicious node. Show All We
    can observe from Fig. 7 that a malicious node of the WSN abuses its ability of
    decrypting data in order to compromise the payload being transmitted in the case
    of data analysis attack. In traffic-analysis attacks, the adversary does not have
    the ability to decrypt data payloads. Instead, it eavesdrops to intercept the
    transmitted data and tracks the traffic flow on a hop-by-hop basis. For the sake
    of improving the network security, we can minimize the loss of privacy that is
    calculated based on information theory as [110] ζ=1− 2 −I(S,X) , (13) View Source
    where I(S,X) is the mutual information between the random variables S and X .
    More specifically, S represents the current position of the node of interest,
    X is the observed variable known to the attacker and correlated to S , while I(S,X)=H(S)−H(S|X)
    with H(⋅) denoting the entropy. Additionally, we can also minimize the probability
    of eavesdropping in a WSN, as presented in [111], to improve the network security.
    Table II summarizes the representative existing contributions to optimizing the
    particular WSN performance metrics mentioned above. TABLE II Major Existing Approaches
    for Evaluating/Improving/Optimizing Each Metric SECTION IV. Techniques of MOO
    In this section, we briefly present the MOO techniques proposed in the literature
    for tackling various important problems in WSNs. A. Optimization Strategies Optimization
    covers almost all aspects of human life and work. In practice, the resources are
    limited, hence optimization is important. Most research activities in computer
    science and engineering involve a certain amount of modeling, data analysis, computer
    simulations and mathematical optimization. This branch of applied science aims
    for finding the particular values of associated variables, which results in either
    the minimum or the maximum values of a single objective function or multiple objective
    functions [40]. A typical optimization process is composed of three components
    [43]: the model, the optimizer/algorithm and the evaluator/simulator, as shown
    in Fig. 8. The representation of the physical problem is carried out by using
    mathematical formulations to establish a mathematical model. Fig. 8. A simple
    illustration of optimization process. Show All As an important step of solving
    any optimization problem, an efficient optimizer or algorithm has to be designed
    for ensuring that the optimal solution is obtained. There is no single algorithm
    that is suitable for all problems. Optimization algorithms can be classified in
    many ways, depending on the specific characteristics that we set out to compare.
    In general, optimization algorithms can be classified as: Finitely terminating
    algorithms, such as the family of simplex algorithms and their extensions, as
    well as the family of combinatorial algorithms; Convergent iterative methods that
    evaluate Hessians (or approximate Hessians, using finite differences), such as
    Newton’s method and sequential quadratic programming; evaluate gradients or approximate
    gradients using finite differences (or even subgradients), such as quasi-Newton
    methods, conjugate gradient methods, interior point methods, gradient descent
    (alternatively, “steepest descent” or “steepest ascent”) methods, subgradient
    methods, bundle method of descent, ellipsoid method, reduced gradient method,
    and simultaneous perturbation based stochastic approximation methods; and evaluate
    only function values, such as interpolation methods and pattern search methods.
    Heuristics/metaheuristics that can provide approximate solutions to some optimization
    problems. Recently, bio-mimetic heuristics/metaheuristics based strategies have
    been widely used for solving MOPs, since they are capable of obtaining near-optimal
    solutions to optimization problems characterized by non-differential nonlinear
    objective functions, which are particularly hard to deal with using classical
    gradient- or Hessian-based algorithms. A general MOP consists of a number of objectives
    to be simultaneously optimized and it is associated with a number of inequality
    and equality constraints. Without loss of generality, a multi-objective minimization
    problem having n variables and m ( m>1 ) objectives can be formulated as min f(x)=
    s.t.  g i (x)≤ h j (x)= min[ f 1 (x), f 2 (x),…, f m (x)] 0, i=1,2,…, m ie , 0,
    j=1,2,…, m eq , (14) View Source where we have x∈ R n with R n being the decision
    space, and f(x)∈ R m with R m representing the objective space. The objective
    functions of (14) are typically in conflict with each other in the real world.
    Explicitly, the improvement of one of the objectives may result in the degradation
    of other objectives, thus it is important to achieve the Pareto-optimality, which
    represents the conditions when none of the objective functions can be reduced
    without increasing at least one of the other objective functions [13]. For the
    minimization of m objectives f 1 (x), f 2 (x),…, f m (x) , we have the following
    definitions. Non-dominated solutions: A solution a is said to dominate a solution
    b if and only if [170]: f i (a)≤ f i (b)  ∀i∈{1,2,…,m} , f i (a)< f i (b)  ∃i∈{1,2,…,m}
    . Solutions that dominate the others but do not dominate themselves are termed
    non-dominated solutions. Local optimality in the Pareto sense: A solution a is
    said to be locally optimal in the Pareto sense, if there exists a real ϵ>0 such
    that there is no other solution b dominating the solution a with b∈ R n ∩B(a,ϵ)
    , where B(a,ϵ) shows a bowl having a center a and a radius ϵ . Global optimality
    in the Pareto sense: A solution a is globally optimal in the Pareto sense, if
    there does not exist any vector b that dominates the vector a . The main difference
    between global and local optimality lies in the fact that for global optimality
    we no longer have a restriction imposed on the decision space R n . Pareto-optimality:
    A feasible solution is said to be Pareto-optimal, when it is not dominated by
    any other solutions in the feasible space. PS, which is also often referred to
    as the efficient set, is the collection of all Pareto-optimal solutions and their
    corresponding images in the objective space are termed the PF. The PF of an MOP
    is portrayed both with and without constrains in Fig. 9. Observe from Fig. 9 (a)
    that the Pareto-optimal solutions of the objective functions in the PF (marked
    as asterisk) provide better values than any other solution in R m . The ideal
    solution marked by a square indicates the joint minimum of the objective values
    f 1 and f 2 and it is often difficult to reach. The remaining solutions marked
    as solid circles are all dominated by at least one solution of the PF. In contrast
    to the unconstrained scenario of Fig. 9 (a), in Fig. 9 (b), the curve illustrates
    the PF of a constrained MOP. The solid circles in the feasible region represent
    the feasible solutions, while the remaining points outside the feasible region
    (e.g., the points marked by triangles) are infeasible [171]. Fig. 9. The PF of
    MOP with and without constrains, m=2 . Show All B. MOO Algorithms Numerous studies
    have been devoted to the subject of MOO and a variety of algorithms have been
    developed for solving MOPs in WSNs. In fact, optimization algorithms are more
    diverse than the types of objective functions, but the right choice of the objective
    function has a much more grave impact than the specific choice of the optimization
    algorithm. Nevertheless, the careful choice of the optimization algorithm is also
    vital, especially when complex MOPs are considered. Solving an MOP means finding
    the PS of the MOP. As mentioned in Section I, there are various classes of methods
    designed for generating the PSs of MOPs, such as mathematical programming based
    scalarization methods, nature-inspired metaheuristics, and so forth. It should
    be noted that scalarizing an MOP means formulating a single-objective optimization
    problem whose optimal solutions are also Pareto-optimal solutions to the MOP [15].
    Additionally, it is often required that every Pareto-optimal solution can be reached
    with the aid of specific parameters of the scalarization. 1) Mathematical Programming
    Based Scalarization Methods: Mathematical programming based classic scalarization
    methods conceived for MOO include the linear weighted-sum method, the ϵ -constraints
    method [15], and the goal programming (GP) based methods [9], [172]–[177], as
    detailed below. a) Linear weighted-sum method: The linear weighted-sum method
    scalarizes multiple performance metrics into a single-objective function by pre-multiplying
    each performance metric (i.e., component objective) with a weight. Since different
    performance metrics have different properties and each metric may have a different
    unit, the normalization must be implemented firstly when using the linear weighted-sum
    method for striking compelling performance trade-offs. Then, a different weight
    is assigned to each metric to get an evaluation function. Finally, the optimal
    compromise is obtained according to the Pareto-optimal solutions generated by
    solving multiple single-objective problems, each corresponding to a specific vector
    of weight values. It can be proved that the optimal solution to each of these
    single-objective problems is a Pareto-optimal solution to the original multi-objective
    problem, i.e., the image of these solutions belong to the PF. The linear weighted-sum
    method is easy to implement and can avoid complex computations, provided that
    the weights are appropriately chosen, since only a single optimal value has to
    be calculated for each single-objective problem. It is worth pointing out that
    all the weights are in the range [0, 1], and the sum of them is 1. However, there
    is no a priori correspondence between a weight vector and a solution vector, and
    the linear weighted-sum method usually uses subjective weights, which often results
    in poor objectivity and makes the objectives to be optimized sensitive to the
    weights. The need to solve multiple single-objective optimization problems with
    the aid of different sets of weight values also implies that a substantial overall
    computational complexity may be imposed. Furthermore, the lack of a reasonable
    weight allocation method degrades its scientific acceptance. To elaborate a little
    further, typically the decision maker is a priori unaware of which weights are
    the most appropriate ones to generate a satisfactory solution, hence he/she does
    not know in general how to adjust the weights to consistently change the solution.
    This also means that it is not easy to develop heuristic algorithms that, starting
    from certain weights, are capable of iteratively generating weight vectors to
    reach a certain portion of the PF. In addition, the linear weighted-sum method
    is incapable of reaching the non-convex parts of the PF. Finally, a uniform spread
    of the weight values, in general, does not produce a uniform spread of points
    on the PF. This fact implies that usually all the points are grouped in certain
    parts of the PF, while some (potentially significant) portions of the PF based
    trade-off curve have not been reached. Note that if the decision maker has a priori
    preference among the multiple objectives considered, or he/she would like to select
    the most satisfactory solution from the Pareto-optimal solutions obtained, a powerful
    multiple criteria decision-making method referred to as the analytical hierarchy
    process analytical hierarchy process (AHP) [178]–[182] can be used to determine
    the relative weights. Using AHP, the weights can be flexibly altered according
    to the specific application requirements. AHP has been widely used in the context
    of trade-off mechanisms (e.g., [183] and [184]), where AHP first decomposes a
    complex problem into a hierarchy of simple subproblems, then synthesizes their
    importance to the original problem, and finally chooses the best solution. b)
    ε -constraints method: The ε -constraints method creates a single-objective function,
    where only one of the original objective functions is optimized while dealing
    with the remaining objective functions as constraints. This method can be expressed
    as [185]: min  f i (x) s.t.  f j ≤ ε j , j≠i, H(x)=0, G(x)≤0, (15) View Source
    where f i (x), i=(1,2,…,N) is the selected function for optimization and the remaining
    N−1 functions act as constraints. It was proved by Miettinen [186] that if an
    objective f j and a vector ε=( ε 1 ,…, ε j−1 , ε j+1 ,…, ε N )∈ R N−1 exist, such
    that x ∗ is an optimal solution to the above problem, then x ∗ is a weak Pareto
    optimum of the original MOP. Therefore, this method is capable of obtaining weak
    Pareto-optimal points by varying the ε vector, but it is not guaranteed to obtain
    all of them. Under certain stronger conditions, it can even obtain the strict
    Pareto optimum [186]. This method is very intuitive and the parameters ε j used
    as upper bounds are easy to interpret. Another advantage of this method is that
    it is capable of finding Pareto-optimal solutions on a non-convex PF. Similar
    to the linear weighted-sum method, having to empirically vary the upper bound
    ε j also implies a drawback of the ε -constraints method, and it is not particularly
    efficient if the number of objective functions is higher than two. c) Goal programming
    (GP): Instead of maximizing multiple objectives, GP is an analytical approach
    devised for solving MOPs, where the goal values (or targets) have been assigned
    to all the objective measures and where the decision-maker is interested in minimizing
    the “non-achievement” of the corresponding goals. In other words, the underlying
    assumption of GP is that the decision-maker seeks a satisfactory and sufficient
    solution with the aid of this strategy. GP can be regarded as an extension or
    generalization of linear programming to handle multiple conflicting objective
    measures. Each of these measures is given a goal or target value to be achieved.
    The sum of undesirable deviations from this set of user-specified target values
    is then minimized with the aid of a so-called achievement function. There are
    various forms of achievement functions, which largely determine the specific GP
    variant. The three oldest and still widely used forms of achievement functions
    include the weighted-sum (Archimedean), preemptive (lexicographic) and MINMAX
    (Chebyshev) [9], [172]–[177]. There exist other scalarization methods devised
    for MOO, such as the conic scalarization method of [176] and [187]. 2) Nature-Inspired
    Metaheuristic Algorithms: MOPs are more often solved by nature-inspired metaheuristics,
    such as multi-objective evolutionary algorithms (MOEAs) [16], [17] and swarm intelligence
    based optimization algorithms (SIOAs) [18]. This is because most classical optimization
    methods are based on a limited number of standard forms, which means that they
    have to comply with the particular structures of objective functions and constraints.
    However, in realistic scenarios it is often impossible to accurately characterize
    the physical problem with an ideal standard-form optimization problem model. Additionally,
    many complicated factors, such as a large number of integer variables, non-linearities,
    and so forth may occur. Both of them can make the realistic problems hard to solve.
    Therefore, the classical mathematical programming based optimization methods may
    not be suitable for solving the MOPs encountered in real-world WSNs. Over the
    most recent decade, metaheuristics have made substantial progress in approximate
    search methods for solving complex optimization problems [188]. A metaheuristic
    technique guides a subordinate heuristic using concepts typically derived from
    the biological, chemical, physical and even social sciences, as well as from artificial
    intelligence, to improve the optimization performance. Compared to mathematical
    programming based methods, metaheuristics based optimization algorithms are relatively
    insensitive to the specific mathematical form of the optimization problems. However,
    the higher the degree of accuracy required, the higher the computational cost
    becomes. So far, the field of metaheuristics based optimization algorithms has
    been mostly constituted by the family of evolutionary algorithms (EAs) [17] and
    the family of SIOAs [44]. In the following, we will review some of their salient
    representatives. a) Evolutionary algorithms (EAs): EAs belong to the family of
    stochastic search algorithms inspired by the natural selection and survival of
    the fittest in the biological world. The goal of EAs is to search for the globally
    near-optimal solutions by repeatedly evaluating the objective functions or fitness
    functions using exploration and exploitation methods. Compared with mathematical
    programming, EAs are eminently suitable for solving MOPs, because they simultaneously
    deal with a set of solutions and find a number of Pareto-optimal solutions in
    a single run of the algorithm. Additionally, they are less susceptible to the
    specific shape or to the continuity of the PF, and they are also capable of approximating
    the discontinuous or non-convex PF [189]. The most efficient PF-based MOEAs have
    been demonstrated to be powerful and robust in terms of solving MOPs [17]. Genetic
    Algorithms (GAs): GAs constitute the most popular branch of EAs [190]. GAs are
    based on genetics and evolutionary theory, and they have been successfully used
    for solving diverse optimization problems, including MOPs. They have appealing
    advantages over traditional mathematical programming based algorithms [44] in
    terms of handling complex problems and convenience for parallel implementation.
    GA can deal with all sorts of objective functions no matter they are stationary
    or transient, linear or nonlinear, continuous or discontinuous. These advantageous
    properties of GAs have inspired their employment in solving MOPs of WSNs. GAs
    rely on the bio-inspired processes of initialization, evaluation, selection, crossover,
    mutation, and replacement, as portrayed in its simplest form in the flow-chart
    of Fig. 10. The MOGA [191] has attracted particularly extensive research attention
    among all the algorithms of MOO. By operating on the generation-by-generation
    basis, a number of Pareto-optimal solutions can be found throughout the evolution
    generations. Thus, obtaining the Pareto-optimal solution set provides us with
    a set of flexible trade-offs. Several solution methods based on MOGAs were presented
    in [112] and [192] for optimizing the layout of a WSN. More specifically, Jourdan
    and De Weck [112] advocated a MOGA for the optimal deployment of static sensor
    nodes in a region of interest, which simultaneously maximized the coverage area
    and the network’s lifetime. The authors then extended their work to three specific
    surveillance scenarios in [192] using the same MOGA. Recently, the non-dominated
    sorting genetic algorithm non-dominated sorting genetic algorithm (NSGA) [193],
    the niched Pareto genetic algorithm niched Pareto genetic algorithm (NPGA) [194]
    and the SPEA [16] have been recommended as the most efficient MOEAs. Differential
    Evolution differential evolution (DE): DE was developed by Storn and Price [195].
    It is arguably one of the most powerful real-valued optimization algorithms. DE
    relies on similar computational steps as employed by a standard EA. It commences
    its operation from randomly initiated parameter vectors, each of which (also called
    genome or chromosome) forms a candidate solution to the optimization problem.
    Then, a mutant vector (known as donor vector) is obtained by the differential
    mutation operation. To enhance the potential diversity of the candidate solutions,
    a crossover operation comes into play after generating the donor vector through
    mutation. The final step of the algorithm calls for selection in order to determine
    whether the target vector survives to the next generation [196]. The main stages
    of the DE algorithm are illustrated in Fig. 11. However, unlike traditional EAs,
    the DE algorithm is much simpler to implement, with only a few parameters to be
    set. Therefore, DE has drawn much attention and has been successfully applied
    in numerous domains of science and engineering (see [197], [198]). Artificial
    Immune System (AIS): AIS is a computational intelligence paradigm inspired by
    the biological immune system. It has been applied to a variety of optimization
    problems and has shown several attractive properties that allow EAs to avoid premature
    convergence and to enhance local search [199]. AIS is capable of recognizing and
    combating pathogens. Molecular patterns expressed on those pathogens are referred
    to as antigens. An antigen is any molecule that can be recognized by the immune
    system and is capable of provoking the immune response. This immune response is
    specific to each antigen. The cells called lymphocytes have a vital role in the
    immune system. There are two types of lymphocytes: B cells and T cells. When an
    antigen is detected, B cells that best recognize the antigen, will proliferate
    by cloning. Some of these new cloned cells will differentiate into plasma cells,
    which are the most active antibody secretors. These cloning and mutation processes
    are termed the clonal selection principle [200], which is one of the inspiring
    methodologies employed in AIS for solving optimization problems. Based on the
    clonal selection principle, an algorithm is developed, where various immune system
    aspects are taken into account, such as the maintenance of the memory cells, selection
    and cloning of the most stimulated cells, death of non-stimulated cells, re-selection
    of the clones with higher affinity, as well as the generation and maintenance
    of diversity. The steps of the AIS are provided in form of pseudocode in Table
    III. Similar to the computational frameworks of EA, AIS can be readily incorporated
    into the evolutionary optimization process and particularly, AIS are often exploited
    in evolutionary techniques devised for MOO to avoid premature convergence. On
    the other hand, the main distinction between the field of AIS and GAs is the nature
    of population development [201]. Specifically, the population of GAs is evolved
    using crossover and mutation operations. However, in the AIS, similar to evolutionary
    strategies where reproduction is a cloning, each child produced by a cell is an
    exact copy of its parent. Both algorithms then use mutation to alter the progeny
    of the cells and introduce further genetic variations. Imperialist Competitive
    Algorithm imperialist competitive algorithm (ICA): Inspired by the socio-political
    evolution process of imperialism and imperialistic competition, ICA was originally
    proposed by Atashpaz-Gargari and Lucas [202]. Similar to other EAs, ICA starts
    with an initial population, with each of them termed a country. The countries
    can be viewed as population individuals and are basically divided into two groups
    based on their power, i.e., imperialists (countries with the least cost function
    value) and colonies. After forming initial empires, the colonies start moving
    toward their relevant imperialist. This movement is a simple manifestation of
    the assimilation policy, which is pursued by some of the imperialists and results
    in improvements of the socio-political characteristics, such as culture, language
    and economical policy, in the colonies. Then, the imperialistic competition starts
    among all the empires. The imperialistic competition will gradually result in
    an increase of the power of stronger empires and a decrease in the power of weaker
    ones. In this process, weak empires will lose their colonies and eventually collapse.
    In the long run, ICA converges to a state where only a single powerful empire
    exists in the world and all the other countries are colonies of that empire.3
    In this state, the best solution of the optimization problem is given when all
    colonies and the corresponding imperialist have the same cost. TABLE III Pseudocode
    of Artificial Immune System Fig. 10. Simplified flow-chart of a GA. Show All Fig.
    11. Simplified illustration of a DE algorithm. Show All ICA has been successfully
    applied in numerous single-objective optimization problems [203], [204], where
    most results indicate that it is superior to the GA in terms of both its accuracy
    and convergence rate. The basic structure of the multi-objective imperialist competitive
    algorithm multi-objective imperialist competitive algorithm (MOICA) is the same
    as that of the ICA. However, new methods are developed to determine the imperialist
    countries, to define the power of the imperialist countries, and to calculate
    the total power of empires for imperialistic competition. Selecting imperialists
    (best countries) from a set of Pareto-optimal solutions impacts both the coverage
    and the diversity of solutions. This impact is more significant when the optimization
    problem has a high number of objectives. A novel MOICA was proposed in [157] for
    handling node deployment, where both the fast non-dominated sorting and the Sigma
    method were employed for selecting the best countries as imperialists. b) Swarm
    intelligence optimization algorithms (SIOAs): Swarm intelligence constitutes a
    branch of artificial intelligence artificial intelligence (AI), and it exploits
    the collective behavior of self-organized, decentralized systems that rely on
    a social structure, such as bird flocks, ant colonies and fish schools. These
    systems consist of low-intelligence interacting agents organized in small societies
    (also referred to as swarms), exhibiting traits of intelligence, such as the ability
    of reacting to environmental threats and the decision making capacities. Swarm
    intelligence has been utilized in the global optimization framework of controlling
    robotic swarms in [44]. Three main SIOAs have been developed, namely, ACO [24],
    PSO [205] and artificial bee colony artificial bee colony (ABC) [206]. Ant Colony
    Optimization (ACO): ACO was inspired by the foraging behavior of some ant species.
    These ants deposit pheromones on the ground in order to mark their nest-to-food
    paths that should be followed by other members of the colony. Additionally, they
    also deposit a different type of pheromone to mark dangerous paths for the others
    to avoid any threat. The ACO algorithm is capable of solving discrete/combinatorial
    optimization problems in various engineering domains. It was initially proposed
    by Dorigo et al. [23], [207] and has since been widely researched and diversified
    to solve a class of numerical problems. To illuminate the basic principle of ACO,
    let us consider the paths A and B of Fig. 12 between a nest and a food source
    as an example [40]. Furthermore, let us denote by n A(t) and n B (t) the number
    of ants along the paths A and B at the time step t , respectively, and by P A
    and P B the probability of choosing path A and path B , respectively. Then, the
    probability of an ant choosing path A at the time step t+1 is given by P A (t+1)=
    [c+ n A (t)] α [c+ n A (t)] α + [c+ n B (t)] α =1− P B (t+1), (16) View Source
    where c is the degree of attraction of a hitherto unexplored branch and α ( α≥0
    ) is the bias towards using pheromone deposits in the decision process. An ant
    chooses between the path A or path B using the following decision rule: if U(0,1)≤
    P A (t+1) then choose path A , otherwise choose path B . Here, U is a random number
    having a uniform distribution in the range of [0, 1]. ACO performs well in the
    dynamic and distributed routing problems of WSNs. Particle Swarm Optimization
    (PSO): Similar to the underlying philosophy of other swarm intelligence approaches,
    PSO aims for mimicking the social behavior of a flock of birds. It consists of
    a swarm of s candidate solutions, termed particles, which explore an n -dimensional
    hyperspace in search of the global solution. In PSO, the particles regulate their
    flying directions based both on their own flying experience and on their neighbors’
    flying experience [208]. After several improvements conceived by researchers,
    PSO became an often-used population-based optimizer, which is capable of solving
    stochastic nonlinear optimization problems at an affordable complexity. The position
    of the i th particle is represented as X i,d , while its velocity is represented
    as V i,d . Each particle is evaluated through an objective function f( x 1 , x
    2 ,…, x n ) , where we have f :  R n ⟶R . The cost (fitness) of a particle close
    to the global solution is lower (higher) than that of a particle being farther
    away. The best position of particle i is denoted as P i,d . Then, the particles
    are manipulated according to the following two equations [208]: V i,d (t+1)= X
    i,d (t+1)= w V i,d (t)+ λ 1 r 1 (t)[ P i,d (t)− X i (t)] + λ 2 r 2 (t)[ P d (t)−
    X i (t)], X i,d (t)+ V i,d (t+1), (17) (18) View Source where we have 1≤i≤s and
    1≤d≤n . Additionally, λ 1 and λ 2 are constants, w is the so-called inertia weight,
    while P d is the position of the best particle. Still referring to (17), r 1 (t)
    and r 2 (t) are random numbers uniformly distributed in [0, 1]. In the t th iteration,
    the velocity V and the position X are updated using (17) and (18). The update
    process is iteratively repeated until either an acceptable P d is achieved or
    a fixed number of iterations t max is reached. The general framework of the multi-objective
    PSO is shown in Fig. 13, which includes some key operations, such as the maintenance
    of the archive, global optimum selection, as well as the velocity and position
    update [209]. More explicitly, the particle population relies on an archive for
    storing the Pareto-optimal solutions during the iterative process and for selecting
    the global optimum from these solutions. This is the key point in which the multi-objective
    PSO is different from the traditional single-objective optimization. The employment
    of the PSO as a stochastic global optimization algorithm in the MOP of WSNs is
    relatively new and hence there is a paucity of contributions. A multi-objective
    routing model based on ACO was proposed in [24], which optimizes the network’s
    delay, energy consumption and data packet loss rate. This novel method has been
    shown to be capable of adapting to different service requirements. Rani and Devarajan
    [115] developed a MOO model based on PSO and fuzzy logic fuzzy logic (FL) for
    sensor node deployment, aiming for maximizing the network’s coverage, connectivity
    and lifetime. They have shown that the technique provides efficient and accurate
    decisions for node deployment in conjunction with low estimation errors. Artificial
    Bee Colony (ABC): The ABC algorithm was first introduced by Karaboga and Basturk
    [206], and it was derived from the behavior of honey bees in nature. Since the
    structure of the algorithm is simple, it has been widely used for solving optimization
    problems. In the ABC model, the position of a food source represents a possible
    solution to the optimization problem and the amount of nectar in a food source
    corresponds to the quality (fitness) of the associated solution. The honey bee
    swarm consists of three groups of bees, namely the employed bees, onlookers and
    scouts. Correspondingly, the ABC algorithm has three phases [151], [210]. It is
    assumed that there is only a single artificial employed bee for each food source.
    Therefore, the number of employed bees in the honey bee swarm is equal to the
    number of food sources around the hive. Employed bee phase: At the first step,
    the randomly distributed initial food sources are produced for all employed bees.
    Then, each employed bee flies to a food source in its memory and determines a
    neighbor source, whose nectar amount is then evaluated. If the nectar amount of
    the neighbor source is higher than that of the previous source, the employed bee
    memorizes the new source position and forgets the old one. Otherwise, it keeps
    the position of the one in its memory. In other words, an employed bee updates
    the source position in its memory if it discovers a better food source. Onlooker
    phase: After all employed bees have completed the above food-source search process,
    they return to the hive to share the position and nectar amount of their individual
    food source with the onlookers. Each onlooker evaluates the nectar information
    taken from all employed bees and then chooses a food source depending on the nectar
    amounts of these sources. Therefore, food sources with high nectar content attract
    a large number of onlooker. Similar to the case of the employed bee, an onlooker
    then updates the source position in its memory by checking the nectar amount of
    a neighbor source. If its nectar amount is higher than that of the previous one,
    the onlooker memorizes the new position and forgets the old one. Scout phase:
    As a result, the sources abandoned have been determined, and the employed bee
    whose food source has been abandoned becomes a scout. New sources are randomly
    produced by scouts, without considering any experience, in order to replace the
    abandoned ones. Fig. 12. A stylized optimization process of ACO. Show All Fig.
    13. The general framework of the multi-objective PSO. Show All The above foraging
    behavior can be simulated using an ABC algorithm to determine the globally optimal
    solutions of optimization problems, as shown in [210]. c) Artificial neural network
    artificial neural network (ANN): ANN is a sophisticated computational intelligence
    structure inspired by the neurobiological system. It is used for estimating or
    approximating functions that depend on a large number of inputs that are generally
    unknown [211]. The biological neuron consists of dendrites, an axon and a cell
    body called soma. Each neuron may form a connection to another neuron via the
    synapse, which is a junction of an axon and a dendrite. The so-called postsynaptic
    potentials generated within the synapses are received via dendrites and chemically
    transformed within the soma. The axon carries away the action potential sent out
    by the soma to the next synapse. The analogy of biological neurons to artificial
    neurons is explained as follows. In artificial neurons, the incoming signals are
    weighted, which is analogous to what is done in synapses. Then, the weighted signals
    are further processed. The function f(x) is basically a weighted-sum of all inputs,
    while the output corresponds to the axon. In the context of WSNs, the sensor node
    converts the physical signal to an electronic signal, which is filtered or preprocessed
    using weighting (analogous to synapse). The subsequent processing within the processor
    is represented by the particular function h(x) , which corresponds to the chemical
    processing accomplished by the soma. Eventually, a sensor node sends out the modified
    sensor reading via the radio link. This strong analogy shows that the sensor node
    itself can be viewed as a biological or artificial neuron [212]. Therefore, we
    can readily extend our horizon and regard some WSNs as large-scale ANNs. Having
    said this, we are fully aware of the inherent dangers of analogies. The shift
    procedure from a biological neuron to a sensor node is portrayed in Fig. 14. Fig.
    14. The shift procedure from a biological neuron to a sensor node. Show All The
    entire sensor network can be modelled from an ANN perspective. For each sensor
    node within the sensor network, we can also rely on ANNs to decide the output
    action. Thus, it is possible to envision a two-layer ANN architecture for WSNs.
    d) Reinforcement learning reinforcement learning (RL): RL is a powerful mathematical
    framework that enables an agent (sensor node) to learn via interacting with its
    environment and to model a problem as a Markov decision process Markov decision
    process (MDP) [213]. The most well-known RL technique is Q -learning. The visualization
    of Q -learning is shown in Fig. 15, where an agent (sensor node) regularly updates
    its achieved reward based on the action taken at a given state. The future total
    reward (i.e., the Q -value) of performing an action a t at state s t is calculated
    using Q( s t+1 , a t+1 )=Q( s t , a t )+λ⋅[r( s t , a t )−Q( s t , a t )], (19)
    View Source where r( s t , a t ) represents the immediate reward of performing
    an action a t at state s t , and 0≤λ≤1 is the learning rate that determines how
    fast learning takes place. This algorithm can be easily implemented in a distributed
    architecture like WSNs, where each node seeks to choose specific actions that
    are expected to maximize its long-term rewards. For instance, Q -learning has
    been efficiently used in WSN routing problems [214], [215]. Fig. 15. Visualization
    of the Q -learning. Show All 3) Other Advanced Optimization Techniques: There
    are several other advanced optimization methods capable of achieving appealing
    performance trade-offs, such as fuzzy logic, game theory, and so forth. Although
    these methods are less frequently used in WSNs, the trade-offs achieved by them
    can be compelling. a) Fuzzy logic (FL): FL as a mathematical model was introduced
    by Zadeh [216]. It is a useful technique that can use human language to describe
    inputs as well as outputs, and it provides a simple method of achieving a conclusion
    based on imprecise or ambiguous input information. Since then, the applications
    of FL have been expanding, especially in adaptive control systems and system identification.
    A fuzzy system comprises four basic elements, namely, fuzzifier, inference engine,
    fuzzy rule base and defuzzifier [217], as shown in Fig. 16. The fuzzifier converts
    the inputs into fuzzy variables using membership functions, each of which represents
    for each object a degree of belongingness to a specific fuzzy set. Fuzzy variables
    provide a mapping of objects to a continuous membership value, which is normalized
    in the range [0, 1]. Each fuzzy set is represented by a linguistic term, such
    as “high”, “low”, “medium”, “small” and “large”. The inference engine is often
    a collection of if-then rules, by which the fuzzy input is mapped to a linguistic
    output variable according to the fuzzy rule base. This output variable has to
    be converted into a crisp output by the defuzzification process, such as the centroid
    method, averaging method, root sum squared method, and mean of maximum. Fig. 16.
    Typical structure of the FL. Show All Low-complexity FL is suitable for WSNs,
    and various areas of WSNs have been investigated using the rules of FL. For example,
    the FL-based routing path search for a maximum network lifetime and minimum delay
    was investigated in [37], where a fuzzy membership function (edge-weight function)
    was used for formulating a multi-objective cost aggregation function, which may
    reflect the effects of all the objectives collectively as a scalar value. As a
    beneficial result, it offers a beneficial trade-off between maximizing the network
    lifetime and minimizing the source-to-sink delay. b) Game theory: Game theory
    is a powerful mathematical tool that characterizes the phenomenon of conflict
    and cooperation between rational decision-makers [218]. Since game theory introduces
    a series of successful mechanisms, such as the pricing mechanism, it has achieved
    a great success in the design of WSNs. In particular, the pricing schemes can
    guide the nodes’ behaviors towards an efficient Nash equilibrium by introducing
    a certain degree of coordination into a non-cooperative game. In [219], a Nash
    equilibrium-based game model, a cooperative coalition game model and an evolutionary
    game model were used for solving MOPs, respectively. Indeed, a number of MOO approaches
    have appeared in the literature over the past decade. For the sake of clarity,
    some representative MOO algorithms are summarized in Table IV, including the MOGA
    [191], NPGA [194], NSGA [193], NSGA-II [21], SPEA [16], the strength Pareto evolutionary
    algorithm-2 strength Pareto evolutionary algorithm-2 (SPEA2) [220], the multi-objective
    messy genetic algorithm multi-objective messy genetic algorithm (MOMGA) [221],
    the multi-objective messy genetic algorithm-II multi-objective messy genetic algorithm-II
    (MOMGA-II) [222], the Bayesian optimization algorithm Bayesian optimization algorithm
    (BOA) [223], the hierarchical Bayesian optimization algorithm hierarchical Bayesian
    optimization algorithm (HBOA) [224], the Pareto archive evolution strategy Pareto
    archive evolution strategy (PAES) [225], the Pareto envelope-based selection algorithm
    Pareto envelope-based selection algorithm (PESA) [226], the Pareto envelope-based
    selection algorithm-II Pareto envelope-based selection algorithm-II (PESA-II)
    [227], multi-objective differential evolution multi-objective differential evolution
    (MODE) [196], multi-objective evolutionary algorithm based on decomposition multi-objective
    evolutionary algorithm based on decomposition (MOEA/D) [228]. Additionally, there
    are some other methods, such as the multi-objective genetic local search multi-objective
    genetic local search (MOGLS) [229], the multi-objective Tabu search multi-objective
    tabu search (MOTS) [230], the multi-objective scatter search multi-objective scatter
    search (MOSS) [231], ACO [24], PSO [205], ABC [151], FL [37], ANN, AIS, game theory
    [219], MOICA [157], memetic algorithm memetic algorithm (MA) [232], and centralized
    immune-Voronoi deployment algorithm centralized immune-Voronoi deployment algorithm
    (CIVA) [116], just to name a few. TABLE IV Qualitative Comparison of Representative
    MOO Algorithms C. Software Tools At the time of writing, numerous software tools
    are available for solving MOPs. These software packages are briefly introduced
    in Table V, including BENSOLVE [233], the distributed evolutionary algorithms
    in Python (DEAP) [234], Decisionarium [235], D-Sight [236], the graphical user
    interface designed for multi-objective optimization (GUIMOO) [237], the intelligent
    decision support system (IDSS) [238], iSIGHT [239], jMetal [240], the multiple
    objective metaheuristics library in C++ (MOMHLib++) [241], ParadisEO-MOEO [242],
    [243], SOLVEX [244] and WWW-NIMBUS [245]. TABLE V Representative Software Tools
    SECTION V. Existing Literature on Using MOO in WSNs The performance metrics presented
    in Section II entail conflicting objectives, e.g., the coverage versus lifetime,
    and the energy consumption versus delay, etc. Therefore, it is necessary to balance
    multiple trade-offs efficiently by employing MOO techniques. In this section,
    we present an overview of the existing contributions that are focused on using
    MOO in the context of WSNs. A. Coverage-Versus-Lifetime Trade-Offs The reasons
    why the coverage and the lifetime of a WSN constitute conflicting objectives are
    given as follows. Optimizing the coverage represents the maximization of the proportion
    of the adequately monitored area relative to the total area. From another perspective,
    the coverage objective desires having a “spread-out” network layout, where sensor
    nodes are as far apart from each other as possible in order to minimize the overlap
    between their sensing disks. This results in a large number of relay transmissions
    taking place at the intermediate sensor nodes, especially for those communicating
    directly with the base station. Hence, the depletion of energy at these sensor
    nodes will happen sooner, and the network lifetime will then be shorter. On the
    other hand, in order to get a longer lifetime, all the sensor nodes tend to communicate
    using as few hops as possible (or even communicate directly) with the base station,
    so that their energy is used for their own data transmission as much as possible.
    This implies a clustered configuration around the base station, with substantial
    overlap between sensing disks and yielding a poor coverage performance. Table
    VI shows a summary of the existing major contributions on coverage-versus-lifetime
    trade-offs. More specifically, Jourdan and De Weck [112] conceived a MOGA for
    optimizing the layout of WSNs, i.e., the locations of nodes, by considering both
    the sensing and communication connectivity requirements. The algorithm aims for
    maximizing both the coverage and the lifetime of the network, hence yielding a
    PF from which the network can dynamically choose its most desired solution. Konstantinidis
    et al. [11], [247] considered optimizing both the locations and the transmit power
    levels of sensor nodes, i.e., the so-called deployment and power assignment problem
    deployment and power assignment problem (DPAP) for maximizing the network coverage
    and lifetime. Using the MOEA/D of [228], the multi-objective DPAP was decomposed
    into a set of scalar subproblems in [11] and [247]. By extending [11], the authors
    further addressed the K -connected DPAP in WSNs for maximizing the network coverage
    and lifetime under the K -connectivity constraints by using, again, the MOEA/D
    approach [246]. Furthermore, Rani and Devarajan [115] proposed a multi-objective
    PSO and FL based optimization model for sensor node deployment, which is based
    on the maximization of the network’s coverage, connectivity and lifetime. Choi
    and Das [91] proposed a randomized k -disjoint-sensor selection scheme that traded
    off the coverage against the data reporting latency, while enhancing the attainable
    energy efficiency depending on the specific type of applications. Additionally,
    a CIVA was proposed for mobile WSNs in [116] to strike an improved trade-off between
    coverage and lifetime. The CIVA comprises two phases: in the first phase, CIVA
    controls the locations and the sensing ranges of mobile nodes to maximize the
    coverage; in the second phase, CIVA adjusts the transmit power of active/sleep
    mobile nodes to minimize the number of active nodes. TABLE VI Coverage-Versus-Lifetime
    Trade-Offs B. Energy-Versus-Latency Trade-Offs Indeed, minimizing the energy consumption
    requires transmitting the sensed data over reduced distance in each hop. By contrast,
    minimizing the delay requires minimizing the number of intermediate forwarders
    between a source and the sink. This goal may be achieved by maximizing the distance
    between any pair of consecutive forwarders. Furthermore, a reduced search space
    for candidate forwarders yields an unbalanced distribution of the data forwarding
    load among nodes, thus causing a non-uniform depletion of their available energy
    [249], [250]. Therefore, it is necessary to jointly optimize the network’s energy
    consumption and delay. The energy-versus-latency trade-off related issues have
    been lavishly documented in various specific WSN scenarios [92], [135]–[147],
    [248], [249], [251]–[253]. Table VII shows a summary of the existing major contributions
    to energy-consumption-versus-latency trade-offs. More specifically, Schurgers
    et al. [248] studied the energy-latency-density trade-off of WSNs by proposing
    a topology-and-energy-management scheme, which promptly wakes up nodes from a
    deep sleep state without the need for an ultra-low-power radio. As a result, the
    WSN designer can trade the energy efficiency of this sleep state against the latency
    associated with waking up the node. In addition, the authors integrated their
    scheme with the classic geographical adaptive fidelity algorithm to exploit excess
    network density. Zorzi and Rao [135] developed the energy-versus-latency trade-offs
    based on the geographical location of the nodes, and proposed a collision avoidance
    protocol. Then, Yang and Vaidya [136] designed a node wake-up scheme, namely the
    so-called “pipelined tone wake-up”, which struck a balance between the energy
    savings and the end-to-end delay. This node wake-up scheme was based on an asynchronous
    wake-up pipeline, where the wake-up procedures overlapped with the packet transmissions.
    It used wake-up tones that allowed a high duty-cycle ratio without imposing a
    large wake-up delay at each hop. Yu et al. [137] studied the energy-versus-latency
    trade-offs using the so-called data aggregation tree4 in a real-time scenario
    with a specified latency constraint, and developed algorithms for minimizing the
    overall energy dissipation of the sensor nodes. Yu and Prasanna [138] presented
    the first work on energy-balanced task allocation in WSNs where both the time
    and the energy costs of the computation and communication activities were considered.
    They explored the energy-versus-latency trade-offs of communication activities
    over the data aggregation tree for modelling the packet flow in multiple-source
    single-sink communications. A numerical algorithm was conceived for obtaining
    the exact optimal solution, and a dynamic programming based approximation algorithm
    was also proposed. TABLE VII Energy-Versus-Latency Trade-Offs Borghini et al.
    [140] considered the problem of analyzing the trade-offs between the energy efficiency
    and the delay for large and dense WSNs. They used an analytical model, which facilitated
    the comparison of the trade-offs in scenarios employing different deployment-phase
    protocols, and presented a pair of novel algorithms (i.e., latency-oriented/energy-oriented
    data aggregation tree construction algorithms), which outperformed the existing
    ones. Ammari and Das [92] investigated the energy-versus-delay trade-offs of a
    WSN by varying the transmission range. Huynh and Hong [141] proposed a cluster-and-chain
    based energy-delay-efficient routing protocol for WSNs, where each k -hop cluster
    uses both cluster-based and chain-based5 approaches. Each communication round
    consisted of a cluster- and chain-formation phase, as well as a data transmission
    phase. Furthermore, Moscibroda et al. [142] analyzed the energy-efficiency versus
    propagation-delay trade-offs by defining a formal model, with a particular emphasis
    on the deployment phase. Specifically, the authors presented two new algorithms,
    one of which is entirely unstructured, while the other is based on clustering.
    Leow and Pishro-Nik [143] provided an asymptotic analysis of the transmission
    delay and energy dissipation of a 2D multi-state WSN, where the sensor nodes were
    equally spaced in a line or in a square grid. They also discussed the transmission
    delay-energy trade-offs for the case where the energy transmitted attenuates according
    to the inverse second-power pathloss law. As a further development, Mao et al.
    [144] presented a new MOO framework conceived for slot scheduling in many-to-one
    sensor networks. Two specific optimization objectives were considered in [144].
    The first one was to minimize the energy consumption, while the other was to shorten
    the total delay. Minhas et al. [145] proposed a routing algorithm based on FL
    for finding a path that offers a desirable balance between the maximum lifetime
    (associated with energy consumption) and the minimum source-to-sink delay. In
    the same spirit, Cheng and Leung [146] proposed a MOO framework for cluster-based
    WSNs. The framework was designed to strike attractive trade-offs between the energy
    consumption and the duration of the data collection process. The effectiveness
    of this framework was evaluated with a pair of energy-aware clustering algorithms.
    However, clustering techniques typically impose bottlenecks during the data collection
    process and cause extra delays. Li et al. [147] investigated the trade-offs of
    data aggregation in WSNs in the presence of interference, and they conceived an
    energy-efficient minimum-latency data aggregation algorithm, which achieved the
    asymptotically minimal aggregation latency as well as the desired energy-versus-latency
    trade-offs. Ammari [249], [250] proposed a data forwarding protocol for finding
    the best trade-offs among minimum energy consumption, uniform battery power depletion
    and minimum delay, which relied on slicing the communication range of the nodes
    into concentric circular bands. He also conceived a novel approach termed the
    weighted scale-uniform-unit sum, which was used by the source nodes for solving
    this MOP. Shahraki et al. [251] defined a new cost function and developed a new
    intra-cluster routing scheme for balancing the attainable cluster lifetime against
    the end-to-end delay between the cluster members and the cluster head. Yao et
    al. [139] developed a data collection protocol for balancing the trade-offs between
    energy-efficiency (associated with lifetime) and delay in heterogeneous WSNs,
    in which a centralized heuristic was devised for reducing the computational cost
    and a distributed heuristic was conceived for making the algorithm scalable. Both
    heuristics were inspired by recent techniques developed for the so-called “open
    vehicle routing problems with time deadlines”, which is mainly studied in operational
    research. Dong et al. [253] investigated the trade-offs between energy consumption
    and transport latency minimization under certain reliability constraints in WSNs.
    Based on the analysis strategy conceived for satisfying sensing application requirements,
    they proposed a data gathering protocol named broadcasting combined with multi-NACK/ACK
    to strike attractive trade-offs. Suto et al. [252] proposed an energy-efficient
    and delay-aware wireless computing system for industrial WSNs based smart factories.
    C. Lifetime-Versus-Application-Performance Trade-Offs In certain sensor network
    applications, the specific application’s performance strongly depends on the amount
    of data gathered from each sensor node in the network. However, higher data rates
    result in increased sensing and communication costs across the sensor network,
    as well as in escalating energy consumption and reduced network lifetime [255].
    Thus, there is an inherent trade-offs between the network lifetime and a specific
    application’s performance, while the latter is often correlated to the rate at
    which the application can reliably send its data across sensor networks. This
    problem has been extensively studied in recent years. Table VIII shows a summary
    of the existing major contributions to lifetime-versus-application-performance
    trade-offs. Nama et al. [128] investigated the trade-offs between network utility
    and network lifetime maximization in a WSN. They proposed a general cross-layer
    optimization-based framework that took into account the associated radio resource
    allocation issues and designed a distributed algorithm by relying on the so-called
    dual decomposition [258] of the original problem. Similarly, Zhu et al. [129]
    studied the trade-off between network lifetime (associated with energy conservation)
    and rate-allocation by using the gradient projection [259] method. However, no
    detailed information was provided about how to distributively implement this algorithm
    in the interest of solving the lifetime-versus-rate-allocation trade-off problem
    in each layer of the open systems interconnection open systems interconnection
    (OSI) model. Zhu et al. [129] also studied the trade-offs between the network’s
    lifetime and fair rate allocation in the context of multi-path routing sensor
    networks [107], where they formulated an MOP subject to a set of convex constraints.
    They invoked the NUM framework [104] and introduced an adjustable factor to guarantee
    rate-allocation fairness amongst all sensor nodes. Chen et al. [74] have addressed
    the utility-versus-lifetime trade-offs with the aid of an optimal flow control
    in a practical WSN. They formulated the problem as a non-linear MOP subjected
    to certain constraints and introduced auxiliary variables for decoupling the individual
    objectives embedded in the scalar-valued multi-objective function. The concept
    of inconsistent coordination price6 was first introduced for balancing the energy
    consumption of the sensor node and the gradient projection method [259] was adopted
    for designing a distributed algorithm that is capable of finding the optimal rate
    allocation. He et al. [130] focused on the rate allocation problem in multi-path
    routing WSNs subjected to time-varying channel conditions with two objectives
    in mind: maximizing the aggregate utility and prolonging the network’s lifetime,
    respectively. They decomposed the optimization problem with the aid of the classic
    Lagrange dual decomposition [258] and adopted the stochastic quasi-gradient algorithm
    [259] for solving the primal-dual problem in a distributed way. Luo et al. [131]
    have also carried out a systematic study of the trade-offs between the network’s
    throughput and lifetime for WSNs having stationary nodes, where the link transmissions
    were carefully coordinated to avoid interference. The authors used a realistic
    interference model based on the SINR for modeling the conflicts to avoid, when
    scheduling the wireless links’ transmissions. Their analytical and numerical results
    provided novel insights into the interplay among the throughput, lifetime and
    transmit power. Xie et al. [256] adopted a specific fairness concept to analyze
    the performance degradation experienced in multirate WSNs and then took into account
    the trade-offs between the throughput attained and energy consumption imposed.
    Eventually, a multirate-supportive MAC protocol was proposed for balancing the
    throughput versus energy consumption. Liao and Zhang [257] generalized the NUM
    model to a multiutility framework using MOO and applied this framework to trade
    off the network utility against the lifetime in WSNs. An extended Lagrange duality
    method was proposed, which is capable of converging to a selected Pareto-optimal
    solution. TABLE VIII Lifetime-Versus-Application-Performance Trade-Offs D. Trade-Offs
    Related to the Number of Nodes Intuitively, deploying more sensor nodes would
    improve the overall event-detection probability of the system, albeit at the expense
    of increasing both the energy consumption and deployment cost. This indicates
    the trade-offs among multiple conflicting objectives related to the number of
    nodes. Table IX portrays a number of existing contributions to these trade-offs
    at a glance. TABLE IX Trade-Offs Related to the Number of Sensor Nodes To elaborate,
    in [98], a pair of multi-objective metaheuristic algorithms (MOEA and NSGA-II)
    have been used for solving the WSN’s layout problem, determining both the number
    and the locations of the sensor nodes that formed a WSN, so that reliable full
    coverage of a given sensor field was achieved. Specifically, the authors focused
    their attention on the energy efficiency of the network as well as on the number
    of nodes, while the coverage obtained by the network was considered as a constraint.
    Jia et al. [101] proposed a new coverage control scheme based on an improved NSGA-II
    using an adjustable sensing radius. The objective was to find the most appropriate
    balance among the conflicting factors of the maximum coverage rate, the least
    energy consumption, as well as the minimum number of active nodes. As a further
    development, Woehrle et al. [99] have invoked the MOEA to identify attractive
    trade-offs between low deployment-cost and highly reliable wireless transmission,
    i.e., to minimize transmission failure probability at as low deployment-cost as
    possible. Cheng and Tse [158] investigated the trade-offs between the maximum
    affordable number of nodes and the minimum duration of the data collection process
    in a delay-aware data collection network by exploiting the concepts of Pareto-optimality.
    Rajagopalan [102] employed the evolutionary multi-objective crowding algorithm
    evolutionary multi-objective crowding algorithm (EMOCA) for solving the sensor
    placement problem. There were three objectives: maximizing the probability of
    global target detection, minimizing the total energy dissipated by the sensor
    network and minimizing the total number of nodes to be deployed. The MOO approach
    simultaneously optimized the three objectives and obtained multiple Pareto-optimal
    solutions. Aitsaadi et al. [103] considered a multi-objective combinatorial optimization
    problem, where a new multi-objective deployment algorithm multi-objective deployment
    algorithm (MODA) was proposed. The optimization objective was to reduce the number
    of deployed nodes, to satisfy the target quality of monitoring, to guarantee the
    network’s connectivity and finally to maximize the network’s lifetime. Berre et
    al. [100] formulated an MOP of maximizing three objectives. The first objective
    was the maximization of the coverage area in real time, the second objective was
    the maximization of the network’s lifetime depending on the coverage, and the
    final objective was to minimize the number of deployed nodes subject to the connectivity
    on the network. The solutions found by three different algorithms (i.e., NSGA-II,
    SPEA2 and ACO) were compared. Recently, a novel MOICA was proposed for sensor
    node deployment in [157], where the minimization of the number of active sensor
    nodes and the maximization of the coverage were jointly considered. The numerical
    results of [157] demonstrated that the MOICA was capable of providing more-accurate
    solutions at a lower computational complexity than the existing methods. E. Reliability-Related
    Trade-Offs The main objective behind the deployment of WSNs is to capture and
    transmit pictures, videos and other important data to the sink reliably. These
    applications require us to maintain a strict QoS guarantee [260], [261]. However,
    maintaining the QoS during routing hinges on numerous factors, such as the energy
    status of the nodes in the network, the delay, the bandwidth and the reliability
    requirements. Hence, sophisticated routing protocols have to take into considerations
    multiple potentially conflicting factors, which makes the problem even more challenging.
    Table X shows a summary of the existing contributions to reliability-related trade-offs.
    To expound a little further, Miller et al. [152] studied the trade-offs amongst
    the energy, latency and reliability. They conceived a meritorious probability-based
    broadcast forwarding scheme for minimizing both the energy usage and the latency,
    whilst improving the reliability. EkbataniFard et al. [262] have developed a QoS-based
    energy-aware routing protocol for a two-tier WSN from the perspective of MOO.
    The proposed protocol utilizing the NSGA-II efficiently optimized the QoS parameters
    formulated in terms of the reliability and end-to-end delay, whilst reducing the
    average power consumption of the nodes, which substantially extended the lifetime
    of the network. TABLE X Reliability-Related Trade-Offs A high data rate can be
    maintained by a link at the expense of a reduced delivery reliability, and/or
    increased energy consumption, which in turn reduces the network lifetime. Again,
    there is an inherent trade-off among the data rate, reliability and network lifetime.
    Although numerous treatises have extensively studied the data rate, reliability
    and network lifetime in isolation, only a few of them have considered the trade-offs
    among them. Xu et al. [263] jointly considered the rate, reliability and network
    lifetime in a rigorous framework. They addressed the optimal rate-reliability-lifetime
    trade-offs under a specific link capacity constraint, reliability constraint and
    energy constraint. However, the optimization formulation was neither separable
    nor convex. Hence, a series of transformations have been invoked and then a separable
    and convex problem was derived. Finally, an efficient distributed subgradient
    dual decomposition subgradient dual decomposition (SDD) algorithm was developed
    for striking an appealing trade-off. Lu et al. [8] formulated WSN routing as a
    fuzzy random multi-objective optimization fuzzy random multi-objective optimization
    (FRMOO) problem, which simultaneously considered the multiple objectives of delay,
    reliability, energy, delay jitter, the interference aspects and the energy balance
    of a path. They introduced a fuzzy random variable for characterizing the link
    delay, link reliability and the nodes’ residual energy, with the objective of
    accurately reflecting the random characteristics in WSN routing. Eventually, a
    hybrid routing algorithm based on FRMOO was designed. Razzaque et al. [264] proposed
    a QoS-aware routing protocol for body sensor networks, in which a lexicographic
    optimization approach was used for trading off the QoS requirements and energy
    costs. Lanza-Gutierrez and Gomez-Pulido [151] considered the deployment of energy
    harvesting relay nodes for resolving the conflict among average energy cost, average
    sensing area and network reliability. Two multi-objective metaheuristics, i.e.,
    the ABC algorithm and the firefly algorithm firefly algorithm (FA), were applied
    for solving the problem, respectively. Ansari et al. [265] considered the energy
    consumption, reliability, coverage intensity and end-to-end delay trade-offs based
    on the location of the nodes, and a new multi-mode switching protocol was adopted.
    Liu et al. [266] proposed an energy-efficient cooperative spectrum sensing scheme
    for a cognitive WSN by taking into account the energy consumption and the spectrum
    sensing performance, both of which were jointly optimized using fast MODE. Xiao
    et al. [267] proposed a time-sensitive utility model for low-duty-cycle WSNs,
    where they simultaneously took into account the transmission cost, utility, reliability
    and latency. Moreover, they designed two optimal time-sensitive utility-based
    routing algorithms to strike the most appropriate balance among these four metrics.
    F. Trade-Offs Related to Other Metrics As mentioned in Section I, in practice
    it is unfeasible to jointly satisfy the optimum of several potentially conflicting
    objectives. To circumvent this dilemma, the concept of Pareto-optimal has been
    widely invoked, resulting in a PF generated by all Pareto-optimal solutions of
    a MOP, where it is impossible to improve any of the objectives without degrading
    one or several of the others. Therefore, according to the needs of decision makers
    and the actual situation of the WSN considered, efficient routing algorithms are
    required for finding a satisfactory path in WSNs. Table XI summarizes other metrics
    and their trade-offs. As seen in Table XI, Lozano-Garzon and Donoso [268] proposed
    a distributed N -to-1 multi-path routing scheme for a WSN by taking into account
    the number of hops, the energy consumption and the free space loss,7 and these
    three objectives were optimized by the SPEA2 [220] with the aim of using the energy
    efficiently in the network, whilst reducing the packet-loss rate. Bandyopadhyay
    et al. [269] proposed a transmission scheduling scheme using a collision-free
    protocol for gathering sensor data. Moreover, they studied diverse trade-offs
    amongst the energy usage, the sensor density, and the temporal/spatial sampling
    rates. As a further advance, Rajagopalan et al. [84] developed a MOO framework
    for mobile agent routing in WSNs. The multi-objective evolutionary optimization
    algorithms EMOCA and NSGA-II were employed to find the mobile agents’ routes,
    aiming for maximizing the total detected signal energy, while minimizing the energy
    consumption by reducing the hop-length. Wei and Zhi [24] established a multi-objective
    routing model that relies on the delay, energy consumption, data packet-loss rate
    as its optimization objectives. By adjusting the specific weight of each function,
    the algorithm adapts well to various services having different energy cost, delay
    and packet-loss rate requirements. This protocol was implemented using an advanced
    ACO algorithm that is based on a cloud model.8 TABLE XI Trade-Offs Related to
    Other Metrics For a typical WSN, the accuracy of an application and the longevity
    of the network are inversely proportional to each other, which is partially due
    to the finite energy reserves of the nodes and owing to the desire for applications
    to have large volumes of fresh data to process. Adlakha et al. [166] created a
    four-dimensional design space based on four independent QoS parameters, namely
    the accuracy, delay, energy consumption and the node density. In order to achieve
    an improved accuracy or lifetime, various parameters of the individual techniques
    can be adjusted. The insights and relationships identified in [166] were not unique
    to mobility tracking applications, many potential applications of WSNs requiring
    a balance amongst the factors of energy consumption, node density, latency and
    accuracy may also benefit from exploiting the results and trends identified in
    [166]. For instance, the energy-density-latency-accuracy energy-density-latency-accuracy
    (EDLA) trade-offs have been studied in the context of WSNs in [167]. By contrast,
    Armenia et al. [110] introduced a Markov-based modeling of the random routing
    behavior for evaluating the trade-offs between location privacy and energy efficiency
    in a WSN. Notably, their approach used the information theoretic concept of privacy
    loss. Both the network security and lifetime have been studied by Liu et al. [111],
    where they proposed a three-phase routing scheme, which is termed security and
    energy-efficient disjoint routing. Based on the secret-sharing algorithm, this
    routing scheme dispersively and randomly delivered its source-information to the
    sink node, ensuring that the network security was maximized without degrading
    the lifetime of WSNs. As a further development, Tang et al. [270] proposed a geography-based
    cost-aware secure routing protocol to address the conflicting lifetime-versus-security
    trade-off issue in multi-hop WSNs. The design goal was achieved by controlling
    energy deployment balance and invoking a random walking routing strategy. Attea
    et al. [271] studied the MOP of how to optimally divide sensor nodes into multiple
    disjoint subsets so that two conflicting objectives, namely the network lifetime
    and coverage probability, can be jointly maximized. Each subset of sensors is
    required to completely cover a set of targets having known locations. Hence, they
    formulated a multi-objective disjoint set cover disjoint set cover (DSC) problem,
    which was tackled by MOEA/D and NSGA-II. Sengupta et al. [272] employed a novel
    heuristic algorithm, termed MOEA/D with fuzzy dominance multi-objective evolutionary
    algorithm based on decomposition with fuzzy dominance (MOEA/DFD), for finding
    the best trade-offs among coverage, energy consumption, lifetime and the number
    of nodes, while maintaining the connectivity between each sensor node and the
    sink node. Wang et al. [273] quantified the probabilistic performance trade-offs
    among the network lifetime, end-to-end communication delay and network throughput
    in real-time WSNs. A heuristic-based multiple-local-search technique was employed
    for finding the solutions. Inspired by the concept of potential field from the
    discipline of physics, Zhang et al. [274] designed a novel potential-based routing
    algorithm, known as the integrity and delay differentiated routing for WSNs. The
    objective was to improve the data fidelity for high-integrity applications and
    to reduce the end-to-end delay simultaneously. SECTION VI. Open Problems and Discussions
    Despite the increasing attention paid to the MOO of WSNs, this research area still
    has numerous open facets for future work, as discussed below. Most of the studies
    investigated the MOO of single-hop transmission, whereas only a limited amount
    of contributions, such as [275], paid attention to multi-hop WSNs. Clearly, multi-hop
    transmission in energy-limited WSNs is essential for conserving transmission energy
    and thus for prolonging the network’s lifetime. Therefore, it is promising to
    intensify the research of MOO in the context of multi-hop WSNs. Sensor nodes may
    move from one place to another as required by the application or may be displaced
    by objects (human, animals, etc ). Hence, the mobility of the nodes has a substantial
    impact on the network’s connectivity. For example, if a data packet is long and
    the node changes its current location during the packet’s forwarding, part of
    the data may be lost at the receiving node. Similarly, when a node selects a routing
    path but the nodes in the routing path change their locations, the connectivity
    between the source nodes and destination nodes will be affected. Therefore, the
    deployment of nodes in highly dynamic scenarios requires a deployment approach
    that equips the network with a self-organizing capability. Artificial potential
    field artificial potential field (APF) techniques9 have been applied to the problems
    of formation control and obstacle avoidance in multi-robot systems [277]. Since
    these problems are of similar nature to the deployment problem of sensor nodes,
    the APF techniques may also be used to devise a deployment approach for WSNs.
    Since WSNs are typically deployed in physically open and possibly hostile environments,
    they will be confronted with security attacks ranging from passive attacks, active
    attacks, and denial-of-service denial-of-service (DoS) attacks. Therefore, their
    security is one of the imperative aspects in future research. Since the security
    may gravely affect the network performance, especially during the information
    exchange phase, designing a secure routing protocol for WSNs is a must. Most of
    the known routing algorithms assume that the nodes are static and rely on a single
    path. Once the routing is attacked, the network’s performance will be significantly
    degraded. Therefore, it is necessary to study multi-route protocols conceived
    for mobile-node based routing capable of satisfying the security and QoS requirements
    in any real-time application. The trade-offs between the security and QoS requirements
    will bring about further new challenges. Existing contributions often assume that
    the sensor networks are spread across a two-dimensional plane, but in practice
    they are indeed of three-dimensional three-dimensional (3D) nature. The extension
    of a 2D network into 3D is both interesting and challenging. In two-tier WSNs,
    multiple objectives have to be satisfied by the routing algorithms. Lu et al.
    [8] proposed a routing solution based on the fuzzy random expected value model
    and the standard deviation model of [278]10 to meet the requirements of different
    applications of the clustered network advocated. Since the fuzzy random expected
    value model may become inaccurate in uncertain environments, improved routing
    model based on MOO is necessitated. Moreover, due to the limitation of GAs, the
    distributed solving methods based on local information and on the decomposition
    theory are expected to be further investigated. Serious natural disasters, such
    as sandstorms, tsunamis, landslides etc, have routinely damaged the natural environment
    and inflicted the loss of human lives. Although WSNs provide a promising solution
    to realize real-time environment monitoring, numerous issues have to be resolved
    for their practical implementation. One of the major issues is how to effectively
    deploy WSNs to guarantee large-area sensing coverage and reliable communication
    connectivity in hostile propagation scenarios. In recent years, considering the
    similarity between multi-objective design and game theory, the latter has also
    been employed to solve multi-objective design problems. By analogy, m -objective
    designs can be regarded as m -player games. Chi and Liu [279] introduced game
    theory and the concept of co-evolution into GAs for the sake of solving the MOPs,
    which has been shown to perform well. In [219] a Nash-equilibrium based game model,
    a cooperative coalition game model and an evolutionary game model were used for
    solving MOP. Since EAs are capable of finding the global solution of MOPs with
    good robustness, while Nash games can be used for conflict resolution and Stackelberg
    games for hierarchical design, it is promising to solve MOPs of WSNs by combining
    a Nash game with EAs or combining a Stackelberg game with EAs. As an adaptive
    parameter control method based on sensitivity results, the Pascoletti-Serafini
    scalarization method [280] is a more general formulation relying on an unrestricted
    search direction and an auxiliary vector variable. It has been used for both linear
    and nonlinear MOPs [280]. Naturally, this method can also be applied to solve
    MOPs in WSNs, yielding approximate solutions of the problems considered. Indeed,
    for the MOP of multicell networks [281], the relationship between the parameters
    and the optimal solutions was elucidated by the Pascoletti-Serafini scalarization.
    The mutually interfering networks are ubiquitous, hence finding innovative cross-layer
    and cross-network solutions becomes essential. To this end, we believe that many
    hybrid computational intelligence algorithms which combine the benefits of two
    or more algorithms should be given careful attention, such as swarm-FL control,
    neuro-FL control, GA-PSO, GA-ANN, and neuro-immune systems, etc. Cognitive radio
    cognitive radio (CR) is an emerging wireless communication paradigm, in which
    the transceivers are capable of intelligently detecting in their vicinity which
    specific communication channels are in use and which are not. Then, they promptly
    switch to vacant channels while avoiding occupied ones. This is essentially a
    form of dynamic spectrum access dynamic spectrum access (DSA) [282], which may
    substantially improve the exploitation of the available wireless spectrum. Typically,
    a transceiver in CR may be capable of determining its geographic location, identifying
    and authorizing its users, sensing neighboring wireless devices, and automatically
    adjusting its transmission and reception parameters to allow more concurrent wireless
    communications in a given spectrum band at a specific location. Depending on which
    parts of spectrum are available for the operation of CR, we have CR operating
    either in licensed bands, or in unlicensed bands. On the other hand, WSNs often
    use the unlicensed ISM band for communications, but with the rapidly increasing
    demand of the Internet of Things Internet of Things (IoT) based applications (e.g.,
    healthcare and tele-medicine), the currently available ISM band may become insufficient,
    which can result in various technical problems, such as unreliable transmission
    of useful data. Therefore, in order to alleviate this “spectrum crunch”, an emerging
    trend in WSNs is to equip the wireless sensor nodes with the CR based DSA capability,
    thus giving birth to CR aided WSNs (CR-WSN) [283]–[285]. Due to its potential
    advantages, CR-WSN might be a promising solution for some specific WSN applications,
    such as indoor sensing, multiclass heterogeneous sensing, and real-time surveillance
    [283]. Additionally, WBAN, which is a promising technology for ubiquitous health
    monitoring systems, is also an application area of CR-WSN. In general, CR-WSNs
    constitute an unexplored field with only a handful of studies. More specifically,
    Oto and Akan [286] determined the optimal packet size that maximizes the energy-efficiency
    of a practical realization of a CR-WSN. Ozger et al. [287] proposed a spectrum-aware
    clustering protocol to address the event-to-sink communication coordination issue
    in mobile CR-WSNs. A cross-layer framework that employed CR to circumvent the
    hostile propagation conditions for the smart grid was discussed in [288], and
    the MAC-layer delay of a cognitive sensor node was modeled in [289]. The realization
    of CR-WSN primarily requires an efficient spectrum management framework for regulating
    the DSA of densely deployed resource-constrained sensor nodes. Therefore, MOO
    techniques invoked for designing CR-WSNs should be sufficiently intelligent to
    differentiate between the traffic types and to satisfy their QoS requirements.
    The current research efforts on MOPs for large-scale CR-WSNs have to be strengthened.
    WSNs play a key role in creating a highly reliable and self-healing smart electric
    power grid that rapidly responds to online events with appropriate actions. However,
    due to the broadcast nature of radio propagation and varying spectral characteristics,
    establishing a secure and robust low-power smart grid over the WSN must be addressed.
    Other technical challenges of WSNs in the smart grid include harsh environmental
    conditions, tight reliability and latency requirements, as well as low packet
    errors and variable link capacity. Until now, there have been only a few approaches
    available, and more studies are needed in these areas. SECTION VII. Conclusion
    In this paper, we have provided a tutorial and survey of the research of MOO in
    the context of WSNs. We commence with the rudimentary concepts of WSNs and the
    optimization objectives in WSNs, then focus on illuminating the family of algorithms
    for solving MOPs. Since having multiple objectives in a problem gives rise to
    a set of Pareto-optimal solutions instead of a single globally optimal solution,
    none of these Pareto-optimal solutions can be considered to be better than the
    others on the Pareto front without any further information. Thus the MOO algorithms
    may be invoked for finding as many Pareto-optimal solutions as possible. Additionally,
    diverse design trade-offs relying both on classical optimization methods and on
    the recent advances of MOO have been reviewed in the context of WSNs. Future research
    directions on MOO conceived for WSNs include multi-hop transmissions, the deployment
    of nodes in highly dynamic scenarios, secure multi-path routing protocols and
    solving optimization problems in 3D networks, CR-WSNs and smart grid. Authors
    Figures References Citations Keywords Metrics Footnotes More Like This Energy
    optimization in wireless sensor networks based on genetic algorithms 2015 SAI
    Intelligent Systems Conference (IntelliSys) Published: 2015 Optimization Method
    for Location Parameters in Wireless Sensor Networks under Genetic Algorithm 2023
    3rd International Conference on Mobile Networks and Wireless Communications (ICMNWC)
    Published: 2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Communications surveys and tutorials
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Survey of Multi-Objective Optimization in Wireless Sensor Networks: Metrics,
    Algorithms, and Open Problems'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s12243-016-0533-8
  analysis: '>'
  authors:
  - Fadi Al‐Turjman
  citation_count: 86
  full_citation: '>'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Annals of Telecommunications Article
    Information-centric sensor networks for cognitive IoT: an overview Published:
    04 July 2016 Volume 72, pages 3–18, (2017) Cite this article Download PDF Access
    provided by University of Nebraska-Lincoln Annals of Telecommunications Aims and
    scope Submit manuscript Fadi M. Al-Turjman  1905 Accesses 79 Citations Explore
    all metrics Abstract Information-centric sensor networks (ICSNs) are a paradigm
    of wireless sensor networks that focus on delivering information from the network
    based on user requirements, rather than serving as a point-to-point data communication
    network. Introducing learning in such networks can help to dynamically identify
    good data delivery paths by correlating past actions and results, make intelligent
    adaptations to improve the network lifetime, and also improve the quality of information
    delivered by the network to the user. However, there are several factors and limitations
    that must be considered while choosing a learning strategy. In this paper, we
    identify some of these factors and explore various learning techniques that have
    been applied to sensor networks and other applications with similar requirements
    in the past. We provide our recommendation on the learning strategy based on how
    well it complements the needs of ICSNs, while keeping in mind the cost, computation,
    and operational overhead limitations. Similar content being viewed by others Sensor
    Searching Techniques in Internet of Things: A Survey, Taxonomy, and Challenges
    Chapter © 2021 A Self-learning Clustering Protocol in Wireless Sensor Networks
    for IoT Applications Chapter © 2022 ML Algorithms for Smart Sensor Networks Chapter
    © 2022 1 Introduction Wireless sensor networks (WSNs) have evolved from simple
    sensing and tracking applications to being an integral and essential part of the
    Internet of things paradigm. This means that sensor networks have to deal with
    large amounts of data, support requests from multiple users, and support information
    extraction from the network rather than serving as point-to-point communication
    networks that transmit data from a source to sink. To enable WSNs to easily integrate
    with, and adapt to the IoT environment [1], we propose the use of learning, as
    an element of cognition in the network. Cognition refers to the ability to be
    aware of the environment, be able to learn from the past actions, and use it to
    make future decisions that benefit the network [2]. Learning is one of the elements
    of cognition that can achieve different goals in different systems. In robotic
    chess, learning can be used to plan moves based on opponents’ actions; in aircraft
    autopilot systems, learning can be used to control the plane’s navigation; and
    in cognitive networks, learning can be used to improve decision making that improves
    network management and its overall performance. Whatever be the system’s goal,
    the performance of the learning technique depends on three main tasks: (1) observations
    made from current activities in the environment, (2) feedback from past actions,
    and (3) how this information is used to achieve the system’s goals. An information-centric
    sensor network (ICSN) has specialized nodes called cognitive nodes that are capable
    of performing all these tasks by implementing major cognition elements. These
    major elements are the learning, reasoning, and knowledge representation. Figure
    1 represents these three major elements for cognitive nodes in ICSN, and associate
    them with their respective functions. These elements of cognition, when incorporated
    in the network nodes of a WSN, help in providing better understanding and catering
    for the end user requirements. Our expectation from the cognitive elements would
    be to cater to the following objectives. On the short term, to observe current
    network behavior and respond adaptively to changing network dynamics. And on the
    long term, to learn from the previous behavior and plan better for the future
    so as to make predictions and decisions that positively impact the network survivability
    and application QoI during its lifetime. Using these elements, a conceptual architecture
    of the cognitive node can be illustrated as detailed in Fig. 2. Fig. 1 Cognitive
    node and its elements Full size image Fig. 2 Cognitive node conceptual architecture
    Full size image This cognitive sensor network framework is mainly targeted towards
    application such as smart cities and smart outdoor monitoring in IoT era. In these
    applications, the goal for the learning algorithm is to dynamically adapt routing
    decisions to improve the quality of information (QoI) delivered to the user [3]
    and improves the network lifetime. This can be achieved by using a learning algorithm
    that can correlate the impact of past decisions on the current network behavior,
    based on end user’s requirements. But these are challenging applications for the
    learning algorithm due to the large scale of the network, changing network topology
    due to node deaths and varying channel conditions, and heterogeneous traffic flows
    generated as a result of changing user requests in the IoT application domain.
    For the learning algorithm to be successful in such a dynamic environment, it
    must occur incrementally and span over multiple episodes [4]. Only then will it
    be able to adapt to the irreversible changes in the environment and contribute
    towards delivering QoI-aware data to the end user over the network’s lifetime.
    In this paper, we explore the different classes of learning techniques and identify
    what works best for large-scale information-centric sensor networks in IoT applications.
    The remainder of the paper has been organized as follows: In section II, we look
    at some WSN design issues in IoT applications, and summarize the design changes
    required for integration of WSNs with IoT. In section III, we explore artificial
    intelligence and learning used by WSNs, to better analyze their suitability for
    ICSN applications. Subsequently, we delve into the details of ICSNs as a hybrid
    solution platform for integration of WSNs in IoT using a learning paradigm in
    section IV. We also identify a suitable learning strategy in this section, before
    discussing some open issues and concluding the paper in section V. 2 WSN design
    issues in IoT applications In this section, we take a brief look at the various
    design issues that need to be addressed to seamlessly integrate WSNs in IoT applications.
    We categorize the design issues into two parts: (i) expectations of the users
    from the network, which includes feature requirements of the sensor network’s
    interface with the access network (future internet) and (ii) adaptations and changes
    required within the sensor network to cater to user requests while managing network
    resources. Each of these design issues will be explored in the sub-sequent sections,
    and we will see why these issues need to be handled differently from existing
    WSN applications. 2.1 User expectations from the network Traditional WSNs were
    designed for specific applications such as target tracking, temperature monitoring
    in a building, and movement of goods in a supply chain, to name a few. Users accessed
    the network only when they needed a particular type of sensed value, such as temperature,
    pressure, or humidity for instance. However, in the IoT era, sensor nodes have
    become heterogeneous and are capable of supporting multiple types of sensors.
    This way the sensor network can be expected to support multiple applications and
    provide users with a variety of data as supported by the type of sensor nodes
    used. Thus, WSN applications should evolve from supporting application-specific
    deployments to providing an application platform that users can access to gather
    a variety of data [5]. 2.1.1 Multi-user application platform support The basic
    idea behind developing an application platform is to provide a flexible, generic
    infrastructure that can lead to easy adoption of WSNs into a variety of IoT applications.
    For example, a sensor network deployed in a city should be capable of providing
    data for the following applications: (1) air pollution monitoring; (2) daily weather
    monitoring (temperature, humidity, UV index); and (3) park and garden irrigation
    management. Such an application platform and its associated services would also
    support the conceptual ubiquitous sensor network (USN) used in large-scale sensor
    network deployments [6, 7]. This would invite more number of users to simultaneously
    access the network, which makes the WSN design even more complex. The underlying
    sensor network will have to support heterogeneous traffic flows generated as a
    result of simultaneous access from multiple users, which is a very challenging
    task for the resource-constrained sensor network. 2.1.2 User requirement—aware
    request classification In a large-scale deployment of sensor networks that allows
    multiple users to access it, different users may have different requirements on
    the desired quality of experience (QoE) [8], and the network may have its own
    limitations on the quality of service (QoS) it is able to support [9–11] . While
    the user requirements may evolve over time, the sensor network gradually decays
    in terms of its energy capacity, and it also involves dynamic changes in the link
    conditions and node availability. In addition, the user’s expectations from the
    attributes associated with delivered data also vary based on the application and
    type of request. Hence, there is a need to monitor data attributes from the user
    requirements perspective directly, a skip level from the application interface,
    as shown in Fig. 3. Latency, reliability, accuracy, relevance, and robustness
    are some of the attributes that can collectively provide an estimate of the quality
    perceived by the user based on the information received at the user-end from the
    network. This is referred to as the quality of information (QoI) metric, and it
    may provide information about the success of the network in satisfying the evolving
    user requirements, while simultaneously saving valuable network resources such
    as bandwidth and energy [12]. Thus, it becomes necessary for the underlying sensor
    network to be aware of user requirements and be able to classify user requests
    to deliver data in compliance with the desired QoI. While there has been research
    in the area of QoI assurance based on changes in the phenomena observed in the
    network [13], there has not been much work on the user interface side for request
    classification based on changing user requirements. Fig. 3 QoI-aware data delivery
    in WSNs for IoT applications Full size image 2.1.3 Internet access interface between
    user and WSN ZigBee-based address-centric sensor networks facilitate the integration
    of WSNs with the Internet, as both the networks are address-centric and point-to-point.
    However, recent advances in the future internet research suggest that an information-centric
    approach to data delivery is favored over the address-centric approach. This is
    because researchers believe that it will become increasingly difficult to handle
    the growing IP address space that serves billions of users in the near future.
    Information-centric network (ICN) is one of the promising architectures for the
    future internet paradigm [14]. It proposes an information-centric approach to
    data access where users look for named data objects instead of looking up IP addresses
    to find data they are interested in. The architecture is set up to support data
    storage at strategic locations in the network, typically the edge of the network,
    so that requests do not have to be propagated deep into the network to access
    the required information. If the user had to request for data through such an
    information-centric interface, then the network interface would also have to be
    modified to ease the flow of information. Hence, for IoT applications to be able
    to adapt to changes of the future internet paradigm, changes would be required
    in the way requests are made at the user access interface and also at the sensor
    network interface. 2.2 Adaptations at the network level In this section, we move
    from the issues at the user interface, to the design issues at the network level
    to identify the adaptations required to enable WSNs for IoT applications. 2.2.1
    Energy considerations and resource management Large-scale platform-based sensor
    network deployments that are accessed by multiple users tend to benefit more from
    a data-centric approach than an address-centric one. For instance, a user may
    request for information such as: temperature readings from all regions in the
    network where value is greater than 25 °C. In such a scenario, there is no specific
    address that the user is requesting data from. Instead, the query is information-centric
    and requires information from the entire network. This could be very energy intensive
    if appropriate query dissemination and data delivery techniques are not identified.
    In their work on energy conservation schemes in WSNs, Anastasi et al. have extensively
    explored data-driven techniques, broadly classified into data reduction and energy
    efficient data acquisition approaches [15]. Several researchers have also established
    the energy conserving nature of data-centric sensor networks [16–18]. However,
    previous research has only considered networks of a few hundreds of sensor nodes.
    In IoT-based applications, there may be thousands of sensor nodes to gather information
    from, which adds to the complexity of the energy conservation problem. Although
    a data-centric approach can provide valuable energy savings in the network, further
    research is required to device techniques to manage information flow in such a
    large-scale, energy-constrained network. 2.2.2 Query dissemination and data delivery
    WSNs can be broadly classified into address-centric and data-centric networks.
    This classification is based on how query dissemination, data gathering, and routing
    happen in the network. Address-centric sensor networks are built on top of the
    more recent ZigBee protocol [19] that provides a service-oriented framework for
    implementing WSN applications. Data is routed using the tree-based hierarchical
    topology consisting of router and coordinator nodes, while sensor nodes are the
    sources of information. Routers off-load the sensor nodes by carrying forward
    their data to the sink, thus bringing considerable energy savings to the battery-operated
    sensor nodes. However, WSNs are essentially information extraction networks. They
    were originally developed as data-centric sensor networks (DCSNs) that did not
    make use of node addresses. Instead, their focus was on the attributes of the
    requested information, which was gathered from wherever it was available in the
    network, and delivered to the sink. Handling query dissemination and delivering
    the gathered data is a very challenging task in large-scale sensor networks. This
    is because of (1) the ad hoc nature of the wireless channel, (2) dynamic topology
    changes in the network due to node deaths and their changing associations, and
    (3) due to the nature of node distribution in the network. Hence, choosing the
    right approach for handling data flows in a very critical design decision, this
    must be made keeping in mind the interface access network (the future internet
    paradigm). In addition, IoT applications have multiple users requesting for different
    types of data with different service requirements. For example, while request
    for periodic data may relax the service requirements on latency, on-demand data
    needs to be provided quickly, and should be relevant. On the other hand, emergency
    reporting must be done accurately, reliably, and quickly, with minimal delay.
    Thus, the way the network is setup itself will have to be modified, to minimize
    energy consumption during each of the phases of query dissemination, data gathering,
    and data delivery. Sensor node scheduling also becomes an important issue to be
    addressed, so that data is available when user requests for it. Moreover, planned
    scheduling of sensor node wake-up and sleep cycles will add to the energy savings
    and prolong the network lifetime. In addition, planning the deployment of router
    nodes to increase the multi-hop communication range is another aspect that needs
    to be considered during network design and deployment. Since the complexity of
    the tasks to be handled by WSNs in the IoT paradigm is quite high and multi-dimensional,
    it seems appropriate that the design changes consider the addition of advanced
    nodes [20] that can maintain connectivity in the network and carry data over long
    distances in these applications. 2.3 Summary of WSN design change requirements
    Thus far in this section, we have seen the various design change requirements
    in existing WSNs to make them adapt to IoT applications. We summarize these requirements
    as follows: Multi-user application platform support Classification of user requests
    to deliver QoI-aware data Modification of the communication to make it compatible
    with the future internet paradigm—ICN Incorporate specialized nodes that can observe/learn
    from the interactions/feedback in the network and manage sensor node scheduling
    to prolong the network lifetime Plan the deployment of router and specialized
    nodes to maintain network connectivity and enable multi-hop data transmission
    over the large-scale network Consider energy efficient query dissemination and
    data delivery, and dynamic traffic management due to changing network conditions
    and user requests Figure 4 summarizes all the design change requirements in the
    form of a conceptual design for the future IoT paradigm that supports multiple
    users and integrates ICN-based internet access, and the large-scale data-centric
    sensor network. We call this an information-centric sensor network (ICSN) [21–24].
    Comparing DCSN protocols with the information-centric networking (ICN) approaches
    [25, 26] for future internet, we can see that DCSNs already implement two major
    features of the ICNs. Firstly, the naming schemes, or named data objects for referencing
    requested data instead of using node addresses, and secondly, storage of collected
    data in nodes for ease of access. We take these two features as a strong indication
    of the need to shift to data-centric sensing schemes for WSNs, but with ZigBee
    and the information-centric approach to adapt to the advanced applications in
    the IoT era [27]. Although the data-centric approach will help to better manage
    the network at each of the interfaces: user, access network, and sensor network,
    the authors do think that a simple integration of different technologies will
    not be adequate to manage the complexity of the tasks at the sensor network level.
    To improve adaptations beyond the limitations of traditional cross layer design,
    we look to the tools of artificial intelligence to support the ICSN paradigm.
    Fig. 4 Conceptual design of an ICSN for IoT applications Full size image 3 Artificial
    intelligence and learning in WSN Various artificial intelligence (AI) techniques
    have been applied to WSNs to improve their performance and achieve specific goals.
    We look at AI techniques as a means of introducing learning in the WSN. Learning
    is an important element in the observe, analyze, decide, and act (OADA) cognition
    loop [28, 29], used to implement the idea of cognitive wireless networks [30,
    31]. In this section, we broadly classify AI techniques as computational intelligence
    (CI) techniques, reinforcement learning (RL) techniques, cognitive sensor networks
    and multi-agent systems (MAS), and context aware computing as shown in Fig. 5.
    Fig. 5 Learning techniques used in WSNs Full size image 3.1 Computational intelligence
    CI techniques are a set of nature-inspired computation methodologies that help
    in solving complex problems that are usually difficult to fully formulate using
    simple mathematical models. Examples of CI techniques include genetic algorithms,
    neural networks, fuzzy logic, simulated annealing, artificial immune systems,
    swarm intelligence, and evolutionary computation. In a learning environment, CI
    techniques are useful when the learning agent cannot accurately sense the state
    of its environment. In WSNs, CI techniques have been applied to problems such
    as node deployment planning, task scheduling, data aggregation, energy-aware routing,
    and QoS management. Kulkarni et al. have provided an extensive survey of CI techniques
    applied to WSNs [32]. They elaborate on various CI techniques and associate each
    with typical problem domains they can solve in WSNs. From their observations,
    swarm intelligence applied to solving the routing and clustering problem has drawn
    the most research attention in recent times. However, a major drawback of this
    methodology is that it can be computationally intense and may require some form
    of model-based offline learning to deliver to the requirements of the application
    scenario. Techniques such as ant colony optimization can cause an undesirable
    increase in communication overhead in WSNs [33] too. Apart from these drawbacks,
    none of the CI algorithms have been applied to solving problems of data representation,
    aggregation, and delivery in a distributed, decentralized setup, under dynamic
    communication constraints, as is the case in IoT applications. Next, we evaluate
    reinforcement learning strategies used in WSNs. We separate them from other CI
    techniques, because they are the most widely applied learning techniques in WSNs
    and do not categorically fall under nature-inspired learning. 3.2 Machine learning
    Machine learning can be classified into supervised, unsupervised, and reinforcement
    learning. Supervised learning would be more compute intensive and requires a training
    sequence. Additionally, accuracy of the learning algorithm would then be defined
    by this training sequence. In the unsupervised learning approach, the learning
    is from the environment being observed and no training sequence is required. Reinforcement
    learning (RL) is a reward-based technique that emphasizes on learning while interacting
    with the environment, without relying on explicit supervision or complete model
    of the environment. It is a method of automating goal-directed learning and decision
    making. Since it is advantageous to be aware of, and learn the changes in the
    environment in WSN-based applications, RL would be an appropriate choice as the
    learning strategy. In WSNs, RL has been successfully applied in networking tasks
    such as adaptive routing, identifying low cost and energy-balanced data delivery
    paths [34, 35], and in information processing tasks involving data aggregation
    and inference [36]. In the sub-sequent sections, we explore the different types
    of RL methods as reward-based strategy [37]. 3.2.1 Model-based reinforcement learning
    A learning agent (LA) in model-based RL collects experiences and builds a model
    from that. The actions can be chosen randomly or heuristically and observe the
    impact on a model and the reward (where s is the current state, a is the actions,
    and s’ is the next state). This means, by taking action a, how often would the
    LA end up in the state s’ if it started from state s and estimating a probability
    by counting the number of times triple occurs over the sample space. With this
    information, the LA builds an estimate of the model and the reward by estimating
    probabilities based on the number of trials (or episodes). Once an estimate of
    the model and rewards are ready, the LA can plan its actions. A good plan can
    be found from policy iterations or value iterations. But for model-based RL, the
    hardest part is knowing the right policy to start out with, so we can build a
    good model. 3.2.2 Model-free reinforcement learning In model-free reinforcement
    learning, the agent is free to learn from the environment by exploring it completely
    on its own. Agent learns from positive reinforcement it gets for moving towards
    a goal and negative reinforcement for moving away from the goal. Q-learning is
    a form of model-free RL in which the learning agent converges to an optimal policy
    even if it were acting sub-optimally. This is called off-policy learning. This
    is the most extensively used form of RL, as it is easy to implement and a relatively
    low-cost solution. However, Q-learning has its limitations too. The agent has
    to explore enough and has to eventually make the learning rate small, but not
    decrease it too quickly, so that it has a large enough state space that covers
    all possible actions and policies. In the context of the ICSNs, we are not interested
    in finding the optimal policy. Rather, we are interested in any sub-optimal solution
    that does not take much time to converge and can act faster. It does not even
    matter how the action is selected, and a heuristic choice could work well too.
    This way, an even more simplified version of RL can be applied to ICSNs. We will
    discuss this in more detail in section IV. 3.2.3 Support vector machines Support
    vector machines (SVMs) are a class of ML algorithms that were originally formulated
    for binary classification. They can be applied to complex, highly non-linear problems
    in a consistent and structured manner and have been successfully applied to intrusion
    detection and security problems in WSNs [38]. This technique has not been applied
    to any other design problem in WSNs, but has proved very effective in small-scale
    sensor networks of about 50 sensor nodes randomly deployed in a 100-m × 100-m
    area. This class of ML algorithms has great potential to be applied to security
    in IoT-based applications, especially if the interface becomes information centric,
    with gateway nodes lying within the sensor network itself. As sensor network becomes
    more vulnerable to attack in the ICSN setting, SVM techniques can be further explored
    to secure large-scale networks in IoT applications. 3.3 Cognitive framework and
    multi-agent systems Cognitive networks are built around the idea of having sensor
    networks evolve around user requirements. It is about taking a step towards developing
    intelligent networks that do not limit themselves to point-to-point communication
    within the network. Instead, they enable the network to perceive user requirements
    and deliver data using distributed intelligence in the network. To implement distributed
    intelligence, multi-agent systems (MAS) are typically used. The agents in these
    MAS are called cognitive agents. They may interact to achieve information fusion
    and retrieval and may also be able to predict data for future use. Typical applications
    include medical monitoring, intelligent transport, and smart environment monitoring
    [39]. Such a distributed approach to introducing intelligent behavior in the network
    will be very beneficial in WSNs deployed for large-scale IoT applications. Some
    examples of successful software implementations of cognitive agents in sensor
    networks include AUTOMAN [40] and MONSOON [41]. 3.4 Context aware computing In
    large-scale sensor networks, a huge amount of data is generated. In order to derive
    useful information from raw data, context of the data plays an important part.
    Context awareness is even more important in the IoT era, as it enables the network
    to deliver relevant, user-requested data. While doing so, network resources are
    also conserved by extracting only meaningful information that is relevant to the
    requests, from the network. There are various aspects to context aware computing.
    They are the following: acquiring the context, context modeling, context reasoning,
    and context distribution [42]. Since we are more interested in the learning aspect
    as applicable to sensor networks, we delve a little deeper into the context reasoning
    aspect. Both CI- and RL-based techniques can be used to implement context learning,
    in addition to ontology-based and probabilistic logic models. The information
    obtained from these learning models can be exploited to infer information from
    stored data. Context awareness is very important and valuable in IoT applications,
    as it can add value to the large amount of data available from their applications.
    All the learning techniques discussed in this section have been summarized in
    Table 1. We identify the limitations of existing techniques and provide the details
    of the solution platform based on ICSNs for IoT applications in the next section.
    Table 1 Learning using AI algorithms in WSNs Full size table 4 A hybrid solution
    platform: learning in ICSN In this section, we will identify what the learning
    algorithm should actually learn, in order to support the information-centric nature
    of ICSNs. Table 2 presents three broad classes of solutions RL problems and classifies
    their features based on their relevance to learning in ICSNs. Table 2 Classification
    of solutions to RL problems Full size table 4.1 What should the ICSN learn? To
    identify what the ICSN should learn, let us identify what information is already
    known to the learning agent nodes. First, from our work in [22] and [43], we know
    that there is the upper bound on the maximum communication range for all the network
    nodes—sensor nodes, relay nodes, and the nodes that implement learning as a part
    of cognition, the cognitive nodes. We will be referring to the learning agents
    as cognitive nodes (CN) from this point forward. So, the CNs need to be aware
    of the network topology changes only within their own communication range. The
    target area’s coverage is taken care of at the time of deployment of nodes in
    the network. Thus, learning about the topology changes in its local neighborhood
    will help the CNs adapt their transmit power and choose a data delivery path that
    best manages the nodes energy consumption. Prolonging the CNs lifetime will in
    turn contribute towards increasing the network’s longevity. Second, cognitive
    nodes store information in their knowledge base regarding the QoI performance
    of paths used in previous data delivery rounds. Routing tables are built and updated
    based on the information in the knowledge base. Unlike traditional routing tables
    that store static, end-to-end routing paths from source to destination nodes (usually
    the sink node), routing tables in ICSNs are not designed to be static. In fact,
    they are not even end-to-end paths, but are paths that show the network’s current
    adaptation to the changes in topology and user requests. They store information
    about the most recent path used to deliver data from the CNs to the sink or other
    CNs or relay nodes. This means that the contents of the routing table at each
    cognitive node have to be updated on a regular basis to ensure they store the
    latest and best QoI paths. Thus, the important learning goal for the cognitive
    node from an application QoI perspective is to learn the data delivery paths towards
    the sink that provide the best QoI values for each of the different types of user
    requests. There is no one best path that is always used to route data. Instead,
    the routing choice depends on the current network topology, nature of the user
    request (periodic, intermittent-user specific, or emergency data), and volume
    of traffic generated in response to the request. If the routing table is viewed
    as cache storage, then as effective cache replacement strategy is required to
    replace old and redundant routing information with more recent and relevant information.
    These learning goals can be achieved in the following ways as represented in Fig.
    6: (i) learning from feedback on current actions, (ii) learning by exploring the
    changes in the network topology, and (iii) learning (drawing inference) from past
    actions by using the information stored in a knowledge base. Once the learning
    converges and knowledge base updates are complete, the routing tables can be updated
    using information from the knowledge base. Thus, we identify two main goals of
    learning: Firstly, to improve network longevity and maximize the duration for
    which the ICSN is able to provide relevant data to the end user; and secondly,
    to increase the network’s ability to provide QoI-aware data to the end user during
    its lifetime. For ICSNs, we define the network lifetime as the time after which
    none of the one-hop cognitive nodes to the sink are able to deliver the user’s
    requests for information to the network, nor are they able to deliver the gathered
    data from the network back to the user, is called end-of-life of the ICSN. Fig.
    6 Learning in sensor networks Full size image 4.2 Choosing the learning strategy
    The goal of learning in ICSNs is to improve the QoI delivered to the end user
    and maximize the duration over which this can be maintained. In other words, learning
    should contribute towards maximizing the network lifetime while ensuring QoI-aware
    data delivery during this period. Based on these requirements, we identify the
    following factors that influence the choice of learning strategy in ICSNs: Learning
    should occur incrementally over time as network conditions change. It should support
    episodic learning [44] to acquire information from new events and update the knowledge
    base. This will let the system make decisions and act based on the observed changes.
    Learning should be distributed and occur locally when implemented in large-scale
    ICSNs. However, the goal of learning should be common across all the cognitive
    nodes. The learning algorithm must be light-weight and of low complexity to support
    episodic learning. Moreover, it must not cause too much data/control overhead
    in the network or negatively interfere with other nodes’ functions. The learning
    algorithm should preferably be rewards based, as supervised learning would become
    very compute intensive for the ICSNs Finally, the learning algorithm must be able
    to converge quickly enough to be support the network’s learning goals in a timely
    manner. It should not cost the network too much in terms of its resources (energy
    and time) either. Based on these recommendations, we explore heuristically accelerated
    reinforcement learning techniques for use with ICSNs in the next section. 4.3
    Heuristically accelerated reinforcement learning Since both model-based and model-free
    RL have their limitations, we will look towards modified forms of RL solutions.
    We look at the possibility of using heuristics (rules of thumb) to choose a sub-optimal
    action instead of trying to converge at an optimal policy. The advantage of combining
    heuristics with RL is that RL is eventually going to converge to an optimal possible
    policy, but it takes time. Heuristic only attempts to make the decision choices
    quickly. Therefore, it will not deter the RL process, but will only enhance it
    to arrive at some sub-optimal solution faster, but it will not be incorrect as
    observed by Atkeson and Santamaria [45]. In this section, we look at the use of
    heuristic functions to accelerate RL algorithms. These heuristic evaluation functions
    called valuation functions are computed by stochastic sampling and dynamic programming
    updates [46]. The model-free method is suitable for problems that do not involve
    large state spaces. In contrast, the domain-independent, model-based heuristic
    methods can be used for solving problems with a large state space and hundreds
    of actions. The fast and frugal heuristics proposed by Gigerenzer [47, 48] are
    not only generic but are also low polynomial time and applicable to all problems
    that fit a given model. Another aspect to consider is that learning happens while
    the system is running. This makes it important to reduce the exploration space
    of the learning agent. In the CICSN framework, we can use the information stored
    in the knowledge base as a case base to choose an action that provides a close
    solution to the RL agent’s problem. But the choice of the case that matches the
    given decision problem must be chosen in a way that helps the RL algorithm to
    converge quickly [49, 50]. This way we can limit the exploration space by making
    use of the knowledge base, and use heuristics to choosen a sub-optimal action
    that will help the algorithm converge faster. Heuristically accelerated RL (HARL)
    and case-based HARL have been recently explored by Bianchi et al. in the context
    of robotic soccer [51, 52]. We extend this idea of accelerating RL by using heuristics
    and an available case base to the ICSN framework. In our application, the case
    base is replaced by a knowledge base that is built upon the foundation of representing
    knowledge in attribute-value pairs. The “Representativeness Heuristic”: According
    to this heuristic, the more similar something is to a prototype, the more likely
    it is to belong to that prototype’s category [53]. This heuristic is based on
    the fact that we tend to judge how likely something is to be true is based on
    how representative it is of a particular category. Thus, we conclude this section
    with the suggestion that heuristically accelerated RL techniques that make use
    of the information stored in the knowledge base of the cognitive nodes will potentially
    serve as low complexity solution to the learning problem in ICSNs, and might be
    viable in terms of the computational overhead too. 4.4 Learning in the ICSN framework
    In the previous sub-section, we identified a learning strategy for ICSNs based
    on the network requirements and from the analysis of different learning strategies.
    Now we will identify how the ICSN must be set up so that the learning strategy
    can be implemented in this framework. We assume a deterministic deployment of
    relay and cognitive nodes, and number them for ease of representation. We start
    with a broad classification of the type of request that an ICSN should be able
    to serve. We divide the requests into one of three types: type I: periodic, type
    II: on-demand, and type III: emergency request. Each of these requests will be
    associated with different QoI values on the delivered data, as desired by the
    user. We identify latency (L), reliability (R), and throughput (T) as the three
    attributes, whose combined value will decide the QoI associated with the delivered
    data. Energy efficiency is another important parameter that affects the network’s
    performance and impacts the network lifetime, and we will considered it while
    making decisions in the network, especially when related with choosing a data
    delivery path. We will not use absolute values of these attributes in deciding
    the QoI value. Instead, we will associate priorities with each of these attributes
    for every request type, and let these priorities decide the importance of the
    absolute value of the attributes. Thus, each request type is classified according
    to the priorities associated with QoI attributes of L, R, and T, and the importance
    of considering energy efficiency in making a decision choice in the network, as
    shown in Table 3. Table 3 Priority of QoI attributes for different request types
    Full size table The QoI attributes are monitored from feedback in the network.
    When a data packet is transmitted from a CN to its one-hop neighbors, the QoI
    attribute values are piggy-backed along with the acknowledgement it receives from
    these nodes. These values will be stored in a knowledge base (KB) and used in
    deciding the most appropriate next hop for sub-sequent requests arriving at that
    CN. This way, decisions about data delivery paths are dynamic and always based
    on both the user requirements and the network conditions at any point. The advantage
    of making these decisions at CNs is that it helps in decentralized decision making.
    Moreover, only local, one-hop neighborhood information needs to be monitored and
    stored. This means that the size of the KB to be maintained remains reasonable
    and can be easy to update and maintain. Table 3, shows the association of QoI
    attribute priorities with each request type. The numbers in the table indicate
    the priority associated with the attribute. Number 1 indicates top priority and
    number 3 indicates least priority. The “x” in Table 3 indicates a “don’t care”
    condition. This means that there are no strict requirements on the value of the
    QoI attribute marked with an “x,” and its value does not impact the decision making.
    Next, we look at the structure of the KB, where all the information gathered from
    observations in the network, and learnt from feedback is stored. The KB thus stores
    all the relevant and useful information that the learning and cognitive decision
    making algorithms can use. It also serves as a case base which the learning heuristic
    can use to map a given problem with and decides on the best course of action for
    the future. Table 4 represents the KB at a cognitive node and has a sample of
    the information stored in it as attribute-value pairs. Attribute-value pairs are
    one of the techniques used for knowledge representation. Information is represented
    in a way that the user can derive useful information from it, by drawing inferences
    about how the values are connected [54]. The inferences drawn could be based on
    rules, or heuristics based on learning from observations and feedback in the network.
    In Table 4, a recursive representation of attribute-value pairs has been used.
    That is each entry in the value field can be another attribute-value pair. What
    makes this representation effective beyond the attribute-value association is
    that information can be derived by reading the values along the column too, except
    for the field containing sensor data. For example, in the Attribute’ field “Node
    type” is associated with three values: “Sink,” “RN,” or “CN.” RN represents relay
    nodes that the CN is connected with, and CN represents other cognitive nodes that
    the given CN is connected with in the ICSN. The “Distance” field corresponds with
    the values in the “Node type” and represents the separation between the CN housing
    the KB and the Sink, RN, and CN, respectively. Tracking the remaining battery
    level at each of the one-hop nodes helps the CN take energy-aware decisions in
    choosing the data delivery path. The next major attribute we have used is “QoI.”
    It has information about the “Request Type” (as described by Table 3) that the
    node has served, next hop “Node” that can best serve each request, and the values
    recorded for each of the “QoI attributes” of latency (L), reliability (R), and
    throughput (T) during the previous communication. These values could be different
    between any pairs of nodes and are thus represented by α*, β*, and γ*. It should
    be noted however, that this table is only a representation of how information
    can be stored in the KB. In actual implementation, details of the semantics will
    have to be worked out to make the representations shorter and effective. In the
    proposed ICSN framework, we even segregate the routing table from the KB to keep
    routing decisions simple. Routing tables at the CNs store information only about
    reaching the one-hop neighbors, not the end-to-end paths, as shown in Table 5.
    These entries are derived from the KB of Table 4. In Table 5, the “Possible next
    hops” field suggests the best next hop node for cognitive node 2 (CN2) to transmit
    data, based on the “Request type.” It shows that CN2 is directly connected to
    the Sink, connected to four RNs that are linked with the Sink, and is also connected
    to two other CNs. CN-CN paths are not preferred and are represented by the hyphens
    in the “Request type” column. This is due to the high cost in terms of energy
    consumption, and the possibility of running into loops without reaching the Sink.
    These tables can be updated every time the learning algorithm identifies better
    paths for each request type, based on the changing network dynamics as reflected
    from the KB. In addition, a reasoning algorithm to help the learning agent in
    making cognitive decisions must be identified. These are still open research issues
    that need to be addressed in the future. Table 4 Sample of a knowledge base and
    its contents at the cognitive node Full size table Table 5 Routing table at the
    CN Full size table 5 Use-case and performance evaluation In this section, we provide
    some performance evaluation of the different learning techniques in improving
    large-scale ICSNs for Cloud- and/or IoT-based applications. As described in the
    context of cognitive psychology [49], the learning heuristics will be used as
    strategies that ignore a part of the information to make decisions faster, and
    sometimes more accurately compared to more complex methods [25]. We utilize an
    online version of the A* heuristic search algorithm, which learns from the information
    available in the knowledge base of the cognitive nodes. We call this learning
    data delivery A* (LDDA*) algorithm. The heuristics will be used to make approximate
    decision choices, as opposed to optimal decision choices. We compare this with
    a cumulative-heuristic accelerated learning (CHAL) technique that accumulates
    the heuristic values at each state (relay and cognitive nodes) and makes use of
    as much information as possible from observations made in the network before making
    the data delivery path choices. It also uses negative heuristic weights to punish
    poor next hop node choices, such as revisiting a node along a data delivery path.
    This way, LDDA* and CHAL will differ in the heuristic weights accumulated by the
    learning process. Since learning is typically used to improve the decisions made
    by reasoning engine in cognitive networks, we implement LDDA* and CHAL in a network
    that uses an analytic hierarchy process (AHP)-based reasoning technique at the
    cognitive nodes to make data delivery decisions. (The details of AHP-based data
    delivery (AHPDD) have been described in our previous work [21]). Performance of
    the heuristically accelerated learning techniques LDDA* and CHAL are compared
    against the non-learning AHPDD in terms of the QoI observed at the Sink where
    data is delivered at the end of each transmission round. The algorithms will also
    be compared in terms of the rate of successful data delivery and the energy consumed
    during the data delivery process at the end of network’s lifetime. The knowledge
    of the deterministic deployment of the RNs and CNs, and the knowledge accumulated
    in the knowledge base (KB) of the cognitive nodes, will be used to update the
    weight of the heuristics during network operation. We evaluate and compare the
    performance of the aforementioned algorithms using MATLAB simulations. In the
    following, a brief description of the simulation setup and targeted metrics/parameters
    in evaluating the performance of the algorithms. Simulations results and a detailed
    analysis of the results are also presented in this section. 5.1 Simulation setup
    The network is setup as described in Fig. 7, with randomly deployed sensor nodes
    and fixed deployment of relay and cognitive nodes. Simulation parameters are as
    described in Table 6. Energy deductions at the local cognitive nodes (LCNs) and
    relay nodes (RNs) during data transmission are as represented in Table 7, based
    on the transmit powers. The transmit power at RNs is fixed at 3 dBm, and it can
    be adapted at the LCNs to improve the probability of successful transmission as
    described in [21]. Data delivery paths from source LCNs in the network are initially
    established based on AHP analysis of paths along next hop-neighboring RNs. Heuristic
    learning is introduced in this simulation to increase the average success rate
    of data delivery to the sink, irrespective of the randomness with which the requests
    for different traffic types are generated in the network. Fig. 7 Use-case scenario
    setup for simulations Full size image Table 6 Simulation parameters Full size
    table Table 7 Transmit power consumption Full size table The following are the
    three performance evaluation metrics that will be used to compare the performance
    of the aforementioned three algorithms: 1. Network lifetime: number of transmission
    rounds till all one-hop nodes to GCN/Sink node are dead (including RNs and LCNs)
    2. Success rate (ρ): it is defined as the ratio of the number of successful transmissions
    s to the sink over the total number of transmission rounds T during the network’s
    lifetime. This is represented by Eq. (1) as follows: $$ \rho =\frac{s}{T}\ast
    100 $$ (1) 3. Failure rate (ϕ): it is the ratio of the number of failed transmissions
    f to the sink over the total number of transmission rounds T during the network’s
    lifetime. This is represented by Eq. (2) as follows: $$ \varnothing =\frac{f}{T}\ast
    100 $$ (2) 4. eQoI: effective QoI or eQoI is the heuristics estimate of the QoI
    associated with data delivered to the sink at the end of successful transmission
    round. In other words, a heuristic estimate of the value of the QoI at the last
    hop that delivered the information to the sink. 5.2 Simulation results and analysis
    Simulation results for the aforementioned three techniques are summarized in Table
    8. Table 8 Summary of simulation results Full size table As shown in the above
    table, results from the simulation using AHP analysis (AHPDD) suggests that during
    an average lifetime of 78 transmission rounds, the average success rate is 63
    %, and the average failure rate is 37 %. However, during the worst case, transmissions
    can fail for over 50 % of the requests, as suggested by the worst case failure
    rate. With the cumulative-heuristic accelerated learning (CHAL), it was found
    that the average success rate increased to 84 %, and the worst case failure rate
    was as low as 19 %. The best case success rate was 90 %, which was only 6 % off
    from the average success rate. This shows that the heuristics performed consistently
    well under various traffic loads and request arrival patterns. The performance
    of CHAL was matched very closely by the LDDA* heuristic search algorithm, which
    provided an 88 % data delivery success rate, but a slightly higher failure rate
    of 22 % in the worst case scenario when compared with CHAL. Since it is more desirable
    to have a higher success rate in smart IoT applications, we further compare the
    performance of LDDA* and CHAL techniques in terms of their effective QoI (eQoI)
    as observed at the Sink to identify the best heuristic of the two. Figure 8 shows
    the result of the comparison of the eQoI values for LDDA*, and CHAL, with AHPDD,
    which does not use any form of learning at the LCNs. In general, we observe that
    using some form of learning at the LCNs improves the eQoI of the data delivered
    to the Sink. Of the learning techniques, we observe that LDDA* performs the best
    in terms of consistently delivering data with higher eQoI at the sink, even towards
    the end of the network’s lifetime. Now, this eQoI is the hop-over-hop value of
    QoI associated with the data delivered to the sink with respect to latency, reliability,
    and throughput. Apart from the hop-over-hop latency, the cumulative delay in receiving
    a response from the network for a request is reflected by the number of hops taken
    along the path from source to sink. Thus, we can conclude that of the two proposed
    techniques, LDDA* is capable of delivering data to the sink with a higher average
    success rate, and better eQoI. Either of these techniques may be used for data
    delivery in the cognitive ICSN for IoT applications, based on the application
    and end user requirements (i.e., eQoI), rate of successful data delivery, and
    cumulative delay from source to sink. Fig. 8 eQoI as observed at the Sink over
    the network lifetime Full size image 6 Conclusion and open issues In this paper,
    we have approached WSNs as information-centric networks, which enable retrieving
    more information than just the data in attribute-value pairs from the network.
    We reviewed some routing protocols in DCSNs and presented our views on how learning
    could have been used to improve their performance. Then, we went on to see the
    various learning techniques available in the AI domain and found that RL methods
    are more suitable for use with sensor networks. This is because reinforcement
    learning involves learning while interacting with the environment which is important
    in WSN environments where network dynamics change due to changing channel conditions,
    node deaths, and changing traffic conditions, to name a few. We explored some
    more RL techniques, and analyzed what the ICSNs should learn, before arriving
    at a suitable technique for implementing learning in WSNs. Network lifetime and
    quality of information are the primary features that must be improved by the use
    of learning algorithms. This work presents a preliminary assessment of the potential
    advantages of introducing learning in WSNs. A detailed assessment of the best
    way to do so, and comparison with other techniques with respect to their impact
    on ICSN lifetime and QoI awareness will provide a more accurate evaluation of
    the benefits of introducing learning in sensor networks. Thus, we open up the
    ICSN paradigm as a research area with interesting possibilities. This study opens
    the door to develop application-/domain-specific ontologies for better knowledge
    representation at a higher level. The creation of such domain ontologies contributes
    towards the development of an enterprise architecture framework that can be applied
    to different application domains using the same underlying cognitive sensor network
    platform. More functions could be incorporated at the sink to integrate it with
    the next generation networks constituted of cognitive radio enabled nodes, working
    in cognitive network setup. The expansion of the sink node functions to a cognitive
    gateway node can be considered. The cognitive gateway node would then be able
    to take requests directly from different wireless users such as cell phone users,
    wireless access points and base stations. Furthermore, the idea of “cognitive
    elements” shall be used in the intermediate routers of the future internet to
    provide on-demand content to users quickly. References Al-Turjman F, Gunay M (2016)
    CAR approach for the internet of things (IoT). IEEE Can J Electr Comput Eng 39(1):11–18
    Article   Google Scholar   Friend D (2009) Cognitive networks: foundation to applications,
    Ph.D. Dissertation, Electrical and Comput. Eng., Virginia Polytechnic and State
    Univ., Blacksburg Bisdikian C, Kaplan L, Srivastava M (2013) On the quality of
    information in sensor networks, ACM Trans. Sensor Netw, Vol. 9, no. 4, Article
    48 Pearson DJ, Laird JE (2005) Incremental learning of procedural planning knowledge
    in challenging environments. Comput Intell 21:4 Lazarescu MT (2013) Design of
    a WSN platform for long-term environmental monitoring for IoT applications. IEEE
    J Emerg Sel Top Circuits Syst 3(1):45–54 Article   Google Scholar   (2008) ITU-T
    technology watch briefing report series, No.4, Ubiquitous Sensor Networks (2010)
    ITU-T. Series Y recommendations: requirements for support ubiquitous sensor network
    (USN) applications and services in NGN environment. Y.2221 Kalevi K (2008) Quality
    of experience in communications ecosystem. J Univ Comput Sci 14(5):615–624 Google
    Scholar   Hoes R, Basten T, Tham C, Corporaal H (2009) Quality-of-service trade-off
    analysis for wireless sensor networks. Perform Eval 66(3):191–208 Article   Google
    Scholar   Chen D, Varshney PK (2004) QoS support in wireless sensor networks:
    a survey. In International Conference on Wireless Networks, vol. 233, pp. 1-7
    Martínez J, Garcí A, Corredor I, López L, Hernández V, Dasilva A (2007) QoS in
    wireless sensor networks: survey and approach. In Proc. of the Euro American conference
    on Telematics and information systems, p. 20. ACM Bisdikian C, Kaplan LM, Srivastava
    MB (2013) On the quality and value of information in sensor networks. ACM Trans
    Sensors Netw 9(4):1–26 Article   Google Scholar   Tolstikov A, Tham CK, Biswas
    J (2006) Quality of information assurance using phenomena-aware resource management
    in sensor networks. In Networks, 2006. ICON''06. 14th IEEE Int. Conference on,
    vol. 1, pp. 1-7. IEEE Ahlgren B, Dannewitz C, Imbrenda C, Kutscher D, Ohlman B
    (2012) A survey of information-centric networking. IEEE Commun Mag 50(7):26–36
    Article   Google Scholar   Anastasi G, Conti M, Di Francesco M, Passarella A (2009)
    Energy conservation in wireless sensor networks: a survey. Ad Hoc Netw 7(3):537–568
    Article   Google Scholar   Intanagonwiwat C, Govindan R, Estrin D, Silva F (2003)
    Directed diffusion for wireless sensor networking. IEEE Trans Netw 11(1):2–16
    Article   Google Scholar   Heinzelman W, Kulik J, Balakrishnan H (1999) Adaptive
    protocols for information dissemination in wireless sensor networks, Proceedings
    of the 5th Annual ACM/IEEE International Conference on Mobile Computing and Networking
    (MobiCom_99), Seattle Yu Y, Estrin D, Govindan R (2001) Geographical and energy
    aware routing: a recursive data dissemination protocol for wireless sensor networks,
    UCLA Computer Science Dept. Technical Report, UCLA-CSD TR-01-0023 (2008) ZigBee
    Specifications. [Online]. Available: http://www.zigbee.org ZigBee Document 053474r17
    Al-Fagih A, Al-Turjman F, Hassanein H (2012) Ubiquitous Robust Data Delivery for
    Integrated RSNs in IoT, in IEEE Global Commun. Conf. (GLOBECOM’12), Anaheim, 3-7
    pp. 298-303 Singh G, Al-Turjman F (2016) A data delivery framework for cognitive
    information-centric sensor networks in smart outdoor monitoring. Elsevier Comput
    Commun 74:38–51 Article   Google Scholar   Singh GT, Al-Turjman FM (2014) Towards
    Prolonged Lifetime for Large-scale Information-Centric Sensor Networks, In Proc.
    of 27th Biennial Symposium on Communications, Kingston, ON, pp. 87-91 Singh GT,
    Al-Turjman (FM) Cognitive Routing for Information-Centric Sensor Networks in Smart
    Cities, IWCMC, 2014, pp. 1124-1129 Eriksson A, Ohlman B, Persson KA (2012) What
    are the services of an information-centric network, and who provides them?” IEEE
    AP2PS Al-Turjman F, Al-Fagih A, Hassanein H (2013) A Value-Based Cache Replacement
    Approach for Information-Centric Networks, In Proc. of the IEEE Local Computer
    Networks (LCN), Sydney, pp. 902-909 Al-Turjman F, Hassanein H (2013) Enhanced
    data delivery framework for dynamic Information-Centric Networks (ICNs), In Proc.
    of the IEEE Local Computer Networks (LCN), Sydney, pp. 831-838 Al-Fagih A, Al-Turjman
    F, Alsalih W, Hassanein H (2013) A priced public sensing framework for heterogeneous
    IoT architectures. IEEE Trans Emerg Top Comput 1(1):133–147 Article   Google Scholar   Haykin
    S (2005) Cognitive radio: brain-empowered wireless communications. IEEE J Sel
    Area Commun 23:201–220 Article   Google Scholar   Mitola J, Maguire GQ (1999)
    Cognitive radio: making software radios more personal. IEEE Pers Commun 6(4):13–18
    Article   Google Scholar   Thomas RW, Friend DH, DaSilva LA, MacKenzie AB (2006)
    Cognitive networks: adaptation and learning to achieve end-to-end performance
    objectives. IEEE Commun Mag 44(12):51–57 Article   Google Scholar   Friend DH,
    Thomas RW, MacKenzie AB, DaSilva LA (2007) Distributed learning and reasoning
    in cognitive networks: Methods and design decisions, in Cognitive Networks - Towards
    Self-Aware Networks (Q. H. Mahmoud, ed.), pp. 223-246, John Wiley & Sons Kulkarni
    RV, Forster A, Venayagamoorthy GK (2011) Computational intelligence in wireless
    sensor networks: a survey. Commun Surv Tutorials IEEE 13(1):68–96 Article   Google
    Scholar   Frster A (2007) Machine Learning Techniques Applied to Wireless Ad-Hoc
    Networks: Guide and Survey, in Proc. 3rd Intl. Conf. Intelligent Sensors, Sensor
    Networks and Information Processing (ISSNIP) Förster A, Murphy AL (2007) FROMS:
    Feedback routing for optimizing multiple sinks in WSN with reinforcement learning,
    in Proc. 3rd Int. Conf. Intelligent Sensors, Sensor Netw. Inf. Process Forster
    A, Murphy AL (2008) Balancing Energy Expenditure in WSNs through Reinforcement
    Learning: A Study, in Proc. of 1st Int. Wrkshp on Energy in Wireless Sensor Networks
    Di M, Joo E (2007) A survey of machine learning in wireless sensor networks, Proc.
    6th Int. Conf. Inf., Commun. Signal Process Sutton RS, Barto AG (1998) Reinforcement
    learning: an introduction. MIT Press, Cambridge Google Scholar   Kaplantzis S,
    Shilton A, Mani N, Sekercioglu YA (2007) Detecting Selective Forwarding Attacks
    in Wireless Sensor Networks using Support Vector Machines," 3rd International
    Conference on, vol., no., pp.335-340, 3-6 Biswas PK (2005) Architecting multi-agent
    systems with distributed sensor networks," Integration of Knowledge Intensive
    Multi-Agent Systems, 2005. International Conference on , pp.161-166 Shenai K,
    Mukhopadhyay S (2008) Cognitive sensor networks, in Proc. IEEE 26th Int. Conf.
    Microelectronics (MIEL), pp.315–320. Boonma P, Suzuki J (2008) Exploring self-star
    properties in cognitive sensor networking, in Proc. IEEE/SCS Int. Symp. Performance
    Evaluation Comput. Telecommun. Syst. (SPECTS), Edinburgh, pp. 36–43 Perera C,
    Zaslavsky A, Christen P, Georgakopoulos D (2013) Context aware computing for the
    internet of things: a survey. IEEE Commun Surv Tuts 99:1–41 Google Scholar   Singh
    G, Al-Turjman F (2016) Learning data delivery paths in QoI-aware information-centric
    sensor networks. IEEE Internet Things J 99:1–9 Google Scholar   Terry WS (2006)
    Learning and memory: basic principles, processes, and procedures. Pearson Education,
    Inc., Boston Google Scholar   Atkeson CG, Santamaria JC (1997) A comparison of
    direct and model-based reinforcement learning, International Conference on Robotics
    and Automation Bianchi RAC, Ribeiro CHC, Costa AHR (2007) Heuristic selection
    of actions in multiagent reinforcement learning. IJCAI''07, Hyderabad Google Scholar   Goldstein
    DG, Gigerenzer G (1996) Reasoning the fast and frugal Way: models of bounded rationality.
    Psychol Rev 103:650–666 Article   Google Scholar   Bianchi RAC, Ribeiro CHC, Costa
    AHR (2012) Heuristically Accelerated Reinforcement Learning: Theoretical and Experimental
    Results. In ECAI, pp. 169-174 Gigerenzer G, Gaissmaier W (2011) Heuristic decision
    making. Annu Rev Psychol 62:451–482 Article   Google Scholar   Gigerenzer G, Todd
    PM, The ABC Research Group (1999) Simple heuristics that make us smart. Oxford
    University Press, New York. ISBN 0-19-514381-7 Google Scholar   Bianchi RAC, Ros
    R, De Mantaras RL (2009) "Improving reinforcement learning by using case based
    heuristics." In Case-Based Reasoning Research and Development, pp. 75-89. Springer
    Berlin Heidelberg Geffner H (2010) Heuristics, Planning and Cognition, In R. Dechter,
    H. Geffner, and J. Halpern, editors, Heuristics, Probability and Causality. A
    Tribute to Judea Pearl. College Publications Tversky A, Kahneman D (1974) Judgment
    under uncertainty: heuristics and biases, new series. Science 185(4157):1124–1131
    Article   Google Scholar   Davis R, Shrobe H, Szolovits P (1993) What is a knowledge
    representation? AI Mag 14(1):17–33 Google Scholar   Download references Author
    information Authors and Affiliations Department of Computer Engineering, Middle
    East Technical University, Northern Cyprus Campus, 99738, Kalkanlı, Güzelyurt,
    Mersin 10, Turkey Fadi M. Al-Turjman Corresponding author Correspondence to Fadi
    M. Al-Turjman. Rights and permissions Reprints and permissions About this article
    Cite this article Al-Turjman, F.M. Information-centric sensor networks for cognitive
    IoT: an overview. Ann. Telecommun. 72, 3–18 (2017). https://doi.org/10.1007/s12243-016-0533-8
    Download citation Received 31 October 2015 Accepted 20 June 2016 Published 04
    July 2016 Issue Date February 2017 DOI https://doi.org/10.1007/s12243-016-0533-8
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Information-centric sensor networks Cognitive node QoI Reinforcement
    learning Use our pre-submission checklist Avoid common mistakes on your manuscript.
    Sections Figures References Abstract Introduction WSN design issues in IoT applications
    Artificial intelligence and learning in WSN A hybrid solution platform: learning
    in ICSN Use-case and performance evaluation Conclusion and open issues References
    Author information Rights and permissions About this article Advertisement Discover
    content Journals A-Z Books A-Z Publish with us Publish your research Open access
    publishing Products and services Our products Librarians Societies Partners and
    advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress
    Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature'
  inline_citation: '>'
  journal: Annals of telecommunications/Annales des télécommunications
  limitations: '>'
  pdf_link: null
  publication_year: 2016
  relevance_score1: 0
  relevance_score2: 0
  title: 'Information-centric sensor networks for cognitive IoT: an overview'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2019.2926642
  analysis: '>'
  authors:
  - Basheer Qolomany
  - Ala Al-Fuqaha
  - Ajay Gupta
  - Driss Benhaddou
  - Safaa Alwajidi
  - Junaid Qadir
  - A.C.M. Fong
  citation_count: 128
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy IEEE.org IEEE Xplore IEEE
    SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse
    My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out
    All Books Conferences Courses Journals & Magazines Standards Authors Citations
    ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 7 Leveraging Machine
    Learning and Big Data for Smart Buildings: A Comprehensive Survey Publisher: IEEE
    Cite This PDF Basheer Qolomany; Ala Al-Fuqaha; Ajay Gupta; Driss Benhaddou; Safaa
    Alwajidi; Junaid Qadir; Alvis C. Fong All Authors 116 Cites in Papers 8179 Full
    Text Views Open Access Comment(s) Under a Creative Commons License Abstract Document
    Sections I. Introduction II. Smart Buildings: Concept and Architecture III. Smart
    Building Components IV. Ml Background for SBS: Models, Tasks, and Tools V. Applications
    of Ml-Based Context-Aware Systems for SBs Show Full Outline Authors Figures References
    Citations Keywords Metrics Abstract: Future buildings will offer new convenience,
    comfort, and efficiency possibilities to their residents. Changes will occur to
    the way people live as technology involves people''s lives and information processing
    is fully integrated into their daily living activities and objects. The future
    expectation of smart buildings includes making the residents'' experience as easy
    and comfortable as possible. The massive streaming data generated and captured
    by smart building appliances and devices contain valuable information that needs
    to be mined to facilitate timely actions and better decision making. Machine learning
    and big data analytics will undoubtedly play a critical role to enable the delivery
    of such smart services. In this paper, we survey the area of smart building with
    a special focus on the role of techniques from machine learning and big data analytics.
    This survey also reviews the current trends and challenges faced in the development
    of smart building services. The major machine learning tasks that are relevant
    to smart buildings include: data collection and acquisition, data pre-processing,
    and dimensionality reduction. Published in: IEEE Access ( Volume: 7) Page(s):
    90316 - 90356 Date of Publication: 03 July 2019 Electronic ISSN: 2169-3536 DOI:
    10.1109/ACCESS.2019.2926642 Publisher: IEEE CCBY - IEEE is not the copyright holder
    of this material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction Although the term “smart building” (SB) may bring a thought of
    a fictional smart space from science-fiction movies, but the reality is that SBs
    exist today, and their number is getting increased. With recent advances in machine
    learning (ML), big data analytics, sensor technologies and the Internet of Things
    (IoT), regular buildings can be cost-effectively transformed into SBs with bare
    minimum infrastructural modifications. There are smart office, smart library,
    smart home, smart health care facilities, smart hospital and many other types
    of SBs that can provide automated services that can provide many value-added services
    (such as reduction of wasted energy) and also help to ensure the comfort, health,
    and safety of the occupants. The hyperconnectivity that will be brought about
    by the emergence of IoT will increase the promise of SB since now all the basic
    building amenities and commodities ranging from your house electronics to your
    plant vases will be interconnected. But this hyperconnectivity will at the same
    time complicate the process of managing SBs. In particular, SBs and their inhabitants
    are expected to create large volumes of streaming data. ML, sampling, compression,
    learning, and filtering technologies are becoming more significant to manage the
    stream of big data of individuals. In 1981, the term Intelligent Buildings (IBs)
    was initially coined by United Technology Building Systems (UTBS) Corporation
    in the U.S. In July 1983, IBs became a reality with the opening of the City Place
    Building in Hartford, Connecticut [1]. Today, the number of SBs is growing at
    an unprecedented rate including smart office, smart hospitality, smart educational
    facilities etc. [2]. An SB is recognized as an integrated system that takes advantage
    of a range of computational and communications infrastructure and techniques [3].
    Examples of SB services include smart thermostats that allow the temperature to
    be controlled based on the time of the day/year and the users’ preferences with
    minimal or no manual configuration. Using data analytics to “learn” the users’
    preferences before taking the appropriate actions is probably the most important
    enabling technology for IBs [4]. Lately, smart coffee machines appeared in the
    market with the capability to make coffee automatically, according to users’ preferences
    and schedules. Fridges can offer allocated programming interfaces for their control
    [5]. IBs aim to provide their users with safe, energy efficient, environment-friendly,
    and convenient services. In order to maximize comfort, minimize cost, and adapt
    to the needs of their inhabitants, SBs must rely on sophisticated tools to learn,
    predict, and make intelligent decisions. SB algorithms cover a range of technologies,
    including prediction, decision-making, robotics, smart materials, wireless sensor
    networks, multimedia, mobile computing, and cloud computing. With these technologies,
    buildings can cognitively manage many SB services such as security, privacy, energy
    efficiency, lighting, maintenance, elderly care, and multimedia entertainment.
    The massive volume of sensory data collected from sensors and appliances must
    be analyzed by algorithms, transformed into information, and minted to extract
    knowledge so that machines can have a better understanding of humans than their
    environment. Furthermore, and most importantly, such knowledge can lead to new
    products and services that can dramatically transform our lives. For example,
    readings from smart meters can be used to better predict and balancing the usage
    of power. Monitoring and processing sensory data from wearable sensors attached
    to patients can produce new remote healthcare services. The main philosophy behind
    ML is to create the analytical models automatically in order to permit the algorithms
    to learn continuously from available data. The application of ML techniques increased
    over the last two decades due to the availability of massive amounts of complex
    data and the increased usability of current ML tools. Today, ML is already widely
    applied in different applications including recommendation systems offered by
    online services (e.g., Amazon, Netflix) and automatic credit rating services used
    by banks. Alphabet’s Nest thermostat utilizes ML to “learn” the temperature preferences
    of its users and adapt to their work schedule to minimize the energy use. Other
    widely publicized examples of ML applications include Google’s self-driving car,
    sentiment analysis of Amazon and Twitter data, fraud detection, and Facebook’s
    facial-recognition technology that is used to tag the suggested person on images
    uploaded by users. A. SB Trends and Market Impact In this section, we look at
    the statistics related to SBs, to allow us to understand the current trends and
    motivations in industry marketplaces and academic researches toward SBs. According
    to the report by MarketsandMarkets [6], The SB market is estimated to grow from
    7.42 billion dollars in 2017 to 31.74 billion dollars by 2022, at a Compound Annual
    Growth Rate (CAGR) of 33.7% from 2017 to 2022. In yet another report Zion Market
    Research [7], 2016 and it is expected to reach 61,900 million dollars by 2024.
    It is expected to exhibit a CAGR of more than 34% between 2017 and 2024. The market
    is primarily driven by government initiatives globally for SB projects and the
    increasing market for integrated security and safety systems as well as energy
    efficient building systems. Figure 1 shows the Statista [8] forecast market size
    of the global smart home market from 2016 to 2022 (in billion U.S. dollars). FIGURE
    1. Forecast market size of the global smart home market from 2016 to 2022 [8].
    Show All According to the Gartner report [9], it is expected that the number of
    smart connected homes grows to 700 million homes by 2020, supplied by mass consumer
    adoption and an increase in the number of devices and apps available. Figure 2
    shows Gartner’s 2018 Hype Cycle expectation for deep learning, ML, connected homes,
    and smart workspace. FIGURE 2. Hype Cycle for the Connected Home, 2018 [7]. Show
    All According to report by Research and Markets [10], [11], the global IoT SB
    market will reach approximately $51.44B USD globally by 2023. The report also
    forecast that 33% of IoT SB market will be supplied by artificial intelligent
    technologies by 2023, and automation systems of SB will grow at 48.3% CAGR from
    2018–2023. Frost & Sullivan also predict that by 2025, the growth of connected
    home living will reach 3.7 billion smartphones, 700 million tablets, 520 million
    wearable health-related devices and 410 million smart appliances in the connected
    person world. B. Related Survey Papers Although many of survey papers focused
    on SBs have been published, none of them is focused on the role of data analytics
    and ML in the context of SBs. We describe the relevant survey papers next and
    will compare these survey papers to our paper in Table 2. Chan et al. in 2008
    provided an overview of smart home research [12]. It also discusses assistive
    robots, and wearable devices. The article reviews smart home projects arranged
    by country and continent. Alam et al. [13] provided details about sensors, devices,
    algorithms, and communication protocols utilized in smart homes. The paper reviews
    smart home works according to their desired services and research goals; namely,
    security, comfort, and healthcare. Lobaccaro et al. [14] presented the concept
    of smart home and smart grid technologies and discuss some challenges, benefits
    and future trends of smart home technologies. Pan et al. [15] reviewed the works
    on efficient energy consumption in SBs using microgrids. The survey investigates
    research topics and the recent advancements in SBs and the vision of microgrids.
    A few survey papers have reviewed works on facilitating independent living of
    the elderly people in smart homes. Ni et al. [16] conducted a survey on the features
    of sensing infrastructure and activities that can assist the independent living
    of the elderly in smart homes. A survey on ambient assisted living technologies
    for elderly people has been presented Rashidi and Mihailidis [17]. Peetoom et
    al. [18] focused on monitoring technologies to recognize life activities in-home
    such as fall detection and changes in health status. Salih et al. [19] presented
    a review of ambient intelligence assisted healthcare monitoring services and described
    the various application, communication, and wireless sensor network technologies
    that have been employed in the existing research literature. A number of papers
    have focused IoT: (a) Perera et al. [20] discussed IoT applications from the perspective
    of context-awareness and self-learning; (b) Tsai et al. [21] surveyed the applications
    of data mining technologies in IoT; and (c) Mahdavinejad et al. [22] reviewed
    some ML methods that can be applied to IoT data analytics. TABLE 1 List of Important
    Acronyms Used TABLE 2 Comparison of Relevant Survey Papers C. Contributions and
    Organization of This Paper To the best of our knowledge, this is the first survey
    that covers SBs jointly from the perspectives of application, data analytics,
    and ML. The main contributions of our paper are: Exploration of the potential
    of ML-based context-aware systems to provide SB services; Identification of research
    challenges and directions for SBs and how ML models can help in resolving such
    challenges; Identification of SB applications including comfort, security, energy
    efficiency, and convenience and the role of ML in such applications. Our research
    can provide an impetus to ML researchers to investigate new exciting ML-based
    SB services. The rest of the paper is organized as follows: Section II introduces
    the concept of SBs and its underlying architecture. Section III introduces the
    various components of the SB ecosystem and its underlying architecture. Section
    V presents context recognition and activity modeling and the role of ML in SBs.
    Section VI highlights research and development challenges and provides a future
    perspective of SB projects. Finally, Section VII presents a summary of lessons
    learned and concludes the paper. For the convenience of the readers, we have enlisted
    the important acronyms used in Table 1. SECTION II. Smart Buildings: Concept and
    Architecture In 1984, The New York Times published an article that described that
    real estate developers are creating “a new generation of buildings that almost
    think for themselves called intelligent buildings.” Such an intelligent building
    (IB) was defined as “a marriage of two technologies - old-fashioned building management
    and telecommunications.” [23]. Since then, many definitions of SBs have been suggested.
    This is due to the fact that the life-cycle of building planning, design, implementation,
    and operation involves different industry players that have different roles. In
    addition, the rapid changes in technology are affecting this definition. For instance,
    the advent of IoT and smart city concepts is impacting the definition of SB. Therefore,
    it is hard to compose a unique view of IBs with a single definition that is accepted
    worldwide. However, it is vital to have a good understanding of the main standard
    bodies and companies involved in shaping the development of SBs [1]. The Institute
    for Building Efficiency [24] focuses on the operation of buildings to provide
    efficient healthy and comfortable environment [25]. IBM [26] focuses also on the
    operation of SBs to provide integrated physical and digital infrastructures that
    provide reliable, sustainable, and cost-effective occupancy services. According
    to the European Commission’s Information Society [27], SBs means buildings that
    are supplied by information and communication technologies in the context of the
    combining Ubiquitous Computing and the IoT: In general, the buildings that are
    supplied with sensors, actuators, microchips, micro- and nano-embedded systems
    in order to enable collecting, filtering and producing more information locally,
    to be further incorporated and managed globally according to business functions.”
    In SBs, a variety of AI and multi-agent system techniques are employed including
    [28]: Reasoning and knowledge representation including ontologies and rules to
    represent devices and building services. ML for human activity recognition. Multi-agent
    systems for distributed intelligence and semantic interoperability. Intelligent
    approaches such as planning, intelligent control, adaptive interfaces, and optimization
    for efficient management of resources and services. An SB is therefore the integration
    of a wide range of systems and services into a unified environment that involve
    energy management systems, temperature monitoring systems, access security systems,
    fire and life safety, lighting control and reduction, telecommunications services,
    office automation, computer systems, area locating systems, LANs, management information
    systems, cabling and records, maintenance systems, and expert systems [29]. Figure
    3 shows examples of SB appliances including air-conditioning systems, lighting
    systems, solar energy generators, power-supply systems, temperature sensors, humidity
    sensors, power usage sensors, and surveillance cameras. For example, centralized
    control of these elements can promote the efficient use of energy through the
    intelligent control of lights and air conditioning units and the intelligent management
    of multiple green and brown energy sources. In most cases, an SB uses an Ethernet
    backbone with bridges to a Controller Area Network (CAN) [26]. FIGURE 3. Example
    of SB appliances. Show All It is easier to introduce smart services in residential
    buildings compared to commercial buildings since residential buildings have less
    technical equipment and less stringent efficiency requirements. Because the commercial
    buildings usually have more public visitors and therefore building models for
    commercial buildings are usually more challenging than building models for residential
    buildings which usually have a limited number of the occupants most of the time.
    In addition, the costs associated with the purchase and installation of smart
    devices and infrastructure at commercial buildings is more than residential buildings.
    Figure 4 shows an integrated framework in a residential building that employs
    a network of intelligent sensors. These sensors control systems such as energy
    generation, metering, HVAC, lighting, and security. A building automation system
    manages a set of smart appliances, sensors, and actuators, which collectively
    deliver services for the well-being of the inhabitants. Examples of such smart
    appliances, sensors, and actuators include washers and dryers, refrigerators,
    heaters, thermostats, lighting systems, power outlets, energy meters, smoke detectors,
    televisions, game consoles, windows/door controllers and sensors, air conditioners,
    video cameras, and sound detectors. More advanced smart devices are constantly
    being developed like smart floors and smart furniture [28], [30]. FIGURE 4. Smart
    appliances, sensors, and actuators in a smart residential building. Show All The
    IoT will enable the integration and interoperability of heterogeneous devices
    in SBs as well as the real-time processing of the data generated by sensors in
    support of optimal control and operation of the building. In this paper, We propose
    a layered architecture for SBs based on the layered architecture of IoT. Figure
    5 shows the layered architecture of SBs. FIGURE 5. Layers of the base IoT architecture
    that serves as the foundation for SBs. Show All As can be seen from the sensing
    layer (the bottom layer in Figure 5), input data is obtained from different types
    of physical sensors that monitor environmental parameters, collect data about
    residents and detect anomalies (e.g., fire and water pipe bursts). This layer
    also includes actuators that can be controlled to save energy, minimize water
    consumption, etc. The network layer (the second layer in Figure 5), includes access
    and core networks that provide transparent data transmission capability. This
    layer serves as a bridge between the sensing layer and the upper layers which
    are mainly responsible for data processing. An intermediary software layer called
    the middleware layer is needed (the third layer in Figure 5) to provide seamless
    integration of heterogeneous devices and networks covered by the sensing layer
    of the architecture. That layer serves as a bridge between the embedded software
    that runs of smart sensors and back-end software services. This layer provides
    interoperability using standardized programming interfaces and protocols [31].
    Therefore, this layer performs the process of converting the collected data from
    various data formats into a common representation. SB middleware can be based
    on open standards or proprietary, in addition, application-specific or general-purpose.
    Most often, proprietary middleware is application-specific while general-purpose
    middleware is based on open standards [28]. The context and semantic discovery
    layer (the fourth layer in Figure 5) is responsible for managing context and semantic
    discoverers including context and semantics generating, configuring, and storing.
    The processing and reasoning layer (the fifth layer in Figure 5) is responsible
    for processing the extracted information from the middleware then according to
    the application’s type it will make decisions. In this layer, there are various
    techniques of information processing applied to fuse, extract, contextualize.
    massive data into useful actionable knowledge. In this layer, two phases should
    be identified: context consumer and context producer of the middleware. In the
    context consumer phase, the data processing techniques are applied on the data
    produced by the middleware; while in context producer phase the process of decision-making
    is implemented to supply the service layer with valuable knowledge. while in the
    second stage, further context information can be provided to the middleware for
    registration in the ontology context. Specific services and applications are abstracted
    in the application layer (the top-most layer in Figure 5). This layer presents
    a framework with direct access to the underlying functionalities to serve in the
    implementation of various types of applications. Moreover, control panels should
    be installed in the building to control the automated indoor spaces and to support
    a local human-machine interface. For instance, in a multi-story building, each
    floor could have a control panel to automate the operations, such as control opening
    the windows, control of air conditioning to achieve the desired temperature, control
    close/open the blinds according to the preferred light intensity before using
    artificial lighting [32], [33]. Summary: Still there is no single standard definition
    for SBs. In this section, we reviewed many definitions for SBs by many institutes,
    counties, regions and different disciplines; each has their own definition for
    SBs. We presented the layered architectural pattern for adapting services in an
    SB environment. We wanted to provide a general design for adapting actions according
    to the different versions of context in SBs. This architecture may be used in
    different smart environments such as intelligent transport systems, security,
    health assistance, and SBs among others. We layered the architecture into six
    layers starting from the sensing layer, which includes various types of sensors
    that are installed to collect environmental information in SBs. While network
    layer providing data stream support and data flow control and ensuring that messages
    arrive reliably by using data transport protocols such as Wi-Fi, Bluetooth, Ethernet
    etc. Data Acquisition layer to collect the data from the heterogeneous sources
    of data. Context and semantic discovery layer to generate, configure, and store
    context and semantic information. Context processing and reasoning layer to process
    the information and extract the knowledge that making the decisions according
    to the application context. And the last layer which is application layer such
    as health assistance and elderly home care, comfort and entertainment services,
    security, tele-management, smart watering, energy efficiency, etc. After discussing
    the main components of commercial and residential buildings, we have now set the
    stage for a detailed discussion on the components of SBs in the next section.
    SECTION III. Smart Building Components Advances in smart building technology have
    driven to the extensive development of SBs to generate economic and environmental
    benefits for building owners through the convergence of IT and building automation
    systems. Figure 6 shows the key components of SB systems, these include extensive
    sensors and actuators systems, networking and communication systems, software
    platform system, HVAC system, and smart control devices. FIGURE 6. Components
    of smart buildings. Show All Current systems utilize control devices and smart
    sensors that are connected to a central system. These control devices and smart
    sensors are placed throughout the environment. Each particular system has its
    own collection of networking and communication systems that enable it to communicate
    with the central system. SBs are performing connected networks that serve as a
    communication backbone for multiple systems. In many ways, HVAC equipment is the
    most complicated building system, with numerous components arranged to produce
    heating, cooling, and ventilation. The functionality of HVAC system not only makes
    the building healthy and comfortable for its inhabitants, but it also manages
    a big part of the energy consumed, as well as plays a significant role in life
    safety. SBs adopt technology to monitor and control facility systems and perform
    any required modifications. The objective of an SB is to utilize computers and
    software to control lighting, alarm systems, HVAC, and other systems through a
    single computer interface. A. Sensors and Actuators for SBs Sensors and actuators
    are mechanical components that measure and control the environmental values of
    their environment. Sensors collect information from the environment and make it
    ready for the system. For instance, IR sensors can be utilized for human presence
    detection in a room. While actuator is a device to convert an electrical control
    signal to a physical action, such that it takes decisions and then performs proper
    actions according to the environment, which enables automated and remote interaction
    with the environment.For example, a light actuator is capable of switching on/off,
    dimming one or more electric lights [34]. The rapid development of micromechanics,
    microelectronics, integrated optics, and other related technologies has facilitated
    the development of different types of smart sensors integrated into daily objects
    and infrastructure at smart building environment or worn by the users, and are
    connected by network technologies in order to collect contextual information about
    daily living activities more efficiently and faster, with lower energy consumption
    and less processing resources. Environmental sensors are utilized for detecting
    the human activity of a specific object that performed in specific locations in
    the building, while wearable sensors are utilized for controlling and observing
    mobile activities and physiological signals [35]. 1) Environmental Sensors It
    is found that data collected from environmental sensors can form important information
    to monitor human behaviors within an SB. These sensory data are then analyzed
    to identify and observe basic and instrumental daily living activities made by
    occupants such as bathing, dressing, preparing a meal, taking medication etc.
    The environmental sensing is generally based on several simple binary sensors
    in every part of the home, RFID technology, and video cameras. This variety of
    sensing may implement important insight into contexts and actual activities although
    it might come with possible costs such as complexity. Motion sensors are utilized
    for detecting the occupant’s presence and location everywhere in the house. There
    are different types of motion sensors. IR presence sensor is one of the most utilized
    kind of motion sensors in SBs to detect occupants’ presence. Pressure sensors
    can be attached to the objects such as beds, chairs, sofas, and floors in order
    to track the actions and locations of the occupants. While Contact switches are
    usually placed on the doors of fridge, rooms, or cabinets to detect the actions
    that the occupant makes with these objects [36]. Light sensors, humidity sensors,
    temperature sensors, or power sensors are other types of sensors that are deployed
    and utilized in SB to recognize the activities. Light sensors are utilized to
    measure the light intensity in a particular room in the building. Humidity sensors
    are utilized to detect the air humidity of a specific location in the building.
    Temperature sensors are utilized to measure the temperature of the specific environment.
    while the power sensors are utilized to identify the power usage of electric devices.
    2) Wearable Sensors and Biosensors These sensors are attached directly or indirectly
    to the user body. Their small size enables these sensors to be attached to clothes,
    wristwatches, glasses, belts, shoes etc. These sensors can be categorized into
    inertial sensors and vital sign sensors (or biosensors). Wearable inertial sensors
    are highly transportable and no stationary units that can give accurately detailed
    features of occupant’s action and body posture. Those sensors are composed of
    accelerometers, gyroscopes and magnetic sensors. There is a need for receivers
    and cameras in the process of data collection, therefore can be used outside laboratory
    circumstances [37]. Wearable biosensors such as blood pressure, skin temperature,
    and heart rate are significant for collecting vital signs to monitor the health.
    The most commonly utilized inertial sensors for mobile activity monitoring are
    accelerometers and gyroscopes. Accelerometers can be utilized to measure the rate
    of acceleration accompanying a sensitive axis, they are useful to monitor the
    motion’s activities such as doing exercise, standing, sitting, walking, or walking
    upstairs and downstairs. While the gyroscopes can be utilized to measure angular
    velocity and maintain orientation. Some examples of primary vital signs are Electrocardiogram
    (ECG), heart rate, blood pressure, blood glucose, oxygen saturation, and respiratory
    rate. There are various vital sign sensor utilized to measure different vital
    signals such as Electroencephalography sensors (EEG) for observing electrical
    brain activity, Electrooculography sensors (EOG) for observing eye movement in
    ocular activity, Electromyography sensors (EMG) for observing muscle activity.
    Electrocardiography sensors (ECG) for observing cardiac activity, pressure sensors
    for observing blood pressure, CO2 gas sensors for observing respiration, thermal
    sensors for observing body temperature and galvanic skin response for observing
    skin sweating [38], [39]. 3) Heating, Ventilation, and Air Conditioning (HVAC)
    HVAC system plays an essential role in SB services. HVAC system plays a remarkable
    role in efficient energy consumption in SBs, as well as it offers new operating
    options to increase the occupants’ comfort. In addition to meeting the desired
    temperature, HVAC control systems are produced in order to sustain comfort within
    an enclosed space by producing a specific level of humidity, pressure, air motion,
    and air quality in an SB [40]. CO2, humidity and temperature levels in a building
    can affect occupant’s health and comfort; consequently measuring CO2, humidity,
    and temperature in this context can improve personal wellbeing [41]. Heating and
    cooling systems consume a huge amount of energy in the buildings, so it is necessary
    to optimize it utilizing smart controllers and sensors in order to save operational
    costs. Smart HVAC systems can sense and control efficiently different air quality
    parameters inside the building by utilizing distributed sensors and VAV fans throughout
    the building to perform an optimal ventilation [42]. Most of the current HVAC
    actuation systems in smart buildings are based on the data collected about the
    occupants using sensors and cameras, which are utilized specifically for HVAC
    systems. Certainly, There is a specific cost for the design, maintenance, setup
    and hardware of the data collection network [43]. Table 3 shows a summary for
    different types of smart sensors in the SBs. TABLE 3 Various Smart Sensors Useful
    in the Context of SBs B. Smart Control Devices Smart control devices collect data
    from a variety of sensors, process this data, and activate actuators to react
    to the events detected by the sensors. A smart control device can operate independently,
    without control by a central server. But there might be a needed communication
    amongst various control devices or they can connect with each other using the
    smart gateway. WeMo [44] is a Wi-Fi enabled switch utilized to turn electronic
    devices on/off from anywhere. It can control LED motion sensors, light bulbs,
    mart wall switches and plugs, and lighting devices, all from the smartphone app
    or browser. There is no hub needed for WeMo devices, everything can be managed
    through the free cloud service provided by Belkin. You can use the specific channel
    to connect the device to e-services such as Gmail to trigger specific actions.
    WeMo devices also support context-aware feature, it turns on/off automatically
    according to the time of day, whether it is sunrise or sunset etc. The Nest thermostat
    [45], a smart device developed by Nest—which has been acquired by Google—adjusts
    to your life and seasons change automatically. Just use it for a week and it programs
    itself. It learns about the level of temperatures that the occupants prefer and
    creates a context-aware personalized schedule. The smart thermostat turns to an
    energy-efficient mode automatically when the residents leave the building. It
    could start warming up the area when it senses activity, such as an occupant’s
    returning back home from work. The Nest Thermostat is controllable via a smartphone
    and an installed app. If you are away for a while, this device has also a capability
    to sustain a particular temperature in your house. Lockitron [46] is a door lock
    that can control the door remotely over the Internet to open and close it by phone.
    Lockitron app can be installed and used by any iOS or Android smartphone. Homeowners
    can directly grant family and friends the access to open a given door by providing
    authorization over the Internet. Lockitron can also utilize Bluetooth low energy
    technology, which means that it will keep controlling even in the event of Internet
    or power outages. Lockitron can also connect to the Internet with Bridge, through
    which occupants can control the bolt anywhere in the world. The SmartThings [47]
    SB automation system comprised of a communications smart hub, that supports various
    smart appliances and devices; the smart hub supports various technologies and
    protocols such as ZigBee, Z-Wave, as well as IP-accessible devices and lets you
    control appliances using Wi-Fi and Bluetooth connectivity. SmartThings provides
    kits that include smart plugs, in addition, the basic sensors that can be utilized
    to measure temperature, as well as to detect presence, motion, orientation, and
    vibration. SmartThings also includes an open platform that enables smart device
    vendors and third-party software to provide hardware and software that can be
    utilized alongside the platform. Philips Hue [48] is a combination of LED lighting
    with mobile technology. An accompanying mobile app that allows you to control
    lighting systems and changing color sets depending on your mood utilizing Wi-Fi
    technology. The new Philips Hue bridge supports the required authentication to
    enable Apple HomeKit technology to control and enable your Philips Hue to connect
    to other HomeKit enabled accessories and take control of your home. Blufitbottle
    [49] this bottle records the drinking habits of the users and sends them notifications
    about the time and amount of the water that they are supposed to drink to keep
    them healthy and hydrated. The app collects data about users such as their weight
    and age, plus other factors such as the current levels of temperature and humidity
    to estimate the amount of the needed water to keep them hydrated. When the user
    falls behind with hydration, an alert sounds, as well as a simple glance from
    the LEDs, will indicate when it’s time for the next drink. Canary [50] is an all-in-one
    home security system that comprises a set of sensors such as temperature, air
    quality, sound, motion vibration, in addition, an HD video camera in one unit.
    The system utilizes ML algorithms to let the users know what is happening at home
    and take action by sending notifications to your phone if something happens. Those
    ML models learn over time and send the users smarter notifications as it detects
    motion. So that, the longer you have the system, the more effective it becomes.
    Canary is able to decrease the rate of false alarms by learning the user behavior
    and the ambient noise level and the home temperature patterns. Amazon Echo [51]
    is a small cylinder enable the users to control anything in the home via the voice.
    Amazon Echo has a powerful voice recognition capability, the user does not have
    to worry about the complexities of their voice. Amazon Echo is connectable via
    Wi-Fi or Bluetooth, the users can send voice commands to control the speakers
    as well as other compatible devices such as Belkin’s WeMo and Philips Hue. It
    can also use Amazon cloud Lambda service to send commands. To send any command
    It requires to include the name of the program, for instance, “Alexa, turn on
    TV”. It also includes a network to distant servers, which slows down the response
    time. Honeywell Total Connect Remote Services [52] this device merges personal
    smart home automation with security monitoring task. It enables the occupants
    to control and monitor everything in the home from lighting and window shades
    systems to security cameras and smoke alarms. the user can utilize a smartphone
    app or desktop-mounted hardware console for controlling and monitoring. It can
    provide real-time alerts, GPS vehicle and asset tracking, video viewing, and mobile
    control. The system only supports Z-Wave devices, it needs to be installed by
    an authorized Honeywell dealer. It does not work with Wi-Fi enabled smart thermostats.
    In addition, the Honeywell provides security cameras and sensors, it also supports
    other smart devices from third parties, such as Yale locks and Lutron lighting.
    Table 4 shows a comparison among various smart control devices in the SBs. TABLE
    4 Comparison Among Various Smart Control Devices in SB C. Networking and Home
    Gateway An SB combines a communication network in order to control smart devices
    and services within the building. The communication network of a smart building
    can be based on diverse communication media such as twisted pair cable, as the
    traditional computer networks. The networking in building automation system has
    a tendency to utilize a heterogeneous network that is made up of diverse communication
    media and network standards. The building automation network is identified by
    physical technology and communication protocols. There is an internal network
    that connects devices inside the building, as well as the external networks, can
    be integrated separately. Public Internet, ISDN, and mobile phone networks are
    some examples of external networks [28], [53]. A typical SB may comprise a number
    of different components, such as sensors, actuators, communication and processing
    devices. Because of their nature, these components have limited capabilities and
    computational capacity in term of battery capacity and capability of data processing.
    To deal with this issue, most of the SB systems have been utilized as a central
    gateway to collect, process, and analyze context data from different sensors and
    actuators in the building. Several protocols such as Bluetooth, ZigBee, Wi-Fi,
    and Z-wave can be utilized for communicating the gateway. The home gateway can
    also collect and store data for a specific time period. Typically, these gateways
    can connect to the cloud services and perform data processing and reasoning tasks.
    The centralized gateway usually does not have any interface. They can be controlled
    and managed utilizing smartphones, tablets, or computers [54], [55]. In general,
    depending on the communication media used, SB network technology can be classified
    by interconnection method into three main types: Powerline, Busline, and Wireless
    [15], [56], which we describe next. 1) Powerline Communication (PLC) PLC method
    reuses the building electrical network; such that devices, appliances, and services
    are directly connected to the main power supply utilizing the already available
    electrical outlets in a building. The data is sent through the normal cable system
    to activate or deactivate the devices in the building. PLC system is historically
    the oldest technology in SB and is generally cheap but less reliable and scalable
    [3]. Originally, the application of PLC was mainly to secure the typical operation
    of the electric power supply system in case of failures or breakdowns through
    the direct exchange of information between the distribution center, and power
    plant. Therefore, this approach has become a competitive choice for SB networking,
    benefiting from availability, robustness, and ready connectivity of this method.
    Some of the protocols of this method offer a single-way communication, which enables
    the device to only receive information but not to communicate. There are different
    mainstream protocols of PLC method such as X-10, INSTEON, HomePlug, BACnet, and
    Lonworks. 2) Busline Busline systems in SBs networks use a separate physical media,
    usually twisted-pair cabling similar to the physical cables utilized for network
    services for transporting electrical signals. This type of systems is pleasant
    the building’s occupants, albeit the configuration process is complex, and it
    requires some knowledge of networking. Although the configuring complexity and
    installation cost of this system, the use of a separate cable could present a
    positive note about this approach, as it allows this method of networking to provide
    higher bandwidth, and to make it the most reliable of the three approaches. In
    addition, this technology usually supports a completed two-way communication protocol
    that enables the appliances to easily communicate with each other [57]. Some of
    the protocols in Busline technology are Konnex (KNX), CAN (Controller Area Network),
    Modbus, Meter-Bus (M-Bus). 3) Wireless Interconnection Many of the new SB applications
    use wireless technologies such as infrared and radio frequency, which are more
    convenient for users due to their untethered nature and the elimination of cables.
    The devices within the smart building can communicate wirelessly as radio wave
    can penetrate through floors, cabinets, and walls [56]. Because of the complexity
    and cost of potential modifications and of the re-wiring process in a smart building,
    several different wireless technologies are rising to produce flexible networking
    patterns convenient to occupants without taking to consider the physical wiring
    and deployment of such wire in the building. Typically, there are various protocols
    for the wireless system such as Bluetooth, ZigBee, WLAN, Z-wave, RFID etc., which
    essentially work in the industrial scientific medical bands, particularly in the
    2.4GHz frequency range. These wireless technologies are usually related to some
    control network concept in an SB such as low power consumption, high cost-effectiveness,
    low speed, flexibility in networking, deployment as well as building coverage
    [3]. The gateway is the central server of an SB that is commonly used in IoT solutions.
    The services provided by the gateway essentially concern to system management
    functionalities such as monitoring, controlling, and configuring the systems and
    their devices. It also supports some processing and data storage capabilities
    required for complex applications. D. Software Platform For a building to be “smart,”
    it is important that all the appliances and systems in the building communicate
    and exchange data securely with each other as well as with smartphones, tablets,
    and servers in the cloud. Software platforms play a critical role in exchanging,
    archiving and disseminating information through different protocols. These platforms
    use push, pull, publish/subscribe, etc. The goal of the joint commercial enterprises
    is to develop an open source software platform in order to make the process of
    data exchanging easier between the devices of different manufacturers. Therefore,
    the users will not have to worry in the future about the compatibility issues
    when utilizing electric and electronic devices of different manufacturers at home.
    In addition, the new platform can also offer a variety of different building services
    such as entertainment, energy efficiency, and security technology. Hence, this
    will enable creating different apps for these areas of use [58]. ABB, Robert Bosch
    GmbH, and Cisco Systems Inc. established an open-software platform called Mozaiq
    Operations GmbH [59] to unify smart building technology and offer interoperability
    across for all devices and services in the building, to simplify the experience
    for residents. It will enable users to seamlessly and intuitively customize their
    appliances and devices, regardless of manufacturers and brands of these devices,
    in order to improve energy efficiency and achieve a unique level of control and
    comfort. For instance, the user can close the blinds in the home either by a click
    from a smartphone or through a pre-set instruction; and switch off automatically
    all screen devices for the children to go outside to play. In a smart building,
    many devices and appliances can simply and securely share information with one
    another and with smartphones and other smart devices; and the Internet in general.
    Indigo Domotics [60] is to implement the do-it-yourself smart building platform.
    Indigo home automation software controllers available for the Mac OS enables residents
    to combine an array of common INSTEON, Z-Wave and X10 devices for unparalleled
    control of your building lighting, sensors, thermostats, and appliances. With
    Indigo Touch (sold through iTunes app store, iOS only), users will easily achieve
    remote control of their appliances utilizing an iPhone, iPad, or iPod Touch. They
    also can use a web browser on any device to control their appliances virtually
    anywhere in the world. The users can receive texts or emails about specific events
    has been detected for doors opening/closing, power failures etc. Indigo, from
    Perceptive Automation, is the newest home automation software for the Mac. OpenHAB
    [61] is an open-source software platform that follows a middleware approach for
    integrating different technologies in smart building systems into a single solution.
    OpenHAB platform address a variety of network technologies and appliances in the
    area of a smart building. Currently, the dependency on a particular vendor becomes
    a problem due to the lack of a common language that bridges the different devices
    with building automation system. The main goal of the OpenHAB platform is to integrate
    the new devices and technologies in a smart building system through a community-based
    approach. OpenHAB utilizes an OSGi based modular system for communicating between
    different technologies and devices. Bindings can be developed and deployed as
    an OSGi bundle to bridge a particular technology and device. There are different
    supported technologies exist such as EnOcean, KNX, Z-Wave, and others are supported
    through special bindings [62]. SmartThings [47] this platform composed of hardware
    devices, sensors, and software applications. Context information is collected
    from the sensors, this context is contributed to the reasoning and action that
    are performed by the application. For instance, the sprinkler in the garden can
    detect the rain, and switch itself off accordingly to save water. SmartThings
    kit comprises sensors, smart devices, and hub. While the SmartThings application
    is configured to enable users to control and monitor their building environment
    through a smartphone device. The SmartThings Hub works to connect the sensors,
    devices and building’s internet router to one another and to the cloud. It is
    compatible with different communication protocols such as Zigbee, Z-Wave, and
    IP-accessible devices. In addition, the SmartThings is compatible with other sensors
    and devices such as thermostats, moisture sensors, motion sensors, presence sensors,
    locks and garage door openers [63]. HomeOS [64] is Microsoft’s home operating
    system platform, that can be installed on a personal computer. It is an open platform
    that is not limited to Windows-based devices [65], [66]. with HomeOS platform,
    applications can be installed to maintain various context-aware functionalities,
    for example, taking an image by a door camera and sending it to the occupant when
    someone rings the doorbell. HomeOS provides a PC-like abstraction that manages
    and extends the technology of network devices to the users and developers in the
    smart building environment. Its design enables the users to map their protocol-independent
    services to support the applications with simple APIs, a kernel, and protocols
    of specific devices. HomeOS usually runs on an allocated computer such as a home
    gateway, it does not need any adjustments to commodity devices. HomeOS usually
    utilizes (i) Datalog-based access control to facilitate the process of managing
    technology in the smart home (ii) a kernel to incorporate the devices and applications
    and (iii) protocol-independent services to allow the developers manageable access
    to the devices. Lab of Things (LoT) [67], [68] is an experimental research platform
    that utilizes connected devices in the buildings. LoT offers a framework that
    provides deployment capabilities such as remote monitoring and updating of system
    health, and logging data collected from different appliances in cloud storage.
    It enables data sharing and collecting, sharing codes, connect hardware sensors
    to the software platform, and participants using HomeOS. The platform is designed
    to make it simple to design solutions that can be deployed in IoT based smart
    services such as healthcare, energy management services as it works in combination
    with HomeOS. Eclipse Smarthome [69] is a framework that has a focus on heterogeneous
    environments such as smart building and ambient assisted living. This platform
    takes to consider a variety of existing communication mechanisms. Eclipse SmartHome
    works as an abstraction and translation framework that enables communications
    across system and protocol boundaries. It provides many relevant implemented extensions,
    protocols, and standards that are significant for smart building services. Those
    implementations can be of Java library or an OSGi bundle shapes so that they can
    be utilized independently from the rest of the project. The framework can work
    on different embedded devices such as a BeagleBone Black, an Intel Edison, or
    a Raspberry Pi. Extensions of Eclipse SmartHome are compatible with the solutions
    provided by different vendors. This means your code that is written for a specific
    purpose can be extended easily on commercial platforms. Eclipse SmartHome offers
    a variety of characteristics to allow you to design a special Smart Home solution
    for your expectations [70]. Apart from discussing various SB solutions, we will
    also highlight the popular simulator called Cooja is used widely by the research
    community to produce small simulations for relatively large wireless networks
    of embedding sensors and actuators; and connected devices, in order to develop,
    debug and evaluate systems based on the wireless sensor network technology. Cooja
    simulator is a Java-based wireless sensor network simulator. It is distributed
    with Contiki OS project. Cooja enables the emulation of the set of sensor nodes,
    in addition, it can simulate physical and application layers of the system [71].
    There are three basic properties for the simulated node in Cooja: Its hardware
    peripherals, node type, and data memory. The node type can be shared among multiple
    nodes and defines properties that are common to all these nodes [72]. Summary:
    The field of SBs contains a variety of technologies, across commercial, industrial,
    institutional and domestic buildings, including building controls and energy management
    systems. Several organizations and institutions are working to supply buildings
    with technology that enables the residents to adopt a single device to control
    all electronic devices and appliances. In this section, we discussed the various
    components for SBs including sensors and actuators, smart control devices, smart
    gateway, networking and software platforms. SECTION IV. Ml Background for SBS:
    Models, Tasks, and Tools Massive data generated from sensors, wearable devices,
    and other IoT technologies provide rich information about the context of users
    and building status and can be used to design SB management. This context information
    is needed to extract useful and interesting insights for various stakeholders.
    When the data volume is very high, developing predictive models using traditional
    approaches does not provide accurate insight and we require newly developed tools
    from big data. Big data is primed to make a big impact in SBs and is already playing
    a big role in the architecture, engineering, and construction (AEC) industries
    [73], notably for waste analytics [74] and waste minimization [75]. ML is a powerful
    tool that facilitates the process of mining a massive amount of data that have
    been collected from different sources around us and make sense of a complicated
    world. ML algorithms apply a model on new data by learning the model from a set
    of observed data examples called a training set. For example, after being trained
    on a set of sample accelerometer data marked as walking or jogging, an ML algorithm
    can classify the future data points into walking and jogging classes. ML makes
    it relatively easy to develop advanced software systems without much involvement
    from the human side. They are applicable to many real-life problems in SB environments.
    One can also design and develop self-learning and collaborative systems. ML does
    not remove the human element from data science—it draws on computers’ strengths
    in handling big data to complement our understanding of semantics and context.
    It only needs training data to extract better features or parameters required
    to improve a given system. ML algorithms can be used to make predictions based
    on data patterns. It enables the computer to learn from the fed input data without
    being explicitly programmed so that ML algorithms can learn from and make predictions
    on input data [76], [77]. Nest thermostat is an example of a device that applies
    a specific temperature in a specific room and at a certain time of day according
    to the occupants’ preference. There are devices such as Amazon’s Echo that can
    learn from voice patterns, and the others those learn from much more complex behavior
    and activity patterns. A. Ml Models ML techniques have been widely used to develop
    smart systems which can sense and react according to context modifications in
    SBs [78]. There are many different ML algorithms, according to the two well-known
    theorems No Free Lunch theorem and Ugly Duckling theorem. No Free Lunch theorem
    states “there are no algorithms that can be said to be better than any other”,
    without prior information about the problem, any two algorithms may perform equally
    well in solving a problem. While Ugly Duckling theorem states “we cannot say that
    any two different patterns would be more similar to each other than any other
    pairs.” [79]. Mainly, ML is categorized into four categories handling different
    types of learning tasks as follows: Supervised learning, unsupervised learning,
    semi-supervised learning and reinforcement learning (RL) algorithms Figure 7 shows
    ML styles. These categories are described next and a summarized comparison between
    these ML techniques is presented in Table 5. TABLE 5 Comparison of ML Techniques
    FIGURE 7. ML styles. Show All 1) Supervised Learning refers to developing algorithms
    based on a labeled training dataset, from which the learner should generalize
    a representation by building the system model that represents the relations between
    the input, output and system parameters. ML model is developed through a training
    process that continues on the input training data until the model reaches the
    desired level of accuracy [80], [81]. Some examples of common supervised ML algorithms
    are: naive Bayes model, decision tree, linear discriminant functions such as support
    vector machines (SVMs), artificial neural networks (ANNs), hidden Markov models
    (HMMs), instance-based learning (such as k-nearest-neighbor learning), ensembles
    (bagging, boosting, random forest), logistic regression, genetic algorithms, and
    logistic regression [82], [83]. Supervised learning approaches are extensively
    used to solve different problems in smart buildings. Application in SBs: Boger
    et al. [76] proposed a supervised learning system using Markov decision processes
    to help people with dementia the process of hand washing. Altun et al. [84] make
    a comparative study on the supervised human activity classification approaches
    using body-worn miniature inertial and magnetic sensors. Mozer [85] developed
    the occupant comfort control of the home environment system using neural networks
    and reinforcement learning to control air heating, lighting, ventilation, and
    water heating in the smart home environment. Bourobou et al. [86] presented a
    hybrid approach using ANN and K-pattern clustering to identify and predict user
    activities in the smart environments. Hsu et al. [87] proposed a TV recommendation
    system using a neural network model based on user personalized properties such
    as activities, interests, moods, experiences, and demographic information data.
    Fleury et al. [88] proposed a healthcare-focused smart home system using the SVM
    algorithm to classify daily living activities based on the data from the different
    sensors. Supervised learning problems can be further grouped into classification,
    regression, time series, and ensemble method problems. a: Classification The task
    of classification algorithms is to classify an instance into a specific discrete
    set of possible categories. Given two sets of data (labeled and unlabeled datasets),
    the labeled dataset is used for the training process, while the unlabeled dataset
    will be used to evaluate of the classification results. The normal process is
    to count the number of instances that are assigned to the right category, which
    is also known as the accuracy rate (AR) defined by [21]. The classification algorithm
    can mathematically be described as follows: AR= N c N t (1) View Source where
    N c denotes the number of test instances that are correctly assigned to their
    categories to which they belong; N t the number of test instances. The precision
    ( P ) and recall ( R ) are used to measure the details of the classification results.
    The four possible outcomes are true positive ( TP ), false negative ( FN ), false
    positive ( FP ), and true negative ( TN ), the precision ( P ) and recall ( R
    ) are generally defined as: P= TP TP+FP (2) View Source Given P and R , a simple
    method to describe the precision and recall of the overall classification results,
    called F-score or F-measure, is defined as: F= 2PR P+R (3) View Source Commonly
    used classification techniques include decision trees, SVM, rule-based induction,
    neural networks, deep learning, memory-based reasoning, and Bayesian networks
    [89]. b: Decision Tree Algorithms The decision tree method is an important predictive
    ML modeling approach, which constructs a model of decisions presented based on
    the actual values of features in the data. Decision trees can be utilized for
    both classification and regression problems. In tree structures, leaves represent
    class labels and branches represent conjunctions of attributes that drive to those
    labels [90]. The decision trees that the target variable takes continuous values
    called regression trees. Decision trees are often one of the favorites of ML algorithms
    because of its speed and accuracy. The most common algorithms for decision tree
    are [91]: classification and regression tree, ID3, C4.5 and C5.0, Chi-squared,
    M5, and conditional decision trees. Application in SBs: Delgado et al. [92] propose
    an ML technique based on decision trees to extract the most frequent activities
    of human behavior and the temporal relationship of those activities in order to
    produce the human behavior quickly in a smart environment. Viswanathan et al.
    [93] introduce a prototype distributed data mining system for healthcare environment
    using C4.5 classification algorithm that can provide the patient monitoring and
    health services. Decision trees algorithm is a non-parametric algorithm that is
    easy to interpret and explain. The main disadvantage of this algorithm is that
    it can easily overfit. c: Bayesian Algorithms Bayesian methods utilize Bayes’
    theorem for classification and regression problems. The most common Bayesian algorithms
    are [94]: Naive Bayes, Gaussian naive Bayes, Bayesian belief network, Bayesian
    network. Application in SBs: Parnandi et al. [95] propose an indoor localization
    approach based on Naive Bayes classification and dynamic time warping, they exploit
    the embedded sensors of smartphones to determine the building that the user entered
    and the activities that the user is performing inside the building. Verbert et
    al. [96] proposed an ML approach based on Bayesian network to diagnosis the fault
    in HVAC systems. The model has been constructed based expert knowledge concerning
    conservation laws, component interdependencies, and historical data using virtual
    sensors. Naive Bayes classifier approaches have been applied with potential results
    for human activity recognition in [97], [98]. Naive Bayes approach recognizes
    human activities that identify with the highest probability to the set of sensor
    readings that were observed. d: Support Vector Machine (SVM) is a supervised ML
    algorithm which can be applied for both classification and regression problems
    though mostly used in classification challenges [140]. SVM is one of the most
    popularly utilized for many statistical learning problems, such as face and object
    recognition, text classification, spam detections, handwriting analysis etc. [141].
    is maximizing the margin that separating between the hyperplane of two classes’
    closest points. Support vectors are the points lying on the boundaries, and the
    optimal separating hyperplane is the middle of the margin [142]. Application in
    SBs: Fu et al. [105] proposed an SVM method to predict the system level electricity
    loads of public buildings that have electricity sub-metering systems. A real-time
    human tracker system proposed Nguyen et al. [106] using SVM for predicting and
    recognizing human motion based on the input images from a network of four cameras
    in the ubiquitous smart homes. Petersen et al. [107] developed an SVM model to
    predict the times where visitors are present in the home using only the data provided
    by wireless motion sensors in each room. Fleury et al. [88] presented a study
    for automatic recognition of daily living activities in a smart home based on
    SVM. They collected the data from various sensors such as Infra-Red Presence Sensors,
    door contacts, temperature and hygrometry sensor, and microphones. Das et al.
    [108] proposed a one-class classification approach for a real-time activity error
    detection in smart homes using one-class SVM. Zhao et al. [143] proposed an ML
    approach based on SVM and RNN to detect the occupancy behavior of a building through
    the temperature and heating source information for the energy efficiency consumption
    purposes. e: Artificial Neural Network Algorithms (ANNs) ANN models are inspired
    by the process of biological neural networks. ANN models are commonly utilized
    for regression and classification problems. The common ANN algorithms are [94]:
    Perceptron, Back-Propagation, Hopfield Network, and Radial Basis Function Network
    (RBFN). ANNs provide a number of advantages including it requires less statistical
    training, it has the capacity to detect complex nonlinear relationships between
    the predictor and response variables, as well as the ability to detect all possible
    relationships between predictor variables [104]. On the other hand, disadvantages
    include its “black box” nature, heavy computational burden and proneness to overfitting.
    However, due to the inherent features of neural networks, it has the following
    main limitations: challenge in training with no local optima, its accommodation
    to modifications in the behavior, the validation process of the results, and the
    complexity of network performance interpretation. Application in SBs: Badlani
    and Bhanot [99] developed a smart home system for energy efficiency applying pattern
    recognition based on ANNs, the system incorporates an RNN to capture human behavior
    patterns and an ANN for security applications in smart homes. Other researchers
    have applied ANNs to present context-aware services. Campo et al. [100] developed
    a system that calculates the probability of occupation for each section of the
    building and compares the probability with the current situation systematically.
    See [101] for a survey paper focusing on the role of ANNs for smart home services.
    Ermes et al. [102] proposed a hybrid classifier approach using a tree structure
    comprising a priori knowledge and ANN to recognize the activities such as rowing,
    biking, playing football, walking, running, sitting, or hiking. Ciabattoni et
    al. [103] proposed a home energy management system design using the neural network
    algorithm to predict the power production of the photovoltaic plant and the home
    consumptions during the given time. f: Deep Learning Algorithms: Deep learning
    methods represent an evolved form of ANNs in which a deep architecture (many layers
    comprising multiple linear and non-linear transformations [144]) is used. One
    of the promises of DL is replacing the manually selected features with efficient
    unsupervised or semi-supervised feature learning and hierarchical feature extraction
    algorithms. The most common DL algorithms are [145]: Convolutional Neural Network
    (CNN), Recurrent Neural Network (RNN), Deep Boltzmann Machine (DBM), Deep Belief
    Network (DBN), and Stacked Auto-Encoders. Deep learning has been used successfully
    in varieties of big data analytics applications, particularly natural language
    processing (NLP) applications, medical diagnosis, stock market trading, network
    security, and image identification. Deep learning is now ubiquitously used in
    major businesses and companies. Microsoft research on a deep learning system presented
    real-time speech translation system between Mandarin Chinese and English languages
    [146]. Apple’s Siri uses a deep learning trained model, and the voice recognition
    in the Google Android phone also uses a deep learning trained model [147]. DL
    utilizes a number of techniques such as drop-out and convolutions that enables
    the models to learn efficiently from high-dimensional data. However, DL requires
    much more data to train compared to other algorithms because of the magnitudes
    of parameters for estimation required by the models. Application in SBs: Choi
    et al. [114] propose two prediction algorithms deep belief network and restricted
    Boltzmann machines based on the DL framework for predicting different human activities
    in a building. They also presented a hybrid model which combines for predicting
    human behavior. The paper [115] proposes a generic deep learning framework based
    on convolutional and RNNs for human activity recognition that is suitable for
    multimodal wearable sensors, such as accelerometers, gyroscopes or magnetic field
    sensors. Alsheikh et al. [116] proposed a hybrid approach of DL and hidden Markov
    model for human activity recognition using triaxial accelerometers. Baccouche
    et al. [117] propose a two-steps neural-based deep model to classify human activities,
    the first step of the model is automatically learned spatiotemporal features based
    on Convolutional Neural Networks. Then the second step of the model uses an RNN
    to classify the entire sequence of the learned features for each time-step. In
    [118], they propose an acceleration-based human activity recognition method using
    Convolution Neural Network. In [119] a deep convolutional neural network as the
    automatic feature extractor and classifier for recognizing human activities is
    proposed using the accelerometer and gyroscope on a smartphone. Hammerla et al.
    [148] explore the performance of deep, convolutional, and recurrent approaches
    of deep learning for human activity recognition using wearable sensors. For the
    sake of measuring the performance, the authors used three representative datasets
    that comprise motion data collected from wearable sensors. g: Hidden Markov Models
    (Hmm) An HMM is a doubly stochastic process with a hidden underlying stochastic
    process that can be observed through the sequence of observed symbols emitted
    by another stochastic process. Application in SBs: Wu et al. [113] proposed an
    improved HMM to predict user behaviors in order to provide services for people
    with disabilities. They developed a temporal state transition matrix to be utilized
    instead of the fixed state transition matrix. Lv and Nevatia [112] used hidden
    Markov models for both automatic recognition and segmentation of 3-D human activities
    to allow real-time evaluation and feedback for physical rehabilitation. Cheng
    et al. [110] proposed an inference engine based on the HMM that provides a comprehensive
    activity of daily living recognition capability. They integrated both Viterbi
    and Baum-Welch algorithms to enhance the accuracy and learning capability. Chahuara
    et al. [111] proposed sequence-based models for online recognition of daily living
    activities in an SB environment. They presented three of sequence-based models:
    HMM, conditional random fields, and a sequential Markov logic network. h: Time
    Series Analysis A time series is a collection of temporal instances; time series
    data set usually have the following characteristics include the high dimensionality,
    large number of instances, and updating continuously [149]. One of the important
    purposes for time series representation is to reduce the dimension, and it divides
    into three categories: model-based representation, non-data-adaptive representation,
    and data-adaptive representation [150], [151]. Application in SBs: Survadevara
    et al. [125] proposed a wellness model using seasonal autoregression integration
    moving average time series with sleeping activity scenario in a smart home environment
    to forecast the elderly sleeping tendency. Zhou et al. [126] proposed a time series
    analysis framework to explore relationships among non-stationary time series in
    the case of data sensors in SBs. Jakkula and Cook [127] propose a time series
    based framework to determine temporal rules from observed physical and instrumental
    activities of occupants in a smart home. i: Regression The aim in regression problems
    is to estimate a real-valued target function. It is related to representing the
    relationship between variables that are repeatedly processed utilizing a measure
    of error in the predictions made by the model [152]. The most common regression
    algorithms are [153]: linear regression, logistic regression, stepwise regression,
    and ordinary least squares regression. Application in SBs: Chen et al. [120] used
    the regression technique of orthogonal matching pursuit algorithm to identify
    the physical and environmental parameters that providing the energy efficiency
    in an SB. Bouchard et al. [121] presented a gesture recognition system using linear
    regression combined with the correlation coefficient to recognize the gesture
    direction and estimate the segmentation of continuing gestures of daily usage
    activities in a smart environment. j: Ensemble Methods A combination of multiple
    classifiers often referred to as a classifier ensemble, group of classification
    models that are trained separately and the predictions of those models are then
    combined in a way to produce the overall prediction [154]. The most popular ensemble
    learning based classification techniques are [155]: random forest, boosting, gradient
    boosting machines, AdaBoost, bagging, and blending. Application in SBs: Jurek
    et al. [122] proposed a cluster-based ensemble approach solution for activity
    recognition within the application domain of smart homes. With this approach,
    activities are modeled as cluster collections built on different subsets of features.
    Fatima et al. [123] proposed an ensemble classifier method for activity recognition
    in smart homes using genetic algorithm optimization to merge the prediction output
    of multiple classifiers that make up the ensemble. They used the ANN, HMM, conditional
    random field, and SVM [13] as base classifiers for activity recognition. Guan
    and Ploetz [124] proposed a deep LSTM ensemble method for activity recognition
    using wearables: more specifically, the authors developed modified training procedures
    for LSTM networks and proposed the combination of sets of diverse LSTM learners
    into classifier collectives. 2) Unsupervised Learning Unsupervised Learning refers
    to developing algorithms that use data with no labels to analyze the behavior
    or the system being investigated [156]. Thus, the algorithm does not know about
    the truth of the outcome. In other words, the unsupervised learning algorithm
    classifies the sample sets to different clusters by investigating the similarity
    between the input samples. Clustering is done using different parameters taken
    from the data which enable us to identify correlations which are not so obvious.
    The inferring structures existing within the input data is used to prepare the
    model to prepare and extract general rules of the model. A mathematical process
    might be used to systematically reduce redundancy, or organize data by similarity
    [129]. The unsupervised approach has been applied to recognize various activities
    in smart buildings when it is challenging to have labels for input data [130].
    Common unsupervised learning problems are clustering, dimensionality reduction,
    and association rule learning. There are a variety of commonly used unsupervised
    learning algorithms, some of those algorithms are based on supervised-learning
    algorithms: the Apriori algorithm and k-Means. In unsupervised learning, usually
    there is no a measure for the output; we recognize only the features and the target
    is to define the patterns and relationships among a set of input measures [80].
    The major disadvantage of unsupervised learning is the absence of direction for
    the learning algorithm, hence, there might not be any useful detected knowledge
    in the selected set of attributes for the training. Clustering is a method of
    unsupervised learning that involves detecting patterns in the data by placing
    each data element into a group of K-clusters, where each group holds data elements
    most similar to each other [157]. Unsupervised learning problems can be categorized
    into clustering and association problems, which are described next. a: Clustering
    A clustering problem explores the internal groupings in the input data, such as
    grouping customers by their purchasing habits. Clustering techniques are usually
    organized by modeling strategies such as centroid-based and hierarchical. All
    methods are concerned with handling the internal structures in the input data
    to properly organize the data into groups of maximum commonality [158]. The quality
    of the clustering result is evaluated depends on the type of application that
    utilizes a clustering algorithm. For example, the sum of squared errors is generally
    utilized for data clustering while the peak-signal-to-noise ratio is used for
    image clustering [21]. The most common clustering algorithms are [153]: k-Means,
    k-Medians, expectation maximization, and hierarchical clustering. Application
    in SBs: Fahad et al. [128] propose an activity recognition approach that combines
    the classification with the clustering, in their approach the activity instances
    are clustered using Lloyd’s clustering algorithm. Then, they apply evidence theoretic
    K-Nearest neighbors learning method that combines KNN with the Dampster Shafer
    theory of evidence. The paper [86] proposes a hybrid approach to recognize and
    predict user activities in a smart environment. They use the K-pattern clustering
    algorithm to classify so varied and complex user activities, and ANN to recognize
    and predict users’ activities inside their personal rooms. Lapalu et al. [82]
    used an unsupervised learning approach to address the issues of daily living activities’
    learning in smart home. They utilize the Flocking algorithm for clustering analysis
    of a use case in cognitive assistance service that assists the people suffering
    from some type of dementia such as Alzheimer’s disease. Aicha et al. [83] present
    an unsupervised learning approach for detecting abnormal visits of an elderly
    in a smart home environment based on a Markov modulated Poisson process model.
    The model combines multiple data streams, such as in the front-door sensor transitions
    and the general sensor transitions. The other cases of social communication services,
    Rashidi and Cook [129] applied an unsupervised learning approach to detect social
    interaction and monitor activity daily living in a smart space, their approach
    can adapt and update automatically to reflect the changes in discovered patterns
    from implicit and explicit identified feedbacks of the occupant. Rashidi et al.
    [130] introduce an unsupervised method that identifies and tracks the normal activities
    that commonly occur in an individual’s routine in a smart environment. The activity
    discovery method of the system is produced to cluster the sequences based on the
    simple k-means algorithm. Fiorini et al. [159] proposed an unsupervised ML approach
    to identify the behavioral patterns of the occupants using unannotated data collected
    from low-level sensors in an SB. Their approach involves processing and analyzing
    collected data related to the daily living activities of 17 older adults living
    in a community-based home supplied with a variety of sensors. They extract activity
    information from collected data at different times of the day. b: Association
    The association rule learning problem is utilized to identify the rules that define
    large portions of input data, such as people that buy X item also tend to buy
    Y item. Association analysis is performed on rules discovered by analyzing input
    data for frequent if/then statement and using the criteria of support and confidence
    to discover relationships between unrelated data in a relational database or another
    information repository. Here “support” indicates how frequently the items appear
    in the database while “confidence” indicates the number of times the if/then statements
    have been found to be true. Many algorithms for generating association rules have
    been proposed. Apriori algorithm is the most well-known association algorithm
    [160]. Application in SBs: Aztiria et al. [161] proposed system that learns the
    frequent patterns of human behavior using association, workflow mining, clustering,
    and classification techniques. The core part of the system is the learning layer
    which is made up of two modules: the language module, which provides a standard
    conceptualization of the patterns; and the algorithm module, which discovers the
    patterns. Kang et al. [162] proposed a service scenario generation scheme for
    interpreting association rules extracted from the states of all devices in SB
    environments. Typically, These states are collected periodically at a specific
    time interval from the devices. Nazerfard et al. [163] propose a framework to
    discover the temporal features of the activities, including the temporal sequencing
    of activities and their start time and duration using the temporal association
    rule techniques in a smart home. 3) Semi-Supervised Learning Semi-Supervised learning
    lies between supervised and unsupervised methods. Input data is a composite of
    labeled and unlabeled samples. These hybrid algorithms aim to inherit the strengths
    of the main categories while mitigating their weaknesses. The model learns the
    patterns present in the data and also make predictions. Example problems are classification
    and regression [164]. There are some common semi-supervised learning models, including
    generative models, heuristic approaches, semi-supervised SVM, graph-based methods,
    self-training, help-training, mixture models, co-training and multi-view learning
    [94]. Application in SBs: Cook [131] combined fully-supervised and semi-supervised
    learning to recognize and follow activities that support health monitoring and
    assistance context-aware services for people experiencing difficulties living
    individually at smart homes. Liu et al. [132] proposed a vision based semi-supervised
    learning approach for fall detection and recognizing other activity daily living
    in smart environments to overcome the labeling challenges of human activities
    by systematic interpreting the activities with the highest confidence. Fahmi et
    al. [133] proposed a semi-supervised fall detection approach in which a supervised
    algorithm utilizing decision trees in the training process and then profiles are
    used to implement a semi-supervised algorithm based on multiple thresholds. Radu
    et al. [134] present semi-supervised ML method using only the low power sensors
    on a smartphone to consider the problem of determining whether a user is indoors
    or outdoors. Guan et al. [135] propose a semi-supervised learning algorithm for
    activity recognition named En-Co-training to make use of the available unlabeled
    samples to enhance the performance of activity learning with a limited number
    of labeled samples. The proposed algorithm extends the co-training paradigm by
    using an ensemble method. 4) Reinforcement Learning Reinforcement learning is
    a learning approach to control a system in order to maximize performance measure
    that represents a long-term objective [165]. Reinforcement learning, an area of
    ML inspired by behaviorist psychology, is concerned with the way that software
    agents have to take actions in an environment in order to maximize the concept
    of cumulative reward. RL algorithms learn control policies, particularly when
    there is no a priori knowledge and there is a massive amount of training data.
    However, RL algorithms suffer from some drawback such as the high computational
    cost required to find the optimal solution, such that all states need to be visited
    to choose the optimal one. The well-known approaches of RL are Brute force, Monte
    Carlo methods, Temporal difference methods, and Value function [166]. Q-learning
    [167] is a model-free reinforcement learning approach based on learning the required
    utility given a state decision. Application in SBs: Mozer [136] applied Q-learning
    for lighting regulation to predict the time of turning the lights ON/OFF in a
    building. This prediction model can be utilized to schedule the lights’ activations
    in a building for efficient energy consumption proposes. Li and Jayaweera [137]
    proposed a Q-learning based approximate dynamic programming algorithm to provide
    a more efficient, flexible and adaptive method. This approach can enable customers
    to make an optimal on-line decision making in SB environment to maximize the profits
    based on both local fully observable and the estimated hidden information of the
    building. Khalili and Aghajan [138] proposed a temporal differential class of
    RL method for autonomous learning of a user’s preference of music and lighting
    service settings in presence of different states of the user in SB environment.
    The preferences are learned by the model by using the explicit or implicit feedback
    from users when they react to the provided service. Xu et al. [139] give a survey
    of developments in RL algorithms with function approximation. They evaluated and
    compared different RL algorithms using several benchmark learning, prediction,
    and learning control tasks. B. ML Tasks for SBS In this section, we will describe
    the major ML tasks that are relevant to SB. The reader is referred to Figure 8
    for a general depiction of ML tasks in SBs and the steps taken to implement ML
    in an SB environment. FIGURE 8. ML tasks in SB environment. Show All 1) Data Collection
    and Acquisition A variety of data collection approaches are used, each of which
    has different deals in terms of capabilities, energy efficiency, and connectivity.
    Sensors and similar objects in SBs produce raw data simultaneously in an automated
    way and such devices may store the data for a specific period of time or report
    it to controlled components [168]. Data can be collected at gateways; the collected
    data is then filtered and processed, fused into compact forms for efficient transmission.
    A variety of communication technologies such as Zigbee, Wi-Fi, and cellular are
    utilized to transfer data to collection points. Data collected from a global-scale
    deployment of smart things defines the basis for decision making and providing
    services. It is possible that the decisions are unreliable when the quality of
    utilized data is poor [169]. Zhao et al. [170] propose a data acquisition and
    transmission system which could be used for monitoring systems to collect energy
    consumption data (e.g., electricity, water, gas, heating, etc.) from terminal
    meters which are installed in buildings. The system stores the data periodically
    after analyzing and processing it and finally transmits the data to servers through
    the Ethernet. Rowley et al. [171] propose the data acquisition and modeling approaches
    that can support the delivery of building energy infrastructure in both new building
    and renovated real-world contexts. Such methods provide a means to achieve short,
    medium and long-term forecasting of possible scenario pathways to multi-objective
    sustainable outcomes. CLEEN MMEA [172] platform that collects, processes, and
    manages the data and initiates contextual knowledge extraction. The purpose is
    to establish an online marketplace to collect data and provide services for different
    companies. The interfaces are made public so that any company can easily join
    the network to buy or sell services. The analysis results can be given to an energy
    services company in order to allow offering the service to the owners. A typical
    example of open access data collection system is e3Portal [173] developed by VTT
    in collaboration with Finnish municipalities. e3Portal offers information and
    tools when planning savings measures and energy retrofitting in municipal buildings.
    It also involves frequently updated data regarding energy and water consumption
    in thousands of public buildings like schools, kindergartens, offices, hospitals,
    other health care facilities, etc. Decision makers, designers, operation and maintenance
    personnel, as well as buildings users, can utilize it. There are projects that
    provide publicly available SB datasets for researchers to conduct further studies;
    A list of “Home Datasets” [174] includes the datasets collected by projects from
    UC Berkeley, MIT, Washington State University, University of Amsterdam, University
    of Edinburgh, and the University of Tokyo. The WARD [175] project supported by
    NSF TRUST Center at UC Berkeley provides a benchmark dataset for human action
    recognition using a wearable motion sensor network. The dataset was collected
    from 13 repetitive actions by 13 male and 7 female participants between the ages
    of 19 and 75. An MIT project [176] collected daily live activities dataset from
    two single-person apartments within a period of two weeks. Eighty-four sensors
    to record opening-closing events were attached to different appliances and devices
    such as drawers, refrigerators, containers, etc. Banos et al. [177] introduced
    an open benchmark dataset collected from various inertial sensors attached to
    different parts of the body. They considered 33 fitness activities, recorded using
    9 inertial sensor units from 17 participants. The CASAS project [178] at Washington
    State University provides a publicly-available dataset for a three-bedroom apartment
    with one bathroom, a kitchen, and a living room. Different types of motion and
    digital sensors are installed to support temperature readings, in addition, the
    analog sensors are installed to support readings for hot water, cold water, and
    stove burner use [179]. The PlaceLab project [180] of MIT provides a dataset collected
    from a one-bedroom apartment with more than 900 sensors, including those coming
    from motion, switch and RFID sensors. That is being used to monitor activity in
    the environment in the context of a smart home [181]. A collection of smart meters
    data from five houses in the UK [182] That consists of 400 million instances.
    The active power is formed by different appliances and the whole-house power demand
    every 6 seconds. The major challenges that arise for data collection are scalability,
    privacy, security, and heterogeneity of resources [183]. Automated sensor data
    collection process collects a large amount of data that overwhelms the collection
    and analysis centers in comparison to the data collected from other sources such
    as IoT devices and social media. This leads to a huge number of small synchronous
    write operations to the database storage system, consequently, resulting in serious
    performance bottlenecks to the storage system design [184]. Because of the extensive
    use of RFID technology, privacy issues arise in data collection; for example,
    the RFID tags carried by a person may become a unique identifier for that person.
    Also, other security concerns appear, for example, the radio signals of RFID technology
    are easily jammed. Hence, that can disrupt the data collection process [185].
    The heterogeneity of data that is being collected from different resources is
    another major challenge, such that the data are usually very noisy, large-scale,
    and distributed. This makes it very difficult to use the collected data effectively
    without a clear description of existing data processing techniques [184]. 2) Data
    Preprocessing A large amount of data are generated by sensors in SBs; this data
    comes from various sources with diverse formats and structures. Usually, this
    data is not ready for analysis as it might be incomplete or redundant due to low
    battery power, poor calibration, exposure to various malicious elements and interference.
    Therefore, raw data typically needs to be preprocessed to deal with missing data,
    discard noisy and redundant data and integrate data from various sources into
    an integrated schema before being committed to storage. This preprocessing is
    called data cleaning. The quality of data can be improved substantially by applying
    some cleaning techniques to the data before it arrives its end user [168], [186].
    Data cleaning is one of the significant tasks in the data processing phase. Data
    cleaning is not a new process particular for the IoT data processing. It has already
    been applied as a process for database management systems. Presenting a data cleaning
    method would further aid the applications to focus on their core logic without
    worrying about data reliability post-processing overheads [184]. There are many
    different techniques that have been utilized to deal with the problem of cleaning
    noisy data streams such as Kalman filters [187], statistical models [186] and
    outlier detection models [184]. One of the major challenges with data cleaning
    techniques in the SBs is the heterogeneity of data collected from different sources
    particularly WSN- and RFID-enabled data streams. The utilized data cleaning techniques
    should be able to deal with several different variables of interest to satisfy
    IoT applications’ requirements, for example, setting home temperature based on
    observed outer temperature, user habits, energy management, etc. [169] Any type
    of failures such as a failed sensor, network issues, camera failure, or database
    crashes in the process of collecting data would invalidate the data. Consequently,
    this type of impediment will dramatically increase the time required to collect
    data [179]. 3) Dimensionality Reduction There are huge volumes of raw data that
    are captured from heterogeneous and ubiquitous of sensors used in SBs. Most of
    the data collected from those sensors are redundant and they need to be brought
    down to a smaller number of features by applying dimensionality reduction techniques
    without losing significant information [188]. The main idea from the dimensionality
    reduction strategy is to find a new coordinate system in which the input data
    can be represented with much fewer features without losing significant information.
    The dimensionality reduction can be made in two different ways: by extracting
    of the features that represent the significant data characteristics (this technique
    is called feature extraction), or by only selecting the most relevant features
    from the original dataset, this method is called feature selection [189], [190].
    Like clustering methods, the dimensionality reduction approach explores and exploits
    the internal structure of the data, but in this case in an unsupervised manner
    using less information. Most of these techniques can be utilized in classification
    and regression problems. Examples of some salient algorithms are [153]: Principal
    Component Analysis (PCA), Principal Component Regression (PCR), and Linear Discriminant
    Analysis (LDA). Chen et al. [191] propose a framework using the classification
    information of local geometry of data to reduce the dimensionality of a dataset
    on human activity recognition from wearable, object, and ambient sensors. a: Feature
    Extraction The main components of the original data are the features. After extracting
    the features from the raw dataset, such features contain important information
    that is used by the learning algorithms for the activities discrimination. The
    most common methods of feature extraction work in time, frequency, and discrete
    domains [192]. Among time domain method, mean and standard deviation are the key
    approaches for almost all sensor types. While the frequency domain method focuses
    on the periodic structure of the collected data. Wavelet Transformation and Fourier
    Transform are the most common approaches. And discrete domain methods such as
    Euclidean-based distances, dynamic time warping, and Levenshtein edit distance
    are key approaches implemented in several applications such to string similarity,
    classifying human activities and modeling human behavioral patterns [16], [193].
    b: Feature Selection The main role of feature selection is to discriminate the
    most related subset of features within a high dimensional vector of features,
    so that reduces the load of noise and computational expense on the learning models.
    In order to map the high dimensional vector of features into a lower dimensional
    vector, there are several common algorithms used such as Linear Discriminant Analysis
    (LDA), Principal Component Analysis (PCA), and Independent Component Analysis
    (ICA) [194]. Hausmann and Ziekow [195] proposed an approach for automatically
    adapting the feature selection for SBs application ML models from the time-series
    data based on wrapper methods and genetic optimization. Fahad et al. [196] propose
    an activity recognition approach for overlapping activities using K-Nearest neighbors
    approach that distinguishes the most important features from the collected information
    obtained from deployed sensors in multiple locations and objects. Fang et al.
    [197] determine that the different feature sets generate different levels of accuracy
    for recognizing human activities, and selecting inappropriate datasets increases
    the level of computational complexity and decreases the level of prediction accuracy
    in smart home environments. The wrapper and filtering are the two main statistical
    methods of feature selection problem. It is argued that although the wrapper approach
    may obtain better performances, filters are less resource intensive and faster
    [198]. In [199], different feature selection methods are utilized for the process
    of dimensionality reduction of the learning problem to recognize the human activities
    from observed sensors. The authors show that the performance of the learning models
    to recognize the human activity has a strong relationship with the utilized features.
    c: Feature Projection feature projection can be represented as a mapping from
    the original set of features to an appropriate set that optimizes the learning
    criterion, such that the feature projection approach allows the process of visualizing
    and mapping the high-dimensional feature vectors to low dimensional one, in addition,
    it enables analyzing the distribution of the reduced feature vectors [200]. Consequently,
    the feature projection approach reduces the pattern recognition’s processing time
    and enables selecting the best-performed classifier for the reduced feature vectors.
    Hence, it makes real-time implementation possible [198]. Chu et al. [201] proposed
    a linear supervised feature projection that utilizes the LDA algorithm for EMG
    pattern recognition that attempted to recognize nine kinds of hand motion. C.
    ML Tools & Platforms for SBs There are a variety of existing ML platforms and
    tools to support the learning process. With the current increasing number of those
    kinds of toolkits, the task of selecting the right tool for processing big data
    streaming from various sources can still be difficult. Typically, there is no
    single toolkit that truly fits and provides solutions for all different problems.
    Many of the available toolkits might have overlapping uses, and each has advantages
    and disadvantages. Most of those toolkits might require experiences in the domains
    of programming languages and system architecture. In addition, usually many people
    lack a full understanding of the capabilities and how to use those available platforms
    [202]. The important factors that must be considered when selecting a specific
    ML tool are scalability, speed, coverage, usability, extensibility, and programming
    languages support. With respect to the scalability factor, the size and complexity
    of the data should be considered to determine if a specific toolkit will be fit.
    The processing platform that the library is running on and the complexity of the
    algorithm affect the speed factor. Not all the projects prioritize the speed factor;
    if the models require frequent updates, the speed may be a crucial concern; but
    not otherwise. Coverage represents the number of ML algorithms implemented in
    the tool. With the massive amount of data capturing from heterogeneous sources,
    ML community faces the challenges of how the ML model can efficiently process
    and learn from the big data. In general, the available big data tools do not implement
    all varieties of different classes of ML algorithms, and typically their coverage
    ranges from a few algorithms to around two dozen. The usability factor includes
    elements such as initial setup processing; continuous maintenance; the available
    programming languages and user interface available; the amount of documentation,
    or availability of a knowledgeable user. The extensibility factor means that the
    implementations introduced in the tools can be utilized as building blocks towards
    new systems. It is necessary to evaluate tools in terms of how well they are able
    to meet this factor. There are a variety of ML libraries that are available in
    different programming languages. Depending on the task you are trying to accomplish,
    certain languages, libraries, and tools can be more effective than others. The
    following provides a detailed observation of the strengths and weaknesses of the
    top used deep learning and ML tools. The reader is also referred to Table 6 for
    a concise tabulated summary of the described deep learning and ML tools. TABLE
    6 Comparison Between Deep Learning and ML Tools 1) H2O H20 [203] is an open-source
    in-memory, distributed, and scalable ML framework for big-data analysis that supports
    ML libraries, along with tools for parallel processing, analytics, data preprocessing
    and evaluation tools. It is produced by the H2O.ai, which launched in 2011 in
    Silicon Valley. The most notable feature of this product is that it provides numerous
    tools for deep neural networks. The H2O software APIs can be called from Python,
    Java, R, and Scala. Users without programming expertise can still utilize this
    tool via the web-based User Interface. In addition to the processing engine provided
    by H2O framework, it also allows the users to integrate their models with other
    available frameworks such as Spark and Storm. Depending on what is suitable for
    the algorithm, The H2O’s engine uses multiple execution methods to process data
    completely in memory. The general technique used is distributed Fork/Join, which
    is reliable and suitable for massively parallel tasks. The H2O software can be
    run on different operating systems such as Microsoft Windows, Mac OS X, and Linux
    (e.g. Ubuntu 12.04; CentOS), It also runs on Apache Hadoop Distributed File System
    (HDFS) and Spark systems for big-data analysis. In addition, it can operate on
    various cloud computing environments such as Amazon EC2, Google Compute Engine,
    and Microsoft Azure. As of July 2016, the algorithms supported in H2O cover the
    tasks classification, clustering, generalized linear models, statistical analysis,
    ensembles, optimization tools, data preprocessing options and deep neural networks.
    2) MLlib (Spark) MLlib [204] is Apache Spark’s ML library. MLlib aims to provide
    scalable and easy to use ML methods. It includes common ML algorithms for classification,
    regression, clustering, dimensionality reduction, as well as lower-level optimization
    primitives and higher-level pipeline APIs. The classification techniques of SVM,
    random forest, logistic regression, Naïve Bayes, decision trees, and gradient-boosted
    trees are supported whereas for clustering, k-means, Gaussian mixture, and power
    iteration clustering are supported. MLLib supports implementations for linear
    regression and isotonic regression, and incorporates a collaborative filtering
    algorithm using alternating least squares. PCA is supported for dimensionality
    reduction. MLlib includes APIs for development in Scala, Java, Python, and SparkR.
    Generally, MLlib depends on Spark’s iterative batch and streaming approaches,
    as well as its use of in-memory computation. 3) Tensorflow Tensorflow [205] is
    an open source software library for numerical computation and deep ML in a variety
    of perceptual and language understanding tasks utilizing data flow graphs. TensorFlow
    was originally developed by the Google Brain team and was released in November
    2015 under an Apache 2.0 open source license. TensorFlow has tools that support
    deep learning, reinforcement learning, and other algorithms. TensorFlow implements
    data flow graphs, where “tensors” are batches of data that can be processed by
    a set of algorithms defined by a graph. The movements of the data through the
    system are called “flows”—hence, the name. TensorFlow can run on multiple CPUs
    and GPUs. It can run on Linux, Mac OS X desktop, and server systems, and Windows
    support on roadmap, as well as on Android and Apple’s iOS mobile computing platforms.
    TensorFlow is written with a Python API over a C/C++ engine that makes it run
    fast. TensorFlow utilizes a symbolic graph of vector operations method, in order
    to easily define a new network. However, TensorFlow has a weakness that is related
    to modeling flexibility. Such that each computational flow has to be constructed
    as a static graph. That makes some computations such as beam search difficult.
    4) Torch Torch [206] is an open source ML computing framework that supports a
    variety of ML algorithms. Torch was originally developed at NYU. It is efficient
    and easy to use, thanks to a script language based on the Lua programming language
    and a C/CUDA implementation, Torch was intended to be portable, fast, extensible,
    and easy to use in development. Some version of Torch is employed by large companies
    such as Google DeepMind, the Facebook AI Research Group, IBM, Yandex, and the
    Idiap Research Institute. In addition, it has been extended to run on Android
    and iOS platforms. A variety of community-contributed packages for Torch, giving
    it a versatile range of support and functionality. It provides various deep learning
    algorithms that support computer vision; signal, image, video, and audio processing;
    parallel processing and networking [207]. 5) Deeplearning4j Deeplearning4j [221]
    is an open source distributed DL library, primarily developed by Adam Gibson from
    an ML group in San Francisco. Deeplearning4j is written for Java and JVM as well
    as to support a variety of DL algorithms such as restricted Boltzmann machine,
    deep belief networks, convolutional networks, recurrent neural networks, deep
    autoencoder, stacked denoising autoencoder, and recursive neural tensor network.
    All these algorithms can be integrated with Hadoop and Spark for distributed parallel
    processing. Deeplearning4j relies on Java programming language, in addition, it
    is compatible with Clojure and includes a Scala API. Deeplearning4j is designed
    to be utilized in business environments, rather than as a research tool. It is
    applied in a variety of applications such as fraud detection, anomaly detection,
    recommender systems, and image recognition. 6) Massive Online Analysis (Moa) MOA
    [222] is one of the common open source frameworks for data stream mining and possessing.
    MOA is written in Java related to the WEKA project that developed at the University
    of Waikato, New Zealand. It includes a set of learners and stream generators that
    can be used from the GUI, the command-line, and the Java API. MOA supports a variety
    of ML algorithms for classification, regression, clustering, outlier detection,
    as well as some tools for evaluation [223]. 7) Caffe Caffe [224] is a DL framework,
    it is primarily developed with the consideration of expression, speed, and modularity.
    It utilizes the machine-vision library for fast convolutional networks from Matlab,
    which has been ported to C and C++. It is developed by the Berkeley vision and
    learning center and by the community contributors. In Caffe, multimedia scientists
    and practitioners have an organized and state-of-the-art toolkit for DL algorithms.
    Caffe was originally developed for machine-vision, it has been utilized and improved
    by users in other fields such as robotics, neuroscience, speech recognition, and
    astronomy. In addition, it supports Python and MATLAB code bindings. Caffe offers
    image classification with state of the art CNN algorithm. Caffe is mainly utilized
    as a source of pre-trained models hosted on its Model Zoo site. Caffe is useful
    for performing image analysis using CNNs and regional analysis within images using
    RCNNs. The performance and processing speed of Cafee make it as one of the most
    utilized platforms for research experiments and industry deployment. It has the
    capability to process over 60 million images per day with a single NVIDIA K40
    GPU. Caffe has already been applied in many research projects at UC Berkeley and
    other universities, performing very well in many tasks such as object classification,
    object detection, and Learning Semantic Features. It provides a complete and well-documented
    toolkit for training, testing, tuning, and deploying models. Caffe utilizes a
    large repository of pre-trained neural network models called the Model Zoo, which
    is suitable for a variety of common image classification tasks [225]. 8) Azure
    Ml Microsoft first launched Azure ML [226] as a preview in June 2014. Azure ML
    enables users to create and train models, then convert those models into APIs
    that can be applied to other services. Users can get up to 10GB of storage per
    account for model data, although they can also connect their own Azure storage
    to the service for larger models. programmers can use either the R or Python programming
    language for developing with Azure services. Users can purchase ML algorithms
    from Microsoft Azure Marketplace, they can also obtain free algorithms from the
    community gallery that has been created by Microsoft to share ML algorithms with
    each other. They share many of predictive analytics of personal assistant in Windows
    Phone called Cortana. Azure ML also utilizes solutions from Xbox and Bing. Azure
    currently supports different features and capabilities such as run Hadoop over
    Ubuntu Linux on Azure, it also supports hosting Storm for analyzing data streams.
    In addition, it allows developers to connect.NET and Java libraries to Storm.
    Azure ML studio supports a variety of modules for training, scoring, and validation
    processes. Azure ML comes with a large library of algorithms for predictive analytics.
    The popular families of algorithms are regression, anomaly detection, clustering,
    and classification. D. Real-Time Big Data Analytics Tools for SBS Several applications
    need to have real-time data analysis for stream data and waiting for the information
    to be archived and then analyzed is not practical for these type of applications.
    Generally, Stream processing is intended to analyze a massive amount of data and
    act on real-time streaming data utilizing continuous queries such as SQL-type
    queries to handle streaming data in real-time utilizing scalable, available and
    fault-tolerant architecture. Essential to stream processing is Streaming Analytics.
    More and more tools offer the possibility of real-time streaming data. The following
    presents some of the common and widely used options. 1) Apache Storm Storm [227]
    is an open source distributed real-time data processing framework that provides
    massively scalable event collection. The initial release was on 17 September 2011,
    it was created by Nathan Marz and the team at BackType, and is now owned by Twitter.
    Storm can easily process unlimited streams and with any programming language.
    It has the capability to process over one million tuples per second per node with
    a highly scalable, fault-tolerant, and reliable architecture. Storm is written
    in Java and Clojure. Trident is a high-level abstraction layer for Storm, can
    be utilized to accomplish state management persistence. Storm is a system of complex
    event processing. This type of solution allows companies to respond to the arrival
    of sudden and continuous data (information collected in real-time by sensors,
    millions of comments generated on social networks such as Twitter, WhatsApp and
    Facebook, bank transfers etc.). Some of the specific applications of Storm include
    customer service management in real-time, operational dashboards, data monetization,
    cybersecurity analytics, and threat detection. 2) Apache Kafka Kafka [228] is
    a fast, scalable, fault-tolerant and durable open-source message broker project
    that originally developed by LinkedIn, and subsequently open sourced in early
    2011 and released by Apache Software Foundation on 23 October 2012. Kafka is written
    in Scala. It supports a variety of use case scenarios with a focus on high throughput,
    reliability, and scalability characteristics. For example, it can message sensor
    data from heating and cooling equipment in office buildings. 3) Oracle In 2013,
    Oracle started utilizing Oracle Enterprise Manager that includes Oracle Big Data
    Appliance to manage all of its big-data technologies. Oracle has also produced
    multiple low-latency technologies for Oracle Fast Data components includes Oracle
    Event Processing, Coherence, NoSQL, Business Analytics, and Real-Time Decisions.
    Oracle Event Processing provides solutions for building applications to filter,
    correlate and process events in real-time. It supports IoT services by delivering
    actionable insight on data streaming from a variety of data sources in real-time
    [229]. Oracle Stream Explorer (OSX) and Oracle R Enterprise (ORE) aim to support
    equipment monitoring applications for the systems that made of a variety of components
    through sensors, anomaly detection and failure prediction of such systems. ORE
    [230] is utilized to handle low-frequency streams in batch mode, while OSX handles
    the high-frequency streams making real-time predictions and sends the results
    back to user applications that are communicating with the output channels. OSX
    [231] is a middleware platform has the capability to process large amounts of
    streaming data in real-time for a variety of streaming data applications, from
    a multitude of sources like sensors, social media, financial feeds, etc. It streamlines
    real-time data delivery into most popular big data solutions, including Apache
    Hadoop, Apache HBase, Apache Hive, Apache Flume, and Apache Kafka to facilitate
    improved insight and timely action. Oracle Real-Time Decisions [232] is a decision
    management platform with self-learning that determines optimized recommendations
    and actions with messaging, imagery, products, and services within business processes.
    4) Amazon Kinesis Streams Amazon Kinesis [233] is a platform for collecting and
    processing large streams of data on AWS in real-time, AWS launched Kinesis in
    November of 2013, offering powerful services for loading and analyzing streaming
    data, in addition, it provides custom streaming data applications for specialized
    needs. Sometimes Terabytes of data per hour can be generated - that need to be
    collected, stored, and processed continuously from various application services
    such as web applications, mobile devices, wearables, industrial sensors etc. Typically,
    Amazon Kinesis Streams application can use the Amazon Kinesis Client Library and
    reads data from an Amazon Kinesis stream as data records. These applications can
    run on Amazon EC2 instances. 5) Apache Spark Streaming Apache Spark [234] is an
    open-source platform for real-time data processing, it can implement using four
    different languages: Scala, the syntax in which the platform is written; Python;
    R; and Java. Spark Streaming is an extension of core Spark API. It allows building
    fault-tolerant processing of real-time data streams. Spark Streaming allows the
    processing of millions of data among the clusters, and Spark SQL which makes it
    easier to exploit the data through the SQL language. Spark Streaming divides the
    live data stream into a predefined interval of batches, then handles each batch
    of data as Resilient Distributed Datasets (RDDs). Then we can apply operations
    like map, reduce, join, window etc. to process these RDDs. The last results of
    these operations are then returned in batches. Spark Streaming can be utilized
    for a variety of application such as real-time monitoring and analyzing of application
    server logs. These logs messages are considered time series data. Examples of
    such type of data are sensor data, weather information, and clickstream data.
    This data can also be utilized for predicting future states based on historical
    data. Apache assures a computation speed that performs the operations quicker
    by 100 times than what is currently offered by Hadoop MapReduce in memory, and
    10 times better than in disc. Spark can be executed either in independent cluster
    mode or in the cloud on different frameworks such as Hadoop, Apache Mesos, and
    EC2. In addition, Spark can access numerous databases such as HDFS, Cassandra,
    HBase or S3, Amazon’s data warehouse. 6) Apache Flume Flume [242] is a distributed,
    reliable and open-source log data aggregation framework. Apache Flume is applied
    in many applications ranging from log data aggregation, to transport massive quantities
    of event data including network traffic data, social-media-generated data, email
    messages and pretty much any data source possible into the HDFS. The architecture
    of Flume is simple and flexible, it is also robust and fault tolerant with tunable
    reliability mechanisms for failover and recovery. log manufacturing operations
    is an example of Flume’s application. The a massive log file data can stream through
    Flume. The log file data can be stored in HDFS and analyzed by utilizing Apache
    Hive. 7) Apache Samoa SAMOA [243] is a distributed streaming ML framework that
    contains programming abstractions for distributed streaming ML algorithms. Its
    name stands for Scalable Advanced Massive Online Analysis and was originally developed
    at Yahoo! Labs in Barcelona in 2013 and has been part of the Apache incubator
    since late 2014. SAMOA is both a platform and a library. It enables the algorithm
    developer to reuse their code to run on different underlying execution engine.
    In addition, it supports plug-in modules to port SAMOA to different engines. By
    utilizing SAMOA, the ML algorithm developer does not need to worry about the complexity
    of underlying distributed stream processing engines. They can run it locally or
    utilizing one of stream processing engines, such as Storm, S4, or Samza. SAMOA
    provides the ML algorithms for a variety of tasks including classification, regression,
    clustering, along with boosting, and bagging for ensemble learning. Additionally,
    it offers a platform for the implementation of these ML algorithms, as well as
    a framework that enables the user to write their own distributed streaming algorithms.
    For example, there is CluStream for clustering, as well as Vertical Hoeffding
    Tree, which uses vertical parallelism on top of the decision tree, or Hoeffding
    tree for classification. There is also Adaptive Model Rules Regressor, which uses
    both vertical and horizontal parallelism implementations for regression [244].
    A summarized comparison between various real-time data analytics tools is provided
    in Table 7. TABLE 7 Comparison Between Real-Time Data Analytics Tools TABLE 8
    Categorized Applications of SB SECTION V. Applications of Ml-Based Context-Aware
    Systems for SBs The potential uses of ML in an SB environment can be divided into
    four categories: detection, recognition, prediction, and optimization [79]. We
    discuss these categories separately next. In general, detection is the extraction
    of particular information from a larger stream of information. Many detection
    applications in SBs such as fire detection, leak detection, and anomaly detection
    [245]. Many different applications have been studied by researchers in activity
    recognition in SBs; examples include fitness tracking, health monitoring, fall
    detection. [246]. The goal of recognition is to classify an object or an event
    to a predefined category. It focuses on how to make computer programs perform
    intelligent and human-like tasks, such as the recognition of an object from an
    image. The goal of prediction is to determine the temporal relations’ model between
    specific events to predict what will happen in the near future. Prediction can
    be either for classification or regression problems [247]. Event prediction when
    the goal is to predict the most probable event or subsequent activity is an example
    of classification problems, while latency prediction when the output takes on
    continuous values is an example of the regression problem. The general steps of
    applying ML processes to predict an event in an SB environment is shown in Figure
    9. FIGURE 9. Steps involved in applying ML models in an SB environment. Show All
    The goal of optimization, on the other hand, is to maximize the long-term profits
    by making proper decisions in different situations. reinforcement learning can
    be utilized with these problems. Some optimization problems can be managed as
    prediction problems such that the profits for different actions are predicted
    and the action with the highest profit would be selected. Decision making is the
    most common case of the optimization problem. It takes to consider a variety of
    variables and solving deals between the profits of different locations of the
    environment [248]. Smart buildings are becoming increasingly supplied with a variety
    of sensors that measure different parameters, and data from these sensors is analyzed
    by ML algorithms and used for a range of services and applications for the activities
    of the building occupants. SBs go far beyond saving energy and contributing to
    sustainability goals. The application and services provided by the SBs can be
    both residential and commercial ranging from e-health, e-marketing, intelligent
    car parking system, intelligent transportation system, automation, and logistics
    services. Figure 10 shows the taxonomy of basic domains of SB services. Lighting
    services are associated with the well-being of occupants depending on their activities
    in SBs that have sensors to conserve energy when lights are not needed. The power
    and electrical system may have onsite renewable energy sources to provide a percentage
    of power consumption in SBs. Waste management is related to the activities and
    actions required to collect, separate, transport, together with monitoring and
    regulation of waste management system in SBs. The security is related to managing
    automated locks, biometric devices as well as video surveillance systems in SBs.
    The communications center is related to connecting sensors and actuators in the
    building as well as the operations control center. The operations control center
    supports system analytics and decision making for the operations. Visual interfaces
    provide a dashboard that shows the status of SB services and human operators to
    better manage the building resources. These interfaces also allow the occupants
    to set up their optimal parameters for comfort and productivity improvement on
    daily activities. HVAC stands for the humidity, ventilation and air conditioning
    system, intended for the convenience of occupants that have effective interaction
    with the environment. Parking services aim to minimize the area and volume required
    for parking cars. It could support car sharing, electric vehicles and a place
    for bicycles as well. Finally, the water management services aim to increase savings
    and manage water reclamation for flushing, landscaping and air-cooling systems.
    FIGURE 10. SB services taxonomy. Show All Based on our literature survey, we have
    identified that the application areas of SBs can be elderly care, comfort/entertainment,
    security/safety, energy management, and other projects. In the rest of the section,
    we will briefly describe the major domains in providing the following SB services:
    (1) care of the elderly population; (2) enhancing energy efficiency; (3) enhancing
    comfort or providing entertainment; (4) enhancing safety and security; and (5)
    miscellaneous projects. a: Elderly Population’s Home Care SB technology such as
    sensors, voice activation, GPS, Bluetooth, cellular connectivity via mobile phones,
    smartphone monitoring apps and sophisticated computers can be especially useful
    for elderly or disabled individuals who live independently. Elderly persons can
    take the advantages of such technologies (e.g., monitoring system, emergency system,
    dangerous kitchen appliance detection, fall detection), to maintain a safe and
    healthy lifestyle while living independently [56], [249]. Smart technology in
    the SBs aims to collect real-time information on human daily activity and then
    learn of their personal patterns. ML techniques have the potential for a very
    wide array of new innovations in healthcare that will be transformative for both
    providers and their patients. Whenever a deviation from the norm patterns is detected,
    SB systems send the alerts to family members and the caregivers in order for them
    to take urgent response action. By using big data analytics and ML algorithms
    it is possible to analyze large-scale data contained in electronic medical records—e.g.,
    to learn automatically how physicians treat patients including the drugs they
    prescribe [250]. Some prominent projects in this space are described next. Chernbumroong
    et al. [56] proposed an activity recognition and classification approach for detecting
    daily living activities of the elderly people applying SVM. They used wrist-worn
    multi-sensors namely accelerometer, temperature sensor and altimeter for detection
    basic five activities namely feeding, grooming, dressing, mobility, and stairs.
    And other instrumental activities such as washing dishes, ironing, sweeping and
    watching TV. Taleb et al. [251] proposed a middleware-level solution that integrates
    both the sensing and the monitoring services for assisting elders at smart homes
    environment. The appliances used in the proposed framework include RFID readers
    that cover of the whole building, sound sensors, video cameras, smart door lock,
    microphone and speakers for interaction with the system. CAALYX [252] is a European
    Commission-funded project that supports older people’s autonomy and self-confidence.
    The service is formed of three distinct subsystems including elderly monitoring
    subsystem, home monitoring subsystem and the caretaker’s monitoring subsystem.
    The system delivers a high priority message to an emergency service including
    the geographic position and clinical condition of the elder user. EasyLine+ [253]
    project funded by the European Commission to support elderly people with or without
    disabilities in carrying out a longer independent life at home. The system uses
    a neural network, assistive software, and a variety of sensors such as illumination
    sensor, temperature sensor, door sensors, and RFID giving the capacity of controlling
    the white goods. Hossain et al. [254] proposed a cloud-based cyber-physical multi-sensory
    smart home framework for elderly people that supports gesture-based appliance
    control. Suryadevara et al. [255] proposed a model for generating sensor activity
    pattern and predicting the behavior of an elderly person using household appliances.
    b: Energy Efficiency When temperatures rise or fall in various zones of your home,
    heaters, air conditioners, fans, and other devices will turn on or off (or increase
    or decrease in speed or temperature). In order to perform an efficient energy
    consumption of the supply systems, a significant step that is necessary by analyzing
    the way that current energy consuming system is using in buildings [256]. In the
    last decade, analysis of the energy efficiency in the smart spaces has received
    increasing attention. Various approaches for energy efficiency have been proposed
    utilizing predictive modeling based on profile, climate data, and building characteristics
    [32], [257]. For instance, lights throughout your home might turn on and off depending
    on the time of day. In the past, various attempts have been made to improve energy
    efficiency in the SBs through the use of smart metering and sensor networks at
    the residential level facilities. It is a fact that these types of infrastructure
    are becoming more widespread but due to their variety and size, they cannot be
    directly utilized to make conclusions that help to improve the energy efficiency.
    ML approaches will be the key to the handling of energy efficiency problem in
    SBs. Learning about the occupants’ consumption habits is capable of generating
    collaborative consumption predictions that help the occupant to consume better
    [258]. Some prominent projects in this space are described next. Reinisch et al.
    [259] developed an optimized application of AI system for SB environment. The
    system focuses on some capabilities like ubiquity, context awareness, conflict
    resolution, and self-learning features. The system operates on a knowledge base
    that stores all the information needed to fulfill the goals of energy efficiency
    and user comfort. Jahn et al. [260] proposed an energy efficiency features system
    built on top of a Hydra middleware framework [261]. The system provides both,
    stationary and mobile user interfaces for monitoring and controlling a smart environment.
    Pan et al. [262] proposed an IoT framework that uses smartphone platform and cloud-computing
    technologies to improve the energy efficiency in SBs. They built an experimental
    testbed for energy consumption data analysis. Fensel et al. [263] proposed the
    SESAME-S project (SEmantic SmArt Metering - Services for energy efficient houses).
    The project focuses on designing and evaluating the energy efficiency services
    to enable the end-consumers in making the right decisions and controlling their
    energy consumption. The system combines a variety of smart building components,
    such as smart meters, a variety of sensors, actuators, and simulators that can
    integrate virtual appliances such as the washing machine. Vastardis et al. [264]
    proposed a user-centric smart-home gateway system architecture to support home-automation,
    energy usage management, and smart-grid operations. The gateway is supported by
    ML classification algorithms component such as C4.5 and RIPPER that is able to
    extract behavioral patterns of the users and feed them back to the gateway. Irrigation
    systems monitoring and smart watering system that keep track of rain and soil
    conditions and irrigate appropriately are a very cost-effective way to reduce
    outdoor water consumption. Investment in water management software and services,
    water-efficient plumbing, and irrigation management delivers economic and sustainability
    benefits. Water conservation and management is an example of such benefits [265].
    c: Comfort/Entertainment One of the main goals of SB research is to facilitate
    user daily life activities by increasing their satisfaction and comfort level.
    SBs supports automated appliance control and assistive services to offer a better
    quality of life. They utilize context awareness techniques to optimize the occupant’s
    comfort based on predefined constraints of conditions in a building environment.
    Typical examples of comfort services include lighting, background music, automation
    of routine activities, advanced user interfaces based on voice or gestures, etc.
    [30]. Other services related to comfort services in SB environments are Indoor
    Climate Control and Intelligent Thermostat [265]. Indoor Climate Control: Measurement
    and control of temperature, lighting, CO2 fresh air. In the SB environment, HVAC
    systems play an essential role in forming indoor environmental quality. Typically,
    HVAC systems are produced not only to heat and cool the air but also to draw in
    and circulate outdoor air in large buildings [266]. Kabir et al. [267] present
    a context-aware application that provides the service according to a predefined
    preference of a user. They use the KNN classifier to infer the predefined service
    that will maximize the user’s comfort and safety while requiring minimum explicit
    interaction of the user with the environment. Ahn et al. [268] proposed a deep
    learning model that estimates periodically the atmospheric changes and predict
    the indoor air quality of the near future. d: Safety/Security As the SB technology
    progresses, the role of ML and deep learning in security and connected devices
    will increase. Deep learning will continue to help gain insights using big data
    that were previously inaccessible, particularly in image and video. Advanced technologies
    such as behavioral analysis and ML to detect, categorize, and block new threats
    will be beneficial. In a traditional home system, as soon as a fire is detected
    the Fire/smoke detectors are activated and start sending a fire alarm. However,
    SB can perform much better than the traditional system. It not only sends an alarm
    but also turns on the light only in the safest route and guides the occupants
    of the building out, as well as it will unlock the doors and windows for smoke
    ventilation, turn off all the devices and call the nearest fire service station.
    Other than this, it can take video of the areas surrounding the building, provide
    the status of window breakage alarms, and automatically lock all the doors and
    the windows when the last person of the house leaves [30]. The main services for
    security and safety in SBs are: Perimeter Access Control, Liquid Presence, Intelligent
    Fire Alarm, Intrusion Detection, and Motion Detection Systems [265]. Perimeter
    Access Control service provides control to restricted areas and detects non-authorized
    users that access the areas. Access card provides a variety of solutions that
    allow staff members, vendors or contractors to access specific areas at specific
    times you designate. The same access card can also be utilized to check employee
    attendance. In addition, there is widespread use of biometric technology including
    fingerprint, facial recognition, and iris scans [269]. Additionally, liquid presence
    detection technique has been utilized in data centers, warehouses, and sensitive
    building grounds to prevent breakdowns and corrosion in such areas [270]. Intelligent
    Fire Alarm and its corresponding safety systems are crucial parts of an intelligent
    building. It is a system with multi-function sensors (i.e., chemical gas sensors,
    integrated sensor systems, and computer vision systems) These sensors enable measuring
    smoke and carbon monoxide (CO) levels in the building. They also can give warnings,
    howling alarms, and tell with a human voice about the place and level of smoke
    and CO. In addition, they can give a message on a smartphone if the smoke or the
    CO alarm goes off [271]. Examples of intrusion detection systems including window
    and door opening detection and intrusion prevention [265]. An infrared motion
    sensor is utilized to detect the motion in a specific area in the building. This
    sensor can reliably send alerts to the alarm panel, with the system implementing
    algorithms for adaption to environmental disturbances and reducing any false alarms
    [265]. Image recognition solution can be used in security software to identify
    people, places, objects, and more. It can also be used to detect unusual patterns
    and activities. Clarifai [272] specializes in a field of ML known as “computer
    vision” that teaches computers to “see” images and video. Clarifai’s technology
    can play a key role in security surveillance and at present, the company works
    only with home security. Each image is processed on a pixel by pixel basis through
    convoluted neural networks. Bangali and Shaligram [273] proposed a home security
    system that monitors the home when the user is away from the place. The system
    is composed of two methods: one uses a web camera to detect the intruder—whenever
    there is a motion detected in front of the camera, a security alert in terms of
    sound and an email is delivered to the occupant. And the other one is based on
    GSM technology that sends SMS. A home security system that sends alert messages
    to the house owner and police station in case of illegal invasion at home is proposed
    in [274]. The system consists of different sensor nodes as the input components
    while the output components respond to the signal received from the input components.
    The sensor nodes consist of a thief alarm, presence detecting circuit, and the
    break-in camera. Zhao and Ye [275] proposed a wireless home security system that
    utilizes low cost, low power consumption, and GSM/GPRS. The system has a user
    interface and it can respond to alarm incidents. e: Miscellaneous Projects CASAS
    [178] is a project by Washington State University that provides a noninvasive
    assistive environment for dementia patients at SBs. The project focuses on three
    main areas for SBs: medical monitoring, green living, and general comfort. CASAS
    project comprises of three layers: physical layer, middleware layer, and software
    applications layer. Aware Home Research Initiative (AHRI) [276] is a project that
    has constructed by a group at the Georgia Institute of Technology for SB services
    in the fields of health and well-being, digital media and entertainment, and sustainability.
    AHRI utilizes a variety of sensors such as smart floor sensors, it also utilizes
    assistive robots for monitoring and helping the elderly. House_n [277] is a multi-disciplinary
    project leads by a group of researchers at the MIT. The main objective of the
    project is to facilitate the design of the smart home and its associated technologies,
    products, and services. The home is supplied with hundreds of various sensors
    that are installed almost in every part of the home that and being utilized to
    develop user interface applications that enable the users to control and monitor
    their environment, save resources, remain mentally and physically active, and
    stay healthy. The EasyLiving project [278] at Microsoft Research is concerned
    with the development of a prototype architecture and technologies to aggregate
    diverse devices into a coherent user experience for intelligent environments.
    The EasyLiving project was designed to provide context-aware computing services.
    The project utilizes a variety of sensors and cameras to track and recognize the
    human activities in the room by using the geometric model of a room and taking
    readings from sensors installed in the room. The Gator Tech Smart House project
    [279] is a programmable space specifically designed for the elderly and disabled
    developed by The University of Florida’s mobile and pervasive computing laboratory.
    The project’s goal is to create SB environments that can sense themselves and
    their residents. The project provides special cognitive services for the residents
    such as mobility, health, and other age-related impairments. A generic middleware
    is utilized to integrate system components in order to maintain a service definition
    for every sensor and actuator in the building. The components of the middleware
    including separate physical, sensor platform, service, knowledge, context management,
    and application layers [280]. Other well-known smart home projects include DOMUS
    [281] which is a research project, by the University of Sherbrooke in Canada,
    that supports mobile computing and cognitive assistance in smart buildings. The
    project aims to assist people suffering from Alzheimer’s type dementia, schizophrenia,
    cranial trauma, or intellectual deficiencies. Adaptive House project [136] at
    The University of Colorado has constructed a prototype system that is equipped
    with a variety of sensors that provide different environmental information including
    sound, motion, temperature, light levels. In addition, actuators that control
    the space and water heaters; lighting units, and ceiling fans. In Asia, there
    are also some other smart building projects have been developed, such as “Welfare
    Techno House” project, which is equipped with different sensors such as ECG, body
    weight, and other temperature measured indicators [282]. Ubiquitous Home project
    [283] is another smart building project in Japan, which utilizes RFID, PIR, pressure
    sensors, as well as cameras and microphones for monitoring elderly adults. Summary:
    Recently, several different context-aware and ML techniques have been utilized
    to support SB services. ML-based approaches are capable to perform better prediction
    and adaptation than others. The philosophy behind ML is to automate the learning
    process that enables algorithms to create analytical models with the support of
    available data. ML can be applied in different learning styles including supervised
    learning, unsupervised learning, semi-supervised learning, as well as reinforcement
    learning when the learning is the result of the interaction between a model and
    the environment. The general uses of ML for SB services are detection, recognition,
    prediction, and optimization. In the section, we also talked about how to acquire
    the context from multiple distributed and heterogeneous sources and the techniques
    for modeling and processing such context to be used in the application services
    of SBs. We also talked about the most used tools and platforms ML and others for
    real-time data analytics by ML community to efficiently process and learn from
    big data. Without such ML tools, one would have to implement all of the techniques
    from scratch requiring expertise in the techniques and in efficient engineering
    practices. SECTION VI. Open Issues and Future Research Directions Research on
    SBs has made great strides in recent years, but a number of challenges remain.
    We present some major challenges related to SBs in this part of the work. These
    challenges will channelize the research directions for future SBs. A. Security
    and Privacy Wherever there is an interconnection of two systems or networks (wired
    or wireless), there are issues of security and privacy and the same is true in
    the case of SB. Security is an essential role in SB environments. Any SB application
    should ensure the confidentiality and integrity of data. Access control must be
    included in SB systems, for instance, the unauthorized users should not be able
    to disconnect the alarm system by connecting the pervasive system [284]. There
    is a massive amount of streaming that is collected from the various installed
    sensors and appliances, such data needs to be processed and stored. Hence, cloud
    computing services can be utilized for this purpose. However, with all of this
    data that is transmitted, the issue of losing the privacy increases. Therefore,
    different encryption techniques are needed to preserve personal privacy [285].
    There are specific challenges related to the user’s privacy including challenges
    related to the data privacy of personal information and the privacy of the individual’s
    physical location and tracking. That needs for privacy enhancement technologies
    and relevant protection laws and tools for identity management of users and objects
    [286]. The recent trend of ML research has focused on handling security and privacy
    issues in SB environments. There are different security-related services have
    utilized ML techniques, such as determining safe device behavior by detecting
    and blocking activities and potentially harmful behavior [287]. ML techniques
    have the potential to reduce security gap because of their capability to learn,
    identify and detect the users’ habits and behaviors. Consequently, it can detect
    the abnormal behaviors predicting risks and intrusions before they happen. For
    instance, ML models learn the routine of the users, such as the time they get
    home or go to sleep. These models can suggest rules based on those detected behaviors
    from all connected devices [288]. B. SBS and Context-Aware Computing In the SB
    environment, there exists a massive amount of raw data being continuously collected
    about the various human activities and behaviors. It is important to develop techniques
    that convert this raw data into valuable knowledge [289]. Context awareness and
    ML techniques are expected to provide great support to process and store big data
    and create important knowledge from all this data [290]. The process of data interpretation
    and knowledge extraction has the following challenges including addressing noisy
    real-world data and the ability to develop further inference techniques that do
    not have the limitations of traditional algorithms. Usually, It is very complex
    to formalize and model the contextual information related to human behaviors in
    a standard way due to the complex physiological, psychological and behavioral
    aspects of human beings [291]. The humans communicate through rich languages as
    well as gestures and expressions. Modern ubiquitous computer systems lack an automatic
    mechanism of inferring information as the humans do. New research is necessary
    to raise human activities and behaviors recognition to understand the complex
    dependencies between the apps and humans [292], [293]. The context-aware prompting
    systems have essential applications in SBs such as emergency notifications, medication
    prompting, heart rate monitoring, generation of agenda reminders, and weather
    alerts. However, issuing prompts for all detected errors can possibly be false
    positives, and consequently, lead to annoyance and sometimes prove to be unsafe
    for specific activities. ML methods can be used for an accurate and precise prediction
    when a person faces difficulty while doing daily life activities [294]. C. Personal
    Data Stream Management in SBS The data streaming management system is able to
    process and transfer raw data collected from a variety of sensors to information,
    it is also able to fuse this information to a feature and directly process features
    [295]. While the data processing for a single SB is simple, it is more complex
    when processing the data from multiple SBs, because there are different people
    that tend to share less common interests and have opposing interests concerning
    the processed data [296]. The simple sensors in an SB environment can detect different
    events related to temperature, motion, light, or weather. Moreover, other appliances
    like a television and a telephone can also send their status or other data as
    events. All this data from different sensors can be used by SB services to detect
    specific states and send a request to some actuators according to specific predefined
    rules, for instance, turn on the light if the television is used [297]. However,
    this approach is not generalizable in case of a group of people residing in the
    same building. Although it can work well for one certain person when personal
    preferences can be automatically learned for an individual person, therefore each
    of the residents has to define their own set of rules [298]. Because of the increasing
    number of sensors that produce data streams, the traditional analyzing and processing
    techniques of these data streams are mostly impractical now [299]. Despite the
    availability of new tools and systems for handling massive amounts of data continuously
    generating by a variety of sensors in SBs, however, the real promise of advanced
    data analytics to still lies beyond the realm of pure technology [296]. In [300]
    discuses research challenges for data streams of real-world applications. They
    analyze issues concerning privacy, timing, preprocessing, relational and event
    streams, model complexity and evaluation, availability of information, and problems
    related to legacy systems. D. Big Data Challenges in SBS Nowadays, a variety of
    sensing technology in the SBs can be utilized to collect a massive amount of heterogeneous
    data at a reasonable cost. Typically, hundreds of thousands of transactions can
    be generated by a single SB every day. The process of storing this data over the
    long-term is challenging [258]. We can imagine the challenges and opportunities
    that the companies or government will encounter in the future to manage incoming
    data from dozens of SBs. This new data could provide us with more contextual information
    that consequently leads to much better services to the occupants [301]. In the
    world of big data, despite the availability massive amount of data, however, it
    is not necessarily easy to obtain valuable information from this data utilizing
    the traditional approaches like trial and error to extract meaningful information
    from this data. Analyzing these massive amounts of data requires new technologies
    to store, organize, and process big data effectively, it needs high-performance
    processors that enable uncovering the insights in big data. It also requires flexible
    cloud computing services and virtualization techniques, as well as software such
    as Apache Hadoop and Spark [302]. It requires providing appropriate ML techniques
    which differ from the traditional approaches for effective and efficient solution
    of the above issues. For these reasons, researchers have recently started to think
    about the problems and opportunities resulting from the adoption of big data in
    SB environments [303], [304]. The information extracted from this big data has
    significant value and could greatly contribute in the future of SBs as assistive
    tools and for better services delivery. That is why it is necessary that the researchers
    start to analyze and think about the solutions for the current and future challenges
    of big data in SBs [305]. E. Interoperability Interoperability means that two
    (or more) systems work together unchanged even though they were not necessarily
    designed to work together. When equipment, devices or appliances having different
    communication and networking technologies can communicate effectively, interoperability
    is satisfied. It is a challenge to ensure that an SB that has various components
    will be intelligible. Typically, each of these components might have been produced
    by different vendors, each of which may have created under different design constraints
    and considerations [306]. Therefore it becomes essential to satisfy interoperability
    so that a number of heterogeneous communication and networking technologies could
    coexist in various parts of SBs. For example, an energy management system may
    use Wi-Fi and ZigBee for communication purposes. A lot of work can be done in
    this context [307]. F. Reliability We can expect that the reliability is one of
    the main concern of occupants and developers of SB systems. A variety of appliances
    and devices present in SB such as televisions, microwave, washing machines etc.
    are required exceedingly to be reliable. Achieving expected levels of reliability,
    especially when linked with communication technologies utilized with these devices
    that may be expected in SBs, is a great challenge. There are different reasons
    for these challenges differences in technological approaches, regulations, development
    culture, and the expectations of the market [306]. G. Integration The key to a
    successful SB implementation is integration: linking building systems such as
    lighting, power meters, water meters, pumps, heating, and chiller plants together
    using sensors and control systems, and then connecting the building automation
    system to enterprise systems. Integration allows executives to gain smart-building
    benefits, both in new construction and by gradually transforming existing buildings
    into SBs. What these SBs have in common is integration. Generally, the integration
    in SB systems brings a range of benefits from energy savings to productivity gains
    to sustainability. The SB systems can be attached to enterprise business systems
    to add another level of intelligence that enhances decision-making and improves
    building performance [2]. However, integrating multiple systems is very challenging
    as each individual system has its own assumptions, strategies to control the physical
    world, and semantics. As an example of integrating two systems in SB, assume a
    system that is responsible for energy management, and another system for health
    care are running concurrently. In this case, the integrated system should not
    turn off medical appliances to save energy while they are being used as suggested
    by the health care system [292]. As a future perspective for SBs, You will wake
    up to the sound of the alarm, at the same time the available sensors will be aware
    that you are waking up. The other sensors such as light sensors will automatically
    turn on the light in the building, while the thermostat will warm the area that
    you are about to use in the building. Your coffee will start to brew, you will
    also get a notification on your phone about the weather. The other sensors in
    the kitchen and refrigerator will remind you with a list of items that you will
    need to pick up on your way from your workplace to home to make dinner. When you
    leave your house, you can press a button from your phone to self-drive your car
    out of the garage. After that, the security system will start monitoring and controlling
    the home. Such the doors will automatically lock. Appliances will switch to an
    energy-saving mode. When the home sensors sense utilizing geofencing technology
    that you are way back home, it will get ready again for your arrival, the thermostat
    will warm things up, the garage door will open as you pull up, and your favorite
    music will start to play when you walk in [141]. Summary: Although the recent
    researches have been done in the SBs field, there is a need for a lot more efforts;
    however, we believe that SBs are possible for the mass market in the near future.
    The main challenges and future research directions of this eld can be summarized
    as follows: User context in term of behavior and intention should be studied and
    respected whenever possible; Further research is needed into context-aware prompting
    systems, personal data streaming and big data analysis of occupants in SB environment;
    Some of the other challenges like the interoperability, reliability, and integration
    still require more attention. SECTION VII. Conclusions The promise of smart buildings
    (SBs) is a world of appliances that anticipate your needs and do exactly what
    you want them to at the touch of a button. Since SBs and their inhabitants create
    voluminous amounts of streaming data, SB researchers are looking towards techniques
    from ML and big data analytics for managing, processing, and gaining insights
    from this big data. This paper reviewed the most important aspects of SBs with
    particular focus on what is being done and what are the issues that require further
    research in ML and data analytics domains. In this regards, we have presented
    a comprehensive survey of the research works that relate to the use of ML and
    big data particularly for building smart infrastructure and services. Although
    the recent advancements in technologies that make the concept of SBs feasible,
    there are still a variety of challenges that limit large-scale real-world systems
    in SBs field. Addressing these challenges soon will be a powerful driving force
    for advancements in both industrial and academic fields of SB research. ACKNOWLEDGMENT
    The statements made herein are solely the responsibility of the authors. Authors
    Figures References Citations Keywords Metrics More Like This MIS-IoT: Modular
    Intelligent Server Based Internet of Things Framework with Big Data and Machine
    Learning 2018 IEEE International Conference on Big Data (Big Data) Published:
    2018 Framework for Mobile Internet of Things Security Monitoring Based on Big
    Data Processing and Machine Learning IEEE Access Published: 2018 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08754678.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Leveraging Machine Learning and Big Data for Smart Buildings: A Comprehensive
    Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/ispa/iucc.2017.00203
  analysis: '>'
  authors:
  - Lijia Sun
  - Yanxiang Yang
  - Jiang Hu
  - Dana Porter
  - Thomas H. Marek
  - Charles Hillyer
  citation_count: 21
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2017 IEEE International Sympo...
    Reinforcement Learning Control for Water-Efficient Agricultural Irrigation Publisher:
    IEEE Cite This PDF Lijia Sun; Yanxiang Yang; Jiang Hu; Dana Porter; Thomas Marek;
    Charles Hillyer All Authors 18 Cites in Papers 982 Full Text Views Abstract Document
    Sections I. Introduction II. Background III. Previous Works IV. Problem Model
    and Formulation V. Reinforcement Learning-Based Irrigation Control Show Full Outline
    Authors Figures References Citations Keywords Metrics Abstract: Modern sensor
    technologies, internet and advanced irrigation equipment allow a relative precise
    control of agricultural irrigation that leads to high water-use efficiency. However,
    the core control algorithms that make use of these technologies have not been
    well studied. In this work, a reinforcement learning based irrigation control
    technique is investigated. The delayed reward of crop yield is handled by the
    temporal difference technique. The learning process can be based on both off-line
    simulation and real data from sensors and crop yield. Neural network based fast
    models for soil water level and crop yield are developed to improve the scalability
    of learning. Simulations for various geographic locations and crop types show
    that the proposed method can significantly increase net return considering both
    crop yield and water expense. Published in: 2017 IEEE International Symposium
    on Parallel and Distributed Processing with Applications and 2017 IEEE International
    Conference on Ubiquitous Computing and Communications (ISPA/IUCC) Date of Conference:
    12-15 December 2017 Date Added to IEEE Xplore: 28 May 2018 ISBN Information: DOI:
    10.1109/ISPA/IUCC.2017.00203 Publisher: IEEE Conference Location: Guangzhou, China
    SECTION I. Introduction Irrigation management plays a critical role in determining
    crop yield and water use efficiency. Crop yield largely depends on sufficient
    water supply. Yet, fresh water resource is limited. Ideally, one likes to irrigate
    the exact amount of water that is needed by crop, no more and no less. In history,
    such precise irrigation control was very difficult, if not impossible. Nowadays,
    wireless sensors, internet and advanced irrigation machines enable Site-Specific
    Variable Rate Irrigation (SS-VRI) and make the goal of precise irrigation control
    realistic. Wireless sensors can help monitor soil moisture levels at real-time
    and therefore can provide closed-loop feedback to irrigation control. They have
    caught a lot of attention in irrigation applications. However, many existing works
    are restricted to the construction of wireless sensor network and demonstration
    of its benefit. There is some effort on developing advanced irrigation algorithms
    making use of wireless sensors and/or weather information. A model predictive
    control approach is proposed in [1]. During a crop growing season, the control
    takes current sensor and weather data as inputs and makes irrigation decisions
    according to predicted outcome. Although the use of sensor and weather data can
    largely overcome the deficiencies of traditional irrigation approaches, the prediction
    still relies on accurate models, which are not always available. A neuro-dynamic
    programming method is described in [2]. It is essentially a Markov decision process
    with model based reinforcement learning. Its drawback is the adoption of a linear
    model, which is an over-simplification of reality. We propose a model-free reinforcement
    learning [3] approach for irrigation control that makes use of soil moisture sensor
    and weather information. Since it is model-free, it avoids the dependence on potentially
    inaccurate models. Its decision policy can be learned from simulations as well
    as real data, including soil moisture sensor data and actual crop yield. In reinforcement
    learning, a key element is the reward function, which tells if an action is generally
    good or poor. For agricultural irrigation, the critical reward-crop yield, is
    not known until the end of a crop season. Such delayed reward is naturally handled
    by the temporal difference [3] approach in reinforcement learning. Due to limited
    real data, offline learning through simulation is still important. To this end,
    fast models based on neural network are developed to facilitate scalable learning.
    The proposed method is simulated by a fast model developed upon DSSAT (The Decision
    Support System for Agrotechnology Transfer) [4], which is the de facto standard
    model for crop growth. The simulation-based comparisons with other methods indicate
    that our approach can improve net return by around 50% with consideration of both
    water use and crop yield. SECTION II. Background Fig. 1. Factors of water gain
    and loss in soil. Show All The amount of water in soil varies over time depending
    on many factors. Shown in Figure 1, there are 5 major ways of water loss and 2
    ways of water gain. Due to gravity(drainage), some of the retained water is pulled
    out of root zone to deeper layers; such loss is called deep percolation. Evapotranspiration
    (ET) is the combination of transpiration and evaporation. Evapotranspiration accounts
    for plant water use (transpiration) and water evaporated from the soil and wet
    surfaces (evaporation). In arid and semi-arid areas, insufficient availability
    of water in the crop root zone often is the primary limiting factor for crop yield.
    Even in relatively humid environments, seasonal or occasional drought conditions
    can result in water-limiting growing conditions, warranting irrigation as a risk
    management option to protect against yield loss. To show the importance of irrigation,
    DSSAT simulations of maize growth at Temple, Texas according to the weather of
    1984 are performed for different irrigation plans. This simple experiment compares
    yield under no irrigation, and irrigations of 20mm/10days, 30mm/10days, and 40mm/10days.
    The precipitation during the period is plotted in Figure 2. The variation of total
    water in the profile is depicted in Figure 3. The final results are compared in
    Table I. Fig. 2. Precipitation during the period of simulated crop season. In
    total, there is 219 mm of rainfall. Show All Fig. 3. Total soil water in the profile
    during period of simulated crop season. The peak at day 26 is caused by the storm
    on day 25. Without sufficient amount of water supply, the total soil water drops
    bellow 540mm for 21 days until the every end of the crop season when it rains
    on day 74. Show All Table I Comparison of yield under different irrigation plan
    From Table I, one can easily see that irrigation makes a big difference. Under
    the 20mm/10days plan, with 160mm water supplied in total, yield is increased by
    176.6%. But, does more irrigation necessarily increase yield? Not exactly. Comparing
    the yield under 20, 30, 40 mm/day, one can see that 10mm more water on top of
    20mm/10days can boost the yield by 10%, but further increase water supply to 40
    mm every time actually suppresses the yield by 8%. Water requirements vary by
    crop and growth stage. For example, excess water at germination stage can cause
    poor aeration and discourage proper root development. Therefore, supplying the
    crop with the right amount of water at the right time becomes increasingly important
    (as well as practically achievable) in modern agriculture. The best timing and
    amount are very difficult to determine in traditional practice, wherein farmers
    often use fixed interval irrigation scheduling. The major problems with this strategy
    are that it lacks flexibility and precision to adjust for precipitation and soil
    water balance, increasing risk of over-watering (wasting water) or under-watering
    the crop, leading to yield losses. Facilitated by the development of wireless
    sensor technology, threshold-based irrigation scheduling becomes a straightforward
    approach. Once the soil moisture value drops below a threshold, the system starts
    to irrigate with a fixed amount. It can largely reduce water waste. Yet, the question
    of how much to be irrigated is not well answered. SECTION III. Previous Works
    A basic and naïve irrigation decision process is to irrigate fixed amount of water
    at a constant frequency. Sophisticated irrigation management technologies evolve
    along two orthogonal directions: advanced algorithms and utilization of modern
    hardware technologies such as wireless sensors and internet. The research on algorithmic
    approaches started decades ago [5], and various optimization techniques have been
    studied. Irrigation scheduling is formulated and solved by nonlinear programming
    in [6]. Its weakness is the lack of consideration of many uncertainties in soil,
    crop and weather conditions. The uncertainties were addressed by stochastic dynamic
    programming in [7], [8]. Later, genetic algorithm was applied to optimize irrigation
    scheduling [9]. A learning control technique was proposed in [10], where an analytical
    model was applied to control soil moisture level without considering crop yield.
    These techniques were mostly developed before wireless sensor technology, and
    therefore highly depended on the accuracy of models, which was not always reliable.
    Wireless sensor is a critical step in the progress of irrigation technology, as
    it provides real-time feedback of soil moisture levels. Early works [11], [12]
    were mostly to demonstrate the benefit of using soil moisture sensors integrated
    with wireless communication. Soil moisture sensors were also applied to train
    neural network-based soil moisture model [13], which was very useful in irrigation
    scheduling. Infrared temperature sensors and multiband radiometers were installed
    on the irrigation machine to monitor crop leaf stress level [14], and operated
    together with threshold based irrigation control [15]. Through internet connection,
    irrigation control can further incorporate weather conditions and weather forecast
    information. A model predictive control (MPC) approach was developed [1] that
    considered both sensor and weather data. Such approach was much more advanced
    than the offline optimization techniques [6]–[9]. However, the prediction part
    still largely relied on model accuracy. A neuro-dynamic programming-based irrigation
    control method was proposed in [2]. Its key elements included Markov decision
    process and model-based reinforcement learning. However, it used a linear model,
    which was a simplification of the actually complicated crop growth mechanism.
    More detailed reviews on irrigation scheduling and control techniques were presented
    in [16], [17]. Modern irrigation machines allow the application rate of individual
    nozzles to be separately controlled, and therefore enable the concept of site-specific
    variable rate irrigation (SS-VRI). However, a study [18] showed that the actual
    adoption of SS-VRI by farmers is quite limited. A key reason is that there is
    no mature irrigation control software fulfilling the potentials promised by SS-VRI.
    SECTION IV. Problem Model and Formulation A crops growth process can be viewed
    as a Markov chain, which is a model for probabilistic transitions among a set
    of states S={ s 1 , s 2 ,…} over time. In agricultural irrigation, each state
    s i ∈S is defined as the total soil water (TSW) level at a certain crop growth
    stage. Depending on specific types of crop and soil, the minimum soil moisture
    level (management allowable depletion threshold) is set to be higher than the
    permanent wilting point (PWP), at which plants can no longer extract water from
    soil and thus die. We set each time step to be 3 days, considering normal irrigation
    cycle time of most center-pivot machines and speed of water penetration. This
    setting is tunable. The Irrigation decision is to choose among a set of actions
    A={ a 1 , a 2 ,…} defined as irrigating the soil until a designated target filling
    point (TPF) is reached. The decision of what action to take directly affects the
    state that can be reached at next time step. Therefore, this is a Markov decision
    process (MDP). In MDP, an action a j ∈A at certain state s i ∈S leads to an immediate
    reward r( s i , a j ) . The strategy of choosing actions at each time step is
    summarized as a policy, which usually aims to maximize a long term return or cumulative
    reward. In agricultural irrigation, the long term return is defined as the Net
    Return: NetReturn=Y∗ P y −C∗ P c (1) View Source where Y is crop yield with unit
    kg/ha,C is water use with unit ha−mm/ha, P y and P c represent product and water
    price with units of dollars/kg and dollars/mm, respectively. Different from most
    previous works, the objective of this research is not optimizing merely water
    use or yield, rather the optimization of net return. Farmers can use it as a direct
    measurement of their economic gain, and are able to adjust the strategy according
    to the future market and the water price [19]–[21]. SECTION V. Reinforcement Learning-Based
    Irrigation Control There are several methods to derive a policy for MDP [3]. Classical
    MDP assumes complete knowledge of state transition probabilities, which are difficult
    to obtain in reality. The model-based reinforcement learning approach in [2] assumes
    a linear model, which is an over-simplification of reality. In this work, we adopt
    model-free reinforcement learning [3]. It does not depend on any assumption or
    prior knowledge, but largely acquires experience by interacting with the environment.
    At each time step, the agent, which in our case is the irrigation controller,
    depending on current state s∈S , takes action a∈A , and observes an immediate
    reward r . At next time step, the previous reward r is discounted by the factor
    γ , whose value is between 0 and 1. This term γ controls the preference of the
    agent''s behavior. When γ=1 , the agent would take long-term strategy, while if
    0, the agent would only strive for large immediate reward. The quality of a state-action
    pair is specified by function Q(s,a) , which defines the expected cumulative reward
    by being at state s and taking action a . Its value is largely decided by reward
    resulting from a trajectory of state-action pairs. A challenge in irrigation is
    that crop yield, the critical reward, is not known until the end of crop season.
    The temporal difference learning algorithm SARSA (λ) [3] is an approach for handling
    such delayed reward. It updates Q functions for state-action pairs backwards according
    to the eligibility trace, in which λ controls the eligibility (or the relevance
    of later reward to previous state-action pairs). A common issue faced by reinforcement
    learning is the tradeoff between exploitation and exploration. To be more specific,
    an agent explores the environment and learns from experience. However, at early
    stages, heavily relying on learned Q values or exploitation to make decisions
    may close doors for discovering better routes. While at later stages, it would
    be a waste to spend too much time on exploration rather than using existing knowledge.
    A popular approach for addressing the exploitation-exploration tradeoff is the
    ϵ -greedy algorithm [3], where the action with the so far largest Q value is taken
    with probability 1 −ϵ and an action is randomly chosen among all actions with
    probability ϵ . At state s , action a is taken according to ϵ -greedy algorithm.
    Then reward r is received and the state transits to s ′ . Let a ′ be the next
    action according to ϵ -greedy algorithm. The Q value of the state-action pair
    ( s ′ , a ′ ) is updated with the temporal difference: δ=r+γQ( s ′ , a ′ )−Q(s,a)
    (2) View Source The program keeps a record of the eligibility trace e(s,a) . After
    each visit, the eligibility value of current state action pair is added by 1:
    e(s,a)←e(s,a)+1 (3) View Source After each visit, all entries of the Q table are
    updated according to the δ and e(s,a) with a learning rate α . Q(s,a)←Q(s,a)+aδe(s,a)
    (4) View Source The eligbility is discounted by the product of γ and λ so that
    rewards obtained at later time steps are updated according to relevance of previous
    state-action pair. The longer distance, the smaller relevance, and therefore less
    weights on the updates. e(s,a)←γλe(s,a) (5) View Source The above process is repeated
    until either the Q table is converged or the policy is sufficiently stabilized.
    Please note this process contains both learning and decision makings. SECTION
    VI. Implementation A. Fast Models by Neural Network In order to learn what is
    good and bad in terms of policy, the agent must interact with the environment
    sufficiently. However, such process is extremely slow since learning from one
    actual crop season takes 90-120 days depending on the types of crop and time of
    planting. Thus, to shorten the learning process, simulation model packages such
    as DSSAT [4] can be of great help. However, directly incorporating DSSAT is very
    difficult, since the control of its irrigation scheduling requires either manual
    editing through its own GUI or a perfect understanding of its source code, which
    was written in Fortran. To make the Q function training more scalable, we develop
    a cascaded Neural Network (NN) model as a surrogate to DSSAT. The front end of
    this model is an NN that takes irrigation and weather information as inputs and
    predicts TSW for a geographic location. The backend model is another NN that predicts
    crop yield given daily TSWs of an entire crop season. Since final yield is closely
    related to the TSW during the simulated crop season, one can run some random irrigation
    plans and extract TSW tables as inputs, and use the obtained yields as targets
    to train the backend crop yield NN. The input to crop yield NN is from the output
    of front end NN that predicts daily TSW. TSW level can be affected by not only
    precipitation and irrigation, but also ET, runoff, and percolation, which themselves
    vary by many factors such as soil type, solar radiation, wind speed, and temperatures,
    etc. In DSSAT, the TSW is calculated by a set of very complicated but relatively
    accurate models. In our work, data obtained from DSSAT simulations are used to
    train the front end TSW NN. Figure 4 shows the steps to construct our simulation
    system. Fig. 4. The process to construct cascade NN s for simulation using DSSAT
    data. Show All B. Implementation of SARSA (λ) for Irrigation Control In the SARSA
    (λ) algorithm, although each time step is 3 days'' long, precise prediction of
    yield still requires daily TSW data. As described in Algorithm 1, the program
    first translates time step i to days [j,j+2] . Then, it calculates irrigation
    water depth I j for day j according to current TS W j , and the TFP (Target Filling
    Point) decided by actions in A , using a function I rrigationAmount(). Because
    frequent small irrigation applications result in large evaporation loss and discourages
    deep root development, we require the depth of any irrigation application to be
    at least 20mm . Once the amount is determined, the program runs NN function PredTSW
    () to produce TSW values for the following 3 days. The function takes current
    TSW, irrigation (if any), ET, and precipitation R as inputs. Algorithm 1: Generate
    Daily TSW and Irrigation Record The reward function design for the SARSA (λ) learning
    in irrigation warrants particular discussion. The long term return is the net
    return resulted from crop yield and water expense. Since water use occurs multiple
    times throughout a crop season, one approach is to count their expense immediately
    after each irrigation action. However, this approach brings two problems. First,
    the reward due to water use is negative since obviously it is to be minimized
    instead of being maximized. A negative reward often results in negative Q values,
    which cause trouble in the exploitation-exploration tradeoff. More specifically,
    a good action a ∗ may temporarily have negative Q value while another under-explored
    action a ′ may have zero Q value even though it is a very poor action. Such discrepancy
    would mislead the subsequent learning process. Second, the reward is discounted
    by eligibility trace in the SARSA (λ) learning. As such, the same dollar amount
    for water use and crop yield is treated with different weights. To overcome these
    problems, we defer the reward associated with water use to the end of crop season.
    In other words, all time steps in the middle of a season have 0 immediate reward
    and there is only a single reward-the net return, at the end of a season. Algorithm
    2 provides a complete description of the learning process. Every simulated crop
    season is considered as an episode, consisting of n time steps. The program starts
    with a randomly generated Q table, note that Q values of all state-action pairs
    should be relatively small in magnitude compared to the rewards. At each time
    step, the agent takes an action and runs function SimuTSW() to obtain TSW and
    irrigation record for the current time step. The reward function is designed such
    that all the immediate rewards are 0, except for the last one. The final reward
    is the net return, calculated by Equation (1). Note that if net return is smaller
    than a desired value threshold, then it will be assigned a small negative value
    −50. Such design helps to differentiate good policy from bad ones dramatically.
    In addition, a small negative value would stimulate agent to favor other unexplored
    state action pairs, thus making it faster to find good policies. Algorithm 2:
    ARSA (λ) in Irrigation Table II General information of test cases Q table and
    eligibility trace are updated at the end of each time step accordingly. Upon completion
    of each episode, the eligibility is reset to be all Os, but the Q table will be
    kept as a reference to continue learning until convergence. SECTION VII. Experiment
    To evaluate effectiveness of the proposed techniques, simulations are run on 4
    different locations, as shown in Table II: Temple, Texas, United States; Kunnunurra,
    Australia; Hyderabad, India; and Saskatchewan, Canada. The first three fields
    are planted with maize, and the last field is planted with wheat. These testcases
    are summarized in Table II. A. Results on Neural Network Modeling All NN s for
    predicting TSW and crop yield are trained with single hidden layer consisting
    of 10 neurons. The training algorithm is Levenberg-Marquardt [22]. Samples are
    divided into training, validation, and testing sets. NN s are trained on training
    sets, and validated by validation sets, which are used to tell when to stop training.
    The accuracy of NN s are measured on the test sets to provide unbiased results.
    Figure 5 to 8 show the training performance for the Temple case. Regression measures
    the correlation between targets and outputs, the closer to 1, the better. In the
    error histogram, the smaller and more concentrated around zero, the more accurate.
    Limited by space, the training performance evaluation for the other 3 cases are
    not presented here. But the statistics are all very promising as summarized in
    Table III. Fig. 5. NN training regression for predicting yield at temple, TX,
    us. The overall regression goodness of fit above 0.95. Show All Fig. 6. NN training
    error histogram for predicting yield at temple, us. Most errors are concentrated
    around 0, the relative error is within 0.1 % Show All Fig. 7. NN training regression
    for predicting TSW at temple, us. The performance is almost perfect with all sets
    above 0.999. Show All Fig. 8. NN training error histogram for predicting TSW at
    temple, us. Most errors are within +/-2 mm Show All Using NN has significantly
    improved learning efficiency, as running each episode costs less than 2 seconds.
    If all done in DSSAT, considering manually adjusting irrigation plan takes approximately
    1 hour for each episode, and the rule of thumb that Q-table normally converges
    after 500 iterations, the time cost would be unmanageable. Table III Summary of
    NNS training regressions B. Results on Reinforcement Learning Irrigation Control
    States in reinforcement learning are defined according to crop growth stage and
    TSW. The state definitions for Temple and Saskatchewan are shown in Table IV and
    V, respectively, and the state definitions for the other two locations are similar.
    In the tables, the header rows are ranges of TSW with unit mm. The header columns
    are time steps. Each entry in the table is a state ID. Since the soil and crop
    type in Temple, Kunnunurra, and Hyderabad are the same, the division of TSW levels
    are the same in those cases. However, as they differ in geolocation, planting
    date, and weather conditions, the length of the crop seasons and definition of
    growth stages have some variance. The actions for all four cases are defined in
    Table VI. Action 1 is to wait, the rest actions are to irrigate until TSW reaches
    designated Target Filling Point (TPF). Table IV State definition of case temple,
    texas, united states Table V State definition of case saskatchewan, canada Table
    VI Definition of actions in all four cases The proposed learning control method
    is compared with Fixed scheduling: a fixed amount of water is irrigated every
    10 days. Threshold-based irrigation: a fixed amount of water is irrigated at a
    time step (3days) if the soil moisture level is below a certain threshold. At
    the time of this analysis was conducted, according to the Food and Agriculture
    Organization of the United Nations (FAO), international maize and wheat prices
    are around 200 USD/tonne [19], [20]. The cost of irrigation for every 1ha-mm/ha
    is about 1 USD [21]. The following results are produced based on those price settings.
    It is worth mentioning the way we handle the exploration and exploitation trade
    off. To achieve a good balance, ϵ is initialized to be 0.7 to encourage exploration.
    As the experience accumulates, the decision making increases its reliance on existing
    knowledge. As learning continues, ϵ decreases. To be more specific, if the number
    of learned episode N<300,ϵ←0.7−0.002N ; when N>=300,ϵ← 1/N − − − − √ for each
    episode. Fig. 9. Comparison of TSW profile under different irrigation methods
    in the temple case. Show All Table VII Comparison of performance under different
    irrigation methods in the temple case Table VIII Comparison of performance under
    different irrigation methods in the kunnunurra case The advantage of adopting
    learning method can be seen from comparing TSW curves in Figure 9 to 12. In Figure
    11, the TSW takes off, even the field does not need that much water. Yet, when
    water is lost too quickly, in Figure 12, fixed method could not keep up with crop
    demand. Although threshold-based method avoids these problems, it is still not
    flexible enough. In Figure 9, the learning method initially keeps TSW at low level
    but increases water supply at later stages. Such arrangement makes perfect sense
    in agriculture, since at early growth stages, like germination, crops are small
    and roots are shallow, thus crop water demand is lower compared to later stages.
    The computer does not understand the science in agriculture, but somehow learned
    the trick from exploration. Fig. 10. Comparison of TSW profile under different
    irrigation methods in the kunnunurra case. Show All Fig. 11. Comparison of TSW
    profile under different irrigation methods in the hyderabad case. Show All Fig.
    12. Comparison of TSW profile under different irrigation methods in the saskatchewan
    case. Show All Table IX Comparison of performance under different irrigation methods
    in the hyderabad case Table X Comparison of performance under different irrigation
    methods in the saskatchewan case From the result shown in Table VII–X, one can
    see that the performance of the learning method stands out in every case. In Temple,
    the net return was improved by 27.1 % and 15.6%, compared to the average of threshold-based
    and fixed scheduling method, respectively. In Kunnunurra, the increased profits
    are 56.9% and 136.2%; in Hyderabad, 96.4% and 38%, and Saskatchewan, 6.4% and
    49.2%. Not only that, the learning also conserves water, in most cases, the water
    consumption under learning method is lower than threshold-based and fixed scheduling
    method. Of all tested 4 cases, the learning method outperforms the threshold-based
    method by 46.7%, and fixed scheduling by 59.8% on average net return. SECTION
    VIII. Conclusions Agricultural irrigation plays a critical role in addressing
    the challenge of fresh water shortage. The progress of wireless sensor and internet
    technologies allows advanced site-specific variable rate irrigation, which has
    not been fully exploited yet. A reinforcement learning based control approach
    is proposed. Its training can be carried out either through online crop growth
    season or offline simulations. A neural network infrastructure is built to facilitate
    efficient trainings. Its successful implementation opens an promising alternative
    in future computational agricultural research. Simulations for different crop
    types at various geographic locations show that the proposed method outperforms
    fixed irrigation scheduling by 59.8% and threshold based approach by 46.7% on
    average net return. Authors Figures References Citations Keywords Metrics More
    Like This An Intelligent Irrigation Scheduling System Using Low-Cost Wireless
    Sensor Network Toward Sustainable and Precision Agriculture IEEE Access Published:
    2020 Field irrigation management system using Wireless Sensor Network 2011 Nirma
    University International Conference on Engineering Published: 2011 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: Reinforcement Learning Control for Water-Efficient Agricultural Irrigation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.agsy.2003.07.004
  analysis: '>'
  authors:
  - Jacques-Éric Bergez
  - Frédérick Garçia
  - L. Lapasse
  citation_count: 46
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Materials and methods 3. Results
    4. Discussion Acknowledgments References Show full outline Cited by (32) Figures
    (5) Tables (4) Table 1 Table 2 Table 3 Table 4 Agricultural Systems Volume 80,
    Issue 3, June 2004, Pages 235-253 A hierarchical partitioning method for optimizing
    irrigation strategies Author links open overlay panel J.-E. Bergez a, F. Garcia
    b, L. Lapasse a Show more Share Cite https://doi.org/10.1016/j.agsy.2003.07.004
    Get rights and content Abstract Improving water efficiency in irrigated agriculture
    is a priority for better environmental and economic performance. It can be achieved
    by reducing the amount of water used and optimizing the timing of application.
    Among numerous methods, hybrid biophysical/decisional simulation models are effective
    tools for evaluating and comparing irrigation strategies under different weather
    conditions. However, optimizing irrigation strategies for some specified agro-environmental
    expected criteria is a computationally hard problem. In this paper we propose
    a new approach for optimizing the parameters (quantities, dates, thresholds, etc.)
    of maize irrigation strategies represented by structured decision rules and simulated
    with the management-oriented model MODERATO. We introduce a stochastic simulation
    optimisation method, called Partition-2P (P2P). P2P is designed to completely
    explore by sampling the domain of the strategy parameters. This exploration is
    based on a hierarchical decomposition of the domain, heuristically guided toward
    optimal regions, and allows to consider high-dimensional optimisation problems.
    We first evaluate P2P by comparing it to a systematic grid search on a simple
    two-parameter problem, in order to optimise the expectation of the direct margin
    over 49 years of weather records. We obtain very similar results that confirm
    the sound behaviour of P2P. We then apply our approach to a more complex optimisation
    problem that involves an eight-parameters strategy, for which the systematic grid
    search method is not effective. The best strategy we obtain shows a 28 ha−1 increase
    in margin compared to a basic strategy proposed by irrigation advisors. The P2P
    algorithm is also used in three specific hydraulic contexts concerning the available
    flow rate. The different optimal parameter obtained for each context agree well
    with the expert knowledge of irrigation advisors. We finally conclude by discussing
    some limitations and possible improvements of the presented work. Previous article
    in issue Next article in issue Keywords Irrigation strategyOptimisationDecision
    support systemMaize 1. Introduction Managing water properly is certainly one of
    the major challenges of the 21st century. Agriculture is an important consumer
    of water and irrigation is essential in some areas to allow acceptable crop yield
    and quality (Hook, 1994). Improved water use efficiency in irrigated agriculture
    is therefore a priority for better environmental and economic performance (Howell,
    2001). Irrigation scheduling has been an important topic in agricultural research
    for several decades and continues to be so today (King et al., 2001). There is
    a vast amount of literature on irrigation scheduling methods (e.g., Pleban et
    al., 1984; Plant et al., 1992; Epperson et al., 1993; Botes et al., 1996; Raghuwanshi
    and Wallender, 1998; Bergez et al., 2002). Biophysical models linked with decisional
    models can be a helpful tool to solve irrigation scheduling problems. MODERATO
    (Bergez et al., 2001a) is such a hybrid decision model that includes the main
    constraints for irrigation, but requires fewer detailed data than classical whole
    farm models. Given a farmer’s irrigation strategy, it simulates the plant–soil
    system with a dynamic biophysical model and takes account of some within-field
    variability due to the time required to irrigate the whole field. MODERATO is
    an effective tool for evaluating and comparing irrigation strategies under different
    weather conditions (Bergez et al., 2002). In MODERATO, irrigation strategies are
    represented as sets of decision rules with lots of parameters (thresholds, quantities,
    dates, etc.). The design of innovative strategies that perform well for some specified
    agro-environmental criteria thus leads to large optimisation problems. In this
    paper, we propose a new simulation-based optimisation approach that handles this
    difficulty. This approach combines a hierarchical partitioning algorithm called
    P2P with MODERATO. The use of the P2P algorithm is a further step in optimising
    strategies and therefore provides some important improvements on the work carried
    out by Bergez et al. (2002). After an introduction to P2P as a simulation optimisation
    method, we present MODERATO and the irrigation problem we considered. Experimental
    results we obtained are then presented and discussed. 2. Materials and methods
    2.1. A hierarchical partitioning method for optimising agricultural systems The
    problem of optimising the management of the irrigation season can be defined as
    finding the best sequence of decision rules that maximises the expected value
    of an objective function, J, which commonly is defined as the net margin of the
    crop. This optimisation problem can be seen as a control problem, for which dynamic
    programming (DP) methods exist (Kennedy, 1986). However, DP methods are often
    inappropriate when faced with large state and decision spaces, despite some promising
    improvements of DP methods that have been shown recently with the reinforcement
    learning approach (Sutton and Barto, 1998). A more flexible and realistic formulation
    of the optimisation problem consists of searching by means of simulation for the
    best values for the parameters of a pre-defined irrigation strategy. In this case
    the simulation model is considered as a black box function where the vector of
    strategy parameters θ=(θ1,…,θp) is taken as the input variable and where the output
    is the objective function J. In most of the simulation models of agricultural
    production systems, the objective function J also depends on the weather, which
    has to be considered as an unknown and uncontrollable random variable ξ. Optimising
    a strategy thus consists of searching for the set of parameters θ* that maximises
    the expected value of the objective function according to the random weather series:
    (1) where Θ is the value domain of θ. Several efficient methods (stochastic approximation,
    random search, stochastic branch-and-bound, etc.) have been recently developed
    for solving this stochastic simulation optimisation problem, which is one of the
    most difficult problems of mathematical programming (Azadivar, 1999; Swisher et
    al., 2000; Fu, 2001). Stochastic iterative methods for deterministic optimisation
    problems like genetic algorithms, simulated annealing or tabu search (Reeves,
    1995) have also been adapted for the stochastic environment associated with simulation.
    In these approaches, the criterion E(J(θ)) is estimated by averaging the objective
    function J(θ,ξ) over a large number of sampled variables ξi: (2) When the ξi are
    fixed, the objective function J thus becomes a deterministic function of the input
    variables θ, and a range of classical optimisation algorithms can be used. Such
    evolutionary algorithms and other standard deterministic optimisation methods
    have all been applied to agricultural simulation models in recent years (Mayer
    et al., 1998a) and have performed well. However, most of these optimisation problems
    consist of optimising management decisions on existing (past) climatic series
    (e.g., Li and Yost, 2000; Mayer et al., 1996, Mayer et al., 1998b, Mayer et al.,
    2001; Parsons, 1998; Reddy et al., 1995). Very few optimisation methods have been
    applied so far to agricultural systems for optimising the expected value of an
    objective function, as described above. Cros et al. (2001) used the Kiefer–Wolfowitz
    stochastic gradient method (1952) to derive the best values of some parameters
    involved in a grazing management strategy. It appears that this approach is reliable,
    but the algorithm requires a difficult parameterisation that is specific to the
    application. Botes et al. (1996) optimised irrigation strategies by using the
    Nelder–Mead simplex algorithm (1965). Expected values of strategies are estimated
    by Eq. (2), using N=20 years’ weather data. In this paper we develop a new method
    for stochastic simulation optimisation problems with continuous variable space
    Θ⊂Rp, where we assume that parameters θi are bound-constrained, which means that
    the domain Θ is a hyper-rectangle on Rp. This algorithm is designed to completely
    explore (by sampling) the domain Θ, in order to find local and global optimal
    values for θ∈Θ. For small values of p, the simplest method for such problems is
    a systematic grid-search (SGS), which consists of estimating the objective function
    on all points located on finer and finer grids over Θ, until a maximum precision
    is reached for each variable. For large-dimension problems (p>2) this method is
    not efficient since the number of grid points grows exponentially with p. A more
    useful approach is therefore to prioritise the evaluation of points θ within promising
    regions of Θ that are supposed to contain optimal solutions. Its main advantage
    is to maximise, for a given budget of time or simulation runs, the chance of finding
    a good solution. The method we propose falls within this approach and is inspired
    by the DIRECT (Jones et al., 1993) or the MCS (Huyer and Neumaier, 1999) algorithms
    dedicated to deterministic problems. It belongs to the family of stochastic branching
    methods, like stochastic branch and bound or nested partitions methods. It is
    based on a hierarchical decomposition of Θ into 2p-trees, and we therefore call
    it Partition-2p, or P2P. The principle of the algorithm is simple. At each iteration
    of the search, a promising region is selected from a list of “pending regions”
    (see below). This selected region, a p-dimensional rectangle, is then broken down
    into 2p smaller ones, whose sides are half the length of the original rectangle.
    Each of these 2p new pending regions is then randomly sampled, and the sample
    points are used for estimating by simulation some indices of the region, on the
    basis of which the region is ranked in the pending list. From the initial region
    Θ, this algorithm generates a sequence of rooted trees of rectangles, whose leaves
    form a partition of Θ (see Fig. 1). The maximum depth of the principal tree is
    achieved when pending regions cannot be broken down any further (the maximum precision
    is reached). Download : Download full-size image Fig. 1. Description of the P2P
    algorithm for a two-parameter optimisation problem. From the initial region Θ
    describing the space of the two parameters, P2P generates a sequence of trees
    of rectangular regions that form a partition of Θ. Each new created region is
    evaluated by simulation on sampled points. Pending regions are ranked and the
    best one is developed first. P2P stops when a minimal discretisation has been
    reached for all pending regions. Indices are used as heuristics for selecting
    promising regions to explore. The efficiency of the algorithm thus relies mainly
    on the choice of these indices. For instance, selecting the pending regions with
    the lowest depth leads to a systematic grid-search method. Conversely, selecting
    regions with maximal average values on sample points leads to an optimistic best-first
    search that favors a fast convergence to local optima. A useful trade-off can
    also be achieved by considering both the average value and the variance of sample
    points in the region. Indeed, for two regions with a similar mean, a better potential
    increase is to be expected in the one having the larger variance. In the optimisation
    runs with P2P presented in this paper, the average value f of a region was the
    only index used for ranking the pending cells. For each of the sampled points
    θj within a region, the simulation model is run and the value f(θj)=E(J(θj)) is
    estimated by averaging the objective function J(θj,ξ) for N sampled variables
    ξi (3) The number M of sampled points θj drawn randomly on each new region can
    be either fixed (e.g., one point in the centre of the region), or based on the
    depth of the cell (e.g., proportional to the volume of the region). The average
    value f of the region is then estimated by (4) As f is just an empirical indicator,
    its exact value does not need to be precisely estimated, and small numbers N and
    M can be sufficient in practice (Ólafsson and Shi, 1999). The algorithm P2P stops
    when the maximal depth or minimal discretisation has been reached for each pending
    region, or more generally when a given number of iterations has been performed.
    If the objective function E(J(θ)) is continuous, the algorithm is guaranteed to
    converge to the globally optimal parameter θ* when the minimal discretisation
    tends to 0 and the number N of sampled variables ξi tends to infinity. During
    the search, a list managing the best regions is maintained, sorted only on the
    index f. This list constitutes the output of the algorithm. 2.2. The irrigation
    management simulation model MODERATO is a management-oriented model aimed at improving
    the irrigation strategy for an irrigated corn crop. Details of the decision model
    may be found in Bergez et al. (2001a). In this paper, we will deal only with decision
    management for a case in which irrigation is to be optimised. MODERATO includes
    in the irrigation decision-making process the main constraints for irrigation
    (flow, volume and working rate) and simulates the plant–soil system with a dynamic
    biophysical model (a detailed description of the equations of the biophysical
    model is given by Wallach et al. (2001)). We specified the system boundaries in
    a way that reflects the constraints and opportunities faced by farmers (Cox, 1996).
    The constraints for irrigation included in MODERATO are divided in three categories:
    &#x02022; Equipment constraints: maximum flow available due to pumping capacity
    per hectare; maximum and minimum amount of water allowed per irrigation. &#x02022;
    Resource constraints: a limited total amount of water for irrigation. &#x02022;
    Regulatory or human constraints: irrigation bans on some days of the week, farmer’s
    reluctance to work for all or part of certain days, decreased flow rate availability
    during the irrigation period due to administrative restrictions, etc.  A major
    part of the decision-making process followed by farmers consists of deciding when
    to start a new irrigation round, the quantity of water to apply and when to stop
    irrigation. These decisions are taken on the basis of almost daily observations
    of the physiological stage of the development of the crop and the soil water content,
    given some equipment constraints (flow rate and available water). In surveys carried
    out in south-western France (Darracq, 1996; Clavé, 2001), it was found that farmers
    use different rules to irrigate and different indicators to trigger the rules.
    For example, to decide when to start irrigation, different indicators were used:
    when leaves start to roll, when the soil changes colour, when the soil thrown
    up by moles becomes drier, when tensiometer values reach a given threshold, when
    the neighbour starts to irrigate, etc. All these indicators are difficult or even
    impossible to translate into a decision tool. Unlike Shaffer and Brodahl (1998),
    who decided to introduce a lot of complexity into their decision rule editor,
    we chose to simplify this complex decision strategy and to base the elementary
    rules on a two-step condition algorithm: 1. a condition describing the crop development
    [Cond1]; 2. a condition describing the water status in the system [Cond2].  The
    Boolean process to decide on any rule is then very simple: if Cond1 is true, then
    Cond2 is checked; if Cond2 is true, then an action occurs. Two choices are offered
    to describe each of the two conditions: either an indicator directly related to
    weather data and easily obtained by the user (calendar date for Cond1, sum or
    average rainfall or potential evapotranspiration for Cond2) or a simulated indicator,
    calculated by the biophysical model (stage of the crop described by accumulated
    thermal units (Muchow et al., 1990) for Cond1, fraction of available water for
    Cond2). For example, Fig. 2 shows the rule for irrigation for plant emergence,
    which reads: If, 15 days after sowing (Cond1, Choice 1) or 70 °C day after sowing
    (Cond1, Choice 2), the cumulative rainfall has been less than 20 mm (Cond2, Choice
    1), then 20 mm of irrigation is applied. The irrigation round will stop if the
    cumulative rainfall since the beginning of the round is more than 10 mm. The applied
    amount of irrigation has to be subtracted from the total amount of water available
    for irrigation. Download : Download full-size image Fig. 2. Template describing
    the irrigation rule for use at plant emergence. Editing fields allow the strategy
    to be described. See the text for a description of the actual rule. Once it is
    decided to irrigate, the amount must be decided. Two possibilities exist: either
    to apply a fixed amount, or one based on the soil water depletion. The latter
    is described either by the ratio of actual available water to the available water
    capacity, or by the amount of water necessary to recharge the soil. Both possibilities
    allow a partial refill of the soil. A complete irrigation strategy is therefore
    defined by a set of five elementary rules: (i) a rule to determine if irrigation
    is to be used to facilitate plant emergence (sowing rule), (ii) a rule to decide
    when to start the main irrigation period (starting rule), (iii) a rule to determine
    when to start a new irrigation (returning rule), (iv) a rule to decide when to
    stop irrigation (ending rule) and (v) a rule to delay irrigation due to weather
    conditions (delaying rule). 2.3. Testing the optimisation method P2P A three-step
    approach will be used to demonstrate the usefulness of the developed algorithm:
    1. We will simulate a basic strategy (BAS) (see Bergez et al., 2002). The general
    strategy is given in Table 1. This strategy is the result of discussions with
    the irrigation advisors and is therefore expected to be a reasonable approximation
    to current practices. The irrigation equipment used for the study allows a 3.5
    mm day−1 flow rate. No limit to the amount of available water and no flow rate
    restriction during summer (except those due to the equipment) are imposed. Table
    1. Description of the basic strategy (BAS) as put forward by irrigation advisors
    Operation Rules Sowing Sowing is between 20 April and 30 May as soon as the cumulative
    rainfall during the previous 3 days is less than 15 mm. Variety Céciliaa is sown
    at 80,000 plants ha−1. Fertilisation A single application of 200 kg N ha−1 is
    made at sowing. Harvest The crop is harvested when grain moisture content reaches
    20% or accumulated thermal units from sowing reach 2100 ATUb and if the cumulative
    rainfall during the previous 3 days is less than 15 mm. In any case, the crop
    must be harvested before 15 October. Irrigation Sowing rule: Irrigation to facilitate
    plant emergence (either because it is too dry or because a crust has been created
    by heavy rainfall on silty soil) is not taken into account. Irrigation to dissolve
    fertiliser is not taken into account. Starting rule: The main irrigation period
    starts from 650 ATU as soon as the soil water deficit reaches 60 mm. 20 mm is
    applied. Returning rule: 25 mm is applied every 8 days if no rainfall occurs.
    Ending rule: For the irrigation cycle following 1st September, if the soil water
    deficit is greater than 90 mm before the irrigation cycle starts, a last irrigation
    cycle is performed; otherwise irrigation is stopped. 20 mm is applied. Delaying
    rule: Precipitation delays irrigation. When the cumulative rainfall over the 5
    previous days is more than 10 mm, a delay of one day is applied for every 4 mm.
    The delay cannot exceed 7 consecutive days. a Cecilia is a late growing variety
    requiring 1045 ATU from sowing to flowering and 1990 ATU from sowing to maturity
    (35% grain humidity). b Accumulated thermal units (see text for explanation).
    2. A comparison between the systematic grid-search method (SGS) and the P2P algorithm
    will be carried out on two parameters of the basic strategy: the soil water deficit
    (D1) and the time (expressed as accumulated thermal units) to start the main irrigation
    campaign (T1). As before, the irrigation equipment used for the study allows a
    3.5 mm day−1 flow rate. No limit to the amount of available water and no flow
    rate restriction during summer (except those due to the equipment) are imposed.
    D1 will be searched in [0; 150] and T1 in [0; 1990]. 3. The basic irrigation strategy
    is extended as follows: “The main irrigation period starts from T1 as soon as
    the soil water deficit reaches D1. An amount I1 is applied. Once an irrigation
    cycle ends, a new cycle starts when the soil water deficit reaches D2. An amount
    I2 is applied. For the irrigation cycle following T3, if the soil water deficit
    is greater than D3 before this irrigation cycle starts, a last irrigation cycle
    is performed; otherwise the irrigation campaign ends. An amount I3 is applied”.
    P2P will be used to optimise the set of the eight parameters (Table 2) in a first
    step using the same hydraulic context as before (a 3.5 mm day−1 flow rate and
    no water limitation) and in a second step when varying the available flow rate:
    2.5, 3.5 and 4.5 mm day−1 and limiting the amount of water to 200 mm. Table 2.
    The eight parameters of the irrigation strategy to be optimised Name Meaning Unit
    Min Max Δmin T1 Accumulated thermal unit to start the irrigation campaign °C day
    400 1000 5 D1 Soil water deficit to start the irrigation mm 50 130 3 I1 Irrigation
    applied at the first irrigation mm 5 50 2 D2 Soil water deficit to start a new
    irrigation cycle mm 50 130 3 I2 Irrigation depth applied after the first irrigation
    round mm 5 50 2 T3 Accumulated thermal units to stop the irrigation °C day 1400
    1800 5 D3 Soil water deficit to stop irrigation mm 50 130 3 I3 Irrigation applied
    at the last irrigation round mm 5 50 2 Min and max show the range for each parameter
    within which the optimum will be sought. Δmin is the criterion used to stop the
    division of the parameter.  All the simulations will be performed using the same
    soil and weather data. The soil for this study is a medium clay-silt, 0.8 m deep,
    with clay accumulation at depth, locally called “Boulbènes moyennes” (fluvisol).
    This type of soil is representative of a large area of the Midi-Pyrénées and has
    a 150 mm cumulative available water capacity. The climate used is from the weather
    records of Toulouse-Blagnac from 1949 to 1997. On average, July and August receive
    a total of 92 mm rainfall and the cumulative potential evapotranspiration (ET0)
    is 290 mm. The average climatic moisture deficit (ET0 minus rainfall) for this
    2-month period is around 200 mm. However, there is a large variation in rainfall
    during the two summer months as it ranges from 30 to 240 mm, underlining the unpredictable
    nature of rainfall in the area. Cumulative ET0 is less variable, ranging from
    235 to 372 mm. The objective function to be maximised is the expectation of the
    direct margin (i.e., the gross margin minus specific costs for a given activity,
    here irrigation) over all the years of weather recording. The direct margin regarding
    irrigation may be written as: (5) where J(θi,ξj) is the direct margin for climate
    ξj and the strategy θi, Y(θi,ξj) is the grain yield obtained under climate ξj
    and using the strategy θi, P is the selling price for maize, F is the operational
    costs for maize production, q(θi,ξj) is the amount of water used under climate
    ξj and using the strategy θi, p is the cost of irrigation water, n(θi,ξj) is the
    number of irrigation cycles performed under climate ξj and using the strategy
    θi and c is the cost of carrying out a new irrigation cycle. The average selling
    price for maize (grain) is assumed to be 106.71 Mg−1 in the Toulouse area. Operational
    costs (seed, weeding, fertiliser, insurance) are assumed to be 327.77 ha−1. The
    cost of irrigation water is assumed to be 0.76 mm−1 and that of setting up a new
    irrigation cycle is assumed to be 7.62 (labour). In this study, the parameters
    used to tune the P2P algorithm are as follows: (i) the simulations are based on
    the same N=49 climatic years as described previously; (ii) the pending cells are
    ranked depending on the expectation f of the objective function; (iii) Only the
    best 500 cells are kept; (iv) the number of points per cell is computed in order
    to reach a single point at the lowest depth of cell division; (v) pending cells
    are excluded (i.e., these cells will not be divided) if the expectation of the
    objective function for this cell is 10% less than that of the first cell in the
    best-cell sorted list. 2.4. Programming aspects The optimisation algorithm P2P
    was programmed as an independent library in C++ and linked directly to the biophysical
    and decisional model MODERATO. The algorithm was developed in such a way that
    it can be used for other models and is not specifically linked to the optimisation
    problem developed in this study. Two modifications to the main program were needed,
    being quite straightforward: (i) the first allows for a modification of the parameters
    of the strategy by sending them as an array to the main program by the optimisation
    module; (ii) the second is to calculate the objective function for each run and
    then to send it as an array to the optimisation module from the main program.
    3. Results 3.1. Results from the basic strategy The main results from the “basic”
    (BAS) strategy are given in Table 3. With this strategy, a 9.54 Mg ha−1 average
    grain yield is obtained, using, on average, 170 mm of irrigation water. The average
    margin is 506 . Drainage is low, 3 mm on average. In 29 cases out of 49, the soil
    water deficit is at least 60 mm (the soil water deficit threshold to start the
    irrigation campaign) when the accumulated thermal units reach 650 °C days (the
    accumulated thermal units to start the irrigation campaign). Therefore irrigation
    starts immediately at 650 °C day. Table 3. Results from the simulation using the
    basic strategy as expressed by the irrigation advisors (“BAS”), the optimum two-parameter
    strategy (“2P”) and the optimum eight-parameter strategy (“8P”) calculated by
    P2P Empty Cell BAS 2P 8P Yield (Mg ha−1) 9.54 [1.02] 9.87 [0.9] 9.52 [0.92] (7.63;
    11.07) (7.88; 11.07) (7.55; 11.15) Drainage (mm) 3 [12] 3 [14] 3 [15] (0; 77.71)
    (0; 80) (0; 101) Irrigation (mm) 170 [38] 196 [47] 166 [45] (70; 240) (95; 265)
    (46; 224) Margin (/ha) 506 [134] 515 [125] 534 [118] (254; 737) (227; 714) (312;
    710) Efficiency (Mg mm−1) 0.06 [0.02] 0.05 [0.02] 0.07 [0.04] (0.04; 0.15) (0.03;
    0.11) (0.04; 0.22) Tabulated values are: average [standard deviation] (minimum;
    maximum). 3.2. Comparing the SGS and P2P methods For a two-parameter optimisation
    problem, the optimal solution obtained with SGS is T1=520 °C day and D1=40 mm.
    For this set of parameters, the margin is 515 . Fig. 3A shows isomargin contours
    in the parameter space. It can be seen that a large area of the parameter space
    gives roughly the same margin (J(θ)>500 ). Download : Download full-size image
    Fig. 3. (A) Isomargin graph when using SGS for each point of the grid when varying
    T1 and D1; (B) the 500 best strategies when using P2P. Margin difference for these
    points is less than 1%. With P2P applied to the same two-parameter problem (Fig.
    3B), the optimal set of parameters is obtained with T1 ranging between 443 and
    451 and D1 ranging between 37 and 42. For this set of parameters, the margin is
    515 . The second best set for P2P is T1 in the range 521–529 and D1 in the range
    37–42 but the margin is only 0.10 less. Actually, for the 500 best sets of parameters
    from P2P, there is a difference in margin of less than 1% (from 515 to 511 ha−1).
    This is in good agreement with the large area of similar results obtained using
    SGS and shown in Fig. 3A. P2P provides a range for each optimised parameter. We
    call strategy 2P the strategy obtained by using the middle of this range for each
    parameter. The simulation of 2P leads to an average grain yield of 9.87 Mg ha−1,
    i.e., 0.33 Mg ha−1 more than with the basic strategy (see Table 3, strategy 2P).
    On average 196 mm of water is used, which is 26 mm more than with the basic strategy.
    This is due to the fact that the main irrigation campaign starts earlier and ends
    at the same time. In half of the 49 years, irrigation starts before 29/06 for
    BAS and before 14/06 for 2P. The average margin is 515 . The same average drainage
    is obtained for both strategies. 3.3. Eight-parameter strategy Table 4 gives the
    ranges of the eight parameters that lead to the maximum expectation of the objective
    function. We call strategy 8P the strategy obtained by using the middle of the
    optimal range for each parameter. Following 8P, irrigation has to start a little
    later than with 2P, at 480 °C days and a 52 mm soil water deficit. The amount
    applied is then 49 mm. The next irrigation is due when the soil water deficit
    reaches 57 mm; 46 mm of irrigation is then applied. Finally, the last irrigation
    cycle is performed if at 1459 °C day the soil water deficit is more than 102 mm;
    49 mm irrigation is then applied. Table 4. Range of the eight parameters maximizing
    the expectation of the objective function calculated with P2P Parameter Unit Min
    Max T1 °C day 475 484 T3 °C day 1456 1462 D1 mm 50 55 D2 mm 55 60 D3 mm 100 105
    I1 mm 47 50 I2 mm 44 47 I3 mm 47 50 See Table 2 for explanation of the parameters.
    As for the two-parameter-optimised strategy, there is a difference in margin of
    less than 1% between the 500 best sets of parameters. Within the 100 best sets,
    among all parameters, T1 is the most variable as it ranges from 405 to 545 °C
    days. The others vary much less. This is analogous to the results for the two-parameter
    strategy. As shown in Fig. 3A, the margin is roughly the same for a large range
    of T1 values. The simulation of the strategy 8P leads to a 9.52 Mg ha−1 grain
    yield (Table 3, strategy 8P). This is slightly less than with 2P (−0.35 Mg ha−1),
    but the margin is increased: +19 ha−1. Less water is used (166 vs 196 mm). A large
    amount of irrigation is applied at each run (46 mm). As a consequence, each irrigation
    cycle lasts longer and fewer cycles are needed (3.7 vs 7.1 for BAS). Water use
    efficiency (mg of grain yield produced per mm of irrigation water) has increased.
    Fig. 4 shows the cumulative frequencies for grain yield, margin, starting and
    ending dates obtained for the 49-year climatic series and using the BAS, 2P and
    8P strategies. There is a 50% chance to exceed 9.56 Mg ha−1 with BAS, 10.08 Mg
    ha−1 with 2P and 9.67 Mg ha−1 with 8P (Fig. 4A). Regarding the margin, and keeping
    the same 50% probability, the figures are 498, 528 and 538 ha−1, respectively,
    for BAS, 2P and 8P (Fig. 4B). Actually, 2P gives a better chance to reach a higher
    grain yield but leads to an earlier start (Fig. 4C) and a later end of irrigation
    (Fig. 4D) than 8P. As a result, margin is decreased due to a higher amount of
    irrigation. Download : Download full-size image Fig. 4. Cumulative frequency for
    the basic strategy (bold line), two-parameter optimised strategy (dotted line)
    and eight-parameter optimised strategy (circles). (A) Grain yield; (B) margin;
    (C) starting date of irrigation and (D) ending date of irrigation. P2P performed
    similarly to SGS for the two-parameter problem in terms of results and run time.
    However, when the number of parameters to be optimised increases, SGS takes much
    longer to run. This is part of the well-known curse of dimensionality. P2P allows
    a quicker convergence to the optimal set of parameters. In our example, the 8P
    strategy was obtained after roughly 1.6 × 106 simulations (a simulation being
    a call to the bio-decisional model, i.e., a run for one climate and one set of
    parameters). On our PC configuration, we run around 25 simulations per second.
    So, an optimisation required around 14 h. With SGS, it would have been necessary
    to complete the total map of the parameter space, to run more than 6 × 1011 simulations
    (actually more than 700 years of computation). The use of P2P to analyse the change
    in flow rate gives also interesting results (Fig. 5). These figures are radar
    plots showing the variability of the eight estimated parameters. Each axis represents
    one of the eight parameters. All the axes have been normalised to have a [0;1]
    range. The values in square brackets to the right of the parameter name indicate
    the range for this axis. Regarding the rule to begin irrigating, if the flow rate
    is low (Fig. 5A), irrigation has to start slightly earlier (T1), at a lower soil
    water deficit (D1). For higher flow rates (Figs. 5B and C), irrigation can wait
    as it is easy to rapidly apply the amount required. A larger amount (I1) is applied
    using a higher flow rate. Regarding the returning rule, the higher flow rate allows
    waiting until a higher soil water deficit is reached (D2), but the same amount
    is applied (I2). The decision to stop irrigation (T3) is the latest at the lowest
    flow rate. Download : Download full-size image Fig. 5. Radar plots showing the
    eight optimised parameters for three different flow rates: (A) 2.5 mm day−1, (B)
    3.5 mm day−1 and (C) 4.5 mm day−1. For each parameter, the range of the axis is
    given in square brackets. The meaning of the different parameters is given in
    Table 2. 4. Discussion Starting from a basic strategy as proposed by advisors
    in the field, the use of P2P to parameterise the decision rules improved the direct
    margin. From an average 506 ha−1 using strategy BAS, we obtained 534 ha−1 with
    strategy 8P. Irrigation has to start and finish earlier and more water must be
    applied. Although the grain yield was slightly decreased, the margin was increased
    because of fewer irrigation cycles. The cost of an irrigation cycle (labour, energy,
    etc.) is thus important in the search for an optimal strategy: it pays to sacrifice
    some yield if the number of irrigations can be reduced. This has also been shown
    by other authors and the idea has been incorporated into new irrigation schedules
    (Kirda and Kanber, 1999). For example, Norwood and Dumier (2002) found that reducing
    the quantity of water, even if there is a slight fall in the grain yield, gives
    more profit and better water use efficiency. Strategy 8P shows that irrigation
    should start in mid-June. However, from discussions with irrigation advisors and
    farmers (Clavé, 2001; Rouffaud, 2001), it seems quite difficult to start that
    early. Other constraints than those specified in the decisional model have to
    be taken into account (fertilisation, setting up pipes, etc.). Due to technical
    problems with equipment, farmers usually start in early to mid-July. Using a model
    (biophysical and decisional) thus allows constraints and shortcomings of the model
    or our knowledge to be revealed. The P2P algorithm was used in three specific
    hydraulic contexts for one set of soil and climatic conditions. The results agree
    well with what was already known by irrigation experts: when the flow rate is
    small, it is worth starting earlier and applying less water. There is much interest
    in testing different constraints and soil and weather scenarios to provide advice.
    However, one of the difficulties is to represent the results in an understandable
    way. In this paper we used a radar plot to represent the strategy. Other forms
    of representation should be developed in consultation with advisors if we want
    these results from research be used by advisors and farmers (Cox, 1996; Walker,
    2002). As mentioned by Bergez et al. (2002), a calculated optimal strategy depends
    on four factors: (i) the biophysical model used to describe the system behaviour
    (i.e., equation and parameters), (ii) the decisional model and the variables used
    to trigger the decision, (iii) soil and weather and (iv) the constraints. Adaptation
    to varying soil and constraints is part of the work of the advisors. Helping them
    to provide proper strategies is part of the research work and as stated before,
    finding ways of presenting the results is part of this work. The first two points
    are much more difficult to work with. By definition a model is an imperfect representation
    of reality (Whisler et al., 1986; Boote et al., 1996). When searching the parameter
    space to find the optimal set of parameters, one may be led to simulate rather
    extreme soil and plant conditions. It is therefore important that the biophysical
    model be robust (fairly accurate outside the proper limits of the model). It must
    also be sensitive (able to predict a small change in the functioning processes
    when a technical action is modified). For example, regarding maize irrigation,
    experiments show that a single irrigation at tasselling can increase yield by
    29%. Additional irrigations during the vegetative and grain filling stages increased
    yield an additional 11% and 13%, respectively (Norwood, 2000). Even if the exact
    values are not obtained when simulating irrigation strategies, it is important
    that an increase of this order of magnitude be reached when using the model. It
    is therefore important to compare knowledge and model estimates. In order to use
    P2P, it is necessary to describe the parameterised strategy as a set of decision
    rules. This task is far from obvious and can only be carried out through a collaborative
    work with experts and advisors. Nevertheless, optimising strategies without this
    initial knowledge is even more complex (Bergez et al., 2001b). In this paper,
    the P2P algorithm was used to calculate optimal strategies for the direct margin
    criterion. Such computed optimised strategies must be understood as a guide to
    possible improvement rather than an optimal strategy to be used as is. For example,
    it is quite rare that a farmer has only maize. Other productions (animal) and
    crops may interfere in terms of equipment or working schedule. Environmental aspects
    must also be considered. Acknowledgments The authors thank the irrigation advisors
    for their help in describing the “basic” strategy and for their comments on MODERATO.
    References Azadivar, 1999 Azadivar, F., 1999. Simulation optimization methodologies.
    In: Proceedings of the 1999 Winter Simulation Conference, December 5–8, 1999,
    Squaw Peak, Phoenix, AZ, USA, pp. 93–100 Google Scholar Bergez et al., 2001a J.E.
    Bergez, P. Debaeke, J.M. Deumier, B. Lacroix, D. Leenhardt, P. Leroy, D. Wallach
    MODERATO: an object-oriented decision tool for designing maize irrigation schedules
    Ecol. Model., 137 (2001), pp. 43-60 View PDFView articleView in ScopusGoogle Scholar
    Bergez et al., 2001b Bergez, J.E., Eigenraam, M., Garcia, F., 2001b. Comparison
    between dynamic programming and reinforcement learning: a case study on maize
    irrigation management. In: Proceedings of the 3rd European Conference on Information
    Technology in Agriculture (EFITA’01), Montpellier (FR), pp. 343–348 Google Scholar
    Bergez et al., 2002 J.E. Bergez, J.M. Deumier, B. Lacroix, P. Leroy, D. Wallach
    Improving irrigation schedules by using a biophysical and a decisional model Eur.
    J. Agron., 16 (2002), pp. 123-135 View PDFView articleView in ScopusGoogle Scholar
    Boote et al., 1996 K.J. Boote, J.W. Jones, N.B. Pickering Potential uses and limitations
    of crop models Agron. J., 88 (1996), pp. 704-716 CrossRefView in ScopusGoogle
    Scholar Botes et al., 1996 J.H.F. Botes, D.J. Bosch, L.K. Oosthuizen A simulation
    and optimization approach for evaluating irrigation information Agric. Syst.,
    51 (1996), pp. 165-183 View PDFView articleView in ScopusGoogle Scholar Clavé,
    2001 Clavé, J., 2001. Représentation des règles de décision des irrigants de la
    vallée du Tarn et de l’Agout dans l’outil informatique MODERATO. ENITA-Clermont
    (FR), p. 47 Google Scholar Cox, 1996 P.G. Cox Some issues in the design of agricultural
    decision support systems Agric. Syst., 52 (1996), pp. 355-381 View PDFView articleView
    in ScopusGoogle Scholar Cros et al., 2001 Cros, M.J., Garcia, F., Martin-Clouaire,
    R., Duru, M., 2001. Simulation optimization of grazing management strategies.
    In: Proceedings of the 3rd European Conference on Information Technology in Agriculture
    (EFITA’01), Montpellier (FR) Google Scholar Darracq, 1996 Darracq, S., 1996. Identification
    et modélisation des règles de décision utilisées par les maisiculteurs en Aquitaine.
    INA-Paris (FRA), p. 65 Google Scholar Epperson et al., 1993 J.E. Epperson, J.E.
    Hook, Y.R. Mustafa Dynamic programming for improving irrigation scheduling strategies
    of maize Agric. Syst., 42 (1993), pp. 85-101 View PDFView articleView in ScopusGoogle
    Scholar Fu, 2001 Fu, M.C., 2001. Simulation optimization. In: Proceedings of the
    2001 Winter Simulation Conference, December 9–12, 2001, Crystal Gateway Marriott,
    Arlington, VA, USA, pp. 53–61 Google Scholar Hook, 1994 J.E. Hook Using crop models
    to plan water withdrawals for irrigation in drought years Agric. Syst., 45 (1994),
    pp. 271-289 View PDFView articleView in ScopusGoogle Scholar Howell, 2001 T.A.
    Howell Enhancing water use efficiency in irrigated agriculture Agron. J., 93 (2001),
    pp. 281-289 CrossRefView in ScopusGoogle Scholar Huyer and Neumaier, 1999 W. Huyer,
    A. Neumaier Global optimization by multilevel coordinate search J. Global Optim.
    (1999), pp. 331-355 View in ScopusGoogle Scholar Jones et al., 1993 D.R. Jones,
    C.D. Perttunen, B.E. Stuckman Lipschitzian optimization without the Lipschitz
    constant J. Optim. Theory Appl., 79 (1993), pp. 157-181 View in ScopusGoogle Scholar
    Kennedy, 1986 J.O Kennedy Dynamic Programming: Application to Agricultural and
    Natural Resources Elsevier Applied Science, London (1986) Google Scholar Kiefer
    and Wolfowitz, 1952 J. Kiefer, J. Wolfowitz Stochastic estimation of the maximum
    of a regression function Ann. Math. Stat., 23, (1952), pp. 462-466 CrossRefGoogle
    Scholar King et al., 2001 B.A. King, R.W. Wall, J.P. Taberna Jr. Visual soil water
    status indicator for improved irrigation management Comput. Electron. Agric.,
    32 (2001), pp. 31-43 View PDFView articleView in ScopusGoogle Scholar Kirda and
    Kanber, 1999 C. Kirda, R. Kanber Water, no longer a plentiful resource, should
    be used sparingly in irrigated agriculture C. Kirda, P. Moutonnet, Hera, Nielsen
    (Eds.), Crop Yield Responses to Deficit Irrigation, Kluwer Academic Publishers,
    Dordrecht (1999), pp. 1-20 CrossRefGoogle Scholar Li and Yost, 2000 M. Li, R.S.
    Yost Management-oriented modeling: optimizing nitrogen management with artificial
    intelligence Agric. Syst., 65 (2000), pp. 1-27 View PDFView articleView in ScopusGoogle
    Scholar Mayer et al., 1996 D.G. Mayer, J.A. Belward, K. Burrage Use of advanced
    techniques to optimize a multi-dimensional dairy model Agric. Syst., 50, (1996),
    pp. 239-253 View PDFView articleView in ScopusGoogle Scholar Mayer et al., 1998a
    D.G. Mayer, J.A. Belward, K. Burrage Optimizing simulation models of agricultural
    systems Ann. Oper. Res., 82 (1998), pp. 219-231 View in ScopusGoogle Scholar Mayer
    et al., 1998b D.G. Mayer, J.A. Belward, K. Burrage Tabu search not an optimal
    choice for models of agricultural systems Agric. Syst., 58 (1998), pp. 243-251
    View PDFView articleView in ScopusGoogle Scholar Mayer et al., 2001 D.G. Mayer,
    J.A. Belward, K. Burrage Robust parameter settings of evolutionary algorithms
    for the optimisation of agricultural systems models Agric. Syst., 69 (2001), pp.
    199-213 View PDFView articleView in ScopusGoogle Scholar Muchow et al., 1990 R.C.
    Muchow, T.R. Sinclair, J.M. Bennett Temperature and solar effects on potential
    maize yield across locations Agron. J., 82 (1990), pp. 338-343 CrossRefGoogle
    Scholar Nelder and Mead, 1965 J.A. Nelder, R. Mead A simplex method for function
    minimization Comput. J., 7 (1965), pp. 308-313 CrossRefGoogle Scholar Norwood,
    2000 C.A. Norwood Water use and yield of limited-irrigated and dryland corn Soil
    Sci. Soc. Am. J., 64 (2000), pp. 365-370 CrossRefView in ScopusGoogle Scholar
    Norwood and Dumier, 2002 C.A. Norwood, T.J. Dumier Transition to dryland agriculture:
    limited irrigated vs. dryland corn Agron. J., 94 (2002), pp. 310-320 View in ScopusGoogle
    Scholar Ólafsson and Shi, 1999 Ólafsson, S., Shi, L., 1999. Optimization via adaptive
    sampling and regenerative simulation. In: Proceedings of the 1999 Winter Simulation
    Conference, December 5–8, 1999, Squaw Peak, Phoenix, AZ, USA, pp. 666–672 Google
    Scholar Parsons, 1998 D.J. Parsons Optimizing silage harvesting plans in a grass
    and grazing simulation using the revised simplex method and a genetic algorithm
    Agric. Syst., 56 (1998), pp. 29-44 View PDFView articleView in ScopusGoogle Scholar
    Plant et al., 1992 R.E. Plant, R.D. Horrocks, D.W. Grimes, L.J. Zelinski CALEX/Cotton:
    an integrated expert system application for irrigation sheduling Am. Soc. Agric.
    Engrg., 35 (1992), pp. 1833-1838 View in ScopusGoogle Scholar Pleban et al., 1984
    S. Pleban, D.F. Heermann, J.W. Labadie, H.R. Duke Real time irrigation scheduling
    via “Reaching” dynamic programming Water Resour. Res., 20 (1984), pp. 887-895
    View in ScopusGoogle Scholar Raghuwanshi and Wallender, 1998 N.S. Raghuwanshi,
    W.W. Wallender Optimal furrow irrigation scheduling under heterogeneous conditions
    Agric. Syst., 58 (1998), pp. 39-55 View PDFView articleView in ScopusGoogle Scholar
    Reddy et al., 1995 V.R. Reddy, B. Acock, F.D. Whisler Crop management and input
    optimization with GLYCIM: differing cultivars Comput. Electron. Agric., 13 (1995),
    pp. 37-50 View PDFView articleView in ScopusGoogle Scholar Reeves, 1995 C.R. Reeves
    Modern Heuristic Techniques for Combinatorial Problems McGraw-Hill, New York (1995)
    (originally published in 1993 by Blackwell Scientific Press, Oxford) Google Scholar
    Rouffaud, 2001 Rouffaud, H., 2001. Contextes, règles de décision et stratégies
    de conduite de l’irrigation du maïs dans les vallées du Tarn et de l’Agout. ENESAD-Dijon
    (FR) ITA Productions végétales, 28 p Google Scholar Shaffer and Brodahl, 1998
    M.J. Shaffer, M.K. Brodahl Rule-base management for simulation in agricultural
    decision support system Comput. Electron. Agric., 21 (1998), pp. 135-152 View
    PDFView articleView in ScopusGoogle Scholar Sutton and Barto, 1998 R.S. Sutton,
    A.G. Barto Reinforcement Learning: An Introduction MIT Press, Cambridge (1998)
    Google Scholar Swisher et al., 2000 Swisher, J.R., Hyden, P.D., Jacobson, S.H.,
    Schruben, L.W., 2000. A survey of simulation optimization techniques and procedures.
    In: Proceedings of the 2000 Winter Simulation Conference, December 10–13, 2000,
    Wyndham Palace Resort & Spa, Orlando, FL, USA, pp. 119–128 Google Scholar Walker,
    2002 D. Walker Decision support, learning and rural resource management Agric.
    Syst., 73 (2002), pp. 113-127 View PDFView articleView in ScopusGoogle Scholar
    Wallach et al., 2001 D. Wallach, B. Goffinet, J.E. Bergez, P. Debaeke, D. Leenhardt,
    J.N. Aubertot Parameter estimation for crop models: a new approach and application
    to a corn model Agron. J., 93 (2001), pp. 757-766 CrossRefView in ScopusGoogle
    Scholar Whisler et al., 1986 F.D. Whisler, B. Acock, D.N. Baker, R.E. Fye, H.F.
    Hodges, J.R. Lambert, H.E. Lemmon, J.M. McKinion, V.R. Reddy Crop simulation models
    in agronomic systems Adv. Agron., 40 (1986), pp. 141-208 View PDFView articleView
    in ScopusGoogle Scholar Cited by (32) A decision support system based on multisensor
    data fusion for sustainable greenhouse management 2018, Journal of Cleaner Production
    Citation Excerpt : In this context, DSS have become a useful support tools both
    in open field agriculture and in protected crops. In particular, referring to
    open field agriculture, DSSs have proven their effectiveness in several contexts
    (Bergez et al., 2004; Bonfil et al., 2004; Aiello et al., 2011), although in the
    case of pest management, their efficacy has been questioned by many authors (Ellison
    et al., 1998; Mahaman et al., 2002; Wharton et al., 2008). The tactics employed
    in open field agriculture, in fact, are mainly focused on spraying methods, whose
    effectiveness significantly depends on meteorological conditions which can rapidly
    change in time. Show abstract Can farmers use maize earliness choice and sowing
    dates to cope with future water scarcity? A modelling approach applied to south-western
    France 2015, Agricultural Water Management Citation Excerpt : We ran the model
    chain for the two main types of soils in the study area (“boulbènes”, a loamy
    1.5 m deep soil with a water holding capacity (θx) of 226 mm, and “terreforts”,
    a clay 0.8 m deep shallow soil with a θx of 123 mm), and we used an irrigation
    decision rule adapted to each. These two irrigation rules (Table 1) were derived
    from previous water management studies conducted for maize in the study area (Bergez
    and Garcia, 2010; Bergez and Nolleau, 2003; Bergez et al., 2004, 2002; Leenhardt
    et al., 2004). We ran MODERATO for three cultivar choices (early, medium and late;
    Table 2). Show abstract Evolution of the STICS crop model to tackle new environmental
    issues: New formalisms and integration in the modelling and simulation platform
    RECORD 2014, Environmental Modelling and Software Show abstract Comparing sprinkler
    and drip irrigation systems for full and deficit irrigated maize using multicriteria
    analysis and simulation modelling: Ranking for water saving vs. farm economic
    returns 2013, Agricultural Water Management Citation Excerpt : Many authors assessed
    the impacts of DI on maize yields (Cabelguenne et al., 1999; Farré and Faci, 2009;
    Popova and Pereira, 2011; Ma et al., 2012), water productivity (Payero et al.,
    2009; Katerji et al., 2010) and economic returns (Rodrigues and Pereira, 2009;
    Abd El-Wahed and Ali, 2012; Domínguez et al., 2012). Consequently, authors searched
    irrigation schedules that could achieve the feasibility of DI because this technique
    highly depends upon the adopted management, i.e., when those deficits are applied
    (Bergez et al., 2004), as well as on irrigation and water costs (Kampas et al.,
    2012; Montero et al., 2012). Modelling can play a main role in determining rational
    deficit irrigation schedules (Mailhol et al., 2011; DeJonge et al., 2012; Ma et
    al., 2012). Show abstract An open platform to build, evaluate and simulate integrated
    models of farming and agro-ecosystems 2013, Environmental Modelling and Software
    Show abstract Pest management control of olive fruit fly (Bactrocera oleae) based
    on a location-aware agro-environmental system 2012, Computers and Electronics
    in Agriculture Citation Excerpt : Several attempts have been made to develop decision
    support systems (DSS) and ES for optimizing agriculture operations. DSS and ES
    systems have been developed for weed control (Macé et al., 2007), irrigation (Srinivasan
    et al., 1991; Lilburne et al., 1998; Bergez et al., 2004), fertilization (Lewis
    et al., 2003; Bonfil et al., 2004) and pest management (Ellison et al., 1998;
    Mahaman et al., 2002; Wharton et al., 2008). In a similar weed spraying system
    Zaman et al. (2011) have developed an automated prototype variable rate (VR) sprayer
    boom for site-specific application of agrochemicals on weeds. Show abstract View
    all citing articles on Scopus View Abstract Copyright © 2003 Elsevier B.V. All
    rights reserved. Recommended articles The detectability and persistence of road-killed
    butterflies: An experimental study Biological Conservation, Volume 200, 2016,
    pp. 36-43 Piotr Skórka View PDF An event of alternative splicing affects the expression
    of the NTRC gene, encoding NADPH-thioredoxin reductase C, in seed plants Plant
    Science, Volume 258, 2017, pp. 21-28 Victoria A. Nájera, …, Francisco Javier Cejudo
    View PDF Prevalence and Prognostic Significance of PTEN Loss in African-American
    and European-American Men Undergoing Radical Prostatectomy European Urology, Volume
    71, Issue 5, 2017, pp. 697-700 Jeffrey J. Tosoian, …, Tamara L. Lotan View PDF
    Show 3 more articles Article Metrics Citations Citation Indexes: 33 Captures Readers:
    56 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply.'
  inline_citation: '>'
  journal: Agricultural systems
  limitations: '>'
  pdf_link: null
  publication_year: 2004
  relevance_score1: 0
  relevance_score2: 0
  title: A hierarchical partitioning method for optimizing irrigation strategies
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22124380
  analysis: '>'
  authors:
  - Abbas Syed
  - Daniel Sierra-Sosa
  - Anup Kumar
  - Adel Elmaghraby
  citation_count: 7
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Syed, A.S.; Sierra-Sosa, D.;\nKumar, A.; Elmaghraby, A. Making\nCities\
    \ Smarter—Optimization\nProblems for the IoT Enabled Smart\nCity Development:\
    \ A Mapping of\nApplications, Objectives, Constraints.\nSensors 2022, 22, 4380.\
    \ https://\ndoi.org/10.3390/s22124380\nAcademic Editors: Laura Belli, Luca\nDavoli,\
    \ Marco Martalò and Gianluigi\nFerrari\nReceived: 17 May 2022\nAccepted: 8 June\
    \ 2022\nPublished: 9 June 2022\nPublisher’s Note: MDPI stays neutral\nwith regard\
    \ to jurisdictional claims in\npublished maps and institutional afﬁl-\niations.\n\
    Copyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article\
    \ is an open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of\
    \ the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nMaking Cities Smarter—Optimization Problems for the IoT\n\
    Enabled Smart City Development: A Mapping of Applications,\nObjectives, Constraints\n\
    Abbas Shah Syed 1,*\n, Daniel Sierra-Sosa 2\n, Anup Kumar 1 and Adel Elmaghraby\
    \ 1\n1\nDepartment of Computer Science and Engineering, University of Louisville,\
    \ Louisville, KY 40208, USA;\nanup.kumar@louisville.edu (A.K.); adel.elmaghraby@louisville.edu\
    \ (A.E.)\n2\nDepartment of Computer Science and Information Technology, Hood College,\
    \ Frederick, MD 21701, USA;\nsierra-sosa@hood.edu\n*\nCorrespondence: m0syed03@louisville.edu\n\
    Abstract: One of the prime aims of smart cities has been to optimally manage the\
    \ available resources\nand systems that are used in the city. With an increase\
    \ in urban population that is set to grow even\nfaster in the future, smart city\
    \ development has been the main goal for governments worldwide.\nIn this regard,\
    \ while the useage of Artiﬁcial Intelligence (AI) techniques covering the areas\
    \ of\nMachine and Deep Learning have garnered much attention for Smart Cities,\
    \ less attention has\nfocused towards the use of combinatorial optimization schemes.\
    \ To help with this, the current review\npresents a coverage of optimization methods\
    \ and applications from a smart city perspective enabled\nby the Internet of Things\
    \ (IoT). A mapping is provided for the most encountered applications of\ncomputational\
    \ optimization within IoT smart cities for ﬁve popular optimization methods, ant\
    \ colony\noptimization, genetic algorithm, particle swarm optimization, artiﬁcial\
    \ bee colony optimization and\ndifferential evolution. For each application identiﬁed,\
    \ the algorithms used, objectives considered,\nthe nature of the formulation and\
    \ constraints taken in to account have been speciﬁed and discussed.\nLastly, the\
    \ data setup used by each covered work is also mentioned and directions for future\
    \ work\nhave been identiﬁed. This review will help researchers by providing them\
    \ a consolidated starting\npoint for research in the domain of smart city application\
    \ optimization.\nKeywords: smart cities; Internet of Things (IoT); Artiﬁcial Intelligence;\
    \ optimization; genetic agorithm;\nparticle swarm optimization; heuristics\n1.\
    \ Introduction\nThe increasing population and urbanization in the world has led\
    \ to increased stress\non cities around the world. With an estimated 70% of the\
    \ worlds population living in\ncities by 2050 [1], governments and administrations\
    \ are developing methods to cater\nto this increasing rise in their city’s dwellers.\
    \ Moreover, the ever increasing effects of\nclimate change and global warming\
    \ have made necessary that these developments to\nthe city’s capacity also be\
    \ sustainable and environmentally friendly, following the United\nNations Sustainable\
    \ Development Goals for 2030 [2]. Considering these requirements,\nSmart Cities\
    \ have become a topic of great interest by governments and the private sector\n\
    worldwide. Smart Cities make use of technology to improve the living experience\
    \ of the\ncity’s inhabitants by contributing to important aspects of a city’s\
    \ functioning. There are\nvarious domains within smart cities, these include Smart\
    \ Agriculture, Smart City Services,\nSmart Grid, Smart Health, Smart Homes, Smart\
    \ Industry, Smart Infrastructure and Smart\nTransportation. With improvement of\
    \ Artiﬁcial intelligence (AI) capabilities in the last\ndecade, there have been\
    \ different applications of machine and deep learning algorithms\nwithin each\
    \ of these domains [3] providing for better decision making and improvement of\n\
    services. Apart from various supervised and unsupervised learning applications,\
    \ several\ntasks within different components of smart cities can be formulated\
    \ into optimization\nSensors 2022, 22, 4380. https://doi.org/10.3390/s22124380\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 4380\n2 of 34\nproblems\
    \ and/or require heuristics to be incorporated in some form. However, coverage\
    \ of\nsuch efforts for IoT bases Smart Cities has received less attention compared\
    \ to applications\nutilizing algorithms within the machine and deep learning domain.\n\
    In this regard, this paper presents a coverage of combinatorial optimization in\
    \ Internet\nof Things (IoT) based smart cities by deliberating on the most popular\
    \ applications of\noptimization algorithms and providing an insight to how those\
    \ problems are formulated\nand worked upon. Since optimization has been a topic\
    \ of interest to researchers in general,\nthere have several surveys which pertain\
    \ to individual aspects of smart cities such as\nelectricity distribution networks\
    \ [4], emergency facility location [5] and optimization in the\nindustry [6].\
    \ Vukobratovi´c et al. in [4] discuss the various optimization schemes used in\n\
    distribution network management and scheduling, Wang et al. [5] provide an overview\
    \ of\nthe emergency facility location problem. They deliberate on the mathematical\
    \ formulations\nand the extension of those problems. In [6], the authors provide\
    \ a review of optimization\nalgorithm development for industry 4.0, they provide\
    \ a discussion of the problems present\nin the industry and also discuss mathematical\
    \ formulations. Our work is different from\nthe work in [4–6] in that we provide\
    \ a mapped overview of the optimization landscape\nin the smart city domain while\
    \ considering the IoT. Through this mapping, the common\noptimization problems\
    \ across the various components of the IoT enabled smart city have\nbeen identiﬁed\
    \ to assist researchers working on optimization schemes in the ﬁeld. For each\n\
    problem discussed, the objective function used, the nature of the objective as\
    \ well as the\nconstraints considered have also been elaborated on. As has been\
    \ observed by [7], combi-\nnatorial optimization problems in the real-world are\
    \ known to be difﬁcult to formulate and\ngenerally are hard to solve. Moreover,\
    \ choosing the right algorithm is also a tedious task\nas each comes with a different\
    \ set of characterizations. This is very applicable to the IoT\nbases smart city\
    \ where applications in each component caters to a different environment\nand\
    \ aspect of the city’s operation and therefore requires intricate design of the\
    \ problem.\nIn order to organize the review, this paper takes guidance from the\
    \ work of [7]. They\nnote that the most popular algorithms for use in combinatorial\
    \ optimization problems are\nthe Ant Colony Optimization (ACO), Genetic Algorithm\
    \ (GA), Particle Swarm Optimization\n(PSO), Differential Evolution (DE) and Artiﬁcial\
    \ Bee Colony (ABC). Moreover, following\nfrom the discussion in [7], this paper\
    \ considers six factors for each application identiﬁed.\nThese are:\n1.\nThe type\
    \ of application: This refers to the problem being optimized within the smart\n\
    city domain.\n2.\nData Setup: For each application, we mention the data setup\
    \ used. While doing so,\nwe aim to capture the various ways in which researchers\
    \ have sourced data for their\nproposed method.\n3.\nSingle-Parallel problems:\
    \ Another thing to note in smart city optimization problems\nis whether a problem\
    \ has been considered as a single problem or multiple sub-\nproblems/parallel.\n\
    4.\nObjective direction, function and number of objectives: Maximization or minimization,\n\
    lowest ﬁtness function value desirable or higher ﬁtness function value is desirable.\n\
    Since we list the objectives, we also covere the number of objectives inherently.\
    \ Single\nobjective, where a single ﬁtness is optimized for its best value or\
    \ multi-objective where\nmultiple objective functions need to be considered at\
    \ the same time. The latter is a\ncomplex process as some objectives may have\
    \ conﬂicts and thus requires the need to\nperform trade-offs with what’s acceptable.\n\
    5.\nConstraints: Constraints are a set of restrictions or prerequisites that may\
    \ sometimes\nbe necessary to determine if a solution is considered valid or not.\
    \ Soft constraints\nare desirable but not necessary whereas hard constraints are\
    \ mandatory to be met.\nConstraints are put on the ﬁtness function according to\
    \ application being considered.\nCovering this aspect is particularly important\
    \ as constraints are determined by the\napplication being worked on.\nThe main\
    \ contributions of the paper are as follows:\nSensors 2022, 22, 4380\n3 of 34\n\
    1.\nThe paper provides a mapping of the optimization scenario for IoT based smart\
    \ city\napplications for all smart city constituent domains thereby providing\
    \ an overall view\nof the state of IoT enabled optimization applications for smart\
    \ cities.\n2.\nFor all of the applications discussed, the objective/s used in\
    \ the problem formulation\nare identiﬁed in terms of what function was used, the\
    \ number of objectives, whether\nit was solved in a parallel or singular manner\
    \ as well as the constraints considered\nhave also been highlighted.\n3.\nThe\
    \ detailed information provided herein for the covered work helps highlight the\n\
    diversity of the formulations used in different smart city applications. As is\
    \ observed,\nsimilar applications in smart cities require signiﬁcantly different\
    \ formualtions in\nterms of the constraints imposed as well as the objective function\
    \ utilized. Using the\nprovided insights, researchers and other stakeholders working\
    \ in the ﬁeld of smart\ncity optimization will have a ﬁrm starting point to develop\
    \ new applications.\n4.\nIt provides recommendations and directions for future\
    \ work in the domain of using\noptimization algorithms for the IoT based Smart\
    \ Cities.\nThe survey is organized as follows, Section 2 presents an introduction\
    \ to the ﬁve\nconsidered combinatorial optimization algorithms, Section 3 presents\
    \ the applications\nfound for these algorithms for each component of smart cities\
    \ and provides a discussion of\nthem based on the factors discussed previously.\
    \ Recommendations based on the compiled\ncoverage are given in Section 4 with\
    \ directions for future work in Section 5 to help guide\nresearchers in this ﬁeld\
    \ while Section 6 concludes the paper.\n2. Algorithms\nMetaheuristic algorithms\
    \ are widely used to solve combinatorial optimziation prob-\nlems in the real-world\
    \ [7]. The aim of these algorithms is to determine the minima or\nmaxima of an\
    \ objective function which translates an optimization objective in to one or\n\
    more mathematical equations. Five algorithms have been considered in this review,\
    \ these\nare the Ant Colony Algorithm, Genetic Algorithm, Particle Swarm Optimization\
    \ Algorithm,\nDifferential Evolution and Artiﬁcial Bee Colony. As mentioned earlier,\
    \ these have been\nchosen as these were the most commonly used optimzation algorithms\
    \ identiﬁed by [7].\nIn this section, we provide a brief intuitive description\
    \ for each of them.\n2.1. Ant Colony Optimization\nAnt colony optimization is\
    \ derived from the behavior of ants searching for food [8]. It\nwas observed that\
    \ during this process, each ant deposits a chemical called pheromone on\nthe path\
    \ which it takes towards the food. The more the ants take a given path, the more\n\
    the pheromone is deposited on it as it is deposited by each ant going over it.\
    \ Subsequent\nants that want to go towards the food use the amount of pheromone\
    \ on a given path or\nsub-path to decide which path to take so as to determine\
    \ the optimal route to the food.\nIn the artiﬁcial ant colony optimization algorithm,\
    \ the points on the path that form the\nsub-paths are encoded on a graph where\
    \ each ant can only visit a given vertex (travel\non the same sub-path) once.\
    \ Each iteration starts with a number of artiﬁcial ants, an ant\nwould choose\
    \ the next vertex to visit based on the level of pheromone on the possible\nsub-paths\
    \ available to it as well as whether that path has been used before. At the end\
    \ of\neach iteration, the pheromone levels are updated so as to prioritize the\
    \ use of the most used\npath for ants in the next iteration.\n2.2. Genetic Algorithm\n\
    A genetic algorithm [9] is based on evolutionary science. The idea behind the\
    \ genetic al-\ngorithm is that starting from a given population set of organisms,\
    \ subsequent reproduction\nwill result in ﬁtter organisms being produced given\
    \ that the organisms chosen for repro-\nduction have some level of ﬁtness. To\
    \ solve an optimization problem, a genetic algorithm\nbegins with a given population\
    \ size of strings also called a chromosome. Each ‘chromo-\nsome’ consists of a\
    \ ‘gene’ which may represent points in the population. The sequence\nSensors 2022,\
    \ 22, 4380\n4 of 34\nin which the genes are present would represent a solution\
    \ to the problem. For e.g., for a\nroute scheduling problem, this may be the coordinates\
    \ of the stops. The ‘goodness’ of a\nchromosome is determined by a ﬁtness function\
    \ that quantiﬁes how appropriate a given\nchromosome is as a solution for the\
    \ problem. Choosing the right ﬁtness function is an\nimportant consideration in\
    \ genetic algorithms as it needs to gauge the kind of optimization\nthat is to\
    \ be performed. The optimization process starts with an initial population of\
    \ a\ngiven size. Once a ﬁtness function has been deﬁned, in each iteration, two\
    \ or more chro-\nmosomes (parents) are taken at random from the population and\
    \ one or more offsprings\nare generated. The random selection takes the selected\
    \ parents ﬁtness function value in to\naccount, however, its necessary that not\
    \ all parents chosen are the ﬁttest of the population\nas otherwise, diversity\
    \ will be compromised, and the algorithm may get stuck in a local\nminimum. The\
    \ method by which these offspring are generated is called the Crossover\nfunction\
    \ and the number of parents mated to form offsprings from them depends on the\n\
    crossover rate. The Crossover function deﬁnes the way the genes within the chromosomes\n\
    are exchanged. Usually, the crossover rate has a high value. Moreover, depending\
    \ on some\nmutation rate, a given fraction of all offsprings are mutated. Mutation\
    \ depends on the\nmutation function used and involves members of the offspring\
    \ being swapped in some\nmanner. When one iteration of the offspring creation\
    \ from the parents in the entire popula-\ntion is completed, the offsprings replace\
    \ members of the original population (typically the\nweakest) and one generation\
    \ of the GA is said to be completed. In order to converge to a\nsufﬁciently good\
    \ result, GA’s need to run for many generations.\n2.3. Particle Swarm Optimization\n\
    Particle Swarm Optimization is modeled on the social behavior of animals rather\
    \ than\nthe evolutionary biological behavior on which Genetic Algorithms are based.\
    \ PSO [10] is\nparticularly based on the behavior of a ﬂock of birds searching\
    \ for food. Each bird in the\nﬂock searches for food and can communicate with\
    \ other birds in the ﬂock as soon as it\nﬁnds food or a good direction for it.\
    \ Therefore, each bird has two food ‘directions’ that it\nneeds to consider, ﬁrst\
    \ is on an individual level which is called the personal best and the\nsecond\
    \ is on the ﬂock level which is the global best. Using these two values the bird\
    \ will\nproceed towards that path and will inform other birds in the ﬂock too.\
    \ The idea here is\nthat after enough time and with all the individuals working\
    \ together, the swarm will ﬁnd\nthe place with the highest concentration of food.\
    \ In terms of using PSO for optimization\ntasks, individual birds are equivalent\
    \ to a solution as in a GA and each is considered as a\npoint or a particle, collectively\
    \ they make up the swarm. This swarm population may be\ninitialized randomly or\
    \ based on some domain knowledge about the problem. The highest\nconcentration\
    \ of food represents the optimal solution for the whole swarm where as a good\n\
    direction represents the local optimal solution for each case. The aim here, like\
    \ birds in a\nﬂock is to determine the global optimal solution using information\
    \ from each individual\nparticle. Each particle has three aspects to it, its position,\
    \ its velocity and a value of its\ncurrent position’s ‘goodness’. This ‘goodness’\
    \ as in the GA is deﬁned by a ﬁtness function.\nLike birds, each particle has\
    \ a personal best ﬁtness value and is also ware of the global best\nﬁtness value.\
    \ For any particle, the new direction of movement is decided by a combination\n\
    of the personal best and the global best as well as the particle’s intention to\
    \ maintain\nits current movement. Furthermore, several different topologies can\
    \ be utilized, and a\nneighborhood can also be set for each particle to convey\
    \ positions when limiting the global\nbest parameter to the local best scheme\
    \ rather than the whole swarm. The algorithm may\nbe stopped till the best solution\
    \ is reached or no more improvement is observed.\n2.4. Differential Evolution\n\
    Differential evolution [11] is a stochastic evolutionary algorithm which is used\
    \ for\noptimization problems for continuous functions. The DE algorithm does not\
    \ expect gra-\ndient information and thus it doesn’t need to be differentiable.\
    \ Like other evolutionary\nalgorithms, a solution is searched for in the design\
    \ space by maintaining a set of individual\ncandidate solutions. In each iteration,\
    \ the solutions with the best ﬁtness are combined\nSensors 2022, 22, 4380\n5 of\
    \ 34\ntogether and retained for the next iteration. The aim is to improve upon\
    \ the ﬁtness value\nand this process is repeated until a pre-decided condition\
    \ for termination of this process\nis satisﬁed. Differential Evolution is very\
    \ similar to Genetic Algorithms in that both are\nevolutionary in nature, however,\
    \ the difference is that the DE uses real numbers in the\nchromosome and also\
    \ that the mutation operation consists of the difference between two\nor more\
    \ chromosomes of the population with the possible addition of some type of noise\n\
    to create a new individual. Like GA, DE also suffer from getting stuck in local\
    \ minima.\nThe DE algorithm also has three control parameters, the population\
    \ size, the mutation\nfactor and the crossover probability.\n2.5. Artiﬁcial Bee\
    \ Colony\nArticle Bee Colony [12] is a swarm intelligence algorithm based on the\
    \ behavior of bees.\nWithin bees, there are different social classes who work\
    \ together to complete tasks such as\nharvesting pollen and nesting through the\
    \ use of smell, ’swing dance’ and other methods.\nBee colonies consist of three\
    \ types of bees, queen, male and the worker bees which work\non activities such\
    \ as searching for food, gathering and storage of honey. After gathering\nhoney,\
    \ the worker bee comes to the nest and informs other bees about the location of\
    \ the\nhoney source site through a dance. The ABC algorithm simulates the behavior\
    \ of bees\nby considering three elements, the food source, employed bees and unemployed\
    \ bees.\nThe food source is represented as revenue considering its distance and\
    \ quality, the higher\nthe revenue, the better is the value. In computational\
    \ optimization terms, the food source is\na potential solution to the objective\
    \ formulation of the considered problem and the quality\nor value of the food\
    \ source represents the ﬁtness value of that particular solution. At the\nstart,\
    \ all bees are used as scouts, searching for food sources. When a food source\
    \ is found,\nfor a high value food source, bees who ﬁnd those food sources become\
    \ hire bees and collect\nthe food source. If the food source is of intermediate\
    \ value, the bees become follow bees\nand if the food source value becomes low,\
    \ the bees become scout bees to look for better\nfood sources. Hire bees, the\
    \ bees with a food source location having a high value, lead\nthe follow bees\
    \ to develop solutions in their neighborhood in order to come up with more\nsolutions.\
    \ A subset of the highest-ranking solutions are then considered before this process\n\
    is repeated again until the end conditions are met.\n3. Optimization Application\
    \ in Smart Cities\nSeveral tasks in smart city operations require the use of metheuristics\
    \ to be solved,\nthe aim being to optimize the resources present in the city.\
    \ This section presents the different\nuses of optimization techniques for IoT\
    \ enabled Smart Cities. This task is performed for all\neight components, Smart\
    \ Agriculture, Smart City Services, Smart Grid, Smart Health, Smart\nHomes, Smart\
    \ Homes, Smart Industry, Smart Infrastructure and Smart Transportation.\n3.1.\
    \ Smart Agriculture\nSmart Agriculture involves the use of digital technologies\
    \ such as sensors and intelli-\ngent systems to improve agricultural productivity.\
    \ The sustenance of agriculture depends\non water, and it is central to the agricultural\
    \ production of food items around the world.\nHowever, water is becoming an ever-scarce\
    \ resource due to the increasing demand caused\nby human population growth, increased\
    \ economic activity by industries and also due to\nclimate change. It therefore\
    \ is necessary to utilize this precious resource wisely so as make\nuse of it\
    \ in the best manner possible. One approach towards ensuring that water and land\n\
    is used appropriately is by introducing irrigation management schemes such as\
    \ irrigation\nscheduling and water allocation in the farming process. A summary\
    \ of the optimization\nproblems, objectives, constraints in smart agriculture\
    \ and the use of IoT is illustrated in\nFigure 1.\nSensors 2022, 22, 4380\n6 of\
    \ 34\nSmart Agriculture \nIrrigaƟon\nWater\nScheduling \nIrrigaƟon\nWater\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon\nand Water\nControl \nObjectives: Minimize\nwater\nusage/deviation/leakage\n\
    Maximize benefits\nConstraints: Land area\navailable, water limits\nObjectives:Minimize\n\
    leakage \nMaximize net return,\nwater usage \nConstraints: Water\nlimits, capacity\
    \ of\nirrigation system, flow\ncapacity, discharge\nlimits, time limits\nObjectives:\
    \ Minimize\nenergy cost \nConstraints: Limited\nenergy available, water\nvolume\
    \ minimums\nIoT Usage: Sensors provide information about water flow, amount of\
    \ water and more\nConstraints: Water\nlimits, capacity of\nirrigation system,\
    \ flow\ncapacity, discharge\nlimits, time limits\nFigure 1. Optimization applications\
    \ in Smart Agriculture.\nMeasurements in water irrigation systems are typically\
    \ performed by sensors placed\nat different points in the canals and rivers to\
    \ determine water ﬂow, volume and speed. This\ninformation regarding water movement\
    \ can be combined with economic information such\nas yeild, crop proﬁt to optimization\
    \ water distribution. Irrigation management through\nscheduling has been performed\
    \ by the authors of [13–16] to maximize net return on crop\nproﬁts, water use\
    \ efﬁciency and to minimize leakage losses. In [17] Fuqiang et al. aim to\noptimize\
    \ water delivery through canals while also performing scheduling. They do this\n\
    using a genetic algorithm and work with two objectives, minimizing the difference\
    \ between\nthe time of water delivery and water demand and the ﬂuctuation in water\
    \ discharge of the\nmain canal. Their model was applied to a district in China.\n\
    The authors in [18,19] work on optimal allocation of water. Of these, Ikudayisi\
    \ et al. [18]\nuse the differential evolution algorithm to minimize the water\
    \ allocated to farms in South\nAfrica while maximizing the beneﬁts in terms of\
    \ job creation, ensuring food security and\nthe yield of crops. Wu et al. [19]\
    \ approach this as problem of reducing deviation between\ndifferent channels and\
    \ minimizing water seepage to ensure a more consistent supply to\nall water channels.\
    \ An approach presented by Ocampo et al. [20] tackles this problem not\nas a task\
    \ of allocation directly but considers the scenario of providing sufﬁcient water\
    \ to a\nsmart farm while controlling two water pumps. The objective function is\
    \ formulated to\nminimize the energy cost of the water pumps while maintaining\
    \ sufﬁcient supply of water\nto the plants on the farms. Constraints considered\
    \ for such applications include the limited\nquantities of water being worked\
    \ with, the time for which the water was available and the\narea of land which\
    \ was to be considered. Another allocation based scheme is presented\nby the authors\
    \ of Zhuo et al. [21] who use a genetic algorithm for an irrigation system\nbased\
    \ on a reservoir and two pumping stations. Their aim is to ensure that there is\
    \ no\nwater shortage. The objective function used by them is the minimization\
    \ of the annual\nsum of squared water shortage. Other work in [22] also minimizes\
    \ use of groundwater\nSensors 2022, 22, 4380\n7 of 34\nand increase beneﬁt to\
    \ the regional water supply through reduction of water deﬁcits in the\nDujiangyan\
    \ of China.\nA precision agriculture scheme is presented by Roy et al. [23] who\
    \ combine an IoT\nsystem consisting of sensors on plants using a GA based rainfall\
    \ predictor. Combining\npredicted rainfall information along with the sensed moisture\
    \ level in the crops, they control\nplant watering. Lin et al. [24] propose a\
    \ framework for the management of fertigation and\nirrigation in precision agriculture.\
    \ They perform short term management and long-term\nmanagement. Soil and crop\
    \ growth data is gathered from IoT based sensor systems. Long\nterm planning refers\
    \ to the allocation of water and fertilizer resources to crops in terms of\nquantity\
    \ so as to meet demands whereas short term refers to when how to use them. They\n\
    use a genetic algorithm for long term planning considering the allocation of water\
    \ and\nfertilizer for crops to maintain pH value and the electrical conductivity.\
    \ This information\nhas been presented in Table 1 while a summary of the identiﬁed\
    \ data sources used by each\nconsidered work has been provided in Table 2.\nTable\
    \ 1. Optimization in Smart Agriculture.\nApplication\nAlgorithm\nSingle/Parallel\n\
    Problems\nObjectives\nConstraints\nIrrigation\nManagement\n(Irrigation Water\n\
    Scheduling)\nACO [13]\nSingle\nMaximizing net return on crop\nConstraint on water\
    \ availability\nPSO [14]\nCapacity of irrigation system\nWater savings should\
    \ be more than\ndeﬁciency\nGA [17]\nSingle\nMinimize water ﬂuctuations\nand difference\
    \ between the\ntime of water demand and\nneed\nFinite canal capacity\nMaximum\
    \ rotation time limitation\nGA [15]\nParallel\nMaximize yield, global and\nlocal\
    \ water use efﬁciencies\nConstraint on irrigation interval\nMinimum and max irrigation\
    \ amount\nGA [16]\nParallel\nMinimize leakage loss both\nindividually and overall\n\
    Flow capacity limited by maximum\nIrrigation time constraint\nNet discharge constraint\n\
    Total ﬂow rate should be sum of\nindividual ﬂowrates\nIrrigation\nManagement\n\
    (Irrigation Water\nAllocation)\nDE [18]\nSingle\nMinimize irrigation water\nallocated\
    \ and maximizes net\nbeneﬁts\nConstraint on the land area available\nMinimum and\
    \ max planting areas for\ncrops\nLimited water available for the farm\nPSO [19]\n\
    Parallel\nMinimize deviation in the\ndifferent channels, water\nseepage in the\
    \ distribution\nchannels\nTime\nWater quantity constraints\nSensors 2022, 22,\
    \ 4380\n8 of 34\nTable 1. Cont.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\n\
    Objectives\nConstraints\nGA [22]\nParallel\nMaximize beneﬁt to regional\nwater\
    \ supply, minimize water\ndeﬁcit groundwater\nexploitation in regions\nWater supply\
    \ quantity constraints for\nannual water, ground water\nIrrigation\nManagement\n\
    (Energy\nOptimization)\nGA [20]\nParallel\nMinimize energy cost while\nmaintaining\
    \ water supply for\nplants\nLimited energy available\nWater volume maintained\
    \ in storage\ntank, ﬁsh pond\nGA [21]\nSingle\nMinimize sum of squared\nwater\
    \ shortage\nAnnual water availability in reservoir\nWater rights of replenishment\n\
    pumping station\nWater rights of the irrigation pumping\nstation\nOperational\
    \ rule constraints\nIrrigation\nManagement\n(Water Control)\nGA [25]\nSingle\n\
    Maximize yield\nMinimum and maximum water depth\nlimits\nMin and max soil moisture\n\
    Irrigation and\nFertilizer\nManagement\nGA [24]\nSingle\nMaximize economic proﬁts\n\
    and environmental beneﬁts\nLimits on the demand of water for\neach crop\nTotal\
    \ water does not exceed available\nTotal fertilizer doesn’t exceed\navailability\n\
    Water allocation should be positive\nTable 2. Data setup used for Smart Agriculture\
    \ Optimization.\nData Type\nPapers\nSelf-collected/Presented\n[14,16,17,20,24,25]\n\
    Government and private agencies\n[13–19,25]\n3.2. Smart City Services\nAccording\
    \ to the world bank, the amount of annual solid waste generated is set to be\n\
    3.40 billion tons [26] in 2050. Managing this waste and its collection in an efﬁcient\
    \ manner is\nimperative for health and climate reaons. The most common application\
    \ towards smart city\nservices optimization is waste management as illustrated\
    \ in Figure 2 which summarizes\nthe objectives, constraints and the use of IoT.\n\
    Smart waste collection systems include sensors attached to trash cans which can\n\
    inform the municipal authority about the status of the garbage present in them.\
    \ Once the\ntrash cans are close to being full, it is the responsibility of the\
    \ municipal corporation to\nperform garbage collection in an efﬁcient manner.\
    \ In this respect, data provided by the\nsensors on garbage cans can be used to\
    \ determine an optimized route for garbage collection\nto construct the Vehicle\
    \ Routing Problem (VRP) in the Smart City Services domain. As such,\nthis problem\
    \ has been performed keeping in view various goals. The minimization of\nthe route\
    \ distance taken by a garbage tuck has been performed by the authors in [27–31].\n\
    The aim in this case is to determine a route for garbage collection vehicles that\
    \ minimizes\nthe total distance traveled by the them. Zhang et al. [31] consider\
    \ multi-vehicle allocation\nSensors 2022, 22, 4380\n9 of 34\nwhile considering\
    \ the single objective of minimizing route distance. Wei et al. [32] use\nthe\
    \ Artiﬁcial Bee Colony algorithm to determine garbage collection routes resulting\
    \ in\nthe minimum emission of CO2. Another optimization objective in route optimization\n\
    for waste management has been the minimization of the total travel time, such\
    \ a target\nis described by the authors of [33–36] who aim to reduce travel time\
    \ while considering\nemptying of waste bins. Another optimization consideration\
    \ in route optimization for\nwaste management is to reduce cost. This has been\
    \ carried out by Tirkolaee et al. [37] who\nformulate a multi-objective function\
    \ of travel cost and total useage cost of vehicles and\ndetermine the route with\
    \ the minimum costs using the ACO. Constraints considered in\nsuch applications\
    \ are related to a ﬁxed road network which depends on the locality for\nwhich\
    \ the optimization is being performed, the continuity in the determined route\
    \ as well\nas fulﬁllment of capacity restrictions. The useage of optimization\
    \ algorithms in smart city\nservices is provided in Table 3 and the data sources\
    \ used are provided in Table 4.\nSmart City Services \nWaste Management\nRoute\
    \ OpƟmizaƟon \nObjectives: Minimize\ndistance, CO2\nemissions, travel time\nConstraints:\
    \ Road\nnetwork fixed, location\nserved by one truck,\ncontinuous routes,\ndeadline\
    \ to finish jobs,\ncapacity limited\nIoT usage: Sensors for\ntrash fill level\
    \ and\nweight detection\nFigure 2. Optimization applications in Smart City Services.\n\
    Sensors 2022, 22, 4380\n10 of 34\nTable 3. Optimization in Smart City Services.\n\
    Application\nAlgorithm\nSingle/Parallel Problems\nObjectives\nConstraints\nWaste\
    \ Management\nRoute Optimization\nACO [27]\nSingle\nMinimization of\ndistance\n\
    Road Network is ﬁxed\nGA [28,29,31]\nEach dumpster served by one\ntruck only\n\
    Trucks leave depot to go to landﬁll\nPSO [30]\nRoutes are continuous\nABC [32]\n\
    Single\nMinimize CO2\nemissions\nCapacity constraint for bins as\nwell as trucks\n\
    ACO [33]\nSingle\nMinimize total\ntravel time\nTrucks leave a depot empty\nGA\
    \ [34,35]\nBins needs to be fully emptied by\ntrucks\nVehicle start depot and\
    \ end at\nlandﬁll\nPSO [36]\nDemand should not exceed\ncapacity\nACO [37]\nSingle\n\
    Minimize travel\ncost and total usage\ncost of vehicles\nSubtour elimination\n\
    Jobs should ﬁnish within a given\ndeadline\nTable 4. Data setup used for Smart\
    \ City Services Optimization.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [27–29,31,33,35,37]\nGovernment Agency\n[34,36]\nDataset\nCapacitated VRP datasets\
    \ [38] by [30],\nCapacitated VRP Instances [39] by [32]\n3.3. Smart Grid\nThe\
    \ electricity grid has been a major beneﬁciary of smart city technologies. The\
    \ in-\ncreasing demand for energy by consumers along with the environmental impact\
    \ that fossil\nfuel-based energy production has on the planet has forced utility\
    \ companies to introduce\nrenewable energy sources within the electricity distribution\
    \ system and make their energy\nproduction and distribution systems more efﬁcient\
    \ through planning and design improve-\nments. Optimization algorithms ﬁnd applications\
    \ within the smart grid (SG) domain in\nterms of power management and planning.\
    \ A summary of the applications, objectives,\nconstraints and IoT useage for optimization\
    \ algorithms in Smart Grids has been illustrated\nin Figure 3.\nAn increasing\
    \ population has led to an increasing demand for electricity around\nthe world.\
    \ This burdening of the electricity grid has led to measures for increasing the\n\
    performance of the electricity distribution system by reducing loss, prevent overload\n\
    and reduce cost. The authors in [40–46] work on the improvement of grid performance\n\
    by minimizing cost and reducing power losses. Power loss minimization is speciﬁcally\n\
    targeted by [40,42,44]. Of these, Ettappan et al. [40] aim for the reduction of\
    \ power losses,\nvoltage deviation and increasing voltage stability. Atteya et\
    \ al. [44] also address this\nproblem by considering network redistribution to\
    \ minimize losses in the grid whereas\nSakr et al. [42] focuses on minimizing\
    \ transfer losses in the smart grid to accomplish\nthis task. Nguyen and Mohammadi\
    \ [43] attempt the reduction of power losses and line\ncongestion by determining\
    \ the location of thyristor controlled series compensator devices\n(TCSC). The\
    \ problem is formulated as a multi-objective problem aiming to minimize\nloadability\
    \ of the lines, active power loss and the reactance of the transmission line.\
    \ A cost\nSensors 2022, 22, 4380\n11 of 34\nreduction-based approach to improve\
    \ grid performance is followed by Das et al. [41] who\naim to reduce cost of maintaining\
    \ electrical stability and also the cost of management of the\ndistribution network.\
    \ The do this by considering changing the location of energy storage\nsystems\
    \ within the grid. Kanwar et al. [45] take maximizing proﬁts and minimization\
    \ of\npower losses while considering sizing of a distributed energy resource generation\
    \ system.\nSmart Grid \nPower Management \nImproved Grid\nPerformance \nDistributed\n\
    Energy\nResource\nManagement \nPlanning \nExpansion of\nDistribuƟon\nNetwork \n\
    Objectives: Minimize power\nloss, voltage deviation,\nreactance, average\nloadability,\
    \ cost \nMaximize profit  \nConstraints: Power flow\nrestrictions, location\n\
    limitations, operational\nlimitations. capacity limits,\nload balances, power\
    \ limits,\ntopology restrictions\nObjectives: Minimize cost,\nemissions \nConstraints:\
    \ Power limits\n(generation and\ndistribution), battery\ncharge/discharge limits,\n\
    load schedule restrictions,\ncapacity limits\nObjectives: Minimize\nexpansion\
    \ cost, number of\nunits, power losses\nConstraints: Power flow\nrestrictions,\
    \ generation\nlimits, infrastructure limits\nIoT Usage: Loads and other devices\
    \ in the power network can be swithced on and off as needed. Phase\nmeasurement\
    \ units for e.g., provide capability to obtain measurements in the smart grid\n\
    Figure 3. Optimization applications in Smart Grid.\nDistributed energy resource\
    \ (DER) management is another area where optimization\nalgorithms are used in\
    \ Smart Grids. The management of distributed energy sources\nwithin smart grids\
    \ is dependent on the interconnectivity provided by IoT in the smart\ngrid system.\
    \ Smart meters within the smart grid provide real-time information relating\n\
    to power consumption which can be used for controlling DER electricity. Moreover,\
    \ IoT\ndevices allow for switching loads and generation sources as required. This\
    \ assists in\ncreating a virtual power plant (VPP) to aggregate all energy sources\
    \ in a DER scenario.\nWith global warming and a changing climate, utilities around\
    \ the world are increasingly\nincorporating various renewable energy sources within\
    \ their grid which often times are\nan economically convenient option as well.\
    \ However, many of these sources such as wind\nand solar (photo voltaic [PV])\
    \ do not offer a consistent supply of power throughout the day.\nIn this regard,\
    \ systems such as batteries as well as conventional generation plants need to\n\
    be used together along with renewable energy sources. For utility companies, it\
    \ is necessary\nto optimize power production so that the maximum amount of energy\
    \ is utilized from\nthese renewable sources so as to reduce cost to the user while\
    \ also maintaining the quality\nof service. The authors in [47–60] provide a management\
    \ scheme for DERs to minimize cost.\nIn this regard, the authors in [47,48,50–52,55,58–60]\
    \ all formulate the problem of distributed\nenergy resource management as a single\
    \ objective problem where the cost incurred is\nSensors 2022, 22, 4380\n12 of\
    \ 34\nminimized. On the other hand, the authors in [49,53,56,57] formulate this\
    \ as a multi-\nobjective problem. Azaza and Wallin [57] not only target reduction\
    \ of electricity production\ncost but also maximize reliability of the system\
    \ while reducing the environmental impact of\nthe distribution system. It is interesting\
    \ to note that the improvement of system reliability\nis formulated as a minimization\
    \ problem as well. Similarly, Das et al. [49] consider the\nreduction of both\
    \ the total cost as well as the environmental cost of the system. Their\nconsidered\
    \ scenario also consists of a PV, Wind Turbine and battery. The constraints\n\
    considered were constraints regarding power ﬂow, limitations on power and voltage\n\
    values, power balance constraint and power generation constraints on the renewable\n\
    energy sources. In [47,60], a DER management system is developed for a microgrid\
    \ which\nconsists of a controllable collection of energy storage and generation\
    \ sources powered by\nIoT devices.\nPlanning in distribution networks has been\
    \ considered by the work of [61,62]. Mahdavi\net al. [61] work on expanding transmission\
    \ lines utilizing the artiﬁcial bee colony algorithm\nto minimize cost of network\
    \ expansion, power losses in load and generation. On the\nother hand, Maji and\
    \ Acharjee [62] aim to determine the minimum number of Phase\nMeasurement Units\
    \ (PMUs) to make the distribution network observable. The constraints\nused were\
    \ power ﬂow and balance of power as well as limits on the number of transmission\n\
    lines available. The internet of things also ﬁnds usefulness in terms of the use\
    \ of Phase\nMeasurement Units (PMU) that provide voltage and current measurement\
    \ capabilities\nwithin smart grids to perform maintenance and monitoring operations.\
    \ This has provided\nin Table 5 and the data setups used by the covered research\
    \ work is presented in Table 6.\nTable 5. Optimization in Smart Grid.\nApplication\n\
    Algorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nPower\nManagement\n\
    (Improve Grid\nPerformance)\nABC [40]\nSingle\nMinimize active power\nloss, volage\
    \ deviation and\nvoltage stability index\n(L-index)\nPower ﬂow constraints\nGA\
    \ [42]\nRestriction on power source\ninstallations and other components\nrelated\
    \ to power structure\nPSO [44,46]\nSingle\nMinimize power loss\nGeneration and\
    \ other component\noperations within limits\nGA [43]\nSingle\nMinimize average\n\
    percentage of loadability of\nthe lines, active power loss,\nreactance of transmission\n\
    line\nLimitation on values of bus voltage\nTransmission line capacity, generator\n\
    active and reactive power.\nABC [41]\nSingle\nMinimize cost for\nmaintaining thermal\
    \ and\nvoltage stability and lower\nasset management of\ndistribution networks\n\
    Active and reactive power must be\nbalanced\nLimits on voltage and load maximum\n\
    ESS max charging and discharging\nconstraints\nSensors 2022, 22, 4380\n13 of 34\n\
    Table 5. Cont.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\nObjectives\n\
    Constraints\nPSO [45]\nParallel\nMaximize annual proﬁt by\nreducing charges for\n\
    annual energy losses, peak\npower loses etc\nConstraint on the node voltage (soft)\n\
    Minimize power loss for\nthe network\nreconﬁguration\nPower injected by DER and\
    \ SG within\nlimit\nPower generated at a given node has a\nlimit\nFor reconﬁguration:\n\
    Radial topology,\nNode voltages has a max hard\nconstraint\nPower\nManagement\n\
    (Distributed Energy\nResource\nManagement)\nABC [50–52]\nSingle\nMinimize total\
    \ cost\nPower generation by renewables\nwithin limits\nDE [53–55]\nBattery charge\
    \ and discharge limits\nand system reliability\nGA [47,48]\nPower balance constraint\
    \ (generated\nequal to consumed)\nPSO [58–60]\nSpeciﬁc loads are interruptible\n\
    Constraints on the efﬁciencies of the\nsources\nDE [56]\nSingle\nMinimize cost\
    \ and\nemission\nABC [63]\nSingle\nMinimize cost and power\nimported from outside\n\
    micro-grid\nPower ﬂow constraints for the DER\nGA [49]\nSingle\nMinimization of\
    \ cost of\nenergy and life cycle\nemissions (CO2 and energy\nstored in batteries\
    \ or\nconverted by renewable\nsources during process of\nsatisfying load\nrequirements)\n\
    Constraints on battery capacity\nSystem reliability constraint\nEnergy produced\
    \ equal or greater\nsthan required\nPSO [57]\nSingle\nMinimize reliability cost,\n\
    cost of electricity\nproduction and operation\nenvironmental impact\n()using renewable\
    \ factor)\nExpansion of\ndistribution\nnetwork\nABC [61]\nSingle\nMinimize cost\
    \ of network\nexpansion, active losses\nand loss of load and\ngeneration\nPower\
    \ ﬂow and active power\nbalanced\nPower generation limits\nNumber of transmission\
    \ line limits\nPSO [62]\nSingle\nMinimize number of PMUs\nSG Network should be\
    \ observable\nSensors 2022, 22, 4380\n14 of 34\nTable 6. Data setup used for Smart\
    \ Grid.\nData Type\nPapers\nSelf-collected/Presented/Generated\n25 Bus networks\
    \ [49,53,55–60,63]\nGovernment Agency/other research work\n[48,50–52,57,61]\n\
    Dataset/Standard Network\nIEEE 14 Bus [42,62]\nIEEE 30 Bus [40,42,43]\nIEEE 33\
    \ Bus [41,44,45,54]\nIEEE 37 Bus [47]\nIEEE 57 Bus [40,42,62]\nIEEE 69 Bus [45]\n\
    119 Node system of [46,64]\n3.4. Smart Health\nSmart health refers to the use\
    \ of technology to provide better healthcare to patients.\nThis can be in the\
    \ form of developing tools for better diagnosis of diseases or the use\nof algorithms\
    \ for better planning and healthcare delivery. The deployment of timely\nemergency\
    \ vehicles to a person in need is imperative towards providing healthcare services\n\
    to people. Two applications of optimization problems within Smart Health are emergency\n\
    vehicle routing and their allocation and relocation as shown in Figure 4. It also\
    \ summarizes\nthe objectives uses, constraints considered and role of IoT.\nSmart\
    \ Health \nEmergency\nVehicle\nAllocaƟon and\nRelocaƟon \nEmergency\nVehicle RouƟng\
    \ \nObjectives: Minimize time,\ncost\nConstraints: Traffic balance,\ntraffic flow\
    \ restrictions,\nvehicle speed and number\nlimits, location of\nemergency vehicle\n\
    Objectives: Minimize time,\nvehicle density \nConstraints: Road connection\nrestrictions,\
    \ time limits \nIoT Usage: Real time location services, real time traffic\ninformation,\
    \ vehicle to vehicle and vehicle to infrastructure\ncommunication can also provide\
    \ better navigation and monitoring\nservices\nFigure 4. Optimization applications\
    \ in Smart Health.\nSensors 2022, 22, 4380\n15 of 34\nLate arrival of ambulances\
    \ and other emergency vehicles to people in need may result\nin irreversible damage\
    \ to life and property. Studies have shown that delayed ambulance\ndispatch increases\
    \ mortality [65], moreover, economically speaking, a one-minute delay in\nresponse\
    \ time for cardiac patients found that the mortality increases by 1% and adds\
    \ annual\ncosts of USD 7 billion in healthcare expenditure [66]. Keeping this\
    \ in mind ambulance\ndeployment and location determination have been of considerable\
    \ interest in the area of\noptimization for smart health. These two problems are\
    \ speciﬁc cases of the Vehicle Routing\nProblem [67] and Maximum coverage problem\
    \ [68] sometimes called the Ambulance Rout-\ning Problem [69] and Ambulance Location\
    \ Problem [70]. The authors in [71] work on the\noptimal allocation determination\
    \ based on ﬁxed sites and a ﬁnite number of ambulances\nwhile minimizing lateness\
    \ of ambulance arrival using the Ant Colony Optimization. Later\non, in their\
    \ work in [72], they do a comparison with using GAs and ﬁnd that GAs provide\n\
    the better performance. Kochetov and Shamray [73] attempt localization of ambulance\n\
    ﬂeet at base stations with the aim to minimize the average waiting time for arrival\
    \ of\nambulances. An interesting approach to this problem is presented in Yan\
    \ et al. [74] who\nwork on this problem from a scheduling perspective where they\
    \ control scheduling of\nemergency vehicles to reduce the total cost in terms\
    \ of money and time using a Genetic\nAlgorithm. Another approach for sequencing\
    \ vehicles to ensure emergency vehicles reach\ntheir destination in time is presented\
    \ by Lu et al. [75] who aim to prioritize emergency\nvehicle thoroughfare on trafﬁc\
    \ intersections. They do this by minimizing the entrance time\nof the vehicle\
    \ by manipulating vehicle order. Constraints used for these problems include\n\
    constraints on the speed of the ambulances, the ﬂow of vehicles on the road, speciﬁc\
    \ road\nconnections present as well as time constraints. The internet of things\
    \ serves a pivotal role\nin enabling the allocation and routing of emergency vehicles.\
    \ The connectivity provided by\nIoT through vehicle-to-vehicle communication as\
    \ well as vehicle to infrastructure commu-\nnication facilitates providing a real-time\
    \ indication of the vehicle’s location as well as the\ncondition of trafﬁc in\
    \ a given area. This information can then be used to determine an opti-\nmal route\
    \ for emergency vehicles as well as for their optimal deployment to serve people\n\
    in need. Information about optimization methods for smart health has been presented\
    \ in\nTable 7 and the data setups used in these approaches in Table 8.\nTable\
    \ 7. Optimization in Smart Health.\nApplication\nAlgorithm\nSingle/Parallel Problems\n\
    Objectives\nConstraints\nEmergency Vehicle\nAllocation and\nRelocation\nACO [71]\n\
    Single\nMinimize lateness\nAmbulance from nearest hospital is\ndispatched\nGA\
    \ [72]\nSpeed of ambulance\nTotal number of ambulance limits\nGA [73]\nSingle\n\
    Minimize average\nwaiting time of\nambulances\nBalance constraints on exit and\
    \ entry\nvolumes\nFlow conservation constraints\nGA [74]\nSingle\nMinimize total\
    \ cost in\nmoney and time\nEmergency Vehicle\nRouting\nPSO [76]\nSingle\nMinimize\
    \ travel time,\nroad length traveled,\ndensity of vehicles on\nthe road\nRoad\
    \ connections are speciﬁc\nGA [75]\nSingle\nMinimize the entrance\ntime of emergency\n\
    vehicle by changing\nthe order of vehicles\ngoing through\nintersections\nConstraint\
    \ on the difference between\narrival times of current and previous\nvehicles and\
    \ on the entrance time of the\nvehicle\nSensors 2022, 22, 4380\n16 of 34\nTable\
    \ 8. Data setup used for Smart Health\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [71–76]\nGovernment Agency/other research work\n[72–74]\n3.5. Smart Homes\nHome\
    \ energy management has been the prime application of optimization in smart\n\
    homes, a summary of the objectives, constraints and the use of IoT has been shown\
    \ in\nFigure 5.\nSmart Homes \nHome Energy Management \nAppliance\nScheduling\
    \ \nObjectives: Minimize\ncost, time, peak to\naverage power ratio,\ndiscomfort\
    \ \nConstraints: Capacity\nlimits, flow, one level\nper location\nIoT usage: Sensors\
    \ for providing power consumption data and other environmental\nreadings such\
    \ as temperature etc for comfort determination in homes, smart meters\nprovide\
    \ interconnectivity betwen homes\nFigure 5. Optimization applications in Smart\
    \ Homes.\nHome energy management refers to the development of demand side management\n\
    schemes that aim to reduce the electricity cost billed to a customer or maintain\
    \ comfort for\nthe user. One way this is performed is by appropriate appliance\
    \ scheduling. The idea here\nis to schedule the usage of appliances in such a\
    \ way that the most power-hungry devices are\nturned on during off peak hours\
    \ when electricity costs might be lower. The combination of\nthe Smart Grid and\
    \ Smart Homes facilitates the development of optimization schemes that\nnot only\
    \ beneﬁt the customer (in terms of reduced electricity costs and maintaining comfort)\n\
    but also be useful for the utilities in ensuring that load proﬁles (though minimizing\
    \ the\nSensors 2022, 22, 4380\n17 of 34\npeak to average ratio) are more consistent\
    \ thereby allowing better planning of the power\ngeneration mix used by them.\
    \ The authors of [77] perform appliance scheduling for the pur-\npose of minimizing\
    \ electricity cost and the waiting time for appliance usage. Interestingly,\n\
    they incorporate comfort maintenance by adding it as a constraint. A similar approach\
    \ has\nbeen followed by Bui et al. [78] and Makhadmeh et al. [79] who aim to minimize\
    \ the cost\nof electricity usage with a constraint for maintenance of comfort.\
    \ Makhadmeh et al. [79]\nalso include the reduction of waiting time rate for appliances\
    \ by the user and the reduction\nof the peak to average ratio of the power consumed\
    \ as constraints. The authors in [80–83]\nperform appliance scheduling while considering\
    \ electricity cost and peak to average ratio\nwhich need to be minimized. All\
    \ of the authors present a multi-objective function for this\npurpose combining\
    \ the objectives of minimizing the cost and the peak to average power\nratio.\
    \ Azimi et al. [84] combine the problem of reducing cost and power together as\
    \ a\nsingle objective by considering the minimization of the ratio of operating\
    \ cost and load\nfactor in a battery supported system. The works of [85–89] also\
    \ consider user comfort\nas part of the objective. In [85], Essiet and Wang form\
    \ a multi-objective minimization\nproblem of electricity cost, peak to average\
    \ ratio for power and discomfort of users in a\nsmart home supported by a renewable\
    \ energy system consisting of a battery and PV system.\nIn Chanra et al. [90],\
    \ the authors aim to reduce electricity cost by appliance scheduling\nin such\
    \ a manner so as to make as much use of onsite energy units as possible so as\
    \ to\nreduce usage of utility provided electricity. The energy units they consider\
    \ are a diesel\ngenerator, renewables and battery. Another approach that aims\
    \ to reduce cost of consumed\nelectricity is presented by Faia et al. [91] who\
    \ formulate it as a problem of minimizing the\nenergy bill and the cost associated\
    \ with curtailment of power in a system with a battery\nand a photovoltaic system.\
    \ The work in [88,92–94] also perform appliance scheduling to\nreduce cost of\
    \ electricity. Appliance scheduling for smart homes has also been performed\n\
    by Fatima et al. [81] and Abid et al. [80] considering a microgrid for homes where\
    \ instead of\noptimizing data from single homes, the authors used data from connected\
    \ smart meters to\ndetermine an optimized control scheme for appliances across\
    \ the grid. The constraints used\nfor optimization in smart homes are on the comfort\
    \ needing to be maintained, constraints\non the powerﬂow, time of operation, the\
    \ maximum power that is present or used and which\nappliances are switchable appliances.\
    \ Appliance scheduling is based on smart meters as\nwell as individual control\
    \ and monitoring of appliances using IoT systems. IoT devices\nenable the microgrid\
    \ which is used to gather data as well as control the switching on and\noff of\
    \ sources from the houses electricty supply. The information gathered from these\n\
    IoT units can be processed to optimize energy consumption patterns to reduce cost\
    \ to the\ncustomer as well as increase comfort. The use of the considered optimization\
    \ schemes for\nsmart homes has been presented in Table 9 with the data setups\
    \ presented in Table 10.\nTable 9. Optimization in Smart Homes.\nApplication\n\
    Algorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nHome Energy\nManagement\n\
    ACO [77]\nSingle\nMinimize cost and\nwaiting time\nComfort needs to be maintained\n\
    ACO [80]\nParallel\nMinimize cost and peak\nto average ratio\nPower ﬂow constraints\n\
    ACO [81]\nSingle\nMinimize cost and peak\nto average ratio\nMaximum energy capacity\
    \ constraint\nDE [82]\nDevice counted that can be shifted is\npositive\nPSO [83]\n\
    Number of devices shifted at any time\nshould not be more than the available\n\
    number of controllable devices\nSensors 2022, 22, 4380\n18 of 34\nTable 9. Cont.\n\
    Application\nAlgorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nGA\
    \ [95]\nSingle\nMinimize peak to\naverage ratio for load\nshaping\nLoad shaping,\
    \ redistribution of load in\na ﬂexible manner\nGA [84]\nSingle\nMinimize ratio\
    \ of\noperating cost and load\nfactor\nCharging and discharging of batteries\n\
    Complete load transfer and load\nclipping limits\nDE [85]\nSingle\nMinimize electricity\n\
    cost, peak to average\nratio of power and\ndiscomfort\nminimization of users\n\
    Constraints on PV supply limits\nACO [86]\nState of charge and rate of discharge\
    \ of\nbattery\nDE [87]\nSingle\nMinimize electricity\ncost and discomfort\nTime\
    \ of operation within speciﬁed\nlimits\nPSO [89]\nTemperature, air quality, illumination\n\
    and energy should be within\nmaximum limits\nGA [63,88,96]\nParallel\nA given\
    \ appliance must be on for\nspeciﬁed times of the day\nPower limits to be followed\n\
    ABC [78]\nSingle\nMinimize cost of\nelectricity\nAppliances for comfort have ﬁxed\n\
    times\nDE [90,92]\nSome appliances cannot be delayed\nGA [93]\nPower balance constraints\n\
    PSO [79,94]\nSurplus solar power sold back to\ndistribution system\nMaintain zero\
    \ net energy in building\nTime constraints\nLoad safety factor\nLoad phases of\
    \ appliances fulﬁll\nenergy requirements\nComfort needs to be maintained\nPeak\
    \ to average power ratio balancing\nPSO [91]\nSingle\nMinimize energy bill\nand\
    \ cost associated\nwith KWH curtailment\nPower values within limits, battery\n\
    charge and discharge limits\nTable 10. Data setup used for Smart Homes.\nData\
    \ Type\nPapers\nSelf-collected/Presented/Generated\n[63,77–85,87,88,92–94,96]\n\
    Government Agency/other research work\n[79–81,85,89–91,95,96]\n3.6. Smart Industry\n\
    One of the biggest enablers of the Industry 4.0 concept has been the use of AI\
    \ tech-\nniques to improve the efﬁciency of the manufacturing and production process.\
    \ This has led\nto the development of cyber physical systems aiming to assist\
    \ in activity recognition [97],\nmachine health prediction [98] and production\
    \ management in terms of bottleneck predic-\ntion [99]. Apart from conventional\
    \ AI applications of anomaly detection, classiﬁcation and\nregression, computational\
    \ optimization also ﬁnds numerous applications as it ﬁts well with\nSensors 2022,\
    \ 22, 4380\n19 of 34\nthe objective of efﬁcient and streamlined manufacturing.\
    \ The major applications for the use\nof computational optimization have been\
    \ in the area of routing and location for logistics and\nare variations of the\
    \ vehicle routing problem and are typically represented as Multidepot\nVehicle\
    \ Routing Problem (MVRP), Vehicle Routing Problem Pick-up and Delivery with\n\
    Time Windows (VRPPDTW) or Large-scale Dynamic Vehicle Routing Problem (LSDVRP).\n\
    Figure 6 summarizes the objectives utilized, constraints and the role of IoT in\
    \ optimization\nfor Smart Industry.\nSmart Industry \nLocaƟon DeterminaƟon of\
    \ sites \nRouƟng for LogisƟcs \nObjectives: Minimize\ntransportation,\nestablishment\
    \ and\ndistribution cost, Maximize\nprofit\nConstraints: Number of\nsites need\
    \ to be met,\ndistance coverage for\nlocations, time limits,\ncapacity, demands\
    \ need to\nbe met\nObjectives: Minimize\ndistance travelled, CO2\nemissions, number\
    \ of\nvehicles, time, fuel, cost\nConstraints: Customer\nserved only once, route\
    \ is\ncontinuous, demand limits,\nvehicle count limits,\nvehicle load limits,\
    \ speed,\ntime and distance limits,\ntime limits\nIoT Usage: Sensing units provide\
    \ information relating to the loads to be\ncollected as well as traffic and other\
    \ information\nFigure 6. Optimization applications in Smart Industry.\nThe authors\
    \ in [100,101] use the ABC and the GA respectively to determine the\nbest location\
    \ of service sites for logistic operations. Both these approaches use multi-\n\
    objective formulations aiming to reduce cost of operations, transportation as\
    \ well as the\nestablishment of the centers. The authors in Su et al. [102] use\
    \ ACO, Alinaghia et al. [103]\nPSO and Utama et al. [104] use ABC to address the\
    \ problem of determining the best route for\nlogistics operations. The routing\
    \ and coverage problem for logistics involves determining\nthe best route for\
    \ either a single or multiple vehicles at a depot which have to visit every\n\
    customer. The works of [102–104] focus on reducing the cost incurred in the routing\
    \ for\nvehicles in logistics as a single objective formulation. On the other hand,\
    \ the authors\nof [105–107] all work on the minimization of distance as their\
    \ objective in determining\nthe optimal route for delivery vehicles trying to\
    \ serve multiple locations. Mounia and\nBachir [106] address routing in logistics\
    \ as a multi-objective problem where they not only\naim to minimize the distance\
    \ traveled by the vehicles but also aim to reduce CO2 emissions\nand the number\
    \ of vehicles used. A time based optimization approach is presented by\nthe authors\
    \ of [108,109] also factoring in reduction of fuel consumption in their objective\n\
    Sensors 2022, 22, 4380\n20 of 34\nfunction formulation. Constraints used for the\
    \ routing and location determination problem\nare related to time, capacity constraints\
    \ for the vehicles, each customer being served only\nonce, constraints related\
    \ to the route. The determination of the location and the route for\nvehicles\
    \ is dependent on real time information concerning the trafﬁc in the area as well\
    \ the\nloads to be collected from each site in addition to other information which\
    \ can be provided\nby IoT units. The usage of optimization algorithms for smart\
    \ industry has been presented\nin Table 11 with data setups presented in Table\
    \ 12.\nTable 11. Optimization in Smart Industry.\nApplication\nAlgorithm\nSingle/Parallel\
    \ Problems\nObjectives\nConstraints\nLocation\ndetermination for sites\nABC [100]\n\
    Single\nMinimize transportation\nand hub establishment\ncost\nSingle allocation\
    \ for each demand node\nA given number of hubs are established\nCovering radius\
    \ constraint\nTime reliability constraint\nGA [101]\nParallel\nMinimize distribution\
    \ cost\nand maximize proﬁt\nLoad capacity meets needs of customers\nA delivery\
    \ vehicle can only be delivered\nwhen it receives a task\nCapacity constraints\n\
    Routing for Logistics\nABC [106]\nParallel\nMinimize distance\ntravelled, CO2\
    \ emissions,\nnumber of vehicles used\nEvery customer visited only once\nEvery\
    \ vehicle visiting a location must leave\nit too\nEnsure route continuity\nDemands\
    \ of any route must not exceed\ncapacity\nEdges satisfying time window constraint\n\
    are allowed.\nABC [107]\nSingle\nMinimize total\ntransportation distance\nEach\
    \ customer served only once\nGA [105]\nRoute should start and end at the same\n\
    depot\nServed demand of each vehicle does not\nexceed capacity limit\nACO [102]\n\
    Single\nMinimizing total cost\nEach customer served only once\nPSO [103]\nDispatched\
    \ vehicles not more than\navailable\nABC [104]\nVehicle routes don’t contain disconnected\n\
    routes\nCustomer demand shouldn’t be larger than\nvehicle capacity\nABC [109]\n\
    Single\nMinimize travelling time\nVehicle load constraint\nSubtours not allowed\n\
    Speed, time and distance\nMaximum number of vehicles on a route\nEach customer\
    \ served by one vehicle\nVehicle number max limit\nPSO [108]\nParallel\nMinimize\
    \ fuel\nconsumption and travel\ntime\nEach customer serviced by only one vehicle\n\
    Continuity in route\nVehicle load conservation between nodes,\nFirst in ﬁrst out\
    \ proper when traveling time\nis computed\nTime taken for customers as stated,\n\
    Maximum time for servicing\nVehicle capacity constraint\nDepot is the ﬁrst and\
    \ ﬁnal destination of\neach vehicle\nSensors 2022, 22, 4380\n21 of 34\nTable 12.\
    \ Data setup for Smart Industry.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [100,101,105,109]\nGovernment Agency/other research work\n[102,104,106,107,109]\n\
    Dataset/Standard Network\nTest instances in [110] used by [103,108]\n3.7. Smart\
    \ Infrastructure\nWithin the infrastructure domain, the most common optimization\
    \ problem is the area\nof health monitoring of structures. Structural Health Monitoring\
    \ (SHM) is a necessary\napplication within the smart infrastructure domain as\
    \ it makes for safe usage of different\nstructures of public use. These structures\
    \ can be buildings as well as transport structures\nsuch as bridges, tunnels.\
    \ Structural health monitoring typically involves the use of sensors\nattached\
    \ to a structure at several points that can gauge some type of physical variable\n\
    (vibration, strain, acceleration, temperature, tilt etc) from the structure. Data\
    \ gathered from\nthese connected sensors is then used to determine if any structural\
    \ damage has taken place\nor not. Within the domain of SHM, optimization algorithms\
    \ ﬁnd application towards the\nOptimal Sensor Placement Problem (OSP) as illustrated\
    \ in Figure 7. Figure 7 summarizes\nthe objectives used, constraint and the use\
    \ of IoT.\nSmart Infrastructure \nOpƟmal Sensor Placement \nObjectives: Minimize\
    \ error,\nredundancy \nMaximize sensor coverage,\nconnectivity, relaibility\n\
    Constraints: Sensor placement\nlocations limitations, number of\nsensors limited\n\
    IoT usage: The placement of sensors\nespecially is performed using IoT\nwhere\
    \ connected sensors povide the\ndata using which optimization is\nperformed\n\
    Figure 7. Optimization applications in Smart Infrastructure.\nFor the optimal\
    \ sensor placement problem (OSP), the aim is to determine the best\nnumber and\
    \ placement of sensors over a structure so as to reduce the number of sensors\n\
    used as well as improve the measurement process, both these aims result in increased\n\
    reliability of the SHM system as well as potentially lower the cost of the system\
    \ too.\nThe authors in [111–115] work on the placement of sensors for structural\
    \ health moni-\ntoring focusing on improving the effectiveness of the deployed\
    \ system. In this regard,\nrefs. [111,114] use the genetic algorithm to solve\
    \ a multi-objective problem aiming to mini-\nSensors 2022, 22, 4380\n22 of 34\n\
    mize the measurement error and cost. Yang et al. in [113] formulate OSP as single\
    \ objective\nminimization where they aim to reduce the ratio of sensor placement\
    \ performance to\nthe redundancy of information resulting from each tested placement.\
    \ Another approach\nthat works on the error is presented by [112] who use the\
    \ Particle Swarm Optimization\nto maximize the reconstruction accuracy and robust\
    \ transfer relationship between the\ndeformation and surface strain with different\
    \ sensor placements. It must be noted that the\nobjective function is formulated\
    \ as minimization of negated accuracy and negated robust-\nness measurement. Optimized\
    \ structural health monitoring for aircraft monitoring has\nbeen targeted in [116].\
    \ In their setup consisting of vibration sensors, the authors optimize\nsensor\
    \ placement by minimizing the cross correlation of the vibration waves in the\
    \ sensing\nnetwork. The most common constraint for sensor placement is restrictions\
    \ on the places\nwhere sensors can be placed. This information has been provided\
    \ in Table 13 and the data\nsetups are presented in Table 14.\nTable 13. Optimization\
    \ in Smart Infrastructure.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\n\
    Objectives\nConstraints\nSensor placement\nGA [111]\nSingle\nMinimize measurement\n\
    error and measurement\ncost\nPSO [112]\nSingle\nMaximize\nreconstruction accuracy\n\
    and robustness of\ntransfer relationship\nbetween deformation\ndisplacement and\n\
    surface strain\n(formulated as a\nminimization problem\nfor negated accuracy\n\
    and robustness)\nSensor placements within predeﬁned\nrange and angles\nGA [113]\n\
    Single\nMinimize the ratio of\nsensor placement\nperformance to\nredundancy\n\
    information\nSensor placement is permitted on\nchosen location\nGA [114]\nSingle\n\
    Minimize the MAE\nbetween the system\nand the estimated\nresponse (global error)\n\
    and minimize the\nmaximum difference\nbetween the system\nand its estimated\n\
    response (local error)\nSensor locations are from a set of\npredeﬁned locations\n\
    DE [115]\nSingle\nMaximize quality of\ncoverage, lifetime,\nconnectivity uniformity\n\
    of sensor nodes and\ncluster heads and\nreliability\nConstraint on the number\
    \ of cluster\nheads associated with each sensor\nnode and cluster head\nGA [116]\n\
    Single\nMinimize cross\ncorrelation of the\nsensing network\nSensor placement\
    \ is permitted on\nchosen location\nSensors 2022, 22, 4380\n23 of 34\nTable 14.\
    \ Data types for Smart Infrastructure.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [111–114,116,116–118]\n3.8. Smart Transportation\nOne of the most popular optimization\
    \ applications within smart cities are within the\nsmart transport domain. These\
    \ include parking system routing, trafﬁc signal control and\nscheduling. A summary\
    \ of the applications, their objectives, constraints and the role of IoT\nis illustrated\
    \ in Figure 8.\nSmart TransportaƟon \nTraﬃc Signal\nControl \nTraﬃc RouƟng \n\
    Parking System\nRouƟng \nRoad Traﬃc\nRouƟng \nObjectives: Minimize\ntime delay\n\
    Constraints: Traffic\nvolume constraint, traffic\nflow constraint, duration\n\
    of traffic light phases \nIoT usage: For parking, IoT nodes indicate to free parking\
    \ spots from which data is\ngathered and sent to the cloud. Connected vehicles\
    \ are also another source of IoT data\nused for navigation purposes along with\
    \ data from cellphones. \nObjectives: Minimize\ntravel distance, traffic\ncongestion\n\
    Constraints: Roadmap\nto be followed is fixed,\nroad connections fixed \nObjectives:\
    \ Minimize\ntravel time, delay,\nemissions, traffic flow\nConstraints: Road\n\
    connections are fixed,\nnumber of routes are\nfixed \nFigure 8. Optimization applications\
    \ in Smart Transportation\nSmart transport systems consist of sensors along roads\
    \ and trafﬁc intersections to mea-\nsure relevant parameters while also providing\
    \ communication services between vehicles\nand infrastructure. This allows for\
    \ measurement of the current state of roads in terms\nof trafﬁc congestion and\
    \ usage thereby allowing for the use of optimization techniques\nto improve trip\
    \ experiences for users and make the transportation system more efﬁcient.\nThe\
    \ authors in [119–123] work on the minimization of time (wait and travel) in trafﬁc\n\
    signal control. The aim of such systems is to reduce trafﬁc build up on signal\
    \ intersections.\nOf these, the work in [119–121] use the artiﬁcial bee colony\
    \ and the genetic algorithm\nrespectively for a single objective function of minimizing\
    \ delay time. An interesting ap-\nproach for this problem is presented by Li et\
    \ al. [123] who use a multi objective formulation\ntargeting the minimization\
    \ of the average travel time both overall and individually for all\nvehiclesl.\
    \ Another multi-objective approach in trafﬁc signal control is presented by Chen\n\
    Sensors 2022, 22, 4380\n24 of 34\nand Yuan [124] who form a mixed problem of minimizing\
    \ vehicle emissions and travel time\ntogether. Korkmaz [125] work on the estimation\
    \ of delays in trafﬁc signals using a genetic\nalgorithm, they use it to minimize\
    \ the difference between the estimated and simulated\nvalues. Tang et al. [122]\
    \ carry out distributed optimization in a fog and cloud hierarchy.\nFirst, fog\
    \ nodes optimize phase timings within a single cycle and if the number of vehicles\n\
    exceeds a threshold, the results are sent to the central controller to further\
    \ optimize over\ndifferent cycles so that a trafﬁc jam is avoided or alleviated.\
    \ Zhang et al. [126] attempt\ntrafﬁc signal optimization using multi objective\
    \ optimization functions of reducing time\ndelay and increasing trafﬁc capacity.\
    \ Constraints used for trafﬁc signal control are timing\nconstraints on the phase\
    \ durations, ﬂow rate of vehicles and on the travel time.\nTrafﬁc routing is also\
    \ another important aspect in smart transportation. This typically\ninvolves the\
    \ determination of the best route to the destination keeping in view various\n\
    criteria such as reduction of distance, time, cost etc. The problem of trafﬁc\
    \ routing is\naddressed by the works of [127–137]. The authors in [129,130] use\
    \ the ant colony opti-\nmization and genetic algorithm to minimize the travel\
    \ distance in parking system routing.\nThey aim to minimize distance traveled\
    \ by a driver looking to ﬁnd a free parking spot,\nusing the algorithm, an optimized\
    \ route is determined for the parking spot. In [131–133]\nthe ant colony optimization\
    \ algorithm is used to determine the best route in a generic\ntrafﬁc scenario\
    \ where cars can communicate with road side units in a Vehicular Adhoc\nNETwork\
    \ (VANET) architecture. Routing for public transport is performed by [134,138]\n\
    in a connected vehicle scenario aiming to minimize travel time. An economic objective\n\
    approach to trafﬁc routing is taken by the authors of [127,136,137] who minimize\
    \ the total\ncost of the trip. Mao [127] also include trafﬁc congestion and travel\
    \ time as well in their\ncomputation. Hassoune et al. [139] work on a parking\
    \ guidance using the ant colony\noptimization algorithm to reduce trafﬁc congestion\
    \ and minimize distance. Constraints\nfor trafﬁc routing are related to the road\
    \ network allowing travel in speciﬁc directions,\nsignaling and travel time. Within\
    \ smart transportation, IoT nodes are used to determine\noccupied parking spaces\
    \ and this data is used for routing applications in parking. Trafﬁc\nrouting is\
    \ based on vehicle to vehicle and vehicle to infrastructure communication provided\n\
    by VANETs within the IoT framework. These systems enable cars to exchange data\
    \ with\neach other and also with ﬁxed infrastructure on the roads. This discussion\
    \ is also presented\nin Table 15 and the data setups for the covered work are\
    \ presented in Table 16.\nTable 15. Optimization in Smart Transportation.\nApplication\n\
    Algorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nTrafﬁc signal\n\
    control\nABC [138]\nSingle\nMinimize travel time\nInterval of feasible green time\
    \ length values\nABC [128]\nInterval of feasible offset time length values\nConstraints\
    \ on cycle lengths\nABC [119,120]\nSingle\nMinimize time delay\nOnly one active\
    \ stage\nGA [121,122]\nFlow dynamic constraint\nGA [123]\nParallel\nMinimize time\
    \ delay and also\nachieve trafﬁc network\nequilibrium\nLink volume constraint\n\
    Constraints on duration of green/red phases\nOffset phase duration\nMinimize average\
    \ travel time.\nRelationship between route and link ﬂows\nneed to be maintained\
    \ as deﬁned\nGA [124]\nSingle\nMinimize vehicle emissions\nand travel time for\
    \ vehicles\nSum of green time of each phase is equal to\ntotal available green\
    \ time\nGreen time is set by a lower bound\nSensors 2022, 22, 4380\n25 of 34\n\
    Table 15. Cont.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\nObjectives\n\
    Constraints\nGA [126]\nParallel\nMinimize delay, and exhaust\nemission and maximize\
    \ trafﬁc\ncapacity (formulated as\nminimization problem)\nCycle length of signals\
    \ has minimum and\nmaximum limits\nTrafﬁc Routing\n(Parking System)\nACO [129]\n\
    Parallel\nMinimize distance with bend\nstraightening and turn\nreduction\nBend\
    \ straightening and turn reduction\nACO [139]\nParallel\nReduce trafﬁc ﬂow and\n\
    shortest distance towards\nparking\nGA [130]\nSingle\nMinimize distance\nSpeciﬁc\
    \ preﬁxed routes possible for free\nparking\nTrafﬁc Routing\n(Road Trafﬁc)\nACO\
    \ [131,132]\nSingle\nMinimize distance, minimize\ncongestion\nFollow roadmap\n\
    ACO [133]\nSingle\nMaximize ﬂow\nACO [134]\nSingle\nMinimize travel time\nConstraint\
    \ on relationship between green time\nlengths cycle length, offset on the network\n\
    calculation\nGA [135]\nInterval of feasible green time length values\nInterval\
    \ of feasible offset time length values\nSpeciﬁc road segments\nConnected constraints\
    \ on the values of time\ntaken for vehicles\nDE [136]\nSingle\nMinimize travelling\
    \ cost and\nrental cost\nEach bus has one employee\nEmployees can be assigned\
    \ when stop is\navailable\nBus stop assigned when bus is in use\nConstraint on\
    \ distance of bus stop from\nemployee home and more\nDE [137]\nSingle\nMinimize\
    \ total cost\nRoad network connections followed\nSolutions contains correct number\
    \ of routes\nACO [127]\nSingle\nMinimize transit time, travel\ndistance, road\
    \ congestion and\ntrafﬁc expenses\nVariable value constraints\nTable 16. Data\
    \ types for Smart Transportation.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [119–124,126,128–133,135,138,139]\nGovernmentAgency/other research work\n[119,121,123,124,128,130,134–137]\n\
    4. Recommendations\nThis survey discussed the application scenario for optimization\
    \ algorithms within\nthe IoT based Smart Cities in terms of objectives, constraints\
    \ and formulations. There are\nseveral takeaways from this exercise. The ﬁrst\
    \ aspect observed was the lack of standardized\ndatasets being utilized by the\
    \ methodologies covered as discussed in the various sections.\nThis limits the\
    \ ability to effectively compare proposed methodologies for a similar problem.\n\
    This issue was less observed for the case of Smart Grids where standardized network\n\
    architectures were used. The use of standardized test sets would enable a fair\
    \ comparison\nof competing methodologies. Another aspect would be the use of more\
    \ detailed statistical\nanalysis of experiment data such as running time than\
    \ mean, standard deviation etc as\nhas been mentioned by [7]. Such analysis would\
    \ help to understand better the effects of\ndifferent constraints on the algorithm\
    \ better also help with comparative analysis with other\nmethodologies. For the\
    \ nature of coverage herein, it would contribute to possibly looking\nat performance\
    \ of cross-smart city component applications which are similar.\nSensors 2022,\
    \ 22, 4380\n26 of 34\n5. Future Work\nWhile this review presents a coverage of\
    \ the current state of IoT enabled Smart City\noptimziation applications, there\
    \ are several avenues of future work that have been identiﬁed\nas well.\n5.1.\
    \ Novel Applications\nWhile combinatorial optimization algorithms have found wide\
    \ ranging applications\nin all aspects of a city’s operations for e.g., in planning\
    \ [140,141] and scheduling [142],\nit is expected that as more aspects of a city\
    \ are instrumented and data gathering takes\nplace, applications of optimization\
    \ algorithms which work on real-time measurements\nwill be further developed.\
    \ With newly instrumented systems, one could also leverage\nmachine and deep learning\
    \ algorithms for predicting a variable of interest and then utilize\noptimization\
    \ algorithms for a given application. Such a combination could spearhead\noptimization\
    \ application development. Apart from prediction, machine learning could be\n\
    used for classiﬁcation purposes too in conjunction with combinatorial optimization\
    \ schemes.\nOne such application could be in the industry where worker activity\
    \ recognition [143] is\nperformed and such data is collected for then scheduling\
    \ operations in cooperation with\nautomated machine processes using heuristics.\n\
    5.2. Hybrid Algorithms\nThe aim of hybrid methodologies is to combine the best\
    \ performance characteristics of\ndifferent algorithms to reach to an optimal\
    \ solution for an optimization problem. There have\nbeen several works which combine\
    \ multiple optimization techniques. For e.g., the authors\nin [144] use a combination\
    \ of a PSO and GA to solve the ambulance location and allocation\nproblem. They\
    \ do this in a subproblem form with the objective being the minimization\nof the\
    \ mean waiting time of the injured people and the response time between stations\n\
    and affected areas. The constraints are balance of ﬂow, cost of open stations,\
    \ number of\nambulances given to an areas satisfying its requirements, one affected\
    \ area served by one\nstation, station ambulance capacity is respected and that\
    \ no ambulances allocated if station\nis closed. It is expected that work towards\
    \ hybrid algorithms algorithms will increase the\napplicability of combinatorial\
    \ optimization in smart cities. Such a hybrid system has been\nused in Smart Agriculture\
    \ by [145] also utilizing a GA and a modiﬁed PSO algorithm.\n5.3. Novel Nature\
    \ Inspired/Heuristic Algorithms\nAnt colony, Genetic algorithms and Particle Swarm\
    \ Optimization, Differential Evolu-\ntion and Artiﬁcial Bee Colony algorithms\
    \ for solving Smart City optimization problems\nwere considered during the survey.\
    \ However, there were some attempts that were based on\nother evolutionary or\
    \ collective behavior of other living organisms. Examples of such algo-\nrithms\
    \ include the use of shufﬂed frog leaping optimization, graywolf optimization\
    \ [146]\nfor power management and also for trafﬁc routing [147], earthworm optimization\
    \ [148] for\npower management in smart grid, vehicle routing using simulated annealing\
    \ [149] and\nseveral different ones for home energy management [150] and elephant\
    \ herding optimiza-\ntion [151] as well in addition to others.\n5.4. Distributed\
    \ Optimization Scheme\nAs the computation power at the edge increases, the methodologies\
    \ which utilize a\ndistributed optimization scheme to fully utilize the IoT capabilities\
    \ they operate in can\npotentially provide better performance. Herein, there could\
    \ be multiple objectives and\neach can be optimized at a lower level before optimization\
    \ is performed at a higher one\nare bound to increase. One such example was suggested\
    \ by Tang et al. [122] who carry out\ndistributed optimization in a fog and cloud\
    \ architecture. First, fog nodes optimize phase\ntimings within a single cycle\
    \ and if the vehicles exceeding number increases a threshold,\nthe results are\
    \ sent to the central controller to further optimize over different cycles so\
    \ that\na trafﬁc jam is avoided or alleviated.\nSensors 2022, 22, 4380\n27 of\
    \ 34\n5.5. Use of Reinforcement Learning\nReinforcement learning (RL) has the\
    \ potential to provide solutions to combinatorial\noptimization problems as covered\
    \ in [152]. The idea is to use machine learning and\nreinforcement learning to\
    \ get rid of human created heurists which may lead to optimizations\ntowards local\
    \ optimums. Agents can be trained to search for these heuristics to automate\n\
    the process. ML and RL methods have been observed to be faster compared to metaheuristic\n\
    methods for solving optimization problems as noted by [152], especially for large\
    \ problems.\nSuch methods could be useful for applications within the IoT based\
    \ Smart City landscape.\nIt must be noted however that the usage of RL and ML\
    \ towards combinatorial optimization\nproblems is still a growing research area.\
    \ An example of such use is its use for trafﬁc signal\ncontrol as described in\
    \ [153].\n6. Conclusions\nThis paper provides coverage of the application of ﬁve\
    \ popular computational algo-\nrithms in the IoT enabled Smart City. It provides\
    \ a mapping of the various applications\nto the speciﬁc smart city domain as well\
    \ as highlights the different formulations of the\nobjective function used to\
    \ solve the considered problem. This coverage is provided in\nterms of the number\
    \ of objectives as well as whether the problem was solved as a single\nobjective,\
    \ in a hierarchical manner or otherwise. It also highlights the constraints used\n\
    by the researchers in solving the problem which is an important aspect as constraints\
    \ are\ngoverned by the application at hand. An overview of the mapping of various\
    \ smart city\noptimization applications derived from this work is provided in\
    \ Figure 9.\nSmart\nAgriculture \nIrrigaƟon Water\nScheduling \nSmart Homes \n\
    Home Energy\nManagement \nSmart City\nServices \nWaste\nManagement\nRoute\nOpƟmizaƟon\
    \ \nSmart Industry \nSmart Grid \nPower\nManagement \nPlanning \nSmart\nInfrastructure\
    \ \nOpƟmal Sensor\nPlacement \nSmart Health \nEmergency\nVehicle\nAllocaƟon and\n\
    RelocaƟon \nEmergency\nVehicle RouƟng \nSmart Transport \nTraﬃc Signal\nControl\
    \ \nTraﬃc RouƟng \nOpƟmizaƟon in Smart CiƟes \nRouƟng and\nLocaƟon\nDeterminaƟon\n\
    for LogisƟcs \nIrrigaƟon Water\nAllocaƟon \nEnergy\nOpƟmizaƟon and\nWater Control\
    \ \nFigure 9. Optimization applications in IoT based Smart Cities.\nFigure 10\
    \ illustrate the distribution counts for each of the algorithms considered in\n\
    this survey. It was found that genetic algorithms was found to be most commonly\
    \ used\noptimization scheme as can be seen from Figure 10 and was used a total\
    \ of 33 times\nin the approaches covered in the survey as has been observed by.\
    \ This inspite of the\nfact that GAs are more computationally intensive than PSO\
    \ with the latter being faster as\nwell [154]. However, it must be noted that\
    \ the performance of any optimization algorithm is\nSensors 2022, 22, 4380\n28\
    \ of 34\nproblem dependent [154]. The PSO algorithm was used the most for smart\
    \ grid applications\nwhereas ACO and GA were equally used for Smart Transportation.\
    \ When looking at the\ndifference between the uses of bio-inspired (PSO, ACO,\
    \ ABC) and nature-inspired (GA, DE)\nalgorithms, it was observed that bio-inspired\
    \ algorithms were used more times at 53 vs.\n45 respectively as the proposed technique.\
    \ This indicates that nature inspired algorithms,\neven though relatively newer,\
    \ are getting increasing traction for use in various applications\nrelating to\
    \ Smart Cities.\nFigure 11 illustrates the counts for the different ways in which\
    \ the objective function\nwas solved. It can be observed that even though there\
    \ were nearly similar number of\nmultiple and single objective function formulations\
    \ (59 and 51 respectively), the solutions\nfor these were mostly derived as a\
    \ single problem. This meaning that the objectives were\ncombined in some form\
    \ (such as weighted combination of two or more objectives).\n0\n1\n2\n3\n4\n5\n\
    6\n7\n8\n9\nSmart Agriculture\nSmart City Services\nSmart Grid\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transportation\nUseage\
    \ count for various algorithms with respect to smart city component\nGA\nACO\n\
    PSO\nDE\nABC\nFigure 10. Count of different algorithms used with respect to Smart\
    \ City Component.\n0\n5\n10\n15\n20\n25\nSmart Agriculture\nSmart City Services\n\
    Smart Grid\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transportation\nCount for different problem solutions with respect to smart\
    \ city component\nParallel\nSingle\nFigure 11. Solution scheme for problems with\
    \ respect to Smart City Component.\nAnother interesting observation from this\
    \ review was on the formulations of simi-\nlar standard combinatorial optimization\
    \ problems within different smart city domains.\nFor e.g., the vehicle routing\
    \ problem exists in smart health (emergency vehicle routing),\nsmart transportation\
    \ (trafﬁc routing and public transport routing) as well as in smart in-\ndustry\
    \ (routing for logistics). While, the objective of the routing problem in various\
    \ papers\nwas observed to target time incurred for the trip, the constraints incorporated\
    \ domain\nknowledge in to the problem. That is, routing in the smart industry\
    \ included constraints on\nvisiting all depots while for smart health and smart\
    \ transport, constraints included speed\nand road trafﬁc. These insights highlight\
    \ the difference in working on similar optimization\nproblems in different smart\
    \ city domains.\nSensors 2022, 22, 4380\n29 of 34\nThis review will help researchers\
    \ in the ﬁeld of computational optimization for smart\ncities to develop better\
    \ problem formulations for the problems encountered in IoT based\nsmart cities.\
    \ It will also provide new researchers starting in the ﬁeld by presenting them\n\
    with an overview of the optimization scope within the IoT supported Smart City\
    \ domain.\nAuthor Contributions: The review was conducted by A.S.S. under the\
    \ guidance of D.S.-S., A.K. and\nA.E. All authors have read and agreed to the\
    \ published version of the manuscript.\nFunding: This research received no external\
    \ funding.\nInstitutional Review Board Statement: Not applicable.\nInformed Consent\
    \ Statement: Not applicable.\nData Availability Statement: Not applicable.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nWorldometers.\
    \ World Population Forecast-Worldometers. Available online: https://www.worldometers.info/world-population/\n\
    #table-forecast (accessed on 9 March 2022).\n2.\nNations, U. About the Sustainable\
    \ Development Goals-United Nations Sustainable Development. Available online:\
    \ https:\n//www.un.org/sustainabledevelopment/sustainable-development-goals/ (accessed\
    \ on 9 March 2022).\n3.\nSyed, A.S.; Sierra-Sosa, D.; Kumar, A.; Elmaghraby, A.\
    \ IoT in Smart Cities: A Survey of Technologies, Practices and Challenges.\nSmart\
    \ Cities 2021, 4, 429–475. [CrossRef]\n4.\nVukobratovi´c, M.; Mari´c, P.; Horvat,\
    \ G.; Balki´c, Z.; Suˇci´c, S. A Survey on Computational Intelligence Applications\
    \ in Distribution\nNetwork Optimization. Electronics 2021, 10, 1247. [CrossRef]\n\
    5.\nWang, W.; Wu, S.; Wang, S.; Zhen, L.; Qu, X. Emergency facility location problems\
    \ in logistics: Status and perspectives. Transp.\nRes. Part E Logist. Transp.\
    \ Rev. 2021, 154, 102465. [CrossRef]\n6.\nCsalódi, R.; Süle, Z.; Jaskó, S.; Holczinger,\
    \ T.; Abonyi, J. Industry 4.0-driven development of optimization algorithms: A\
    \ systematic\noverview. Complexity 2021, 2021, 6621235. [CrossRef]\n7.\nPeres,\
    \ F.; Castelli, M. Combinatorial Optimization Problems and Metaheuristics: Review,\
    \ Challenges, Design, and Development.\nAppl. Sci. 2021, 11, 6449. [CrossRef]\n\
    8.\nDorigo, M.; Socha, K. Ant colony optimization. In Handbook of Approximation\
    \ Algorithms and Metaheuristics; Taylor & Francis\nGroup: New York, NY, USA, 2007;\
    \ Chapter 26, pp. 1–14. [CrossRef]\n9.\nWhitley, D. A genetic algorithm tutorial.\
    \ Stat. Comput. 1994, 4, 65–85. [CrossRef]\n10.\nKennedy, J.; Eberhart, R. Particle\
    \ swarm optimization. In Proceedings of the ICNN’95-International Conference on\
    \ Neural\nNetworks, Perth, WA, Australia, 27 November–1 December 1995; Volume\
    \ 4, pp. 1942–1948.\n11.\nFeoktistov, V. Differential Evolution; Springer: Berlin/Heidelberg,\
    \ Germany, 2006.\n12.\nKaraboga, D. Artiﬁcial bee colony algorithm. Scholarpedia\
    \ 2010, 5, 6915. [CrossRef]\n13.\nNguyen, D.C.H.; Ascough, J.C., II; Maier, H.R.;\
    \ Dandy, G.C.; Andales, A.A. Optimization of irrigation scheduling using ant\n\
    colony algorithms and an advanced cropping system model. Environ. Model. Softw.\
    \ 2017, 97, 32–45. [CrossRef]\n14.\nSaeidian, B.; Mesgari, M.S.; Pradhan, B.;\
    \ Alamri, A.M. Irrigation water allocation at farm level based on temporal cultivation-\n\
    related data using meta-heuristic optimisation algorithms. Water 2019, 11, 2611.\
    \ [CrossRef]\n15.\nGuo, D.; Olesen, J.E.; Manevski, K.; Ma, X. Optimizing irrigation\
    \ schedule in a large agricultural region under different hydrologic\nscenarios.\
    \ Agric. Water Manag. 2021, 245, 106575. [CrossRef]\n16.\nGuo, S.; Zhang, F.;\
    \ Zhang, C.; An, C.; Wang, S.; Guo, P. A multi-objective hierarchical model for\
    \ irrigation scheduling in the\ncomplex canal system. Sustainability 2019, 11,\
    \ 24. [CrossRef]\n17.\nZhang, F.; He, C.; Yaqiong, F.; Hao, X.; Kang, S. Canal\
    \ delivery and irrigation scheduling optimization based on crop water\ndemand.\
    \ Agric. Water Manag. 2022, 260, 107245. [CrossRef]\n18.\nIkudayisi, A.; Adeyemo,\
    \ J.; Odiyo, J.; Enitan, A. Optimum irrigation water allocation and crop distribution\
    \ using combined\nPareto multi-objective differential evolution. Cogent Eng. 2018,\
    \ 5, 1535749. [CrossRef]\n19.\nWu, J.J.; Huang, R.; Fang, T.Y.; Han, Y. Multi-objective\
    \ model of irrigation water distribution based on particle swarm optimization.\n\
    In IOP Conference Series: Earth and Environmental Science; IOP Publishing: Bristol,\
    \ UK, 2019; Volume 344, p. 12087.\n20.\nOcampo, A.L.P.D.; Dadios, E.P. Energy\
    \ cost optimization in irrigation system of smart farm by using genetic algorithm.\
    \ In Pro-\nceedings of the 2017 IEEE 9th International Conference on Humanoid,\
    \ Nanotechnology, Information Technology, Communication\nand Control, Environment\
    \ and Management (HNICEM), Manila, Philippines, 1–3 December 2017; pp. 1–7.\n\
    21.\nZhuo, L.; Cheng, J.; Gong, Z. Optimal water allocation method based on the\
    \ genetic algorithm for a system of a reservoir and two\npumping stations. Water\
    \ Supply 2022, 22, 849–859. [CrossRef]\n22.\nLi, R.; Chang, Y.; Wang, Z. Study\
    \ of optimal allocation of water resources in Dujiangyan irrigation district of\
    \ China based on an\nimproved genetic algorithm. Water Supply 2021, 21, 2989–2999.\
    \ [CrossRef]\nSensors 2022, 22, 4380\n30 of 34\n23.\nRoy, S.K.; De, D. Genetic\
    \ algorithm based internet of precision agricultural things (IopaT) for agriculture\
    \ 4.0. Internet Things 2020,\n18, 100201. [CrossRef]\n24.\nLin, N.; Wang, X.;\
    \ Zhang, Y.; Hu, X.; Ruan, J. Fertigation management for sustainable precision\
    \ agriculture based on Internet of\nThings. J. Clean. Prod. 2020, 277, 124119.\
    \ [CrossRef]\n25.\nArif, C.; Setiawan, B.I.; Mizoguchi, M.; Nugroho, B.D.A. Genetic\
    \ Algorithms Optimization for water management in irrigated\npaddy ﬁelds. In IOP\
    \ Conference Series: Earth and Environmental Science; IOP Publishing: Bristol,\
    \ UK, 2019; Volume 335, p. 12002.\n26.\nWorldBank. Solid Waste Management. Available\
    \ online: https://www.worldbank.org/en/topic/urbandevelopment/brief/\nsolid-waste-management\
    \ (accessed on 9 March 2022).\n27.\nSharmin, S.; Al-Amin, S.T. A cloud-based dynamic\
    \ waste management system for smart cities. In Proceedings of the 7th Annual\n\
    Symposium on Computing for Development, ACM DEV-7 2016, Nairobi Kenya, 18–20 November\
    \ 2016. [CrossRef]\n28.\nFujdiak, R.; Masek, P.; Mlynek, P.; Misurec, J.; Olshannikova,\
    \ E. Using genetic algorithm for advanced municipal waste collection\nin Smart\
    \ City. In Proceedings of the 2016 10th International Symposium on Communication\
    \ Systems, Networks and Digital\nSignal Processing, CSNDSP 2016, Nairobi, Kenya,\
    \ 18–20 November 2016; pp. 1–6. [CrossRef]\n29.\nAssaf, R.; Saleh, Y. Vehicle-routing\
    \ optimization for municipal solid waste collection using genetic algorithm: The\
    \ case of southern\nNablus city. Civ. Environ. Eng. Rep. 2017, 26, 43–57. [CrossRef]\n\
    30.\nHannan, M.A.; Lipu, M.S.H.; Akhtar, M.; Begum, R.A.; Mamum, M.A.A.; Hussain,\
    \ A.; Mia, M.S.; Basri, H. Solid waste collection\noptimization objectives, constraints,\
    \ modeling approaches, and their challenges toward achieving sustainable development\
    \ goals.\nJ. Clean. Prod. 2020, 277, 123557. [CrossRef]\n31.\nZhang, Y.; Luo,\
    \ X.; Han, X.; Lu, Y.; Wei, J.; Yu, C. Optimization of Urban Waste Transportation\
    \ Route Based on Genetic Algorithm.\nSecur. Commun. Netw. 2022, 2022, 1–10. [CrossRef]\n\
    32.\nWei, Q.; Guo, Z.; Lau, H.C.; He, Z. An artiﬁcial bee colony-based hybrid\
    \ approach for waste collection problem with midway\ndisposal pattern. Appl. Soft\
    \ Comput. 2019, 76, 629–637. [CrossRef]\n33.\nRaﬂesia, S.P.; Pamosoaji, A.K. A\
    \ Novel Ant Colony optimization Algorithm for Waste Collection Problem. In Proceedings\
    \ of\nthe 2019 4th International Conference on Information Technology, Information\
    \ Systems and Electrical Engineering (ICITISEE),\nYogyakarta, Indonesia, 20–21\
    \ November 2019; pp. 413–416.\n34.\nYazdani, M.; Kabirifar, K.; Frimpong, B.E.;\
    \ Shariati, M.; Mirmozaffari, M.; Boskabadi, A. Improving construction and demolition\n\
    waste collection service in an urban area using a simheuristic approach: A case\
    \ study in Sydney, Australia. J. Clean. Prod. 2021,\n280, 124138. [CrossRef]\n\
    35.\nIdwan, S.; Mahmood, I.; Zubairi, J.A.; Matar, I. Optimal management of solid\
    \ waste in smart cities using internet of things. Wirel.\nPers. Commun. 2020,\
    \ 110, 485–501. [CrossRef]\n36.\nFaizal, U.M.; Jayachitra, R.; Vijayakumar, P.;\
    \ Rajasekar, M. Optimization of inbound vehicle routes in the collection of bio-medical\n\
    wastes. Mater. Today Proc. 2021, 45, 692–699. [CrossRef]\n37.\nTirkolaee, E.B.;\
    \ Alinaghian, M.; Hosseinabadi, A.A.R.; Sasi, M.B.; Sangaiah, A.K. An improved\
    \ ant colony optimization for the\nmulti-trip Capacitated Arc Routing Problem.\
    \ Comput. Electr. Eng. 2019, 77, 457–470. [CrossRef]\n38.\nBranch and Cut for\
    \ Vehicle Routing. Available online: https://www.coin-or.org/SYMPHONY/branchandcut/VRP/data/index.\n\
    htm (accessed on 9 March 2022).\n39.\nCapacitated VRP Instances|Vehicle Routing\
    \ Problem. Available online: https://neo.lcc.uma.es/vrp/vrp-instances/capacitated-\n\
    vrp-instances/ (accessed on 9 March 2022).\n40.\nEttappan, M.; Vimala, V.; Ramesh,\
    \ S.; Kesavan, V.T. Optimal reactive power dispatch for real power loss minimization\
    \ and\nvoltage stability enhancement using artiﬁcial bee colony algorithm. Microprocess.\
    \ Microsyst. 2020, 76, 103085. [CrossRef]\n41.\nDas, C.K.; Bass, O.; Kothapalli,\
    \ G.; Mahmoud, T.S.; Habibi, D. Optimal placement of distributed energy storage\
    \ systems in\ndistribution networks using artiﬁcial bee colony algorithm. Appl.\
    \ Energy 2018, 232, 212–228. [CrossRef]\n42.\nSakr, W.S.; El-Sehiemy, R.A.; Azmy,\
    \ A.M. Adaptive differential evolution algorithm for efﬁcient reactive power management.\n\
    Appl. Soft Comput. 2017, 53, 336–351. [CrossRef]\n43.\nNguyen, T.T.; Mohammadi,\
    \ F. Optimal placement of TCSC for congestion management and power loss reduction\
    \ using\nmulti-objective genetic algorithm. Sustainability 2020, 12, 2813. [CrossRef]\n\
    44.\nAtteya, I.I.; Ashour, H.A.; Fahmi, N.; Strickland, D. Distribution network\
    \ reconﬁguration in smart grid system using modiﬁed\nparticle swarm optimization.\
    \ In Proceedings of the 2016 IEEE International Conference on Renewable Energy\
    \ Research and\nApplications (ICRERA), Birmingham, UK, 20–23 November 2016; Volumr\
    \ 5, pp. 305–313. [CrossRef]\n45.\nKanwar, N.; Gupta, N.; Niazi, K.R.; Swarnkar,\
    \ A.; Bansal, R.C. Simultaneous allocation of distributed energy resource using\n\
    improved particle swarm optimization. Appl. Energy 2017, 185, 1684–1693. [CrossRef]\n\
    46.\nUtkarsh, K.; Trivedi, A.; Srinivasan, D.; Reindl, T. A Consensus-Based Distributed\
    \ Computational Intelligence Technique for\nReal-Time Optimal Control in Smart\
    \ Distribution Grids. IEEE Trans. Emerg. Top. Comput. Intell. 2016, 1, 51–60.\
    \ [CrossRef]\n47.\nAskarzadeh, A. A memory-based genetic algorithm for optimization\
    \ of power generation in a microgrid. IEEE Trans. Sustain.\nEnergy 2017, 9, 1081–1089.\
    \ [CrossRef]\n48.\nMohammed, O.H.; Amirat, Y.; Benbouzid, M. Economical evaluation\
    \ and optimal energy management of a stand-alone hybrid\nenergy system handling\
    \ in genetic algorithm strategies. Electronics 2018, 7, 233. [CrossRef]\n49.\n\
    Das, B.K.; Hassan, R.; Tushar, M.S.H.K.; Zaman, F.; Hasan, M.; Das, P. Techno-economic\
    \ and environmental assessment of a\nhybrid renewable energy system using multi-objective\
    \ genetic algorithm: A case study for remote Island in Bangladesh. Energy\nConvers.\
    \ Manag. 2021, 230, 113823. [CrossRef]\nSensors 2022, 22, 4380\n31 of 34\n50.\n\
    Geleta, D.K.; Manshahia, M.S. Artiﬁcial bee colony-based optimization of hybrid\
    \ wind and solar renewable energy system. In\nResearch Anthology on Clean Energy\
    \ Management and Solutions; IGI Global: Hershey, PA, USA, 2021; pp. 819–842.\n\
    51.\nMoghaddam, M.M.; Marzband, M.; Azarinejadian, F. Optimal energy management\
    \ for a home Microgrid based on multi-period\nartiﬁcial bee colony. In Proceedings\
    \ of the 2017 Iranian Conference on Electrical Engineering (ICEE), Tehran, Iran,\
    \ 2–4 May 2017;\npp. 1446–1451.\n52.\nHabib, H.U.R.; Wang, S.; Waqar, A.; Farhan,\
    \ B.S.; Kotb, K.M.; Kim, Y.S. Combined Heat and Power Units Sizing and Energy\n\
    Cost Optimization of a Residential Building by Using an Artiﬁcial Bee Colony Algorithm.\
    \ IEEE Access 2020, 8, 218289–218303.\n[CrossRef]\n53.\nLezama, F.; Soares, J.;\
    \ Faia, R.; Pinto, T.; Vale, Z. A new hybrid-adaptive differential evolution for\
    \ a smart grid application under\nuncertainty. In Proceedings of the 2018 IEEE\
    \ Congress on Evolutionary Computation (CEC), Rio de Janeiro, Brazil, 8–13 July\n\
    2018; pp. 1–8.\n54.\nLezama, F.; Sucar, L.E.; de Cote, E.M.; Soares, J.; Vale,\
    \ Z. Differential evolution strategies for large-scale energy resource\nmanagement\
    \ in smart grids. In Proceedings of the Genetic and Evolutionary Computation Conference\
    \ Companion, Berlin,\nGermany, 15–19 July 2017; pp. 1279–1286.\n55.\nPalakonda,\
    \ V.; Awad, N.H.; Mallipeddi, R.; Ali, M.Z.; Veluvolu, K.C.; Suganthan, P.N. Differential\
    \ evolution with stochastic\nselection for uncertain environments: A smart grid\
    \ application. In Proceedings of the 2018 IEEE Congress on Evolutionary\nComputation\
    \ (CEC), Rio de Janeiro, Brazil, 8–13 July 2018; pp. 1–7.\n56.\nMandal, S.; Mandal,\
    \ K.K. Optimal energy management of microgrids under environmental constraints\
    \ using chaos enhanced\ndifferential evolution. Renew. Energy Focus 2020, 34,\
    \ 129–141. [CrossRef]\n57.\nAzaza, M.; Wallin, F. Multi objective particle swarm\
    \ optimization of hybrid micro-grid system: A case study in Sweden. Energy\n2017,\
    \ 123, 108–118. [CrossRef]\n58.\nGabbar, H.A.; Abdussami, M.R.; Adham, M.I. Optimal\
    \ Planning of Nuclear-Renewable Micro-Hybrid Energy System by Particle\nSwarm\
    \ Optimization. IEEE Access 2020, 8, 181049–181073. [CrossRef]\n59.\nBhayo, B.A.;\
    \ Al-Kayiem, H.H.; Gilani, S.I.U.; Ismail, F.B. Power management optimization\
    \ of hybrid solar photovoltaic-battery\nintegrated with pumped-hydro-storage system\
    \ for standalone electricity generation. Energy Convers. Manag. 2020, 215, 112942.\n\
    [CrossRef]\n60.\nGrisales-Noreña, L.F.; Montoya, O.D.; Ramos-Paja, C.A. An energy\
    \ management system for optimal operation of BSS in DC\ndistributed generation\
    \ environments based on a parallel PSO algorithm. J. Energy Storage 2020, 29,\
    \ 101488. [CrossRef]\n61.\nMahdavi, M.; Kimiyaghalam, A.; Alhelou, H.H.; Javadi,\
    \ M.; Catalão, J.P.S.; Ashouri, A. Transmission Expansion Planning\nConsidering\
    \ Power Losses, Expansion of Substations and Uncertainty in Fuel Price Using Discrete\
    \ Artiﬁcial Bee Colony Algorithm.\nIEEE Access 2021, 9, 135983–135995. [CrossRef]\n\
    62.\nMaji, T.K.; Acharjee, P. Multiple Solutions of Optimal PMU Placement Using\
    \ Exponential Binary PSO Algorithm for Smart Grid\nApplications. IEEE Trans. Ind.\
    \ Appl. 2017, 53, 2550–2559. [CrossRef]\n63.\nRasheed, M.B.; R-Moreno, M.D. Minimizing\
    \ pricing policies based on user load proﬁles and residential demand responses\
    \ in\nsmart grids. Appl. Energy 2022, 310, 118492. [CrossRef]\n64.\nZhang, D.;\
    \ Fu, Z.; Zhang, L. An improved TS algorithm for loss-minimum reconﬁguration in\
    \ large-scale distribution systems.\nElectr. Power Syst. Res. 2007, 77, 685–694.\
    \ [CrossRef]\n65.\nPell, J.P.; Sirel, J.M.; Marsden, A.K.; Ford, I.; Cobbe, S.M.\
    \ Effect of reducing ambulance response times on deaths from out of\nhospital\
    \ cardiac arrest: Cohort study. BMJ 2001, 322, 1385–1388. [CrossRef]\n66.\nRapidSOS.\
    \ Outcomes: Quantifying the Impact of Emergency Response Time-RapidSOS. Available\
    \ online: https://rapidsos.com/\nour-latest/quantifying-impact-of-emergency-times-whitepaper-download/\
    \ (accessed on 9 March 2022).\n67.\nToth, P.; Vigo, D. The Vehicle Routing Problem;\
    \ SIAM: Philadelphia, PA, USA, 2002.\n68.\nAgeev, A.A.; Sviridenko, M.I. Approximation\
    \ Algorithms for Maximum Coverage and Max Cut with Given Sizes of Parts; Springer:\n\
    Berlin/Heidelberg, Germany, 1999; pp. 17–30.\n69.\nMouhcine, E.; Karouani, Y.;\
    \ Mansouri, K.; Mohamed, Y. Toward a distributed strategy for emergency ambulance\
    \ routing problem.\nIn Proceedings of the 2018 4th International Conference on\
    \ Optimization and Applications (ICOA), Mohammedia, Morocco,\n26–27 April 2018;\
    \ pp. 1–4.\n70.\nBrotcorne, L.; Laporte, G.; Semet, F. Ambulance location and\
    \ relocation models. Eur. J. Oper. Res. 2003, 147, 451–463. [CrossRef]\n71.\n\
    Benabdouallah, M.; Bojji, C.; Yaakoubi, O.E. Deployment and redeployment of ambulances\
    \ using a heuristic method and an\nAnt Colony Optimization-Case study. In Proceedings\
    \ of the 2016 Third International Conference on Systems of Collaboration\n(SysCo),\
    \ Casablanca, Morocco, 28–29 November 2016; pp. 1–4. [CrossRef]\n72.\nBenabdouallah,\
    \ M.; Bojji, C. Comparison between GA and ACO for emergency coverage problem in\
    \ a smart healthcare\nenvironment. In Proceedings of the Proceedings of the 2017\
    \ International Conference on Smart Digital Environment, Rabat,\nMorocco, 21–23\
    \ July 2017; pp. 48–55.\n73.\nKochetov, Y.A.; Shamray, N.B. Optimization of the\
    \ ambulance ﬂeet location and relocation. J. Appl. Ind. Math. 2021, 15, 234–252.\n\
    [CrossRef]\n74.\nYan, Y.; Kong, Y.; Fu, Z. Dynamic Resource Scheduling in Emergency\
    \ Environment. J. Inf. Hiding Priv. Prot. 2019, 1, 143.\n[CrossRef]\n75.\nLu,\
    \ Q.; Kim, K.D. A genetic algorithm approach for expedited crossing of emergency\
    \ vehicles in connected and autonomous\nintersection trafﬁc. J. Adv. Transp. 2017,\
    \ 2017, 7318917. [CrossRef]\nSensors 2022, 22, 4380\n32 of 34\n76.\nAmer, H.M.;\
    \ Al-Kashoash, H.A.; Kemp, A.; Mihaylova, L.; Mayﬁeld, M. Coalition game for emergency\
    \ vehicles re-routing in\nsmart cities. In Proceedings of the 2018 IEEE 10th Sensor\
    \ Array and Multichannel Signal Processing Workshop (SAM), Shefﬁeld,\nUK, 8–11\
    \ July 2018; pp. 306–310. [CrossRef]\n77.\nSilva, B.N.; Han, K. Mutation operator\
    \ integrated ant colony optimization based domestic appliance scheduling for lucrative\n\
    demand side management. Future Gener. Comput. Syst. 2019, 100, 557–568. [CrossRef]\n\
    78.\nBui, K.N.; Agbehadji, I.E.; Millham, R.; Camacho, D.; Jung, J.J. Distributed\
    \ artiﬁcial bee colony approach for connected appliances\nin smart home energy\
    \ management system. Expert Syst. 2020, 37, e12521. [CrossRef]\n79.\nMakhadmeh,\
    \ S.N.; Khader, A.T.; Al-Betar, M.A.; Naim, S.; Alyasseri, Z.A.A.; Abasi, A.K.\
    \ Particle Swarm optimization Algorithm\nfor Power Scheduling Problem Using Smart\
    \ Battery. In Proceedings of the 2019 IEEE Jordan International Joint Conference\
    \ on\nElectrical Engineering and Information Technology (JEEIT), Amman, Jordan,\
    \ 9–11 April 2019; pp. 672–677. [CrossRef]\n80.\nAbid, S.; Zafar, A.; Khalid,\
    \ R.; Javaid, S.; Qasim, U.; Khan, Z.A.; Javaid, N. Managing Energy in Smart Homes\
    \ Using Binary Particle\nSwarm Optimization; Springer: Berlin/Heidelberg, Germany,\
    \ 2017; pp. 189–196.\n81.\nFatima, I.; Khalid, A.; Zahoor, S.; Yasmeen, A.; Arif,\
    \ S.; Zafar, U.; Javaid, N. Home Energy Management System Using Ant Colony\nOptimization\
    \ Technique in Microgrid; Springer: Berlin/Heidelberg, Germany, 2017; pp. 267–279.\n\
    82.\nRehman, N.U.; Javaid, N.; Khan, Z.A. An enhanced differential evolution based\
    \ energy management system for smart grids.\nIn Proceedings of the 2017 31st International\
    \ Conference on Advanced Information Networking and Applications Workshops\n(WAINA),\
    \ Taipei, Taiwan, 27–29 March 2017; pp. 132–137.\n83.\nGupta, I.; Anandini, G.N.;\
    \ Gupta, M. An hour wise device scheduling approach for demand side management\
    \ in smart grid\nusing particle swarm optimization. In Proceedings of the 2016\
    \ National Power Systems Conference, NPSC 2016, Bhubaneswar,\nIndia, 19–21 December\
    \ 2016; pp. 1–6. [CrossRef]\n84.\nNasab, M.A.; Zand, M.; Eskandari, M.; Sanjeevikumar,\
    \ P.; Siano, P. Optimal Planning of Electrical Appliance of Residential Units\n\
    in a Smart Home Network Using Cloud Services. Smart Cities 2021, 4, 1173–1195.\
    \ [CrossRef]\n85.\nEssiet, I.O.; Sun, Y.; Wang, Z. Optimized energy consumption\
    \ model for smart home using improved differential evolution\nalgorithm. Energy\
    \ 2019, 172, 354–365. [CrossRef]\n86.\nUllah, I.; Kim, D. An improved optimization\
    \ function for maximizing user comfort with minimum energy consumption in smart\n\
    homes. Energies 2017, 10, 1818. [CrossRef]\n87.\nReghukumar, R.; Sambhu, S.; Pandi,\
    \ V.R. Multi-objective optimization for efﬁcient home energy management system\
    \ using\ndifferential evolution algorithm. In Proceedings of the 2018 3rd IEEE\
    \ International Conference on Recent Trends in Electronics,\nInformation & Communication\
    \ Technology (RTEICT), Bangalore, India, 18–19 May 2018; pp. 1157–1162.\n88.\n\
    Pamulapati, T.; Mallipeddi, R.; Lee, M. Multi-objective home appliance scheduling\
    \ with implicit and interactive user satisfaction\nmodelling. Appl. Energy 2020,\
    \ 267, 114690. [CrossRef]\n89.\nJordehi, A.R. Binary particle swarm optimisation\
    \ with quadratic transfer function: A new binary optimisation algorithm for\n\
    optimal scheduling of appliances in smart homes. Appl. Soft Comput. 2019, 78,\
    \ 465–480. [CrossRef]\n90.\nChandra, P.; Das, A.; Das, C.; Naskar, A.; Ganguly,\
    \ B.; Paul, S. Differential Evolution Algorithm Based Energy Management of\nResidential\
    \ Microgrid Under Appliance Scheduling DSM. In Proceedings of the 2020 IEEE Vlsi\
    \ Device Circuit and System (VLSI\nDCS), Kolkata, India, 18–19 July 2020; pp.\
    \ 50–55.\n91.\nFaia, R.; Faria, P.; Vale, Z.; Spinola, J. Demand response optimization\
    \ using particle swarm algorithm considering optimum\nbattery energy storage schedule\
    \ in a residential house. Energies 2019, 12, 1645. [CrossRef]\n92.\nMadathil,\
    \ D.; Pandi, V.R.; Ilango, K.; Nair, M.G. Differential evolution based energy\
    \ management system for zero net energy\nbuilding. In Proceedings of the 2017\
    \ International Conference on Technological Advancements in Power and Energy (TAP\n\
    Energy), Kollam, India, 21–23 December 2017; pp. 1–5.\n93.\nSwalehe, H.; Marungsri,\
    \ B. Intelligent algorithm for optimal load management in smart home appliance\
    \ scheduling in distribution\nsystem. In Proceedings of the 2018 International\
    \ Electrical Engineering Congress (iEECON), Krabi, Thailand, 7–9 March 2018;\n\
    pp. 1–4.\n94.\nChang, J.C.; Wu, T.H. Demand Side Management of Power for Time-of-Use\
    \ Pricing Based on Particle Swarm Optimization. In\nProceedings of the 2020 3rd\
    \ IEEE International Conference on Knowledge Innovation and Invention (ICKII),\
    \ Kaohsiung, Taiwan,\n21–23 August 2020; pp. 317–320.\n95.\nBharathi, C.; Rekha,\
    \ D.; Vijayakumar, V. Genetic Algorithm Based Demand Side Management for Smart\
    \ Grid. Wirel. Pers.\nCommun. 2017, 93, 481–502. [CrossRef]\n96.\nChen, Z.; Chen,\
    \ Y.; He, R.; Liu, J.; Gao, M.; Zhang, L. Multi-objective residential load scheduling\
    \ approach for demand response\nin smart grid. Sustain. Cities Soc. 2022, 76,\
    \ 103530. [CrossRef]\n97.\nTao, W.; Lai, Z.H.; Leu, M.C.; Yin, Z. Worker Activity\
    \ Recognition in Smart Manufacturing Using IMU and sEMG Signals with\nConvolutional\
    \ Neural Networks. Procedia Manuf. 2018, 26, 1159–1166. [CrossRef]\n98.\nZhao,\
    \ R.; Yan, R.; Chen, Z.; Mao, K.; Wang, P.; Gao, R.X. Deep learning and its applications\
    \ to machine health monitoring. Mech.\nSyst. Signal Process. 2019, 115, 213–237.\
    \ [CrossRef]\n99.\nHuang, B.; Wang, W.; Ren, S.; Zhong, R.Y.; Jiang, J. A proactive\
    \ task dispatching method based on future bottleneck prediction for\nthe smart\
    \ factory. Int. J. Comput. Integr. Manuf. 2019, 32, 278–293. [CrossRef]\n100.\
    \ Sadeghi, M.; Tavakkoli-Moghaddam, R.; Babazadeh, R. An efﬁcient artiﬁcial bee\
    \ colony algorithm for a p-hub covering location\nproblem with travel time reliability.\
    \ Int. J. Ind. Eng. 2018, 25, 40–53.\nSensors 2022, 22, 4380\n33 of 34\n101. Guo,\
    \ K. Research on location selection model of distribution network with constrained\
    \ line constraints based on genetic algorithm.\nNeural Comput. Appl. 2020, 32,\
    \ 1679–1689. [CrossRef]\n102. Su, Y.; Liu, J.; Xiang, X.; Zhang, X. A responsive\
    \ ant colony optimization for large-scale dynamic vehicle routing problems via\n\
    pheromone diversity enhancement. Complex Intell. Syst. 2021, 7, 2543–2558. [CrossRef]\n\
    103. Alinaghian, M.; Ghazanfari, M.; Norouzi, N.; Nouralizadeh, H. A novel model\
    \ for the time dependent competitive vehicle\nrouting problem: Modiﬁed random\
    \ topology particle swarm optimization. Netw. Spat. Econ. 2017, 17, 1185–1211.\
    \ [CrossRef]\n104. Utama, D.M.; Fitria, T.A.; Garside, A.K. Artiﬁcial Bee Colony\
    \ Algorithm for Solving Green Vehicle Routing Problems with Time\nWindows. J.\
    \ Physics Conf. Ser. 2021, 1933, 12043. [CrossRef]\n105. Ibrahim, M.F.; Nurhakiki,\
    \ F.R.; Utama, D.M.; Rizaki, A.A. Optimised Genetic Algorithm Crossover and Mutation\
    \ Stage for\nVehicle Routing Problem Pick-Up and Delivery with Time Windows. In\
    \ IOP Conference Series: Materials Science and Engineering;\nIOP Publishing: Bristol,\
    \ UK, 2021; Volume 1071, p. 12025.\n106. Mounia, D.A.; Bachir, D. A hybrid discrete\
    \ artiﬁcial bee colony for the green pickup and delivery problem with time windows.\n\
    Informatica 2020, 44, 507–519.\n107. Gu, Z.; Zhu, Y.; Wang, Y.; Du, X.; Guizani,\
    \ M.; Tian, Z. Applying artiﬁcial bee colony algorithm to the multidepot vehicle\
    \ routing\nproblem. Softw. Pract. Exp. 2020, 52, 756–771. [CrossRef]\n108. Norouzi,\
    \ N.; Sadegh-Amalnick, M.; Tavakkoli-Moghaddam, R. Modiﬁed particle swarm optimization\
    \ in a time-dependent\nvehicle routing problem: Minimizing fuel consumption. Optim.\
    \ Lett. 2017, 11, 121–134. [CrossRef]\n109. Ng, K.K.H.; Lee, C.K.M.; Zhang, S.Z.;\
    \ Wu, K.; Ho, W. A multiple colonies artiﬁcial bee colony algorithm for a capacitated\n\
    vehicle routing problem and re-routing strategies under time-dependent trafﬁc\
    \ congestion. Comput. Ind. Eng. 2017, 109, 151–168.\n[CrossRef]\n110. Solomon,\
    \ M.M. Algorithms for the vehicle routing and scheduling problems with time window\
    \ constraints. Oper. Res. 1987,\n35, 254–265. [CrossRef]\n111. Huang, Y.; Ludwig,\
    \ S.A.; Deng, F. Sensor optimization using a genetic algorithm for structural\
    \ health monitoring in harsh\nenvironments. J. Civ. Struct. Health Monit. 2016,\
    \ 6, 509–519. [CrossRef]\n112. Zhao, F.; Bao, H.; Xue, S.; Xu, Q. Multi-objective\
    \ particle swarm optimization of sensor distribution scheme with consideration\
    \ of\nthe accuracy and the robustness for deformation reconstruction. Sensors\
    \ 2019, 19, 1306. [CrossRef]\n113. Yang, C.; Liang, K.; Zhang, X.; Geng, X. Sensor\
    \ placement algorithm for structural health monitoring with redundancy elimination\n\
    model based on sub-clustering strategy. Mech. Syst. Signal Process. 2019, 124,\
    \ 369–387. [CrossRef]\n114. Downey, A.; Hu, C.; Laﬂamme, S. Optimal sensor placement\
    \ within a hybrid dense sensor network using an adaptive genetic\nalgorithm with\
    \ learning gene pool. Struct. Health Monit. 2018, 17, 450–460. [CrossRef]\n115.\
    \ Cao, B.; Kang, X.; Zhao, J.; Yang, P.; Lv, Z.; Liu, X. Differential evolution-based\
    \ 3-D directional wireless sensor network deployment\noptimization. IEEE Internet\
    \ Things J. 2018, 5, 3594–3605. [CrossRef]\n116. Marks, R.; Clarke, A.; Featherston,\
    \ C.A.; Pullin, R. Optimization of acousto-ultrasonic sensor networks using genetic\
    \ algorithms\nbased on experimental and numerical data sets. Int. J. Distrib.\
    \ Sens. Netw. 2017, 13, 1550147717743702. [CrossRef]\n117. Liu, H.; He, X.; Jiao,\
    \ Y. Damage identiﬁcation algorithm of hinged joints for simply supported slab\
    \ bridges based on modiﬁed\nhinge plate method and artiﬁcial bee colony algorithms.\
    \ Algorithms 2018, 11, 198. [CrossRef]\n118. Tran-Ngoc, H.; Khatir, S.; Roeck,\
    \ G.D.; Bui-Tien, T.; Nguyen-Ngoc, L.; Wahab, M.A. Model updating for Nam O bridge\
    \ using\nparticle swarm optimization algorithm and genetic algorithm. Sensors\
    \ 2018, 18, 4131. [CrossRef]\n119. Gao, K.; Zhang, Y.; Sadollah, A.; Su, R. Improved\
    \ artiﬁcial bee colony algorithm for solving urban trafﬁc light scheduling problem.\n\
    In Proceedings of the 2017 IEEE Congress on Evolutionary Computation (CEC), Donostia,\
    \ Spain, 5–8 June 2017; pp. 395–402.\n120. Adebiyi, R.F.; Abubilal, K.A.; Mu’azu,\
    \ M.B.; Adebiyi, B.H. Development and simulation of adaptive trafﬁc light controller\
    \ using\nartiﬁcial bee colony algorithm. Int. J. Intell. Syst. Appl. 2018, 10,\
    \ 68–74. [CrossRef]\n121. Mao, T.; Mihaita, A.S.; Cai, C. Trafﬁc signal control\
    \ optimization under severe incident conditions using Genetic Algorithm. arXiv\n\
    2019, arXiv:1906.05356.\n122. Tang, C.; Xia, S.; Zhu, C.; Wei, X. Phase Timing\
    \ Optimization for Smart Trafﬁc Control Based on Fog Computing. IEEE Access\n\
    2019, 7, 84217–84228. [CrossRef]\n123. Li, Z.; Shahidehpour, M.; Bahramirad, S.;\
    \ Khodaei, A. Optimizing Trafﬁc Signal Settings in Smart Cities. IEEE Trans. Smart\
    \ Grid\n2017, 8, 2382–2393. [CrossRef]\n124. Chen, X.; Yuan, Z. Environmentally\
    \ friendly trafﬁc control strategy-A case study in Xi’an city. J. Clean. Prod.\
    \ 2020, 249, 119397.\n125. Korkmaz, E.; AKGÜNGÖR, A.P. Delay estimation models\
    \ for signalized intersections using differential evolution algorithm. J.\nEng.\
    \ Res. 2017, 5, 16–29.\n126. Zhang, X.; Fan, X.; Yu, S.; Shan, A.; Fan, S.; Xiao,\
    \ Y.; Dang, F. Intersection Signal Timing Optimization: A Multi-Objective\nEvolutionary\
    \ Algorithm. Sustainability 2022, 14, 1506. [CrossRef]\n127. Mao, X. Study on\
    \ ant colony optimization algorithm for “one-day tour” trafﬁc line. Clust. Comput.\
    \ 2019, 22, 3673–3680.\n128. Jovanovi´c, A.; Teodorovi´c, D. Fixed-Time Trafﬁc\
    \ Control at Superstreet Intersections by Bee Colony Optimization. Transp. Res.\n\
    Rec. 2021, 2676, 228–241. [CrossRef]\n129. Wang, M.; Dong, H.; Li, X.; Song, L.;\
    \ Pang, D. A novel parking system designed for smart cities. In Proceedings of\
    \ the 2017\nChinese Automation Congress (CAC), Jinan, China, 20–22 October 2017;\
    \ pp. 3429–3434. [CrossRef]\nSensors 2022, 22, 4380\n34 of 34\n130. Aydin, I.;\
    \ Karakose, M.; Karakose, E. A navigation and reservation based smart parking\
    \ platform using genetic optimization for\nsmart cities. In Proceedings of the\
    \ 2017 5th International Istanbul Smart Grid and Cities Congress and Fair (ICSG),\
    \ Istanbul,\nTurkey, 19–21 April 2017; pp. 120–124. [CrossRef]\n131. Ferdous,\
    \ F.; Mahmud, M.S. Intelligent trafﬁc monitoring system using VANET infrastructure\
    \ and ant colony optimization. In\nProceedings of the 2016 5th International Conference\
    \ on Informatics, Electronics and Vision, ICIEV 2016, Dhaka, Bangladesh,\n13–14\
    \ May 2016; pp. 356–360. [CrossRef]\n132. Rehman, A.; Rathore, M.M.; Paul, A.;\
    \ Saeed, F.; Ahmad, R.W. Vehicular trafﬁc optimisation and even distribution using\
    \ ant\ncolony in smart city environment. IET Intell. Transp. Syst. 2018, 12, 594–601.\
    \ [CrossRef]\n133. Pompei, F. Ant Colony Optimisation and Geolocation Technologies\
    \ for the Transportation Assignment Problem. In Proceedings\nof the 2017 IEEE\
    \ 41st Annual Computer Software and Applications Conference (COMPSAC), Turin,\
    \ Italy, 4–8 July 2017; Volume\n2, pp. 749–753. [CrossRef]\n134. Nguyen, T.H.;\
    \ Jung, J.J. Ant colony optimization-based trafﬁc routing with intersection negotiation\
    \ for connected vehicles. Appl.\nSoft Comput. 2021, 112, 107828. [CrossRef]\n\
    135. Yi, Y.; Choi, K.; Lee, Y.J. Optimal limited-stop bus routes selection using\
    \ a genetic algorithm and smart card data. J. Public Transp.\n2016, 19, 178–198.\
    \ [CrossRef]\n136. Pitakaso, R.; Sethanan, K.; Srijaroon, N. Modiﬁed differential\
    \ evolution algorithms for multi-vehicle allocation and route\noptimization for\
    \ employee transportation. Eng. Optim. 2020, 52, 1225–1243. [CrossRef]\n137. Buba,\
    \ A.T.; Lee, L.S. Differential evolution with improved sub-route reversal repair\
    \ mechanism for multiobjective urban transit\nrouting problem. Numer. Algebr.\
    \ Control Optim. 2018, 8, 351.\n138. Jovanovi´c, A.; Nikoli´c, M.; Teodorovi´c,\
    \ D. Area-wide urban trafﬁc control: A Bee Colony Optimization approach. Transp.\
    \ Res.\nPart C Emerg. Technol. 2017, 77, 329–350. [CrossRef]\n139. Hassoune, K.;\
    \ Dachry, W.; Moutaouakkil, F.; Medromi, H. Dynamic parking guidance architecture\
    \ using ant colony optimization\nand multi-agent systems. J. Adv. Inf. Technol.\
    \ 2020, 11, 58–63. [CrossRef]\n140. Bijandi, M.; Karimi, M.; Bansouleh, B.F.;\
    \ van der Knaap, W. Agricultural land partitioning model based on irrigation efﬁciency\n\
    using a multi-objective artiﬁcial bee colony algorithm. Trans. GIS 2021, 25, 551–574.\
    \ [CrossRef]\n141. Darmian, S.M.; Fattahi, M.; Keyvanshokooh, E. An optimization-based\
    \ approach for the healthcare districting under uncertainty.\nComput. Oper. Res.\
    \ 2021, 135, 105425. [CrossRef]\n142. Ding, Z.; Fu, K.; Deng, W.; Li, J.; Zhongrong,\
    \ L. A modiﬁed Artiﬁcial Bee Colony algorithm for structural damage identiﬁcation\n\
    under varying temperature based on a novel objective function. Appl. Math. Model.\
    \ 2020, 88, 122–141. [CrossRef]\n143. Tao, W.; Leu, M.C.; Yin, Z. Multi-modal\
    \ recognition of worker activity for human-centered intelligent manufacturing.\
    \ Eng. Appl.\nArtif. Intell. 2020, 95, 103868. [CrossRef]\n144. Wang, C.; Shi,\
    \ H.; Zuo, X. A multi-objective genetic algorithm based approach for dynamical\
    \ bus vehicles scheduling under\ntrafﬁc congestion. Swarm Evol. Comput. 2020,\
    \ 54, 100667. [CrossRef]\n145. Banerjee, A.; Mitra, A.; Biswas, A. An integrated\
    \ application of IoT-based WSN in the ﬁeld of indian agriculture system using\n\
    hybrid optimization technique and machine learning. In Agricultural Informatics:\
    \ Automation Using the IoT and Machine Learning;\nJohn Wiley & Sons, Inc.: Hoboken,\
    \ NJ, USA, 2021; pp. 171–187. [CrossRef]\n146. Du, J.; Zhang, Z.; Li, M.; Guo,\
    \ J.; Zhu, K. Optimal scheduling of integrated energy system based on improved\
    \ grey wolf\noptimization algorithm. Sci. Rep. 2022, 12, 7095. [CrossRef] [PubMed]\n\
    147. Li, S.; Wang, F. Research on Optimization of Improved Gray Wolf Optimization-Extreme\
    \ Learning Machine Algorithm in Vehicle\nRoute Planning. Discret. Dyn. Nat. Soc.\
    \ 2020, 2020, 8647820. [CrossRef]\n148. Khan, A.; Mushtaq, N.; Faraz, S.H.; Khan,\
    \ O.A.; Sarwar, M.A.; Javaid, N. Genetic Algorithm and Earthworm Optimization\
    \ Algorithm\nfor Energy Management in Smart Grid; Springer: Berlin/Heidelberg,\
    \ Germany, 2017; pp. 447–459.\n149. Amer, H.; Salman, N.; Hawes, M.; Chaqfeh,\
    \ M.; Mihaylova, L.; Mayﬁeld, M. An improved simulated annealing technique for\n\
    enhanced mobility in smart cities. Sensors 2016, 16, 1013. [CrossRef]\n150. Qayyum,\
    \ N.; Amin, A.; Jamil, U.; Mahmood, A. Optimization techniques for home energy\
    \ management: A review. In Proceedings\nof the 2019 2nd International Conference\
    \ on Computing, Mathematics and Engineering Technologies, iCoMET 2019, Sukkur,\n\
    Pakistan, 30–31 January 2019. [CrossRef]\n151. Li, J.; Lei, H.; Alavi, A.H.; Wang,\
    \ G.G. Elephant herding optimization: Variants, hybrids, and applications. Mathematics\
    \ 2020,\n8, 1415. [CrossRef]\n152. Mazyavkina, N.; Sviridov, S.; Ivanov, S.; Burnaev,\
    \ E. Reinforcement learning for combinatorial optimization: A survey. Comput.\n\
    Oper. Res. 2021, 134, 105400. [CrossRef]\n153. Cabrejas-Egea, A.; Zhang, R.; Walton,\
    \ N. Reinforcement learning for trafﬁc signal control: Comparison with commercial\
    \ systems.\nTransp. Res. Procedia 2021, 58, 638–645. [CrossRef]\n154. Hassan,\
    \ R.; Cohanim, B.; De Weck, O.; Venter, G. A comparison of particle swarm optimization\
    \ and the genetic algorithm. In\nProceedings of the 46th AIAA/ASME/ASCE/AHS/ASC\
    \ Structures, Structural Dynamics and Materials Conference, Austin, TX,\nUSA,\
    \ 18–21 April 2005; p. 1897.\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/12/4380/pdf?version=1654771609
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Making Cities Smarter—Optimization Problems for the IoT Enabled Smart City
    Development: A Mapping of Applications, Objectives, Constraints'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s21206910
  analysis: '>'
  authors:
  - Juan S. Angarita-Zapata
  - Ainhoa Alonso-Vicario
  - Antonio D. Masegosa
  - Jon Legarda
  citation_count: 14
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nA Taxonomy of Food Supply Chain Problems from a\n\
    Computational Intelligence Perspective\nJuan S. Angarita-Zapata 1,*\n, Ainhoa\
    \ Alonso-Vicario 1\n, Antonio D. Masegosa 1,2\nand Jon Legarda 1\n\x01\x02\x03\
    \x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Angarita-Zapata,\
    \ J.S.;\nAlonso-Vicario, A.; Masegosa, A.D.;\nLegarda, J. A Taxonomy of Food\n\
    Supply Chain Problems from a\nComputational Intelligence\nPerspective. Sensors\
    \ 2021, 21, 6910.\nhttps://doi.org/10.3390/s21206910\nAcademic Editors: Christian\n\
    Krupitzer, Anthony Stein and\nJanick Edinger\nReceived: 4 September 2021\nAccepted:\
    \ 15 October 2021\nPublished: 18 October 2021\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nDeusto Institute of Technology (DeustoTech), Faculty of Engineering,\
    \ University of Deusto,\n48007 Bilbao, Spain; ainhoa.alonso@deusto.es (A.A.-V.);\
    \ ad.masegosa@deusto.es (A.D.M.);\njlegarda@deusto.es (J.L.)\n2\nIkerbasque, Basque\
    \ Foundation for Science, 48009 Bilbao, Spain\n*\nCorrespondence: js.angarita@deusto.es\n\
    Abstract: In the last few years, the Internet of Things, and other enabling technologies,\
    \ have been\nprogressively used for digitizing Food Supply Chains (FSC). These\
    \ and other digitalization-enabling\ntechnologies are generating a massive amount\
    \ of data with enormous potential to manage supply\nchains more efﬁciently and\
    \ sustainably. Nevertheless, the intricate patterns and complexity embedded\n\
    in large volumes of data present a challenge for systematic human expert analysis.\
    \ In such a data-\ndriven context, Computational Intelligence (CI) has achieved\
    \ signiﬁcant momentum to analyze, mine,\nand extract the underlying data information,\
    \ or solve complex optimization problems, striking a\nbalance between productive\
    \ efﬁciency and sustainability of food supply systems. Although some\nrecent studies\
    \ have sorted the CI literature in this ﬁeld, they are mainly oriented towards\
    \ a single\nfamily of CI methods (a group of methods that share common characteristics)\
    \ and review their\napplication in speciﬁc FSC stages. As such, there is a gap\
    \ in identifying and classifying FSC problems\nfrom a broader perspective, encompassing\
    \ the various families of CI methods that can be applied in\ndifferent stages\
    \ (from production to retailing) and identifying the problems that arise in these\
    \ stages\nfrom a CI perspective. This paper presents a new and comprehensive taxonomy\
    \ of FSC problems\n(associated with agriculture, ﬁsh farming, and livestock) from\
    \ a CI approach; that is, it deﬁnes FSC\nproblems (from production to retail)\
    \ and categorizes them based on how they can be modeled from\na CI point of view.\
    \ Furthermore, we review the CI approaches that are more commonly used in\neach\
    \ stage of the FSC and in their corresponding categories of problems. We also\
    \ introduce a set of\nguidelines to help FSC researchers and practitioners to\
    \ decide on suitable families of methods when\naddressing any particular problems\
    \ they might encounter. Finally, based on the proposed taxonomy,\nwe identify\
    \ and discuss challenges and research opportunities that the community should\
    \ explore to\nenhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nKeywords: food supply chain; computational intelligence; fish farming;\
    \ agriculture; livestock; machine\nlearning; neural networks; deep learning; meta-heuristics;\
    \ fuzzy systems; probabilistic methods\n1. Introduction\nCurrently, one worldwide\
    \ challenge is how to sustainably guarantee global food needs\nin the face of\
    \ a growing population that is projected to be 9–10 billion by 2050 [1]. In this\n\
    sense, the enhancement of production and management of the current Food Supply\
    \ Chains\n(FSCs) is a crucial factor that contributes to accomplishing such an\
    \ aim. Nowadays, new\nInformation and Communication Technologies (ICTs) (e.g.,\
    \ the Internet of Things) play\nan active role in the digitization of FSCs [2].\
    \ As a result, large volumes of data are being\ngenerated in all FSC stages, ranging\
    \ from production to retail. The analysis of such data\nwould enable FSC actors\
    \ to extract relevant information or to optimize speciﬁc processes,\nallowing\
    \ improvement of the FSC administration, productivity, and sustainability.\nNevertheless,\
    \ the high volumes of available data and their complex patterns raise\nsigniﬁcant\
    \ challenges when analyzing and extracting values. In this context, Computational\n\
    Sensors 2021, 21, 6910. https://doi.org/10.3390/s21206910\nhttps://www.mdpi.com/journal/sensors\n\
    Sensors 2021, 21, 6910\n2 of 34\nIntelligence (CI) seems to be a successful paradigm\
    \ to build intelligent systems that are\nable to leverage this high availability\
    \ of data. CI is the ability of a digital system or\nalgorithm to perform tasks\
    \ commonly associated with intelligent beings [3]. Within such\ntasks, we can\
    \ ﬁnd speech recognition, visual perception, decision-making, prediction, and\n\
    translation, among others [4]. Over the last few years, the number of academic\
    \ publications\nconcerning CI applied to FSC has rapidly increased [5–7]. Within\
    \ the most representative\nCI methods applied to FSCs, we ﬁnd Neural Networks,\
    \ Fuzzy Logic, Swarm Intelligence,\nor Probabilistic Reasoning.\nThe scientiﬁc\
    \ literature reports different studies that aim to review and order the\napplication\
    \ of CI methods in different FSC stages. The variety of CI methods has led to\
    \ the\nemergence of research papers (published between 2012 and 2020), which select\
    \ a partic-\nular family of CI techniques and review their application in speciﬁc\
    \ FSC stages [2,6–12].\nHowever, these papers focus on only one or two families\
    \ of CI methods at most, and in the\nmajority of cases, do not cover all FSC stages.\
    \ Therefore, there is a lack of comprehensive\nstudies that review the application\
    \ of the most important families of CI methods in all FSC\nstages (from production\
    \ to retail). Additionally, few efforts have been made to classify FSC\nproblems\
    \ from a CI perspective. Hence, there is no categorization of the typologies of\
    \ FSC\nproblems to help determine how they can be modeled from a CI view (e.g.,\
    \ optimization,\nuncertain knowledge handling, reasoning) and what CI methods\
    \ can be most suitably used\nto approach them. Thus, despite the progress made\
    \ in organizing and systematizing the\nexisting literature at the point where\
    \ CI and FSCs meet, to the best of our knowledge, no\ntaxonomy has been proposed\
    \ in this regard.\nWith the above-mentioned ideas in mind, we propose a novel\
    \ taxonomy of FSC\nproblems from a CI perspective. Speciﬁcally, we focus on the\
    \ supply chain of agriculture,\nﬁsh farming, and livestock. The latter is justiﬁed\
    \ based on the fact that these supply chains\nprovide most of the food consumed\
    \ by the population of the world [13] and, therefore, they\nare the most studied\
    \ and researched FSCs in the scientiﬁc and academic literature. The\nmain contributions\
    \ of this article are:\n•\nA new taxonomy that provides a comprehensive view of\
    \ different FSC problems\nlocated in the chain stages typically studied in the\
    \ scientiﬁc literature (production,\nprocessing, distribution, and retail). This\
    \ taxonomy represents a new and broader\nproposal in order to identify and deﬁne\
    \ FSC problems that have been approached\nusing CI in the four aforementioned\
    \ stages. Besides, although some research articles\nhave described diverse FSC\
    \ problems, their deﬁnitions are not uniﬁed and vary\nfrom one paper to another.\
    \ Thus, this taxonomy also represents an effort to unify\nand consolidate deﬁnitions\
    \ of the FSC problems available in the literature, which\nrepresents a valuable\
    \ source of information for FSC researchers and practitioners\nworking in this\
    \ domain.\n•\nTo classify the FSC problems from a CI perspective. This classiﬁcation\
    \ allows FSC\nproblems to be mapped into common categories of problems in the\
    \ CI domain. Thus,\nwe provide a framework that helps display the similarities\
    \ and differences among\nFSC problems depending on how they can be modeled under\
    \ a CI perspective. To the\nbest of our knowledge, in this regard, no classiﬁcation\
    \ has been previously proposed.\n•\nTo establish a set of guidelines for the use\
    \ of CI in the FSC ﬁeld. These guidelines\naim to help FSC researchers and practitioners\
    \ to identify which FSC problems can\nbe addressed using CI, and the most appropriate\
    \ families of techniques to solve\nthem. Thus, these guidelines represent a ﬁrst\
    \ attempt to deﬁne a general framework\nto support the model selection problem\
    \ at the point where the ﬁelds of FSC and\nCI converge.\n•\nTo identify and discuss\
    \ challenges and research opportunities in the FSC domain,\nwhich are directed\
    \ towards more robust, explainable, interoperable, and accurate CI\nsolutions\
    \ that support FSC management and operation.\nThe rest of this paper is structured\
    \ as follows. Section 2 provides background in-\nformation on FSC and CI to facilitate\
    \ the understanding of the article. Furthermore, it\nSensors 2021, 21, 6910\n\
    3 of 34\nsummarizes other efforts directed at reviewing and categorizing the scientiﬁc\
    \ literature at\nthe point where FSC and CI meet in order to highlight how this\
    \ paper complements and\nenhances previous studies. Section 3 presents the proposed\
    \ taxonomy, its structure, and the\nclassiﬁcation of FSC from a CI perspective.\
    \ Afterwards, Section 4 gives FSC researchers and\npractitioners a set of guidelines\
    \ for the use of CI within the FSC domain. Lastly, Section 5\nsummarizes the main\
    \ conclusions and sets a research agenda for CI in the FSC ﬁeld.\n2. Background\
    \ and Motivation\nThis section provides some contextual and relevant background\
    \ information to facili-\ntate the understanding of the paper, and to assess similar\
    \ studies in this area. We start by\nintroducing the basic FSC stages examined\
    \ in this study (Section 2.1). Then, Section 2.2\npresents the main families of\
    \ CI approaches typically considered in FSC research. Finally,\nSection 2.3 reviews\
    \ similar works at the point where FSC and CI converge, which have\nidentiﬁed\
    \ and classiﬁed CI-based problems and methods. Section 2 ends with a discussion\n\
    of the main contributions of this research article.\n2.1. Food Supply Chain\n\
    FSC refers to the system that encompasses all activities, organizations, actors,\
    \ tech-\nnologies, information, resources, and services involved in producing\
    \ agri-food products for\nconsumer markets (e.g., fresh food, meat, and processed\
    \ food products) [14]. The upstream\nand downstream sectors form the supply of\
    \ agricultural inputs (such as seeds, fertilizers,\nfeed, medicine, or equipment)\
    \ to production, post-harvest handling, processing, transporta-\ntion, marketing,\
    \ distribution, and retailing [15]. They also include support services such as\n\
    extension services, research and development, and market information.\nBefore\
    \ the ﬁnal consumption of food products, FSC can include diverse stages wherein\n\
    production, processing, distribution, and retail are the stages most commonly\
    \ studied in\nthe scientiﬁc literature [16]. First, the production stage forms\
    \ the initial set of processes to\nobtain raw products derived from agriculture,\
    \ ﬁsh farming, or livestock. Agriculture refers\nto farming applications, including\
    \ the cultivation of soils for the harvest of crops [17]. Fish\nfarming involves\
    \ raising ﬁsh commercially in tanks or ﬁsh ponds, usually for consumer\nmarkets\
    \ [18]. Meanwhile, livestock is devoted to practices related to animal husbandry\
    \ for\nmeat, milk, eggs, or wool [19]. Continuing further down the production\
    \ chain, we ﬁnd\nthe processing stage, wherein the produced raw materials are\
    \ exposed to diverse transfor-\nmation processes (e.g., meat curing, washing and\
    \ disinfecting vegetables, fermentation),\nwhich allow consumable food products\
    \ to be obtained.\nOnce food products are ready to be delivered to the end-users,\
    \ the following FSC\nstages are distribution and retail. Their main purpose is\
    \ to connect the production and\nprocessing stages with the food users to complete\
    \ the supply chain loop [16]. Consequently,\nin the distribution stage, the processed\
    \ food is sent to distribution centers and warehouses.\nFrom such locations, different\
    \ distribution channels start to deliver the products to retail\nstores for sale.\
    \ Thus, retail is the end stage of the FSC and represents the link to consumers.\n\
    FSCs consist of a wide range of enterprises, ranging from smallholders, farmers’\n\
    organizations, co-operatives, and start-up companies to multinational enterprises\
    \ through\nparent companies or their local afﬁliates [14,15]. In this context,\
    \ FSC companies relate\nto each other through a variety of arrangements. Downstream\
    \ companies in the supply\nchain may engage in various types of relationships\
    \ with producers to secure access to\nagricultural products. They can impose standards\
    \ and speciﬁcations on producers with\nlittle involvement beyond a buying contract.\
    \ However, they can also become more actively\ninvolved, particularly through\
    \ contract farming, to coordinate production and ensure\nquality and safety [14].\
    \ In the new circular chain schemes, this type of relationship becomes\nmore complex,\
    \ involving more than one enterprise from the chain in the decision-making\nprocess\
    \ [20].\nCurrently, an appropriate and effective strategy to address this challenge\
    \ is the digiti-\nzation of FSCs, both of their internal processes and of their\
    \ relationships with other actors\nSensors 2021, 21, 6910\n4 of 34\nin the chain\
    \ [2]. Digitization has led to the generation of big volumes of data throughout\
    \ the\nentire supply chain. The exploitation of such data would allow FSC actors\
    \ to extract knowl-\nedge that could improve their internal processes in terms\
    \ of productivity and sustainability,\nas well as that of the FSC as a whole.\
    \ However, the data obtained through digitization\nusually contain complex and\
    \ intricate patterns that stand out as diverse challenges for\nprocessing and\
    \ analysis to extract value from it. Thus, CI arises as a solution that could\n\
    leverage and mine the underlying patterns of such data in order to obtain the\
    \ maximum\nvalue of the information, according to the analyses made.\n2.2. Computational\
    \ Intelligence Approaches\nCI is centered on the ability of a computer or algorithm\
    \ to learn speciﬁc tasks (e.g.,\npattern recognition, forecasting) from data that\
    \ is typically related to experimental observa-\ntions without human intervention\
    \ [3]. In the context of FSC, diverse IoT devices and data\nmanagement systems\
    \ sense and gather such data, which they then deploy in each supply\nchain stage.\
    \ After obtaining data, different CI approaches are used to process, analyze,\
    \ and\nextract information. In this section, we introduce the relevant background\
    \ information in\nrelation to families of CI-based methods that are typically\
    \ used in FSC applications. Fol-\nlowing the guidelines and classiﬁcation proposed\
    \ in [3], we have grouped the CI methods\ninto ﬁve families that are presented\
    \ in more detail below. They are CI-based Statistical\nLearning Methods, Artiﬁcial\
    \ Neural Networks and Deep Learning, CI-based Optimization\nMethods, Fuzzy Systems,\
    \ and Probabilistic Reasoning. These groups of CI-based methods\nare presented\
    \ below.\n2.2.1. CI-Based Statistical Learning Methods\nStatistical Learning Methods,\
    \ also known as Machine Learning (ML) methods are\nalgorithms that are able to\
    \ learn a speciﬁc task without being explicitly programmed. More\nformally, according\
    \ to Mitchell [21], these types of methods learn from experiences E,\nrelated\
    \ to a task T, and their performance is evaluated by a metric P. The performance\
    \ in T\nimproves according to P, with experience E. Classically, these methods\
    \ can be classiﬁed\naccording to the three basic learning approaches presented\
    \ below: unsupervised learning,\nsupervised learning, and reinforcement learning.\n\
    Unsupervised learning looks for patterns in data with no pre-existing labels.\
    \ Its\ncentral approach is usually focused on organizing X data points into speciﬁc\
    \ groups [22].\nData points that are in the same group should have similar properties,\
    \ while data points\nin different groups should have highly different features.\
    \ It is important to note that\nthese potential groups are not previously deﬁned\
    \ and it is the purpose of unsupervised\nlearning algorithms to discover them.\
    \ Some examples of unsupervised learning methods\nare hierarchical clustering,\
    \ k-means, anomaly detection techniques, among others.\nSupervised learning is\
    \ the other fundamental area of Statistical Learning Methods [23].\nIt consists\
    \ of algorithms that learn a function ( f : X 7→ Y) by training with a ﬁnite number\n\
    of input-output pairs, X being the input domain and X the output co-domain. This\
    \ learning\nstage can be seen as E in Mitchell’s deﬁnition [21], and the speciﬁc\
    \ task T usually involves\npredicting an output given a new and unseen input [24].\
    \ Common families of methods that\nstand out in supervised learning are decision\
    \ tree-based (e.g., Decision Tree, Extra Trees),\ninstance-based (e.g., K-Nearest\
    \ Neighbors), kernel-based (e.g., Support Vector Machine), or\nensemble-based\
    \ methods (Random Forest, AdaBoost).\nSupervised learning problems can usually\
    \ be divided into classiﬁcation and regres-\nsion [25,26]. In both cases, the\
    \ basis is an input data-set, X, and their difference is the\ntype of target variable,\
    \ Y, to be predicted. In the classiﬁcation case, Y is divided into\ndiscrete categories,\
    \ while in regression, the aim is to predict continuous values. Standard\nclassiﬁcation\
    \ problems can be either binary or multi-class problems [27]. In the former\n\
    case, an instance can only be associated with one of two values: the positive\
    \ or negative\nequivalent to 0 or 1; whereas, in multi-class problems, there are\
    \ more than two classes\nunder consideration. A multi-class problem means that\
    \ a given instance belongs to one of\nSensors 2021, 21, 6910\n5 of 34\nthe multiple\
    \ possible categories. Diversely, a supervised regression problem [28] consists\n\
    of ﬁnding a function that can predict, for a given example, a real value in R.\n\
    The third learning approach is reinforcement learning [29]. In this case, the\
    \ focus is\non developing a learning agent able to observe the environment and\
    \ obtain some input\nfrom it. Then, the agent makes an action and it changes to\
    \ a new environment, receiving an\nevaluation value (award or penalty) related\
    \ to the action made. Unlike the unsupervised\nlearning approach, the agent receives\
    \ guidance from an external evaluation. Moreover,\ndifferent to supervised learning,\
    \ in reinforcement learning, the agent is provided with an\nevaluation value regarding\
    \ the action made and not with a clear speciﬁcation about the\ncorrespondence\
    \ between input and output data. Relevant approaches within reinforcement\nlearning\
    \ are value-based [30], policy-based [31], and model-based [32].\nLastly, it is\
    \ important to note that Artiﬁcial Neural Networks are not considered within\n\
    this family of methods. We will treat them as a separate class of methods because\
    \ of their\nimportant role in CI.\n2.2.2. Artiﬁcial Neural Networks and Deep Learning\n\
    Artiﬁcial Neural Networks (ANNs) are computing systems with an inner structure\n\
    that is based on a set of connected units, named neurons, as they are inspired\
    \ by a biological\nbrain. Just as is the case for animals, wherein two neurons\
    \ are connected by means of a link\n(synapses), the neurons of an ANN are connected\
    \ through edges that transmit signals from\none artiﬁcial neuron to another. The\
    \ signals transferred between neurons are represented by\nreal numbers, and the\
    \ output of each neural unit is computed by some non-linear function\nof the sum\
    \ of its inputs.\nEvery edge that connects two neurons (usually) has a weight\
    \ that is adjusted as the\nlearning process of the ANN is underway. The role of\
    \ such edges is to increase or decrease\nthe strength of the signal at the connection\
    \ of two neurons. Additionally, neural units are\naggregated into layers, and\
    \ they may carry out diverse transformations on the inputs that\nthey receive.\
    \ Thus, the purpose of ANNs is to process input data from the ﬁrst layer (input\n\
    layer) to the last layer (output layer), while approximating linear or non-linear\
    \ functions\nthat are generally unknown. The collection of neuron units arranged\
    \ in layers, edges, and\nweights forms a network topology that is usually called\
    \ an architecture (Figure 1). ANNs\nhave evolved into a broad family of architectures\
    \ that depend on the speciﬁc application\ndomain. The feed-forward neural network\
    \ is a type of classical architecture. In this network,\nthe input data moves\
    \ from the input layer directly through any hidden layers (intermediate\nlayers\
    \ located in-between the input and output layers) to the output layer.\nFigure\
    \ 1. Basic architecture of an ANN. It is composed of edges and neural units arranged\
    \ using\nan input layer (blue neural units), a hidden layer (white neural units),\
    \ and an output layer (yellow\nneural units).\nBecause of their ability to reproduce\
    \ and model nonlinear processes, ANNs have been\napplied in diverse supervised\
    \ learning, unsupervised learning, and reinforcement learning\nproblems. Application\
    \ areas may include time series forecasting, pattern recognition, signal\nclassiﬁcation,\
    \ among others. However, as more complex problems (e.g., image processing,\nspeech\
    \ recognition) have arisen in the last few years, further development in the ANN\n\
    Sensors 2021, 21, 6910\n6 of 34\narea is required to deal with resulting challenges.\
    \ The common denominator of these ﬁelds\nis the high complexity and enormous volumes\
    \ of data generated and managed in them.\nAs a result, a subset of ANNs, named\
    \ Deep Learning (DL) [33] has emerged to cope with\nthis complexity.\nA deep neural\
    \ network is a classical ANN composed of multiple layers between the\ninput and\
    \ output layers. Theoretically, DL architectures allow any non-linear function\
    \ to be\napproximated [34]. Therefore, this approach has become dominant in multiple\
    \ application\nﬁelds like computer vision [35] and natural language processing\
    \ [36]. Between the most\ncommon deep neural networks, we can ﬁnd recurrent neural\
    \ networks, convolutional\nneural networks, and long short-term memory neural\
    \ networks [37]. The main strength\nof this approach lies in its ability to learn\
    \ automatically from raw data and to learn more\ncomplex representations of data\
    \ than other Statistical Learning methods [38]. The latter\ncould be valuable\
    \ for research areas characterized by having complex data, which can\nbarely be\
    \ analyzed by human reasoning and classical data preprocessing approaches. The\n\
    other relevant characteristics of Deep neural architectures come from their architectural\n\
    ﬂexibility that enables data fusion, as they allow different data formats to merge,\
    \ combining\ndata from multiple sources and therefore extracting more valuable\
    \ knowledge. In other\nwords, DL facilitates the use of multi-dimensional data,\
    \ which is quite difﬁcult to achieve\nwith classical ANNs and ML methods.\n2.2.3.\
    \ CI-Based Optimization Methods\nThe growing computational capabilities and the\
    \ fact that some problems of great\npractical value (e.g., scheduling, routing,\
    \ facility location) can not be solved optimally\n(because they are NP-Hard problems)\
    \ has led to increased use of approximating algorithms.\nMeta-heuristics are a\
    \ suitable approach in situations where exact algorithms can not give an\nanswer\
    \ using a reasonable amount of time or memory [39]. These methods arose with the\n\
    idea of extracting the best parts of different successful heuristics to create\
    \ generic methods\nthat could be applied to a more signiﬁcant number of problems\
    \ and contexts. Due to the\nwide variety of meta-heuristics, different classiﬁcation\
    \ categories have been proposed [40].\nWe group these techniques according to\
    \ the next categories: Evolutionary Computation\n(EC) [41], Swarm Intelligence\
    \ (SI) [42], and other meta-heuristics (local search-based meta-\nheuristics [43]).\
    \ These groups are presented with more detail as follows.\nEC is a group of meta-heuristic\
    \ optimization algorithms inspired by biological evolu-\ntion. Within this family\
    \ of methods, they operate from an initial set of candidate solutions\n(initial\
    \ generation), which are updated in an iterative way. Then, each new generation\n\
    is generated by randomly removing candidate solutions according to predeﬁned criteria\n\
    and by inserting random changes. After a set of iterations, the population of\
    \ solutions\nwill gradually evolve to increase its competitiveness, framed by\
    \ a ﬁtness function that is\ndetermined by each algorithm. Following the described\
    \ procedure, EC algorithms can\nproduce highly optimized solutions for complex\
    \ real-world optimization problems like the\ntraveling salesman problem [44].\
    \ Some well-known examples of EC meta-heuristics are\nGenetic algorithms [45]\
    \ and Differential evolution [46], among others.\nThe second biggest category\
    \ of meta-heuristics is the category of Swarm Intelligence\n(SI). This approach\
    \ consists of a population of agents interacting with each other and their\nenvironment.\
    \ The agents follow a set of basic rules, and although there is no centralized\n\
    control structure guiding the agents on how they should behave, the interaction\
    \ between\nthem leads to the emergence of intelligent global behavior. SI is inspired\
    \ by biological\nsystems such as ant and bee colonies and is commonly used to\
    \ solve combinatorial and\ncontinuous optimization problems (e.g., shortest path\
    \ problems for delivery or optimization\nof unknown parameters in time series).\
    \ Two of the most well-known SI algorithms are Ant\nColony [47], and Particle\
    \ Swarm [48] methods.\nSensors 2021, 21, 6910\n7 of 34\nThe third category groups\
    \ together the rest of the meta-heuristics, which are outside\nof the domains\
    \ of EC and SI but are still relevant for solving optimization problems. For\n\
    example, this is the case for local search-based meta-heuristics that are focused\
    \ on ﬁnding\na solution that maximizes a criterion among a set of candidate solutions.\
    \ These meta-\nheuristics move from one solution to another in the search space\
    \ of candidate solutions\nby applying local changes until an optimal solution\
    \ is found or a time budget is reached.\nWithin this category of meta-heuristics,\
    \ representative methods include Tabu Search [49],\nand Greedy Randomized Adaptive\
    \ Search Procedure (also known as GRASP) [50].\n2.2.4. Fuzzy Systems\nClassical\
    \ logic is based on the crisp set concept, where a group of objects is considered\n\
    to be a collection. In this sense, a crisp subset can be deﬁned from a broader\
    \ set where its\nelements belong to the subset according to some particular condition.\
    \ Thus, we can deﬁne\nthe concept of membership wherein a value of one is assigned\
    \ to the elements of the subset\nand a value of zero to the elements that do not\
    \ belong to that subset. Unlike crisp sets, a\nfuzzy set allows partial belonging\
    \ to a set through a degree of membership, denoted by\na function µ, that maps\
    \ all the elements in the set to a value in the real interval between\nzero and\
    \ one [51]. Then, as in the crisp case, a value of zero means that the element\
    \ under\nconsideration does not belong to the set, and a value of one represents\
    \ that the element\nbelongs entirely to the set. However, unlike in the crisp\
    \ case, a value greater than zero\nand lower than one represents a partial membership\
    \ to the subset. Consequently, the set’s\nmembership function is the relationship\
    \ between the elements of the set and their degree\nof belonging.\nHaving introduced\
    \ the basic notions of fuzzy sets, the next key concept is fuzzy\ninference systems.\
    \ A fuzzy system is a repository of fuzzy expert knowledge that can\nreason the\
    \ data in vague terms instead of precise Boolean logic. This expert knowledge\
    \ is a\ncollection of fuzzy membership functions and a set of fuzzy rules that\
    \ is formed as follows:\nIF (conditions are fulﬁlled) THEN (consequences are inferred).\
    \ The basic conﬁguration of a\nfuzzy system is shown in Figure 2, and it can be\
    \ divided into four main parts: a fuzziﬁer, a\nknowledge base, an inference engine,\
    \ and a defuzziﬁer [52].\nFigure 2. Structure and components of a Fuzzy System.\n\
    The Fuzziﬁer maps a real crisp input to a fuzzy function and, therefore, determines\n\
    the degree of membership of the input to a vague concept (categories using the\
    \ fuzzy sets).\nThe values of the input variables are mapped to the range of values\
    \ of the corresponding\nuniverse of discourse. The range and resolution of input-fuzzy\
    \ sets and their effect on the\nfuzziﬁcation process are considered to be factors\
    \ that affect the overall performance of\nthe system.\nThe knowledge base comprises\
    \ the knowledge of the application domain. It can be\nsplit into a database of\
    \ deﬁnitions used to express linguistic control rules in the controller\nand a\
    \ rule base that describes the knowledge held by the experts in the domain. Intuitively,\n\
    the knowledge base is the core element of a fuzzy controller as it will contain\
    \ all the\ninformation necessary to accomplish its execution tasks.\nThe Inference\
    \ Engine provides the decision-making logic of the controller. It deduces\nthe\
    \ fuzzy control actions by employing fuzzy implications and fuzzy rules of inference.\
    \ In\nmany aspects, it can be viewed as an emulation of human decision-making.\
    \ Finally, the\nDefuzziﬁcation process converts fuzzy control values into crisp\
    \ quantities; that is, it links\na single point to a fuzzy set, given that the\
    \ point belongs to the support of the fuzzy set.\nSensors 2021, 21, 6910\n8 of\
    \ 34\nThere are many de-fuzziﬁcation techniques, the most famous being the center-of-area\
    \ or\ncenter-of-gravity.\n2.2.5. Probabilistic Reasoning\nProbabilistic Reasoning\
    \ states that users can infer plausible models to explain input\ndata. Thus, a\
    \ model can predict an output based on new, unknown input data, which allows\n\
    decisions to be made regarding future actions. In this context of predictions,\
    \ uncertainty\nplays a relevant role for three reasons [53]. First, uncertainty\
    \ can be introduced from noisy\ninput data into the training process of a model.\
    \ Secondly, input data can be consistent with\ndifferent models, and therefore\
    \ which model is more appropriate for the data at hand is\nuncertain. And third,\
    \ a model can have diverse parameters (e.g., the coefﬁcients of linear\nregression)\
    \ and/or different inner structures (e.g., the architecture of ANNs); hence, there\n\
    is uncertainty regarding the speciﬁcations for a concrete model [54].\nFrom a\
    \ general perspective, the basic foundations of Probabilistic Reasoning are\n\
    condensed in the Bayesian learning paradigm [54]. Primarily, probability distributions\
    \ are\nconsidered to represent all uncertainties that can interfere in a model\
    \ (e.g., noise in the input\ndata, the model’s parameters). Then, the basic rules\
    \ of probability theory are considered\nto infer unobserved quantities given the\
    \ observed data. Thus, the process of learning\nfrom data occurs through the transformation\
    \ of the prior probability distributions (deﬁned\nbefore having the input data)\
    \ into posterior distributions (after observing the data).\nThe assumptions mentioned\
    \ above are supported by two of the basic rules of prob-\nability theory. They\
    \ are the sum rule and the product rule, which can be expressed as\nP(x) = ∑y∈Y\
    \ P(x, y) and P(x, y) = P(x)P(y | x), respectively. Here x and y correspond to\n\
    observed or uncertain quantities, taking values in sets X and Y. P(x) is the probability\
    \ of x\nregarding the frequency of observing a particular value. P(x, y) is the\
    \ joint probability of\nobserving x and y, and P(y|x) is the probability of y\
    \ conditioned on observing a concrete x\nvalue. Keeping these two probability\
    \ theory rules in mind, x and y can be integrated into\nthe Bayes’ theorem to\
    \ describe the probability of an event based on the prior knowledge\nof conditions\
    \ that might be related to the event. In the context of Statistical Learning,\
    \ this\ntheorem is stated as P(θ | D, m) = P(D|θ,m)P(θ|m)\nP(D|m)\n. Here, P(D\
    \ | θ, m) is the likelihood of\nparameters θ in model m, P(θ | m) is the prior\
    \ probability of θ, and P(θ | D, m) is the\nposterior probability of θ given data\
    \ x.\nThus, learning is the transformation of prior knowledge or assumptions regarding\
    \ the\nparameters P(θ | m), through data D, into the posterior knowledge about\
    \ the parameters\nP(θ | D, m). Such a posterior distribution then becomes prior\
    \ knowledge for future data\npredictions. Within this framework, the most typical\
    \ methods used over the last few years\nwere Bayesian networks [55]. Other representative\
    \ techniques are Markov networks and\nRandom Fields [56].\n2.2.6. Summary of CI-Based\
    \ Approaches\nHaving presented the families of CI methods usually considered in\
    \ FSC, this section\nintroduces a summary of the methods presented above and their\
    \ strengths and weak-\nnesses (Table 1). First of all, we would like to point\
    \ out that this list of advantages and\ndisadvantages does not refer to a comparison\
    \ between the different categories of methods\nconsidered in this paper, as they\
    \ are often used to solve different types of problems and\ntherefore the comparison\
    \ is not straightforward. Instead, these strengths and weaknesses\nrefer to a\
    \ comparison between CI-based approaches versus non CI-based approaches that\n\
    are used to solve similar categories of problems.\nSensors 2021, 21, 6910\n9 of\
    \ 34\nTable 1. Summary of CI-based approaches reviewed.\nCI Approach\nStrengths\n\
    Weaknesses\nCI-based statistical\nlearning methods\n- Expert knowledge of the\n\
    problem domain where they are applied is not required.\n- No assumptions about\
    \ the characteristics\nof the data available (non-parametric method) are made.\n\
    - They can work properly with medium and\nlarge sized datasets.\n- Expert Statistical\
    \ Learning knowledge\nis required.\n- Their performance is highly dependent\n\
    on the quality and availability of data.\n- They have problems ﬁnding meaningful\n\
    representations of the data when the\ncomplexity of hidden patterns of the data\
    \ is\nvery high (e.g., computer vision).\nArtiﬁcial neural networks\nand Deep\
    \ learning\n- Expert knowledge of the problem is not required\ndomain where they\
    \ are applied.\n- No assumptions about the characteristics of\nthe data available\
    \ (non-parametric method).\n- They can extract complex and non-linear\npatterns\
    \ embedded in data.\n- Work directly on raw data without almost any\nneed for\
    \ feature extraction.\n- Expert Statistical Learning knowledge\nis required.\n\
    - High volumes of data are required.\n- High computational capabilities\nare needed.\n\
    CI-based optimization\nmethods\n- Satisfactory solutions for complex\nproblems.\n\
    - They can work in scenarios with\ntime and computational capabilities\ndeﬁned\
    \ by the user.\n- They are approximate methods,\nso an optimal solution is not\
    \ guaranteed.\n- Expert knowledge is required for\nthe design of the methods.\n\
    Fuzzy systems\n- The methods are capable of modeling\nimpressions and vagueness\
    \ associated\nwith the data of the problem domain.\n- The results are easily interpretable.\n\
    - Expert knowledge associated with\nthe problem domain is required.\n- Not able\
    \ to deal effectively with\nuncertainty associated with the\ndata available.\n\
    Probabilistic Reasoning\n- Able to deal with high levels of\nuncertainty in the\
    \ data available.\n- Unable to deal with complex problems\ncharacterized by data\
    \ representing\ndifferent variables of interest.\n- Difﬁculties in modeling ambiguities\n\
    and inaccuracies in the input data.\n2.3. Motivation\nThe objectives of this section\
    \ are two-fold. First, it reviews the related work at the\npoint where FSC and\
    \ CI meet, in order to identify previous contributions regarding the\nclassiﬁcation\
    \ of FSC problems, and the CI methods used to solve them. Having already\nintroduced\
    \ these previous studies, the ﬁnal part of this section is devoted to presenting\
    \ the\nmain novelty and contributions of this paper.\nIn 2012, Grifﬁs et al. [11]\
    \ focused on the distribution stage of an FSC to present an\noverview of CI-based\
    \ optimization methods that can play a relevant role for problems like\nvehicle\
    \ routing, supply chain risks, and disruptions. The authors emphasized how meta-\n\
    heuristic techniques provide near-optimal solutions to logistics problems. Following\
    \ this\nline of research, in 2016, Wari and Zhu [12] presented an updated survey\
    \ on applying meta-\nheuristics to solve optimization problems in the processing\
    \ (e.g., fermentation, thermal\ndrying, and distillation) and distribution (e.g.,\
    \ warehousing location, production planning,\nand scheduling) stages of an FSC.\
    \ More recently, in 2017, Kamilaris et al. [7] reviewed\narticles on smart farming\
    \ to show how digital technologies can enhance the circularity of\nthe FSC at\
    \ the production stage. They highlighted the problems that can be approached by\n\
    utilizing CI-based Statistical Learning, ANNs, and DL methods.\nComplementary\
    \ to the advances reported by Kamilaris et al. [7], in 2020, Sharma et al. [15]\n\
    and Misra et al. [2] carried out a bibliometric analysis and a review, respectively,\
    \ of CI-\nbased Statistical Learning applications over the whole FSC. Based on\
    \ their results, the\nauthors designed a series of recommendations to design and\
    \ deploy Statistical Learning-\nSensors 2021, 21, 6910\n10 of 34\nbased solutions\
    \ for data-driven decision-making processes in the FSC. In the same year,\nCamarena\
    \ [10] made a critical analysis of what can be done with Artiﬁcial Intelligence,\n\
    without emphasizing any single method in particular, for the transition to a sustainable\n\
    FSC. Lastly, the studies of Liakos et al. [6] and Saiz-Rubio and Rovira-Mas [9],\
    \ in 2018 and\n2020, respectively, presented comprehensive reviews of research\
    \ directed at the application\nof ML in the FSC production stage. The authors\
    \ surveyed how ML can help farmers make\nmore informed decisions on the management\
    \ of agriculture and livestock systems.\nFigure 3 presents a synthesis of the\
    \ studies described above and highlights how this\narticle complements and extends\
    \ the existing literature. Each cited paper is represented\nby a grey circle,\
    \ which can have one or two inner circles (green and blue). Green circles\nrepresent\
    \ FSC stages covered by a study, while blue circles depict the CI approaches\n\
    considered within it. The size of the circle is determined by the number of FSC\
    \ stages and\nCI techniques considered in each article. Thus, a green circle would\
    \ have the biggest size if\nthe paper to which it belongs addresses the four basic\
    \ stages of the FSC. The same logic is\nused for the blue circles: the more families\
    \ of methods a paper considers, the bigger the\ncircle’s size would be. Furthermore,\
    \ we can ﬁnd our research article in the center of the\nﬁgure in the violet circle.\n\
    Figure 3. Motivations and state-of-the-art concepts at the point where FSC and\
    \ CI meet.\nAccording to Figure 3 we can see that there are no research articles\
    \ that present a\ncomprehensive taxonomy at the point where FSC problems and CI\
    \ converge. This means\nthat there are no research studies that consider the problems\
    \ of the four basic FSC stages,\nnor the diversity of the CI methods that can\
    \ be applied to solve them. Instead, most of the\npapers focus on one or two FSC\
    \ stages, and they tend to review the role a unique CI family\nof methods has\
    \ over them. Therefore, we propose a new taxonomy that embraces the\ncomplete\
    \ FSC and the ﬁve families of CI methods most commonly used in the FSC stages.\n\
    Sensors 2021, 21, 6910\n11 of 34\nFurthermore, our proposal extends the previous\
    \ classiﬁcation efforts by adding a new\ncategorization attribute, which indicates\
    \ the type of FSC problem being addressed from\na CI perspective. In addition\
    \ to increasing the classiﬁcation capacity of our taxonomy,\nthis attribute allows\
    \ us to establish a novel mapping between the FSC problems and the\ntypologies\
    \ of CI problems that can be used to approach the former ones. By doing so,\n\
    we contribute to facilitating the choice of the most convenient family of CI methods\
    \ to\nuse depending on the FSC problem at hand. This represents a valuable and\
    \ novel source\nof information for FSC researchers and practitioners who aim to\
    \ incorporate CI-based\nsolutions into their FSC applications.\n3. A Taxonomy\
    \ of CI-Based Problems in the Food Supply Chain\nThis section introduces details\
    \ of the taxonomy proposed. First, Section 3.1 presents\nthe methodology followed\
    \ to design the taxonomy. Then, Sections 3.3 and 3.4 show the\ntaxonomy’s structure\
    \ and describe its parts. Finally, Section 3.5 gives an overview of the\ncategorization\
    \ of FSC problems, from a CI perspective, using the taxonomy.\n3.1. Methodology\
    \ for the Design of the Taxonomy\nThis section introduces the methodology followed\
    \ to build the taxonomy proposed.\nFirst, we note that this research paper does\
    \ not aim to carry out a systematic literature\nreview or survey. Instead, our\
    \ scope lies in searching and reviewing the representative\nliterature to propose\
    \ a taxonomy that describes and categorizes FSC problems and how\nthey are solved\
    \ from a CI-based perspective. As such, the taxonomy proposed does not seek\n\
    to identify all details associated with the FSC problems to maintain its comprehensibility\n\
    and size. It is designed according to core characteristics that may alter the\
    \ complexity and\nmodeling of FSC problems from the CI perspective.\nWith these\
    \ ideas in mind, Figure 4 shows the methodology followed to build the\ntaxonomy\
    \ introduced in this research paper. This methodology follows a structure-based\n\
    literature review that includes the steps depicted in Figure 4. The ﬁrst step\
    \ is named Scope\n& Research Question, which aims to limit the areas of knowledge\
    \ to be consulted; that is,\nthe point where FSC and CI converge. For this step,\
    \ the research questions that guided\nour search were: “What are the most common\
    \ FSC problems reported in the literature?”,\n“What are the CI methods typically\
    \ used to approach these problems?”, “How can FSC\nbe categorized from a CI perspective?”,\
    \ and “Is there any taxonomy to categorize FSC\nproblems considering a CI approach?”.\n\
    Figure 4. Steps followed to build the proposed taxonomy.\nThe following step deﬁned\
    \ the search set-up. We deﬁne the keywords, periods,\nonline resources, and criteria\
    \ to search and review the scientiﬁc literature. The keywords\nconsidered were:\
    \ Food Supply Chain(s), agrifood, ﬁsh farming, agriculture, livestock,\nSensors\
    \ 2021, 21, 6910\n12 of 34\nproduction, processing, distribution, logistics, retail,\
    \ computational intelligence machine\nlearning, deep learning, meta-heuristics,\
    \ fuzzy systems, and probabilistic methods. The\nperiod was between 2012 and 2020,\
    \ and the bibliographic resources searched were the\nWeb of Science, Scopus, and\
    \ Google Scholar. Finally, the main criteria for selecting and\nreviewing the\
    \ literature was that they be review or survey papers. The latter is based on\n\
    the fact that this type of paper offers a general and consolidated overview of\
    \ the state-of-\nthe-art concerning CI-based FSC problems reported in the literature.\
    \ Moreover, these types\nof papers allowed us to know if any taxonomy was previously\
    \ proposed to classify the\nFSC problems.\nThe next stage in Figure 4 is search,\
    \ select, and review. Using the search set-up\nmentioned above, we identiﬁed the\
    \ survey and review papers introduced in the Motivation\nSection 2.3. Next, we\
    \ analyzed the FSC problems considered in these papers, the FSC stages\nwhere\
    \ the problems were located, and the families of CI methods usually considered\
    \ to\napproach these FSC problems.\nBased on the ﬁndings mentioned above, we moved\
    \ to the ﬁnal step of the methodology\nshown in Figure 4. The objective was to\
    \ design a new taxonomy that embraces the\ncomplete FSC and the ﬁve families of\
    \ CI methods most commonly used in the FSC stages.\nThis taxonomy also intends\
    \ to expand the previous classiﬁcation efforts by adding a\nnew categorization\
    \ attribute, indicating the type of FSC problem addressed from a CI\nperspective.\
    \ Thus, we characterized how the FSC problems identiﬁed in the previous\nstep\
    \ can be modeled from a CI perspective. To do so, we considered the typologies\n\
    of problems in the CI domain (problem-solving, uncertain knowledge and reasoning,\n\
    knowledge discovery and function approximation, and communication and perception)\n\
    that better suited the families of CI methods considered in the studies reviewed.\n\
    Having built the taxonomy, we checked its robustness and ability to discriminate\n\
    papers that approached different FSC problems. To accomplish this aim, we extracted\n\
    relevant references cited by the review and survey papers previously identiﬁed,\
    \ as well as\nthe recent literature, and mapped them into the proposed taxonomy.\
    \ This is shown in the\nfollowing section, where the taxonomy is introduced, to\
    \ validate its classiﬁcation power.\n3.2. The Taxonomy Overview\nThe taxonomy\
    \ aims, ﬁrstly, to extend the previous classiﬁcation efforts on FSC prob-\nlems\
    \ to cover all stages of Agrifood supply chains; and, secondly, to add a new level\
    \ of\ncategorization that allows typologies of FSC problems to be mapped to typologies\
    \ of CI\nproblems. We can see the structure of the proposed taxonomy in Figure\
    \ 5. As we can see,\nin level one, the taxonomy includes the four basic stages\
    \ of an FSC that were introduced in\nSection 2.2.1; that is, production, processing,\
    \ distribution, and retail. Then, in level two, it\ncontains the different categories\
    \ of FSC problems that we can ﬁnd in each stage. It is impor-\ntant to clarify\
    \ that although these FSC problems have been reported previously, in related\n\
    studies [2,6–12], to the best of our knowledge, this is the ﬁrst time that their\
    \ deﬁnitions are\nuniﬁed and consolidated in one taxonomy. Lastly, in level three,\
    \ the taxonomy introduces\nthe typologies of problems from a CI perspective. Speciﬁcally,\
    \ this level seeks to classify\nthe FSC problems depending on how they can be\
    \ modeled and solved by CI methods.\nHaving presented the structure of the taxonomy,\
    \ the following Section 3.3 details\nthe FSC problems identiﬁed for the production,\
    \ processing, distribution, and retail stages.\nThose problems represent the second\
    \ level of the taxonomy. They are formally deﬁned\nfrom a purely FSC perspective,\
    \ and we clearly state the key objective of each problem\nwithin the particular\
    \ chain stage where it is identiﬁed. Afterwards, Section 3.4 presents\nthe third\
    \ level of the taxonomy that contains the attributes to categorize the FSC problems\n\
    of level 2 under a CI approach. These attributes correspond to the four typologies\
    \ of CI\nproblems that are more commonly used in the literature to address FSC\
    \ problems. Finally,\nSection 3.5 introduces the classiﬁcation and mapping of\
    \ FSC problems according to how\nthey can be modeled by CI typologies.\nSensors\
    \ 2021, 21, 6910\n13 of 34\nFigure 5. A taxonomy of computational intelligence\
    \ in an FSC.\n3.3. Level 2: Identiﬁcation and Deﬁnition of Food Supply Chain Problems\n\
    In this section, we present the FSC problems identiﬁed for each of the FSC stages\n\
    shown in Figure 5, which corresponds to the second level of our taxonomy. These\
    \ problems\nare formally deﬁned in more detail below.\n3.3.1. Production Problems\n\
    The FSC production stage can be split into three main production systems: ﬁsh\n\
    farming, agriculture, and livestock. These three production systems and their\
    \ associated\nproblems can be observed in Figure 6 and they are deﬁned below.\n\
    Figure 6. FSC problems in the production stage.\nFish farming (also known as pisciculture)\
    \ is the production system concerned with\nraising ﬁsh in closed environments,\
    \ such as ponds or tanks, for human consumption. Nowa-\ndays nearly half of the\
    \ ﬁsh consumed in the word are raised in artiﬁcial environments [57].\nFish farming\
    \ production has a high degree of complexity as it involves interrelated physical\n\
    (e.g., water and nutrient supply), chemical (e.g., pH, oxygen), and environmental\
    \ (e.g.,\nwaste generated) elements. Therefore, the management of this process\
    \ requires advanced\nsensing, control, and communication technologies as well\
    \ as expert knowledge to make\nefﬁcient and sustainable decisions, and maximize\
    \ the productivity. Within this context, the\nSensors 2021, 21, 6910\n14 of 34\n\
    most typical CI-based processes reported in the literature are ﬁsh weight estimation\
    \ [58],\nproduction estimation, and optimization [59]. Their deﬁnitions are presented\
    \ below.\n•\nFish weight estimation: This process estimates ﬁsh weight considering\
    \ morphological\nfeatures (e.g., length, width, and mass).\n•\nProduction estimation\
    \ and optimization: This process is centered on the optimiza-\ntion of ﬁsh production\
    \ and forecasting of seasonal demand to adjust the production.\nTo accomplish\
    \ such aims, the optimization of production is carried out by monitoring\ncrucial\
    \ elements of ﬁsh ponds, like water oxygen levels, nutrients, and food supply,\n\
    which inﬂuence the growth of ﬁsh. Meanwhile, historical records of seasonal de-\n\
    mand are stored and continuously analyzed to determine the most suitable levels\
    \ of\nproduction depending on the year and season.\nThe following production system\
    \ considered in this study is agriculture, in particular,\nhorticulture. Horticulture\
    \ is the greenhouse industry dedicated to plant cultivation and\nprocessing of\
    \ different types of crops for food and commercial consumption (e.g., ﬂowers,\n\
    fruits and nuts, vegetables and herbs). The main challenges of these production\
    \ systems\nare to improve plant growth, yields, quality, nutritional value, and\
    \ resistance to insects,\ndiseases, and environmental stress.\nIn order to achieve\
    \ these improvements, different processes are managed to try and\nmaintain a balance\
    \ between efﬁciency, productivity, and sustainability, such as monitoring\nand\
    \ controlling indoor-outdoor climate conditions, crop management, and production\
    \ fore-\ncasting, among others. They are commonly approached in the specialized\
    \ literature [6,9,60]\nin open-ﬁeld agriculture and intensive horticulture. Within\
    \ the most representative pro-\ncesses, we ﬁnd the crop yield and harvest forecasting\
    \ [60–62], crop protection [63,64],\nweather prediction and irrigation management\
    \ [65,66], and site-speciﬁc nutrient manage-\nment [67,68]. These processes, which\
    \ are shown in Figure 6, are deﬁned as follows.\n•\nCrop yield and harvesting\
    \ prediction: This problem is focused on yield estimation\nto match crop supply\
    \ with demand and on crop management to increase productivity.\n•\nCrop protection:\
    \ This is based on the identiﬁcation and diagnosis of biotic (infesta-\ntions,\
    \ diseases, and weeds) and abiotic (nutrients, water deﬁciency) stress factors\
    \ that\naffect crop productivity.\n•\nWeather prediction and irrigation management:\
    \ This problem is mainly concerned\nwith weather forecasting for the optimal use\
    \ of water, which enables the design and\ndeployment of crop irrigation scheduling\
    \ and planning.\n•\nSite-speciﬁc nutrient management: This is based on the management\
    \ of soil quality\nto determine which nutrients need to be supplied in order to\
    \ maintain the chemical\ncharacteristics required for the crop under consideration.\n\
    Lastly, the third production system considered for the production stage is livestock.\n\
    This production system is dedicated to the growth and management of domestic animals\n\
    (e.g., cattle, sheep, and goats) raised in agricultural settings to generate food\
    \ products like\nmeat, eggs, or milk, among others. Livestock can be carried out\
    \ through either extensive or\nintensive systems. Extensive systems involve animals\
    \ roaming grasslands (usually under\nthe supervision of a herdsman). Diversely,\
    \ intensive livestock is located in closed infras-\ntructures and is equipped\
    \ with ICT technology, which enables animals to be monitored\nin real-time. Within\
    \ these production systems the most typical problems we come across\nare grassland\
    \ monitoring [69], animal welfare [70], animal behavior tracking [71], and\nlivestock\
    \ production prediction and optimization [72,73], as shown in Figure 6. The formal\n\
    deﬁnitions of these problems from an FSC perspective are listed below.\n•\nGrassland\
    \ monitoring: This problem is related to the accurate identiﬁcation of grass-\n\
    land inventories in order to discriminate between the most suitable types for\
    \ live-\nstock purposes.\n•\nAnimal welfare: This is focused on the pattern classiﬁcation\
    \ of ingestive behavior in\ngrazing animals for studies of animal nutrition, growth,\
    \ and health.\nSensors 2021, 21, 6910\n15 of 34\n•\nAnimal behavior tracking:\
    \ This is based on the use of behavior analysis to detect\nearly signs of health\
    \ issues and promote early intervention.\n•\nLivestock production: This problem\
    \ is centered on predictions and estimations of\nfarming parameters to optimize\
    \ the economic-energy efﬁciency and sustainability of\nproduction systems.\n3.3.2.\
    \ Processing Problems\nOnce the raw materials of food products have been grown,\
    \ they are delivered to the\nnext step of the FSC, or ‘processing’. Different\
    \ industrial processes (e.g., washing, disinfect-\ning, packaging) are carried\
    \ out in this stage to transform the raw output of production into\nedible food\
    \ products. Depending on the production system under consideration and the\nfood\
    \ products obtained from them, diverse industrial processes can be followed to\
    \ obtain\nthe goods that move on to the distribution stage. However, in spite\
    \ of such production\nparticularities, we have identiﬁed a set of common problems\
    \ that could occur in the three\nproduction systems presented in the section above.\
    \ These problems are shown in Figure 7\nand they are: demand prediction [74],\
    \ production planning for distribution [75], prediction\nof post-harvest losses\
    \ [76], and manufacturing industry processes, such as cooking, drying,\nand others\
    \ [77].\nFigure 7. FSC problems in the processing stage.\n•\nDemand prediction:\
    \ This problem in concerneed with the demand prediction of food\nrequirements\
    \ to avoid overstocking, overproduction, and over-utilization of resources.\n\
    The key idea is to estimate the quantity of food products that will be sold to\
    \ deﬁne\nhow much raw material needs to be processed.\n•\nProduction planning\
    \ for distribution: This is centered on production planning to\nmatch distribution\
    \ requirements. This problem is mostly determined by the sale\nvolumes that a\
    \ particular food product is expected to have.\n•\nPrediction of post-harvest\
    \ losses: This is focused on making estimations of food\nlosses associated with\
    \ the processing procedures carried out after harvesting raw\nmaterials coming\
    \ from the production stage.\n•\nFood manufacturing industry: This is associated\
    \ with the optimization of the pro-\ncessing technologies required to transform\
    \ raw foods into edible food (e.g., thermal,\ndrying, contact cooking, microwave\
    \ heating, etc.). These processes are performed\nusing industrial machinery.\n\
    3.3.3. Distribution Problems\nIn the third step of the food supply chain, food\
    \ products ready for human consumption\nare received from the processing stage\
    \ to be delivered to end-consumers. Speciﬁcally,\nﬁnished products arrive at warehouses,\
    \ and from there, the shipment department is\nin charge of deﬁning the most suitable\
    \ strategy to deliver products to end-consumers.\nThe essential purpose is to\
    \ distribute food products on time by the date speciﬁed in the\nretail stage.\n\
    Sensors 2021, 21, 6910\n16 of 34\nFor this particular stage of the FSC, the most\
    \ common problems reported in the spe-\ncialized literature are shown in Figure\
    \ 8 and deﬁned below. These problems include vehicle\nrouting and ﬂeet management\
    \ [78,79], storage location assignment [80,81], prediction of\nsupply chain risks\
    \ and disruptions [82,83], shelf life prediction and maturity level [84–86],\n\
    demand forecasting [87], and last mile delivery [88].\nFigure 8. FSC problems\
    \ in the distribution stage.\n•\nVehicle routing and ﬂeet management: This is\
    \ focused on determining the most\noptimal route for the delivery of food under\
    \ different scenario constraints (e.g., size of\nthe ﬂeet, fuel availability,\
    \ etc.).\n•\nStorage location assignment problem: This problem is concerned with\
    \ deciding the\nmost suitable way to store food products in a set of warehouses\
    \ in order to cope with\ndaily demand operations.\n•\nPrediction of supply chain\
    \ risks and disruptions: This is concerned with the fore-\ncasting of potential\
    \ disruptions in the logistics of food products and their associated\nfood losses.\n\
    •\nShelf life prediction and maturity level: This problem is related to the forecasting\
    \ of\nshelf life based on data sensed during the distribution process.\n•\nDemand\
    \ forecasting: This consists of understanding demand behaviors and forecast-\n\
    ing user demand generated from the retail stage. Thus, it is possible to optimize\
    \ the\ndelivery routes and warehouse locations used during the distribution stage.\n\
    •\nLast mile delivery: This problem is dedicated to the delivery of food products\
    \ using\nthe local road transport network (last mile) of cities.\n3.3.4. Retail\
    \ Problems\nIn the ﬁnal part of the FSC, we ﬁnd the retail stage. At this point,\
    \ food products are\nreceived through the distribution channels, ready for sale.\
    \ This stage encompasses the\nconcept of an ’end-consumer’, which could be supermarkets\
    \ or clients that go to these\nplaces to buy food products. The most common problems\
    \ identiﬁed in the literature for\nthis stage of the supply chain are deﬁned below\
    \ and are also summarized in Figure 9.\nLastly, we characterized the retail stage\
    \ (Figure 5). Retail-related problems commonly\naddressed with CI, in this link\
    \ of the FSC, are diet and nutrition applications [89,90],\nfood consumption and\
    \ food waste [91,92], consumer demand, perception and buying\nbehavior [93,94],\
    \ dynamic discounting based on the sell-by date [95], and day demand\nprediction\
    \ and inventory management [74].\nSensors 2021, 21, 6910\n17 of 34\nFigure 9.\
    \ FSC problems in the retail stage.\n•\nDiet and Nutrition: This is based on estimating\
    \ nutrient values using the classiﬁcation\nof food dishes and dietary assessment.\n\
    •\nFood consumption and food waste: This problem is associated with the identification\n\
    and prediction of food waste based on the buying and storage behavior of end-customers.\n\
    •\nConsumer demand, perception, and buying behavior: This problem is focused on\n\
    determining consumer proﬁles in order to predict buying behaviors and support\
    \ the\nmanagement of shop counters.\n•\nDynamic discounting based on sell-by date:\
    \ This is centered on automated price\nchanges at supermarkets based on the sell-by\
    \ date. The objective is to offer larger\ndiscounts for items with the shortest\
    \ remaining shelf life.\n•\nDaily demand prediction and inventory management:\
    \ This problem consists of\npredicting daily demand to better manage product stocks\
    \ at supermarkets.\n3.4. Level 3: Typologies of CI Problems\nIn this section,\
    \ we introduce the attributes that represent the most typical typologies\nof CI\
    \ modeling approaches used in the FSC literature. The attributes correspond to\
    \ the\nthird level of the taxonomy shown in Figure 5, and they are presented below.\n\
    •\nProblem-solving: This category is related to problems of complex decision-making\n\
    processes that need to be solved, keeping two key objectives in mind: quality\
    \ of the\nsolution and the computational time required to solve it. As a common\
    \ denominator,\nthis attribute categorizes problems that are NP-hard. Thus, this\
    \ class embodies FSC\nproblems for which there is no certainty that the method\
    \ can optimally solve them\nin a polynomial time (time complexity [96]) with respect\
    \ to the input data size. This\ncategory includes, for example, optimization or\
    \ search problems such as the vehicle\nrouting problem in the transportation stage\
    \ of the FSC.\n•\nUncertain knowledge and reasoning: This category corresponds\
    \ to FSC problems\ncharacterized by having partially observable, non-deterministic,\
    \ vague, or imprecise\ndata. In such uncertain scenarios, this attribute represents\
    \ problems that can be\naddressed in two possible ways. First, by using an approach\
    \ that acts based on\nassumptions of uncertain input data in order to give a probabilistic-based\
    \ solution\nto the problem at hand. Or second, by representing and reasoning with\
    \ the partially\navailable information in a manner similar to the way that humans\
    \ express knowledge\nand summarize data. This second approach allows non-exact\
    \ data to be represented\nin linguist terms in order to make decisions within\
    \ certain margins of correctness.\n•\nKnowledge discovery and function approximation:\
    \ This class represents FSC prob-\nlems that are distinguished by having large\
    \ volumes of data, which enable under-\nstanding and useful knowledge to be extracted\
    \ from them. Such knowledge could be\nused to make either predictions of future\
    \ events or discrimination and recognition of\npatterns. These types of problems\
    \ can usually be addressed with methods that can be\ntrained using the available\
    \ data to learn a speciﬁc task.\n•\nCommunication and perception: This category\
    \ consists of FSC problems focused\non the automatic extraction, analysis, and\
    \ understanding of information obtained\nSensors 2021, 21, 6910\n18 of 34\nfrom\
    \ digital images, texts, or voice recordings. It is worth noting that within the\
    \ FSC\ndomain, most problems solved using a communication and perception approach\
    \ are\nfocused on designing and developing autonomous computer vision systems.\
    \ These\nsystems are able to process high-dimensional data to support decision-making;\
    \ from\nobject detection to video tracking and object recognition.\n3.5. Mapping\
    \ Process between Level 2 and Level 3: Classiﬁcation of FSC Problems from a\n\
    CI Perspective\nThis section presents the categorization of FSC problems previously\
    \ identiﬁed in\nSection 3.3 from a CI perspective. Speciﬁcally, every problem\
    \ is categorized according\nto the four typologies of CI problems that we described\
    \ above: problem-solving, uncer-\ntain knowledge and reasoning, knowledge discovery\
    \ and function approximation, and\ncommunication and perception. In addition,\
    \ using relevant work from the recent FSC\nliterature, we show how the taxonomy\
    \ is able to effectively and robustly discriminate these\npapers. Thus, Section\
    \ 3.5.1 is devoted to classifying the FSC problems coming from the\nproduction\
    \ stage. Then, Section 3.5.2 introduces the classiﬁcation of problems deﬁned for\n\
    the processing stage. Lastly, Sections 3.5.3 and 3.5.4 expose the categorization\
    \ of problems\nfor the distribution and retail phases, respectively.\n3.5.1. Classiﬁcation\
    \ of Production Problems\nFigure 10 presents the categorization of production\
    \ problems for the ﬁsh farming\nand livestock cases. The attributes of the taxonomy\
    \ are depicted on the left in Figure 10,\nwhereas the ﬁsh farming (in purple)\
    \ and livestock (in red) problems are found on the right.\nThe problems and attributes\
    \ are connected by gray bars that connect the ways in which a\nspeciﬁc problem\
    \ can be modeled from a CI perspective. Fish weight estimation, grassland\nmonitoring,\
    \ animal welfare, and animal behavior tracking are problems that are classiﬁed\n\
    using the communication and perception attribute. This is justiﬁed due to the\
    \ fact that\nthese problems are usually characterized by having image and video\
    \ records as input\ndata (non-structured data). Having such data implies the use\
    \ of automatic information\nextraction by means of computer vision systems, based\
    \ on DL, which allow extraction of\nhigh-dimensional patterns embedded in image\
    \ and video data [97–103].\nFigure 10. Fish farming and livestock problems classiﬁed\
    \ by the proposed taxonomy.\nThe production estimation and optimization and livestock\
    \ production problems in\nFigure 10 are classiﬁed using the knowledge discovery\
    \ and function approximation and\nuncertain knowledge and reasoning attributes.\
    \ Such categorization is determined by the\ncentral characteristics of these problems,\
    \ which are concerned with the prediction and\noptimization of production values\
    \ using historical data records (structured data) [104,105].\nBesides, production\
    \ forecasting contains uncertainties regarding external factors of the\nproduction\
    \ systems, which encourage the use of probabilistic methods, such as the studies\n\
    carried out by [106,107].\nSensors 2021, 21, 6910\n19 of 34\nFigure 11 shows the\
    \ categorization of agriculture problems. As we can seen, crop\nprotection, which\
    \ usually involves video and image records, is categorized as a com-\nmunication\
    \ and perception problem commonly used in DL methods like convolutional\nand recurrent\
    \ neural networks [108–110]. On the other hand, the remaining agricultural\nproblems\
    \ can be categorized under knowledge discovery and function approximation,\nproblem-solving,\
    \ and uncertain knowledge and reasoning attributes as explained below.\nIn terms\
    \ of knowledge discovery and function approximation, this attribute categorizes\n\
    problems focused on the prediction of greenhouse conditions for the optimal management\n\
    of crop production, nutrients, and irrigation supply. This can be done using supervised\n\
    learning techniques that forecast variables of interest like temperature, water,\
    \ or nitro-\ngen [6,111]. Secondly, the problem-solving attribute categorizes\
    \ the weather prediction and\nirrigation management and the site-speciﬁc management\
    \ problems. These problems can be\ndeﬁned as optimization scenarios in which we\
    \ can ﬁnd concrete values associated with\nweather, irrigation, and nutrients.\
    \ In this case, the most common approach to solving them\nis based on meta-heuristics\
    \ [112–114].\nFinally, the uncertain knowledge and reasoning attributes characterize\
    \ the same prob-\nlems that fall into the knowledge discovery and function approximation\
    \ attribute. The\ndifference lies in the fact that the agriculture problems are\
    \ approached as decision systems\nunder uncertainty. In this case, fuzzy logic\
    \ is the most suitable strategy to accomplish such\nan aim [115–117] Speciﬁcally,\
    \ the fuzzy approach allows us to evaluate whether particular\nactions need to\
    \ be taken according to sensed and predicted conditions coming from agri-\nculture\
    \ systems (e.g., optimal management strategies for the control of temperature\
    \ control\ninside greenhouse systems).\nFigure 11. Agriculture problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.2. Classiﬁcation of Processing Problems\nHaving\
    \ presented the production stage, Figure 12 features the categorization of prob-\n\
    lems in the processing stage. Any of the depicted FSC problems are classiﬁed using\
    \ the\ncommunication and perception attribute, mainly because the type of input\
    \ data they handle\nis not associated with images or video records. In contrast,\
    \ when the aim is to determine\nfuture scenarios based on the available data,\
    \ all problems tend to have historical data as\ntheir input data.\nPrecisely,\
    \ the knowledge discovery and function approximation attribute categorizes\nthe\
    \ prediction of post-harvest losses and demand prediction problems as being super-\n\
    vised learning problems, whose aims are to claasify and forecast the objective\
    \ variable.\nFor instance, we consider research from [8,118] to be within this\
    \ category. Following the\ntaxonomy’s attributes in Figure 12, the problem-solving\
    \ attribute can represent and model\ndemand predictions, the food manufacturing\
    \ industry, and production planning for dis-\ntribution problems. In this scenario,\
    \ they are classiﬁed as being optimization problems,\nwith the objective of optimizing\
    \ procedures related to the problems listed. An example, for\ninstance, could\
    \ be the optimization of industrial manufacturing processes, like heating and\n\
    Sensors 2021, 21, 6910\n20 of 34\ndrying, using meta-heuristic techniques. Examples\
    \ of studies categorized by the taxonomy\nof the previously mentioned approaches\
    \ are found in [119,120].\nLastly, the uncertain knowledge and reasoning attribute\
    \ system also classiﬁes produc-\ntion planning for distribution problems. Probabilistic\
    \ methods tend to be used to approach\nthese kind of problems as production planning\
    \ can incorporate uncertainty coming from\nprocesses that are not directly related\
    \ to the production process, which can cope with\nprobability theory [121]. An\
    \ example of this last situation could be a change in the delivery\ndate due to\
    \ delays attributable to the weather [122].\nFigure 12. Processing problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.3. Classiﬁcation of Distribution Problems\nFigure\
    \ 13 exhibits the classiﬁcation of FSC problems in the distribution stage. Unlike\n\
    the two previous stages (production and processing), the predominant approaches\
    \ here are\nthe ones imposed by the problem-solving and knowledge discovery and\
    \ function approxi-\nmation attributes. The former attribute categorizes vehicle\
    \ routing and ﬂeet management,\nthe storage location assignment problem, and last\
    \ mile delivery problems, as they are\ndevoted to optimizing routing and delivery\
    \ situations. The purpose of these applications\nis to optimize, using meta-heuristics,\
    \ a concrete goal under different constraints; for in-\nstance, ﬂeet size, available\
    \ fuel, and others. Representative studies that fall in this category\nare [123–127].\n\
    The knowledge discovery and function approximation attribute includes prediction\n\
    of chain and disruptions, a shelf life prediction and maturity level, and demand\
    \ forecasting\nproblems. This attribute classiﬁes these problems under a supervised\
    \ learning perspective,\nwhere the aim is to predict expected values, such as\
    \ we can see in research carried out\nin [84,128–131]. For instance, potential\
    \ disruptions to the cold food products chain, or an\nestimation of how much product\
    \ volume needs to be distributed to meet retail demands.\nFigure 13. Distribution\
    \ problems classiﬁed by the proposed taxonomy.\n3.5.4. Classiﬁcation of Retail\
    \ Problems\nFinally, Figure 14 introduces the classification of problems in the\
    \ retail stage of\nthe FSC. In this last step, the communication and perception\
    \ attribute appears once\nSensors 2021, 21, 6910\n21 of 34\nagain to represent\
    \ the problems in which the input data correspond to non-structured\ndata, such\
    \ as images (dynamic discounting, daily demand prediction, and inventory\nmanagement)\
    \ [95,132–135]. For these particular cases, the problems can be modeled using\n\
    DL techniques to determining price discounts based on stock levels inside supermarkets\n\
    and by managing inventories according to food product existence.\nContrarily,\
    \ the knowledge discovery and function approximation attribute includes\nproblems\
    \ associated with the extraction of patterns (food consumption and food waste),\n\
    the prediction of future values related to consumer demand and buying behavior,\
    \ and the\ngeneration of healthy menus or estimating nutritional values. Research\
    \ articles on this\nattribute include [89,90,136–139]. Furthermore, this attribute\
    \ can also classify the dynamic\ndiscounting and daily demand prediction and inventory\
    \ management problems when\ntheir input data corresponds to structured information\
    \ like historical records.\nIn addition to the attributes mentioned above, the\
    \ uncertain knowledge and reasoning,\nand problem-solving attributes can be used\
    \ to categorize a couple of problems in the retail\nstage. Those problems are\
    \ consumer demand, perception, and buying behavior, as well\nas daily demand prediction\
    \ and inventory management. Consumer demand, perception,\nand buying behavior\
    \ can be approached with a probabilistic system [140–142], for instance,\nuncertainty\
    \ concerning what food products are expected to be bought. Meanwhile, daily\n\
    demand prediction and inventory management can be addressed with an optimization\n\
    paradigm [143,144]. For this case, the aim is to optimize stock levels in such\
    \ a way that\nfood waste can be decreased or even to avoiding over-stocking issues\
    \ completely.\nFigure 14. Retail problems classiﬁed by the proposed taxonomy.\n\
    4. Guidelines for the Use of Computational Intelligence Approaches in the Food\n\
    Supply Chain\nHaving presented and validated the taxonomy of FSC problems, this\
    \ section presents\na set of guidelines for researchers and practitioners in FSC\
    \ for the use of CI within this\ndomain (Figure 15). Concretely, we try to guide\
    \ the users to (1) select the typology of a\nCI problem that they are addressing;\
    \ and (2) identify what families of CI methods could\nbe more suitable for the\
    \ problem at hand. The latter does not mean that in all cases the\nfamily of methods\
    \ suggested is the most appropriate, as this may depend on the speciﬁc\ncharacteristics\
    \ of the problem being addressed.\nThe guidelines depicted in Figure 15 start\
    \ with a basic question posed to the user:\n“What is the purpose and modeling\
    \ characteristics of the problem at hand?” (it could be\ncommunication and perception,\
    \ uncertain knowledge and reasoning, knowledge discovery\nand function approximation,\
    \ and problem-solving). If the purpose is the automatic analysis\nand extraction\
    \ of information from digital images to decide on the action to be taken\nregarding\
    \ the management of food supply systems (communication and perception), the\n\
    suitable family of methods would be deep neural networks (e.g., convolutional\
    \ neural\nnetworks). This family of CI methods enables the creation of computer\
    \ vision systems,\nwhich allows the environment of object characteristics to be\
    \ perceived in a visual way.\nBased on this visual analysis, these systems communicate\
    \ or recommend actions that\nSensors 2021, 21, 6910\n22 of 34\nachieve desired\
    \ states or match predeﬁned conditions (e.g., identify the quality of potatoes\n\
    in order to evaluate the units that are either damaged or edible).\nFigure 15.\
    \ Guidelines for the method selection problem in the food supply chain. Pd: production,\
    \ Ps:\nprocessing, D: distribution, R: retail.\nIf the objective of the user is\
    \ to handle problems characterized by partially observable,\nnon-deterministic,\
    \ or imprecise data (uncertain knowledge and reasoning), fuzzy systems\nor probabilistic\
    \ methods are recommended. For the former CI approach, it is important\nto highlight\
    \ that fuzzy systems need to be paired with hardware (e.g., PID controllers)\n\
    to work properly in food applications. This is due to the fact that hardware components\n\
    allow decisions made by fuzzy systems to be translated into actions (e.g., management\n\
    of nutrients and irrigation supply inside a greenhouse system depending on conditions\n\
    associated with temperature). Probabilistic methods are suitable for making estimations\
    \ of\nrelevant variables (e.g., planning production according to seasonal demand)\
    \ in scenarios\nwith partially observable data.\nWhen the users’ aim is directed\
    \ at making predictions from historical data, making\nclassiﬁcations that discriminate\
    \ between data categories, or ﬁnding hidden patterns in data,\nthe best modeling\
    \ approach to use is knowledge discovery and function approximation.\nFirstly,\
    \ for predictions and classiﬁcations, the user should determine the type of input\n\
    data at hand. In general terms, the input data can be structured (e.g., historical\
    \ records,\ntabular data) or unstructured (e.g., video, images). In the former,\
    \ and depending on the\ndata size, the supervised learning techniques are the\
    \ CI methods to be used when facing\nsmall, medium, and large data no bigger than\
    \ 40–50 gigabytes. Supervised DL, how-\never, is the recommended approach for\
    \ big datasets. In terms of making predictions and\nclassiﬁcations when using\
    \ unstructured data, supervised DL would be the most suitable\nlearning approach;\
    \ while unsupervised ML or unsupervised DL are the recommended\nCI approaches\
    \ for pattern analysis. Finally, as we can see in Figure 15, the other category\n\
    of problems that users might face is problem-solving. In this case, the user’s\
    \ aim is to\noptimize particular values in order to achieve a desired level of\
    \ performance. As such,\nthe above-suggested approaches are therefore all meta-heuristics\
    \ (e.g., EC, SI, and local\nsearch-based techniques).\nIn addition to the analyses\
    \ presented above, the bottom part of Figure 15 also depicts\nwhich FSC stages\
    \ the four CI modeling approaches (and their associated methods) are\nusually\
    \ applied in. Fuzzy systems and probabilistic approaches are typically considered\
    \ for\ncontrol applications in the production, processing, and retail stages.\
    \ In contrast, optimiza-\ntion with meta-heuristics and prediction-classiﬁcation-pattern\
    \ analysis with ML and DL\nare modeling perspectives that are considered in the\
    \ entire FSC process. The contributions\nSensors 2021, 21, 6910\n23 of 34\nof\
    \ communication and perception approaches using DL methods tend to be more typically\n\
    focused on the production and retail stages.\n5. Conclusions\nThis ﬁnal section\
    \ introduces the main reﬂections drawn from the research carried out\nin this\
    \ paper. Section 5.1 introduces the summary and conclusions. Then, Section 5.2\
    \ details\na set of challenges and research opportunities to encourage further\
    \ exploration and use of\nthe possible contributions that CI might bring to the\
    \ FSC ﬁeld.\n5.1. Summary\nThis paper has proposed a new and comprehensive taxonomy\
    \ of FSC problems\nunder a CI paradigm for three representative supply chains:\
    \ agriculture, ﬁsh farming,\nand livestock. The taxonomy was built based on three\
    \ levels in order to categorize FSC\nproblems according to how they can be modeled\
    \ using CI approaches. The ﬁrst and second\nlevels are focused on identifying\
    \ the chain stage (production, processing, distribution,\nand retail) and the\
    \ speciﬁc FSC problem to be addressed (e.g., vehicle routing problems\nin the\
    \ distribution stage). The third level presents the typologies of FSC problems\
    \ from\na CI perspective, and aims to categorize FSC problems depending on how\
    \ they can be\nmodeled and solved by CI methods. In the third level of the taxonomy\
    \ we have deﬁned\nfour attributes, presented as follows, (1) problem solving,\
    \ which is in charge of classifying\nFSC problems focused on optimizing processes;\
    \ (2) uncertain knowledge and reasoning,\nwhich concers problems that have partially\
    \ observable, non-deterministic, incomplete, or\nimprecise data; (3) knowledge\
    \ discovery and function approximation, which has the role\nof categorizing problems\
    \ that aim to make predictions of future scenarios, classiﬁcation of\nvariables,\
    \ or analysis of patterns embedded in data; (4) communication and perception,\n\
    groups FSC problems that involve computer vision systems to sensing and suggesting\n\
    plausible actions to take in order to intervene in such environments.\nTo check\
    \ the robustness of the taxonomy, we categorized FSC problems with CI\nmethods,\
    \ especially in the production, processing, distribution, and retail stages. Here,\
    \ it is\nrelevant to highlight that we introduced a set of uniﬁed deﬁnitions for\
    \ these problems. As\na result, we were able to draw some interesting conclusions.\
    \ In the ﬁsh and livestock cases\nof the production stage, using the DL and the\
    \ communication and perception attribute\nsigniﬁcantly inﬂuences applications\
    \ (e.g., ﬁsh weight estimation, grassland monitoring,\nanimal welfare) where the\
    \ input data is determined by image and video records (non-\nstructured data).\
    \ In contrast, we have the case of classic ML, which is narrowed to FSC\nproblems,\
    \ and for which, the objective is to make production predictions using historical\n\
    data records (structured data). In the case of agriculture production systems,\
    \ the scope of\nthe CI approach is broader. Speciﬁcally, we found that DL, ML,\
    \ FL, and Meta-heuristics are\nmethods for modeling production problems related\
    \ to crop protection and yield, weather\nprediction, and irrigation and nutrient\
    \ management.\nIn the processing stage, ML, meta-heuristics, and probabilistic\
    \ methods are the CI\napproaches commonly used. In terms of ML, the aim is to\
    \ extract patterns and forecast\nobjective variables like demand prediction and\
    \ prediction of post-harvest losses. As for\nmeta-heuristics and probabilistic\
    \ techniques, they aim to optimize food manufacturing\nprocesses (e.g., heating,\
    \ drying) and production planning for distribution. Further down\nin the supply\
    \ chain, the predominant family of CI methods is meta-heuristics, found in\nthe\
    \ distribution link. This data-driven approach is devoted to optimizing the routing\n\
    and delivery problems under various constraints such as ﬂeet size and available\
    \ fuel.\nLastly, DL is the principal CI approach in problems with non-structured\
    \ input data (e.g.,\ndynamic discounting, diet, and nutrition) in the retail stage.\
    \ Classical ML has been used to\nextract patterns (food consumption and food waste)\
    \ and predict consumer demand and\nbuying behavior.\nThe taxonomy allowed us to\
    \ ﬁgure out which modeling approaches are more typically\nconsidered when dealing\
    \ with problems at the four supply chain stages. In this manner,\nSensors 2021,\
    \ 21, 6910\n24 of 34\nwe gave a general overview of well-established tendencies\
    \ regarding CI across the three\nsupply chains considered. Thus, the deﬁnition\
    \ and classiﬁcation of FSC problems helped\nus introduce guidelines for the incorporation\
    \ and use of CI in the food industry. These\nguidelines are built upon CI’s primary\
    \ purposes in the food supply chain: communication\nand perception, uncertain\
    \ knowledge and reasoning representations, knowledge discovery\nand function approximation,\
    \ and problem-solving. These guidelines aim to help non-expert\nCI users to identify\
    \ families of methods that can supply a solution for their particular CI-\nbased\
    \ needs in different FSC problems.\nIn summary, the taxonomy analysis suggests\
    \ that there is no family of CI methods\nthat best suits all FSC problems. However,\
    \ we state the need for a comparison framework\nthat allows the description and\
    \ analysis of the performance of different CI methods in\ndiverse supply chain\
    \ problems. In this context, the taxonomy presented sets up the basis\nfor a common\
    \ framework that, in further research, will facilitate experimentation in order\n\
    to determine which CI approaches are more appropriate for each type of FSC problem.\n\
    This may also help determine a suitable baseline of methods to make fair comparisons,\n\
    depending on the family of CI methods chosen for the FSC problem at hand.\n5.2.\
    \ Challenges and Research Opportunities\nAs industry 4.0 is ﬂourishing for the\
    \ FSC management and operation, emerging re-\nsearch paths arise for CI to yield\
    \ more robust, interoperable, and accurate methods [145,146].\nTherefore, this\
    \ section points out challenges and research opportunities that the community\n\
    should explore to enhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nThese challenges are motivated by the gaps located at the intersection\
    \ of FSC and CI, which\nwere identiﬁed through the proposed taxonomy.\n5.2.1.\
    \ Data Fusion from Different Data Sources\nSigniﬁcantly, few CI methods can incorporate\
    \ data from different types of sources.\nBesides, in real scenarios, the data\
    \ available from a unique type of sensor might not be\nsufﬁcient to fully represent\
    \ the FSC problem that is intended to be addressed. For instance,\ndifferent Internet\
    \ of Things (IoT) devices (e.g., agricultural environment monitoring sys-\ntems,\
    \ GPS, cameras) provide diverse data for the optimum management of production\n\
    systems [147–149]. Amongst the relevant data for the aforementioned example, we\
    \ ﬁnd\ntemperature, humidity, localization coordinates, crop images, and others.\n\
    As a common denominator, all the data associated with the aforementioned variables\n\
    can have a different format, ranging from historical records in the form of tables,\
    \ to non-\nstructured data like images. Additionally, all of them offer valuable\
    \ information for the\npurpose at hand (e.g., prediction of crop production or\
    \ management of pest diseases). In\nthis context, the challenge lies in deﬁning\
    \ guidelines for the harmonizing and fusion of\ndata from diverse sources. Such\
    \ guidelines should consider that each FSC stage can add\nparticularities to the\
    \ data for the CI-based problem under consideration. How to properly\ncollect\
    \ and generate a single dataset with information obtained from varied and different\n\
    sources, which are fed into a CI method, is a research opportunity that must be\
    \ addressed\nto further enhance CI contributions in the FSC domain.\nIf the integration\
    \ process is not done correctly, inconsistencies will appear, resulting in\na\
    \ decrease in the performance of CI approaches [150]. Hence, merging data from\
    \ different\ninput sources presents a notorious problem that commonly attracts\
    \ more issues, such as\ninconsistent, duplicate, redundant, and correlated data.\
    \ One potential research direction\nto take to help cope with this challenge could\
    \ be designing automatic preprocessing\napproaches that fuse and harmonize data\
    \ sources to provide the accepted input format\nof CI methods. For the latter,\
    \ it is important to note that every CI approach requires\ndifferent input data\
    \ formats, which could split the design of the aforementioned automatic\ndata\
    \ preprocessing methods into diverse paths depending on the particular family\
    \ of CI\nmethods under consideration.\nSensors 2021, 21, 6910\n25 of 34\n5.2.2.\
    \ Real-Time Data and Incremental Learning\nIn supervised learning, the input data\
    \ is available before starting any training pro-\ncesses. Here, the task is to\
    \ build up a model from that data using a batch approach. The\nlatter means that\
    \ DL and ML methods use all available samples in the input data to build\nand\
    \ train a model to make predictions or classiﬁcations when new data comes into\
    \ the\ntrained model. Currently, most DL and ML applications are focused on the\
    \ batch learning\napproach, wherein data are given before training the ML models\
    \ [151]. In this context,\nmodel training and optimization processes are purely\
    \ based on the aforementioned in-\nput dataset, whose data distribution is supposed\
    \ to be static. Nevertheless, such a static\napproach is not the case for real\
    \ CI-based applications within the FSC.\nDL and ML methods must real FSC scenarios,\
    \ wherein different IoT devices continu-\nously generate new data streams. For\
    \ instance, dynamic discounts in the retail stage or the\nmanagement of greenhouse\
    \ systems whose conditions must be constantly monitored to\nguarantee the optimal\
    \ control of crops are examples of real-time data streams. Therefore,\nthe key\
    \ challenge is to design ML and DL methods that adapt to real-time data, and work\n\
    with limited resources (e.g., memory), while maintaining their predictive capacities.\n\
    Further research is needed to deal with the aforementioned challenge, and should\n\
    include the concepts of incremental learning [152,153] in the design and deployment\
    \ of\nDL and ML methods in FSC problems. Furthermore, although incremental learning\
    \ is a\nsuitable strategy when dealing with the adaptation of DL and ML to real-time\
    \ data streams,\nthe concept of incremental learning brings up other issues that\
    \ must be considered when it\nis included in the FSC context. These issues are\
    \ introduced in more detail below.\nThe ﬁrst issue is related to the concept of\
    \ drift, which is associated with changes in\nthe new input data’s statistical\
    \ properties (e.g., statistical distribution), which can highly\ninﬂuence the\
    \ performance of pre-trained DL or ML methods [154]. Secondly, we have\nthe stability-plasticity\
    \ dilemma that, in noisy environments, refers to when and how to\nadapt the current\
    \ model to the new data stream [155]. On the one hand, quick updates\nenable fast\
    \ adaptations of the model according to new data; however, at the same time, old\n\
    information that could be useful later in the process is forgotten just as quickly.\
    \ On the\nother hand, slow adaptations can be made, and old data is retained longer,\
    \ causing the\nmodel’s reactivity capacity to decrease; thereby, affecting the\
    \ model’s forecasting power.\nThus, deﬁning policies to balance the two scenarios\
    \ mentioned above is a relevant challenge\nto support the inclusion of CI approaches\
    \ in real-time data environments.\nFinally, the third challenge associated with\
    \ incremental learning is adaptive model\ncomplexity [156]. This issue is concerned\
    \ with the fact that as concept drift events become\nmore frequent, increasing\
    \ model complexity is required. Although the latter improves the\nmodel’s performance,\
    \ increasing its complexity leads to an increase in the need of more\ncomputational\
    \ resources, which are not always affordable or available in different domains,\n\
    such as FSC.\n5.2.3. Explainability of Computational Intelligence Methods\nNowadays,\
    \ CI systems have increased their capacity to carry out different tasks (e.g.,\n\
    predictions, classiﬁcation) with almost no human intervention and are achieving\
    \ high\nproﬁciency levels. In a narrow scope, if the only objective when evaluating\
    \ CI methods is\nperformance, such an object has clearly been achieved thanks\
    \ to this increasing capacity.\nNonetheless, when decisions derived from CI-based\
    \ techniques affect the dynamics of hu-\nman life (e.g., social, cultural, environmental\
    \ dimensions), understanding how CI systems\nhave achieved this performance becomes\
    \ necessary [157].\nWhile some CI approaches, such as fuzzy logic and ML methods\
    \ (e.g., rule-based\nlearners, decision trees), can provide different degrees\
    \ of interpretability and transparency\nof decisions made in their inner structure;\
    \ other methods cannot provide this information\n(e.g., black-box decision systems\
    \ [158]). In these cases, there are no clues regarding the\nsystems’ decisions\
    \ to obtain the ﬁnal result. One example is DL methods, whose complex\ninner structure\
    \ is full of intricate connections between layers and neurons and have a broad\n\
    Sensors 2021, 21, 6910\n26 of 34\nspace of hyperparameters. Therefore, understanding\
    \ where the high performance of DL\nmethods comes from is quite tricky.\nAs DL\
    \ is increasingly being employed in diverse FSC applications due to its per-\n\
    formance capacities, the demand for interpretability, explainability, and transparency\
    \ is\ngrowing between diverse FSC stakeholders. Such demand lies in the fact that\
    \ decisions\nmade based on CI systems can lead to actions, which can not be justiﬁed\
    \ or that require\ndetailed explanations [159] in order to enhance the management\
    \ of the supply chain. For\nexample, the shelf-life of perishable products needs\
    \ to be predicted in the distribution\nstage. However, understanding the factors\
    \ that inﬂuence the deterioration or preservation\nof food products is vital to\
    \ improve the management of distribution chains. The latter is\nknown as explainable\
    \ artiﬁcial intelligence (XAI) and is widely acknowledged as a crucial\nconcept\
    \ to be taken into account in the practical deployment of CI methods [160].\n\
    In this sense, as stated by [160], the challenge of XAI in different knowledge\
    \ domains,\nsuch as FSCs, is creating more explainable methods while maintaining\
    \ their output perfor-\nmance. Besides, it is crucial to facilitate stakeholder\
    \ understanding and trust in decisions\nsupported by CI systems whose outputs\
    \ become the basis for different actions along the\nwhole supply chain.\n5.2.4.\
    \ The Method Selection Problem\nAs shown in this research paper, depending on\
    \ the FSC problem at hand, different\ntypes of CI methods could be used. In this\
    \ sense, Section 4 provides helpful information\nto guide non-expert CI users\
    \ when choosing the most suitable CI family of methods\ndepending on the purpose\
    \ to be pursued (e.g., prediction, classiﬁcation, optimization). In\nthis context,\
    \ keeping in mind the no-free-lunch theorem [161] (which states that there is\n\
    no unique algorithm that can be competitive in all problems), the proposed guidelines\n\
    contribute to dealing with the model selection problem in the FSC area. Nevertheless,\n\
    having identiﬁed the most suitable families of CI methods, it is still difﬁcult\
    \ to choose the\nbest method within each family.\nFor instance, if the objective\
    \ is to optimize a food production process in the processing\nstage, the critical\
    \ question would be to ask what meta-heuristic approach is the most\nsuitable\
    \ for the considered problem. The answer to this question could be to use an\n\
    EC, SI, or local-based approach. However, solving such a decision requires a thorough\n\
    experimentation that demands a large amount of effort and is time-consuming [162].\n\
    Another similar example of the method selection problem is the case of ML. FSC\
    \ data\nallows different variables of interest to be predicted under diverse scenarios,\
    \ ranging from\nﬁsh farming production to agriculture. These characteristics of\
    \ the production context\ninﬂuence ML method performance, and selecting the most\
    \ appropriate method from a\npool of candidates is a time-consuming task. Thus,\
    \ the automation of choosing the best CI\ntechnique from a predeﬁned set of methods\
    \ of the same family is a crucial challenge that\ncould help increase inclusion\
    \ of CI into the FSC.\nCurrently, there are well-established automated approaches\
    \ focused on ML and DL.\nTherefore, we can use the automation of complete ML or\
    \ DL workﬂows, known as Auto-\nmated Machine learning (AutoML) [163] and Automated\
    \ Deep learning (AutoDL) [164].\nSuch approaches are considered to be promising\
    \ strategies to reduce human effort and\ntime cost of ML and DL in research areas\
    \ in which specialized knowledge is an asset\nthat is not always available or\
    \ affordable. Particularly, AutoML and AutoDL seek to ﬁnd\ncompetitive ML pipelines\
    \ (the workﬂow from data preprocessing to model selection) and\nneural network\
    \ architectures automatically without almost any human intervention. The\ncentral\
    \ purpose is maximizing or minimizing a performance metric on input data without\n\
    it having to be specialized in the problem domain where the data comes.\nAutoML\
    \ and AutoDL methods have been successfully used in other areas [165,166].\nHowever,\
    \ an extensive analysis to determine their strengths and weaknesses has not been\n\
    carried out in very diverse learning tasks, such as FSCs. Additionally, the concept\
    \ of\nAutoML and AutoDL could be extrapolated to an even broader space, such as\
    \ automated\nSensors 2021, 21, 6910\n27 of 34\ncomputational intelligence. In\
    \ this case, the focus would be on supporting non-expert\nusers in selecting other\
    \ CI techniques like meta-heuristics and its sub-families (e.g., EC,\nSI, local-based\
    \ approaches). In this context, the research challenge lies in the design and\n\
    development of automated methods for other families of CI methods, including fuzzy\n\
    logic, meta-heuristic, probabilistic methods, and others.\n5.2.5. Interoperability\
    \ and Deployment of CI with Information and\nCommunication Technologies\nCI is\
    \ only one part of the entire ICT ecosystem required to digitize processes in\
    \ the\nFSC. IoT technologies, information storage and management technologies,\
    \ data analytic\nand visualization tools, or decision support technologies are\
    \ other relevant components\nwithout which CI cannot reach its full potential.\
    \ All these technologies have switched the\nfocus from traditional automation\
    \ of FSC processes to a cloud-based paradigm where all\nICTs operate efﬁciently\
    \ and intuitively [167]. Within the cloud-based approaches, major\ntechnologies\
    \ must be able to interoperate with each other and themselves. Thus, such\ninterconnectivity\
    \ and exchange of information are some of the main challenges raised\nwhen incorporating\
    \ CI and other industry 4.0 approaches into the daily operation and\nmanagement\
    \ of FSCs [168].\nOne of the latent issues is the lack of standardization of the\
    \ data models with CI\nmethods. Ultimately the goal of Industry 4.0 in FSCs is\
    \ to incorporate semantic interoper-\nability, which enables systems to exchange\
    \ information with unambiguous meaning [169].\nHowever, the study of interoperability\
    \ standards for CI approaches is a research area that\nstill needs to be fully\
    \ exploited. The demand for these standards is also growing at a\npace never seen\
    \ before, as the current trend of Industry 4.0 is characterized by complex\nautomation\
    \ and production systems where CI works with a wide variety of standards,\ncomponents,\
    \ and services in a cloud-based environment [170]. Despite such challenges, re-\n\
    cent advances have been made in interoperability standards for cloud-based environments.\n\
    Some examples are the interoperable cloud-based manufacturing system [171], the\
    \ hybrid\nmanufacturing cloud framework [172], and the new generation artiﬁcial\
    \ intelligence-driven\nintelligent manufacturing architecture [173].\nAnother\
    \ big challenge of CI in integration with ICTs lies in the manufacturing pro-\n\
    cesses of the FSC production stage. Nowadays, CI approaches are usually focused\
    \ on\nmaximizing accuracy without considering the resources they consume. Nevertheless,\
    \ with\nthe increasing demand of developing a globally low carbon economy, the\
    \ need to build an\nintelligent and environmentally friendly food industry is\
    \ becoming more urgent [174,175].\nIn this sense, CI approaches require that a\
    \ balance be struck between the computational\nresources they use, the energy\
    \ they consume, and the performance they can achieve in the\ntime-frame allowed\
    \ by food manufacturing processes [176]. Furthermore, the aforemen-\ntioned resources\
    \ are assets that are not always available in small- and medium-sized food\nindustries.\
    \ Therefore, more research is required to develop CI methods that are capable\n\
    of being deployed in IoT devices and smart manufacturing industries under different\n\
    constraints like energy efﬁciency and computational resources. In conclusion,\
    \ this research\npath could imply bringing in the concepts of edge computing and\
    \ fog computing [177] for\nthe efﬁcient inclusion of CI in food manufacturing\
    \ processes [178].\nAuthor Contributions: Conceptualization, J.S.A.-Z., A.A.-V.\
    \ and A.D.M.; Methodology, J.S.A.-Z.,\nA.A.-V. and A.D.M.; Validation, J.S.A.-Z.\
    \ and A.D.M.; Formal Analysis, J.S.A.-Z., A.A.-V., A.D.M. and\nJ.L.; Investigation,\
    \ J.S.A.-Z.; Data Curation, J.S.A.-Z.; Writing—Original Draft Preparation, J.S.A.-Z.,\n\
    A.D.M. and J.L.; Writing—Review and Editing, J.S.A.-Z., A.D.M. and J.L.; Visualization,\
    \ J.S.A.-Z.;\nSupervision, A.A.-V. and A.D.M.; Project Administration, A.A.-V.;\
    \ Funding Acquisition, A.A.-V. and\nA.D.M. All authors have read and agreed to\
    \ the published version of the manuscript.\nFunding: This work has been funded\
    \ by the European Union’s Horizon 2020 Research and Innovation\nProgramme under\
    \ Grants 101000617 and 861540. This work has also been funded by the Prize UD-\n\
    Grupo Santander 2019 and the Spanish Ministry of Science and Innovation through\
    \ research project\nPID2019-109393RA-I00.\nSensors 2021, 21, 6910\n28 of 34\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: All data analyzed during this\
    \ study are included in this article.\nAcknowledgments: We want to thank the reviewers\
    \ for their feedback that enabled us to enhance\nthis article’s quality and scientiﬁc\
    \ rigour.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nWorld Population Projected to Reach 9.8 Billion in 2050, and 11.2\
    \ Billion in 2100. 2017. Available online: https://www.un.org/\ndevelopment/desa/en/news/population/world-population-prospects-2017.html\
    \ (accessed on 30 September 2010).\n2.\nMisra, N.N.; Dixit, Y.; Al-Mallahi, A.;\
    \ Bhullar, M.S.; Upadhyay, R.; Martynenko, A. IoT, big data and artiﬁcial intelligence\
    \ in\nagriculture and food industry. IEEE Internet Things J. 2020. [CrossRef]\n\
    3.\nKacprzyk, J.; Pedrycz, W. Introduction. In Springer Handbook of Computational\
    \ Intelligence; Springer: Berlin/Heidelberg, Germany,\n2015; pp. 1–4.\n4.\nBishop,\
    \ C.M. Pattern Recognition and Machine Learning; Springer: Berlin/Heidelberg,\
    \ Germany, 2006.\n5.\nKakani, V.; Nguyen, V.H.; Kumar, B.P.; Kim, H.; Pasupuleti,\
    \ V.R. A critical review on computer vision and artiﬁcial intelligence in\nfood\
    \ industry. J. Agric. Food Res. 2020, 2, 100033. [CrossRef]\n6.\nLiakos, K.G.;\
    \ Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning in Agriculture:\
    \ A Review. Sensors 2018, 18, 2674.\n[CrossRef]\n7.\nKamilaris, A.; Kartakoullis,\
    \ A.; Prenafeta-Boldú, F.X. A review on the practice of big data analysis in agriculture.\
    \ Comput. Electron.\nAgric. 2017, 143, 23–37. [CrossRef]\n8.\nOnwude, D.I.; Chen,\
    \ G.; Eke-emezie, N.; Kabutey, A.; Khaled, A.Y.; Sturm, B. Recent Advances in\
    \ Reducing Food Losses in the\nSupply Chain of Fresh Agricultural Produce. Processes\
    \ 2020, 8, 1431. [CrossRef]\n9.\nSaiz-Rubio, V.; Rovira-Más, F. From Smart Farming\
    \ towards Agriculture 5.0: A Review on Crop Data Management. Agronomy\n2020, 10,\
    \ 207. [CrossRef]\n10.\nCamaréna, S. Artiﬁcial intelligence in the design of the\
    \ transitions to sustainable food systems. J. Clean. Prod. 2020, 271, 122574.\n\
    [CrossRef]\n11.\nGrifﬁs, S.E.; Bell, J.E.; Closs, D.J. Metaheuristics in Logistics\
    \ and Supply Chain Management. J. Bus. Logist. 2012, 33, 90–106.\n[CrossRef]\n\
    12.\nWari, E.; Zhu, W. A survey on metaheuristics for optimization in food manufacturing\
    \ industry.\nAppl. Soft Comput. 2016,\n46, 328–343. [CrossRef]\n13.\nEnvironmental\
    \ Sustainability Vision Towards 2030: Achievements, Challenges and Opportunities.\
    \ 2012. Available online:\nwww.yumpu.com/en/document/read/20931680/environmental-sustainability-vision-towards-2030-fooddrinkeurope\
    \ (accessed\non 30 September 2010).\n14.\nOECD-FAO. OECD-FAO Guidance for Responsible\
    \ Agricultural Supply Chains; OECD: Paris, France, 2016; p. 88.\n15.\nSharma,\
    \ R.; Kamble, S.S.; Gunasekaran, A.; Kumar, V.; Kumar, A. A systematic literature\
    \ review on machine learning applications\nfor sustainable agriculture supply\
    \ chain performance. Comput. Oper. Res. 2020, 119, 104926. [CrossRef]\n16.\nBorodin,\
    \ V.; Bourtembourg, J.; Hnaien, F.; Labadie, N. Handling uncertainty in agricultural\
    \ supply chain management: A state of\nthe art. Eur. J. Oper. Res. 2016, 254,\
    \ 348–359. [CrossRef]\n17.\nDethier, J.J.; Effenberger, A. Agriculture and development:\
    \ A brief review of the literature.\nEcon. Syst. 2012, 36, 175–205.\n[CrossRef]\n\
    18.\nFøre, M.; Frank, K.; Norton, T.; Svendsen, E.; Alfredsen, J.A.; Dempster,\
    \ T.; Eguiraun, H.; Watson, W.; Stahl, A.; Sunde, L.M.; et al.\nPrecision ﬁsh\
    \ farming: A new framework to improve production in aquaculture. Biosyst. Eng.\
    \ 2018, 173, 176–193. [CrossRef]\n19.\nSundrum, A. Organic livestock farming:\
    \ A critical review. Livest. Prod. Sci. 2001, 67, 207–215. [CrossRef]\n20.\nKamble,\
    \ S.S.; Gunasekaran, A.; Gawankar, S.A. Achieving sustainable performance in a\
    \ data-driven agriculture supply chain: A\nreview for research and applications.\
    \ Int. J. Prod. Econ. 2020, 219, 179–194. [CrossRef]\n21.\nJordan, M.I.; Mitchell,\
    \ T.M. Machine learning: Trends, perspectives, and prospects. Science 2015, 349,\
    \ 255–260. [CrossRef]\n22.\nHinton, G.; Sejnowski, T.J. Unsupervised Learning:\
    \ Foundations of Neural Computation; The MIT Press: Cambridge, MA, USA, 1999.\n\
    23.\nStephen, M. Machine Learning: An Algorithmic Perspective; CRC Press: Boca\
    \ Raton, FL, USA, 2014.\n24.\nCharte, D.; Charte, F.; García, S.; Herrera, F.\
    \ A snapshot on nonstandard supervised learning problems: Taxonomy, relationships,\n\
    problem transformations and algorithm adaptations. Prog. Artif. Intell. 2019,\
    \ 8, 2192–6360. [CrossRef]\n25.\nJain, A.; Duin, R.; Mao, J. Statistical pattern\
    \ recognition: A review. IEEE Trans. Pattern Anal. Mach. Intell. 2000, 22, 4–37.\
    \ [CrossRef]\n26.\nFukunaga, K. Introduction to Statistical Pattern Recognition,\
    \ 2nd ed.; Academic Press Professional, Inc.: Cambridge, MA, USA, 1990.\n27.\n\
    Duda, R.O.; Hart, P.E.; Stork, D.G.; Duda, C.R.O.; Hart, P.E.; Stork, D.G. Pattern\
    \ Classiﬁcation, 2nd ed.; Wiley: Hoboken, NJ,\nUSA, 2001.\n28.\nSmola, A.J.; Schölkopf,\
    \ B. On a Kernel-Based Method for Pattern Recognition, Regression, Approximation,\
    \ and Operator\nInversion. Algorithmica 1998, 22, 211–231. [CrossRef]\nSensors\
    \ 2021, 21, 6910\n29 of 34\n29.\nJaafra, Y.; Luc Laurent, J.; Deruyver, A.; Saber\
    \ Naceur, M. Reinforcement learning for neural architecture search: A review.\n\
    Image Vis. Comput. 2019, 89, 57–66. [CrossRef]\n30.\nTaylor, M.E.; Stone, P. Behavior\
    \ Transfer for Value-Function-Based Reinforcement Learning. In Proceedings of\
    \ the Fourth\nInternational Joint Conference on Autonomous Agents and Multiagent\
    \ Systems, Utrecht, The Netherlands, 25–29 July 2005;\npp. 53–59.\n31.\nSewak,\
    \ M. Policy-Based Reinforcement Learning Approaches. In Deep Reinforcement Learning:\
    \ Frontiers of Artiﬁcial Intelligence;\nSpringer: Singapore, 2019; pp. 127–140.\n\
    32.\nRay, S.; Tadepalli, P. Model-Based Reinforcement Learning. In Encyclopedia\
    \ of Machine Learning; Springer: New York, NY, USA,\n2010; pp. 690–693.\n33.\n\
    Pouyanfar, S.; Sadiq, S.; Yan, Y.; Tian, H.; Tao, Y.; Reyes, M.P.; Shyu, M.L.;\
    \ Chen, S.C.; Iyengar, S.S. A Survey on Deep Learning:\nAlgorithms, Techniques,\
    \ and Applications. ACM Comput. Surv. 2018, 51, 1–36. [CrossRef]\n34.\nLeCun,\
    \ Y.; Bengio, Y.; Hinton, G. Deep learning. Nature 2015, 521, 436–444. [CrossRef]\n\
    35.\nLiu, L.; Ouyang, W.; Wang, X.; Fieguth, P.; Chen, J.; Liu, X.; Pietikäinen,\
    \ M. Deep Learning for Generic Object Detection: A Survey.\nInt. J. Comput. Vis.\
    \ 2020, 128, 261–318. [CrossRef]\n36.\nDeng, L.; Liu, Y. Deep Learning in Natural\
    \ Language Processing, 1st ed.; Springer: Berlin/Heidelberg, Germany, 2018.\n\
    37.\nSchmidhuber, J. Deep learning in neural networks: An overview. Neural Netw.\
    \ 2015, 61, 85–117. [CrossRef] [PubMed]\n38.\nDargan, S.; Kumar, M.; Ayyagari,\
    \ M.R.; Kumar, G. A Survey of Deep Learning and Its Applications: A New Paradigm\
    \ to Machine\nLearning. Arch. Comput. Methods Eng. 2020, 27, 1071–1092. [CrossRef]\n\
    39.\nBianchi, L.; Dorigo, M.; Gambardella, L.M.; Gutjahr, W.J. A survey on metaheuristics\
    \ for stochastic combinatorial optimization.\nNat. Comput. 2009, 8, 239–287. [CrossRef]\n\
    40.\nBlum, C.; Roli, A. Metaheuristics in Combinatorial Optimization: Overview\
    \ and Conceptual Comparison. ACM Comput. Surv.\n2003, 35, 268–308. [CrossRef]\n\
    41.\nFoster, J.A. Evolutionary computation. Nat. Rev. Genet. 2001, 2, 428–436.\
    \ [CrossRef] [PubMed]\n42.\nChakraborty, A.; Kar, A.K. Swarm Intelligence: A Review\
    \ of Algorithms. In Nature-Inspired Computing and Optimization: Theory\nand Applications;\
    \ Springer: Cham, Switzerland, 2017; pp. 475–494.\n43.\nStefan, V.; Silvano, M.;\
    \ Osman, I.H.; Cathérine, R. Advances and Trends in Local Search Paradigms for\
    \ Optimization, 1st ed.; Springer:\nNew York, NY, USA, 2000.\n44.\nBektas, T.\
    \ The multiple traveling salesman problem: an overview of formulations and solution\
    \ procedures.\nOmega 2006,\n34, 209–219. [CrossRef]\n45.\nKatoch, S.; Chauhan,\
    \ S.S.; Kumar, V. A review on genetic algorithm: past, present, and future. Multimed.\
    \ Tools Appl. 2021,\n80, 8091–8126. [CrossRef]\n46.\nStorn, R.; Price, K. Differential\
    \ Evolution—A Simple and Efﬁcient Heuristic for global Optimization over Continuous\
    \ Spaces.\nJ. Glob. Optim. 1997, 11, 341–359. [CrossRef]\n47.\nStutzle, T.; Dorigo,\
    \ M. Ant Colony Optimization, 1st ed.; The MIT Press: Cambridge, MA, USA, 2004.\n\
    48.\nKennedy, J.; Eberhart, R. Particle swarm optimization. In Proceedings of\
    \ the International Conference on Neural Networks,\nPerth, Australia, 27 November\
    \ –1 December 1995; pp. 1942–1948.\n49.\nGlover, F. Tabu Search—Part I. ORSA J.\
    \ Comput. 1989, 1, 190–206. [CrossRef]\n50.\nFeo, T.A.; Resende, M.G.C. Greedy\
    \ Randomized Adaptive Search Procedures. J. Glob. Optim. 1995, 1995, 2. [CrossRef]\n\
    51.\nBiacino, L.; Gerla, G. Fuzzy logic, continuity and effectiveness. Arch. Math.\
    \ Log. 2002, 41, 643–667. [CrossRef]\n52.\nCox, E. The Fuzzy Systems Handbook:\
    \ A Practitioner’s Guide to Building, Using, and Maintaining Fuzzy Systems; Academic\
    \ Press\nProfessional, Inc.: Cambridge, MA, USA, 1994.\n53.\nGhahramani, Z. Bayesian\
    \ non-parametrics and the probabilistic approach to modelling. Philos. Trans.\
    \ R. Soc. Math. Phys. Eng. Sci.\n2013, 371, 20110553. [CrossRef] [PubMed]\n54.\n\
    Ghahramani, Z. Probabilistic machine learning and artiﬁcial intelligence. Nature\
    \ 2015, 521, 452–459. [CrossRef]\n55.\nBorgelt, C.; Steinbrecher, M.; Kruse, R.R.\
    \ Graphical Models: Representations for Learning, Reasoning and Data Mining, 2nd\
    \ ed.; Wiley\nPublishing: Hoboken, NJ, USA, 2009.\n56.\nRue, H.; Held, L. Gaussian\
    \ Markov Random Fields: Theory and Applications, 1st ed.; Chapman and Hall/CRC:\
    \ Boca Raton, FL,\nUSA, 2005.\n57.\nAquaculture. 2021. Available online: www.fao.org/documents/card/es/c/cb4850en/\
    \ (accessed on 3 August 2021).\n58.\nKonovalov, D.A.; Saleh, A.; Efremova, D.B.;\
    \ Domingos, J.A.; Jerry, D.R. Automatic Weight Estimation of Harvested Fish\n\
    from Images. In Proceedings of the 2019 Digital Image Computing: Techniques and\
    \ Applications (DICTA), Perth, Australia,\n2–4 December 2019.\n59.\nYang, X.;\
    \ Zhang, S.; Liu, J.; Gao, Q.; Dong, S.; Zhou, C. Deep learning for smart ﬁsh\
    \ farming: Applications, opportunities and\nchallenges. Rev. Aquac. 2021, 13,\
    \ 66–90. [CrossRef]\n60.\nTaskiner, T.; Bilgen, B. Optimization Models for Harvest\
    \ and Production Planning in Agri-Food Supply Chain: A Systematic\nReview. Logistics\
    \ 2021, 5, 52. [CrossRef]\n61.\nSu, Y.; Xu, H.; Yan, L. Support vector machine-based\
    \ open crop model (SBOCM): Case of rice production in China. Saudi J. Biol.\n\
    Sci. 2017, 24, 537–547. [CrossRef]\nSensors 2021, 21, 6910\n30 of 34\n62.\nPantazi,\
    \ X.; Moshou, D.; Alexandridis, T.; Whetton, R.; Mouazen, A. Wheat yield prediction\
    \ using machine learning and advanced\nsensing techniques. Comput. Electron. Agric.\
    \ 2016, 121, 57–65. [CrossRef]\n63.\nSambasivam, G.; Opiyo, G.D. A predictive\
    \ machine learning application in agriculture: Cassava disease detection and classiﬁca-\n\
    tion with imbalanced dataset using convolutional neural networks. Egypt. Inform.\
    \ J. 2021, 22, 27–34. [CrossRef]\n64.\nJan, B.; Anne-Katrin, M.; Till, R.; Christoph,\
    \ R.; Lutz, P. A review of advanced machine learning methods for the detection\
    \ of\nbiotic stress in precision crop protection. Precis. Agric. 2015, 16, 1573–1618.\n\
    65.\nRomero, M.; Luo, Y.; Su, B.; Fuentes, S. Vineyard water status estimation\
    \ using multispectral imagery from an UAV platform and\nmachine learning algorithms\
    \ for irrigation scheduling management. Comput. Electron. Agric. 2018, 147, 109–117.\
    \ [CrossRef]\n66.\nTraore, S.; Luo, Y.; Fipps, G. Deployment of artiﬁcial neural\
    \ network for short-term forecasting of evapotranspiration using public\nweather\
    \ forecast restricted messages. Agric. Water Manag. 2016, 163, 363–379. [CrossRef]\n\
    67.\nSirsat, M.; Cernadas, E.; Fernández-Delgado, M.; Barro, S. Automatic prediction\
    \ of village-wise soil fertility for several nutrients\nin India using a wide\
    \ range of regression methods. Comput. Electron. Agric. 2018, 154, 120–133. [CrossRef]\n\
    68.\nCoopersmith, E.J.; Minsker, B.S.; Wenzel, C.E.; Gilmore, B.J. Machine learning\
    \ assessments of soil drying for agricultural planning.\nComput. Electron. Agric.\
    \ 2014, 104, 93–104. [CrossRef]\n69.\nBarrett, B.; Nitze, I.; Green, S.; Cawkwell,\
    \ F. Assessment of multi-temporal, multi-sensor radar and ancillary spatial data\
    \ for\ngrasslands monitoring in Ireland using machine learning approaches. Remote\
    \ Sens. Environ. 2014, 152, 109–124. [CrossRef]\n70.\nVinicius, P.; Zen, K.L.;\
    \ Rocha, P.C.S.; Rafael, C.; Da Silva, J.C.C.; José, K.H.; Richardson, R.; Luiz,\
    \ B.F.; Simioni, A.T. In vivo pattern\nclassiﬁcation of ingestive behavior in\
    \ ruminants using FBG sensors and machine learning. Sensors 2015, 15, 28456–28471.\n\
    71.\nMatthews, S.G.; Miller, A.L.; PlÖtz, T.; Kyriazakis, I. Automated tracking\
    \ to measure behavioural changes in pigs for health and\nwelfare monitoring. Sci.\
    \ Rep. 2017, 7, 2045–2322. [CrossRef]\n72.\nAlonso, J.; Villa, A.; Bahamonde,\
    \ A. Improved estimation of bovine weight trajectories using Support Vector Machine\
    \ Classiﬁca-\ntion. Comput. Electron. Agric. 2015, 110, 36–41. [CrossRef]\n73.\n\
    Craninx, M.; Fievez, V.; Vlaeminck, B.; De Baets, B. Artiﬁcial neural network\
    \ models of the rumen fermentation pattern in dairy\ncattle. Comput. Electron.\
    \ Agric. 2008, 60, 226–238. [CrossRef]\n74.\nErik, H.; Emanuel, R. Big data analytics\
    \ and demand forecasting in supply chains: A conceptual analysis. Int. J. Logist.\
    \ Manag.\n2018, 29, 2.\n75.\nFeng, Q.; Shanthikumar, J.G. How Research in Production\
    \ and Operations Management May Evolve in the Era of Big Data.\nProd. Oper. Manag.\
    \ 2018, 27, 1670–1684. [CrossRef]\n76.\nPurandare, H.; Ketkar, N.; Pansare, S.;\
    \ Padhye, P.; Ghotkar, A. Analysis of post-harvest losses: An Internet of Things\
    \ and machine\nlearning approach. In Proceedings of the International Conference\
    \ on Automatic Control and Dynamic Optimization Techniques,\nPune, India, 9–10\
    \ September 2016; pp. 222–226.\n77.\nBanga, J.R.; Balsa-Canto, E.; Moles, C.G.;\
    \ Alonso, A.A. Improving food processing using modern optimization methods.\n\
    Trends Food Sci. Technol. 2003, 14, 131–144. [CrossRef]\n78.\nEneko, O.; Yang,\
    \ X.S.; Fernando, D.; Enrique, O.; Masegosa, A.D.; Asier, P. A discrete ﬁreﬂy\
    \ algorithm to solve a rich vehicle\nrouting problem modelling a newspaper distribution\
    \ system with recycling policy. Soft Comput. 2017, 21, 1433–7479.\n79.\nNasr,\
    \ N.; Niaki, S.T.A.; Hussenzadek Kashan, A.; Seifbarghy, M. An efficient solution\
    \ method for an agri-fresh food supply chain:\nhybridization of Lagrangian relaxation\
    \ and genetic algorithm. Environ. Sci. Pollut. Res. 2021, 1–19. [CrossRef]\n80.\n\
    Hui, Y.Y.; Choy, K.; Ho, G.; Leung, K.; Lam, H. A cloud-based location assignment\
    \ system for packaged food allocation in\ne-fulﬁllment warehouse. Int. J. Eng.\
    \ Bus. Manag. 2016, 8, 1847979016684832. [CrossRef]\n81.\nMosallanezhad, B.; Hajiaghaei-Keshteli,\
    \ M.; Triki, C. Shrimp closed-loop supply chain network design. Soft Comput. 2021,\n\
    25, 7399–7422. [CrossRef]\n82.\nLuangkesorn, K.; Klein, G.; Bidanda, B. Analysis\
    \ of production systems with potential for severe disruptions. Int. J. Prod. Econ.\n\
    2016, 171, 478–486. [CrossRef]\n83.\nLestari, F.; Mas’ari, A.; Meilani, S.; Riandika,\
    \ I.N.; Hamid, A.B.A. Risk Mitigation Via Integrating House of Risk and Probability\n\
    Impact Matrix in Halal Food Supply Chain. J. Tek. Ind. 2021, 22, 138–154.\n84.\n\
    Wang, Y.; Zhao, Y.; Addepalli, S. Remaining Useful Life Prediction using Deep\
    \ Learning Approaches: A Review. Procedia Manuf.\n2020, 49, 81–88. [CrossRef]\n\
    85.\nBrooks, C.; Parr, L.; Smith, J.M.; Buchanan, D.; Snioch, D.; Hebishy, E.\
    \ A review of food fraud and food authenticity across the\nfood supply chain,\
    \ with an examination of the impact of the COVID-19 pandemic and Brexit on food\
    \ industry. Food Control 2021,\n130, 108171. [CrossRef]\n86.\nShahbazi, Z.; Byun,\
    \ Y.C. A Procedure for Tracing Supply Chains for Perishable Food Based on Blockchain,\
    \ Machine Learning and\nFuzzy Logic. Electronics 2021, 10, 41. [CrossRef]\n87.\n\
    Feizabadi, J. Machine learning demand forecasting and supply chain performance.\
    \ Int. J. Logist. Res. Appl. 2020, 1–24. [CrossRef]\n88.\nBányai, T. Real-Time\
    \ Decision Making in First Mile and Last Mile Logistics: How Smart Scheduling\
    \ Affects Energy Efﬁciency of\nHyperconnected Supply Chain Solutions. Energies\
    \ 2018, 11, 1833. [CrossRef]\n89.\nVasiloglou, M.F.; Mougiakakou, S.; Aubry, E.;\
    \ Bokelmann, A.; Fricker, R.; Gomes, F.; Guntermann, C.; Meyer, A.; Studerus,\
    \ D.;\nStanga, Z. A Comparative Study on Carbohydrate Estimation: GoCARB vs. Dietitians.\
    \ Nutrients 2018, 10, 741. [CrossRef]\n90.\nEftimov, T.; Korosec, P.; Korousi´c\
    \ Seljak, B. StandFood: Standardization of Foods Using a Semi-Automatic System\
    \ for Classifying\nand Describing Foods According to FoodEx2. Nutrients 2017,\
    \ 10, 542. [CrossRef]\nSensors 2021, 21, 6910\n31 of 34\n91.\nGrainger, M.J.;\
    \ Aramyan, L.; Logatcheva, K.; Piras, S.; Righi, S.; Setti, M.; Vittuari, M.;\
    \ Stewart, G.B. The use of systems models to\nidentify food waste drivers. Glob.\
    \ Food Secur. 2018, 16, 1–8. [CrossRef]\n92.\nBonaccorsi, M.; Betti, S.; Rateni,\
    \ G.; Esposito, D.; Brischetto, A.; Marseglia, M.; Dario, P.; Cavallo, F. ‘HighChest’:\
    \ An Augmented\nFreezer Designed for Smart Food Management and Promotion of Eco-Efﬁcient\
    \ Behaviour. Sensors 2017, 17, 1357. [CrossRef]\n93.\nBorimnejad, V.; Samani,\
    \ R.E. Modeling consumer’s behavior for packed vegetable in “Mayadin management\
    \ organization of\nTehran” using artiﬁcial neural network. Cogent Bus. Manag.\
    \ 2016, 3, 1208898. [CrossRef]\n94.\nCene, E.; Karaman, F. Analysing organic food\
    \ buyers’ perceptions with Bayesian networks: A case study in Turkey. J. Appl.\
    \ Stat.\n2015, 42, 1572–1590. [CrossRef]\n95.\nCEPS. Digitising Agrifood—Pathways\
    \ and Challenges. 2019. Available online: www.ceps.eu/ceps-publications/digitising-\n\
    agrifood. (accessed on 3 October 2021)\n96.\nSipser, M. Introduction to the Theory\
    \ of Computation. Available online: http://fuuu.be/polytech/INFOF408/Introduction-To-\n\
    The-Theory-Of-Computation-Michael-Sipser.pdf(accessed on 3 October 2021)\n97.\n\
    Nesteruk, S.; Shadrin, D.; Pukalchik, M.; Somov, A.; Zeidler, C.; Zabel, P.; Schubert,\
    \ D. Image Compression and Plants\nClassiﬁcation Using Machine Learning in Controlled-Environment\
    \ Agriculture: Antarctic Station Use Case. IEEE Sens. J. 2021,\n21, 17564–17572.\
    \ [CrossRef]\n98.\nIqbal, M.A.; Wang, Z.; Ali, Z.A.; Riaz, S. Automatic Fish Species\
    \ Classiﬁcation Using Deep Convolutional Neural Networks.\nWirel. Pers. Commun.\
    \ 2021, 116, 1043–1053. [CrossRef]\n99.\nPetrellis, N. Measurement of Fish Morphological\
    \ Features through Image Processing and Deep Learning Techniques. Appl. Sci.\n\
    2021, 11, 4416. [CrossRef]\n100. Jung, D.H.; Kim, N.Y.; Moon, S.H.; Jhin, C.;\
    \ Kim, H.J.; Yang, J.S.; Kim, H.S.; Lee, T.S.; Lee, J.Y.; Park, S.H. Deep Learning-Based\n\
    Cattle Vocal Classiﬁcation Model and Real-Time Livestock Monitoring System with\
    \ Noise Filtering. Animals 2021, 11, 357.\n[CrossRef] [PubMed]\n101. Kim, Y.J.;\
    \ Park, D.H.; Park, H.; Kim, S.H. Pig Datasets of Livestock for Deep Learning\
    \ to detect Posture using Surveillance\nCamera. In Proceedings of the International\
    \ Conference on Information and Communication Technology Convergence, Jeju,\n\
    Korea, 21–23 October 2020; pp. 1196–1198.\n102. Qiao, Y.; Su, D.; Kong, H.; Sukkarieh,\
    \ S.; Lomax, S.; Clark, C. Data Augmentation for Deep Learning based Cattle Segmentation\n\
    in Precision Livestock Farming. In Proceedings of the International Conference\
    \ on Automation Science and Engineering, Hong\nKong, China, 20–21 August 2020;\
    \ pp. 979–984.\n103. Qiao, Y.; Truman, M.; Sukkarieh, S. Cattle segmentation and\
    \ contour extraction based on Mask R-CNN for precision livestock\nfarming. Comput.\
    \ Electron. Agric. 2019, 165, 104958. [CrossRef]\n104. Zhao, S.; Zhang, S.; Liu,\
    \ J.; Wang, H.; Zhu, J.; Li, D.; Zhao, R. Application of machine learning in intelligent\
    \ ﬁsh aquaculture: A\nreview. Aquaculture 2021, 540, 724–736. [CrossRef]\n105.\
    \ Gao, G.; Xiao, K.; Chen, M. An intelligent IoT-based control and traceability\
    \ system to forecast and maintain water quality in\nfreshwater ﬁsh farms. Comput.\
    \ Electron. Agric. 2019, 166, 105013. [CrossRef]\n106. Lopes, B.D.M.; Silva, L.C.B.;\
    \ Blanquet, I.M.; Georgieva, P.; Marques, C.A.F. Prediction of ﬁsh mortality based\
    \ on a probabilistic\nanomaly detection approach for recirculating aquaculture\
    \ system facilities. Rev. Sci. Instrum. 2021, 92, 025119. [CrossRef]\n107. Strabel,\
    \ T.; Szyda, J.; Ptak, E.; Jamrozik, J. Comparison of Random Regression Test-Day\
    \ Models for Polish Black and White Cattle.\nJ. Dairy Sci. 2005, 88, 3688–3699.\
    \ [CrossRef]\n108. Bayer, P.E.; Edwards, D. Machine learning in agriculture: from\
    \ silos to marketplaces. Plant Biotechnol. J. 2021, 19, 648–650.\n[CrossRef]\n\
    109. Ozguven, M.M.; Adem, K. Automatic detection and classiﬁcation of leaf spot\
    \ disease in sugar beet using deep learning algorithms.\nPhys. A Stat. Mech. Appl.\
    \ 2019, 535, 122537. [CrossRef]\n110. Bah, M.D.; Dericquebourg, E.; Haﬁane, A.;\
    \ Canals, R. Deep Learning Based Classiﬁcation System for Identifying Weeds Using\n\
    High-Resolution UAV Imagery. In Intelligent Computing; Arai, K., Kapoor, S., Bhatia,\
    \ R., Eds.; Springer: Cham, Switzerland, 2019;\npp. 176–187.\n111. Chlingaryan,\
    \ A.; Sukkarieh, S.; Whelan, B. Machine learning approaches for crop yield prediction\
    \ and nitrogen status estimation\nin precision agriculture: A review. Comput.\
    \ Electron. Agric. 2018, 151, 61–69. [CrossRef]\n112. Wu, L.; Huang, G.; Fan,\
    \ J.; Ma, X.; Zhou, H.; Zeng, W. Hybrid extreme learning machine with meta-heuristic\
    \ algorithms for\nmonthly pan evaporation prediction. Comput. Electron. Agric.\
    \ 2020, 168, 105115. [CrossRef]\n113. Kong, Q.; Kuriyan, K.; Shah, N.; Guo, M.\
    \ Development of a responsive optimisation framework for decision-making in precision\n\
    agriculture. Comput. Chem. Eng. 2019, 131, 106585. [CrossRef]\n114. Valente, J.;\
    \ Del Cerro, J.; Barrientos, A.; Sanz, D. Aerial coverage optimization in precision\
    \ agriculture management: A musical\nharmony inspired approach. Comput. Electron.\
    \ Agric. 2013, 99, 153–159. [CrossRef]\n115. Remya, S.; Sasikala, R. Performance\
    \ evaluation of optimized and adaptive neuro fuzzy inference system for predictive\
    \ modeling\nin agriculture. Comput. Electr. Eng. 2020, 86, 106718. [CrossRef]\n\
    116. Giusti, E.; Marsili-Libelli, S. A Fuzzy Decision Support System for irrigation\
    \ and water conservation in agriculture. Environ.\nModel. Softw. 2015, 63, 73–86.\
    \ [CrossRef]\n117. Papageorgiou, E.; Markinos, A.; Gemtos, T. Fuzzy cognitive\
    \ map based approach for predicting yield in cotton crop production\nas a basis\
    \ for decision support system in precision agriculture application. Appl. Soft\
    \ Comput. 2011, 11, 3643–3657. [CrossRef]\nSensors 2021, 21, 6910\n32 of 34\n\
    118. Dilkhush Mihirsen, D.; Joseph, J.T.; Renisha, B. Time Series Analysis for\
    \ Supply Chain Planning in Restaurants. In Proceedings of\nthe International Conference\
    \ on Computing, Communication and Security, Patna, India, 14–16 October 2020;\
    \ pp. 1–5.\n119. Sadati, N.; Chinnam, R.B.; Nezhad, M.Z. Observational data-driven\
    \ modeling and optimization of manufacturing processes.\nExpert Syst. Appl. 2018,\
    \ 93, 456–464. [CrossRef]\n120. Jonkman, J.; Bloemhof, J.M.; van der Vorst, J.G.;\
    \ van der Padt, A. Selecting food process designs from a supply chain perspective.\n\
    J. Food Eng. 2017, 195, 52–60. [CrossRef]\n121. Ekin, T. Integrated maintenance\
    \ and production planning with endogenous uncertain yield.\nReliab. Eng. Syst.\
    \ Saf. 2018,\n179, 52–61. [CrossRef]\n122. Graves, S.C. Uncertainty and Production\
    \ Planning. In Planning Production and Inventories in the Extended Enterprise:\
    \ A State of the\nArt Handbook, Volume 1; Springer: New York, NY, USA, 2011; pp.\
    \ 83–101.\n123. Zhang, R.Q.; Wang, M.; Pan, X. New model of the storage location\
    \ assignment problem considering demand correlation pattern.\nComput. Ind. Eng.\
    \ 2019, 129, 210–219. [CrossRef]\n124. Baldi, M.M.; Manerba, D.; Perboli, G.;\
    \ Tadei, R. A Generalized Bin Packing Problem for parcel delivery in last-mile\
    \ logistics.\nEur. J. Oper. Res. 2019, 274, 990–999. [CrossRef]\n125. Huang, K.;\
    \ Ardiansyah, M.N. A decision model for last-mile delivery planning with crowdsourcing\
    \ integration. Comput. Ind.\nEng. 2019, 135, 898–912. [CrossRef]\n126. Mummoorthy,\
    \ A.; Mohanasundaram, R.; Saraff, S.; Arun, R. Fleet Management and Vehicle Routing\
    \ in Real Time Using Parallel\nComputing Algorithms. In Soft Computing and Signal\
    \ Processing; Wang, J., Reddy, G.R.M., Prasad, V.K., Reddy, V.S., Eds. Springer:\n\
    Singapore, 2019; pp. 263–270.\n127. Goel, R.; Maini, R. A hybrid of ant colony\
    \ and ﬁreﬂy algorithms (HAFA) for solving vehicle routing problems. J. Comput.\
    \ Sci.\n2018, 25, 28–37. [CrossRef]\n128. Goel, R.; Maini, R. A survey of machine\
    \ learning techniques for food sales prediction. Artif. Intell. Rev. 2018, 52,\
    \ 441–447.\n129. Baryannis, G.; Dani, S.; Antoniou, G. Predicting supply chain\
    \ risks using machine learning: The trade-off between performance\nand interpretability.\
    \ Future Gener. Comput. Syst. 2019, 101, 993–1004. [CrossRef]\n130. Baryannis,\
    \ G.; Dani, S.; Validi, S.; Antoniou, G. Decision Support Systems and Artiﬁcial\
    \ Intelligence in Supply Chain Risk\nManagement. In Revisiting Supply Chain Risk;\
    \ Springer: Cham, Switzerland, 2019; pp. 53–71.\n131. Baryannis, G.; Validi, S.;\
    \ Dani, S.; Antoniou, G. Supply chain risk management and artiﬁcial intelligence:\
    \ state of the art and\nfuture research directions. Int. J. Prod. Res. 2019, 57,\
    \ 2179–2202. [CrossRef]\n132. Morris, S.; Conn Welch, K.; Schroeder, M. Inventory\
    \ Management of the Refrigerator’s Produce Bins Using Classiﬁcation\nAlgorithms\
    \ and Hand Analysis. In Proceedings of the IEEE SoutheastCon 2021, Virtual Conference,\
    \ 10–14 March 2021; pp. 1–8.\n133. Runzel, M.A.S.; Hassler, E.E.; Rogers, R.E.L.;\
    \ Formato, G.; Cazier, J.A. Designing a Smart Honey Supply Chain for Sustainable\n\
    Development. IEEE Consum. Electron. Mag. 2021, 10, 69–78. [CrossRef]\n134. Kudo,\
    \ T. A Proposal for Article Management Method Using Wearable Camera. Procedia\
    \ Comput. Sci. 2020, 176, 1338–1347.\n[CrossRef]\n135. Xu, L.; Kamat, V.R.; Menassa,\
    \ C.C.\nAutomatic extraction of 1D barcodes from video scans for drone-assisted\
    \ inventory\nmanagement in warehousing applications. Int. J. Logist. Res. Appl.\
    \ 2018, 21, 243–258. [CrossRef]\n136. Gunawardena, D.; Sarathchandra, K. BestDish:\
    \ A Digital Menu and Food Item Recommendation System for Restaurants in the\n\
    Hotel Sector. In Proceedings of the International Conference on Image Processing\
    \ and Robotics, Abu Dabi, United Arab Emirates,\n25–28 October 2020; pp. 1–7.\n\
    137. Chiciudean, G.O.; Harun, R.; Ilea, M.; Chiciudean, D.I.; Arion, F.H.; Ilies,\
    \ G.; Muresan, I.C. Organic Food Consumers and\nPurchase Intention: A Case Study\
    \ in Romania. Agronomy 2019, 9, 145. [CrossRef]\n138. Priore, P.; Ponte, B.; Rosillo,\
    \ R.; de la Fuente, D. Applying machine learning to the dynamic selection of replenishment\
    \ policies in\nfast-changing supply chain environments. Int. J. Prod. Res. 2019,\
    \ 57, 3663–3677. [CrossRef]\n139. Tangtisanon, P. Web Service Based Food Additive\
    \ Inventory Management with Forecasting System. In Proceedings of the 2018\n3rd\
    \ International Conference on Computer and Communication Systems (ICCCS), Nagoya,\
    \ Japan, 27–30 April 2018; pp. 448–452.\n140. Maihami, R.; Govindan, K.; Fattahi,\
    \ M. The inventory and pricing decisions in a three-echelon supply chain of deteriorating\n\
    items under probabilistic environment. Transp. Res. Part E Logist. Transp. Rev.\
    \ 2019, 131, 118–138. [CrossRef]\n141. Cevallos-Torres, L.; Botto-Tobar, M. Case\
    \ Study: Probabilistic Estimates in the Application of Inventory Models for Perishable\n\
    Products in SMEs. In Problem-Based Learning: A Didactic Strategy in the Teaching\
    \ of System Simulation; Springer: Cham, Switzerland,\n2019; pp. 123–132.\n142.\
    \ Zhang, Y.; Hua, G.; Wang, S.; Zhang, J.; Fernandez, V. Managing demand uncertainty:\
    \ Probabilistic selling versus inventory\nsubstitution. Int. J. Prod. Econ. 2018,\
    \ 196, 56–67. [CrossRef]\n143. Shen, L.; Li, F.; Li, C.; Wang, Y.; Qian, X.; Feng,\
    \ T.; Wang, C. Inventory Optimization of Fresh Agricultural Products Supply Chain\n\
    Based on Agricultural Superdocking. J. Adv. Transp. 2020, 2020, 1–13. [CrossRef]\n\
    144. Fathi, M.; Nourmohammadi, A.; Ghobakhloo, M.; Youseﬁ, M. Production Sustainability\
    \ via Supermarket Location Optimization\nin Assembly Lines. Sustainability 2020,\
    \ 12, 4728. [CrossRef]\n145. Liu, Y.; Ma, X.; Shu, L.; Hancke, G.P.; Abu-Mahfouz,\
    \ A.M. From Industry 4.0 to Agriculture 4.0: Current Status, Enabling\nTechnologies,\
    \ and Research Challenges. IEEE Trans. Ind. Inform. 2021, 17, 4322–4334. [CrossRef]\n\
    Sensors 2021, 21, 6910\n33 of 34\n146. Araujo, S.O.; Peres, R.S.; Barata, J.;\
    \ Lidon, F.; Ramalho, J.C. Characterising the Agriculture 4.0 Landscape—Emerging\
    \ Trends,\nChallenges and Opportunities. Agronomy 2021, 11, 667. [CrossRef]\n\
    147. Moysiadis, T.; Adamides, G.; Stylianou, A.; Zotos, N.; Giannakopoulou, M.;\
    \ Alexiou, G. Use of IoT technologies for irrigation\nand plant protection: the\
    \ case for Cypriot fruits and vegetables. In Bio-Economy and Agri-Production;\
    \ Bochtis, D., Achillas, C.,\nBanias, G., Lampridi, M., Eds.; Academic Press:\
    \ Cambridge, MA, USA, 2021; pp. 175–194.\n148. Serazetdinova, L.; Garratt, J.;\
    \ Baylis, A.; Stergiadis, S.; Collison, M.; Davis, S. How should we turn data\
    \ into decisions in AgriFood?\nJ. Sci. Food Agric. 2019, 99, 3213–3219. [CrossRef]\n\
    149. Brewster, C.; Roussaki, I.; Kalatzis, N.; Doolin, K.; Ellis, K. IoT in Agriculture:\
    \ Designing a Europe-Wide Large-Scale Pilot.\nIEEE Commun. Mag. 2017, 55, 26–33.\
    \ [CrossRef]\n150. Garcia, S.; Luengo, J.; Herrera, F. Data Preprocessing in Data\
    \ Mining; Springer: Cham, Switzerland, 2015.\n151. Chefrour, A. Incremental supervised\
    \ learning: Algorithms and applications in pattern recognition. Evol. Intell.\
    \ 2019, 12, 97–112.\n[CrossRef]\n152. Wu, Y.; Chen, Y.; Wang, L.; Ye, Y.; Liu,\
    \ Z.; Guo, Y.; Fu, Y. Large Scale Incremental Learning. In Proceedings of the\
    \ IEEE/CVF\nConference on Computer Vision and Pattern Recognition, Long Beach,\
    \ CA, USA, 15–20 June 2019.\n153. Castro, F.M.; Marin-Jimenez, M.J.; Guil, N.;\
    \ Schmid, C.; Alahari, K. End-to-End Incremental Learning. In Proceedings of the\n\
    European Conference on Computer Vision (ECCV), Munich, Germany, 8–14 September\
    \ 2018.\n154. Ditzler, G.; Roveri, M.; Alippi, C.; Polikar, R. Learning in Nonstationary\
    \ Environments: A Survey. IEEE Comput. Intell. Mag. 2015,\n10, 12–25. [CrossRef]\n\
    155. Polikar, R.; Upda, L.; Upda, S.; Honavar, V. Learn++: an incremental learning\
    \ algorithm for supervised neural networks.\nIEEE Trans. Syst. Man Cybern. Part\
    \ C (Appl. Rev.) 2001, 31, 497–508. [CrossRef]\n156. Agarwal, S.; Rattani, A.;\
    \ Chowdary, C.R. AILearn: An Adaptive Incremental Learning Model for Spoof Fingerprint\
    \ Detection.\narXiv 2020, arXiv:2012.14639.\n157. Goodman, B.; Flaxman, S. European\
    \ Union Regulations on Algorithmic Decision-Making and a “Right to Explanation”.\
    \ AI Mag.\n2017, 38, 50–57. [CrossRef]\n158. Castelvecchi, D. Can we open the\
    \ black box of AI? Nature 2016, 538. [CrossRef]\n159. Gunning, D.; Aha, D. DARPA’s\
    \ Explainable Artiﬁcial Intelligence (XAI) Program. AI Mag. 2019, 40, 44–58.\n\
    160. Barredo Arrieta, A.; Díaz-Rodríguez, N.; Del Ser, J.; Bennetot, A.; Tabik,\
    \ S.; Barbado, A.; Garcia, S.; Gil-Lopez, S.; Molina, D.;\nBenjamins, R.; et al.\n\
    Explainable Artiﬁcial Intelligence (XAI): Concepts, taxonomies, opportunities\
    \ and challenges toward\nresponsible AI. Inf. Fusion 2020, 58, 82–115. [CrossRef]\n\
    161. Wolpert, D.H.; Macready, W.G. No free lunch theorems for optimization. IEEE\
    \ Trans. Evol. Comput. 1997, 1, 67–82. [CrossRef]\n162. Osaba, E.; Villar-Rodriguez,\
    \ E.; Del Ser, J.; Nebro, A.J.; Molina, D.; LaTorre, A.; Suganthan, P.N.; Coello\
    \ Coello, C.A.; Herrera, F.\nA Tutorial On the design, experimentation and application\
    \ of metaheuristic algorithms to real-World optimization problems.\nSwarm Evol.\
    \ Comput. 2021, 64, 100888. [CrossRef]\n163. Hutter, F.; Kotthoff, L.; Vanschoren,\
    \ J. (Eds.)\nAutomated Machine Learning:\nMethods, Systems, Challenges; Springer:\n\
    Berlin/Heidelberg, Germany, 2018.\n164. Zimmer, L.; Lindauer, M.; Hutter, F. Auto-PyTorch\
    \ Tabular: Multi-Fidelity MetaLearning for Efﬁcient and Robust AutoDLL.\narXiv\
    \ 2020, arXiv:2006.13799.\n165. Angarita-Zapata, J.S.; Masegosa, A.D.; Triguero,\
    \ I. General-Purpose Automated Machine Learning for Transportation: A Case\nStudy\
    \ of Auto-sklearn for Trafﬁc Forecasting. In Information Processing and Management\
    \ of Uncertainty in Knowledge-Based Systems;\nLesot, M.J., Vieira, S., Reformat,\
    \ M.Z., Carvalho, J.P., Wilbik, A., Bouchon-Meunier, B., Yager, R.R., Eds.; Springer:\
    \ Cham,\nSwitzerland, 2020; pp. 728–744.\n166. Li, Z.; Guo, H.; Wang, W.M.; Guan,\
    \ Y.; Barenji, A.V.; Huang, G.Q.; McFall, K.S.; Chen, X. A Blockchain and AutoML\
    \ Approach for\nOpen and Automated Customer Service. IEEE Trans. Ind. Inform.\
    \ 2019, 15, 3642–3651. [CrossRef]\n167. Zeid, A.; Sundaram, S.; Moghaddam, M.;\
    \ Kamarthi, S.; Marion, T. Interoperability in Smart Manufacturing: Research Challenges.\n\
    Machines 2019, 7, 21. [CrossRef]\n168. Bhatia, M.; Ahanger, T.A. Intelligent decision-making\
    \ in Smart Food Industry: Quality perspective. Pervasive Mob. Comput. 2021,\n\
    72, 101304. [CrossRef]\n169. Burns, T.; Cosgrove, J.; Doyle, F. A Review of Interoperability\
    \ Standards for Industry 4.0. Procedia Manuf. 2019, 38, 646–653.\n[CrossRef]\n\
    170. Nilsson, J.; Sandin, F. Semantic Interoperability in Industry 4.0: Survey\
    \ of Recent Developments and Outlook. In Proceedings of\nthe IEEE International\
    \ Conference on Industrial Informatics (INDIN), Porto, Portugal, 18–20 July 2018;\
    \ pp. 127–132.\n171. Wang, X.V.; Wang, L.; Givehchi, M. ICMS: A Cloud-Based System\
    \ for Production Management. In Advances in Production\nManagement Systems: Innovative\
    \ Production Management Towards Sustainable Growth; Umeda, S., Nakano, M., Mizuyama,\
    \ H.,\nHibino, H., Kiritsis, D., von Cieminski, G., Eds.; Springer: Cham, Switzerland,\
    \ 2015; pp. 444–451.\n172. Lu, Y.; Xu, X.; Xu, J. Development of a Hybrid Manufacturing\
    \ Cloud. J. Manuf. Syst. 2014, 33, 551–566. [CrossRef]\n173. Li, B.; Chai, X.;\
    \ Hou, B.; Zhang, L.; Zhou, J.; Liu, Y. New Generation Artiﬁcial Intelligence-Driven\
    \ Intelligent Manufacturing\n(NGAIIM). In Proceedings of the 2018 IEEE SmartWorld,\
    \ Ubiquitous Intelligence Computing, Advanced Trusted Computing,\nScalable Computing\
    \ Communications, Cloud Big Data Computing, Internet of People and Smart City\
    \ Innovation (Smart-\nWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Guangzhou, China,\
    \ 8–12 October 2018; pp. 1864–1869.\nSensors 2021, 21, 6910\n34 of 34\n174. Perez-Pons,\
    \ M.E.; Plaza-Hernández, M.; Alonso, R.S.; Parra-Domínguez, J.; Prieto, J. Increasing\
    \ Proﬁtability and Monitoring\nEnvironmental Performance: A Case Study in the\
    \ Agri-Food Industry through an Edge-IoT Platform. Sustainability 2021, 13, 283.\n\
    [CrossRef]\n175. Zhang, J.; Qu, X.; Sangaiah, A.K. A Study of Green Development\
    \ Mode and Total Factor Productivity of the Food Industry Based\non the Industrial\
    \ Internet of Things. IEEE Commun. Mag. 2018, 56, 72–78. [CrossRef]\n176. Alonso,\
    \ R.S.; Sittón-Candanedo, I.; García, Ó.; Prieto, J.; Rodríguez-González, S. An\
    \ intelligent Edge-IoT platform for monitoring\nlivestock and crops in a dairy\
    \ farming scenario. Ad Hoc Netw. 2020, 98, 102047. [CrossRef]\n177. Chalapathi,\
    \ G.S.S.; Chamola, V.; Vaish, A.; Buyya, R. Industrial Internet of Things (IIoT)\
    \ Applications of Edge and Fog Computing: A\nReview and Future Directions; Springer:\
    \ Cham, Switzerland, 2021; pp. 293–325.\n178. Kumar, N.; Rodrigues, J.J.P.C.;\
    \ Guizani, M.; Choo, K.K.R.; Lu, R.; Verikoukis, C.; Zhong, Z. Achieving Energy\
    \ Efﬁciency and\nSustainability in Edge/Fog Deployment. IEEE Commun. Mag. 2018,\
    \ 56, 20–21. [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/21/20/6910/pdf?version=1634723940
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Taxonomy of Food Supply Chain Problems from a Computational Intelligence
    Perspective
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s13593-011-0002-8
  analysis: '>'
  authors:
  - Mohamed-Mahmoud Ould-Sidi
  - Françoise Lescourret
  citation_count: 22
  full_citation: '>'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Agronomy for Sustainable
    Development Article Model-based design of integrated production systems: a review
    Review Paper Published: 16 March 2011 Volume 31, pages 571–588, (2011) Cite this
    article Download PDF Access provided by University of Nebraska-Lincoln Agronomy
    for Sustainable Development Aims and scope Submit manuscript Mohamed-Mahmoud Ould-Sidi
    & Françoise Lescourret  642 Accesses 19 Citations Explore all metrics Abstract
    Pest resistance and water pollution are major issues caused by the excessive use
    of pesticides in intensive agriculture. The concept of integrated production system
    (IPS) has been thus designed to solve those issues and also to meet the need for
    better food quality and production. Methodologies such as agronomic diagnosis-based
    design, prototyping, and model-based design have been developed. Here we review
    the model-based design of IPS. We identify tools for the development of comprehensive
    models. Once comprehensive models have been developed, model-based design of IPS
    can be formulated as an optimization problem to be solved using different approaches.
    Thus, we review the choice of corresponding criteria, constraints, and mathematical
    formulations found in the literature. We analyze successful model-based design
    in transportation and drug development. We learn from these areas to overcome
    the inherent difficulties involved in the model-based design of IPS. We recommend
    the following major points: IPS model-based design should use integrative modeling
    platforms, process-oriented modeling, and object-oriented techniques to improve
    the genericity, modularity, reuse of crop models, and the data sharing. The spatial
    dimension of IPS has to be accounted for by making crop models spatially explicit.
    The design evaluation criteria have to be standardized and carefully chosen by
    promoting stakeholders involvement. The design of IPS should be formulated as
    a multiobjective optimization problem, for which non-aggregative approaches should
    be preferred. Finally, it is necessary to establish a true dialogue between prototyping
    and model-based design practitioners in order to test, and if necessary to improve,
    the proposed systems. Similar content being viewed by others What if precision
    agriculture is not profitable?: A comprehensive analysis of the right timing for
    exiting, taking into account different entry options Article Open access 17 February
    2024 Perspectives of Operational Research for Modeling and Analysis of Agricultural
    Production Systems Chapter © 2023 Strategic Short Note: Transforming Controlled
    Environment Plant Production Toward Circular Bioeconomy Systems Chapter © 2023
    Contents 1. Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . .
    . . . 2 1.1. Alternatives to pesticides are required . . . . . . . . . . 2 1.2.
    Context of integrated protection and emergence of integrated production . . .
    . . . . . . . . . . . . . . . . . . . 2 1.3. Model-based design of integrated
    production systems versus other approaches . . . . . . . . . . . . . . . . . .
    . 2 1.4. Model-based design of integrated production systems: the multi-criteria
    aspects . . . . . . . . . . . . . . . . . . . 3 1.5. Paper focus and organization
    . . . . . . . . . . . . . . . . . 3 2. Model-based design of integrated production
    systems: brief overview of the elements involved . . . . . . . . . . . 4 2.1.
    Modeling crops, pests, and cropping systems . . . . 4 2.1.1. Crop models . . .
    . . . . . . . . . . . . . . . . . . . . . . 4 2.1.2. Cultural practices modeling
    . . . . . . . . . . . . . 4 2.1.3. Pest models and pest control models . . . .
    . . 4 2.1.4. Model spatialization . . . . . . . . . . . . . . . . . . . 5 2.1.5.
    Models for genetic improvement . . . . . . . . . 6 2.2. Databases and models for
    climate prediction . . . . . 7 2.2.1. Databases . . . . . . . . . . . . . . .
    . . . . . . . . . . . . 7 2.2.2. Models for climate prediction . . . . . . . .
    . . . 7 2.3. Simulation and model qualities . . . . . . . . . . . . . . . 7 2.4.
    Evaluation methods and optimization algorithms . 8 3. Model-based design of integrated
    production systems: examples, comparison to other fields, and critical analysis
    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 3.1. Examples
    of model-based design . . . . . . . . . . . . . . 9 3.1.1. Approaches for the
    development of decision rules . . . . . . . . . . . . . . . . . . . . . . . .
    . . . . . . . 9 3.1.2. Approaches using optimal control formulations . . . . .
    . . . . . . . . . . . . . . . . . . . . . . . . 10 3.1.3. Approaches for more
    elaborated formulations . . . . . . . . . . . . . . . . . . . . . . . . . . .
    . . 10 3.2. Comparison to other domains and critical analysis . . . . . . . .
    . . . . . . . . . . . . . . . . . . . 12 4. Efficiency of model-based design .
    . . . . . . . . . . . . . . 13 4.1. Modeling . . . . . . . . . . . . . . . . .
    . . . . . . . . . . . . . 13 4.2. Design: criteria choice, optimization, evaluation
    . 14 4.3. Choice and dissemination . . . . . . . . . . . . . . . . . . 14 5. References
    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 1 Introduction
    1.1 Alternatives to pesticides are required Several authors attribute the spectacular
    increase of agricultural production in the second half of the twentieth century
    to the excessive use of products resulting from chemical synthesis (Kropff et
    al. 2001; Glendining et al. 2009). Intensive agriculture is considered by politicians
    as one of the greatest sources of pollution and has led to major environmental
    problems that affect global sustainability. Today, farmers must comply with an
    increasing number of regulations, especially concerning the use of pesticides.
    Within this context, the requirements of food quality and of regularity of production
    force us to consider all the possible alternatives for limiting the development
    of pests while ensuring economic and environmental sustainability. 1.2 Context
    of integrated protection and emergence of integrated production The development
    of pest resistance and the negative environmental impacts of pesticides are some
    of the serious problems caused by the excessive use of pesticides. They have motivated
    the development of new system approaches and techniques in pest management (Kropff
    et al. 2001). Approaches have changed from the exclusion or destruction of pests
    by an intensive use of pesticides to the use of alternative control methods that
    involve many interlinked components within the agroecosystem. According to Boller
    et al. (2004), experts have distinguished four steps in the development of plant
    protection. The first one is blind chemical control characterized by routine applications
    of the most powerful pesticides, following industrial recommendations. The second
    one is integrated chemical control consisting of the applications of broad-spectrum
    pesticides, in general, after consultation with an advisory service. The third
    one is specific control based on the introduction of the concept of “economic
    threshold levels” and the application of pesticides with no negative side effects
    and the protection of beneficial organisms. Integrated pest management is the
    last step. In addition to the third step, it integrates biological and biotechnical
    methods and good agricultural practices while severely restricting the use of
    chemical products (Boller et al. 2004). According to Walton et al. (1995), “Integrated
    Pest Management (IPM) is a pest management system that in the socioeconomic context
    of cropping systems, the associated environment and the population dynamics of
    the pest species, utilizes all suitable techniques in as compatible manner as
    possible and maintains the pest population levels below those causing economic
    injury.”. Integrated pest management is simply one step in a more ambitious and
    holistic approach, i.e., integrated production. According to the IOBC definition:
    “Integrated Production/Farming is a farming system that produces high quality
    food and other products by using natural resources and regulating mechanisms to
    replace polluting inputs and to secure sustainable farming.” The design of innovative
    farming systems or cropping systems, as they are most often referred to in the
    literature, that address the problems of integrated production has now become
    an important international issue (Gary 2004; Tixier et al. 2008). 1.3 Model-based
    design of integrated production systems versus other approaches The design of
    innovative cropping systems is a very difficult problem (Antonopoulou 2003). It
    generally starts with an evaluation phase of the existing systems. Innovation
    can then focus on improving system management or on its partial or total reconfiguration
    (Loyce and Wery 2006). According to Loyce and Wery (2006), the design of innovative
    cropping systems may be divided into three stages. The first one is the definition
    of a set of constraints and objectives for the systems to be built. The evaluation
    of existing cropping systems in the area studied and the analysis of farm performance
    and of farmers’ practices constitute fundamental approaches to provide the elements
    necessary to this phase. The second stage is the determination of combinations
    of innovative techniques or innovative crop successions. This stage is the design
    stage in the strict sense of the term and can be achieved based on agronomic diagnosis,
    on experts’ statements, or on models. The in situ or in silico evaluation of candidate
    combinations constitutes the third stage. We can add a fourth stage during which,
    based on the evaluation results, one or a few “potentially innovative” cropping
    systems are selected and disseminated. In this section, we focus our investigation
    on the design task. The agronomic diagnosis may be considered as the basis for
    the improvement of cropping systems. It allows us to identify risky production
    situations, to recognize the main factors that limit performance, and, thus, to
    identify the technical choices that make it possible to deal with these situations.
    However, the diagnosis is generally achieved only over a few years, the range
    of explored techniques is almost always limited to a particular region, and diagnosis
    is generally based on a small number of criteria. Diagnosis must therefore rely
    on complementary knowledge in order to be able to imagine the consequences of
    the proposed improvements with additional criteria and to achieve more complete
    proposals for innovative cropping systems (Loyce and Wery 2006). The “prototyping
    method” (Vereijken 1997) is advocated as an expert-based design approach. It is
    based on three steps: (1) construction by the experts of a cropping system, a
    “theoretical prototype”, satisfying a set of constraints and objectives; (2) experimental
    evaluation of this prototype in several situations representative of the constraints
    set; and (3) adaptation of this prototype based on the multicriteria assessment
    of the experimental results. Several iterations between the second and third phases
    result in an “engineering prototype” that can then be extensively tested or serve
    as a basis for the second phase of prototyping. This method can be very effective
    for promoting interdisciplinarity among researchers and for involving farmers
    from the start in a context where models are not available. However, prototyping
    has several drawbacks. First, the need for consensus on one or several prototypes
    may overlook many innovative combinations. Second, climate variability and other
    associated risks are difficult to take into account for each of the three phases
    mentioned above. Finally, the formalization and transparency of the design process
    are not always clear, making the process difficult for other experts to analyze
    (Loyce and Wery 2006). Field experimentation is very costly and time-consuming
    (Chatelin et al. 2007). Modeling is becoming increasingly more effective and useful
    with the advent of more powerful computers. Computer simulation models for agroecosystems
    are a representation or an abstract of reality, expressed in mathematical and
    logical terms. As such, they can never fully represent reality and are imperfect.
    Their use, however, has many advantages. These include manipulations and experiments
    that would be impractical, too expensive, too lengthy, or impossible in the real
    world, in addition to the identification of complex interactions in the real systems,
    rapid identification of the best management strategies, evaluation of the long-term
    effects of options, and investigation of hypothetical situations such as climate
    change (Mayer 2002). The use of models for designing integrated production systems
    (IPS) appears to be appropriate. According to Dogliotti et al. (2004), this approach
    may be considered as the adaptation and improvement of the prototyping approach
    (Dogliotti et al. 2004). Model-based design includes a development phase followed
    by an evaluation phase. The experiment, which is an essential component of the
    design and evaluation in the prototyping approach, has a very different role here.
    It comes after the “design”-in silico evaluation phases to confirm the relevance
    of the systems selected by the model, to test their robustness under various environmental
    conditions, and, finally, to assess their feasibility and therefore the relevance
    of the choice and dissemination of such systems (Loyce and Wery 2006; Blazy et
    al. 2010). 1.4 Model-based design of integrated production systems: the multi-criteria
    aspects Model-based design of IPS is faced with two major problems: exploring
    sustainability objectives of cropping systems and evaluating them. On the one
    hand, the full decision space of these objectives is usually very large, and simplifications
    are necessary to ensure computational feasibility (deVoil et al. 2006). On the
    other hand, evaluation, a very important task with respect to the implementation
    of integrated production systems, requires both the integration of a large quantity
    of information regarding economic, social, and environmental objectives and the
    treatment of conflicting aspects of these objectives as a function of the views
    and opinions of the individuals involved in the design process (Sadok et al. 2008).
    Multiobjective evaluation methods may be useful for discussion on tradeoffs between
    these conflicting objectives (Sadok et al. 2008). The design of integrated production
    systems must therefore be studied as a typical multi-criteria decision-making
    problem that could be handled by multiobjective optimization techniques. 1.5 Paper
    focus and organization This paper deals with the model-based design of integrated
    production systems. In the next section, we give a brief description of the necessary
    elements for this kind of design. We critically review the literature related
    to each of these elements in “Model-based design of integrated production systems:
    brief overview of the elements involved”. The section “Model-based design of integrated
    production systems: examples, comparison to other fields, and critical analysis”
    presents the design step itself and includes some examples of model-based design.
    Critical analysis and comparison between integrated production systems and other
    systems such as transportation and drug design are included in this section. In
    “Efficiency of model-based design”, we discuss the future of model-based design
    and the challenges to be overcome to make it more reliable. 2 Model-based design
    of integrated production systems: brief overview of the elements involved Agroecosystems
    are composed of many interacting entities, i.e., soil, cultivated plants, other
    biotic elements, and the environment, managed by the farmer (Fig. 1). These entities
    each behave in a certain way and form the system dynamics; the overall behavior
    emerges from the interaction between these entities (Dore et al. 2006; Akplogan
    et al. 2009). Many models and support tools are required to represent this inherent
    complexity and the different time and space scales of system operation. In this
    section, we attempt to list the most necessary models and tools for the model-based
    design of IPS. Crop models describing the growth and development of plants, models
    for simulating the effects of farmers’ management practices, models for predicting
    the emergence of pests, for evaluating their impacts, and for controlling them,
    models for genetic improvement of cultivated plants, and models for climate prediction
    are required. Model-based design also requires databases that describe field experiments,
    weather, soil characteristics, plant genotypes, pests, natural enemies, and economic
    data. Efficient multicriteria evaluation methods and powerful multiobjective optimization
    algorithms are also needed for the model-based design of IPS (Fig. 2). Fig. 1
    Agroecosystem complexity under the influence of cropping systems Full size image
    Fig. 2 Necessary materials for model-based design of integrated production systems.
    GIS, Geographic Information System Full size image 2.1 Modeling crops, pests,
    and cropping systems 2.1.1 Crop models Many researchers have developed crop models
    since the pioneering works of the De Wit school at Wageningen University (Bouman
    et al. 1996; van Ittersum et al. 2003). These models may be divided into two main
    types: biophysical and decision models. The biophysical models represent the evolution
    of cultivated plants and describe the dynamic interactions between soil, plants,
    and the environment. Depending on the goals, a wide variety of biophysical models
    exist, ranging from conceptual models to develop understanding to more complex
    biophysical models such as STICS (Brisson et al. 2003), APSIM (Keating et al.
    2003), CropSyst (Stockle et al. 2003), and DSSAT (Jones et al. 2003). The biophysical
    models provide useful indicators for decision models. The decision models describe
    the farmers’ decision-making process dynamics in broad terms of crop evolution,
    including pests and climate (Crespo 2006). They are defined as the conceptual
    models of farmers’ management and organizational practices, taking constraints
    into account and generating adequate actions. Examples include OTELO (Attonaty
    et al. 1990), DECIBLE (Aubry et al. 1998), MODERATO (Bergez et al. 2001), and
    DIESE (Martin-Clouaire and Rellier 2009). 2.1.2 Cultural practices modeling Management
    practices constitute the fundamental ingredient of farmers’ decisions and have
    direct and indirect impacts on plants and pests. They influence soil, plant, and
    pest status and, as a result, agronomic and environmental crop performances, but
    they are influenced by work organization and the social and economic context (Nesme
    et al. 2009). Their modeling is an important element in the model-based design
    approach of IPS. However, these practices are often empirically modeled in the
    case of most crop models even if researchers have extensively studied management
    practices, leading to little conceptual insight. This is due in part to the difficulty
    in describing these practices and their impact on the biophysical system since
    they have multiple and prolonged consequences on the crop system dynamics (Bergez
    et al. 2010). 2.1.3 Pest models and pest control models Few crop models integrate
    pests (Bergez et al. 2010). Among four of the best known and most commonly used
    crop models, namely STICS, APSIM, CropSyst, and DSSAT, only DSSAT explicitly takes
    pests into consideration. However, pest occurrence, plant performance, and plant
    damage caused by pests constitute the key elements of integrated production systems.
    Accordingly, the whole model-based design approach should rely on the modeling
    of the interaction between plants and pests (Kropff et al. 1995). Even if agronomists
    have ignored it, much research has been conducted on the biotic component of agroecosystems,
    and many researchers have proposed pest models. The approaches used range from
    knowledge representation formalisms such as expert systems to discrete events
    systems formalisms, including Lotka–Volterra predator–prey models. A number of
    these models have been developed for the identification of beneficial insects
    and pests and may be used for prevention purposes. Expert systems proposed by
    Mahaman et al. (2003) and by Gonzalez-Andujar (2009) belong to this category (Mahaman
    et al. 2003; Gonzalez-Andujar 2009). In addition, in order to quantify pest damage,
    models ranging from empirical functions that ignore the dynamics of crop–pest
    interactions to mechanistic simulation models that integrate the dynamics of a
    pest over the season have been proposed (Kropff et al. 1995). Other models have
    been dedicated to the development of pest management strategies. Munier-Jolain
    et al. (2005) and Colbach et al. (2007) developed DECID’Herb and ALOMYSYS, respectively,
    for weed control in crop production using empirical functions and a fuzzy logic
    expert system (Munier-Jolain et al. 2005; Colbach et al. 2007). Jerry and Gouzé
    (2004) and Mailleret and Grognard (2009) studied biological control problems using
    predator–prey models (see “Examples of model-based design”). Others researchers
    go further by taking the impacts of pest control on predators and beneficial insects
    into account. These works are essentially based on the Lotka–Volterra models.
    For example, Hall and Lescourret (2008) proposed a model of plant–pest–predator
    interactions with threshold control based on the biomass flow from plant to pest
    to predator. The objective of this study was to distinguish situations in which
    the application of control measures can disrupt the control of pests by predators
    (Hall and Lescourret 2008). Other less familiar modeling approaches have also
    been used for the development of pest management strategies. Thus, Leger and Naud
    (2009) proposed an expert-based IPM solution designed by a team of phytopathologist
    experts. They modeled the decision process by means of statecharts that belong
    to the family of discrete event systems formalisms (Leger and Naud 2009). The
    majority of the cited and available models, except those dealing with identification,
    focus on a single pest, although there is often a complex of pests on plants under
    real conditions. For example, exceptions include Willocquet et al. (2002) who
    proposed a model that simulates yield losses due to several rice pests (sheath
    blight, brown spot, sheath rot, bacterial leaf blight, stem borers, brown plant
    hopper, defoliating insects, and weeds) under a range of specific production situations
    found in tropical Asia. Nevertheless, as Bergez et al. (2010) observed, these
    aspects have not yet been sufficiently studied. 2.1.4 Model spatialization The
    spatial organization of crops could be considered as a management practice insofar
    as it is chosen, decided, and may be adapted by a farmer or by a farmer’s team.
    Spatial organization has a significant effect on pest dynamics that itself has
    a spatial dimension and on the effectiveness of the protection methods carried
    out by farmers. It has an important role to play in the design of IPS and should
    be better taken into account in the model-based design approach. However, most
    crop/pest models have been developed for studying temporal variations of processes
    and habitually ignore their spatial variation, with a few exceptions. The model
    outputs are therefore generally site specific. It is both useful and increasingly
    requested to spatialize models over a region, with wide concomitant heterogeneities
    in soil, climate, and management practices (Hartkamp et al. 1999; Faivre et al.
    2004). In this respect, geographical data series and remote sensing images can,
    if properly used, allow to make models spatially explicit (Lesschen et al. 2007).
    Attempts have been made to take the spatial dimension of environmental and pedoclimatic
    conditions into account. Thus, Roger-Estrade et al. (2009) investigated the role
    of soil structure in the design of new crop management systems and considered
    both the spatial and the temporal variability. Houdart et al. (2009) presented
    a method to assess the potential risks of pesticide pollution at the watershed
    scale within the context of tropical areas with a high diversity of cultures and
    without information on the fate of pesticides in the environment. This method
    is broken down into four steps: surveying practices, determining the pesticide
    load for each field in the watershed, establishing an indicator of pollution,
    and spatializing the indicator (Houdart et al. 2009). Ewers et al. (2005) used
    landscape heterogeneity for the assessment of local biodiversity value within
    a predominantly agricultural landscape. Some researchers have tried to study the
    spatial dispersion and dynamics of pests. Ricci et al. (2009) studied the impact
    of landscape characteristics on the population level of codling moth in commercial
    orchards in the context of IPM using a Geographic Information System (GIS). They
    analyzed variations in the number of larvae using correlation tests and linear
    models (Ricci et al. 2009). The spatial dimension of farmers’ decisions or agricultural
    policies was also investigated. Le Ber et al. (2003) presented the knowledge-based
    system ROSA (Reasoning about Organization of Space in Agriculture) related to
    spatial and functional organization in agriculture. It combines hierarchical classification,
    case-based reasoning techniques, and qualitative spatial reasoning. Domain knowledge
    and cases are modeled with spatial organization graphs and represented within
    a description logic system (Le Ber et al. 2003). Reshmidevi et al. (2009) proposed
    a GIS-integrated fuzzy rule-based inference system for land suitability evaluation
    in agricultural watersheds. Lesschen et al. (2007) proposed a spatialized version
    of a methodology earlier developed to quantify soil nutrient balances at the national
    level in sub-Saharan African countries (Smaling et al. 1993). They developed techniques
    to make the methodology spatially explicit, re-estimated the original regression
    models for the various nutrient flows or replaced them by simple simulation models,
    and assessed the uncertainties of soil nutrient balance estimates. As a result,
    regional differences due to soil and climate variability can be taken into account
    and national soil fertility policies can be better targeted towards the lower
    levels, e.g., district or cooperation region (Lesschen et al. 2007). Major challenges
    lie in achieving the full interactivity of a GIS and a crop/pest model and satisfying
    spatial data requirements while ensuring data quality control using sensitivity
    and uncertainty analysis techniques. Regarding uncertainty especially, on the
    one hand, spatial data have intrinsic uncertainties due to measurement, digitization,
    or interpolation methods. On the other hand, crop/pest models are based on simplifying
    assumptions and produce uncertain outputs. However, models’ outputs are only meaningful
    when they have sufficient accuracy (Hartkamp et al. 1999; Lesschen et al. 2007).
    Users concerned by the reliability and the quality of models’ outputs need to
    know how these error sources interact. Uncertainty analysis techniques allow tracking
    down how uncertainties in the input variables and parameters propagate to the
    models’ outputs. They also have to take cross and spatial correlation between
    the various uncertainties and the scale dependency of uncertainties into account
    (Lesschen et al. 2007). There is still a poor understanding of how up- and down-scaling
    influence error propagation when models are interfaced to GIS (Hartkamp et al.
    1999). More quantitative quality indicators together with spatial statistics and
    uncertainty analysis are needed to improve the value of GIS–modeling interfaces.
    2.1.5 Models for genetic improvement Another important component of the model-based
    design of IPS concerns the genetic improvement of plants. The identification of
    genetic traits of plant tolerance or resistance to biotic stress has an important
    role to play in IPS. Moreover, the strong genotype × environment × management
    interactions in agricultural systems make it necessary to design genotypes that
    are adapted to specific agro-environments. This issue is of increasing interest
    to the crop modeling community. Many researchers have used the approach that consists
    of dissecting plant traits via a model based on physiological mechanisms, which
    describes the development of such traits through environment and genetic conditions—namely,
    by means of genetic coefficients (Boote et al. 2001; Hammer et al. 2002; Quilot-Turion
    and Genard 2009). Such an approach has the potential to interpret and predict
    the performance of individual genotypes under different managements and environments.
    On this basis, such models can be used for evaluating genetic improvement, for
    analyzing past genetic improvement from experimental data, and for proposing plant
    ideotypes for target environments (White and Hoogenboom 2003) using appropriate
    optimization algorithms (see “Comparison to other domains and critical analysis”).
    The values of genetic coefficients are often estimated, i.e., determined by numerical
    methods, and such methods require substantial sets of field data. Data are also
    needed to use the models as previously stated. Thus, linking crop models to extensive
    national and international databases, as it has been done in the SEAMLESS project
    framework with a pan-European integrated database (van Ittersum et al. 2008),
    can help to determine genetic coefficients and to allow an increased level of
    crop model applications for policy related to the design and choice of cultivars.
    2.2 Databases and models for climate prediction 2.2.1 Databases As mentioned above,
    the model-based design of IPS requires well-built databases that describe experiments,
    plant genotypes, pest management practices, weather, and economic profitability.
    Many databases have been developed and have contributed to improving agronomic
    data storage and manipulation. They focus on field crop results (Ulery et al.
    1998), genetic varieties (Haley et al. 1999; Zhang et al. 2002; Halling et al.
    2004; Pruss et al. 2005), fruit orchards (Habib et al. 2001; Plenet et al. 2009),
    or are more comprehensive such as the SEAMLESS databases (van Ittersum et al.
    2008). Despite the advances in documentation and protocols for agronomic data
    exchange and use, mainly due to the work of the ICASA group, the definition of
    a set of standards remains necessary (Hunt et al. 2001). It will contribute to
    improving crop modeling per se since there is a recognized need for standardized
    inputs and outputs, both within the modeling community and for potential model
    end-users. Databases describing pest behaviors, dynamics, and inter-specific competition
    must be developed and shared. 2.2.2 Models for climate prediction Climate prediction
    is very important to determine the conditions of emergence, development, and dissemination
    of pests and plants’ diseases. It is also crucial for all of the decision-makers
    involved, i.e., farmers, input suppliers, traders, marketers, and government agencies,
    since climate variability has an impact on agricultural productivity (Hammer et
    al. 2001). It is therefore necessary to take climate prediction into account for
    the design of IPS. The majority of work done in this area has dealt with the impact
    of climatic conditions and climate on agricultural production and resource availability
    for crops. These studies range from the field level to the continental and global
    scales. Reidsma et al. (2009) thus considered the impact of climatic conditions
    and farm characteristics on maize yield. Guerena et al. (2001) used the outputs
    of a general circulation model and a regional climate model as inputs of crop
    models to predict the impact of climate change and CO2 concentration on crops
    and their water use in Spain. Hammer et al. (2001) outlined the basis for climate
    prediction, focusing on the El Niño phenomenon, and catalogued experiences at
    field, national, and global scales in applying climate predictions to agriculture.
    More attention must be paid to this issue and much work remains to be done in
    order to effectively integrate climatic model parameters into crop/pest models.
    For a successful integration, it is important to take into account not only the
    uncertainty but also the spatial scale of validity of climatic predictions. The
    integration itself is mainly an engineering problem that requires joint efforts
    between modelers and climate prediction developers. 2.3 Simulation and model qualities
    The majority of existing crop models are crop species-oriented and characterized
    by a low scientific transparency and code efficiency mainly due to poor modularity
    and limited reuse and sharing. However, to better integrate the tools and models
    listed above, two main qualities are required from these models: modularity and
    genericity. On the one hand, a modular approach helps to avoid duplication of
    effort by allowing the reuse of standard modules. Muetzelfeldt and Massheder (2003)
    cited various solutions to ensure modularity. They include improved software engineering
    practices for implementing models in conventional programming languages, e.g.,
    FSE: base of the DSSAT, APSIM, simulation languages for models based on sets of
    differential–algebraic equations, e.g., DYNAMO, visual modeling environments based
    on the system dynamics paradigm for continuous systems modeling, e.g., POWERSIM,
    and object-oriented/component-based approaches, e.g., MODCOM. They proposed SIMILE,
    a modeling environment that combines system dynamics with object-based paradigms,
    allowing many forms of disaggregation: a clear decomposition of a complex system
    into consistent elementary entities to be handled as well as spatial modeling
    and individual-based modeling (Muetzelfeldt and Massheder 2003). More recently,
    van Ittersum et al. (2008) proposed the SEAMLESS-IF component-based framework
    for the integrated assessment of agricultural systems. They developed an integrated
    framework in which individual knowledge components can be linked through a software
    infrastructure, allowing the use of selected and linked components. Individual
    knowledge components can be biophysical or economic models, databases, or indicators.
    A major interest of this framework is its ability to link and to reuse models
    of different geographical scales and from various domains while guarantying their
    transparency and documentation (Rizzoli et al. 2008; van Ittersum et al. 2008;
    Donatelli et al. 2009). These last two examples illustrate the methodological
    change that can help to overcome many of the drawbacks of existing crop models.
    On the other hand, in order to improve the genericity of crop models, Wang et
    al. (2002) proposed to develop process-oriented models. These models are based
    on common physiological processes and other similarities among crops and the separation
    of code and parameters to facilitate the re-parameterization of the same code
    for various crops. This solution allowed them to design the APSIM-GCROP software
    and to improve the modularity of APSIM (Wang et al. 2002). These principles could
    be applied to other crop/pest models as well. 2.4 Evaluation methods and optimization
    algorithms In studies using model-based design methodologies, there are two omnipresent
    steps: the design or generation of a set of cropping systems and their evaluation
    (deVoil et al. 2006; Loyce and Wery 2006; Bergez et al. 2010). The design of integrated
    production systems is a multicriteria problem since there are many antagonist
    criteria to be satisfied and many constraints to be respected. Therefore, we must
    resort to multiobjective optimization algorithms for the design itself and to
    multi-criteria evaluation techniques to assess the relevance of the cropping systems
    designed. Many multi-criteria evaluation methods have been developed and/or applied
    to assess the robustness of designed cropping systems. They mainly originate from
    the multi-criteria decision-making (MCDM) domain. Research conducted in the MCDM
    domain during the second half of the twentieth century has given us access to
    practical methods for applying scientific decision theoretical approaches to multi-criteria
    problems (Linkov et al. 2004). They include Multi-Attribute Utility Theory (MAUT),
    the outranking procedure represented by the successive ELECTRE versions and PROMETHE
    methods, the mixed methods represented by ORESTE, and the fuzzy methods (Grabisch
    1996). The purpose of all these methods is to allow decision-makers to evaluate
    and choose among alternatives based on tradeoffs between criteria and according
    to their preferences (Linkov et al. 2004; Sadok et al. 2008; Sadok et al. 2009).
    The MAUT algorithm is composed of three main phases: normalization and evaluation
    of the performance of each alternative in terms of its utility, definition of
    the preferential information, i.e., decision-maker’s preferences of each criterion,
    and aggregation using additive, multiplicative operators and ranking of all alternatives.
    The ELECTRE method is based on the outranking relation and comprises three steps:
    construction of the evaluation matrix (alternatives and criteria), calculation
    of the outranking relation, and exploitation of the outranking relation. The final
    ranking has a graphical form and is based on the outranking matrix that includes
    indifference, preference, anti-preference, and incompatibility (Zak 2009). Procedures
    based on outranking have two phases. First, the method uses the extended model
    of decision-maker’s local preferences for individual criteria including indifference,
    weak preference, strong preference, and incompatibility. Second, partial binary
    relationships such as “alternative A is at least as good as alternative B” are
    established for all criteria. ORESTE is a universal multiobjective ranking method
    based on the outranking relation. The ORESTE method algorithm is composed of three
    stages: definition of the input data (alternatives, criteria), construction of
    the global complete pre-order of alternatives, and construction of the global
    partial pre-order of alternatives. The final ranking of alternatives has a graphical
    character and corresponds to the final matrix constructed with the application
    of indifference, preference, and incompatibility relations (Zak 2009). All these
    methods require a fundamental operation known as criteria aggregation or how to
    combine criteria in order to evaluate alternatives. For instance, in MAUT one
    aggregates the individual utility functions, while in ELECTRE one aggregates preference
    relations on pairs of alternatives (Grabisch 1996). The innovation aspect, however,
    was largely focused on the procedure for choosing among alternative solutions
    rather than on the aggregation operation since the most common aggregation tool,
    which is still used today, is the weighted arithmetic mean (Grabisch 1996). There
    has been an increasing interest for fuzzy integrals because of their ability to
    model the interaction between criteria and to overcome the drawbacks of weighted
    sums. Unfortunately, these methods are absent in the agronomic field, whereas
    there are widely used in other domains such as transportation (Grabisch and Labreuche
    2010). For the construction and generation of integrated cropping systems, two
    main approaches may be used. A first one consists of the generation, blindly,
    randomly, or using a complex algorithm, of a large set of strategies, the simulation
    and the evaluation of these strategies, and the application of selection methods
    to choose the best ones. While this method is easy to carry out, it has many drawbacks
    since it may be assumed to be an open loop system: there is no feedback to improve
    the solutions. To address these drawbacks, a second approach is more pragramatic.
    Like the first one, it starts by generating a set of solutions but it attempts
    to improve them iteratively. Using optimization techniques, it focuses on the
    most promising populations within the decision space. The final population of
    solutions will be returned when a stopping criterion, e.g., the number of iterations,
    the objective values, or no improvement, is satisfied. The optimization method
    used for the improvement of the solution population may be control-based or simulation-based.
    The control-based optimization approach is usually used for learning purposes
    when the structure of decision rules, i.e., the control variables involved in
    the rule, has to be determined. Artificial intelligence techniques such as reinforcement
    learning and dynamic programming generally applied to Markov decision problems
    are the most frequently used for this purpose (Bergez et al. 2010). When the structure
    of decision rules is known, the simulation-based approach is the most suitable
    and the most often used. Here, the optimization algorithm attempts to find the
    optimal set of decision rule parameters. The optimization methods used in the
    simulation-based approach case may be divided into methods applied to continuous
    or to discrete decision variables. They include gradient-based optimization methods,
    evolutionary algorithms, simulated annealing, or neural networks (Crespo et al.
    2009). Some of the examples presented in the next section illustrate the use and
    application of the multiobjective optimization and evaluation methods, among others,
    for the model-based design of integrated production systems. 3 Model-based design
    of integrated production systems: examples, comparison to other fields, and critical
    analysis 3.1 Examples of model-based design In this section, we review the recent
    advances in the application of model-based design approaches for the development
    of innovative cropping systems in general and of integrated production systems
    in particular. We present some of the most successful examples of model-based
    design of integrated production systems. We begin by works aimed at the development
    of decision rules for cropping systems management. We then present works based
    on optimal control formulation techniques that usually seek to eliminate the pests.
    Finally, we present works that use more elaborated formulation techniques and
    more efficient optimization techniques such as evolutionary algorithms and simulated
    annealing. 3.1.1 Approaches for the development of decision rules Many researchers
    have studied the possibility of developing decision rules for the management of
    crops/pests and the design of innovative cropping systems. We can distinguish
    two types of approaches. The first one seeks to determine the structure of the
    rule while the second aims to identify the most appropriate rules to be applied
    in the field. Nolot and Debaeke (2003) have proposed a generic procedure that
    corresponds to the first approach by iteratively combining the design of cropping
    systems and the evaluation of their performances. In this approach, the authors
    suggested, after having identified suitable agronomic strategies corresponding
    to a set of criteria and constraints, to translate these strategies into a logical
    set of technical decision rules, to apply and evaluate the rule-based system,
    and to validate or refine the strategy and the rules (Nolot and Debaeke 2003).
    Debaeke et al. (2006) applied this method to the development and testing of rule-based
    crop management systems of sorghum grain under contrasting water regimes in southwestern
    France. The simulation model used was EPIC-Phase, which predicts sorghum yield
    and soil water and N dynamics with reasonable accuracy (Debaeke et al. 2006).
    The same approach was applied by Debaeke et al. (2009) to a range of environmental
    and production contexts in the perspective of integrated crop production prototyping.
    They studied three cropping system experiments in France: Toulouse, Dijon, and
    Versailles. This approach can be considered as hybrid since it relies on models,
    on agronomic background, and on regional references (Debaeke et al. 2009). The
    second approach was used by Tixier et al. (2008) to design sustainable banana-based
    cropping systems. They used SIMBA, a model that simulates interactions between
    banana plants, soil, water, and root nematode populations to assess the yield,
    economic outputs, and environmental risks under a panel of cropping techniques.
    The proposed approach was twofold. First, in order to determine the trends of
    cropping systems performances, the model explored a wide range of decision rules
    by varying the values of their control variables. The authors ranked the cropping
    systems according to the aggregation of evaluation criteria by weighted sum and
    applied an agronomic filter to eliminate the unfeasible systems. They analyzed
    the systems with the best scores to highlight trends. The second step consisted
    of a one-by-one “optimization” of some decision rules by testing different control
    variables to identify the most suitable variables and to precisely determine decision
    rules that should be tested in the field. The evaluation criteria were the gross
    margin and three indicators of potential environmental risks describing water
    exposure to pesticides, erosion, and soil quality. These indicators were based
    on an aggregation of variables using an expert system and fuzzy logic (Tixier
    et al. 2008). The main drawback of the first approach is the lack of information
    on the structure of the decision rules, i.e., which control variables must be
    considered. Efficient methods for learning, in the sense of artificial intelligence,
    are needed to overcome this problem. The model used was very limited since it
    only served evaluation purposes while the design itself was done manually. The
    second approach may be suited to simple systems with small decisional spaces.
    However, it also has some drawbacks including the possibility of losing some good
    strategies due to the filtering techniques and the poor exploration of the decision
    space. 3.1.2 Approaches using optimal control formulations Many researchers have
    used optimal control, a mathematical formulation method, to design integrated
    production systems. This approach is usually used in studies of pest biological
    control and, in general, when the studies focus on IPM techniques. Jerry and Gouzé
    (2004) and Mailleret and Grognard (2009) addressed biological control problems
    in the predator–prey framework and proposed a classical and a general predator–prey
    model with periodic impulsive additions of predators, respectively. These approaches
    consist of finding the optimal initial condition, i.e., the number of predators
    to be introduced at the first release to reduce or to eradicate pests (Jerry and
    Gouzé 2004). Guo and Chen (2009) presented a kind of time-limited pest control
    of a Lotka–Volterra model with impulsive harvest, i.e., withdrawing a number of
    pests from the system at a convenient time, described by the initial and boundary
    value problem of impulsive differential equations. In the majority of these contributions,
    a mathematical analysis of an optimal control problem made it possible to determine
    a necessary and sufficient condition to eradicate the pests (Mailleret and Grognard
    2006; Mailleret and Grognard 2009). Other researchers have used numerical methods
    to solve optimal control problems. Zhang and Swinton (2009) proposed a dynamic
    optimization approach to develop an intra-seasonal dynamic bio-economic optimization
    model for insecticide-based pest management, taking both the biological control
    effect of natural enemies on pest density and the non-target mortality effect
    of insecticides on the level of natural pest control supplied into account. Saphores
    (2000) studied the possibility of spraying a pesticide as a “real option,” using
    a continuous time framework to conveniently analyze the impact of the pest density
    volatility on the timing of pesticide application. The farmer’s decision of applying
    a pesticide was formulated as an optimal sequential stopping problem solved using
    stochastic dynamic programming (Saphores 2000). The mathematical formulation of
    the problem is one of the disadvantages of the optimal control approaches. It
    forces the objective to be quadratic and can barely deal with problem constraints
    in state variables and/or in control variables. Many strong hypotheses are usually
    used in order to facilitate the resolution of such problems. Moreover, such approaches
    usually lead to continuous-time control laws that must be discretized in some
    way to be applied to integrated pest management (Cardoso et al. 2009). 3.1.3 Approaches
    for more elaborated formulations More elaborated and adequate formulations have
    been proposed in the literature for the design of innovative cropping systems,
    not necessarily in agreement with integrated production guidelines. They include
    among others multiobjective mathematical formulation and constraints satisfying
    problems. These formulations are considered as more adequate since they try to
    represent the problem in the most natural and transparent way. Thus, Rossing et
    al. (1997) looked for the optimization of flower bulb production systems within
    a group of growers using interactive multiple goal linear programming. They considered
    three objectives: farm gross margin, pesticide input, and nitrogen surplus. By
    considering these objectives together with the characteristics of the existing
    farming systems and the socio-economic and agronomic constraints, they produced
    a set of optimal strategies (Rossing et al. 1997). The main drawback here is related
    to the linearity of the objectives. In the design of integrated production systems,
    this condition is generally not satisfied. In Loyce et al. (2002b), the authors
    proposed a model-based approach to design prototypes of wheat-based cropping systems
    using the BETHA model (Loyce et al. 2002a). This model simulates and compares
    specified cropping systems on the basis of eight criteria including yield, gross
    margin, pesticide use, and seed quality. This approach includes three steps: generation
    of crop management strategies, evaluation of these strategies, and assignment
    of each one to either the category of good strategies or to that of bad ones.
    The authors formalized the generation of crop management strategies as a constraints
    satisfaction problem, a mathematical problem defined as a set of objects whose
    state must satisfy a number of constraints. They used a resolution method developed
    in the field of artificial intelligence. This resolution algorithm combines filtering
    to reduce the size of variable domains and tree search techniques with backtrack
    procedures to successively allocate the various possible values to each variable.
    The second step consisted of evaluating each crop management strategy using the
    predefined criteria. The evaluation method used in this approach was based on
    the notion of agreement and discordance intervals represented by fuzzy sets and
    used to express the gradual preferences of the decision-maker. Thus, for each
    crop management strategy, they calculated the values of membership functions indicating
    if the given criterion is favorable or opposed to the assignment of this strategy
    to the good or bad category. Finally, the assignment of a crop management strategy
    to a given category resulted from simultaneously satisfying overall agreement
    and overall non-discordance conditions. From our point of view, the aggregation
    operators used in the final step constitute a main drawback of this approach since
    they are close to a weighted sum. Moreover, there are a large number of parameters
    to be determined by the decision-maker. Chatelin et al. (2007) described a method
    for designing winter wheat management strategies using the Déciblé model. This
    method involved the use of a multi-stage procedure in which a simulation tool
    was used to explore a decisional space defined by an expert. They aimed to maintain
    a high wheat yield and grain quality while limiting the risks of nitrogen pollution
    by maintaining post-harvest soil nitrogen content below a given threshold. The
    management strategies were expressed as sets of decision rules for the possible
    technical choices such as cultivar, sowing date, sowing density, and nitrogen
    supply. The main idea behind this step-by-step approach is the progressive limitation
    of the decisional space. This method involved three stages: reduction of the decisional
    space and choice of criteria, choice of subgroup of cultivars in the chosen situations,
    and blind generation of technical management strategies mainly related to cultivar
    choice and N supply. The first stage was based on the situations observed in practice,
    on the possible representation within Déciblé, and on expert knowledge. At the
    second stage, cultivars with low yield or a high environmental risk were eliminated.
    Since the generation method used in this approach is blind, this approach has
    all the drawbacks of this type of generation methods (see above). The reduction
    process of the decisional space may also overlook some interesting strategies
    (Chatelin et al. 2007). Other researchers used decomposition algorithms to develop
    innovative cropping systems. Thus, Crespo et al. (2009) proposed the P2 hierarchical
    decomposition procedure to design irrigation management strategies using the MODERATO
    model. P2 is a simulation-based optimization method and a development of the P2p
    algorithm proposed by Bergez et al. (2004). Promising regions are selected by
    heuristics, divided into two parts, and each of them is evaluated by simulation.
    Different selection, division, and evaluation techniques were tested on a corn
    crop irrigation management problem in order to identify the combination of techniques
    that lead to the most efficient algorithm. The irrigation problem was modeled
    as a continuous stochastic problem with eight continuous parameters. Two criteria
    were used to evaluate solutions: the direct margin and the number of simulation
    runs required to reach it (Crespo et al. 2009). In deVoil et al. (2006), the authors
    used a multiobjective evolutionary algorithm coupled with the APSIM model to optimize
    cropping systems in Northeast Australia. The optimized variables were a discrete
    choice of land use during four seasons and the threshold level of available water
    to plant crops. The cropping system was designed as a 2-year rotation, with cotton
    and sorghum as potential summer crops and wheat and chickpea as winter crops.
    Decisions to be optimized comprised which crop to plant and when and the timing
    of planting in relation to current soil moisture conditions. The authors considered
    three criteria for evaluating the designed cropping systems: gross margin, financial
    risk, and erosion. They used a real multiobjective evaluation technique based
    on the concept of Pareto dominance. In the same way, Letort et al. (2008) used
    genetic algorithms and a functional–structural growth model to investigate the
    design of ideotypes for yield maximization. In order to link growth parameters
    to QTL, the genetic parameters were introduced into the GREENLAB model. The authors
    defined virtual genes and chromosomes to build a simple Mendelian genetic model
    that drove the settings of the species-specific parameters of the model. They
    also used QTL cartographer software to study the QTL detection of simulated plant
    traits. A genetic algorithm was implemented to define the ideotypes for yield
    maximization based on the GREENLAB model parameters and the associated allelic
    combination. They compared virtual QTL detection in the case of phonotypic traits
    and when traits are model parameters, and they found the last case as more accurate.
    Using this approach, the authors were able to calculate the parameters and the
    corresponding genotype associated with yield optimization of maize (Letort et
    al. 2008). Similarly, in Cardoso et al. (2009), the authors used the high-performance
    and well-known Non-dominated Sorting Genetic Algorithm II for the design of biological
    pest control strategies. They modeled the system as a nonlinear impulsive dynamic
    programming problem and considered both the cost of application of the control
    action and the cost of economic damages. Using this modeling formalism, they hoped
    to effectively cope with the actual control action to be applied, which should
    be performed in a finite number of discrete time instances. The studied case was
    the control of soybean caterpillar by its natural enemies such as wasps and spiders.
    Other research has been conducted using this last family of optimization methods
    that suggests its interest for the design of IPS. Thus, Guan et al. (2009) developed
    a very interesting approach for resource assignments and scheduling based on a
    two-phase metaheuristic for a long-term cropping schedule. The two-phase metaheuristic
    performs the optimization of resource assignments and scheduling based on a simulated
    annealing and genetic algorithm and a hybrid Petri net model (Guan et al. 2009).
    These last approaches do not guarantee the optimality of the obtained solutions
    but they are promising, especially when combining their respective performances.
    For instance, the selection, division, and evaluation techniques developed for
    the hierarchical decomposition may be introduced in the evolutionary algorithms
    instead of its selection and combination operators. Another interesting idea consists
    of using evolutionary algorithms in the hierarchical decomposition approach in
    order to determine the optimal division strategies. 3.2 Comparison to other domains
    and critical analysis Model-based design was originally introduced for embedded
    electronic systems and digital control systems. It has been successfully applied
    in several fields such as automotives, chemicals, aerospace, drug development,
    computer networks, and transportation networks, e.g., public, supply chain, gas,
    and liquids. In this section, we assess the use of the model-based design for
    new drug development and for transportation network design. We attempt to determine
    why model-based design is not yet as advanced for integrated production systems
    as it is for these two cases. The drug design case is among the closest to our
    case study since it has a biotic dimension and the interactions between heterogeneous
    elements, i.e., drug, patient, and environment, are quite visible. When designing
    a drug, researchers look for an organic molecule that activates the function of
    a biomolecule such as a protein, providing a therapeutic benefit to the patient.
    Many promising candidate drugs may turn out to be ineffective or toxic when tested
    on animals or humans. This is due to a poor understanding of the molecular mechanisms
    of the biological systems that they target. Recent advances in biological systems
    modeling have favored the use of the model-based design approach to improve drug
    development (Poland et al. 2006; Schoeberl et al. 2006; Scholz et al. 2006). In
    model-based drug design, mathematical equations are used to create computer-based
    models that represent relationships between drug treatments and observed effects.
    Models combine knowledge of a disease state, relevant biomarkers, and findings
    from pre-clinical and clinical studies with knowledge of placebo responses and
    dropout rates to gain insights into the determinants of efficacy and safety outcomes.
    Model-based drug design uses computational chemistry to develop drugs and related
    biologically active molecules. The fundamental goal is to predict whether a given
    molecule will bind to a target and, if so, how strongly. Many physicochemical
    methods such as knowledge-based scoring functions may be used to provide binding
    affinity estimates. They use techniques from the statistical or artificial intelligence
    domains (linear regression, machine learning, neural networks…) to provide predictive
    binding affinity equations by fitting experimental affinities to computationally
    derived interaction energies between the drug and the target. Computational methods
    have accelerated new drug development by reducing the number of iterations required
    regarding design, synthesis, and testing and have often provided more novel structures.
    Despite its recent introduction and its complexity, model-based drug design has
    enabled pharmaceutical companies to quickly identify optimal pathway targets and
    to determine the best approach. The models enlighten their decisions throughout
    drug development, enabling them to develop targeted therapeutics with higher efficacy
    and fewer side effects. The second case study is transportation networks design.
    There are many common characteristics between transportation networks and integrated
    production systems including the uncertainties, heterogeneity, weather issues,
    spatial distribution, and the intrinsic complexity. In transportation networks,
    complex dynamic processes take place that involve technical, economic, managerial,
    social, and political issues, exactly like in integrated production systems. The
    design of transportation networks focuses on determining the optimal set of operations
    for a given vehicle or set of vehicles so that a prescribed demand is satisfied.
    The main objective of the design process is to increase the capability of transportation
    networks to deal with service variations caused by stochastic events such as incidents,
    bad weather, road works, public events, or vehicle failure. The transportation
    networks design problem and all of its variants have been well researched within
    the operations research community. A great deal of modeling work has been done
    in this area including mathematical modeling, graphs, neural networks, Petri nets,
    multi-agent systems, and fuzzy logic (Ding and Guting 2004; Strub and Bayen 2006;
    Wu et al. 2006; Alecsandru et al. 2007; Celikoglu and Cigizoglu 2007; Ding 2008;
    Murat and Uludag 2008; Sidi et al. 2008a; Sidi et al. 2008b; Demongodin 2009;
    Tortum et al. 2009; Xie and Levinson 2009). Optimizing the configuration and the
    planning of transportation networks is a very difficult problem. However, model-based
    design approaches have greatly contributed to this area and have helped transporters
    to increase their service quality. Many optimization methods have been developed
    and applied to the models mentioned above. These techniques range from linear
    programming algorithms to more complex ones such as spanning tree algorithms,
    evolutionary algorithms, taboo search, simulated annealing, and specific heuristics
    (Current et al. 1987; Lotarev 1989; Klempous et al. 1994; Babel and Kellerer 2003;
    Nepal and Park 2005; Creput and Koukam 2007; Song et al. 2007; Sanchez-Silva et
    al. 2009; Unnikrishnan et al. 2009; Yao and Hsu 2009). The model-based design
    approach has proved to be more efficient and more effective in the cases of new
    drug development and of transportation networks than in the case of integrated
    production systems. This is certainly due in part to the relative simplicity of
    drug development and transportation networks design compared to integrated production
    systems. Because of this simplicity, the developed models are more comprehensive
    than the agronomic models, which are generally developed for a specific part of
    the agroecosystem under study, e.g., growth models, plant architecture models,
    nitrogen and carbon models. For example, transportation models take into account
    all of the system’s components, i.e., vehicles, passengers, routes, as well as
    its environment. The weather is considered through climate prediction models and
    the spatial distribution of the networks is usually taken into account via GIS
    and other tools. However, from our point of view, this is also due to a higher
    quality of the modeling done by leading researchers and engineers, especially
    in the case of transportation. This better modeling practice may be explained
    by various reasons. First, the modeling formalisms used in the transportation
    sector are usually more efficient and modern than those used in agronomic models
    because of the permanent exchange between transportation companies and software
    and technology editors. There are many enterprises that edit solutions, especially
    for the planning, regulation, and design of transportation networks. Second, data
    availability is not comparable between integrated production systems and transportation
    and drug design. Transportation companies as well as pharmaceutical companies
    have their own databases that describe all of the aspects of their systems and
    can provide modelers with necessary data in order to perform test and validate
    models. They also sometimes provide the means for purchasing required supplementary
    data when necessary. Third, despite the similarity of contexts and the importance
    of this task for the design process, the mathematical formulation of the objectives
    and the constraints is generally of better quality in the transportation sector
    than in agronomy. For example, the regularity of vehicles is determined by the
    time interval that separates the successive passages at the same station, and
    this formulation remains unchanged in all transportation models. Unfortunately,
    in the agronomic domain, there are as many formulations as there are models, even
    for a criterion such as the gross margin. It is truly difficult to standardize
    objectives and constraints in the case of agronomy, contrary to that of drugs
    or transportation. The progress reported in these two case studies may also be
    explained by another factor that cannot be overlooked: the importance of economic
    issues and challenges. The money allotted to transportation and drug design is
    considerable compared to that devoted to integrated production systems, which
    usually comes from the public budget. Finally, the introduction of systems approaches
    and the use of model-based design are relatively recent in agronomy compared to
    transportation. New advances in agronomic modeling will certainly and rapidly
    change the current situation. 4 Efficiency of model-based design As illustrated
    in the previous sections, many crop/pest/predator models, databases, GIS, and
    other tools have been developed for the simulation of agroecosystem performance.
    Nevertheless, the model-based design of integrated production systems is not yet
    accomplished and has not yet produced the expected results, with the exception
    of a few prototypes. The reasons for this difficulty concern the models and their
    specifications. Moreover, the application of modern design to this domain is still
    in its infancy. In the following section, we address modeling quality and targets
    and propose a methodological framework for using models to design IPS. 4.1 Modeling
    Adopting modeling methods used in other domains—such as DEVS used in the RECORD
    platform (Chabrier et al. 2007) and developed by INRA (French Institute for Agricultural
    Research)—would improve crop/pest models and their capacity to interact with other
    models. These formalisms allow us to use tools that have already been developed
    to develop more operational tools and, especially, to integrate heterogeneous
    formalisms. Furthermore, the development of modeling platforms that make it possible
    to integrate the necessary ingredients for the design of integrated production
    systems, i.e., crop/pest/predator models, databases, GIS, genetic improvement
    models, optimization and evaluation methods, etc., would enhance the modeling
    procedure and accelerate the design process. However, in order to facilitate the
    integration of these elements, each one must be designed in this spirit. The lack
    of modularity and genericity of current agricultural models makes it difficult
    to adapt these models to new crops and more generally prevents their reuse and
    sharing (Loyce and Wery 2006). Genericity can be enhanced by promoting process-oriented
    modeling rather than the crop species-oriented modeling usually used in the existing
    models. Regarding the modularity of models, the use of object-oriented and component-based
    techniques combined with other paradigms such as systems dynamics has proved to
    be very effective. As mentioned in “Model-based design of integrated production
    systems: brief overview of the elements involved”, the drawbacks of current agricultural
    models include their lack of adequacy with respect to the need of IPS. Most crop
    models that address the “production” component of IPS ignore pests and other biotic
    elements, making it difficult to take cultural innovations in terms of IPS and
    biodiversity issues into account. With respect to plant/pest/antagonist interactions,
    the challenge is to model complex trophic networks since, for example, pest communities
    impair the functioning of plants. Models such as WHEATPEST (Willocquet et al.
    2008) and RICEPEST (Willocquet et al. 2002) must be developed and included in
    modeling platforms. The spatial dimension must also be more effectively integrated
    into models such as in the work of Stoorvogel et al. (2004). Combining GIS and
    artificial intelligence technologies, especially learning techniques, holds promise
    for the future and remains to be explored. The development of models would profit
    from a better involvement of stakeholders concerned by decision-making, considering
    the various levels of decision, e.g., local, regional, national (Giller et al.
    2008), and from experts. The use of new protocols, methods, and formalisms devoted
    to the extraction of information, such as those used by Leger and Naud (2009),
    must be encouraged in order to more effectively take professional and expert knowledge
    into account. Finally, model study and evaluation, difficult tasks because of
    the heterogeneity of data and the multiplicity of factors influencing model outputs
    (Bellocchi et al. 2009), must be more closely considered since they allow us to
    determine both model reliability and model usefulness. When properly used, sensitivity
    analysis and other statistical methods can help us with this task. Other methods
    such as evolutionary algorithms may enhance this practice, as demonstrated in
    (Komuro et al. 2006) for the assessment of models during their construction. 4.2
    Design: criteria choice, optimization, evaluation Once the development of comprehensive
    models is achieved, the model-based design itself may be dealt with. As previously
    mentioned, there are four steps in this process: the definition of objectives
    and constraints, design, evaluation, and choice and dissemination of the proposed
    systems. The first and the fourth steps are generally neglected, while the design
    and evaluation steps are omnipresent in studies using model-based design methodologies.
    However, the definition of criteria and constraints and their mathematical formulation
    are key elements in the model-based design approach and are very important for
    the choice of evaluation methods and optimization algorithms to be used in the
    design and evaluation steps. The choice of evaluation criteria can be improved
    based on preliminary tests and by using techniques such as principal component
    analysis, sensitivity analysis, or tradeoff curves (Stoorvogel et al. 2004). All
    of these methods can enable to identify the possible relationships between the
    criteria. Experts and stakeholders can also express their opinions and thus help
    modelers to determine the degree of redundancy or complementarities between criteria
    and recommend the criteria to be taken into account. At this stage, conflicts
    can appear and a formal negotiation approach can help their resolution as demonstrated
    by Giller et al. (2008). Another asset, which is hardly ever used, makes it possible
    to ground virtual design on solid bases. This is the set of constraints for each
    decision variable and their combination that we can impose on the resolution algorithm
    in the design step. When the criteria are chosen and the constraints defined in
    workmanlike, the model-based design of integrated production systems may be formulated
    as a multiobjective optimization problem. This problem is then treated using various
    approaches that mainly deal with the exploration of the decision space and the
    evaluation of the solutions obtained during this exploration. As discussed in
    “Model-based design of integrated production systems: brief overview of the elements
    involved” and “Model-based design of integrated production systems: examples,
    comparison to other fields, and critical analysis” of this paper, many multiobjective
    evaluation methods and optimization algorithms have been developed or applied
    for the design of integrated production systems. The complexity of the problems
    and the difficulty of analytically expressing the criteria and constraints in
    terms of decision variables promote the use of the simulation-based approach rather
    than the control-based approach. New optimization methods such as multiobjective
    evolutionary algorithms combined with efficient quantitative aggregative methods
    such as fuzzy integrals are quite well suited to IPS design. Another promising
    avenue is the development of non-aggregative approaches that aim to find a real
    compromise between the evaluation criteria and to provide decision-makers with
    a set of compromise solutions known as Pareto-optimal solutions. These solutions
    represent the best tradeoff across all criteria since no other solution is more
    effective when all of the objectives are considered. This approach makes it possible
    to avoid the drawbacks of aggregative methods that are more sensitive to the shape
    of the Pareto-optimal front. 4.3 Choice and dissemination The qualitative decision-making
    family, which include methods such as the MAUT (see “Evaluation methods and optimization
    algorithms”), is more convenient for comparison purposes when the cardinal of
    the solution set is small and for the choice of the best systems when the design
    and evaluation steps have been achieved. The set of solutions returned by the
    multiobjective optimization algorithm from the design and evaluation steps can
    be compared using tools such as DEXI (Sadok et al. 2009) in order to select the
    best one. Tradeoff analysis techniques are also helpful since they allow representing
    graphically the tradeoff curves and studying the effect of all solutions on the
    position and slope of these curves (Stoorvogel et al. 2004). The model-based design
    cannot and does not aim to replace experimentation but, instead, to facilitate
    the choice of the most promising production systems (Sterk et al. 2007). The candidate
    systems proposed by this approach should be tested against real conditions, experimented,
    and, if necessary, adjusted before being recommended to a few testers, re-adjusted
    if necessary and then evaluated within wider networks. If all of the steps prove
    themselves to be successful and fruitful, the best strategies or the best systems
    can then be recommended to producers and policymakers in order to help them make
    the most effective choices for the greatest benefit to society. References Akplogan
    M, Garcia F, Joannon A, Martin-Clouaire R, Quesnel G (2009) Un modèle devs d’agent
    intelligent: application à la conduite des systèmes de culture. In: Sigaud O,
    Vié M (eds) Journées Francophones Planification Décision Apprentissage (JFPDA),
    Paris Alecsandru C, Ishak S, Zhang Y (2007) An optimal downsampling procedure
    for microscopic simulation modeling of transportation networks: a proof-of-concept
    study. Can J Civ Eng 34:89–98. doi:10.1139/l06-102 Article   Google Scholar   Antonopoulou
    E (2003) DSSs in major field crops:classification and performance. 4th European
    Conference of the European Federation for Information Technology in Agriculture,
    Food and Environment. Debrecen-Budapest, Hungary Attonaty J, Chatelin MH, Poussin
    JC (1990) Un simulateur à base de connaissance pour raisonner équipement et organisation
    du travail en agriculture. In: Bourgine P, Walliser B (eds) Economics and artificial
    intelligence. Afcet, Paris, pp 291–297 Google Scholar   Aubry C, Papy F, Capillon
    A (1998) Modelling decision-making processes for annual crop management. Agric
    Syst 56:45–65 Article   Google Scholar   Babel L, Kellerer H (2003) Design of
    tariff zones in public transportation networks: theoretical results and heuristics.
    Math Methods Oper Res 58:359–374. doi:10.1007/s001860300311 Article   Google Scholar   Bellocchi
    G, Rivington M, Donatelli M, Matthews K (2010) Validation of biophysical models:
    issues and methodologies. A review Agron Sustain Dev 30:109–130 Article   Google
    Scholar   Bergez JE, Debaeke P, Deumier JM, Lacroix B, Leenhardt D, Leroy P, Wallach
    D (2001) MODERATO: an object-oriented decision tool for designing maize irrigation
    schedules. Ecol Model 137:43–60 Article   Google Scholar   Bergez JE, Garcia F,
    Lapasse L (2004) A hierarchical partitioning method for optimizing irrigation
    strategies. Agric Syst 80:235–253. doi:10.1016/j.agsy.2003.07.004 Article   Google
    Scholar   Bergez JE, Colbach N, Crespo O, Garcia F, Jeuffroy MH, Justes E, Loyce
    C, Munier-Jolain N, Sadok W (2010) Designing crop management systems by simulation.
    Eur J Agron 32:3–9 Article   Google Scholar   Blazy JM, Tixier P, Thomas A, Ozier-Lafontaine
    H, Salmon F, Wery J (2010) BANAD: a farm model for ex ante assessment of agro-ecological
    innovations and its application to banana farms in Guadeloupe. Agric Syst 103:221–232.
    doi:10.1016/j.agsy.2010.01.004 Article   Google Scholar   Boller EF, Avilla J,
    Joerg E, Malavolta C, Wijnands FG, Esbjerg P (2004) Integrated production: principles
    and technical guidelines. Bull OILB SROP 27:1–12 Google Scholar   Boote KJ, Kropff
    MJ, Bindraban PS (2001) Physiology and modelling of traits in crop plants: implications
    for genetic improvement. Agric Syst 70:395–420 Article   Google Scholar   Bouman
    BAM, vanKeulen H, vanLaar HH, Rabbinge R (1996) The ‘School of de Wit’ crop growth
    simulation models: a pedigree and historical overview. Agric Syst 52:171–198 Article   Google
    Scholar   Brisson N, Gary C, Justes E, Roche R, Mary B, Ripoche D, Zimmer D, Sierra
    J, Bertuzzi P, Burger P, Bussiere F, Cabidoche YM, Cellier P, Debaeke P, Gaudillere
    JP, Henault C, Maraux F, Seguin B, Sinoquet H (2003) An overview of the crop model
    STICS. Eur J Agron 18:309–332 Article   Google Scholar   Cardoso RTN, Cruz ARd,
    Wanner EF, Takahashi RHC (2009) Multi-objective evolutionary optimization of biological
    pest control with impulsive dynamics in soybean crops. Bull Math Biol 71:1463–1481.
    doi:10.1007/s11538-009-9409-7 Article   PubMed   Google Scholar   Celikoglu HB,
    Cigizoglu HK (2007) Public transportation trip flow modeling with generalized
    regression neural networks. Adv Eng Softw 38:71–79. doi:10.1016/j.advengsoft.2006.08.003
    Article   Google Scholar   Chabrier P, Garcia F, Martin-Clouaire R, Quesnel G,
    Raynal H (2007) Toward a simulation modeling platform for studying cropping systems
    management: the record project. International Congress on Modelling and Simulation,
    MODSIM, New Zealand Google Scholar   Chatelin MH, Aubry C, Garcia F (2007) A novel
    method for the sustainable management of wheat crops: exploration by simulation.
    Agron Sustainable Dev 27:337–345. doi:10.1051/agro:2007014 Article   Google Scholar   Colbach
    N, Chauvel B, Gauvrit C, Munier-Jolain NM (2007) Construction and evaluation of
    ALOMYSYS modelling the effects of cropping systems on the blackgrass life-cycle:
    from seedling to seed production. Ecol Model 201:283–300. doi:10.1016/j.ecolmodel.2006.09.018
    Article   Google Scholar   Creput JC, Koukam A (2007) Interactive meshing for
    the design and optimization of bus transportation networks. J Transp Eng Asce
    133:529–538. doi:10.1061/(asce)0733-947x(2007)133:9(529) Article   Google Scholar   Crespo
    O (2006) Conception par simulation d’itinéraires techniques. Seventh congress
    of PhD students from the SYSTEM doctoral school (EDSyS). Tarbes, France Google
    Scholar   Crespo O, Bergez JE, Garcia F (2009) P2 hierarchical decomposition procedure:
    application to irrigation strategies design. Oper Res. doi:10.1007/s12351-009-0040-z
    Google Scholar   Current JR, Revelle CS, Cohon JL (1987) The median shortest-path
    problem—a multiobjective approach to analyze cost vs accessibility in the design
    of transportation networks. Transp Sci 21:188–197 Article   Google Scholar   Debaeke
    P, Nolot JM, Raffaillac D (2006) A rule-based method for the development of crop
    management systems applied to grain sorghum in south-western France. Agric Syst
    90:180–201. doi:10.1016/j.agsy.2006.01.001 Article   Google Scholar   Debaeke
    P, Munier-Jolain N, Bertrand M, Guichard L, Nolot JM, Faloya V, Saulas P (2009)
    Iterative design and evaluation of rule-based cropping systems: methodology and
    case studies. A review. Agron Sustain Dev 29:73–86. doi:10.1051/agro:2008050 Article   Google
    Scholar   Demongodin I (2009) Modeling and analysis of transportation networks
    using batches Petri nets with controllable batch speed. Proceedings of the 30th
    international conference on Applications and theory of Petri nets. Paris, France,
    22–26 June 2009, pp. 204–222. deVoil P, Rossing WAH, Hammer GL (2006) Exploring
    profit—sustainability trade-offs in cropping systems using evolutionary algorithms.
    Environ Modell Softw 21:1368–1374 Article   Google Scholar   Ding ZM (2008) Moving
    objects databases based on dynamic transportation networks: modeling, indexing,
    and implementation. Proceedings of the 10th Asia-Pacific web conference and workshops.
    Shenyang, People Republic of China, 26–28 April 2008, volume 4977, pp.1–16 Ding
    ZM, Guting RH (2004) Modeling temporally variable transportation networks. Database
    Systems for Advanced Applications 2973:154–168 Article   Google Scholar   Dogliotti
    S, Rossing WAH, van Ittersum MK (2004) Systematic design and evaluation of crop
    rotations enhancing soil conservation, soil fertility and farm income: a case
    study for vegetable farms in South Uruguay. Agric Syst 80:277–302. doi:10.1016/j.agsy.2003.08.001
    Article   Google Scholar   Donatelli M, Russell G, Rizzoli AE (2009) APES: the
    agricultural production and externalities simulator. Proceedings of the Conference
    on Integrated Assessment of Agriculture and Sustainable Development: setting the
    agenda for science and policy (AgSAP 2009). Hotel Zuiderduin, Egmond aan Zee,
    The Netherlands, 10–12 March 2009, pp 206–207 Dore T, le Bail M, Martin P, Ney
    B, Roger-Estrade J (2006) Agronomy today. L’agronomie aujourd’hui, pp xii + 367
    Ewers RM, Didham RK, Wratten SDD, Tylianakis JM (2005) Remotely sensed landscape
    heterogeneity as a rapid tool for assessing local biodiversity value in a highly
    modified New Zealand landscape. Biodivers Conserv 14:1469–1485. doi:10.1007/s10531-004-9786-z
    Article   Google Scholar   Faivre R, Leenhardt D, Voltz M, Benoit M, Papy F, Dedieu
    G, Wallach D (2004) Spatialising crop models. Agronomie 24:205–217. doi:10.1051/agro:2004016
    Article   Google Scholar   Gary C (2004) Evaluation, design and control of sustainable
    horticultural cropping systems. 26th International Horticultural Congress, Toronto,
    Canada Giller KE, Leeuwis C, Andersson JA, Andriesse W, Brouwer A, Frost P, Hebinck
    P, Heitkonig I, van Ittersum MK, Koning N, Ruben R, Slingerland M, Udo H, Veldkamp
    T, van de Vijver C, van Wijk MT, Windmeijer P (2008) Competing claims on natural
    resources: what role for science? Ecology and Society 13 Glendining MJ, Dailey
    AG, Williams AG, van Evert FK, Goulding KWT, Whitmore AP (2009) Is it possible
    to increase the sustainability of arable and ruminant agriculture by reducing
    inputs? Agric Syst 99:117–125. doi:10.1016/j.agsy.2008.11.001 Article   Google
    Scholar   Gonzalez-Andujar JL (2009) Expert system for pests, diseases and weeds
    identification in olive crops. Expert Syst Appl 36:3278–3283. doi:10.1016/j.eswa.2008.01.007
    Article   Google Scholar   Grabisch M (1996) The application of fuzzy integrals
    in multicriteria decision making. Eur J Oper Res 89:445–456 Article   Google Scholar   Grabisch
    M, Labreuche C (2010) A decade of application of the Choquet and Sugeno integrals
    in multi-criteria decision aid. Ann Oper Res 175:247–286. doi:10.1007/s10479-009-0655-8
    Article   Google Scholar   Guan S, Nakamura M, Shikanai T, Okazaki T (2009) Resource
    assignment and scheduling based on a two-phase metaheuristic for cropping system.
    Comput Electron Agric 66:181–190. doi:10.1016/j.compag.2009.01.011 Article   Google
    Scholar   Guerena A, Ruiz-Ramos M, Diaz-Ambrona CH, Conde JR, Minguez MI (2001)
    Assessment of climate change and agriculture in Spain using climate models. Agron
    J 93:237–249 Article   Google Scholar   Guo HJ, Chen LS (2009) Time-limited pest
    control of a Lotka–Volterra model with impulsive harvest. Nonlinear Anal Real
    World Appl 10:840–848. doi:10.1016/j.nonrwa.2007.11.007 Article   Google Scholar   Habib
    R, Nesme T, Plenet D, Lescourret F (2001) Data modelling for database design in
    apple production monitoring systems for a producer organization, Acta Horticulturae,
    pp 467–482 Haley SD, May RD, Seabourn BW, Chung OK (1999) Relational database
    system for summarization and interpretation of hard winter wheat regional quality
    data. Crop Sci 39:309–315 Google Scholar   Hall A, Lescourret F (2008) Modelling
    plant–pest–predator interactions with threshold control. Acta Horticulturae, pp
    61–68 Halling MA, Topp CFE, Doyle CJ (2004) Aspects of the productivity of forage
    legumes in Northern Europe. Grass Forage Sci 59:331–344 Article   Google Scholar   Hammer
    GL, Hansen JW, Phillips JG, Mjelde JW, Hill H, Love A, Potgieter A (2001) Advances
    in application of climate prediction in agriculture. Agric Syst 70:515–553 Article   Google
    Scholar   Hammer GL, Kropff MJ, Sinclair TR, Porter JR (2002) Future contributions
    of crop modelling—from heuristics and supporting decision making to understanding
    genetic regulation and aiding crop improvement. Eur J Agron 18:15–31 Article   Google
    Scholar   Hartkamp AD, White JW, Hoogenboom G (1999) Interfacing geographic information
    systems with agronomic modeling: a review. Agron J 91:761–772 Article   Google
    Scholar   Houdart M, Tixier P, Lassoudiere A, Saudubray F (2009) Assessing pesticide
    pollution risk: from field to watershed. Agron Sustainable Dev 29:321–327. doi:10.1051/agro:2008042
    Article   Google Scholar   Hunt LA, White JW, Hoogenboom G (2001) Agronomic data:
    advances in documentation and protocols for exchange and use. Agric Syst 70:477–492
    Article   Google Scholar   Jerry M, Gouzé JL (2004) Stratégie optimale d’un problème
    dans le cadre de la lutte biologique. INRIA Jones JW, Hoogenboom G, Porter CH,
    Boote KJ, Batchelor WD, Hunt LA, Wilkens PW, Singh U, Gijsman AJ, Ritchie JT (2003)
    The DSSAT cropping system model. Eur J Agron 18:235–265 Article   Google Scholar   Keating
    BA, Carberry PS, Hammer GL, Probert ME, Robertson MJ, Holzworth D, Huth NI, Hargreaves
    JNG, Meinke H, Hochman Z, McLean G, Verburg K, Snow V, Dimes JP, Silburn M, Wang
    E, Brown S, Bristow KL, Asseng S, Chapman S, McCown RL, Freebairn DM, Smith CJ
    (2003) An overview of APSIM, a model designed for farming systems simulation.
    Eur J Agron 18:267–288 Article   Google Scholar   Klempous R, Kotowski J, Szlachcic
    E (1994) Some numerical aspects of the gradient procedure for design of nonlinear
    transportation networks. Math Comput Simul 37:29–35 Article   Google Scholar   Komuro
    R, Ford ED, Reynolds JH (2006) The use of multi-criteria assessment in developing
    a process model. Ecol Model 197:320–330. doi:10.1016/j.ecolmodel.2006.03.033 Article   CAS   Google
    Scholar   Kropff MJ, Teng PS, Rabbinge R (1995) The challenge of linking pest
    and crop models. Agric Syst 49:413–434 Article   Google Scholar   Kropff MJ, Bouma
    J, Jones JW (2001) Systems approaches for the design of sustainable agro-ecosystems.
    Agric Syst 70:369–393 Article   Google Scholar   Le Ber F, Napoli A, Metzger JL,
    Lardon S (2003) Modeling and comparing farm maps using graphs and case-based reasoning.
    Journal of Universal Computer Science 9:1073–1095 Google Scholar   Leger B, Naud
    O (2009) Experimenting statecharts for multiple experts knowledge elicitation
    in agriculture. Expert Syst Appl 36:11296–11303. doi:10.1016/j.eswa.2009.03.052
    Article   Google Scholar   Lesschen JP, Stoorvogel JJ, Smaling EMA, Heuvelink
    GBM, Veldkamp A (2007) A spatially explicit methodology to quantify soil nutrient
    balances and their uncertainties at the national level. Nutr Cycl Agroecosyst
    78:111–131. doi:10.1007/s10705-006-9078-y Article   Google Scholar   Letort V,
    Mahe P, Cournede PH, De Reffye P, Courtois B (2008) Quantitative genetics and
    functional–structural plant growth models: simulation of quantitative trait loci
    detection for model parameters and application to potential yield optimization.
    Ann Bot 101:1243–1254. doi:10.1093/aob/mcm197 Article   PubMed   Google Scholar   Linkov
    I, Varghese A, Jamil S, Seager TP, Kiker G, Bridges T (2004) Multi-criteria decision
    analysis: a framework for structuring remedial decisions at contaminated sites.
    Comparative Risk Assessment and Environmental Decision Making. Kluwer Academic
    Publishers, Netherlands 38:15–54 Google Scholar   Lotarev VT (1989) Design of
    one class of transportation networks by dynamic-programming. Autom Remote Control
    50:233–240 Google Scholar   Loyce C, Wery J (2006) Les outils de l’agronome pour
    l’évaluation et le conception de systèmes de culture. In: DoreT, Le Bail M, Martin
    P, Ney B, Roger-Estrade J (eds) L’agronomie aujourd’hui. INRA, Paris, pp 77–95
    Loyce C, Rellier JP, Meynard JM (2002a) Management planning for winter wheat with
    multiple objectives (1): the BETHA system. Agric Syst 72:9–31 Article   Google
    Scholar   Loyce C, Rellier JP, Meynard JM (2002b) Management planning for winter
    wheat with multiple objectives (2): ethanol-wheat production. Agric Syst 72:33–57
    Article   Google Scholar   Mahaman B, Passam HC, Sideridis AB, Yialouris CP (2003)
    DIARES-IPM: a diagnostic advisory rule-based expert system for integrated pest
    management in solanaceous crop systems. Agric Syst 76:1119–1135. doi:10.1016/s0308-521x(02)00187-7
    Article   Google Scholar   Mailleret L, Grognard F (2006) Optimal release policy
    for prophylactic biological control. Positive Systems, Proceedings 341:89–96 Article   Google
    Scholar   Mailleret L, Grognard F (2009) Global stability and optimisation of
    a general impulsive biological control model. Math Biosci 221:91–100. doi:10.1016/j.mbs.2009.07.002
    Article   PubMed   Google Scholar   Martin-Clouaire R, Rellier J-P (2009) Modelling
    and simulating work practices in agriculture. Int J Metadata Semant Ontologies
    4:42–53. doi:10.1504/IJMSO.2009.026253 Google Scholar   Mayer DG (2002) Evolutionary
    algorithms and agricultural systems. Kluwer Academic, Dordrecht Muetzelfeldt R,
    Massheder J (2003) The SIMILE visual modelling environment. Eur J Agron 18:345–358
    Article   Google Scholar   Munier-Jolain NM, Savois V, Kubiak P, Maillet-Mezeray
    J, Jouy L, Quere L (2005) DECID’Herb, a decision support system on the WEB, designed
    for sustainable weed management in cultivated fields. Proceedings of the 13th
    EWRS Symposium, Bari, Italy, 19–23 June 2005 (unpaginated) Murat YS, Uludag N
    (2008) Modeling route choice behaviour in transportation networks by using fuzzy
    logic and logistic regression techniques. Tek Derg 19:4363–4379 Google Scholar   Nepal
    KP, Park D (2005) Solving the median shortest path problem in the planning and
    design of urban transportation networks using a vector labeling algorithm. Transp
    Plann Technol 28:113–133. doi:10.1080/03081060500053509 Article   Google Scholar   Nesme
    T, Lescourret F, Bellon S, Habib R (2009) A modelling approach to explore nitrogen
    fertilisation practices of growers and their consequences in apple orchards. Agric
    Syst 99:76–85. doi:10.1016/j.agsy.2008.09.004 Article   Google Scholar   Nolot
    J-M, Debaeke P (2003) Principles and tools for the design, management and evaluation
    of cropping systems. Cah Agric 12:387–400 Google Scholar   Plenet D, Giauque P,
    Navarro E, Millan M, Hilaire C, Hostalnou E, Lyoussoufi A, Samie JF (2009) Using
    on-field data to develop the EFI (R) information system to characterise agronomic
    productivity and labour efficiency in peach (Prunus persica L. Batsch) orchards
    in France. Agric Syst 100:1–10. doi:10.1016/j.agsy.2008.11.002 Article   Google
    Scholar   Poland W, Bruno R, Hovde M, Kuwabara-Wagg J (2006) Best practices in
    model-based HIV drug design. ECCMID, Nice, France, pp 602 Pruss JA, Beegle DB,
    Turgeon AJ, Day RL, Weaver RD (2005) Using on-farm data to validate crop management
    recommendations and implementation. Agron J 97:113–117 Article   Google Scholar   Quilot-Turion
    B, Genard M (2009) Towards the use of modelling in genetic improvement: example
    of peach fruit quality. Acta Horticulturae, pp 269–276 Reidsma P, Ewert F, Boogaard
    H, van Diepen K (2009) Regional crop modelling in Europe: the impact of climatic
    conditions and farm characteristics on maize yields. Agric Syst 100:51–60. doi:10.1016/j.agsy.2008.12.009
    Article   Google Scholar   Reshmidevi TV, Eldho TI, Jana R (2009) A GIS-integrated
    fuzzy rule-based inference system for land suitability evaluation in agricultural
    watersheds. Agric Syst 101:101–109. doi:10.1016/j.agsy.2009.04.001 Article   Google
    Scholar   Ricci B, Franck P, Toubon JF, Bouvier JC, Sauphanor B, Lavigne C (2009)
    The influence of landscape on insect pest dynamics: a case study in southeastern
    France. Landscape Ecol 24:337–349. doi:10.1007/s10980-008-9308-6 Article   Google
    Scholar   Rizzoli AE, Donatelli M, Athanasiadis IN, Villa F, Huber D (2008) Semantic
    links in integrated modelling frameworks. Math Comput Simul 78:412–423. doi:10.1016/j.matcom.2008.01.017
    Article   Google Scholar   Roger-Estrade J, Richard G, Dexter AR, Boizard H, De
    Tourdonnet S, Bertrand M, Caneill J (2009) Integration of soil structure variations
    with time and space into models for crop management. A review. Agron Sustain Dev
    29:135–142. doi:10.1051/agro:2008052 Article   Google Scholar   Rossing WAH, Jansma
    JE, DeRuijter FJ, Schans J (1997) Operationalizing sustainability: exploring options
    for environmentally friendly flower bulb production systems. Eur J Plant Pathol
    103:217–234 Article   Google Scholar   Sadok W, Angevin F, Bergez JE, Bockstaller
    C, Colomb B, Guichard L, Reau R, Dore T (2008) Ex ante assessment of the sustainability
    of alternative cropping systems: implications for using multi-criteria decision-aid
    methods. A review. Agron Sustain Dev 28:163–174. doi:10.1051/agro:2007043 Article   Google
    Scholar   Sadok W, Angevin F, Bergez JE, Bockstaller C, Colomb B, Guichard L,
    Reau R, Messean A, Dore T (2009) MASC, a qualitative multi-attribute decision
    model for ex ante assessment of the sustainability of cropping systems. Agron
    Sustainable Dev 29:447–461. doi:10.1051/agro/2009006 Article   Google Scholar   Sanchez-Silva
    M, Rosowsky D, Guikema S (2009) Optimization model for design and operation of
    transportation networks in seismic regions. J Infrastruct Syst 15:70–79. doi:10.1061/(asce)1076-0342(2009)15:2(70)
    Article   Google Scholar   Saphores JDM (2000) The economic threshold with a stochastic
    pest population: a real options approach. Am J Agric Econ 82:541–555 Article   Google
    Scholar   Schoeberl B, Nielsen UB, Paxson R (2006) Model-based design approaches
    in drug discovery: a parallel to traditional engineering approaches. IBM J Res
    Dev 50:645–651 Article   CAS   Google Scholar   Scholz M, Engel C, Loeffler M,
    Grp DS (2006) Model-based design of chemotherapeutic regimens that account for
    heterogeneity in leucopoenia. Br J Haematol 132:723–735. doi:10.1111/j.1365-2141.2005.05957.x
    Article   PubMed   CAS   Google Scholar   Sidi MMO, Hammadi S, Hayat S, Borne
    P (2008a) Urban transport network regulation and evaluation: a fuzzy evolutionary
    approach. Ieee Trans Syst Man Cybern Part Syst Hum 38:309–318. doi:10.1109/tsmca.2007.914789
    Article   Google Scholar   Sidi MMO, Hayat S, Hammadi S, Borne P (2008b) A novel
    approach to developing and evaluating regulation strategies for urban transport
    disrupted networks. Int J Computer Integr Manuf 21:480–493. doi:10.1080/09511920701574982
    Article   Google Scholar   Smaling EMA, Stoorvogel JJ, Windmeijer PN (1993) Calculating
    soil nutrient balances in Africa at different scales. 2. District scale. Fertil
    Res 35:237–250 Article   CAS   Google Scholar   Song HB, Meng Q, Men AD, IEEE
    (2007) P2P computing in design of VANET routing protocol. 2007 International Conference
    on Wireless Communications, Networking and Mobile Computing, vols. 1–15, pp 1502–1507
    Sterk B, van Ittersum MK, Leeuwis C, Wijnands FG (2007) Prototyping and farm system
    modelling—partners on the road towards more sustainable farm systems? Eur J Agron
    26:401–409. doi:10.1016/j.eja.2006.12.006 Article   Google Scholar   Stockle CO,
    Donatelli M, Nelson R (2003) CropSyst, a cropping systems simulation model. Eur
    J Agron 18:289–307 Article   Google Scholar   Stoorvogel JJ, Antle JM, Crissman
    CC, Bowen W (2004) The tradeoff analysis model: integrated bio-physical and economic
    modeling of agricultural production systems. Agric Syst 80:43–66. doi:10.1016/j.agsy.2003.06.002
    Article   Google Scholar   Strub IS, Bayen AM (2006) Mixed initial-boundary value
    problems for scalar conservation laws: application to the modeling of transportation
    networks. Hybrid Systems: Computation and Control, Proceedings 3927:552–567 Google
    Scholar   Tixier P, Malezieux E, Dorel M, Wery J (2008) SIMBA, a model for designing
    sustainable banana-based cropping systems. Agric Syst 97:139–150. doi:10.1016/j.agsy.2008.02.003
    Article   Google Scholar   Tortum A, Yayla N, Gokdag M (2009) The modeling of
    mode choices of intercity freight transportation with the artificial neural networks
    and adaptive neuro-fuzzy inference system. Expert Syst Appl 36:6199–6217. doi:10.1016/j.eswa.2008.07.032
    Article   Google Scholar   Ulery AL, Teed JA, van Genuchten MT, Shannon MC (1998)
    SALTDATA: a database of plant yield response to salinity. Agron J 90:556–562 Article   Google
    Scholar   Unnikrishnan A, Valsaraj V, Damnjanovic I, Waller ST (2009) Design and
    management strategies for mixed public private transportation networks: a meta-heuristic
    approach. Comput-Aided Civ Infrastruct Eng 24:266–279. doi:10.1111/j.1467-8667.2008.00587.x
    Article   Google Scholar   van Ittersum MK, Leffelaar PA, van Keulen H, Kropff
    MJ, Bastiaans L, Goudriaan J (2003) On approaches and applications of the Wageningen
    crop models. Eur J Agron 18:201–234 Article   Google Scholar   van Ittersum MK,
    Ewert F, Heckelei T, Wery J, Olsson JA, Andersen E, Bezlepkina I, Brouwer F, Donatelli
    M, Flichman G, Olsson L, Rizzoli AE, van der Wal T, Wien JE, Wolf J (2008) Integrated
    assessment of agricultural systems—a component-based framework for the European
    Union (SEAMLESS). Agric Syst 96:150–165. doi:10.1016/j.agsy.2007.07.009 Article   Google
    Scholar   Vereijken P (1997) A methodical way of prototyping integrated and ecological
    arable farming systems (I/EAFS) in interaction with pilot farms. Eur J Agron 7:235–250
    Article   Google Scholar   Walton MP, Farrell JA, Elliott NC, Wratten SD, Gutierrez
    AP, van Lenteren JC, Van Lenteren JC (1995) Integrated pest management. Integrated
    Pest Management, pp xii+356 Wang E, Robertson MJ, Hammer GL, Carberry PS, Holzworth
    D, Meinke H, Chapman SC, Hargreaves JNG, Huth NI, McLean G (2002) Development
    of a generic crop model template in the cropping system model APSIM. Eur J Agron
    18:121–140 Article   Google Scholar   White JW, Hoogenboom G (2003) Gene-based
    approaches to crop simulation: past experiences and future opportunities. Agron
    J 95:52–64 Article   Google Scholar   Willocquet L, Savary S, Fernandez L, Elazegui
    FA, Castilla N, Zhu D, Tang Q, Huang S, Lin X, Singh HM, Srivastava RK (2002)
    Structure and validation of RICEPEST, a production situation-driven, crop growth
    model simulating rice yield response to multiple pest injuries for tropical Asia.
    Ecol Model 153:247–268 Article   Google Scholar   Willocquet L, Aubertot JN, Lebard
    S, Robert C, Lannou C, Savary S (2008) Simulating multiple pest damage in varying
    winter wheat production situations. Field Crops Res 107:12–28. doi:10.1016/j.fcr.2007.12.013
    Article   Google Scholar   Wu K, Nagurney A, Liu ZG, Stranlund JK (2006) Modeling
    generator power plant portfolios and pollution taxes in electric power supply
    chain networks: a transportation network equilibrium transformation. Transportation
    Research Part D-Transport and Environment 11:171–190. doi:10.1016/j.trd.2006.01.002
    Article   Google Scholar   Xie F, Levinson D (2009) Modeling the growth of transportation
    networks: a comprehensive review. Network Spatial Eco 9:291–307. doi:10.1007/s11067-007-9037-4
    Article   Google Scholar   Yao MJ, Hsu HW (2009) A new spanning tree-based genetic
    algorithm for the design of multi-stage supply chain networks with nonlinear transportation
    costs. Optim Eng 10:219–237. doi:10.1007/s11081-008-9059-x Article   Google Scholar   Zak
    J (2009) Multiple criteria evaluation and optimization of transportation systems.
    J Adv Transp 43:91–94 Article   Google Scholar   Zhang W, Swinton SM (2009) Incorporating
    natural enemies in an economic threshold for dynamically optimal pest management.
    Ecol Model 220:1315–1324. doi:10.1016/j.ecolmodel.2009.01.027 Article   Google
    Scholar   Zhang LX, Qi WW, Su L, Whisler F (2002) Deltasoy—an Internet-based soybean
    database for official variety trials. Agron J 94:1163–1171 Article   Google Scholar   Download
    references Author information Authors and Affiliations UR 1115 Plantes et Systèmes
    de culture Horticoles, INRA, Domaine Saint Paul, Site Agroparc, 84914, Avignon
    Cedex 9, France Mohamed-Mahmoud Ould-Sidi & Françoise Lescourret Corresponding
    author Correspondence to Mohamed-Mahmoud Ould-Sidi. About this article Cite this
    article Ould-Sidi, MM., Lescourret, F. Model-based design of integrated production
    systems: a review. Agronomy Sust. Developm. 31, 571–588 (2011). https://doi.org/10.1007/s13593-011-0002-8
    Download citation Accepted 25 July 2010 Published 16 March 2011 Issue Date July
    2011 DOI https://doi.org/10.1007/s13593-011-0002-8 Share this article Anyone you
    share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Keywords
    Cropping systems Integrated production IPS Modeling Model-based design Optimization
    methods Use our pre-submission checklist Avoid common mistakes on your manuscript.
    Sections Figures References Abstract Introduction Model-based design of integrated
    production systems: brief overview of the elements involved Model-based design
    of integrated production systems: examples, comparison to other fields, and critical
    analysis Efficiency of model-based design References Author information About
    this article Advertisement Discover content Journals A-Z Books A-Z Publish with
    us Publish your research Open access publishing Products and services Our products
    Librarians Societies Partners and advertisers Our imprints Springer Nature Portfolio
    BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state
    privacy rights Accessibility statement Terms and conditions Privacy policy Help
    and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University
    of Nebraska-Lincoln (3000134173) © 2024 Springer Nature'
  inline_citation: '>'
  journal: Agronomy for sustainable development
  limitations: '>'
  pdf_link: null
  publication_year: 2011
  relevance_score1: 0
  relevance_score2: 0
  title: 'Model-based design of integrated production systems: a review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1061/(asce)ir.1943-4774.0001089
  analysis: '>'
  authors:
  - Hajar Savari
  - M J Monem
  - Kazem Shahverdi
  citation_count: 14
  full_citation: '>'
  full_text: '>

    This website uses cookies to ensure you get the best experience on our website.
    Learn more GOT IT! Access provided by University of Nebraska-Lincoln Search term(s)
    SEARCH Login / Register Skip main navigation JOURNALS BOOKS MAGAZINES AUTHOR CENTER
    USER SERVICES TOPICS SUBMIT SUBSCRIBE RECOMMEND JOURNAL HOME CURRENT ISSUE ALL
    ISSUES ABOUT HomeJournal of Irrigation and Drainage EngineeringArchiveVol. 142,
    No. 11 PREVIOUS ARTICLE NEXT ARTICLE Technical Papers Jul 12, 2016 Comparing the
    Performance of FSL and Traditional Operation Methods for On-Request Water Delivery
    in the Aghili Network, Iran Authors: H. Savari savari.hj@gmail.com, M. J. Monem
    monem_mj@modares.ac.ir, and K. Shahverdi shahverdi2006@gmail.comAUTHOR AFFILIATIONS
    Publication: Journal of Irrigation and Drainage Engineering Volume 142, Issue
    11 https://doi.org/10.1061/(ASCE)IR.1943-4774.0001089 126 15 PDF Journal of Irrigation
    and Drainage Engineering Volume 142, Issue 11 November 2016 Abstract Introduction
    Material and Methods Results and Discussion Conclusion Notation References Information
    & Authors Metrics & Citations References Media Tables Share Abstract The management
    improvement of irrigation networks is inevitable because of limited water resources
    and competition in various sectors of industry, agriculture, environment, and
    urban water consumption. Application of appropriate water delivery scheduling
    is one of the methods to improve irrigation management. Several delivery methods
    are practiced in irrigation networks according to water availability, type of
    network control system, and exiting capacities. One promising delivery method
    is the on-request system, which could be applied manually in irrigation networks.
    High performance of delivery methods arise from the determination of appropriate
    operation instructions. In previous studies, the Fuzzy SARSA learning (FSL) method
    was applied to determine operation instruction for on-request delivery in a canal
    of the Aghili irrigation network located in southwest Iran (SARSA is the definition
    of state, action, reward, state, action). In this work, the conventional manual
    operation on the same canal was evaluated, and the results were compared with
    FSL. The results for both methods in the normal condition of the network were
    acceptable because the adequacy and efficiency indicators were more than 90%,
    and the maximum deviation of water depth was less than 10%. However, in the circumstance
    of water shortage, the results indicated that applying the FSL method provided
    good and valid results, so that the index of adequacy was almost 0.7 for all blocks.
    Therefore, the FSL is able to distribute the water more equitably among the consumers
    in water shortage conditions. Introduction Different delivery methods were used
    in irrigated agriculture. A delivery schedule is a process in which time, amount,
    and location of water delivery are determined. The features of delivery methods
    are defined by flow rate ( Q ), irrigation frequency ( f ), delivery duration
    ( t ), and the person who decides on these parameters. A variety of classifications
    were suggested by different researchers considering variability of one or more
    of these parameters, and the person in charge of the decision making, whether
    farmer or network manager. Rotational, on-request (arranged), and on-demand methods
    are three primary types of delivery methods (Anwar and Haq 2013). Rotational delivery,
    in which farmers receive water on a rotation basis, is the most common method.
    In this method, decisions about delivery parameters are made by network authorities
    and usually remained fixed for the agricultural season. On-demand schedule is
    a method that is controlled by the farmers and provides the highest flexibility
    to adapt to irrigation requirements. The user is allowed to receive water based
    on the desired time with little limitation according to the available capacity
    (Merrian 1987). This system should be fully automatic and equipped with high-capacity
    canals and storage tanks. The on-demand and rotation schedules have the most and
    the least flexibility, respectively. The on-request schedule is between on-demand
    and rotational delivery in terms of flexibility. In on-request schedules, the
    discharge, frequency, and duration are adjusted by the agreement between the farmers
    and network manager. In this method, the amount of water requirement is announced
    by farmers, and the network manager makes an agreement with farmers according
    to water availability and other water orders and operates the structures accordingly.
    The on-request schedule increases flexibility compared with rotational delivery
    and does not need costly infrastructure as does on-demand schedules. Furthermore,
    on-request schedules could be implemented manually in the exiting irrigation networks.
    In this method, the proper operational instructions are more complicated than
    that for rotation schedules. Because of the number of orders and variety of water
    requests, preparing operational instructions will be complicated. The developed
    operational instructions will have a direct impact on the network performance.
    Different methods have been used for the determination of operation instructions,
    which are briefly explained in this paper. Several optimization models have been
    applied for scheduling of water delivery and irrigation rotation for different
    users along the distribution canal considering a steady-flow condition. Simulated
    annealing (SA), genetic algorithm (GA), particle swarm optimization (PSO), and
    0-1 programming are the examples of these models presented by Monem and Namdarian
    (2005), Monem and Nouri (2010), Anwar and Haq (2013), Mathur et al. (2009), Ramesh
    et al. (2009), and Anwar and Clarke (2001). Application of delivery schedules
    is one of the sources of unsteady flow in irrigation canals. Because of demand
    variations, it is necessary to change the flow at the canal intake, and check
    structures and turnouts should be adjusted accordingly. Therefore, the operational
    instructions should consider the unsteady flow behavior to minimize its negative
    effects on water delivery. Hydrodynamic models are suitable tools to simulate
    unsteady flow in canals with different structures and various hydraulic conditions.
    A number of hydrodynamic models for irrigation canals have been developed, including
    the simulation of irrigation canals (SIC), SOBEK (named after the ancient Egyptian
    crocodile River god), canal management (CANALMAN), hydrologic engineering center-river
    analysis system (HEC-RAS), and irrigation conveyance system simulation (ICSS).
    Tariq and Latif (2010) used the SIC hydrodynamic model to evaluate the operational
    performance of the distributaries. In this study, different operational scenarios
    were investigated and quantified based on fixed frequency operation. Montazar
    et al. (2006) studied various operation scenarios and their effect on flow regulation
    and water distribution in an irrigation canal of the Narmada district, located
    in northwest India, by using the SOBEK model and showing the ability of SOBEK.
    Haque et al. (2006) developed a model for water distribution in a rice growing
    area with CANALMAN in the state of Terengganu, Malaysia. The results of this study
    were used to improve the water delivery through gate regulations. Mohseni Movahed
    and Monem (2007) utilized the irrigation conveyance system simulation-delivery
    optimization model (ICSS-DOM) for assessment of operation method and optimization
    of water delivery schedule on the E1R1 secondary canal of the Dez irrigation network
    for 10 days. The results indicated that optimal performance improved very well
    in comparison with the present situation, and the developed model was an efficient
    tool for the evaluation and optimization of irrigation canal performance. Shahrokhnia
    and Javan (2005) applied HEC-RAS to assess the performance of the Ordibehesht
    canal of the Doorodzan irrigation network. The results show that HEC-RAS could
    be used for a large and complex irrigation networks in the absence of observed
    flow data and improvement of irrigation management plans. Previous research was
    mostly performed for rotation or on-demand schedules, whereas on-request schedules
    with more complex operation requires specific study and advanced methods for determination
    operational instructions. The Fuzzy SARSA Learning (FSL) is one of the promising
    branches of artificial intelligence and is presented as a new learning method
    that discovers and constructs the structure of the environment in parallel with
    learning the optimal policy (SARSA is the definition of state, action, reward,
    state, action). The convergence of the FSL method has been proven mathematically
    and successfully used in several applications, such as game theory, controlling
    of robots, and industry (Glorennec and Jouffe 1997; Derhami 2007; Derhami et al.
    2008). The lack of mathematical analysis and proper exploration are the weakness
    of some of learning methods, but the FSL has resolved those weaknesses (Shahverdi
    2015). FSL results could be generalized and could easily handle the uncertainties.
    The FSL has the capability to learn different and limited situations and estimate
    operational instructions for a wide range of conditions (Shahverdi et al. 2016).
    The FSL was used by Shahverdi et al. (2016) in combination with the ICSS hydrodynamic
    model for determining operational instructions for on-request schedules. The results
    showed that the developed algorithm is suitable for determination of appropriate
    operations. The objective of this study is to examine the performance of conventional
    operation for on-request schedules in the Aghili irrigation network with a delivery
    duration of 24 h and compare results with the FSL method. Material and Methods
    Area Description The Aghili irrigation network (Fig. 1) is located in Khuzestan
    province in southwest Iran. It consists of a primary conveyance canal and two
    primary canals named eastern and western Aghili. The total irrigated command area
    is 7,225 ha, of which the average annual water consumption is estimated at approximately
    150 million m 3 . Water travels approximately 12 km from the Gotvand diversion
    Dam through the primary canal and feeds two primary canals. The eastern and western
    canal capacities are 5 and 7 m 3 / s , respectively. Fig. 1. Location of the Aghili
    irrigation network In this work, the conventional manual operation of eastern
    Aghili was examined. The on-request schedule is the conventional operation in
    this primary canal with delivery duration ( t ) of 24 h and 10-day delivery period
    ( f ). The primary canal is a 16.215-km-long concrete canal with a trapezoidal
    cross section, with side slope of ∶ 1 ∶ 1 . Bed slope is variable along the canal
    between 0.0001 and 0.0004. For the first 9.49 km of the canal, the bottom width
    is 1.5 m, and for the rest of the canal, it is 1 m. There are 21 turnouts and
    11 check structures, which are all rectangular flat slide gates. The canal reach
    between two check structures is called a block. Thus, the canal is divided into
    11 blocks. Table 1 gives the block characteristics, and Fig. 2 shows the longitudinal
    profile of the canal. Table 1. Characteristics of Blocks Block Turnout number
    Dimension of gate ( m × m ) 1 1, 2, 3 0.6 × 0.6 2 4, 5 0.6 × 0.6 3 6, 7 0.6 ×
    0.6 4 8, 9 0.6 × 0.6 5 10, 11 0.6 × 0.6 6 12 0.6 × 0.6 7 13 0.6 × 0.6 8 14 0.6
    × 0.6 9 15, 16 0.6 × 0.6 10 17, 18 0.6 × 0.6 11 19, 20 0.6 × 0.6 Fig. 2. Longitudinal
    profile of the examined canal Conventional Operation Method in the Aghili Irrigation
    Network In the Aghili irrigation network with on-request schedule, farmers order
    the amount of required water by filling order forms 24 h in advance. The operator
    collects the orders and determines the time and required adjustment of structures
    accordingly. For operation execution, the operator moves along the canal from
    upstream and regulates the relevant structures. The structures’ adjustments are
    determined based on the secondary steady flow condition and the operator’s experience.
    The time interval between adjustments of two structures is a function of the distance
    between the two structures, the time required for adjusting the desired structure,
    and the operator’s experience on hydraulic behavior and flow travel time. Adjustments
    of turnouts are performed when the water depth for new discharge would be almost
    constant around the target depth ( y t ) within the dead band ( ± 10 y t ). The
    slide gate flow equation is used to calculate the adjustments of the gate using
    the upstream depth (target depth) and the gate flow rate. ICSS Model The ICSS
    model has been used for simulating operational conditions of the eastern Aghili
    canal to estimate water deliveries to the turnouts and to calculate the performance
    of operation. ICSS developed by Manz (1990) is a one-dimensional model for gradually
    varied flow that is designed to simulate the hydraulics, hydrology, and operations
    of irrigation conveyance systems. The ICSS model is capable of simulating steady
    and unsteady flow with a variety of canal cross sections, a wide range of structures,
    and different boundary conditions. FSL Method The FSL method, which is the combination
    of fuzzy logic controller and SARSA reinforcement learning (RL), is an extended
    version of RL and can be used in the problems with continuous input/output and
    large space. Fuzzy set theory is a generalization of classical set theory. The
    Takagi-Sugeno-Kang (TSK) model is one of the most common fuzzy systems used in
    the past decades. A simplified typical zero-order TSK model is a fuzzy system
    in which the rule consequents are usually crisp numbers of the inputs (Sugeno
    and Takagi 1983). Eq. (1) shows a zero-order TSK with n -input, one-output, and
    R rules. R i : If x 1 is L i 1 and … and x n is L in , then ( α i 1 with value
    Q i 1 ) or … or ( α i m with value Q i m ) (1) in which s = x 1 × ⋯ × x n is the
    vector of input; L i = L i 1 × ⋯ × L i n is the fuzzy set of the rule of i ; m
    = number of possible discrete actions for each rule; a i j = candidate action
    of j ; and weight of Q i j = value of the action of j in the rule of i . FSL learns
    a simplified fuzzy TSK model in the SARSA RL process. SARSA RL tunes the parameters
    of conclusion parts of TKS system (values of Q i j ) to obtain the best policy.
    In FSL, consider that the system is in the initial state of S t , and the following
    steps are performed for the next states ( S t + 1 ): 1. Observing state of S t
    + 1 and assigning immediate reward of r t + 1 by using Eq. (2) | y t + 1 − y target
    | > 0.1 y target → r t + 1 = − 10 × | y t + 1 − y target | | y t + 1 − y target
    | < 0.1 y target → r t + 1 = 100 ( d Q c t + 1 + d (2) In which d Q c and d Q
    t -flow deviations in the check structures and turnouts from target values, respectively;
    and y and y target = observed and target depth at upstream of check structure.
    The subscript of t + 1 refers to the state of t + 1 . The parameters for reward
    calculation are provided by the ICSS model. Input to the ICSS is a set of selected
    actions. The ICSS performs the actions and simulates the canal system and computes
    the water depths and flow rates. The simulation time step was 0.01 h, and the
    total operation time for each operation was 24 h. 2. The softmax action selection
    method is used to select the action in this research. In this method, the probability
    of all actions in all rules are first computed using Eq. (3); then, the action
    of rule of i , which has higher probability, are selected and nominated as a i
    i + p ( a i j ) = e μ i Q i j / δ t ∑ j = 1 m e μ i Q i j / δ t (3) in which μ
    i = firing strength of rule i computed by the product of the antecedent fuzzy
    sets; Q i j = weight of action of i in rule of j , which is equal to zero at the
    beginning of learning; and δ > 0 is the temperature specifying how random values
    should be chosen. When δ is high and Q is low, the actions is are selected with
    the same probability. The initial value of δ was 30 in this research, and δ decreases
    by Eq. (4) during the learning process δ t + 1 = δ t − d δ · δ t (4) in which
    d δ = reduction coefficient, which was 0.009 in this research. As the temperature
    is reduced, the actions with higher values are more likely to be selected. As
    the maximum assigned reward becomes close to the maximum reward for an action,
    the value of that action would be the highest. The greedy action selection method
    selects the action a using Eq. (5), for which Q is the highest weight of actions
    a = arg max b ∈ A Q t ( s , b ) (5) 3. The system output of a is computed by Eq.
    (6), and the corresponding action value function of w t ( s t , a t ) is estimated
    according to Eq. (7) a t ( s t ) = ∑ i = 1 R μ i ( s t ) a i i + (6) w t ( s t
    , a t ) = ∑ i = 1 R μ i ( s t ) Q t i i + (7) 4. As the computed action is applied
    to the environment (canal system), the weight parameters of the rule of i are
    updated by Eq. (8) Δ Q t + 1 i j = { β t × Δ w ( s t , a t ) × μ i ( s t ) if
    j = i + 0 otherwise (8) in which β = learning rate. The learning rate determines
    to what extent the newly acquired information will override the old information.
    The β value of 0 will make the agent to learn nothing. The initial value of learning
    rate ( β 0 ) is determined by trial and error obtained as 0.9 in this study, and
    is decreased during the learning process by Eq. (9) β t + 1 = β t 1.017 (9) in
    which β t = learning rate in iterations and is equal to β 0 for the first iteration.
    If β i + 1 → 0 , then Δ Q → 0 . The approximate action value error ( Δ w ) is
    computed using Eq. (10) Δ w t ( s t , a t ) = r t + 1 + γ w t ( s t + 1 , a t
    + 1 ) − w t ( s t , a t ) (10) in which γ = discount factor ( 0 < γ < 1 ) and
    is determined by trial and error. The discount factor determines the importance
    of future rewards. If rewards received in the far future are worth less than rewards
    received sooner, they are described as being discounted. 5. Make t → t + 1 and
    return to Step 1 if termination criterion was not reached. The maximum iteration
    number is considered as 10,000. However the learning is completed in less than
    10,000 iterations. In irrigation canals, the agent is the canal structure. The
    environmental information is provided from the canal system using a simulator.
    The policy is a probability of the action selection function [Eq. (10)]. An appropriate
    action (check structures and turnout settings) causes the water depth deviations
    to occur near the target depth, and the delivery discharge error decreases. Reward
    is defined as a function of immediate adequacy and efficiency of water delivery
    at specified depth. The Q function is defined as a long run reward of adequacy
    and efficiency at specified depth. The value of each action is stored in the Q
    function. The simulator in the present study is the ICSS model. There is no need
    for data or a model to calibrate the FSL, because FSL interacts with the environment
    and is calibrated with itself during the learning by updating the values of the
    Q function. When the learning is completed, the Q function reaches the best values.
    FSL converges to the optimum values with 100% probability. The initial inputs
    of the model are the physical characteristics of the canal, water requirements,
    and target depths. Using the probability action selection function, a specific
    gate adjustment is selected. The selected action is executed in the simulator
    (ICSS model), and hydraulic behavior is simulated for a desired time period and
    performance indicators are determined. The reward for the selected action is calculated
    based on performance indicators. The appropriate actions with higher rewards are
    saved and form the long-term reward of the Q function. Finally, according to the
    Q function, the best action with the highest reward is determined. The best selected
    action is introduced to the operator to be executed in canal for the desired time
    period. In the present study, the MATLAB code of the described FSL architecture
    was written and linked with prepared ICSS code in FORTRAN (Shahverdi et al. 2016).
    Performance Indicators The performance indicators of measure of performance relative
    to efficiency (MPF), measure of performance relative to adequacy (MPA), and measure
    of performance relative to equity (MPE) were used to evaluate the performance
    of water delivery in irrigation canals. Efficiency reflects the water waste in
    irrigation canals (Molden and Gates 1990). The delivery efficiency is defined
    as the ratio of requested to diverted discharge. Water delivery must satisfy agreed-upon
    delivery as close as possible. Adequacy is the ratio of the delivered to requested
    discharge. Equity, as related to the water delivery system, is defined as spatial
    uniformity of adequacy indicator. The efficiency, adequacy, and equity indicators
    are represented as Eqs. (11)–(13) MPF = 1 N ∑ N 1 M ∑ M ( PE ) , { PE = Q R Q
    D if Q R < Q D PE = 1 if Q R Q D ≥ 1 (11) MPA = 1 N ∑ N 1 M ∑ M ( PA ) , { PA
    = Q D Q R if Q R > Q D PA = 1 if Q D Q R ≥ 1 (12) MPE = 1 T ∑ T CV N ( Q D Q R
    ) (13) where T = time; N = number of time steps in delivery period; M = number
    of turnouts; Q D = delivered discharge; and Q R = requested discharge. The best
    MPE and MPA values of 1.0 is desirable; MPE values less than 1.0 indicate water
    waste, and MPA values less than 1.0 indicate water deficiency. The performance
    indicators of maximum absolute error (MAE) and integral of absolute magnitude
    of error (IAE) were used to evaluate the control of water depth. The MAE is a
    measure of maximum deviation in water level from the desired target depth. The
    IAE indicates how long and how far the water level deviates from target depth.
    The smaller the MAE and IAE values, the better the performance of the system.
    The MAE and IAE indicators defined by the ASCE Task Committee as Eqs. (14) and
    (15), respectively (Clemmens et al. 1998) MAE = max ( | y target − y | ) y target
    (14) IAE = T D ∑ T = 0 D ( | y target − y | ) y target (15) where T and D = simulation
    time step and total simulation time, respectively. Studied Scenarios To examine
    the water delivery schedule of the eastern Aghili canal, the recorded data of
    flow variation for irrigation season of 2011 were obtained. The first day situation
    was considered as the initial condition. Two scenarios of normal condition and
    water shortage are considered. In Scenario 1, the normal circumstance of the Aghili
    network was considered. It means that there was no water shortage in the network
    and the requested water of the canal will be supplied. The canal inflow and the
    turnout requirements for this scenario are given in Table 2. Table 2. Turnout
    Requirements for Scenario 2 Turnout number QT (current day) ( L / s ) QT (the
    next day) ( L / s ) Qin ( L / s ) 1,430 1,590 TO1 80 100 TO2 100 100 TO3 70 80
    TO4 80 80 TO5 70 80 TO6 60 80 TO7 70 80 TO8 80 80 TO9 70 80 TO10 60 80 TO11 60
    70 TO12 60 70 TO13 60 70 TO14 70 60 TO15 60 60 TO16 60 60 TO17 60 60 TO18 50 60
    TO19 50 60 TO20 50 60 TO21 50 50 Downstream 60 60 Note: QT = turnout requests.
    In Scenario 2, 30% water shortage is examined. The capability of the FSL method
    for equitable water distribution and maintaining delivery adequacy under such
    an emergency condition is tested. The requested water for this scenario is given
    in Table 3. Table 3. Turnout Requirements for Scenario 2 Turnout number QT (the
    next day) ( L / s ) Qin ( L / s ) 1,620 TO1 102 TO2 102 TO3 82 TO4 82 TO5 82 TO6
    82 TO7 82 TO8 82 TO9 82 TO10 82 TO11 71 TO12 71 TO13 71 TO14 61 TO15 61 TO16 61
    TO17 61 TO18 61 TO19 61 TO20 61 TO21 61 Downstream 60 Results and Discussion The
    required data for evaluating and analyzing the scenarios were obtained from simulation
    of Aghili canal and the conventional operation schedule using the ICSS hydrodynamic
    model, and the results of the simulation were compared to FSL results. For conventional
    operation, the required adjustment of structures was determined according to the
    secondary steady flow, and operational timing was calculated based on the average
    speed of operator driving motorcycle, which was considered to be 30 km / h and
    the distance between structures. The FSL method determined the optimum time and
    required adjustment of the structures so that the error of delivered water is
    minimal, while the performance indicators are close to their optimum value and
    the target depth remains in the dead band. The time and adjustments of structures
    for both methods are given in Table 4 for Scenario 1. In this scenario, the operation
    started at time zero (8:00 a.m.) and continued for 24 h (the next morning at 8:00
    a.m.). In the conventional method, the first turnout opening was adjusted to 17.5
    cm at 0.11 h, and all other structures along the canal were adjusted in sequence.
    Finally, the last structure was adjusted to 5.5 cm at 3.7 h, and after that the
    water delivery was continued for 20.25 h. Performance indicators were determined
    and presented in Table 5. Table 4. Operational Instructions Scenario 1 in the
    Conventional and FSL Methods Turnout number Conventional method FSL method Time
    (h) GO (cm) Time (h) GO (cm) TO1 0.111 17.5 0.23 17.7 TO2 0.393 13.3 0.55 12.9
    TO3 0.505 9 0.7 9.4 Ch1 0.588 33.3 0.71 35.5 TO4 0.769 11.5 1.27 10.2 TO5 0.893
    9.01 2.15 10.6 Ch2 0.976 33.95 2.16 36.4 TO6 1.076 11.46 2.26 10.6 TO7 1.2 9.41
    2.43 9.3 Ch3 1.285 37.1 2.44 33.8 TO8 1.463 10.5 2.65 10.8 TO9 1.584 9.48 1.91
    9 Ch4 1.67 22.65 2.92 23 TO10 1.863 10.8 3.15 10.7 TO11 1.971 8.22 3.45 9.9 Ch5
    2.05 19.52 3.46 20.6 TO12 2.17 8.93 3.63 8.7 Ch6 2.254 3.01 3.64 27.6 TO13 2.374
    9.13 3.95 9.1 Ch7 2.465 25.7 3.96 24.8 TO14 2.573 7.8 4.39 8.2 Ch8 2.656 23.9
    4.4 24.2 TO15 2.773 7.8 4.68 8.2 TO16 2.857 7.8 4.86 7.1 Ch9 2.941 15.7 4.87 16.6
    TO17 3.075 8.5 5.07 8.1 TO18 3.16 8.27 5.32 7.9 Ch10 3.243 10.4 5.33 9.8 TO19
    3.362 8.82 5.52 9.1 TO20 3.46 8.82 5.75 9 Ch11 3.7 5.5 5.76 5.1 Note: GO = gate
    opening. Table 5. Performance Indicators in Scenario 1 in the Conventional and
    FSL Methods Block Conventional method FSL method MPA MPF MPE IAE MAE MPA MPF MPE
    IAE MAE B1 1.000 0.989 — 1.1 2.08 0.996 0.999 — 4.0 5.5 B2 1.000 0.988 — 1.2 1.84
    1.000 0.971 — 2.0 7.4 B3 1.000 0.994 — 0.5 0.87 0.991 0.999 — 5.2 9.5 B4 1.000
    1.000 — 0.2 1.13 0.986 1.000 — 0.9 2.6 B5 1.000 1.000 — 0.5 0.78 1.000 0.936 —
    2.8 4.7 B6 1.000 1.000 — 0.9 1.33 1.000 0.983 — 5.5 9.0 B7 1.000 1.000 — 1.3 1.81
    1.000 0.995 — 0.7 2.3 B8 1.000 1.000 — 1.1 1.79 1.000 0.968 — 3.2 5.2 B9 0.992
    1.000 — 1.8 2.63 0.947 1.000 — 5.5 8.2 B10 0.992 1.000 — 1.0 2.00 0.998 1.000
    — 6.7 9.6 B11 0.962 1.000 — 1.590 4.00 1.000 0.990 — 1.7 5.2 Canal (total) 0.999
    0.999 0.011 — — 0.993 0.986 0.014 — — Table 5 shows that the performance indicators
    are very close to their optimum value for both the conventional and FSL methods.
    The minimum value of efficiency and adequacy in the conventional and FSL method
    were 0.994 and 0.962, respectively. For most of the blocks, the adequacy was 1
    for both methods, and the equity indicator of the canal was less than 0.1, which
    indicates that all turnouts receive an equitable share of water. In addition,
    the MAE indicator was less than 10% and showed the water depth deviation from
    target depth was in the dead band. The results show that the two methods provide
    similar outputs in these scenarios. Applying the FSL instead of the conventional
    method showed no specific advantages in this condition. The Scenario 2 was defined
    for the water shortage in the network with 30% reduction of the canal inflow.
    For both methods, the requested discharge kept the same as Scenario 1. When the
    inflow of the canal is much less or more than the required amount, the adequacy
    and equity are more important than other indicators. Table 6 shows the performance
    indicators for this condition. In the conventional method the adequacy was more
    than 0.9 in the upstream blocks, whereas it was zero in downstream blocks. This
    result shows that in the conventional method, the upstream outlets have received
    enough water and the shortage has imposed to the downstream. Fig. 3 presents the
    variation of adequacy in each block. The adequacy indicators for all blocks are
    almost 0.7 in the FSL method. It is obvious that unlike the conventional method,
    the FSL method could provide the equity among the users, which is very important
    in the shortage condition. Table 6. Performance Indicators in Scenario 2 in the
    Conventional and FSL Methods Block Conventional method FSL method MPA MPF MPE
    IAE MAE MPA MPF MPE IAE MAE B1 0.930 1.000 — 5.60 4.80 0.720 1.000 — 7.00 8.00
    B2 0.930 1.000 — 8.20 8.00 0.0740 1.000 — 0.00 0.00 B3 0.950 1.000 — 4.30 3.40
    0.750 1.000 — 4.00 6.00 B4 0.980 1.000 — 3.30 1.10 0.730 1.000 — 1.00 5.00 B5
    0.970 1.000 — 5.80 3.10 0.730 1.000 — 2.00 4.00 B6 0.980 1.000 — 6.90 6.70 0.730
    1.000 — 1.00 3.00 B7 0.940 1.000 — 6.90 6.60 0.730 1.000 — 5.00 8.00 B8 0.000
    0.000 — 97.0 90.0 0.730 1.000 — 8.00 11.0 B9 0.000 0.000 — 69.0 59.0 0.730 1.000
    — 6.00 9.00 B10 0.000 0.000 — 67.0 58.0 0.740 1.000 — 3.00 5.00 B11 0.000 0.000
    — 70.0 65.0 0.700 1.000 — 24.0 42.00 Canal (total) 0.620 1.000 0.831 — — 0.730
    1.000 0.11 — — Fig. 3. Adequacy indicator in the conventional and FSL methods
    The lower equity of the conventional method in comparison to FSL indicates that
    the conventional method is not suitable for equitable water distribution among
    delivery points in a water shortage condition. Emergency condition of water shortage
    occurs frequently in the traditional networks with upstream control. Conclusion
    In this study, applying the FSL method for extracting the operation instructions
    was evaluated for normal and water shortage condition in the Aghili network, and
    the result has been compared with the conventional operation. The canal was simulated
    using the ICSS hydrodynamic model, and the results of both methods were assessed
    using performance indicators. The results of the normal condition (Scenario 1)
    indicated that both methods have high performance and there was a slight difference.
    The difference between delivered and required water were very low, and the performance
    indicators were very close to their optimum values. As a result, it can be said
    that applying the FSL method has no special advantage compared to conventional
    operation in the normal condition. Whereas in the water shortage condition (Scenario
    2), the FSL method can extract the proper adjustment and distribute the flow with
    high equity among consumers, and the adequacy indicator was almost equal in all
    blocks. However, for the conventional method, the shortage is imposed to the downstream,
    and the upstream outlets receive the requested water as it is common in the networks
    with upstream control systems. Considering the results, the conventional method
    is appropriate for normal conditions. However, in an emergency condition, such
    as water shortage, this method is not capable to maintain equitable water distribution,
    and the FSL method performs much better. The advantage of FSL is because it is
    a learning method that benefits from long-term reward and finds optimum operations
    through the learning process. Therefore, irrigation canal operation could benefit
    from the FSL method for emergency conditions such as water shortage. Notation
    The following symbols are used in this paper: a i j candidate action; D total
    simulation time; L i fuzzy set of the rules; M number of turnouts; m number of
    discrete actions; N number of time steps in delivery period; n input number of
    fuzzy system; p ( a i j ) probability of selecting action; Q weight of action;
    Q D delivered discharge; Q R requested discharge; R fuzzy rules; r reward; s vector
    of input; s t state at time t ; s t + 1 state at time t + 1 ; t the number of
    time steps; X state variable input; y observed depth; y target target depth; α
    t action at time t ; α t + 1 action at time t + 1 ; β t learning rate; γ discount
    factor; δ parameter control; μ firing strength; and Δ w approximate action value
    error. References Anwar, A. A., and Clarke, D. (2001). “Irrigation scheduling
    using mixed-integer linear programming.” J. Irrig. Drain. Eng., 63–69. Go to Citation
    Crossref Google Scholar Anwar, A. A., and Haq, Z. U. (2013). “Genetic algorithms
    for the sequential irrigation scheduling problem.” Irrig. Sci., 31(4), 815–829.
    Crossref Google Scholar Clemmens, A. J., Kacerek, T. F., Grawitz, B., and Schuurmans,
    W. (1998). “Test cases for canal control algorithms.” J. Irrig. Drain. Eng., 23–30.
    Go to Citation Crossref Google Scholar Derhami, V. (2007). “Intelligent agent
    based controller design for robot navigation.” Ph.D. dissertation, Tarbiat Modares
    Univ., Tehran, Iran (in Persian). Go to Citation Google Scholar SHOW ALL REFERENCES
    Recommended Journal of Irrigation and Drainage EngineeringArticleSeptember 2020
    Comparing Fuzzy SARSA Learning and Ant Colony Optimization Algorithms in Water
    Delivery Scheduling under Water Shortage Conditions Journal of Irrigation and
    Drainage EngineeringArticleNovember 2016 Improving Operation of a Main Irrigation
    Canal Suffering from Inflow Fluctuation within a Centralized Model Predictive
    Control System: Case Study of Roodasht Canal, Iran Journal of Irrigation and Drainage
    EngineeringArticleNovember 1990 Performance Measures for Evaluation of Irrigation‐Water‐Delivery
    Systems Journal of Irrigation and Drainage EngineeringArticleMarch 1984 Irrigation
    Water Delivery Performance Journal of Irrigation and Drainage EngineeringArticleDecember
    2013 Applying Decentralized Water Level Difference Control for Operation of the
    Dez Main Canal under Water Shortage View full text|Download PDF American Society
    of Civil Engineers 1801 Alexander Bell Drive Reston, VA 20191-4400 703-295-6300
    | 800-548-2723 TERMS & CONDITIONS HELP PRIVACY SITEMAP TERMS OF USE SUBSCRIBE
    CONTACT US ACCESSIBILITY, DIVERSITY, EQUITY & INCLUSION Follow us @ASCEPublishing
    LinkedIn YouTube © 1996–2024 American Society of Civil Engineers'
  inline_citation: '>'
  journal: Journal of irrigation and drainage engineering
  limitations: '>'
  pdf_link: null
  publication_year: 2016
  relevance_score1: 0
  relevance_score2: 0
  title: Comparing the Performance of FSL and Traditional Operation Methods for On-Request
    Water Delivery in the Aghili Network, Iran
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22072650
  analysis: '>'
  authors:
  - Omer Gurewitz
  - Mark Shifrin
  - Efi Dvir
  citation_count: 13
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Gurewitz, O.; Shifrin, M.;\nDvir, E. Data Gathering Techniques\nin WSN:\
    \ A Cross-Layer View. Sensors\n2022, 22, 2650. https://dx.doi.org/\n10.3390/s22072650\n\
    Academic Editor: Carles Gomez\nReceived: 8 January 2022\nAccepted: 24 March 2022\n\
    Published: 30 March 2022\nPublisher’s Note: MDPI stays neutral\nwith regard to\
    \ jurisdictional claims in\npublished maps and institutional afﬁl-\niations.\n\
    Copyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article\
    \ is an open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of\
    \ the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nData Gathering Techniques in WSN: A Cross-Layer View\n\
    Omer Gurewitz *\n, Mark Shifrin\nand Eﬁ Dvir\nSchool of Electrical and Computer\
    \ Engineering, Ben-Gurion University of the Negev, Beer-Sheva 8410501, Israel;\n\
    markshi@post.bgu.ac.il (M.S.); eﬁd@post.bgu.ac.il (E.D.)\n* Correspondence: gurewitz@bgu.ac.il\n\
    Abstract: Wireless sensor networks (WSNs) have taken a giant leap in scale, expanding\
    \ their applica-\nbility to a large variety of technological domains and applications,\
    \ ranging from the Internet of things\n(IoT) for smart cities and smart homes\
    \ to wearable technology healthcare applications, underwater,\nagricultural and\
    \ environmental monitoring and many more. This expansion is rapidly growing every\n\
    passing day in terms of the variety, heterogeneity and the number of devices which\
    \ such applications\nsupport. Data collection is commonly the core application\
    \ in WSN and IoT networks, which are\ntypically composed of a large variety of\
    \ devices, some constrained by their resources (e.g., processing,\nstorage, energy)\
    \ and some by highly diverse demands. Many challenges span all the conceptual\n\
    communication layers, from the Physical to the Applicational. Many novel solutions\
    \ devised in the\npast do not scale well with the exponential growth in the population\
    \ of the devices and need to\nbe adapted, revised, or new innovative solutions\
    \ are required to comply with this massive growth.\nFurthermore, recent technological\
    \ advances present new opportunities which can be leveraged in\nthis context.\
    \ This paper provides a cross-layer perspective and review of data gathering in\
    \ WSN and\nIoT networks. We provide some background and essential milestones that\
    \ have laid the foundation\nof many subsequent solutions suggested over the years.\
    \ We mainly concentrate on recent state-of-\nthe-art research, which facilitates\
    \ the scalable, energy-efﬁcient, cost-effective, and human-friendly\nfunctionality\
    \ of WSNs and the novel applications in the years to come.\nKeywords: wireless\
    \ sensor networks (WSNs); Internet of things (IoT); data gathering; wearables;\n\
    compressed sensing; network coding; mobile sink; energy harvesting\n1. Introduction\n\
    Wireless sensor networks (WSN) are data measurement and gathering networks\nbased\
    \ on small hardware (HW) units capable of sensing, monitoring, or measuring their\n\
    surroundings. The sensed data are transmitted directly or by relay via other sensors\
    \ to\nsome sink or server or a base station. The ultimate objective of such a\
    \ conﬁguration is to\nprovide control or exploration capabilities over an area\
    \ where the network is deployed.\nWSN characteristics can vary substantially:\
    \ they can be composed of a few to hundreds of\nthousands of sensors; the monitored\
    \ terrain can range from a small coverage area (e.g., the\nhuman body) to a vast\
    \ realm (e.g., a forest area for ﬁre detection); the sensed variables of\ninterest\
    \ of the surroundings are diverse (e.g., weather or health parameters, acceleration,\n\
    pollution); and the sensors can have different characteristics (e.g., size, computational\n\
    power, energy source).\nThe Internet of things (IoT) aims to improve day-to-day\
    \ life. The concept includes\nsmart cities, smart homes, pervasive health care,\
    \ assisted living, environmental monitoring,\nsurveillance, and so on. The IoT\
    \ paradigm relies on interconnecting a large number of\ndevices (things) linked\
    \ by the Internet via heterogeneous access networks through which\nthey can exchange\
    \ information with one or more Internet gateways that can process the\ndata, take\
    \ action, and forward them to another destination if needed. Since many IoT\n\
    devices are expected to be wireless, and since sensing is one of the main tasks\
    \ and tools\nutilized by the IoT paradigm, IoT systems will rely extensively on\
    \ WSN technology. The\nSensors 2022, 22, 2650. https://doi.org/10.3390/s22072650\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 2650\n2 of 44\nscale of\
    \ scenarios where WSN are deployed nowadays is vast. Traditionally, WSN were\n\
    classiﬁed based on their placement (e.g., terrestrial, underground, multimedia)\
    \ [1]. Since\nWSNs are closely associated with IoT, contemporary classiﬁcation\
    \ tends to re-attribute the\nnotions of the WSN domain to the IoT domain [2] and\
    \ classify them based on their primary\nobjectives, such as smart cities [3,4],\
    \ healthcare [5], retail and leisure [6], utilities (e.g., smart\nhome energy\
    \ control, water metering and leak detection, and other general infrastructure\n\
    monitoring networks) [7], agriculture and environmental safety (e.g., smart farming\
    \ and\nharvesting, pest control [8–10], seismology monitoring [11,12], oceanology\
    \ [13]), and more.\nAs previously explained, one of the main tasks of both WSN\
    \ and IoT systems is\ndata collection and dissemination. Reports are collected\
    \ from the devices, and updates\nand operational assignments are distributed.\
    \ Maintenance and functional assessments\nare also collected and disseminated.\
    \ Data collection and dissemination in very dense\nnetworks such as WSNs and IoT\
    \ networks which span heterogeneous devices, a signiﬁcant\npercentage of which\
    \ are expected to be small, with very constrained processing, storage,\nand energy\
    \ resources and with minimal network capabilities, is challenging and draws\n\
    signiﬁcant attention both by the industrial and academic communities. Some of\
    \ these\nchallenges include: (i) Information management — the amount of information\
    \ collected or\nneeding to be disseminated to the relevant entities is enormous,\
    \ and some is expected to be\nredundant, both in terms of the information sent\
    \ by each device, which can be compressed,\nand in terms of same information received\
    \ by different entities. Accordingly, innovative\ntechniques are required for\
    \ data compression to reduce transmitted data over wireless\nchannels and aggregation\
    \ techniques that exploit the redundancy between information sent\nby the different\
    \ entities. (ii) Data analysis and reaction — the expected vast data exchange\n\
    and the low latency requirement (at least for some of the information collected)\
    \ require\nprocessing and analysis of data in real-time or near real-time, to\
    \ enable timely decision\nmaking and instantaneous action-taking.\nThe ability\
    \ to successfully transmit and gather vast streams of data incoming from an\n\
    enormous number of devices and sensors and ﬁnally to successfully analyze them,\
    \ in order\nto automatically control a much larger scope of everyday life systems,\
    \ directly couples\nthe process of data gathering with Big Data related challenges\
    \ (e.g., [14–17]). Furthermore,\nleveraging Cloud Computing platforms offers signiﬁcant\
    \ advances in data analytical abil-\nities (e.g., [18–20]). It provides new horizons\
    \ to further develop and increase the size of\nWSN/IoT networks both in the sense\
    \ of the number of sensing units and in the sense of\nthe amount of the acquired\
    \ data (e.g., [21–23]). (iii) Connectivity — collecting and dissem-\ninating data\
    \ from and to many devices, potentially through vast, dense, heterogeneous\nnetworks,\
    \ will be one of the biggest challenges of the future of IoT; accordingly, novel\n\
    MAC protocols and coding schemes should be devised to comply with this challenge.\
    \ With\nthis respect, air time utilization and energy efﬁciency are of primary\
    \ importance for the\nMAC layer protocol design. Any MAC layer protocol should\
    \ ensure that devices utilize the\nwireless channel frugally and with minimum\
    \ energy consumption. (iv) Security and Pri-\nvacy — Connecting enormous numbers\
    \ of devices to the Internet exposes the IoT network\nto serious security vulnerabilities.\
    \ All the more so since the relevant entities are limited.\nAccordingly, issues\
    \ such as authenticity, data encryption, and vulnerability to attacks (e.g.,\n\
    device impersonation) are critical for the IoT paradigm’s continuous growth (e.g.,\
    \ [24]).\nIn addition, since the information transmitted over the WSN and IoT\
    \ networks can be\nhighly conﬁdential (e.g., health reports, device tracking),\
    \ the collection and dissemination\nof this information create signiﬁcant challenges\
    \ related to data protection and privacy.\nThis survey will explore the state-of-the-art\
    \ of data collection and dissemination as-\npects in WSNs and IoT environments\
    \ mentioned above. We will review essential milestones\nyet mainly focus on recent\
    \ publications and present the new trends and research directions.\nOur resources\
    \ included mainly Google Scholar, IEEE Xplore and our university’s library\ndatabases,\
    \ utilizing the keywords of this paper. We also used important references from\n\
    the bilbiography of the initial papers and ones that cited them. Data collection\
    \ spans all the\nnetworking layers, from the physical implementation of transmitting\
    \ bits across a commu-\nSensors 2022, 22, 2650\n3 of 44\nnication medium to the\
    \ application layer. Due to the wide-ranging scope of the topic, we\nwill not\
    \ be able to cover all its aspects (for example, in this paper, we will not discuss\
    \ the\ncritical topic of security and privacy). Some of the issues will be covered\
    \ more thoroughly\nthan others. However, since some of the topics we discussed\
    \ rely on the general wireless\ncommunication technology and on broad setup protocols\
    \ which are not data-gathering ori-\nented per se, on some of the topics, we will\
    \ provide a more comprehensive background and\ndescribe protocols that are aimed\
    \ at a broader domain than data-gathering. For example,\nmany medium access control\
    \ (MAC) and wireless routing protocols are designed for a\nwide range of topologies,\
    \ trafﬁc patterns, quality of service requirements, etc. Even though\nthey can\
    \ be applied, they are not explicitly designed for data gathering. We will include\n\
    some more general yet essential studies in our survey. To grasp the whole picture\
    \ and to\nbetter understand some data-gathering-related issues, in some cases,\
    \ we will delve into the\npertinent background and stray into some peripheral\
    \ topics. We will cover topics related to\nall layers of the protocol stack. Sometimes\
    \ classiﬁcation based on a stack is not clear-cut, as\nsome of the issues involve\
    \ multiple stacks.\nIn particular, the survey comprises the following topics:\n\
    The device’s platform, which accommodates the sensing unit, can highly impact\
    \ the\nperformance of the application utilizing it and speciﬁcally the data-gathering\
    \ application,\nand vice versa, the application (e.g., data gathering) can impact\
    \ the platform architecture\nwhen designed in application-oriented manner or when\
    \ some of the essential features and\nrequirements are taken into account in the\
    \ platform design process. The same mutual\neffect also applies to the WSN infrastructure\
    \ and the network architecture (e.g., topology,\nsystem organization). We start\
    \ with reviewing studies pertaining to the general device’s\nplatform and infrastructure-related\
    \ novelties (Section 2). We cover new domains which\nwere only recently exposed\
    \ to WSN and IoT networks and introduced new opportunities for\nalgorithm design\
    \ in such networks. Some of these novel technologies have revolutionized\nthe\
    \ way applications can utilize each particular device as well as the shared network\
    \ and\nhave enabled new algorithm opportunities and design challenges across the\
    \ entire protocol\nstack which we describe throughout this survey.\nNext follows\
    \ Section 3 which provides a focused summary of recent advances in\ncompressed\
    \ sensing—a signal processing technique that can take advantage of sparsity\n\
    and redundancy of the data. In the context of data gathering procedures, compressed\n\
    sensing is utilized to reduce report payload at several levels, which include\
    \ reduction of\nthe sensed data size and the transmitted report size, by pruning\
    \ the devices that need to\nsend reports and by compressing the combined relayed\
    \ data before forwarding it toward\nits destination (the sink). We provide a basic\
    \ compressed sensing background and review\nthe state-of-the-art in the context\
    \ of data gathering in WSN.\nSection 4 considers the medium access control (MAC)\
    \ sublayer. In wireless communi-\ncation, channel utilization is critical and\
    \ broadly inﬂuences several performance aspects\nsuch as throughput, latency,\
    \ power utilization, delivery ratio, and more. Over the years,\nnumerous algorithms\
    \ and protocols have been suggested for wireless channel access in\ngeneral, and\
    \ WSNs with their speciﬁc characterization in particular. In Section 4, we review\n\
    only a small fraction of the countless MAC protocols that have been designed for\
    \ WSNs.\nWe mainly concentrate on protocols that highlight a conceptual approach\
    \ or trend and\nreview some of the more recent MAC protocols in data gathering\
    \ in WSN and IoT networks,\nwhich address new challenges such as highly dense\
    \ networks, congested channels, and\nvery limited resources.\nWe ascend the protocol\
    \ stack and in Section 5 we address routing aspects. As with the\nMAC sublayer,\
    \ routing protocols in multi-hop wireless networks have also been extensively\n\
    studied. We start by providing several milestones in the context of data gathering\
    \ in\nWSNs. We continue with more recent studies which mainly include enhancements\
    \ to the\naforementioned protocol, taking into account new challenges such as\
    \ scalability demands\nand energy-related advances which present new opportunities\
    \ yet impose new constraints.\nWe continue with studies that leverage the multi-hop\
    \ topology to realize a network-coding\nSensors 2022, 22, 2650\n4 of 44\nmechanism.\
    \ Finally, we discuss a new paradigm that extends the traditional setup in which\n\
    the sensed data need to be routed toward a static central monitoring station (sink),\
    \ and\nutilize a mobile sink (or sinks) that traverse the terrain and can help\
    \ in collecting the devices’\nreports. We review several state-of-the-art schemes\
    \ in this mobile sink paradigm.\nThe ﬁnal section of this survey is dedicated\
    \ to wearable technology in the form of\nsmart devices that are attached to the\
    \ human body to monitor the user and their envi-\nronment. Wearable technology\
    \ involves challenges in all the aspects discussed in the\nprevious sections,\
    \ yet they introduce new opportunities for high-demand applications with\nunique\
    \ performance requirements and constraints. Even though we do not attempt to\n\
    provide a comprehensive review of the numerous applications suggested over the\
    \ years, we\nemphasize this prominent application layer and discuss several applications\
    \ in Section 6.\nAs previously explained, we roughly partitioned the topics covered\
    \ in this survey\nbased on the communication layers and organized the sections\
    \ accordingly. We note\nthat this partition is somehow artiﬁcial, as many innovations\
    \ in data-gathering involve\nmore than one layer. Furthermore, many technological\
    \ advances and research areas affect\nmultiple domains in different layers and\
    \ are visited in more than one section. Figure 1\ndepicts the schematic structure\
    \ of the paper. In the ﬁgure, the ovals represent the main\nresearch domains covered\
    \ in the paper. The hexagons represent the most prominent\nresearch tool innovations\
    \ and techniques utilized by data-gathering, which are covered in\nthe paper.\
    \ The arrows represent the inter-relation between them. For example, technologies\n\
    such as energy harvesting (EH) or Machine Learning (ML) and Artiﬁcial Intelligence\n\
    (AI) are utilized by innovations in all the layers starting from the platform\
    \ hardware to\nthe application layer. However, network coding is mainly utilized\
    \ by the network layer.\nUnmanned Aerial Vehicle (UAV) is leveraged by both the\
    \ MAC and the Network layers.\nArchitecture\nSection 2\nMAC\nSection 4\nRouting\n\
    Section 5\nWearables \nand WBAN\nSection 6\nApplication\nOriented\nMobile Sink\
    \ \n& UAV\nUtilization\nCompressed\nSensing\nSection 3\nNetwork\nCoding\nMachine\n\
    Learning\nEnergy \nHarvesting\nCloud\nBased\nStandards \n& Protocols\nFigure 1.\
    \ Research directions. While we organize the sections according to the layers,\
    \ this diagram\nshows how research directions are connected across different layers.\
    \ The ovals denote the major\nresearch areas (which are associated with sections\
    \ in the paper), and the hexagons refer to more\nspeciﬁc sub-areas, technological\
    \ innovations, and research tools. The arrows represent a schematic\ninter-relation\
    \ between them.\n2. WSN Architecture—Arising Platforms and Novel Infrastructure\
    \ Concepts\nOur primary focus in this survey is data gathering in the context\
    \ of wireless commu-\nnication networks. The units that generate the data (typically\
    \ sensors) are application-\ndependent and can serve a large variety of realms,\
    \ e.g., health, environmental, activity\nmonitoring, etc. Even though the sensing\
    \ unit is the essence, we will not cover it thor-\noughly, and we will only skim\
    \ through it sporadically when discussing applications and\nSensors 2022, 22,\
    \ 2650\n5 of 44\ntheir speciﬁc requirements. Nonetheless, the term “sensor” typically\
    \ refers to the whole\nplatform or device in which the sensing unit is only one\
    \ component out of many, such as\nprocessing unit, transceiver unit, power unit,\
    \ antenna, and more, several of which can be\nintegrated into the device according\
    \ to the particular application needs. The sensing unit\nitself has its own requirements\
    \ and constraints, and in many situations cannot be altered.\nIn addition, the\
    \ integrated unit architecture and the platform design can be subject to\nvarious\
    \ stringent constraints. For example, size requirements can impose a strict constraint\n\
    on the device design; low power consumption, low production cost, and self-operation\
    \ can\nrepresent additional constraints. Accordingly, the device architecture\
    \ is fundamental and\naffects many other factors in the system. For example, power\
    \ supply affects the life span\n(or the time needed to replace the batteries);\
    \ it also affects transmission range, memory,\nand processing unit, which in turn\
    \ can affect the algorithms that can be executed on the\ndevice, etc.\nExtensive\
    \ research has been conducted on the design and architecture of the end\ndevice\
    \ and the infrastructure. We leave a detailed description of the basic components\
    \ such\nas the sensing unit, transceiver, antenna, processing unit, etc., as well\
    \ as the underlying\nhardware beyond the scope of this survey. To this end, the\
    \ objective of the rest of this section\nrefers to how data-gathering objectives\
    \ may impact both the design of speciﬁc sensors\nand the WSN infrastructure. By\
    \ the latter, we mean topology, system organization used to\ngather the data,\
    \ and algorithms to implement the data gathering. It is noteworthy that the\n\
    sensors’ characteristics also dictate the topology and, consequently, the data\
    \ aggregation\nalgorithms. In the sequel, we mention several platform architecture\
    \ designs as well as\nseveral network-wide architectures, mostly from recent years.\
    \ Additional similar studies\nappear throughout the survey, yet they are organized\
    \ in chapters according to the area in\nwhich they propose the most signiﬁcant\
    \ novelty. Figure 2 presents a schematic description\nof the section. Since several\
    \ papers presented in this section cover more than one topic, and\nsince, as previously\
    \ mentioned, this section is not presumed to provide an exhaustive list\nof all\
    \ papers or topics covered by the scope of WSN architecture, and some of the topics\
    \ are\nnot covered at all or covered by only a few representative papers, the\
    \ description is broad\nand only highlights the main topics covered in the section.\n\
    Architecture\nSection 2\nSensor’s Platform\nNetwork\nPower Supply (Battery\\EH)\
    \ \nSection 2.2\nApplication Oriented\nSection 2.1\nTopology\nSection 2.3\nApplication\
    \ Oriented\nSection 2.4\nFigure 2. Schematic description highlighting the main\
    \ topics covered in the section.\n2.1. Application-Oriented\nMany sensor platforms\
    \ are application-oriented. Occasionally, their suggested ar-\nchitecture can\
    \ be applied to other applications; however, their design and evaluation are\n\
    typically aimed at a speciﬁc one. Hence, in many cases, both hardware and software\n\
    technological developments are introduced for effective functioning. One of the\
    \ most\ncommon tasks of WSN is the obvious one of monitoring a terrain. There\
    \ are many variants\nof WSN monitoring. For example, the requirement can be to\
    \ monitor every point in the\nField of Interest (FoI) vs. monitoring a limited\
    \ number of speciﬁc locations or targets (aka\ntarget coverage) vs. just monitoring\
    \ a border of a region to detect intruders (aka barrier\ncoverage). The coverage\
    \ problem typically involves selecting a subset of sensors that fulﬁll\nSensors\
    \ 2022, 22, 2650\n6 of 44\nthe monitoring objective while maintaining network\
    \ connectivity. The sensors’ capabilities\nand the monitoring objective determine\
    \ the network topology.\nWe present several recent examples that mainly concentrate\
    \ on connectivity and data\ngathering under the constraints of the monitoring\
    \ objective. Biswas et al. [25] focus on\nenergy-efﬁcient data gathering in target\
    \ coverage problem, in which an n sensor WSN\nneeds to monitor T speciﬁc targets,\
    \ and there exists a route (multi-hop) from each source to\nthe sink. The paper\
    \ assumes that the source nodes that sense the targets and initiate data\npackets\
    \ into the network are known, and deals with the forwarding of these packets to\n\
    the sink. The paper proposes a distributed data gathering algorithm in which after\
    \ each\nnode discovers its neighbors and their hop-count to the sink, it will\
    \ forward data packets\n(when required) to its neighbor with maximum remaining\
    \ energy and a lower hop count\nto the sink (the remaining energy is assumed to\
    \ be known). Ammari [26] focuses on the\nk-coverage problem in which each point\
    \ in the FoI is required to be covered by at least k\nsensors at any time, and\
    \ each active sensor participating in the monitoring task is required\nto be connected\
    \ to the sink (possibly via a multi-hop route). The paper assumes that the\nsensors\
    \ are heterogeneous (they do not have the same characteristics) and mobile, hence\n\
    the sensors can move toward any region of interest in the deployment ﬁeld to participate\
    \ in\nany deﬁcient k-coverage area and can also act as mobile proxy sinks that\
    \ collect sensed data\nfrom the sensors and deliver them to the sink. Ammari [26]\
    \ partitions the problem into\ntwo problems which are solved sequentially. Namely,\
    \ the mobile k-coverage problem, which\nselects a minimum subset of active sensors\
    \ that solve the k-coverage problem and the data\ngathering problem, and devise\
    \ a forwarding scheme from the active sensors to the sink such\nthat the energy\
    \ consumption due to sensor mobility and communication is minimized.\nMdemaya\
    \ and Bomgni [27] utilize mobile sensors to achieve area coverage. These\nmobile\
    \ sensors can be moved and relocated to cover holes after the random deployment.\n\
    The authors suggest a two-phase approach. According to the ﬁrst one, the monitoring\n\
    area after the initial random deployment is identiﬁed (by the BS), and mobile\
    \ nodes are\nrelocated to cover the monitoring holes detected after the initial\
    \ deployment, trying to\nensure full coverage of the AoI by the static and relocated\
    \ sensors. At the second stage, the\nproposed algorithm schedules the sensors’\
    \ activity (awakening and transmission times)\nthat minimizes the energy consumption\
    \ of the nodes while collecting and sending data\nto the base station. To this\
    \ end, the paper distinguishes between “normal” nodes and\ncluster heads. A survey\
    \ that reviews algorithms and techniques related to the connectivity-\ncoverage\
    \ issues in WSN can be found in Boukerche and Sun [28].\nOccasionally, WSN architectures\
    \ and designs are more application-oriented. For\nexample, Cerchecci et al. [29]\
    \ propose a sensor node topology that uses low-cost and low-\npower components\
    \ for energy-efﬁcient waste management in the context of smart cities.\nThe architecture\
    \ described in [29] suggests a node architecture for measuring the ﬁlling\nlevel\
    \ of trash bins and utilizes LoRa LPWAN (low-power wide-area network) technology\n\
    for real-time data transmission to collect the measured data in a remote data\
    \ collection\ncenter. The design of a sensor node that can detect the presence\
    \ of water on home ﬂoors and\nprovide early warning of water leaks is suggested\
    \ by Teixidó et al. [30]. The paper presents\nand deploys both hardware and software\
    \ of the network components (ﬂood sensing nodes,\nactuator nodes, and a control\
    \ central); communication within the sensor network relies\non the IEEE 802.15.4\
    \ standard. Borrero and Zabalo [31] present a low-cost agriculture-\noriented\
    \ system. The suggested system is based on LoRa technology and can collect various\n\
    measurements, such as humidity, ambient temperature, soil moisture, and temperature,\n\
    and enables a farmer to access all of the information necessary to achieve efﬁcient\
    \ irrigation\nmanagement of crops in real time. The developed wireless sensor\
    \ node has been optimized\nboth in hardware and software and exhibits very low\
    \ power consumption.\n2.2. Energy-Harvesting (EH)\nOne of the main concerns of\
    \ the sensor platform’s design is the source of energy.\nTypically, the energy\
    \ source is a battery attached to the sensor platform. It is utilized to\nSensors\
    \ 2022, 22, 2650\n7 of 44\nprovide power to all the required operations, e.g.,\
    \ wireless transmission, computation,\nmemory, etc. The battery properties (e.g.,\
    \ technology used and size) can determine its\nlifespan as well as several other\
    \ properties, e.g., transmission range. In many systems,\nthe battery is a burden,\
    \ as it increases the cost of the system, constrains the platform size,\nand most\
    \ importantly, requires to be replaced occasionally. The challenge of saving power\n\
    spans all the protocol stack; energy considerations show up in each part of this\
    \ survey. As\nwith the other layers, PHY layer innovations have also been suggested\
    \ as to how to utilize\nbattery power efﬁciently.\nAn alternative approach to\
    \ overcome the battery hurdle is to embed a mechanism\nthat harvests energy. Such\
    \ a mechanism can be embedded alongside the battery to ex-\ntend its lifespan,\
    \ or more commonly, it can completely replace the battery so that all the\nfunctions\
    \ rely on it. Batteryless WSNs that rely solely on energy-harvesting (EH)-WSN\n\
    can compromise performance; for example, their transmission range can be shorter,\
    \ the\navailable energy can constrain their awake time, and so on. One of the\
    \ main challenges is to\nlocate the ambient resource from which the energy can\
    \ be harvested. Many studies have ex-\nplored different energy sources that can\
    \ supplement energy, such as solar, vibration, wind,\nmotion, electromagnetic,\
    \ and more. Numerous comprehensive technological overviews\nwith their advantages\
    \ and limitations, energy harvesting modeling, challenge expectations,\nand prospects\
    \ can be found in, for example, Refs. [32–37]. A more recent system design\nreview\
    \ on battery-free and energy-aware WSNs, which utilize ambient energy or wireless\n\
    energy transmission, is given in [38]. It addresses energy supply strategies and\
    \ provides\ninsight into energy management methods and possibilities for energy\
    \ saving at the node\nand network levels.\nKhalid et al. [39] suggest a zero-power\
    \ wireless sensor architecture that consists of\na capacitive sensor (a sensor\
    \ that associates the parameter of interest with the change in\nthe capacitance),\
    \ an RFID chip, a circulator (allows power ﬂow between three deﬁned\nports), and\
    \ an antenna (batteryless). The conceptual idea is that the sensor reﬂects the\n\
    signal received from the RFID, with a change in phase, which is relative to the\
    \ sensed value.\nDesign and implementation of an energetically autonomous WSN\
    \ platform for ambient\nmonitoring in indoor environments are suggested by Abella\
    \ et al. [40]. The proposed self-\npowered autonomous sensor node platform relies\
    \ on embedded photo-voltaic (PV) panels\nto harvest the energy, a microcontroller\
    \ and an RF transceiver with an attached antenna.\nThe suggested architecture\
    \ was prototyped and validated experimentally. Lee et al. [41]\npropose a ﬂoating\
    \ wireless device with energy harvesting capability. The ﬂoating device is\nenergetically\
    \ self-sustaining for extended operational hours. It supports long-range com-\n\
    munication between wireless sensor nodes and a gateway relying on the LoRa technology\n\
    while deployed over a water surface. The ﬂoating device can be used as an environmental\n\
    monitoring station to remotely collect weather and water quality information.\
    \ Ref. [42]\npresent the design of a wireless sensor node, powered by solar energy,\
    \ that collects en-\nvironmental data and can transmit it across vast distances\
    \ (directly to the cloud). The\narchitecture presented therein relies on low-power\
    \ wide-area network (LPWAN) protocols\nthat provide a long-range communication\
    \ system with limited data to transmit and high\nenergy efﬁciency. The authors\
    \ utilize Sigfox technology in their proof-of-concept design.\nAs previously mentioned\
    \ in numerous papers, surveys and tutorials exploring dif-\nferent aspects of\
    \ energy harvesting in WSN exist (a sliver of which we present herein).\nWe will\
    \ revisit EH when we discuss various aspects of data aggregation, such as routing\n\
    enhancement for EH-WSN (under EH constraints), on which we elaborate in Section\
    \ 5.2 or\nwhen discussing wearables in Section 6.\n2.3. Topology\nThroughout the\
    \ survey, the interaction of WSN and IoT will arise in multiple contexts.\nWhile\
    \ this survey mainly deals with data gathering by means of wireless units, an\
    \ IoT unit\npresumes a more high-level entity for localized data gathering. To\
    \ assess the connection\nbetween these two concepts, the reader is advised to\
    \ refer to the most recent work by\nSensors 2022, 22, 2650\n8 of 44\nDevadas et\
    \ al. [43], for example, where the authors enumerate the IoT data management\n\
    frameworks, challenges and issues. The chapter focuses on three layers of data\
    \ management\nin IoT networks, communication, storage and processing. In addition,\
    \ deployment of IoT\nData management for smart home and smart city is described.\n\
    It is essential to distinguish between a one-directional WSN platform, where sensors\n\
    merely gather the data and activate a speciﬁc infrastructure and set of technologies\
    \ to further\nsend it to a sink, and a bi-directional WSN platform, where the\
    \ sensors are expected to be\nable to act according to control messages received\
    \ from a sink. In the latter case, the sink\nmight be a higher-level entity (e.g.,\
    \ a cloud-based server). While the general data-gathering\ntechniques are usually\
    \ agnostic of the control direction, additional constraints might be\nimposed.\
    \ Delay of the responses, latency, BW usage efﬁciency, security, and privacy are\n\
    some of the demands to consider. Another example of a bi-directional platform\
    \ can be\nseen in social sensor clouds (SSC), which connect a social network with\
    \ a sensor network\nvia a cloud infrastructure. See, for example, Zhu et al. [44],\
    \ which presents a scenario of a\nsmart village and provides discussion on various\
    \ aspects including green planning, energy\nconcerns, and speed of data gathering\
    \ and sharing. In Dinh and Kim [45], an on-demand\nWSN platform is designed. The\
    \ authors suggest a data-gathering protocol that addresses\nbandwidth consumption\
    \ and delivery latency and minimizes the number of requests\nto save resources.\
    \ An infrastructure where sensors form groups belonging to private\nowners constitutes\
    \ a special case. This may be the case in a smart city environment; this\nmeans\
    \ that privacy and/or security considerations should be prioritized. This is the\
    \ topic\naddressed by Zhu et al. [46]. The authors provide a trust-assisted cloud\
    \ for WSN but have\nthroughput issues in mind. Kuo et al. [47] suggest a WSN-based\
    \ IoT platform that provides\na reliable connection between sensors in the ﬁeld\
    \ and the database on the Internet. The\nproposed platform is based on the IEEE\
    \ 802.15.4e time-slotted channel-hopping protocol\nwith resource-constrained devices\
    \ supporting heterogeneous applications. The paper\nsuggests a scheme that compensates\
    \ the clock drift for every timeslot to maintain the clock\nsynchronization required\
    \ for the time-slotted channel-hopping protocol.\nEdge computing, as discussed\
    \ by Satyanarayanan [48], allows distributing the data\ngathering burden across\
    \ multiple cloudlets, which might be highly beneﬁcial for large\nWSN. This platform\
    \ paradigm aims to improve many important aspects: reduced latency\nof data delivery,\
    \ increased bandwidth, scalability, resilience to possible cloud outages,\nand\
    \ privacy control. However, the platform presumes an initial capital investment\
    \ and\nlater maintenance.\nA virtual sensor network was proposed by Abdelwahab\
    \ et al. [49]. Once a user-\ninitiated sensing request is dispatched to a cloud,\
    \ a suitable set of sensors is found for\nthe task. The decision is made according\
    \ to the cost function, which depends on the\nspeciﬁc (e.g., monetary) cost of\
    \ using sensors from the designated set, the beneﬁt that\ncan be received from\
    \ using these sensors, and their effectiveness in distances and delays\n(calculated,\
    \ e.g., in number of hops from sensor to a sink/gateway), also expressed as\n\
    virtual links. The cost might be customized, while a general virtualization problem\
    \ is\nformulated and the algorithm is provided.\nIntegration of unmanned aerial\
    \ vehicles (UAVs) and WSN for crop monitoring in\nprecision agriculture is described\
    \ by Popescu et al. [50]. The authors suggest a down-up\nscheme, where the collected\
    \ data is hierarchically processed from the ground level to the\ncluster head\
    \ (CH) level, then collected by the UAV level and ﬁnally delivered to the cloud\n\
    for analysis and possible feedback. Particular emphasis is put on outlying measurements\n\
    from speciﬁc sensors, as they can indicate either a possible sensor failure or\
    \ an upcoming\nunusual event inside the agricultural ﬁeld. The measured data were\
    \ processed through a\nconsensus algorithm. Concurrently, it suppressed outlier\
    \ values left for further examination\nfor the cloud-based analysis. In addition,\
    \ this study focused on the UAV trajectory planning\nto collect the data observed\
    \ by the WSN. Actual deployment with several tens of sensors\nand several CHs\
    \ is provided and analyzed. Note that we dedicate Section 5.4 to data\ngathering\
    \ assisted by a mobile unit.\nSensors 2022, 22, 2650\n9 of 44\nAn implementation\
    \ of a ubiquitous consumer data service for transmitting short mes-\nsages to\
    \ any computing platform is provided by Datta et al. [51]. The authors demonstrate\n\
    a data cycle model that allows any device with sensor(s) to report data encoded\
    \ in short\nmessages. The raw data reaches a central or distributed computing\
    \ platform, where it\nundergoes transformation and evolves into rich and structured\
    \ valuable information for\nhigher-layer applications. The proposed data cycle\
    \ model and DataTweet architecture are\naimed at smart city and large-scale crowd-sensing-based\
    \ IoT scenarios.\n2.4. Application-Oriented Network Architecture\nWe continue\
    \ by covering special types of WSN platforms for data gathering and\nspecialized\
    \ application-driven architecture types. Ayele et al. [52] suggest an IoT network\n\
    architecture for wildlife monitoring systems (WMS) for scenarios in which animals\
    \ exhibit\nsparse mobility, which results in sporadic wireless links. In addition,\
    \ they suggest a\ndata forwarding enhancement that adopts the ﬂood-store-carry-and-forward\
    \ paradigm\nsuggested in the seminal ZebraNet study by Juang et al. [53], in which\
    \ in order to send data\nto the sink, the nodes disseminate it among themselves\
    \ until it reaches the sink. Speciﬁcally,\neach node stores the data needing to\
    \ be conveyed, waits for connectivity with other nodes,\nand distributes the data\
    \ to them, and they repeat the same process. Accordingly, the data is\nspread\
    \ throughout the entire network (i.e., ﬂooding) and will eventually be received\
    \ by the\nsink. The authors in [52] suggest leveraging locally available routing\
    \ parameters to improve\nopportunistic data forwarding algorithms by managing\
    \ the data replication decision.\nSaleh et al. [54] suggest extending the lifetime\
    \ of a wireless sensor network used in\nmobile healthcare applications by increasing\
    \ the number of bits transmitted per symbol, and\nspeciﬁcally to rely on a quaternary\
    \ interconnect scheme in which each transmitted symbol\nmodulates two bits. A\
    \ complementary neural network, static RAM-based architecture is\nsuggested to\
    \ reduce energy consumption in storage and transmissions during the data\ndissemination\
    \ process. A WSN dedicated to home deployment for elderly healthcare and\nearly\
    \ health emergency alarm is discussed by Alsina-Pagès et al. [55]. The authors\
    \ ﬁrst raise\nprivacy concerns related to the monitoring, and accordingly, advocate\
    \ that only sound-\nbased surveillance aimed to merely indicate alarming situations\
    \ is appropriate. In order\nto further conform to the privacy demands, they focus\
    \ on distributed architecture (rather\nthan on a centralized one), where each\
    \ of the WSN sensors sends encrypted identiﬁers of\ntheir measurement. The identiﬁcation\
    \ of events is built on feature extraction. This is done\non the frequency domain\
    \ by ﬁrst dividing the incoming signal into blocks with Hamming\nsliding window,\
    \ then transforming into the frequency domain using Discrete Fourier\nTransform\
    \ (DFT) to evaluate the contribution of every band of the spectrum. The ﬁnal\n\
    coefﬁcients are obtained after Discrete Cosine Transform (DCT). The conclusive\
    \ parts of the\nproposed algorithm classify the coefﬁcients, feeding them into\
    \ Support Vector Machines\nwhich classiﬁes the estimated audio event. The authors\
    \ assert that the classiﬁcation results\ncould be further improved by incorporating\
    \ a deep artiﬁcial neural network (ANN) into\ntheir system.\nIn AbeBer et al.\
    \ [56], a similar method was implemented for urban noise monitoring.\nNamely,\
    \ while STFT was utilized for the noise preprocessing, the classiﬁcation of noise\n\
    levels and events was performed by convolutional neural networks (CNNs). The authors\n\
    used several previously published networks; see references therein. Similar methods\
    \ for\nnoise monitoring WSN were introduced by Siamwala et al. [57]. The frequency-domain\n\
    analysis was performed. Then, classiﬁcation by statistical methods was accomplished\n\
    (Gaussian mixture model was used). In addition, the authors in [57] provide an\
    \ elaborate\nWSN architecture, where energy-harvesting solar panels augment the\
    \ sensors’ lifetime and\nthe sensors’ state-of-charge is transmitted and tracked\
    \ by central, more powerful nodes.\n3. Compressed Sensing\nMany data-gathering\
    \ applications rely on numerous self-powered smart devices to\ncollect real-time\
    \ data and convey it via a wireless medium to a central entity or entities\nSensors\
    \ 2022, 22, 2650\n10 of 44\n(e.g., the cloud) to further process it and act upon\
    \ it. Such devices are expected to perform\ntwo basic operations—sensing and wireless\
    \ connectivity. Two important hindering aspects\nthat derive from these operations\
    \ inﬂuence the performance and need to be considered\nare: (i) energy consumption\
    \ associated with these two operations, especially when many of\nthese devices\
    \ are typically simple with limited computation abilities and battery lifetime\n\
    (ii) airtime utilization, which can also degrade the performance causing high\
    \ delays, jitter,\nbattery consumption, etc. Accordingly, one of the main challenges\
    \ in combating these\nlimitations is reducing the report payload, which affects\
    \ each report’s transmission time\nand channel utilization. Reducing the payload\
    \ of the sensed data can be accomplished at\ndifferent levels; it can be done\
    \ in the sensing stage by reducing the size of the sensed data, as\nwell as in\
    \ the report preparing stage by compressing the report size, and in the transmission\n\
    stage, by selecting which devices need to send reports, thus limiting redundant\
    \ information.\nWhen the reports need to travel multiple hops before reaching\
    \ their destination, this can\nbe done at the relay stage by pruning, unifying,\
    \ and compressing reports. In the sequel,\nwe discuss Compressed Sensing (CS).\
    \ This novel paradigm can reduce report payload at\nseveral levels mentioned above,\
    \ hence lowering the sensing operation’s transmission time\nand energy consumption.\n\
    Compressed sensing is a signal-processing technique that is most advantageous\
    \ when\nthe subject signal is sparse in some domain, such that a minimal non-zero\
    \ vector of coefﬁ-\ncients can represent it. The signal sparsity enables a high-quality\
    \ reconstruction, which is\nattained by ﬁnding the solution to an under-determined\
    \ linear system of equations with\nthe smallest possible number of non-zero values.\
    \ Thus, a convex minimization problem\nneeds to be solved to perform the recovery.\
    \ Note that the CS technique performs non-\nuniform sampling of the data signal\
    \ with an average sample rate usually smaller than\nthe minimal rate mandated\
    \ by the Nyquist–Shannon sampling theorem. A detailed view\nof the technique can\
    \ be found in Balouchestani et al. [58] and Donoho [59]. Various net-\nworking\
    \ domains can utilize compressed sensing, for example, Feizi et al. [60] depict\
    \ some\napplications of CS over networks and elucidate the connection between\
    \ CS and traditional\ninformation-theoretic techniques in source coding and channel\
    \ coding. Particularly, CS is\nhighly suitable for sensed data gathering in wireless\
    \ sensor networks (e.g., physical phe-\nnomena or a scenery), as it can leverage\
    \ the expected high spatial and temporal correlation\nbetween sensing reports\
    \ sent by neighboring sensors at different times in order to acquire\nthe CS paradigm’s\
    \ desired sparsity. In the following, we review several such data-gathering\n\
    schemes that utilize CS.\nLuo et al. [61,62] consider a densely deployed monitoring\
    \ sensor network in which\nreports traverse multiple hops before reaching their\
    \ destination, a sink. These studies\nrely on the concept that sensors’ readings\
    \ are spatially correlated; hence, there exists a\ntransform domain in which the\
    \ sensed signals can be sparsely represented. Both propose\na compressive data-gathering\
    \ (CDG) procedure in which sensors distributively encode\ntheir reports by projecting\
    \ them on a random space basis using random coefﬁcients. These\nencoded reports\
    \ can be decoded at the sink using compressive sensing techniques. Specif-\nically,\
    \ CDG is designed for multi-hop networks where messages need to travel multiple\n\
    hops before reaching their destination. The sampling process that characterizes\
    \ the CS\ncompression process is performed individually at each sensor by simple\
    \ multiplications\nand additions. Particularly, CDG suggests that rather than\
    \ forwarding individual sensor\nreadings, each sensor uses each of its reports\
    \ (measurements) to construct and send M\ndifferent messages, each comprising\
    \ a weighted sum of the sensor’s own report with other\nsensors’ reports traversing\
    \ it (relaying). Formally, denote by vector d = [d1, d2, . . . , dN]T\nthe measurements\
    \ (readings) obtained by all the sensors, where N is the number of nodes in\n\
    the WSN and di denotes the measurement (reading) obtained by sensor si. The sink\
    \ obtains\nM messages (weighted sums) represented by the vector y = Φd = φ1d1,\
    \ φ2d2, . . . , φNdN,\nwhere Φ is an M × N (M << N) matrix comprising the series\
    \ of coefﬁcients generated\nby the sensors, and in particular, φi is the i-th\
    \ column vector of Φ, which denotes the\nrandom coefﬁcients selected by sensor\
    \ i. Luo et al. [61] suggest that the measurement\nSensors 2022, 22, 2650\n11\
    \ of 44\nmatrix (coefﬁcients matrix) Φ should be a full random matrix with its\
    \ entries being i.i.d.\nGaussian random numbers drawn according to N (0, 1\nM).\
    \ The paper suggests that each\nweighted sum coefﬁcient be chosen pseudo-randomly\
    \ based on each sensor’s ID in order\nto avoid the burden and high overhead required\
    \ to collect these coefﬁcients by the sink\nif they are chosen randomly. Ref.\
    \ [62] extends the random coefﬁcient selection suggested\nin [61] to an only partly\
    \ random matrix in which the entries of a sub-matrix are still drawn\naccording\
    \ to N (0, 1\nM). Yet, for the rest of the matrix, two options are suggested,\
    \ either an\nupper triangular matrix with non-zero entries drawn according to\
    \ N (0, 1\nM), or the identity\nmatrix. CDG exploits the compressive sampling\
    \ theory and shows that when the sensor\nreadings are compressible, the sink will\
    \ be able to accurately recover the reports even when\nthe number of weighted\
    \ sums (messages) each sensor generates for each report (M) is\nmuch lower than\
    \ the number of reporting sensors (N). For example, on a route comprising\nN sensors,\
    \ the sink needs to collect only M << N messages to encode the information sent\n\
    by all the N sensors.\nSeveral studies further explore the sparsity of the sensed\
    \ signal and its projection\nmatrix, as well as the number of messages (M) that\
    \ should be delivered to the sink. For\nexample, Wang et al. [63] argue that most\
    \ natural signals are nonstationary and ordinarily\nvariable in the temporal and\
    \ spatial domains. In CS, these directly inﬂuence the recon-\nstruction process\
    \ and the number of required measurements; consequently, setting a ﬁxed\nnumber\
    \ of measurements with a ﬁxed transform basis (coefﬁcient matrix Φ) can result\n\
    in poor performance (inaccurate measurement reconstruction). Accordingly, Ref.\
    \ [63]\nsuggests an adaptive data-gathering scheme based on CS, which utilizes\
    \ an autoregressive\n(AR) model to exploit the local spatial correlation between\
    \ sensed data of neighboring\nsensor nodes. The suggested reconstruction scheme\
    \ adapts to the variation of sensed data\nby adjusting the AR parameters. The\
    \ number of measurements is adjusted adaptively\nwith the sensed data by evaluating\
    \ the recovery result and approximating the number of\nmeasurements required to\
    \ satisfy the accuracy demand.\nTo reduce the transmission overhead, Xu et al.\
    \ [64] propose the compressed sparse\nfunction (CSF) scheme. The basic concept\
    \ of CSF is, rather than encode the sensed data\nby projecting it on a basis on\
    \ which it can be represented sparsely, as in typical CS-based\nschemes, to compress\
    \ the sensed data in the form of sparse functions, which are sent to the\nsource.\
    \ The source can recover the function using techniques from polynomial approxi-\n\
    mation/interpolation theory and use them to compute data values that were not\
    \ reported.\nSpeciﬁcally, CSF ﬁnds a function that maps the sensors’ identiﬁers\
    \ and their readings, which\ncan be expressed in a very sparse way, and only communicates\
    \ this function to the sink.\nAfter the sink recovers the function, it can recover\
    \ all the N sensor readings. Xu et al. [64]\nshow that the CSF approach can provide\
    \ good recovery accuracy (better than the CDG\nscheme suggested by [61]) while\
    \ substantially reducing the message overhead (mainly in\ntree-structured networks).\
    \ Li et al. [65] present a general CS framework for WSNs and IoT\nand show how\
    \ the proposed framework can be utilized to reconstruct the compressible\ninformation.\
    \ The suggested framework comprises three phases: (i) information sensing\nto\
    \ detect and compressively sample event signals; (ii) compressed sampling, in\
    \ which the\nsystem samples information traversing the networks; and (iii) reconstruction\
    \ algorithms, in\nwhich the system accurately reconstructs the original signal\
    \ from the compressed samples.\nDifferent studies tackle the sampling issue and\
    \ suggest different approaches to reduce\nthe number of reports sent such that\
    \ only a subset of the sensors sense the object or\nphenomenon at a time. Several\
    \ studies explore how sensed data is conveyed to the sink\nwith the insight that\
    \ the compression is at least attained along the path to the sink, and is\ntherefore\
    \ affected by it. For example, Dhanapala et al. [66] show that a random-walk-based\n\
    sampling, rather than the conventional uniform-sampling-based CS for function\
    \ recovery,\ncan be used for phenomena awareness either at a sink or at other\
    \ sensors without a sink,\nwith minimal additional sampling. As the distribution\
    \ of the samples has a signiﬁcant effect\non the recovery, Ref. [66] suggests\
    \ an upper bound for the probability of successful recovery\nwith a given error\
    \ percentage. The derived bound provides an approximate number of\nSensors 2022,\
    \ 22, 2650\n12 of 44\nsamples required to recover a function under a selected\
    \ basis and a sampling scheme.\nZheng et al. [67] further argue that random walk\
    \ provides a more practical approach for\nthe data-gathering application in WSNs\
    \ and explores the sparsity of collecting non-uniform\nmeasurements while sampling\
    \ along multiple random paths. The paper suggests that\nthe M × N measurement\
    \ matrix will be characterized by M independent random walks.\nSpeciﬁcally, each\
    \ of the M matrix rows corresponds to the set of vertices visited by the\nrespective\
    \ random walk. The paper analyzes the required number of random walks (M)\nand\
    \ their corresponding lengths (how many entries on each row are non-zero) under\
    \ the\nproposed random walk algorithm.\nZheng et al. [68] suggest a cluster-based\
    \ data-gathering mechanism, in which the\nterrain is divided into cells; in each\
    \ cell, a node is randomly selected as the cell head,\nwhich collects the data\
    \ from the cell members and forwards it to the sink. Zheng et al. [68]\nsuggest\
    \ two forwarding mechanisms, one relying on centrally deﬁned tree-based for-\n\
    warding, and another that is a gossip-based approach. The projection process is\
    \ similar\nto Luo et al. [61,62], being based on random coefﬁcients. Another clustering-based\
    \ hi-\nerarchical data aggregation protocol that relies on CS, termed HDACS, is\
    \ suggested by\nXu et al. [69]. Speciﬁcally, HDACS constructs a multilevel hierarchical\
    \ structure and adap-\ntively sets multiple compression thresholds based on cluster\
    \ sizes at different levels of the\ndata aggregation tree to optimize the amount\
    \ of transmitted data. The encoding procedure\nis adapted from [62], where each\
    \ cluster-head recovers (decodes) all received messages\nfrom its descendants\
    \ (retrieves the original data) before compressing and sending it to its\nparent\
    \ cluster-head.\nMotivated by reducing power consumption, Lan and Wei [70] also\
    \ suggest a\ncompressibility-based clustering algorithm for hierarchical compressive\
    \ data gathering. In\nthis study, the network is decomposed into a logical chain,\
    \ and sensor nodes are grouped\nbased on the compressibility of their readings\
    \ instead of by a random clustering approach.\nThis clustering approach strives\
    \ to minimize the average compression ratio of all clusters by\ngreedily selecting\
    \ the set of nodes based on the compression ratio. It then tries to maximize\n\
    the number of compressible clusters so as to determine the suitable transmission\
    \ mode\nfor each cluster using a mode threshold that is a function of the number\
    \ of nodes and the\nnumber of hops from a cluster-head to a sink.\nTo reduce the\
    \ number of sensors involved in each CS measurement, Wu et al. [71]\npropose a\
    \ sparsest random scheduling scheme for compressive data gathering in large-\n\
    scale wireless sensor networks (WSNs), leveraging the spatial-temporal properties\
    \ in the\nsensory data. The central theme of this study is that the measurement\
    \ matrix is designed\nbased on the representation basis and sensory data and according\
    \ to the sensor network\nrequirements rather than the network environment. By\
    \ combining compressed sensing\nand network coding in the data-gathering scheme,\
    \ Yin et al. [72] introduce a multi-hop\ntopology in which the sink node adaptively\
    \ adjusts the measurement formation according\nto the reconstruction of received\
    \ measurements at each data-gathering epoch. The sink\nnode dictates the data\
    \ aggregation performed to balance the energy consumption among\nsensor nodes.\n\
    Xu et al. [73] exploit the CS paradigm for network tomography. Speciﬁcally, Ref.\
    \ [73]\nleverages the fact that, typically, only a small fraction of network entities\
    \ such as links or\nnodes are responsible for anomalies or degradation in network\
    \ performance, as a limited\nnumber of congested links can be responsible for\
    \ signiﬁcant delays or high packet drop\nrates, and suggests utilizing CS theory\
    \ in order to identify these few entities based on end-\nto-end measurements.\
    \ Zheng et al. [74] provide an analysis of the capacity and delay of\ndata gathering\
    \ with compressive sensing in wireless sensor networks. The paper considers\n\
    a random topology where sensor nodes are randomly deployed in a region, for both\n\
    single-sink and multi-sink scenarios, and characterizes the capacity and delay\
    \ performance\nimprovement that the CS paradigm can achieve for data gathering.\
    \ In particular, for\nthe single sink, a simple routing scheme for data gathering\
    \ with CS is suggested, and\na tight capacity in the order sense is presented.\
    \ In particular, the suggested routing\nSensors 2022, 22, 2650\n13 of 44\nscheme\
    \ with pipelining scheduling algorithm for data gathering shows that the proposed\n\
    single-sink scheme can achieve a capacity gain of Θ( n\nM) over the baseline transmission\n\
    scheme, and the delay can be reduced by a factor of Θ(\n√\nnlogn\nM\n), where\
    \ M is the number\nof random projections required for reconstructing a snapshot,\
    \ and n is the number of\nrandomly deployed nodes. For the multi-sink case, their\
    \ architecture shows that the per-\nsession capacity of data gathering with CS\
    \ is Θ(\nn√nW\nMnd\n√\nnslogn), and the per-session delay is\nΘ(M\nq\nn\nlogn),\
    \ where W is the data rate. The number of sinks present in the network is nd,\n\
    and the number of randomly selected source nodes is ns. They validate the theoretical\n\
    results with simulations for the scaling laws of the capacity in both single-sink\
    \ and multi-\nsink networks.\n4. Medium Access Control (MAC)\nNext, we move to\
    \ the Data-Link layer and speciﬁcally to the medium access control\n(MAC) mechanism,\
    \ which highly affects the performance of data gathering protocols, as\nit inﬂuences\
    \ several performance aspects, such as reliability, latency, channel utilization,\n\
    power utilization (which impact the lifespan of a sensor in particular and the\
    \ network in\ngeneral), etc. Even though many access protocols were suggested\
    \ over the years for shared-\nchannel networks, wired and wireless, due to their\
    \ unique properties and requirements,\nextensive research has been conducted on\
    \ MAC protocols targeted to WSN. Many WSN\nMAC protocols were designed to comply\
    \ with various trafﬁc patterns. Accordingly, in the\nsequel, we provide a short\
    \ WSN-MAC protocol overview for ones that can support yet\nare not necessarily\
    \ particular to data-gathering. We review a fraction of the vast literature\n\
    on the topic and the numerous MAC protocols devised over the years. Figure 3 depicts\
    \ a\nschematic partition of the papers discussed throughout this section according\
    \ to the main\nMAC classes.\nMAC\nSection 4\nSynchronous \nTransmitter-Initiated\
    \ \nReceiver-Initiated \nAsynchronous \nOthers\nSection 4.2\nDuty-Cycle\nSection\
    \ 4.1\nFigure 3. Schematic description highlighting the main MAC classes covered\
    \ in the section.\nEnergy consumption is one of the main concerns of WSN, and\
    \ as previously explained,\nit needs to be considered in the design of protocols\
    \ and algorithms in all the layers of the\nprotocol stack. The highest energy\
    \ consumer of a sensor or an IoT device is its transceiver,\nwhich consumes energy\
    \ regardless of whether it is transmitting or only awake listening to\nongoing\
    \ trafﬁc (e.g., [75]). One of the more prevalent solutions to save power is to\
    \ embrace\na duty-cycle mechanism in which the device is asleep most of the time\
    \ (its transceiver is in\nlow power mode), and is awake for transmitting or receiving\
    \ data only a small fraction\nof the time. Another important aspect of wireless\
    \ sensor networks (WSN) is channel\nutilization, that is, in a typical WSN, when\
    \ multiple devices are trying to send reports\nsimultaneously, air time is a crucial\
    \ network resource. Particularly when the network is\nSensors 2022, 22, 2650\n\
    14 of 44\ndense with multiple devices in the same neighborhood, issues such as\
    \ coordinating between\nthe users to avoid collisions and preventing users from\
    \ occupying the channel for long\ntime intervals are fundamental. Note that such\
    \ issues can highly affect the performance in\na dense network topology even when\
    \ reports are not frequent. Accordingly, utilizing the\nchannel (air time) efﬁciently\
    \ is a crucial component for any such system’s operation and\nperformance. These\
    \ two highly vital aspects justify the signiﬁcance given to the design of\nmedium\
    \ access control (MAC) protocols that are particular to WSNs. Numerous protocols\n\
    have been suggested to cope with different WSN objectives and demands (e.g., [76,77]).\n\
    This paper focuses on MAC protocols for WSNs, particularly on duty-cycled-based\
    \ ones.\n4.1. Duty-Cycle MAC Protocols\nTraditionally, duty-cycle MAC protocols\
    \ can be classiﬁed as either synchronous or\nasynchronous. In synchronous protocols\
    \ the awake time interval is synchronized such that\nall devices are awake (or\
    \ asleep) at the same time intervals (e.g., S-MAC [78], T-MAC [79]).\nSince the\
    \ awake time intervals are quite limited, they can be highly congested and prone\n\
    to collisions. Several synchronous protocols have devised mechanisms to attenuate\
    \ this\ncongestion and to allow more devices to transmit in each cycle, for example,\
    \ DW-MAC [80],\nwhich allocates the awake time for transmission reservations that\
    \ will be executed during\nthe sleep interval.\nIn asynchronous protocols, each\
    \ device has its own wake-up schedule. Accordingly,\nthe main challenge is setting\
    \ a rendezvous time when both the sender and the receiver are\nawake and devising\
    \ a signaling mechanism that informs both that they are awake and can\ncommunicate.\
    \ Asynchronous MAC protocols can further be divided into two categories,\ntransmitter-\
    \ or receiver-initiated. In transmitter-initiated protocols, the transmitter initiates\n\
    the transmission by capturing the channel waiting for its designated receiver\
    \ to wake\nup. For instance, in B-MAC [81], the transmitter transmits a long preamble\
    \ capturing the\nchannel prior to the data transmission, waiting for its intended\
    \ receiver to wake up and\nreply. In X-MAC [82], the transmitter transmits a sequence\
    \ of short preambles allowing\nthe intended receiver to interrupt, notifying the\
    \ receiver that it is awake. In WiseMAC [83],\nthe transmitter learns the wake-up\
    \ time of its intended receiver and starts the preamble\ntransmission just prior\
    \ to this wake-up time.\nThe second approach, the receiver-initiated paradigm,\
    \ relies on the receiver, whenever\nawake and ready to receive data, to initiate\
    \ the data exchange. The basic receiver-initiated\nMAC concept was introduced\
    \ in RI-MAC [84], in which whenever the receiver wakes up,\nit transmits a predeﬁned\
    \ preamble, signaling to its potential transmitters that it is awake\nand ready\
    \ to receive data. Several protocols took up the RI-MAC paradigm and suggested\n\
    modiﬁcations and enhancements. Some protocols strived to reduce the energy consumed\n\
    while a sender stays awake, waiting for its intended receiver to wake up. For\
    \ instance,\nPW-MAC [85] and AP-MAC [86] suggested that each transmitter will\
    \ learn its receiver’s\nexpected wake-up time, and instead of staying awake waiting\
    \ for its designated receiver to\nwake up, will wake up just before its intended\
    \ receiver’s wake-up instance.\nAnother receiver-initiated enhancement is suggested\
    \ by A-MAC [87], which aims to\nreduce the time in which a receiver and, consequently,\
    \ its potential transmitters stay awake,\nby trying to determine whether there\
    \ are pending packets for transmission and if it needs\nto stay awake or if it\
    \ can go back to sleep after probing the channel. The enhancement\nrelies on an\
    \ additional frame, termed “auto-ack”, sent by pending transmitters, which\nfollows\
    \ the receiver’s probe packet and proceeds with the data transmission. The “auto-ack”\n\
    frame is such that the receiver can decode a superposition of several such frames\
    \ and\ndetermine whether there is trafﬁc being sent. Even though the energy saved\
    \ per cycle is\nnegligible, the cumulative savings per day can be signiﬁcant due\
    \ to the numerous times\na device wakes up probing the channel. RIVER-MAC [88]\
    \ suggests two enhancements,\none aiming at reducing the awake time a sender is\
    \ waiting for its intended receiver to\nwake up, and one that aims at improving\
    \ the RI-MAC collision resolution mechanism by\nletting an active receiver keep\
    \ controlling the channel after invoking the collision resolution\nSensors 2022,\
    \ 22, 2650\n15 of 44\nmechanism, and speciﬁcally during the silent backoff interval.\
    \ MAR-RiMAC [89] suggested\nan amendment to the receiver-initiated approach, and\
    \ in particular RI-MAC, to cope with\nthe perpetual collisions, common in dense\
    \ networks and heavy trafﬁc loads, in which\nmany devices are trying to transmit\
    \ to the same entity (sink or relay). MAR-RiMAC relies\non a reservation-based\
    \ mechanism in which the reservations are short signals that can\nbe transmitted\
    \ simultaneously. After the designated receiver decodes the identity of the\n\
    devices, it sends a transmission request and polls them sequentially, with no\
    \ idle intervals.\nAs mentioned in Section 2, relying on EH requires adaptations\
    \ that typically relate\nto the harvested energy source. For example, how to balance\
    \ the harvested energy and\nthe energy consumption can be a crucial factor in\
    \ whether or not a scheme or protocol\ncan be adopted by a network that relies\
    \ on EH, and can be the primary factor impacting\ntheir performance. Adaptation\
    \ requirements to support EH-based sensors span the whole\nnetwork stack, including\
    \ the MAC sublayer. Adaptation of receiver-initiated duty-cycle\nMAC protocol\
    \ for energy-harvesting-powered wireless sensor networks, in which besides\nthe\
    \ usual MAC challenges, both transmitter and receiver need to have sufﬁcient power\
    \ for\nsuccessful transmission, is given by Liu et al. [90].\n4.2. MAC Protocols\
    \ for Other Setups\nNext, we review some MAC protocols and MAC adaptations for\
    \ various setups,\nsuch as multi-channel, multi-radio, busy-tone utilization,\
    \ or different from the duty-cycle\napproach. DURI-MAC [91] adopts the traditional\
    \ busy-tone scheme and allocates a sub-\nchannel for control such that while receiving\
    \ data on the data channel, a busy signal\nis transmitted on the control channel,\
    \ which notiﬁes neighboring nodes of the ongoing\ntransmission, and therefore\
    \ helps avoid interference from hidden terminals. EM-MAC [92]\nutilizes multiple\
    \ orthogonal radio channels and allows devices to dynamically select the\nchannels\
    \ for their transmissions based on the channel conditions they sense without the\n\
    utilization of a control channel. Accordingly, EM-MAC can avoid using channels\
    \ that are\ncurrently heavily loaded, inferior due to interference, or jammed.\
    \ Typically, the trafﬁc\nload sent by a node is spatially and temporally variable.\
    \ Different nodes need to send\ndifferent trafﬁc loads due to their tasks, topological\
    \ location, and the amount of trafﬁc they\nneed to relay. Furthermore, the same\
    \ node can experience different loads at different time\nintervals due to events\
    \ or requests triggering different trafﬁc loads. Accordingly, several\nstudies\
    \ have explored an adaptive duty-cycle approach. For example, Ye and Zhang [93]\n\
    have developed a reinforcement-learning-based self-adaptive sleep/wake-up scheduling\n\
    approach. In the proposed method, each node (device) divides the time into time-slots,\n\
    which are not necessarily synchronized between neighboring nodes. Each node decides\n\
    whether to sleep or wake up in each time slot, and while awake, it decides whether\
    \ to listen\nor transmit. The decision is based on its current situation and its\
    \ estimation of its neighbors’\nsituations and is attained via Q-learning.\nGamm\
    \ et al. [94] devise an alternative approach to duty-cycle, which utilizes two\n\
    radios: the primary radio transceiver and an additional wake-up radio (WuR). The\
    \ wake-up\nradio is a low-power receiver triggered by an external event and can\
    \ turn on the main\ntransceiver when required. Oller et al. [95] provide a detailed\
    \ characterization of a speciﬁc\nWuR, the SubCarrier Modulation WuR (SCM-WuR),\
    \ through physical experiments and\nmeasurements, evaluating it for different\
    \ performance metrics and comparing it to other\nwake-up radio-based systems.\
    \ The authors of [95] model and simulate their own designed\nWuR hardware platform,\
    \ which is compared to four widely employed MAC protocols for\nWSN under three\
    \ real-world network deployments [96]. Spenza et al. [97] further design\nand\
    \ prototype a very-low-power-consumption (<1.3 µW), high-sensitivity (up to −55\
    \ dBm),\nfast-reactivity (wake-up time of 130 µs), and selective-addressing wake-up\
    \ receiver (WRx)\nand describe its integration to a wireless sensor node. The\
    \ authors leverage their WRx and\npresent ALBA-WUR, a cross-layer solution for\
    \ data gathering in wireless sensing systems.\nSimilar to duty-cycled MAC protocols,\
    \ wake-up radio-based protocols also distinguish\nbetween transmitter-initiated\
    \ WuR (TI-WuR) protocols in which the transmitter wakes up\nSensors 2022, 22,\
    \ 2650\n16 of 44\nits potential receivers (e.g., [98,99]) vs. receiver-initiated\
    \ WuR (RI-WuR) that adopt the\nRI-MAC paradigm such that when a receiving node\
    \ is ready to collect data, it wakes up all\nthe nodes in its neighborhood by\
    \ broadcasting a wake-up call (e.g., [100,101]).\nAn energy-harvesting-based MAC\
    \ protocol for cognitive radio networks (CRNs) is\nsuggested by Hawa et al. [102],\
    \ in which the secondary users (SUs) utilize the transmis-\nsions by primary users\
    \ (PUs) to harvest energy. Accordingly, the suggested protocol\ninterlaces SUs’\
    \ data transmissions within these PUs’ transmission holes. The proposed\nenergy-harvesting/data-transmission\
    \ schedule considers the imbalance between the small\namount of energy collected\
    \ per PU’s transmission and the energy required by an SU\ndata transmission.\n\
    Next, we mention several WSN MAC protocols that were specially designed for\n\
    particular data-gathering setups in WSN and IoT networks, exploiting the special\
    \ associ-\nated attributes (e.g., that the trafﬁc patterns are always from sensors\
    \ to the sink, or that\nthere exists a set of predeﬁned messages that need to\
    \ be sent). Cohen et al. [103] design\nand analyze a data collection protocol\
    \ based on information theoretic principles. In the\nsuggested protocol, each\
    \ sensor needs to convey one out of a bank of known messages\nto a sink. The protocol\
    \ assumes a large population of sensors and devises a scheme in\nwhich a sink\
    \ (or relay) can simultaneously collect messages from up to K sensors, without\n\
    knowing in advance which sensors will transmit, and without requiring any synchroniza-\n\
    tion, coordination, or management overhead. D-3 [104] exploits the fact that the\
    \ trafﬁc in\ndata-gathering applications ﬂows in a certain direction (toward a\
    \ single or multiple sinks)\nto devise a wake-up that can signiﬁcantly reduce\
    \ end-to-end delay. Speciﬁcally, D-3 lays\nout the awake schedule of communicating\
    \ nodes such that a packet can be forwarded\ntoward its destination sequentially,\
    \ without the need for a node to wait for its next-hop\nrelay to wake up (i.e.,\
    \ the wake-up schedule is such that a relay wakes up in time to receive\na packet\
    \ just received by its predecessor).\n5. Routing for Data Gathering in WSN\nWe\
    \ keep climbing the layers, and in this section we address issues related to the\n\
    Network layer. We start with a short review of WSN routing protocols. We note\
    \ that\nrouting-related aspects were also referred to in other sections of this\
    \ survey. We mainly\nfocus on the prominent and more recent protocols. We do not\
    \ provide a comprehensive\nreview of routing protocols in multihop WSNs and mainly\
    \ explore routing protocols\nsuitable for data gathering. Figure 4 provides a\
    \ schematic distribution of the discussed\npapers into main topics. As with the\
    \ schematic partition in the other sections, in order\nnot to have too many, the\
    \ topics are chosen such that the theme on each one encompasses\nseveral papers.\
    \ The papers’ partition is rough: some papers can appear in more than one\ntopic\
    \ while others are only related to the topic.\nWe start with general WSN settings\
    \ and then continue with routing protocols under\nenergy harvesting constraints.\
    \ Then we explore the utilization of network coding for data\ngathering, which\
    \ leverages the multi-hop routing, allowing relays (intermediate nodes)\nto code\
    \ the incoming packets before forwarding them toward the sink. We conclude this\n\
    section by examining a different paradigm. Rather than utilizing the traditional\
    \ approach of\nforwarding the sensed data via multiple relay nodes before reaching\
    \ the sink, this paradigm\nrelies on a Mobile Sink (MS) that traverses the network\
    \ and collects the sensed data from\nthe sensors it passes through.\n5.1. Common\
    \ WSN Routing Protocols for Data Gathering\nThe common setup for a data collection\
    \ network comprises a set of devices (e.g.,\nsensors) and one or multiple sinks\
    \ that collect the reports. In many such scenarios, the\nsensors are unevenly\
    \ dispersed over the terrain and in some cases can be mobile, can have\na different\
    \ distance to the sink(s), and the data needs to traverse multiple hops before\n\
    reaching the sink, in which commonly the sensors themselves serve as relays toward\n\
    the sink. Consequently, the performance experienced by different sensors (e.g.,\
    \ energy\nSensors 2022, 22, 2650\n17 of 44\nconsumption, latency, reliability)\
    \ can be markedly diverse. Various solutions, including\nenergy-aware routing,\
    \ compressed sensing, efﬁcient MAC novelties and architectural\ninnovations, have\
    \ been suggested to try to improve the overall performance and to balance\nits\
    \ variability; many are scattered throughout this survey under different subjects\
    \ (e.g.,\nSections 3, 4 and 6). In the sequel, we provide a brief review of routing\
    \ protocols for WSN\nin general and data gathering in particular.\nRouting\nSection\
    \ 5\nCluster-Based \nSection 5.1.1\nEnergy Harvesting \nBased\nSection 5.2\nWSN\
    \ Routing\nSection 5.1\nNetwork coding\nSection 5.3\nUAV Utilization\n(Mobile\
    \ Sink) \nSection 5.4\nRPL \nSection 5.1.3 \nOpportunistic \nSection 5.1.2\nCluster-Based\
    \ \nSection 5.2.1 \nMobile Charger \nSection 5.2.2 \nCluster-Based \nSection 5.4.2\n\
    Direct \nSection 5.4.1 \nFigure 4. Schematic partition of the papers discussed\
    \ in this section into the main routing topics\ncovered in the section.\n5.1.1.\
    \ Cluster-Based Routing Protocols\nA signiﬁcant milestone in WSN routing protocols\
    \ is the low-energy adaptive clustering\nhierarchy (LEACH) protocol [105]. The\
    \ basic LEACH protocol is an adaptive clustering-\nbased protocol that dynamically\
    \ selects sensor nodes as cluster-heads. Each cluster-head\naggregates data from\
    \ its cluster members and relays it to the sink. In order to distribute\nthe high\
    \ energy consumption imposed on cluster-heads between all the sensor nodes,\n\
    the cluster-heads are dynamically selected according to a predeﬁned probability\
    \ that\ndepends on the number of desired clusters. The resulting protocol causes\
    \ continuous\nclustering hierarchy reelection, which facilitates energy balancing.\
    \ The original version\npresented by Heinzelman et al. [105] considers a setup\
    \ in which all sensor nodes can\ndirectly communicate with the sink; hence, each\
    \ cluster-head can directly relay the collected\ninformation from its cluster\
    \ members to the sink. However, as described in the paper,\nLEACH can be easily\
    \ extended to a hierarchical cluster setup in which the cluster-head\nnodes of\
    \ each tier are also organized in clusters such that each cluster-head relays\
    \ its\naggregated data to its higher-layer cluster-head, and so on up to the top\
    \ layer of the\nhierarchy, at which point the data are sent to the sink.\nSince\
    \ its publication in 2000, numerous protocols have relied on LEACH’s clustering\n\
    paradigm, suggesting enhancements and improvements for various setups and require-\n\
    ments. For instance, EE-LEACH [106,107] aims at improving the energy efﬁciency\
    \ of\nLEACH by considering the sensor’s residual energy throughout the stages\
    \ of the proto-\ncol. Speciﬁcally, EE-LEACH assumes that node deployment is implemented\
    \ according\nto a two-dimensional Gaussian distribution. It forms clusters and\
    \ selects their respective\ncluster-heads based on the residual energy of neighboring\
    \ nodes. The relay nodes that\nforward the data aggregated by cluster-heads to\
    \ the sink are selected based on their residual\nenergy. A clustering procedure\
    \ based on recursive rectangular partitioning of the network\ngrid following the\
    \ k-d tree algorithm is demonstrated by Anzola et al. [108]. The authors\nadjust\
    \ a protocol that combines their clustering methods and report that it performs\
    \ better\nthan LEACH. Several surveys have summarized the successors of the LEACH\
    \ protocol\n(e.g., [107]).\nSensors 2022, 22, 2650\n18 of 44\nPEGASIS [109] was\
    \ designed to address the overhead resulting from the cluster\nformation in LEACH.\
    \ Speciﬁcally, PEGASIS replaces the clusters with a node-chain in which\neach\
    \ node receives the data from its predecessor and transmits it to its successor\
    \ in the chain.\nThe data is gathered while getting fused along the chain until\
    \ eventually, a designated\nnode transmits it to the sink. PEGASIS relies on nodes\
    \ having global knowledge of the\nnetwork and shows that a simple greedy algorithm\
    \ for the forwarding chain construction,\nin which nodes select their closest\
    \ neighbors as the next hops in the chain, is sufﬁcient to\nsigniﬁcantly reduce\
    \ energy consumption. Similar to LEACH, and in order to balance the\nenergy depletion\
    \ in the network, different nodes transmit the fused data to the sink on\neach\
    \ data-gathering round. P-LEACH [110] offers a hybrid between LEACH and PEGASIS\n\
    that relies on cluster formation where cluster-heads collect and forward trafﬁc.\
    \ Rather\nthan forward the trafﬁc directly to the sink, or create a hierarchical\
    \ cluster setup in which\ncluster-heads are also grouped into clusters with another\
    \ cluster-head, P-LEACH adopts\nchain-based forwarding such that the cluster-heads\
    \ are arranged in a chain along which\nthe collected data is forwarded, as suggested\
    \ by PEGASIS.\nSeveral LEACH enhancements have relied on bio-inspired algorithms.\
    \ For example,\nSiew et al. [111] utilize adaptive particle swarm optimization\
    \ (APSO). This widely used\nswarm intelligence method mimics swarming behavior\
    \ in bird ﬂocking and ﬁsh schooling\nto guide its members to search for globally\
    \ optimal solutions for cluster-head location\nselection. Tam et al. [112] extend\
    \ LEACH to a 3D setting by employing a method based on\nfuzzy clustering and particle\
    \ swarm optimization (PSO). Cui et al. [113] suggest a variant\nof the bat algorithm,\
    \ which simulates bat prey echolocation behavior, to optimize the\ncluster-head\
    \ selection for LEACH protocol. A routing path selection using an ant colony\n\
    optimization algorithm is presented by Jiang and Zheng [114]. Clustering by mimicking\n\
    groups of yellow goatﬁsh is discussed by Rodríguez et al. [115]. The authors claim\
    \ that\nthe presented meta-heuristic is more efﬁcient in avoiding local minima.\
    \ An extension of\nLEACH for an IoT-designated industrial environment is presented\
    \ by Karunanithy and\nVelusamy [116]. This work provides uniform CH selection,\
    \ uniform CH dispersion over\nthe industrial grid of IoT-based sensors, and tree-based\
    \ routing selection that promises to\nbe more energy efﬁcient than known counterparts.\
    \ The energy exploitation is claimed to be\nequal among nodes.\nMehmood et al.\
    \ [117] devise a dynamic-size cluster-based routing protocol for WSN\ncomprising\
    \ a large number of sensors that are spread over a large area (the paper suggests\n\
    pollution monitoring as a candidate application). The primary objective of the\
    \ presented\nscheme is to effectively select CHs to be responsible for the main\
    \ communication with BS\nand additionally deﬁned chief nodes (CNs). Speciﬁcally,\
    \ the sensor topology is divided\ninto groups, where CNs collect the updated energy\
    \ indications of other sensors within a\ngroup. There are also border nodes responsible\
    \ for communication between groups. If\ntheir energy value drops below a threshold,\
    \ the CNs can be reelected. The candidates for\nCNs and CHs are provided by an\
    \ artiﬁcial neural network (ANN), which takes as inputs\nremaining energy, neighboring\
    \ node count, the amount of outstanding data, signal-to-\nnoise ratio (SNR), distances\
    \ between nodes, CHs, CNs and the BS, trafﬁc load, and so\non. The simulations\
    \ show a better lifetime than other selected known protocols; hence,\nthe scheme\
    \ is a better ﬁt for pollution monitoring. Clustering and routing for a wind\n\
    turbine system monitored by WSN are introduced by Durairaj and Selvaraj [118].\
    \ The\ndiscussed environment is unique because sensors placed at wind turbines\
    \ can have their\nenergy replenished by the turbine itself; hence, these sensors\
    \ are always assumed to be\ncharged. However, the distances between turbines and\
    \ the BS are too large, and the\ngrid is augmented by ground sensors that relay\
    \ the measurements. In many cases, these\nground sensors have to act as CHs. The\
    \ authors propose system partitioning and clustering\nmethods that may be hierarchical\
    \ to speciﬁcally address this scenario. An interesting\nalgorithm that also employs\
    \ partitioning, by hierarchical grouping of sensors based on\nearly knowledge\
    \ of geographical transmission patterns in mobile WSN, is presented by\nShifrin\
    \ and Cidon [119].\nSensors 2022, 22, 2650\n19 of 44\n5.1.2. Opportunistic Routing\n\
    The opportunistic routing approach, which was designed for wireless networks,\
    \ dy-\nnamically chooses paths toward the destination on a per-transmission basis,\
    \ Biswas and\nMorris [120], Ye and Hua [121]. Opportunistic routing exploits the\
    \ broadcast nature of\nwireless communication jointly with the spatial diversity\
    \ of distributed nodes in a given\nroute such that multiple nodes overhear each\
    \ packet transmitted by a node. The node that\nreceives the packet successfully\
    \ and can serve as the best relay toward the destination (e.g.,\nclosest to the\
    \ destination) becomes the next transmitting node. Harnessing opportunistic\n\
    routing to duty-cycle MAC protocols encounters several obstacles. In synchronous\
    \ duty-\ncycle MAC protocols (Section 4), the short time duration in which all\
    \ nodes are awake (and\nspeciﬁcally, all the potential relays are awake and trying\
    \ to forward the same packet) can\nlead to artiﬁcial congestion and poor wake-time\
    \ utilization. In asynchronous duty-cycle\nMAC protocols, since not all nodes\
    \ are awake simultaneously, the use of overhearing, which\nopportunistic routing\
    \ relies on, is limited and requires adaptations such that the transmitter\nwill\
    \ transmit to multiple relays upon its wake-up (e.g., [122]) or delay its transmission,\n\
    choosing its relay opportunistically based on channel condition (e.g., [123]).\n\
    In a dense WSN, even under asynchronous duty-cycle MAC protocol, several potential\n\
    relays can be awake simultaneously, which poses additional challenges when utilizing\n\
    opportunistic routing. In addition to the relay selection problem—whether a transmitter\n\
    should wait for the best relay to wake up or compromise on a less preferable relay,\
    \ reducing\nits awake period and how long it should wait—it also encounters the\
    \ collision avoidance\nproblem between simultaneously awake nodes. Liu et al.\
    \ [124] suggest a slotted contention-\nbased scheme in which, following a probe\
    \ sent by the transmitter, the awakened potential\nrelays contend and transmit\
    \ feedback concerning the routing progress they can offer. The\ntransmitter selects\
    \ the best possible relay out of the ones that replied, taking into account\n\
    not only the metric chosen to evaluate the different relays, but also the waiting\
    \ time of\nthe link-layer transmissions. Under a similar set-up of dense asynchronous\
    \ duty-cycle\nMAC protocol with multiple potential relays awake simultaneously,\
    \ Hawbani et al. [125]\ntry to control the number of potential forwarders, which\
    \ inﬂuences both the transmitter\nwaiting time and the number of packet duplications.\
    \ The suggested solution relies on\na two-step mechanism. First, each transmitter\
    \ determines a candidate zone such that all\nnodes within the candidate zone are\
    \ potential forwarders. Second, the candidates within\nthe candidate zone are\
    \ prioritized based on a combination of metrics that considers residual\nenergy,\
    \ transmitting direction, distance, and link quality.\n5.1.3. Routing Protocol\
    \ for Low-Power and Lossy Networks (RPL)\nA routing protocol for low-power and\
    \ lossy networks (RPL) is a routing protocol\nthat was speciﬁcally designed for\
    \ networks composed of constrained nodes, which are\ninterconnected via unstable\
    \ and lossy links with relatively low packet delivery rates and\ntypically only\
    \ support low data rates (hence, low-power and lossy networks (LLNs)).\nSpeciﬁcally,\
    \ RPL is a distance-vector proactive routing protocol designed for IPv6 low-\n\
    power devices with limited energy, processing, and memory resources (Winter et\
    \ al. [126]).\nRPL constructs a tree routing topology termed the destination-oriented\
    \ directed acyclic\ngraph (DODAG), rooted at one or more sink nodes. The routing\
    \ tree (graph), along\nwhich the trafﬁc traverses, is constructed according to\
    \ an objective function (OF) that can\nutilize a set of metrics such as energy\
    \ consumption, latency, and hop count. The most\ncommon ones are OF0, which ﬁnds\
    \ the shortest path (the path with the minimal hop-count)\nto the sink (Thubert\
    \ et al. [127]), and minimum rank with hysteresis objective function\n(MRHOF),\
    \ which ﬁnds the routes that minimize the link cost associated with the routes\n\
    (Gnawali and Levis [128]). The cost is deﬁned as the latency metric allowing RPL\
    \ to ﬁnd\nstable minimum-latency paths from each node to the sink, or it can be\
    \ associated with the\nexpected transmission count (ETX) metric, which allows\
    \ RPL to ﬁnd the stable minimum-\nETX paths from the nodes to the sink (the default\
    \ metric). In order to achieve stability,\nMRHOF also ensures that a route is\
    \ changed (a node exchanges its preferred parent in\nSensors 2022, 22, 2650\n\
    20 of 44\nthe routing tree) only if the cost of the improved route is better than\
    \ the current route by\nat least a predeﬁned threshold. RPL is the de-facto IPv6-based\
    \ routing protocol for the\nIoT. Accordingly, several OFs and possible enhancements\
    \ have emerged during recent\nyears, and several performance evaluations and comparisons\
    \ have been presented. In the\nfollowing, we discuss some of these OFs.\nAbdel\
    \ Hakeem et al. [129] analyze the performance of RPL in collecting smart meter\n\
    readings over smart grid (SG) networks via Java-based simulations and IoT-LAB\
    \ testbed ex-\nperiments. Speciﬁcally, Ref. [129] evaluates the RPL performance\
    \ under the two prominent\nobjective functions Hop Count and ETX, in terms of\
    \ packet delivery ratio, network latency,\ncontrol trafﬁc overhead, and power\
    \ consumption. Barnawi et al. [130] utilize the Cooja\nnetwork simulator to examine\
    \ the performance of RPL under duty-cycle MAC protocol.\nSpeciﬁcally, Ref. [130]\
    \ simulates RPL over the classical XMAC protocol and its derivative\nContikiMac,\
    \ where, rather than using a long preamble waiting for the receiver to wake up,\n\
    the sender repeatedly sends the same packet until a link layer acknowledgment\
    \ is received.\nAs a baseline, Ref. [130] uses NullRDC, an always-awake node.\
    \ As expected, the results\nshow that NullRDC is better in terms of latency, while\
    \ ContikiMac outperforms the others\nin terms of power consumption. Al-Shargabi\
    \ and Aleswid [131] also utilize the Cooja\nnetwork simulator to evaluate which\
    \ OF is more suitable for a WSN in healthcare scenarios.\nOF0 and ETX are examined\
    \ in various network topologies, such as the grid and random\ntopology, under\
    \ diverse densities. They conclude that the OF0 is more efﬁcient with respect\n\
    to packet delivery ratio (PDR) and power consumption in the random topology setup.\n\
    Sousa et al. [132] propose an energy-efﬁcient and path-reliability-aware objective\n\
    function (ERAOF). The OF suggested by ERAOF linearly combines energy consumption\n\
    and link quality (in terms of ETX) routing metrics. Even though the selected routes\
    \ are\nnot optimal in either one of the objective metrics, they provide a balance\
    \ between energy\nefﬁciency and reliability. Rafea and Kadhim [133] suggest an\
    \ energy threshold RPL (ETRPL),\nwhich, in addition to the ETX metric, incorporates\
    \ in its objective function the remaining\nenergy of the preferred forwarding\
    \ (parent) node. ETRPL performance is evaluated via\nCooja simulator. Sharma et\
    \ al. [134] suggest another MRHOF-based objective function that\ntakes into account\
    \ three routing metrics: ETX, energy, and delay. Energy consumption,\nin order\
    \ to increase the lifespan of the network, is also considered by Sankar et al.\
    \ [135],\nwhich suggests cluster-tree-based routing protocol to maximize the lifetime\
    \ of IoT (CT-\nRPL). As the name suggests, CT-RPL is a cluster-based routing protocol\
    \ that involves three\nprocesses: cluster formation, cluster-head selection, and\
    \ route establishment. CT-RPL ﬁrst\nscans the nodes and group (cluster) nodes\
    \ whose Euclidean distance from their centroid\npoint is bounded, adding one node\
    \ at a time. Next, each cluster selects its cluster-head\n(CH), utilizing a game-theoretic\
    \ approach in which the node with the maximum payoff\n“p” value—which considers\
    \ parameters such as residual energy, sensing energy, receiving\nenergy, aggregation\
    \ energy, and transmission energy—is selected as the CH node for each\nround.\
    \ Finally, the route is established using the metrics residual energy ratio (RER),\
    \ queue\nutilization (QU), and expected transmission count (ETX).\nAnother RPL\
    \ enhancement termed weighted random forward RPL (WRF-RPL) is\nproposed by Acevedo\
    \ et al. [136]. WRF-RPL suggests a load balancing over RPL mechanism,\nwhich distributes\
    \ the trafﬁc between multiple transmission paths, trying to avoid one\npreferred\
    \ parent’s congestions. WRF-RPL OF relies on the composition of two metrics, the\n\
    remaining energy and the count of parent nodes, where the latter aims at prioritizing\
    \ parent\nnodes with more optional paths to the destination. Forwarding decisions\
    \ are probabilistic\naccording to the deﬁned metric, such that nodes with a higher\
    \ number of parents or hops\nare more likely to be selected than others. The authors\
    \ utilize the Cooja simulator for\nevaluation. Rojas et al. [137] leverage a wired\
    \ data center network labeling protocol to\nsuggest IoTorii, a routing protocol\
    \ for LLNs. IoTorii supports multiple paths between\nsender and receiver, and\
    \ requires fewer table entries and control messages, with similar\nperformance\
    \ compared to the standard RPL.\nSensors 2022, 22, 2650\n21 of 44\nMolnár [138]\
    \ provides a graph-theoretic solution to the general problem of QoS-\nconstrained\
    \ routing in WSN that relies on RPL. The authors stress the difference between\n\
    multi-objective optimization and multi-constrained problem setting. Vera-Pérez\
    \ et al. [139]\nexamine the integration of RPL to IEEE 802.15.4e with time-slotted\
    \ channel-hopping (TSCH)\nmedium access mechanism. In particular, Ref. [139] characterizes\
    \ the long deployment\ndelays required for such networks to become operational\
    \ and able to start exchanging data\nmessages. The article proposes an analytical\
    \ model that estimates the average time that the\nsynchronization process can\
    \ take for a new node to join a TSCH-based network, as well as\nan estimation\
    \ of the maximum time required for the formation of a complete network of\nthis\
    \ kind, and the additional time required to set the RPL-based routes. The paper\
    \ validates\nthe analytical model via simulations. A recent comprehensive survey\
    \ on routing protocols\nfor LLN networks in IoT (not exclusive to RPL) can be\
    \ found in [140].\n5.2. Data Aggregation Routing Protocols for Energy Harvesting\
    \ WSN\nAs discussed in Section 2, an alternative for relying on batteries as the\
    \ source of energy,\nwith their imposed constraints (e.g., size, replacement,\
    \ etc.), is to embrace energy-harvesting\n(EH) technology. However, as mentioned\
    \ earlier, relying on EH imposes different con-\nstraints and limitations. Such\
    \ constraints can make battery-reliant schemes impractical\nwhen devising data\
    \ collection procedures. When battery-reliant schemes are applied to\nEH-based\
    \ platforms, performance can be highly degraded. Speciﬁcally, relying on EH can\n\
    induce high diversity between the different nodes, as different nodes can have\
    \ different\nattributes, such as energy depletion and charging rates, which affect\
    \ the nodes’ availability;\nin addition, different nodes can have different roles,\
    \ such as different reporting rates or\ndifferent report importance, requiring\
    \ more energy usage, which eventually also affects the\nnodes’ availability. When\
    \ a sensor is expected to transmit or receive a report, it needs to\nhave sufﬁcient\
    \ energy to complete the transaction; therefore, reliance on EH needs to be\n\
    considered when designing a scheduling protocol. For example, a data collection\
    \ scheme\nthat relies on EH should adapt the report rate to energy availability;\
    \ it can compromise\nthe rate of less important reports coming from the sensors\
    \ to leave them sufﬁcient energy\nfor emergency reports. It can prioritize sensors\
    \ with more energy over those with lower\nenergy, especially when there is some\
    \ redundancy in the reports received by different\nsensors. This is especially\
    \ so when dealing with multi-hop routing, where many of the\nnodes serve as relays\
    \ and have the burden to stay awake longer, to receive and transmit\nmore, which\
    \ escalates the heterogeneity of the nodes and accentuates the difference in\n\
    importance between the different nodes. Furthermore, if on a single-hop network,\
    \ we\ncould rely on the receiver (sink) to have unlimited power (connected to\
    \ a power source), in\nmulti-hop topologies also, the receivers rely on EH; hence,\
    \ when scheduling a transmission,\nwe need to ensure that both transmitter and\
    \ receiver have sufﬁcient power to complete the\ntransaction. In the following,\
    \ we present several routing protocol adaptations for EH-WSN\nin the context of\
    \ data aggregation.\nThe typical setup considers that each node (sensor) encompasses\
    \ an energy har-\nvester and an energy storage device and is solely powered by\
    \ the renewable energy\navailable to it by its energy storage device. A multi-hop\
    \ topology is considered such\nthat the data from many of the sensors need to\
    \ traverse multiple links before reaching the\nsink. Jeong et al. [141] propose\
    \ an adaptive data aggregation scheme for energy-harvesting\nWSNs. The suggested\
    \ scheme relies on two residual-energy thresholds, lower and upper.\nEach node\
    \ periodically estimates its residual energy level to determine whether or not\
    \ to\ntransmit data. When the node’s residual energy is either above the upper\
    \ threshold or\nbelow the lower threshold, the node transmits its aggregated data.\
    \ If its energy is below\nthe lower threshold, the node enters energy-saving mode\
    \ after transmitting the data. Its\nradio is turned off, and it waits to regain\
    \ sufﬁcient energy before turning its radio back\non. In normal operation mode,\
    \ where the residual energy is between the two thresholds,\nthe node only aggregates\
    \ data received from other nodes and collects its own sensed data.\nIf a node’s\
    \ aggregated data in normal mode exceeds its storage limit, the node transmits\n\
    Sensors 2022, 22, 2650\n22 of 44\nthe data regardless of its residual energy.\
    \ While this scheme is clear and straightforward\nto implement, it lacks latency\
    \ evaluation and a discussion about rendezvous between a\ntransmitter and a receiver.\n\
    Chen et al. [142] experimentally show that in energy-harvesting-based wireless\
    \ sensor\nnetworks (EH-WSNs), the required nodes’ charging time to be ready to\
    \ receive or send a\npacket is much greater than the time required for the contention\
    \ resolution mechanism and\ndominates the data aggregation latency. In addition\
    \ to the common collision deﬁnitions, the\npaper deﬁnes an “energy-collision”,\
    \ which occurs due to battery level constraint and not\ndue to simultaneous transmissions.\
    \ Speciﬁcally, energy-collision occurs when a transmitter-\nreceiver tuple is\
    \ scheduled for transmission, but the transmission cannot take place because\n\
    at least one of the two nodes has insufﬁcient energy to transmit or receive the\
    \ packet due\nto recent activity (insufﬁcient time has elapsed since its last\
    \ transmission or reception to\nharvest enough energy for the subsequent scheduled\
    \ transmission). An adaptable data\naggregation tree is constructed, which considers\
    \ each node’s residual and harvested energy,\nand three energy-collision-aware\
    \ data aggregation algorithms are proposed.\n5.2.1. Cluster-Based Routing Protocol\
    \ That Relies on EH\nSeveral studies have suggested various adaptations for LEACH\
    \ WSN cluster-based\nrouting protocol (e.g., [106]) for EH-based WSN (EH-WSN).\
    \ Recall that LEACH’s cluster-\nhead selection mechanism randomly selects sensor\
    \ nodes as cluster-heads to distribute\nthe energy consumption between them evenly,\
    \ which can seemingly cope with the EH\nconstraints. However, note that even when\
    \ the nodes’ platform is exactly the same, the\npotential of different nodes to\
    \ harvest energy, dependent on their speciﬁc ambient con-\nditions, can be very\
    \ different. Furthermore, the node’s location with respect to the sink\ncan highly\
    \ inﬂuence the amount of data it needs to relay toward the sink, causing high\n\
    discrepancies between the energy utilized by various nodes. To cope with these\
    \ discrepan-\ncies, Xiao et al. [143] modify LEACH’s cluster-head selection mechanism\
    \ and deﬁne a new\nmetric termed “energy potential function” to measure each node’s\
    \ capability to harvest\nenergy. The paper devises a cluster-head selection strategy\
    \ that prioritizes nodes with\nhigher expected stored energy (based on the currently\
    \ available energy and their potential\nenergy) to become cluster-heads, regardless\
    \ of the number of instances that the node was\nselected as cluster-head in the\
    \ past.\nTo address the imbalance between the energy expected to be consumed by\
    \ cluster-\nheads (CHs) that are closer to the sink and are expected to spend\
    \ more energy on relaying\npackets from farther clusters, and CHs that are further\
    \ from the sink and expected to relay\nless trafﬁc, Wu et al. [144] suggest an\
    \ unbalanced clustering mechanism. In particular,\ncluster sizes are determined\
    \ according to the distance (hop count) to the sink to balance the\nenergy consumption\
    \ of the CHs. Accordingly, clusters closer to the sink, which are expected\nto\
    \ relay more inter-cluster trafﬁc, will be smaller, so that they collect less\
    \ intra-cluster\ntrafﬁc; clusters further away from the sink and expected to relay\
    \ less inter-cluster trafﬁc\nwill comprise more nodes, so that they collect more\
    \ intra-cluster trafﬁc. The mechanism\nsuggested to attain this balance is partitioning\
    \ the network conceptually into concentric\nrings around the sink with linearly\
    \ increasing radii. Each ring comprises nodes with\nthe same hop distance to the\
    \ sink. Clusters within the same ring will have the same\nsize. CH selection is\
    \ designed to balance the loads of each ring considering the available\nnodes’\
    \ energy, which is evaluated based on the EH rate. Following a similar approach,\n\
    Yang et al. [145] assume a highly symmetric circular sensor network in which the\
    \ sink\n(BS) is located at the center, and the sensors are distributed evenly\
    \ in a disc around it.\nAs with [144], the sensor ﬁeld is divided into concentric\
    \ rings; however, in this study,\nthe rings are determined to have an equal area\
    \ such that the number of sensors in each\nring is expected to be the same. Under\
    \ the given model, Ref. [145] analyzes the energy\nconsumption of intra- and inter-cluster\
    \ data transmission and derives the energy neutrality\nconstraints, which guarantee\
    \ that each node consumes less energy than the amount of\nenergy it has harvested.\
    \ The authors further devise a constraint formula of the number of\nSensors 2022,\
    \ 22, 2650\n23 of 44\nclusters required in each layer (ring) that balances the\
    \ average energy consumption of nodes\nin different layers. The energy neutrality\
    \ constraints and the cluster parameters are used to\nobtain the parameters (number\
    \ of rings, number of clusters in each ring, and minimum\nnetwork data transmission\
    \ cycle) that minimize the data transmission cycle. Based on the\nattained parameters,\
    \ the cluster-based routing protocol is derived. The protocol consists\nof an\
    \ initialization phase and repeated cycles divided into topology formation and\
    \ data-\ngathering phases. Bahbahani and Alsusa [146] suggest two separate enhancements.\
    \ The\nﬁrst, termed cooperative transmission strategy, enables nodes to serve\
    \ as relays to relay\nundelivered packets from cluster members to CHs and from\
    \ CHs to the sink node. The\nsecond mechanism, termed cluster-head duty-cycle,\
    \ regulates the frequency at which a node\ncan become a CH based on duty-cycling\
    \ that adapts to the node’s energy-harvesting rate.\nTo conserve the energy of\
    \ nodes that are more susceptible to energy depletion,\nBozorgi et al. [147] select\
    \ CHs, taking into account their residual energy, expected har-\nvest energy,\
    \ distance from the sink, number of neighbors, and, similar to LEACH, the\nnumber\
    \ of times a node has already served as a CH in the past. The proposed approach,\n\
    which combines centralized and distributed mechanisms, relies on a signal transmitted\n\
    by the sink that can be received by all the nodes, which allows them to estimate\
    \ their\ngeographic distance from the sink. The network is partitioned by the\
    \ sink into four layers\nbased on distance. The sink further computes the individual\
    \ coverage radius of each node\n(potential CH) based on distance (nodes closer\
    \ to the sink, which are therefore expected\nto relay trafﬁc coming from more\
    \ distant clusters, will have a smaller radius, and thus\nless intra-cluster trafﬁc;\
    \ on the other hand, nodes farther away from the sink, which are\ntherefore expected\
    \ to have less inter-cluster trafﬁc to relay, are assigned a longer radius,\n\
    and therefore more intra-cluster trafﬁc). The paper suggests a distributed contention-based\n\
    mechanism for selecting the CHs in which the contention window takes into account\
    \ the\nparameters mentioned above. Another cluster-based routing for EH-WSN is\
    \ proposed by\nRen and Yao [148]. The proposed routing scheme is divided into\
    \ cluster establishment and\ndata collection. It is suggested that besides the\
    \ typical cluster members (CMs) and cluster-\nhead (CH), a new entity be devised,\
    \ termed in the paper scheduling node (SN), which is\ndifferent from the CH. The\
    \ main task of the SN is to monitor the energy of all the cluster\nmembers during\
    \ the data collection stage and select a CH based on the monitored residual\n\
    energy of the cluster members. The transmission range of nodes can also be adjusted\
    \ based\non their residual energy. The data collection stage, which adapts a round-based\
    \ scheme\nsimilar to LEACH, is divided into the data transmission and CH selection\
    \ stages.\nSinde et al. [149] aim to improve the network efﬁciency by three means:\
    \ (i) clusteriza-\ntion mechanism that takes into account energy consumption during\
    \ the data aggregation\nphase, (ii) duty cycle adaptation of each node such that\
    \ each sensor node determines its\nmode of operation, and (iii) routing mechanism\
    \ based on ant colony optimization that\nchooses the path between the source and\
    \ the sink node that reduces the delay incurred.\nOverall, while the paper jointly\
    \ addresses several topics in WSN, including those connected\nto energy-efﬁcient\
    \ data gathering, its main contribution is the detailed NS3 simulation.\n5.2.2.\
    \ Mobile Charger\nToday’s technology enables dedicated wireless charging equipment\
    \ (WCE) to recharge\nthe nodes’ batteries, prolonging the lifetime of wireless\
    \ rechargeable sensor networks.\nA model in which, in addition to the sink (base\
    \ station), a mobile station will navigate\nthrough the WSN to collect data and\
    \ charge sensor nodes is considered by Liu et al. [150].\nThe paper suggests a\
    \ joint routing and charging strategy. The joint problem is decomposed\ninto two\
    \ sub-optimization problems: routing tree optimization and charging path optimiza-\n\
    tion. Heuristic algorithms based on simulated annealing algorithms were applied\
    \ to solve\nthese sub-optimization problems.\nA joint charging and routing algorithm\
    \ with WCE-assisted data gathering is also\nsuggested by Lu et al. [151]. The\
    \ model suggested therein assumes that the BS (sink) can\nget the information\
    \ of each node at any time, including node location, residual energy,\nSensors\
    \ 2022, 22, 2650\n24 of 44\nand energy consumption rate. The suggested approach\
    \ relates to data routing and energy\nsupplement to undercharged nodes. The data\
    \ routing algorithm considers several factors:\nsensor buffer occupancy, load,\
    \ and energy. To ﬁnd the route for the mobile recharging\nunit to traverse, they\
    \ rely on Du [152] to seek the shortest Hamiltonian cycle between the\nnodes that\
    \ urgently need energy replenishment traversed by the mobile recharging unit.\n\
    Additional nodes along the traversed path can also be charged. Furthermore, the\
    \ mobile\nrecharging unit can also gather data from sensors with a critical buffer\
    \ occupancy during\nits recharging cycle.\nIn the following section, we discuss\
    \ network coding (NC) and, in particular, linear\nnetwork coding in the context\
    \ of data gathering in WSN.\n5.3. Network Coding (NC)\nNetwork coding leverages\
    \ the routing protocols and the ability to construct multi-path\nrouting between\
    \ sources and their destination (the sink) to enable intermediate nodes to\nperform\
    \ coding on the incoming packets before forwarding them. In the following section,\n\
    we discuss network-coding-related works.\nLinear network coding was ﬁrst introduced\
    \ by Celebiler and Stette [153] and evolved in\nthe seminal paper by Ahlswede\
    \ et al. [154] as a means to improve the network’s throughput,\nefﬁciency, and\
    \ scalability, which can also be leveraged to improve the network resilience\n\
    to attacks and eavesdropping. Linear network coding allows the network’s intermediate\n\
    nodes (e.g., relays) to accumulate arriving messages and forward a newly encoded\
    \ message,\nwhich is a linear combination of the accumulated packets, multiplying\
    \ them by coefﬁcients\nchosen from a ﬁnite ﬁeld. The manner in which nodes encode\
    \ and decode messages de-\npends on the selected coding scheme. Network coding\
    \ (NC) over wireless communication\ncan reduce the number of transmissions by\
    \ leveraging the fact that a single transmission is\noverheard by multiple nodes\
    \ in the transmitter’s vicinity, and can therefore be utilized by\neach of these\
    \ nodes, which will forward a coded packet with unique coefﬁcients comprising\n\
    its own message and the messages it overheard (e.g., [155]).\nIn WSNs, NC can\
    \ be utilized for various trafﬁc patterns, including data dissemination\n(one-to-many\
    \ communication) and data gathering. Works on energy-efﬁcient NC-based\ndissemination\
    \ can be followed in the survey [156], with multi-hop routing being empha-\nsized.\
    \ In data dissemination in which the base station/sink distributes information\
    \ to\nthe sensor nodes, NC is beneﬁcial mainly for distributing control messages\
    \ (broadcast or\nmulticast trafﬁc) or, in case of unicast trafﬁc, for recovering\
    \ lost packets (retransmissions).\nThe latter utilization relies on the fact that\
    \ different nodes heard or did not hear different\npackets. Accordingly, nodes\
    \ store packets they overheard, even if not destined to them-\nselves. The transmitter\
    \ (e.g., access-point) accumulates several packets that need to be\nretransmitted,\
    \ each for a different receiver. It transmits a coded packet that is a composite\n\
    of these accumulated packets. Each receiver can decode a missing packet by utilizing\
    \ its\nstored overheard packets (e.g., [157–162], where the last two mainly focus\
    \ on data dis-\nsemination of control management messages. It is noteworthy that\
    \ Cohen et al. [157] also\npresent a successful real HW radio deployment of their\
    \ scheme. XOR-CoW [163] exploits\nthe same concept to design an IoT protocol in\
    \ which relays transmit coded packets that\nmix downlink and uplink trafﬁc. Similar\
    \ to other previously mentioned studies, the coding\nscheme by Swamy et al. [163]\
    \ is over ﬁnite Galois ﬁeld of size 2 (GF(2)) (i.e., XORing the\ncoded packets).\n\
    Network coding is widely explored for data-gathering schemes. Typically, an NC-\n\
    based protocol involves both the coding scheme and the multi-path routing. It\
    \ relies on\nthe relay nodes to overhear packets and perform the coding, and on\
    \ the sink (or multiple\nsinks) to collect sufﬁcient coded packets (combinations)\
    \ to encode the sent information.\nThe limited ability of the sensors constrains\
    \ NC over WSN (e.g., limited storage to store\noverheard packets, limited computation\
    \ power to perform sophisticated operations, limited\nawake time for packet overhearing,\
    \ etc.). The utilized coding scheme inﬂuences the\nperformance of the NC algorithm\
    \ in several aspects such as the throughput, algorithm\nSensors 2022, 22, 2650\n\
    25 of 44\ncomplexity, encoding complexity, decoding complexity, packet overhead\
    \ (bits), required\nfeedback, and so on. Note that many of these metrics are directly\
    \ translated to air time\nand energy consumption, which must be considered in\
    \ WSN. The random linear network\ncoding (RLNC) encoding scheme (e.g., [164])\
    \ is widely used because, despite its simplicity,\nit can attain throughput that\
    \ is close to the optimal one using a decentralized algorithm.\nIn RLNC, relays\
    \ transmit random linear combinations of the packets they receive, with\nrandomly\
    \ chosen coefﬁcients from a ﬁnite Galois ﬁeld (GF). The receiver must obtain a\n\
    sufﬁcient number of linearly independent combinations (packets) to decode the\
    \ original\npackets. If the GF size is sufﬁciently large, the probability that\
    \ the randomly generated\ncombinations will be linearly independent is high. However,\
    \ the receiver needs to know the\ncoefﬁcient used in each combination; hence,\
    \ it needs to be sent as overhead piggybacked on\neach traversed packet. The larger\
    \ the GF size, the higher the overhead. RLNC scheme with\ndistributed encoding\
    \ was utilized by Stefanovi´c et al. [165] for a perimeter data-gathering\nobjective,\
    \ in which the data should reach the perimeter nodes that are located on the\n\
    boundary of the covered area. The proposed scheme does not deploy routing algorithms\
    \ or\nmaintain routing information and relies on random walks.\nOne disadvantage\
    \ of RLNC is its decoding complexity in the order of O(n3), where n\ndenotes the\
    \ number of original packets. Sparse end-to-end erasure-correcting codes can\n\
    reduce the decoding load on the receiver at the cost of introducing an additional,\
    \ non-\nnegligible delay. Feizi et al. [166] suggest a tunable sparse network\
    \ coding (TSNC) scheme\nthat tunes the level of sparsity as the transmission process\
    \ evolves. This tuning process\ncan reduce the delay overhead by using denser\
    \ codes towards the end of the transmission\nwhile maintaining the complexity\
    \ advantages of a sparse code. Prior et al. [167] propose\ntwo network coding\
    \ schemes for information gathering, which are based on tunable sparse\ncodes,\
    \ with and without explicit feedback from the sink. The suggested schemes are\n\
    designed for meter readings in a smart grid. Nistor et al. [168] further exploit\
    \ RLNC and\nTSNC for data gathering and derived analytical bounds for a multi-hop\
    \ line network using\na ﬂuid model, which is valid for any ﬁeld size and various\
    \ sparsity levels, and has two\ndifferent feedback mechanisms.\nSenseCode [169]\
    \ adopts the NC paradigm, aspiring to balance energy efﬁciency and\nend-to-end\
    \ packet error rate. SenseCode relies on nodes transmitting both uncoded and\n\
    coded packets. Each node stores only a small portion of the packets it overhears,\
    \ which can\nbe attained by letting the node wake up sporadically within its duty\
    \ cycle and stay awake\nfor a short time interval each time it wakes up, storing\
    \ overheard packets. Accordingly,\neach coded packet comprises only a small subset\
    \ of the packets the node could have\npotentially overheard and coded. NetCoDer\
    \ [170] concentrates on a star topology in\nwhich the star-head can be a sink\
    \ or a relay that collects information from its neighbors.\nNetCoDer opportunistically\
    \ selects, based on network conditions, a set of relays that, in\naddition to\
    \ the data sent by the nodes, send additional coded packets with packets they\n\
    overheard, which helps the star-head recover lost packets. To reduce the overhead,\
    \ the\nrelays use LNC coefﬁcients based on the addresses of the sensor nodes.\
    \ A similar idea\nthat also does not rely on feedback was presented in SR-Code\
    \ [171] in which nodes and\nrelays send redundant coded messages to help the sink\
    \ recover lost messages. SR-Code\nutilizes the XOR operator (GF(2)). Similar to\
    \ NetCoDer, SR-Code reduces the overhead\nby using a bitmap to identify the coded\
    \ packets rather than the address of the sending\nnode. Al-Hawri et al. [172]\
    \ assume a data-gathering setup with single or multiple gateways\n(sinks) that\
    \ can collaborate (exchange information via accessible shared distributed storage\n\
    system). The paper distinguishes between traditional relays, which forward packets\
    \ they\nreceive as-is, and encoding relays, which perform network-coding on the\
    \ packets they\nreceive before forwarding them. The authors suggest a mathematical\
    \ model and a heuristic\nalgorithm to determine the number of network-encoding\
    \ nodes and their location, which\nis insufﬁcient for the aggregate received data\
    \ at the gateway/gateways to be decodable,\ntaking into account link failure scenarios.\n\
    Sensors 2022, 22, 2650\n26 of 44\nProtocols that utilize NC in WSN need to balance\
    \ achieving the NC expedience and\ndiverse performance criteria. On the one hand,\
    \ the motivation is to send only coded packets,\nas sending uncoded packets degrades\
    \ the NC gain. On the other hand, a strategy in which\na relay waits for packets\
    \ to arrive in order to code them can yield unacceptable delays.\nFurthermore,\
    \ storing arriving packets while waiting for additional packets to arrive before\n\
    coding them can result in a buffer overﬂow and packet loss. To overcome these\
    \ drawbacks,\nChen et al. [173] suggest an opportunistic network coding (ONC)\
    \ approach in which the\nrelay can transmit either coded or uncoded packets. Each\
    \ relay determines whether to\ntransmit a coded or uncoded packet according to\
    \ its queue state at each transmission\nopportunity. For the simple topology of\
    \ a relay interconnecting two nodes that communi-\ncate with one another, Ref.\
    \ [173] presents an ONC strategy that can achieve the optimal\ndelay/power tradeoff.\
    \ Mirani et al. [174] adopt the ONC paradigm for data dissemination\nin vehicular\
    \ ad hoc networks (VANETs), for which the mobile nodes (vehicles) employ a\ndecode-and-forward\
    \ scheme with subjective timers determined according to their distance\nfrom the\
    \ source. In Tan et al. [175], an opportunistic routing protocol with opportunistic\n\
    network coding is proposed for correlated data gathering.\nNext, we provide more\
    \ recent works that utilize NC in WSNs and related networks\nthat are not particular\
    \ to data-gathering applications. Marques et al. [176] propose to use\nNC in a\
    \ fog computing scenario, since in the fog computing system architecture, the\
    \ data\nmeasured on a node should be delivered to many other destination nodes.\
    \ The authors\ndesign a protocol for encoding and decoding and provide a design\
    \ to incorporate it on\nthe MAC level. Uwitonze et al. [177] consider a setup\
    \ in which a WSN has been split into\nmultiple disjoint partitions and suggests\
    \ a polynomial-time heuristic algorithm based on\nspace network coding termed\
    \ relay placement using space network coding (i.e., rather than\nsend additional\
    \ coded data, additional relay nodes are deployed) for ﬁnding the optimal\nnumber\
    \ and positions to place relay nodes for restoring the network connectivity.\n\
    A network coding backpressure routing scheme for data aggregation in large-scale\n\
    Internet of things (IoT) networks is explored by Malathy et al. [178]. The proposed\
    \ routing\nscheme exploits network coding for the data aggregation process, which\
    \ improves the\nthroughput of the network by eliminating redundant packets. The\
    \ paper relies on cluster-\nbased routing that selects the cluster-heads (CH)\
    \ based on the available energy and distance,\nwhich helps to minimize trafﬁc\
    \ congestion and provide efﬁcient data transmission.\n5.4. Data Collection Utilizing\
    \ Mobile Sink and Unmanned Aerial Vehicle (UAV)\nA different paradigm for the\
    \ traditional setup of data gathering in WSN, which\nrelies on a single or multiple\
    \ static sink(s) towards which all trafﬁc needs to travel, is\nthe utilization\
    \ of one or multiple mobile sinks (MSs) that traverse the terrain and collect\n\
    the reports from the devices. Such mobile sink(s) can be the trafﬁc’s ﬁnal destination\
    \ or\njust an accessory that collects the data and transmits it to the sink. Note\
    \ that in the latter\ncase, the ﬁnal destination is not necessarily located within\
    \ the wireless network realm\nand can be located outside it (e.g., within the\
    \ Internet or the cloud). Since these mobile\nsinks are unmanned aerial vehicles\
    \ in many cases, these systems are sometimes called\nunmanned aerial vehicle-wireless\
    \ sensor networks (UAV–WSNs). This section reviews\nseveral state-of-the-art developments\
    \ in mobile sink(s). Since sometimes the MS routing\nchallenges are interleaved\
    \ with the MAC layer’s challenges, the solution suggested in some\npapers, and\
    \ accordingly their description, incorporated both layers.\nTypically, data-gathering\
    \ protocols that utilize moving sink(s) aim at optimizing some\nperformance metrics,\
    \ such as overall power consumption, average or worst latency of the\ndata, trajectory\
    \ traversed by the mobile sink, awake time of the sensors, maximizing the\nlife\
    \ cycle of the network, and so on. There are different options to classify these\
    \ protocols:\nthey can be classiﬁed according to this aforementioned performance\
    \ objective, or other\ncategories, such as characteristics of the moving sink,\
    \ its speed and constraints, network\nmodel, communication standard utilized,\
    \ and so on. In this section, we will classify the\nprotocol into two classes:\
    \ protocols that solely rely on the moving sink with no intra-trafﬁc\nSensors\
    \ 2022, 22, 2650\n27 of 44\nbetween the nodes (all the trafﬁc is directly transmitted\
    \ to the moving sink), and protocols\nthat combine routing between the nodes and\
    \ trafﬁc forwarding to the sink. This latter\nclass will mostly include cluster-based\
    \ protocols in which the nodes are clustered and\ncluster-heads (CHs) are selected,\
    \ but rather than the CHs routing the trafﬁc towards the\nsink, they forward the\
    \ trafﬁc directly to the mobile sink.\n5.4.1. Routing Directly to the Mobile Sink(s)\
    \ with No Intra-Node Data Forwarding\nIn this section, we review papers in which\
    \ the only data trafﬁc is between the nodes\nand the mobile sink, and no data\
    \ is forwarded between the nodes.\nZhan et al. [179] consider a general fading\
    \ channel model and suggest an efﬁcient\nsub-optimal solution that minimizes the\
    \ energy consumption of all sensor nodes (SNs)\nwhile ensuring that data is collected\
    \ reliably from all SNs with bounded outage probability.\nThe suggested solution\
    \ decouples the joint optimization problem, which considers both\nthe SNs’ wake-up\
    \ schedule and the unmanned aerial vehicle (UAV’s) trajectory, into two\nseparate\
    \ optimization problems, ensuring that the amount of data collected from each\
    \ SN\nreliably exceeds a threshold. One of the formulated optimization problems\
    \ is non-convex\ndue to non-convex constraints, and therefore it needs to be relaxed.\
    \ The two problems are\nsolved iteratively to obtain an approximate solution.\
    \ A ﬂight time minimization problem\nfor a UAV that collects data from a set of\
    \ energy-constrained ground sensors is studied by\nGong et al. [180]. The sensors\
    \ are assumed to be located on a line (one dimension). Each\nsensor has a certain\
    \ amount of data to upload. The UAV can collect data either while\nﬂying or while\
    \ hovering, and only from a single sensor at a time. Accordingly, the UAV’s\n\
    trajectory is divided into non-overlapping data collection intervals, each dedicated\
    \ to\ncollecting data from a single sensor. The objective is to minimize the total\
    \ ﬂight time of the\nUAV from an initial point to a destination by jointly optimizing\
    \ the division of intervals, the\nUAV’s speed, as well as the sensors’ transmission\
    \ power. The ﬂight time minimization is\nformulated as a dynamic programming (DP)\
    \ problem, where each DP stage considers ﬂight\ntime minimization for a single-sensor\
    \ data collection scenario. The algorithm for the single-\nsensor case is used\
    \ to ﬁnd the UAV’s optimal speed and the sensor’s transmission power.\nIt is shown\
    \ that the UAV’s optimal speed is proportional to the given energy of the sensors\n\
    and the inter-sensor distance but is inversely proportional to the data upload\
    \ requirements.\nThe metric addressed by Liu et al. [181] is the age of the information.\
    \ In particular,\nRef. [181] utilizes UAV, and suggests two age-optimal trajectories\
    \ for it to collect the\ndata from the ground SNs, one that minimizes the age\
    \ of the ‘oldest’ sensed information\namong the sensors, and another that minimizes\
    \ the average age of the information sensed\nby all sensors. It is shown that\
    \ both age-optimal trajectories correspond to the shortest\nHamiltonian path in\
    \ the wireless sensor network, in which the distance between any\ntwo sensors\
    \ is represented by the amount of inter-visit time. The authors adopt dynamic\n\
    programming and genetic algorithm to ﬁnd the two different age-optimal trajectories.\n\
    Liu et al. [182] also utilize a UAV to collect the data from the ground sensors.\
    \ The model\nsuggested therein assumes that the sensors (nodes) are randomly distributed\
    \ over a square\narea. The area is partitioned into small square cells. The UAV\
    \ ﬂying above the cells\nhovers above each cell to collect all the data of the\
    \ sensors within the cell. The paper\nstudies the amount of data per unit time\
    \ that the UAV can collect from the ground nodes\nas a function of the number\
    \ of cells, the height of the UAV, the number of sensors, and\nthe energy capacity\
    \ of the UAV. The paper suggests a similar analysis when multiple\nUAVs are utilized.\
    \ It seeks the optimal number of cells to maximize the per-node capacity\nunder\
    \ the suggested model and shows that under the suggested data collection network,\n\
    multiple UAVs can signiﬁcantly improve the per-node capacity attained by a single\
    \ UAV.\nThe balanced network communication protocol (BNCP) that utilizes UAV as\
    \ a mobile\nsink is suggested by Qin et al. [183]. There is no inter-sensor routing\
    \ in BNCP, and all\nsensors’ communication energy is spent on the sensor-UAV transmission\
    \ links. BNCP is\nimplemented and evaluated.\nSensors 2022, 22, 2650\n28 of 44\n\
    5.4.2. Cluster-Based Data Forwarding\nRather than the mobile sink node traversing\
    \ the network between all the sensors, a\ndifferent approach groups the sensors\
    \ into clusters and selects cluster-heads (CH), which\ncollect the data from all\
    \ cluster members, thus decreasing the traverse of the mobile sink.\nIn general,\
    \ data gathering in a clustered WSN imposes a tradeoff between the energy\nconsumed\
    \ during data collection within each cluster and the energy consumed by the\n\
    mobile sink. On the one hand, the higher the number of clusters (smaller clusters),\
    \ the\nless energy is consumed during data collection by the cluster-heads (CH);\
    \ on the other\nhand, it follows that the UAV will have to access more CHs on\
    \ its route, and consequently,\nthe energy spent by the UAV will be higher in\
    \ that case. This trade-off is one of the main\nchallenges in addressing the joint\
    \ problem of clusterization and CH selection, jointly with\nﬁnding the path traversed\
    \ by the UAV, as reﬂected in several papers discussed below.\nNajjar-Ghabel et\
    \ al. [184] propose a two-phase algorithm, termed DGOB, for data\ngathering in\
    \ WSNs in an environment impaired by obstacles, which utilizes a mobile sink\n\
    that traverses the network and collects the data. Both phases, node clusterization\
    \ and\nMS trajectory construction, exploit artiﬁcial intelligence (AI) schemes.\
    \ Tazibt et al. [185]\nutilize a small-scale drone to gather the data from scattered\
    \ sensors. Like in several other\npapers that rely on UAV to collect data from\
    \ cluster-heads, the challenge in [185] is two-fold:\n(i) clusterization and CH\
    \ selection (in contrast with other papers, this paper allows multi-\nhop clusters,\
    \ such that cluster members are up to a predeﬁned number of hops from their\n\
    CH); and (ii) plan of the drone trajectory for traversing through all CHs with\
    \ minimum\nenergy consumption (e.g., minimum path length). Even though the two\
    \ problems are\nrelated, the authors solve the two issues sequentially. They ﬁrst\
    \ solve the CH selection\nby formulating an optimization problem that seeks the\
    \ minimal set of cluster-heads that\nguarantee that all nodes are at most h hops\
    \ from a CH in the set. After determining the CH\nset via linear programing, they\
    \ utilize the 2-opt heuristic, which relies on a simple local\nsearch algorithm\
    \ for solving the traveling salesman problem, in order to ﬁnd the optimal\ntravel\
    \ trajectory for the drone between the selected CHs.\nKumar and Dash [186] also\
    \ suggest a data-gathering-by-mobile-sink scheme in WSN.\nThe model in [186] assumes\
    \ that the mobile sink is moving along a pre-speciﬁed path with\nconstant speed\
    \ and can collect data while traveling. The paper denotes all the sensors\nthat\
    \ are in transmission range from the mobile-sink traversed path, and can therefore\n\
    relay trafﬁc to it, as sub-sinks. All other nodes need to forward their data to\
    \ these sub-\nsinks, possibly through multi-hop communication, in order for them\
    \ to relay the data\nto the mobile sink. The paper suggests two different models:\
    \ the ﬁrst assumes that the\nmobile sink can receive data from only one sensor\
    \ at a time, while the second assumes that\nthe mobile sink can receive data from\
    \ multiple sensors simultaneously. Both suggested\nalgorithms comprise three phases:\
    \ (i) identify the relay nodes (sub-sinks) that are within\ntransmission range\
    \ from the mobile sink trajectory (unit disk graph model), and partition\nthe\
    \ path into segments that are the union of all the transmission disks of all the\
    \ sub-sinks;\n(ii) determine the communication time each sub-sink can have with\
    \ the mobile sink, and\naccordingly, the amount of data it can transmit; (iii)\
    \ utilize a network ﬂow approach to\ndetermine which sub-sink transmits to the\
    \ mobile sink in each of the mobile sink’s path\nsegments. Ebrahimi et al. [187]\
    \ aim to optimize total transmission power between WSN\ncluster-heads in an IoT\
    \ network. The problem is split into subproblems, which include\nCH assignment,\
    \ building of the forwarding tree within each cluster, and optimal UAV\ntrajectory\
    \ calculation. The data transmitted by CH to UAV is pre-processed by a specialized\n\
    optimized compression. A genetic algorithm for energy-efﬁcient CH selection is\
    \ employed\nby Wu et al. [188].\nThe focus of Zahra et al. [189] is on MS that\
    \ traverses a WSN that relies on a cluster-\nbased data collection protocol in\
    \ which cluster-heads are responsible for collecting and\ntransmitting the cluster\
    \ members’ sensed data to the MS. The paper examines a scenario in\nwhich the\
    \ MS is constantly moving in a predeﬁned trajectory, regardless of whether the\n\
    data transfer was completed or not. Accordingly, when the cluster aggregate data\
    \ is too\nSensors 2022, 22, 2650\n29 of 44\nlarge, the CH cannot complete the\
    \ transaction. The authors suggest a mechanism in which,\nin case the CH cannot\
    \ complete the transaction, it can use different cluster members as\nrelays to\
    \ continue the transaction after the MS has moved out of the transmission range\n\
    of the CH. Likewise, Zhang et al. [190] also suggest a hybrid approach that combines\
    \ the\nMS with hierarchical routing-based protocol relying on node clusterization.\
    \ In order to\nimprove the efﬁciency of the MS data collection, Ref. [190] suggests\
    \ utilizing virtual heads\n(VHs) that lie on the MS trajectory on the cluster\
    \ boundaries that also transmit collected\ndata to the MS. The channel access\
    \ relies on a random access mechanism.\nThe UAV can be of different physical structures.\
    \ While some machines are able to slow\ndown and even to hover, others, especially\
    \ the winged UAVs, can only ﬂy with a constant\nvelocity. This limitation poses\
    \ an additional challenge; see Say et al. [191] for a possible\nsolution. To address\
    \ the velocity limitation, the grid topology of the UAV’s coverage is\ndivided\
    \ into frames, and the most distant frames get the highest priority. The priority-based\n\
    transmissions from sensors to the moving UAV are incorporated into a MAC layer,\
    \ by\nintroducing a priority-based contention window adjustment scheme. A smaller\
    \ contention\nwindow is assigned to the frame where sensors send packets from\
    \ the rear side of the UAV,\nand should therefore have a higher transmission priority.\
    \ This results in a low packet loss\nwhen the UAV ﬂies forward. On top of this\
    \ architecture, a frame-selection-based routing\nprotocol is formulated.\n6. Wearables\
    \ and Wireless Body Area Networks (WBAN)\nNumerous applications rely on data gathering\
    \ and report collection in WSN and IoT,\nand some are mentioned throughout the\
    \ paper. There is no doubt that the essence of WSN\nis the applications that utilize\
    \ the infrastructure discussed throughout this paper. Providing\na thorough review\
    \ of such applications can encompass several surveys. Since wearables\nare becoming\
    \ highly popular and a ubiquitous application which imposes new challenges\nin\
    \ the context of data gathering, we discuss several recent results and related\
    \ challenges in\nthe context of wearables. Figure 5 depicts the main topics discussed\
    \ in this section.\nWearables and WBAN\nSection 6\nEnergy Harvesting (EH)\nSection\
    \ 6.1\nTechnological Advances\nSection 6.2\nTransmission Protocols\nSection 6.3\n\
    WBAN Applications\nSection 6.4\nFigure 5. The main topics in the context of wearables\
    \ covered in the section, and a rough partition of\nthe papers covered by these\
    \ topics.\nWearable technology refers to smart devices attached to the human body\
    \ or apparel\nto monitor the user and their environment. Wearables are designed\
    \ to detect, analyze,\nand transmit information, which allows continuous monitoring\
    \ of the subject. In some\ncases (e.g., healthcare applications), feedback is\
    \ returned to the wearer with strict perfor-\nmance constraints (e.g., reliability,\
    \ latency bounds). Such applications can necessitate the\nmonitoring of both bodily\
    \ conditions, such as blood pressure, blood glucose level (e.g.,\nin conjunction\
    \ with an insulin pump), ECG, EMG, body temperature, accelerometer, and\ngyroscope,\
    \ as well as environmental conditions that might inﬂuence the user, such as\n\
    temperature, humidity, CO2 level, dust level, and location.\nSensing essential\
    \ human physiological parameters led to the innovation of wireless\nbody area\
    \ networks (WBANs). WBAN typically relates to a small area network that spans\n\
    the whole human body. It comprises devices (wearables) located in the apparel,\
    \ on the\nbody, or under the skin, and are wirelessly connected. Even though tracking\
    \ physical\nconditions applies to diverse domains, including medical, social,\
    \ and economic ones, each\nwith its particular implications and extensive research\
    \ in the ﬁeld, the speciﬁc challenges\nof acquiring data in WBANs necessitated\
    \ new solutions designed for WBAN. Speciﬁcally,\nSensors 2022, 22, 2650\n30 of\
    \ 44\nsince the sensors in WBANS are designed to be located close to the monitored\
    \ individual,\nthey impose particular challenges related to their speciﬁc structural,\
    \ functional, and size-\nrelated constraints. In the sequel, we dwell on some\
    \ of the most critical challenges and\nrecent promising results on WBANS. The\
    \ main objective of this survey is to understand the\ndata-gathering challenges.\
    \ In the special case of WBANS, we also elaborate on the sensors’\nphysical and\
    \ mechanical structure, which directly impact the data acquisition process.\n\
    Many of the challenges pertaining to WSN in general, which are described throughout\n\
    this survey, also apply to wearables. However, some of these challenges are exaggerated\n\
    when applied to wearables due to their unique characteristics. For example, energy-related\n\
    challenges that are essential to address and substantially inﬂuence any WSN design\
    \ and\nperformance, open a different perspective on wearables. Speciﬁcally, due\
    \ to their sensing\ndevices’ tiny size, the energy storing capacities are limited.\
    \ Yet, many wearable applications,\nparticularly healthcare ones, employ continuous\
    \ sampling and communication tasks that\nconstantly consume energy and deplete\
    \ the device’s battery. Frequent battery replacement,\nwhich can be a burden in\
    \ any WSN, can be even more cumbersome in wearables and can\nhinder the adoption\
    \ of these technologies (e.g., when the wearables are implants, battery\nreplacement\
    \ can involve an invasive medical intervention). Accordingly, energy-efﬁcient\n\
    approaches designed for wearable sensor networks are important for disseminating\
    \ the\ntechnology into additional domains. An inclusive review of energy-efﬁcient\
    \ approaches\ndesigned for human context recognition (HCR) based on wearable sensor\
    \ networks is\ngiven by [192]. This paper classiﬁes energy-efﬁcient mechanisms\
    \ for health-related HCR\napplications, based on the task that the mechanism is\
    \ aimed at to reduce its energy con-\nsumption (e.g., sensing, communication,\
    \ computation). The paper reviews the related\nworks according to the classiﬁcation.\n\
    6.1. Energy Harvesting (EH)\nEnergy harvesting as a battery alternative has been\
    \ discussed in Section 5.2. However,\nEH in the context of wearables encounters\
    \ new challenges, such as critical reliability level,\nexpected tiny size and\
    \ position in/on the human body, limited exposure to energy sources\nsuch as solar\
    \ energy, and so on. Accordingly, we revisit EH and review some EH studies\nin\
    \ the context of wearables. The three most prominent techniques include photovoltaic\n\
    cells attached to a wearable (energy is accumulated from environmental illumination),\n\
    thermoelectric nanogenerators (the energy source is the heat produced by the human\
    \ body),\nand kinetic energy harvesters (energy is created by natural body motion).\
    \ All energy\nharvesting cases pose a fundamental challenge of effective energy\
    \ management, which\ninvolves continuous decision making regarding how much energy\
    \ to spend on sensing,\nmeasurements, on-board classiﬁcation, and transmission\
    \ (see also Section 5.2).\nWe present examples for each of the techniques mentioned\
    \ above in the context\nof wearables. Thermoelectric energy-harvesting units exploiting\
    \ self-generated human\nheat are suggested to be fabricated straight into the\
    \ textile of the garments [193]. Energy\nharvesting for activity-aware wearables\
    \ is designed by Khalifa et al. [194]. The idea is to\nremove the accelerometers,\
    \ which consume about 80% of the battery. Instead, the authors\npropose to employ\
    \ kinetic energy harvesters, which will convert human motion into\nelectrical\
    \ power. Additionally, to compensate for the accelerometers’ removal, the input\
    \ and\noutput of the kinetic energy harvester would be analyzed by a specialized\
    \ activity classiﬁer\nto track and identify the human activity (i.e., to perform\
    \ the primary task of the wearable).\nLight-based energy-harvesting wearables\
    \ are discussed by Park et al. [195]. It is noteworthy\nthat as the available\
    \ luminosity can be highly unpredictable, the overall functioning, data-\ngathering,\
    \ and transmission process would imply an optimization problem. Henceforth,\n\
    the same authors suggest a protocol to optimize the number and accuracy of interpretation\n\
    of human gestures by an energy-harvesting wearable device under an energy budget,\n\
    Park et al. [196]. To this end, they constructed an analytical model that characterizes\n\
    energy consumption based on experimental data and formulized the optimization\
    \ problem.\nEsteves et al. [197] suggest incorporating energy harvesting as part\
    \ of MAC 802.15.6. The\nSensors 2022, 22, 2650\n31 of 44\nproposed MAC modiﬁcation\
    \ includes the usage of some body sensors as relays. The\nmanaging part at a hub\
    \ (e.g., a smartphone) sets the optimal relay charging times to\nperform the data\
    \ transmission by relay effectively. A source and the relays send their\nenergy-harvesting\
    \ updates within the request for cooperation (RFC) packets. The charging\ntimes\
    \ are calculated according to the amount of energy at the source and relays and\
    \ are\nupdated in accordance with previous packet transmission success or failure.\n\
    6.2. Technological Advances\nWBAN utilization is penetrating new domains, spanning\
    \ a wide variety of sensors,\neach providing a different aspect of the monitored\
    \ subject. For example, healthcare ap-\nplications are expected to provide a wide\
    \ span of indicators from various physiological\nparameters. Speciﬁcally, to provide\
    \ a comprehensive status of the examinee, it requires, in\naddition to the standard\
    \ indicators such as heart rate and physical activity that many of us\nalready\
    \ have integrated in our watch, information at a deeper level and molecular level\n\
    insight into the dynamics of the wearer.\nTo cope with the growing popularity\
    \ of wearables and their expansion to a broader\nscope of applications, especially\
    \ in healthcare systems, with the increasing demand to\nimprove quality of service\
    \ (QoS) and quality of experience (QoE), a new generation of\nwearables has emerged.\
    \ This generation relies on several technological advances in both\nthe device\
    \ and cloud realms. The novel device technology utilizes new soft-sensing tech-\n\
    nologies, including innovative wearable materials such as conducting polymers,\
    \ rigid\nforms of hydrogel, gold and silver nanowires (to create nanowired tattoos\
    \ as stretchable\nsensors), carbon nanotubes, liquid metals, ionic liquids, and\
    \ others. These materials give\nrise to novel sensor families, such as electro-physiological\
    \ (acting on the electric potential\ndifference) physical and chemical sensors.\
    \ See the latest advances in the following related\nworks [198–200]. For example,\
    \ besides reviewing the key developments in sweat-sensing\ntechnology, Bariya\
    \ et al. [198] examine the requirements of the underlying components\nembedded\
    \ in sweat-based wearable sensors and discuss challenges for integrating wearable\n\
    sweat sensors in the development of personalized healthcare. Sweat-sensing technology\n\
    has been described earlier; see, for example, Salvo et al. [201], where a device\
    \ containing\ntwo humidity sensors located at different heights from the skin\
    \ is designed in a way that\nallows one to measure the sweat rate by the difference\
    \ in readings of these two sensing\nsub-units. Thermal comfort control by calculating\
    \ the relation between the vapor pres-\nsure and the temperature is designed into\
    \ watch-type sweat sensors by Sim et al. [202].\nSweat measurement by sweat biomarkers\
    \ (in particular, pH and Na+) is implemented\nby Song et al. [203]. In short,\
    \ the biomarkers cause a change in electric potential near the\nmeasuring device,\
    \ allowing for accurate sweat measurement during physical activity. The\nauthors\
    \ also note that the change in electrical potential allows for energy harvesting,\
    \ which\ncan be effectively managed to self-power the device and thus allow for\
    \ a battery-free design.\nIn general, the material imprinted into the working\
    \ reacting electrode determines which\nsubstance (i.e., a chemical component present\
    \ in the sweat) it will react with. For example,\nan application of electrochemical\
    \ differential pulse voltammetry to sense the sweat to\nmeasure the level of caffeine\
    \ is devised by Tai et al. [204].\nThe main challenge in the devices is to implement\
    \ capabilities of effective data gath-\nering, ﬁltering, and transmission within\
    \ microscopic computing units. Some biometric\nsensing (especially made by speciﬁc\
    \ conﬁgurations of adjacent sensor sets) produces large\namounts of data (as in\
    \ ECG sensing) that should undergo an appropriate local density\nreduction. To\
    \ ensure conformity with the sensing devices, paper lithium batteries are\nproposed\
    \ (see, e.g., [205]). In addition, many sensors are conﬁgured only to transmit\n\
    following special hazards. For example, ECG sensors should trigger an alarm in\
    \ case the\nheartbeat is abnormal. This local data processing is a preliminary\
    \ phase that facilitates\nthe more intensive data analyses in the intermediate\
    \ data collection unit (the smartphone),\nand ﬁnally, the destination server.\
    \ To treat noisiness and variability (if the sensor sampling\nfrequency is too\
    \ high) of raw data from an accelerometer or gyroscope or loss of data (if the\n\
    Sensors 2022, 22, 2650\n32 of 44\nsensor sampling frequency is too low), variable\
    \ sampling is proposed by Li et al. [206]. The\nofﬂine ML classiﬁcation algorithm\
    \ is used to identify and predict the physical activity.\nThe recent development\
    \ of miniature sensors combined with minimization of battery\nsize and energy\
    \ harvesting advances is sometimes referred to as a new paradigm, known as\nWearables\
    \ 2. For example, Ling et al. [207] provide a detailed description of various\
    \ types\nof sensors, means of attaching them to the human body, multiple parameters\
    \ the sensors\nare capable of measuring, and techniques to communicate and process\
    \ the measured data.\n6.3. Transmission Protocols\nWe note that while many of\
    \ the works mentioned above employ a smartphone device\nwith an application that\
    \ is presumably tailored to receive data from the wearables, having\na dedicated\
    \ hardware device that would ofﬂoad some of the networking burden (e.g.,\npotential\
    \ simpliﬁcation of the packetizing process) of the sensors would be more effective\n\
    and reliable. Indeed, in Pathak et al. [208], a central processing hub allows\
    \ one to circumvent\nthe cumbersome processes of sensor identiﬁcation, sensor\
    \ joining, and reconﬁguration\nby providing a designated interface. The authors\
    \ provide real hardware implementation,\nexplore various performance metrics,\
    \ and provide energy measurements.\nSeveral available protocols for data transmission\
    \ are suitable for WBAN. We mention\nhere the low Bluetooth energy (BLE; see,\
    \ e.g., Townsend et al. [209] for a detailed protocol\nstack description and Gomez\
    \ et al. [210] for performance evaluation and comparison with\nordinary Bluetooth\
    \ and other protocols). For distances of several centimeters, near-ﬁeld\ncommunication\
    \ (NFC) protocol (see Coskun et al. [211] for the theory and Kim et al. [212]\n\
    for a description of possible device designs and applications). Details of the\
    \ IEEE 802.15.6\nstandard, which covers WBAN, can be found in, for example, Kwak\
    \ et al. [213]. One sees\ntherein how the human body communications PHY layer\
    \ in particular is deﬁned.\n6.4. WBAN Applications\nEven though, as stated earlier,\
    \ there is no intention to provide a thorough review of\nWBAN applications, we\
    \ mention several interesting ones. Monitoring of workers involved\nin extreme\
    \ conditions or whose activity can be potentially dangerous (e.g., Lee et al.\
    \ [214])\nsuggest wearable sensors for monitoring miners or construction professionals.\
    \ This study\nevaluates integrated wearable sensors for measuring construction\
    \ workers’ personal level\nof workload, individual factors, and physiological\
    \ reactions during rooﬁng activities. A\nfatigue detection system for car drivers\
    \ by Chang et al. [215] includes smart glasses, which\nare able to identify possible\
    \ drowsiness by an IR detector aimed at the driver’s eyes,\nequipped with BLE\
    \ transmitter. A small processor embedded into the glasses gathers and\npre-analyzes\
    \ the data and then transmits them to the on-board computer in the car. The\n\
    latter makes a decision about whether to issue a fatigue warning and sends it\
    \ to the cloud.\nWearables can be attached to a human body in order to sense the\
    \ environment for the safety\nof the carrier, as in Wu et al. [216]. The data\
    \ (humidity and temperature) is then transmitted\nto a mobile unit, where it can\
    \ be analyzed locally or further transmitted to the cloud in order\nto issue timely\
    \ warnings. Classiﬁcation of sports activity is implemented and validated by\n\
    experiments by Qi et al. [217], where the activity is identiﬁed from accelerometer\
    \ and ECG\nmeasurements done by chest and wrist sensors. The measurements are\
    \ transmitted to a\nsmartphone, which performs the data processing. SVM is employed\
    \ for the classiﬁcation.\nYou et al. [218] suggest a real-time wireless body sensor\
    \ networks (WBSNs) scheme\nfor welfare assessment and disease monitoring, prevention,\
    \ and treatment. The suggested\nscheme is composed of three components: sensing,\
    \ communication, and management.\nSensing attains a set of physiological parameters,\
    \ such as heart rate, body temperature,\nECG, temperature, blood pressure, blood\
    \ glucose, heart rate, and oxygen saturation, from\ndesignated sensors embedded\
    \ on a smart shirt worn by the monitored user. Communi-\ncation handles the processes\
    \ of delivering the sensed physiological data and controlling\ninstructions to\
    \ a backend server through wireless networks. The transmission protocols\ncan\
    \ be divided into two segments: the transfer of information from the sensors to\
    \ a central\nSensors 2022, 22, 2650\n33 of 44\nterminal located at a smartphone\
    \ and the transfer of information between the smartphone\nand the designated server,\
    \ which is located on the healthcare cloud. The communication\nrelies on multiple\
    \ communication protocols including Bluetooth, WiFi, and 3G/4G (which\ncan be\
    \ replaced by 5G where available). Management is responsible for collecting, classify-\n\
    ing, and monitoring the physiological data, and furthermore, being able to issue\
    \ warning\nmessages to medical professionals or caregivers whenever the physiological\
    \ data are ab-\nnormal. Additional applications utilizing data gathering can be\
    \ found in the following\nsurvey [219].\nWe conclude by emphasizing that the beneﬁts\
    \ of WBANs have not run their course\nyet. The development of data gathering will\
    \ jointly progress with the ongoing advances\nin sensor construction and manufacturing\
    \ capability, development, and standardization\nof Wearables 2 and beyond. Development\
    \ of specialized post-processing platforms poses\na specialized challenge, and\
    \ the urge to make progress in this area is acute. To illustrate\nthis, on account\
    \ of an ever-growing population, specialized platforms for elderly care\nare needed;\
    \ see, for example, the recent papers [220,221] about wearables designated for\n\
    elderly patients and references therein.\nFinally, wearables have been recently\
    \ harnessed for combating the COVID-19 disease.\nEarly identiﬁcation of COVID-19\
    \ symptoms by evaluating the resting heart rate during the\nasymptomatic (presumably\
    \ infectious) period and analysis by a deep learning framework\nis evaluated by\
    \ Bogu and Snyder [222]. While the precision of such a tool is clearly inferior\n\
    to the standard medical assays, it may be useful to provide a preliminary alert\
    \ for the\nearly onset of the disease for people in risk groups. Hassantabar et\
    \ al. [223] suggest a\nframework termed CovidDeep that combines commercially available\
    \ wearable physiolog-\nical feature sensors (WMSs) and a simple yes/no questionnaire\
    \ with efﬁcient DNNs for\npervasive large-scale monitoring of disease onset and\
    \ health condition. The automatically\nextracted raw data and medical background\
    \ and symptom responses are combined with\nsynthetically generated data to train\
    \ the DNN architecture. Grow-and-prune synthesis is\nused to generate accurate\
    \ and computationally efﬁcient models that can be deployed for\nCOVID-19 inference.\n\
    Since viruses can spread between people who are in close contact with an infected\n\
    person, and since infected people may be asymptomatic, the pandemic taught us\
    \ that it\nis best to keep a safe distance from others (see, for example, Cortellessa\
    \ et al. [224] for\nclose-proximity risk assessment for COVID infection). Accordingly,\
    \ most health institutions\nrecommend keeping physical distance between people\
    \ in public places (commonly termed\nas ”social distancing”) in order to stop\
    \ the pandemic from spreading. Furthermore, people\nwho were in the proximity\
    \ of an infected person (tested positive for COVID) are encouraged\nto be examined,\
    \ and several governmental regulations even require such people to stay in\nquarantine.\
    \ Several recent studies have suggested leveraging wearables for contact tracing\n\
    in order to identify the hazard from close proximity. For example, Ng et al. [225]\
    \ focus on\nBluetooth low energy and discuss the different data ﬂow approaches\
    \ and the accuracy of\nsmartphone vs. smartwatch applications in proximity detection.\
    \ Bian et al. [226] utilize\nwearables to monitor social distancing as recommended\
    \ for preventing COVID-19 spread.\nIn particular, the authors design compact potentially\
    \ wearable oscillating-magnetic-ﬁeld-\nbased proximity-sensing prototype systems\
    \ suitable for the relevant safety distance and able\nto track social distancing\
    \ much more reliably than the current Bluetooth-based smartphone\ntechnology.\
    \ Shubina et al. [227] provide a brief technical overview of the main contact-\n\
    tracing approaches and the challenges they impose on wearable technology. The\
    \ paper\nalso provides a short overview of the existing solutions deployed for\
    \ contact tracing and a\ndiscussion on the potential effect of wearables in tackling\
    \ the spread of a highly contagious\nvirus. More works from the past year discuss\
    \ the use of wearables for remote management\nand automated assessment of COVID-19.\
    \ Amft et al. [228] provide an overview of insti-\ntutional initiatives and alternative,\
    \ more accurate technologies for detection of infection\nsymptoms and possible\
    \ contact with infected individuals. Channa et al. [229] is a system-\nSensors\
    \ 2022, 22, 2650\n34 of 44\natic review of the two categories of challenges: on-body\
    \ sensors and their clinical utilization\nin screening and contact tracing.\n\
    7. Concluding Remarks\nData gathering in modern WSN and IoT networks encompasses\
    \ many challenges,\nwhich span the entire communication stack. Many techniques,\
    \ protocols, and solutions\nhave been proposed over the years, but as technology\
    \ advances, new challenges and new\nopportunities arise. In this survey, we reviewed\
    \ these main challenges and opportunities, as\nwell as recent advances, and related\
    \ them to speciﬁc data-gathering research domains. We\nprovided a comprehensive\
    \ state-of-the-art data-gathering literature review in modern WSN\nnetworks, distinguishing\
    \ between the communication layers and the research domain.\nWe ﬁrst summarized\
    \ general architectural novelties and emerging architectures. We\nreviewed several\
    \ new technological advances and their inﬂuence on sensing device design,\nthe\
    \ platform carrying it, and the transceiver. We reviewed the effect of these architectural\n\
    advantages on speciﬁc applications, such as agriculture, smart cities, smart homes.\
    \ We\nshowed how cloud computing drives new WSN types, which introduces new directions,\n\
    and discussed how WSN can coexist within social network domains. Compressed sensing\n\
    was summarized next. We provided an overview of this important scheme and reviewed\n\
    its utilization in WSNs. We proceeded with the MAC layer. Since the performance\
    \ of many\ninnovations in the higher layers rely on the underlay MAC protocol\
    \ and since many data\ngathering schemes utilize traditional WSN MAC protocols,\
    \ we provided an overview of\nthese traditional protocols and mentioned state-of-the-art\
    \ works in WSN and IoT. These\nworks devise new MAC approaches for data gathering.\
    \ Next, we covered the recent\nadvances in routing. Similarly, we opened with\
    \ an overview of the traditional routing\nprotocols utilized for data-gathering\
    \ and reviewed several recent enhancements. We\nreviewed the utilization of network\
    \ coding for data gathering and explored the facilitation\nof UAV and mobile-sink\
    \ in collecting the data from the sensors. Lastly, we turned our\nattention to\
    \ the area of wearables which opens new research horizons for human health and\n\
    activity surveillance and discussed the new paradigm of Wireless Body Area Networks.\
    \ In\nthe spirit of the times, we concluded with several studies that utilize\
    \ some of the techniques\ndiscussed in this survey to aid in combating the COVID\
    \ pandemic.\nWhile we provided the general background to the research areas we\
    \ covered, we\nmainly focused on cutting-edge research works. Yet we note that\
    \ even seemingly exhausted\ntopics, such as MAC and Routing protocols, provide\
    \ new technological developments and\npresent opportunities for new research domains.\n\
    As implied throughout this survey, there are several research areas that attract\
    \ a\nlot of attention and anticipation for future developments. For example, technological\n\
    innovations in manufacturing more compact sensing units with yet superior transmission,\n\
    reception and processing capabilities are extremely in demand in several disciplines\
    \ which\ninclude wearables, smart homes, IoT-related domains and others. All the\
    \ more so, this\nis relevant when dealing with healthcare applications and implants.\
    \ Such technological\ninnovations will require in turn enhancements to other domains\
    \ across the communication\nstack in order to adjust to the new opportunities\
    \ and limitations. Energy acquisition is\nstill a fruitful research domain. In\
    \ this respect, ﬁnding new sources of energy harvesting\n(EH), better utilization\
    \ of existing energy resources and energy storage are still challenging\nresearch\
    \ ﬁelds. Similarly, new EH methods impose multiple new challenges on the entire\n\
    protocol stack, which are correlated with the EH method, e.g., different EH methods\
    \ dictate\nconstraints on the MAC design, which in turn, impact the routing protocol\
    \ which affects\nthe performance end eventually the application utilizing the\
    \ infrastructure. The growth of\nsuch networks supporting a variety of heterogeneous\
    \ devices of communication standards\nand their increasing density requires more\
    \ effective data compression techniques and\nefﬁcient on-grid data analyses (i.e.,\
    \ even prior to data delivery to sinks). On the off-grid\nside of WSNs, we note\
    \ that consistent progress in Cloud Computing (CC) technology and\nexploitation\
    \ methodology will open new horizons in data analysis.\nSensors 2022, 22, 2650\n\
    35 of 44\nDeployment of Edge Computing units cooperating with sensing-capable\
    \ units will\nimply the development of novel data-gathering schemes. As WSN density\
    \ increases,\nchallenges in the gathering of useful data by WSN and its consequent\
    \ analysis will coincide\nwith those of Big Data. Clearly, the processes of such\
    \ analyses should be implemented\nwithin Cloud Computing systems. The fashion\
    \ of the CC physical resources deployed in\norder to efﬁciently interact with\
    \ WSN is not necessarily similar to those of usual IT-to-CC\nconnectivity. It\
    \ is not currently properly standardized and, most importantly, it is not\nclear\
    \ how correctly CC (e.g., which HW, correct deployment of Access Points) should\
    \ be\ncross-planned with a particular WSN. Issues of security and privacy which\
    \ are not covered\nin this survey will continue to elicit a major interest, especially\
    \ in keeping with evolving\nhealth care applications. The growth of the network\
    \ and their variability will require a\ngreater measure of adoption of ML and\
    \ AI methods and the development of such new\nspecialized methods for WSN in the\
    \ very near future.\nFunding: This research received no external funding.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nRawat,\
    \ P.; Singh, K.D.; Chaouchi, H.; Bonnin, J.M. Wireless sensor networks: A survey\
    \ on recent developments and potential\nsynergies. J. Supercomput. 2014, 68, 1–48.\
    \ [CrossRef]\n2.\nPeoples, C.; Rabbani, K.; Mamun, A.T.; Wang, B.; Morrow, P.;\
    \ Moore, A.; Rafferty, J.; Mcclean, S.; Zoualfaghari, M.H.;\nKulkarni, P. A Review\
    \ of IoT Service Provision to Assess the Potential for System Interoperability\
    \ in an Uncertain Ecosys-\ntem.\nIn Proceedings of the 2019 IEEE SmartWorld, Ubiquitous\
    \ Intelligence & Computing, Advanced & Trusted Comput-\ning, Scalable Computing\
    \ & Communications, Cloud & Big Data Computing, Internet of People and Smart City\
    \ Innovation\n(SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Leicester, UK, 19–23\
    \ August 2019; IEEE: Piscataway, NJ, USA, 2019;\npp. 1964–1971.\n3.\nAhad, M.A.;\
    \ Paiva, S.; Tripathi, G.; Feroz, N. Enabling technologies and sustainable smart\
    \ cities. Sustain. Cities Soc. 2020,\n61, 102301. [CrossRef]\n4.\nLai, C.S.; Jia,\
    \ Y.; Dong, Z.; Wang, D.; Tao, Y.; Lai, Q.H.; Wong, R.T.; Zobaa, A.F.; Wu, R.;\
    \ Lai, L.L. A review of technical standards\nfor smart cities. Clean Technol.\
    \ 2020, 2, 290–310. [CrossRef]\n5.\nZhang, Y.; Sun, L.; Song, H.; Cao, X. Ubiquitous\
    \ WSN for healthcare: Recent advances and future prospects. IEEE Internet Things\n\
    J. 2014, 1, 311–318. [CrossRef]\n6.\nHwang, Y.M.; Kim, M.G.; Rho, J.J. Understanding\
    \ Internet of things (IoT) diffusion: Focusing on value conﬁguration of RFID and\n\
    sensors in business cases (2008–2012). Inf. Dev. 2016, 32, 969–985. [CrossRef]\n\
    7.\nGhayvat, H.; Mukhopadhyay, S.; Gui, X.; Suryadevara, N. WSN-and IOT-based\
    \ smart homes and their extension to smart\nbuildings. Sensors 2015, 15, 10350–10379.\
    \ [CrossRef]\n8.\nFarooq, M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey\
    \ on the Role of IoT in Agriculture for the Implementation of\nSmart Farming.\
    \ IEEE Access 2019, 7, 156237–156271. [CrossRef]\n9.\nBoursianis, A.D.; Papadopoulou,\
    \ M.S.; Diamantoulakis, P.; Liopa-Tsakalidi, A.; Barouchas, P.; Salahas, G.; Karagiannidis,\n\
    G.; Wan, S.; Goudos, S.K. Internet of things (IoT) and agricultural unmanned aerial\
    \ vehicles (UAVs) in smart farming: A\ncomprehensive review. Internet Things 2020,\
    \ 100187. [CrossRef]\n10.\nUllo, S.L.; Sinha, G. Advances in smart environment\
    \ monitoring systems using IoT and sensors. Sensors 2020, 20, 3113. [CrossRef]\n\
    11.\nWerner-Allen, G.; Johnson, J.; Ruiz, M.; Lees, J.; Welsh, M. Monitoring volcanic\
    \ eruptions with a wireless sensor network. In\nProceedings of the Second European\
    \ Workshop on Wireless Sensor Networks, Istanbul, Turkey, 2 February 2005; IEEE:\
    \ Piscataway,\nNJ, USA, 2005; pp. 108–120.\n12.\nAlphonsa, A.; Ravi, G. Earthquake\
    \ early warning system by IOT using Wireless sensor networks. In Proceedings of\
    \ the 2016\nInternational Conference on Wireless Communications, Signal Processing\
    \ and Networking (WiSPNET), Chennai, India, 23–25\nMarch 2016; IEEE: Piscataway,\
    \ NJ, USA, 2016; pp. 1201–1205.\n13.\nLu, H.; Wang, D.; Li, Y.; Li, J.; Li, X.;\
    \ Kim, H.; Serikawa, S.; Humar, I. CONet: A cognitive ocean network. IEEE Wirel.\
    \ Commun.\n2019, 26, 90–96. [CrossRef]\n14.\nMourtzis, D.; Vlachou, E.; Milas,\
    \ N. Industrial big data as a result of IoT adoption in manufacturing.\nProcedia\
    \ Cirp 2016,\n55, 290–295. [CrossRef]\n15.\nBansal, M.; Chana, I.; Clarke, S.\
    \ A survey on iot big data: Current status, 13 v’s challenges, and future directions.\
    \ ACM Comput.\nSurv. 2020, 53, 1–59. [CrossRef]\n16.\nBoubiche, S.; Boubiche,\
    \ D.E.; Bilami, A.; Toral-Cruz, H. Big data challenges and data aggregation strategies\
    \ in wireless sensor\nnetworks. IEEE Access 2018, 6, 20558–20571. [CrossRef]\n\
    Sensors 2022, 22, 2650\n36 of 44\n17.\nKim, B.S.; Kim, K.I.; Shah, B.; Chow, F.;\
    \ Kim, K.H. Wireless sensor networks for big data systems.\nSensors 2019, 19,\
    \ 1565.\n[CrossRef]\n18.\nDash, S.K.; Mohapatra, S.; Pattnaik, P.K. A survey on\
    \ applications of wireless sensor network using cloud computing. Int. J.\nComput.\
    \ Sci. Emerg. Technol. 2010, 1, 50–55.\n19.\nAazam, M.; Khan, I.; Alsaffar, A.A.;\
    \ Huh, E.N. Cloud of Things: Integrating Internet of Things and cloud computing\
    \ and the\nissues involved. In Proceedings of the 2014 11th International Bhurban\
    \ Conference on Applied Sciences & Technology (IBCAST),\nIslamabad, Pakistan,\
    \ 14–18 January 2014; IEEE: Piscataway, NJ, USA, 2014; pp. 414–419.\n20.\nDwivedi,\
    \ R.K.; Kumar, R. Sensor cloud: Integrating wireless sensor networks with cloud\
    \ computing. In Proceedings of the\n2018 5th IEEE Uttar Pradesh Section International\
    \ Conference on Electrical, Electronics and Computer Engineering (UPCON),\nGorakhpur,\
    \ India, 2–4 November 2018 ; IEEE: Piscataway, NJ, USA, 2018; pp. 1–6.\n21.\n\
    Li, F.; Vögler, M.; Claeßens, M.; Dustdar, S. Efﬁcient and scalable IoT service\
    \ delivery on cloud. In Proceedings of the 2013 IEEE\nSixth International Conference\
    \ on Cloud Computing, Santa Clara, CA, USA, 28 June–3 July 2013 ; IEEE: Piscataway,\
    \ NJ, USA,\n2013; pp. 740–747.\n22.\nKamel, M.; Hamouda, W.; Youssef, A. Ultra-dense\
    \ networks: A survey. IEEE Commun. Surv. Tutor. 2016, 18, 2522–2545. [CrossRef]\n\
    23.\nTeng, Y.; Liu, M.; Yu, F.R.; Leung, V.C.; Song, M.; Zhang, Y. Resource allocation\
    \ for ultra-dense networks: A survey, some research\nissues and challenges. IEEE\
    \ Commun. Surv. Tutor. 2018, 21, 2134–2168. [CrossRef]\n24.\nStergiou, C.; Psannis,\
    \ K.E.; Kim, B.G.; Gupta, B. Secure integration of IoT and cloud computing. Future\
    \ Gener. Comput. Syst. 2018,\n78, 964–975. [CrossRef]\n25.\nBiswas, S.; Das, R.;\
    \ Chatterjee, P. Energy-efﬁcient connected target coverage in multi-hop wireless\
    \ sensor networks. In Industry\nInteractive Innovations in Science, Engineering\
    \ and Technology; Springer: Berlin/Heidelberg, Germany, 2018; pp. 411–421.\n26.\n\
    Ammari, H.M. Joint k-coverage and data gathering in sparsely deployed sensor networks–Impact\
    \ of purposeful mobility and\nheterogeneity. ACM Trans. Sens. Netw. 2013, 10,\
    \ 1–33. [CrossRef]\n27.\nMdemaya, G.B.J.; Bomgni, A.B. A2CDC: Area Coverage, Connectivity\
    \ and Data Collection in wireless sensor networks. Netw.\nProtoc. Algorithms 2018,\
    \ 10, 20–34.\n28.\nBoukerche, A.; Sun, P. Connectivity and coverage based protocols\
    \ for wireless sensor networks. Ad Hoc Netw. 2018, 80, 54–69.\n[CrossRef]\n29.\n\
    Cerchecci, M.; Luti, F.; Mecocci, A.; Parrino, S.; Peruzzi, G.; Pozzebon, A. A\
    \ low power IoT sensor node architecture for waste\nmanagement within smart cities\
    \ context. Sensors 2018, 18, 1282. [CrossRef] [PubMed]\n30.\nTeixidó, P.; Gómez-Galán,\
    \ J.A.; Gómez-Bravo, F.; Sánchez-Rodríguez, T.; Alcina, J.; Aponte, J. Low-power\
    \ low-cost wireless ﬂood\nsensor for smart home systems. Sensors 2018, 18, 3817.\
    \ [CrossRef] [PubMed]\n31.\nBorrero, J.D.; Zabalo, A. An autonomous wireless device\
    \ for real-time monitoring of water needs.\nSensors 2020, 20, 2078.\n[CrossRef]\n\
    32.\nVullers, R.J.; Van Schaijk, R.; Visser, H.J.; Penders, J.; Van Hoof, C. Energy\
    \ harvesting for autonomous wireless sensor networks.\nIEEE Solid-State Circuits\
    \ Mag. 2010, 2, 29–38. [CrossRef]\n33.\nPrasad, R.V.; Devasenapathy, S.; Rao,\
    \ V.S.; Vazifehdan, J. Reincarnation in the ambiance: Devices and networks with\
    \ energy\nharvesting. IEEE Commun. Surv. Tutor. 2013, 16, 195–213. [CrossRef]\n\
    34.\nKu, M.L.; Li, W.; Chen, Y.; Liu, K.R. Advances in energy harvesting communications:\
    \ Past, present, and future challenges. IEEE\nCommun. Surv. Tutor. 2015, 18, 1384–1412.\
    \ [CrossRef]\n35.\nShaikh, F.K.; Zeadally, S. Energy harvesting in wireless sensor\
    \ networks: A comprehensive review. Renew. Sustain. Energy Rev.\n2016, 55, 1041–1054.\
    \ [CrossRef]\n36.\nPerera, T.D.P.; Jayakody, D.N.K.; Sharma, S.K.; Chatzinotas,\
    \ S.; Li, J. Simultaneous wireless information and power transfer\n(SWIPT): Recent\
    \ advances and future challenges. IEEE Commun. Surv. Tutor. 2017, 20, 264–302.\
    \ [CrossRef]\n37.\nPrauzek, M.; Konecny, J.; Borova, M.; Janosova, K.; Hlavica,\
    \ J.; Musilek, P. Energy harvesting sources, storage devices and system\ntopologies\
    \ for environmental wireless sensor networks: A review. Sensors 2018, 18, 2446.\
    \ [CrossRef] [PubMed]\n38.\nKanoun, O.; Bradai, S.; Khriji, S.; Bouattour, G.;\
    \ El Houssaini, D.; Ben Ammar, M.; Naifar, S.; Bouhamed, A.; Derbel, F.; Viehweger,\n\
    C. Energy-aware system design for autonomous wireless sensor nodes: A comprehensive\
    \ review. Sensors 2021, 21, 548. [CrossRef]\n[PubMed]\n39.\nKhalid, N.; Mirzavand,\
    \ R.; Saghlatoon, H.; Honari, M.M.; Mousavi, P. A three-port zero-power RFID sensor\
    \ architecture for IoT\napplications. IEEE Access 2020, 8, 66888–66897. [CrossRef]\n\
    40.\nAbella, C.S.; Bonina, S.; Cucuccio, A.; D’Angelo, S.; Giustolisi, G.; Grasso,\
    \ A.D.; Imbruglia, A.; Mauro, G.S.; Nastasi, G.A.;\nPalumbo, G.; et al. Autonomous\
    \ energy-efﬁcient wireless sensor network platform for home/ofﬁce automation.\
    \ IEEE Sens. J.\n2019, 19, 3501–3512. [CrossRef]\n41.\nLee, W.K.; Schubert, M.J.;\
    \ Ooi, B.Y.; Ho, S.J.Q. Multi-source energy harvesting and storage for ﬂoating\
    \ wireless sensor network\nnodes with long range communication capability. IEEE\
    \ Trans. Ind. Appl. 2018, 54, 2606–2615. [CrossRef]\n42.\nJoris, L.; Dupont, F.;\
    \ Laurent, P.; Bellier, P.; Stoukatch, S.; Redouté, J.M. An autonomous sigfox\
    \ wireless sensor node for\nenvironmental monitoring. IEEE Sens. Lett. 2019, 3,\
    \ 1–4. [CrossRef]\n43.\nDevadas, T.J.; Thayammal, S.; Ramprakash, A. IoT Data\
    \ Management, Data Aggregation and Dissemination. In Principles of\nInternet of\
    \ Things (IoT) Ecosystem: Insight Paradigm; Springer: Berlin/Heidelberg, Germany,\
    \ 2020; pp. 385–411.\nSensors 2022, 22, 2650\n37 of 44\n44.\nZhu, C.; Leung, V.C.;\
    \ Rodrigues, J.J.; Shu, L.; Wang, L.; Zhou, H. Social sensor cloud: Framework,\
    \ greenness, issues, and outlook.\nIEEE Netw. 2018, 32, 100–105. [CrossRef]\n\
    45.\nDinh, T.; Kim, Y. An efﬁcient interactive model for on-demand sensing-as-a-servicesof\
    \ sensor-cloud. Sensors 2016, 16, 992.\n[CrossRef] [PubMed]\n46.\nZhu, C.; Shu,\
    \ L.; Leung, V.C.; Guo, S.; Zhang, Y.; Yang, L.T. Secure multimedia big data in\
    \ trust-assisted sensor-cloud for smart\ncity. IEEE Commun. Mag. 2017, 55, 24–30.\
    \ [CrossRef]\n47.\nKuo, Y.W.; Li, C.L.; Jhang, J.H.; Lin, S. Design of a wireless\
    \ sensor network-based IoT platform for wide area and heterogeneous\napplications.\
    \ IEEE Sens. J. 2018, 18, 5187–5197. [CrossRef]\n48.\nSatyanarayanan, M. The emergence\
    \ of edge computing. Computer 2017, 50, 30–39. [CrossRef]\n49.\nAbdelwahab, S.;\
    \ Hamdaoui, B.; Guizani, M.; Znati, T. Cloud of things for sensing-as-a-service:\
    \ Architecture, algorithms, and use\ncase. IEEE Internet Things J. 2016, 3, 1099–1112.\
    \ [CrossRef]\n50.\nPopescu, D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana,\
    \ C. Advanced UAV–WSN System for Intelligent Monitoring in\nPrecision Agriculture.\
    \ Sensors 2020, 20, 817. [CrossRef] [PubMed]\n51.\nDatta, S.K.; Bonnet, C.; Da\
    \ Costa, R.P.F.; Härri, J. Datatweet: An architecture enabling data-centric iot\
    \ services. In Proceedings of\nthe 2016 IEEE Region 10 Symposium (TENSYMP), Bali,\
    \ Indonesia, 9–11 May 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 343–348.\n52.\n\
    Ayele, E.D.; Meratnia, N.; Havinga, P.J. MANER: Managed data dissemination scheme\
    \ for LoRa IoT enabled wildlife monitoring\nsystem (WMS). In Proceedings of the\
    \ 2018 9th IFIP International Conference on New Technologies, Mobility and Security\
    \ (NTMS),\nParis, France, 26–28 February 2018; IEEE: Piscataway, NJ, USA, 2018;\
    \ pp. 1–7.\n53.\nJuang, P.; Oki, H.; Wang, Y.; Martonosi, M.; Peh, L.S.; Rubenstein,\
    \ D. Energy-efﬁcient computing for wildlife tracking: Design\ntradeoffs and early\
    \ experiences with ZebraNet. In Proceedings of the 10th International Conference\
    \ on Architectural Support for\nProgramming Languages and Operating Systems, San\
    \ Jose, CA, USA, 5–9 October 2002; pp. 96–107.\n54.\nSaleh, N.; Kassem, A.; Haidar,\
    \ A.M. Energy-efﬁcient architecture for wireless sensor networks in healthcare\
    \ applications. IEEE\nAccess 2018, 6, 6478–6486. [CrossRef]\n55.\nAlsina-Pagès,\
    \ R.M.; Navarro, J.; Alías, F.; Hervás, M. homesound: Real-time audio event detection\
    \ based on high performance\ncomputing for behaviour and surveillance remote monitoring.\
    \ Sensors 2017, 17, 854. [CrossRef] [PubMed]\n56.\nAbeBer, J.; Gotze, M.; Kuhnlenz,\
    \ S.; Grafe, R.; Kuhn, C.; ClauB, T.; Lukashevich, H. A distributed sensor network\
    \ for monitoring\nnoise level and noise sources in urban environments. In Proceedings\
    \ of the 2018 IEEE 6th International Conference on Future\nInternet of Things\
    \ and Cloud (FiCloud), Barcelona, Spain, 6–8 August 2018; IEEE: Piscataway, NJ,\
    \ USA, 2018; pp. 318–324.\n57.\nSiamwala, A.; Lochhead, Z.; Abdulla, W. Environmental\
    \ noise monitoring using distributed IoT sensor nodes. In Proceedings of\nthe\
    \ 2019 International Conference on Electronics, Information, and Communication\
    \ (ICEIC), Auckland, New Zealand, 22–25\nJanuary 2019; IEEE: Piscataway, NJ, USA,\
    \ 2019; pp. 1–10.\n58.\nBalouchestani, M.; Raahemifar, K.; Krishnan, S. Compressed\
    \ sensing in wireless sensor networks: Survey. Can. J. Multimed. Wirel.\nNetw.\
    \ 2011, 2, 1–4.\n59.\nDonoho, D.L. Compressed sensing. IEEE Trans. Inf. Theory\
    \ 2006, 52, 1289–1306. [CrossRef]\n60.\nFeizi, S.; Médard, M.; Effros, M. Compressive\
    \ sensing over networks. In Proceedings of the 2010 48th Annual Allerton Conference\n\
    on Communication, Control, and Computing (Allerton), Monticello, IL, USA, 29 September–1\
    \ October 2010; IEEE: Piscataway, NJ,\nUSA, 2010; pp. 1129–1136.\n61.\nLuo, C.;\
    \ Wu, F.; Sun, J.; Chen, C.W. Compressive data gathering for large-scale wireless\
    \ sensor networks. In Proceedings of the\n15th Annual International Conference\
    \ on Mobile Computing and Networking (MobiCom), Beijing, China, 20–25 September\
    \ 2009;\npp. 145–156.\n62.\nLuo, C.; Wu, F.; Sun, J.; Chen, C.W. Efﬁcient measurement\
    \ generation and pervasive sparsity for compressive data gathering.\nIEEE Trans.\
    \ Wirel. Commun. 2010, 9, 3728–3738. [CrossRef]\n63.\nWang, J.; Tang, S.; Yin,\
    \ B.; Li, X.Y. Data gathering in wireless sensor networks through intelligent\
    \ compressive sensing. In\nProceedings of the IEEE International Conference on\
    \ Computer Communications (INFOCOM), Orlando, FL, USA, 25–30 March\n2012; pp.\
    \ 603–611.\n64.\nXu, L.; Qi, X.; Wang, Y.; Moscibroda, T. Efﬁcient data gathering\
    \ using compressed sparse functions. In Proceedings of the IEEE\nInternational\
    \ Conference on Computer Communications (INFOCOM), Turin, Italy, 14–19 April 2013\
    \ ; pp. 310–314.\n65.\nLi, S.; Da Xu, L.; Wang, X. Compressed sensing signal and\
    \ data acquisition in wireless sensor networks and Internet of things.\nIEEE Trans.\
    \ Ind. Inform. 2012, 9, 2177–2186. [CrossRef]\n66.\nDhanapala, D.C.; Bandara,\
    \ V.W.; Pezeshki, A.; Jayasumana, A.P. Phenomena discovery in WSNs: A compressive\
    \ sensing based\napproach. In Proceedings of the IEEE International Conference\
    \ on Communications (ICC), Budapest, Hungary, 9–13 June 2013;\npp. 1851–1856.\n\
    67.\nZheng, H.; Yang, F.; Tian, X.; Gan, X.; Wang, X.; Xiao, S. Data Gathering\
    \ with Compressive Sensing in Wireless Sensor Networks:\nA Random Walk Based Approach.\
    \ IEEE Trans. Parallel Distrib. Syst. 2015, 26, 35–44. [CrossRef]\n68.\nZheng,\
    \ H.; Xiao, S.; Wang, X.; Tian, X. Energy and latency analysis for in-network\
    \ computation with compressive sensing in\nwireless sensor networks. In Proceedings\
    \ of the IEEE International Conference on Computer Communications (INFOCOM),\n\
    Orlando, FL, USA, 25–30 March 2012; pp. 2811–2815.\n69.\nXu, X.; Ansari, R.; Khokhar,\
    \ A.; Vasilakos, A. Hierarchical data aggregation using compressive sensing (HDACS)\
    \ in WSNs. ACM\nTrans. Sens. Netw. 2015, 11, 1–25. [CrossRef]\nSensors 2022, 22,\
    \ 2650\n38 of 44\n70.\nLan, K.; Wei, M. A Compressibility-Based Clustering Algorithm\
    \ for Hierarchical Compressive Data Gathering. IEEE Sens. J. 2017,\n17, 2550–2562.\
    \ [CrossRef]\n71.\nWu, X.; Xiong, Y.; Yang, P.; Wan, S.; Huang, W. Sparsest Random\
    \ Scheduling for Compressive Data Gathering in Wireless Sensor\nNetworks. IEEE\
    \ Trans. Wirel. Commun. 2014, 13, 5867–5877. [CrossRef]\n72.\nYin, J.; Yang, Y.;\
    \ Wang, L. An Adaptive Data Gathering Scheme for Multi-Hop Wireless Sensor Networks\
    \ Based on Compressed\nSensing and Network Coding. Sensors 2016, 16, 462. [CrossRef]\
    \ [PubMed]\n73.\nXu, W.; Mallada, E.; Tang, A. Compressive sensing over graphs.\n\
    In Proceedings of the IEEE International Conference on\nComputer Communications\
    \ (INFOCOM), Shanghai, China, 10–15 April 2011; pp. 2087–2095.\n74.\nZheng, H.;\
    \ Xiao, S.; Wang, X.; Tian, X.; Guizani, M. Capacity and Delay Analysis for Data\
    \ Gathering with Compressive Sensing in\nWireless Sensor Networks. IEEE Trans.\
    \ Wirel. Commun. 2013, 12, 917–927. [CrossRef]\n75.\nAkyildiz, I.F.; Vuran, M.C.\
    \ Wireless Sensor Networks; John Wiley & Sons: Hoboken, NJ, USA, 2010; Volume\
    \ 4.\n76.\nKumar, A.; Zhao, M.; Wong, K.J.; Guan, Y.L.; Chong, P.H.J. A comprehensive\
    \ study of iot and wsn mac protocols: Research issues,\nchallenges and opportunities.\
    \ IEEE Access 2018, 6, 76228–76262. [CrossRef]\n77.\nQuintero, V.L.; Estevez,\
    \ C.; Orchard, M.E.; Pérez, A. Improvements of energy-efﬁcient techniques in WSNs:\
    \ A MAC-protocol\napproach. IEEE Commun. Surv. Tutor. 2018, 21, 1188–1208. [CrossRef]\n\
    78.\nYe, W.; Heidemann, J.; Estrin, D. An energy-efﬁcient MAC protocol for wireless\
    \ sensor networks.\nIn Proceedings of the\nTwenty-First Annual Joint Conference\
    \ of the IEEE Computer and Communications Societies, New York, NY, USA, 23–27\
    \ June\n2002; IEEE: Piscataway, NJ, USA, 2002; Volume 3, pp. 1567–1576.\n79.\n\
    Van Dam, T.; Langendoen, K. An adaptive energy-efﬁcient MAC protocol for wireless\
    \ sensor networks. In Proceedings of the\n1st International Conference on Embedded\
    \ Networked Sensor Systems (SenSys), Los Angeles, CA, USA, 5–7 November 2003 ;\n\
    pp. 171–180.\n80.\nSun, Y.; Du, S.; Gurewitz, O.; Johnson, D.B. DW-MAC: A low\
    \ latency, energy efﬁcient demand-wakeup MAC protocol for wireless\nsensor networks.\
    \ In Proceedings of the 9th ACM International Symposium on Mobile Ad Hoc Networking\
    \ and Computing,\nHong Kong, China, 26–30 May 2008; pp. 53–62.\n81.\nPolastre,\
    \ J.; Hill, J.; Culler, D. Versatile low power media access for wireless sensor\
    \ networks. In Proceedings of the 2nd Interna-\ntional Conference on Embedded\
    \ Networked Sensor Systems (SenSys), Baltimore, MD, USA, 3–5 November 2004; pp.\
    \ 95–107.\n82.\nBuettner, M.; Yee, G.V.; Anderson, E.; Han, R. X-MAC: A short\
    \ preamble MAC protocol for duty-cycled wireless sensor networks.\nIn Proceedings\
    \ of the 4th International Conference on Embedded Networked Sensor Systems (SenSys),\
    \ Boulder, CO, USA,\n31 October–3 November 2006; pp. 307–320.\n83.\nEl-Hoiydi,\
    \ A.; Decotignie, J.D. WiseMAC: An ultra low power MAC protocol for the downlink\
    \ of infrastructure wireless sensor\nnetworks. In Proceedings of the ISCC 2004.\
    \ Ninth International Symposium on Computers And Communications (IEEE Cat.\nNo.\
    \ 04TH8769), Alexandria, Egypt, 28–31 July 2004; IEEE: Piscataway, NJ, USA, 2004;\
    \ Volume 1, pp. 244–251.\n84.\nSun, Y.; Gurewitz, O.; Johnson, D.B. RI-MAC: A\
    \ receiver-initiated asynchronous duty cycle MAC protocol for dynamic trafﬁc\n\
    loads in wireless sensor networks. In Proceedings of the 6th ACM Conference on\
    \ Embedded Network Sensor Systems (SenSys),\nRaleigh, NC, USA, 5–7 November 2008;\
    \ pp. 1–14.\n85.\nTang, L.; Sun, Y.; Gurewitz, O.; Johnson, D.B. PW-MAC: An energy-efﬁcient\
    \ predictive-wakeup MAC protocol for wireless sensor\nnetworks. In Proceedings\
    \ of the IEEE Conference on Computer Communications (INFOCOM), Shanghai, China,\
    \ 10–15 April\n2011; pp. 1305–1313.\n86.\nZhang, D.g.; Zhou, S.; Tang, Y.m. A\
    \ low duty cycle efﬁcient MAC protocol based on self-adaption and predictive strategy.\
    \ Mob.\nNetw. Appl. 2018, 23, 828–839. [CrossRef]\n87.\nDutta, P.; Dawson-Haggerty,\
    \ S.; Chen, Y.; Liang, C.J.M.; Terzis, A. A-MAC: A versatile and efﬁcient receiver-initiated\
    \ link layer\nfor low-power wireless. ACM Trans. Sens. Netw. 2012, 8, 1–29. [CrossRef]\n\
    88.\nWymore, M.L.; Qiao, D. RIVER-MAC: A Receiver-Initiated Asynchronously Duty-Cycled\
    \ MAC Protocol for the Internet of\nThings. In Proceedings of the IEEE 43rd Annual\
    \ Computer Software and Applications Conference (COMPSAC), Milwaukee, WI,\nUSA,\
    \ 15–19 July 2019; Volume 1, pp. 860–869.\n89.\nGurewitz, O.; Zaharia, O. Collision\
    \ Prevention for Duty-Cycle Receiver-Initiation MAC Protocol via Multiple Access\
    \ Reservation\n(MAR-RiMAC). Sensors 2021, 21, 127. [CrossRef] [PubMed]\n90.\n\
    Liu, H.I.; He, W.J.; Seah, W.K. LEB-MAC: Load and energy balancing MAC protocol\
    \ for energy harvesting powered wireless\nsensor networks. In Proceedings of the\
    \ 2014 20th IEEE International Conference on Parallel and Distributed Systems\
    \ (ICPADS),\nHsinchu, Taiwan, 16–19 December 2014; IEEE: Piscataway, NJ, USA,\
    \ 2014; pp. 584–591.\n91.\nKhalil, M.I.; Hossain, M.A.; Ahmed, I. DURI-MAC: A\
    \ dual channel receiver initiated MAC protocol for wireless sensor network\n(WSN).\
    \ In Proceedings of the International Conference on Electrical, Computer and Communication\
    \ Engineering (ECCE), Cox’s\nBazar, Bangladesh, 16–18 February 2017; IEEE: Piscataway,\
    \ NJ, USA, 2017; pp. 577–582.\n92.\nTang, L.; Sun, Y.; Gurewitz, O.; Johnson,\
    \ D.B. EM-MAC: A dynamic multichannel energy-efﬁcient MAC protocol for wireless\n\
    sensor networks. In Proceedings of the Twelfth ACM International Symposium on\
    \ Mobile Ad Hoc Networking and Computing\n(MobiHoc), Paris, France, 17–19 May\
    \ 2011; pp. 1–11.\n93.\nYe, D.; Zhang, M. A self-adaptive sleep/wake-up scheduling\
    \ approach for wireless sensor networks. IEEE Trans. Cybern. 2017,\n48, 979–992.\
    \ [CrossRef]\nSensors 2022, 22, 2650\n39 of 44\n94.\nGamm, G.U.; Sippel, M.; Kostic,\
    \ M.; Reindl, L.M. Low power wake-up receiver for wireless sensor nodes. In Proceedings\
    \ of the\nIEEE Sixth International Conference on Intelligent Sensors, Sensor Networks\
    \ and Information Processing (ISSNIP), Brisbane,\nAustralia, 7–10 December 2010;\
    \ pp. 121–126.\n95.\nOller, J.; Demirkol, I.; Casademont, J.; Paradells, J.; Gamm,\
    \ G.U.; Reindl, L. Performance evaluation and comparative analysis of\nsubcarrier\
    \ modulation wake-up radio systems for energy-efﬁcient wireless sensor networks.\
    \ Sensors 2014, 14, 22–51. [CrossRef]\n[PubMed]\n96.\nOller, J.; Demirkol, I.;\
    \ Casademont, J.; Paradells, J.; Gamm, G.U.; Reindl, L. Has time come to switch\
    \ from duty-cycled MAC\nprotocols to wake-up radio for wireless sensor networks?\
    \ IEEE/ACM Trans. Netw. 2015, 24, 674–687. [CrossRef]\n97.\nSpenza, D.; Magno,\
    \ M.; Basagni, S.; Benini, L.; Paoli, M.; Petrioli, C. Beyond duty cycling: Wake-up\
    \ radio with selective\nawakenings for long-lived wireless sensing systems. In\
    \ Proceedings of the IEEE Conference on Computer Communications\n(INFOCOM), Hong\
    \ Kong, China, 26 April–1 May 2015; pp. 522–530.\n98.\nGhose, D.; Li, F.Y. Enabling\
    \ backoff for SCM wake-up radio: Protocol and modeling. IEEE Commun. Lett. 2017,\
    \ 21, 1031–1034.\n[CrossRef]\n99.\nGhose, D.; Frøytlog, A.; Li, F.Y. Enabling\
    \ early sleeping and early data transmission in wake-up radio-enabled IoT networks.\n\
    Comput. Netw. 2019, 153, 132–144. [CrossRef]\n100. Guntupalli, L.; Ghose, D.;\
    \ Li, F.Y.; Gidlund, M. Energy efﬁcient consecutive packet transmissions in receiver-initiated\
    \ wake-up\nradio enabled wsns. IEEE Sens. J. 2018, 18, 4733–4745. [CrossRef]\n\
    101. Singh, R.; Sikdar, B. A Receiver Initiated Low Delay MAC Protocol for Wake-Up\
    \ Radio Enabled Wireless Sensor Networks. IEEE\nSens. J. 2020, 20, 13796–13807.\
    \ [CrossRef]\n102. Hawa, M.; Darabkh, K.A.; Al-Zubi, R.; Al-Sukkar, G. A self-learning\
    \ MAC protocol for energy harvesting and spectrum access in\ncognitive radio sensor\
    \ networks. J. Sens. 2016, 2016, 9604526. [CrossRef]\n103. Cohen, A.; Cohen, A.;\
    \ Gurewitz, O. Efﬁcient data collection over multiple access wireless sensors\
    \ network. IEEE/ACM Trans.\nNetw. 2020, 28, 491–504. [CrossRef]\n104. Tong, F.;\
    \ Peng, Y. A Data-Gathering, Dynamic Duty-Cycling MAC Protocol for Large-Scale\
    \ Wireless Sensor Networks. Sensors\n2020, 20, 4071. [CrossRef] [PubMed]\n105.\
    \ Heinzelman, W.R.; Chandrakasan, A.; Balakrishnan, H. Energy-efﬁcient communication\
    \ protocol for wireless microsensor\nnetworks. In Proceedings of the 33rd Annual\
    \ Hawaii International Conference on System Sciences, Maui, HI, USA, 7 January\n\
    2000; IEEE: Piscataway, NJ, USA, 2000; p. 10.\n106. Arumugam, G.S.; Ponnuchamy,\
    \ T. EE-LEACH: Development of energy-efﬁcient LEACH Protocol for data gathering\
    \ in WSN.\nEURASIP J. Wirel. Commun. Netw. 2015, 2015, 1–9. [CrossRef]\n107. Singh,\
    \ S.K.; Kumar, P.; Singh, J.P. A survey on successors of LEACH protocol. IEEE\
    \ Access 2017, 5, 4298–4328. [CrossRef]\n108. Anzola, J.; Pascual, J.; Tarazona,\
    \ G.; Gonzalez Crespo, R. A clustering WSN routing protocol based on kd tree algorithm.\
    \ Sensors\n2018, 18, 2899. [CrossRef] [PubMed]\n109. Lindsey, S.; Raghavendra,\
    \ C.; Sivalingam, K.M. Data gathering algorithms in sensor networks using energy\
    \ metrics. IEEE Trans.\nParallel Distrib. Syst. 2002, 13, 924–935. [CrossRef]\n\
    110. Razaque, A.; Abdulgader, M.; Joshi, C.; Amsaad, F.; Chauhan, M. P-LEACH:\
    \ Energy efﬁcient routing protocol for Wireless Sensor\nNetworks. In Proceedings\
    \ of the 2016 IEEE Long Island Systems, Applications and Technology Conference\
    \ (LISAT), Farmingdale,\nNY, USA, 29–29 April 2016; IEEE: Piscataway, NJ, USA,\
    \ 2016; pp. 1–5.\n111. Siew, Z.W.; Wong, C.H.; Chin, C.S.; Kiring, A.; Teo, K.T.K.\
    \ Cluster heads distribution of wireless sensor networks via adaptive\nparticle\
    \ swarm optimization.\nIn Proceedings of the 2012 Fourth International Conference\
    \ on Computational Intelligence,\nCommunication Systems and Networks, Phuket,\
    \ Thailand, 24–26 July 2012; IEEE: Piscataway, NJ, USA, 2012; pp. 78–83.\n112.\
    \ Tam, N.T.; Hai, D.T.; Son, L.H.; Vinh, L.T. Improving lifetime and network connections\
    \ of 3D wireless sensor networks based on\nfuzzy clustering and particle swarm\
    \ optimization. Wirel. Netw. 2018, 24, 1477–1490. [CrossRef]\n113. Cui, Z.; Cao,\
    \ Y.; Cai, X.; Cai, J.; Chen, J. Optimal LEACH protocol with modiﬁed bat algorithm\
    \ for big data sensing systems in\nInternet of Things. J. Parallel Distrib. Comput.\
    \ 2019, 132, 217–229. [CrossRef]\n114. Jiang, A.; Zheng, L. An effective hybrid\
    \ routing algorithm in WSN: Ant colony optimization in combination with hop count\n\
    minimization. Sensors 2018, 18, 1020. [CrossRef]\n115. Rodríguez, A.; Del-Valle-Soto,\
    \ C.; Velázquez, R. Energy-Efﬁcient Clustering Routing Protocol for Wireless Sensor\
    \ Networks\nBased on Yellow Saddle Goatﬁsh Algorithm. Mathematics 2020, 8, 1515.\
    \ [CrossRef]\n116. Karunanithy, K.; Velusamy, B. Cluster-tree based energy efﬁcient\
    \ data gathering protocol for industrial automation using WSNs\nand IoT. J. Ind.\
    \ Inf. Integr. 2020, 19, 100156. [CrossRef]\n117. Mehmood, A.; Lv, Z.; Lloret,\
    \ J.; Umar, M.M. ELDC: An artiﬁcial neural network based energy-efﬁcient and robust\
    \ routing scheme\nfor pollution monitoring in WSNs. IEEE Trans. Emerg. Top. Comput.\
    \ 2017, 8, 106–114. [CrossRef]\n118. Durairaj, U.M.; Selvaraj, S. Two-Level Clustering\
    \ and Routing Algorithms to Prolong the Lifetime of Wind Farm-Based WSN.\nIEEE\
    \ Sens. J. 2020, 21, 857–867. [CrossRef]\n119. Shifrin, M.; Cidon, I. C3: Collective\
    \ congestion control in multi-hop wireless networks. In Proceedings of the 2010\
    \ Seventh\nInternational Conference on Wireless On-demand Network Systems and\
    \ Services (WONS), Kranjska Gora, Slovenia, 3–5 February\n2010; IEEE: Piscataway,\
    \ NJ, USA, 2010; pp. 31–38.\nSensors 2022, 22, 2650\n40 of 44\n120. Biswas, S.;\
    \ Morris, R. ExOR: Opportunistic multi-hop routing for wireless networks. In Proceedings\
    \ of the 2005 Conference on\nApplications, Technologies, Architectures, and Protocols\
    \ for Computer Communications, Philadelphia, PA, USA, 22–26 August\n2005; pp.\
    \ 133–144.\n121. Ye, Z.; Hua, Y. On link layer policies of data forwarding over\
    \ wireless relays. In Proceedings of the MILCOM 2005—2005\nIEEE Military Communications\
    \ Conference, Atlantic City, NJ, USA, 17–20 October 2005; IEEE: Piscataway, NJ,\
    \ USA, 2005;\npp. 2138–2144.\n122. Landsiedel, O.; Ghadimi, E.; Duquennoy, S.;\
    \ Johansson, M. Low power, low delay: Opportunistic routing meets duty cycling.\
    \ In\nProceedings of the 2012 ACM/IEEE 11th International Conference on Information\
    \ Processing in Sensor Networks (IPSN), Beijing,\nChina, 16–20 April 2012; IEEE:\
    \ Piscataway, NJ, USA, 2012; pp. 185–196.\n123. Tang, L.; Sun, Y.; Gurewitz, O.;\
    \ Johnson, D.B. Optimizations for route discovery in asynchronous duty-cycling\
    \ wireless networks.\nIn Proceedings of the 2012 IEEE 9th International Conference\
    \ on Mobile Ad-Hoc and Sensor Systems (MASS 2012), Las Vegas,\nNV, USA, 8–11 October\
    \ 2012; IEEE: Piscataway, NJ, USA, 2012; pp. 155–163.\n124. Liu, D.; Hou, M.;\
    \ Cao, Z.; Wang, J.; He, Y.; Liu, Y. Duplicate detectable opportunistic forwarding\
    \ in duty-cycled wireless sensor\nnetworks. IEEE/ACM Trans. Netw. 2015, 24, 662–673.\
    \ [CrossRef]\n125. Hawbani, A.; Wang, X.; Sharabi, Y.; Ghannami, A.; Kuhlani,\
    \ H.; Karmoshi, S. LORA: Load-balanced opportunistic routing for\nasynchronous\
    \ duty-cycled WSN. IEEE Trans. Mob. Comput. 2018, 18, 1601–1615. [CrossRef]\n\
    126. Winter, T.; Thubert, P.; Brandt, A.; Hui, J.W.; Kelsey, R.; Levis, P.; Pister,\
    \ K.; Struik, R.; Vasseur, J.P.; Alexander, R.K.; et al. RPL:\nIPv6 Routing Protocol\
    \ for Low-Power and Lossy Networks. RFC 2012, 6550, 1–157.\n127. Thubert, P. Objective\
    \ function zero for the routing protocol for low-power and lossy networks (RPL).\
    \ RFC 2012, 6552, 1–14.\n128. Gnawali, O.; Levis, P. The minimum rank with hysteresis\
    \ objective function. RFC 2012, 6719, 1–13.\n129. Abdel Hakeem, S.A.; Hady, A.A.;\
    \ Kim, H. RPL routing protocol performance in smart grid applications based wireless\
    \ sensors:\nExperimental and simulated analysis. Electronics 2019, 8, 186. [CrossRef]\n\
    130. Barnawi, A.Y.; Mohsen, G.A.; Shahra, E.Q. Performance analysis of RPL protocol\
    \ for data gathering applications in wireless\nsensor networks. Procedia Comput.\
    \ Sci. 2019, 151, 185–193. [CrossRef]\n131. Al-Shargabi, B.; Aleswid, M. Performance\
    \ of RPL in Healthcare Wireless Sensor Network. Int. J. Emerg. Trends Eng. Res.\
    \ 2020, 8, 3.\n[CrossRef]\n132. Sousa, N.; Sobral, J.V.; Rodrigues, J.J.; Rabêlo,\
    \ R.A.; Solic, P. ERAOF: A new RPL protocol objective function for Internet of\n\
    Things applications. In Proceedings of the 2017 2nd International Multidisciplinary\
    \ Conference on Computer and Energy Science\n(SpliTech), Split, Croatia, 12–14\
    \ July 2017; IEEE: Piscataway, NJ, USA, 2017; pp. 1–5.\n133. Rafea, S.A.; Kadhim,\
    \ A.A. Routing with energy threshold for WSN-IoT based on RPL protocol. Iraqi\
    \ J. Comput. Commun. Control\nSyst. Eng. 2019, 19, 71–81.\n134. Sharma, B.; Gajrani,\
    \ J.; Jain, V. Performance Measurement of RPL Protocol Using Modiﬁed MRHOF in\
    \ IoT Network.\nIn\nProceedings of the International Conference on Deep Learning,\
    \ Artiﬁcial Intelligence and Robotics, Jaipur, India, 7–8 December\n2019; Springer:\
    \ Berlin/Heidelberg, Germany, 2019; pp. 235–245.\n135. Sankar, S.; Ramasubbareddy,\
    \ S.; Luhach, A.K.; Nayyar, A.; Qureshi, B. CT-RPL: Cluster tree based routing\
    \ protocol to maximize\nthe lifetime of Internet of Things. Sensors 2020, 20,\
    \ 5858. [CrossRef] [PubMed]\n136. Acevedo, P.D.; Jabba, D.; Sanmartín, P.; Valle,\
    \ S.; Nino-Ruiz, E.D. WRF-RPL: Weighted Random Forward RPL for High Trafﬁc and\n\
    Energy Demanding Scenarios. IEEE Access 2021, 9, 60163–60174. [CrossRef]\n137.\
    \ Rojas, E.; Hosseini, H.; Gomez, C.; Carrascal, D.; Cotrim, J.R. Outperforming\
    \ RPL with scalable routing based on meaningful\nMAC addressing. Ad Hoc Netw.\
    \ 2021, 114, 102433. [CrossRef]\n138. Molnár, M. QoS Routing for Data Gathering\
    \ with RPL in WSNs. In Handbook of Wireless Sensor Networks: Issues and Challenges\
    \ in\nCurrent Scenario’s; Springer: Berlin/Heidelberg, Germany, 2020; pp. 87–111.\n\
    139. Vera-Pérez, J.; Silvestre-Blanes, J.; Sempere-Payá, V. TSCH and RPL Joining\
    \ Time Model for Industrial Wireless Sensor Networks.\nSensors 2021, 21, 3904.\
    \ [CrossRef] [PubMed]\n140. Sobral, J.V.; Rodrigues, J.J.; Rabêlo, R.A.; Al-Muhtadi,\
    \ J.; Korotaev, V. Routing protocols for low power and lossy networks in\nInternet\
    \ of things applications. Sensors 2019, 19, 2144. [CrossRef]\n141. Jeong, S.;\
    \ Kim, H.; Noh, D.K.; Yoon, I. Energy-aware data aggregation scheme for energy-harvesting\
    \ wireless sensor networks. In\nProceedings of the 2016 First IEEE International\
    \ Conference on Computer Communication and the Internet (ICCCI), Wuhan,\nChina,\
    \ 13–15 October 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 140–143.\n142. Chen,\
    \ Q.; Gao, H.; Cai, Z.; Cheng, L.; Li, J. Energy-collision aware data aggregation\
    \ scheduling for energy harvesting sensor\nnetworks. In Proceedings of the IEEE\
    \ INFOCOM 2018—IEEE Conference on Computer Communications, Honolulu, HI, USA,\n\
    16–19 April 2018; IEEE: Piscataway, NJ, USA, 2018; pp. 117–125.\n143. Xiao, M.;\
    \ Zhang, X.; Dong, Y. An effective routing protocol for energy harvesting wireless\
    \ sensor networks. In Proceedings of the\n2013 IEEE Wireless Communications and\
    \ Networking Conference (WCNC), Shanghai, China, 7–10 April 2013; IEEE: Piscataway,\n\
    NJ, USA, 2013; pp. 2080–2084.\n144. Wu, D.; He, J.; Wang, H.; Wang, C.; Wang,\
    \ R. A hierarchical packet forwarding mechanism for energy harvesting wireless\
    \ sensor\nnetworks. IEEE Commun. Mag. 2015, 53, 92–98. [CrossRef]\n145. Yang,\
    \ L.; Lu, Y.; Zhong, Y.; Wu, X.; Yang, S.X. A multi-hop energy neutral clustering\
    \ algorithm for maximizing network\ninformation gathering in energy harvesting\
    \ wireless sensor networks. Sensors 2016, 16, 26. [CrossRef] [PubMed]\nSensors\
    \ 2022, 22, 2650\n41 of 44\n146. Bahbahani, M.S.; Alsusa, E. A cooperative clustering\
    \ protocol with duty cycling for energy harvesting enabled wireless sensor\nnetworks.\
    \ IEEE Trans. Wirel. Commun. 2017, 17, 101–111. [CrossRef]\n147. Bozorgi, S.M.;\
    \ Rostami, A.S.; Hosseinabadi, A.A.R.; Balas, V.E. A new clustering protocol for\
    \ energy harvesting-wireless sensor\nnetworks. Comput. Electr. Eng. 2017, 64,\
    \ 233–247. [CrossRef]\n148. Ren, Q.; Yao, G. An energy-efﬁcient cluster head selection\
    \ scheme for energy-harvesting wireless sensor networks. Sensors 2020,\n20, 187.\
    \ [CrossRef] [PubMed]\n149. Sinde, R.; Begum, F.; Njau, K.; Kaijage, S. Reﬁning\
    \ network lifetime of wireless sensor network using energy-efﬁcient clustering\n\
    and DRL-based sleep scheduling. Sensors 2020, 20, 1540. [CrossRef]\n150. Liu,\
    \ F.; Lu, H.; Wang, T.; Liu, Y. An energy-balanced joint routing and charging\
    \ framework in wireless rechargeable sensor\nnetworks for mobile multimedia. IEEE\
    \ Access 2019, 7, 177637–177650. [CrossRef]\n151. Lu, Z.; Fan, B.; Cai, J.; Tang,\
    \ L. J-RCA: A Joint Routing and Charging Algorithm With WCE Assisted Data Gathering\
    \ in Wireless\nRechargeable Sensor Networks. IEEE Sens. J. 2020, 21, 3888–3899.\
    \ [CrossRef]\n152. Du, L. A polynomial time algorithm for Hamilton Cycle and its\
    \ proof. In Proceedings of the 2010 International Conference\nOn Computer Design\
    \ and Applications, Qinhuangdao, China, 25–27 June 2010; IEEE: Piscataway, NJ,\
    \ USA, 2010; Volume 3;\npp. 3–207.\n153. Celebiler, M.; Stette, G. On increasing\
    \ the down-link capacity of a regenerative satellite repeater in point-to-point\
    \ communications.\nProc. IEEE 1978, 66, 98–100. [CrossRef]\n154. Ahlswede, R.;\
    \ Cai, N.; Li, S.Y.; Yeung, R.W. Network information ﬂow. IEEE Trans. Inf. Theory\
    \ 2000, 46, 1204–1216. [CrossRef]\n155. Katti, S.; Rahul, H.; Hu, W.; Katabi,\
    \ D.; Médard, M.; Crowcroft, J. XORs in the air: Practical wireless network coding.\
    \ IEEE/ACM\nTrans. Netw. 2008, 16, 497–510. [CrossRef]\n156. Migabo, E.M.; Djouani,\
    \ K.; Olwal, T.O.; Kurien, A.M. A Survey on Energy Efﬁcient Network Coding for\
    \ Multi-hop Routing in\nWireless Sensor Networks. Procedia Comput. Sci. 2016,\
    \ 94, 288–294. [CrossRef]\n157. Cohen, A.; Biton, E.; Kampeas, J.; Gurewitz, O.\
    \ Coded unicast downstream trafﬁc in a wireless network: Analysis and WiFi\nimplementation.\
    \ EURASIP J. Adv. Signal Process. 2013, 2013, 1–20. [CrossRef]\n158. Shifrin,\
    \ M.; Cohen, A.; Weisman, O.; Gurewitz, O. Coded retransmission in wireless networks\
    \ via abstract MDPs: Theory and\nalgorithms. IEEE Trans. Wirel. Commun. 2016,\
    \ 15, 4292–4306. [CrossRef]\n159. Attar, H.; Stankovic, L.; Stankovic, V. Cooperative\
    \ network-coding system for wireless sensor networks. IET Commun. 2012,\n6, 344–352.\
    \ [CrossRef]\n160. Qureshi, J.; Foh, C.H.; Cai, J. Optimal solution for the index\
    \ coding problem using network coding over GF(2). In Proceedings of\nthe 2012\
    \ 9th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc\
    \ Communications and Networks\n(SECON), Seoul, Korea, 18–21 June 2012; pp. 209–217.\n\
    161. Gou, L.; Zhang, G.; Bian, D.; Zhang, W.; Xie, Z. Data dissemination in wireless\
    \ sensor networks with instantly decodable network\ncoding. J. Commun. Netw. 2016,\
    \ 18, 846–856. [CrossRef]\n162. Júnior, N.D.S.R.; Tavares, R.C.; Vieira, M.A.;\
    \ Vieira, L.F.; Gnawali, O. CodeDrip: Improving data dissemination for wireless\
    \ sensor\nnetworks with network coding. Ad Hoc Netw. 2017, 54, 42–52. [CrossRef]\n\
    163. Swamy, V.N.; Rigge, P.; Ranade, G.; Sahai, A.; Nikoli´c, B. Network coding\
    \ for high-reliability low-latency wireless control. In\nProceedings of the 2016\
    \ IEEE Wireless Communications and Networking Conference Workshops (WCNCW), Doha,\
    \ Qatar, 3–6\nApril 2016; IEEE: Piscataway, NJ, USA, 2016; pp. 138–144.\n164.\
    \ Ho, T.; Médard, M.; Koetter, R.; Karger, D.R.; Effros, M.; Shi, J.; Leong, B.\
    \ A random linear network coding approach to multicast.\nIEEE Trans. Inf. Theory\
    \ 2006, 52, 4413–4430. [CrossRef]\n165. Stefanovi´c, ˇC.; Vukobratovi´c, D.; Crnojevi´c,\
    \ V.; Stankovic, V. A random linear coding scheme with perimeter data gathering\
    \ for\nwireless sensor networks. In Proceedings of the 2011 Eighth International\
    \ Conference on Wireless On-Demand Network Systems\nand Services, Bardonecchia,\
    \ Italy, 26–28 January 2011; IEEE: Piscataway, NJ, USA, 2011; pp. 142–145.\n166.\
    \ Feizi, S.; Lucani, D.E.; Médard, M. Tunable sparse network coding. In Proceedings\
    \ of the 22th International Zurich Seminar on\nCommunications (IZS). Eidgenössische\
    \ Technische Hochschule Zürich, Zurich, Switzerland, 29 February–2 March 2012.\n\
    167. Prior, R.; Lucani, D.E.; Phulpin, Y.; Nistor, M.; Barros, J. Network coding\
    \ protocols for smart grid communications. IEEE Trans.\nSmart Grid 2014, 5, 1523–1531.\
    \ [CrossRef]\n168. Nistor, M.; Lucani, D.E.; Barros, J. Network coding protocols\
    \ for data gathering applications.\nIEEE Commun. Lett. 2014,\n19, 267–270. [CrossRef]\n\
    169. Keller, L.; Atsan, E.; Argyraki, K.; Fragouli, C. SenseCode: Network coding\
    \ for reliable sensor networks. ACM Trans. Sens. Netw.\n(TOSN) 2013, 9, 1–20.\
    \ [CrossRef]\n170. Valle, O.T.; Montez, C.; Medeiros de Araujo, G.; Vasques, F.;\
    \ Moraes, R. NetCoDer: A retransmission mechanism for WSNs based\non cooperative\
    \ relays and network coding. Sensors 2016, 16, 799. [CrossRef]\n171. Merhi, Z.;\
    \ Tahan, O.; Abdulhay, B.; Rammal, R.; Abdul-Nabi, S. SR-Code: Smart Relay Network\
    \ Coding for Data Collection for\nWireless Sensor Networks. Int. J. Eng. Res.\
    \ Appl. 2017, 7, 58–64. [CrossRef]\n172. Al-Hawri, E.; Correia, N.; Barradas,\
    \ A. Design of network coding based reliable sensor networks. Ad Hoc Netw. 2019,\
    \ 91, 101870.\n[CrossRef]\n173. Chen, W.; Letaief, K.B.; Cao, Z. Opportunistic\
    \ Network Coding for Wireless Networks.\nIn Proceedings of the 2007 IEEE\nInternational\
    \ Conference on Communications, Glasgow, UK, 24–28 June 2007; pp. 4634–4639.\n\
    Sensors 2022, 22, 2650\n42 of 44\n174. Mirani, F.H.; Busson, A.; Adjih, C. DONC:\
    \ Delay-based Opportunistic Network Coding Protocol. In Proceedings of the 2013\
    \ 12th\nAnnual Mediterranean Ad Hoc Networking Workshop (MED-HOC-NET), Ajaccio,\
    \ France, 24–26 June 2013; pp. 34–41.\n175. Tan, C.; Zou, J.; Wang, M. Joint Opportunistic\
    \ Network Coding and Opportunistic Routing for Correlated Data Gathering in\n\
    Wireless Sensor Network. In Proceedings of the 2013 IEEE 78th Vehicular Technology\
    \ Conference (VTC Fall), Las Vegas, NV,\nUSA, 2–5 September 2013; pp. 1–5.\n176.\
    \ Marques, B.; Machado, I.; Sena, A.; Castro, M.C. A communication protocol for\
    \ fog computing based on network coding applied\nto wireless sensors. In Proceedings\
    \ of the 2017 International Symposium on Computer Architecture and High Performance\n\
    Computing Workshops (SBAC-PADW), Campinas, Brazil, 17–20 October 2017; IEEE: Piscataway,\
    \ NJ, USA, 2017; pp. 109–114.\n177. Uwitonze, A.; Huang, J.; Ye, Y.; Cheng, W.\
    \ Connectivity restoration in wireless sensor networks via space network coding.\
    \ Sensors\n2017, 17, 902. [CrossRef] [PubMed]\n178. Malathy, S.; Porkodi, V.;\
    \ Sampathkumar, A.; Hindia, M.N.; Dimyati, K.; Tilwari, V.; Qamar, F.; Amiri,\
    \ I.S. An optimal network\ncoding based backpressure routing approach for massive\
    \ IoT network. Wirel. Netw. 2020, 26, 3657–3674. [CrossRef]\n179. Zhan, C.; Zeng,\
    \ Y.; Zhang, R. Energy-efﬁcient data collection in UAV enabled wireless sensor\
    \ network. IEEE Wirel. Commun. Lett.\n2017, 7, 328–331. [CrossRef]\n180. Gong,\
    \ J.; Chang, T.H.; Shen, C.; Chen, X. Flight time minimization of UAV for data\
    \ collection over wireless sensor networks.\nIEEE J. Sel. Areas Commun. 2018,\
    \ 36, 1942–1954. [CrossRef]\n181. Liu, J.; Wang, X.; Bai, B.; Dai, H. Age-optimal\
    \ trajectory planning for UAV-assisted data collection. In Proceedings of the\
    \ IEEE\nINFOCOM 2018—IEEE Conference on Computer Communications Workshops (INFOCOM\
    \ WKSHPS), Honolulu, HI, USA, 15–19\nApril 2018; IEEE: Piscataway, NJ, USA, 2018;\
    \ pp. 553–558.\n182. Liu, S.; Wei, Z.; Guo, Z.; Yuan, X.; Feng, Z. Performance\
    \ analysis of UAVs assisted data collection in wireless sensor network.\nIn Proceedings\
    \ of the 2018 IEEE 87th Vehicular Technology Conference (VTC Spring), Porto, Portugal,\
    \ 3–6 June 2018; IEEE:\nPiscataway, NJ, USA, 2018; pp. 1–5.\n183. Qin, Y.; Boyle,\
    \ D.; Yeatman, E. A novel protocol for data links between wireless sensors and\
    \ UAV based sink nodes. In Proceedings\nof the 2018 IEEE 4th World Forum on Internet\
    \ of Things (WF-IoT), Singapore, 5–8 February 2018; IEEE: Piscataway, NJ, USA,\n\
    2018; pp. 371–376.\n184. Najjar-Ghabel, S.; Farzinvash, L.; Razavi, S.N. Mobile\
    \ sink-based data gathering in wireless sensor networks with obstacles using\n\
    artiﬁcial intelligence algorithms. Ad Hoc Netw. 2020, 106, 102243. [CrossRef]\n\
    185. Tazibt, C.Y.; Bekhti, M.; Djamah, T.; Achir, N.; Boussetta, K. Wireless sensor\
    \ network clustering for UAV-based data gathering. In\nProceedings of the 2017\
    \ Wireless Days, Porto, Portugal, 29–31 March 2017; IEEE: Piscataway, NJ, USA,\
    \ 2017; pp. 245–247.\n186. Kumar, N.; Dash, D. Flow based efﬁcient data gathering\
    \ in wireless sensor network using path-constrained mobile sink. J. Ambient.\n\
    Intell. Humaniz. Comput. 2020, 11, 1163–1175. [CrossRef]\n187. Ebrahimi, D.; Sharafeddine,\
    \ S.; Ho, P.H.; Assi, C. UAV-aided projection-based compressive data gathering\
    \ in wireless sensor\nnetworks. IEEE Internet Things J. 2019, 6, 1893–1905. [CrossRef]\n\
    188. Wu, Q.; Sun, P.; Boukerche, A. An energy-efﬁcient uav-based data aggregation\
    \ protocol in wireless sensor networks.\nIn\nProceedings of the 8th ACM Symposium\
    \ on Design and Analysis of Intelligent Vehicular Networks and Applications, Montreal,\n\
    QC, Canada, 28 October–2 November 2018; pp. 34–40.\n189. Zahra, M.; Wang, Y.;\
    \ Ding, W. Cross-layer routing for a mobility support protocol based on handover\
    \ mechanism in cluster-based\nwireless sensor networks with mobile sink. Sensors\
    \ 2019, 19, 2843. [CrossRef] [PubMed]\n190. Zhang, R.; Pan, J.; Xie, D.; Wang,\
    \ F. NDCMC: A hybrid data collection approach for large-scale WSNs using mobile\
    \ element and\nhierarchical clustering. IEEE Internet Things J. 2015, 3, 533–543.\
    \ [CrossRef]\n191. Say, S.; Inata, H.; Liu, J.; Shimamoto, S. Priority-based data\
    \ gathering framework in UAV-assisted wireless sensor networks. IEEE\nSens. J.\
    \ 2016, 16, 5785–5794. [CrossRef]\n192. Rault, T.; Bouabdallah, A.; Challal, Y.;\
    \ Marin, F. A survey of energy-efﬁcient context recognition systems using wearable\
    \ sensors\nfor healthcare applications. Pervasive Mob. Comput. 2017, 37, 23–44.\
    \ [CrossRef]\n193. Leonov, V. Thermoelectric energy harvesting of human body heat\
    \ for wearable sensors. IEEE Sens. J. 2013, 13, 2284–2291.\n[CrossRef]\n194. Khalifa,\
    \ S.; Hassan, M.; Seneviratne, A.; Das, S.K. Energy-harvesting wearables for activity-aware\
    \ services. IEEE Internet Comput.\n2015, 19, 8–16. [CrossRef]\n195. Park, J.;\
    \ Joshi, H.; Lee, H.G.; Kiaei, S.; Ogras, U.Y. Flexible PV-cell modeling for energy\
    \ harvesting in wearable IoT applications.\nACM Trans. Embed. Comput. Syst. 2017,\
    \ 16, 1–20. [CrossRef]\n196. Park, J.; Bhat, G.; Nk, A.; Geyik, C.S.; Ogras, U.Y.;\
    \ Lee, H.G. Energy per operation optimization for energy-harvesting wearable\n\
    IoT devices. Sensors 2020, 20, 764. [CrossRef] [PubMed]\n197. Esteves, V.; Antonopoulos,\
    \ A.; Kartsakli, E.; Puig-Vidal, M.; Miribel-Català, P.; Verikoukis, C. Cooperative\
    \ energy harvesting-\nadaptive MAC protocol for WBANs. Sensors 2015, 15, 12635–12650.\
    \ [CrossRef]\n198. Bariya, M.; Nyein, H.Y.Y.; Javey, A. Wearable sweat sensors.\
    \ Nat. Electron. 2018, 1, 160–171. [CrossRef]\n199. Gao, W.; Nyein, H.Y.Y.; Shahpar,\
    \ Z.; Tai, L.C.; Wu, E.; Bariya, M.; Ota, H.; Fahad, H.M.; Chen, K.; Javey, A.\
    \ Wearable sweat\nbiosensors. In Proceedings of the 2016 IEEE International Electron\
    \ Devices Meeting (IEDM), San Francisco, CA, USA, 3–7\nDecember 2016. [CrossRef]\n\
    Sensors 2022, 22, 2650\n43 of 44\n200. Bandodkar, A.J.; Jia, W.; Yardımcı, C.;\
    \ Wang, X.; Ramirez, J.; Wang, J. Tattoo-based noninvasive glucose monitoring:\
    \ A proof-of-\nconcept study. Anal. Chem. 2015, 87, 394–398. [CrossRef] [PubMed]\n\
    201. Salvo, P.; Di Francesco, F.; Costanzo, D.; Ferrari, C.; Trivella, M.G.; De\
    \ Rossi, D. A wearable sensor for measuring sweat rate. IEEE\nSens. J. 2010, 10,\
    \ 1557–1558. [CrossRef]\n202. Sim, J.K.; Yoon, S.; Cho, Y.H. Wearable sweat rate\
    \ sensors for human thermal comfort monitoring. Sci. Rep. 2018, 8, 1181.\n[CrossRef]\
    \ [PubMed]\n203. Song, Y.; Min, J.; Yu, Y.; Wang, H.; Yang, Y.; Zhang, H.; Gao,\
    \ W. Wireless battery-free wearable sweat sensor powered by human\nmotion. Sci.\
    \ Adv. 2020, 6, eaay9842. [CrossRef] [PubMed]\n204. Tai, L.C.; Gao, W.; Chao,\
    \ M.; Bariya, M.; Ngo, Q.P.; Shahpar, Z.; Nyein, H.Y.; Park, H.; Sun, J.; Jung,\
    \ Y.; et al. Methylxanthine drug\nmonitoring with wearable sweat sensors. Adv.\
    \ Mater. 2018, 30, 1707442. [CrossRef]\n205. Ferrer-Vidal, A.; Rida, A.; Basat,\
    \ S.; Yang, L.; Tentzeris, M.M. Integration of sensors and RFID’s on ultra-low-cost\
    \ paper-based\nsubstrates for wireless sensor networks applications. In Proceedings\
    \ of the 2006 2nd IEEE Workshop on Wireless Mesh Networks,\nReston, VA, USA, 25–28\
    \ September 2006; IEEE: Piscataway, NJ, USA, 2006; pp. 126–128.\n206. Li, K.;\
    \ Habre, R.; Deng, H.; Urman, R.; Morrison, J.; Gilliland, F.D.; Ambite, J.L.;\
    \ Stripelis, D.; Chiang, Y.Y.; Lin, Y.; et al. Applying\nmultivariate segmentation\
    \ methods to human activity recognition from wearable sensors’ data. JMIR mHealth\
    \ uHealth 2019,\n7, e11201. [CrossRef] [PubMed]\n207. Ling, Y.; An, T.; Yap, L.W.;\
    \ Zhu, B.; Gong, S.; Cheng, W. Disruptive, soft, wearable sensors. Adv. Mater.\
    \ 2020, 32, 1904664.\n[CrossRef] [PubMed]\n208. Pathak, N.; Mukherjee, A.; Misra,\
    \ S. Reconﬁgure and Reuse: Interoperable Wearables for Healthcare IoT. In Proceedings\
    \ of the\nIEEE INFOCOM 2020—IEEE Conference on Computer Communications, Toronto,\
    \ ON, Canada, 6–9 July 2020; IEEE: Piscataway,\nNJ, USA, 2020; pp. 20–29.\n209.\
    \ Townsend, K.; Cufí, C.; Akiba; Davidson, R. Getting Started with Bluetooth Low\
    \ Energy: Tools and Techniques for Low-Power\nNetworking; O’Reilly Media, Inc.:\
    \ Sebastopol, CA, USA, 2014.\n210. Gomez, C.; Oller, J.; Paradells, J. Overview\
    \ and evaluation of bluetooth low energy: An emerging low-power wireless technology.\n\
    Sensors 2012, 12, 11734–11753. [CrossRef]\n211. Coskun, V.; Ok, K.; Ozdenizci,\
    \ B. Near Field Communication (NFC): From Theory to Practice; John Wiley & Sons:\
    \ Hoboken, NJ, USA,\n2011.\n212. Kim, J.; Banks, A.; Xie, Z.; Heo, S.Y.; Gutruf,\
    \ P.; Lee, J.W.; Xu, S.; Jang, K.I.; Liu, F.; Brown, G.; et al. Miniaturized ﬂexible\
    \ electronic\nsystems with wireless power and near-ﬁeld communication capabilities.\
    \ Adv. Funct. Mater. 2015, 25, 4761–4767. [CrossRef]\n213. Kwak, K.S.; Ullah,\
    \ S.; Ullah, N. An overview of IEEE 802.15.6 standard. In Proceedings of the 2010\
    \ 3rd International Symposium\non Applied Sciences in Biomedical and Communication\
    \ Technologies (ISABEL 2010), Rome, Italy, 7–10 November 2010; IEEE:\nPiscataway,\
    \ NJ, USA, 2010; pp. 1–6.\n214. Lee, W.; Lin, K.Y.; Seto, E.; Migliaccio, G.C.\
    \ Wearable sensors for monitoring on-duty and off-duty worker physiological status\n\
    and activities in construction. Autom. Constr. 2017, 83, 341–353. [CrossRef]\n\
    215. Chang, W.J.; Chen, L.B.; Chiou, Y.Z. Design and implementation of a drowsiness-fatigue-detection\
    \ system based on wearable\nsmart glasses to increase road safety. IEEE Trans.\
    \ Consum. Electron. 2018, 64, 461–469. [CrossRef]\n216. Wu, F.; Redouté, J.M.;\
    \ Yuce, M.R. A self-powered wearable body sensor network system for safety applications.\
    \ In Proceedings\nof the 2018 IEEE SENSORS, New Delhi, India, 28–31 October 2018;\
    \ IEEE: Piscataway, NJ, USA, 2018; pp. 1–4.\n217. Qi, J.; Yang, P.; Hanneghan,\
    \ M.; Tang, S.; Zhou, B. A hybrid hierarchical framework for gym physical activity\
    \ recognition and\nmeasurement using wearable sensors. IEEE Internet Things J.\
    \ 2018, 6, 1384–1393. [CrossRef]\n218. You, I.; Choo, K.K.R.; Ho, C.L.; Leu, F.-Y.;\
    \ Ko, C.-Y. A smartphone-based wearable sensors for monitoring real-time physiological\n\
    data. Comput. Electr. Eng. 2018, 65, 376–392.\n219. Dian, F.J.; Vahidnia, R.;\
    \ Rahmati, A. Wearables and the Internet of Things (IoT), applications, opportunities,\
    \ and challenges:\nA Survey. IEEE Access 2020, 8, 69200–69211. [CrossRef]\n220.\
    \ Peoples, C.; Moore, A.; Zoualfaghari, M. A Review of the Opportunity to Connect\
    \ Elderly Citizens to the Internet of Things (IoT)\nand Gaps in the Service Level\
    \ Agreement (SLA) Provisioning Process. EAI Endorsed Trans. Cloud Syst. 2020,\
    \ 6, e3. [CrossRef]\n221. Kekade, S.; Hseieh, C.H.; Islam, M.M.; Atique, S.; Khalfan,\
    \ A.M.; Li, Y.C.; Abdul, S.S. The usefulness and actual use of wearable\ndevices\
    \ among the elderly population. Comput. Methods Programs Biomed. 2018, 153, 137–159.\
    \ [CrossRef] [PubMed]\n222. Bogu, G.K.; Snyder, M.P. Deep learning-based detection\
    \ of COVID-19 using wearables data. MedRxiv 2021.\n223. Hassantabar, S.; Stefano,\
    \ N.; Ghanakota, V.; Ferrari, A.; Nicola, G.N.; Bruno, R.; Marino, I.R.; Jha,\
    \ N.K. CovidDeep: SARS-CoV-\n2/COVID-19 Test Based on Wearable Medical Sensors\
    \ and Efﬁcient Neural Networks. arXiv 2020, arXiv:2007.10497.\n224. Cortellessa,\
    \ G.; Stabile, L.; Arpino, F.; Faleiros, D.; Van Den Bos, W.; Morawska, L.; Buonanno,\
    \ G. Close proximity risk assessment\nfor SARS-CoV-2 infection. Sci. Total Environ.\
    \ 2021, 794, 148749. [CrossRef] [PubMed]\n225. Ng, P.C.; Spachos, P.; Gregori,\
    \ S.; Plataniotis, K.N. Personal Devices for Contact Tracing: Smartphones and\
    \ Wearables to Fight\nCOVID-19. IEEE Commun. Mag. 2021, 59, 24–29. [CrossRef]\n\
    226. Bian, S.; Zhou, B.; Bello, H.; Lukowicz, P. A wearable magnetic ﬁeld based\
    \ proximity sensing system for monitoring COVID-19\nsocial distancing. In Proceedings\
    \ of the 2020 International Symposium on Wearable Computers, Virtual Event, 12–16\
    \ September\n2020; pp. 22–26.\nSensors 2022, 22, 2650\n44 of 44\n227. Shubina,\
    \ V.; Ometov, A.; Lohan, E.S. Technical perspectives of contact-tracing applications\
    \ on wearables for COVID-19 control. In\nProceedings of the 2020 12th International\
    \ Congress on Ultra Modern Telecommunications and Control Systems and Workshops\n\
    (ICUMT), Brno, Czech Republic, 5–7 October 2020; IEEE: Piscataway, NJ, USA, 2020;\
    \ pp. 229–235.\n228. Amft, O.; Lopera, L.; Lukowicz, P.; Bian, S.; Burggraf, P.\
    \ Wearables to ﬁght COVID-19: From symptom tracking to contact tracing.\nIEEE\
    \ Ann. Hist. Comput. 2020, 19, 53–60. [CrossRef]\n229. Channa, A.; Popescu, N.;\
    \ Skibinska, J.; Burget, R. The rise of wearable devices during the COVID-19 pandemic:\
    \ A systematic\nreview. Sensors 2021, 21, 5787. [CrossRef] [PubMed]\n"
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/7/2650/pdf?version=1648630550
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Data Gathering Techniques in WSN: A Cross-Layer View'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1175/amsmonographs-d-18-0012.1
  analysis: '>'
  authors:
  - Sue Ellen Haupt
  - Branko Kosović
  - Scott W. McIntosh
  - Fei Chen
  - Kathleen A. Miller
  - Marshall Shepherd
  - Marcus Williams
  - Sheldon Drobot
  citation_count: 5
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: '>'
  journal: Meteorological monographs
  limitations: '>'
  pdf_link: https://journals.ametsoc.org/downloadpdf/journals/amsm/59/1/amsmonographs-d-18-0012.1.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: '100 Years of Progress in Applied Meteorology. Part III: Additional Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s11269-023-03659-x
  analysis: '>'
  authors:
  - Danyang Gao
  - Albert S. Chen
  - Fayyaz Ali Memon
  citation_count: 1
  full_citation: '>'
  full_text: ">\nVol.:(0123456789)\nWater Resources Management (2024) 38:1–43\nhttps://doi.org/10.1007/s11269-023-03659-x\n\
    1 3\nA Systematic Review of Methods for Investigating Climate \nChange Impacts\
    \ on Water‑Energy‑Food Nexus\nDanyang Gao1  · Albert S. Chen1 · Fayyaz Ali Memon1\n\
    Received: 22 August 2023 / Accepted: 7 November 2023 / Published online: 16 December\
    \ 2023 \n© The Author(s) 2023\nAbstract\nWater, energy and food are important\
    \ for human survival and sustainable development. \nWith climate change, investigating\
    \ climate change impacts on Water-Energy-Food nexus \nhas been a topic of growing\
    \ interest in recent years. However, there is a lack of a systematic \nreview\
    \ of the current state and methodologies of Water-Energy-Food nexus studies under\
    \ \nclimate change. Here, we review research articles investigating climate change\
    \ impacts on \nWater-Food, Water-Energy and Water-Energy-Food nexus over last\
    \ seven years. The exist-\ning methods and tools, spatial scales, and future climate\
    \ scenarios setting in these arti-\ncles are summarised and analysed. We found\
    \ that the analyses methods could be divided \ninto four categories (physics-based\
    \ modelling, statistical methods, supervised learning and \noperation optimisation),\
    \ among them, physics-based modelling accounts for the largest \nproportion. The\
    \ reviewed studies cover a range of scales from site scale to global, with \n\
    most studies focusing on the regional scale. Models used for small to middle scale\
    \ are \nmainly related to hydrology and water resource, while large-scale modelling\
    \ is based on \ninterdisciplinary models. Future climate scenarios setting include\
    \ emission scenarios and \nglobal warming scenarios based on Global Climate Models\
    \ (GCMs). A number of future \nresearch challenges have been identified. These\
    \ include spatial scale and resolution, inter-\nnal physical mechanism, application\
    \ of novel artificial intelligence models, extreme cli-\nmate events, potential\
    \ competition in nexus systems as well as data and model uncertainty.\nKeywords\
    \ PRISMA · Hydrology · Agriculture · Hydropower · Climate change\n1 Introduction\n\
    Water, energy and food are three essential resources that human beings depend\
    \ upon for \nsurvival and development. These three resources are interconnected\
    \ in complex ways \n(Liang et al. 2020), necessitating a holistic approach to\
    \ their evaluation. The Water-Energy-\nFood nexus concept was formally introduced\
    \ in the Bonn 2011 Nexus Conference (Hoff \n2011) as an integrated system that\
    \ encapsulates the interdependencies between water, \nenergy and food (Conway\
    \ et al. 2015; Scanlon et al. 2017).\n * Danyang Gao \n \ndg442@exeter.ac.uk\n\
    1 \nCentre for Water Systems, University of Exeter, Exeter EX4 4QF, UK\n2 \nD. Gao\
    \ et al.\n1 3\nThe global temperature is likely to increase to 4.8℃ by 2100 compared\
    \ to 1995–2014 \nin the high-emission scenario (IPCC 2021). The increased temperature\
    \ may lead to more \nfrequent extreme and compound events such as heatwaves and\
    \ long-term droughts, which \ncould significantly affect constrain food production\
    \ and energy generation. Climate change \nmay pose great uncertainties and risks\
    \ to water security, energy security and food security \nin the future. Therefore,\
    \ understanding climate change impacts on water, energy and food \nis crucial\
    \ for achieving the SDG6 (clean water and sanitation), SDG7 (affordable and clean\
    \ \nenergy) and SDG2 (zero hunger) (Liu et al. 2018; UN 2018).\nSignificant efforts\
    \ have been made to explore and evaluate the Water-Energy-Food \nnexus via various\
    \ approaches (de Amorim et al. 2018; D’Odorico et al. 2018; Endo et al. \n2020).\
    \ Mannan et al. (2018) identified the capabilities and hindrances of applying\
    \ the Life \nCycle assessment on Water-Energy-Food nexus. Zhang et al. (2018)\
    \ discussed the pros and \ncost of eight quantitative methods. Albrecht et al.\
    \ (2018) emphasised the importance of \nintegrating quantitative and qualitative\
    \ methods with social science in studies that incor-\nporate multiple methods.\
    \ Zhang et al. (2019a) categorised eleven existing nexus methods \nand tools into\
    \ three types according to research purposes. Namany et al. (2019) introduced\
    \ \nthree dynamic decision-making tools and proposed application examples during\
    \ three deci-\nsion-making process stages.\nHowever, none of those reviews has\
    \ analysed the methods and tools used for investigating \nclimate change impacts\
    \ to water, energy, and food. Several questions remain unanswered: \nWhat are\
    \ existing state-of-the-art analytical methods and tools for studying Water-Energy-\n\
    Food under climate change? Which ones are more widely used? What are their features\
    \ \nand limitations? What is the focus of related research on different spatial\
    \ scales and topics? \nHow should models be selected according to research topic\
    \ and spatial scale? How does the \nrelated research consider climate change scenarios?\
    \ What are future prospects?\nTo address these questions, we have reviewed and\
    \ analysed research articles published \nover the past seven years that investigated\
    \ climate change impacts on Water-Food, Water-\nEnergy and Water-Energy-Food nexus.\
    \ Promising methods frequently used in each type of \nstudy, topics and models\
    \ for different spatial scales, and climate change scenarios setting \nmethods\
    \ are identified and discussed. The research challenges and limitations are identi-\n\
    fied, suggesting potential directions for future research in the domain of Water-Energy-\n\
    Food interactions under climate change.\n2  Methods\nWe searched peer-reviewed\
    \ journal articles on the subject of climate change in the Web of \nScience database\
    \ that were published after 2017 and related to Water-Food, Water-Energy \nand\
    \ Water-Energy-Food. The article selection procedure followed Preferred Reporting\
    \ \nItems for Systematic Reviews and Meta-Analyses (PRISMA, Page et al. 2021),\
    \ and the \nflow chart of the selection process is shown in Fig. 1.\n2.1  Review\
    \ Process\nIn Web of Science, we used ‘climate change’, ‘water’, ‘food’ and’irrigation’\
    \ as the key-\nwords to search the abstract, title and keywords of publications\
    \ between 2017 and 2022, \n1676 articles were found. By replacing the keywords\
    \ with ‘climate change’, ‘soil moisture’ \nand ‘crop yield’, 1155 articles were\
    \ selected; when searching keywords ‘climate change \n3\nA Systematic Review of Methods\
    \ for Investigating Climate Change…\n1 3\nimpacts on water and energy’, 5728 articles\
    \ were found; and 2415 articles were listed \nthrough keywords ‘climate change’,\
    \ ‘water’, ‘energy’ and ‘food’. Altogether, 10,974 arti-\ncles were selected after\
    \ the initial search.\n2.2  Inclusion and Exclusion Criteria\nArticles that met\
    \ all the following criteria were selected: (1) they contain Water-Food, \nWater-Energy\
    \ or Water-Energy-Food, but do not consider water, energy or food separately;\
    \ \n(2) the consider climate change impacts; and (3) they use quantitative analytical\
    \ tools or \nmodels for assessment. Besides, eleven articles published in 2023\
    \ were added during the \nrevision of the paper.\nBased on these criteria, we\
    \ obtained 45 articles related to Water-Food and climate \nchange, identified\
    \ 64 articles studying climate change impacts on Water-Energy, and \nselected\
    \ 36 articles about climate change and Water-Energy-Food nexus. Thus, a total\
    \ of \n145 articles were identified as suitable.\n2.3  Information Extraction\n\
    After full-text reading of the 145 relevant articles, we extracted the following\
    \ information: \n(1) the purpose of the study (2) the scale of study area; (3)\
    \ methods used in the study area, \nbased on statistical methods, physics-based\
    \ modelling, supervised learning or operation \nFig. 1  Flow chart of articles\
    \ selection process following PRISMA\n4 \nD. Gao et al.\n1 3\noptimisation; (4)\
    \ whether the article used models, combined multiple models or used a \nsingle\
    \ model; (5) whether the article claimed a new method; (6) whether there was a\
    \ simu-\nlation under future scenarios and how the scenarios were set up; and\
    \ (7) characteristics, \nmajor challenges and limitations in the application of\
    \ methods and models.\n3  Diversity of Nexus Methods\nNumerous and diverse methods\
    \ have been used or proposed for evaluating climate change \nimpacts on Water-Food,\
    \ Water-Energy and Water-Energy-Food nexus. while some studies have \ncombined\
    \ multiple methods. In this review, we divided the approaches into four categories:\
    \ Sta-\ntistical methods, Physics-based modelling, Supervised learning and Operation\
    \ optimisation.\nMethods based on statistics such as formula calculations, regression\
    \ and statistical tests \nwere grouped into Statistical methods; methods using\
    \ models based on the representa-\ntion of physical mechanisms were grouped into\
    \ Physics-based modelling; methods using \nmachine learning to do simulation were\
    \ classified into Supervised learning; and methods \nusing optimisation algorithm\
    \ to determine optimal solution under constraints were classi-\nfied into Operation\
    \ optimisation.\n3.1  Water‑Food Nexus Analysis Methods\nIn the Water-Food nexus\
    \ research, 53% of studies (24 of 45) used statistical methods, 64% \n(29 of 45)\
    \ used physics-based modelling methods and 9% (4 of 45) used operation optimi-\n\
    sation methods. We tabulate and categorise Water-Food analytical methods and tools\
    \ from \nthe selected 45 articles based on method categorisation and discipline\
    \ in Table 1.\nStudies investigating the influence of climate change on Water-Food\
    \ nexus mainly \nfocused on how climate change may impact water availability for\
    \ irrigation, soil moisture \nand crop yield. Most Water-Food studies utilised\
    \ multiple methods or coupled models from \ndifferent disciplines. The input data\
    \ of the models were commonly multidisciplinary from \nthe areas of meteorology\
    \ (precipitation, temperature, wind speed, humidity, solar radiation, \netc.),\
    \ environment  (CO2 concentration, etc.), geospatial (vegetation, landuse, etc.),\
    \ eco-\nnomics (GDP, etc.) and society (population, etc.).\nGenerally, in model\
    \ coupling studies, a hydrological model was used to simulate runoff \nor soil\
    \ moisture, and an agricultural model or a statistical calculation method was\
    \ used to \ncalculate irrigation water requirements and parameters related to\
    \ crop yields. For example, \nAkoko et al. (2020) used Soil & Water Assessment\
    \ Tool (SWAT) to estimate the current \nand future water resources availability\
    \ and Cropwat to calculate irrigation water require-\nments. Meanwhile, many interdisciplinary\
    \ models were developed to study the Water-Food \nnexus. Blanc et al. (2017) integrated\
    \ water resources model and a crop yield reduction mod-\nule into the Integrated\
    \ Global System Modelling framework (IGSM) to assess the influence \nof climate\
    \ and socioeconomic changes on irrigation water availability as well as subsequent\
    \ \nimpacts on crop yields by 2050. Malek et al. (2018) integrated a process-based\
    \ irrigation \nmodule into VICCropSyst to assess the influence of climate change\
    \ on irrigation losses.\nSome model-based studies only utilised a single discipline\
    \ model or a series of equa-\ntions. This kind of research mostly focused on soil\
    \ moisture, irrigation and crop parameters \nrather than simulations of water\
    \ availability. He et al. (2021) projected the amount of agri-\ncultural water\
    \ for food production during peak population period (2029–2033) based on a \n\
    series of equations including FAO’s Penman–Monteith equation. Jha et al. (2020)\
    \ utilised \n5\nA Systematic Review of Methods for Investigating Climate Change…\n\
    1 3\nTable 1  Catalogue of methods used in the climate change impacts on Water-Food\
    \ studies sample set, categorised by Physics-based modelling (a), Statistical\
    \ methods (b) and \nOperation optimisation (c)\na. Physical modelling methods.\
    \ Models are classified into two groups: based on a single discipline (e.g., Hydrology,\
    \ Cryosphere, and Agriculture) and interdisciplinary. The number of physics-based\
    \ \nmodelling studies for each discipline and the percentage of total physics-based\
    \ modelling studies (n = 29) is summarized in bold headings. Many studies used\
    \ more than one model and there are \nstudies that do not use models; thus, percentages\
    \ listed by category do not add to 100%\nModel name\nMain purpose\nData required\n\
    Spatial scale\nMinimum \ntemporal scale\nReference studies\nHydrology\n11 studies\
    \ (38%)\nLund-Potsdam-Jena managed \nLand (LPJmL)\nSimulation of the global terrestrial\
    \ \ncarbon and water cycle\nSpatially explicit time series of climate, human land\
    \ use, \nsoil properties, and river flow directions\nGlobal\nDaily\nLangerwisch\
    \ et al. 2018;\nPastor et al. 2019;\nLutz et al. 2022\nSoil & Water Assessment\
    \ Tool \n(SWAT)\nSimulation of the quality and \nquantity of surface and ground\
    \ \nwater\nMeteorological data, DEM, land use, and soil \ncharacteristics\nWatershed\n\
    Daily\nAkoko et al. 2020;\nPaul et al. 2020;\nPiniewski et al. 2020; \nHaro-Monteagudo\
    \ \net al. 2023; Tan et al. \n2023\nSpatial Processes in Hydrology \n(SPHY)\n\
    Hydrological process simulation\nSpatially explicit DEM, land use type, glacier\
    \ cover, lakes/\nreservoirs and soil characteristics, as well as climate data\
    \ \nwith time series\nWatershed\nDaily\nLutz et al. 2022\nThe mesoscale Hydrologic\
    \ \nModel (mHM)\nHydrological process simulation\nSpatially explicit data of physiographic\
    \ land surface and \nmeteorological forcings\nWatershed\nHourly\nPeichl et al.\
    \ 2019\nModular three-dimensional \ngroundwater flow model \n(MODFLOW)\nGroundwater\
    \ simulation\nSite data of geological and other characteristics of the \naquifer\n\
    Watershed\nUndefined or \nsecondly\nGoodarzi et al. 2019\nIHACRES\nStreamflow\
    \ simulation\nTime series data of observed rainfall, temperature and \nstreamflow\n\
    Watershed\nMinutely\nAshofteh et al. 2017\nCryosphere\n1 study (3%)\nGlacier Bed\
    \ Topography model \nversion 2 (GlabTop2)\nEstimation of glacier volumes\nDEM,\
    \ glacier outlines and a set of branch lines for each \nglacier\nRegional\n-\n\
    Lutz et al. 2022\nAgriculture\n8 studies (28%)\n6 \nD. Gao et al.\n1 3\nTable\
    \ 1  (continued)\na. Physical modelling methods. Models are classified into two\
    \ groups: based on a single discipline (e.g., Hydrology, Cryosphere, and Agriculture)\
    \ and interdisciplinary. The number of physics-based \nmodelling studies for each\
    \ discipline and the percentage of total physics-based modelling studies (n =\
    \ 29) is summarized in bold headings. Many studies used more than one model and\
    \ there are \nstudies that do not use models; thus, percentages listed by category\
    \ do not add to 100%\nModel name\nMain purpose\nData required\nSpatial scale\n\
    Minimum \ntemporal scale\nReference studies\nDecision Support System for \nAgrotechnology\
    \ Transfer \n(DSSAT)\nSimulation of crops growth, \ndevelopment and yield\nMeteorological\
    \ data, soil surface and profile information, \nand detailed crop management\n\
    Site\nDaily\nAshofteh et al. 2017;\nMitchell et al. 2017;\nXu et al. 2019;\nJha\
    \ et al. 2020\nORYZA\nSimulation of rice growth and \ndevelopment\nExperiment\
    \ data, crop data, soil data (required only for \nwater-limited simulation) and\
    \ weather data\nSite\nDaily\nWang et al. 2017;\nDing et al. 2020\nAgro-ecological\
    \ Zone (AEZ)\nCrop productivity assessment\nClimate data, topography and soil\
    \ characteristics\nGlobal to \nregional\nDaily\nXu et al. 2019\nAPEX-paddy model\n\
    Simulation of water balance \ncomponents from paddy fields \nunder ponded conditions\n\
    Meteorological data, soil type, crop definition, management \nsystem and watershed\
    \ definition\nField\nDaily\nKim et al. 2021\nInterdisciplinary\n11 studies (38%)\n\
    VIC-CropSyst\nSimulation of the interactions \nbetween hydrology, crop growth\
    \ \nand phenology, and crop and \nwater resource management \ndecisions\nGrided\
    \ climate data, soil data, crop patterns, characteristics \nand management data\n\
    Global to \nregional\nDaily\nMalek et al. 2018;\nRajagopalan et al. 2018\nGlobal\
    \ Crop Water Model \n(GCWM)\nSimulation of crop water use and \ncrop yields in\
    \ rainfed and irrigated \nagriculture\nCropping pattern, cropping seasons and\
    \ average crop \nproductivity, climate data, soil properties, trade and \npopulation\
    \ density\nGlobal\nDaily\nQin et al. 2020b\nIrrigation Management System \nModel\
    \ (IManSys)\nCalculation of irrigation water \nrequirement for any annual or \n\
    perennial crop\nClimate data, soil hydrologic parameters, crop water uptake \n\
    parameters\nRegional\nDaily\nCooper et al. 2022\nIGSM-WRS-US\nAssessment of climate\
    \ change \neffects on managed water-resource \nsystems\nEconomic, climatic, and\
    \ hydrologic drivers\nGlobal to \nregional\nAnnually\nBlanc et al. 2017\n7\nA\
    \ Systematic Review of Methods for Investigating Climate Change…\n1 3\nTable 1\
    \  (continued)\na. Physical modelling methods. Models are classified into two\
    \ groups: based on a single discipline (e.g., Hydrology, Cryosphere, and Agriculture)\
    \ and interdisciplinary. The number of physics-based \nmodelling studies for each\
    \ discipline and the percentage of total physics-based modelling studies (n =\
    \ 29) is summarized in bold headings. Many studies used more than one model and\
    \ there are \nstudies that do not use models; thus, percentages listed by category\
    \ do not add to 100%\nModel name\nMain purpose\nData required\nSpatial scale\n\
    Minimum \ntemporal scale\nReference studies\nAral Sea Basin management \nmodel\
    \ (ASBmm)\nCalculation of the future water \nbalance and water allocation in the\
    \ \nAral Sea Basin\nPopulation data, water use, climate data, and socio-\neconomic\
    \ data\nWatershed\nAnnually\nDuan et al. 2019\nMIROC-INTEG-LAND\nSimulation of\
    \ the interactions \namong coupled natural–human \nearth system components\nSocioeconomic\
    \ variables, atmospheric variables, soil and \nvegetation properties\nGlobal\n\
    Different \ntime step in \nsubmodels\nYokohata et al. 2020\nGlobal Food and Water\
    \ System \n(GFWS)\nAssessment of the disparity between \nfood production and demands,\
    \ \nas well as the difference between \nwater usage for irrigation and the \n\
    fresh water supply\nPopulation and demographic data, weather data, crop \ncharacteristics,\
    \ land use and water resource\nGlobal\nAnnually\nGrafton et al. 2017\nWATNEEDS\n\
    Simulation of crop-specific green \nand blue water requirements\nSpatially and\
    \ temporally distributed information on climate, \nsoil, and crop characteristics\n\
    Global\nMonthly\nRosa et al. 2020\nCrop-river coupled model \n(CROVER)\nAssessment\
    \ of crop production \nunder varying water availability\nClimate data, soil properties,\
    \ agricultural management, \nsocioeconomic water demand, reservoir operation \n\
    management, and land use\nWatershed\nDaily\nOkada et al. 2018\nGlobal Biosphere\
    \ Management \nModel (GLOBIOM)\nAssessment of climate change \nmitigation policies\
    \ impact on \nland-based sectors\nSpatially explicit land cover, production, population,\
    \ GDP, \ndemand, prices and trade, livestock data, crops data and \nforest data\n\
    Global\n10-year\nPastor et al. 2019\n8 \nD. Gao et al.\n1 3\nTable 1  (continued)\n\
    b. Statistical methods\nMethod\nMain purpose\nData required\nReference studies\n\
    Penman–Monteith equation and crop \ncoefficient approach recommended by \nthe\
    \ FAO/Cropwat\nCalculation of crop water requirements \nand irrigation requirements\n\
    Site location, air temperature, humidity, \nradiation, wind speed, and crop \n\
    coefficient\nAcharjee et al. 2017; Ashofteh et al. 2017; \nZhou et al. 2017; Sylla\
    \ et al. 2018; \nGoodarzi et al. 2019; Zhang et al. 2019b; \nAkoko et al. 2020;\
    \ Zhang et al. 2020; \nAbdoulaye et al. 2021; He et al. 2021; \nMostafa et al.\
    \ 2021\nMann–Kendall test\nDetermining whether a time series has a \nmonotonic\
    \ upward or downward trend\nA series of data with no autocorrelation\nDing et al.\
    \ 2017; Duan et al. 2019\nRegression\nAttempting to determine the relationship\
    \ \nbetween dependent variable and \nindependent variables and predicting for\
    \ \nthe future\nA series of dependent variables values \nand independents variables\
    \ values\nDing et al. 2017; Kirby et al. 2017;\nLu et al. 2019\nCobb–Douglas production\
    \ function\nModelling the correlation between \nproduction output and inputs\n\
    Production and input parameters\nLu et al. 2019\nLogarithmic Mean Divisia Index\
    \ (LMDI)\nDecomposing and quantifying the \ndifferent effects of factors on a\
    \ variable\nData of factors and variable\nZhang et al. 2020\nc. Operation optimisation\
    \ methods\nMethod\nPurpose in related research\nDescription\nReference studies\n\
    Nonlinear optimisation\nDeterming optimal crop production strategies / \nOptimizing\
    \ hydro-economic framework\nIt solves optimisation problems where the \nconstraints\
    \ or the objective functions are \nnonlinear\nMitchell et al. 2017; \nGohar and\
    \ Cashman \n2018\nMultiobjective genetic programming \n(MOGP)\nOptimizing reservoir-operating\
    \ rules\nMOGP considers the accuracy and the tree \ncomplexity as the fitness\
    \ objectives based on \nPareto dominance relations, which can reduce \nthe overfitting\
    \ effectively while optimizing the \nsolution\nAshofteh et al. 2017\n9\nA Systematic\
    \ Review of Methods for Investigating Climate Change…\n1 3\nDSSAT to project the\
    \ changes in rice yield, water demand and phenological growth due to \nclimate\
    \ change.\nA small number of studies did not use or depend on models but used\
    \ statistical methods \nto analyse climate change impacts on Water-Food nexus.\
    \ Zhang et al. (2020) distinguished \nthe different effects of climate change,\
    \ planted area crop mix on irrigation water demand \nbased on the LMDI method.\
    \ Kirby et al. (2017) analysed the historical trends of water \nuse, crop production,\
    \ food availability and population growth, and project them forward to \n2050.\
    \ Madadgar et al. (2017) developed a multivariate probabilistic model to estimate\
    \ the \nprobability distribution of crop yields under projected climate conditions.\n\
    Operation optimisation methods were less used in the climate change impacts on\
    \ Water-\nFood studies, in which more studies using nonlinear optimisation framework\
    \ (Mitchell \net al. 2017; Gohar and Cashman 2018). These studies optimised water\
    \ or food related strat-\negies under climate change conditions.\n3.2  Water‑Energy\
    \ Nexus Analysis Methods\nIn the Water-Energy nexus research, 33% of studies (21\
    \ of 64) used statistical methods, \n92% (59 of 64) used physics-based modelling\
    \ methods, 25% (16 of 64) used operation \noptimisation methods, and 9% (6 of\
    \ 64) used supervised learning methods. Most stud-\nies utilised models and hydrological\
    \ models accounted for a large part. The catalogue of \nWater-Energy analytical\
    \ methods and tools from the selected 64 articles are tabulated and \ncategorised\
    \ based on method categorization and discipline in Table 2.\nStudies analysing\
    \ climate change impacts on Water-Energy mainly focused on hydro-\npower. Hydropower\
    \ is vulnerable to the impacts of climate change due to its direct depend-\nence\
    \ on the timing and magnitude of streamflow. Most studies projected future hydropower\
    \ \ngeneration to evaluate how climate change will affect energy production, or\
    \ optimised the \nreservoir operation schemes to minimise the impacts of climate\
    \ change on streamflow. \nGenerally, hydrological models or supervised learning\
    \ were adopted to simulate and pro-\nject future streamflow/inflow to hydropower\
    \ reservoirs, then energy models or equations \nwere employed to calculate potential\
    \ hydropower generation, optimisation algorithms or \nwater management models\
    \ were employed to solve the optimal reservoir operation. For \nexample, Rahmati\
    \ et  al. (2021) simulated future runoff with Artificial Neural Network \n(ANN)\
    \ and optimised hydropower generation by Grasshopper Optimisation Algorithm \n\
    (GOA). Guo et al. (2021) used Genetic Algorithm (GA) to solve the robust optimisation\
    \ \nmodel with the inflows simulated by SWAT under climate and land use change\
    \ scenarios \nin the future. Anghileri et al. (2018) contributed a modelling framework\
    \ combining hydro-\nlogical modelling, hydropower modelling and multi-objective\
    \ optimisation technique to \nassess climate change and energy policies impacts\
    \ on the operations of hydropower reser-\nvoir systems in the Alps.\nMeanwhile,\
    \ a small number of studies used interdisciplinary models to study Water-\nEnergy\
    \ nexus. Miara et al. (2017) simulated river discharge and temperature as well\
    \ as \nelectricity generation under climate change using the coupled Water Balance\
    \ Model and \nThermoelectric Power and Thermal Pollution Model (WBM TP2M). Graham\
    \ et al. (2020) \nutilised Global Change Assessment Model (GCAM) to investigate\
    \ the relative contribu-\ntions of climate and human systems on water scarcity\
    \ regionally and globally.\n 10\nD. Gao et al.\n1 3\nTable 2  Catalogue of methods\
    \ used in the climate change impacts on Water-Energy studies sample set, categorised\
    \ by Physics-based modelling (a), Statistical methods (b) \nand Supervised learning\
    \ (c) and Operation optimisation (d)\na. Physical modelling methods. Models are\
    \ classified into two groups: based on a single discipline (e.g., Hydrology, Energy,\
    \ and Water management) and interdisciplinary. The number \nof physics-based modelling\
    \ studies for each discipline and the percentage of total physics-based modelling\
    \ studies (n = 60) is summarized in bold headings. Many studies used more than\
    \ \none model and there are studies that do not use models; thus, percentages\
    \ listed by category do not add to 100%\nModel name\nMain purpose\nData required\n\
    Spatial scale\nMinimum temporal scale\nReference studies\nHydrology\n45 studies\
    \ (75%)\nSWAT \nSimulation of the quality and \nquantity of surface and \nground\
    \ water\nMeteorological data, \nDEM, land use, and soil \ncharacteristics\nSmall\
    \ watershed to river \nbasin-scale\nDaily\nde Oliveira et al. 2017; Abera \net al.\
    \ 2018; Goodarzi et al. \n2020; Qin et al. 2020a; \nBahati et al. 2021; Guo et al.\
    \ \n2021; Shrestha et al. 2021; \nWang et al. 2021a; Qin et al. \n2022; Ramião\
    \ et al. 2023\nVariable Infiltration Capacity \n(VIC)\nSimulation of land–\natmosphere\
    \ fluxes, and the \nland surface process\nMeteorological data, \nelevation band\
    \ data, land \ncover information\nGlobal to regional\nDaily\nForrest et al. 2018;\
    \ Zhong \net al. 2019; Li et al. 2020; \nZhong et al. 2020; Yun et al. \n2021;\
    \ Zhao et al. 2021b; \nZhao et al. 2022\nHydrologiska Byråns \nVattenbalansavdelning\
    \ \n(HBV)\nStreamflow simulation\nMeteorological data, DEM, \nland use/cover data\n\
    Watershed\nHourly\nMousavi et al. 2018; Adera \nand Alfredsen 2020; \nJakimavicius\
    \ et al. 2020; \nCarlino et al. 2021; \nMutsindikwa et al. 2021\nXinanjiang Model\n\
    Streamflow simulation\nMeteorological data\nWatershed\nDaily\nFeng et al. 2018,\
    \ 2021\nHydrological Predictions for \nthe Environment (HYPE)\nWater flow and\
    \ substances \nsimulation\nClimate data, elevation, \nstream network, soil type\
    \ \nand land use\nWatershed\nDaily\nSkoulikaris 2021\nNedborAfstromnings Model\
    \ \n(NAM)\nStreamflow and soil moisture \ncontent simulation\nMeteorological data\n\
    Watershed\nDaily\nYimere and Assefa 2021\nMIKE NAM\nRainfall-runoff processes\
    \ \nsimulation\nMeteorological data\nWatershed\nDaily\nAdynkiewicz-Piragas and\
    \ \nMiszuk 2020\n11\nA Systematic Review of Methods for Investigating Climate\
    \ Change…\n1 3\nTable 2  (continued)\na. Physical modelling methods. Models are\
    \ classified into two groups: based on a single discipline (e.g., Hydrology, Energy,\
    \ and Water management) and interdisciplinary. The number \nof physics-based modelling\
    \ studies for each discipline and the percentage of total physics-based modelling\
    \ studies (n = 60) is summarized in bold headings. Many studies used more than\
    \ \none model and there are studies that do not use models; thus, percentages\
    \ listed by category do not add to 100%\nModel name\nMain purpose\nData required\n\
    Spatial scale\nMinimum temporal scale\nReference studies\nIHACRES\nStreamflow\
    \ simulation\nMeteorological data\nWatershed\nMinutely\nZolghadr-Asti et al. 2019\n\
    Veralgemeend Conceptueel \nHydrologisch (VHM)\nRainfall-runoff processes \nsimulation\n\
    Meteorological data\nWatershed\nDaily\nDonk et al. 2018\nABCD water balance model\n\
    Streamflow simulation\nMeteorological data\nWatershed\nDaily\nKhalkhali et al.\
    \ 2018\nTopkapi-ETH\nHydrological process \nsimulation suitable for \nglacierized\
    \ mountain areas\nClimate data, topography, \nsoil type and vegetation\nWatershed\n\
    Hourly\nAnghileri et al. 2018\nHEC-HMS\nHydrological process \nsimulation\nMeteorological\
    \ data, DEM, \nland use type and soil \ncharacteristics\nWatershed\n10-min\nGoodarzi\
    \ et al. 2020\nWaterGAP\nWater flows, storages, \nwater withdrawals \nand consumptive\
    \ uses \nsimulation\nClimate data, population \ndata, land cover, soil type, \n\
    topography, water storage \ndata and water use data\nGlobal\nDaily\nTurner et al.\
    \ 2017\nThe PCRaster GLOBal \nWater Balance model \n(PCR‐GLOBWB)\nHydrological\
    \ process \nsimulation and water \nresource assessment\nSoil characteristics,\
    \ land \ncover, topography, \nmeteorological data\nGlobal\n1 day for hydrology\
    \ and \nwater use, sub-daily time \nstepping for hydrodynamic \nriver routing\n\
    Meng et al. 2020\nFinnish Environment \nInstitute’s Watershed \nSimulation and\
    \ \nForecasting System \n(WSFS)\nHydrological process \nsimulation\nMeteorological\
    \ data, \ntopography, soil \ncharacteristics, land use \nand vegetation\nWatershed\n\
    Daily\nJaaskelainen et al. 2018\nIntegrated Catchment \nHydrological Model \n\
    (ICHYMOD)\nRainfall-runoff processes \nsimulation\nMeteorological data\nWatershed\n\
    Hourly\nFrancois et al. 2018\nGR2M + \nStreamflow simulation\nMeteorological data\n\
    Watershed\nMonthly\nWagner et al. 2017\n 12\nD. Gao et al.\n1 3\nTable 2  (continued)\n\
    a. Physical modelling methods. Models are classified into two groups: based on\
    \ a single discipline (e.g., Hydrology, Energy, and Water management) and interdisciplinary.\
    \ The number \nof physics-based modelling studies for each discipline and the\
    \ percentage of total physics-based modelling studies (n = 60) is summarized in\
    \ bold headings. Many studies used more than \none model and there are studies\
    \ that do not use models; thus, percentages listed by category do not add to 100%\n\
    Model name\nMain purpose\nData required\nSpatial scale\nMinimum temporal scale\n\
    Reference studies\nGR4J\nRainfall-runoff processes \nsimulation\nMeteorological\
    \ data\nWatershed\nDaily\nZhong et al. 2021\nPoli-hydro\nHydrological balance\
    \ and \nflow routing simulation\nGrided meteorological data, \nDEM and land cover\n\
    Watershed\nDaily\nBombelli et al. 2021\nCoupled routing and excess \nstorage model\
    \ (CREST)\nLand surface, subsurface \nwater fluxes and storages \nsimulation\n\
    Meteorological data, DEM, \nsoil characteristics and \nland cover\nGlobal to regional\n\
    Daily\nZhao et al. 2021b\n1 K-DHM\nRainfall-runoff processes \nsimulation\nMeteorological\
    \ data and \ntopography\nWatershed\n10-min\nMeema et al. 2021\nModelo de Grandes\
    \ Bacias \n(MGB)\nHydrological process \nsimulation\nMeteorological data, \ntopography,\
    \ soil \ncharacteristics and land \ncover\nWatershed (generally in \nSouth America)\n\
    Daily\nAlmeida et al. 2021\nSoil Moisture Accounting \nProcedure (SMAP)\nRainfall-runoff\
    \ processes \nsimulation\nMeteorological data and \ndrainage area\nWatershed\n\
    Daily\nda Silva et al. 2021\nHYMOD\nRainfall-runoff processes \nsimulation\nMeteorological\
    \ data\nWatershed\nDaily\nChilkoti et al. 2017\nWater management\n11 studies (18%)\n\
    Water Evaluation and \nPlanning system (WEAP)\nWater resources planning\nDEM,\
    \ demand data, \nsupply data, hydrology, \ngroundwater and \nreservoirs\nWatershed\n\
    Monthly\nSpalding-Fecher et al. 2017; \nSun et al. 2018; Goodarzi \net al. 2020;\
    \ Obahoundje \net al. 2021; Shirsat et al. \n2021\n13\nA Systematic Review of Methods\
    \ for Investigating Climate Change…\n1 3\nTable 2  (continued)\na. Physical modelling\
    \ methods. Models are classified into two groups: based on a single discipline\
    \ (e.g., Hydrology, Energy, and Water management) and interdisciplinary. The number\
    \ \nof physics-based modelling studies for each discipline and the percentage\
    \ of total physics-based modelling studies (n = 60) is summarized in bold headings.\
    \ Many studies used more than \none model and there are studies that do not use\
    \ models; thus, percentages listed by category do not add to 100%\nModel name\n\
    Main purpose\nData required\nSpatial scale\nMinimum temporal scale\nReference\
    \ studies\nThe Reservoir System \nSimulation (HEC-ResSim)\nReservoir operations\
    \ \nmodelling at one or more \nreservoirs for a variety \nof operational goals\
    \ and \nconstraints\nReservoir properties, \ncontrol and operational \ncharacteristics,\
    \ river \nrouting properties\nReservoir and cascade series \nof reservoirs\n5-min\n\
    Beheshti et al. 2019; Shrestha \net al. 2021; Skoulikaris \n2021; Wang et al.\
    \ 2021a\nThe Information System \nfor Water Allocation \nManagement (SIGA)\nPlanning\
    \ and operation \nsimulation of water \nresources systems\nDemands and priorities,\
    \ \nriver routing properties\nReservoir and cascade series \nof reservoirs\nMonthly\n\
    da Silva et al. 2021\nReservoir Evaluation System \nPerspective Reservoir \nModel\
    \ (HEC-ResPRM)\nReservoir management \nstrategies evaluation\nNetwork connectivity,\
    \ \nhydrological flows and \npenalty functions for \nreservoirs and links\nMulti-reservoir\
    \ river system\nMonthly\nAbera et al. 2018\nEnergy\n10 studies (17%)\nLong-Range\
    \ Energy \nAlternatives Planning \n(LEAP)\nEnergy policy analysis and \nclimate\
    \ change mitigation \nassessment\nEnergy data, climate data, \nsocial and economic\
    \ data\nNational to regional\nAnnual\nSpalding-Fecher et al. 2017; \nSun et al.\
    \ 2018; Zhou et al. \n2019\nTIMES_PT\nOptimisation of a least-\ncost energy system\
    \ to \nsatisfy the demand for \nenergy services and user \nconstraints\nSocio-economic\
    \ data, \nresource potentials and \nprices of primary energy \nsupply, policy\
    \ constraints \nand energy services\nPortugal\n5-year\nTeotonio et al. 2017\n\
    Regional Integration and \nPlanning Assessment \n(RIPA) tool\nOptimisation of\
    \ mix \nof generation and \ntransmission\nHydropower generation, \nshadow prices\
    \ of \nconstraints for hydropower \ncapacity and energy spill\nRegional\nMonthly\n\
    Yimere and Assefa 2021\nThe Generation Evaluation \nSystem (GENESYS) \nmodel\n\
    Assessment of the adequacy \nof power supply\nTechnology data, cost data, \ndemands\
    \ and energy data\nThe Pacific Northwest\nHourly\nTurner et al. 2019\n 14\nD. Gao\
    \ et al.\n1 3\nTable 2  (continued)\na. Physical modelling methods. Models are\
    \ classified into two groups: based on a single discipline (e.g., Hydrology, Energy,\
    \ and Water management) and interdisciplinary. The number \nof physics-based modelling\
    \ studies for each discipline and the percentage of total physics-based modelling\
    \ studies (n = 60) is summarized in bold headings. Many studies used more than\
    \ \none model and there are studies that do not use models; thus, percentages\
    \ listed by category do not add to 100%\nModel name\nMain purpose\nData required\n\
    Spatial scale\nMinimum temporal scale\nReference studies\nEnergyPLAN\nOperation\
    \ simulation of \nenergy systems\nTechnical data, economic \ndata and energy demands\n\
    National\nHourly\nJaaskelainen et al. 2018\nPRIMES-IEM power system \nmodel\n\
    Simulation of electricity \nsystem\nPlant capacities, demands, \nload, fuel and\
    \ carbon \nprices, reserves, networks \nand market rules\nEuropean\nHourly\nCarlino\
    \ et al. 2021\nHydropower simulator \nnMAG\nHydropower systems \nsimulation\n\
    Inflow, production \ninformation, operational \nstrategy and power market\nMultiple\
    \ reservoir \nhydropower systems\nDaily\nAdera and Alfredsen 2020\nPoli-power\n\
    Hydropower production \noptimisation\nStream flows, prices, \ndemand of hydropower\
    \ \nand geometry of the \nreservoir\nMultiple reservoir \nhydropower systems\n\
    Daily\nBombelli et al. 2021\nInterdisciplinary\n2 studies (3%)\nThe coupled Water\
    \ Balance \nModel and Thermoelectric \nPower and Thermal \nPollution Model (WBM\
    \ \nTP2M)\nPower plant operations \nsimulation\nhydrologic flows, climate \nconditions\
    \ including air \ntemperature and humidity\nPower plants\nDaily and 3-min river\
    \ \nnetwork resolution\nMiara et al. 2017\nGlobal Change Assessment \nModel (GCAM)\n\
    Simulation of interactions \namong various systems \nbetween society-earth-\n\
    climate\nEnergy resources, \ntechnologies and users, \nagriculture and land use\
    \ \ninformation, greenhouse \ngas emissions, climate \nfeedback parameters, \n\
    socioeconomics, policies \ninformation\nGlobal\n5-year\nGraham et al. 2020\n15\n\
    A Systematic Review of Methods for Investigating Climate Change…\n1 3\nTable 2\
    \  (continued)\nb. Statistical methods\nMethod\nMain purpose\nData required\n\
    Reference studies\nHydropower calculation\nCalculating hydropower generation\n\
    Streamflow, hydraulic head, water \ndensity, gravitational acceleration and \n\
    total plant efficiency\nChilkoti et al. 2017; de Oliveira et al. 2017; \nDonk\
    \ et al. 2018; Francois et al. 2018; \nKhalkhali et al. 2018; Adynkiewicz-\nPiragas\
    \ and Miszuk 2020; Jakimavicius \net al. 2020; Almeida et al. 2021; Bahati \n\
    et al. 2021; Jung et al. 2021; Meema \net al. 2021; Mutsindikwa et al. 2021; \n\
    Yimere and Assefa 2021; Qin et al. 2022; \nRamião et al. 2023\nBlue water footprint\
    \ calculation\nCalculating evaporative water losses per \nunit of net power generation\n\
    Allocating factor for hydropower, \nevaporation rate, surface area and net \n\
    power generation\nZhao et al. 2021a\nRegression\nAttempting to determine the relationship\
    \ \nbetween dependent variable and \nindependent variables and predicting \nfor\
    \ the future\nA series of dependent variables values \nand independents variables\
    \ values\nda Silva et al. 2021; Suo et al. 2021; Zhao \net al. 2021a\nMann–Kendall\
    \ test\nDetermining whether a time series has a \nmonotonic upward or downward\
    \ trend\nA series of data with no autocorrelation\nda Silva et al. 2021\nTwo flood\
    \ series extraction methods: \nmean annual flood (MAF) and peak \nover threshold\
    \ (POT)\nCalculating the average maximum \nstreamflow to evaluate the flood \n\
    magnitude in a selected period and \nevaluating flood frequency in other \ncomparative\
    \ periods\nA series of streamflow in selected period\nYun et al. 2021\n 16\nD. Gao\
    \ et al.\n1 3\nTable 2  (continued)\nc. Supervised learning\nAlgorithm\nPurpose\
    \ in related research\nDescription\nReference studies\nFeedforward Neural Network\n\
    Rainfall-runoff process simulation\nEach neuron is arranged in layers, and only\
    \ \nconnected to the neuron in the previous \nlayer. Outputs are received and\
    \ sent to \nthe next layer, without feedback between \nlayers\nBeheshti et al.\
    \ 2019; Huangpeng et al. \n2021; Jung et al. 2021; Rahmati et al. \n2021\nBackpropagation\
    \ Neural Networks \n(BPNN)\nStreamflow simulation\nBPNN is a multi-layer feedforward\
    \ neural \nnetwork trained according to error \nbackpropagation algorithm\nLiu\
    \ et al. 2020\nElman Neural Network (ENN)\nStreamflow simulation\nENN is a feedback\
    \ neural network based \non BPNN\nWang et al. 2021a\nMultivariate tree boosting\n\
    Predicting the interconnected water and \nelectricity demand in the residential\
    \ \nsector\nIt is an extension of gradient tree boosting, \nwhich improve prediction\
    \ accuracy by \nthe meta-algorithm boosting\nObringer et al. 2020\nd. Operation\
    \ optimisation methods\nMethod\nPurpose in related research\nDescription\nReference\
    \ studies\nDynamic programming (DP)\nOptimising hydropower output\nThe storage\
    \ volume of reservoir at each stage \nis divided into a finite number of points.\
    \ The \nglobal optimum is determined by enumerating \nall possible combinations\
    \ of these discrete \npoints\nLi et al. 2020\nProgressive optimality algorithm\
    \ (POA)\nCalculating operation scheduling under climate \nchange\nPOA is a variant\
    \ of DP, dividing the multi-stage \ndecision problem into a sequence of two-stage\
    \ \nsubproblems to reduce computation burden\nLiu et al. 2020\nMultiobjective\
    \ optimisation technique\nEstimating current hydropower system \noperations and\
    \ future possible evolution under \nscenarios\nMultiobjective optimisation explores\
    \ alternative \nhydropower operating strategies, diversely \nbalancing the different\
    \ operating purposes\nAnghileri et al. 2018\n17\nA Systematic Review of Methods\
    \ for Investigating Climate Change…\n1 3\nTable 2  (continued)\nd. Operation optimisation\
    \ methods\nMethod\nPurpose in related research\nDescription\nReference studies\n\
    Grasshopper Optimisation Algorithm (GOA)\nOptimising hydropower generation\nGOA\
    \ is a population-based meta-heuristic \noptimisation method inspired by grasshopper\
    \ \ngroup behaviour\nRahmati et al. 2021\nParticle swarm optimisation (PSO)\n\
    Optimising hydropower generation\nPSO is inspired by social behaviour of birds\
    \ and \nfish. PSO introduces a number of variables \ncalled particles that are\
    \ scattered in search \nspace\nRahmati et al. 2021\nGravitational Search Algorithm\
    \ (GSA)\nSolving long-term hydropower generation \nproblem of cascade hydropower\
    \ stations\nGSA is an evolutionary method based on \nNewton’s gravitational law.\
    \ In GSA, agents \nare considered as objects, and the gravitational \ninteraction\
    \ between them leads to a global \nmovement of all objects towards those with\
    \ \nheavier masses, which represents an optimum \nsolution in the search space\n\
    Feng et al. 2018\nStochastic Dynamic Programming (SDP)\nOptimising the turbine\
    \ release decision by the \nhuman\nSDP combines stochastic programming and \n\
    dynamic programming, explicitly considering \nstream flow uncertainty in its recursive\
    \ \nequation\nTurner et al. 2017\nDiscrete differential dynamic programming \n\
    (DDDP) combined with the large-scale system \ndecomposed coordinating (LSSDC)\
    \ method\nHydropower generation prediction for large-scale \nreservoirs considering\
    \ climate change and \nspecific reservoir operation processes\nDDDP is an improved\
    \ DP algorithm, alleviating \nthe influence of “cruse of dimensionality” and \n\
    simplifying the modelling process\nZhong et al. 2020\nNondominated Sorting Genetic\
    \ Algorithm-II \n(NSGA-II)\nQuantifying the hydropower-ecology trade-offs\nNSGA-II\
    \ is based on the Pareto optimum \nsolution that has several advantages, including\
    \ \nhigh calculation speed, good convergence of \nsolutions, high diversity of\
    \ solution sets, and \nadaptability to high-dimensional inputs\nZhong et al. 2021\n\
    \ 18\nD. Gao et al.\n1 3\nTable 2  (continued)\nd. Operation optimisation methods\n\
    Method\nPurpose in related research\nDescription\nReference studies\nImproved\
    \ dynamic programming (IDP) \nalgorithm\nOptimising Reservoir operation\nIDP is\
    \ developed based on the monotonic \nrelationship in the reservoir optimisation\
    \ \nand can greatly enhance the computational \nefficiency as compared to DP algorithm\n\
    Zhao et al. 2021b\nGenetic Algorithm (GA)\nOptimising Reservoir operation\nGA\
    \ is a metaheuristic derived from the \nprinciples of natural selection that belongs\
    \ to \nthe larger class of evolutionary algorithms\nGuo et al. 2021\nImproved\
    \ multi-objective cuckoo search \nalgorithm (MoCS)\nOptimisation of multi-objective\
    \ long-term \nhydropower generation\nMoCS is based on the NSGA-II algorithm and\
    \ \nthe improved cuckoo search algorithm\nFeng et al. 2021\nThreshold Accepting\
    \ (TA)\nOptimising hydropower generation\nTA is a local search algorithm, exploring\
    \ the \nsearch space by affecting the turbine schedule. \nIt avoids staying stuck\
    \ in a local optimum, \nwhile staying efficient\nBonato et al. 2019\nAn optimisation\
    \ framework with interval-\nparameter programming (IPP)\nSupporting sustainable\
    \ development of China’s \nenergy system\nIPP reflects uncertainty derived from\
    \ data \ncollection, parameter estimation and policy \nformulation\nSuo et al.\
    \ 2021\n19\nA Systematic Review of Methods for Investigating Climate Change…\n\
    1 3\n3.3  Water‑Energy‑Food Nexus Analysis Methods\nThere are relatively fewer\
    \ selected studies about evaluating climate change impacts on \nWater-Energy-Food\
    \ nexus. In the selected research, 36% of studies (13 of 36) used sta-\ntistical\
    \ methods, 78% (28 of 36) used physics-based modelling methods, 36% (13 of 36)\
    \ \nused operation optimisation methods, and 6% (2 of 36) used supervised learning.\
    \ Most \nstudies evaluated climate change impacts on Water-Energy-Food through\
    \ physics-based \nmodelling, among them most utilised interdisciplinary models\
    \ with the proportion of 44%. \nBesides, many studies in Water-Energy-Food utilised\
    \ operation optimisation method. The \ncatalogue of Water-Energy-Food analytical\
    \ methods and tools from the selected 36 articles \nare tabulated and categorised\
    \ in Table 3.\nStudies investigating climate change impacts on Water-Energy-Food\
    \ nexus can be divided \ninto three categories: (1) simulations of future Water-Energy-Food\
    \ nexus change under future \nclimate change scenarios, (2) optimal management\
    \ options for mitigating future climate \nchange impacts, (3) historical attribution\
    \ or trend analysis of climate change impacts.\nFor future simulation research,\
    \ studies generally utilised interdisciplinary models or \ncoupled different models\
    \ from multiple disciplines. Sridhar et al. (2021) presented an inte-\ngrated\
    \ modelling framework combining Variable Infiltration Capacity (VIC) and System\
    \ \nDynamics (SD) model for analysing the impacts of future climate on irrigation,\
    \ hydro-\npower, and other supply and demand through a feedback loop. Yang et al.\
    \ (2018) adopted \na two-way coupled agent-based model (ABM-SWAT) to evaluate\
    \ the water availability for \nirrigation, hydropower generation, and riverine\
    \ ecosystem health under joint effect of cli-\nmate change and water infrastructure\
    \ development.\nOperation optimisation research mainly focused on addressing complex\
    \ contradictions \nof Water-Energy-Food nexus to find an optimal strategy and\
    \ aid sustainable development. \nOptimisation programming was used in this kind\
    \ of research, sometimes combining phys-\nics-based modelling, supervised learning\
    \ or statistical methods. Yuan et al. (2018) inte-\ngrated Life Cycle Assessment\
    \ (LCA) and linear programming to assess the feasibility of \nbioenergy and consider\
    \ future circumstances under climate change impacts. Giuliani et al. \n(2022)\
    \ combined HBV hydrological model, ANN and evolutionary multi-objective direct\
    \ \npolicy search method to demonstrate how local dynamics across Water-Energy-Food\
    \ sys-\ntems are impacted by climate change mitigation policies.\nResearch focused\
    \ on historical trend utilised statistical methods to analyse datasets. \nBarik\
    \ et al. (2017) investigated the Water-Energy-Food nexus in India under drought\
    \ and \nmonsoon rainfall in the last few decades based on GLDAS and GRACE data.\n\
    4  Studies for Different Spatial Scales\nAccording to spatial scale of study area,\
    \ these selected studies were categorised into large \nscale studies and small\
    \ to middle scale studies. The research objectives and typical models \nof each\
    \ scale and topic of research are summarised in Table 4. The selected studies\
    \ related \nto Water-Food and Water-Energy occupy a higher proportion, while research\
    \ on water-\nenergy-food is relatively less. This is because the research on this\
    \ topic involves more inter-\ndisciplinary science, so related research is not\
    \ easy to conduct. Besides there were fewer \nstudies of water-energy-food at\
    \ global and national scales than at regional scales, because \nthe larger the\
    \ study area, the more complex the water-energy-food nexus is, the access to \n\
    the required data also becomes more difficult.\n 20\nD. Gao et al.\n1 3\nTable\
    \ 3  Catalogue of methods used in the climate change impacts on Water-Energy-Food\
    \ studies sample set, categorised by Physics-based modelling (a), Statistical\
    \ methods \n(b) and Supervised learning (c) and Operation optimisation (d)\na.\
    \ Physical modelling methods. Models are classified into two groups: based on\
    \ a single discipline (e.g., Hydrology, Energy, and Agriculture) and interdisciplinary.\
    \ The \nnumber of physics-based modelling studies for each discipline and the\
    \ percentage of total physics-based modelling studies (n = 28) is summarized in\
    \ bold headings. Many \nstudies used more than one model and there are studies\
    \ that do not use models; thus, percentages listed by category do not add to 100%\n\
    Model name\nMain purpose\nData required\nSpatial scale\nMinimum \ntemporal \n\
    scale\nReference studies\nInterdisciplinary\n15 studies (54%)\nSystem Dynamics\
    \ (SD) model\nSimulation of complex systems\nVariables and equations in the \n\
    systems\nThe space where \nthe simulation \nsystems located\nSecond\nBerardy and\
    \ Chester 2017; \nHussien et al. 2018; Sušnik \net al. 2018; Bakhshianlamouki\
    \ \net al. 2020; Sridhar et al. 2021; \nWang et al. 2021b; Wu et al. \n2022\n\
    TIMES-WEF\nInvestigation of the climate \nchange impacts and policies \non the\
    \ agricultural system\nLand use, energy demand, \nprimary energy supply, \ntechno-economic\
    \ factors, \nenvironmental variables and \nother policy parameters\nReginal\n\
    Annual\nTortorella et al. 2020\nWEF Nexus Tool 2.0\nIdentifying sustainable resource\
    \ \nmanagement strategies \ninformed by the water-energy-\nfood nexus\nLocal characteristic\
    \ data and \nscenario components\nRegional\nAnnual\nSchull et al. 2020\nIrrigation\
    \ Management System \nModel (IManSys)\nCalculation of irrigation water \nrequirement\
    \ for any annual or \nperennial crop\nClimate data, soil hydrologic \nparameters,\
    \ crop water uptake \nparameters\nRegional\nDaily\nCooper et al. 2022\n21\nA Systematic\
    \ Review of Methods for Investigating Climate Change…\n1 3\nTable 3  (continued)\n\
    a. Physical modelling methods. Models are classified into two groups: based on\
    \ a single discipline (e.g., Hydrology, Energy, and Agriculture) and interdisciplinary.\
    \ The \nnumber of physics-based modelling studies for each discipline and the\
    \ percentage of total physics-based modelling studies (n = 28) is summarized in\
    \ bold headings. Many \nstudies used more than one model and there are studies\
    \ that do not use models; thus, percentages listed by category do not add to 100%\n\
    Model name\nMain purpose\nData required\nSpatial scale\nMinimum \ntemporal \n\
    scale\nReference studies\nFood-Energy-Water Calculator \n(FEWCalc)\nAddressing\
    \ multi-scale, multi-\nstakeholder food-energy-water \nproblems\nCrop characteristic\
    \ data, \nirrigation practices, water \navailability, renewable energy \ninvestment,\
    \ and environmental \nconditions\nRegional\nAnnual\nPhetheet et al. 2021\nA systematic\
    \ approach\nAnalysing resilience in the \nsecurity of water-energy-food \nnexus\
    \ in areas that present \nsignificant climatic variations \nthroughout the year\n\
    Water, food and energy \ndemand, possible failures \nmodes including hurricanes,\
    \ \nfreezing, and drought\nRegional\nMonthly\nNúñez-López et al. 2022\nA two-way\
    \ coupled agent-based \nmodel (ABM-SWAT)\nCalculating the water \navailability\
    \ for irrigated crop \nproduction, hydropower \ngeneration, and riverine \necosystem\
    \ health\nMeteorological data, DEM, land \nuse type, soil characteristics, \n\
    agent preference, agent \npriority, and historical \nirrigated area\nWatershed\n\
    Daily\nYang et al. 2018\nGCAM\nSimulation of interactions \namong various systems\
    \ \nbetween society-earth-climate\nEnergy resources, technologies \nand users,\
    \ agriculture \nand land use information, \ngreenhouse gas emissions, \nclimate\
    \ feedback parameters, \nsocioeconomics, policies \ninformation\nGlobal\n5-year\n\
    Giuliani et al. 2022\n 22\nD. Gao et al.\n1 3\nTable 3  (continued)\na. Physical\
    \ modelling methods. Models are classified into two groups: based on a single\
    \ discipline (e.g., Hydrology, Energy, and Agriculture) and interdisciplinary.\
    \ The \nnumber of physics-based modelling studies for each discipline and the\
    \ percentage of total physics-based modelling studies (n = 28) is summarized in\
    \ bold headings. Many \nstudies used more than one model and there are studies\
    \ that do not use models; thus, percentages listed by category do not add to 100%\n\
    Model name\nMain purpose\nData required\nSpatial scale\nMinimum \ntemporal \n\
    scale\nReference studies\nIntegrated Model to Assess the \nGlobal Environment\
    \ (IMAGE)\nSimulating the environmental \nconsequences of human \nactivities worldwide\n\
    Population, economy, policies, \ntechnology, lifestyle, \nresources, agriculture\
    \ and \nland use, energy supply and \ndemand\nGlobal\nAnnual\nde Vos et al. 2021\n\
    Hydrology\n9 studies (32%)\nSWAT \nSimulation of the quality and \nquantity of\
    \ surface and ground \nwater\nMeteorological data, DEM, \nland use type and soil\
    \ \ncharacteristics\nSmall watershed to \nriver basin-scale\nDaily\nSchull et al.\
    \ 2020; Sedighkia and \nAbdoli 2022\nVIC\nSimulation of land–atmosphere \nfluxes,\
    \ and the land surface \nprocess\nMeteorological data, elevation \nband data,\
    \ land cover \ninformation\nGlobal to regional\nDaily\nSridhar et al. 2021; Tariku\
    \ et al. \n2021\nLPJmL\nSimulation of the global \nterrestrial carbon and water\
    \ \ncycle\nSpatially explicit time series \nof climate, human land use, \nsoil\
    \ properties, and river flow \ndirections\nGlobal\nDaily\nSiderius et al. 2021;\
    \ de Vos et al. \n2021\nHBV\nStreamflow simulation\nMeteorological data, DEM,\
    \ land \nuse/cover data\nWatershed\nHourly\nGiuliani et al. 2022; Teutschbein\
    \ \net al. 2023\nHydro-BID\nStreamflow simulation\nClimate, land cover and soil\
    \ \nproperties\nWatershed\nDaily\nWade et al. 2022\nWater management\n8 studies\
    \ (29%)\n23\nA Systematic Review of Methods for Investigating Climate Change…\n\
    1 3\nTable 3  (continued)\na. Physical modelling methods. Models are classified\
    \ into two groups: based on a single discipline (e.g., Hydrology, Energy, and\
    \ Agriculture) and interdisciplinary. The \nnumber of physics-based modelling\
    \ studies for each discipline and the percentage of total physics-based modelling\
    \ studies (n = 28) is summarized in bold headings. Many \nstudies used more than\
    \ one model and there are studies that do not use models; thus, percentages listed\
    \ by category do not add to 100%\nModel name\nMain purpose\nData required\nSpatial\
    \ scale\nMinimum \ntemporal \nscale\nReference studies\nWEAP\nWater resources\
    \ planning\nDEM, demand data, supply \ndata, hydrology, groundwater \nand reservoirs\n\
    Watershed\nMonthly\nMomblanch et al. 2019; \nSridharan et al. 2019; \nNasrollahi\
    \ et al. 2021; Siderius \net al. 2021; Bhave et al. 2022; \nGhimire et al. 2022;\
    \ Golfam \nand Ashofteh 2022; Jander \net al. 2023\nAgriculture\n2 studies (7%)\n\
    DSSAT\nSimulation of crops growth, \ndevelopment and yield\nMeteorological data,\
    \ \nsoil surface and profile \ninformation, and detailed crop \nmanagement\nSite\n\
    Daily\nLee et al. 2020; Phetheet et al. \n2021\nEnergy\n1 study (4%)\nLEAP\nEnergy\
    \ policy analysis and \nclimate change mitigation \nassessment\nEnergy data, climate\
    \ data, social \nand economic data\nNational to regional\nAnnual\nNasrollahi et al.\
    \ 2021\nb. Statistical methods\nMethod\nMain purpose\nData required\nReference\
    \ studies\nPenman–Monteith equation and crop coef-\nficient approach recommended\
    \ by the \nFAO/Cropwat\nCalculation of crop water requirements and \nirrigation\
    \ requirements\nSite location, air temperature, humidity, \nradiation, wind speed,\
    \ and crop coef-\nficient\nLee et al. 2020; Li et al. 2021; Bhave \net al. 2022;\
    \ Golfam and Ashofteh \n2022\n 24\nD. Gao et al.\n1 3\nTable 3  (continued)\n\
    b. Statistical methods\nMethod\nMain purpose\nData required\nReference studies\n\
    Water, land and energy footprint analysis\nCalculating the volume of water, land\
    \ and \nenergy required for producing one ton \nof crops\nIrrigation water requirement,\
    \ the area of \nfields, the production, energy use for \nusing agricultural machinery\
    \ in fields, \nenergy use for supplying 1  m3 of irriga-\ntion water, and irrigation\
    \ water use\nLee et al. 2020\nLife Cycle Assessment (LCA)\nAssessing the inputs\
    \ and outputs of raw \nmaterials and energy linked to environ-\nmental consequences\
    \ throughout the \nstages of production, utilization, and \ndisposal\nUnit process\
    \ data, and environmental \ninput–output data\nYuan et al. 2018\nPearson’s correlation\
    \ test\nIdentifying synergies and trade-offs, here \nfor disentangle the synergies\
    \ and trade-\noffs between nexus component indicators\nA correlation matrix which\
    \ shows the level \nof consistency between pairs of nexus \nindicators under each\
    \ global change \nscenario\nMomblanch et al. 2019\nMulti-criteria decision analysis\
    \ (MCDA) \napproach\nEvaluating multiple conflicting criteria in \ndecision making\n\
    Policy scenarios, criteria and indicators\nNasrollahi et al. 2021\nc. Supervised\
    \ learning\nAlgorithm\nPurpose in related research\nDescription\nReference studies\n\
    Feedforward Neural Network\nRainfall-runoff process simulation\nEach neuron is\
    \ arranged in layers, and only \nconnected to the neuron in the previous \nlayer.\
    \ Outputs are received and sent to \nthe next layer, without feedback between\
    \ \nlayers\nGiuliani et al. 2022; Golfam and \nAshofteh 2022\n25\nA Systematic\
    \ Review of Methods for Investigating Climate Change…\n1 3\nTable 3  (continued)\n\
    d. Operation optimisation methods\nMethod\nPurpose in related research\nDescription\n\
    Reference studies\nCompromise programming (CP)\nOptimising allocation of surface\
    \ water, \ngroundwater and planting structure for crops\nCP uses a distance measure\
    \ to \nidentify the optimal solution\nLi et al. 2021\nParticle swarm optimisation\
    \ (PSO)\nOptimising energy, irrigation and yield of \nproduction\nPSO is inspired\
    \ by social behaviour \nof birds and fish. PSO introduces \na number of variables\
    \ called \nparticles that are scattered in \nsearch space\nSedighkia and Abdoli\
    \ 2022\nMulti-objective programming (MOP)\nOptimising the trade-off between water,\
    \ food, \nenergy, climate change, and land subsystems\nMOP is widely used to deal\
    \ with \nsustainable management in a \ncoordinated manner\nYue et al. 2021\nStochastic\
    \ Dual Dynamic Programming \n(SDDP) algorithm\nOptimising the operation of reservoir\
    \ systems\nSDDP is an approximate stochastic \noptimisation algorithm to analyse\
    \ \nmultistage, stochastic, decision-\nmaking problems\nTariku et al. 2021\nDynamic\
    \ Bayesian network\nOptimising the management of food, energy, \nand water systems\
    \ under the effect of climate \nvariability\nDynamic Bayesian network is a \n\
    specific family of model-based \nreinforcement learning\nMemarzadeh et al. 2019\n\
    Linear programming (LP)\nOptimising the trade-off between water, food \nand energy\n\
    LP is done with a mathematical \nmodel where all the functions in \nthe model\
    \ are linear functions\nYuan et al. 2018\nEvolutionary multiobjective direct policy\
    \ \nsearch method\nSolving multi-objective policy design \nproblems for large-scale\
    \ water systems\nIt is a reinforcement learning \nmethod that combines direct\
    \ \npolicy search, nonlinear \napproximation network and multi-\nobjective evolutionary\
    \ algorithms\nGiuliani et al. 2022\nMulti-attribute decision-making (MADM) \n\
    framework\nAddressing the water-energy-food security \nproblems\nMADM can conduct\
    \ planning and \nmanagement under changing \ncircumstances such as climate \n\
    change\nEnayati et al. 2021\n 26\nD. Gao et al.\n1 3\nTable 4  Summary of research\
    \ objectives and typical models of selected studies categorised by research scales\
    \ and themes. The number of each type of study in different \nscales, total number\
    \ of each type of study and the percentage is summarised in the column of ‘Themes’\n\
    Research scale\nThemes\nResearch objectives related to climate change impacts\n\
    Typical models used\nGlobal scale\nWater-Food\n(6 of 45, 13%)\n• Evaluating possible\
    \ food and water deficits\n• Evaluating the effects of climate change on crop\
    \ and irrigation water requirements\n• Identifying regions and crops that are\
    \ most dependent on snowmelt water resources\n• Assessing future global crop production\
    \ under a changing climate and expanded surface water irrigation\n• Optimizing\
    \ the allocation of future cropland and water withdrawals\nGFWS\nGCWM\nLPJmL\n\
    Water-Energy\n(2 of 64, 3%)\n• Projecting future global hydropower production\
    \ under climate change\nWaterGAP\nWater-Energy-Food\n(2 of 36, 6%)\n• Quantifying\
    \ competing water demands between food production, freshwater ecosystems and utilities\
    \ (energy, \nindustries and households)\n• Analysing potential trade-offs and\
    \ related impacts of climate change scenarios\n• Projecting future water scarcity\
    \ under climate change\nIMAGE\nGCAM\nLPJmL\nNational scale\nWater-Food\n(13 of\
    \ 45, 29%)\n• Assessing climate change impact on water linked parameters (soil\
    \ moisture, water availability) and crop yields\n• Evaluating the effects of climate\
    \ change on crop and irrigation water requirements\n• Analysing primary driver\
    \ of future yields under climate change\nSWAT \nIGSM\nWater-Energy\n(5 of 64,\
    \ 8%)\n• Evaluating climate change impacts on water resources availability and\
    \ energy parameters (hydropower generation and \nthermoelectric plants)\n• Providing\
    \ optimal schemes for energy system management under climate change\n• Simulating\
    \ hydropower availability during drought period and estimating the indirect impacts\
    \ of a drought in \nneighboring nations\nHBV\nWBM\nTIMES\nWater-Energy-Food\n\
    (5 of 36, 14%)\n• Projecting food parameters (e.g., crop production, farm incomes)\
    \ based on climate and human factors (e.g., crop \nselection, irrigation practices,\
    \ water availability, energy input)\n• Quantifying increased agricultural challenges\
    \ under climate change\n• Investigating energy implications of implementing the\
    \ irrigation master plan\n• Assessing the present status and historical changing\
    \ pattern of Water-Energy-Food nexus\n• Assessing future drought conditions from\
    \ the aspect of water-energy-food\nDSSAT\nWEAP\nWatershed scale\nRegional scale\n\
    City scale\nReservoir systems \nscale\nWater-Food\n(23 of 45, 51%)\n• Simulating\
    \ watershed hydrology and crop parameters (crop yield, crop growing period)\n\
    • Evaluating the effects of climate change on crop and irrigation water requirements\n\
    • Assessing how the sources of irrigation water supply may shift\n• Determining\
    \ optimal crop production strategies\nSWAT \nDSSAT\nLPJmL\nVIC-CropSyst\n27\n\
    A Systematic Review of Methods for Investigating Climate Change…\n1 3\nTable 4\
    \  (continued)\nResearch scale\nThemes\nResearch objectives related to climate\
    \ change impacts\nTypical models used\nWater-Energy\n(55 of 64, 86%)\n• Simulating\
    \ future streamflow/water availability/flood and hydropower generation/electricity\
    \ parameters\n• Calculating hydropower system operation scheduling under climate\
    \ change\n• Evaluating the impacts of climate change on evaporative water losses\
    \ of power generation\n• Assessing the sensitivity of reservoir operation to water\
    \ resource uncertainty driven by a combination of climate \nchange and upstream\
    \ cascade dam development\n• Evaluating impact of energy policies on water resources\
    \ management under climate change\n• Identifying power shortfall risk under compound\
    \ climate change impacts on hydropower\nANN\nVIC\nSWAT \nHBV\nWEAP\nLEAP\nHEC-Ressim\n\
    HEC-HMS\nXinanjiang model\nWater-Energy-Food\n(28 of 36, 78%)\n• Simulating changes\
    \ in water, energy, food (e.g., yield change and irrigation requirements) under\
    \ climate change \nscenarios\n• Ensuring water, energy, and food security\n• Analysing\
    \ the supply–demand scenarios and trade-offs between water, food and energy\n\
    • Addressing issues of water management through a nexus lens\n• Assessing the\
    \ impacts of proposed lake restoration measures and climate change to lake level\n\
    • Obtaining optimal allocation schemes of Water-Energy-Food (planting structure,\
    \ irrigation water, hydropower \nproduction, energy use) under climate change\n\
    • Understanding the main source of climate risk to development plans across the\
    \ water, energy, and food sectors\n• Evaluating how the system failures caused\
    \ by hurricanes, low-temperature events, and droughts affect the supply of \n\
    water, energy and food\n• Investigating potential plausible cross-nexus implications\
    \ and synergies on Water-Energy-Food due to policy \ninterventions\n• Calculating\
    \ the water availability for irrigated crop production, hydropower generation,\
    \ and riverine ecosystem health\n• Analysing appropriate bioenergy production\
    \ rates under climate change\n• Evaluating impacts of hydrologic extremes on the\
    \ reservoir operations during flood and low flow events\n• Assessing the impact\
    \ of seasonal variability on water, energy and food\nSWAT \nVIC\nHBV\nANN\nWEAP\n\
    LEAP\nTIMES\nLPJmL\nABM\nSD model\nWEF Nexus Tool 2.0\nSite scale\nReservoir/Dam/Plant\
    \ \nscale\nHousehold scale\nWater-Food\n(3 of 45, 7%)\n• Investigating crop yield,\
    \ irrigation water requirement and other parameters linked to irrigation in response\
    \ to future \nclimate change\nORYAZ\nWater-Energy\n(2 of 64, 3%)\n• Simulating\
    \ future streamflow/water availability and hydropower generation\n• optimizing\
    \ hydropower multi-reservoir systems\n• Quantifying the effect of changes in price\
    \ and water seasonality on future revenue distribution and its related \nuncertainty\
    \ in run-of-the-river plant\nANN\nWater-Energy-Food\n(1 of 36, 3%)\n• Assessing\
    \ the impact of seasonal variability on water, energy and food\nSD model\n 28\n\
    D. Gao et al.\n1 3\nWater-Energy-Food studies at the global scale focused on the\
    \ competition for water \nbetween energy and food. The interlinkages between water,\
    \ energy and food sectors were \nexplored more in small to middle scale studies.\
    \ Meanwhile, there were many more optimi-\nsations and policy scenarios in research\
    \ at the regional scale. The Water-Energy research \nat large scale mainly focused\
    \ on the impacts of river flow on potential hydropower produc-\ntion, while the\
    \ optimisation of hydropower system operation is also concerned at small-\nmiddle\
    \ scale research. The focuses of Water-Food research at large and small-middle\
    \ \nscale were similar, mainly investigating the water management and crop production\
    \ strate-\ngies. Local water, energy and food management strategies may not be\
    \ applicable to other \nregions, so the trade-off between water, energy and food\
    \ under climate change and the \nstrategies for sustainable development at a larger\
    \ scale still require continuous efforts from \nthe academic community.\nThe findings\
    \ on the global scale may inform future research at different scales. For \nWater-Energy\
    \ research, roughly 65% of the world’s current hydropower capacity will \nface\
    \ vulnerabilities due to alterations in the 1-in-100-year river flow pattern (Paltán\
    \ et al. \n2021), the most prominent encompassing Europe, northern Africa, the\
    \ Middle East, and \nNorth America (Turner et al. 2017; Paltán et al. 2021). Pursuing\
    \ a 1.5 °C warming target \nwould mitigate these risks when contrasted with a\
    \ 2.0 °C scenario (Paltán et al. 2021). For \nWater-Food research, a projected\
    \ food deficit might occur prior to 2050 in the scenario \nof the worst-case climate\
    \ change, significant water shortages stemming from irrigation in \nmajor food-producing\
    \ nations will hinder these countries from satisfying their domestic \nfood needs\
    \ (Grafton et al. 2017). An expansion of irrigated land by 100 Mha would be \n\
    necessary to double food production to meet the projected global food demands\
    \ by 2050, \nand an additional 10% to 20% of trade flow will be required, directing\
    \ water-abundant \nregions toward water-scarce regions, to maintain environmental\
    \ flow requirements (Pastor \net al. 2019). Expanding irrigation will lead to\
    \ increased maize production in Europe, but \nthe same cannot be said for rice\
    \ production in East Asia (Okada et al. 2018). In a scenario \nof 3 °C warming,\
    \ a \"soft-path\" approach with small water storage and deficit irrigation \n\
    can extend irrigated land by 70 Mha and feed additional 300 million people worldwide,\
    \ \na \"hard-path\" with substantial annual water storage has the potential to\
    \ expand irrigation \nup to 350 Mha and feed 1.4 billion more people (Rosa et al.\
    \ 2020). The regions that heav-\nily rely on snowmelt as an agricultural water\
    \ resource are high-mountain regions like the \nTibetan Plateau, Central Asia,\
    \ western Russia, the western United States, and the southern  \nAndes (Qin et \
    \ al. 2020b). For Water-Energy-Food research, water scarcity reductions \ndriven\
    \ by human is likely to result in 44% of land area in the world by the end of\
    \ twenty-\nfirst century in certain socioeconomic scenarios (Graham et al. 2020).\
    \ An additional 1.7 \nbillion people could potentially experience severe water\
    \ shortages for electricity, industrial \nuse, and household needs if priority\
    \ becomes for food production and maintaining environ-\nmental flow (de Vos et al.\
    \ 2021).\n4.1  Models for Medium to Small Spatial Scale\nWatershed hydrological\
    \ models can be categorised into three types: (1) conceptual mod-\nels, (2) physics-based\
    \ models, and (3) data driven models. Conceptual hydrological models \nare based\
    \ on physical basis but are in highly simplified forms, they also have the charac-\n\
    teristics of statistical regression models (e.g., HBV and Xinanjiang model). The\
    \ biggest \nlimitation is that they treat the watershed as a whole, ignoring the\
    \ heterogeneity of spa-\ntially distributed watershed characteristic parameters\
    \ (Devia et  al.  2015). Physics-based \n29\nA Systematic Review of Methods for Investigating\
    \ Climate Change…\n1 3\nmodels adopt spatially varied parameters to reflect the\
    \ physical mechanism of hydrologi-\ncal process influenced by multiple factors\
    \ (e.g., SWAT and HEC-HMS). The data-driven \nmodels establish statistical relationships\
    \ between input and output. They work well at the \ndata range, but the simulation\
    \ performance degrades when applied to epitaxial projection \nbecause of the lack\
    \ of physical basis. Over the past decade, a cutting-edge machine learn-\ning\
    \ methodology, named deep learning, has evolved from the traditional neural network\
    \ \nand has outperformed traditional models with considerable improvement in performance\
    \ \n(Yuan et al. 2020). However, deep learning cannot completely replace the physics-based\
    \ \nmodels, and the combination of physics-based models and deep learning may\
    \ open a prom-\nising door (Yuan et al. 2020).\nWater management models aim to\
    \ optimise water allocation to fulfil the demands from \nmultiple sectors. Many\
    \ selected studies established optimisation frameworks for planning \nand management\
    \ of water resources. There were some studies employing existing water \nmanagement\
    \ models directly, among which WEAP and HEC-ResSim were most used. \nCrop models\
    \ are used to simulate crop growth, DSSAT and CropSyst are typical and most \n\
    common used crop models in selected studies. TIMES and LEAP were relatively fre-\n\
    quently employed in investigating climate change impacts on water and energy.\
    \ Interdisci-\nplinary models like ABM, SD model and WEF Nexus Tool 2.0 were utilised\
    \ in the Water-\nEnergy-Food nexus studies.\n4.2  Models for Large Spatial Scale\n\
    Global hydrological models consider more land surface processes like recycling\
    \ of evapo-\ntranspiration. The approach integrates knowledge from multiple disciplines\
    \ encompassing \natmospheric sciences, geography, ecology, oceanography, soil\
    \ science, global change sci-\nence, etc. All global hydrological models run in\
    \ a grid format (Sood and Smakhtin 2015). \nTypical global-scale hydrological\
    \ models used in selected studies include WBM, VIC, \nWaterGAP and LPJmL. Different\
    \ models have different emphases and characteristics. For \nexample, WaterGAP\
    \ model is more detailed in water demand simulation including water \nuse for\
    \ domestic, industry, thermal power production, livestock and irrigation (Döll\
    \ et al. \n2003). LPJmL model puts more emphasis on vegetation and crop simulations\
    \ (Bondeau \net al. 2007). High degree of uncertainty and rough resolution are\
    \ main limitations of global \nhydrological models (Sood and Smakhtin 2015).\n\
    In selected global-scale studies investigating climate change impacts on Water-Food,\
    \ \nGCWM and GFWS were utilised. GCWM mainly focuses on blue and green consump-\n\
    tive water use as well as virtual water of 23 specific crops (Siebert and Döll\
    \ 2010). GFWS \nputs more attention on global food and irrigated water availability\
    \ risks through simulation \nof food generation and demand, water supply and agricultural\
    \ water requirement (Grafton \net al. 2015).\nIntegrated Assessment Models (IAMs)\
    \ are important tools to evaluate human feedback \nand impacts on climate change\
    \ and mitigation of greenhouse gases (Schwanitz 2013). The \nIGSM framework consists\
    \ primarily of two interacting components (Sokolov et al. 2018): \nthe Economic\
    \ Projection and Policy Analysis model and the Earth System model. GCAM \nlinks\
    \ water, energy, landuse, earth systems and economics to analyse consequences\
    \ of pol-\nicy strategies and interdependencies. IMAGE simulates interactions\
    \ between biosphere, \nsociety and the climate system to assess environmental\
    \ and sustainable development issues. \nDelimitation of the system, explanatory\
    \ power of models, as well as linkage of model eval-\nuation and usefulness are\
    \ the main challenges for IAMs (Schwanitz 2013).\n 30\nD. Gao et al.\n1 3\n5 \
    \ Future Climate Scenarios Setting Methods\nMost selected research assessed and\
    \ projected future water, energy and food systems based on \nfuture climate change\
    \ models. The emission scenarios, climate models, downscaling methods \nand global\
    \ warming scenarios in selected articles are summarised and introduced below.\n\
    5.1  Emissions Scenarios\nFor climate change impacts assessment, the Intergovernmental\
    \ Panel on Climate Change \n(IPCC) has published Assessment Reports (AR) on climate\
    \ change based on greenhouse \ngas emissions scenarios. Future climate projections\
    \ in the IPCC Fourth Assessment \nReport (AR4, IPCC 2007) were based on Special\
    \ Report on Emissions Scenarios (SRES, \nIPCC  2000) and simulations of the third\
    \ phase of the Coupled Model Intercomparison \nProject (CMIP3, Meehl et al. 2005).\
    \ SRES was superseded by Representative Concentra-\ntion Pathways (RCPs) in the\
    \ IPCC fifth assessment report (AR5, IPCC 2014) based on the \nCMIP5 (Taylor et al.\
    \ 2012).\nThe IPCC Sixth Assessment Report (AR6, IPCC 2021) assessed the future\
    \ climate out-\ncomes based on the combination of socio-economic (SSP1-SSP5) and\
    \ future radiative forc-\ning scenarios (1.9 to 8.5 W/m2), which called Shared\
    \ Socioeconomic Pathways (SSPs). \nThe latest SSPs can quantitatively describe\
    \ the relationship between socioeconomic devel-\nopment and global climate change\
    \ to reflect the climate change challenges that society will \nface in the future\
    \ (Eyring et al. 2016). Basically, some older studies (generally in 2017 and \n\
    2018) used SRES of CIMIP3 models. Most selected studies utilised RCPs of CMIP5\
    \ mod-\nels. Some post-2020 studies were starting to use SSPs from CMIP6.\n5.2\
    \  Climate Models and Downscaling Methods\nGlobal climate model (GCM) is capable\
    \ and useful for projecting future climate (Overland \net al. 2011). Many research\
    \ institutions have developed GCMs based on their own experiment \nassumptions\
    \ and mathematical representations of physical climate system.\nStudies at global\
    \ scale in this review inputted GCMs directly into global models to pro-\nject\
    \ climate change impacts (Turner et al. 2017; Pastor et al. 2019). However, GCMs\
    \ are \ngenerally insufficient to provide useful climate predictions on the local\
    \ to regional scales \nbecause of relatively coarse resolution and significant\
    \ uncertainties in the modelling pro-\ncess (Allen and Ingram 2002; Dibike and\
    \ Coulibaly  2005). When the climate change \nimpacts studies are carried out\
    \ at local and regional scales, downscaling methods have \nbeen developed to overcome\
    \ the mismatch of spatial resolution between GCMs and models \n(Hwang and Graham\
    \ 2013).\nDownscaling techniques are categorised by two approaches (Hwang and\
    \ Graham 2013):\n1. Statistical downscaling using the empirical relationship between\
    \ GCMs simulated fea-\ntures at the grid scale and surface observations at the\
    \ sub-grid scale. For example, Bias-\nCorrection Spatial Disaggregation (BCSD,\
    \ e.g., Zhao et al. 2022) and the Statistical \nDownscaling Model (SDSM, e.g.,\
    \ Goodarzi et al. 2020) were employed to downscale \nGCMs in the selected studies.\n\
    2. Dynamic downscaling using regional climate models (RCMs) based on physical\
    \ rela-\ntions between the climate parameters at large and smaller scale.\n31\n\
    A Systematic Review of Methods for Investigating Climate Change…\n1 3\nMost selected\
    \ articles using dynamic downscaling method generally applied results from \n\
    the Coordinated Regional Climate Downscaling Experiment (CORDEX). CORDEX was \n\
    to create an enhanced modelling framework for generating climate projections at\
    \ regional \nscales, enabling impact assessments and adaptation studies globally\
    \ within the IPCC AR5 \n(Giorgi et al. 2022).\n5.3  Global Warming Scenarios\n\
    The Paris Agreement (UNFCCC 2015) aims to keep global mean surface air temperature\
    \ \nincreasing below 2℃ relatives to pre-industrial levels and targets to limit\
    \ it to 1.5℃. Some \narticles simulated future Water-Food or Water-Energy under\
    \ global warming 1.5℃, 2℃, \n3℃ or 4℃ (Donk et al. 2018; Sylla et al. 2018; Meng\
    \ et al. 2020; Qin et al. 2020b; Rosa \net al. 2020; Zhao et al. 2021b). These\
    \ studies utilised two approaches (James et al. 2017) to  \nassess the regional\
    \ implications of different degrees of warming: (1) time sampling; (2) \npattern\
    \ scaling.\nIn time sampling approach, the global warming scenarios are derived\
    \ by extracting a \nperiod of time (usually 30 years) when the driving climate\
    \ model projects an increase of \nspecified degrees (e.g., 1.5℃ and 2℃) of warming\
    \ compared to the pre-industrial level \n(Sylla et al. 2018).\nPattern scaling\
    \ assumes the relationship between global mean temperature and local \nchange\
    \ is linear (Huntingford and Cox 2000; Mitchell 2003; James et al. 2017). These\
    \ pat-\nterns can scale changes in global mean annual temperature to local and\
    \ seasonal changes \nfor climate variables by linear regressions (Qin et al. 2020b).\n\
    6  Directions of Future Research and Prospects\nFuture challenges in climate change\
    \ and nexus research are identified from five aspects: \n(1) scale and resolution\
    \ of study area; (2) internal physical mechanism; (3) extreme climate \nevents;\
    \ (4) potential competition between sectors; (5) data and model uncertainty.\n\
    6.1  Scale and Resolution of Study Area\nMost selected studies related to climate\
    \ change impacts on Water-Food generally focused \non watershed, regional and\
    \ national scale, the analyses not only focused on temporal differ-\nences but\
    \ also spatial difference according to different geographical resolution. In contrast,\
    \ \nstudies investigating climate change impacts on Water-Energy mainly analysed\
    \ hydro-\npower, therefore, results were generally shown within hydropower plants,\
    \ dams and res-\nervoirs without spatial difference. Evaluation studies of climate\
    \ change impacts on Water-\nEnergy-Food nexus mainly focused on basin and regional\
    \ scale, the analysis put water, \nenergy, and food into a whole system, but the\
    \ spatial resolution was often ignored.\nIt is of great significance for local\
    \ sustainability management and decision-making to \nstudy climate change impacts\
    \ on Water-Energy-Food on basin and regional scale, but the \nresults may be limited\
    \ by the boundaries of the study area. For example, the simulated \nstreamflow\
    \ at the outlet of the study basin is not necessarily the amount of water available\
    \ \nin the basin because the water demands in the downstream regions should be\
    \ considered. \nThe absence of water, energy and food scheduling with other regions\
    \ may have effects on \n 32\nD. Gao et al.\n1 3\ninaccurate supply and demand\
    \ simulations, further resulting in inaccurate management \nstrategies. The water\
    \ transport routes of water resources are sometimes cross-watershed. \nFor example,\
    \ reservoirs or weirs provide for agriculture, industry, or domestic use through\
    \ \ntheir own pipeline systems. With the impact of climate change, economic globalization\
    \ and \nother strong human activities, local Water-Energy-Food nexus is bound\
    \ to be influenced by \nglobal hydrological cycle and non-local human activities.\
    \ It requires scholars to understand \nlocal nexus relationships from a large-scale\
    \ perspective.\nMeanwhile, considering climate change has obvious spatial differences,\
    \ and the \nresponse speed of different regions to climate change is also different,\
    \ the climate change \nimpacts study on Water-Energy-Food nexus with geographical\
    \ resolution can show spatial \ndifference of water, energy, food change due to\
    \ climate change and provide a better refer-\nence for sustainability management.\n\
    6.2  Internal Physical Mechanisms in Modelling\nMost of the studies about evaluating\
    \ climate change impacts on Water-Food and Water-\nEnergy considered hydrological\
    \ processes based on physical mechanisms. Research on \nWater-Energy-Food and\
    \ climate change impacts consisted of interdisciplinary and transdis-\nciplinary\
    \ analysis, while the complexity of the system leads to the simplification of\
    \ many \nphysical mechanisms. Many mathematical or data-driven models were used\
    \ for inves-\ntigating climate change impacts on Water-Energy-Food, but the lack\
    \ of internal physical \nmechanisms cannot well explain the interactive process\
    \ between water, energy and food to \nclimate change.\nFuture research needs to\
    \ understand the interlinkages and internal physical mechanisms \nof the nexus\
    \ sectors and climate change. Meanwhile, science and policy should be inte-\n\
    grated to reveal the dynamics of natural processes along with social processes.\n\
    6.3  Novel Artificial Intelligence Models\nMany selected studies employed Artificial\
    \ Intelligence (AI) in simulation and operation \noptimisation. Feedforward and\
    \ feedback neural networks were used for simulation. Most \nselected studies used\
    \ programming and meta-heuristic algorithms, and a small number \nused reinforcement\
    \ learning for operation optimisation. In recent years, with the rapid \ndevelopment\
    \ of AI, many novel AI models have been proposed repeatedly. These AI mod-\nels\
    \ will provide a feasible direction for these complex interdisciplinary sciences.\
    \ For exam-\nple, deep reinforcement learning (DRL) was developed by combining\
    \ traditional reinforce-\nment learning with deep learning, and it is capable\
    \ of handling high-dimensional states and \nactions (Mnih et al. 2015). DRL has\
    \ been applied for optimal hydropower reservoir opera-\ntion (Xu et al. 2020),\
    \ irrigation optimisation (Alibabaei et al. 2022) and water-energy-food \nnexus\
    \ security assessment (Raya-Tapia et al. 2023). The application of DRL on complex\
    \ \nwater-energy-food system under climate change is still to be investigated.\n\
    6.4  Extreme Climate Events\nMost projections of future nexus were generally based\
    \ on temporal continuous climate \nchange scenarios, only few reviewed studies\
    \ have considered extreme weather events. \n33\nA Systematic Review of Methods\
    \ for Investigating Climate Change…\n1 3\nClimate change will increase the intensity,\
    \ frequency and spatial extent of extreme cli-\nmate events (Hasegawa et al. 2021)\
    \ and compound hazards (Zscheischler et al. 2018). \nMore frequent and extreme\
    \ events will cause disruptions in the management of water, \nenergy, and food\
    \ (Núñez-López et al. 2022). For example, relative to moderate-level \nclimate\
    \ change, an additional 20–36% population may face hunger under a 1-in-100 yr\
    \ \nextreme climate event under RCP8.5 (Hasegawa et  al. 2021). Compound hazards\
    \ \nwill cause devastating impacts at a scale far beyond any single disaster in\
    \ isolation \n(Zscheischler et al. 2018). For example, increasing compound drought–heatwave\
    \ risks \nmay affect 90% of the global population and gross domestic product in\
    \ the future (Yin \net al. 2023). Considering the water, energy and food relationship\
    \ under extreme climate \nevents in any future studies has an important role in\
    \ developing strategies to ensure \nwater, energy and food security.\n6.5  Potential\
    \ Competition Between Sectors\nPrevious studies related to climate change impacts\
    \ on Water-Food and Water-Energy did \nnot consider competition between subsystems\
    \ because there was no/limited competi-\ntion between two sectors in early days.\
    \ When considering three sectors together, com-\npetition arises. Competition\
    \ for water between food and energy sectors is an important \npart of the Water-Energy-Food\
    \ nexus (Qin 2021). The competitive relationship is not \nconducive to the sustainable\
    \ development. For example, the average total production \nwater footprint in\
    \ 31 provinces of the Chinese Mainland in the Industry Competition \nUnsustainability\
    \ scenario reached 4.08  m3/kg in 2016 (Hua et al. 2022). Considering the \neconomic\
    \ and social situation, energy production is more profitable than food, so water\
    \ \nflows easily into the energy sector. Especially in the context of climate\
    \ change, water \navailability is greatly affected. How to ensure food and energy\
    \ security within limited \nwater resources context should be considered in any\
    \ future studies.\n6.6  Data and Model Uncertainty\nIn the evaluation of climate\
    \ change impacts on Water-Energy-Food, numerous data from \nmultiple disciplines\
    \ including meteorology, agriculture, environment, hydrology, eco-\nnomics, society\
    \ are needed. The use of different data sets, mismatch of data resolu-\ntion,\
    \ the varying quality and availability of data (Perrone et al. 2011), and assumptions\
    \ \nand simplifications introduced to deal with data scarcity could lead to very\
    \ different \nresults. High uncertainty may be caused to exert negative impacts\
    \ on the nexus analysis \nand even misrepresent the interactions among nexus sectors\
    \ (Zhang et al. 2018). What \nis more, models and analysis tools also introduce\
    \ uncertainty. Downscaling of future \nmeteorological data, numerous parameters\
    \ in modelling, limited understanding of nexus \nprocesses, the intrinsic indeterminism\
    \ of complex dynamic systems, and myriad future \nscenarios will bring uncertainty\
    \ into final results, making it difficult to identify an opti-\nmal policy choice\
    \ (Gallopín et al. 2001; Antón et al. 2013; Yung et al. 2019).\nEndeavours should\
    \ be made in future studies to identify, analyse and reduce uncer-\ntainty in\
    \ data use and modelling for nexus research to increase the reliability of projec-\n\
    tion results and build capacity for decision-making in the context of uncertainty.\n\
    \ 34\nD. Gao et al.\n1 3\n7  Conclusions\nThis paper provides a systematic review\
    \ on the analytical approaches in the evaluation of \nclimate change impacts on\
    \ Water-Food, Water-Energy and Water-Energy-Food. The key \nfindings are summarised\
    \ as below:\n1. Analytical methodologies used in selected research can be classified\
    \ into four catego-\nries: Statistical methods, Physics-based modelling, Supervised\
    \ learning and Operation \noptimisation. Catalogues of methods used in the evaluation\
    \ of climate change impacts \non Water-Food, Water-Energy and Water-Energy-Food\
    \ are listed respectively based on \nthe classification (see Tables 1, 2 and 3).\
    \ Such catalogues are helpful to clearly show \npopular and promising methods\
    \ in selected studies.\n2. The focus of research on different topics at different\
    \ scales are discussed. Large scale \nand medium-small scale models are introduced\
    \ in terms of their characteristics, limita-\ntions, providing references for\
    \ selection of models and issues to consider when using \nthe models. Some models\
    \ are applicable for different scales but there is no single model \nsuitable\
    \ for all scales. The classification and discussion of topics and models is help-\n\
    ful to provide guidance on appropriate model selection by considering research\
    \ scales, \nobjectives and themes (Water-Food, Water-Energy and Water-Energy-Food).\n\
    3. Future climate scenarios setting including emission scenarios, climate models,\
    \ down-\nscaling methods and global warming scenarios are summarised. Climate\
    \ scenarios are \nimportant for simulating interactions between water, energy\
    \ and food under various \nfuture climate change conditions, as well as exploring\
    \ the effectiveness of mitigation \nmeasures or policies. The study has provided\
    \ references for the setting of climate sce-\nnarios and processing of future\
    \ meteorological data in future research.\n4. Despite significant efforts were\
    \ made in investigating climate change impacts on Water-\nEnergy-Food, limitations\
    \ of current research still exist, and the challenges for future \nstudy are discussed.\
    \ Current studies do not adequately address the uncertainties gener-\nated by\
    \ data and models. Research about extreme climate events and potential compe-\n\
    tition in nexus systems is not sufficient. Efforts can be made in the internal\
    \ physical \nmechanisms analysis, application of novel artificial intelligence\
    \ models and spatial \ndifferences analysis of nexus issues.\nAcknowledgements\
    \ The study was supported by the China Scholarship Council scholarship.\nAuthors\
    \ Contributions Danyang Gao: Conceptualization, Methodology, Writing – original\
    \ draft & revise. \nAlbert S. Chen: Supervision – review & editing. Fayyaz Ali\
    \ Memon: Supervision – review & editing.\nData Availability The data sources are\
    \ listed in the ‘Selected articles’ in References, some articles are not \ncited\
    \ in the manuscript but are selected for review (Carvajal et al. 2017; Solaun\
    \ and Cerda 2017; Yin et al. \n2017; Bieber et al. 2018; Gaudard et al. 2018;\
    \ Hasan and Wyseure 2018; Gohar et al. 2019; Ortiz-Bobea \n2019; Rigden et al.\
    \ 2020; Beltran-Peña and D’Odorico 2022; Kumar et al. 2023).\nDeclarations \n\
    Ethical Approval Not applicable.\nConsent to Participate Not applicable.\nConsent\
    \ to Publish The authors have approved manuscript submission.\n35\nA Systematic\
    \ Review of Methods for Investigating Climate Change…\n1 3\nCompeting Interests\
    \ The authors declare that they have no competing interests.\nOpen Access This\
    \ article is licensed under a Creative Commons Attribution 4.0 International License,\
    \ \nwhich permits use, sharing, adaptation, distribution and reproduction in any\
    \ medium or format, as long \nas you give appropriate credit to the original author(s)\
    \ and the source, provide a link to the Creative Com-\nmons licence, and indicate\
    \ if changes were made. The images or other third party material in this article\
    \ \nare included in the article’s Creative Commons licence, unless indicated otherwise\
    \ in a credit line to the \nmaterial. If material is not included in the article’s\
    \ Creative Commons licence and your intended use is not \npermitted by statutory\
    \ regulation or exceeds the permitted use, you will need to obtain permission\
    \ directly \nfrom the copyright holder. To view a copy of this licence, visit\
    \ http://creativecommons.org/licenses/by/4.0/.\nReferences\nAlbrecht TR, Crootof\
    \ A, Scott CA (2018) The water-energy-food nexus: A systematic review of methods\
    \ \nfor nexus assessment. Environ Res Lett 13(4):043002. https:// doi. org/ 10.\
    \ 1088/ 1748- 9326/ aaa9c6\nAlibabaei K et al (2022) Irrigation optimization with\
    \ a deep reinforcement learning model: Case study \non a site in Portugal. Agric\
    \ Water Manag 263:107480. https:// doi. org/ 10. 1016/j. agwat. 2022. 107480\n\
    Allen MR, Ingram WJ (2002) Constraints on future changes in climate and the hydrologic\
    \ cycle. Nature \n419(6903):228–232. https:// doi. org/ 10. 1038/ natur e01092\n\
    Antón J et al (2013) Agricultural risk management policies under climate uncertainty.\
    \ Global Environ \nChange 23(6):1726–1736. https:// doi. org/ 10. 1016/j. gloen\
    \ vcha. 2013. 08. 007\nBondeau A et al (2007) Modelling the role of agriculture\
    \ for the 20th century global terrestrial carbon \nbalance. Glob Change Biol 13(3):679–706.\
    \ https:// doi. org/ 10. 1111/j. 1365- 2486. 2006. 01305.x\nConway D et  al (2015)\
    \ Climate and southern Africa’s water–energy–food nexus. Nat Clim Change \n5(9):837–846.\
    \ https:// doi. org/ 10. 1038/ nclim ate27 35\nde Amorim WS et al (2018) The nexus\
    \ between water, energy, and food in the context of the global \nrisks: An analysis\
    \ of the interactions between food, water, and energy security. Environ Impact\
    \ \nAssess Rev 72:1–11. https:// doi. org/ 10. 1016/j. eiar. 2018. 05. 002\nDibike\
    \ YB, Coulibaly P (2005) Hydrologic impact of climate change in the Saguenay watershed:\
    \ com-\nparison of downscaling methods and hydrologic models. J Hydrol 307(1):145–163.\
    \ https:// doi. org/ \n10. 1016/j. jhydr ol. 2004. 10. 012\nD’Odorico P et al\
    \ (2018) The global food-energy-water nexus. Rev Geophys 56(3):456–531. https://\
    \ doi. \norg/ 10. 1029/ 2017R G0005 91\nDöll P, Kaspar F, Lehner B (2003) A global\
    \ hydrological model for deriving water availability indi-\ncators: model tuning\
    \ and validation. J Hydrol 270(1):105–134. https:// doi. org/ 10. 1016/ S0022-\
    \ \n1694(02) 00283-4\nEndo A et al (2020) Dynamics of water–energy–food nexus\
    \ methodology, methods, and tools. Curr Opin \nEnviron Sci Health 13:46–60. https://\
    \ doi. org/ 10. 1016/j. coesh. 2019. 10. 004\nEyring V et al (2016) Overview of\
    \ the Coupled Model Intercomparison Project Phase 6 (CMIP6) experi-\nmental design\
    \ and organization. Geosci Model Dev 9(5):1937–1958. https:// doi. org/ 10. 5194/\
    \ \ngmd-9- 1937- 2016\nGallopín GC et al (2001) Science for the twenty-first century:\
    \ From social contract to the scientific core. \nInt Soc Sci J 53(168):219–229.\
    \ https:// doi. org/ 10. 1111/ 1468- 2451. 00311\nGiorgi F et  al (2022) The CORDEX-CORE\
    \ EXP-I initiative: Description and highlight results \nfrom the initial analysis.\
    \ Bull Am Meteorol Soc 103(2):E293–E310. https:// doi. org/ 10. 1175/ \nBAMS-D-\
    \ 21- 0119.1\nGrafton RQ, Williams J, Jiang Q (2015) Food and water gaps to 2050:\
    \ Preliminary results from the \nglobal food and water system (GFWS) platform.\
    \ Food Secur 7(2):209–220. https:// doi. org/ 10. 1007/ \ns12571- 015- 0439-8\n\
    Hasegawa T et  al (2021) Extreme climate events increase risk of global food insecurity\
    \ and adaptation \nneeds. Nat Food 2(8):587–595. https:// doi. org/ 10. 1038/\
    \ s43016- 021- 00335-4\nHoff H (2011) Understanding the Nexus. Available at: https://\
    \ www. sei. org/ publi catio ns/ under stand ing- the- \nnexus/ (Accessed: 22\
    \ Jun 2022)\nHua E et al (2022) Synergy and competition of water in Food-Energy-Water\
    \ Nexus: Insights for sustainabil-\nity. Energy Convers Manag 266:115848. https://\
    \ doi. org/ 10. 1016/j. encon man. 2022. 115848\n 36\nD. Gao et al.\n1 3\nHuntingford\
    \ C, Cox PM (2000) An analogue model to derive additional climate change scenarios\
    \ from \nexisting GCM simulations. Clim Dyn 16(8):575–586. https:// doi. org/\
    \ 10. 1007/ s0038 20000 067\nHwang S, Graham WD (2013) Development and comparative\
    \ evaluation of a stochastic analog method to \ndownscale daily GCM precipitation.\
    \ Hydrol Earth Syst Sci 17(11):4481–4502. https:// doi. org/ 10. 5194/ \nhess-\
    \ 17- 4481- 2013\nIPCC (2007) Climate change 2007: The physical science basis:\
    \ Contribution of Working Group I to the \nFourth Assessment Report of the Intergovernmental\
    \ Panel on Climate Change. Cambridge ; New \nYork: Cambridge University Press\n\
    IPCC (2014) Fifth assessment report. Available at: https:// www. ipcc. ch/ asses\
    \ sment- report/ ar5/ (Accessed: \n22 Jun 2022)\nIPCC (2021) Climate Change 2021:\
    \ The physical science basis. Contribution of Working Group I to the \nSixth Assessment\
    \ Report of the Intergovernmental Panel on Climate Change. Edited by V. Masson-\n\
    Delmotte et al. Cambridge University Press\nJames R et al (2017) Characterizing\
    \ half-a-degree difference: a review of methods for identifying regional \nclimate\
    \ responses to global warming targets. WIREs Clim Change 8(2):e457. https:// doi.\
    \ org/ 10. 1002/ \nwcc. 457\nLiang Y et  al (2020) Quantifying direct and indirect\
    \ spatial food–energy–water (FEW) nexus in China. \nEnviron Sci Technol 54(16):9791–9803.\
    \ https:// doi. org/ 10. 1021/ acs. est. 9b065 48\nLiu J et al (2018) Nexus approaches\
    \ to global sustainable development. Nat Sustain 1(9):466–476. https:// doi. \n\
    org/ 10. 1038/ s41893- 018- 0135-8\nMannan M et al (2018) Quantifying the energy,\
    \ water and food nexus: A review of the latest developments \nbased on life-cycle\
    \ assessment. J Clean Prod 193:300–314. https:// doi. org/ 10. 1016/j. jclep ro.\
    \ 2018. 05. \n050\nMeehl GA et  al  (2005) Overview of the coupled model intercomparison\
    \ project. Bull Am Meteorol \nSoc 86(1):89–93. Available at: https:// www. jstor.\
    \ org/ stable/ 26221 235 (Accessed: 22 Jun 2022)\nMitchell TD (2003) Pattern scaling:\
    \ An examination of the accuracy of the technique for describing future \nclimates.\
    \ Clim Change 60(3):217–242. https:// doi. org/ 10. 1023/A: 10260 35305 597\n\
    Mnih V et al (2015) Human-level control through deep reinforcement learning. Nature\
    \ 518(7540):529–533. \nhttps:// doi. org/ 10. 1038/ natur e14236\nNamany S, Al-Ansari\
    \ T, Govindan R (2019) Sustainable energy, water and food nexus systems: A focused\
    \ \nreview of decision-making tools for efficient resource management and governance.\
    \ J Clean Prod \n225:610–626. https:// doi. org/ 10. 1016/j. jclep ro. 2019. 03.\
    \ 304\nOverland JE et al (2011) Considerations in the selection of global climate\
    \ models for regional climate pro-\njections: The arctic as a case study. J Clim\
    \ 24(6):1583–1597. https:// doi. org/ 10. 1175/ 2010J CLI34 62.1\nPage MJ et al\
    \ (2021) The PRISMA 2020 statement: an updated guideline for reporting systematic\
    \ reviews. \nBMJ 372:n71. https:// doi. org/ 10. 1136/ bmj. n71\nPerrone D, Murphy\
    \ J, Hornberger GM (2011) Gaining perspective on the water−energy nexus at the\
    \ com-\nmunity scale. Environ Sci Technol 45(10):4228–4234. https:// doi. org/\
    \ 10. 1021/ es103 230n\nQin Y (2021) Global competing water uses for food and\
    \ energy. Environ Res Lett 16(6):064091. https:// doi. \norg/ 10. 1088/ 1748-\
    \ 9326/ ac06fa\nRaya-Tapia AY, López-Flores FJ, Ponce-Ortega JM (2023) Incorporating\
    \ deep learning predictions to assess \nthe water-energy-food nexus security.\
    \ Environ Sci Policy 144:99–109. https:// doi. org/ 10. 1016/j. envsci. \n2023.\
    \ 03. 010\nScanlon BR et al (2017) The food-energy-water nexus: Transforming science\
    \ for society. Water Resour Re \n53(5):3550–3556. https:// doi. org/ 10. 1002/\
    \ 2017W R0208 89\nSchwanitz VJ (2013) Evaluating integrated assessment models\
    \ of global climate change. Environ Model \nSoftw 50:120–131. https:// doi. org/\
    \ 10. 1016/j. envso ft. 2013. 09. 005\nSiebert S, Döll P (2010) Quantifying blue\
    \ and green virtual water contents in global crop production as well \nas potential\
    \ production losses without irrigation. J Hydrol 384(3):198–217. https:// doi.\
    \ org/ 10. 1016/j. \njhydr ol. 2009. 07. 031\nSokolov A et al (2018) Description\
    \ and evaluation of the MIT earth system model (MESM). J Adv Model \nEarth Syst\
    \ 10(8):1759–1789. https:// doi. org/ 10. 1029/ 2018M S0012 77\nSood A, Smakhtin\
    \ V (2015) Global hydrological models: a review. Hydrol Sci J 60(4):549–565. https://\
    \ doi. \norg/ 10. 1080/ 02626 667. 2014. 950580\nTaylor KE, Stouffer RJ, Meehl\
    \ GA (2012) An overview of CMIP5 and the experiment design. Bull Am \nMeteorol\
    \ Soc 93(4):485–498. https:// doi. org/ 10. 1175/ BAMS-D- 11- 00094.1\nUN (2018)\
    \ The 2030 agenda and the sustainable development goals: An opportunity for Latin\
    \ America and \nthe Caribbean. p. 94\nUNFCCC (2015) Adoption of the Paris Agreement.\
    \ Paris\n37\nA Systematic Review of Methods for Investigating Climate Change…\n\
    1 3\nXu W et al (2020) Deep reinforcement learning for cascaded hydropower reservoirs\
    \ considering inflow fore-\ncasts. Water Resour Manag 34(9):3003–3018. https://\
    \ doi. org/ 10. 1007/ s11269- 020- 02600-w\nYin J et al (2023) Future socio-ecosystem\
    \ productivity threatened by compound drought–heatwave events. \nNat Sustain 6(3):259–272.\
    \ https:// doi. org/ 10. 1038/ s41893- 022- 01024-1\nYuan Q et al (2020) Deep\
    \ learning in environmental remote sensing: Achievements and challenges. Remote\
    \ \nSens Environ 241:111716. https:// doi. org/ 10. 1016/j. rse. 2020. 111716\n\
    Yung L et  al (2019) How methods for navigating uncertainty connect science and\
    \ policy at the water-\nenergy-food nexus. Front Environ Sci 7. https:// www.\
    \ front iersin. org/ artic le/ 10. 3389/ fenvs. 2019. 00037\nZhang C et  al (2018)\
    \ Water-energy-food nexus: Concepts, questions and methodologies. J Clean Prod\
    \ \n195:625–639. https:// doi. org/ 10. 1016/j. jclep ro. 2018. 05. 194\nZhang\
    \ P et al (2019a) Food-energy-water (FEW) nexus for urban sustainability: A comprehensive\
    \ review. \nResour Conserv Recycl 142:215–224. https:// doi. org/ 10. 1016/j.\
    \ resco nrec. 2018. 11. 018\nZscheischler J et al (2018) Future climate risk from\
    \ compound events. Nat Clim Change 8(6):469–477. \nhttps:// doi. org/ 10. 1038/\
    \ s41558- 018- 0156-3\nSelected articles\nAbdoulaye AO et al (2021) Future irrigation\
    \ water requirements of the main crops cultivated in the Niger \nRiver Basin.\
    \ Atmosphere 12(4):439. https:// doi. org/ 10. 3390/ atmos 12040 439\nAbera FF\
    \ et al (2018) Optimal operation of hydropower reservoirs under climate change:\
    \ The case of Tekeze \nReservoir, Eastern Nile. Water 10(3):273. https:// doi.\
    \ org/ 10. 3390/ w1003 0273\nAcharjee TK et al (2017) Future changes in water\
    \ requirements of Boro rice in the face of climate change in \nNorth-West Bangladesh.\
    \ Agric Water Manag 194:172–183. https:// doi. org/ 10. 1016/j. agwat. 2017. 09.\
    \ 008\nAdera AG, Alfredsen KT (2020) Climate change and hydrological analysis\
    \ of Tekeze river basin Ethiopia: \nimplication for potential hydropower production.\
    \ J Water Clim Change 11(3):744–759. https:// doi. \norg/ 10. 2166/ wcc. 2019.\
    \ 203\nAdynkiewicz-Piragas M, Miszuk B (2020) Risk analysis related to impact\
    \ of climate change on water \nresources and hydropower production in the Lusatian\
    \ Neisse River Basin. Sustainability 12(12):5060. \nhttps:// doi. org/ 10. 3390/\
    \ su121 25060\nAkoko G, Kato T, Tu LH (2020) Evaluation of irrigation water resources\
    \ availability and climate change \nimpacts-a case study of Mwea irrigation scheme, Kenya.\
    \ Water 12(9):2330. https:// doi. org/ 10. 3390/ \nw1209 2330\nAlmeida RM et al\
    \ (2021) Climate change may impair electricity generation and economic viability\
    \ of future \nAmazon hydropower. Glob Environ Change-Hum Policy Dimens 71:102383.\
    \ https:// doi. org/ 10. \n1016/j. gloen vcha. 2021. 102383\nAnghileri D et al\
    \ (2018) A comparative assessment of the impact of climate change and energy policies\
    \ \non alpine hydropower. Water Resour Res 54(11):9144–9161. https:// doi. org/\
    \ 10. 1029/ 2017W R0222 89\nAshofteh P-S, Bozorg-Haddad O, Loaiciga HA (2017)\
    \ Development of adaptive strategies for irrigation \nwater demand management\
    \ under climate change. J Irrig Drain Eng 143(2). https:// doi. org/ 10. 1061/\
    \ \n(ASCE) IR. 1943- 4774. 00011 23\nBahati HK, Ogenrwoth A, Sempewo JI (2021)\
    \ Quantifying the potential impacts of land-use and cli-\nmate change on hydropower\
    \ reliability of Muzizi hydropower plant. Uganda. J Water Clim Change \n12(6):2526–2554.\
    \ https:// doi. org/ 10. 2166/ wcc. 2021. 273\nBakhshianlamouki E et al (2020)\
    \ A system dynamics model to quantify the impacts of restoration measures \non\
    \ the water-energy-food nexus in the Urmia lake Basin, Iran. Sci Total Environ\
    \ 708:134874. https:// \ndoi. org/ 10. 1016/j. scito tenv. 2019. 134874\nBarik\
    \ B et al (2017) Water–food–energy nexus with changing agricultural scenarios\
    \ in India during recent \ndecades. Hydrol Earth Syst Sci 21(6):3041–3060. https://\
    \ doi. org/ 10. 5194/ hess- 21- 3041- 2017\nBeheshti M, Heidari A, Saghafian B\
    \ (2019) Susceptibility of hydropower generation to climate change: \nKarun III\
    \ dam case study. Water 11(5):1025. https:// doi. org/ 10. 3390/ w1105 1025\n\
    Beltran-Peña A, D’Odorico P (2022) Future food security in Africa under climate\
    \ change. Earth’s Future \n10(9):e2022EF002651. https:// doi. org/ 10. 1029/ 2022E\
    \ F0026 51\nBerardy A, Chester MV (2017) Climate change vulnerability in the food,\
    \ energy, and water nexus: concerns \nfor agricultural production in Arizona and\
    \ its urban export supply. Environ Res Lett 12(3):035004. \nhttps:// doi. org/\
    \ 10. 1088/ 1748- 9326/ aa5e6d\nBhave AG et  al (2022) Stress-testing development\
    \ pathways under a changing climate: water-energy-\nfood security in the lake\
    \ Malawi-Shire river system. Philos Trans Royal Soc Math Phys Eng Sci \n380(2221):20210134.\
    \ https:// doi. org/ 10. 1098/ rsta. 2021. 0134\n 38\nD. Gao et al.\n1 3\nBieber\
    \ N et al (2018) Sustainable planning of the energy-water-food nexus using decision\
    \ making tools. \nEnergy Policy 113:584–607. https:// doi. org/ 10. 1016/j. enpol.\
    \ 2017. 11. 037\nBlanc E et al (2017) Is current irrigation sustainable in the\
    \ United States? An integrated assessment of cli-\nmate change impact on water\
    \ resources and irrigated crop yields. Earths Future 5(8):877–892. https:// \n\
    doi. org/ 10. 1002/ 2016E F0004 73\nBombelli GM et al (2021) Impact of prospective\
    \ climate change scenarios upon hydropower potential of \nEthiopia in GERD and\
    \ GIBE dams. Water 13(5):716. https:// doi. org/ 10. 3390/ w1305 0716\nBonato\
    \ M et al (2019) Water-energy nexus for an Italian storage hydropower plant under\
    \ multiple drivers. \nWater 11(9):1838. https:// doi. org/ 10. 3390/ w1109 1838\n\
    Carlino A et al (2021) Hydroclimatic change challenges the EU planned transition\
    \ to a carbon neutral elec-\ntricity system. Environ Res Lett 16(10):104011. https://\
    \ doi. org/ 10. 1088/ 1748- 9326/ ac243f\nCarvajal PE et al (2017) Assessing uncertainty\
    \ of climate change impacts on long-term hydropower genera-\ntion using the CMIP5\
    \ ensemble-the case of Ecuador. Clim Change 144(4):611–624. https:// doi. org/\
    \ \n10. 1007/ s10584- 017- 2055-4\nChilkoti V, Bolisetti T, Balachandar R (2017)\
    \ Climate change impact assessment on hydropower generation \nusing multi-model\
    \ climate ensemble. Renew Energy 109:510–517. https:// doi. org/ 10. 1016/j. renene.\
    \ \n2017. 02. 041\nCooper CM et al (2022) Climate change-induced variations in\
    \ blue and green water usage in US urban agri-\nculture. J Clean Prod 348:131326.\
    \ https:// doi. org/ 10. 1016/j. jclep ro. 2022. 131326\nda Silva MVM et al (2021)\
    \ Projection of climate change and consumptive demands projections impacts on\
    \ \nhydropower generation in the Sao Francisco River Basin, Brazil. Water 13(3):332.\
    \ https:// doi. org/ 10. \n3390/ w1303 0332\nde Oliveira VA et al (2017) Assessment\
    \ of climate change impacts on streamflow and hydropower potential \nin the headwater\
    \ region of the Grande river basin. Southeastern Brazil. Int J Climatol 37(15):5005–\n\
    5023. https:// doi. org/ 10. 1002/ joc. 5138\nde Vos L et al (2021) Trade-offs\
    \ between water needs for food, utilities, and the environment—a nexus \nquantification\
    \ at different scales. Environ Res Lett 16(11):115003. https:// doi. org/ 10.\
    \ 1088/ 1748- \n9326/ ac2b5e\nDevia GK, Ganasri BP, Dwarakish GS (2015) A review\
    \ on hydrological models. Aquat Procedia 4:1001–\n1007. https:// doi. org/ 10.\
    \ 1016/j. aqpro. 2015. 02. 126\nDing Y et al (2017) Modeling spatial and temporal\
    \ variability of the impact of climate change on rice irriga-\ntion water requirements\
    \ in the middle and lower reaches of the Yangtze River, China. Agric Water \n\
    Manag 193:89–101. https:// doi. org/ 10. 1016/j. agwat. 2017. 08. 008\nDing Y\
    \ et al (2020) Adaptation of paddy rice in China to climate change: The effects\
    \ of shifting sowing date \non yield and irrigation water requirement. Agric Water\
    \ Manag 228:105890. https:// doi. org/ 10. 1016/j. \nagwat. 2019. 105890\nDonk\
    \ P et al (2018) Assessment of the potential implications of a 1.5 degrees C versus\
    \ higher global tem-\nperature rise for the Afobaka hydropower scheme in Suriname.\
    \ Reg Environ Change 18(8):2283–\n2295. https:// doi. org/ 10. 1007/ s10113- 018-\
    \ 1339-1\nDuan W et al (2019) Managing the water-climate- food nexus for sustainable\
    \ development in Turkmenistan. \nJ Clean Prod 220:212–224. https:// doi. org/\
    \ 10. 1016/j. jclep ro. 2019. 02. 040\nEnayati M et al (2021) A robust multiple-objective\
    \ decision-making paradigm based on the water-energy-\nfood security nexus under\
    \ changing climate uncertainties. Sci Rep 11(1):20927. https:// doi. org/ 10.\
    \ \n1038/ s41598- 021- 99637-7\nFeng Y et al (2018) Long-term hydropower generation\
    \ of cascade reservoirs under future climate changes in \nJinsha River in Southwest\
    \ China. Water 10(2):235. https:// doi. org/ 10. 3390/ w1002 0235\nFeng Y et al\
    \ (2021) Reservoir scheduling using a multi-objective cuckoo search algorithm\
    \ under climate \nchange in Jinsha River. China. Water 13(13):1803. https:// doi.\
    \ org/ 10. 3390/ w1313 1803\nForrest K et al (2018) Assessing climate change impacts\
    \ on California hydropower generation and ancillary \nservices provision. Clim\
    \ Change 151(3):395–412. https:// doi. org/ 10. 1007/ s10584- 018- 2329-5\nFrancois\
    \ B et al (2018) Impact of climate change on combined solar and run-of-river power\
    \ in northern \nItaly. Energies 11(2):290. https:// doi. org/ 10. 3390/ en110\
    \ 20290\nGaudard L, Avanzi F, De Michele C (2018) Seasonal aspects of the energy-water\
    \ nexus: The case of a run-\nof-the river hydropower plant. Appl Energy 210:604–612.\
    \ https:// doi. org/ 10. 1016/j. apene rgy. 2017. 02. \n003\nGhimire U et al (2022)\
    \ Assessment of climate change impacts on the water, food, and energy sectors\
    \ in Sit-\ntaung River Basin, Myanmar. Water 14(21):3434. https:// doi. org/ 10.\
    \ 3390/ w1421 3434\nGiuliani M et al (2022) Unintended consequences of climate\
    \ change mitigation for African river basins. Nat \nClim Change 12(2):187–+. https://\
    \ doi. org/ 10. 1038/ s41558- 021- 01262-9\n39\nA Systematic Review of Methods\
    \ for Investigating Climate Change…\n1 3\nGohar AA, Cashman A (2018) The Economic\
    \ value of groundwater irrigation for food security under cli-\nmate change: Implication\
    \ of representative concentration pathway climate scenarios. Water Resour \nManag\
    \ 32(12):3903–3918. https:// doi. org/ 10. 1007/ s11269- 018- 2026-1\nGohar AA,\
    \ Cashman A, Ward FA (2019) Managing food and water security in Small Island States:\
    \ New \nevidence from economic modelling of climate stressed groundwater resources.\
    \ J Hydrol 569:239–\n251. https:// doi. org/ 10. 1016/j. jhydr ol. 2018. 12. 008\n\
    Golfam P, Ashofteh P-S (2022) Performance indexes analysis of the reservoir-hydropower\
    \ plant sys-\ntem affected by climate change. Water Resour Manag 36(13):5127–5162.\
    \ https:// doi. org/ 10. 1007/ \ns11269- 022- 03295-x\nGoodarzi M, Abedi-Koupai\
    \ J, Heidarpour M (2019) Investigating impacts of climate change on irrigation\
    \ \nwater demands and its resulting consequences on groundwater using CMIP5 models.\
    \ Groundwater \n57(2):259–268. https:// doi. org/ 10. 1111/ gwat. 12771\nGoodarzi\
    \ MR, Vagheei H, Mohtar RH (2020) The impact of climate change on water and energy\
    \ security. \nWater Supply 20(7):2530–2546. https:// doi. org/ 10. 2166/ ws. 2020.\
    \ 150\nGrafton RQ, Williams J, Jiang Q (2017) Possible pathways and tensions in\
    \ the food and water nexus. Earths \nFuture 5(5):449–462. https:// doi. org/ 10.\
    \ 1002/ 2016E F0005 06\nGraham NT et al (2020) Humans drive future water scarcity\
    \ changes across all Shared Socioeconomic Path-\nways. Environ Res Lett 15(1):014007.\
    \ https:// doi. org/ 10. 1088/ 1748- 9326/ ab639b\nGuo Y et al (2021) Responses\
    \ of hydropower generation and sustainability to changes in reservoir policy,\
    \ \nclimate and land use under uncertainty: A case study of Xinanjiang Reservoir\
    \ in China. J Clean Prod \n281:124609. https:// doi. org/ 10. 1016/j. jclep ro.\
    \ 2020. 124609\nHaro-Monteagudo D et al (2023) Optimal implementation of climate\
    \ change adaptation measures to ensure \nlong-term sustainability on large irrigation\
    \ systems. Water Resour Manag 37(8):2909–2924. https:// \ndoi. org/ 10. 1007/\
    \ s11269- 022- 03225-x\nHasan MM, Wyseure G (2018) Impact of climate change on\
    \ hydropower generation in Rio Jubones \nBasin, Ecuador. Water Sci Eng 11(2):157–166.\
    \ https:// doi. org/ 10. 1016/j. wse. 2018. 07. 002\nHe G et al (2021) Food habit\
    \ and climate change impacts on agricultural water security during the peak \n\
    population period in China. Agric Water Manag 258:107211. https:// doi. org/ 10.\
    \ 1016/j. agwat. 2021. \n107211\nHuangpeng Q, Huang W, Gholinia F (2021) Forecast\
    \ of the hydropower generation under influence of climate \nchange based on RCPs\
    \ and developed crow search optimization algorithm. Energy Rep 7:385–397. \nhttps://\
    \ doi. org/ 10. 1016/j. egyr. 2021. 01. 006\nHussien WA, Memon FA, Savic DA (2018)\
    \ A risk-based assessment of the household water-energy-food \nnexus under the\
    \ impact of seasonal variability. J CleanProd 171:1275–1289. https:// doi. org/\
    \ 10. 1016/j. \njclep ro. 2017. 10. 094\nIPCC (2000) Emissions scenarios: summary\
    \ for policymakers: a special report of IPCC Working Group \nIII Intergovernmental\
    \ Panel on Climate Change. Intergovernmental Panel on Climate Change (IPCC \n\
    special report)\nJaaskelainen J et al (2018) Energy security impacts of a severe\
    \ drought on the future Finnish energy system. \nJ Environ Manag 217:542–554.\
    \ https:// doi. org/ 10. 1016/j. jenvm an. 2018. 03. 017\nJakimavicius D et al\
    \ (2020) Climate change impact on hydropower resources in gauged and ungauged\
    \ lithu-\nanian river catchments. Water 12(11):3265. https:// doi. org/ 10. 3390/\
    \ w1211 3265\nJander V et  al (2023) Adaptation to climate change in basins within\
    \ the context of the water-energy-\nfood nexus. J Water Resour Plan Manag 149(11):04023060.\
    \ https:// doi. org/ 10. 1061/ JWRMD5. \nWRENG- 5566\nJha RK et al (2020) Predicting\
    \ the water requirement for rice production as affected by projected climate \n\
    change in Bihar. India. Water 12(12):3312. https:// doi. org/ 10. 3390/ w1212\
    \ 3312\nJung J et al (2021) Machine learning-based small hydropower potential\
    \ prediction under climate change. Energies \n14(12):3643. https:// doi. org/\
    \ 10. 3390/ en141 23643\nKhalkhali M, Westphal K, Mo W (2018) The water-energy\
    \ nexus at water supply and its implications on \nthe integrated water and energy\
    \ management. Sci Total Environ 636:1257–1267. https:// doi. org/ 10. \n1016/j.\
    \ scito tenv. 2018. 04. 408\nKim D-H et al (2021) Paddy rice adaptation strategies\
    \ to climate change: Transplanting date shift and BMP \napplications. Agric Water\
    \ Manag 252:106926. https:// doi. org/ 10. 1016/j. agwat. 2021. 106926\nKirby\
    \ M et al (2017) Agricultural production, water use and food availability in Pakistan:\
    \ Historical trends, \nand projections to 2050. Agric Water Manag 179:34–46. https://\
    \ doi. org/ 10. 1016/j. agwat. 2016. 06. 001\nKumar H, Zhu T, Sankarasubramanian\
    \ A (2023) Understanding the food-energy-water nexus in mixed irri-\ngation regimes\
    \ using a regional hydroeconomic optimization modeling framework. Water Resour\
    \ Res \n59(6):e2022WR033691. https:// doi. org/ 10. 1029/ 2022W R0336 91\n 40\n\
    D. Gao et al.\n1 3\nLangerwisch F et al (2018) Combined effects of climate and\
    \ land-use change on the provision of ecosystem \nservices in rice agro-ecosystems.\
    \ Environ Res Lett 13(1):015003. https:// doi. org/ 10. 1088/ 1748- 9326/ \naa954d\n\
    Lee S-H et  al (2020) Food-centric interlinkages in agricultural food-energy-water\
    \ nexus under climate \nchange and irrigation management. Resour Conserv Recycl\
    \ 163:105099. https:// doi. org/ 10. 1016/j. \nresco nrec. 2020. 105099\nLi J\
    \ et al (2020) Evident response of future hydropower generation to climate change.\
    \ J Hydrol 590:125385. \nhttps:// doi. org/ 10. 1016/j. jhydr ol. 2020. 125385\n\
    Li M et al (2021) Approach for optimizing the water-land-food-energy nexus in\
    \ agroforestry systems under \nclimate change. Agric Syst 192:103201. https://\
    \ doi. org/ 10. 1016/j. agsy. 2021. 103201\nLiu B et al (2020) Climate Change\
    \ Impacts on Hydropower in Yunnan, China. Water 12(1):197. https:// doi. \norg/\
    \ 10. 3390/ w1201 0197\nLu S et al (2019) Impacts of climate change on water resources\
    \ and grain production. Technol Forecast Soc \nChange 143:76–84. https:// doi.\
    \ org/ 10. 1016/j. techf ore. 2019. 01. 015\nLutz AF et al (2022) South Asian\
    \ agriculture increasingly dependent on meltwater and groundwater. Nature \nClim\
    \ Change 1–8. https:// doi. org/ 10. 1038/ s41558- 022- 01355-z\nMadadgar S et al\
    \ (2017) Probabilistic estimates of drought impacts on agricultural production.\
    \ Geophys Res \nLett 44(15):7799–7807. https:// doi. org/ 10. 1002/ 2017G L0736\
    \ 06\nMalek K et al (2018) Climate change reduces water availability for agriculture\
    \ by decreasing non-evapora-\ntive irrigation losses. J Hydrol 561:444–460. https://\
    \ doi. org/ 10. 1016/j. jhydr ol. 2017. 11. 046\nNúñez-López JM et al (2022) Involving\
    \ resilience in assessment of the water–energy–food nexus for arid \nand semiarid\
    \ regions. Clean Technol Environ Policy 24(6):1681–1693. https:// doi. org/ 10.\
    \ 1007/ \ns10098- 022- 02273-6\nMeema T et al (2021) Uncertainty assessment of\
    \ water resources and long-term hydropower generation \nusing a large ensemble\
    \ of future climate projections for the Nam Ngum River in the Mekong Basin. J\
    \ \nHydrol-Reg Stud 36:100856. https:// doi. org/ 10. 1016/j. ejrh. 2021. 100856\n\
    Memarzadeh M, Moura S, Horvath A (2019) Optimizing dynamics of integrated food-energy-water\
    \ systems \nunder the risk of climate change. Environ Res Lett 14(7):074010. https://\
    \ doi. org/ 10. 1088/ 1748- 9326/ \nab2104\nMeng Y et al (2020) Hydropower production\
    \ benefits more from 1.5 °C than 2 °C climate scenario. Water \nResour Res 56(5):e2019WR025519.\
    \ https:// doi. org/ 10. 1029/ 2019W R0255 19\nMiara A et al (2017) Climate and\
    \ water resource change impacts and adaptation potential for US power sup-\nply.\
    \ Nat Clim Change 7(11):793–+. https:// doi. org/ 10. 1038/ NCLIM ATE34 17\nMitchell\
    \ D et al (2017) A Monte Carlo analysis on the impact of climate change on future\
    \ crop choice and \nwater use in Uzbekistan. Food Secur 9(4):697–709. https://\
    \ doi. org/ 10. 1007/ s12571- 017- 0690-2\nMomblanch A et al (2019) Untangling\
    \ the water-food-energy-environment nexus for global change adapta-\ntion in a\
    \ complex Himalayan water resource system. Sci Total Environ 655:35–47. https://\
    \ doi. org/ 10. \n1016/j. scito tenv. 2018. 11. 045\nMostafa SM et al (2021) Impact\
    \ of climate change on water resources and crop yield in the Middle Egypt \nregion.\
    \ Aqua-Water Infrastruct Ecosyst Soc 70(7):1066–1084. https:// doi. org/ 10. 2166/\
    \ aqua. 2021. 019\nMousavi RS, Ahmadizadeh M, Marofi S (2018) A multi-GCM assessment\
    \ of the climate change impact on \nthe hydrology and hydropower potential of\
    \ a semi-arid basin (a case study of the Dez Dam Basin, \nIran). Water 10(10):1458.\
    \ https:// doi. org/ 10. 3390/ w1010 1458\nMutsindikwa TC et al (2021) Modeling\
    \ climate change impact on the hydropower potential of the Bamboi \ncatchment.\
    \ Model Earth Syst Environ 7(4):2709–2717. https:// doi. org/ 10. 1007/ s40808-\
    \ 020- 01052-w\nNasrollahi H et al (2021) Unraveling the water-energy-food-environment\
    \ nexus for climate change adap-\ntation in Iran: Urmia Lake Basin Case-Study.\
    \ Water 13(9):1282. https:// doi. org/ 10. 3390/ w1309 1282\nObahoundje S et al\
    \ (2021) Sensitivity of hydropower generation to changes in climate and land use\
    \ in the \nMono Basin (West Africa) using CORDEX dataset and WEAP model. Environ\
    \ Process 8(3):1073–\n1097. https:// doi. org/ 10. 1007/ s40710- 021- 00516-0\n\
    Obringer R, Kumar R, Nateghi R (2020) Managing the water-electricity demand nexus\
    \ in a warming cli-\nmate. Clim Change 159(2):233–252. https:// doi. org/ 10.\
    \ 1007/ s10584- 020- 02669-7\nOkada M et al (2018) Varying benefits of irrigation\
    \ expansion for crop production under a changing cli-\nmate and competitive water\
    \ use among crops. Earths Future 6(9):1207–1220. https:// doi. org/ 10. 1029/\
    \ \n2017E F0007 63\nOrtiz-Bobea A et  al (2019) Unpacking the climatic drivers\
    \ of US agricultural yields. Environ Res Lett \n14(6):064003. https:// doi. org/\
    \ 10. 1088/ 1748- 9326/ ab1e75\nPaltán HA et al (2021) Increased water risks to\
    \ global hydropower in 1.5 °C and 2.0 °C Warmer Worlds. J \nHydrol 599:126503.\
    \ https:// doi. org/ 10. 1016/j. jhydr ol. 2021. 126503\n41\nA Systematic Review\
    \ of Methods for Investigating Climate Change…\n1 3\nPastor A et al (2019) The\
    \ global nexus of food-trade-water sustaining environmental flows by 2050. Nat\
    \ \nSustain 2(6):499–507. https:// doi. org/ 10. 1038/ s41893- 019- 0287-1\nPaul\
    \ M et al (2020) Modeling the impacts of climate change on crop yield and irrigation\
    \ in the Monocacy \nRiver Watershed, USA. Climate 8(12):139. https:// doi. org/\
    \ 10. 3390/ cli81 20139\nPeichl M et al (2019) Climate impacts on long-term silage\
    \ maize yield in Germany. Sci Rep 9:7674. https:// \ndoi. org/ 10. 1038/ s41598-\
    \ 019- 44126-1\nPhetheet J et  al (2021) Consequences of climate change on food-energy-water\
    \ systems in arid regions \nwithout agricultural adaptation, analyzed using FEWCalc\
    \ and DSSAT. Resour Conserv Recycl \n168:105309. https:// doi. org/ 10. 1016/j.\
    \ resco nrec. 2020. 105309\nPiniewski M et  al (2020) Model-based reconstruction\
    \ and projections of soil moisture anomalies \nand crop losses in Poland. Theor\
    \ Appl Climatol 140(1–2):691–708. https:// doi. org/ 10. 1007/ \ns00704- 020-\
    \ 03106-6\nQin P et al (2020a) Climate change impacts on Three Gorges Reservoir\
    \ impoundment and hydropower genera-\ntion. J Hydrol 580:123922. https:// doi.\
    \ org/ 10. 1016/j. jhydr ol. 2019. 123922\nQin P et al (2022) Projected impacts\
    \ of climate change on major dams in the Upper Yangtze River Basin. \nClim Change\
    \ 170(1–2):8. https:// doi. org/ 10. 1007/ s10584- 021- 03303-w\nQin Y et al (2020b)\
    \ Agricultural risks from changing snowmelt. Nat Clim Change 10(5):459–+. https://\
    \ doi. org/ \n10. 1038/ s41558- 020- 0746-8\nRahmati K, Ashofteh P-S, Loaiciga\
    \ HA (2021) Application of the grasshopper optimization algorithm \n(GOA) to the\
    \ optimal operation of hydropower reservoir systems under climate change. Water\
    \ Resour \nManag 35(13):4325–4348. https:// doi. org/ 10. 1007/ s11269- 021- 02950-z\n\
    Rajagopalan K et al (2018) Impacts of near-term climate change on irrigation demands\
    \ and crop yields \nin the Columbia River Basin. Water Resour Res 54(3):2152–2182.\
    \ https:// doi. org/ 10. 1002/ 2017W \nR0209 54\nRamião JP et al (2023) Hydropower\
    \ contribution to the renewable energy transition under climate change. \nWater\
    \ Resour Manag 37(1):175–191. https:// doi. org/ 10. 1007/ s11269- 022- 03361-4\n\
    Rigden AJ et  al (2020) Combined influence of soil moisture and atmospheric evaporative\
    \ demand is \nimportant for accurately predicting US maize yields. Nat Food 1(2).\
    \ https:// doi. org/ 10. 1038/ \ns43016- 020- 0028-7\nRosa L et al (2020) Potential\
    \ for sustainable irrigation expansion in a 3 degrees C warmer climate. Proc Natil\
    \ \nAcad Sci USA 117(47):29526–29534. https:// doi. org/ 10. 1073/ pnas. 20177\
    \ 96117\nSchull VZ et al (2020) Analyzing FEW nexus modeling tools for water resources\
    \ decision-making and man-\nagement applications. Food Bioprod Process 119:108–124.\
    \ https:// doi. org/ 10. 1016/j. fbp. 2019. 10. 011\nSedighkia M, Abdoli A (2022)\
    \ Balancing environmental impacts and economic benefits of agriculture under \n\
    the climate change through an integrated optimization system. Int J Energy Environ\
    \ Eng. https:// doi. \norg/ 10. 1007/ s40095- 022- 00482-9\nShirsat TS et al (2021)\
    \ Towards climate-adaptive development of small hydropower projects in Himalaya:\
    \ A \nmulti-model assessment in upper Beas basin. J Hydrol-Reg Stud 34:100797.\
    \ https:// doi. org/ 10. 1016/j. \nejrh. 2021. 100797\nShrestha A et al (2021)\
    \ Adapting hydropower production to climate change: A case study of Kulekhani\
    \ \nHydropower Project in Nepal. J Clean Prod 279:123483. https:// doi. org/ 10.\
    \ 1016/j. jclep ro. 2020. \n123483\nSiderius C et  al (2021) Climate variability\
    \ affects water-energy-food infrastructure performance in East \nAfrica. One Earth\
    \ 4(3):397–410. https:// doi. org/ 10. 1016/j. oneear. 2021. 02. 009\nSkoulikaris\
    \ C (2021) Run-of-river small hydropower plants as hydro-resilience assets against\
    \ climate \nchange. Sustainability 13(24):14001. https:// doi. org/ 10. 3390/\
    \ su132 414001\nSolaun K, Cerda E (2017) The impact of climate change on the generation\
    \ of hydroelectric power-a case study \nin Southern Spain. Energies 10(9):1343.\
    \ https:// doi. org/ 10. 3390/ en100 91343\nSpalding-Fecher R, Joyce B, Winkler\
    \ H (2017) Climate change and hydropower in the Southern African \nPower Pool\
    \ and Zambezi River Basin: System-wide impacts and policy implications. Energy\
    \ Policy \n103:84–97. https:// doi. org/ 10. 1016/j. enpol. 2016. 12. 009\nSridhar\
    \ V, Ali SA, Sample DJ (2021) Systems analysis of coupled natural and human processes\
    \ in the Mekong \nRiver Basin. Hydrology 8(3):140. https:// doi. org/ 10. 3390/\
    \ hydro logy8 030140\nSridharan V et al (2019) The impact of climate change on\
    \ crop production in Uganda-an integrated systems \nassessment with water and\
    \ energy implications. Water 11(9):1805. https:// doi. org/ 10. 3390/ w1109 1805\n\
    Sun L et al (2018) Energy-water nexus analysis in the Beijing-Tianjin-Hebei region:\
    \ Case of electricity sec-\ntor. Renew Sustain Energy Rev 93:27–34. https:// doi.\
    \ org/ 10. 1016/j. rser. 2018. 04. 111\nSuo C et al (2021) Towards sustainability\
    \ for China’s energy system through developing an energy-climate-\nwater nexus\
    \ model. Renew Sustain Energy Rev 135:110394. https:// doi. org/ 10. 1016/j. rser.\
    \ 2020. \n110394\n 42\nD. Gao et al.\n1 3\nSušnik J et al (2018) Multi-stakeholder\
    \ development of a serious game to explore the water-energy-food-\nland-climate\
    \ nexus: The SIM4NEXUS approach. Water 10(2):139. https:// doi. org/ 10. 3390/\
    \ w1002 \n0139\nSylla MB et  al (2018) Climate change to severely impact West\
    \ African basin scale irrigation in 2 \ndegrees C and 1.5 degrees C global warming\
    \ scenarios. Sci Rep 8:14395. https:// doi. org/ 10. 1038/ \ns41598- 018- 32736-0\n\
    Tan L et al (2023) Assessment of the sustainability of groundwater utilization\
    \ and crop production under \noptimized irrigation strategies in the North China\
    \ Plain under future climate change. Sci Total Envi-\nron 899:165619. https://\
    \ doi. org/ 10. 1016/j. scito tenv. 2023. 165619\nTariku TB et al (2021) Global\
    \ warming impact to River Basin of Blue Nile and the optimum opera-\ntion of its\
    \ multi-reservoir system for hydropower production and irrigation. Sci Total Environ\
    \ \n767:144863. https:// doi. org/ 10. 1016/j. scito tenv. 2020. 144863\nTeotonio\
    \ C et  al (2017) Assessing the impacts of climate change on hydropower generation\
    \ and the \npower sector in Portugal: A partial equilibrium approach. Renew Sustain\
    \ Energy Rev 74:788–799. \nhttps:// doi. org/ 10. 1016/j. rser. 2017. 03. 002\n\
    Teutschbein C et al (2023) Future drought propagation through the water-energy-food-ecosystem\
    \ nexus \n– A Nordic perspective. J Hydrol 617:128963. https:// doi. org/ 10.\
    \ 1016/j. jhydr ol. 2022. 128963\nTortorella MM et al (2020) A methodological\
    \ integrated approach to analyse climate change effects in agri-\nfood sector:\
    \ The TIMES water-energy-food module. Int J Environ Res Public Health 17(21):7703.\
    \ \nhttps:// doi. org/ 10. 3390/ ijerp h1721 7703\nTurner SWD et  al (2019) Compound\
    \ climate events transform electrical power shortfall risk in the \nPacific Northwest.\
    \ Nat Commun 10:8. https:// doi. org/ 10. 1038/ s41467- 018- 07894-4\nTurner SWD,\
    \ Ng JY, Galelli S (2017) Examining global electricity supply vulnerability to\
    \ climate \nchange using a high-fidelity hydropower dam model. Sci Total Environ\
    \ 590–591:663–675. https:// \ndoi. org/ 10. 1016/j. scito tenv. 2017. 03. 022\n\
    Wade CM et al (2022) Opportunities and spatial hotspots for irrigation expansion\
    \ in Guatemala to sup-\nport development goals in the food-energy-water nexus.\
    \ Agric Water Manag 267:107608. https:// \ndoi. org/ 10. 1016/j. agwat. 2022.\
    \ 107608\nWagner T et al (2017) Impacts of climate change on stream flow and hydro\
    \ power generation in the \nAlpine region. Environ Earth Sci 76(1):4. https://\
    \ doi. org/ 10. 1007/ s12665- 016- 6318-6\nWang H, Wu X, Gholinia F (2021a) Forecasting\
    \ hydropower generation by GFDL-CM3 climate model \nand hybrid hydrological-Elman\
    \ neural network model based on Improved Sparrow Search Algo-\nrithm (ISSA). Concurr\
    \ Comput-Pract Exp 33(24):e6476. https:// doi. org/ 10. 1002/ cpe. 6476\nWang\
    \ K et al (2021b) Understanding the impacts of climate change and socio-economic\
    \ development through \nfood-energy-water nexus: A case study of mekong river\
    \ delta. Resour Conserv Recycl 167:105390. \nhttps:// doi. org/ 10. 1016/j. resco\
    \ nrec. 2020. 105390\nWang W et al (2017) Bayesian multi-model projection of irrigation\
    \ requirement and water use efficiency \nin three typical rice plantation region\
    \ of China based on CMIP5. Agric For Meteorol 232:89–105. \nhttps:// doi. org/\
    \ 10. 1016/j. agrfo rmet. 2016. 08. 008\nWu L, Elshorbagy A, Alam MS (2022) Dynamics\
    \ of water-energy-food nexus interactions with climate \nchange and policy options.\
    \ Environ Res Commun 4(1):015009. https:// doi. org/ 10. 1088/ 2515- 7620/ \n\
    ac4bab\nXu H et al (2019) Future increases in irrigation water requirement challenge\
    \ the water-food nexus in the \nnortheast farming region of China. Agric Water\
    \ Manag 213:594–604. https:// doi. org/ 10. 1016/j. \nagwat. 2018. 10. 045\nYang\
    \ J et al (2018) Quantifying the sustainability of water availability for the\
    \ water-food-energy-ecosystem \nnexus in the Niger River Basin. Earths Future\
    \ 6(9):1292–1310. https:// doi. org/ 10. 1029/ 2018E F0009 23\nYimere A, Assefa\
    \ E (2021) Assessment of the water-energy nexus under future climate change in\
    \ the \nNile River Basin. Climate 9(5):84. https:// doi. org/ 10. 3390/ cli90\
    \ 50084\nYin Y et al (2017) Water scarcity under various socio-economic pathways\
    \ and its potential effects on \nfood production in the Yellow River basin. Hydrol\
    \ Earth Syst Sci 21(2). https:// doi. org/ 10. 5194/ \nhess- 21- 791- 2017\nYokohata\
    \ T et al (2020) MIROC-INTEG-LAND version 1: a global biogeochemical land surface\
    \ model \nwith human water management, crop growth, and land-use change. Geosci\
    \ Model Dev 13(10):4713–\n4747. https:// doi. org/ 10. 5194/ gmd- 13- 4713- 2020\n\
    Yuan K-Y et al (2018) Spatial optimization of the food, energy, and water nexus:\
    \ A life cycle assessment-\nbased approach. Energy Policy 119:502–514. https://\
    \ doi. org/ 10. 1016/j. enpol. 2018. 05. 009\nYue Q et al (2021) Fuzzy multi-objective\
    \ modelling for managing water-food-energy-climate change-\nland nexus towards\
    \ sustainability. J Hydrol 596:125704. https:// doi. org/ 10. 1016/j. jhydr ol.\
    \ 2020. \n125704\n43\nA Systematic Review of Methods for Investigating Climate\
    \ Change…\n1 3\nYun X et al (2021) Reducing climate change induced flood at the\
    \ cost of hydropower in the Lancang-\nMekong River Basin. Geophys Res Lett 48(20):e2021GL094243.\
    \ https:// doi. org/ 10. 1029/ 2021G \nL0942 43\nZhang L, Chen F, Lei Y (2020)\
    \ Climate change and shifts in cropping systems together exacerbate Chi-\nna’s\
    \ water scarcity. Environ Res Lett 15(10):104060. https:// doi. org/ 10. 1088/\
    \ 1748- 9326/ abb1f2\nZhang Y, Wang Y, Niu H (2019b) Effects of temperature, precipitation\
    \ and carbon dioxide concentrations on \nthe requirements for crop irrigation\
    \ water in China under future climate scenarios. Sci Total Environ \n656:373–387.\
    \ https:// doi. org/ 10. 1016/j. scito tenv. 2018. 11. 362\nZhao G, Gao H, Kao\
    \ S-C (2021a) The implications of future climate change on the blue water footprint\
    \ \nof hydropower in the contiguous US*. Environ Res Lett 16(3):034003. https://\
    \ doi. org/ 10. 1088/ 1748- \n9326/ abd78d\nZhao Y et al (2021b) Future precipitation,\
    \ hydrology and hydropower generation in the Yalong River Basin: Pro-\njections\
    \ and analysis. J Hydrol 602:126738. https:// doi. org/ 10. 1016/j. jhydr ol.\
    \ 2021. 126738\nZhao Y et al (2022) Projection of climate change impacts on hydropower\
    \ in the source region of the Yangtze \nRiver based on CMIP6. J Hydrol 606:127453.\
    \ https:// doi. org/ 10. 1016/j. jhydr ol. 2022. 127453\nZhong R et al (2019)\
    \ Hydropower change of the water tower of Asia in 21st century: A case of the\
    \ Lancang \nRiver hydropower base, upper Mekong. Energy 179:685–696. https://\
    \ doi. org/ 10. 1016/j. energy. 2019. 05. \n059\nZhong R, Zhao T, Chen X (2021)\
    \ Evaluating the tradeoff between hydropower benefit and ecological inter-\nest\
    \ under climate change: How will the water-energy-ecosystem nexus evolve in the\
    \ upper Mekong \nbasin? Energy 237:121518. https:// doi. org/ 10. 1016/j. energy.\
    \ 2021. 121518\nZhong W et al (2020) Future hydropower generation prediction of\
    \ large-scale reservoirs in the upper Yang-\ntze River basin under climate change.\
    \ J Hydrol 588:125013. https:// doi. org/ 10. 1016/j. jhydr ol. 2020. \n125013\n\
    Zhou T et al (2017) Impact of future climate change on regional crop water requirement\
    \ a case study of Hetao Irri-\ngation District. China. Water 9(6):429. https://\
    \ doi. org/ 10. 3390/ w9060 429\nZhou Y et al (2019) Managing water resources\
    \ from the energy - water nexus perspective under a chang-\ning climate: A case\
    \ study of Jiangsu province, China. Energy Policy 126:380–390. https:// doi. org/\
    \ 10. \n1016/j. enpol. 2018. 11. 035\nZolghadr-Asti B, Bozorg-Haddad O, Chu X\
    \ (2019) Effects of the uncertainties of climate change on the \nperformance of\
    \ hydropower systems. J Water Clim Change 10(3):591–609. https:// doi. org/ 10.\
    \ 2166/ \nwcc. 2018. 120\nPublisher’s Note Springer Nature remains neutral with\
    \ regard to jurisdictional claims in published maps and \ninstitutional affiliations.\n"
  inline_citation: '>'
  journal: Water resources management
  limitations: '>'
  pdf_link: https://link.springer.com/content/pdf/10.1007/s11269-023-03659-x.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: A Systematic Review of Methods for Investigating Climate Change Impacts on
    Water-Energy-Food Nexus
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.21203/rs.3.rs-2898962/v1
  analysis: '>'
  authors:
  - Shayesteh Tabatabaei
  citation_count: 0
  full_citation: '>'
  full_text: '>

    Page 1/32

    A Novel Method for Energy E¨ciency in Internet of

    Thing (IoT) through Fuzzy Logic and Genetic-

    Algorithm-Based Clustering applied for Agriculture

    Monitoring

    Shayesteh Tabatabaei  (  shtabatabaey@yahoo.com )

    Saravan Higher Education Complex: Higher Education Complex of Saravan https://orcid.org/0000-

    0001-5513-6165

    Research Article

    Keywords: Clustering, Internet of Things (IoT), Wireless Sensor Networks (WSNs),
    Genetic Algorithm,

    Fuzzy logic

    Posted Date: August 8th, 2023

    DOI: https://doi.org/10.21203/rs.3.rs-2898962/v1

    License:   This work is licensed under a Creative Commons Attribution 4.0 International
    License.  

    Read Full License

    Page 2/32

    Abstract

    Over the past few decades, research on the Internet of Things (IoT) has advanced
    quickly thanks to recent

    advancements in wireless communication technologies. IoT is evolving into a large-scale,
    all-

    encompassing network that will be extensively used in environmental monitoring,
    agriculture, and other

    ¦elds. Wireless Sensor Networks (WSNs) serve as the IoT systems'' primary monitoring
    infrastructure.

    WSNs could be used to monitor the conditions in an agricultural ¦eld, including
    temperature, humidity,

    light, carbon dioxide, soil moisture, and acidity. These factors have a crucial
    role in the development,

    excellence, and yield of crops. In order to gather crucial data, numerous sensor
    devices are placed in

    agricultural land. The ability of sensor nodes to conserve energy is thought to
    be crucial for extending the

    lifespan of WSNs. Innovative, effective, and cost-effective solutions should be
    devised to provide

    reasonable energy consumption and maximize the lifespan of WSNs for agricultural.
    In routing

    operations, clustering is recognized as a well-known strategy. In this paper,
    a novel energy-e¨cient

    approach based on genetic algorithms and fuzzy logic is suggested to increase
    network lifetime. The

    proposed technique use an integrated clustering structure to reduce the distances
    between sensor nodes

    where data must be transmitted. The results of OPNET''s simulations showed that
    the suggested system

    performs better than the IEEE 802.15.4 protocol in terms of energy usage and WSN
    lifetime.

    1. Introduction

    The Internet of Things (IoT) is a new technology that has been creatively combining
    sensing,

    communication, and the Internet in recent years [1]. The Internet of Things (IoT)
    has started to play a

    signi¦cant role in daily life, expanding our perceptions and enabling us to change
    our surroundings.

    Agriculture, environmental monitoring, home automation, industrial automation,
    and transportation

    systems are just a few of the many applications that IoT is still being used for
    [2]. IoTs are especially

    used in the agro-industrial and environmental industries for both control and
    diagnostic purposes.

    Additionally, it can inform the consumer about the product''s history and characteristics
    [3]. The IoT''s

    primary physical monitoring infrastructure is comprised on wireless sensor networks
    (WSN). WSN is a

    popular choice and is utilized in precision agriculture for farmland monitoring
    in the new IoT era. WSNs

    hold great promise for application programs that need the collection of data from
    sensor nodes in far-

    §ung, inhospitable areas.

    In order to gather crucial data including temperature, humidity, light, carbon
    dioxide, soil moisture, and

    acidity, a variety of sensor devices are placed in agricultural land. The agriculture
    farm house contains

    these sensor nodes, which are placed manually or at random. They gather meteorological
    data and

    transmit it to the gateway node. The user or agriculture professional will then
    receive this data over the

    public channel from the gateway node. The farmer makes a decision and takes the
    necessary action with

    regard to the agricultural farmhouse based on the environmental information they
    have obtained [4].

    New di¨culties have arisen as a result of the data volume, resource constraints,
    and scattered nature of

    wireless receiving networks. The paradigm of data transfers in application programs
    should guarantee

    Page 3/32

    energy e¨ciency because communicating with a sensor node is frequently expensive.
    Clustering sensor

    nodes is a noteworthy energy-saving method [5, 6]. As part of the clustering process,
    sensor nodes are

    grouped together into various clusters, each of which has a coordinator known
    as the cluster head and

    other nodes known as the cluster members. There should only be one cluster for
    each sensor node. Data

    is sent from sensor nodes to the relevant cluster heads. The data are then gathered
    by the cluster heads

    and sent through one-hop or multiple-hop communications to a base station, or
    sink. The cluster-based

    data routing to the base station is depicted in Fig. 1. Every cluster has a single
    node designated as CH.

    CH is in charge of gathering information from the cluster''s nodes. After that,
    it compiles all of the data

    into a single data packet and sends it to the base station or sink.

    IoTs were used in farming to increase crop yields, enhance crop quality, and cut
    expenses. WSNs are the

    primary monitoring infrastructure for IoT installations. Energy consumption and
    network lifetime, which

    are common concerns for almost any WSN application, are the main constraints of
    WSNs in IoT

    networks. Node placement, network overage, clustering, data aggregation, and routing
    are typically

    included in the operational stages of WSNs [7]. Energy saving is regarded as a
    major feature of sensor

    nodes for enhancing the lifetime of WSNs. To resolve this issue, clustering models
    are used to provide

    reasonable energy consumption and optimizing the lifetime of WSNs [8].

    In this research, we concentrated on one of these IoT applications, precision
    agriculture, and suggested a

    brand-new clustering-based energy-aware routing algorithm for WSNs. All of the
    sensor nodes have been

    grouped into distinct clusters using this technique. All sensor nodes are taken
    into account for choosing

    cluster heads based on the energy level and workload they can handle using genetic
    algorithms and

    fuzzy logic. Nodes join the cluster head using their distances from the cluster
    head in order to create

    clusters. All of the cluster heads have created a sink as the root of the directed
    virtual backbone (DVB),

    which helps with routing. By navigating and directing data packets to the next
    cluster head hop, each

    cluster head balances its own energy consumption throughout data routing.

    2. Related works

    Installing a WSN in the ¦eld has increased the effectiveness and e¨ciency of the
    farmers in optimizing

    agriculture [9]. It can be used to assess ¦eld variables like soil quality, weather,
    and plant biomass.

    Additionally, it can be used to monitor and manage factors like temperature, humidity,
    vibrations, and

    shocks while a product is being transported [10]. It is impractical to replace
    sensor node batteries after

    they have totally discharged in a large-scale WSN. Therefore, lowering these nodes''
    energy consumption

    is essential to lengthening network lifetime [11]. An approach that is frequently
    used to help sensor nodes

    save energy is clustering. Numerous clustering algorithms exist to reduce energy
    consumption in WSNs.

    [12] presented a clustering structure based on cellular topology. Additionally,
    a framework called a time

    gap was used to specify how plans should be carried out so that nodes within a
    cluster can transmit data

    to one another without any issues. There were numerous dynamic factors at work,
    not just energy. Each

    cluster''s cluster head is a dynamic factor, it''s true. This cluster head is
    aware of the energy of all the

    nodes within its cluster. A node enters the off state when there is no data to
    be broadcast. Because

    Page 4/32

    mobile factors are expensive, cellular technology was used, and each mobile factor
    probes multiple

    clusters.

    In [13], a routing technique with dynamic structure and static clustering was
    suggested. The proper

    method of cluster formation, which aids in the most e¨cient use of energy, was
    discussed in this study.

    Each node in this method provides the sink with information about its location
    via a low-cost GPS device;

    as a result, the sink assumes that node to be a member of one of the assumed clusters
    based on the

    position and location of the virtual point. The message containing the coordinates
    and remaining energy

    of the source node is sent to other cluster heads during the route identi¦cation
    phase. Each cluster head

    checks its distance from the transmitting cluster head as soon as it receives
    the message to determine

    whether it is closer to the sending cluster head or the transmitting cluster head
    is closer to the sink. The

    routing is done in this manner, and the relay node is chosen. In order to study
    the communication among

    sensor nodes on a §at level, a new protocol called VIBE was proposed in [14].
    A work session will start

    once a sensor node has data to send to the sink. To cut down on hop counts and
    routing time for data

    transmission, clustering was incorporated into this algorithm. As a result, a
    two-level communication was

    established where the nodes can choose to join a cluster or remain as a single
    member. In [15], a tree-

    based method was presented that was created speci¦cally for sensor networks. Each
    sensor node in this

    algorithm has some knowledge of the sink and the other sensor nodes. Information
    is communicated

    between all nodes after the tree has been formed. The nearest node receives information
    on the sink''s

    position and movement, which is also shared by the other nodes. The goal of this
    technique was to build

    all the spanning trees necessary to identify the ideal solution space. Within
    each cluster, an effective

    method for choosing the cluster head was put forth in [16]. Cluster heads are
    chosen at random in order

    for this strategy to operate. Normal nodes send a join message to request membership.
    They also send

    the cluster head how much energy they still have. The temporary cluster head then
    acquires the network''s

    remaining energy based on the nodes'' remaining energy. The node with the most
    energy is chosen as the

    cluster head if the network''s remaining energy is more than x%. Otherwise, the
    new cluster head will be

    chosen from among the nodes with the most neighbours. The new cluster head then
    noti¦es the nodes

    that it is the cluster head through an ack message. In [17], an unbalanced clustering
    protocol based on

    ant colony optimisation and fuzzy logic, as well as routing and interlayer combined
    ANC, were presented

    for WSNs. Multiple nodes of this algorithm, known as FAMACROW, transmit the sensed
    data from the

    environment to the base station. For choosing the cluster head, it makes use of
    fuzzy logic and variables

    like the amount of energy left, the number of nearby nodes, and the calibre of
    the communication link.

    This approach uses unbalanced clustering, in which clusters closer to the base
    station are smaller than

    clusters farther away, to avoid the hot spot issue. ASLPR, a routing protocol
    that optimised energy usage

    and was created for certain applications, was proposed in [18]. This method considers
    the following

    factors for choosing the best cluster head: the distance from the base station,
    the remaining energy, and

    the distance between the cluster heads. Although complex, this routing protocol
    has some variables that

    can be changed. For the purpose of resolving the aforementioned problems, a unique
    lightweight energy-

    aware clustering method for WSNs was developed in [19]. They concentrated on clustering
    sensor nodes

    as a means for extending the lifetime of WSNs. We also reduced energy consumption
    by grouping sensor

    Page 5/32

    nodes into clusters using the LPO algorithm. This algorithm chooses the best nodes
    as the cluster heads

    based on two factors: battery power level and distance from the sink. The suggested
    approach improved

    network longevity while reducing average delay, input packet, and power usage.

    In [20], a TOPSIS-based energy-e¨cient clustering technique for WSNs that may
    group network nodes

    according to their energy levels was presented. Using the factors of energy level,
    neighbourhood, distance

    to the washbasin, and conducted workload, this protocol creates clusters with
    balanced energy. An

    energy-e¨cient approach based on fuzzy logic and reinforcement learning for increasing
    network lifetime

    in IoT was described in [21]. Based on the remaining energies of the nodes on
    the routes, the available

    bandwidth, and the distance to the sink, fuzzy logic and reinforcement learning
    are developed. In terms of

    network lifetime, the simulations of this method conducted by OPNET showed that
    it outperformed fuzzy

    logic and IEEE802.15.4. A plan based on the partnership of an integrated system
    for automated irrigation

    management in agriculture and the advantageous novel routing protocol for Wireless
    Sensor Networks

    (WSNs), called ECHERP, was introduced in [22]. The suggested system''s primary
    goal is the automated,

    effective management of water delivery in planted ¦elds. The technology uses previous
    data and

    changes in climate parameters to determine how much water is required for irrigation.
    More frequent data

    collection is suggested to reduce the requirement for water in situations where
    the change in the values

    gathered has exceeded a threshold. In contrast, the time interval for data collection
    can be extended to

    preserve sensor energy and extend sensor lifetime when the change in readings
    is below a predetermined

    threshold. The algorithm''s simulations demonstrate how ECHERP increased network
    longevity. A low-cost

    WSN-based server system for monitoring the agricultural environment was released
    in [23]. In this study, a

    UAV is used to quickly travel great distances while retrieving data from ground
    nodes. The UAV can also

    be utilised to carry out tasks and gather extra data. Its lofty elevation enables
    ¦eld observation from a

    vantage point that is important for seeing changes that may impact crops, such
    as pests, diseases,

    substantial changes in soil moisture, droughts, or §oods. According to the energy
    level of the network

    nodes and their distance from the sink, a mobile sink and bacterial foraging algorithm-based
    clustering

    method for wireless sensor networks was suggested in [24]. To communicate with
    the sink, nodes use a

    multi-step routing method within the network. The mobile sink is also utilised
    to balance the load and

    contribute to network-wide energy consumption that is consistent. The proposed
    solution outperforms

    AFSRP (Arti¦cial Fish Swarm Routing Protocol) according to simulation results.

    In order to maximise network longevity and scalability by taking into consideration
    effective parameters

    for picking the cluster head and parent node, the leaping frog method is utilised
    in the study [25] in WSN

    networks. Based on the fuzzy output, energy threshold (i.e., a control parameter),
    the overlap rate of

    nearby CHs, and the candidate nodes, the CH is selected from the list of nodes.
    The number of CHs in the

    network is determined before the parent selection step of the proposed protocol
    begins. Based on the

    application''s maximum fuzzy output, the parents of each CH are identi¦ed at the
    end of this step. In a

    stable phase, the CHs'' information is ¦nally forwarded to the BS by their parents.
    The outcomes of the

    simulation demonstrate the energy e¨ciency of the suggested approach, which controls
    node energy

    consumption utilising frog jump, the Fuzzy Inference System rule table, and ¦ve
    control parameters. A

    drawback of this approach is the high processing cost of the leaping frog algorithm
    and fuzzy logic. For

    Page 6/32

    data transfer in a heterogeneous sensor environment, a dependable routing strategy
    based on new delay

    energy is suggested in the work [26]. The suggested technique achieves a good
    balance between energy

    consumption and end-to-end latency by picking the next node with the least amount
    of energy during the

    long-distance data transfer phase and supplying a proper load balance in the network.
    This approach

    decreases end-to-end delivery delays, addresses the hotspot issue in mobile hierarchical
    routing

    protocols, and minimises grid energy usage. Additionally, by choosing multiple
    agent nodes and

    gathering data during the data transfer phase, it increases the percentage of
    data packets that are

    successfully received in the sink.

    In the paper [27], which addresses the issue of energy e¨ciency in wireless sensor
    networks, the arti¦cial

    ¦sh swarm optimisation technique (AFSA) for clustering WSNs is proposed. This
    approach, which is

    based on the social behaviour of ¦sh, solves optimisation issues because of its
    rapid convergence, lack

    of sensitivity to arti¦cial ¦sh beginning values, adaptability, and mistake tolerance.
    The suggested

    protocol was examined using the OPNET 11.5 simulator and contrasted with the ERA
    protocol. The

    outcomes of the simulation demonstrated that the proposed protocol performed better
    than the ERA

    protocol and might lengthen network lifetime. In order to slow the degradation
    of IoT device reliability and

    increase network Mean Time to Failure (MTTF), paper [28] suggested an adaptive
    and distributed

    reliability-aware routing protocol based on reinforcement learning. This approach
    uses a communication

    line to cut down on tra¨c and high-quality, stable links to cut down on retransmissions.
    Metrics for

    predicted transmission count and reliability are included in the reinforcement
    learning formulation. The

    routing policy gains knowledge from earlier routing choices at runtime. The suggested
    approach can

    make IoT networks last longer and offers a routing strategy that speci¦cally solves
    the reliability

    degradation issue. When compared to AODV, AODV-ETX, and Q-AODV methods in this
    paper, the authors

    showed improved network MTTF by extending the AODV protocol with a Q-learning
    algorithm. The

    ¦ndings indicate improved dependability for different transmission data rates.

    The research [29] makes the suggestion of an enhanced multi attribute-based attack
    resistance (EMBTR)

    algorithm to carry out the routing process safely based on the trusted values
    of nodes. A node''s

    trustworthiness is assessed using the suggested model based on the reliable value
    obtained for each

    node in the network. The suggested approach maintains a speci¦c threshold value
    at each node to

    protect the network environment. By using QoS factors like stability rate, dependability
    rate, and elapsed

    duration, this technique creates secure routing. The stability rate of each node
    is assessed to identify

    which nodes will participate in the routing process in order to achieve secure
    routing. Each

    communication node''s reliability rate is examined to assess its dependability,
    and the best path is

    selected from among all feasible short cuts based on the amount of time that has
    passed. The

    simulation results demonstrate that the suggested strategy achieves a high detection
    rate for malicious

    nodes in the network while also enhancing network performance in terms of energy,
    computing time, and

    throughput.

    In this research, we suggested a fuzzy logic- and genetic-based clustering technique.
    The following

    discussion will cover this approach, which was designed to cluster in sensor networks.
    The IEEE 802.15.4

    Page 7/32

    scenario, which has recently been utilised as a communication standard for low-power,
    inexpensive, and

    low-rate WSNs, was simulated and used to test the suggested technique. IEEE 802.15.4
    is widely

    applicable for a variety of applications. It is quite adaptable, and its parameters
    can be changed. This

    protocol can allow real-time applications by utilising Guaranteed Time Slot (GTS).
    In fact, this capability

    is suitable for time-sensitive WSN applications.

    3. The proposed method

    3.1. Cluster formation phase

    It should be mentioned that integrated algorithms in WSNs help the network use
    optimisation techniques,

    and the parameters of these algorithms can be changed adaptively while they are
    running. As a result, it

    was considered that the base station is where the cluster head determination activities
    take place in this

    study. As a powerful processor with limitless energy, the base station or sink
    can classify and arrange the

    network nodes within balanced clusters in terms of the total energy consumed and
    the volume of

    performed workload using genetic algorithms and fuzzy logic after receiving information
    about the

    position and energy of the network nodes. The goal is to spread the network''s
    structure, which is made up

    of a number of nodes and cluster heads, in a way that reduces overall energy usage.

    3.2. Permanent-state phase

    TDMA scheduling is used by the nodes to identify the cluster heads and send data
    to associated cluster

    heads when clusters have formed. The cluster heads produce this scheduling plan,
    which is then sent to

    the nodes. A round is one execution of the cluster formation phase and the permanent
    state. Clustering

    activities are repeated at the conclusion of each round, and fresh nodes are chosen
    to serve as the cluster

    head. The proposed algorithm''s speci¦cs are shown below.

    As previously noted, it was presumpted that the base station or the washbasin
    would house all clustering

    processes. The network as a whole is then informed of its outcome. The programme
    at the base station

    is given an advance count of the necessary cluster heads. In other words, the
    length of the chromosome

    is calculated. Each gene on this chromosome serves as the identi¦cation number
    for a number of

    network nodes whose energies are higher than the network''s average and who have
    also only sent sparse

    amounts of data. The base station is aware of the energy level of every network
    node, which is

    signi¦cant. The amount of data transmitted and the network''s average energy can
    thus be measured

    using fuzzy logic. Eq. (1) de¦nes the chromosome''s structure as follows:

    Chrom = {gi│ i = 1,2,...,L} (1)

    where L denotes the length of chromosome and gi refers to the ith gene of the
    chromosome. For each

    chromosome in this study, actual and continuous coding was applied. As a result,
    Eq. (2) can be used to

    de¦ne the space of genes:

    Page 8/32

    Gi = RE*D*ID; ID = 1,2,… ,30 (2)

    Where ID stands for the identity of the sensor node, RE for the node''s remaining
    energy, and D for the

    volume of data that the node has processed. The algorithm runs through the following
    stages:

    Where ID stands for the identity of the sensor node, RE for the node''s remaining
    energy, and D for the

    volume of data that the node has processed. The algorithm runs through the following
    stages:

    1. Random generation of the initial population: In this phase, a population of
    N chromosomes with the

    same number of genes as cluster heads is generated at random. Figure (2) shows
    a chromosomal

    image that includes genes with the ID of sensor nodes. The cluster head is chosen
    at random by this

    chromosome from among network nodes with the IDs of 2, 5, 15, 19, and 26, as seen
    in the image.

    Five of the chromosome''s nodes are randomly chosen to serve as the genes since
    we wish to have

    ¦ve cluster heads.

    2. Setting fuzzy membership function: Fuzzy logic, as it is described below, was
    utilised to de¦ne the

    ¦tness value of genes.

    Cluster heads were chosen based on the two parameters of the battery''s remaining
    capacity and the

    workload. These two standards serve as the fuzzy input for the fuzzy system. The
    degree of ¦tness of

    genes is assessed using the fuzzy logic process to choose cluster heads in the
    sensor network. As seen in

    ¦gure (3), this mechanism functions as an adaptive fuzzy controller.

    There are three primary steps in applying fuzzy control to this system, as indicated
    in ¦gure (3). Real

    inputs were transformed into the proper fuzzy sets for use by the inference engine
    during the fuzzi¦cation

    stage. The amount of workload being completed and the battery power of the node
    are two

    characteristics that the suggested model considers to be the fuzzy system input.
    Three fuzzy sets are

    de¦ned for each of the input variables (H stands for the high limit, M for the
    medium limit, and L for the

    low limit), and these are shown in ¦gures (4) and (5). Because trapezoidal membership
    functions are

    precise and accurate, we use them. Five fuzzy sets with triangular membership
    functions were employed

    to determine the output, or the degree of the node''s ¦tness (where VH stands
    for very high limit, H for high

    limit, M for middle limit, L for low limit, and VL for very low limit).

    The load density and battery energy level of the node''s battery are the characteristics
    that are taken into

    consideration at the fuzzy inference engine stage, where fuzzy rules are utilised
    to measure the ¦tness

    value of genes. Each fuzzy rule includes two parts: an introduction that begins
    with the statement "if load

    density is low and the energy level of the node''s battery is high" and a conclusion
    that states "then, the

    degree of ¦tness allocated to the gene will be very high." The fuzzy inference
    engine was regarded as

    Mamdani minimum in the suggested approach. 

    Three fuzzy sets are de¦ned for each of the two input parameters, yielding the
    9 fuzzy rules shown in

    table (1):

    Page 9/32

    Table (1). Database of fuzzy rules

    Number

    Inputs

    Outputs

    Load density

    Power of battery

    Fitness

    1

    L

    L

    M

    2

    L

    M

    L

    3

    L

    H

    VH

    4

    M

    L

    L

    5

    M

    M

    M

    6

    M

    H

    H

    7

    H

    L

    VL

    8

    H

    M

    L

    9

    H

    H

    M

    The defuzzi¦cation stage is used to convert fuzzy output into a numerical value
    once the mean of the

    centres has been defuzzed. Equation (3) is used to quantify this. 

    The parameters of this equation are the following: I indicates the index of the
    route; m denotes the

    number of fuzzy rules (here, it is 9); and n refers to the number of membership
    functions of the input

    variables (here, it is 2).  indicates the fuzzy value of membership functions
    and refers to the output

    centers. 

    4. Using the ¦tness function to assess the quality of responses: Equation (3)
    is used to assess the

    ¦tness of each gene present on a chromosome in the genetic population. 

    5. Choosing parents based on their traits: 40% of the chromosomes with the highest
    ¦tness are chosen

    to generate a new population (a chromosome''s ¦tness is equal to the average ¦tness
    of its

    accessible genes). Then, the subsequent actions are taken to ¦nish the new population.

    ½. Crossover operation: The parent chromosome pair is chopped in a crisscross
    pattern from the

    created point using a random number that falls within the range of the chromosome
    length (0 to 5).

    The ¦rst portion of the cut point is chosen from the ¦rst parent, and the second
    portion is chosen

    from the second parent, as shown in ¦gure (7). The kids are born in this manner.
     

    Page 10/32

    7. Mutation operation: With a 0.8 chance, the mutation operation is completed;
    thus, a random value

    between [0] and [1] is generated. The mutation operation will be executed if the
    resulting value is

    more than or equal to 0.8, otherwise it won''t. If not, the mutation is not carried
    out. Two random

    integers between 0 and 5 chromosomal lengths are generated and used as the array
    index to the

    chromosome in order to perform the mutation procedure. The two generated random
    values are used

    to replace the placements of the two cells. The third and ¦fth cells'' values
    are changed, as seen in

    ¦gure (8).

    ¾. Replacing a new generation with  the old generation: in this stage, the new
    children are placed in a

    new population. 

    9. Investigating the termination condition of the algorithm: The algorithm will
    end and return the best

    solution in the current population if the ¦nal condition is satis¦ed, or if it
    is the 100th round of

    execution (the 100th round of algorithm execution was treated as the termination
    condition). If the

    termination condition is not satis¦ed, it will proceed to the stage measuring
    the quality of the reply

    using the ¦tness function, and the stages above will be repeated. 

    Once the cluster heads have been identi¦ed, they send an advertisement message
    to anyone nearby. Each

    normal node chooses the closest cluster head based on its proximity to the cluster
    heads as soon as it

    receives this message. It then sends the cluster head the join message and the
    amount of energy it has

    left. Clusters are created in this manner by choosing cluster members.

    4.3. Simulation environment 

    We used the simulation programme OpnetModeler version 11.5 [30] in this paper
    to model the suggested

    technique and compare it to IEEE 802.15.4. In table (2), the simulation parameters
    are listed. The

    suggested method took into account two scenarios and a network topology of 50
    nodes, as shown in

    ¦gure (10). The IEEE 802.15.4 protocol, a common and highly §exible protocol with
    a low data rate, low

    energy consumption, and cheap construction cost, was used in the ¦rst scenario
    to distribute sensor

    nodes in a WSN at random. Applications requiring real-time performance can use
    this protocol [31]. The

    proposed technology (a genetic algorithm and fuzzy logic) is applied to cluster
    the environment in the

    second scenario''s randomly distributed sensor nodes. For both instances, it was
    assumed that the

    topology was the same. Later in the study, the simulation results pertaining to
    these scenarios are

    discussed. A view of the node editor for the suggested scenarios is shown in Figure
    (11). The building

    blocks of a sensor node are depicted in this picture from a hardware standpoint.
    Additionally, ¦gure (12)

    displays the simulated model''s processing model for the MAC layer.

    Table (2). Simulation parameters

    Page 11/32

    Parameter

    Value

    Number of nodes

    50

    Simulation environment

    100m*100m

    Radio transmission range

    250m

    Packet size

    1024bit

    Transmission type

    Constant

    Simulation time

    100 sec

    MAC layer

    802.15.4

    The amount of initial energy

    200-450 Jul

    4. Simulation results

    Figure (13), which contrasts the network''s average energy usage for the scenarios
    using the proposed

    technique and the IEEE 802.15.4 protocol, shows the results. In this diagram,
    the horizontal axis

    represents simulation time and the vertical axis represents energy consumption.
    Due to the fact that

    network sub-nodes do not operate intentionally and knowingly, it is anticipated
    that the IEEE 802.15.4

    protocol will consume the most energy. In other words, regardless of the nodes''
    energy state, they transfer

    the data they have collected to the sink node. However, the proposed method uses
    those nodes for data

    transmission that has high energy and low workload thanks to clustering through
    fuzzy logic and the

    genetic algorithm. Additionally, since member nodes join the cluster head based
    on how far away they are

    from it, data transmission from member nodes to the cluster head will consume
    very little energy.

    Additionally, ¦gure (14) compares the end-to-end delay scenarios for the proposed
    algorithm and those

    for IEEE 802.15.4. Because some network nodes may transmit some data but be unable
    to send the

    remaining data due to a lack of energy, we saw that end-to-end delay increased
    in the IEEE 802.15.4

    protocol scenario. Consequently, it might be unable to ¦nish data transmission.
    The end-to-end delay is

    reduced in the proposed protocol because cluster heads are chosen from nodes with
    greater energy and

    cluster members join the cluster head based on their distances.

    Moreover, the scenario comparison between the proposed algorithm and IEEE 802.15.4
    for the media-

    access delay is shown in the following ¦gure. It was observed that in the IEEE
    802.15.4 protocol scenario,

    the delay of multimedia ¦les grows; speci¦cally, in video transmission, congestion
    grows due to high data

    generation rate and the explosive characteristic in IEEE 802.15.4. However, the
    end-to-end delay is

    reduced in the proposed protocol because the cluster heads are chosen from the
    nodes with more energy.

    Additionally, the data packet error rate for the scenarios of the suggested algorithm
    and the scenarios of

    the IEEE 802.15.4 protocol are compared in the following ¦gure. The IEEE 802.15.4
    protocol was found to

    have a greater packet error rate than the suggested protocol; this is explained
    by the fact that the IEEE

    Page 12/32

    802.15.4 protocol''s information signal is noisy as a result of congestion. It
    is therefore received

    incorrectly. In contrast, the proposed protocol has a low packet error rate because
    it chooses secure and

    safe paths, including high-energy nodes. As a result, there is a higher chance
    that the data will reach the

    sink successfully.

    The throughput rate is shown in the following graph. The vertical axis represents
    the quantity of delivered

    packets over time (throughput), and the horizontal axis represents the simulation
    time.

    The number of successfully delivered packets to the sink in IEEE 802.15.4 is lower
    than those in the

    proposed protocol, as seen in this ¦gure because of congestion and the possible
    shutdown of nodes.

    However, the proposed protocol forms clusters by choosing high-energy nodes, and
    sustainable routes

    are found. As a result, it is ensured that the route will be viable at least until
    the end of the data

    transmission phase and that the nodes'' energies won''t run out quickly. As a
    result, the suggested protocol

    maintains a viable path throughout the data transmission phase. Therefore, compared
    to IEEE 802.15.4,

    more data packets are delivered to the sink node using the proposed method.

    The rate of packet loss is seen in the following graph. The vertical axis represents
    the packet loss rate,

    and the horizontal axis represents the simulation time. It should be mentioned
    that IEEE 802.15.4 uses

    low-energy nodes for sending energy; these nodes shut down when their energies
    are used up during data

    transmission. As a result, the proposed protocol has a lower packet loss rate
    than IEEE 802.15.4. Or, to

    put it another way, IEEE 802.15.4 is unable to send all of the data packets to
    the sink because it loses

    more of them.

    In addition, the signal to noise ratios for the IEEE 802.15.4 and the suggested
    protocol scenarios were

    contrasted, as shown in the accompanying image.

    The horizontal axis in this graph represents simulation time, and the vertical
    axis represents the signal to

    noise ratio. Importantly, IEEE 802.15.4 transmits data via unreliable routes,
    and the percentage of bits

    with errors increases over time. The signal to noise ratio falls as a result.
    The signal of data transmitted

    by IEEE 802.15.4 may also vanish as a result of tra¨c and confusion, which increases
    the likelihood of

    noise. The quality of transmitted data (text, data, or multimedia) suffers as
    a result.

    Comparing and contrasting the proposed method with IEEE 802.15.4 is shown in Table 3:

    Table (3). similarities and differences between IEEE 802.15.4 and the proposed
    approach 

    Page 13/32

    Parameter

    IEEE 802.15.4

    Fuzzy Logic and Genetic-Algorithm-Based

    Clustering

    Implemented

    Simulation/hardware

    Simulation

    Power consumption

    < 30mA

    < 10mA

    Max data

    rate(Mbit/S)

    0.25

    0.72

    Packet length

    1024bit

    1024bit

    Bit time(µS)

    4

    1.38

    Coding E¨ciency(%)

    76.52

    98.94

    Frequency band

    24GH

    24GH

    Modeling and

    simulation

    Simple

    Simple

    Security

    High

    High

    Number of channels

    16

    16

    Compatibility

    not portable

    not portable

    Scalability

    Supports large number of

    nodes

    Supports large number of nodes

    Range

    100m

    100m

    Network Topology

    Star, Mesh and cluster Tree

    Star, Mesh and cluster Tree

    5. Conclusion

    For extending the lifespan of WSNs, supplying suitable energy consumption, and
    optimising WSN lifetime

    for agriculture, energy saving is recognised as a crucial characteristic of sensor
    nodes. In order to cluster

    sensor networks, this research suggests a novel approach that combines fuzzy logic
    and genetic

    algorithms. The uniqueness of this research is the use of a revolutionary genetic
    algorithm-based

    method, along with fuzzy logic approaches, to choose a cluster head in the Internet
    of Things

    dynamically. As a result, choosing the cluster head and identifying the node with
    the highest energy are

    faster and more precise processes. However, we are able to achieve balanced clustering
    and thus

    lengthen network lifetime by employing a two-phase CH selection method with a
    fuzzy system identifying

    the best candidates and GA further selecting the best among them. The suggested
    approach distributes

    the expended energy among balanced clusters after being divided into them. The
    primary population

    gathers input data at random for the genetic algorithm, which is nature-inspired.
    Additionally, the genetic

    algorithm is a nonlinear optimisation technique that, because of its effectiveness
    in large-scale

    Page 14/32

    applications, is a relatively better choice. The ¦nal formula can also be changed
    by the operators. The

    ¦nal product, which is produced once the generating process is complete, provides
    the best ¦x for the

    primary issue. Crossover, scoring, selection, and mutation functions are generally
    included in all the

    advances brought about by the generation process. The process by which two distinct
    chromosomes

    marry to create a new generation is referred to as crossover. This function is
    productive and occurs at a

    certain rate. Here, one aspect of the many crossover techniques is emphasised.
    However, a genetic

    algorithm''s most crucial component is scoring or assigning ¦tness, which makes
    use of fuzzy logic. The

    literature has concentrated on developing an intelligent ¦tness function that
    uses fuzzy logic to

    distinguish amongst quali¦ed individuals. Using a mutation strategy that permits
    particular

    chromosomes to enter the new generation, the selection process adopts superior
    chromosomes in order

    to produce a new population. Due to the stochastic nature of the genetic algorithm,
    numerous solutions

    with differing performances are discovered in various iterations of the algorithm
    [26].

    The suggested method for WSNs was supplied and explored in great detail. In this
    study, the suggested

    protocol and IEEE 802.15.4 were simulated using OPNET software. We also looked
    into important service

    quality metrics for these two protocols, including throughput rate, energy consumption,
    delay, signal to

    noise ratio, and packet loss rate.

    The idea of "data transmission between nodes by clustering" is used in this research
    to choose the best

    nodes for transmitting data ¦les. As was mentioned above, the IEEE 802.15.4 protocol
    can be optimised

    for e¨ciency by applying genetic algorithms and fuzzy logic for clustering and
    choosing cluster heads.

    Due to a genetic algorithm used in the suggested protocol, which performs parallel
    processing and has a

    quick convergence rate, the learning rate is increased. The suggested protocol
    is also more likely to reach

    the global optimal point because of the rivalry for responses and the selection
    of the best nodes from the

    population. Fuzzy logic can also be used in imprecise environments due to its
    accuracy and precision,

    which enhances the performance precision of the ¦tness function of the genetic
    algorithm in choosing

    the best cluster heads based on the workload and remaining energy of the sensor
    nodes. In order to

    compare the e¨ciency of the proposed protocol and IEEE 802.15.4, the following
    parameters were

    simulated in OPNET11.5 and compared: multimedia delay, end-to-end delay, link
    reliability, signal-to-noise

    ratio, throughput rate, packet loss rate, packet error rate, and energy consumption.
    In general, it is possible

    to maintain that the proposed protocol performed better than IEEE 802.15.4. When
    compared to IEEE

    802.15.4, the proposed protocol could more effectively increase the e¨ciency of
    the entire network,

    packet delivery reliability, and network throughput rate because it chooses more
    energy-e¨cient routes.

    Fuzzy logic''s high processing costs and grouping based on genetic algorithms
    are two drawbacks of this

    approach. The reduction in processing costs for the fuzzy approach-based model
    depends on how many

    fuzzy rules are utilised in the resolution. A longer execution time is implied
    by an increase in this quantity

    since it broadens the scope of the solution exploration. Furthermore, careful
    selection of the GA

    parameters, which differ between systems, is required when using a genetic algorithm
    to reduce

    processing costs. As a result, it is challenging to decrease the processing time
    and execution time for the

    approaches given.

    Page 15/32

    Declarations

    Funding This study has received no funding from any organizations.

    Availability of Data and Materials The data that support the ¦ndings of this study
    are available from the

    corresponding author upon reasonable request.

    Con§ict of interests All of the authors declare that they have no con§ict of interests.

    Ethical Approval This article does not contain any studies with human participants
    or animals performed

    by any of the authors.

    Consent to Participate This article does not contain any studies with human participants
    or animals

    performed by any of the authors.

    Consent for Publication This article does not contain any studies with human participants
    or animals

    performed by any of the authors.

    Code availability All code for data analysis associated with the current submission
    is available from the

    corresponding author upon reasonable request.

    References

    1. Rajput, A., & Kumaravelu, V. B. (2019). Scalable and sustainable wireless sensor
    networks for

    agricultural application of Internet of things using fuzzy c-means algorithm.
    Sustainable Computing:

    Informatics and Systems, 22, 62-74.

    2. Stankovic, J. A. (2014). Research directions for the internet of things. IEEE
    Internet of Things Journal,

    1(1), 3-9.

    3. Muangprathub, J., Boonnam, N., Kajornkasirat, S., Lekbangpong, N., Wanichsombat,
    A., & Nillaor, P.

    (2019). IoT and agriculture data analysis for smart farm. Computers and electronics
    in agriculture,

    156, 467-474.

    4. Ali, R., Pal, A. K., Kumari, S., Karuppiah, M., & Conti, M. (2018). A secure
    user authentication and key-

    agreement scheme using wireless sensor networks for agriculture monitoring. Future
    Generation

    Computer Systems, 84, 200-215.

    5. Abbasi, A. A., & Younis, M. (2007). A survey on clustering algorithms for wireless
    sensor networks.

    Computer communications, 30(14-15), 2826-2841.

    ½. Amgoth, T., & Jana, P. K. (2013, August). BDCP: A backoff-based distributed
    clustering protocol for

    wireless sensor networks. In 2013 International Conference on Advances in Computing,

    Communications and Informatics (ICACCI) (pp. 1012-1016). IEEE.

    7. Norouzi, A., & Zaim, A. H. (2014). Genetic algorithm application in optimization
    of wireless sensor

    networks. The Scienti¦c World Journal, 2014.

    Page 16/32

    ¾. Uma Maheshwari, S., & Pushpalatha, S. (2014). Cluster head selection based
    on genetic algorithm

    using AHYMN approaches in WSN. In International Conference on Innovations in Engineering
    and

    Technology (Vol. 3).[9] Capello, F., Toja, M., & Trapani, N. (2016). A real-time
    monitoring service based

    on industrial internet of things to manage agrifood logistics. In Proceedings
    of the 6th International

    Conference on Information Systems, Logistics and Supply Chain, Bordeaux, France,
    Available from:

    http://ils2016conference. com/wpcontent/uploads/2015/03/ILS2016_FB01_1. pdf, Accessed
    (pp.

    10-21).

    9. Pang, Z., Chen, Q., Han, W., & Zheng, L. (2015). Value-centric design of the
    internet-of-things solution

    for food supply chain: Value creation, sensor portfolio and information fusion.
    Information Systems

    Frontiers, 17(2), 289-319.

    10. Kumar, A., Shwe, H., Wong, K., & Chong, P. (2017). Location-based routing
    protocols for wireless

    sensor networks: a survey. Wireless Sens. Netw. 9, 25–72 (2017).

    11. Lin, K., Chen, M., Zeadally, S., & Rodrigues, J. J. (2012). Balancing energy
    consumption with mobile

    agents in wireless sensor networks. Future Generation Computer Systems, 28(2),
    446-456.

    12. Ferng, H. W., Tendean, R., & Kurniawan, A. (2012). Energy-e¨cient routing
    protocol for wireless sensor

    networks with static clustering and dynamic structure. Wireless Personal Communications,
    65(2),

    347-367.

    13. Papadopoulos, A., Navarra, A., McCann, J. A., & Pinotti, C. M. (2012). VIBE:
    An energy e¨cient routing

    protocol for dense and mobile sensor networks. Journal of Network and Computer
    Applications,

    35(4), 1177-1190.

    14. Han, S. W., Jeong, I. S., & Kang, S. H. (2013). Low latency and energy e¨cient
    routing tree for wireless

    sensor networks with multiple mobile sinks. Journal of Network and Computer Applications,
    36(1),

    156-166.

    15. Abasıkeleş-Turgut, İ., & Ha¦f, O. G. (2016). NODIC: a novel distributed clustering
    routing protocol in

    WSNs by using a time-sharing approach for CH election. Wireless Networks, 22(3),
    1023-1034.

    1½. Gajjar, S., Sarkar, M., & Dasgupta, K. (2016). FAMACROW: Fuzzy and ant colony
    optimization based

    combined mac, routing, and unequal clustering cross-layer protocol for wireless
    sensor networks.

    Applied Soft Computing, 43, 235-247.

    17. Shokouhifar, M., & Jalali, A. (2015). A new evolutionary based application
    speci¦c routing protocol

    for clustered wireless sensor networks. AEU-International Journal of Electronics
    and

    Communications, 69(1), 432-441.

    1¾. Tabatabaei, S., Rajaei, A., & Rigi, A. M. (2019). A novel energy-aware clustering
    method via Lion Pride

    Optimizer Algorithm (LPO) and fuzzy logic in wireless sensor networks (WSNs).
    Wireless Personal

    Communications, 108(3), 1803-1825.

    19. Shelebaf, A., & Tabatabaei, S. (2020). A Novel Method for Clustering in WSNs
    via TOPSIS Multi-

    criteria Decision-Making Algorithm. Wireless Personal Communications, 1-17.

    20. Akbari, Y., & Tabatabaei, S. A New Method to Find a High Reliable Route in
    IoT by Using

    Reinforcement Learning and Fuzzy Logic. Wireless Personal Communications, 1-17.

    Page 17/32

    21. Nikolidakis, S. A., Kandris, D., Vergados, D. D., & Douligeris, C. (2015).
    Energy e¨cient automated

    control of irrigation in agriculture by using wireless sensor networks. Computers
    and Electronics in

    Agriculture, 113, 154-163.

    22. Polo, J., Hornero, G., Duijneveld, C., García, A., & Casas, O. (2015). Design
    of a low-cost wireless

    sensor network with UAV mobile node for agricultural applications. Computers and
    electronics in

    agriculture, 119, 19-32.

    23. Tabatabaei, S. (2022). Provide energy-aware routing protocol in wireless sensor
    networks using

    bacterial foraging optimization algorithm and mobile sink. PloS one, 17(3), e0265113.

    24. Fanian, F., & Rafsanjani, M. K. (2020). A new fuzzy multi-hop clustering protocol
    with automatic rule

    tuning for wireless sensor networks. Applied Soft Computing, 89, 106115.

    25. Maurya, S., Jain, V. K., & Chowdhury, D. R. (2019). Delay aware energy-e¨cient
    reliable routing for

    data transmission in heterogeneous mobile sink wireless sensor network. Journal
    of Network and

    Computer Applications, 144, 118-137.

    2½. Gorgich, S., & Tabatabaei, S. (2021). Proposing an energy-aware routing protocol
    by using ¦sh

    swarm optimization algorithm in WSN (wireless sensor networks). Wireless Personal

    Communications, 119(3), 1935-1955.

    27. Ergun, K., Ayoub, R., Mercati, P., & Rosing, T. (2022). Reinforcement learning
    based reliability-aware

    routing in IoT networks. Ad Hoc Networks, 132, 102869.

    2¾. Feroz Khan, A. B., & CN, R. (2022). A multi-attribute based trusted routing
    for embedded devices in

    MANET-IoT.[30] OPNET Modeler, Available from: http://www.opnet.com

    29. IEEE 802.15.4 Standard-2003, “Part 15.4: Wireless Medium Access Control (MAC)
    and Physical Layer

    (PHY) Speci¦cations for Low-Rate Wireless Personal Area Networks (LR-WPANs)”,
    IEEE-SA

    Standards.

    Figures

    Page 18/32

    Figure 1

    Clustering concept in WSN

    Figure 2

    A view of chromosome in the proposed method

    Page 19/32

    Figure 3

    Diagram block of fuzzy monitoring system

    Figure 4

    Membership functions for the variable of load density

    Page 20/32

    Figure 5

    Membership functions for the variable of the energy level of the battery

    Figure 6

    Membership functions for the output variable of ¦tness

    Page 21/32

    Figure 7

    Performing cut operation on the two parents

    Figure 8

    Mutation operation

    Page 22/32

    Figure 9

    Flowchart of the proposed algorithm

    Page 23/32

    Figure 10

    Editor of the simulated network model

    Page 24/32

    Figure 11

    Node editor for the simulated model

    Page 25/32

    Figure 12

    Editor of the processing model for MAC layer

    Page 26/32

    Figure 13

    Average energy consumption of the network

    Page 27/32

    Figure 14

    End-to-end delay

    Page 28/32

    Figure 15

    Media-access delay

    Page 29/32

    Figure 16

    Packer error rate

    Page 30/32

    Figure 17

    Throughput rate

    Page 31/32

    Figure 18

    Packet loss rate in the proposed protocol and IEEE 802.15.4

    Page 32/32

    Figure 19

    Signal to noise ratio

    Supplementary Files

    This is a list of supplementary ¦les associated with this preprint. Click to download.

    biographysha.docx

    '
  inline_citation: '>'
  journal: Research Square (Research Square)
  limitations: '>'
  pdf_link: https://www.researchsquare.com/article/rs-2898962/latest.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: A Novel Method for Energy Efficiency in Internet of Thing (IoT) through Fuzzy
    Logic and Genetic-Algorithm-Based Clustering applied for Agriculture Monitoring
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/itnac55475.2022.9998398
  analysis: '>'
  authors: []
  citation_count: 0
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2022 32nd International Telec...
    2022 32nd International Telecommunication Networks and Applications Conference
    (ITNAC) Publisher: IEEE Cite This PDF 88 Full Text Views Abstract Metrics Abstract:
    Presents the front cover, title page, cover page, or splash screen of the proceedings
    record. Published in: 2022 32nd International Telecommunication Networks and Applications
    Conference (ITNAC) Date of Conference: 30 November 2022 - 02 December 2022 Date
    Added to IEEE Xplore: 05 January 2023 ISBN Information: ISSN Information: DOI:
    10.1109/ITNAC55475.2022.9998398 Publisher: IEEE Conference Location: Wellington,
    New Zealand Metrics More Like This 2023 33rd International Telecommunication Networks
    and Applications Conference (ITNAC) 2023 33rd International Telecommunication
    Networks and Applications Conference Published: 2023 2023 33rd International Telecommunication
    Networks and Applications Conference (ITNAC) 2023 33rd International Telecommunication
    Networks and Applications Conference Published: 2023 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/9998179/9998326/09998398.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 2022 32<sup>nd</sup> International Telecommunication Networks and Applications
    Conference (ITNAC)
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icuas.2019.8797932
  analysis: '>'
  authors:
  - Randal W. Beard
  - Pascual Campoy
  - Ben Chen
  - YangQuan Chen
  - Rogelio Lozano
  - James R. Morrison
  - Paul Oh
  - C.A. Rabbath
  - Matthew J. Rutherford
  - Roberto Sabatini
  - Salah Sukkarieh
  - George Vachtsevanos
  - Kimon P. Valavanis
  - Youmin Zhang
  - Icuas Steering
  - Committee Tor
  - Agnar Johansen
  - Fulvia Quagliotti
  - Anı́bal Ollero
  - Nikos C. Tsourveloudis
  - Kimon P. Valavanis
  - Antonios Tsourdos
  - Mário Sarcinelli-Filho
  - Rajnikant Sharma
  - Kostas Kanistras
  - Han‐Lim Choi
  - Andrea Monteriù
  - Justin R. Martin
  - Jonathan Kretz
  - Dina Fragkedaki
  - Pradeep Kumar Misra
  - Rafic M. Ajaj
  - Fernando Alarcón
  - Kostas Alexis
  - Florian Andert
  - D Azimov
  - Ivan Bernal
  - Stjepan Bogdan
  - Alice Brandão
  - Tony Brown
  - Joana Caetano
  - Laura Carrillo
  - Pablo R. Castillo
  - Han Chen
  - Abbas Chamseddine
  - J. Chudoba
  - Laurent Ciarletta
  - J. A. Cobano
  - Julián Colorado
  - Calvin Coopmans
  - Hernán Cortés
  - Cristina Cuerno
  - Ju Chen
  - Guido de Croon
  - R Czyba
  - A Dolgikh
  - Hongwei Duan
  - Sébastien Durand
  - Harris L. Edge
  - Giancarmine Fasano
  - Armando E. Fraire
  - Marianne Geiser
  - L Gonzalez
  - Isaac Kaminer
  - J. Keller
  - Y Kim
  - Zdzisław Kowalczuk
  - K. Kyriakopoulos
  - Alejandro Lara
  - Nicolas Larrieu
  - D Lee
  - Dan Lin
  - Stefano Longhi
  - Gang Lü
  - Jian Luo
  - A. Mancini
  - Carmen Martı́nez
  - I Maza
  - D Melita
  - Miguel A. Olivares-Méndez
  - Luís Merino
  - A Monteriu
  - Milton Mueller
  - M Nahon
  - Hassan Noura
  - Daniel J. Nolan
  - U Ozdemir
  - Zhigang Peng
  - Jing Qi
  - Yue Qu
  - Sivakumar Rathinam
  - Hugo Romero
  - J Martin-Sanchez
  - S Park
  - Sergio Salazar
  - Srikanth Saripalli
  - M. Saska
  - Runqi Chai
  - Hakkı Erhan Sevil
  - M Shaqura
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy IEEE.org IEEE Xplore IEEE
    SA IEEE Spectrum More Sites Subscribe Donate Cart Create Account Personal Sign
    In Personal Sign In * Required *Email Address *Password Forgot Password? Sign
    In Don''t have a Personal Account? Create an IEEE Account now. Create Account
    Learn more about personalization features. IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/8787852/8797706/08797932.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: ICUAS 2019 Final Program
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
