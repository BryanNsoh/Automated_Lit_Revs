- DOI: https://doi.org/10.1016/j.atech.2022.100042
  analysis: '>'
  authors:
  - Rabiya Abbasi
  - Pablo Martı́nez
  - Rafiq Ahmad
  citation_count: 110
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Research methodology 3.
    Digitization trends in agriculture 4. Agriculture 4.0 enabling technologies 5.
    Conclusions Declaration of Competing Interest Acknowledgements References Show
    full outline Cited by (120) Figures (16) Show 10 more figures Tables (13) Table
    1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Smart Agricultural Technology
    Volume 2, December 2022, 100042 The digitization of agricultural industry – a
    systematic literature review on agriculture 4.0 Author links open overlay panel
    Rabiya Abbasi a, Pablo Martinez b, Rafiq Ahmad a Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.atech.2022.100042 Get rights and content Under
    a Creative Commons license open access Highlights • SLR is conducted using PRISMA
    approach and148 articles are selected and critically analyzed. • The results show
    the extent of digital technologies adoption in agriculture. • The potential benefits
    of digital technologies and roadblocks hindering their implementation in agriculture
    sector are identified and discussed. • The study will positively impact the research
    around agriculture 4.0. Abstract Agriculture is considered one of the most important
    sectors that play a strategic role in ensuring food security. However, with the
    increasing world''s population, agri-food demands are growing — posing the need
    to switch from traditional agricultural methods to smart agriculture practices,
    also known as agriculture 4.0. To fully benefit from the potential of agriculture
    4.0, it is significant to understand and address the problems and challenges associated
    with it. This study, therefore, aims to contribute to the development of agriculture
    4.0 by investigating the emerging trends of digital technologies in the agricultural
    industry. For this purpose, a systematic literature review based on Protocol of
    Preferred Reporting Items for Systematic Reviews and Meta-Analyses is conducted
    to analyse the scientific literature related to crop farming published in the
    last decade. After applying the protocol, 148 papers were selected and the extent
    of digital technologies adoption in agriculture was examined in the context of
    service type, technology readiness level, and farm type. The results have shown
    that digital technologies such as autonomous robotic systems, internet of things,
    and machine learning are significantly explored and open-air farms are frequently
    considered in research studies (69%), contrary to indoor farms (31%). Moreover,
    it is observed that most use cases are still in the prototypical phase. Finally,
    potential roadblocks to the digitization of the agriculture sector were identified
    and classified at technical and socio-economic levels. This comprehensive review
    results in providing useful information on the current status of digital technologies
    in agriculture along with prospective future opportunities. Previous article in
    issue Next article in issue Keywords Agriculture 4.0Industry 4.0DigitizationConnectivityInternet
    of thingsSmart agricultural systems 1. Introduction 1.1. A global food security
    problem Food security is a multidimensional concept that alleviates hunger by
    ensuring a sustainable, nutritious food supply. It is characterized by a four-pillar
    model shown in Fig. 1, with each pillar intrinsic to ensure food security [1].
    Download : Download high-res image (262KB) Download : Download full-size image
    Fig. 1. Four-pillar model of food security by Food and Agriculture Organization
    of the United Nations. Download : Download high-res image (437KB) Download : Download
    full-size image Fig. 2. Agriculture value chain: stages and main functions. Due
    to several anthropogenic factors, such as rapid population growth, urbanization,
    industrialization, farmland loss, freshwater scarcity, and environmental degradation,
    food security is becoming a serious global issue. This is because these factors
    are also directly impacting agricultural industry which is a primary source of
    agri-food production around the world. It is anticipated that by 2050 global population
    will be increased from the current 7.7 billion to 9.2 billion, urban population
    will be rise by 66%, arable land will be declined by approximately 50 million
    hectares, global GHG emissions (source of CO2 – promote crop disease and pest
    growth) will be increased by 50%, agri-food production will be declined by 20%,
    and eventually, food demand will be increased by 59 to 98% – posing an imminent
    threat to food security and adequate food availability [2], [3], [4]. To satisfy
    the increasing food demands, agricultural practitioners worldwide will need to
    maximise the agricultural productivity involving crop and livestock farming. In
    this review paper, the focus is on crop farming that involves cultivation of both
    food and cash crops. A typical agri-food value chain depicting three primary stages,
    namely pre-field (pre-plantation stage), in-field (plantation and harvesting stage),
    and post-field (post-harvesting stage) involved in the production of agricultural
    products is shown in Fig. 2. All the stages play a vital role in the value chain
    but, in this review, the second stage ˝in-field˝ will be considered that involves
    several crop growing processes such as plowing, sowing, spraying, and harvesting,
    etc. These processes currently employ traditional agricultural practices that
    are labor-intensive, require arable land, time, and a substantial amount of water
    (for irrigation) – making it a challenge to produce enough agri-food [5]. A part
    of problem is also related to irregular use of pesticides and herbicides and misuse
    of available technology which cause harm to crop and eventually resulting in agricultural
    wastes [6]. These issues can be addressed by integrating sophisticated technologies
    and computer-based applications that ensure high crop yield, less water consumption,
    optimised pesticide/herbicide utilization, and enhanced crop quality. This is
    where the smart agriculture concept comes in. 1.2. Smart agriculture Industry
    4.0, also known as the fourth industrial revolution, is revolutionizing, and reshaping
    every industry. It is a strategic initiative characterized by a fusion of emerging
    disruptive digital technologies such as Internet of Things (IoT), big data and
    analytics (BDA), system integration (SI), cloud computing (CC), simulation, autonomous
    robotic systems (ARS), augmented reality (AR), artificial intelligence (AI), wireless
    sensor networks (WSN), cyber-physical system (CPS), digital twin (DT), and additive
    manufacturing (AM) to enable the digitization of the industry [7]. The integration
    of these technologies in agriculture is sparking the next generation industrial
    agriculture, namely, agriculture 4.0 – also termed smart agriculture, smart farming,
    or digital farming [7]. Smart agriculture provides farmers with a diverse set
    of tools (shown in Fig. 3) to address several agricultural food production challenges
    associated with farm productivity, environmental impact, food security, crop losses,
    and sustainability. For instance, with IoT-enabled systems consisting of WSNs,
    farmers can connect to farms remotely irrespective of place and time to monitor
    and control farm operations. Drones equipped with hyperspectral cameras can be
    used to collect data from heterogeneous sources on farmlands and autonomous robots
    can be used to support or accomplish repetitive tasks at farms. Data analytics
    techniques can be employed to analyze the gathered data with computer applications
    can be used to assist farmers in decision-making process. Likewise, a wide variety
    of parameters related to environmental factors, weed control, crop production
    status, water management, soil conditions, irrigation scheduling, herbicides,
    and pesticides, and controlled environment agriculture can be monitored and analyzed
    in smart agriculture to increase crop yields, minimize costs, enhance product
    quality, and maintain process inputs through the use of modern systems [8]. Download
    : Download high-res image (334KB) Download : Download full-size image Fig. 3.
    The concept of “Smart Agriculture”. 1.3. Research motivation and contribution
    The motivation for preparing this review stems from the fact that digital technologies
    in agricultural systems offer new strategic solutions for enhancing the efficiency
    and effectiveness of farms’ production. Moreover, digital transformation provides
    a way forward to implement modern farming practices such as vertical farming (hydroponics,
    aquaponics and aeroponics), which has the potential to overcome food security
    problems. But there is a set of problems and limitations associated with this
    transformation from the technical, socio-economic, and management standpoint that
    must be death to fully exploit the potential of agriculture 4.0 [9]. There are
    number of studies that have discussed emerging trends in the development of agriculture
    4.0 by providing succinct information on key applications, advantages, and corresponding
    research challenges of smart farming [9], [10], [11], [12], [13], [14], [15],
    [16], [17], [18]. The research focus of these studies is limited to either explaining
    more generic technical aspects while paying attention to only one or few digital
    technologies, and/or enhancing agricultural supply chain performance, and/or developing
    agriculture 4.0 definition, and/or achieving sustainable agronomy through precision
    agriculture, and/or proposing a smart farming framework. Nevertheless, these studies
    do not involve explicit discussion on the tools and techniques used to develop
    different systems and maturity level of these systems. There is also a lack of
    studies considering modern soilless farms such as hydroponics, aquaponics and
    aeroponics (indoor/outdoor) and implications of digital technologies in these
    farms. Hence, it is necessary to analyse the evolution of agriculture 4.0 from
    different perspectives to stimulate the discussion in the area. This study aims
    to present a holistic overview of digital technologies implemented in second stage
    of agricultural production value chain (in-field) for different types of farms
    as mentioned in section 1.1. The main theoretical contribution of the study involves
    analysis and dissemination of the tools and techniques employed, the farm type,
    the maturity level of the developed systems, along with potential roadblocks or
    inhibiting factors in development of agriculture 4.0. The reflections presented
    in the review will support researchers and agricultural practitioner in future
    research on agriculture 4.0. 1.4. Paper organization Following the introduction,
    the paper is structured as follows: Section 2 discusses the approach used to gather
    the relevant literature; then, Section 3 presents the statistical results obtained
    after a general analysis of the selected research studies; next, Section 4 provides
    a detailed overview of the core technologies used in the digitization of agriculture;
    after, Section 5 highlights the technical and socio-economic roadblocks to digital
    integration in agriculture; next, Section 6 outlines a discussion about the research
    questions followed by added value, considerations and future prospects related
    to agricultural digitization, and transition to agriculture 5.0; and lastly, Section
    8 concludes the review. 2. Research methodology A systematic literature review
    (SLR) is a tool used to manage the diverse knowledge and identify research related
    to a predetermined topic [19]. In this study, SLR is conducted to investigate
    the status of Industry 4.0 technologies in agricultural industry. Particularly,
    cases are searched where the term ‘agriculture’ appeared concurrently in the title,
    abstract, or keywords of an article with any of the ‘Industry 4.0 technologies”
    mentioned in section 1.2. Before conducting the SLR, a review protocol is defined
    to ensure a transparent and high-quality research process, which are the characteristics
    that make a literature review systematic [20]. The review protocol also helps
    to minimize bias by conducting exhaustive literature searches. This includes three
    steps: the formulation of the research questions, the definition of the search
    strategy, and the specification of inclusion and exclusion criteria. This paper
    uses a preferred reporting item for systematic reviews and meta-analysis (PRISMA)
    approach to conduct SLR. PRISMA is an evidence-based minimum set of items that
    are used to guide the development process of systematic literature reviews and
    other meta-analyses [19]. 2.1. Review protocol A review protocol (in Table 1)
    is defined before conducting the bibliographic analysis to identify, evaluate,
    and interpret results relevant to the research scope. First, research questions
    are formulated to provide insight into the analysis of published studies in the
    research area of interest from different dimensions. These questions need to be
    answered in the study. Next, the search strategy is defined, which helps identify
    appropriate keywords later in the search equation to identify the relevant information
    sources, such as academic databases and search engines that provide access to
    a massive amount of digital documentation. Three online research repositories
    are used to retrieve relevant studies: ScienceDirect1, Scopus2, and IEEE Xplore3.
    Finally, to refine the search results of each database, boundaries are set by
    predefining inclusion and exclusion criteria for further investigation and content
    assessments of selected publications. It involves, for instance, defining the
    time interval for the research process from 2011 to 2021 to limit the studies
    to those published in English, disregarding chapters of books and grey literature,
    such as reports and summaries of events and seminars. These last two steps of
    the review protocol allow the preliminary filtering of metadata sources and narrow
    down the scope of research. Table 1. Review protocol for systematic literature
    review. Review questions RQ1: Which Industry 4.0 technologies have been used in
    the literature for digitization of agriculture? RQ2: How and to what extent have
    these technologies been applied in the context of service type, tools and techniques
    used, system''s maturity level, and farm type? RQ3: What are the primary roadblocks
    in implementation of Industry 4.0 technologies for smart farming? Study selection
    criteria Inclusion criteria: • Peer-reviewed journal articles and conference papers.
    • Studies published during the period between 2011 and 2021. • Studies should
    provide answers to the research questions. • The article must include the title,
    year, source, abstract, and DOI. • Literature focussing on application of Industry
    4.0 technologies in crop plantation and harvesting activities particularly in-field
    processes. Exclusion criteria: • Summaries of events and seminars, book review,
    and editorial. • Literature focusing on application of Industry 4.0 technologies
    in livestock farming; pre-field processes such as genetic development, seed development
    and seed supplying; post-field stages such as crop distribution, food processing
    and consumption; and agri-food supply chain. • Studies published before 2011.
    • The publication is not available in full text. • The publication is not in English.
    Literature search Sources: Scopus, ScienceDirect, and IEEE Xplore for academic
    literature, citations in identified literature Search equation: (("agriculture*")
    AND ("Industry 4.0" OR “Digital Farming” OR “Intelligent Farming” OR “Smart Agriculture”
    OR “Agriculture 4.0” OR “Smart Farming” OR “Internet of Things” OR “IoT” OR “Cloud
    Computing” OR “Edge Computing” OR “Wireless Sensor Networks*” OR “Artificial Intelligence*”
    OR “Big Data*” OR “Data Analytics*” OR “Data Science*” OR “Cyber Physical System*”
    OR “Robotics*” OR “Computer Vision*” OR “Machine Learning*” OR “Deep Learning*”
    OR “Data Integration*”)) 2.2. Evaluation process The evaluation of the literature
    search process is done in four stages: identification, screening, eligibility,
    and inclusion, as detailed by the PRISMA flow diagram shown in Fig. 4. After initial
    metadata filtering through the application of search expression, a total of 3165
    records are found (1690 from Scopus, 926 from ScienceDirect, and 549 from IEEE
    Xplore), which are then consolidated for the removal of duplicate items in the
    identification stage. The number of publications after this step is reduced to
    2876. In the screening stage, the titles and abstracts of the papers are analyzed,
    and only 498 papers are selected for integral reading. In the third stage, full-text
    screening of these articles is performed to verify their eligibility in relation
    to the objective of this paper, which is to answer the research questions mentioned
    in Table 1. Of the 498 papers, 137 are found to be relevant for this review. Another
    11 are added through a cross-referencing approach, adding up to 148 papers selected
    in the final stage for further analysis. Download : Download high-res image (624KB)
    Download : Download full-size image Fig. 4. Four-step evaluation of literature
    search process (PRISMA). 2.3. Threats to validity i SLR replication: The presented
    SLR is susceptible to threats to validity because the current search is limited
    to only three online repositories. More publications could potentially be found
    if additional sources were explored. The process of SLR is described clearly in
    sub-sections 2.1 and 2.2, and hence, validity can be considered well addressed.
    However, in the case of replication of this SLR, it is possible that one can find
    slightly different publications. This difference would result from different personal
    choices during the screening and eligibility steps of PRISMA, but it is highly
    unlikely that the overall findings would change. ii Search string: the search
    string used to find the relevant studies cover the whole scope of SLR, but there
    is a possibility that valuable studies might have been missed. Additional keywords
    and synonyms with a broader search might return more studies. 3. Digitization
    trends in agriculture The year-wise distribution of the 148 articles from 2011
    to 2021 is represented in Fig. 5. Around 22% of the scientific publications in
    the last ten years were published in 2018. This reflects that the agricultural
    industry is making considerable progress in the context of the implementation
    of digital technologies, but the pace is still slow as compared to other domains
    such as healthcare, manufacturing, mining, automotive, energy, etc.,[15]. Download
    : Download high-res image (162KB) Download : Download full-size image Fig. 5.
    Year-wise distribution of selected research studies from 2011 to 2021. The breakdown
    of these publications with respect to digital technologies (mentioned in sub-section
    1.2) and targeted farm types is represented in Fig. 6. Download : Download high-res
    image (321KB) Download : Download full-size image Fig. 6. Technology-wise distribution
    of the 148 selected research studies. The farm type refers to the crop farming
    method considered while developing an application or framework. For instance,
    the farming method can be soil-based or soilless. The soil-based farming category
    involves open-air fields (traditional outdoor agricultural farms) and greenhouse
    farms (indoor). On the other hand, the soilless farming category involves modern
    farming practices such as aquaponics, aeroponics, and hydroponics (mostly indoor).
    The numbers at the top of the stacked column in Fig. 6 indicate the total number
    of studies that have used the particular technology to develop a smart agriculture
    system, whereas different colors of columns indicate the respective farm types.
    Use cases are from these publications are analysed, and conclusions are drawn.
    For instance, it is found that autonomous robotics systems (including unmanned
    guided vehicles and unmanned aerial vehicles (drones)), internet of things, and
    machine learning appear to be the widely applied technologies in the agricultural
    domain in the last decade. The same illustration suggests that big data, wireless
    sensor networks, cyber-physical systems, and digital twins are the emerging areas
    in agriculture. Moreover, open-air farms are the most frequently considered in
    research studies (69%), contrary to indoor farms (31%). For soilless farming systems
    (aquaponics, aeroponics, and hydroponics), only 22 publications are found, which
    insinuates that these modern farming practices are still in their infancy. Likewise,
    services of each use case are identified and are classified under nine different
    service categories, namely: i) crop management, CM (Estimation/ prediction of
    crop yield/ growth rate/ harvesting period and seed plantation/ harvesting/ pollination/
    spraying (fertilizer/ pesticide)); ii) crop quality management, CQM (fresh weight,
    green biomass, height, length, width, leaf density, piment content (chlorophyll)
    and phytochemical composition); iii) water and environment management, WEM (monitoring
    and control of flow rate, water level, water quality (nutrients), temperature,
    humidity, CO2, and weather forecast etc.); iv) irrigation management, IM (water
    stress detection and scheduling); v) farm management, FM (monitoring of farm operations,
    tracking and counting products, determining production efficiency, financial analysis,
    energy consumption analysis, technology integration and decisions implementation);
    vi) pest and disease management, PDM (pest identification and disease detection);
    vii) soil management, SM (moisture content, soil nutrients, fertilizer needs and
    application); viii) weed and unwanted vegetation management, WUVM (weed/unknown
    vegetation mapping, classification, and herbicides application); and ix) fruit
    detection and counting, FDC — as shown in Fig. 7. These categories illustrate
    the role of different digital technologies in smart farming. Upon analysis, it
    is found that crop management parameters, such as crop yield prediction, growth
    rate estimation, or evaluation of harvesting period are the most frequently researched
    areas for agriculture 4.0 in the last decade (29%), whereas very little heed is
    paid towards soil management (2%), fruit detection and counting (2%), and crop
    quality management (3%). Download : Download high-res image (561KB) Download :
    Download full-size image Fig. 7. Service-wise distribution of selected research
    studies: The technology readiness level (TRL) of all the use cases is examined
    using European Union''s TRL scale that partitions system''s maturity level into
    three generic levels [21]. The first level is conceptual, that represents European
    TRL 1–2 (use case is in conceptual phase), the second level is the prototype,
    which means European TRL 3–6 (use case is working even without the complete planned
    functionality), and the third level is deployed, that includes European TRL 7–9
    (use case is mature with all the possible functions). Fig. 8 depicts the TRL of
    each use case developed in selected studies. It is observed that little progress
    has been made in advancing smart agricultural systems beyond the concept and prototype
    levels to the commercial level. For instance, most use cases (129) are at the
    prototype level. Download : Download high-res image (269KB) Download : Download
    full-size image Fig. 8. Distribution of studies based on the service category
    and system''s maturity level. 4. Agriculture 4.0 enabling technologies This section
    provides critical insights towards answering RQ1 and RQ2 from Table 1. 4.1. Internet
    of Things driven agricultural systems Internet of things (IoT) refers to a cosmos
    of interrelated computing devices, sensors, appliances, and machines connected
    with the internet, each having unique identities and capabilities for performing
    remote sensing and monitoring [21]. The reference architecture of IoT with six
    layers, namely perception layer (hardware devices), network layer (communication),
    middleware layer (device management and interoperability), service layer (cloud
    computing), application layer (data integration and analytics), and end-user layer
    (user-interface), is shown in Fig.9. In the agricultural domain, IoT devices in
    the physical layer gather data related to environmental and crop parameters such
    as temperature, humidity, pH value, water level, leaf color, fresh leaf weight,
    etc. The transmission of this data takes place in the network layer, the design
    of which depends on the selection of suitable communication technologies relevant
    to the field size, farm location, and type of farming method. For instance, ZigBee,
    LoRa, and Sigfox are widely used and employed in outdoor fields because they are
    cheaper and have low energy consumption and a good transmission range [22,23].
    Despite being a secure technology, Bluetooth is only used in indoor farms as it
    offers a short transmission range [22]. Wi-Fi is not a promising technology for
    agricultural applications due to its high costs and high energy consumption [22].
    RFID (radio frequency identification) and NFC (near field communication) technologies,
    on the other hand, are increasingly being implemented in agricultural systems
    for tracking agricultural products [24]. GPRS or mobile communication technology
    (2G, 3G, and 4G) are used for periodic monitoring of environmental and soil parameters.
    In addition, communication protocols mostly used in the agricultural scenarios
    are HTTP, WWW, and SMTP. Likewise, to ensure interoperability and system security
    to their context-aware functionalities, middleware HYDRA and SMEPP are mostly
    employed in agricultural systems [25]. To store data, cloud computing techniques
    are employed in the service layer. This data is then used in the application layer
    to build smart applications used by farmers, agriculture experts, and supply chain
    professionals to enhance farm monitoring capacity and productivity. Download :
    Download high-res image (871KB) Download : Download full-size image Fig. 9. Six-layered
    architecture of Internet of Things (IoT), (adapted) [26]. The integration of IoT
    in agriculture is meant to empower farmers with the decision tools and automation
    technologies that seamlessly integrate knowledge, products, and services to achieve
    high productivity, quality, and profit. A multitude of studies is performed and
    put forward concerning the incubation of the IoT concepts in the agricultural
    sector. The main findings of some of the studies are presented in Table 2. Multiple
    technological issues and architectural problems have been addressed through the
    development of IoT-based agricultural systems. But most of these systems are either
    in a conceptual stage or in a prototype form (not commercial) at the moment. Focus
    is mainly laid on-farm management, irrigation control, crop growth, health monitoring,
    and disease detection. Some of these studies have also explained IoT implementation
    in modern agricultural systems such as vertical farming (soilless farming - aquaponics,
    hydroponics, and aeroponics) and greenhouse farming (soil-based). Moreover, most
    studies have focused on addressing a specific problem. Table 2. IoT-driven agricultural
    systems. Use case No. Service category Tools and techniques Farm type Maturity
    level Citations 1. CM WSN, CC, and reinforcement learning Greenhouse (soil-based)
    Deployed [27] 2. Sensors, actuators, and controllers Open-air Prototype [28] 3.
    Sensors, controllers, and mobile app Greenhouse (soil-based) Prototype [29] 4.
    Sensors, CC, BD analysis, and ML Greenhouse (soil-based) Prototype [30] 5. Sensors,
    and CC Aeroponics Prototype [31] 6. Sensors, actuators, and control system Aeroponics
    Prototype [32] 7. Weather boxes, sensors, and camera Open-air Prototype [33] 8.
    CQM IoT devices, LED lights, and software application Hydroponics Prototype [34]
    9. WEM Sensors, and CC Aquaponics Conceptual [35] 10. Sensors, Arduino board,
    and database Open-air Prototype [36] 11. Sensors, Arduino board, and database
    Greenhouse (soil-based) Prototype [37] 12. Sensors, CPS, edge, and cloud computing
    Hydroponics Prototype [38] 13. Sensors, electronic components, and network Aquaponics
    Prototype [39] 14. Sensors, Arduino, Raspberry Pi3, and deep neural network Hydroponics
    Prototype [40] 15. Sensors, and database Aquaponics Prototype [41] 16. Sensors,
    actuators, and CC Aquaponics Prototype [42] 17. Sensors, controllers, and mobile
    app Aquaponics Prototype [43] 18. IM WSN, fuzzy logic and neural network Open-air
    Prototype [44] 19. Sensor information unit, MQTT, HTTP, and neural network Greenhouse
    (soil-based) Prototype [45] 20. FM Sensors, controllers, web interface, and CC
    Open-air Conceptual [46] 21. Sensors, controllers, cloud, and Android application
    Open-air Prototype [47] 22. Sensors, IEEE, and GSM protocols Open-air Prototype
    [48] 23. PDM Sensors, controllers, and image processing Open-air Prototype [49]
    24. Cloud, camera, controllers, and K-mean clustering Open-air Prototype [50]
    25. WSN, controller, and cloud Open-air Prototype [51] 26. WSN, cloud storage,
    and agricultural knowledge base Open-air Prototype [52] 27. WSN, Hidden Markov
    Model, and SMS module Open-air Deployed [53] 28. Sensors, Image processing, k-mean
    clustering, and support vector machine Open-air Prototype [54] 4.2. Wireless sensor
    networks in agriculture Wireless sensor network (WSN) is regarded as a technology
    that is used within an IoT system. It can be defined as a group of spatially distributed
    sensors for monitoring the physical conditions of the environment, temporarily
    storing the collected data, and transmitting the gathered information at a central
    location [22]. The general architecture of WSN is shown in Fig. 10. A WSN for
    smart farming is made up of numerous sensor nodes connected through a wireless
    connection module. These nodes have a variety of abilities (e.g., processing,
    transmission, and sensation) that allow them to self-organize, self-configure,
    and self-diagnose. There are different types of WSNs, which are categorized depending
    on the environment where they are deployed. These include terrestrial wireless
    sensor networks (TWSNs), wireless underground sensor networks (WUSNs), underwater
    wireless sensor networks (UWSNs), wireless multimedia sensor networks (WMSNs),
    and mobile wireless sensor networks (MWSNs) [55]. In agricultural applications,
    TWSN and UWSN are widely used. In TWSNs, the nodes are deployed above the ground
    surface, consisting of sensors for gathering the surrounding data. The second
    variant of WSNs is its underground counterpart – WUSNs, where sensor nodes are
    planted inside the soil. In this setting, lower frequencies easily penetrate through
    the soil, whereas higher frequencies suffer severe attenuation [56]. Therefore,
    the network requires a higher number of nodes to cover a large area because of
    the limited communication radius. Many research articles are available in the
    literature that discusses the use of WSN for different outdoor and indoor farms’
    applications such as irrigation management, water quality assessment, and environmental
    monitoring. A summary of some of these articles is given in Table 3. These studies
    have focused on developing WSNs architectures that are simplified, low cost, energy-efficient
    and scalable. Yet, various factors associated with WSNs need further attention,
    such as minimum maintenance, robust and fault-tolerant architecture, and interoperability.
    Download : Download high-res image (135KB) Download : Download full-size image
    Fig. 10. General architecture wireless sensor network (WSN). Table 3. Use of WSNs
    in agricultural systems. Use case No. Service category Tools and techniques used
    Farm type Maturity level Citation 29. IM Soil-moisture and temperature sensors,
    web application, and photovoltaic panels Open-air Prototype [57] 30. Electronic
    board, sensor board and GPRS board. Open-air Prototype [58] 31. Wireless sensor
    nodes, and Zigbee Open-air Conceptual [59] 32. Moisture sensors, actuators, and
    GUI Greenhouse (soil-based) Prototype [60] 33. WEM Wireless communication, temperature,
    and humidity sensors Greenhouse (soil-based) Prototype [61] 34. Sensor nodes,
    gateway unit, database, ordinary kriging spatial interpolation (OKSI) algorithm
    Hydroponics Prototype [62] 35. Microcontrollers, wireless radio frequency and
    sensor nodes Greenhouse (soil-based) Prototype [63] 36. Wireless sensor nodes,
    communication network, and mobile application Aquaponics Prototype [64] 37. Arduino,
    wireless module with temperature, relative humidity, luminosity, and air pressure
    sensors Any farm Prototype [65] 38. Zigbee, Wi-fi and sensors Hydroponics Prototype
    [66] 4.3. Cloud computing in agriculture According to the National Institute of
    Standard and Technologies (NIST), cloud computing (CC) is defined as a model for
    enabling ubiquitous, convenient, on-demand network access to a shared pool of
    configurable computing resources (e.g., networks, servers, storage, applications,
    and services) that can be rapidly provisioned and released with minimal management
    effort or service provider interaction [67]. The main architecture of CC shown
    in Fig. 11 is comprised of four layers: datacenter (hardware), infrastructure,
    platform, and application [68]. Each of these layers is linked with specific cloud
    service models, which are classified as software as a service (SaaS), platform
    as a service (PaaS), and infrastructure as a service (IaaS). Cloud computing has
    gained great attention over the past decade in the agriculture sector because
    it provides: 1) inexpensive storage services for data gathered from different
    domains through WSNs and other preconfigured IoT devices, 2) large-scale computing
    systems to perform intelligent decision-making by transforming this raw data into
    useful knowledge, and 3) a secure platform to develop agricultural IoT applications
    [69]. In combination with IoT and WSN, CC is employed to develop different agricultural
    applications, most of which are presented in Tables 2 and 3. CC technology is
    also used to create operational farm management systems (FMSs) to support farmers
    and farm managers in efficient monitoring of farm operations Table 4. presents
    the salient features of some of these FMSs. Another topic of interest that is
    being explored in global research is related to the traceability of agri-product
    quality [70]. But only preliminary research has been attempted to explore traceability
    compliance with standards of food safety and quality. Download : Download high-res
    image (362KB) Download : Download full-size image Fig. 11. Architecture of cloud
    computing, adapted from [68]. Table 4. Cloud computing-based farm management systems.
    Use case No. Service category Tools used Farm type Maturity level Citation 39.
    FM Fuzzy logic, Java, HTML, Apache Karaf, etc.; Greenhouse (soil-based) Conceptual
    [71] 40. RFID, and mobile app Open-air Deployed [72] 41. MySQL, financial analysis
    tool and mobile app Open-air Conceptual [73] 42. Self-leveling scale, control
    box, LCD display, and RFID tags Open-air Conceptual [74] The cloud-based agricultural
    systems have the potential to solve problems of increasing food demands, environmental
    pollution caused by excessive use of pesticides and fertilizers, and the safety
    of agricultural products. These FMSs, however, do not have the capability to support
    run-time customization in relation to distinct requirements of farmers. Moreover,
    because most farm data is usually fragmented and dispersed, it is difficult to
    record farm activities properly in current FMSs applications [75]. 4.4. Edge/fog
    computing in agriculture The rapid development of IoT has led to the explosive
    growth of sensors and smart devices, generating large volumes of data. The processing
    and analysis of such an enormous amount of data in real-time are challenging because
    it increases the load on the cloud server and also reduces the response speed.
    Simply using a cloud server is not able to provide real-time response while handling
    such a large data set. Additionally, IoT applications are sensitive to network
    latency because they require a constant exchange of information between devices
    and the cloud, making CC unfeasible to handle these applications [23]. The emergence
    of the edge computing concept can resolve the problems associated with CC. This
    new computing model deploys computing and storage resources (such as cloudlets
    or fog nodes) at the edge of the network closer to data sources such as mobile
    devices or sensors. This way, it can facilitate real-time analytics while keeping
    data secure on the device [23]. Edge computing offers intriguing possibilities
    for smart agriculture, but the applications of this technology are only in their
    infancy in agricultural systems. Hence, few research studies are available in
    this area; see Table 5. Most of the edge computing-based agricultural systems
    discussed in these studies are prototypical and address a limited selection of
    problems in various agricultural domains. So far, interoperability and scalability
    issues have not received sufficient consideration. Table 5. Edge computing-based
    agricultural systems. Use case No. Service category Edge computing techniques
    used Farm type Maturity level Citation 43. FM Computation offloading Aeroponics
    Prototype [76] 44. Computation offloading (automated control) Hydroponics Prototype
    [77] 45. Computation offloading (alert generation) Any farm Prototype [78] 46.
    PDM Computation offloading Open-air Prototype [79] 47. WEM Latency reduction Any
    farm Prototype [80] 48. Computation offloading Aquaponics Prototype [81] 49. SM
    Computation offloading (data analysis) Open-air Prototype [82] 4.5. Autonomous
    robot systems in agriculture Autonomous robot systems (ARS) are intelligent machines
    capable of performing tasks, making decisions, and acting in real-time, with a
    high degree of autonomy (without external influence or without explicit human
    intervention) [83]. Interest in agricultural ARS (AARS) has grown significantly
    in recent years because of their ability to automate some practices in outdoor
    and indoor farms - including seeding, watering, fertilizing, spraying, plant monitoring
    and phenotyping, environmental monitoring, disease detection, weed and pest controlling,
    and harvesting [15]. The agricultural robots use a combination of emerging technologies
    such as computer vision, WSNs, satellite navigation systems (GPS), AI, CC, and
    IoT, thereby facilitating the farmers to enhance productivity and quality of agricultural
    products. AARS in smart farming can be mobile AARS, which can move throughout
    the working field, or fixed AARS [84]. Mobile AARSs are further classified into
    unmanned ground vehicles (UGVs) and 2) unnamed aerial vehicles (UAVs), which are
    explained in the following sections. 4.5.1. Unmanned ground vehicles in agriculture
    Unmanned ground vehicles (UGVs) are agricultural robots that operate on the ground
    without a human operator. The main components of UGVs generally include; a platform
    for locomotive apparatus and manipulator, sensors for navigation, a supervisory
    control system, an interface for the control system, the communication links for
    information exchange between devices, and a system architecture for integration
    between hardware and software agents [85]. The control architecture of UGV can
    be remote-operated (controlled by a human operator via the interface) or fully
    autonomous (operated without the need for a human controller based on artificial
    intelligence technologies) [85]. Likewise, locomotive systems can be based on
    wheels, tracks, or legs [85]. Despite high ground adaptability, intrinsic omnidirectionality
    and soil protection of legged robots, they are uncommon in agriculture. However,
    when combined with wheels (wheel-legged robots), these robots offer a disruptive
    locomotion system for smart farms. In addition to their needed characteristics
    for infield operations, UGV should fulfill certain requirements such as small
    size, maneuverability, resilience, efficiency, human-friendly interface, and safety
    – to enhance crop yields and farm productivity. Table 6 summarizes the diverse
    range of UGVs designed for agricultural operations. Table 6. Different types of
    UGVs designed for performing agricultural tasks. Use case No. Service category
    Primary function Tools and techniques used Locomotion system Farm type Maturity
    level Citation 50. WUVM Weed control Modules (Vision, spray, mechanical weeding),
    and classification algorithms Four-wheel-steering system (4WS). Open-air Prototype
    [86] 51. Vision system with Kinect v2 sensor, and random sample consensus algorithm
    Four-wheel-drive (4WD) Open-air Prototype [87] 52. PDM Pesticides spraying RGB
    camera, HMI, and LiDAR Four-wheel-drive (4WD) Open-air Prototype [88] 53. RGB
    camera, and laser Four-wheel-drive (4WD) Open-air Prototype [89] 54. Crop treatment
    Hyperspectral cameras, thermal and infrared detecting systems. Four-wheel steering
    system (4WS) Open-air Prototype [90] 55. CM Seed sowing Ultrasonic sensor, and
    PI controller Caterpillar treads Open-air Prototype [91] 56. Ultrasonic sensor,
    GSM module and actuators. Four-wheel-drive (4WD) Open-air Prototype [92] 57. Artificial
    pollination Sensing module, pollinator system, RGB camera and odometry. Four-wheel-drive
    (4WD) Open-air Prototype [93] 58. Harvesting RGB-D camera and RCNN Four-wheel-steering
    system (4WS). Open-air Prototype [94] 59. RGB camera and RCNN Four-wheel-drive
    (4WD). Open-air Prototype [95] Most of the agricultural robotic systems presented
    above have a 4WD locomotive system because it offers ease of construction and
    control. The drawback of 4WD is that the wheels are strongly affected by terrains
    containing stone elements and/or cavities [85]. Hence, it is significant to explore
    other mechanisms, such as legged or wheel-legged locomotive systems. Some robots
    have computer vision systems, but due to the difficulty of developing an accurate
    and reliable system that replaces manual labor, most of these robots are built
    with a low-cost computer vision system, that is, using conventional RGB cameras.
    Moreover, most of the systems mentioned above are still in the research phase,
    with no commercial use on a large scale. 4.5.2. Unmanned aerial vehicles in agriculture
    Unmanned aerial vehicles (UAVs) or aerial robots are aircrafts with no human pilot
    on board. Depending on the type of technology incorporated to fly (wing structure)
    and autonomy level, there is a wide variety of UAVs [96]. For instance, according
    to wing type, UAVs can be fixed-wing (planes), single-rotor (helicopter), hybrid
    system (vertical takeoff and landing), and multirotor (drone). Among these, drones
    (multi-rotor technology) which are lifted and propelled by four (quadrotor) or
    six (hex-rotor) rotors, have become increasingly popular in the agriculture sector
    due to their mechanical simplicity in comparison to helicopters, which rely on
    a much more sophisticated plate control mechanism [97]. Similarly, according to
    autonomy level, UAVs can be either teleoperated in which the pilot provides references
    to each actuator of the aircraft so as to control it, in the same manner, an onboard
    pilot would, or tele-commanded in which the aircraft relies on an automatic controller
    on board that is in charge of maintaining a stable flight [96]. Equipped with
    the appropriate sensors (vision, infrared, multispectral, and hyperspectral cameras,
    etc.), agricultural UAVs allow farmers to obtain data (vegetation, leaf area,
    and reflectance indexes) from their fields to study dynamic changes in crops that
    cannot be detected by scouting the ground [98]. This data permits farmers to infer
    information related to crop diseases, nutrient deficiencies, water level, and
    other crop growth parameters. With this information, farmers can plan possible
    remedies (irrigation, fertilization, weed control, etc.). Table 7 reviews some
    of the UAV-based systems used for different agricultural operations. Table 7.
    Different UAV based systems developed for performing different agricultural operations.
    Use case No. Service category Primary function UAV type Cameras/ sensors Flight
    altitude (m) Farm type Maturity level Citation 60. CQM Vegetation monitoring Hexacopter
    Hyper-spectral camera 30 Open-air Prototype [99] 61. Biomass monitoring Octocopter
    RGB-sensor 50 Open-air Prototype [100] 62. CM Real-time growth monitoring Quadcopter
    Digital camera 100 Open-air Prototype [101] 63. Photosynthetic active radiation
    mapping Fixed wing Multi-spectral camera 150 Open-air Prototype [102] 64. Remote
    sensing Helicopter Multi-spectral camera 15-70 Open-air Prototype [103] 65. Remote
    sensing and mapping RC plane Digital camera 100-400 Open-air Prototype [104] 66.
    Rice pollination Helicopter Wind speed sensor 1.15, 1.23, 1.33 Open-air Prototype
    [18] 67. Droplet distribution estimation Quadcopter Digital canopy imager 3.5,
    4, 4.5 Open-air Prototype [105] 68. UREA spraying Quadcopter Multi and hyper spectral
    cameras Few meters Open-air Prototype [106] 69. Pesticide spraying Quadcopter
    RF module 5, 10, 20 Open-air Prototype [107] 70. Pesticide spray application Helicopter
    Digital camera 3-4 Open-air Prototype [108] 71. Automatic spray control system
    Helicopter Image transmitter 5, 7, 9 Open-air Prototype [109] 72. WUVM Multi-temporal
    mapping of weed Quadcopter Digital camera 30, 60 Open-air Prototype [110] 73.
    Weed mapping and control Digital camera 30 Open-air Prototype [111] 74. IM Water
    status assessment Fixed wing Multi-spectral camera 200 Open-air Prototype [112]
    75. Water stress detection Fixed wing Micro-hyper spectral camera 575 Open-air
    Prototype [113] 76. Water stress investigation Fixed wing Digital camera 90 Open-air
    Prototype [114] 77. Assessing the effects of saline reclaimed waters and deficit
    irrigation on Citrus physiology Fixed wing Digital camera 100 Open-air Prototype
    [115] 78. Water status and irrigation assessment Quadcopter Multi-spectral camera
    30 Open-air Prototype [116] 79. PDM Phylloxera disease detection Hexacopter RGB
    and multi-spectral cameras 60, 100 Open-air Prototype [117] 80. Citrus greening
    disease detection Hexacopter Multi-spectral camera 100 Open-air Prototype [118]
    Most of the systems mentioned above are still in the research phase, with no commercial
    use on a large scale. Other problems with these UAVs are associated with battery
    and flight time [96]. At the moment, lithium-ion batteries are being used because
    their capacity is larger than that of conventional batteries. But an increase
    in battery capacity increases the drone weight, and now research is undergoing
    to address this issue. In addition, the existing UAVs have complex user interfaces,
    and only experts can use them to perform agricultural tasks. By improving the
    user interface making it human-centered with multimodal feedback will allow people
    who are older or unfamiliar with UAV technology to control it more easily. 4.6.
    Big data and analytics in agriculture Rapid developments in IoT and CC technologies
    have increased the magnitude of data immeasurably. This data, also referred to
    as Big Data (BD), includes textual content (i.e., structured, semi-structured,
    and unstructured), and multimedia content (e.g., videos, images, audio) [119].
    The process of examining this data to uncover hidden patterns, unknown correlations,
    market trends, customer preferences, and other useful information is referred
    to as big data analytics (BDA). Big data is typically characterized according
    to five dimensions defined by five Vs, which are displayed in Fig. 12 [120]. The
    paradigm of BD-driven smart agriculture is comparatively new, but the trend of
    this application is positive as it has the capacity to bring a revolutionary change
    in the food supply chain and food security through increased production. Agricultural
    big data is usually generated from various sectors and stages in agriculture,
    which can be collected either from agricultural fields through ground sensors,
    aerial vehicles, and ground vehicles using special cameras and sensors; from governmental
    bodies in the form of reports and regulations; from private organizations through
    online web services; from farmers in the form of knowledge through surveys; or
    from social media [120]. The data can be environmental (weather, climate, moisture
    level, etc.), biological (plant disease), or geo-spatial depending on the agricultural
    domain and differs in volume, velocity, and formats [121]. The gathered data is
    stored in a computer database and processed by computer algorithms for analyzing
    seed characteristics, weather patterns, soil properties (like pH or nutrient content),
    marketing and trade management, consumers’ behavior, and inventory management.
    A variety of techniques and tools are employed to analyze big data in agriculture.
    A summary of some of the studies is given in Table 8. Machine learning, cloud-based
    platforms, and modeling and simulation are the most commonly used techniques.
    Particularly, machine learning tools are used in prediction, clustering, and classification
    problems. Whereas cloud platforms are used for large-scale data storing, preprocessing,
    and visualization. There are still many potential areas that are not adequately
    covered in existing literature, where BDA can be applied to address various agricultural
    issues. For instance, these include data-intensive greenhouses and indoor vertical
    farming systems, quality control and health monitoring of crops in outdoor and
    indoor farms, genetic engineering, decision support platforms to assist farmers
    in the design of indoor vertical farms, and scientific models for policymakers
    to assist them in decision-making regarding the sustainability of the physical
    ecosystem. Lastly, most systems are still in the prototypical stage. Download
    : Download high-res image (437KB) Download : Download full-size image Fig. 12.
    Five dimensions of “Big Data”. Table 8. Big data tools and services in agriculture.
    Use case No. Service category Tools and techniques used Big data source Farm type
    Maturity level Citation 81. WEM Crop modelling and simulation, geospatial analysis
    Weather station, historical databases Open-air Conceptual [121] 82. CM Clustering,
    prediction, and classification Sensor, historical, and farmer data Open-air Conceptual
    [122] 83. Support vector machine Sensor data Open-air Conceptual [123] 84. IM
    Cloud-based application. Sensor data Hydroponics Prototype [124] 85. Cloud-based
    platform, and web services Sensor data, industry standards Open-air Conceptual
    [125] 4.7. Artificial intelligence in agriculture Artificial intelligence (AI)
    involves the development of theory and computer systems capable of performing
    tasks requiring human intelligence, such as sensorial perception and decision-making
    [126]. Combined with CC, IoT, and big data, AI, particularly in the facet of machine
    learning (ML) and deep learning (DL), is regarded as one of the key drivers behind
    the digitization of agriculture. These technologies have the potential to enhance
    crop production and improve real-time monitoring, harvesting, processing, and
    marketing [127]. Several intelligent agricultural systems are developed that use
    ML and DL algorithms to determine various parameters like weed detection, yield
    prediction, or disease identification. These systems are discussed in the next
    two sub-sections. 4.7.1. Machine learning in agriculture Machine learning (ML)
    techniques are broadly classified into three categories: 1) supervised learning
    (linear regression, regression trees, non-linear regression, Bayesian linear regression,
    polynomial regression, and support vector regression), 2) unsupervised learning
    (k-means clustering, hierarchal clustering, anomaly detection, neural networks
    (NN), principal component analysis, independent component analysis, a-priori algorithm
    and singular value decomposition (SVD)); and 3) reinforcement learning (Markov
    decision process (MDP) and Q learning) [128]. ML techniques and algorithms are
    implemented in the agriculture sector for crop yield prediction, disease, and
    weed detection, weather prediction (rainfall), soil properties estimation (type,
    moisture content, pH, temperature, etc.), water management, determination of the
    optimal amount of fertilizer, and livestock production and management [129] Table
    9. presents a list of publications where different ML algorithms are utilized
    for various agricultural applications. From the analysis of these articles, “crop
    yield prediction” is a widely explored area, and linear regression, neural network
    (NN), random forest (RF), and support vector machine (SVM) is the most used ML
    techniques to enable smart farming. The presented use cases are still in the research
    phase with no reported commercial usage at the moment. Moreover, it is also found
    that AI and ML techniques are sparsely explored in the greenhouse and indoor vertical
    farming systems, particularly hydroponics, aquaponics, and aeroponics. There are
    only a few publications available summarized in the same table where ML techniques
    are employed. Considering the digital transformation''s cyber-security and data
    privacy challenges, new approaches such as federated learning and privacy-preserving
    methods are being developed to enable digital farming [130]. These approaches
    build ML models from local parameters without sharing private data samples, thus
    mitigating security issues. Table 9. Machine learning-based agricultural systems.
    Use case No. Service category Data sources Algorithms used Farm type Maturity
    level Citation 86. CM Yield maps, climate, and temporal data. SVM with radial
    basis functions Open-air Prototype [131] 87. Vegetation dataset from Landsat 8
    OLI. Boosted regression tree, RF regression, support vector regression, and Gaussian
    process regression Open-air Prototype [132] 88. Historical soil and rainfall data
    Recurrent neural network Open-air Prototype [133] 89. Plot-scale wheat data Multiple
    linear regression and RF Open-air Prototype [134] 90. Temperature and rainfall
    records Artificial neural network Open-air Prototype [135] 91. Soil data, and
    satellite imagery Counter-propagation artificial neural networks Open-air Prototype
    [136] 92. Rainfall records RF Open-air Prototype [137] 93. Field survey data of
    64 farms SVM, RF, decision tree Open-air Prototype [138] 94. Tap water samples
    RF Hydroponics Prototype [139] 95. PDM Images from a strawberry greenhouse SVM
    Greenhouse (soil-based) Prototype [140] 96. Sensor data Least squares SVM Open-air
    Prototype [141] 97. Sensor data Decision trees Aquaponics Prototype [142] 98.
    WUVM Image data RF Open-air Prototype [143] 99. Images from a university farm.
    SVM Open-air Prototype [144] 100. SM 140 soil samples from top layer Least squares
    support vector machines Open-air Prototype [145] 101. Humidity data from Radarsat-2
    Extreme learning machine-based regression Open-air Prototype [146] 102. WEM Rainfall
    data Bayesian linear regression, boosted decision tree and decision forest regression,
    neural network regression Open-air Prototype [147] 103. Air temperature, wind
    speed, and solar radiation data Artificial neural network and SVM Greenhouse (soil-based)
    Prototype [148] 4.7.2. Deep learning in agriculture Deep learning (DL) represents
    the extension of classical ML that can solve complex problems (predictions and
    classification) particularly well and fast because more “depth” (complexity) is
    added into the model. The primary advantage of DL is feature learning which involves
    automatic extraction of features (high-level information) from large datasets
    [149]. Different DL algorithms are convolutional neural networks (CNNs), long
    short term memory (LSTM) networks, recurrent neural (RNN) networks, generative
    adversarial networks (GANs), radial basis function networks (RBFNs), multilayer
    perceptron (MLPs), feedforward artificial neural network (ANN), self-organizing
    maps (SOMs), deep belief networks (DBNs), restricted Boltzmann machines (RBMs),
    and autoencoders. A detailed description of these algorithms, popular architectures,
    and training platforms is available at various sources [150]. Fig. 13 illustrates
    an example of DL architecture of CNN [151]. In the agriculture sector, DL algorithms
    are mostly used to solve problems associated with computer vision applications
    that target the prediction of key parameters, such as crop yields, soil moisture
    content, weather conditions, and crop growth conditions; the detection of diseases,
    pests, and weed; and the identification of leaf or plant species [152]. Computer
    vision is an interdisciplinary field that has been gaining huge amounts of traction
    in recent years due to the surge in CNNs. It offers methods and techniques that
    allow the processing of digital images accurately and enables computers to interpret
    and understand the visual world [153]. A summary of agricultural applications
    using DL and computer vision techniques is given in Table 10. Among all the DL
    algorithms, CNNs or Convet and its variants are the most used algorithms in agricultural
    applications. The variants of CNN are region-based CNNs (RCNN), Fast-RCNN, Faster-RCNN,
    YOLO, and Mask-RCNN, among which the first four are mostly used to solve object
    detection problems. Mask-RCNN, on the other hand, is used to solve instance segmentation
    problems. The reader could refer to the existing bibliography for a detailed description
    of these algorithms and their applications [152]. Few studies have also used other
    DL techniques. Talking about datasets, most DL models are trained using images,
    and few models are trained using sensor data gathered from fields. This shows
    that DL can be applied to a wide variety of datasets. It is also observed that
    most of the work is done on outdoor farms, whereas next-generation farms (environment-controlled)
    are not extensively explored. Though DL has the potential to enable digital farming,
    most systems are still in the prototype phase. Additionally, the new challenges
    imposed by cyber-security and privacy issues require optimization of current DL
    and computer vision approaches. Download : Download high-res image (334KB) Download
    : Download full-size image Fig. 13. Example of CNN architecture. Table 10. Deep
    learning-based agricultural systems. Use case No. Service category Data sources
    Algorithms used Farm type Maturity level Citation 104. CM Satellite and weather
    data LSTM network Open-air Prototype [154] 105. Rice yield data, meteorology,
    and area data (81 counties). Back-Propagation neural networks and RNN Open-air
    Prototype [155] 106. Commercial fields’ images CNN Open-air Prototype [156] 107.
    Aerial orthoimages Faster RCNN Open-air Prototype [157] 108. Historical yields
    and greenhouse environmental parameters. Temporal CNN and RNN. Greenhouse (soil-based)
    Prototype [158] 109. Lettuce images from farm. CNN Greenhouse (soil-based) Prototype
    [159] 110. WEM Soil moisture data, and daily meteorological data RBMs Open-air
    Prototype [160] 111. CQM Images from the farm and Google search engine Mask-RCNN
    Aquaponics Prototype [161] 112. WUVM Weed and crop species images from 6 different
    datasets. CNN Open-air Prototype [162] 113. PDM Images collected from Internet.
    CNN Open-air Prototype [163] 114. Public dataset Deep CNN Open-air Prototype [164]
    115. Images from camera. Faster R-CNN, and single shot multibox detector Open-air
    Prototype [165] 116. Dataset with images of Walnut leaves CNN Open-air Prototype
    [166] 117. FDC RGB and multi-modal images Faster R-CNN Open-air Prototype [167]
    118. Images of oranges and green apples CNN Open-air Prototype [168] 119. Images
    of ripe young and expanding apples. YOLO-V3 Open-air Prototype [169] 4.8. Agricultural
    decision support systems A decision support system (DSS) can be defined as a smart
    system that supports decision-making to specific demands and problems by providing
    operational answers to stakeholders and potential users based on useful information
    extracted from raw data, documents, personal knowledge, and/or models [170]. DSS
    can be data-driven, model-driven, communication-driven, document-driven, and knowledge-driven.
    The salient features of these DSSs are available at following source [171]. Fig.
    14 presents the general architecture of a DSS, consisting of four fundamental
    components, each having its specific purpose. Download : Download high-res image
    (214KB) Download : Download full-size image Fig. 14. The general architecture
    of decision support system. Download : Download high-res image (400KB) Download
    : Download full-size image Fig. 15. 5C architecture for cyber-physical systems,
    (adapted) [187]. Due to the evolution of agriculture 4.0, the amount of farming
    data has increased immensely. To transfer this heterogenous data into practical
    knowledge, platforms like agricultural decision support systems (ADSS) are required
    to make evidence-based and precise decisions regarding farm operation and facility
    layout [172]. Over the past few years, ADSSs are gaining much attention in the
    agriculture sector. A number of ADSSs have been developed that focus on a variety
    of agricultural aspects, such as farm management, water management, and environmental
    management. Table 11 presents a summary of the ADSSs found in the literature.
    From this analysis, most ADSSs have been found to not consider expert knowledge,
    which is highly valuable as it allows to development of systems as per user''s
    needs. The other reported issues with some of these ADDSs are complex GUIs, inadequate
    re-planning components, a lack of prediction and forecast abilities, and a lack
    of ability to adapt to uncertain and dynamic factors. It is also worth noting
    that all the ADSSs are for outdoor agricultural systems and are in the research
    phase. In comparison, the application of ADSS in indoor soilless farming is still
    very much unexploited. Table 11. Agricultural decision support systems. Use case
    No. Service category Data sources Tools and techniques used Maturity level Farm
    type Citation 120. IM Environmental and crop data Partial least squares regression
    and adaptive neuro fuzzy inference system Prototype Open-air [173] 121. Crop and
    site data Fuzzy C-means algorithm Prototype Open-air [174] 122. WEM Meteorological
    and crop data Geographical information system (GIS) Prototype Open-air [175] 123.
    Environmental, economic, and crop data VEGPER, ONTO, SVAT-CN, EROSION, GLPROD
    Prototype Open-air [176] 124. FM Environmental and crop-related data B-patterns
    optimization algorithm Prototype Open-air [177] 125. Environmental and crop data
    Agent-based modeling, SVM and decision trees Prototype Aquaponics [178] 126. Environmental
    and crop data Object-oriented methodology Prototype Greenhouse (soil-based) [179]
    127. PDM Crop data Excel based algorithm Prototype Greenhouse (soil-based) [180]
    128. Environmental data Rule-based approach Conceptual Greenhouse (soil-based)
    [181] 129. Environmental data Rule-based approach Prototype Greenhouse (soil-based)
    [182] 130. WUVM 10 years weather data and a set of vegetation index. Rule-based
    application Prototype Open-air [183] 4.9. Agricultural cyber-physical systems
    As one of the main technologies of Industry 4.0, a cyber-physical system (CPS)
    refers to an automated distributed system that integrates physical processes with
    communication networks and computing infrastructures [184]. There are three standard
    CPS reference architecture models: namely, 5C, RAMI 4.0, and IIRA, and their detailed
    description is available at following source [185]. Among these, the 5C is a well-known
    reference model with widespread usage. The architecture of 5C consists of five
    levels which are represented in Fig. 15. CPS benefits from a variety of existing
    technologies such as agent systems, IoT, CC, augmented reality, big data, and
    ML [186]. Its implementation ensures scalability, adaptability, autonomy, reliability,
    resilience, safety, and security improvements. Download : Download high-res image
    (461KB) Download : Download full-size image Fig. 16. Schematic of a digital twinning
    process, (adapted) [199]. Agricultural field is regarded as one of the complex
    domains that can benefit from CPS technology. Agricultural cyber-physical systems
    (ACPSs) use advanced electronic technologies and agricultural facilities to build
    integrated farm management systems that interact with the physical environment
    to maintain an optimal growth environment for crops [188]. ACPSs collect the essential
    and appropriate data about climate, soil, and crops, with high accuracy and use
    it to manage watering, humidity, and plant health, etc. A variety of ACPSs has
    been developed for the management of different services, and their summary is
    given in Table 12. Looking at these ACPSs, most systems are still at the prototype
    and conceptual level. Moreover, most studies are conducted for outdoor farms,
    with only a few works published related to soil-based greenhouse systems. No study
    is found that is relevant to indoor soilless farming systems. ACPSs has attracted
    significant research interest because of their promising applications across different
    domains; deploying CPS models in real-life applications is still a challenge as
    it requires proper hardware and software [189]. Moreover, particular attention
    should be given to autonomy, robustness, and resilience while engineering ACPSs
    in order to handle the unpredictability of the environment and the uncertainty
    of the characteristics of agricultural facilities. There are multiple factors
    (humans, sensors, robots, crops, and data, among others) that impact ACPSs. To
    ensure a smooth operation while avoiding conflicts, errors, and disruptions, ACPSs
    need to be designed carefully and comprehensively. Table 12. Agricultural cyber-physical
    systems. Use case No. Service category Tools and techniques used Maturity level
    Farm type Citation 131. IM Integrated open geospatial web service Prototype Open-air
    [190] 132. Moisture sensors, and solenoid valves Prototype Greenhouse (soil-based)
    [191] 133. Sensor and sink nodes, network, and control centre Prototype Greenhouse
    (soil-based) [188] 134. Transceiver modules, multi-sensor array and weather forecasting
    system Prototype Open-air [186] 135. PDM ToxTrac and NS2 simulator Conceptual
    Open-air [192] 136. Sensors and cameras Prototype Greenhouse (soil-based) [193]
    137. Unmanned aircraft system Conceptual Open-air [194] 138. CM Multispectral
    terrestrial mobile and autonomous aerial mobile mechatronic systems, and GIS Conceptual
    Open-air [195] 139. Edge and cloud computing Prototype Open-air [196] 140. Sensors,
    actuators, Arduino, and Raspberry Pi Prototype Any farm [197] 4.10. Digital twins
    in agriculture Digital twin (DT) is a dynamic virtual replica of a real-life (physical)
    object of which it mirrors its behaviors and states over multiple stages of object''s
    lifecycle by using real-world data, simulation, and machine learning models, combined
    with data analytics to enable understanding, learning, and reasoning [198]. A
    complete description of the DT concept for any physical system requires consolidation
    and formalization of various characteristics, including the physical and virtual
    entities, the physical and virtual environments, the metrology, and realization
    modules that perform the physical to virtual and the virtual to physical connection
    or twinning, the twinning and twinning rate, and the physical and virtual processes
    [199]. The schematic showing the mapping of these characteristics is shown in
    Fig. 16. The DT concept has gained prominence due to the advances in the technologies
    such as the Internet of Things, big data, wireless sensor networks, and cloud
    computing. This is because these technologies allow real-time monitoring of physical
    twins at high spatial resolutions through both miniature devices and remote sensing
    that produce ever-increasing data streams [21]. The concept of DT in agricultural
    applications is rather immature as compared to other disciplines with its first
    references occurred in 2017; hence its added value has not yet been discussed
    extensively [21]. This is because framing is a highly complex and dynamic domain
    because of its dependence on natural conditions (climate, soil, humidity) and
    presence of living physical twins (plants and animals) and non-living physical
    twins (indoor farm buildings, grow beds, outdoor agricultural fields, agricultural
    machinery). The non-living physical twins interact directly or indirectly with
    plants and animals (living physical twins), thereby introducing more challenges
    for DT in agriculture. Whereas in other domains such as manufacturing DTs are
    mostly concerned with non-living physical twins. Table 13 summarises the agricultural
    DTs developed in the last 10 years. Table 13. Digital twins in agriculture Use
    case No. Service category Physical twin Tools and techniques used Maturity level
    Farm type Citation 141. WEM Aquaponics system and building IoT sensor system,
    and MQQT broker Prototype Aquaponics [200] 142. CM Agricultural product Sensor,
    network, and computational units Prototype Open-air [201] 143. FM Agricultural
    machinery ROS platform, Gazebo 3D and Open Street Maps Prototype Open-air [202]
    144. Farmland Sensor, network, and computational units Prototype Open-air [203]
    145. Agricultural farm/landscape Sensors, and PLCs Conceptual Open-air [204] 146.
    Agricultural building Sensors, GUI, and control centre Prototype Greenhouse (soil-based)
    [205] 147. PDM Crops (plants)/ Trees Mobile application and computational unit
    Deployed Open-air [206] 148. Trees planted on orchard IoT sensors, network, and
    computational units Prototype Open-air [207] The analysis shows that most studies
    have focused on open-air farming systems. Only one study is found that has proposed
    DT for soil-based vertical farming system and one study that implemented DT for
    soilless farming system (aquaponics). This might be because the design and management
    of modern farming systems are challenging. Moreover, most DTs are in the research
    phase with no commercial deployment at the moment. The reported benefits of the
    DT applications in agriculture are cost reductions, catastrophe prevention, clearer
    decision making, and efficient management operations, which can be applied to
    several agricultural subfields like plant and animal breeding, aquaponics, vertical
    farming, cropping systems, and livestock farming. While DT technology has great
    potential, achieving the synchronization between the physical entity and its digital
    counterpart is challenging. The complexity of this process is further amplified
    in agricultural systems due to the idiosyncrasies of living physical twins. Hence,
    implementation of agricultural DT should start with micro-farms, which can then
    be gradually enhanced to an intelligent and autonomous version by incorporating
    more components. 4.11. Roadblocks in digitization of agriculture industry This
    section provides an answer to RQ3 by listing a series of interconnected roadblocks
    hampering a larger adoption of digital technologies in the agriculture sector.
    After analysing 148 articles, 21 roadblocks are identified which can be categorized
    at technical and socio-economic levels. 4.12. Technical roadblocks • Interoperability:
    data is considered a cornerstone for the success of smart systems. Agricultural
    data usually comes from multiple heterogeneous sources such as thousands of individual
    farmlands, animal factories, and enterprise applications. This data can have diverse
    formats, making data integration complex. Hence, data interoperability is essential
    to enhance the value of this massively dispersed data after systematic data collection,
    storage, processing, and knowledge mining [208]. Likewise, for establishing effective
    communication between heterogeneous devices, they need to be interconnected and
    interoperable. With cross-technology communication, interoperability of the system
    can be improved [209]. • Standardization: to fully exploit the digital technologies
    for smart farming applications, standardization of the devices is essential. Output
    differences can occur because of misinterpretation and alterations from time to
    time. With standardization, the interoperability issues of the devices, applications,
    and systems can also be resolved [25]. • Dataquality: to produce meaningful results,
    data quality is also crucial along with data security, storage, and openness.
    The lack of decentralized data management systems is another roadblock hindering
    the adoption of smart farming practices [9]. This issue decreases the willingness
    of multiple actors to share agriculture data. • Hardwareimplementation: the deployment
    of a smart agricultural setup in large-scale open fields is extremely challenging.
    This is because all the hardware consisting of IoT devices, wireless sensor networks,
    sensor nodes, machinery, and equipment directly exposed to harsh environmental
    conditions such as heavy rainfall, high/low-temperature levels, extreme humidity,
    strong wind speeds and many other possible dangers which can destroy electronic
    circuits or disrupt their normal functionality [210]. A possible solution is to
    build an adequate casing for all the costly devices that is robust and durable
    enough to endure real field conditions [211]. • Adequatepower sources: typically,
    the wireless devices deployed at farms consistently operate for a long time and
    have limited battery life. A suitable energy saving scheme is necessary because,
    in case of any failure, instant battery replacement is complicated, especially
    in open-air farms where devices are strategically placed with minimum access [210].
    The possible solutions to optimize energy consumption are usage of low power sensors
    and, proper management of communication [24,212]. Wireless power transfer and
    self-supporting wireless system are other promising solutions to eliminate the
    need for battery replacement by recharging the batteries through electromagnetic
    waves. However, long-distance wireless charging is needed in most agricultural
    applications [9]. Ambient energy harvesting from rivers, fluid flow, movement
    of vehicles and, ground surface using sensor nodes offers another viable solution,
    but the converted electrical energy is limited at present – posing the need to
    improve power conversion efficiency [213]. • Reliability: The reliability of devices,
    as well as corresponding software applications, is crucial. This is because IoT
    devices need to gather and transfer the data based on which decisions are made
    using several software packages. Unreliable sensing, processing, and transmission
    can cause false monitoring data reports, long delays, and even data loss – eventually
    impacting the performance of agricultural system [25]. • Adaptability: agricultural
    environments are complex, dynamic, and rapidly changing. Hence, when designing
    a system, it is pertinent for the devices and applications to proactively adapt
    with the other entities under uncertain and dynamic factors - offering the needed
    performance [214]. • Robust wirelessarchitectures: wireless networks and communication
    technologies offer several benefits in terms of low cost, wide-area coverage,
    adequate networking flexibility, and high scalability. But dynamic agriculture
    environments such as temperature variations, living objects’ movements, and the
    presence of obstacles pose severe challenges to reliable wireless communication.
    For instance, fluctuations in the signal intensity occur due to the multipath
    propagation effects – causing unstable connectivity and inadequate data transmission
    [215]. These factors impact the performance of the agricultural system. Hence,
    there is a need for robust and fault-tolerant wireless architectures with appropriate
    location of sensor nodes, antenna height, network topology, and communication
    protocols that also require minimum maintenance [11]. • Interference: another
    challenge is wireless interference and degradation of the quality of service because
    of the dense deployment of IoT devices and wireless sensor networks. These issues
    can be mitigated with efficient channel scheduling between heterogeneous sensing
    devices, cognitive radio-assisted WSNs, and emerging networking primitives such
    as concurrent transmission [216]. Since agriculture devices are distributed at
    indoor greenhouses, outdoor farmlands, underground areas, or even water areas,
    cross-media communication between underground, underwater, and air is also required
    for the complete incorporation of smart technologies [217]. • Security and privacy:
    the distributed nature of smart agricultural systems brings potential vulnerabilities
    to cyber-attacks such as eavesdropping, data integrity, denial-of-service attacks,
    or other types of disruptions that may risk privacy, integrity, and availability
    of the system [218]. Cyber-security is a major challenge that needs to be addressed
    within the context of smart farming, with diverse privacy-preserving mechanisms
    and federated learning approaches [130]. • Compatibility: to achieve the standards
    of fragmentation and scalability, the models or software applications developed
    should be flexible and run on any machine installed in the agricultural system
    [13]. • Resource optimization: farmers require a resource optimization process
    to estimate the optimal number of IoT devices and gateways, cloud storage size,
    and amount of transmitted data to improve farm profitability. Since farms have
    different sizes and need distinct types of sensors to measure different variables,
    resource optimization is challenging [219]. Secondly, most of the farm management
    systems do not offer run-time customization in relation to the distinct requirements
    of farmers. Hence, complex mathematical models and algorithms are required to
    estimate adequate resource allocation [75]. • Scalability: the number of devices,
    machinery, and sensors installed at farms is increasing gradually due to advancements
    in technologies. To support these entities, gateways, network applications, and
    back-end databases should be reliable and scalable [220]. • Human-centereduserinterfaces:
    complex user interfaces of existing agricultural applications and devices are
    impeding smart farming practices. Most GUI is designed in a way that only experts
    can use to perform agricultural tasks. Improving the user interface by making
    it human-centered with multimodal feedback will allow a larger group of people
    to use it to perform different agricultural operations [96]. 4.13. Socio-economic
    roadblocks • Gap between farmers and researchers: the participation of farmers
    is a key factor toward the success of the digitization of the agricultural industry.
    Farmers face a lot of problems during the agri-food production process, which
    smart technologies could fix, but agricultural experts are not usually aware of
    these issues [16]. Moreover, to devise an adequate smart solution, first, it is
    important to fully understand the nature of problems. Hence, it is essential to
    bridge the gap between farmers, agricultural professionals, and AI researchers.
    • Costs associated with smart systems: the costs associated with the adoption
    of smart technologies and systems are the major deterrent in the digitization
    of the agricultural sector. These costs usually involve deployment, operating,
    and maintenance costs. The deployment costs of smart systems are usually very
    high as they involve; i) hardware installation such as autonomous robots and drones,
    WSNs, gateways, and base station infrastructure, etc., to perform certain farm
    operations, and ii) hiring the skilled labour [221]. Likewise, to facilitate data
    processing, management of IoT devices and equipment, and knowledge exchange, subscription
    of centralized networks and software packages is required, which ultimately increases
    the operating costs [222]. Though sometimes service providers offer free subscription
    packages with restricted features, the amount of storage capacity is limited.
    To ensure the adequate operations of the smart system, occasional maintenance
    is required, which then also adds up to total costs. Other types of costs associated
    with smart systems deployment could be environmental, ethical, and social costs.
    To overcome cost related roadblocks, initiatives focusing on cooperative farming
    are needed that provide; i) support services for better handling of costs and
    needed investments, and ii) hardware solutions to transform conventional equipment
    into smart farm-ready machinery to reduce high initial costs [222]. • Digital
    division: another factor that is slowing the digitization of the agricultural
    sector is the lack of knowledge of digital technologies and their applications.
    The majority of farmers have no idea about the significance of digital technologies,
    how to implement and use them, and which technology is suitable for their farm
    and meets their requirements [14]. Hence, it is essential to educate farmers about
    modern farming technologies and systems. Moreover, different strategies are needed
    to build tools using natural language that farmers with low education levels can
    easily understand [223]. • Return on investment: in agriculture, the profit margin
    is very important like other sectors. When it comes to the implementation of advanced
    technologies, farmers have concerns related to the time to recover the investment
    and to the difficulties in evaluating the advantages [12]. • Trust building: unlike
    in other disciplines, building trust regarding the effectiveness of smart technologies
    in agriculture is difficult because many decisions affect systems that involve
    living and non-living entities, and consequences can be hard to reverse [16].
    Additionally, insufficient proof of the impact of digital tools on-farm productivity
    further intensifies the current challenges. • Laws and regulations: different
    regions and countries have different legal frameworks which impact the implementation
    of digital technologies in the agriculture sector, particularly in monitoring
    and agri-food supply [70]. Likewise, regulations related to resource allocation
    (spectrum for wireless devices), data privacy, and security also vary from one
    country to another [70]. • Connectivity infrastructure: most less-developed countries
    usually have insufficient connectivity infrastructure that limits access to advanced
    digital tools that would help to turn data from heterogenous sources into valuable
    and actionable insights [10]. 4.14. Discussion This section discusses the main
    conclusions of RQ1, RQ2, and RQ3. In addition, added value, considerations, and
    future directions are also presented to ensure higher accuracy and great advancements
    in agricultural industry. 4.15. RQ1, RQ2 and RQ3 The present study tried to articulate
    the emerging digital technologies being implemented in agricultural industry to
    anticipate the future trajectories of agriculture 4.0. By looking at Table 2,
    Table 3, Table 4, Table 5, Table 6, Table 7, Table 8, Table 9, Table 10, Table
    11, Table 12, Table 13 in section 4, it can be seen some technologies such as
    big data and analytics, wireless sensor networks, cyber-physical systems, and
    digital twins are not significantly explored in agriculture. A reason for this
    gap could be that implementing advanced technologies with more complex operations
    can be expensive, at least in the early experimental phase of their adoption.
    Hence, the development of these technologies in agricultural industry should increase
    in the coming years. The results of SLR also show that IoT is significantly implemented
    in farms. This is due to the broad functionality of IoT such as in the monitoring,
    tracking and tracing, agriculture machinery, and precision agriculture [21]. It
    can be said that IoT is one of the main research objectives within the agriculture
    4.0 approaches. Nevertheless, only few studies have considered data security and
    reliability, scalability, and interoperability while developing an intelligent
    agricultural system. The research findings also demonstrated that most use cases
    are still in the prototype phase. The possible reason could be because most agricultural
    operations have to do with living subjects, like animals and plants or perishable
    products, and developing systems is harder than non-living human-made systems.
    Another reason might be that agriculture is a slow adopter of technology because
    of transdisciplinary nature of this field, and hence to develop intelligent systems,
    the agricultural community must become familiar will all the digital technologies.
    Lastly, variations in plant/crops’ species, and growth conditions also make digitization
    of agricultural systems complex [188]. The SLR findings also show that most of
    the systems are developed for open-air soil-based farms contrary to indoor farms
    (soilless and soil-based). This is due to complex design and management of indoor
    farms particularly soilless farms where parameters and factors (pH, air temperature,
    humidity, etc.) to be controlled are diverse [5]. But with introduction of digital
    technologies and data-driven computer applications in indoor farms, a more robust
    control of the process can be achieved. Furthermore, it is also revealed from
    SLR that limited research is conducted in three (soil management, fruit detection
    and counting and crop quality management) out of nine different service categories
    mentioned in section 3. This corroborates that substantial research and development
    is needed in some areas to ensure successful digitization of agriculture industry
    in developed countries as well as in developing countries. The complexity of agriculture
    ecosystem presents a series of interconnected roadblocks that hinder the full
    integration of digital technologies for agriculture 4.0 realization. Hence, it
    is essential to identify potential roadblocks in order to come up with strategic
    solutions to overcome them. This study is an attempt to explore what these roadblocks
    are. Based on analysis, 21 roadblocks were identified and classified at technical
    and socio-economic levels. These roadblocks are listed in section 5, which suggests
    what needs to be done for digitization of agricultural industry on larger scale.
    But it is still not known, to what extent elimination or mitigation of these roadblocks
    assist in successful integration of digital technologies. 4.16. Added value of
    agricultural digitization Based on analysis, several benefits that can motivate
    framers and other actors to support digitization of agricultural industry are
    identified and summarised below. The presented benefits have potential to maximise
    the farm''s productivity and enhance product quality, but they should not be considered
    a panacea for challenges associated with smart agriculture [222]. • Improved agility:
    digital technologies improve the agility of farm operations. Through real-time
    surveillance and forecast systems, farmers or agricultural experts can rapidly
    react to any potential fluctuations in environmental and water conditions to save
    crops [221]. • Green process: digital technologies make the farming process more
    environmentally friendly and climate-resilient by significantly reducing the usage
    of in-field fuel, nitrogen fertilizers, pesticides, and herbicides [224]. • Resource
    use efficiency: digital platforms can improve resource use efficiency by enhancing
    the quantity and quality of agricultural output and limiting the usage of water,
    energy, fertilizers, and pesticides [3]. • Time and cost savings: digital technologies
    enable significant time and cost savings by automating different operations, such
    as harvesting, sowing, or irrigation, controlling the application of fertilizers
    or pesticides, and scheduling the irrigation [225]. • Asset management: digital
    technologies allow real-time surveillance of farm properties and equipment to
    prevent theft, expedite component replacement and perform routine maintenance
    [10]. • Product safety: digital technologies ensure adequate farm productivity
    and guarantee a safe and nutritious supply of agri-food products by preventing
    fraud related to adulteration, counterfeit, and artificial enhancement [218].
    4.17. Considerations and future prospects The upcoming initiatives would result
    in significant improvements in the agricultural sector. But in order to make things
    sustainable for small and medium-scale growers, roadblocks mentioned in section
    5 need to be addressed first. Awareness campaigns highlighting the significance
    of smart agriculture at every level of the agricultural value chain and promoting
    innovative ways (such as gamification) to encourage stakeholders to take on an
    active role in the digital revolution can mitigate some of the mentioned roadblocks
    [9]. Government level initiatives, grants and endowments, public-private partnerships,
    the openness of data, and regional basis research work can also assist in coping
    with potential roadblocks. Lastly, a roadmap can be adopted while developing a
    smart agriculture system, starting from basic architecture with few components
    and simpler functionality, gradually adding components and functionality to develop
    a complex system with the full potential of digitization [21]. These considerations
    can pave the way for successful implementation of agriculture 4.0. The future
    prospects of digital technologies in smart agriculture involve using explainable
    artificial intelligence to monitor crop growth, estimate crop biomass, evaluate
    crop health, and control pests and diseases. Explainable AI fades away the traditional
    black-box concept of machine learning and enables understanding the reasons behind
    any specific decision [15]. Description of big data through common semantics and
    ontologies and the adoption of open standards have great potential to boost research
    and development towards smart farming . Similarly, to ensure enhanced connectivity
    and live streaming of crop data, 5G technology need to be extensively explored
    [6]. 5G technology will minimize internet costs and augment the overall user experience
    of farm management and food safety by performing accurate crop inspections remotely
    [226]. Furthermore, it will significantly bridge the gap between stakeholders
    by keeping them well informed on produce availability. Lastly, blockchain in combination
    with IoT and other technologies can be implemented to address the challenges related
    to data privacy and security [227]. 4.18. Transition to Agriculture 5.0 The industrial
    revolutions have always brought a breakthrough in the agricultural sector. As
    formally discussed in previous sections, agriculture 4.0 has great potential to
    counterbalance the growing food demands and prepare for future by reinforcing
    agricultural systems with WSN, IoT, AI, etc. While the realization of agriculture
    4.0 is still underway, there is already a talk about agriculture 5.0. Agriculture
    5.0 extends agriculture 4.0 with inclusion of industry 5.0 principles to produce
    healthy and affordable food while ensuring to prevent degradation of the ecosystems
    on which life depends [228]. The European Commission formally called for the Fifth
    Industrial Revolution (industry 5.0) in 2021 after observing that industry 4.0
    focuses less on the original principles of social fairness and sustainability
    but more on digitalization and AI-driven technologies for increasing the efficiency
    and flexibility [229]. Industry 5.0 complements and extends industry 4.0 concept
    to recognize the human-centricity, sustainability, and resilience [230]. It involves
    refining the collaborative interactions between humans and machines, reducing
    environmental impact through circular economy, and developing high degree of robustness
    in systems to achieve optimal balance between efficiency and productivity. The
    enabling technologies of industry 5.0 are Cobots (collaborative robots), smart
    materials with embedded bio-inspired sensors, digital twins, AI, energy efficient
    and secure data management, renewable energy sources, etc [229].. In agriculture
    5.0 settings, farm''s production efficiency and crop quality can be enhanced by
    assigning repetitive and monotonous tasks to the machines and the tasks which
    need critical thinking to the humans. For this purpose, similar to manufacturing
    sector cyber physical cognitive systems (CPCS) that observe/study the environment
    and take actions accordingly should be developed for agricultural sector. This
    may include collaborative farm robots which will work in the fields and assist
    crop producers in tedious tasks such as seed sowing and harvesting etc. Likewise,
    digital twins in agriculture 5.0 can also offer significant value by identifying
    technical issues in agricultural systems and overcoming them at a faster speed,
    detecting crop diseases, and making crop yield predictions at a higher accuracy
    rate. This shows that agriculture 5.0 has potential to pave a way for climate
    smart, sustainable and resilient agriculture but as of now, it is in the developing
    phase. 5. Conclusions Increased concerns about global food security have accelerated
    the need for next-generation industrial farms and intensive production methods
    in agriculture. At the forefront of this modern agricultural era, digital technologies
    offered by Industry 4.0 initiative are suggesting a myriad of creative solutions.
    The scientific community and researchers integrate disruptive technologies in
    conventional agriculture systems to increase crop yields, minimize costs, reduce
    wastes, and maintain process inputs. An SLR discussing the prevailing state of
    these technologies in the agriculture sector is presented in this study. After
    applying SLR protocol, 148 articles were considered from the time frame of the
    year 2011 to 2021. Various research questions pertaining to i) current and continuing
    research trends, ii) functionality, maturity level, farm type and tools and techniques
    used, iii) primary roadblocks, and iv) added value of digital technologies; were
    put forward and answered. Several conclusions are drawn such as integration of
    big data and analytics, wireless sensor networks, cyber-physical systems, and
    digital twins in agriculture is only in its infancy, and most use cases are in
    the prototype phase. Likewise, 21 roadblocks are identified and classified at
    technical and socioeconomic levels. To ensure the digitization of agricultural
    industry, these roadblocks must be analyzed and overcome. The added value of digital
    technologies in agriculture industry are also identified and presented in the
    study. Overall, this study contributes to the research being carried around agriculture
    4.0. The primary limitation of this review is twofold: firstly, only three online
    repositories are considered for literature search (Scopus, IEEE and Science Direct),
    and secondly additional keywords and synonyms might return more studies. In both
    scenarios, it is highly unlikely that the overall findings would change. For the
    future work, additional research databases and aspects can be considered to provide
    holistic overview of agricultural industry in terms of digitization. Moreover,
    studies targeting agriculture 5.0 in general will also be included. Declaration
    of Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgements The authors acknowledge the financial
    support of this work by the Natural Sciences and Engineering Research Council
    of Canada (NSERC) (Grant File No. ALLRP 545537-19 and RGPIN-2017-04516). References
    [1] F Schierhorn, M. Elferink Global Demand for Food Is Rising. Can We Meet It?
    Harv Bus Rev, 7 (2017), p. 2016 Google Scholar [2] TY Kyaw, AK. Ng Smart Aquaponics
    System for Urban Farming Energy Procedia, 143 (2017), pp. 342-347, 10.1016/j.egypro.2017.12.694
    View PDFView articleView in ScopusGoogle Scholar [3] WK Mok, YX Tan, WN. Chen
    Technology innovations for food security in Singapore: A case study of future
    food systems for an increasingly natural resource-scarce world Trends Food Sci
    Technol, 102 (2020), pp. 155-168, 10.1016/j.tifs.2020.06.013 View PDFView articleView
    in ScopusGoogle Scholar [4] H Valin, RD Sands, D van der Mensbrugghe, GC Nelson,
    H Ahammad, E Blanc, et al. The future of food demand: Understanding differences
    in global economic models Agric Econ (United Kingdom), 45 (2014), pp. 51-67, 10.1111/agec.12089
    View in ScopusGoogle Scholar [5] R Abbasi, P Martinez, R. Ahmad An ontology model
    to represent aquaponics 4.0 system''s knowledge Inf Process Agric (2021), 10.1016/J.INPA.2021.12.001
    Google Scholar [6] R Abbasi, P Martinez, R. Ahmad An ontology model to support
    the automated design of aquaponic grow beds Procedia CIRP, 100 (2021), pp. 55-60,
    10.1016/j.procir.2021.05.009 View PDFView articleView in ScopusGoogle Scholar
    [7] G Aceto, V Persico, A. Pescapé A Survey on Information and Communication Technologies
    for Industry 4.0: State-of-the-Art, Taxonomies, Perspectives, and Challenges IEEE
    Commun Surv Tutorials (2019), 10.1109/COMST.2019.2938259 Google Scholar [8] A
    Gacar, H Aktas, B. Ozdogan Digital agriculture practices in the context of agriculture
    4.0. Pressacademia, 4 (2017), pp. 184-191, 10.17261/pressacademia.2017.448 Google
    Scholar [9] Y Liu, X Ma, L Shu, GP Hancke, AM. Abu-Mahfouz 0: Current Status,
    Enabling Technologies, and Research Challenges IEEE Trans Ind Informatics, 17
    (2021), pp. 4322-4334, 10.1109/TII.2020.3003910 View in ScopusGoogle Scholar [10]
    F da Silveira, FH Lermen, FG. Amaral An overview of agriculture 4.0 development:
    Systematic review of descriptions, technologies, barriers, advantages, and disadvantages
    Comput Electron Agric, 189 (2021), Article 106405, 10.1016/J.COMPAG.2021.106405
    View PDFView articleView in ScopusGoogle Scholar [11] G Idoje, T Dagiuklas, M.
    Iqbal Survey for smart farming technologies: Challenges and issues Comput Electr
    Eng, 92 (2021), Article 107104, 10.1016/J.COMPELECENG.2021.107104 View PDFView
    articleView in ScopusGoogle Scholar [12] J Miranda, P Ponce, A Molina, P. Wright
    Sensing, smart and sustainable technologies for Agri-Food 4.0 Comput Ind, 108
    (2019), pp. 21-36, 10.1016/J.COMPIND.2019.02.002 View PDFView articleView in ScopusGoogle
    Scholar [13] M Lezoche, H Panetto, J Kacprzyk, JE Hernandez Alemany Díaz MME.
    Agri-food 4.0: A survey of the supply chains and technologies for the future agriculture
    Comput Ind, 117 (2020), Article 103187, 10.1016/J.COMPIND.2020.103187 View PDFView
    articleView in ScopusGoogle Scholar [14] Bhakta I, Phadikar S, Majumder K. State-of-the-art
    technologies in precision agriculture: a systematic review 2019. https://doi.org/10.1002/jsfa.9693.
    Google Scholar [15] SO Araújo, RS Peres, J Barata, F Lidon, JC. Ramalho Characterising
    the Agriculture 4.0 Landscape—Emerging Trends, Challenges and Opportunities Agron,
    11 (2021), p. 667, 10.3390/AGRONOMY11040667 Page2021;11:667 View in ScopusGoogle
    Scholar [16] M Bacco, P Barsocchi, E Ferro, A Gotta, M. Ruggeri The Digitisation
    of Agriculture: a Survey of Research Activities on Smart Farming Array, 3–4 (2019),
    Article 100009, 10.1016/j.array.2019.100009 View PDFView articleView in ScopusGoogle
    Scholar [17] X Huang, C Zanni-Merk, B. Crémilleux Enhancing deep learning with
    semantics: An application to manufacturing time series analysis Procedia Comput
    Sci, 159 (2019), pp. 437-446, 10.1016/j.procs.2019.09.198 View PDFView articleView
    in ScopusGoogle Scholar [18] L Jiyu, Y Lan, W Jianwei, C Shengde, H Cong, L Qi,
    et al. Distribution law of rice pollen in the wind field of small UAV Int J Agric
    Biol Eng, 10 (2017), pp. 32-40, 10.25165/IJABE.V10I4.3103 Google Scholar [19]
    MJ Page, JE McKenzie, PM Bossuyt, I Boutron, TC Hoffmann, CD Mulrow, et al. The
    PRISMA 2020 statement: An updated guideline for reporting systematic reviews BMJ,
    372 (2021), 10.1136/BMJ.N71 Google Scholar [20] Ahmed MA, Ahsan I, Abbas M. Systematic
    Literature Review 2016:165–8. https://doi.org/10.1145/2987386.2987422. Google
    Scholar [21] C Pylianidis, S Osinga, IN. Athanasiadis Introducing digital twins
    to agriculture Comput Electron Agric, 184 (2021), Article 105942, 10.1016/J.COMPAG.2020.105942
    View PDFView articleView in ScopusGoogle Scholar [22] Shaikh ZA Aqeel-ur-Rehman,
    NA Shaikh, N Islam An integrated framework to develop context aware sensor grid
    for agriculture Aust J Basic Appl Sci (2010) Google Scholar [23] W Shi, J Cao,
    Q Zhang, Y Li, L. Xu Edge Computing: Vision and Challenges IEEE Internet Things
    J, 3 (2016), pp. 637-646, 10.1109/JIOT.2016.2579198 View in ScopusGoogle Scholar
    [24] A Tzounis, N Katsoulas, T Bartzanas, C. Kittas Internet of Things in agriculture,
    recent advances and future challenges Biosyst Eng, 164 (2017), pp. 31-48, 10.1016/J.BIOSYSTEMSENG.2017.09.007
    View PDFView articleView in ScopusGoogle Scholar [25] VP Kour, S. Arora Recent
    Developments of the Internet of Things in Agriculture: A Survey IEEE Access, 8
    (2020), pp. 129924-129957, 10.1109/ACCESS.2020.3009298 View in ScopusGoogle Scholar
    [26] R Saemaldahr, B Thapa, K Maikoo, EB. Fernandez Reference Architectures for
    the IoT: A Survey Lect Notes Data Eng Commun Technol, 72 (2020), pp. 635-646,
    10.1007/978-3-030-70713-2_58 Google Scholar [27] A Somov, D Shadrin, I Fastovets,
    A Nikitin, S Matveev, I Seledets, et al. Pervasive Agriculture: IoT-Enabled Greenhouse
    for Plant Growth Control IEEE Pervasive Comput, 17 (2018), pp. 65-75, 10.1109/MPRV.2018.2873849
    View in ScopusGoogle Scholar [28] B Yimwadsana, P Chanthapeth, C Lertthanyaphan,
    A. Pornvechamnuay An IoT controlled system for plant growth Proceeding 2018 7th
    ICT Int Student Proj Conf ICT-ISPC 2018 (2018), 10.1109/ICT-ISPC.2018.8523886
    Google Scholar [29] SN Nnadi, FE. Idachaba Design and Implementation of a Sustainable
    IOT Enabled Greenhouse Prototype IEEE 5G World Forum, 5GWF 2018 - Conf Proc (2018),
    pp. 457-461, 10.1109/5GWF.2018.8517006 View in ScopusGoogle Scholar [30] J Yang,
    M Liu, J Lu, Y Miao, MA Hossain, MF. Alhamid Botanical Internet of Things: Toward
    Smart Indoor Farming by Connecting People, Plant, Data and Clouds Mob Networks
    Appl, 23 (2018), pp. 188-202, 10.1007/S11036-017-0930-X View in ScopusGoogle Scholar
    [31] F Francis, PL Vishnu, M Jha, B. Rajaram IOT-Based Automated Aeroponics System
    Lect Notes Electr Eng Intell Embed Syst, 492 (2017), pp. 337-345, 10.1007/978-981-10-8575-8_32
    Google Scholar [32] CA Jamhari, WK Wibowo, AR Annisa, TM. Roffi Design and Implementation
    of IoT System for Aeroponic Chamber Temperature Monitoring Proceeding - 2020 3rd
    Int Conf Vocat Educ Electr Eng Strength Framew Soc 50 through Innov Educ Electr
    Eng Informatics Eng ICVEE 2020 (2020), 10.1109/ICVEE50212.2020.9243213 Google
    Scholar [33] KC Chang, PK Liu, ZW Kuo, SH. Liao Design of persimmon growing stage
    monitoring system using image recognition technique 2016 IEEE Int Conf Consum
    Electron ICCE-TW (2016 2016), 10.1109/ICCE-TW.2016.7520978 Google Scholar [34]
    Namgyel T, Siyang S, Khunarak C, Pobkrut T, Norbu J, Chaiyasit T, et al. IoT based
    hydroponic system with supplementary LED light for smart home farming of lettuce
    2019:221–4. https://doi.org/10.1109/ECTICON.2018.8619983. Google Scholar [35]
    M Manju, V Karthik, S Hariharan, B. Sreekar Real time monitoring of the environmental
    parameters of an aquaponic system based on internet of things ICONSTEM 2017 -
    Proc 3rd IEEE Int Conf Sci Technol Eng Manag 2017 (2018), pp. 943-948, 10.1109/ICONSTEM.2017.8261342
    -January Google Scholar [36] MS Mekala, P. Viswanathan CLAY-MIST: IoT-cloud enabled
    CMM index for smart agriculture monitoring system Measurement, 134 (2019), pp.
    236-244, 10.1016/J.MEASUREMENT.2018.10.072 View PDFView articleView in ScopusGoogle
    Scholar [37] T Wiangtong, P. Sirisuk IoT-based Versatile Platform for Precision
    Farming Isc 2018 - 18th Int Symp Commun Inf Technol (2018), pp. 438-441, 10.1109/ISCIT.2018.8587989
    View in ScopusGoogle Scholar [38] MA Zamora-Izquierdo, J Santa, JA Martínez, V
    Martínez, AF Skarmeta Smart farming IoT platform based on edge and cloud computing
    Biosyst Eng, 177 (2019), pp. 4-17, 10.1016/J.BIOSYSTEMSENG.2018.10.014 View PDFView
    articleView in ScopusGoogle Scholar [39] NK. Jacob IoT powered portable aquaponics
    system ACM Int Conf Proceeding Ser (2017), 10.1145/3018896.3018965 Google Scholar
    [40] M Mehra, S Saxena, S Sankaranarayanan, RJ Tom, M. Veeramanikandan IoT based
    hydroponics system using Deep Neural Networks Comput Electron Agric, 155 (2018),
    pp. 473-486, 10.1016/J.COMPAG.2018.10.015 View PDFView articleView in ScopusGoogle
    Scholar [41] Naser BAA-Z, Saleem AL, Ali A, Alabassi S, Al-Baghdadi M. Design
    and construction of smart IoT-based aquaponics powered by PV cells 2019. Google
    Scholar [42] M Odema, I Adly, A Wahba, H. Ragai Smart Aquaponics System for Industrial
    Internet of Things (IIoT) Adv Intell Syst Comput, 639 (2017), pp. 844-854, 10.1007/978-3-319-64861-3_79
    Google Scholar [43] W Vernandhes, NS Salahuddin, A Kowanda, SP. Sari Smart aquaponic
    with monitoring and control system based on IoT Proc 2nd Int Conf Informatics
    Comput ICIC 2017 2018 (2018), 10.1109/IAC.2017.8280590 Google Scholar [44] B Keswani,
    AG Mohapatra, A Mohanty, A Khanna, JJPC Rodrigues, D Gupta, et al. Adapting weather
    conditions based IoT enabled smart irrigation technique in precision agriculture
    mechanisms Neural Comput Appl, 31 (2018), pp. 277-292, 10.1007/S00521-018-3737-1
    2018 311 Google Scholar [45] NK Nawandar, VR. Satpute IoT based low cost and intelligent
    module for smart irrigation system Comput Electron Agric, 162 (2019), pp. 979-990,
    10.1016/J.COMPAG.2019.05.027 View PDFView articleView in ScopusGoogle Scholar
    [46] PM Gupta, M Salpekar, PK. Tejan Agricultural practices Improvement Using
    IoT Enabled SMART Sensors 2018 Int Conf Smart City Emerg Technol ICSCET, 2018
    (2018), 10.1109/ICSCET.2018.8537291 Google Scholar [47] M Dholu, KA. Ghodinde
    Internet of Things (IoT) for Precision Agriculture Application Proc 2nd Int Conf
    Trends Electron Informatics, ICOEI 2018 (2018), pp. 339-342, 10.1109/ICOEI.2018.8553720
    View in ScopusGoogle Scholar [48] TAA Ali, V Choksi, MB. Potdar Precision Agriculture
    Monitoring System Using Green Internet of Things (G-IoT) Proc 2nd Int Conf Trends
    Electron Informatics, ICOEI 2018 (2018), pp. 481-487, 10.1109/ICOEI.2018.8553866
    View in ScopusGoogle Scholar [49] AJ Rau, J Sankar, AR Mohan, D Das Krishna, J
    Mathew IoT based smart irrigation system and nutrient detection with disease analysis
    TENSYMP 2017 - IEEE Int Symp Technol Smart Cities (2017), 10.1109/TENCONSPRING.2017.8070100
    Google Scholar [50] Thorat A, Kumari S, Valakunde ND. An IoT based smart solution
    for leaf disease detection. 2017 Int Conf Big Data, IoT Data Sci BID 2017 2018;2018-January:193–8.
    https://doi.org/10.1109/BID.2017.8336597. Google Scholar [51] K Foughali, K Fathallah,
    A. Frihida Using Cloud IOT for disease prevention in precision agriculture Procedia
    Comput Sci, 130 (2018), pp. 575-582, 10.1016/J.PROCS.2018.04.106 View PDFView
    articleView in ScopusGoogle Scholar [52] SS Koshy, VS Sunnam, P Rajgarhia, K Chinnusamy,
    DP Ravulapalli, S. Chunduri Application of the internet of things (IoT) for smart
    farming: a case study on groundnut and castor pest and disease forewarning CSI
    Trans ICT 2018 63, 6 (2018), pp. 311-318, 10.1007/S40012-018-0213-0 Google Scholar
    [53] SS Patil, SA. Thorat Early detection of grapes diseases using machine learning
    and IoT Proc - 2016 2nd Int Conf Cogn Comput Inf Process CCIP 2016 (2016), 10.1109/CCIP.2016.7802887
    Google Scholar [54] MI Pavel, SM Kamruzzaman, SS Hasan, SR. Sabuj An IoT based
    plant health monitoring system implementing image processing 2019 IEEE 4th Int
    Conf Comput Commun Syst ICCCS 2019 (2019), pp. 299-303, 10.1109/CCOMS.2019.8821783
    View in ScopusGoogle Scholar [55] MU Aftab, O Ashraf, M Irfan, M Majid, A Nisar,
    MA. Habib A Review Study of Wireless Sensor Networks and Its Security Commun Netw,
    7 (2015), pp. 172-179, 10.4236/cn.2015.74016 Google Scholar [56] X Yu, P Wu, W
    Han, Z. Zhang A survey on wireless sensor network infrastructure for agriculture
    Comput Stand Interfaces, 1 (2013), pp. 59-64, 10.1016/J.CSI.2012.05.001 View PDFView
    articleView in ScopusGoogle Scholar [57] J Gutierrez, JF Villa-Medina, A Nieto-Garibay,
    MA. Porta-Gandara Automated irrigation system using a wireless sensor network
    and GPRS module IEEE Trans Instrum Meas, 63 (2014), pp. 166-176, 10.1109/TIM.2013.2276487
    View in ScopusGoogle Scholar [58] H Navarro-Hellín, R Torres-Sánchez, F Soto-Valles,
    C Albaladejo-Pérez, JA López-Riquelme, R Domingo-Miguel A wireless sensors architecture
    for efficient irrigation water management Agric Water Manag, 151 (2015), pp. 64-74,
    10.1016/J.AGWAT.2014.10.022 View PDFView articleView in ScopusGoogle Scholar [59]
    SA Nikolidakis, D Kandris, DD Vergados, C. Douligeris Energy efficient automated
    control of irrigation in agriculture by using wireless sensor networks Comput
    Electron Agric, 113 (2015), pp. 154-163, 10.1016/J.COMPAG.2015.02.004 View PDFView
    articleView in ScopusGoogle Scholar [60] I Mat, MR Mohd Kassim, AN Harun Mat Yusoff
    I. IoT in Precision Agriculture applications using Wireless Moisture Sensor Network
    ICOS 2016 - 2016 IEEE Conf Open Syst (2017), pp. 24-29, 10.1109/ICOS.2016.7881983
    Google Scholar [61] KP Ferentinos, N Katsoulas, A Tzounis, T Bartzanas, C. Kittas
    Wireless sensor networks for greenhouse climate and plant condition assessment
    Biosyst Eng, 153 (2017), pp. 70-81, 10.1016/J.BIOSYSTEMSENG.2016.11.005 View PDFView
    articleView in ScopusGoogle Scholar [62] JA Jiang, MS Liao, TS Lin, CK Huang,
    CY Chou, SH Yeh, et al. Toward a higher yield: a wireless sensor network-based
    temperature monitoring and fan-circulating system for precision cultivation in
    plant factories Precis Agric, 19 (2018), pp. 929-956, 10.1007/S11119-018-9565-6
    View in ScopusGoogle Scholar [63] M Srbinovska, C Gavrovski, V Dimcev, A Krkoleva,
    V. Borozan Environmental parameters monitoring in precision agriculture using
    wireless sensor networks J Clean Prod, 88 (2015), pp. 297-307, 10.1016/J.JCLEPRO.2014.04.036
    View PDFView articleView in ScopusGoogle Scholar [64] PC. Menon IoT enabled Aquaponics
    with wireless sensor smart monitoring Proc 4th Int Conf IoT Soc Mobile, Anal Cloud,
    ISMAC 2020 (2020), pp. 171-176, 10.1109/I-SMAC49090.2020.9243368 View in ScopusGoogle
    Scholar [65] T Cao-Hoang, CN. Duy Environment monitoring system for agricultural
    application based on wireless sensor network 7th Int Conf Inf Sci Technol ICIST
    2017 - Proc (2017), pp. 99-102, 10.1109/ICIST.2017.7926499 View in ScopusGoogle
    Scholar [66] Samijayani ON, Darwis R, Rahmatia S, Mujadin A, Astharini D. Hybrid
    zigbee and wifi wireless sensor networks for hydroponic monitoring 2020. Google
    Scholar [67] Mell PM, Grance T. The NIST definition of cloud computing 2011. https://doi.org/10.6028/NIST.SP.800-145.
    Google Scholar [68] Alwada''n T. CLOUD COMPUTING AND MULTI-AGENT SYSTEM : MONITORING
    AND SERVICES 2018. Google Scholar [69] X Shi, X An, Q Zhao, H Liu, L Xia, X Sun,
    et al. State-of-the-art internet of things in protected agriculture Sensors (Switzerland),
    19 (2019), p. 1833, 10.3390/s19081833 View in ScopusGoogle Scholar [70] J Wang,
    H Yue, Z. Zhou An improved traceability system for food quality assurance and
    evaluation based on fuzzy classification and neural network Food Control, 79 (2017),
    pp. 363-370, 10.1016/J.FOODCONT.2017.04.013 View PDFView articleView in ScopusGoogle
    Scholar [71] A Kaloxylos, A Groumas, V Sarris, L Katsikas, P Magdalinos, E Antoniou,
    et al. A cloud-based farm management system: Architecture and implementation Comput
    Electron Agric, 100 (2014), pp. 168-179, 10.1016/J.COMPAG.2013.11.014 View PDFView
    articleView in ScopusGoogle Scholar [72] F Yang, K Wang, Y Han, Z. Qiao A Cloud-Based
    Digital Farm Management System for Vegetable Production Process Management and
    Quality Traceability Sustain, 10 (2018), p. 4007, 10.3390/SU10114007 Page2018;10:4007
    View in ScopusGoogle Scholar [73] DS Paraforos, V Vassiliadis, D Kortenbruck,
    K Stamkopoulos, V Ziogas, AA Sapounas, et al. A Farm Management Information System
    Using Future Internet Technologies IFAC-PapersOnLine, 49 (2016), pp. 324-329,
    10.1016/J.IFACOL.2016.10.060 View PDFView articleView in ScopusGoogle Scholar
    [74] Y Ampatzidis, L Tan, R Haley, MD. Whiting Cloud-based harvest management
    information system for hand-harvested specialty crops Comput Electron Agric, 122
    (2016), pp. 161-167, 10.1016/J.COMPAG.2016.01.032 View PDFView articleView in
    ScopusGoogle Scholar [75] S Fountas, G Carli, CG Sørensen, Z Tsiropoulos, C Cavalaris,
    A Vatsanidou, et al. Farm management information systems: Current situation and
    future perspectives Comput Electron Agric, 115 (2015), pp. 40-50, 10.1016/J.COMPAG.2015.05.011
    View PDFView articleView in ScopusGoogle Scholar [76] HY Chang, JJ Wang, CY Lin,
    CH. Chen An agricultural data gathering platform based on internet of things and
    big data Proc - 2018 Int Symp Comput Consum Control IS3C 2018 (2019), pp. 302-305
    https://doi.org/10.1109/IS3C.2018.00083 CrossRefGoogle Scholar [77] FJ Ferrández-Pastor,
    JM García-Chamizo, M Nieto-Hidalgo, J Mora-Pascual, J. Mora-Martínez Developing
    Ubiquitous Sensor Network Platform Using Internet of Things: Application in Precision
    Agriculture Sensors (Basel), 16 (2016), 10.3390/S16071141 Google Scholar [78]
    R M, T A, JA L-R, J M, L P, N P-P, et al. mySense: A comprehensive data management
    environment to improve precision agriculture practices Comput Electron Agric,
    162 (2019), pp. 882-894, 10.1016/J.COMPAG.2019.05.028 Google Scholar [79] ST Oliver,
    A González-Pérez, JH. Guijarro An IoT proposal for monitoring vineyards called
    senviro for agriculture ACM Int Conf Proceeding Ser (2018), 10.1145/3277593.3277625
    Google Scholar [80] Fan DH, Gao S. IOP Conference Series: Earth and Environmental
    Science The application of mobile edge computing in agricultural water monitoring
    system The application of mobile edge computing in agricultural water monitoring
    system 2018;191:12015. https://doi.org/10.1088/1755-1315/191/1/012015. Google
    Scholar [81] M Asmi Romli, S Daud, RA Aliana Raof, Z Awang Ahmad, N Mahrom Aquaponic
    Growbed Water Level Control Using Fog Architecture Related content Aquaponic Growbed
    Water Level Control Using Fog Architecture J Phys (2018), p. 12014, 10.1088/1742-6596/1018/1/012014
    Google Scholar [82] G L, C R, P G An automated low cost IoT based Fertilizer Intimation
    System for smart agriculture Sustain Comput Informatics Syst, 28 (2020), Article
    100300, 10.1016/J.SUSCOM.2019.01.002 Google Scholar [83] R Rahmadian, M. Widyartono
    Autonomous Robotic in Agriculture: A Review Proceeding - 2020 3rd Int Conf Vocat
    Educ Electr Eng Strength Framew Soc 50 through Innov Educ Electr Eng Informatics
    Eng ICVEE 2020 (2020), 10.1109/ICVEE50212.2020.9243253 Google Scholar [84] A Bechar,
    C. Vigneault Agricultural robots for field operations: Concepts and components
    Biosyst Eng, 149 (2016), pp. 94-111, 10.1016/J.BIOSYSTEMSENG.2016.06.014 View
    PDFView articleView in ScopusGoogle Scholar [85] Gonzalez-De-Santos P, Fernández
    R, Sepúlveda D, Navas E, Armada M. Unmanned Ground Vehicles for Smart Farms. Agron
    - Clim Chang Food Secur 2020. https://doi.org/10.5772/INTECHOPEN.90683. Google
    Scholar [86] O Bawden, J Kulk, R Russell, C McCool, A English, F Dayoub, et al.
    Robot for weed species plant-specific management J F Robot, 34 (2017), pp. 1179-1199,
    10.1002/ROB.21727 View in ScopusGoogle Scholar [87] J Gai, L Tang, BL. Steward
    Automated crop plant detection based on the fusion of color and depth images for
    robotic weed control J F Robot, 37 (2020), pp. 35-52, 10.1002/ROB.21897 View in
    ScopusGoogle Scholar [88] G Adamides, C Katsanos, I Constantinou, G Christou,
    M Xenos, T Hadzilacos, et al. Design and development of a semi-autonomous agricultural
    vineyard sprayer: Human–robot interaction aspects J F Robot, 34 (2017), pp. 1407-1426,
    10.1002/ROB.21721 View in ScopusGoogle Scholar [89] R Berenstein, Y. Edan Automatic
    Adjustable Spraying Device for Site-Specific Agricultural Application IEEE Trans
    Autom Sci Eng, 15 (2018), pp. 641-650, 10.1109/TASE.2017.2656143 View in ScopusGoogle
    Scholar [90] Underwood J, Calleija M, Taylor Z, Hung C, Nieto J, Fitch R, et al.
    Real-time target detection and steerable spray for vegetable crops 2015. Google
    Scholar [91] N Srinivasan, P Prabhu, SS Smruthi, NV Sivaraman, SJ Gladwin, R Rajavel,
    et al. Design of an autonomous seed planting robot IEEE Reg 10 Humanit Technol
    Conf 2016, R10-HTC 2016 - Proc (2017), 10.1109/R10-HTC.2016.7906789 Google Scholar
    [92] MU Hassan, M Ullah, J. Iqbal Towards autonomy in agriculture: Design and
    prototyping of a robotic vehicle with seed selector 2016 2nd Int Conf Robot Artif
    Intell ICRAI 2016 (2016), pp. 37-44, 10.1109/ICRAI.2016.7791225 View in ScopusGoogle
    Scholar [93] M Nejati, HS Ahn, B. MacDonald Design of a sensing module for a kiwifruit
    flower pollinator robot Australas Conf Robot Autom ACRA, 2020 (2019-December)
    Google Scholar [94] Y Ge, Y Xiong, PJ. From Symmetry-based 3D shape completion
    for fruit localisation for harvesting robots Biosyst Eng, 197 (2020), pp. 188-202,
    10.1016/J.BIOSYSTEMSENG.2020.07.003 View PDFView articleView in ScopusGoogle Scholar
    [95] S Birrell, J Hughes, JY Cai, F. Iida A field-tested robotic harvesting system
    for iceberg lettuce J F Robot, 37 (2020), pp. 225-245, 10.1002/ROB.21888 View
    in ScopusGoogle Scholar [96] J del Cerro, CC Ulloa, A Barrientos, L. Rivas J de
    Unmanned Aerial Vehicles in Agriculture: A Survey Agron, 11 (2021), p. 203, 10.3390/AGRONOMY11020203
    Page2021;11:203 View in ScopusGoogle Scholar [97] Patel PN, Patel M, Faldu RM,
    Dave YR. Quadcopter for Agricultural Surveillance 2013. Google Scholar [98] Sylvester
    G, Food and Agriculture Organization of the United Nations., International Telecommunication
    Union. E-agriculture in action : drones for agriculture n.d.:112. Google Scholar
    [99] H Aasen, A Burkart, A Bolten, G. Bareth Generating 3D hyperspectral information
    with lightweight UAV snapshot cameras for vegetation monitoring: From camera calibration
    to quality assurance ISPRS J Photogramm Remote Sens, 108 (2015), pp. 245-259,
    10.1016/J.ISPRSJPRS.2015.08.002 View PDFView articleView in ScopusGoogle Scholar
    [100] J Bendig, K Yu, H Aasen, A Bolten, S Bennertz, J Broscheit, et al. Combining
    UAV-based plant height from crop surface models, visible, and near infrared vegetation
    indices for biomass monitoring in barley Int J Appl Earth Obs Geoinf, 39 (2015),
    pp. 79-87, 10.1016/J.JAG.2015.02.012 View PDFView articleView in ScopusGoogle
    Scholar [101] M Du, N. Noguchi Monitoring of wheat growth status and mapping of
    wheat yield''s within-field spatial variations using color images acquired from
    UAV-camera System Remote Sens, 9 (2017), 10.3390/RS9030289 Google Scholar [102]
    ML Guillen-Climent, PJ Zarco-Tejada, JAJ Berni, PRJ North, FJ. Villalobos Mapping
    radiation interception in row-structured orchards using 3D simulation and high-resolution
    airborne imagery acquired from a UAV Precis Agric, 13 (2012), pp. 473-500, 10.1007/S11119-012-9263-8
    2012 134 View in ScopusGoogle Scholar [103] H Xiang, L. Tian Development of a
    low-cost agricultural remote sensing system based on an autonomous unmanned aerial
    vehicle (UAV) Biosyst Eng, 108 (2011), pp. 174-190, 10.1016/J.BIOSYSTEMSENG.2010.11.010
    View PDFView articleView in ScopusGoogle Scholar [104] CA. Rokhmana The Potential
    of UAV-based Remote Sensing for Supporting Precision Agriculture in Indonesia
    Procedia Environ Sci, 24 (2015), pp. 245-253, 10.1016/J.PROENV.2015.03.032 View
    PDFView articleView in ScopusGoogle Scholar [105] Z Pan, D Lie, L Qiang, H Shaolan,
    Y Shilai, L Yande, et al. Effects of citrus tree-shape and spraying height of
    small unmanned aerial vehicle on droplet distribution Int J Agric Biol Eng, 9
    (2016), pp. 45-52, 10.25165/IJABE.V9I4.2178 Google Scholar [106] S Meivel, K Dinakaran,
    N Gandhiraj, M. Srinivasan Remote sensing for UREA Spraying Agricultural (UAV)
    system ICACCS 2016 - 3rd Int Conf Adv Comput Commun Syst Bringing to Table, Futur
    Technol from Arround Globe (2016), 10.1109/ICACCS.2016.7586367 Google Scholar
    [107] BS Faiçal, FG Costa, G Pessin, J Ueyama, H Freitas, A Colombo, et al. The
    use of unmanned aerial vehicles and wireless sensor networks for spraying pesticides
    J Syst Archit, 60 (2014), pp. 393-404, 10.1016/J.SYSARC.2014.01.004 View PDFView
    articleView in ScopusGoogle Scholar [108] DK Giles, RC. Billing Deployment and
    performance of a uav for crop spraying Chem Eng Trans, 44 (2015), pp. 307-312,
    10.3303/CET1544052 View in ScopusGoogle Scholar [109] X Xue, Y Lan, Z Sun, C Chang,
    WC. Hoffmann Develop an unmanned aerial vehicle based automatic aerial spraying
    system Comput Electron Agric, 128 (2016), pp. 58-66, 10.1016/J.COMPAG.2016.07.022
    View PDFView articleView in ScopusGoogle Scholar [110] J Torres-Sánchez, JM Peña,
    AI de Castro, F. López-Granados Multi-temporal mapping of the vegetation fraction
    in early-season wheat fields using images from UAV Comput Electron Agric, 103
    (2014), pp. 104-113, 10.1016/J.COMPAG.2014.02.009 View PDFView articleView in
    ScopusGoogle Scholar [111] JM Peña, J Torres-Sánchez, AI de Castro, M Kelly, F.
    López-Granados Weed Mapping in Early-Season Maize Fields Using Object-Based Analysis
    of Unmanned Aerial Vehicle (UAV) Images PLoS One, 8 (2013), p. e77151, 10.1371/JOURNAL.PONE.0077151
    View in ScopusGoogle Scholar [112] J Baluja, MP Diago, P Balda, R Zorer, F Meggio,
    F Morales, et al. Assessment of vineyard water status variability by thermal and
    multispectral imagery using an unmanned aerial vehicle (UAV) Irrig Sci, 30 (2012),
    pp. 511-522, 10.1007/S00271-012-0382-9 View in ScopusGoogle Scholar [113] PJ Zarco-Tejada,
    V González-Dugo, Berni JAJ. Fluorescence temperature and narrow-band indices acquired
    from a UAV platform for water stress detection using a micro-hyperspectral imager
    and a thermal camera Remote Sens Environ, 117 (2012), pp. 322-337, 10.1016/J.RSE.2011.10.007
    View PDFView articleView in ScopusGoogle Scholar [114] H Hoffmann, R Jensen, A
    Thomsen, H Nieto, J Rasmussen, T. Friborg Crop water stress maps for an entire
    growing season from visible and thermal UAV imagery Biogeosciences, 13 (2016),
    pp. 6545-6563, 10.5194/BG-13-6545-2016 View in ScopusGoogle Scholar [115] C Romero-Trigueros,
    PA Nortes, JJ Alarcón, JE Hunink, M Parra, S Contreras, et al. Effects of saline
    reclaimed waters and deficit irrigation on Citrus physiology assessed by UAV remote
    sensing Agric Water Manag, 183 (2017), pp. 60-69, 10.1016/J.AGWAT.2016.09.014
    View PDFView articleView in ScopusGoogle Scholar [116] M Romero, Y Luo, B Su,
    S. Fuentes Vineyard water status estimation using multispectral imagery from an
    UAV platform and machine learning algorithms for irrigation scheduling management
    Comput Electron Agric, 147 (2018), pp. 109-117, 10.1016/J.COMPAG.2018.02.013 View
    PDFView articleView in ScopusGoogle Scholar [117] F Vanegas, D Bratanov, K Powell,
    J Weiss, F. Gonzalez A Novel Methodology for Improving Plant Pest Surveillance
    in Vineyards and Crops Using UAV-Based Hyperspectral and Spatial Data Sensors,
    18 (2018), p. 260, 10.3390/S18010260 Page2018;18:260 View in ScopusGoogle Scholar
    [118] F Garcia-Ruiz, S Sankaran, JM Maja, WS Lee, J Rasmussen, R. Ehsani Comparison
    of two aerial imaging platforms for identification of Huanglongbing-infected citrus
    trees Comput Electron Agric, 91 (2013), pp. 106-115, 10.1016/J.COMPAG.2012.12.002
    View PDFView articleView in ScopusGoogle Scholar [119] U Sivarajah, MM Kamal,
    Z Irani, V. Weerakkody Critical analysis of Big Data challenges and analytical
    methods J Bus Res, 70 (2017), pp. 263-286, 10.1016/J.JBUSRES.2016.08.001 View
    PDFView articleView in ScopusGoogle Scholar [120] M Chi, A Plaza, JA Benediktsson,
    Z Sun, J Shen, Y. Zhu Big Data for Remote Sensing: Challenges and Opportunities
    Proc IEEE, 104 (2016), pp. 2207-2219, 10.1109/JPROC.2016.2598228 View in ScopusGoogle
    Scholar [121] K Tesfaye, K Sonder, J Caims, C Magorokosho, A Tarekegn, GT Kassie,
    et al. Targeting drought-tolerant maize varieties in southern Africa: a geospatial
    crop modeling approach using big data Int Food Agribus Manag Rev, 19 (2016) Google
    Scholar [122] B Vandana, SS. Kumar A novel approach using big data analytics to
    improve the crop yield in precision agriculture 2018 3rd IEEE Int Conf Recent
    Trends Electron Inf Commun Technol RTEICT 2018 - Proc (2018), pp. 824-827, 10.1109/RTEICT42901.2018.9012549
    View in ScopusGoogle Scholar [123] S Sharma, G Rathee, H. Saini Big data analytics
    for crop prediction mode using optimization technique PDGC 2018 - 2018 5th Int
    Conf Parallel, Distrib Grid Comput (2018), pp. 760-764, 10.1109/PDGC.2018.8746001
    View in ScopusGoogle Scholar [124] A Ani, P. Gopalakirishnan Automated Hydroponic
    Drip Irrigation Using Big Data Proc 2nd Int Conf Inven Res Comput Appl ICIRCA
    2020 (2020), pp. 370-375, 10.1109/ICIRCA48905.2020.9182908 View in ScopusGoogle
    Scholar [125] P Zhang, Q Zhang, F Liu, J Li, N Cao, C. Song The Construction of
    the Integration of Water and Fertilizer Smart Water Saving Irrigation System Based
    on Big Data Proc - 2017 IEEE Int Conf Comput Sci Eng IEEE/IFIP Int Conf Embed
    Ubiquitous Comput CSE EUC 2017, 2 (2017), pp. 392-397, 10.1109/CSE-EUC.2017.258
    View in ScopusGoogle Scholar [126] R Sharma, SS Kamble, A Gunasekaran, V Kumar,
    A. Kumar A systematic literature review on machine learning applications for sustainable
    agriculture supply chain performance Comput Oper Res, 119 (2020), Article 104926,
    10.1016/J.COR.2020.104926 View PDFView articleView in ScopusGoogle Scholar [127]
    T Talaviya, D Shah, N Patel, H Yagnik, M. Shah Implementation of artificial intelligence
    in agriculture for optimisation of irrigation and application of pesticides and
    herbicides Artif Intell Agric, 4 (2020), pp. 58-73, 10.1016/J.AIIA.2020.04.002
    View PDFView articleView in ScopusGoogle Scholar [128] M Mohri, A Rostamizadeh,
    A. Talwalkar Foundations in Machine learning SpringerBriefs Comput Sci, 0 (2014),
    pp. 39-44 Google Scholar [129] KG Liakos, P Busato, D Moshou, S Pearson, D. Bochtis
    Machine Learning in Agriculture: A Review Sensors, 18 (2018), p. 2674, 10.3390/S18082674
    Page2018;18:2674 View in ScopusGoogle Scholar [130] G Xu, H Li, S Liu, K Yang,
    X. Lin VerifyNet: Secure and Verifiable Federated Learning IEEE Trans Inf Forensics
    Secur, 15 (2020), pp. 911-926, 10.1109/TIFS.2019.2929409 View in ScopusGoogle
    Scholar [131] E Kamir, F Waldner, Z Hochman, E Kamir, F Waldner, Z. Hochman Estimating
    wheat yields in Australia using climate records, satellite image time series and
    machine learning methods JPRS, 160 (2020), pp. 124-135, 10.1016/J.ISPRSJPRS.2019.11.008
    View PDFView articleView in ScopusGoogle Scholar [132] H Aghighi, M Azadbakht,
    D Ashourloo, HS Shahrabi, S. Radiom Machine Learning Regression Techniques for
    the Silage Maize Yield Prediction Using Time-Series Images of Landsat 8 OLI IEEE
    J Sel Top Appl Earth Obs Remote Sens, 11 (2018), pp. 4563-4577, 10.1109/JSTARS.2018.2823361
    View in ScopusGoogle Scholar [133] S Kulkarni, SN Mandal, GS Sharma, MR Mundada,
    Meeradevi Predictive Analysis to Improve Crop Yield using a Neural Network Model
    2018 Int Conf Adv Comput Commun Informatics, ICACCI 2018 (2018), pp. 74-79, 10.1109/ICACCI.2018.8554851
    View in ScopusGoogle Scholar [134] P Feng, B Wang, DL Liu, C Waters, D Xiao, L
    Shi, et al. Dynamic wheat yield forecasts are improved by a hybrid approach using
    a biophysical model and machine learning technique Agric For Meteorol, 285–286
    (2020), Article 107922, 10.1016/J.AGRFORMET.2020.107922 View PDFView articleView
    in ScopusGoogle Scholar [135] Y Cakir, M Kirci, EO. Gunes Yield prediction of
    wheat in south-east region of Turkey by using artificial neural networks 2014
    3rd Int Conf Agro-Geoinformatics, Agro-Geoinformatics 2014 (2014), 10.1109/AGRO-GEOINFORMATICS.2014.6910609
    Google Scholar [136] XE Pantazi, D Moshou, T Alexandridis, RL Whetton, AM. Mouazen
    Wheat yield prediction using machine learning and advanced sensing techniques
    Comput Electron Agric, 121 (2016), pp. 57-65, 10.1016/J.COMPAG.2015.11.018 View
    PDFView articleView in ScopusGoogle Scholar [137] Y Everingham, J Sexton, D Skocaj,
    G. Inman-Bamber Accurate prediction of sugarcane yield using a random forest algorithm
    Agron Sustain Dev, 36 (2016), pp. 1-9, 10.1007/S13593-016-0364-Z 2016 362 Google
    Scholar [138] I Ahmad, U Saeed, M Fahad, A Ullah, M Habib ur Rahman, A Ahmad,
    et al. Yield Forecasting of Spring Maize Using Remote Sensing and Crop Modeling
    in Faisalabad-Punjab Pakistan J Indian Soc Remote Sens, 46 (2018), pp. 1701-1711,
    10.1007/S12524-018-0825-8 2018 4610 View in ScopusGoogle Scholar [139] MS Verma,
    SD. Gawade A machine learning approach for prediction system and analysis of nutrients
    uptake for better crop growth in the Hydroponics system Proc - Int Conf Artif
    Intell Smart Syst ICAIS 2021 (2021), pp. 150-156, 10.1109/ICAIS50930.2021.9395956
    View in ScopusGoogle Scholar [140] MA Ebrahimi, MH Khoshtaghaza, S Minaei, B.
    Jamshidi Vision-based pest detection based on SVM classification method Comput
    Electron Agric, 137 (2017), pp. 52-58, 10.1016/J.COMPAG.2017.03.016 View PDFView
    articleView in ScopusGoogle Scholar [141] D Moshou, XE Pantazi, D Kateris, I.
    Gravalos Water stress detection based on optical multisensor fusion with a least
    squares support vector machine classifier Biosyst Eng, 117 (2014), pp. 15-22,
    10.1016/J.BIOSYSTEMSENG.2013.07.008 View PDFView articleView in ScopusGoogle Scholar
    [142] R Barosa, SIS Hassen, L. Nagowah Smart Aquaponics with Disease Detection
    2nd Int Conf Next Gener Comput Appl 2019, NextComp 2019 - Proc (2019), 10.1109/NEXTCOMP.2019.8883437
    Google Scholar [143] A Etienne, D. Saraswat Machine learning approaches to automate
    weed detection by UAV based sensors SPIE, 11008 (2019), Article 110080R, 10.1117/12.2520536
    View in ScopusGoogle Scholar [144] A Bakhshipour, A. Jafari Evaluation of support
    vector machine and artificial neural networks in weed detection using shape features
    Comput Electron Agric, 145 (2018), pp. 153-160, 10.1016/J.COMPAG.2017.12.032 View
    PDFView articleView in ScopusGoogle Scholar [145] A Morellos, XE Pantazi, D Moshou,
    T Alexandridis, R Whetton, G Tziotzios, et al. Machine learning based prediction
    of soil total nitrogen, organic carbon and moisture content by using VIS-NIR spectroscopy
    Biosyst Eng, 152 (2016), pp. 104-116, 10.1016/J.BIOSYSTEMSENG.2016.04.018 View
    PDFView articleView in ScopusGoogle Scholar [146] E Acar, MS Ozerdem, BB. Ustundag
    Machine learning based regression model for prediction of soil surface humidity
    over moderately vegetated fields 2019 8th Int Conf Agro-Geoinformatics, Agro-Geoinformatics
    2019 (2019), 10.1109/AGRO-GEOINFORMATICS.2019.8820461 Google Scholar [147] WM
    Ridwan, M Sapitang, A Aziz, KF Kushiar, AN Ahmed, A. El-Shafie Rainfall forecasting
    model using machine learning methods: Case study Terengganu Malaysia. Ain Shams
    Eng J, 12 (2021), pp. 1651-1663, 10.1016/J.ASEJ.2020.09.011 View PDFView articleView
    in ScopusGoogle Scholar [148] M Taki, S Abdanan Mehdizadeh, A Rohani, M Rahnama,
    M Rahmati-Joneidabad Applied machine learning in greenhouse simulation; new application
    and analysis Inf Process Agric, 5 (2018), pp. 253-268, 10.1016/J.INPA.2018.01.003
    View PDFView articleView in ScopusGoogle Scholar [149] J. Schmidhuber Deep Learning
    in Neural Networks: An Overview Neural Networks, 61 (2014), pp. 85-117, 10.1016/j.neunet.2014.09.003
    Google Scholar [150] Canziani A, Paszke A, Culurciello E. An Analysis of Deep
    Neural Network Models for Practical Applications 2016. Google Scholar [151] S
    Albawi, TA Mohammed, S Al-Zawi Understanding of a convolutional neural network
    Proc 2017 Int Conf Eng Technol ICET 2017 (2018), 10.1109/ICENGTECHNOL.2017.8308186
    2018-January:1–6 Google Scholar [152] A Kamilaris, FX. Prenafeta-Boldu Deep learning
    in agriculture: A survey Comput Electron Agric, 147 (2018), pp. 70-90, 10.1016/j.compag.2018.02.016
    View PDFView articleView in ScopusGoogle Scholar [153] V Kakani, VH Nguyen, BP
    Kumar, H Kim, VR. Pasupuleti A critical review on computer vision and artificial
    intelligence in food industry J Agric Food Res, 2 (2020), 10.1016/J.JAFR.2020.100033
    Google Scholar [154] Schwalbert RA, Amado T, Corassa G, Pierre Pott L, Prasad
    Pvv, Ciampitti IA. Satellite-based soybean yield forecast: Integrating machine
    learning and weather data for improving crop yield prediction in southern Brazil
    2019. https://doi.org/10.1016/j.agrformet.2019.107886. Google Scholar [155] Z
    Chu, J. Yu An end-to-end model for rice yield prediction using deep learning fusion
    Comput Electron Agric, 174 (2020), 10.1016/J.COMPAG.2020.105471 Google Scholar
    [156] D Tedesco-Oliveira, R Pereira da Silva, W Maldonado, C Zerbato Convolutional
    neural networks in predicting cotton yield from images of commercial fields Comput
    Electron Agric, 171 (2020), Article 105307, 10.1016/J.COMPAG.2020.105307 View
    PDFView articleView in ScopusGoogle Scholar [157] Y Chen, WS Lee, H Gan, N Peres,
    C Fraisse, Y Zhang, et al. Strawberry Yield Prediction Based on a Deep Neural
    Network Using High-Resolution Aerial Orthoimages Remote Sens, 11 (2019), p. 1584,
    10.3390/RS11131584 Page2019;11:1584 View in ScopusGoogle Scholar [158] L Gong,
    M Yu, S Jiang, V Cutsuridis, S. Pearson Deep Learning Based Prediction on Greenhouse
    Crop Yield Combined TCN and RNN Sensors, 21 (2021), p. 4537, 10.3390/S21134537
    Page2021;21:4537 View in ScopusGoogle Scholar [159] L Zhang, Z Xu, D Xu, J Ma,
    Y Chen, Z. Fu Growth monitoring of greenhouse lettuce based on a convolutional
    neural network Hortic Res, 7 (2020), 10.1038/S41438-020-00345-6 Google Scholar
    [160] X Song, G Zhang, F Liu, D Li, Y Zhao, J. Yang Modeling spatio-temporal distribution
    of soil moisture by deep learning-based cellular automata model J Arid Land, 8
    (2016), pp. 734-748, 10.1007/S40333-016-0049-0 View in ScopusGoogle Scholar [161]
    A Reyes-Yanes, P Martinez, R. Ahmad Real-time growth rate and fresh weight estimation
    for little gem romaine lettuce in aquaponic grow beds Comput Electron Agric, 179
    (2020), Article 105827, 10.1016/j.compag.2020.105827 View PDFView articleView
    in ScopusGoogle Scholar [162] M Dyrmann, H Karstoft, HS. Midtiby Plant species
    classification using deep convolutional neural network Biosyst Eng, 151 (2016),
    pp. 72-80, 10.1016/J.BIOSYSTEMSENG.2016.08.024 View PDFView articleView in ScopusGoogle
    Scholar [163] S Sladojevic, M Arsenovic, A Anderla, D Culibrk, D. Stefanovic Deep
    Neural Networks Based Recognition of Plant Diseases by Leaf Image Classification
    Comput Intell Neurosci (2016), p. 2016, 10.1155/2016/3289801 Google Scholar [164]
    SP Mohanty, DP Hughes, M. Salathé Using Deep Learning for Image-Based Plant Disease
    Detection Front Plant Sci, 0 (2016), p. 1419, 10.3389/FPLS.2016.01419 View in
    ScopusGoogle Scholar [165] A Fuentes, S Yoon, SC Kim, DS. Park A Robust Deep-Learning-Based
    Detector for Real-Time Tomato Plant Diseases and Pests Recognition Sensors, 17
    (2017), p. 2022, 10.3390/S17092022 Page2017;17:2022 View in ScopusGoogle Scholar
    [166] A Anagnostis, G Asiminari, E Papageorgiou, D. Bochtis A Convolutional Neural
    Networks Based Method for Anthracnose Infected Walnut Tree Leaves Identification
    Appl Sci, 10 (2020), p. 469, 10.3390/APP10020469 Page2020;10:469 View in ScopusGoogle
    Scholar [167] I Sa, Z Ge, F Dayoub, B Upcroft, T Perez, C. McCool DeepFruits:
    A Fruit Detection System Using Deep Neural Networks Sensors, 16 (2016), p. 1222,
    10.3390/S16081222 Page2016;16:1222 View in ScopusGoogle Scholar [168] SW Chen,
    SS Shivakumar, S Dcunha, J Das, E Okon, C Qu, et al. Counting Apples and Oranges
    with Deep Learning: A Data-Driven Approach IEEE Robot Autom Lett, 2 (2017), pp.
    781-788, 10.1109/LRA.2017.2651944 View in ScopusGoogle Scholar [169] Y Tian, G
    Yang, Z Wang, H Wang, E Li, Z. Liang Apple detection during different growth stages
    in orchards using the improved YOLO-V3 model Comput Electron Agric, 157 (2019),
    pp. 417-426, 10.1016/J.COMPAG.2019.01.012 View PDFView articleView in ScopusGoogle
    Scholar [170] F Terribile, A Agrillo, A Bonfante, G Buscemi, M Colandrea, A D''Antonio,
    et al. A Web-based spatial decision supporting system for land management and
    soil conservation Solid Earth, 6 (2015), pp. 903-928, 10.5194/SE-6-903-2015 View
    in ScopusGoogle Scholar [171] A Felsberger, B Oberegger, G. Reiner A Review of
    Decision Support Systems for Manufacturing Systems Undefined (2016) Google Scholar
    [172] P Taechatanasat, L. Armstrong Decision Support System Data for Farmer Decision
    Making ECU Publ Post (2013), p. 2014 Google Scholar [173] H Navarro-Hellín, J
    Martínez-del-Rincon, R Domingo-Miguel, F Soto-Valles, R. Torres-Sánchez A decision
    support system for managing irrigation in agriculture Comput Electron Agric, 124
    (2016), pp. 121-131, 10.1016/J.COMPAG.2016.04.003 View PDFView articleView in
    ScopusGoogle Scholar [174] E Giusti, S. Marsili-Libelli A Fuzzy Decision Support
    System for irrigation and water conservation in agriculture Environ Model Softw,
    63 (2015), pp. 73-86, 10.1016/J.ENVSOFT.2014.09.020 View PDFView articleView in
    ScopusGoogle Scholar [175] MDM Kadiyala, S Nedumaran, P, S.C Singh, MA Irshad,
    MCS Bantilan An integrated crop model and GIS decision support system for assisting
    agronomic decision making under climate change Sci Total Environ, 521–522 (2015),
    pp. 123-134, 10.1016/J.SCITOTENV.2015.03.097 View PDFView articleView in ScopusGoogle
    Scholar [176] KO Wenkel, M Berg, W Mirschel, R Wieland, C Nendel, B. Köstner LandCaRe
    DSS - An interactive decision support system for climate change impact assessment
    and the analysis of potential agricultural land use adaptation strategies J Environ
    Manage, 127 (2013), 10.1016/J.JENVMAN.2013.02.051 Google Scholar [177] DD Bochtis,
    CG Sørensen, O. Green A DSS for planning of soil-sensitive field operations Decis
    Support Syst, 53 (2012), pp. 66-75, 10.1016/J.DSS.2011.12.005 View PDFView articleView
    in ScopusGoogle Scholar [178] A Ghandar, A Ahmed, S Zulfiqar, Z Hua, M Hanai,
    G. Theodoropoulos A decision support system for urban agriculture using digital
    twin: A case study with aquaponics IEEE Access, 9 (2021), pp. 35691-35708, 10.1109/ACCESS.2021.3061722
    View in ScopusGoogle Scholar [179] JA Sánchez-Molina, N Pérez, F Rodríguez, JL
    Guzmán, JC. López Support system for decision making in the management of the
    greenhouse environmental based on growth model for sweet pepper Agric Syst, 139
    (2015), pp. 144-152, 10.1016/J.AGSY.2015.06.009 View PDFView articleView in ScopusGoogle
    Scholar [180] D Nestel, Y Cohen, B Shaked, V Alchanatis, E Nemny-Lavy, MA Miranda,
    et al. An Integrated Decision Support System for Environmentally-Friendly Management
    of the Ethiopian Fruit Fly in Greenhouse Crops Agron, 9 (2019), p. 459, 10.3390/AGRONOMY9080459
    Page2019;9:459 View in ScopusGoogle Scholar [181] G Aiello, I Giovino, M Vallone,
    P Catania, A. Argento A decision support system based on multisensor data fusion
    for sustainable greenhouse management J Clean Prod, 172 (2018), pp. 4057-4065,
    10.1016/J.JCLEPRO.2017.02.197 View PDFView articleView in ScopusGoogle Scholar
    [182] J Cañadas, JA Sánchez-Molina, F Rodríguez, IM. del Águila Improving automatic
    climate control with decision support techniques to minimize disease effects in
    greenhouse tomatoes Inf Process Agric, 4 (2017), pp. 50-63, 10.1016/J.INPA.2016.12.002
    View PDFView articleView in ScopusGoogle Scholar [183] RM Sampurno, KB Seminar,
    Y. Suharnoto Weed control decision support system based on precision agriculture
    approach Telkomnika (Telecommunication Comput Electron Control, 12 (2014), pp.
    475-484, 10.12928/TELKOMNIKA.V12I2.1982 View in ScopusGoogle Scholar [184] L Wang,
    M Törngren, M. Onori Current status and advancement of cyber-physical systems
    in manufacturing J Manuf Syst, 37 (2015), pp. 517-527, 10.1016/J.JMSY.2015.04.008
    View PDFView articleView in ScopusGoogle Scholar [185] DGS Pivoto, LFF de Almeida,
    R da Rosa Righi, JJPC Rodrigues, AB Lugli, AM. Alberti Cyber-physical systems
    architectures for industrial internet of things applications in Industry 4.0:
    A literature review J Manuf Syst, 58 (2021), pp. 176-192, 10.1016/J.JMSY.2020.11.017
    View PDFView articleView in ScopusGoogle Scholar [186] AF Jimenez, PF Cardenas,
    F Jimenez, A Canales, A. López A cyber-physical intelligent agent for irrigation
    scheduling in horticultural crops Comput Electron Agric, 178 (2020), Article 105777,
    10.1016/J.COMPAG.2020.105777 View PDFView articleView in ScopusGoogle Scholar
    [187] B Bagheri, S Yang, HA Kao, J. Lee Cyber-physical systems architecture for
    self-aware machines in industry 4.0 environment IFAC-PapersOnLine, 28 (2015),
    pp. 1622-1627, 10.1016/J.IFACOL.2015.06.318 View PDFView articleView in ScopusGoogle
    Scholar [188] A Selmani, H Oubehar, M Outanoute, A Ed-Dahhak, M Guerbaoui, A Lachhab,
    et al. Agricultural cyber-physical system enabled for remote management of solar-powered
    precision irrigation Biosyst Eng, 177 (2019), pp. 18-30, 10.1016/J.BIOSYSTEMSENG.2018.06.007
    View PDFView articleView in ScopusGoogle Scholar [189] A Nayak, RR Levalle, S
    Lee, SY. Nof Resource sharing in cyber-physical systems: modelling framework and
    case studies Http://DxDoiOrg/101080/0020754320161146419, 54 (2016), pp. 6969-6983,
    10.1080/00207543.2016.1146419 View in ScopusGoogle Scholar [190] N Chen, X Zhang,
    C. Wang Integrated open geospatial web service enabled cyber-physical information
    infrastructure for precision agriculture monitoring Comput Electron Agric, 111
    (2015), pp. 78-91, 10.1016/J.COMPAG.2014.12.009 View PDFView articleView in ScopusGoogle
    Scholar [191] DVS Srikar, KC Sairam, T Srikanth, G Narayanan, K Vrinda, DG. Kurup
    Implementation and Testing of Cyber Physical System in Laboratory for Precision
    Agriculture 2018 Int Conf Adv Comput Commun Informatics, ICACCI 2018 (2018), pp.
    1906-1908, 10.1109/ICACCI.2018.8554601 View in ScopusGoogle Scholar [192] I Ahmad,
    K. Pothuganti Smart Field Monitoring using ToxTrac: A Cyber-Physical System Approach
    in Agriculture Proc - Int Conf Smart Electron Commun ICOSEC 2020 (2020), pp. 723-727,
    10.1109/ICOSEC49089.2020.9215282 Google Scholar [193] P Guo, PO Dusadeerungsikul,
    SY. Nof Agricultural cyber physical system collaboration for greenhouse stress
    management Comput Electron Agric, 150 (2018), pp. 439-454, 10.1016/J.COMPAG.2018.05.022
    View PDFView articleView in ScopusGoogle Scholar [194] B Stark, S Rider, YQ. Chen
    Optimal pest management by networked unmanned cropdusters in precision agriculture:
    A cyber-physical system approach IFAC Proc Vol, 46 (2013), pp. 296-302, 10.3182/20131120-3-FR-4045.00019
    View PDFView articleView in ScopusGoogle Scholar [195] C-R Rad, O Hancu, I-A Takacs,
    G. Olteanu Smart Monitoring of Potato Crop: A Cyber-Physical System Architecture
    Model in the Field of Precision Agriculture Agric Agric Sci Procedia, 6 (2015),
    pp. 73-79, 10.1016/J.AASPRO.2015.08.041 View PDFView articleGoogle Scholar [196]
    K Antonopoulos, C Panagiotou, CP Antonopoulos, NS. Voros A-FARM Precision Farming
    CPS Platform. 10th Int Conf Information Intell Syst Appl IISA, 2019 (2019), 10.1109/IISA.2019.8900717
    Google Scholar [197] D Cimino, A Ferrero, L Queirolo, F Bellotti, R Berta, A.
    De Gloria A low-cost, open-source cyber physical system for automated, remotely
    controlled precision agriculture Lect Notes Electr Eng, 409 (2017), pp. 191-203,
    10.1007/978-3-319-47913-2_23 View in ScopusGoogle Scholar [198] C Verdouw, B Tekinerdogan,
    A Beulens, S. Wolfert Digital twins in smart farming Agric Syst, 189 (2021), Article
    103046, 10.1016/J.AGSY.2020.103046 View PDFView articleView in ScopusGoogle Scholar
    [199] D Jones, C Snider, A Nassehi, J Yon, B Hicks Characterising the Digital
    Twin: A systematic literature review CIRP J Manuf Sci Technol, 29 (2020), pp.
    36-52, 10.1016/J.CIRPJ.2020.02.002 View PDFView articleView in ScopusGoogle Scholar
    [200] A Ahmed, S Zulfiqar, A Ghandar, Y Chen, M Hanai, G. Theodoropoulos Digital
    Twin Technology for Aquaponics: Towards Optimizing Food Production with Dynamic
    Data Driven Application Systems Commun Comput Inf Sci, 1094 (2019), pp. 3-14,
    10.1007/978-981-15-1078-6_1 View in ScopusGoogle Scholar [201] A Kampker, V Stich,
    P Jussen, B Moser, J. Kuntz Business models for industrial smart services - the
    example of a digital twin for a product-service-system for potato harvesting Procedia
    CIRP, 83 (2019), pp. 534-540, 10.1016/J.PROCIR.2019.04.114 View PDFView articleView
    in ScopusGoogle Scholar [202] N Tsolakis, D Bechtsis, D. Bochtis AgROS: A Robot
    Operating System Based Emulation Tool for Agricultural Robotics Agron, 9 (2019),
    p. 403, 10.3390/AGRONOMY9070403 Page2019;9:403 Google Scholar [203] T Machl, A
    Donaubauer, TH. Kolbe Planning agricultural core road networks based on a digital
    twin of the cultivated landscape J Digit Landsc Archit, 2019 (2019), pp. 316-327,
    10.14627/537663034 View in ScopusGoogle Scholar [204] RG Alves, G Souza, RF Maia,
    ALH Tran, C Kamienski, JP Soininen, et al. A digital twin for smart farming 2019
    IEEE Glob Humanit Technol Conf GHTC 2019 (2019), 10.1109/GHTC46095.2019.9033075
    Google Scholar [205] J Monteiro, J Barata, M Veloso, L Veloso, J. Nunes Towards
    sustainable digital twins for vertical farming 2018 13th Int Conf Digit Inf Manag
    ICDIM 2018 (2018), pp. 234-239, 10.1109/ICDIM.2018.8847169 View in ScopusGoogle
    Scholar [206] Verdouw C, Kruize J. Digital twins in farm management : illustrations
    from the FIWARE accelerators SmartAgriFood and Fractals. Undefined 2017. Google
    Scholar [207] P Moghadam, T Lowe, EJ. Edwards Digital Twin for the Future of Orchard
    Production Systems Proc, 36 (2019), p. 92, 10.3390/PROCEEDINGS2019036092 Page2020;36:92
    Google Scholar [208] S Aydin, MN. Aydin Semantic and syntactic interoperability
    for agricultural open-data platforms in the context of IoT using crop-specific
    trait ontologies Appl Sci, 10 (2020), 10.3390/app10134460 Google Scholar [209]
    Y He, J Guo, X. Zheng From Surveillance to Digital Twin: Challenges and Recent
    Advances of Signal Processing for Industrial Internet of Things IEEE Signal Process
    Mag, 35 (2018), pp. 120-129, 10.1109/MSP.2018.2842228 View in ScopusGoogle Scholar
    [210] MS Farooq, S Riaz, A Abid, K Abid, MA. Naeem A Survey on the Role of IoT
    in Agriculture for the Implementation of Smart Farming IEEE Access, 7 (2019),
    pp. 156237-156271, 10.1109/ACCESS.2019.2949703 View in ScopusGoogle Scholar [211]
    A Villa-Henriksen, GTC Edwards, LA Pesonen, O Green, CAG. Sørensen Internet of
    Things in arable farming: Implementation, applications, challenges and potential
    Biosyst Eng, 191 (2020), pp. 60-84, 10.1016/J.BIOSYSTEMSENG.2019.12.013 View PDFView
    articleView in ScopusGoogle Scholar [212] HM Jawad, R Nordin, SK Gharghan, AM
    Jawad, M. Ismail Energy-efficient wireless sensor networks for precision agriculture:
    A review Sensors (Switzerland), 17 (2017), p. 1781, 10.3390/s17081781 View in
    ScopusGoogle Scholar [213] L Sigrist, N Stricker, D Bernath, J Beutel, L. Thiele
    Thermoelectric Energy Harvesting from Gradients in the Earth Surface IEEE Trans
    Ind Electron, 67 (2020), pp. 9460-9470, 10.1109/TIE.2019.2952796 View in ScopusGoogle
    Scholar [214] AR Yanes, P Martinez, R. Ahmad Towards automated aquaponics: A review
    on monitoring, IoT, and smart systems J Clean Prod (2020), 10.1016/j.jclepro.2020.121571
    Google Scholar [215] N Brinis, LA. Saidane Context Aware Wireless Sensor Network
    Suitable for Precision Agriculture Wirel Sens Netw (2016), 10.4236/wsn.2016.81001
    Google Scholar [216] M Zimmerling, L Mottola, S. Santini Synchronous Transmissions
    in Low-Power Wireless: A Survey of Communication Protocols and Network Services
    ACM Comput Surv, 53 (2021), 10.1145/3410159 Google Scholar [217] F Tonolini, F.
    Adib Networking across boundaries: Enabling wireless communication through the
    water-air interface SIGCOMM 2018 - Proc 2018 Conf ACM Spec Interes Gr Data Commun
    (2018), pp. 117-131, 10.1145/3230543.3230580 View in ScopusGoogle Scholar [218]
    L Chen, S Thombre, K Jarvinen, ES Lohan, A Alen-Savikko, H Leppakoski, et al.
    Robustness, Security and Privacy in Location-Based Services for Future IoT: A
    Survey IEEE Access, 5 (2017), pp. 8956-8977, 10.1109/ACCESS.2017.2695525 View
    in ScopusGoogle Scholar [219] Y Njah, M. Cheriet Parallel Route Optimization and
    Service Assurance in Energy-Efficient Software-Defined Industrial IoT Networks
    IEEE Access, 9 (2021), pp. 24682-24696, 10.1109/ACCESS.2021.3056931 View in ScopusGoogle
    Scholar [220] A Rajput, VB. Kumaravelu Scalable and sustainable wireless sensor
    networks for agricultural application of Internet of things using fuzzy c-means
    algorithm Sustain Comput Informatics Syst, 22 (2019), pp. 62-74, 10.1016/J.SUSCOM.2019.02.003
    View PDFView articleView in ScopusGoogle Scholar [221] BB Sinha, R. Dhanalakshmi
    Recent advancements and challenges of Internet of Things in smart agriculture:
    A survey Futur Gener Comput Syst, 126 (2022), pp. 169-184, 10.1016/J.FUTURE.2021.08.006
    View PDFView articleView in ScopusGoogle Scholar [222] F Caffaro, E. Cavallo The
    effects of individual variables, farming system characteristics and perceived
    barriers on actual use of smart farming technologies: Evidence from the piedmont
    region, northwestern Italy Agric, 9 (2019), 10.3390/AGRICULTURE9050111 Google
    Scholar [223] KumarPratyush JainMohit, Vera L BhansaliIshita, PatelShwetak.FarmChat
    TruongKhai Proc ACM Interactive, Mobile, Wearable Ubiquitous Technol, 2 (2018),
    pp. 1-22, 10.1145/3287048 Google Scholar [224] Mclaughlan B, Brandli J, Smith
    F. Toward Sustainable High-Yield Agriculture via Intelligent Control Systems 2015.
    Google Scholar [225] RK Kodali, S Soratkal, L. Boppana IOT based control of appliances
    Proceeding - IEEE Int Conf Comput Commun Autom ICCCA 2016 (2017), pp. 1293-1297,
    10.1109/CCAA.2016.7813918 Google Scholar [226] Abbasi R, Reyes A, Martinez E,
    Ahmad R. Real-time implementation of digital twin for robot based production line
    n.d.:4–6. Google Scholar [227] O Bermeo-Almeida, M Cardenas-Rodriguez, T Samaniego-Cobo,
    E Ferruzola-Gómez, R Cabezas-Cabezas, W. Bazán-Vera Blockchain in Agriculture:
    A Systematic Literature Review Commun Comput Inf Sci, 883 (2018), pp. 44-56, 10.1007/978-3-030-00940-3_4
    View in ScopusGoogle Scholar [228] V Saiz-Rubio, F. Rovira-Más From Smart Farming
    towards Agriculture 5.0: A Review on Crop Data Management Agron, 10 (2020), p.
    207, 10.3390/AGRONOMY10020207 Page2020;10:207 View in ScopusGoogle Scholar [229]
    X Xu, Y Lu, B Vogel-Heuser, L. Wang Industry 4.0 and Industry 5.0—Inception, conception
    and perception J Manuf Syst, 61 (2021), pp. 530-535, 10.1016/J.JMSY.2021.10.006
    View PDFView articleView in ScopusGoogle Scholar [230] PKR Maddikunta, Q-V Pham,
    P B, N Deepa, K Dev, TR Gadekallu, et al. Industry 5.0: A survey on enabling technologies
    and potential applications J Ind Inf Integr (2021), Article 100257, 10.1016/J.JII.2021.100257
    Google Scholar Cited by (120) Design and implementation of a cost-aware and smart
    oyster mushroom cultivation system 2024, Smart Agricultural Technology Show abstract
    Recent advances in environmental and agricultural applications of hydrochars:
    A review 2024, Environmental Research Show abstract A quality-based sustainable
    supply chain architecture for perishable products using image processing in the
    era of industry 4.0 2024, Journal of Cleaner Production Show abstract Design and
    development of intelligent control strategies and algorithms for automated control
    of biotechnical objects under uncertainty 2024, Decision Analytics Journal Show
    abstract Assessing the influence of artificial intelligence on agri-food supply
    chain performance: the mediating effect of distribution network efficiency 2024,
    Technological Forecasting and Social Change Show abstract Occlusion-aware fruit
    segmentation in complex natural environments under shape prior 2024, Computers
    and Electronics in Agriculture Show abstract View all citing articles on Scopus
    1 www.sciencedirect.com 2 www.scopus.com 3 ieeexplore.ieee.org © 2022 The Author(s).
    Published by Elsevier B.V. Recommended articles A lightweight network for mummy
    berry disease recognition Smart Agricultural Technology, Volume 2, 2022, Article
    100044 Hongchun Qu, Min Sun View PDF What really impedes the scaling out of digital
    services for agriculture? A Kenyan users’ perspective Smart Agricultural Technology,
    Volume 2, 2022, Article 100034 John Kieti, …, Tonny Kerage Omwansa View PDF Exploring
    the susceptibility of smart farming: Identified opportunities and challenges Smart
    Agricultural Technology, Volume 2, 2022, Article 100026 Elsa Jerhamre, …, Vera
    van Zoest View PDF Show 3 more articles Article Metrics Citations Citation Indexes:
    83 Captures Readers: 562 Social Media Shares, Likes & Comments: 8 View details
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply.'
  inline_citation: '>'
  journal: Smart agricultural technology
  limitations: '>'
  pdf_link: null
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: The digitization of agricultural industry – a systematic literature review
    on agriculture 4.0
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2019.2926642
  analysis: '>'
  authors:
  - Basheer Qolomany
  - Ala Al-Fuqaha
  - Ajay Gupta
  - Driss Benhaddou
  - Safaa Alwajidi
  - Junaid Qadir
  - A.C.M. Fong
  citation_count: 128
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 7
    Leveraging Machine Learning and Big Data for Smart Buildings: A Comprehensive
    Survey Publisher: IEEE Cite This PDF Basheer Qolomany; Ala Al-Fuqaha; Ajay Gupta;
    Driss Benhaddou; Safaa Alwajidi; Junaid Qadir; Alvis C. Fong All Authors 116 Cites
    in Papers 8179 Full Text Views Open Access Comment(s) Under a Creative Commons
    License Abstract Document Sections I. Introduction II. Smart Buildings: Concept
    and Architecture III. Smart Building Components IV. Ml Background for SBS: Models,
    Tasks, and Tools V. Applications of Ml-Based Context-Aware Systems for SBs Show
    Full Outline Authors Figures References Citations Keywords Metrics Abstract: Future
    buildings will offer new convenience, comfort, and efficiency possibilities to
    their residents. Changes will occur to the way people live as technology involves
    people''s lives and information processing is fully integrated into their daily
    living activities and objects. The future expectation of smart buildings includes
    making the residents'' experience as easy and comfortable as possible. The massive
    streaming data generated and captured by smart building appliances and devices
    contain valuable information that needs to be mined to facilitate timely actions
    and better decision making. Machine learning and big data analytics will undoubtedly
    play a critical role to enable the delivery of such smart services. In this paper,
    we survey the area of smart building with a special focus on the role of techniques
    from machine learning and big data analytics. This survey also reviews the current
    trends and challenges faced in the development of smart building services. The
    major machine learning tasks that are relevant to smart buildings include: data
    collection and acquisition, data pre-processing, and dimensionality reduction.
    Published in: IEEE Access ( Volume: 7) Page(s): 90316 - 90356 Date of Publication:
    03 July 2019 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2019.2926642 Publisher:
    IEEE CCBY - IEEE is not the copyright holder of this material. Please follow the
    instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text
    articles and stipulations in the API documentation. SECTION I. Introduction Although
    the term “smart building” (SB) may bring a thought of a fictional smart space
    from science-fiction movies, but the reality is that SBs exist today, and their
    number is getting increased. With recent advances in machine learning (ML), big
    data analytics, sensor technologies and the Internet of Things (IoT), regular
    buildings can be cost-effectively transformed into SBs with bare minimum infrastructural
    modifications. There are smart office, smart library, smart home, smart health
    care facilities, smart hospital and many other types of SBs that can provide automated
    services that can provide many value-added services (such as reduction of wasted
    energy) and also help to ensure the comfort, health, and safety of the occupants.
    The hyperconnectivity that will be brought about by the emergence of IoT will
    increase the promise of SB since now all the basic building amenities and commodities
    ranging from your house electronics to your plant vases will be interconnected.
    But this hyperconnectivity will at the same time complicate the process of managing
    SBs. In particular, SBs and their inhabitants are expected to create large volumes
    of streaming data. ML, sampling, compression, learning, and filtering technologies
    are becoming more significant to manage the stream of big data of individuals.
    In 1981, the term Intelligent Buildings (IBs) was initially coined by United Technology
    Building Systems (UTBS) Corporation in the U.S. In July 1983, IBs became a reality
    with the opening of the City Place Building in Hartford, Connecticut [1]. Today,
    the number of SBs is growing at an unprecedented rate including smart office,
    smart hospitality, smart educational facilities etc. [2]. An SB is recognized
    as an integrated system that takes advantage of a range of computational and communications
    infrastructure and techniques [3]. Examples of SB services include smart thermostats
    that allow the temperature to be controlled based on the time of the day/year
    and the users’ preferences with minimal or no manual configuration. Using data
    analytics to “learn” the users’ preferences before taking the appropriate actions
    is probably the most important enabling technology for IBs [4]. Lately, smart
    coffee machines appeared in the market with the capability to make coffee automatically,
    according to users’ preferences and schedules. Fridges can offer allocated programming
    interfaces for their control [5]. IBs aim to provide their users with safe, energy
    efficient, environment-friendly, and convenient services. In order to maximize
    comfort, minimize cost, and adapt to the needs of their inhabitants, SBs must
    rely on sophisticated tools to learn, predict, and make intelligent decisions.
    SB algorithms cover a range of technologies, including prediction, decision-making,
    robotics, smart materials, wireless sensor networks, multimedia, mobile computing,
    and cloud computing. With these technologies, buildings can cognitively manage
    many SB services such as security, privacy, energy efficiency, lighting, maintenance,
    elderly care, and multimedia entertainment. The massive volume of sensory data
    collected from sensors and appliances must be analyzed by algorithms, transformed
    into information, and minted to extract knowledge so that machines can have a
    better understanding of humans than their environment. Furthermore, and most importantly,
    such knowledge can lead to new products and services that can dramatically transform
    our lives. For example, readings from smart meters can be used to better predict
    and balancing the usage of power. Monitoring and processing sensory data from
    wearable sensors attached to patients can produce new remote healthcare services.
    The main philosophy behind ML is to create the analytical models automatically
    in order to permit the algorithms to learn continuously from available data. The
    application of ML techniques increased over the last two decades due to the availability
    of massive amounts of complex data and the increased usability of current ML tools.
    Today, ML is already widely applied in different applications including recommendation
    systems offered by online services (e.g., Amazon, Netflix) and automatic credit
    rating services used by banks. Alphabet’s Nest thermostat utilizes ML to “learn”
    the temperature preferences of its users and adapt to their work schedule to minimize
    the energy use. Other widely publicized examples of ML applications include Google’s
    self-driving car, sentiment analysis of Amazon and Twitter data, fraud detection,
    and Facebook’s facial-recognition technology that is used to tag the suggested
    person on images uploaded by users. A. SB Trends and Market Impact In this section,
    we look at the statistics related to SBs, to allow us to understand the current
    trends and motivations in industry marketplaces and academic researches toward
    SBs. According to the report by MarketsandMarkets [6], The SB market is estimated
    to grow from 7.42 billion dollars in 2017 to 31.74 billion dollars by 2022, at
    a Compound Annual Growth Rate (CAGR) of 33.7% from 2017 to 2022. In yet another
    report Zion Market Research [7], 2016 and it is expected to reach 61,900 million
    dollars by 2024. It is expected to exhibit a CAGR of more than 34% between 2017
    and 2024. The market is primarily driven by government initiatives globally for
    SB projects and the increasing market for integrated security and safety systems
    as well as energy efficient building systems. Figure 1 shows the Statista [8]
    forecast market size of the global smart home market from 2016 to 2022 (in billion
    U.S. dollars). FIGURE 1. Forecast market size of the global smart home market
    from 2016 to 2022 [8]. Show All According to the Gartner report [9], it is expected
    that the number of smart connected homes grows to 700 million homes by 2020, supplied
    by mass consumer adoption and an increase in the number of devices and apps available.
    Figure 2 shows Gartner’s 2018 Hype Cycle expectation for deep learning, ML, connected
    homes, and smart workspace. FIGURE 2. Hype Cycle for the Connected Home, 2018
    [7]. Show All According to report by Research and Markets [10], [11], the global
    IoT SB market will reach approximately $51.44B USD globally by 2023. The report
    also forecast that 33% of IoT SB market will be supplied by artificial intelligent
    technologies by 2023, and automation systems of SB will grow at 48.3% CAGR from
    2018–2023. Frost & Sullivan also predict that by 2025, the growth of connected
    home living will reach 3.7 billion smartphones, 700 million tablets, 520 million
    wearable health-related devices and 410 million smart appliances in the connected
    person world. B. Related Survey Papers Although many of survey papers focused
    on SBs have been published, none of them is focused on the role of data analytics
    and ML in the context of SBs. We describe the relevant survey papers next and
    will compare these survey papers to our paper in Table 2. Chan et al. in 2008
    provided an overview of smart home research [12]. It also discusses assistive
    robots, and wearable devices. The article reviews smart home projects arranged
    by country and continent. Alam et al. [13] provided details about sensors, devices,
    algorithms, and communication protocols utilized in smart homes. The paper reviews
    smart home works according to their desired services and research goals; namely,
    security, comfort, and healthcare. Lobaccaro et al. [14] presented the concept
    of smart home and smart grid technologies and discuss some challenges, benefits
    and future trends of smart home technologies. Pan et al. [15] reviewed the works
    on efficient energy consumption in SBs using microgrids. The survey investigates
    research topics and the recent advancements in SBs and the vision of microgrids.
    A few survey papers have reviewed works on facilitating independent living of
    the elderly people in smart homes. Ni et al. [16] conducted a survey on the features
    of sensing infrastructure and activities that can assist the independent living
    of the elderly in smart homes. A survey on ambient assisted living technologies
    for elderly people has been presented Rashidi and Mihailidis [17]. Peetoom et
    al. [18] focused on monitoring technologies to recognize life activities in-home
    such as fall detection and changes in health status. Salih et al. [19] presented
    a review of ambient intelligence assisted healthcare monitoring services and described
    the various application, communication, and wireless sensor network technologies
    that have been employed in the existing research literature. A number of papers
    have focused IoT: (a) Perera et al. [20] discussed IoT applications from the perspective
    of context-awareness and self-learning; (b) Tsai et al. [21] surveyed the applications
    of data mining technologies in IoT; and (c) Mahdavinejad et al. [22] reviewed
    some ML methods that can be applied to IoT data analytics. TABLE 1 List of Important
    Acronyms Used TABLE 2 Comparison of Relevant Survey Papers C. Contributions and
    Organization of This Paper To the best of our knowledge, this is the first survey
    that covers SBs jointly from the perspectives of application, data analytics,
    and ML. The main contributions of our paper are: Exploration of the potential
    of ML-based context-aware systems to provide SB services; Identification of research
    challenges and directions for SBs and how ML models can help in resolving such
    challenges; Identification of SB applications including comfort, security, energy
    efficiency, and convenience and the role of ML in such applications. Our research
    can provide an impetus to ML researchers to investigate new exciting ML-based
    SB services. The rest of the paper is organized as follows: Section II introduces
    the concept of SBs and its underlying architecture. Section III introduces the
    various components of the SB ecosystem and its underlying architecture. Section
    V presents context recognition and activity modeling and the role of ML in SBs.
    Section VI highlights research and development challenges and provides a future
    perspective of SB projects. Finally, Section VII presents a summary of lessons
    learned and concludes the paper. For the convenience of the readers, we have enlisted
    the important acronyms used in Table 1. SECTION II. Smart Buildings: Concept and
    Architecture In 1984, The New York Times published an article that described that
    real estate developers are creating “a new generation of buildings that almost
    think for themselves called intelligent buildings.” Such an intelligent building
    (IB) was defined as “a marriage of two technologies - old-fashioned building management
    and telecommunications.” [23]. Since then, many definitions of SBs have been suggested.
    This is due to the fact that the life-cycle of building planning, design, implementation,
    and operation involves different industry players that have different roles. In
    addition, the rapid changes in technology are affecting this definition. For instance,
    the advent of IoT and smart city concepts is impacting the definition of SB. Therefore,
    it is hard to compose a unique view of IBs with a single definition that is accepted
    worldwide. However, it is vital to have a good understanding of the main standard
    bodies and companies involved in shaping the development of SBs [1]. The Institute
    for Building Efficiency [24] focuses on the operation of buildings to provide
    efficient healthy and comfortable environment [25]. IBM [26] focuses also on the
    operation of SBs to provide integrated physical and digital infrastructures that
    provide reliable, sustainable, and cost-effective occupancy services. According
    to the European Commission’s Information Society [27], SBs means buildings that
    are supplied by information and communication technologies in the context of the
    combining Ubiquitous Computing and the IoT: In general, the buildings that are
    supplied with sensors, actuators, microchips, micro- and nano-embedded systems
    in order to enable collecting, filtering and producing more information locally,
    to be further incorporated and managed globally according to business functions.”
    In SBs, a variety of AI and multi-agent system techniques are employed including
    [28]: Reasoning and knowledge representation including ontologies and rules to
    represent devices and building services. ML for human activity recognition. Multi-agent
    systems for distributed intelligence and semantic interoperability. Intelligent
    approaches such as planning, intelligent control, adaptive interfaces, and optimization
    for efficient management of resources and services. An SB is therefore the integration
    of a wide range of systems and services into a unified environment that involve
    energy management systems, temperature monitoring systems, access security systems,
    fire and life safety, lighting control and reduction, telecommunications services,
    office automation, computer systems, area locating systems, LANs, management information
    systems, cabling and records, maintenance systems, and expert systems [29]. Figure
    3 shows examples of SB appliances including air-conditioning systems, lighting
    systems, solar energy generators, power-supply systems, temperature sensors, humidity
    sensors, power usage sensors, and surveillance cameras. For example, centralized
    control of these elements can promote the efficient use of energy through the
    intelligent control of lights and air conditioning units and the intelligent management
    of multiple green and brown energy sources. In most cases, an SB uses an Ethernet
    backbone with bridges to a Controller Area Network (CAN) [26]. FIGURE 3. Example
    of SB appliances. Show All It is easier to introduce smart services in residential
    buildings compared to commercial buildings since residential buildings have less
    technical equipment and less stringent efficiency requirements. Because the commercial
    buildings usually have more public visitors and therefore building models for
    commercial buildings are usually more challenging than building models for residential
    buildings which usually have a limited number of the occupants most of the time.
    In addition, the costs associated with the purchase and installation of smart
    devices and infrastructure at commercial buildings is more than residential buildings.
    Figure 4 shows an integrated framework in a residential building that employs
    a network of intelligent sensors. These sensors control systems such as energy
    generation, metering, HVAC, lighting, and security. A building automation system
    manages a set of smart appliances, sensors, and actuators, which collectively
    deliver services for the well-being of the inhabitants. Examples of such smart
    appliances, sensors, and actuators include washers and dryers, refrigerators,
    heaters, thermostats, lighting systems, power outlets, energy meters, smoke detectors,
    televisions, game consoles, windows/door controllers and sensors, air conditioners,
    video cameras, and sound detectors. More advanced smart devices are constantly
    being developed like smart floors and smart furniture [28], [30]. FIGURE 4. Smart
    appliances, sensors, and actuators in a smart residential building. Show All The
    IoT will enable the integration and interoperability of heterogeneous devices
    in SBs as well as the real-time processing of the data generated by sensors in
    support of optimal control and operation of the building. In this paper, We propose
    a layered architecture for SBs based on the layered architecture of IoT. Figure
    5 shows the layered architecture of SBs. FIGURE 5. Layers of the base IoT architecture
    that serves as the foundation for SBs. Show All As can be seen from the sensing
    layer (the bottom layer in Figure 5), input data is obtained from different types
    of physical sensors that monitor environmental parameters, collect data about
    residents and detect anomalies (e.g., fire and water pipe bursts). This layer
    also includes actuators that can be controlled to save energy, minimize water
    consumption, etc. The network layer (the second layer in Figure 5), includes access
    and core networks that provide transparent data transmission capability. This
    layer serves as a bridge between the sensing layer and the upper layers which
    are mainly responsible for data processing. An intermediary software layer called
    the middleware layer is needed (the third layer in Figure 5) to provide seamless
    integration of heterogeneous devices and networks covered by the sensing layer
    of the architecture. That layer serves as a bridge between the embedded software
    that runs of smart sensors and back-end software services. This layer provides
    interoperability using standardized programming interfaces and protocols [31].
    Therefore, this layer performs the process of converting the collected data from
    various data formats into a common representation. SB middleware can be based
    on open standards or proprietary, in addition, application-specific or general-purpose.
    Most often, proprietary middleware is application-specific while general-purpose
    middleware is based on open standards [28]. The context and semantic discovery
    layer (the fourth layer in Figure 5) is responsible for managing context and semantic
    discoverers including context and semantics generating, configuring, and storing.
    The processing and reasoning layer (the fifth layer in Figure 5) is responsible
    for processing the extracted information from the middleware then according to
    the application’s type it will make decisions. In this layer, there are various
    techniques of information processing applied to fuse, extract, contextualize.
    massive data into useful actionable knowledge. In this layer, two phases should
    be identified: context consumer and context producer of the middleware. In the
    context consumer phase, the data processing techniques are applied on the data
    produced by the middleware; while in context producer phase the process of decision-making
    is implemented to supply the service layer with valuable knowledge. while in the
    second stage, further context information can be provided to the middleware for
    registration in the ontology context. Specific services and applications are abstracted
    in the application layer (the top-most layer in Figure 5). This layer presents
    a framework with direct access to the underlying functionalities to serve in the
    implementation of various types of applications. Moreover, control panels should
    be installed in the building to control the automated indoor spaces and to support
    a local human-machine interface. For instance, in a multi-story building, each
    floor could have a control panel to automate the operations, such as control opening
    the windows, control of air conditioning to achieve the desired temperature, control
    close/open the blinds according to the preferred light intensity before using
    artificial lighting [32], [33]. Summary: Still there is no single standard definition
    for SBs. In this section, we reviewed many definitions for SBs by many institutes,
    counties, regions and different disciplines; each has their own definition for
    SBs. We presented the layered architectural pattern for adapting services in an
    SB environment. We wanted to provide a general design for adapting actions according
    to the different versions of context in SBs. This architecture may be used in
    different smart environments such as intelligent transport systems, security,
    health assistance, and SBs among others. We layered the architecture into six
    layers starting from the sensing layer, which includes various types of sensors
    that are installed to collect environmental information in SBs. While network
    layer providing data stream support and data flow control and ensuring that messages
    arrive reliably by using data transport protocols such as Wi-Fi, Bluetooth, Ethernet
    etc. Data Acquisition layer to collect the data from the heterogeneous sources
    of data. Context and semantic discovery layer to generate, configure, and store
    context and semantic information. Context processing and reasoning layer to process
    the information and extract the knowledge that making the decisions according
    to the application context. And the last layer which is application layer such
    as health assistance and elderly home care, comfort and entertainment services,
    security, tele-management, smart watering, energy efficiency, etc. After discussing
    the main components of commercial and residential buildings, we have now set the
    stage for a detailed discussion on the components of SBs in the next section.
    SECTION III. Smart Building Components Advances in smart building technology have
    driven to the extensive development of SBs to generate economic and environmental
    benefits for building owners through the convergence of IT and building automation
    systems. Figure 6 shows the key components of SB systems, these include extensive
    sensors and actuators systems, networking and communication systems, software
    platform system, HVAC system, and smart control devices. FIGURE 6. Components
    of smart buildings. Show All Current systems utilize control devices and smart
    sensors that are connected to a central system. These control devices and smart
    sensors are placed throughout the environment. Each particular system has its
    own collection of networking and communication systems that enable it to communicate
    with the central system. SBs are performing connected networks that serve as a
    communication backbone for multiple systems. In many ways, HVAC equipment is the
    most complicated building system, with numerous components arranged to produce
    heating, cooling, and ventilation. The functionality of HVAC system not only makes
    the building healthy and comfortable for its inhabitants, but it also manages
    a big part of the energy consumed, as well as plays a significant role in life
    safety. SBs adopt technology to monitor and control facility systems and perform
    any required modifications. The objective of an SB is to utilize computers and
    software to control lighting, alarm systems, HVAC, and other systems through a
    single computer interface. A. Sensors and Actuators for SBs Sensors and actuators
    are mechanical components that measure and control the environmental values of
    their environment. Sensors collect information from the environment and make it
    ready for the system. For instance, IR sensors can be utilized for human presence
    detection in a room. While actuator is a device to convert an electrical control
    signal to a physical action, such that it takes decisions and then performs proper
    actions according to the environment, which enables automated and remote interaction
    with the environment.For example, a light actuator is capable of switching on/off,
    dimming one or more electric lights [34]. The rapid development of micromechanics,
    microelectronics, integrated optics, and other related technologies has facilitated
    the development of different types of smart sensors integrated into daily objects
    and infrastructure at smart building environment or worn by the users, and are
    connected by network technologies in order to collect contextual information about
    daily living activities more efficiently and faster, with lower energy consumption
    and less processing resources. Environmental sensors are utilized for detecting
    the human activity of a specific object that performed in specific locations in
    the building, while wearable sensors are utilized for controlling and observing
    mobile activities and physiological signals [35]. 1) Environmental Sensors It
    is found that data collected from environmental sensors can form important information
    to monitor human behaviors within an SB. These sensory data are then analyzed
    to identify and observe basic and instrumental daily living activities made by
    occupants such as bathing, dressing, preparing a meal, taking medication etc.
    The environmental sensing is generally based on several simple binary sensors
    in every part of the home, RFID technology, and video cameras. This variety of
    sensing may implement important insight into contexts and actual activities although
    it might come with possible costs such as complexity. Motion sensors are utilized
    for detecting the occupant’s presence and location everywhere in the house. There
    are different types of motion sensors. IR presence sensor is one of the most utilized
    kind of motion sensors in SBs to detect occupants’ presence. Pressure sensors
    can be attached to the objects such as beds, chairs, sofas, and floors in order
    to track the actions and locations of the occupants. While Contact switches are
    usually placed on the doors of fridge, rooms, or cabinets to detect the actions
    that the occupant makes with these objects [36]. Light sensors, humidity sensors,
    temperature sensors, or power sensors are other types of sensors that are deployed
    and utilized in SB to recognize the activities. Light sensors are utilized to
    measure the light intensity in a particular room in the building. Humidity sensors
    are utilized to detect the air humidity of a specific location in the building.
    Temperature sensors are utilized to measure the temperature of the specific environment.
    while the power sensors are utilized to identify the power usage of electric devices.
    2) Wearable Sensors and Biosensors These sensors are attached directly or indirectly
    to the user body. Their small size enables these sensors to be attached to clothes,
    wristwatches, glasses, belts, shoes etc. These sensors can be categorized into
    inertial sensors and vital sign sensors (or biosensors). Wearable inertial sensors
    are highly transportable and no stationary units that can give accurately detailed
    features of occupant’s action and body posture. Those sensors are composed of
    accelerometers, gyroscopes and magnetic sensors. There is a need for receivers
    and cameras in the process of data collection, therefore can be used outside laboratory
    circumstances [37]. Wearable biosensors such as blood pressure, skin temperature,
    and heart rate are significant for collecting vital signs to monitor the health.
    The most commonly utilized inertial sensors for mobile activity monitoring are
    accelerometers and gyroscopes. Accelerometers can be utilized to measure the rate
    of acceleration accompanying a sensitive axis, they are useful to monitor the
    motion’s activities such as doing exercise, standing, sitting, walking, or walking
    upstairs and downstairs. While the gyroscopes can be utilized to measure angular
    velocity and maintain orientation. Some examples of primary vital signs are Electrocardiogram
    (ECG), heart rate, blood pressure, blood glucose, oxygen saturation, and respiratory
    rate. There are various vital sign sensor utilized to measure different vital
    signals such as Electroencephalography sensors (EEG) for observing electrical
    brain activity, Electrooculography sensors (EOG) for observing eye movement in
    ocular activity, Electromyography sensors (EMG) for observing muscle activity.
    Electrocardiography sensors (ECG) for observing cardiac activity, pressure sensors
    for observing blood pressure, CO2 gas sensors for observing respiration, thermal
    sensors for observing body temperature and galvanic skin response for observing
    skin sweating [38], [39]. 3) Heating, Ventilation, and Air Conditioning (HVAC)
    HVAC system plays an essential role in SB services. HVAC system plays a remarkable
    role in efficient energy consumption in SBs, as well as it offers new operating
    options to increase the occupants’ comfort. In addition to meeting the desired
    temperature, HVAC control systems are produced in order to sustain comfort within
    an enclosed space by producing a specific level of humidity, pressure, air motion,
    and air quality in an SB [40]. CO2, humidity and temperature levels in a building
    can affect occupant’s health and comfort; consequently measuring CO2, humidity,
    and temperature in this context can improve personal wellbeing [41]. Heating and
    cooling systems consume a huge amount of energy in the buildings, so it is necessary
    to optimize it utilizing smart controllers and sensors in order to save operational
    costs. Smart HVAC systems can sense and control efficiently different air quality
    parameters inside the building by utilizing distributed sensors and VAV fans throughout
    the building to perform an optimal ventilation [42]. Most of the current HVAC
    actuation systems in smart buildings are based on the data collected about the
    occupants using sensors and cameras, which are utilized specifically for HVAC
    systems. Certainly, There is a specific cost for the design, maintenance, setup
    and hardware of the data collection network [43]. Table 3 shows a summary for
    different types of smart sensors in the SBs. TABLE 3 Various Smart Sensors Useful
    in the Context of SBs B. Smart Control Devices Smart control devices collect data
    from a variety of sensors, process this data, and activate actuators to react
    to the events detected by the sensors. A smart control device can operate independently,
    without control by a central server. But there might be a needed communication
    amongst various control devices or they can connect with each other using the
    smart gateway. WeMo [44] is a Wi-Fi enabled switch utilized to turn electronic
    devices on/off from anywhere. It can control LED motion sensors, light bulbs,
    mart wall switches and plugs, and lighting devices, all from the smartphone app
    or browser. There is no hub needed for WeMo devices, everything can be managed
    through the free cloud service provided by Belkin. You can use the specific channel
    to connect the device to e-services such as Gmail to trigger specific actions.
    WeMo devices also support context-aware feature, it turns on/off automatically
    according to the time of day, whether it is sunrise or sunset etc. The Nest thermostat
    [45], a smart device developed by Nest—which has been acquired by Google—adjusts
    to your life and seasons change automatically. Just use it for a week and it programs
    itself. It learns about the level of temperatures that the occupants prefer and
    creates a context-aware personalized schedule. The smart thermostat turns to an
    energy-efficient mode automatically when the residents leave the building. It
    could start warming up the area when it senses activity, such as an occupant’s
    returning back home from work. The Nest Thermostat is controllable via a smartphone
    and an installed app. If you are away for a while, this device has also a capability
    to sustain a particular temperature in your house. Lockitron [46] is a door lock
    that can control the door remotely over the Internet to open and close it by phone.
    Lockitron app can be installed and used by any iOS or Android smartphone. Homeowners
    can directly grant family and friends the access to open a given door by providing
    authorization over the Internet. Lockitron can also utilize Bluetooth low energy
    technology, which means that it will keep controlling even in the event of Internet
    or power outages. Lockitron can also connect to the Internet with Bridge, through
    which occupants can control the bolt anywhere in the world. The SmartThings [47]
    SB automation system comprised of a communications smart hub, that supports various
    smart appliances and devices; the smart hub supports various technologies and
    protocols such as ZigBee, Z-Wave, as well as IP-accessible devices and lets you
    control appliances using Wi-Fi and Bluetooth connectivity. SmartThings provides
    kits that include smart plugs, in addition, the basic sensors that can be utilized
    to measure temperature, as well as to detect presence, motion, orientation, and
    vibration. SmartThings also includes an open platform that enables smart device
    vendors and third-party software to provide hardware and software that can be
    utilized alongside the platform. Philips Hue [48] is a combination of LED lighting
    with mobile technology. An accompanying mobile app that allows you to control
    lighting systems and changing color sets depending on your mood utilizing Wi-Fi
    technology. The new Philips Hue bridge supports the required authentication to
    enable Apple HomeKit technology to control and enable your Philips Hue to connect
    to other HomeKit enabled accessories and take control of your home. Blufitbottle
    [49] this bottle records the drinking habits of the users and sends them notifications
    about the time and amount of the water that they are supposed to drink to keep
    them healthy and hydrated. The app collects data about users such as their weight
    and age, plus other factors such as the current levels of temperature and humidity
    to estimate the amount of the needed water to keep them hydrated. When the user
    falls behind with hydration, an alert sounds, as well as a simple glance from
    the LEDs, will indicate when it’s time for the next drink. Canary [50] is an all-in-one
    home security system that comprises a set of sensors such as temperature, air
    quality, sound, motion vibration, in addition, an HD video camera in one unit.
    The system utilizes ML algorithms to let the users know what is happening at home
    and take action by sending notifications to your phone if something happens. Those
    ML models learn over time and send the users smarter notifications as it detects
    motion. So that, the longer you have the system, the more effective it becomes.
    Canary is able to decrease the rate of false alarms by learning the user behavior
    and the ambient noise level and the home temperature patterns. Amazon Echo [51]
    is a small cylinder enable the users to control anything in the home via the voice.
    Amazon Echo has a powerful voice recognition capability, the user does not have
    to worry about the complexities of their voice. Amazon Echo is connectable via
    Wi-Fi or Bluetooth, the users can send voice commands to control the speakers
    as well as other compatible devices such as Belkin’s WeMo and Philips Hue. It
    can also use Amazon cloud Lambda service to send commands. To send any command
    It requires to include the name of the program, for instance, “Alexa, turn on
    TV”. It also includes a network to distant servers, which slows down the response
    time. Honeywell Total Connect Remote Services [52] this device merges personal
    smart home automation with security monitoring task. It enables the occupants
    to control and monitor everything in the home from lighting and window shades
    systems to security cameras and smoke alarms. the user can utilize a smartphone
    app or desktop-mounted hardware console for controlling and monitoring. It can
    provide real-time alerts, GPS vehicle and asset tracking, video viewing, and mobile
    control. The system only supports Z-Wave devices, it needs to be installed by
    an authorized Honeywell dealer. It does not work with Wi-Fi enabled smart thermostats.
    In addition, the Honeywell provides security cameras and sensors, it also supports
    other smart devices from third parties, such as Yale locks and Lutron lighting.
    Table 4 shows a comparison among various smart control devices in the SBs. TABLE
    4 Comparison Among Various Smart Control Devices in SB C. Networking and Home
    Gateway An SB combines a communication network in order to control smart devices
    and services within the building. The communication network of a smart building
    can be based on diverse communication media such as twisted pair cable, as the
    traditional computer networks. The networking in building automation system has
    a tendency to utilize a heterogeneous network that is made up of diverse communication
    media and network standards. The building automation network is identified by
    physical technology and communication protocols. There is an internal network
    that connects devices inside the building, as well as the external networks, can
    be integrated separately. Public Internet, ISDN, and mobile phone networks are
    some examples of external networks [28], [53]. A typical SB may comprise a number
    of different components, such as sensors, actuators, communication and processing
    devices. Because of their nature, these components have limited capabilities and
    computational capacity in term of battery capacity and capability of data processing.
    To deal with this issue, most of the SB systems have been utilized as a central
    gateway to collect, process, and analyze context data from different sensors and
    actuators in the building. Several protocols such as Bluetooth, ZigBee, Wi-Fi,
    and Z-wave can be utilized for communicating the gateway. The home gateway can
    also collect and store data for a specific time period. Typically, these gateways
    can connect to the cloud services and perform data processing and reasoning tasks.
    The centralized gateway usually does not have any interface. They can be controlled
    and managed utilizing smartphones, tablets, or computers [54], [55]. In general,
    depending on the communication media used, SB network technology can be classified
    by interconnection method into three main types: Powerline, Busline, and Wireless
    [15], [56], which we describe next. 1) Powerline Communication (PLC) PLC method
    reuses the building electrical network; such that devices, appliances, and services
    are directly connected to the main power supply utilizing the already available
    electrical outlets in a building. The data is sent through the normal cable system
    to activate or deactivate the devices in the building. PLC system is historically
    the oldest technology in SB and is generally cheap but less reliable and scalable
    [3]. Originally, the application of PLC was mainly to secure the typical operation
    of the electric power supply system in case of failures or breakdowns through
    the direct exchange of information between the distribution center, and power
    plant. Therefore, this approach has become a competitive choice for SB networking,
    benefiting from availability, robustness, and ready connectivity of this method.
    Some of the protocols of this method offer a single-way communication, which enables
    the device to only receive information but not to communicate. There are different
    mainstream protocols of PLC method such as X-10, INSTEON, HomePlug, BACnet, and
    Lonworks. 2) Busline Busline systems in SBs networks use a separate physical media,
    usually twisted-pair cabling similar to the physical cables utilized for network
    services for transporting electrical signals. This type of systems is pleasant
    the building’s occupants, albeit the configuration process is complex, and it
    requires some knowledge of networking. Although the configuring complexity and
    installation cost of this system, the use of a separate cable could present a
    positive note about this approach, as it allows this method of networking to provide
    higher bandwidth, and to make it the most reliable of the three approaches. In
    addition, this technology usually supports a completed two-way communication protocol
    that enables the appliances to easily communicate with each other [57]. Some of
    the protocols in Busline technology are Konnex (KNX), CAN (Controller Area Network),
    Modbus, Meter-Bus (M-Bus). 3) Wireless Interconnection Many of the new SB applications
    use wireless technologies such as infrared and radio frequency, which are more
    convenient for users due to their untethered nature and the elimination of cables.
    The devices within the smart building can communicate wirelessly as radio wave
    can penetrate through floors, cabinets, and walls [56]. Because of the complexity
    and cost of potential modifications and of the re-wiring process in a smart building,
    several different wireless technologies are rising to produce flexible networking
    patterns convenient to occupants without taking to consider the physical wiring
    and deployment of such wire in the building. Typically, there are various protocols
    for the wireless system such as Bluetooth, ZigBee, WLAN, Z-wave, RFID etc., which
    essentially work in the industrial scientific medical bands, particularly in the
    2.4GHz frequency range. These wireless technologies are usually related to some
    control network concept in an SB such as low power consumption, high cost-effectiveness,
    low speed, flexibility in networking, deployment as well as building coverage
    [3]. The gateway is the central server of an SB that is commonly used in IoT solutions.
    The services provided by the gateway essentially concern to system management
    functionalities such as monitoring, controlling, and configuring the systems and
    their devices. It also supports some processing and data storage capabilities
    required for complex applications. D. Software Platform For a building to be “smart,”
    it is important that all the appliances and systems in the building communicate
    and exchange data securely with each other as well as with smartphones, tablets,
    and servers in the cloud. Software platforms play a critical role in exchanging,
    archiving and disseminating information through different protocols. These platforms
    use push, pull, publish/subscribe, etc. The goal of the joint commercial enterprises
    is to develop an open source software platform in order to make the process of
    data exchanging easier between the devices of different manufacturers. Therefore,
    the users will not have to worry in the future about the compatibility issues
    when utilizing electric and electronic devices of different manufacturers at home.
    In addition, the new platform can also offer a variety of different building services
    such as entertainment, energy efficiency, and security technology. Hence, this
    will enable creating different apps for these areas of use [58]. ABB, Robert Bosch
    GmbH, and Cisco Systems Inc. established an open-software platform called Mozaiq
    Operations GmbH [59] to unify smart building technology and offer interoperability
    across for all devices and services in the building, to simplify the experience
    for residents. It will enable users to seamlessly and intuitively customize their
    appliances and devices, regardless of manufacturers and brands of these devices,
    in order to improve energy efficiency and achieve a unique level of control and
    comfort. For instance, the user can close the blinds in the home either by a click
    from a smartphone or through a pre-set instruction; and switch off automatically
    all screen devices for the children to go outside to play. In a smart building,
    many devices and appliances can simply and securely share information with one
    another and with smartphones and other smart devices; and the Internet in general.
    Indigo Domotics [60] is to implement the do-it-yourself smart building platform.
    Indigo home automation software controllers available for the Mac OS enables residents
    to combine an array of common INSTEON, Z-Wave and X10 devices for unparalleled
    control of your building lighting, sensors, thermostats, and appliances. With
    Indigo Touch (sold through iTunes app store, iOS only), users will easily achieve
    remote control of their appliances utilizing an iPhone, iPad, or iPod Touch. They
    also can use a web browser on any device to control their appliances virtually
    anywhere in the world. The users can receive texts or emails about specific events
    has been detected for doors opening/closing, power failures etc. Indigo, from
    Perceptive Automation, is the newest home automation software for the Mac. OpenHAB
    [61] is an open-source software platform that follows a middleware approach for
    integrating different technologies in smart building systems into a single solution.
    OpenHAB platform address a variety of network technologies and appliances in the
    area of a smart building. Currently, the dependency on a particular vendor becomes
    a problem due to the lack of a common language that bridges the different devices
    with building automation system. The main goal of the OpenHAB platform is to integrate
    the new devices and technologies in a smart building system through a community-based
    approach. OpenHAB utilizes an OSGi based modular system for communicating between
    different technologies and devices. Bindings can be developed and deployed as
    an OSGi bundle to bridge a particular technology and device. There are different
    supported technologies exist such as EnOcean, KNX, Z-Wave, and others are supported
    through special bindings [62]. SmartThings [47] this platform composed of hardware
    devices, sensors, and software applications. Context information is collected
    from the sensors, this context is contributed to the reasoning and action that
    are performed by the application. For instance, the sprinkler in the garden can
    detect the rain, and switch itself off accordingly to save water. SmartThings
    kit comprises sensors, smart devices, and hub. While the SmartThings application
    is configured to enable users to control and monitor their building environment
    through a smartphone device. The SmartThings Hub works to connect the sensors,
    devices and building’s internet router to one another and to the cloud. It is
    compatible with different communication protocols such as Zigbee, Z-Wave, and
    IP-accessible devices. In addition, the SmartThings is compatible with other sensors
    and devices such as thermostats, moisture sensors, motion sensors, presence sensors,
    locks and garage door openers [63]. HomeOS [64] is Microsoft’s home operating
    system platform, that can be installed on a personal computer. It is an open platform
    that is not limited to Windows-based devices [65], [66]. with HomeOS platform,
    applications can be installed to maintain various context-aware functionalities,
    for example, taking an image by a door camera and sending it to the occupant when
    someone rings the doorbell. HomeOS provides a PC-like abstraction that manages
    and extends the technology of network devices to the users and developers in the
    smart building environment. Its design enables the users to map their protocol-independent
    services to support the applications with simple APIs, a kernel, and protocols
    of specific devices. HomeOS usually runs on an allocated computer such as a home
    gateway, it does not need any adjustments to commodity devices. HomeOS usually
    utilizes (i) Datalog-based access control to facilitate the process of managing
    technology in the smart home (ii) a kernel to incorporate the devices and applications
    and (iii) protocol-independent services to allow the developers manageable access
    to the devices. Lab of Things (LoT) [67], [68] is an experimental research platform
    that utilizes connected devices in the buildings. LoT offers a framework that
    provides deployment capabilities such as remote monitoring and updating of system
    health, and logging data collected from different appliances in cloud storage.
    It enables data sharing and collecting, sharing codes, connect hardware sensors
    to the software platform, and participants using HomeOS. The platform is designed
    to make it simple to design solutions that can be deployed in IoT based smart
    services such as healthcare, energy management services as it works in combination
    with HomeOS. Eclipse Smarthome [69] is a framework that has a focus on heterogeneous
    environments such as smart building and ambient assisted living. This platform
    takes to consider a variety of existing communication mechanisms. Eclipse SmartHome
    works as an abstraction and translation framework that enables communications
    across system and protocol boundaries. It provides many relevant implemented extensions,
    protocols, and standards that are significant for smart building services. Those
    implementations can be of Java library or an OSGi bundle shapes so that they can
    be utilized independently from the rest of the project. The framework can work
    on different embedded devices such as a BeagleBone Black, an Intel Edison, or
    a Raspberry Pi. Extensions of Eclipse SmartHome are compatible with the solutions
    provided by different vendors. This means your code that is written for a specific
    purpose can be extended easily on commercial platforms. Eclipse SmartHome offers
    a variety of characteristics to allow you to design a special Smart Home solution
    for your expectations [70]. Apart from discussing various SB solutions, we will
    also highlight the popular simulator called Cooja is used widely by the research
    community to produce small simulations for relatively large wireless networks
    of embedding sensors and actuators; and connected devices, in order to develop,
    debug and evaluate systems based on the wireless sensor network technology. Cooja
    simulator is a Java-based wireless sensor network simulator. It is distributed
    with Contiki OS project. Cooja enables the emulation of the set of sensor nodes,
    in addition, it can simulate physical and application layers of the system [71].
    There are three basic properties for the simulated node in Cooja: Its hardware
    peripherals, node type, and data memory. The node type can be shared among multiple
    nodes and defines properties that are common to all these nodes [72]. Summary:
    The field of SBs contains a variety of technologies, across commercial, industrial,
    institutional and domestic buildings, including building controls and energy management
    systems. Several organizations and institutions are working to supply buildings
    with technology that enables the residents to adopt a single device to control
    all electronic devices and appliances. In this section, we discussed the various
    components for SBs including sensors and actuators, smart control devices, smart
    gateway, networking and software platforms. SECTION IV. Ml Background for SBS:
    Models, Tasks, and Tools Massive data generated from sensors, wearable devices,
    and other IoT technologies provide rich information about the context of users
    and building status and can be used to design SB management. This context information
    is needed to extract useful and interesting insights for various stakeholders.
    When the data volume is very high, developing predictive models using traditional
    approaches does not provide accurate insight and we require newly developed tools
    from big data. Big data is primed to make a big impact in SBs and is already playing
    a big role in the architecture, engineering, and construction (AEC) industries
    [73], notably for waste analytics [74] and waste minimization [75]. ML is a powerful
    tool that facilitates the process of mining a massive amount of data that have
    been collected from different sources around us and make sense of a complicated
    world. ML algorithms apply a model on new data by learning the model from a set
    of observed data examples called a training set. For example, after being trained
    on a set of sample accelerometer data marked as walking or jogging, an ML algorithm
    can classify the future data points into walking and jogging classes. ML makes
    it relatively easy to develop advanced software systems without much involvement
    from the human side. They are applicable to many real-life problems in SB environments.
    One can also design and develop self-learning and collaborative systems. ML does
    not remove the human element from data science—it draws on computers’ strengths
    in handling big data to complement our understanding of semantics and context.
    It only needs training data to extract better features or parameters required
    to improve a given system. ML algorithms can be used to make predictions based
    on data patterns. It enables the computer to learn from the fed input data without
    being explicitly programmed so that ML algorithms can learn from and make predictions
    on input data [76], [77]. Nest thermostat is an example of a device that applies
    a specific temperature in a specific room and at a certain time of day according
    to the occupants’ preference. There are devices such as Amazon’s Echo that can
    learn from voice patterns, and the others those learn from much more complex behavior
    and activity patterns. A. Ml Models ML techniques have been widely used to develop
    smart systems which can sense and react according to context modifications in
    SBs [78]. There are many different ML algorithms, according to the two well-known
    theorems No Free Lunch theorem and Ugly Duckling theorem. No Free Lunch theorem
    states “there are no algorithms that can be said to be better than any other”,
    without prior information about the problem, any two algorithms may perform equally
    well in solving a problem. While Ugly Duckling theorem states “we cannot say that
    any two different patterns would be more similar to each other than any other
    pairs.” [79]. Mainly, ML is categorized into four categories handling different
    types of learning tasks as follows: Supervised learning, unsupervised learning,
    semi-supervised learning and reinforcement learning (RL) algorithms Figure 7 shows
    ML styles. These categories are described next and a summarized comparison between
    these ML techniques is presented in Table 5. TABLE 5 Comparison of ML Techniques
    FIGURE 7. ML styles. Show All 1) Supervised Learning refers to developing algorithms
    based on a labeled training dataset, from which the learner should generalize
    a representation by building the system model that represents the relations between
    the input, output and system parameters. ML model is developed through a training
    process that continues on the input training data until the model reaches the
    desired level of accuracy [80], [81]. Some examples of common supervised ML algorithms
    are: naive Bayes model, decision tree, linear discriminant functions such as support
    vector machines (SVMs), artificial neural networks (ANNs), hidden Markov models
    (HMMs), instance-based learning (such as k-nearest-neighbor learning), ensembles
    (bagging, boosting, random forest), logistic regression, genetic algorithms, and
    logistic regression [82], [83]. Supervised learning approaches are extensively
    used to solve different problems in smart buildings. Application in SBs: Boger
    et al. [76] proposed a supervised learning system using Markov decision processes
    to help people with dementia the process of hand washing. Altun et al. [84] make
    a comparative study on the supervised human activity classification approaches
    using body-worn miniature inertial and magnetic sensors. Mozer [85] developed
    the occupant comfort control of the home environment system using neural networks
    and reinforcement learning to control air heating, lighting, ventilation, and
    water heating in the smart home environment. Bourobou et al. [86] presented a
    hybrid approach using ANN and K-pattern clustering to identify and predict user
    activities in the smart environments. Hsu et al. [87] proposed a TV recommendation
    system using a neural network model based on user personalized properties such
    as activities, interests, moods, experiences, and demographic information data.
    Fleury et al. [88] proposed a healthcare-focused smart home system using the SVM
    algorithm to classify daily living activities based on the data from the different
    sensors. Supervised learning problems can be further grouped into classification,
    regression, time series, and ensemble method problems. a: Classification The task
    of classification algorithms is to classify an instance into a specific discrete
    set of possible categories. Given two sets of data (labeled and unlabeled datasets),
    the labeled dataset is used for the training process, while the unlabeled dataset
    will be used to evaluate of the classification results. The normal process is
    to count the number of instances that are assigned to the right category, which
    is also known as the accuracy rate (AR) defined by [21]. The classification algorithm
    can mathematically be described as follows: AR= N c N t (1) View Source where
    N c denotes the number of test instances that are correctly assigned to their
    categories to which they belong; N t the number of test instances. The precision
    ( P ) and recall ( R ) are used to measure the details of the classification results.
    The four possible outcomes are true positive ( TP ), false negative ( FN ), false
    positive ( FP ), and true negative ( TN ), the precision ( P ) and recall ( R
    ) are generally defined as: P= TP TP+FP (2) View Source Given P and R , a simple
    method to describe the precision and recall of the overall classification results,
    called F-score or F-measure, is defined as: F= 2PR P+R (3) View Source Commonly
    used classification techniques include decision trees, SVM, rule-based induction,
    neural networks, deep learning, memory-based reasoning, and Bayesian networks
    [89]. b: Decision Tree Algorithms The decision tree method is an important predictive
    ML modeling approach, which constructs a model of decisions presented based on
    the actual values of features in the data. Decision trees can be utilized for
    both classification and regression problems. In tree structures, leaves represent
    class labels and branches represent conjunctions of attributes that drive to those
    labels [90]. The decision trees that the target variable takes continuous values
    called regression trees. Decision trees are often one of the favorites of ML algorithms
    because of its speed and accuracy. The most common algorithms for decision tree
    are [91]: classification and regression tree, ID3, C4.5 and C5.0, Chi-squared,
    M5, and conditional decision trees. Application in SBs: Delgado et al. [92] propose
    an ML technique based on decision trees to extract the most frequent activities
    of human behavior and the temporal relationship of those activities in order to
    produce the human behavior quickly in a smart environment. Viswanathan et al.
    [93] introduce a prototype distributed data mining system for healthcare environment
    using C4.5 classification algorithm that can provide the patient monitoring and
    health services. Decision trees algorithm is a non-parametric algorithm that is
    easy to interpret and explain. The main disadvantage of this algorithm is that
    it can easily overfit. c: Bayesian Algorithms Bayesian methods utilize Bayes’
    theorem for classification and regression problems. The most common Bayesian algorithms
    are [94]: Naive Bayes, Gaussian naive Bayes, Bayesian belief network, Bayesian
    network. Application in SBs: Parnandi et al. [95] propose an indoor localization
    approach based on Naive Bayes classification and dynamic time warping, they exploit
    the embedded sensors of smartphones to determine the building that the user entered
    and the activities that the user is performing inside the building. Verbert et
    al. [96] proposed an ML approach based on Bayesian network to diagnosis the fault
    in HVAC systems. The model has been constructed based expert knowledge concerning
    conservation laws, component interdependencies, and historical data using virtual
    sensors. Naive Bayes classifier approaches have been applied with potential results
    for human activity recognition in [97], [98]. Naive Bayes approach recognizes
    human activities that identify with the highest probability to the set of sensor
    readings that were observed. d: Support Vector Machine (SVM) is a supervised ML
    algorithm which can be applied for both classification and regression problems
    though mostly used in classification challenges [140]. SVM is one of the most
    popularly utilized for many statistical learning problems, such as face and object
    recognition, text classification, spam detections, handwriting analysis etc. [141].
    is maximizing the margin that separating between the hyperplane of two classes’
    closest points. Support vectors are the points lying on the boundaries, and the
    optimal separating hyperplane is the middle of the margin [142]. Application in
    SBs: Fu et al. [105] proposed an SVM method to predict the system level electricity
    loads of public buildings that have electricity sub-metering systems. A real-time
    human tracker system proposed Nguyen et al. [106] using SVM for predicting and
    recognizing human motion based on the input images from a network of four cameras
    in the ubiquitous smart homes. Petersen et al. [107] developed an SVM model to
    predict the times where visitors are present in the home using only the data provided
    by wireless motion sensors in each room. Fleury et al. [88] presented a study
    for automatic recognition of daily living activities in a smart home based on
    SVM. They collected the data from various sensors such as Infra-Red Presence Sensors,
    door contacts, temperature and hygrometry sensor, and microphones. Das et al.
    [108] proposed a one-class classification approach for a real-time activity error
    detection in smart homes using one-class SVM. Zhao et al. [143] proposed an ML
    approach based on SVM and RNN to detect the occupancy behavior of a building through
    the temperature and heating source information for the energy efficiency consumption
    purposes. e: Artificial Neural Network Algorithms (ANNs) ANN models are inspired
    by the process of biological neural networks. ANN models are commonly utilized
    for regression and classification problems. The common ANN algorithms are [94]:
    Perceptron, Back-Propagation, Hopfield Network, and Radial Basis Function Network
    (RBFN). ANNs provide a number of advantages including it requires less statistical
    training, it has the capacity to detect complex nonlinear relationships between
    the predictor and response variables, as well as the ability to detect all possible
    relationships between predictor variables [104]. On the other hand, disadvantages
    include its “black box” nature, heavy computational burden and proneness to overfitting.
    However, due to the inherent features of neural networks, it has the following
    main limitations: challenge in training with no local optima, its accommodation
    to modifications in the behavior, the validation process of the results, and the
    complexity of network performance interpretation. Application in SBs: Badlani
    and Bhanot [99] developed a smart home system for energy efficiency applying pattern
    recognition based on ANNs, the system incorporates an RNN to capture human behavior
    patterns and an ANN for security applications in smart homes. Other researchers
    have applied ANNs to present context-aware services. Campo et al. [100] developed
    a system that calculates the probability of occupation for each section of the
    building and compares the probability with the current situation systematically.
    See [101] for a survey paper focusing on the role of ANNs for smart home services.
    Ermes et al. [102] proposed a hybrid classifier approach using a tree structure
    comprising a priori knowledge and ANN to recognize the activities such as rowing,
    biking, playing football, walking, running, sitting, or hiking. Ciabattoni et
    al. [103] proposed a home energy management system design using the neural network
    algorithm to predict the power production of the photovoltaic plant and the home
    consumptions during the given time. f: Deep Learning Algorithms: Deep learning
    methods represent an evolved form of ANNs in which a deep architecture (many layers
    comprising multiple linear and non-linear transformations [144]) is used. One
    of the promises of DL is replacing the manually selected features with efficient
    unsupervised or semi-supervised feature learning and hierarchical feature extraction
    algorithms. The most common DL algorithms are [145]: Convolutional Neural Network
    (CNN), Recurrent Neural Network (RNN), Deep Boltzmann Machine (DBM), Deep Belief
    Network (DBN), and Stacked Auto-Encoders. Deep learning has been used successfully
    in varieties of big data analytics applications, particularly natural language
    processing (NLP) applications, medical diagnosis, stock market trading, network
    security, and image identification. Deep learning is now ubiquitously used in
    major businesses and companies. Microsoft research on a deep learning system presented
    real-time speech translation system between Mandarin Chinese and English languages
    [146]. Apple’s Siri uses a deep learning trained model, and the voice recognition
    in the Google Android phone also uses a deep learning trained model [147]. DL
    utilizes a number of techniques such as drop-out and convolutions that enables
    the models to learn efficiently from high-dimensional data. However, DL requires
    much more data to train compared to other algorithms because of the magnitudes
    of parameters for estimation required by the models. Application in SBs: Choi
    et al. [114] propose two prediction algorithms deep belief network and restricted
    Boltzmann machines based on the DL framework for predicting different human activities
    in a building. They also presented a hybrid model which combines for predicting
    human behavior. The paper [115] proposes a generic deep learning framework based
    on convolutional and RNNs for human activity recognition that is suitable for
    multimodal wearable sensors, such as accelerometers, gyroscopes or magnetic field
    sensors. Alsheikh et al. [116] proposed a hybrid approach of DL and hidden Markov
    model for human activity recognition using triaxial accelerometers. Baccouche
    et al. [117] propose a two-steps neural-based deep model to classify human activities,
    the first step of the model is automatically learned spatiotemporal features based
    on Convolutional Neural Networks. Then the second step of the model uses an RNN
    to classify the entire sequence of the learned features for each time-step. In
    [118], they propose an acceleration-based human activity recognition method using
    Convolution Neural Network. In [119] a deep convolutional neural network as the
    automatic feature extractor and classifier for recognizing human activities is
    proposed using the accelerometer and gyroscope on a smartphone. Hammerla et al.
    [148] explore the performance of deep, convolutional, and recurrent approaches
    of deep learning for human activity recognition using wearable sensors. For the
    sake of measuring the performance, the authors used three representative datasets
    that comprise motion data collected from wearable sensors. g: Hidden Markov Models
    (Hmm) An HMM is a doubly stochastic process with a hidden underlying stochastic
    process that can be observed through the sequence of observed symbols emitted
    by another stochastic process. Application in SBs: Wu et al. [113] proposed an
    improved HMM to predict user behaviors in order to provide services for people
    with disabilities. They developed a temporal state transition matrix to be utilized
    instead of the fixed state transition matrix. Lv and Nevatia [112] used hidden
    Markov models for both automatic recognition and segmentation of 3-D human activities
    to allow real-time evaluation and feedback for physical rehabilitation. Cheng
    et al. [110] proposed an inference engine based on the HMM that provides a comprehensive
    activity of daily living recognition capability. They integrated both Viterbi
    and Baum-Welch algorithms to enhance the accuracy and learning capability. Chahuara
    et al. [111] proposed sequence-based models for online recognition of daily living
    activities in an SB environment. They presented three of sequence-based models:
    HMM, conditional random fields, and a sequential Markov logic network. h: Time
    Series Analysis A time series is a collection of temporal instances; time series
    data set usually have the following characteristics include the high dimensionality,
    large number of instances, and updating continuously [149]. One of the important
    purposes for time series representation is to reduce the dimension, and it divides
    into three categories: model-based representation, non-data-adaptive representation,
    and data-adaptive representation [150], [151]. Application in SBs: Survadevara
    et al. [125] proposed a wellness model using seasonal autoregression integration
    moving average time series with sleeping activity scenario in a smart home environment
    to forecast the elderly sleeping tendency. Zhou et al. [126] proposed a time series
    analysis framework to explore relationships among non-stationary time series in
    the case of data sensors in SBs. Jakkula and Cook [127] propose a time series
    based framework to determine temporal rules from observed physical and instrumental
    activities of occupants in a smart home. i: Regression The aim in regression problems
    is to estimate a real-valued target function. It is related to representing the
    relationship between variables that are repeatedly processed utilizing a measure
    of error in the predictions made by the model [152]. The most common regression
    algorithms are [153]: linear regression, logistic regression, stepwise regression,
    and ordinary least squares regression. Application in SBs: Chen et al. [120] used
    the regression technique of orthogonal matching pursuit algorithm to identify
    the physical and environmental parameters that providing the energy efficiency
    in an SB. Bouchard et al. [121] presented a gesture recognition system using linear
    regression combined with the correlation coefficient to recognize the gesture
    direction and estimate the segmentation of continuing gestures of daily usage
    activities in a smart environment. j: Ensemble Methods A combination of multiple
    classifiers often referred to as a classifier ensemble, group of classification
    models that are trained separately and the predictions of those models are then
    combined in a way to produce the overall prediction [154]. The most popular ensemble
    learning based classification techniques are [155]: random forest, boosting, gradient
    boosting machines, AdaBoost, bagging, and blending. Application in SBs: Jurek
    et al. [122] proposed a cluster-based ensemble approach solution for activity
    recognition within the application domain of smart homes. With this approach,
    activities are modeled as cluster collections built on different subsets of features.
    Fatima et al. [123] proposed an ensemble classifier method for activity recognition
    in smart homes using genetic algorithm optimization to merge the prediction output
    of multiple classifiers that make up the ensemble. They used the ANN, HMM, conditional
    random field, and SVM [13] as base classifiers for activity recognition. Guan
    and Ploetz [124] proposed a deep LSTM ensemble method for activity recognition
    using wearables: more specifically, the authors developed modified training procedures
    for LSTM networks and proposed the combination of sets of diverse LSTM learners
    into classifier collectives. 2) Unsupervised Learning Unsupervised Learning refers
    to developing algorithms that use data with no labels to analyze the behavior
    or the system being investigated [156]. Thus, the algorithm does not know about
    the truth of the outcome. In other words, the unsupervised learning algorithm
    classifies the sample sets to different clusters by investigating the similarity
    between the input samples. Clustering is done using different parameters taken
    from the data which enable us to identify correlations which are not so obvious.
    The inferring structures existing within the input data is used to prepare the
    model to prepare and extract general rules of the model. A mathematical process
    might be used to systematically reduce redundancy, or organize data by similarity
    [129]. The unsupervised approach has been applied to recognize various activities
    in smart buildings when it is challenging to have labels for input data [130].
    Common unsupervised learning problems are clustering, dimensionality reduction,
    and association rule learning. There are a variety of commonly used unsupervised
    learning algorithms, some of those algorithms are based on supervised-learning
    algorithms: the Apriori algorithm and k-Means. In unsupervised learning, usually
    there is no a measure for the output; we recognize only the features and the target
    is to define the patterns and relationships among a set of input measures [80].
    The major disadvantage of unsupervised learning is the absence of direction for
    the learning algorithm, hence, there might not be any useful detected knowledge
    in the selected set of attributes for the training. Clustering is a method of
    unsupervised learning that involves detecting patterns in the data by placing
    each data element into a group of K-clusters, where each group holds data elements
    most similar to each other [157]. Unsupervised learning problems can be categorized
    into clustering and association problems, which are described next. a: Clustering
    A clustering problem explores the internal groupings in the input data, such as
    grouping customers by their purchasing habits. Clustering techniques are usually
    organized by modeling strategies such as centroid-based and hierarchical. All
    methods are concerned with handling the internal structures in the input data
    to properly organize the data into groups of maximum commonality [158]. The quality
    of the clustering result is evaluated depends on the type of application that
    utilizes a clustering algorithm. For example, the sum of squared errors is generally
    utilized for data clustering while the peak-signal-to-noise ratio is used for
    image clustering [21]. The most common clustering algorithms are [153]: k-Means,
    k-Medians, expectation maximization, and hierarchical clustering. Application
    in SBs: Fahad et al. [128] propose an activity recognition approach that combines
    the classification with the clustering, in their approach the activity instances
    are clustered using Lloyd’s clustering algorithm. Then, they apply evidence theoretic
    K-Nearest neighbors learning method that combines KNN with the Dampster Shafer
    theory of evidence. The paper [86] proposes a hybrid approach to recognize and
    predict user activities in a smart environment. They use the K-pattern clustering
    algorithm to classify so varied and complex user activities, and ANN to recognize
    and predict users’ activities inside their personal rooms. Lapalu et al. [82]
    used an unsupervised learning approach to address the issues of daily living activities’
    learning in smart home. They utilize the Flocking algorithm for clustering analysis
    of a use case in cognitive assistance service that assists the people suffering
    from some type of dementia such as Alzheimer’s disease. Aicha et al. [83] present
    an unsupervised learning approach for detecting abnormal visits of an elderly
    in a smart home environment based on a Markov modulated Poisson process model.
    The model combines multiple data streams, such as in the front-door sensor transitions
    and the general sensor transitions. The other cases of social communication services,
    Rashidi and Cook [129] applied an unsupervised learning approach to detect social
    interaction and monitor activity daily living in a smart space, their approach
    can adapt and update automatically to reflect the changes in discovered patterns
    from implicit and explicit identified feedbacks of the occupant. Rashidi et al.
    [130] introduce an unsupervised method that identifies and tracks the normal activities
    that commonly occur in an individual’s routine in a smart environment. The activity
    discovery method of the system is produced to cluster the sequences based on the
    simple k-means algorithm. Fiorini et al. [159] proposed an unsupervised ML approach
    to identify the behavioral patterns of the occupants using unannotated data collected
    from low-level sensors in an SB. Their approach involves processing and analyzing
    collected data related to the daily living activities of 17 older adults living
    in a community-based home supplied with a variety of sensors. They extract activity
    information from collected data at different times of the day. b: Association
    The association rule learning problem is utilized to identify the rules that define
    large portions of input data, such as people that buy X item also tend to buy
    Y item. Association analysis is performed on rules discovered by analyzing input
    data for frequent if/then statement and using the criteria of support and confidence
    to discover relationships between unrelated data in a relational database or another
    information repository. Here “support” indicates how frequently the items appear
    in the database while “confidence” indicates the number of times the if/then statements
    have been found to be true. Many algorithms for generating association rules have
    been proposed. Apriori algorithm is the most well-known association algorithm
    [160]. Application in SBs: Aztiria et al. [161] proposed system that learns the
    frequent patterns of human behavior using association, workflow mining, clustering,
    and classification techniques. The core part of the system is the learning layer
    which is made up of two modules: the language module, which provides a standard
    conceptualization of the patterns; and the algorithm module, which discovers the
    patterns. Kang et al. [162] proposed a service scenario generation scheme for
    interpreting association rules extracted from the states of all devices in SB
    environments. Typically, These states are collected periodically at a specific
    time interval from the devices. Nazerfard et al. [163] propose a framework to
    discover the temporal features of the activities, including the temporal sequencing
    of activities and their start time and duration using the temporal association
    rule techniques in a smart home. 3) Semi-Supervised Learning Semi-Supervised learning
    lies between supervised and unsupervised methods. Input data is a composite of
    labeled and unlabeled samples. These hybrid algorithms aim to inherit the strengths
    of the main categories while mitigating their weaknesses. The model learns the
    patterns present in the data and also make predictions. Example problems are classification
    and regression [164]. There are some common semi-supervised learning models, including
    generative models, heuristic approaches, semi-supervised SVM, graph-based methods,
    self-training, help-training, mixture models, co-training and multi-view learning
    [94]. Application in SBs: Cook [131] combined fully-supervised and semi-supervised
    learning to recognize and follow activities that support health monitoring and
    assistance context-aware services for people experiencing difficulties living
    individually at smart homes. Liu et al. [132] proposed a vision based semi-supervised
    learning approach for fall detection and recognizing other activity daily living
    in smart environments to overcome the labeling challenges of human activities
    by systematic interpreting the activities with the highest confidence. Fahmi et
    al. [133] proposed a semi-supervised fall detection approach in which a supervised
    algorithm utilizing decision trees in the training process and then profiles are
    used to implement a semi-supervised algorithm based on multiple thresholds. Radu
    et al. [134] present semi-supervised ML method using only the low power sensors
    on a smartphone to consider the problem of determining whether a user is indoors
    or outdoors. Guan et al. [135] propose a semi-supervised learning algorithm for
    activity recognition named En-Co-training to make use of the available unlabeled
    samples to enhance the performance of activity learning with a limited number
    of labeled samples. The proposed algorithm extends the co-training paradigm by
    using an ensemble method. 4) Reinforcement Learning Reinforcement learning is
    a learning approach to control a system in order to maximize performance measure
    that represents a long-term objective [165]. Reinforcement learning, an area of
    ML inspired by behaviorist psychology, is concerned with the way that software
    agents have to take actions in an environment in order to maximize the concept
    of cumulative reward. RL algorithms learn control policies, particularly when
    there is no a priori knowledge and there is a massive amount of training data.
    However, RL algorithms suffer from some drawback such as the high computational
    cost required to find the optimal solution, such that all states need to be visited
    to choose the optimal one. The well-known approaches of RL are Brute force, Monte
    Carlo methods, Temporal difference methods, and Value function [166]. Q-learning
    [167] is a model-free reinforcement learning approach based on learning the required
    utility given a state decision. Application in SBs: Mozer [136] applied Q-learning
    for lighting regulation to predict the time of turning the lights ON/OFF in a
    building. This prediction model can be utilized to schedule the lights’ activations
    in a building for efficient energy consumption proposes. Li and Jayaweera [137]
    proposed a Q-learning based approximate dynamic programming algorithm to provide
    a more efficient, flexible and adaptive method. This approach can enable customers
    to make an optimal on-line decision making in SB environment to maximize the profits
    based on both local fully observable and the estimated hidden information of the
    building. Khalili and Aghajan [138] proposed a temporal differential class of
    RL method for autonomous learning of a user’s preference of music and lighting
    service settings in presence of different states of the user in SB environment.
    The preferences are learned by the model by using the explicit or implicit feedback
    from users when they react to the provided service. Xu et al. [139] give a survey
    of developments in RL algorithms with function approximation. They evaluated and
    compared different RL algorithms using several benchmark learning, prediction,
    and learning control tasks. B. ML Tasks for SBS In this section, we will describe
    the major ML tasks that are relevant to SB. The reader is referred to Figure 8
    for a general depiction of ML tasks in SBs and the steps taken to implement ML
    in an SB environment. FIGURE 8. ML tasks in SB environment. Show All 1) Data Collection
    and Acquisition A variety of data collection approaches are used, each of which
    has different deals in terms of capabilities, energy efficiency, and connectivity.
    Sensors and similar objects in SBs produce raw data simultaneously in an automated
    way and such devices may store the data for a specific period of time or report
    it to controlled components [168]. Data can be collected at gateways; the collected
    data is then filtered and processed, fused into compact forms for efficient transmission.
    A variety of communication technologies such as Zigbee, Wi-Fi, and cellular are
    utilized to transfer data to collection points. Data collected from a global-scale
    deployment of smart things defines the basis for decision making and providing
    services. It is possible that the decisions are unreliable when the quality of
    utilized data is poor [169]. Zhao et al. [170] propose a data acquisition and
    transmission system which could be used for monitoring systems to collect energy
    consumption data (e.g., electricity, water, gas, heating, etc.) from terminal
    meters which are installed in buildings. The system stores the data periodically
    after analyzing and processing it and finally transmits the data to servers through
    the Ethernet. Rowley et al. [171] propose the data acquisition and modeling approaches
    that can support the delivery of building energy infrastructure in both new building
    and renovated real-world contexts. Such methods provide a means to achieve short,
    medium and long-term forecasting of possible scenario pathways to multi-objective
    sustainable outcomes. CLEEN MMEA [172] platform that collects, processes, and
    manages the data and initiates contextual knowledge extraction. The purpose is
    to establish an online marketplace to collect data and provide services for different
    companies. The interfaces are made public so that any company can easily join
    the network to buy or sell services. The analysis results can be given to an energy
    services company in order to allow offering the service to the owners. A typical
    example of open access data collection system is e3Portal [173] developed by VTT
    in collaboration with Finnish municipalities. e3Portal offers information and
    tools when planning savings measures and energy retrofitting in municipal buildings.
    It also involves frequently updated data regarding energy and water consumption
    in thousands of public buildings like schools, kindergartens, offices, hospitals,
    other health care facilities, etc. Decision makers, designers, operation and maintenance
    personnel, as well as buildings users, can utilize it. There are projects that
    provide publicly available SB datasets for researchers to conduct further studies;
    A list of “Home Datasets” [174] includes the datasets collected by projects from
    UC Berkeley, MIT, Washington State University, University of Amsterdam, University
    of Edinburgh, and the University of Tokyo. The WARD [175] project supported by
    NSF TRUST Center at UC Berkeley provides a benchmark dataset for human action
    recognition using a wearable motion sensor network. The dataset was collected
    from 13 repetitive actions by 13 male and 7 female participants between the ages
    of 19 and 75. An MIT project [176] collected daily live activities dataset from
    two single-person apartments within a period of two weeks. Eighty-four sensors
    to record opening-closing events were attached to different appliances and devices
    such as drawers, refrigerators, containers, etc. Banos et al. [177] introduced
    an open benchmark dataset collected from various inertial sensors attached to
    different parts of the body. They considered 33 fitness activities, recorded using
    9 inertial sensor units from 17 participants. The CASAS project [178] at Washington
    State University provides a publicly-available dataset for a three-bedroom apartment
    with one bathroom, a kitchen, and a living room. Different types of motion and
    digital sensors are installed to support temperature readings, in addition, the
    analog sensors are installed to support readings for hot water, cold water, and
    stove burner use [179]. The PlaceLab project [180] of MIT provides a dataset collected
    from a one-bedroom apartment with more than 900 sensors, including those coming
    from motion, switch and RFID sensors. That is being used to monitor activity in
    the environment in the context of a smart home [181]. A collection of smart meters
    data from five houses in the UK [182] That consists of 400 million instances.
    The active power is formed by different appliances and the whole-house power demand
    every 6 seconds. The major challenges that arise for data collection are scalability,
    privacy, security, and heterogeneity of resources [183]. Automated sensor data
    collection process collects a large amount of data that overwhelms the collection
    and analysis centers in comparison to the data collected from other sources such
    as IoT devices and social media. This leads to a huge number of small synchronous
    write operations to the database storage system, consequently, resulting in serious
    performance bottlenecks to the storage system design [184]. Because of the extensive
    use of RFID technology, privacy issues arise in data collection; for example,
    the RFID tags carried by a person may become a unique identifier for that person.
    Also, other security concerns appear, for example, the radio signals of RFID technology
    are easily jammed. Hence, that can disrupt the data collection process [185].
    The heterogeneity of data that is being collected from different resources is
    another major challenge, such that the data are usually very noisy, large-scale,
    and distributed. This makes it very difficult to use the collected data effectively
    without a clear description of existing data processing techniques [184]. 2) Data
    Preprocessing A large amount of data are generated by sensors in SBs; this data
    comes from various sources with diverse formats and structures. Usually, this
    data is not ready for analysis as it might be incomplete or redundant due to low
    battery power, poor calibration, exposure to various malicious elements and interference.
    Therefore, raw data typically needs to be preprocessed to deal with missing data,
    discard noisy and redundant data and integrate data from various sources into
    an integrated schema before being committed to storage. This preprocessing is
    called data cleaning. The quality of data can be improved substantially by applying
    some cleaning techniques to the data before it arrives its end user [168], [186].
    Data cleaning is one of the significant tasks in the data processing phase. Data
    cleaning is not a new process particular for the IoT data processing. It has already
    been applied as a process for database management systems. Presenting a data cleaning
    method would further aid the applications to focus on their core logic without
    worrying about data reliability post-processing overheads [184]. There are many
    different techniques that have been utilized to deal with the problem of cleaning
    noisy data streams such as Kalman filters [187], statistical models [186] and
    outlier detection models [184]. One of the major challenges with data cleaning
    techniques in the SBs is the heterogeneity of data collected from different sources
    particularly WSN- and RFID-enabled data streams. The utilized data cleaning techniques
    should be able to deal with several different variables of interest to satisfy
    IoT applications’ requirements, for example, setting home temperature based on
    observed outer temperature, user habits, energy management, etc. [169] Any type
    of failures such as a failed sensor, network issues, camera failure, or database
    crashes in the process of collecting data would invalidate the data. Consequently,
    this type of impediment will dramatically increase the time required to collect
    data [179]. 3) Dimensionality Reduction There are huge volumes of raw data that
    are captured from heterogeneous and ubiquitous of sensors used in SBs. Most of
    the data collected from those sensors are redundant and they need to be brought
    down to a smaller number of features by applying dimensionality reduction techniques
    without losing significant information [188]. The main idea from the dimensionality
    reduction strategy is to find a new coordinate system in which the input data
    can be represented with much fewer features without losing significant information.
    The dimensionality reduction can be made in two different ways: by extracting
    of the features that represent the significant data characteristics (this technique
    is called feature extraction), or by only selecting the most relevant features
    from the original dataset, this method is called feature selection [189], [190].
    Like clustering methods, the dimensionality reduction approach explores and exploits
    the internal structure of the data, but in this case in an unsupervised manner
    using less information. Most of these techniques can be utilized in classification
    and regression problems. Examples of some salient algorithms are [153]: Principal
    Component Analysis (PCA), Principal Component Regression (PCR), and Linear Discriminant
    Analysis (LDA). Chen et al. [191] propose a framework using the classification
    information of local geometry of data to reduce the dimensionality of a dataset
    on human activity recognition from wearable, object, and ambient sensors. a: Feature
    Extraction The main components of the original data are the features. After extracting
    the features from the raw dataset, such features contain important information
    that is used by the learning algorithms for the activities discrimination. The
    most common methods of feature extraction work in time, frequency, and discrete
    domains [192]. Among time domain method, mean and standard deviation are the key
    approaches for almost all sensor types. While the frequency domain method focuses
    on the periodic structure of the collected data. Wavelet Transformation and Fourier
    Transform are the most common approaches. And discrete domain methods such as
    Euclidean-based distances, dynamic time warping, and Levenshtein edit distance
    are key approaches implemented in several applications such to string similarity,
    classifying human activities and modeling human behavioral patterns [16], [193].
    b: Feature Selection The main role of feature selection is to discriminate the
    most related subset of features within a high dimensional vector of features,
    so that reduces the load of noise and computational expense on the learning models.
    In order to map the high dimensional vector of features into a lower dimensional
    vector, there are several common algorithms used such as Linear Discriminant Analysis
    (LDA), Principal Component Analysis (PCA), and Independent Component Analysis
    (ICA) [194]. Hausmann and Ziekow [195] proposed an approach for automatically
    adapting the feature selection for SBs application ML models from the time-series
    data based on wrapper methods and genetic optimization. Fahad et al. [196] propose
    an activity recognition approach for overlapping activities using K-Nearest neighbors
    approach that distinguishes the most important features from the collected information
    obtained from deployed sensors in multiple locations and objects. Fang et al.
    [197] determine that the different feature sets generate different levels of accuracy
    for recognizing human activities, and selecting inappropriate datasets increases
    the level of computational complexity and decreases the level of prediction accuracy
    in smart home environments. The wrapper and filtering are the two main statistical
    methods of feature selection problem. It is argued that although the wrapper approach
    may obtain better performances, filters are less resource intensive and faster
    [198]. In [199], different feature selection methods are utilized for the process
    of dimensionality reduction of the learning problem to recognize the human activities
    from observed sensors. The authors show that the performance of the learning models
    to recognize the human activity has a strong relationship with the utilized features.
    c: Feature Projection feature projection can be represented as a mapping from
    the original set of features to an appropriate set that optimizes the learning
    criterion, such that the feature projection approach allows the process of visualizing
    and mapping the high-dimensional feature vectors to low dimensional one, in addition,
    it enables analyzing the distribution of the reduced feature vectors [200]. Consequently,
    the feature projection approach reduces the pattern recognition’s processing time
    and enables selecting the best-performed classifier for the reduced feature vectors.
    Hence, it makes real-time implementation possible [198]. Chu et al. [201] proposed
    a linear supervised feature projection that utilizes the LDA algorithm for EMG
    pattern recognition that attempted to recognize nine kinds of hand motion. C.
    ML Tools & Platforms for SBs There are a variety of existing ML platforms and
    tools to support the learning process. With the current increasing number of those
    kinds of toolkits, the task of selecting the right tool for processing big data
    streaming from various sources can still be difficult. Typically, there is no
    single toolkit that truly fits and provides solutions for all different problems.
    Many of the available toolkits might have overlapping uses, and each has advantages
    and disadvantages. Most of those toolkits might require experiences in the domains
    of programming languages and system architecture. In addition, usually many people
    lack a full understanding of the capabilities and how to use those available platforms
    [202]. The important factors that must be considered when selecting a specific
    ML tool are scalability, speed, coverage, usability, extensibility, and programming
    languages support. With respect to the scalability factor, the size and complexity
    of the data should be considered to determine if a specific toolkit will be fit.
    The processing platform that the library is running on and the complexity of the
    algorithm affect the speed factor. Not all the projects prioritize the speed factor;
    if the models require frequent updates, the speed may be a crucial concern; but
    not otherwise. Coverage represents the number of ML algorithms implemented in
    the tool. With the massive amount of data capturing from heterogeneous sources,
    ML community faces the challenges of how the ML model can efficiently process
    and learn from the big data. In general, the available big data tools do not implement
    all varieties of different classes of ML algorithms, and typically their coverage
    ranges from a few algorithms to around two dozen. The usability factor includes
    elements such as initial setup processing; continuous maintenance; the available
    programming languages and user interface available; the amount of documentation,
    or availability of a knowledgeable user. The extensibility factor means that the
    implementations introduced in the tools can be utilized as building blocks towards
    new systems. It is necessary to evaluate tools in terms of how well they are able
    to meet this factor. There are a variety of ML libraries that are available in
    different programming languages. Depending on the task you are trying to accomplish,
    certain languages, libraries, and tools can be more effective than others. The
    following provides a detailed observation of the strengths and weaknesses of the
    top used deep learning and ML tools. The reader is also referred to Table 6 for
    a concise tabulated summary of the described deep learning and ML tools. TABLE
    6 Comparison Between Deep Learning and ML Tools 1) H2O H20 [203] is an open-source
    in-memory, distributed, and scalable ML framework for big-data analysis that supports
    ML libraries, along with tools for parallel processing, analytics, data preprocessing
    and evaluation tools. It is produced by the H2O.ai, which launched in 2011 in
    Silicon Valley. The most notable feature of this product is that it provides numerous
    tools for deep neural networks. The H2O software APIs can be called from Python,
    Java, R, and Scala. Users without programming expertise can still utilize this
    tool via the web-based User Interface. In addition to the processing engine provided
    by H2O framework, it also allows the users to integrate their models with other
    available frameworks such as Spark and Storm. Depending on what is suitable for
    the algorithm, The H2O’s engine uses multiple execution methods to process data
    completely in memory. The general technique used is distributed Fork/Join, which
    is reliable and suitable for massively parallel tasks. The H2O software can be
    run on different operating systems such as Microsoft Windows, Mac OS X, and Linux
    (e.g. Ubuntu 12.04; CentOS), It also runs on Apache Hadoop Distributed File System
    (HDFS) and Spark systems for big-data analysis. In addition, it can operate on
    various cloud computing environments such as Amazon EC2, Google Compute Engine,
    and Microsoft Azure. As of July 2016, the algorithms supported in H2O cover the
    tasks classification, clustering, generalized linear models, statistical analysis,
    ensembles, optimization tools, data preprocessing options and deep neural networks.
    2) MLlib (Spark) MLlib [204] is Apache Spark’s ML library. MLlib aims to provide
    scalable and easy to use ML methods. It includes common ML algorithms for classification,
    regression, clustering, dimensionality reduction, as well as lower-level optimization
    primitives and higher-level pipeline APIs. The classification techniques of SVM,
    random forest, logistic regression, Naïve Bayes, decision trees, and gradient-boosted
    trees are supported whereas for clustering, k-means, Gaussian mixture, and power
    iteration clustering are supported. MLLib supports implementations for linear
    regression and isotonic regression, and incorporates a collaborative filtering
    algorithm using alternating least squares. PCA is supported for dimensionality
    reduction. MLlib includes APIs for development in Scala, Java, Python, and SparkR.
    Generally, MLlib depends on Spark’s iterative batch and streaming approaches,
    as well as its use of in-memory computation. 3) Tensorflow Tensorflow [205] is
    an open source software library for numerical computation and deep ML in a variety
    of perceptual and language understanding tasks utilizing data flow graphs. TensorFlow
    was originally developed by the Google Brain team and was released in November
    2015 under an Apache 2.0 open source license. TensorFlow has tools that support
    deep learning, reinforcement learning, and other algorithms. TensorFlow implements
    data flow graphs, where “tensors” are batches of data that can be processed by
    a set of algorithms defined by a graph. The movements of the data through the
    system are called “flows”—hence, the name. TensorFlow can run on multiple CPUs
    and GPUs. It can run on Linux, Mac OS X desktop, and server systems, and Windows
    support on roadmap, as well as on Android and Apple’s iOS mobile computing platforms.
    TensorFlow is written with a Python API over a C/C++ engine that makes it run
    fast. TensorFlow utilizes a symbolic graph of vector operations method, in order
    to easily define a new network. However, TensorFlow has a weakness that is related
    to modeling flexibility. Such that each computational flow has to be constructed
    as a static graph. That makes some computations such as beam search difficult.
    4) Torch Torch [206] is an open source ML computing framework that supports a
    variety of ML algorithms. Torch was originally developed at NYU. It is efficient
    and easy to use, thanks to a script language based on the Lua programming language
    and a C/CUDA implementation, Torch was intended to be portable, fast, extensible,
    and easy to use in development. Some version of Torch is employed by large companies
    such as Google DeepMind, the Facebook AI Research Group, IBM, Yandex, and the
    Idiap Research Institute. In addition, it has been extended to run on Android
    and iOS platforms. A variety of community-contributed packages for Torch, giving
    it a versatile range of support and functionality. It provides various deep learning
    algorithms that support computer vision; signal, image, video, and audio processing;
    parallel processing and networking [207]. 5) Deeplearning4j Deeplearning4j [221]
    is an open source distributed DL library, primarily developed by Adam Gibson from
    an ML group in San Francisco. Deeplearning4j is written for Java and JVM as well
    as to support a variety of DL algorithms such as restricted Boltzmann machine,
    deep belief networks, convolutional networks, recurrent neural networks, deep
    autoencoder, stacked denoising autoencoder, and recursive neural tensor network.
    All these algorithms can be integrated with Hadoop and Spark for distributed parallel
    processing. Deeplearning4j relies on Java programming language, in addition, it
    is compatible with Clojure and includes a Scala API. Deeplearning4j is designed
    to be utilized in business environments, rather than as a research tool. It is
    applied in a variety of applications such as fraud detection, anomaly detection,
    recommender systems, and image recognition. 6) Massive Online Analysis (Moa) MOA
    [222] is one of the common open source frameworks for data stream mining and possessing.
    MOA is written in Java related to the WEKA project that developed at the University
    of Waikato, New Zealand. It includes a set of learners and stream generators that
    can be used from the GUI, the command-line, and the Java API. MOA supports a variety
    of ML algorithms for classification, regression, clustering, outlier detection,
    as well as some tools for evaluation [223]. 7) Caffe Caffe [224] is a DL framework,
    it is primarily developed with the consideration of expression, speed, and modularity.
    It utilizes the machine-vision library for fast convolutional networks from Matlab,
    which has been ported to C and C++. It is developed by the Berkeley vision and
    learning center and by the community contributors. In Caffe, multimedia scientists
    and practitioners have an organized and state-of-the-art toolkit for DL algorithms.
    Caffe was originally developed for machine-vision, it has been utilized and improved
    by users in other fields such as robotics, neuroscience, speech recognition, and
    astronomy. In addition, it supports Python and MATLAB code bindings. Caffe offers
    image classification with state of the art CNN algorithm. Caffe is mainly utilized
    as a source of pre-trained models hosted on its Model Zoo site. Caffe is useful
    for performing image analysis using CNNs and regional analysis within images using
    RCNNs. The performance and processing speed of Cafee make it as one of the most
    utilized platforms for research experiments and industry deployment. It has the
    capability to process over 60 million images per day with a single NVIDIA K40
    GPU. Caffe has already been applied in many research projects at UC Berkeley and
    other universities, performing very well in many tasks such as object classification,
    object detection, and Learning Semantic Features. It provides a complete and well-documented
    toolkit for training, testing, tuning, and deploying models. Caffe utilizes a
    large repository of pre-trained neural network models called the Model Zoo, which
    is suitable for a variety of common image classification tasks [225]. 8) Azure
    Ml Microsoft first launched Azure ML [226] as a preview in June 2014. Azure ML
    enables users to create and train models, then convert those models into APIs
    that can be applied to other services. Users can get up to 10GB of storage per
    account for model data, although they can also connect their own Azure storage
    to the service for larger models. programmers can use either the R or Python programming
    language for developing with Azure services. Users can purchase ML algorithms
    from Microsoft Azure Marketplace, they can also obtain free algorithms from the
    community gallery that has been created by Microsoft to share ML algorithms with
    each other. They share many of predictive analytics of personal assistant in Windows
    Phone called Cortana. Azure ML also utilizes solutions from Xbox and Bing. Azure
    currently supports different features and capabilities such as run Hadoop over
    Ubuntu Linux on Azure, it also supports hosting Storm for analyzing data streams.
    In addition, it allows developers to connect.NET and Java libraries to Storm.
    Azure ML studio supports a variety of modules for training, scoring, and validation
    processes. Azure ML comes with a large library of algorithms for predictive analytics.
    The popular families of algorithms are regression, anomaly detection, clustering,
    and classification. D. Real-Time Big Data Analytics Tools for SBS Several applications
    need to have real-time data analysis for stream data and waiting for the information
    to be archived and then analyzed is not practical for these type of applications.
    Generally, Stream processing is intended to analyze a massive amount of data and
    act on real-time streaming data utilizing continuous queries such as SQL-type
    queries to handle streaming data in real-time utilizing scalable, available and
    fault-tolerant architecture. Essential to stream processing is Streaming Analytics.
    More and more tools offer the possibility of real-time streaming data. The following
    presents some of the common and widely used options. 1) Apache Storm Storm [227]
    is an open source distributed real-time data processing framework that provides
    massively scalable event collection. The initial release was on 17 September 2011,
    it was created by Nathan Marz and the team at BackType, and is now owned by Twitter.
    Storm can easily process unlimited streams and with any programming language.
    It has the capability to process over one million tuples per second per node with
    a highly scalable, fault-tolerant, and reliable architecture. Storm is written
    in Java and Clojure. Trident is a high-level abstraction layer for Storm, can
    be utilized to accomplish state management persistence. Storm is a system of complex
    event processing. This type of solution allows companies to respond to the arrival
    of sudden and continuous data (information collected in real-time by sensors,
    millions of comments generated on social networks such as Twitter, WhatsApp and
    Facebook, bank transfers etc.). Some of the specific applications of Storm include
    customer service management in real-time, operational dashboards, data monetization,
    cybersecurity analytics, and threat detection. 2) Apache Kafka Kafka [228] is
    a fast, scalable, fault-tolerant and durable open-source message broker project
    that originally developed by LinkedIn, and subsequently open sourced in early
    2011 and released by Apache Software Foundation on 23 October 2012. Kafka is written
    in Scala. It supports a variety of use case scenarios with a focus on high throughput,
    reliability, and scalability characteristics. For example, it can message sensor
    data from heating and cooling equipment in office buildings. 3) Oracle In 2013,
    Oracle started utilizing Oracle Enterprise Manager that includes Oracle Big Data
    Appliance to manage all of its big-data technologies. Oracle has also produced
    multiple low-latency technologies for Oracle Fast Data components includes Oracle
    Event Processing, Coherence, NoSQL, Business Analytics, and Real-Time Decisions.
    Oracle Event Processing provides solutions for building applications to filter,
    correlate and process events in real-time. It supports IoT services by delivering
    actionable insight on data streaming from a variety of data sources in real-time
    [229]. Oracle Stream Explorer (OSX) and Oracle R Enterprise (ORE) aim to support
    equipment monitoring applications for the systems that made of a variety of components
    through sensors, anomaly detection and failure prediction of such systems. ORE
    [230] is utilized to handle low-frequency streams in batch mode, while OSX handles
    the high-frequency streams making real-time predictions and sends the results
    back to user applications that are communicating with the output channels. OSX
    [231] is a middleware platform has the capability to process large amounts of
    streaming data in real-time for a variety of streaming data applications, from
    a multitude of sources like sensors, social media, financial feeds, etc. It streamlines
    real-time data delivery into most popular big data solutions, including Apache
    Hadoop, Apache HBase, Apache Hive, Apache Flume, and Apache Kafka to facilitate
    improved insight and timely action. Oracle Real-Time Decisions [232] is a decision
    management platform with self-learning that determines optimized recommendations
    and actions with messaging, imagery, products, and services within business processes.
    4) Amazon Kinesis Streams Amazon Kinesis [233] is a platform for collecting and
    processing large streams of data on AWS in real-time, AWS launched Kinesis in
    November of 2013, offering powerful services for loading and analyzing streaming
    data, in addition, it provides custom streaming data applications for specialized
    needs. Sometimes Terabytes of data per hour can be generated - that need to be
    collected, stored, and processed continuously from various application services
    such as web applications, mobile devices, wearables, industrial sensors etc. Typically,
    Amazon Kinesis Streams application can use the Amazon Kinesis Client Library and
    reads data from an Amazon Kinesis stream as data records. These applications can
    run on Amazon EC2 instances. 5) Apache Spark Streaming Apache Spark [234] is an
    open-source platform for real-time data processing, it can implement using four
    different languages: Scala, the syntax in which the platform is written; Python;
    R; and Java. Spark Streaming is an extension of core Spark API. It allows building
    fault-tolerant processing of real-time data streams. Spark Streaming allows the
    processing of millions of data among the clusters, and Spark SQL which makes it
    easier to exploit the data through the SQL language. Spark Streaming divides the
    live data stream into a predefined interval of batches, then handles each batch
    of data as Resilient Distributed Datasets (RDDs). Then we can apply operations
    like map, reduce, join, window etc. to process these RDDs. The last results of
    these operations are then returned in batches. Spark Streaming can be utilized
    for a variety of application such as real-time monitoring and analyzing of application
    server logs. These logs messages are considered time series data. Examples of
    such type of data are sensor data, weather information, and clickstream data.
    This data can also be utilized for predicting future states based on historical
    data. Apache assures a computation speed that performs the operations quicker
    by 100 times than what is currently offered by Hadoop MapReduce in memory, and
    10 times better than in disc. Spark can be executed either in independent cluster
    mode or in the cloud on different frameworks such as Hadoop, Apache Mesos, and
    EC2. In addition, Spark can access numerous databases such as HDFS, Cassandra,
    HBase or S3, Amazon’s data warehouse. 6) Apache Flume Flume [242] is a distributed,
    reliable and open-source log data aggregation framework. Apache Flume is applied
    in many applications ranging from log data aggregation, to transport massive quantities
    of event data including network traffic data, social-media-generated data, email
    messages and pretty much any data source possible into the HDFS. The architecture
    of Flume is simple and flexible, it is also robust and fault tolerant with tunable
    reliability mechanisms for failover and recovery. log manufacturing operations
    is an example of Flume’s application. The a massive log file data can stream through
    Flume. The log file data can be stored in HDFS and analyzed by utilizing Apache
    Hive. 7) Apache Samoa SAMOA [243] is a distributed streaming ML framework that
    contains programming abstractions for distributed streaming ML algorithms. Its
    name stands for Scalable Advanced Massive Online Analysis and was originally developed
    at Yahoo! Labs in Barcelona in 2013 and has been part of the Apache incubator
    since late 2014. SAMOA is both a platform and a library. It enables the algorithm
    developer to reuse their code to run on different underlying execution engine.
    In addition, it supports plug-in modules to port SAMOA to different engines. By
    utilizing SAMOA, the ML algorithm developer does not need to worry about the complexity
    of underlying distributed stream processing engines. They can run it locally or
    utilizing one of stream processing engines, such as Storm, S4, or Samza. SAMOA
    provides the ML algorithms for a variety of tasks including classification, regression,
    clustering, along with boosting, and bagging for ensemble learning. Additionally,
    it offers a platform for the implementation of these ML algorithms, as well as
    a framework that enables the user to write their own distributed streaming algorithms.
    For example, there is CluStream for clustering, as well as Vertical Hoeffding
    Tree, which uses vertical parallelism on top of the decision tree, or Hoeffding
    tree for classification. There is also Adaptive Model Rules Regressor, which uses
    both vertical and horizontal parallelism implementations for regression [244].
    A summarized comparison between various real-time data analytics tools is provided
    in Table 7. TABLE 7 Comparison Between Real-Time Data Analytics Tools TABLE 8
    Categorized Applications of SB SECTION V. Applications of Ml-Based Context-Aware
    Systems for SBs The potential uses of ML in an SB environment can be divided into
    four categories: detection, recognition, prediction, and optimization [79]. We
    discuss these categories separately next. In general, detection is the extraction
    of particular information from a larger stream of information. Many detection
    applications in SBs such as fire detection, leak detection, and anomaly detection
    [245]. Many different applications have been studied by researchers in activity
    recognition in SBs; examples include fitness tracking, health monitoring, fall
    detection. [246]. The goal of recognition is to classify an object or an event
    to a predefined category. It focuses on how to make computer programs perform
    intelligent and human-like tasks, such as the recognition of an object from an
    image. The goal of prediction is to determine the temporal relations’ model between
    specific events to predict what will happen in the near future. Prediction can
    be either for classification or regression problems [247]. Event prediction when
    the goal is to predict the most probable event or subsequent activity is an example
    of classification problems, while latency prediction when the output takes on
    continuous values is an example of the regression problem. The general steps of
    applying ML processes to predict an event in an SB environment is shown in Figure
    9. FIGURE 9. Steps involved in applying ML models in an SB environment. Show All
    The goal of optimization, on the other hand, is to maximize the long-term profits
    by making proper decisions in different situations. reinforcement learning can
    be utilized with these problems. Some optimization problems can be managed as
    prediction problems such that the profits for different actions are predicted
    and the action with the highest profit would be selected. Decision making is the
    most common case of the optimization problem. It takes to consider a variety of
    variables and solving deals between the profits of different locations of the
    environment [248]. Smart buildings are becoming increasingly supplied with a variety
    of sensors that measure different parameters, and data from these sensors is analyzed
    by ML algorithms and used for a range of services and applications for the activities
    of the building occupants. SBs go far beyond saving energy and contributing to
    sustainability goals. The application and services provided by the SBs can be
    both residential and commercial ranging from e-health, e-marketing, intelligent
    car parking system, intelligent transportation system, automation, and logistics
    services. Figure 10 shows the taxonomy of basic domains of SB services. Lighting
    services are associated with the well-being of occupants depending on their activities
    in SBs that have sensors to conserve energy when lights are not needed. The power
    and electrical system may have onsite renewable energy sources to provide a percentage
    of power consumption in SBs. Waste management is related to the activities and
    actions required to collect, separate, transport, together with monitoring and
    regulation of waste management system in SBs. The security is related to managing
    automated locks, biometric devices as well as video surveillance systems in SBs.
    The communications center is related to connecting sensors and actuators in the
    building as well as the operations control center. The operations control center
    supports system analytics and decision making for the operations. Visual interfaces
    provide a dashboard that shows the status of SB services and human operators to
    better manage the building resources. These interfaces also allow the occupants
    to set up their optimal parameters for comfort and productivity improvement on
    daily activities. HVAC stands for the humidity, ventilation and air conditioning
    system, intended for the convenience of occupants that have effective interaction
    with the environment. Parking services aim to minimize the area and volume required
    for parking cars. It could support car sharing, electric vehicles and a place
    for bicycles as well. Finally, the water management services aim to increase savings
    and manage water reclamation for flushing, landscaping and air-cooling systems.
    FIGURE 10. SB services taxonomy. Show All Based on our literature survey, we have
    identified that the application areas of SBs can be elderly care, comfort/entertainment,
    security/safety, energy management, and other projects. In the rest of the section,
    we will briefly describe the major domains in providing the following SB services:
    (1) care of the elderly population; (2) enhancing energy efficiency; (3) enhancing
    comfort or providing entertainment; (4) enhancing safety and security; and (5)
    miscellaneous projects. a: Elderly Population’s Home Care SB technology such as
    sensors, voice activation, GPS, Bluetooth, cellular connectivity via mobile phones,
    smartphone monitoring apps and sophisticated computers can be especially useful
    for elderly or disabled individuals who live independently. Elderly persons can
    take the advantages of such technologies (e.g., monitoring system, emergency system,
    dangerous kitchen appliance detection, fall detection), to maintain a safe and
    healthy lifestyle while living independently [56], [249]. Smart technology in
    the SBs aims to collect real-time information on human daily activity and then
    learn of their personal patterns. ML techniques have the potential for a very
    wide array of new innovations in healthcare that will be transformative for both
    providers and their patients. Whenever a deviation from the norm patterns is detected,
    SB systems send the alerts to family members and the caregivers in order for them
    to take urgent response action. By using big data analytics and ML algorithms
    it is possible to analyze large-scale data contained in electronic medical records—e.g.,
    to learn automatically how physicians treat patients including the drugs they
    prescribe [250]. Some prominent projects in this space are described next. Chernbumroong
    et al. [56] proposed an activity recognition and classification approach for detecting
    daily living activities of the elderly people applying SVM. They used wrist-worn
    multi-sensors namely accelerometer, temperature sensor and altimeter for detection
    basic five activities namely feeding, grooming, dressing, mobility, and stairs.
    And other instrumental activities such as washing dishes, ironing, sweeping and
    watching TV. Taleb et al. [251] proposed a middleware-level solution that integrates
    both the sensing and the monitoring services for assisting elders at smart homes
    environment. The appliances used in the proposed framework include RFID readers
    that cover of the whole building, sound sensors, video cameras, smart door lock,
    microphone and speakers for interaction with the system. CAALYX [252] is a European
    Commission-funded project that supports older people’s autonomy and self-confidence.
    The service is formed of three distinct subsystems including elderly monitoring
    subsystem, home monitoring subsystem and the caretaker’s monitoring subsystem.
    The system delivers a high priority message to an emergency service including
    the geographic position and clinical condition of the elder user. EasyLine+ [253]
    project funded by the European Commission to support elderly people with or without
    disabilities in carrying out a longer independent life at home. The system uses
    a neural network, assistive software, and a variety of sensors such as illumination
    sensor, temperature sensor, door sensors, and RFID giving the capacity of controlling
    the white goods. Hossain et al. [254] proposed a cloud-based cyber-physical multi-sensory
    smart home framework for elderly people that supports gesture-based appliance
    control. Suryadevara et al. [255] proposed a model for generating sensor activity
    pattern and predicting the behavior of an elderly person using household appliances.
    b: Energy Efficiency When temperatures rise or fall in various zones of your home,
    heaters, air conditioners, fans, and other devices will turn on or off (or increase
    or decrease in speed or temperature). In order to perform an efficient energy
    consumption of the supply systems, a significant step that is necessary by analyzing
    the way that current energy consuming system is using in buildings [256]. In the
    last decade, analysis of the energy efficiency in the smart spaces has received
    increasing attention. Various approaches for energy efficiency have been proposed
    utilizing predictive modeling based on profile, climate data, and building characteristics
    [32], [257]. For instance, lights throughout your home might turn on and off depending
    on the time of day. In the past, various attempts have been made to improve energy
    efficiency in the SBs through the use of smart metering and sensor networks at
    the residential level facilities. It is a fact that these types of infrastructure
    are becoming more widespread but due to their variety and size, they cannot be
    directly utilized to make conclusions that help to improve the energy efficiency.
    ML approaches will be the key to the handling of energy efficiency problem in
    SBs. Learning about the occupants’ consumption habits is capable of generating
    collaborative consumption predictions that help the occupant to consume better
    [258]. Some prominent projects in this space are described next. Reinisch et al.
    [259] developed an optimized application of AI system for SB environment. The
    system focuses on some capabilities like ubiquity, context awareness, conflict
    resolution, and self-learning features. The system operates on a knowledge base
    that stores all the information needed to fulfill the goals of energy efficiency
    and user comfort. Jahn et al. [260] proposed an energy efficiency features system
    built on top of a Hydra middleware framework [261]. The system provides both,
    stationary and mobile user interfaces for monitoring and controlling a smart environment.
    Pan et al. [262] proposed an IoT framework that uses smartphone platform and cloud-computing
    technologies to improve the energy efficiency in SBs. They built an experimental
    testbed for energy consumption data analysis. Fensel et al. [263] proposed the
    SESAME-S project (SEmantic SmArt Metering - Services for energy efficient houses).
    The project focuses on designing and evaluating the energy efficiency services
    to enable the end-consumers in making the right decisions and controlling their
    energy consumption. The system combines a variety of smart building components,
    such as smart meters, a variety of sensors, actuators, and simulators that can
    integrate virtual appliances such as the washing machine. Vastardis et al. [264]
    proposed a user-centric smart-home gateway system architecture to support home-automation,
    energy usage management, and smart-grid operations. The gateway is supported by
    ML classification algorithms component such as C4.5 and RIPPER that is able to
    extract behavioral patterns of the users and feed them back to the gateway. Irrigation
    systems monitoring and smart watering system that keep track of rain and soil
    conditions and irrigate appropriately are a very cost-effective way to reduce
    outdoor water consumption. Investment in water management software and services,
    water-efficient plumbing, and irrigation management delivers economic and sustainability
    benefits. Water conservation and management is an example of such benefits [265].
    c: Comfort/Entertainment One of the main goals of SB research is to facilitate
    user daily life activities by increasing their satisfaction and comfort level.
    SBs supports automated appliance control and assistive services to offer a better
    quality of life. They utilize context awareness techniques to optimize the occupant’s
    comfort based on predefined constraints of conditions in a building environment.
    Typical examples of comfort services include lighting, background music, automation
    of routine activities, advanced user interfaces based on voice or gestures, etc.
    [30]. Other services related to comfort services in SB environments are Indoor
    Climate Control and Intelligent Thermostat [265]. Indoor Climate Control: Measurement
    and control of temperature, lighting, CO2 fresh air. In the SB environment, HVAC
    systems play an essential role in forming indoor environmental quality. Typically,
    HVAC systems are produced not only to heat and cool the air but also to draw in
    and circulate outdoor air in large buildings [266]. Kabir et al. [267] present
    a context-aware application that provides the service according to a predefined
    preference of a user. They use the KNN classifier to infer the predefined service
    that will maximize the user’s comfort and safety while requiring minimum explicit
    interaction of the user with the environment. Ahn et al. [268] proposed a deep
    learning model that estimates periodically the atmospheric changes and predict
    the indoor air quality of the near future. d: Safety/Security As the SB technology
    progresses, the role of ML and deep learning in security and connected devices
    will increase. Deep learning will continue to help gain insights using big data
    that were previously inaccessible, particularly in image and video. Advanced technologies
    such as behavioral analysis and ML to detect, categorize, and block new threats
    will be beneficial. In a traditional home system, as soon as a fire is detected
    the Fire/smoke detectors are activated and start sending a fire alarm. However,
    SB can perform much better than the traditional system. It not only sends an alarm
    but also turns on the light only in the safest route and guides the occupants
    of the building out, as well as it will unlock the doors and windows for smoke
    ventilation, turn off all the devices and call the nearest fire service station.
    Other than this, it can take video of the areas surrounding the building, provide
    the status of window breakage alarms, and automatically lock all the doors and
    the windows when the last person of the house leaves [30]. The main services for
    security and safety in SBs are: Perimeter Access Control, Liquid Presence, Intelligent
    Fire Alarm, Intrusion Detection, and Motion Detection Systems [265]. Perimeter
    Access Control service provides control to restricted areas and detects non-authorized
    users that access the areas. Access card provides a variety of solutions that
    allow staff members, vendors or contractors to access specific areas at specific
    times you designate. The same access card can also be utilized to check employee
    attendance. In addition, there is widespread use of biometric technology including
    fingerprint, facial recognition, and iris scans [269]. Additionally, liquid presence
    detection technique has been utilized in data centers, warehouses, and sensitive
    building grounds to prevent breakdowns and corrosion in such areas [270]. Intelligent
    Fire Alarm and its corresponding safety systems are crucial parts of an intelligent
    building. It is a system with multi-function sensors (i.e., chemical gas sensors,
    integrated sensor systems, and computer vision systems) These sensors enable measuring
    smoke and carbon monoxide (CO) levels in the building. They also can give warnings,
    howling alarms, and tell with a human voice about the place and level of smoke
    and CO. In addition, they can give a message on a smartphone if the smoke or the
    CO alarm goes off [271]. Examples of intrusion detection systems including window
    and door opening detection and intrusion prevention [265]. An infrared motion
    sensor is utilized to detect the motion in a specific area in the building. This
    sensor can reliably send alerts to the alarm panel, with the system implementing
    algorithms for adaption to environmental disturbances and reducing any false alarms
    [265]. Image recognition solution can be used in security software to identify
    people, places, objects, and more. It can also be used to detect unusual patterns
    and activities. Clarifai [272] specializes in a field of ML known as “computer
    vision” that teaches computers to “see” images and video. Clarifai’s technology
    can play a key role in security surveillance and at present, the company works
    only with home security. Each image is processed on a pixel by pixel basis through
    convoluted neural networks. Bangali and Shaligram [273] proposed a home security
    system that monitors the home when the user is away from the place. The system
    is composed of two methods: one uses a web camera to detect the intruder—whenever
    there is a motion detected in front of the camera, a security alert in terms of
    sound and an email is delivered to the occupant. And the other one is based on
    GSM technology that sends SMS. A home security system that sends alert messages
    to the house owner and police station in case of illegal invasion at home is proposed
    in [274]. The system consists of different sensor nodes as the input components
    while the output components respond to the signal received from the input components.
    The sensor nodes consist of a thief alarm, presence detecting circuit, and the
    break-in camera. Zhao and Ye [275] proposed a wireless home security system that
    utilizes low cost, low power consumption, and GSM/GPRS. The system has a user
    interface and it can respond to alarm incidents. e: Miscellaneous Projects CASAS
    [178] is a project by Washington State University that provides a noninvasive
    assistive environment for dementia patients at SBs. The project focuses on three
    main areas for SBs: medical monitoring, green living, and general comfort. CASAS
    project comprises of three layers: physical layer, middleware layer, and software
    applications layer. Aware Home Research Initiative (AHRI) [276] is a project that
    has constructed by a group at the Georgia Institute of Technology for SB services
    in the fields of health and well-being, digital media and entertainment, and sustainability.
    AHRI utilizes a variety of sensors such as smart floor sensors, it also utilizes
    assistive robots for monitoring and helping the elderly. House_n [277] is a multi-disciplinary
    project leads by a group of researchers at the MIT. The main objective of the
    project is to facilitate the design of the smart home and its associated technologies,
    products, and services. The home is supplied with hundreds of various sensors
    that are installed almost in every part of the home that and being utilized to
    develop user interface applications that enable the users to control and monitor
    their environment, save resources, remain mentally and physically active, and
    stay healthy. The EasyLiving project [278] at Microsoft Research is concerned
    with the development of a prototype architecture and technologies to aggregate
    diverse devices into a coherent user experience for intelligent environments.
    The EasyLiving project was designed to provide context-aware computing services.
    The project utilizes a variety of sensors and cameras to track and recognize the
    human activities in the room by using the geometric model of a room and taking
    readings from sensors installed in the room. The Gator Tech Smart House project
    [279] is a programmable space specifically designed for the elderly and disabled
    developed by The University of Florida’s mobile and pervasive computing laboratory.
    The project’s goal is to create SB environments that can sense themselves and
    their residents. The project provides special cognitive services for the residents
    such as mobility, health, and other age-related impairments. A generic middleware
    is utilized to integrate system components in order to maintain a service definition
    for every sensor and actuator in the building. The components of the middleware
    including separate physical, sensor platform, service, knowledge, context management,
    and application layers [280]. Other well-known smart home projects include DOMUS
    [281] which is a research project, by the University of Sherbrooke in Canada,
    that supports mobile computing and cognitive assistance in smart buildings. The
    project aims to assist people suffering from Alzheimer’s type dementia, schizophrenia,
    cranial trauma, or intellectual deficiencies. Adaptive House project [136] at
    The University of Colorado has constructed a prototype system that is equipped
    with a variety of sensors that provide different environmental information including
    sound, motion, temperature, light levels. In addition, actuators that control
    the space and water heaters; lighting units, and ceiling fans. In Asia, there
    are also some other smart building projects have been developed, such as “Welfare
    Techno House” project, which is equipped with different sensors such as ECG, body
    weight, and other temperature measured indicators [282]. Ubiquitous Home project
    [283] is another smart building project in Japan, which utilizes RFID, PIR, pressure
    sensors, as well as cameras and microphones for monitoring elderly adults. Summary:
    Recently, several different context-aware and ML techniques have been utilized
    to support SB services. ML-based approaches are capable to perform better prediction
    and adaptation than others. The philosophy behind ML is to automate the learning
    process that enables algorithms to create analytical models with the support of
    available data. ML can be applied in different learning styles including supervised
    learning, unsupervised learning, semi-supervised learning, as well as reinforcement
    learning when the learning is the result of the interaction between a model and
    the environment. The general uses of ML for SB services are detection, recognition,
    prediction, and optimization. In the section, we also talked about how to acquire
    the context from multiple distributed and heterogeneous sources and the techniques
    for modeling and processing such context to be used in the application services
    of SBs. We also talked about the most used tools and platforms ML and others for
    real-time data analytics by ML community to efficiently process and learn from
    big data. Without such ML tools, one would have to implement all of the techniques
    from scratch requiring expertise in the techniques and in efficient engineering
    practices. SECTION VI. Open Issues and Future Research Directions Research on
    SBs has made great strides in recent years, but a number of challenges remain.
    We present some major challenges related to SBs in this part of the work. These
    challenges will channelize the research directions for future SBs. A. Security
    and Privacy Wherever there is an interconnection of two systems or networks (wired
    or wireless), there are issues of security and privacy and the same is true in
    the case of SB. Security is an essential role in SB environments. Any SB application
    should ensure the confidentiality and integrity of data. Access control must be
    included in SB systems, for instance, the unauthorized users should not be able
    to disconnect the alarm system by connecting the pervasive system [284]. There
    is a massive amount of streaming that is collected from the various installed
    sensors and appliances, such data needs to be processed and stored. Hence, cloud
    computing services can be utilized for this purpose. However, with all of this
    data that is transmitted, the issue of losing the privacy increases. Therefore,
    different encryption techniques are needed to preserve personal privacy [285].
    There are specific challenges related to the user’s privacy including challenges
    related to the data privacy of personal information and the privacy of the individual’s
    physical location and tracking. That needs for privacy enhancement technologies
    and relevant protection laws and tools for identity management of users and objects
    [286]. The recent trend of ML research has focused on handling security and privacy
    issues in SB environments. There are different security-related services have
    utilized ML techniques, such as determining safe device behavior by detecting
    and blocking activities and potentially harmful behavior [287]. ML techniques
    have the potential to reduce security gap because of their capability to learn,
    identify and detect the users’ habits and behaviors. Consequently, it can detect
    the abnormal behaviors predicting risks and intrusions before they happen. For
    instance, ML models learn the routine of the users, such as the time they get
    home or go to sleep. These models can suggest rules based on those detected behaviors
    from all connected devices [288]. B. SBS and Context-Aware Computing In the SB
    environment, there exists a massive amount of raw data being continuously collected
    about the various human activities and behaviors. It is important to develop techniques
    that convert this raw data into valuable knowledge [289]. Context awareness and
    ML techniques are expected to provide great support to process and store big data
    and create important knowledge from all this data [290]. The process of data interpretation
    and knowledge extraction has the following challenges including addressing noisy
    real-world data and the ability to develop further inference techniques that do
    not have the limitations of traditional algorithms. Usually, It is very complex
    to formalize and model the contextual information related to human behaviors in
    a standard way due to the complex physiological, psychological and behavioral
    aspects of human beings [291]. The humans communicate through rich languages as
    well as gestures and expressions. Modern ubiquitous computer systems lack an automatic
    mechanism of inferring information as the humans do. New research is necessary
    to raise human activities and behaviors recognition to understand the complex
    dependencies between the apps and humans [292], [293]. The context-aware prompting
    systems have essential applications in SBs such as emergency notifications, medication
    prompting, heart rate monitoring, generation of agenda reminders, and weather
    alerts. However, issuing prompts for all detected errors can possibly be false
    positives, and consequently, lead to annoyance and sometimes prove to be unsafe
    for specific activities. ML methods can be used for an accurate and precise prediction
    when a person faces difficulty while doing daily life activities [294]. C. Personal
    Data Stream Management in SBS The data streaming management system is able to
    process and transfer raw data collected from a variety of sensors to information,
    it is also able to fuse this information to a feature and directly process features
    [295]. While the data processing for a single SB is simple, it is more complex
    when processing the data from multiple SBs, because there are different people
    that tend to share less common interests and have opposing interests concerning
    the processed data [296]. The simple sensors in an SB environment can detect different
    events related to temperature, motion, light, or weather. Moreover, other appliances
    like a television and a telephone can also send their status or other data as
    events. All this data from different sensors can be used by SB services to detect
    specific states and send a request to some actuators according to specific predefined
    rules, for instance, turn on the light if the television is used [297]. However,
    this approach is not generalizable in case of a group of people residing in the
    same building. Although it can work well for one certain person when personal
    preferences can be automatically learned for an individual person, therefore each
    of the residents has to define their own set of rules [298]. Because of the increasing
    number of sensors that produce data streams, the traditional analyzing and processing
    techniques of these data streams are mostly impractical now [299]. Despite the
    availability of new tools and systems for handling massive amounts of data continuously
    generating by a variety of sensors in SBs, however, the real promise of advanced
    data analytics to still lies beyond the realm of pure technology [296]. In [300]
    discuses research challenges for data streams of real-world applications. They
    analyze issues concerning privacy, timing, preprocessing, relational and event
    streams, model complexity and evaluation, availability of information, and problems
    related to legacy systems. D. Big Data Challenges in SBS Nowadays, a variety of
    sensing technology in the SBs can be utilized to collect a massive amount of heterogeneous
    data at a reasonable cost. Typically, hundreds of thousands of transactions can
    be generated by a single SB every day. The process of storing this data over the
    long-term is challenging [258]. We can imagine the challenges and opportunities
    that the companies or government will encounter in the future to manage incoming
    data from dozens of SBs. This new data could provide us with more contextual information
    that consequently leads to much better services to the occupants [301]. In the
    world of big data, despite the availability massive amount of data, however, it
    is not necessarily easy to obtain valuable information from this data utilizing
    the traditional approaches like trial and error to extract meaningful information
    from this data. Analyzing these massive amounts of data requires new technologies
    to store, organize, and process big data effectively, it needs high-performance
    processors that enable uncovering the insights in big data. It also requires flexible
    cloud computing services and virtualization techniques, as well as software such
    as Apache Hadoop and Spark [302]. It requires providing appropriate ML techniques
    which differ from the traditional approaches for effective and efficient solution
    of the above issues. For these reasons, researchers have recently started to think
    about the problems and opportunities resulting from the adoption of big data in
    SB environments [303], [304]. The information extracted from this big data has
    significant value and could greatly contribute in the future of SBs as assistive
    tools and for better services delivery. That is why it is necessary that the researchers
    start to analyze and think about the solutions for the current and future challenges
    of big data in SBs [305]. E. Interoperability Interoperability means that two
    (or more) systems work together unchanged even though they were not necessarily
    designed to work together. When equipment, devices or appliances having different
    communication and networking technologies can communicate effectively, interoperability
    is satisfied. It is a challenge to ensure that an SB that has various components
    will be intelligible. Typically, each of these components might have been produced
    by different vendors, each of which may have created under different design constraints
    and considerations [306]. Therefore it becomes essential to satisfy interoperability
    so that a number of heterogeneous communication and networking technologies could
    coexist in various parts of SBs. For example, an energy management system may
    use Wi-Fi and ZigBee for communication purposes. A lot of work can be done in
    this context [307]. F. Reliability We can expect that the reliability is one of
    the main concern of occupants and developers of SB systems. A variety of appliances
    and devices present in SB such as televisions, microwave, washing machines etc.
    are required exceedingly to be reliable. Achieving expected levels of reliability,
    especially when linked with communication technologies utilized with these devices
    that may be expected in SBs, is a great challenge. There are different reasons
    for these challenges differences in technological approaches, regulations, development
    culture, and the expectations of the market [306]. G. Integration The key to a
    successful SB implementation is integration: linking building systems such as
    lighting, power meters, water meters, pumps, heating, and chiller plants together
    using sensors and control systems, and then connecting the building automation
    system to enterprise systems. Integration allows executives to gain smart-building
    benefits, both in new construction and by gradually transforming existing buildings
    into SBs. What these SBs have in common is integration. Generally, the integration
    in SB systems brings a range of benefits from energy savings to productivity gains
    to sustainability. The SB systems can be attached to enterprise business systems
    to add another level of intelligence that enhances decision-making and improves
    building performance [2]. However, integrating multiple systems is very challenging
    as each individual system has its own assumptions, strategies to control the physical
    world, and semantics. As an example of integrating two systems in SB, assume a
    system that is responsible for energy management, and another system for health
    care are running concurrently. In this case, the integrated system should not
    turn off medical appliances to save energy while they are being used as suggested
    by the health care system [292]. As a future perspective for SBs, You will wake
    up to the sound of the alarm, at the same time the available sensors will be aware
    that you are waking up. The other sensors such as light sensors will automatically
    turn on the light in the building, while the thermostat will warm the area that
    you are about to use in the building. Your coffee will start to brew, you will
    also get a notification on your phone about the weather. The other sensors in
    the kitchen and refrigerator will remind you with a list of items that you will
    need to pick up on your way from your workplace to home to make dinner. When you
    leave your house, you can press a button from your phone to self-drive your car
    out of the garage. After that, the security system will start monitoring and controlling
    the home. Such the doors will automatically lock. Appliances will switch to an
    energy-saving mode. When the home sensors sense utilizing geofencing technology
    that you are way back home, it will get ready again for your arrival, the thermostat
    will warm things up, the garage door will open as you pull up, and your favorite
    music will start to play when you walk in [141]. Summary: Although the recent
    researches have been done in the SBs field, there is a need for a lot more efforts;
    however, we believe that SBs are possible for the mass market in the near future.
    The main challenges and future research directions of this eld can be summarized
    as follows: User context in term of behavior and intention should be studied and
    respected whenever possible; Further research is needed into context-aware prompting
    systems, personal data streaming and big data analysis of occupants in SB environment;
    Some of the other challenges like the interoperability, reliability, and integration
    still require more attention. SECTION VII. Conclusions The promise of smart buildings
    (SBs) is a world of appliances that anticipate your needs and do exactly what
    you want them to at the touch of a button. Since SBs and their inhabitants create
    voluminous amounts of streaming data, SB researchers are looking towards techniques
    from ML and big data analytics for managing, processing, and gaining insights
    from this big data. This paper reviewed the most important aspects of SBs with
    particular focus on what is being done and what are the issues that require further
    research in ML and data analytics domains. In this regards, we have presented
    a comprehensive survey of the research works that relate to the use of ML and
    big data particularly for building smart infrastructure and services. Although
    the recent advancements in technologies that make the concept of SBs feasible,
    there are still a variety of challenges that limit large-scale real-world systems
    in SBs field. Addressing these challenges soon will be a powerful driving force
    for advancements in both industrial and academic fields of SB research. ACKNOWLEDGMENT
    The statements made herein are solely the responsibility of the authors. Authors
    Figures References Citations Keywords Metrics More Like This MIS-IoT: Modular
    Intelligent Server Based Internet of Things Framework with Big Data and Machine
    Learning 2018 IEEE International Conference on Big Data (Big Data) Published:
    2018 Framework for Mobile Internet of Things Security Monitoring Based on Big
    Data Processing and Machine Learning IEEE Access Published: 2018 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8600701/08754678.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: 'Leveraging Machine Learning and Big Data for Smart Buildings: A Comprehensive
    Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agronomy12010127
  analysis: '>'
  authors:
  - Amjad Rehman
  - Tanzila Saba
  - Muhammad Kashif
  - Suliman Mohamed Fati
  - Saeed Ali Bahaj
  - Huma Choudhary
  citation_count: 91
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Rehman, A.; Saba, T.;\nKashif, M.; Fati, S.M.; Bahaj, S.A.;\nChaudhry,\
    \ H. A Revisit of Internet of\nThings Technologies for Monitoring\nand Control\
    \ Strategies in Smart\nAgriculture. Agronomy 2022, 12, 127.\nhttps://doi.org/10.3390/\n\
    agronomy12010127\nAcademic Editor: Paul Kwan\nReceived: 7 October 2021\nAccepted:\
    \ 11 November 2021\nPublished: 5 January 2022\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nagronomy\nReview\nA Revisit of Internet of Things Technologies for Monitoring\n\
    and Control Strategies in Smart Agriculture\nAmjad Rehman 1,*\n, Tanzila Saba\
    \ 1,*\n, Muhammad Kashif 2, Suliman Mohamed Fati 1\n, Saeed Ali Bahaj 3\nand Huma\
    \ Chaudhry 4\n1\nArtiﬁcial Intelligence & Data Analytics Lab., CCIS Prince Sultan\
    \ University, Riyadh 11586, Saudi Arabia;\nsmfati@yahoo.com\n2\nDepartment of\
    \ Computer Science & Software Engineering, International Islamic University,\n\
    Islamabad 44000, Pakistan; drkashif491@gmail.com\n3\nMIS Department College of\
    \ Business Administration, Prince Sattam Bin Abdulaziz University,\nAlkharj 11942,\
    \ Saudi Arabia; s.bahaj@psau.edu.sa\n4\nMelbourne Institute of Technology, Melbourne,\
    \ VIC 3000, Australia; huma.bicse@gmail.com\n*\nCorrespondence: arkhan@psu.edu.sa\
    \ (A.R.); tsaba@psu.edu.sa (T.S.)\nAbstract: With the rise of new technologies,\
    \ such as the Internet of Things, raising the productivity of\nagricultural and\
    \ farming activities is critical to improving yields and cost-effectiveness. IoT,\
    \ in particular,\ncan improve the efficiency of agriculture and farming processes\
    \ by eliminating human intervention\nthrough automation. The fast rise of Internet\
    \ of Things (IoT)-based tools has changed nearly all life\nsectors, including\
    \ business, agriculture, surveillance, etc. These radical developments are upending\n\
    traditional agricultural practices and presenting new options in the face of various\
    \ obstacles. IoT aids in\ncollecting data that is useful in the farming sector,\
    \ such as changes in climatic conditions, soil fertility,\namount of water required\
    \ for crops, irrigation, insect and pest detection, bug location disruption of\n\
    creatures to the sphere, and horticulture. IoT enables farmers to effectively\
    \ use technology to monitor\ntheir forms remotely round the clock. Several sensors,\
    \ including distributed WSNs (wireless sensor\nnetworks), are utilized for agricultural\
    \ inspection and control, which is very important due to their exact\noutput and\
    \ utilization. In addition, cameras are utilized to keep an eye on the field from\
    \ afar. The goal\nof this research is to evaluate smart agriculture using IoT\
    \ approaches in depth. The paper demonstrates\nIoT applications, benefits, current\
    \ obstacles, and potential solutions in smart agriculture. This smart\nagricultural\
    \ system aims to find existing techniques that may be used to boost crop yield\
    \ and save time,\nsuch as water, pesticides, irrigation, crop, and fertilizer\
    \ management.\nKeywords: agriculture; land monitoring; control strategies; IoT;\
    \ sensors; economic growth; water\nmanagement and water resources\n1. Introduction\n\
    The Internet of Things (IoT) is an interconnected network of computing devices,\n\
    people with unique IDs, and the capacity to communicate via a network without\
    \ human\ninteraction. The Internet of Things (IoT) intends to connect the physical\
    \ and virtual worlds\nby interacting and exchanging data via the internet. Linked\
    \ industries, smart cities, smart\nhomes, smart energy, connected vehicles, smart\
    \ agriculture, connected buildings and\ncampuses, health care, and logistics are\
    \ all examples of IoT applications [1]. The increasing\nneed for food, both in\
    \ terms of quantity and quality, has required the development and\nmodernization\
    \ of the agricultural sector. The “Internet of Things” (IoT) is a promising set\
    \ of\ntechnologies that may be used to provide a variety of agricultural modernization\
    \ solutions.\nScientiﬁc institutions, research institutes, and the agricultural\
    \ sector are racing to provide\nmore and more IoT solutions to agricultural business\
    \ stakeholders, laying the foundation\nfor a clear role when IoT becomes a mainstream\
    \ technology [2]. The world’s biodiversity\nis anticipated to support between\
    \ 9.4 and 10.1 billion people by 2050, increasing the need\nfor specialized food\
    \ production zones, especially for harvesting and livestock. This means\nAgronomy\
    \ 2022, 12, 127. https://doi.org/10.3390/agronomy12010127\nhttps://www.mdpi.com/journal/agronomy\n\
    Agronomy 2022, 12, 127\n2 of 21\nthat by 2050, global food production will have\
    \ to grow by 70% [3]. Crop production is\nincreasingly crucial in agriculture,\
    \ with commodities, such as cotton, wheat, gum, and\nothers, playing signiﬁcant\
    \ roles in many nations’ economies.\nIn 2019, the IoT market was 690 billion dollars\
    \ and was projected to be 1256.1 billion\ndollars by 2025 with a 10.53% CAGR globally\
    \ from 2020 to 2025. Solutions are needed to\nassure timely and regular agricultural\
    \ growth and yield due to the combined effects of a\ngrowing population, natural\
    \ weather unpredictability, soil degradation, and climate change.\nFarm management,\
    \ animal monitoring, irrigation control, greenhouse environmental con-\ntrol,\
    \ autonomous agricultural machinery, and drones are examples of IoT applications\
    \ in\nagriculture, all of which contribute to agrarian automation. It also demands\
    \ contributing to\nagricultural food production’s long-term viability. Land appraisal,\
    \ crop protection, and\ncrop yield projection, according to these needs, are essential\
    \ to world food production [4].\nFarmers, for example, can manage ﬁeld environments\
    \ in real-time and more effortlessly\nregulate ﬁelds using wireless sensors and\
    \ mobile networks. Farmers may also utilize IoT\ntechnology to capture essential\
    \ data, subsequently creating yield maps that enable precision\nagriculture to\
    \ produce low-cost high-quality crops [5]. Figure 1 depicts the smart precision\n\
    agriculture cycle.\nFigure 1. Smart precision agriculture cycle.\nSmart agriculture\
    \ is becoming increasingly important to farmers in the modern day,\nand it will\
    \ become even more critical in the future to ensure proper ﬁeld expansion and\n\
    crop output. Unfortunately, traditional farming methods are not up to the task\
    \ of meeting\nrising demand. As a result, the ground stays barren and devoid of\
    \ fertility due to poor\nutilization of nutrients, water management, light, fertilizers,\
    \ and pesticides. Crop diseases,\nwater shortage, irrigation, and pesticide control\
    \ monitoring are only some of the challenges\nthat different IoT automation and\
    \ control systems can efﬁciently address [6]. This is why\ncontemporary agriculture\
    \ employs smart equipment and tools from sowing through crop\nharvesting, storage,\
    \ and transportation. The operation is smart and cost-effective due to its\naccurate\
    \ monitoring capabilities and fast reporting using a range of sensors. Autonomous\n\
    drones, harvesters, tractors, satellites, and robots are now complementing agricultural\n\
    equipment. Sensors may be instantly placed and begin collecting data, which is\
    \ then\nimmediately available for further analysis over the internet. By enabling\
    \ reliable data\ngathering at each place, sensor technology allows crop and site-speciﬁc\
    \ agriculture [7].\nUsing advanced control methods to automate agricultural activities\
    \ has increased crop\nproduction while also improving soil fertility.\nThe following\
    \ are the signiﬁcant contributions made by this study:\nAgronomy 2022, 12, 127\n\
    3 of 21\n•\nThe world’s expectations of the agriculture industry, based on existing\
    \ IoT approaches\nfor providing solutions and new applications and technology.\n\
    •\nIdentiﬁcation of numerous application ﬁelds, as well as a summary of the most\
    \ recent\nstate-of-the-art literature on IoT technology.\n•\nThe Internet of Things’\
    \ task is to address these constraints and other challenges, such\nas resource\
    \ scarcity and precise usage, climate change, etc.\nThe rest of the paper is laid\
    \ out in the following manner. Section 2 delves into the\ndetails of smart agricultural\
    \ applications based on IoT technologies. Section 3 discusses the\nmany types\
    \ of equipment and technology available. Section 4 identiﬁes unsolved problems\n\
    and potential remedies. Finally, Section 5 concludes the research.\n2. Major Applications\
    \ of Smart Agriculture\nPrecision farming, animal monitoring, and greenhouse monitoring\
    \ are a few agri-\ncultural businesses utilizing the Internet of Things. Every\
    \ element of traditional farming\noperation may be substantially improved by combining\
    \ cutting-edge sensors and Internet\nof Things technology. At the moment, the\
    \ Internet of Things’ (IoT’s) and wireless sensors’\nharmonious incorporation\
    \ into smart agriculture can catapult agriculture to formerly in-\nconceivable\
    \ heights. Appropriateness of land, pest monitoring and control, irrigation, and\n\
    yield optimization are just a few of the conventional agricultural issues that\
    \ IoT may assist\nin resolving through the implementation of smart agriculture\
    \ approaches [7]. Figure 2\nillustrates the comprehensive paradigm of smart agricultural\
    \ monitoring system applica-\ntions, facilities, and sensors. Agriculture applications\
    \ are classiﬁed as IoT agricultural apps,\nsmartphone-based agricultural apps,\
    \ and sensor-based agricultural apps. Wireless sensor\nnetworks (WSNs) have recently\
    \ been used to enable IoT applications for smart agriculture,\nincluding irrigation\
    \ sensor networks, frost event prediction, precision agriculture and soil\nfarming,\
    \ smart farming, and unsighted object recognition, among others [8]. Signiﬁcant\n\
    instances of how new technology assists in the general improvement of efﬁciency\
    \ at various\nstages are included here.\nFigure 2. General paradigm of smart agriculture.\n\
    Agronomy 2022, 12, 127\n4 of 21\n2.1. Monitoring of Soil Moisture and Water Levels\n\
    Soil monitoring has developed into one of the most challenging agricultural areas,\n\
    both for manufacturers and farmers. Numerous environmental issues associated with\
    \ soil\nmonitoring affect agricultural yield. When these sorts of obstacles are\
    \ correctly identiﬁed,\nfarming patterns and methods become readily understandable.\
    \ The soil’s moisture content,\nwetness, fertilizer application, and temperature\
    \ trends are all being monitored. Soil’s\nmoisture environment management system\
    \ uses soil humidity and moisture sensors. By\nproposing an appropriate fertilizer\
    \ approach, the results of a soil monitoring test report\nassist farmers in increasing\
    \ crop yield [9]. The sensor can read both analog and digital\noutputs. The judgment\
    \ is made based on data collected from sensors and compared to\npredeﬁned threshold\
    \ levels. The soil moisture sensor is used to regulate the irrigation\nsystem’s\
    \ automatic operation. When the moisture level goes below the threshold value,\
    \ the\nwater pump is triggered [10].\nSoil mapping enables you to sow many crop\
    \ types in the same ﬁeld, allowing you\nto match better soil characteristics,\
    \ such as seed compatibility, sowing timing, and even\nplanting depth, as certain\
    \ crops are deeply rooted while others are not. Additionally,\ngrowing many crops\
    \ concurrently may result in more prudent agricultural practices, such\nas resource\
    \ conservation. The system is composed of a distributed network of soil moisture\n\
    and temperature sensors located in the root zone of the plant, as well as rain\
    \ sensors\nlocated in various zones. The microcontroller collects and transmits\
    \ all sensor data and\ninformation. In addition, a temperature and soil moisture\
    \ threshold algorithm will be\ndevised and implemented in a microcontroller-based\
    \ gateway to regulate the amount of\nwater given to the ﬁelds. Finally, the user\
    \ is provided with control via an IoT module based\non rain sensor data to interrupt\
    \ or restart water ﬂow as needed [11].\nIf the ﬁeld contains an adequate amount\
    \ of water, no water will be pumped into\nit. However, when the soil’s water moisture\
    \ content falls below a predetermined level,\nwater is pumped into the ﬁeld until\
    \ the desired moisture content is attained. The DHT11\nsensor monitors the ﬁeld’s\
    \ temperature and humidity. In addition, a PIR motion sensor\ndetects when an\
    \ intruder (human or animal) enters the area. Consequently, sensor values\nare\
    \ continually monitored and displayed on the farmer’s mobile device through a\
    \ GSM\nsim900A module, which includes a sim card with a 3G data pack and adds\
    \ IoT capabilities\nto the system [12].\n2.2. System of Irrigation Monitoring\n\
    Numerous studies have been conducted on a smart irrigation system. Food production\n\
    technology must signiﬁcantly improve to keep up with the growing demand for food.\n\
    Numerous experts have worked diligently to create an alternative to irrigated\
    \ farming.\nThese efforts, however, have not yet resulted in a feasible solution\
    \ to the irrigation system’s\npresent problems. At the moment, crop irrigation\
    \ is carried out manually and by established\ncustomary practices. When crops\
    \ are given less water, they grow slower and absorb less\ncalcium. Frequent irrigation\
    \ kills roots and wastes water. As a result, accurate irrigation\nof crops becomes\
    \ a considerable difﬁculty [13]. A smart irrigation management and\nmonitoring\
    \ approach is developed to enable autonomous delivery of sufﬁcient water from\n\
    a tank to ﬁeld crops. Automatic sensor systems are cost-effective, offered for\
    \ determining\nwhether plants require watering based on information gathered from\
    \ monitoring and\nregulating the soil water levels to minimize dryness or overﬂow\
    \ [14].\nKamaruddin et al., 2019 [15] developed an Internet of Things (IoT)-based\
    \ wireless sen-\nsor network (WSN) architecture that manually or automatically\
    \ administers and monitors\nthe irrigation system. The proposed method used NRF24L01\
    \ and Arduino tools as the\ncommunication network transceiver and CPU. The soil\
    \ moisture sensor data will be sent to\nthe base station via NRF24L01. Then, the\
    \ sensor node’s data will be sent to the cloud server\nthrough the base station.\
    \ This project utilized Thingspeak as a cloud server to store all data\nin a database\
    \ and connect it to an Android application.\nAgronomy 2022, 12, 127\n5 of 21\n\
    2.3. Fertilizer Administration\nAkshaya et al., 2020 [16] proposed an IOT-based\
    \ technique and upgraded the previous\nsystem, which predicted agricultural yields\
    \ using backpropagation and a random forest\nalgorithm. It recommends fertilizer\
    \ application rates and exclusively monitors atmospheric\ndata via a mobile network\
    \ and pump on/off action. The suggested technique utilizes\na segmented tank to\
    \ collect NPK fertilizer and water. The user can select one of three\nmodes (manual,\
    \ auto, or smart). In manual mode, the user is provided with the fertil-\nizer\
    \ and water ratios for well-known plants and fertilizers. In auto mode, all required\n\
    is to know the plant’s name to select the appropriate fertilizer and water ratio.\
    \ Finally,\nin smart mode, if the user cannot recognize the plant’s name, fertilizer\
    \ ratio, or water,\nthe plant’s name, fertilizer ratio, and water will be recommended\
    \ automatically. The IoT\nmodule will continuously collect information on the\
    \ temperature and soil moisture. The in-\nformation collected will be stored in\
    \ the IoT cloud. The mobile phone will inform you\nwhenever the given data changes\
    \ and the needed fertilizer ratio will be shown on the liquid\ncrystal display.\n\
    2.4. Crop Diseases and Pest Control\nHuman operators frequently monitor insect\
    \ pests via time-consuming and costly on-\nsite inspections, which results in\
    \ low spatial and temporal resolution. Remote monitoring\nhas been possible due\
    \ to advancements in remote sensing, electronics, and informatics.\nMonitoring\
    \ costs and effectiveness can be optimized through the deployment of camera-\n\
    equipped traps. With minimum human intervention, image analysis algorithms can\
    \ locate\nand count insect pests captured in traps automatically.\nReddy et al.,\
    \ 2019 [17] created an IoT-based system for disease and insect pest man-\nagement\
    \ in agriculture and the prediction of plant climatic factors. The integrated\
    \ sensors\nhelp in the measurement of soil and atmospheric moisture and humidity.\
    \ These features\nhelp determine the environmental conditions in which the plant\
    \ ﬂourishes and the plants’\nillnesses. It detects disease on the ﬁeld and sprays\
    \ prescribed insecticides. Web cameras\ntake images that are then preprocessed\
    \ to include RGB to grayscale conversion, defect\ndetection, image scaling, image\
    \ enhancement, and edge detection. SVM is utilized to\ncategorize characteristics\
    \ generated from Citrus Canker diseases, such as energy, kurtosis,\nskewness,\
    \ and entropy (damaged Lemon crop). The Arm7 microcontroller is used for\nhardware,\
    \ power, sensors, and motor driver control. Once the illness is identiﬁed, the\n\
    program will propose fertilizers and transmit the results to an LCD and the recommended\n\
    fertilizers. By pump, the fertilizers will be sprayed on the diseased leaves.\
    \ This study was\nconﬁned to the lemon plant to demonstrate that the same method\
    \ may be used for various\ncrops with favorable outcomes in the future.\nA solution\
    \ is presented for forecasting and detecting grape disease using the CNN\napproach\
    \ and real-time gathered data on environmental factors. First, the CNN technique\n\
    is utilized to analyze the leaf images. Then, different layers of the CNN method\
    \ are used\nto create the image. Finally, it is scaled to a speciﬁc resolution\
    \ before data is sent into\nthe CNN layers for training and testing. The suggested\
    \ algorithm was evaluated on four\ndiseases known to have a higher effect on grape\
    \ production. The diseases include esca\nblack measles, anthracnose, leaf blight,\
    \ and black rot. This gadget not only detects but also\nforecasts illnesses based\
    \ on historical weather data. On the other side, the readings from\nthe humidity,\
    \ temperature, and soil moisture sensors are transferred through Raspberry\nPi\
    \ to Microsoft’s Azure Cloud. Following this, the sensor readings are used to\
    \ anticipate\nthe illness using a trained linear regression model. Based on the\
    \ ﬁndings of the preceding\ndetection and prediction stages, suggestions for appropriate\
    \ fertilizers in the right quantities\nwill be provided to minimize fertilizer\
    \ misuse and cost savings [18].\nTo detect pests in rice during ﬁeld production\
    \ and avoid rice loss, the Internet of Things\nsupported a model-based UAV with\
    \ the Imagga cloud offered. The Internet of Things-based\nUAV was developed on\
    \ AI mechanisms and the Python programming prototype to transmit\nrice disease\
    \ images to the Imagga cloud and supply insect data. The Approach identiﬁes the\n\
    Agronomy 2022, 12, 127\n6 of 21\ndisease and insects by integrating the conﬁdence\
    \ ratings of the labels. The label identiﬁes\nthe objects in the images. To determine\
    \ the pest, the tag with the greatest conﬁdence\nresults and more than or equal\
    \ to the threshold is chosen equal to the target label. If pests\nare discovered\
    \ in the rice, statistics will be transferred to the ﬁeld owner directly to take\n\
    preventative actions. The suggested method is capable of detecting all pests that\
    \ inﬂuence\nrice production. On the other hand, this research attempted to minimize\
    \ rice waste during\nproduction by conducting insect monitoring at regular intervals\
    \ [19]. Table 1 summarizes\nmany current smart agricultural applications.\nTable\
    \ 1. Selected applications based on smart agriculture.\nRef.\nApp\nDescription\n\
    [7]\nSoil Analysis\nLand management offers long-term promise based\non climate,\
    \ geography, and reasonably stable soil\ncharacteristics (like soil texture, depth,\
    \ and\nmineralogy). This application aids farmers in better\nunderstanding the\
    \ potential of their land and climate\nvariations alteration and extenuation measures.\n\
    [9]\nFarm Manager\nFarm Manager App helps the farmers to decide\nwhich techniques\
    \ should apply before planting\nstarts. This app views, organizes, and edits all\n\
    information about your ﬁeld like yield, planting, and\nspraying conditions without\
    \ your mobile phone.\n[7]\nPest Management\nBy collecting pest occurrence information\
    \ from\nfarms, Village Tree provides smart pest control\nsolutions. In addition,\
    \ it employs a crowdsourcing\nstrategy, sending images and location data to other\n\
    farmers who may be affected.\n[9]\nAgrippa\nFarmer can generate electronics maps\
    \ of ﬁeld, keep a\nhistory of growing crops in the ﬁeld (e.g., planting,\nfertilizing,\
    \ harvesting, warehouses, gas station), and\ntrack the location of objects in\
    \ the ﬁeld (e.g., soil\nsampling for agrochemical laboratory) by eFarmer\nApplication.\n\
    Semios\nCovers network coverage, orchard pests, frost,\ndiseases, and irrigation.\
    \ Event notiﬁcations are sent\nout in real-time as part of the monitoring services.\n\
    [7]\nFertilizer\nManagement\nEco Fert assists with fertilizer management so that\
    \ it\nmay be used to its full potential. It determines the\noptimal fertilizer\
    \ mixture created to cover the\nneeded nutrient suspension and considers the\n\
    demands of diverse yields. In addition, it considers\nthe cost of fertilizer based\
    \ on current market pricing.\n2.5. Yield Monitoring, Forecasting and Harvesting\n\
    The AWS IoT platform has been proposed for crop prediction using temperature and\n\
    rainfall monitoring. The Raspberry Pi is utilized as a gateway for remote monitoring\
    \ in this\nstudy. Raspberry Pi can connect with sensors to operate applications,\
    \ such as the DHT11\nTemperature Sensor and Soil Moisture Sensor, which forecasts\
    \ temperature and rainfall\nranges. The gateway is integrated with Amazon Web\
    \ Services’ (AWS) IoT platform. MQTT\nis a messaging protocol that allows for\
    \ various messages across distant connections [20].\nThe study reported establishing\
    \ an autonomous greenhouse smart aquaponics man-\nagement organized on temperature\
    \ via the use of an Android-based monitoring and\nautomatic correction system\
    \ and a Raspberry Pi-based plant growth monitoring system.\nReal-time data is\
    \ collected using the light intensity sensor and the ambient temperature\nand\
    \ humidity sensors. Additionally, the pH and temperature of the recirculating\
    \ water\nare monitored. Suppose the data acquired is beyond the threshold range.\
    \ In this case, the\nAgronomy 2022, 12, 127\n7 of 21\nsystem quickly engages the\
    \ correction devices, which comprise a peristaltic buffer device,\nan aerator,\
    \ an evaporative cooler, inlet and exhaust fans, and grow lights. The internet\n\
    remote access function enables real-time data transmission and receipt through\
    \ the android\napp amongst the smartphone and computer system. This study compared\
    \ plant devel-\nopment in smart aquaponics to traditional agriculture based on\
    \ soil systems employing\nimage processing in two investigational operations.\
    \ Following record collection, it was\ndetermined that the smart aquaponics system\
    \ achieved greater output than conventional\nagriculture monitoring. As lettuce,\
    \ mustard greens, and pak choi are produced in a smart\naquaponics system vs.\
    \ traditional soil-based farming, this study focused exclusively on\nlettuce,\
    \ mustard greens, and pak choi [21].\nA tree topology was used for the WSN-enabled\
    \ agricultural monitoring system to\nimprove performance. A cheap sensor node\
    \ like a commercial sensor or a NodeMCU\nmodule transmits data to the control\
    \ unit over Wi-Fi. Fertilizer, fertigation improvement,\nand agricultural operations\
    \ are monitored by data processing and thresholding. The in-\ncorporation of cost-effective\
    \ ICT technology with traditional crop management or weather\nmonitoring and sensor\
    \ data created the agronomic model. Minimal environmental impact\nfrom crop growing\
    \ was achieved as a consequence of large fertilizer and water savings [22].\n\
    2.6. Climate Conditions Monitoring\nIn farming, the weather is extremely important.\
    \ Incorrect climate knowledge can\nhave an impact on crop quality and quantity.\
    \ On the other hand, farmers may use IoT\nsolutions to put sensors in the ﬁeld,\
    \ including humidity sensors, temperature sensors,\nrainfall sensors, and water\
    \ level sensors, to collect real-time data from the environment.\nThese sensors\
    \ monitor the state of crops and the environment in which they grow. If a\nworrying\
    \ environmental situation is discovered, it is either automatically corrected\
    \ or a\nwarning is sent to the farmer.\nGreenhouses created an Internet of Things-based\
    \ weather station to address the cost\nand accuracy issues. The TI CC2650 Sensor\
    \ Tag and IBM Cloud Platform continuously\nmonitor weather and abiotic factors,\
    \ transfer the detected values to the cloud, and send\ne-mail notiﬁcations when\
    \ values deviate. As a result, this study may be expanded to\ninclude the use\
    \ of ML model-based classiﬁcation training to categorize a plant’s health as\n\
    excellent, moderate, or terrible based on the average temperature, humidity, light\
    \ intensity,\nand air pressure. This would help to clarify abstracts about a plant’s\
    \ health to a larger level\nand might aid in keeping the plants’ health in good\
    \ shape [23].\nArifﬁn et al. [24] used an autonomous temperature control system\
    \ to address the\ndrawbacks of traditional growing methods, which are expensive,\
    \ have low yields, and\nneed a lot of care. The suggested IoT-based architecture\
    \ was evaluated in a real-world\nsetting at the Bandar Puteri Centre of NASOM\
    \ (National Autism Society of Malaysia).\nThe ideal temperature for oyster mushrooms\
    \ is between 20 and 30 ◦C, with a humidity\nlevel of 70 to 80%. Two sensors were\
    \ installed in the mushroom house’s center and corner\nto detect temperature and\
    \ moisture, then communicated to a remote monitoring station\nthrough a microcontroller\
    \ unit for further action. The results of the six-day experiment\nrevealed that\
    \ an effective automatic monitoring system, which can regulate the farm’s\nhome\
    \ while reducing resources and human labor, was developed. The mushroom home,\n\
    IoT control box, and Web Client interface were all designed within the system.\
    \ As a result,\nthe mushroom house provided a regulated environment for mushroom\
    \ growing as well as\nprotection from pests and insects. The climate control system,\
    \ which automates controlling\nthe ideal environment for oyster mushroom production,\
    \ was housed in the IoT control box.\n3. Major Equipment and Technologies\nMajor\
    \ equipment and IoT technologies are fully demonstrated in the next subsections,\n\
    such as various sensors, agricultural drones, and harvesting robots.\nAgronomy\
    \ 2022, 12, 127\n8 of 21\n3.1. Sensors\nThe visual sensor, multispectral sensor,\
    \ thermal sensor, lidar sensor, and hyperspectral\nsensor are only a few of the\
    \ sensors utilized in IoT-based smart agriculture and drone\ntechnologies. Current\
    \ IoT-based sensor applications in smart agriculture are presented in\nTable 2.\n\
    Table 2. IoT-based sensors in smart agriculture used to increase production.\n\
    Sensors\nOperations of Different Sensors\nDHT11 Sensor:\nDHT11 sensor measures\
    \ temperature and humidity\n[12].\nSEN0193: Soil Moisture Sensor\nSEN0193 is a\
    \ Soil Moisture Sensor. The dielectric\npermittivity of soil is a consequence\
    \ of its moisture\ncontent. The sensor generates a voltage proportional\nto the\
    \ dielectric permittivity of the soil and hence to\nits water content. The sensor\
    \ takes an average of the\nwater content over its whole length. The Soil\nMoisture\
    \ Sensor is used to quantify moisture loss\nover time due to plant absorption\
    \ and evaporation,\ndetermine optimal soil moisture information for\ndifferent\
    \ plant species, monitor soil moisture\ninformation in greenhouses to regulate\
    \ irrigation,\nand optimize bottle biology research. [20].\nTurbidity Sensor SKU\
    \ SEN0189:\nThe turbidity sensor determines the quality of water\nby detecting\
    \ its turbidity level. It detects suspended\nparticles in water using light by\
    \ measuring the light\ntransmittance and scattering rate, which vary the\nquantity\
    \ of total suspended solids (TSS) in the water\n[25].\nMH-Z14A:\nThis is used\
    \ to monitor the CO2 level at high\nprecision.\nBH1750:\nThis is used to monitor\
    \ the light intensity level (as\nphotosynthesis is related to light intensity)\
    \ and to\nconduct experiments on the inﬂuence of light\nintensity on the greenhouse\
    \ environment’s\ntemperature [26].\nRain sensor:\nA rain sensor is a simple instrument\
    \ for detecting\nrain pressure. It may be used as a switch to\ndetermine the strength\
    \ of rainfall when a raindrop\nfalls through the rainy board [27,28].\nLidar sensor:\n\
    The top camera sensor is an imaging range camera\nthat estimates the distance\
    \ between the camera and\nthe subject at each point in the collected images [29].\n\
    3.2. Agricultural Drones\nUAVs can monitor the health of crops, apply pesticides,\
    \ and take hyperspectral images\nin precision agriculture. Drones can scan a crop\
    \ for issues in plants using visible and\nnear-infrared light, and they can determine\
    \ which plants reﬂect what quantities of green\nand NIR light. Photosynthetic\
    \ activity diminishes when a plant is stressed. This data may\nbe used to create\
    \ numerous images that track plant changes and indicate their health. As a\nresult,\
    \ farmers can more accurately administer treatments after a disease has been identiﬁed.\n\
    Drones are also utilized for surveillance, trafﬁc monitoring, and weather monitoring\
    \ in\nagriculture. Drone technology employs various sensors, including optical,\
    \ multispectral,\nthermal, lidar, and hyperspectral sensors, which are brieﬂy\
    \ detailed in Section 3.1.\nCrop management has beneﬁted from the Internet of\
    \ Things, remote sensing, and\nanalytic data approaches. Pests may be identiﬁed,\
    \ targeted, and managed to utilize remote\nAgronomy 2022, 12, 127\n9 of 21\nsensing\
    \ using UAVs. UAVs can ﬂy in tough and harsh terrains to take high-resolution\n\
    images that allow pests to be identiﬁed and controlled. Many crop security concerns\
    \ may\nbe solved using UAVs equipped with cameras, which are not possible with\
    \ traditional pest\nmanagement methods. UAVs have been used to automate insect\
    \ damage in agricultural\nareas [30,31].\nAn automated rotating device based on\
    \ sun illumination angle perception keeps the\nsolar panel perpendicular to the\
    \ sun and increases solar energy harvesting rates. Based on\nspectrum analysis\
    \ technology, Internet of Things approaches, including several wireless\ntechnologies,\
    \ such as TVWS, ZigBee, and LoRa, are suggested to collect data and send it\n\
    to a base station/gateway to assess the degree of damage caused by pests and diseases.\n\
    In addition, a technique for maximizing wind force usage and to extend the time\
    \ of ﬂight for\ndrones has been established to support drones in downwind by designing\
    \ the ﬂying path\nimplementation. The study’s scope is limited, with the goal\
    \ of developing a long-standing\ninsect and disease detection technique through\
    \ extensive data gathering and analysis.\nThe suggested model will be tested in\
    \ real-world scenarios. For example, crop diseases\nand insects might be tracked\
    \ in real-time and climatic changes could be analyzed [32].\nThe Internet of Things-based\
    \ approach is illustrated for smart agriculture monitoring in\nFigure 3.\nFigure\
    \ 3. IOT-based smart agriculture monitoring system.\n3.3. Harvesting Robots\n\
    Under speciﬁc climatic circumstances, a harvesting robot is intended to gather\
    \ fruits\nautonomously. The advancement of vision-based harvesting robots’ mechanism\
    \ is yet in its\nearly stages. Agricultural robotic systems, on the other hand,\
    \ have comparable architecture.\nThe system is comprised of an autonomous mobile\
    \ platform, a lightweight mechanical\narm with multiple degrees of freedom, an\
    \ adaptable end effector for a power response\nsystem, a multi-sensor machine\
    \ vision system, a smart decision and drive management\nsystem, and supplementary\
    \ hardware and software [33]. Kang et al., 2020 [34] developed\nan intense neural\
    \ network to assist robotic apple harvesting, which detects and grasps\nfruit\
    \ in a real-time environment using a computer vision system. The proposed robotic\n\
    harvesting system was implemented using a customized soft end-effector comprised\
    \ of\nIntel i7-6700 CPU and NVIDIA GTX-1070 GPU and DELL-INSPIRATION main computer\n\
    unit, Intel D-435 RGBD visualization camera, and UR5 Universal Robot (modern robotic\n\
    manipulator). The proposed approach uses Mobile-DasNet, a computationally efﬁcient\n\
    lightweight one-stage instance segmentation network to conduct fruit recognition\
    \ and\ninstance segmentation on sensory input. An improved PointNet model was\
    \ also developed\nto conduct fruit modeling and grip estimates from an RGB-D camera\
    \ through the point\nclouds technique. The two qualities described above were\
    \ utilized and integrated to\nAgronomy 2022, 12, 127\n10 of 21\ndevelop and build\
    \ a precise robotic system for autonomous fruit picking. The goal of the\nstudy\
    \ was to improve the vision algorithm’s performance, boost, and improvements.\n\
    Furthermore, the proposed soft end-effector robotic device may improve its grasping\n\
    recognition proportion and effectiveness under various situations. Ogorodnikova\
    \ and\nAli [35] devised a technique for recognizing ripe tomatoes in a greenhouse\
    \ setting using a\nmachine vision system of a harvesting robot. To effectively\
    \ execute the suggested image\nprocessing method for this purpose, RGB color images\
    \ from a typical digital camera are\nrequired. In the second stage, RGB color\
    \ images are converted to HSV, which is easier\nfor extracting red tomato from\
    \ the green backdrop in the image. Image segmentation,\nthresholding, and morphological\
    \ operations separate a red tomato from a green background\ncolor photograph.\
    \ The algorithm is built using Matlab methods and then evaluated to see\nif it\
    \ produces favorable results. The process can be converted into fast-acting codes\
    \ for the\nharvesting robot’s controller since it is basic and short. The research\
    \ is limited to moving\nthe gripper to the proper place in tomato detection and\
    \ developing efﬁcient algorithms\nusing 3D gripper models to transform the existing\
    \ research system into industrial robots.\nOnly a few robotic devices that can\
    \ successfully perform watering, planting, and\nweeding activities now exist.\
    \ FaRo (Cultivating RObot), a new smart robot based on a CNC\nmachine, has been\
    \ presented for automatic crop farming deprived of human involvement in\nagriculture.\
    \ What sets FaRo apart from other farming platforms is its capability to complete\n\
    the entire farming cycle, from sowing to harvesting. In addition, the FaRo harvesting\n\
    tool will be discussed and shown. FarmBot can only be used for a limited time,\
    \ from\nsowing to harvesting, after which the robot’s tool mount system will be\
    \ exchanged for crop\nharvest. In this example, the robot assumes the role of\
    \ a tomato collector. Both the FaRo\nharvesting robot and the unique kinematics\
    \ of the continuum manipulator design were\nthoroughly discussed. Due to implementation\
    \ problems, the robot’s design is currently in\nthe development stage. The objective\
    \ of the proposed system is to build a model with an\nintelligent agricultural\
    \ monitoring technique linked to the main database, and the robot\nwill have sufﬁcient\
    \ information to plant and cultivate crops without the need for human\nintervention\
    \ [36].\nA depth vision-based approach for detecting and placing truck containers\
    \ is proposed\nfor the joint harvesting system, along with three coordinate systems.\
    \ This method included\ndata preprocessing, point cloud poses transformation using\
    \ the SVD (singular value decom-\nposition) algorithm, upper edge segmentation\
    \ and projection, RANSAC (Random Sample\nConsensus) algorithm edge line extraction\
    \ and corner point positioning, and fusion and\nvisualization of results on the\
    \ depth image. Field trials show that the suggested approach\nis effective in\
    \ identifying and positioning vehicles. However, the study is restricted due\n\
    to its sensitivity to the appearance of truck containers and the presence of loud\
    \ sites in\nthe agricultural area. Autonomous driving and path planning in the\
    \ forage harvester’s\nunloading system is still challenging [37].\nIntelligent\
    \ robots have become extensively employed in various sectors as the in-\ntelligent\
    \ computer industry with automation expands. Currently, manual labor is still\n\
    used to harvest the majority of domestic crops. However, owing to constant worker\
    \ pay\nhikes, the manual picking technique increases the fruit farmer’s ﬁnancial\
    \ expenditures,\nand the appliances of robots in the farming business are challenging.\
    \ As a result, the\nsmart moveable robot picker has been introduced based on computer\
    \ vision machinery by\nincorporating the robot arm, selector, ﬂexible carrier,\
    \ track procedure, and the intelligence\nunit, which accomplishes the robot picker’s\
    \ travel channel coding, auto-judging the ripe\nfruit, and in addition a vision-based\
    \ binocular stereoscopic methodology employed for the\nfunctions of recognition\
    \ and placement. To begin with, precise segmentation recognition\nand maturity\
    \ evaluation of the target fruit is required for proper picking. Thus, the robot\n\
    picker may potentially replace human labor in manual picking. The most important\
    \ part\nof the recognition process is gathering fruit image samples, which is\
    \ performed using a\nCCD camera that shoots following the preprocessed fruit features\
    \ using image content.\nThe color model is then built up, and it separates the\
    \ fruit and surrounding surroundings\nusing segmentation technology before recognizing\
    \ the fruit. Additionally, it precisely traces\nAgronomy 2022, 12, 127\n11 of\
    \ 21\nand goes for the fruit location in relation to the three-dimensional coordinate\
    \ information\nprovided by the infrared source and the fruit contour and image\
    \ differences taken by\nthe two cameras simultaneously. To ﬁnish the picking operation,\
    \ it must program the\npath recognition to avoid the obstacle [38]. The overall\
    \ architecture of IoT-based fruit\nidentiﬁcation for harvesting is shown in Figure\
    \ 4.\nFigure 4. General architecture of IoT-based fruit detection for harvesting.\n\
    4. Open Issues and Key Challenges in Smart Agriculture\nThe problems of deploying\
    \ IoT-based agricultural systems are discussed in this section.\nThe sensors’\
    \ durability and cost are described. The IoT-based system requires a constant\n\
    source of electricity. Depending on the size, a lot of electricity may be required.\
    \ However,\nin rural and village communities, obtaining such electricity is challenging.\
    \ To meet the\nenergy requirement, alternative energy sources, such as solar and\
    \ wind, must be employed.\nThis will also raise the price signiﬁcantly. It is\
    \ necessary to have a dependable internet\nconnection in rural and village regions.\
    \ It is the most crucial aspect of establishing an\nIoT-based system. The connection\
    \ must have a sufﬁcient bandwidth to transport data in\naccordance with the application’s\
    \ requirements. Farmers need basic computer/tablet (HID\ndevice) training and\
    \ an understanding of how the IoT system operates. It is also necessary\nto provide\
    \ proper education on the unique IoT deployment in their farm [39].\nThere are\
    \ six major obstacles to developing a green IoT-based agriculture system,\ninvolving\
    \ infrastructure, mobility, maintenance, hardware, data privacy, data analytics,\
    \ and\ndata security. The selection of meters and sensors used for Internet of\
    \ Things tools is one\nof the hardware issues. As a result, many different sensors\
    \ may be utilized in Internet of\nThings applications, such as the water quality\
    \ sensor, humidity sensor, chemical sensor,\npressure sensor, temperature sensor,\
    \ and more. The data analytics problem is machine\nlearning, deep learning methods,\
    \ and prediction algorithm applications in smart agricul-\nture to produce a nutritional\
    \ suspension using IoT records. Routine sensor inspections\nof all Internet of\
    \ Things appliances are a maintenance issue while it may be certainly\nharmed\
    \ in the farm area. The mobility problem is related to 4G, 5G, WiFi, 6LowPan,\
    \ LoRa\nnetwork connection, which link sensors spread across a broad region in\
    \ the farm areas.\nSome infrastructural trials are developing and implementing\
    \ Internet of Things-connected\narchitectures that incorporate innovative technologies,\
    \ such as cloud and fog computing\nand network virtualization. Finally, the primary\
    \ issue in advancing smart agriculture based\non IoT is not physical maintenance\
    \ but rather ensuring security and privacy [8].\nAgronomy 2022, 12, 127\n12 of\
    \ 21\nThe UAVs that are linked wirelessly are subject to cyber-physical or harmful\
    \ assaults\nto fool the control signals due to open communication lines. Such\
    \ attempts represent a\nsigniﬁcant risk to the unmanned aerial vehicle system\
    \ in terms of private information\ncrash or theft, as well as mission failure.\
    \ Moreover, the faking of control signals may harm\nthe UAV mission and make it\
    \ harder to restore it. As a result, improving UAV wireless\ncommunication’s safety\
    \ and conﬁdentiality element, which necessitates in-depth research\nof security\
    \ concerns covering the entire network protocol layers [40], is an important\n\
    open subject.\nVisual harvesting of robots’ dynamic tracking of objects with great\
    \ precision remains\nan unresolved challenge. Further study should also aim to\
    \ enhance the precision placement\nand operation by merging smart behavior judgment,\
    \ adequate fault tolerance, robot vision\nwith artiﬁcial intelligence technology\
    \ for accurate placement, and function enhancement.\nThe recognition and location\
    \ accuracy are impacted when the crop situation is varied due\nto the lighting\
    \ and unconstrained circumstances of the ﬁeld ecosystem. A robot vision\napproach\
    \ would be efﬁcient in harvesting crops correctly to increase the success rate\
    \ of\nrobotic harvesting in such settings. The researchers used geometric features,\
    \ novel image\nalgorithms, and intelligent decision theory to address the challenges.\
    \ However, because\nmassive datasets are necessary to train efﬁcient deep learning\
    \ algorithms, further study\nis needed [33]. Table 3 presents a comparison of\
    \ the current state of the art on smart\nagriculture obstacles and beneﬁts.\n\
    Table 3. Research studies organized by goal, methodologies, and technology employed,\
    \ as well as\nobstacles and beneﬁts.\nAuthors\nResearch Purpose\nTechnology\n\
    Used/Techniques\nFindings and Challenges\nAdvantages\n[13]\nWater management\n\
    Bluetooth, Wi-Fi, RFID,\nZigbee, Raspberry pi\nHuman interaction\nLabor cost\n\
    Water consumption\nCrop from irregular\nirrigation.\nCan identify the moisture,\n\
    humidity, and temperature.\nConsistent management of\nall the regions containing\n\
    severe parts.\n[14]\nIrrigation monitoring\nWSN, data\nAnalytics, node sensors\n\
    and web\nApplication\n-\nOptimal irrigation of the\nwater for\nfarming crops.\n\
    [20]\nCrop management\nIrrigation\nmanagement\nMobile technology,\nGPRS, Wi-Fi,\
    \ Raspberry\npi, Zig Bee\nUnstable weather\nwater shortage, irregular\nwater usage\n\
    Improve the yield, low cost\n[38]\nHarvesting nodes\nWSN, Solar\nenergy system.\
    \ Image\nprocessing technique.\n-\nPrevents data loss and\ncollusion,\nincreases\
    \ the lifetime of\nWSN.\n[41]\nCrop growth\ngreen-crop gCrop\nbased on ML model,\n\
    Wireless Sensor\nNetwork and Internet\nof Things\nObtained accuracy was\n98% using\
    \ polynomial of\nthird-degree of Regression\nmodel while the\ncomputation time\
    \ is very\nhigh.\n-\n[42]\nNutrient\nManagement\nRaspberry pi\nMobile technology\n\
    Wi-Fi\nLow or high watering.\nLack of nutrition\nmanagement.\nCan monitor weather\n\
    conditions.\nCost-effective\nAutomatically monitored\ndisease associated with\
    \ rice\nspecies.\nAgronomy 2022, 12, 127\n13 of 21\nTable 3. Cont.\nAuthors\n\
    Research Purpose\nTechnology\nUsed/Techniques\nFindings and Challenges\nAdvantages\n\
    [43]\nCrop Productivity\nBig data\nstorage and analytics,\nIoT, Data\nMining,\
    \ Cloud\ncomputing, Data\nAnalytics.\n-\nNetwork architecture,\nplatform\nand\
    \ design helps access to\nIoT,\nimproves crop productivity,\nProvides an overview\
    \ of\nIoT\napplications, sensors,\nprotocols\nAnd data-enabled\ntechnologies.\n\
    One of the most challenging aspects of robotic grasping is estimation. Traditional\n\
    techniques have limitations since noise or partial loss of the point cloud might\
    \ impact the\nestimation’s accuracy and resilience. Estimation is more difﬁcult\
    \ in orchard situations than\nit was in interior environments.\nData Handling\
    \ and Processing\nTraditional vision algorithms’ performance is constantly restricted\
    \ in complicated\nand volatile settings [34]. World food consumption is predicted\
    \ to treble by 2050 due to\npopulation expansion and societal progress, yet increasing\
    \ food production is now difﬁcult\ndue to declining water, climate alterations,\
    \ less proper soil, and insects and illnesses. Pests\nand diseases have always\
    \ been signiﬁcant stumbling blocks to increased grain output.\nSatellite technology\
    \ is climate sensitive and has a limited illumination variation, making it\nchallenging\
    \ to satisfy the requirement for insects and infection management in farming\n\
    areas. Currently, low-altitude autonomous drones (offering excellent ﬂexibility\
    \ and image\nresolution) can satisfy the needs of agricultural insect and infection\
    \ management. In some\ncircumstances, such as when there is a high wind, drone\
    \ stability might be difﬁcult. As a\nresult, the drone’s ﬂight route must be designed\
    \ in conjunction with the actual conditions.\nLong ﬂights are necessary for ﬁeld\
    \ pest and disease data collection; thus, choosing a sunny\nday with a moderate\
    \ breeze might be a viable alternative [32]. Identifying malicious and\ncompromised\
    \ nodes among soil sensors interacting with the base station is a signiﬁcant\n\
    problem in the base station to cloud communications. The trust management method\
    \ is\npresented as one of the options for identifying these nodes in a lightweight\
    \ manner.\nFinally, the study highlighted the existing problems and possibilities\
    \ and future re-\nsearch in vegetable and fruit identiﬁcation and placement. The\
    \ majority of previous research\nshowed that illumination variations, grouping,\
    \ and unconstrained situations have been the\nmain obstacles to effective recognition\
    \ and localization of vegetables and fruits in the ﬁeld.\nFurther research will\
    \ be required to overcome the existing state-of-the-art challenges and\nenhance\
    \ the performance, accuracy, efﬁciency, effectiveness, recognition, and success\
    \ rate\nof controlling and image processing techniques. However, fruit recognition,\
    \ detection, posi-\ntioning, harvesting robots, and application robustness enhancement\
    \ need to minimize the\ninclusive computational cost and time. Future research\
    \ might include algorithms and cam-\nera operation advancements, sensor platforms\
    \ that can enhance illumination consistently,\nhorticultural changes, and human–machine\
    \ collaboration [29]. Furthermore, sophisticated\nmethodologies, algorithms, and\
    \ computational approaches are necessary to address the\nlack of precision in\
    \ harvesting operations.\n5. Discussion and Analysis\nIt is estimated that plant\
    \ diseases are a signiﬁcant contributor to global ﬁnancial\ndeﬁcits. Numerous\
    \ abiotic and biotic stresses and continual tension monitoring concerns\nthe impacts\
    \ of the loss of fruit-producing plants. Consequently, the $15 billion U.S. apple\n\
    Agronomy 2022, 12, 127\n14 of 21\nindustry loses millions of dollars every year.\
    \ Fruits are one of the most signiﬁcant sources\nof nutrients in plants; yet,\
    \ illnesses, pests, fungous, infectious, and microbial diseases all\naffect the\
    \ quality and quantity of fruits. Using computer vision-based methods, the issue\n\
    may now be alleviated. Diseases/infections may be detected early and effectively\
    \ using\nthese methods.\nThe sickness classiﬁcation of various fruit leaves was\
    \ achieved using a deep convolu-\ntional neural network DCNN approach. The deep\
    \ features are retrieved by ﬁrst utilizing\ndeep learning networks, such as AlexNet\
    \ and VGG-s, and then tweaked using a transfer\nlearning approach. Before the\
    \ selection step, a multi-level fusion strategy is offered, and\nthe chosen features\
    \ analyzed to produce the entropy basis features. To categorize the\nobtained\
    \ feature map, we employed a multi-SVM classiﬁer. The diseases investigated in\n\
    the experiments include apple rust, scab, black rot, peach bacterial spots, and\
    \ cherry pow-\ndery mildew, and they were all gathered from a plant village dataset.\
    \ The recommended\nmethod’s better performance in terms of a 97.8% accuracy, 97.6%\
    \ sensitivity, 97.6% precision,\nand G-measure was observed in the classiﬁcation\
    \ results (97.6%) [44]. Some research has\ninvestigated whether computer vision\
    \ approaches may be employed for scalable and early\nplant sickness detection.\
    \ There is still a critical lack of non-lab data sets that can be utilized\nto\
    \ allow vision-based plant disease detection. For visual plant disease identiﬁcation,\
    \ the\nPlantDoc dataset was supplied. The collection has 2598 data points in total,\
    \ encompassing\n13 plant species and up to 17 disease categories, and was developed\
    \ by annotating internet-\nscraped photos for 300 human hours. Three models for\
    \ plant disease classiﬁcation were\ntrained to illustrate the dataset’s effectiveness.\
    \ The ﬁndings demonstrate that employing\nour dataset models may enhance the recognition\
    \ rate by up to 31%. The recommended\ndataset, we feel, will contribute to decreasing\
    \ the entry barrier for computer vision algo-\nrithms in plant disease detection.\
    \ For photos featuring leaves from various classes in a\ndataset with contextual\
    \ noise, and low-resolution leaf images, the model fails to give proper\nconclusions.\
    \ Using image segmentation methods to extract leaves from the photos can\nboost\
    \ the dataset’s utility. Although the dataset has been rigorously veriﬁed, particular\n\
    photographs in the collection may be wrongly labeled owing to a lack of sufﬁcient\
    \ topic\nknowledge [45].\nIt is necessary to construct an improved VGG16-based\
    \ DCNN model to detect apple\nleaf diseases (scab, frogeye spots, and cedar rust).\
    \ The global average pooling layer re-\nplaces the fully connected layer to lessen\
    \ restrictions and a batch normalization layer is\nattached to boost the model’s\
    \ computational performance. Furthermore, to avoid a long\ntraining time, a transfer\
    \ learning approach is applied. To detect apple leaf diseases, the\nsuggested\
    \ model makes use of 2446 apple leaves, 2141 photos in the training phase and\
    \ 305\nimages in the testing phase. The experimental data reveal that utilizing\
    \ the recommended\napproach, the total accuracy of apple leaf classiﬁcation may\
    \ reach 99.01%. Furthermore,\nthe ﬁndings demonstrate that cedar rust is accurately\
    \ diagnosed, but one healthy person is\nmisclassiﬁed as scab and the other as\
    \ frogeye spots.\nFurthermore, the model parameters are cut by 89% compared to\
    \ the standard VGG16.\nAs a result, the classiﬁcation performance is raised by\
    \ 6.3%, and the computational com-\nplexity is cut to 0.56% of the innovative\
    \ model. Consequently, the DCNN model developed\nin this study provides a more\
    \ accurate and speedier way for recognizing apple leaf infec-\ntions [46]. Table\
    \ 4 compares the efﬁciency of several smart agricultural techniques.\nAgronomy\
    \ 2022, 12, 127\n15 of 21\nTable 4. Comparative analysis of different methods\
    \ based on smart agriculture.\nRef.\nTechnique Dataset\nDisease Classes\nAccuracy\n\
    Sensitivity\nPrecision\nRecall\nF1 Mea-\nsure\nG Mea-\nsure\n[44]\nDCNN\n[VGG\
    \ +\nAlexNet]\nplant\nvillage\ndataset\n5 (apple rust, scab\nblack rot, cherry\n\
    powdery mildew, and\npeach bacterial spots)\n97.8%\n97.6%\n97.6%\n-\n-\n97.6%\n\
    [46]\nDCNN\n[en-\nhanced\nVGG16]\n2446\napple\nleaves\n4 (apple leaf diseases\n\
    (Scab, frogeye spots,\ncedar rust and healthy)\n99.01%\n-\n99.02%\n99.02%\n99.02%\n\
    -\n[47]\nenhanced\nCNN\n[AlexNet]\nEnhanced\nPlant\nVillage\n52\n99.11%\n-\n99.49%\n\
    99.11%\n99.29%\n-\n[48]\nIoT\n[WSNs\n+ ML\nalgo-\nrithms]\nDifferent\ndata\n-\n\
    81.6%\n-\n-\n-\n-\n-\n[49]\nAlexNet\ndeep\nlearning\nalgo-\nrithm\n54,306\nimages\n\
    14 crop species and 26\ndiseases\n97.38%\n-\n97.42%\n97.37%\n97.36%\n[50]\nLeNet\n\
    DL tech-\nnique\n(X-\nFideo)\nPlantVillage\n3\n98.60%\n-\n98.82%\n97.18%\n96.89%\n\
    -\nFor the recognition and detection of olive diseases, such as peacock spot,\
    \ anthracnose,\nand canker, an improved convolutional neural network (CNN) dubbed\
    \ AlexNet was\nsuggested. Several innovations separate the proposed model from\
    \ others. It uses effective\nintelligent data preprocessing with a stable image\
    \ in each class, a transfer learning approach,\nand an extended and upgraded PlantVillage\
    \ dataset to work in more complicated situations.\nThe total accuracy of the suggested\
    \ technique is 99.11%, which is the best possible score.\nFurthermore, it possesses\
    \ precision, recall, and F1 measures of 99.49%, 99.11%, and 99.29%,\nrespectively.\
    \ Despite the fact that model training takes a long time, classiﬁcation during\n\
    testing takes only a few seconds on a CPU [47]. Citrus fruits, leaves, and stems\
    \ are included\nin the image dataset. The collection contains images of normal\
    \ and diseased citrus leaves\nand fruits, including greening, scab, blackspot,\
    \ canker, and melanosis. There are 759 images\nof normal and abnormal citrus leaves\
    \ and fruits in the data collection. The images had\na resolution of 5202 × 3465\
    \ (Mpix), and when scaled at 72 dpi, the width and height\nwere 256 × 256 pixels,\
    \ correspondingly. The contaminated images were divided into four\nvarious citrus\
    \ illnesses and left on their own. The entire process consists of four major\n\
    steps: (a) enhancing the dataset using Top-hat and then Gaussian functions; (b)\
    \ weighted\nsegmentation and segmentation of lesion through a saliency map, which\
    \ highlights the\ninfested area; (c) color, texture, and geometric feature extraction\
    \ from the diseased area;\nand (d) PCA, skewness, and entropy-based feature selection\
    \ and implementation.\nAgriculture management, water contamination, and air quality\
    \ analysis monitoring\nsystems were all investigated as part of the smart environment\
    \ monitoring (SEM) system.\nFigure 5 demonstrates that substantial investigation\
    \ of smart environment monitoring\nhas increased over the period in both cases,\
    \ speciﬁcally research involving the wireless\nsensor network and Internet of\
    \ Things along with research involving machine learning and\nInternet of Things\
    \ [41,51].\nAgronomy 2022, 12, 127\n16 of 21\nFigure 5. Research contribution\
    \ using IoT, WSN, and machine learning.\nImperfect network access, lack of a (or\
    \ no) power supply, and high framework costs\ncompared to an ordinary farmer’s\
    \ income were presented in a low-cost, energy-proﬁcient,\nprotected, dependable,\
    \ and heterogeneous three-layer approach for Internet of Things-\nbased smart\
    \ agriculture. IoT devices make up the ﬁrst layer, including IoT-based smart\n\
    agriculture monitoring like insect detection, theft detection, crop monitoring,\
    \ smart ir-\nrigation, smart poultry, food supply chain, and food preservation\
    \ monitoring systems.\nThe low-power LoRaWAN network connects the IoT devices\
    \ to the gateways. The next\nlayer is made up of local processing servers and\
    \ gateways that are connected with the\ngateways. The cloud layer, which uses\
    \ the publicly available FIWARE framework to offer a\nset of open-source API standards,\
    \ is the third layer. This study aimed to create diagnostic\ntechniques for packet\
    \ combination procedures at the fog node before they were sent over\nthe network\
    \ facility to cloud servers. This aims to decrease short IoT packet processing\n\
    overheads and optimize energy usage at the backbone, as billions of IoT devices\
    \ linked to\nfog nodes are projected to generate massive volumes of short IoT\
    \ packets [52].\nA Cuckoo Search Algorithm has been created, allowing water allocated\
    \ for farming\nunder all situations. Temperature, turbidity, pH, and moisture\
    \ were collected utilizing the\nInternet of Things (IoT) infrastructure outﬁtted\
    \ with wireless communication devices and\nsensors. ThingSpeak presented the sensor\
    \ data in the cloud system in this IoT platform.\nThe ThingSpeak data was utilized\
    \ in the suggested Cuckoo Search Algorithm, which\nidentiﬁed suitable yields for\
    \ a given soil [53]. Incorrect or late identiﬁcation can result in\noveruse or\
    \ underuse of chemicals, resulting in higher production costs and environmental\n\
    and health consequences. With varied lighting, angles, surfaces, noise, and high\
    \ resolutions,\n3651 real-time indication images of various apple infections were\
    \ manually collected.\nA subset of this dataset was labeled by experts, such as\
    \ cedar apple rust, scab, and normal\nleaves, and open-sourced for the Plant Pathology\
    \ Challenge to Kaggle community. We also\nused this data to train a standard CNN\
    \ (convolutional neural network), which obtained\n97% recognition on a held-out\
    \ test set and a maximum AUC value of 0.986. The project’s\ngoal was to keep adding\
    \ additional images to the pilot dataset from various perspectives,\nlighting,\
    \ and distances to create a bigger more complete labeled database by experts.\n\
    The dataset will contain pests and diseases, such as apple mites and aphids and\
    \ apple\nleaves comprising apple marssonina and alternaria leaf blotch, leaf spot,\
    \ frogeye, rot, cedar,\nand powdery mildew, ﬁre blight, and scab-labeled images.\n\
    Additionally, it will be photographed and remarked on fruit infected with apple\
    \ brown\nrot, bitter rot, or scab [54]. An Internet of Things-based cost-effective\
    \ monitoring system\nwas developed to address particular crop irrigation, soil\
    \ erosion, and irregular irrigation.\nAgronomy 2022, 12, 127\n17 of 21\nThe suggested\
    \ method entails building a distributed WSN (wireless sensor network), with\n\
    multiple sensor modules covering each part of the farm and transferring data to\
    \ a central\nserver. ML techniques will aid irrigation pattern forecasts based\
    \ on yields and climate\nenvironments. According to a comparison of several algorithms,\
    \ random forest regression\nhas a decent accuracy of 81.6%. However, due to harsh\
    \ weather conditions, the system\nis constrained in many ways: the forecast accuracy\
    \ is dependent on the setup’s correct\ninstallation, and the threat of wild animals\
    \ can harm the hardware setup [48]. Because\nhuman abilities and agricultural\
    \ gear are severely restricted compared to robot knowledge,\nrobotic systems in\
    \ agriculture can be highly beneﬁcial in achieving both high quality\nand quantity\
    \ goods. To integrate IoT systems with agricultural machinery, a new way\nof managing\
    \ control signals from the control system to the actuators is required. These\n\
    methods should increase economic viability while also lowering environmental impact\
    \ and\nenhancing food sustainability. It handles various agricultural tasks, including\
    \ moisture\nsensing, irrigation, crop monitoring, and insect and animal defense\
    \ [55]. Accordingly, a\nstate-of-the-art technologies-based accuracy comparison\
    \ is presented in Figure 6.\nFigure 6. Accuracy-based analysis of the different\
    \ state of the art techniques.\nWater monitoring is the most highly measured IoT\
    \ sub-vertical, followed by crop,\nsmart agriculture, animal, and irrigation monitoring.\
    \ All of these have the same proportion\nof peer-reviewed articles exploring the\
    \ possible uses of the Internet of Things. According\nto the ﬁndings, the most\
    \ important sensor data for measurement is 15.73% soil moisture,\n19.79% humidity,\
    \ and 24.87% ambient temperature. However, further sensor information,\nsuch as\
    \ soil pH and moisture, are also collected for IoT applications. Wi-Fi has the\
    \ highest\nclaimed use in farming and agriculture, with 30.27% and 21.10% use\
    \ of mobile tools, as\nshown in Figure 7. Other technologies like Bluetooth, WSN,\
    \ RFID, Raspberry Pi, ZigBee,\nLoRa, and GPRS are less popular in the agriculture\
    \ and farming industries. In the agri-\ncultural and farming business comparison,\
    \ the farming sector uses IoT for automation\nslower [42]. The Plant Server and\
    \ User View were created with phpMyAdmin to manage\nMySQL server management. The\
    \ F-RCNN-qualiﬁed model for anomaly detection had\n80% conﬁdence, while the technique\
    \ for the transfer of learning illness had 95.75% accu-\nAgronomy 2022, 12, 127\n\
    18 of 21\nracy. In reality, automatic image capturing software was deployed, and\
    \ the RCNN model\nsuccessfully recognized 91.67% of tomato plant illnesses [56].\n\
    Figure 7. An overview of 60 published articles on sensor and technology-based\
    \ data collection, as\nwell as a comparison of agriculture and farming utilizing\
    \ IoT.\n6. Conclusions and Future Directions\nThe implementation of sustainable\
    \ communication technologies and sensors based on\nIoT is necessary to increase\
    \ agricultural productivity. Wireless sensors, unmanned aerial\nvehicles, and\
    \ cloud computing have been shown to be practical tools for guaranteeing\nlong-term\
    \ agricultural productivity. Many processes throughout the production cycle,\n\
    including irrigation, soil sample and mapping, fertilizer or pest control, yield\
    \ monitoring,\nforecasting, and harvesting, may be automated using smart devices,\
    \ allowing for improved\ncrop quality and growth capacity. The key effective features,\
    \ important applications, IoT-\nbased smart agriculture technology and equipment,\
    \ and open barriers and possibilities\nwere all examined in this study. This research\
    \ will be expanded in the future to include\nsecurity and privacy issues in smart\
    \ agriculture using IoT methods.\nAuthor Contributions: All authors contributed\
    \ equally and scientiﬁcally. All authors have read and\nagreed to the published\
    \ version of the manuscript.\nFunding: No speciﬁc funding received for this research.\n\
    Acknowledgments: This research is supported by Artiﬁcial Intelligence & Data Analytics\
    \ Lab (AIDA)\nCCIS Prince Sultan University, Riyadh, Saudi Arabia. The authors\
    \ also would like to acknowl-\nedge the support of Prince Sultan University for\
    \ paying the Article Processing Charges (APC) of\nthis publication.\nConﬂicts\
    \ of Interest: There is no conﬂict of interest to declare.\nAgronomy 2022, 12,\
    \ 127\n19 of 21\nReferences\n1.\nMukhtar, H.; Khan, M.Z.; Khan, M.U.G.; Saba,\
    \ T.; Latif, R. Wheat Plant Counting Using UAV Images Based on Semi-supervised\n\
    Semantic Segmentation. In Proceedings of the 2021 1st International Conference\
    \ on Artiﬁcial Intelligence and Data Analytics\n(CAIDA), Riyadh, Saudi Arabia,\
    \ 6–7 April 2021; pp. 257–261.\n2.\nKhan, M.A.; Akram, T.; Sharif, M.; Alhaisoni,\
    \ M.; Saba, T.; Nawaz, N. A probabilistic segmentation and entropy-rank correlation-\n\
    based feature selection approach for the recognition of fruit diseases. EURASIP\
    \ J. Image Video Process. 2021, 2021, 14. [CrossRef]\n3.\nKhan, M.A.; Akram, T.;\
    \ Sharif, M.; Awais, M.; Javed, K.; Ali, H.; Saba, T. CCDF: Automatic system for\
    \ segmentation and\nrecognition of fruit crops diseases based on correlation coefﬁcient\
    \ and deep CNN features. Comput. Electron. Agric. 2018, 155,\n220–236. [CrossRef]\n\
    4.\nSafdar, A.; Khan, M.A.; Shah, J.H.; Sharif, M.; Saba, T.; Rehman, A.; Javed,\
    \ K.; Khan, J.A. Intelligent microscopic approach for\nidentiﬁcation and recognition\
    \ of citrus deformities. Microsc. Res. Tech. 2019, 82, 1542–1556. [CrossRef] [PubMed]\n\
    5.\nSinha, B.B.; Dhanalakshmi, R. Recent advancements and challenges of Internet\
    \ of Things in smart agriculture: A survey. Futur.\nGener. Comput. Syst. 2022,\
    \ 126, 169–184. [CrossRef]\n6.\nKolivand, H.; Fern, B.M.; Saba, T.; Rahim, M.S.M.;\
    \ Rehman, A. A New Leaf Venation Detection Technique for Plant Species\nClassiﬁcation.\
    \ Arab. J. Sci. Eng. 2019, 44, 3315–3327. [CrossRef]\n7.\nFriha, O.; Ferrag, M.A.;\
    \ Shu, L.; Maglaras, L.; Wang, X. Internet of Things for the Future of Smart Agriculture:\
    \ A Comprehensive\nSurvey of Emerging Technologies. IEEE/CAA J. Autom. Sin. 2021,\
    \ 8, 718–752. [CrossRef]\n8.\nKianat, J.; Khan, M.A.; Sharif, M.; Akram, T.; Rehman,\
    \ A.; Saba, T. A joint framework of feature reduction and robust feature\nselection\
    \ for cucumber leaf diseases recognition. Optik 2021, 240, 166566. [CrossRef]\n\
    9.\nSaba, T.; Rehman, A.; AlGhamdi, J.S. Weather forecasting based on hybrid neural\
    \ model. Appl. Water Sci. 2017, 7, 3869–3874.\n[CrossRef]\n10.\nSharma, Y.; Tyagi,\
    \ V.; Datta, P. IoT based smart agriculture monitoring system. Int. J. Innov.\
    \ Technol. Explor. Eng. 2020, 9, 325–328.\n11.\nFern, B.M.; Rahim, M.S.M.; Saba,\
    \ T.; Almazyad, A.S.; Rehman, A. Stratiﬁed classiﬁcation of plant species based\
    \ on venation state.\nBiomed. Res. 2017, 28, 5660–5663.\n12.\nSudarshan, K.; Hegde,\
    \ R.R.; Sudarshan, K.; Patil, S. Smart agriculture monitoring and protection system\
    \ using IoT. Perspect.\nCommun. Embed. Syst. Signal Process. PiCES 2019, 2, 308–310.\n\
    13.\nRajaram, K.; Sundareswaran, R. IoT Based Crop-Field Monitoring and Precise\
    \ Irrigation System Using Crop Water Requirement.\nIn International Conference\
    \ on Computational Intelligence in Data Science; Springer: Cham, Switzerland,\
    \ 2020; pp. 291–304.\n14.\nAbba, S.; Wadumi Namkusong, J.; Lee, J.A.; Liz Crespo,\
    \ M. Design and Performance Evaluation of a Low-Cost Autonomous\nSensor Interface\
    \ for a Smart IoT-Based Irrigation Monitoring and Control System. Sensors 2019,\
    \ 19, 3643. [CrossRef]\n15.\nKamaruddin, F.; Abd Malik, N.N.N.; Murad, N.A.; Latiff,\
    \ N.M.A.A.; Yusof, S.K.S.; Hamzah, S.A. IoT-based intelligent irrigation\nmanagement\
    \ and monitoring system using Arduino. Telkomnika 2019, 17, 2378–2388. [CrossRef]\n\
    16.\nAkshaya, M.; Kavipriya, P.R.; Yogapriya, M.; Karthikamani, R. IoT based fertilizer\
    \ injector for agricultural plants. Int. Res. J. Eng.\nTechnol. 2020, 7, 2950–2954.\n\
    17.\nReddy, H.S.; Hedge, G.; Chinnayan, D.R. IOT based leaf disease detection\
    \ and fertilizer recommendation. Int. J. Innov. Technol.\nExplor. Eng. 2019, 9,\
    \ 132–136.\n18.\nChavan, R.; Deoghare, A.; Dugar, R.; Karad, P. IoT Based Solution\
    \ for Grape Disease Prediction Using Convolutional Neural\nNetwork and Farm Monitoring.\
    \ Int. J. Sci. Res. Eng. Dev. 2019, 2, 494–500.\n19.\nBhoi, S.K.; Jena, K.K.;\
    \ Panda, S.K.; Long, H.V.; Kumar, R.; Subbulakshmi, P.; Bin Jebreen, H. An Internet\
    \ of Things assisted\nUnmanned Aerial Vehicle based artiﬁcial intelligence model\
    \ for rice pest detection. Microprocess. Microsyst. 2021, 80, 103607.\n[CrossRef]\n\
    20.\nGanesh, P.; Tamilselvi, K.; Karthi, P. Crop prediction by monitoring temperature\
    \ and rainfall using decision tree with IoT and\ncloud-based system. Proceedings\
    \ of the International Conference on Computational Intelligence and Data Science,\
    \ Gurugram, India, 7–8\nApril 2018, 1–9.\n21.\nTolentino, L.K. Yield evaluation\
    \ of Brassica rapa, Lactuca sativa, and Brassica integrifolia using image processing\
    \ in an IoT-based\naquaponics with temperature-controlled greenhouse. AGRIVITA\
    \ J. Agric. Sci. 2020, 42, 393–410. [CrossRef]\n22.\nVisconti, P.; Giannoccaro,\
    \ N.I.; de Fazio, R.; Strazzella, S.; Cafagna, D. IoT-oriented software platform\
    \ applied to sensors-based\nfarming facility with smartphone farmer app. Bull.\
    \ Electr. Eng. Inform. 2020, 9, 1095–1105. [CrossRef]\n23.\nKodali, R.K.; Rajanarayanan,\
    \ S.C.; Boppana, L. IoT based Weather Monitoring and Notiﬁcation System for Greenhouses.\n\
    In Proceedings of the 2019 11th International Conference on Advanced Computing\
    \ (ICoAC), Chennai, India, 18–20 December\n2019; pp. 342–345.\n24.\nArifﬁn, M.A.M.;\
    \ Ramli, M.I.; Amin, M.N.M.; Ismail, M.; Zainol, Z.; Ahmad, N.D.; Jamil, N. Automatic\
    \ Climate Control\nfor Mushroom Cultivation Using IoT Approach. In Proceedings\
    \ of the 2020 IEEE 10th International Conference on System\nEngineering and Technology\
    \ (ICSET), Shah Alam, Malaysia, 9 November 2020; pp. 123–128.\n25.\nNagamani,\
    \ P.; Sundari Jahnavi, M.; Govind Raju, N.N.; Bhanu Shankar, A.; Govind Reddy,\
    \ K.S. Smart Hydroponics Water\nMonitoring Using IoT. J. Emerg. Technol. Innov.\
    \ Res. 2019, 6, 114–120.\n26.\nJayasuriya, Y.P.; Elvitigala, C.S.; Wamakulasooriya,\
    \ K.; Sudantha, B. Low Cost and IoT Based Greenhouse with Climate Monitoring\n\
    and Controlling System for Tropical Countries. In Proceedings of the 2018 International\
    \ Conference on System Science and\nEngineering (ICSSE), New Taipei, Taiwan, 28–30\
    \ June 2018; pp. 1–6.\nAgronomy 2022, 12, 127\n20 of 21\n27.\nBoursianis, A.D.;\
    \ Papadopoulou, M.S.; Diamantoulakis, P.; Liopa-Tsakalidi, A.; Barouchas, P.;\
    \ Salahas, G.; Karagiannidis, G.;\nWan, S.; Goudos, S.K. Internet of Things (IoT)\
    \ and Agricultural Unmanned Aerial Vehicles (UAVs) in smart farming: A\ncomprehensive\
    \ review. Internet Things 2020, 100187. [CrossRef]\n28.\nOdesola, D.F.; Olivarez,\
    \ R.; Ramos, A.; Malolos, D.; Patrick, V.; Balba, N.P. Internet of things (IoT)\
    \ based home automated weather\nmonitoring system. LPU-Laguna J. Eng. Comput.\
    \ Stud. 2019, 4, 1–10.\n29.\nFu, L.; Gao, F.; Wu, J.; Li, R.; Karkee, M.; Zhang,\
    \ Q. Application of consumer RGB-D cameras for fruit detection and localization\n\
    in ﬁeld: A critical review. Comput. Electron. Agric. 2020, 177, 105687. [CrossRef]\n\
    30.\nDutta, J.; Dutta, J.; Gogoi, S. Smart farming: An opportunity for efﬁcient\
    \ monitoring and detection of pests and diseases. J.\nEntomol. Zool. Stud. 2020,\
    \ 8, 2352–2359.\n31.\nMaslekar, N.V.; Kulkarni, K.P.; Chakravarthy, A.K. Application\
    \ of Unmanned Aerial Vehicles (UAVs) for Pest Surveillance,\nMonitoring and Management.\
    \ In Innovative Pest Management Approaches for the 21st Century; Springer: Berlin,\
    \ Germany, 2020; pp.\n27–45.\n32.\nGao, D.; Sun, Q.; Hu, B.; Zhang, S. A Framework\
    \ for Agricultural Pest and Disease Monitoring Based on Internet-of-Things and\n\
    Unmanned Aerial Vehicles. Sensors 2020, 20, 1487. [CrossRef]\n33.\nTang, Y.; Chen,\
    \ M.; Wang, C.; Luo, L.; Li, J.; Lian, G.; Zou, X. Recognition and Localization\
    \ Methods for Vision-Based Fruit Picking\nRobots: A Review. Front. Plant Sci.\
    \ 2020, 11, 510. [CrossRef] [PubMed]\n34.\nKang, H.; Zhou, H.; Wang, X.; Chen,\
    \ C. Real-Time Fruit Recognition and Grasping Estimation for Robotic Apple Harvesting.\n\
    Sensors 2020, 20, 5670. [CrossRef]\n35.\nOgorodnikova, O.M.; Ali, W. Method of\
    \ ripe tomato detecting for a harvesting robot. In AIP Conference Proceedings;\
    \ AIP Publishing\nLLC: Melville, NY, USA, 2019.\n36.\nYeshmukhametov, A.; Al Khaleel,\
    \ L.; Koganezawa, K.; Yamamoto, Y.; Amirgaliyev, Y.; Buribayev, Z. Designing of\
    \ CNC Based\nAgricultural Robot with a Novel Tomato Harvesting Continuum Manipulator\
    \ Tool. Int. J. Mech. Eng. Robot. Res. 2020, 9, 876–881.\n[CrossRef]\n37.\nZhang,\
    \ W.; Gong, L.; Chen, S.; Wang, W.; Miao, Z.; Liu, C. Autonomous Identiﬁcation\
    \ and Positioning of Trucks during\nCollaborative Forage Harvesting. Sensors 2021,\
    \ 21, 1166. [CrossRef]\n38.\nLi, B.; Zhou, A.; Yang, C.; Zheng, S. The Design\
    \ and Realization of fruit Harvesting Robot Based on IOT. In Proceedings of the\n\
    2016 International Conference on Computer Engineering, Information Science & Application\
    \ Technology (ICCIA 2016); Atlantis Press:\nAmstelkade, AV, USA, 2016.\n39.\n\
    Rahaman, S.H.; Biswas, S. Advantages of Internet of Things (IoT) and It’s Applications\
    \ in Smart Agriculture System. Int. Res. J.\nAdv. Sci. Hub 2020, 2, 4–10. [CrossRef]\n\
    40.\nMishra, D.; Natalizio, E. A survey on cellular-connected UAVs: Design challenges,\
    \ enabling 5G/B5G innovations, and experimen-\ntal advancements. Comput. Netw.\
    \ 2020, 182, 107451. [CrossRef]\n41.\nUllo, S.L.; Sinha, G.R. Advances in Smart\
    \ Environment Monitoring Systems Using IoT and Sensors. Sensors 2020, 20, 3113.\n\
    [CrossRef]\n42.\nMadushanki, R.; Wirasagoda, H.; Halgamuge, M. Adoption of the\
    \ Internet of Things (IoT) in agriculture and smart farming\ntowards urban greening:\
    \ A review. Int. J. Adv. Comput. Sci. Appl. (IJACSA) 2019, 1. [CrossRef]\n43.\n\
    Vikranth, K. An Implementation of IoT and Data Analytics in Smart Agricultural\
    \ System—A Systematic Literature Review. Int. J.\nManag. Technol. Soc. Sci. 2021,\
    \ 6, 41–70. [CrossRef]\n44.\nKhan, M.A.; Akram, T.; Sharif, M.; Saba, T. Fruits\
    \ diseases classiﬁcation: Exploiting a hierarchical framework for deep features\n\
    fusion and selection. Multimed. Tools Appl. 2020, 79, 25763–25783. [CrossRef]\n\
    45.\nSingh, D.; Jain, N.; Jain, P.; Kayal, P.; Kumawat, S.; Batra, N. PlantDoc:\
    \ A dataset for visual plant disease detection. In Proceedings\nof the 7th ACM\
    \ IKDD CoDS and 25th COMAD, Hyderabad, India, 5–7 January 2020; pp. 249–253.\n\
    46.\nYan, Q.; Yang, B.; Wang, W.; Wang, B.; Chen, P.; Zhang, J. Apple Leaf Diseases\
    \ Recognition Based on an Improved Convolutional\nNeural Network. Sensors 2020,\
    \ 20, 3535. [CrossRef]\n47.\nAlruwaili, M.; Alanazi, S.; Abd, S.; Shehab, A. An\
    \ Efﬁcient Deep Learning Model for Olive Diseases Detection. Int. J. Adv. Comput.\n\
    Sci. Appl. 2019, 10, 486–492. [CrossRef]\n48.\nVij, A.; Vijendra, S.; Jain, A.;\
    \ Bajaj, S.; Bassi, A.; Sharma, A. IoT and Machine Learning Approaches for Automation\
    \ of Farm\nIrrigation System. Procedia Comput. Sci. 2020, 167, 1250–1257. [CrossRef]\n\
    49.\nMohanty, S.P.; Hughes, D.P.; Salathé, M. Using Deep Learning for Image-Based\
    \ Plant Disease Detection. Front. Plant. Sci. 2016,\n7, 1419. [CrossRef] [PubMed]\n\
    50.\nCruz, A.C.; Luvisi, A.; De Bellis, L.; Ampatzidis, Y. X-FIDO: An Effective\
    \ Application for Detecting Olive Quick Decline Syndrome\nwith Deep Learning and\
    \ Data Fusion. Front. Plant. Sci. 2017, 8, 1741. [CrossRef] [PubMed]\n51.\nRauf,\
    \ H.T.; Saleem, B.A.; Lali, M.I.U.; Khan, M.A.; Sharif, M.; Bukhari, S.A.C. A\
    \ citrus fruits and leaves dataset for detection and\nclassiﬁcation of citrus\
    \ diseases through machine learning. Data Brief. 2019, 26, 104340. [CrossRef]\n\
    52.\nKuaban, G.S.; Czekalski, P.; Molua, E.L.; Grochla, K. An Architectural Framework\
    \ Proposal for IoT Driven Agriculture; Springer:\nBerlin, Germany, 2019; pp. 18–33.\n\
    53.\nPathak, A.; Uddin, M.A.; Abedin, J.; Andersson, K.; Mustafa, R.; Hossain,\
    \ M.S. IoT based Smart System to Support Agricultural\nParameters: A Case Study.\
    \ Procedia Comput. Sci. 2019, 155, 648–653. [CrossRef]\n54.\nThapa, R.; Snavely,\
    \ N.; Belongie, S.; Khan, A. The plant pathology 2020 challenge dataset to classify\
    \ foliar disease of apples. arXiv\n2020, arXiv:2004.11958.\nAgronomy 2022, 12,\
    \ 127\n21 of 21\n55.\nRomeo, L.; Petitti, A.; Marani, R.; Milella, A. Internet\
    \ of Robotic Things in Smart Domains: Applications and Challenges. Sensors\n2020,\
    \ 20, 3355. [CrossRef] [PubMed]\n56.\nSangeetha, S.K.B. Comparison of Crop Disease\
    \ Detection Methods-An intensive analysis. Psychol. Educ. J. 2021, 58, 10540–10546.\n"
  inline_citation: '>'
  journal: Agronomy
  limitations: '>'
  pdf_link: https://www.mdpi.com/2073-4395/12/1/127/pdf?version=1642508054
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: A Revisit of Internet of Things Technologies for Monitoring and Control Strategies
    in Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22093273
  analysis: '>'
  authors:
  - Amsale Zelalem Bayih
  - Javier Morales
  - Yaregal Assabie
  - R.A. de By
  citation_count: 19
  full_citation: '>'
  full_text: ">\nCitation: Bayih, A.Z.; Morales, J.;\nAssabie, Y.; de By, R.A. Utilization\
    \ of\nInternet of Things and Wireless\nSensor Networks for Sustainable\nSmallholder\
    \ Agriculture. Sensors\n2022, 22, 3273. https://doi.org/\n10.3390/s22093273\n\
    Academic Editor: Lei Shu\nReceived: 14 March 2022\nAccepted: 21 April 2022\nPublished:\
    \ 24 April 2022\nPublisher’s Note: MDPI stays neutral\nwith regard to jurisdictional\
    \ claims in\npublished maps and institutional afﬁl-\niations.\nCopyright:\n© 2022\
    \ by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article is an open\
    \ access article\ndistributed\nunder\nthe\nterms\nand\nconditions of the Creative\
    \ Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nUtilization of Internet of Things and Wireless Sensor\
    \ Networks\nfor Sustainable Smallholder Agriculture\nAmsale Zelalem Bayih 1,2,*,†\n\
    , Javier Morales 1,†\n, Yaregal Assabie 2,†\nand Rolf A. de By 1,†\n1\nDepartment\
    \ of Geo-Information Processing, Faculty of Geo-Information Science and Earth\
    \ Observation (ITC),\nUniversity of Twente, P.O. Box 217, 7500 AA Enschede, The\
    \ Netherlands; j.morales@utwente.nl (J.M.);\nr.a.deby@utwente.nl (R.A.d.B.)\n\
    2\nDepartment of Computer Science, College of Natural and Computational Sciences,\
    \ Addis Ababa University,\nAddis Ababa P.O. Box 1176, Ethiopia; yaregal.assabie@aau.edu.et\n\
    *\nCorrespondence: a.z.bayih@utwente.nl or amsale.zelalem@aau.edu.et\n†\nThese\
    \ authors contributed equally to this work.\nAbstract: Agriculture is the economy’s\
    \ backbone for most developing countries. Most of these\ncountries suffer from\
    \ insufﬁcient agricultural production. The availability of real-time, reliable\
    \ and\nfarm-speciﬁc information may signiﬁcantly contribute to more sufﬁcient\
    \ and sustained production.\nTypically, such information is usually fragmented\
    \ and often does ﬁt one-on-one with the farm or farm\nplot. Automated, precise\
    \ and affordable data collection and dissemination tools are vital to bring such\n\
    information to these levels. The tools must address details of spatial and temporal\
    \ variability. The\nInternet of Things (IoT) and wireless sensor networks (WSNs)\
    \ are useful technology in this respect.\nThis paper investigates the usability\
    \ of IoT and WSN for smallholder agriculture applications. An\nin-depth qualitative\
    \ and quantitative analysis of relevant work over the past decade was conducted.\n\
    We explore the type and purpose of agricultural parameters, study and describe\
    \ available resources,\nneeded skills and technological requirements that allow\
    \ sustained deployment of IoT and WSN\ntechnology. Our ﬁndings reveal signiﬁcant\
    \ gaps in utilization of the technology in the context of\nsmallholder farm practices\
    \ caused by social, economic, infrastructural and technological barriers. We\n\
    also identify a signiﬁcant future opportunity to design and implement affordable\
    \ and reliable data\nacquisition tools and frameworks, with a possible integration\
    \ of citizen science.\nKeywords: Internet of Things; wireless sensor network;\
    \ affordable digital data infrastructure;\ntechnology assist in smallholder data\
    \ acquisition; smart agriculture\n1. Introduction\nAgriculture contributes more\
    \ than 25% to the gross domestic product (GDP) [1] and\n55% to employment opportunities\
    \ in developing countries [2]. It is thus a prominent sector\nto target poverty\
    \ reduction, and is crucial for economic global policy-making. Smallholder\nfarming\
    \ forms a signiﬁcant component of this sector with a food production rate of more\n\
    than 70% globally and more than 60% in developing countries [3]. For instance,\
    \ in Ethiopia,\nsmallholder farming accounts for about 95% of total agricultural\
    \ production of the coun-\ntry [4]. An estimated 2.5 billion people practice smallholder\
    \ agriculture and, in doing so,\nmanage about 510 million farms [5].\nSmallholder\
    \ farmers often own a fragment of farmland and operate under perilous\nconditions\
    \ due to their heavy reliance on ecosystem services that can be scarce and poten-\n\
    tially show signs of degradation [6,7]. Unpredictable and extreme weather conditions\
    \ may\nbring drought or ﬂooding, which lead to soil erosion and depletion, hindering\
    \ farms from\noperating at full potential [8]. The limited ﬁnancial capacity of\
    \ smallholder farmers also\nmeans that their investments in yield-improving mechanisms\
    \ are restricted. As a result,\nan area of focus in these communities is an affordable\
    \ means to increase farm production\nwith efﬁcient and sustained utilization of\
    \ available resources [6].\nSensors 2022, 22, 3273. https://doi.org/10.3390/s22093273\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 3273\n2 of 31\nThe development\
    \ of context-speciﬁc solutions is critical to improve and sustain better\nproduction\
    \ by smallholders. It is important to invest in agricultural practices that can,\
    \ not\nonly provide for future generations, but are also climate-resilient [9,10].\
    \ Such approach\nrequires a data richness that comes directly from the farm allowing\
    \ informed decision-\nmaking on issues such as how to prepare land, what to plant,\
    \ how much to consume and\nhow much to sell or store [11]. Real-time information\
    \ on farming systems, soil and crop\nhealth, water management, livestock management,\
    \ and agro-climatic attributes such as\nrainfall and soil moisture could enable\
    \ smallholder farmers to practice more sustainably\nand increase their productivity.\n\
    Sustainable agriculture consists of practices that opt to meet present and future\
    \ food\ndemands while fulﬁlling social and economic equity, protecting environmental\
    \ health\nand increasing proﬁtability [9,12,13]. Sustainable agriculture and optimization\
    \ of farm\nyield needs better understanding of local and farm level contexts of\
    \ farm production\nand productivity parameters, of which some are variable in\
    \ space and over time. At the\nsame time, most smallholder farms are found in\
    \ rural areas, which often display poor\ninfrastructure and sites are often inaccessible,\
    \ challenging the collection of these data. As a\nresult, information produced\
    \ is rarely complete and often does not quite ﬁt with farm levels.\nEven when\
    \ data are available it is commonly outdated and not representative of current\n\
    situations. Consequently, intuitive farming decisions and traditional farm practices\
    \ persist\namong associated communities and cause over-exploitation of the scarce\
    \ resources leading\nto poor production [14]. Thus, viable technological approaches\
    \ that are easily adoptable\nand reliable are needed for the efﬁcient acquisition\
    \ of in situ farm data. With proper\nenabling tools, such data can be obtained\
    \ affordably [11].\nRecently, with the advent of technology and powerful computing\
    \ infrastructures, it\nhas become possible to obtain, analyze, and generate sound\
    \ agricultural information in a\ncost-effective and timely manner. Remote sensing\
    \ (RS), proximal sensing (PS) and in-ﬁeld\nsensing (IfS) paved the way for enhanced\
    \ data acquisition complementing conventional\napproaches such as survey and physical\
    \ ﬁeld observation [15,16]. A detailed discussion of\neach approach is presented\
    \ in Section 3. The large spatial and temporal coverage and recent\nadvances in\
    \ high-resolution imagery, has made satellite technology indispensable to capture\n\
    farm-related data remotely. Recent works have shown how RS platforms like Sentinel-1/-2\n\
    and MODIS can be used to efﬁciently capture farm data [17–19]. PS technology,\
    \ with more\ncloser look than RS, is effectively utilized for better farm observation,\
    \ agricultural disaster\nmanagement, and agricultural land classiﬁcation [20,21].\
    \ IfS with spatially dispersed\nnetwork of small, inexpensive, and efﬁcient sensing\
    \ devices, known as wireless sensor\nnetworks (WSN) and the Internet of Things\
    \ (IoT) has created opportunities for precise farm\nmonitoring [22,23].\nVarious\
    \ authors have reported the effective utilization of WSN and IoT for soil data\n\
    collection in large-scale farming [24–27]. It remains unclear how effective the\
    \ case can\nbe in smallholder agriculture. Thus, this paper aims to establish\
    \ scientiﬁc understand-\ning concerning:\n1.\nWhether IoT and WSN can also be\
    \ used and potentially beneﬁt smallholder farming\n2.\nWhether the immediate data\
    \ needs of the smallholder farmer are addressed, and\n3.\nWhich design and implementation\
    \ issues need to be considered for IoT and WSN\napplication in smallholder agriculture.\n\
    To this effect, we analyze literature on the state-of-the-art over the past ten\
    \ years,\n2011–2021. The analysis is done through a comprehensive literature review\
    \ and presented\nin sections below. The paper summarizes prior research work,\
    \ explores key limitations\nand prospects, and identiﬁes knowledge gaps. This\
    \ work also proposes a high-level,\nWSN-based IoT architecture for agricultural\
    \ application and discusses the challenges and\nopportunities related to IoT implementation\
    \ in smallholder agriculture. Published journals,\nwhite papers, conference proceedings\
    \ and real systems are the inputs to our work.\nThe remainder of this paper is\
    \ organized as follows. Section 2 describes the unique\ncharacteristics of smallholder\
    \ farms and the main factors affecting their productivity.\nSensors 2022, 22,\
    \ 3273\n3 of 31\nSection 3 discusses relevant approaches to data collection in\
    \ smallholder agriculture.\nWith these, we aim to layout a better insight of the\
    \ target population and bring about\nthe data gaps that needs to be ﬁlled. The\
    \ literature search methodology is explained in\nSection 4. An in-depth analysis\
    \ of the use of IoT and WSN in smallholder agriculture,\nbased on reviewed literature\
    \ and a high-level system architecture are presented in Section 5.\nDiscussion\
    \ and possible opportunities and challenges are discussed in Sections 6 and 7,\n\
    respectively. Section 8 presents our conclusions. The overall workﬂow of the paper\
    \ is\nshown in Figure 1.\n \n \n \nIntroduction \nBackground \nLiterature \nsearch\
    \ \nIoT in \nsmallholder \nagriculture \nDiscussion \nChallenges \nand \nopportunities\
    \ \nConclusion \nStart \nCharacteristics \nof smallholder \nagriculture \nData\
    \ \nacquisition in \nsmallholder \nagriculture \nSearch \nmethodology \nResults\
    \ \nProposed \narchitecture \nReview \nanalysis \nFigure 1. Schematic workﬂow\
    \ representation of the proposed work.\n2. Characteristics of Smallholder Agriculture\n\
    Smallholder farmers are often characterized as being conservative, tech-resistant\
    \ and\nshowing a low adoption rate to innovations [28]. It is important to understand\
    \ the root\ncauses for these which may lie in the community. With this knowledge,\
    \ we may avoid\nthe incongruity between technology adoption and actual farmers’\
    \ conditions. Certain\nfarm or farming characteristics are common amongst smallholders\
    \ and distinguish them\nfrom large-scale enterprise farming. Almost by deﬁnition,\
    \ land size is a key property.\nBased on this, smallholder farms are those practiced\
    \ on a small portion of land, 2 ha on\naverage [7,29]. Most smallholder farms\
    \ are also known to practice farming on the basis\nof natural biophysical conditions\
    \ to crop growth, such as rain [29], and to apply a mix of\ncrop growing and livestock\
    \ breeding. However, the extent of these characteristics may vary\nwith demographic\
    \ and economic conditions of the location, the ecological zone and other\nterrain\
    \ parameters [7]. A systematic, multi-criterion deﬁnition needs to be formulated\
    \ from\nsimilar characteristics exhibited by the farmers. These characteristics\
    \ can be categorized in\nfour dimensions:\n•\nSocial attitude;\n•\nThe use of\
    \ resources and infrastructure;\n•\nAwareness and preparedness;\n•\nProductivity.\n\
    2.1. Social Attitude\nFamily ownership, subsistence farming, risk avoidance, communal\
    \ information needs\nand reliance on extension services are social characteristics\
    \ of smallholder farms. Most\nsmallholder farms are run by a family and mostly\
    \ for the family’s subsistence with small\nproduction [7]. The condition of total\
    \ dependence on the farm to feed the family creates atti-\ntudes of considerable\
    \ risk avoidance and resistance to costly farming practices with farmers.\nConsequently,\
    \ there is slow adoption of technology and new farming approaches [28]. In-\n\
    stead, low-return but sustained production practice is preferred over technology-supported\n\
    farming by most smallholders [7].\nSome forms of information provide added value\
    \ when shared amongst members\nof the farmer community. Adjacent plots owned by\
    \ different smallholders will often be\nSensors 2022, 22, 3273\n4 of 31\nunder\
    \ similar farming practices and communication between neighbor farmers is more\n\
    readily trusted. As a result, relevant information emerging in the community may\
    \ get\ncommunal use. Agricultural extension workers also assist farmers through\
    \ community\nlevel knowledge transfer regarding improved farm management, input\
    \ application and\nother tasks towards better productivity. They serve as a bridge\
    \ to pass on higher level\ndecisions to farmers and oversee their implementation.\
    \ This makes smallholder farms\nhighly dependent on extension workers for information\
    \ and know-how.\n2.2. Resource Usage and Infrastructure\nSmall farm size, farming\
    \ practices with mixed crops, limited access to ﬁnance and\nweak transport, communication\
    \ and on-farm infrastructure are conditions familiar to most\nsmallholder farms.\
    \ A farm’s land may be further split into smaller but discontinuous plots\nwhere\
    \ different crops are cultivated. This practice expresses a risk mitigation mechanism\
    \ to\nstabilize farm income and reduce the impact of failure shocks, even when\
    \ it is reported to\nhave negative correlation with yields [30]. Diverse cropping\
    \ on fragmented lands causes\ncomplications for technological assistance and innovation,\
    \ for one because plot and crop\nrequirements may vary. The required investments\
    \ make farmers resistant to such changes,\nwhich are better suited to and have\
    \ often been developed for larger-scale farming.\nTheir limited ﬁnancial capacity\
    \ also makes farmers less interested in technological\ninvestments. They heavily\
    \ rely on farming and have minimal or no alternative source of\nincome [7]. Most\
    \ farms are remote and suffer from poor physical and institutional infras-\ntructure\
    \ in provision of electric power, road access, irrigation, communication networks,\n\
    and access to social services [31]. These challenges hinder successful implementation\
    \ of\nagricultural innovation.\n2.3. Awareness and Preparedness\nIn the absence\
    \ of agricultural information systems, smallholders are vulnerable to\nnatural\
    \ hazards. Water excess or scarcity are particularly dangerous because most farms\n\
    apply rain-fed practices. Adoption of agricultural innovation and technology is\
    \ hard to\nachieve without systematic assistance and training. In addition, the\
    \ generally low literacy\nrate of smallholders causes low awareness and preparedness\
    \ for on-farm solutions. This\nrequires attention to be paid to minimal initial\
    \ investment level, ease of use, sensitivity to\nculture, language and other acceptance\
    \ barriers. Fuelled by scientiﬁc ﬁnds, it is crucial to\nexpand rural education\
    \ and regular capacity building of extension workers.\n2.4. Low Productivity\n\
    Various socio-economic, environmental and biophysical factors often correlate\
    \ strongly\nwith production levels of smallholders. They include genetically determined\
    \ behavior of\ncrops, soil properties, climate conditions, topography, farm ﬁnancial\
    \ status and illiteracy.\nWeak land management practices [32], the volume of family\
    \ labor [33] and uninformed\nuse of farm inputs are also factors that contribute\
    \ to poor farm productivity. The low\nproductivity is also often exacerbated by\
    \ crop disease and pests [34,35]. In addition to the\ninculcated effect of the\
    \ above factors, scarce research and development activities and lack\nof accurate\
    \ and timely information negatively impact farm yields [36,37].\nIt is worth noting\
    \ that these factors do not equally impact farming across all small-\nholder landscapes.\
    \ Their role and severity vary with micro-climate, region, and agro-\necological\
    \ zone. Understanding them as root causes within the space-time variability is\n\
    critical for ﬁnding contextual solutions. Our review, as discussed in Section\
    \ 5.2, reveals soil\n(in its various properties) as the most central attribute\
    \ that impacts agricultural production.\nWe should thus strive to obtain accurate\
    \ on-farm information about relevant soil properties\nto allow valuable diagnostics.\n\
    Considering the aforementioned characteristics, smallholder farms can be deﬁned\n\
    as: family-run, small farms that are often fragmented into disjoint plots, that\
    \ are nature-dependent\nSensors 2022, 22, 3273\n5 of 31\nand have limited operational\
    \ budget, limited information access and technology support, and often\ndisplay\
    \ low production levels.\n3. Data Acquisition in Smallholder Agriculture\nComprehensive\
    \ data on farm inputs, natural resource utilization, and environmental\nand biophysical\
    \ attributes is required to assist in improving farming. There are four possible\n\
    ways to acquire both technical and socio-economic data at the smallholder farm\
    \ level. These\nare: conventional, or by remote sensing, proximal sensing and\
    \ in-ﬁeld sensing.\n•\nConventional data collection Interviews, focus group discussions,\
    \ surveys, sam-\nple collections and observations, on-farm trials and yield measurements\
    \ are the\nconventional primary data collection approaches used in agronomic research\
    \ and\nprojects [38–40]. These are techniques for which physical presence of the\
    \ data col-\nlector is needed, and they demand high resource mobilization, especially\
    \ human\nlabor. Sample collection, on-farm trials, observations and measurements\
    \ are used\nto collect physical data such as soil properties and fertility, crop\
    \ condition and yield\nestimates, while interviews, focus group discussions and\
    \ surveys can be used for socio-\neconomic data collection. In general, these\
    \ data collection techniques exhibit a number\nof challenges. (i) Prolonged collection\
    \ period to capture precisely spatio-temporal\nvariability [41]; (ii) non-traceability\
    \ as most smallholders have little formal education\nand do not keep written records\
    \ of parameters during farm work, leading to lack of\nevidence; (iii) data collection\
    \ is considered intrusive and less-trusted by farmers as the\nactivities are mostly\
    \ non-participatory and thus less transparent [40]. Collected data\nmay be biased\
    \ due to misinformed collectors or the use of poor sampling schemes.\nThis may\
    \ result in incomplete data with quality problems, subsequently leading to\nincorrect\
    \ conclusions. However, with careful and proper execution, conventional tools\n\
    are crucial for calibration and other statistical analytic purposes [38]. Such\
    \ data may\nalso complement and/or validate secondary data used in decision-making\
    \ systems.\n•\nRemote sensing Recent research efforts have shown the potential\
    \ of RS and GIS\ntechnologies for monitoring smallholder farms and ﬁlling data\
    \ gaps [42,43]. RS uses\nspace-borne and airborne systems and generates valuable\
    \ data such as crop phenotype,\ngrowth stages and crop health issues, soil type,\
    \ soil moisture and farm input uses [44].\nThe potential of RS to assess crop\
    \ and soil properties, and farm inputs is demonstrated\nin [17,19,43,45,46]. The\
    \ actual application of these tools is uncommon in developing\ncountries. The\
    \ lack of ground truth data, the high learning curve to understand\nand use the\
    \ outcomes, the coarse spectral resolution as well as lack of appropriate\ntraining\
    \ are reasons for their limited use. Small and fragmented farms, vegetation\n\
    heterogeneity, and atmospheric conditions also diminish quality and usefulness\
    \ of RS\ndata [47,48]. Nonetheless, RS has high potential in complementing conventional\
    \ data\ncollection approaches and holds promise to assist sustainable farming\
    \ practices.\n•\nProximal sensing A closer look at a farm ﬁeld can be achieved\
    \ with PS; sensors\npositioned approx. 2 m above the ﬁeld surface then capture\
    \ data [49]. A number of\nagricultural parameters including soil properties, crop\
    \ growth metrics and farm inputs\ncan be acquired through this platform [50,51].This\
    \ is done by electromagnetic sensors,\nground penetrating radar (GPR) and gamma-ray\
    \ spectrometry sensors [15,47]. PS\nsensors are typically mounted on tractors,\
    \ spreaders, sprayers or irrigation booms. PS\ntechnology is relatively economical,\
    \ more accurate and offers higher spectral resolution\nthan RS [52]. However,\
    \ low temporal resolution, labor intensity and signiﬁcant cost\nhinder full usability.\
    \ The scarcity or absence of mechanized farming vehicles is\nanother barrier to\
    \ utilization of PS. A review of both RS and PS technology in soil data\ncollection\
    \ and associated challenges is provided in [53].\n•\nIn-ﬁeld sensing IoT and WSN\
    \ can complement the above approaches and help min-\nimize their mentioned challenges.\
    \ IoT is a platform through which objects can be\ninterconnected to generate and\
    \ exchange relevant and valuable information. Objects\ncan be both physical and\
    \ virtual. WSN is at the heart of this platform enabling reliable\nSensors 2022,\
    \ 22, 3273\n6 of 31\ninteraction between dispersedly located objects. IoT and\
    \ WSN have application in\nthe broader agricultural domain. Monitoring, tracking,\
    \ automation, and precision\nagriculture can be mentioned in this context. Several\
    \ projects are known in the de-\nveloped world: the EU’s Food and Farm 2020 project,\
    \ the Kansas water preservation\nthrough sensors, and NanoGanesh are a few examples\
    \ [54]. The NanoGanesh project,\nfor instance, is an irrigation automation system\
    \ that creates mobile-based remote\ncontrol for water pumps and water tanks using\
    \ sensor information. The project helps\nfarmers to control water pumps, their\
    \ power supply, and provides vandalism alerts\nof ﬁeld-deployed equipment. Other\
    \ projects have designed affordable, all-inclusive\nfarm improvement mechanisms\
    \ that utilize IoT and WSNs [25,26,55,56]. Smallholder\nfarmers require information\
    \ and advice, down-scaled to the plot level, to improve their\npractice; stakeholders\
    \ such as agricultural extension agents, and (non-)governmental\naid organizations\
    \ also rely on such information for planning. The point-level data\noffered through\
    \ IoT and WSN makes the technology ﬁtting with only a limited number\nof sensors\
    \ per plot. Inexpensive sensors keep things affordable, also to smallholders.\n\
    In addition, IoT and WSN are simple and quick approaches for farm-level data collec-\n\
    tion that allow direct interpretation. Further discussion of IoT and WSN is presented\n\
    in Section 5.\n4. Literature Search Methodology\nAgriculture encompasses various\
    \ activities including crop farming and livestock\nbreeding. IoT and WSN can have\
    \ various applications in this broad domain including farm\nmonitoring, animal\
    \ tracking, and precision agriculture. Our literature search considered\nall these\
    \ sub-domains and followed the Preferred Reporting Items for Systematic Reviews\n\
    and Meta-Analyses (PRISMA) framework as a standard [57]. The use of IoT and WSN\
    \ for\nagricultural applications was insigniﬁcant until around 2010 and has increased\
    \ signiﬁcantly\nsince then. Hence, we searched for publications in the years 2011–2021.\
    \ Research articles,\nsoftware and data publications, white papers and conference\
    \ proceedings were searched\nand acquired from three citation databases: ACM,\
    \ Scopus and ScienceDirect. Our search\nquery and inclusion and exclusion criteria\
    \ are presented in Table 1.\nTable 1. Systematic search parameters to identify\
    \ relevant papers for review. * is a wildcard of zero\nor more search characters\
    \ and can take ing, er, ers.\nSearch Parameter\nValue\nSearch query\nInternet\
    \ of Things (IoT) AND (Wireless Sensor Network (WSN) OR sensor)\nAND small AND\
    \ (agriculture OR farm *) AND “smart farming”\nInclusion criteria\nOpen access\n\
    Research article, conference proceeding, book chapter, software or data publication\n\
    Small farms or smallholder agriculture\nWireless communication\n2010–2021\nExclusion\
    \ criteria\nTargets mechanized, large-scale farms, developed countries\nNon-English\
    \ manuscripts\nLess technical details or mostly higher-level descriptions\nTheoretical\
    \ frameworks\nNon-agricultural applications\nCitation databases\nACM\nScopus\n\
    ScienceDirect\nOur searches followed a three-step approach: paper acquisition,\
    \ paper ﬁltering and\npaper analysis. Before paper acquisition, a metadata search\
    \ was executed on the citation\ndatabases. Reviews, early access articles, theoretical\
    \ frameworks, editorials, encyclopedia\nSensors 2022, 22, 3273\n7 of 31\nand magazines\
    \ were excluded. Publications that addressed large-scale enterprise farms\nor\
    \ deployment in resource-rich environments were also excluded. Thirdly, publications\n\
    with little or unclear technical discussion or with little focus on the physical\
    \ or hardware\ndetails were left out from our review. Figure 2 shows the schematic\
    \ representation of our\nsearch results.\n \nIdentification of studies through\
    \ online databases \nRecords identified \nScienceDirect    (n = 268 ) \nScopus\
    \ ( n = 46 ) \nACM ( n = 97 ) \nRecords removed before \nscreening \nNo duplicates\
    \ were found \nIdentification \nRecords screened manually and \nthrough filtering\
    \ on the \ndatabases \n( n = 411 ) \nRecords excluded  \n( n = 156 ) \nReports\
    \ assessed through title \nand abstract skimming \n( n = 255 ) \nExcluded records\
    \ \n( n = 178 ) \nReports assessed for eligibility \nthrough full-text skimming\
    \ \n( n = 77 ) \nStudies included in review \n( n = 53 ) \nReports excluded \n\
    Reason 1: less technical details \n( n = 15 ) \nReason 2:  irrelevant to our study\
    \ \n ( n = 9 ) \nScreening \nIncluded \nFigure 2. Search procedures for review\
    \ papers and obtained results based on PRISMA framework.\nA ﬁrst round search\
    \ was conducted between February and March 2021, and a second\nround in December\
    \ 2021. A crude total of 411 papers from more than 20 journals were iden-\ntiﬁed.\
    \ Next, results were ﬁltered using the exclusion criteria mentioned in Table 1.\
    \ A ﬁrst\nlevel discrimination was based on the paper’s type, followed by title\
    \ and abstract skimming\nto assess whether the scope of the work falls into our\
    \ research interest. Finally, full-text read\nwas conducted to check the relevance,\
    \ technicality, usability and deployment environment.\nSome 53 papers were found\
    \ relevant to our study, of which about 50% were in con-\nference proceedings.\
    \ Further analysis was carried out on these papers to understand the\nhardware\
    \ and technical details. Sensors and nodes used in the work, communication tech-\n\
    nologies, power sources and energy harvesting schemes, micro-controllers and transceivers\n\
    were speciﬁcally studied. Section 5 presents a detailed discussion of ﬁndings.\n\
    Sensors 2022, 22, 3273\n8 of 31\n5. IoT and WSN in Smallholder Agriculture\nWe\
    \ argued in Section 3 that IoT has sound justiﬁcation to assist in agriculture\
    \ data\ncollection and address the information gap that smallholder farms face.\
    \ Monitoring crops,\nsoil and weather at farm-level, continually and in (near)\
    \ real-time with reasonable cost\nmay provide closer insight into possible farm\
    \ investments for improved productivity.\nLivestock tracking, pest detection,\
    \ farm input application may support decision-making\nand better farm management\
    \ practice.Unfortunately the deployment areas where IoT is\nmost useful are also\
    \ those the technology is most vulnerable to theft, vandalism and other\nphysical\
    \ damages. Social awareness campaigns can help prevent this and enhance the\n\
    capability of a community to collect data that assist its agricultural practices.\
    \ With proper\ndesign and implementation considerations, smallholder farms can\
    \ be made to beneﬁt from\nthe technology. In line with this, We propose an IoT-WSN\
    \ architecture for agricultural\napplications. The proposed architecture is presented\
    \ in Figure 3 and it has ﬁve layers:\nsensing, control, backhaul, application\
    \ and decision layer.\n \nWired, wireless \nWired, wireless \nWired, wireless\
    \ \nWired, wireless \n  Zigbee, LoRa \n  Cellular,  GPRS \n WiFi, Ethernet \n\
    WiFi, standalone \nplication Layer \nBackhaul Layer \nplication Layer \nplication\
    \ Layer \nKnowledgebase  \nSoil, crop, climate, \nmovement, market \nNetwork Server\
    \ \nCloud, private, standalone \nGateway/ control node \nEdge computing, buffering\
    \ \nSensors, Actuators,  \nNodes \nSoil, sprinkler, crop, weather , \nmotion,\
    \ location \nplication Layer \nDecision  Layer \nApplication Server \nPA, LM,\
    \ WM, PAIM \nplication Layer \nApplication  Layer \nControl Layer \nSensing Layer\
    \ \nFigure 3. A general Internet of Things (IoT)-wireless Sensor Network (WSN)\
    \ architecture for agricul-\nture applications (PA:Precision Agriculture, LM:\
    \ Livestock Management, WM: Weather Monitoring,\nPAIM: Pest and Animal Infestation\
    \ Monitoring).\nAs can be seen in the ﬁgure, the sensing layer comprises objects\
    \ used to monitor and\ninteract with agricultural elements such as soil, livestock\
    \ or crop. Measurement sensors\nand their controlling nodes are found on this\
    \ layer. Nodes run embedded instruction on\nwhen to measure which agriculture\
    \ elements through one or more sensors. Data collected\nfrom this layer needs\
    \ to reach the control layer through wired or wireless communication\nprotocols.\
    \ Data rate, power consumption and communication range are some important\nfactors\
    \ that affect the choice. Less power-hungry and optimal communication are required\n\
    in agriculture applications. Examples of wireless communication protocols are\
    \ presented\nin Table 2. In real agricultural ﬁelds’ deployment, communication\
    \ signal could be weak\ndue to environmental obstructions such as tree. This might\
    \ cause frequent communication\ninterruption between sensing layer and the control\
    \ layer with signiﬁcant data loss. Design\nand/or implementation considerations\
    \ such as obstruction-aware deployment scheme or\nSensors 2022, 22, 3273\n9 of\
    \ 31\nnode’s temporary data buffering scheme are required. The control layer is\
    \ responsible for\naggregation of received data and transfer to the back end system.\
    \ It also controls actions\nof actuators through decisions coming from the back\
    \ end system. Based on the device’s\ncapability and application requirement, this\
    \ layer can be setup to perform additional\ntasks such as controlling the frequency\
    \ and time of data reading by sensor nodes and\ndata buffering. A node with higher\
    \ processing and communication capability is setup at\nthis layer. This node is\
    \ often referred as gateway and supports different communication\nprotocols. The\
    \ backhaul layer bridges the communication between the resource-constrained\n\
    gateway device and relatively resource-rich back end system. It manages the underlying\n\
    network and application communication protocols between gateway and network server\n\
    and between the network server and application server. In the later case, the\
    \ communication\nprotocols can be synchronous as in Message Queuing Telemetry\
    \ Transport (MQTT) or\nasynchronous as in Constrained Application Protocol (CoAP).\
    \ The network communication\nprotocol can be the reliable Transport Control Protocol\
    \ (TCP) or the efﬁcient User Datagram\nProtocol (UDP). In both cases, the protocol\
    \ choice depends on energy-efﬁciency, inter-\noperability and resource need. It\
    \ is possible for this communication to be disrupted due to\nunstable communication\
    \ infrastructure. Alternatives that could withstand such disruptions\nmay need\
    \ to be identiﬁed. The application layer deﬁnes the business rules and required\n\
    functionality of the agriculture application. This layer also creates the required\
    \ seamless\nintegration of data coming from heterogeneous sensors. Finally, the\
    \ decision layer performs\nanalysis of data received from devices based on the\
    \ business rules and user requirements.\nData analysis, report generation and\
    \ decision support all happen in this layer. The type of\ninformation that is\
    \ generated, target stakeholders, information re/presentation and delivery\ninterface\
    \ are all decisions that must be addressed at the level of this layer. The application\n\
    and decision layers shall address requirements of a speciﬁc agriculture application\
    \ domain\nand answer all users’ needs. This trickles down and dictate the type\
    \ and number of nodes\nto deploy at the sensing layer as well as the timing and\
    \ amount of data to read. Usefulness\nof decisions made at these two layers also\
    \ heavily rely on the quality of data generated at\nlower layers. Hence, data\
    \ validation and quality assurance measures needs to be in place\nat the lower\
    \ layers.\nTable 2. Wireless communication technology comparison with example.\n\
    Wireless Technology\nWiFi\nWiMAX\nZigBee\nCellular\nBluetooth\nLoRa\nWireless\
    \ network\nWLAN\nWMAN\nWPAN\nWWAN\nPAN\nLPWAN\nStandard\n802.11 *\n802.16 *\n\
    802.15.4 *\n2/3/4 G\n802.15.1 *\nLoRaWAN\nOperating Frequency (Hz )\n5–60 G\n\
    2–6 G\n868/919 M\n2.4 G, 865 M\n2.4 G\n433/868/900 M\nData Rate (bps )\n1 M–6.75\
    \ G\n1 M–1 G\n40–250 K\n50 K–1 G\n1–24 M\n0.3–50 K\nTransmission Range\n20–100\
    \ m\n<50 km\n10–20 m\nEntire cellular\n8–10 m\n<50 km\nPower Consumption\nHigh\n\
    Medium\nLow\nMedium\nMedium\nVery low\nCost\nHigh\nHigh\nLow\nMedium\nLow\nHigh\n\
    Operating Life\nYears\nHours\nUp to 2 years\nHours\nHours\n10–20 Years\nNoise\
    \ Resistance\nLow\nMedium\nMedium\nMedium\nLow\nHigh\nReferences\n[58–70]\n[71,72]\n\
    [62,73–83]\n[84–94]\n[95–99]\n[100–106]\n* : IEEE\nActual installation and operation\
    \ of IoT is often challenged in smallholder communi-\nties due to poor infrastructure\
    \ and high improvement cost. More cost-effective and less\nresource-hungry solutions\
    \ such as WSN are potential candidates for integration with the\nIoT [107]. Essentially,\
    \ the low-power wireless communications contribute to improving\nboth IoT device\
    \ connections with the Internet and the overall efﬁciency of the IoT applica-\n\
    tion operation. Important types of wireless communication technology are presented\
    \ in\nSensors 2022, 22, 3273\n10 of 31\nTable 2. Minimal operational resource\
    \ needs, scalability, long data range, high resistance\nto signal interference,\
    \ simple operation and maintenance requirements are critical criteria\nwhen choosing\
    \ a wireless communication technology for such environments.\nOur analysis reveals\
    \ that use of IoT and WSN in smallholder farming evolves around\nthe following\
    \ issues:\n•\nPurpose;\n•\nSensor deployment and implementation;\n•\nCommunication\
    \ technology;\n•\nPower sources;\n•\nComputing analysis;\n•\nQuality assurance.\n\
    We elaborate on these below.\n5.1. Purpose\nAgricultural productivity depends\
    \ on multiple parameters: those of soil, weather, crop\nand other farm management\
    \ practices especially. Careful investigation is, thus, required\nto identify\
    \ those parameters with most impact, to allow tuning farming practices through\n\
    continuous monitoring and analysis.\nFour areas have been associated by the research\
    \ community with the use of IoT and\nWSN in smallholder agriculture: precision\
    \ agriculture (PA), weather monitoring (WM),\npest and animal infestation monitoring\
    \ (PAIM) and livestock management (LM). In preci-\nsion agriculture, work focuses\
    \ on automatic irrigation, fertilization and other farm input\nmanagement actions.\
    \ PA aims at precise and efﬁcient use of agricultural inputs for optimal\nproduction.\
    \ The precision addresses dosage, application location or timing. Irrigation\n\
    management, using monitored soil data from sensors, and deploying actuators contributes\n\
    to efﬁcient and timely water utilization [59,62,65,66,68,69,73,77,90,99,103,108–110].\
    \ Moni-\ntoring of soil nutrients and soil moisture content helps control fertilizer\
    \ application and\npromotes the optimal use of other natural resources [67,75,87,98,101,111].\n\
    In areas with poor coverage, Weather monitoring can potentially benefit from IoT\
    \ and\nWSNs through sensor-based micro-climate weather stations [70,82,83,89,94,105,112].\
    \ Weather\ndata by itself does not fully predict crop performance because other\
    \ variables are also in\nplay. The correct approach is to integrate with other\
    \ agro-climatic variables [67,88,105,113].\nCorrelation between soil moisture,\
    \ air temperature and humidity, and other environmental\nvariables needs to be\
    \ analyzed for agricultural applications. Existing agro-meteorological\ndata collection\
    \ infrastructures in smallholder context are at best sparse. This is mainly\n\
    because of budget constraints. As a result, the quality and quantity of produced\
    \ data are\npoor [83,94]. Setting up automatic weather stations through WSN may\
    \ complement these\nweather stations. In addition to being cost-effective, they\
    \ can be deployed densely to pro-\nduce data of better spatial resolution, and\
    \ can be conﬁgured to acquire data autonomously\nat small time intervals. This\
    \ brings value in agricultural early warning systems.\nThe third area in which\
    \ IoT and WSN is used in smallholder agriculture is pest and\nanimal infestation\
    \ monitoring. Crop pests and diseases and unwanted animal visits to\nfarmlands\
    \ are known causes of crop loss. Both wild and domestic animals pose such threats\n\
    and farmers can beneﬁt from real-time monitoring of animal visits to ﬁelds. Knowing\n\
    a crop’s resource requirements at the different growth stages and timely observation\
    \ of\nleave color changes may reduce crop failure caused by pests and diseases.\
    \ Temperature\nand motion sensors can capture data relevant to these problems.\
    \ IoT and WSN can help\nto set up a sensor network cost-effectively and to the\
    \ required precision and temporal\nscale [60,61,81,92,93,114,115].\nLivestock\
    \ management is the fourth area that may beneﬁt from IoT and WSN technol-\nogy\
    \ [79,80,86,104,116–119]. Most smallholders practice mixed crop farming in combination\n\
    with livestock breeding. The livestock may be as important as the crops. It is\
    \ mostly an\nincome source but it can also be a source for the household’s dietary\
    \ needs. Tracking of\nSensors 2022, 22, 3273\n11 of 31\ncattle, monitoring animal\
    \ health and safety of feedlots and barns, and monitoring body\nchanges can become\
    \ sensor-based.\nAmong the 53 papers reviewed, we found that PA is researched\
    \ widely with about\n64% of the works targeting it, as shown in Figure 4. The\
    \ classes in that ﬁgure are not\nmutually exclusive as some papers address more\
    \ than one application domain, as discussed\nin Section 5.1 and reported in [91,99].\
    \ Most data collected was used in water management\nand irrigation. Since smallholder\
    \ farms mostly apply rain-fed practices, other use cases\nthat address the much\
    \ needed information of the community shall be sought. These can be\ndeciding\
    \ which crop to plant, the sowing time and pest management [98,120,121]. Weather\n\
    sensor data may also help in situations like drought. Precise information on such\
    \ and\noptimal utilization of other existing farm resources is, thus, also of\
    \ paramount importance\nto this community.\n60%\n10%\n14%\n16%\nPA\nLM\nWM\nPAIM\n\
    Figure 4. Thematic distribution of reviewed papers (N = 53) depicting important\
    \ uses of IoT-WSN\nin smallholder agriculture (PA:Precision Agriculture, LM: Livestock\
    \ Management, WM: Weather\nMonitoring, PAIM: Pest and Animal Infestation Monitoring);\
    \ classes may be mutually overlapping.\n5.2. Sensor Deployment Schemes\nMultiple\
    \ sensors make up a WSN. Sensor deployment in agriculture requires a\ncareful\
    \ design that takes into account the spatio-temporal variability of the parameters\n\
    of interest. For instance, soil moisture may display high spatial and temporal\
    \ variability\nwhile crop growth tends to be slow and monotonic over time, and\
    \ has higher predictability.\nAppropriate sensor deployment shall address such\
    \ variability. It also determines the\nnumber of devices to be used, with budget\
    \ implications. Moreover, some agricultural\nparameters, like soil moisture and\
    \ crop root growth, exhibit spatial variability over different\nsoil depths. Optimal\
    \ placement of sensors is required to address such requirements and\noptimization\
    \ of performance and coverage of the WSN [111].\nWork by [72] presents WSN deployment\
    \ from three perspectives: node movement\n(dynamic, static, hybrid), node type\
    \ (homogeneous, heterogeneous) and system hierarchy\n(single-tier, multi-tier).\
    \ In static node deployment, nodes are placed in a ﬁxed position\nfor the entire\
    \ sensing duration [122]. The dynamic node set-up allows mobility of nodes,\n\
    and a hybrid set-up integrates static and dynamic nodes. Homogeneous nodes are\
    \ those\nwith near-identical characteristics while heterogeneous nodes differ\
    \ in computation power,\nsensing capability and/or transceiver units. A tiered\
    \ hierarchy organizes nodes into clusters\nto extend the spatial coverage with\
    \ the same [123] or a different [122] number of nodes\nin each cluster. Sensor\
    \ placement in WSN typically follows a random [122] or grid-based\napproach [75,106,111].\
    \ In the ﬁrst, nodes are distributed randomly over the target location.\nIn a\
    \ grid-based set-up, nodes are arranged in a regular equidistant way, placed at\
    \ the edge\nor center of the polygon [106,124,125]. As most reviewed papers are\
    \ experimental, little\nSensors 2022, 22, 3273\n12 of 31\nis discussed regarding\
    \ node placement. A few papers mention cluster-based static sensor\nplacement\
    \ [75,106], and in livestock monitoring, nodes are tied to moving animals.\nThe\
    \ number and type of sensors in a WSN for agriculture monitoring are speciﬁc\n\
    to the application theme or purpose. Sparse air temperature and humidity sensors\
    \ may\nsufﬁce to collect weather data at village-level. High sensor density is\
    \ needed with motion\nsensors in livestock monitoring, unless the purpose is to\
    \ follow group movements only.\nMeasurements from some sensors can also serve\
    \ multiple needs. For instance, relative\nhumidity can be used for weather analysis\
    \ and in crop pest manifestation assessment.\nA dense deployment of nodes with\
    \ high frequency data collection generates a large amount\nof data. However, such\
    \ affects the network’s lifetime and comes with budget implications.\nThe papers\
    \ we reviewed use different sensor types. In PA applications, soil water content\n\
    or soil temperature measurement are common while in livestock management animal\n\
    movement is required. Some sensor types are also commonly found among applications:\n\
    soil moisture and relative humidity sensors are frequently used, as shown in Figure\
    \ 5. Air\nand soil temperature sensors are also often deployed sensors while others\
    \ like light, CO2,\nlocation, soil electrical conductivity (EC), soil acidity\
    \ (pH), wind speed and direction are\nless often applied [79,80,82,83,86,92,94,101,110,111,118,126,127].\n\
    70%\n57%\n45%\n40%\n21%\n15%\n13%\n13% 11% 9% 8%\nHumidity\nAir temperature\n\
    Light\nMotion\nAir pressure\nWind speed & direction\nSoil moisture \nSoil temperature\
    \ \nSoil acidity\nCO\nSolar radiation\n2\nFigure 5. Sensor type distribution of\
    \ reviewed papers (N = 53) showing important types in small-\nholder agriculture.\
    \ Papers typically report multiple sensor types in use.\nMost agricultural parameters\
    \ require time-series monitoring. Expected parametric\ntemporal variability is\
    \ the key factor to determine sensor reading frequency and period; in\nprinciple,\
    \ one wants to capture each signiﬁcant parameter value change. An additional\n\
    concern is especially the daily cycle in the sensor’s ambient conditions, which\
    \ may nega-\ntively impact comparability of sensor readings. Thus, sensors should\
    \ collect data at ﬁxed\nmoments in the day, where it needs to be understood that\
    \ ‘at 7 a.m.’ and ‘one hour after\nsunrise’ are different notions of time ﬁxation.\
    \ Still, post-processing of sensor data should\nanalyze whether the day/night\
    \ rhythm is manifest in the data, and how, if so, to correct\nfor it.\nIn PA,\
    \ for instance, as plants grow their demand for resources evolves. It may thus\
    \ be\nbeneﬁcial to monitor throughout the season for optimal production. In pest\
    \ monitoring,\nthe appropriate sensing period may fall between the ﬂowering and\
    \ senescence phases.\nFor some parameters, even within the active sensing window,\
    \ measurements are required\nmore frequently as, for instance, in soil moisture\
    \ compared to soil type [128]. In most\nreviewed papers, a data read frequency\
    \ may range between 15 and 30 min with no speciﬁc\njustiﬁcation. We observed more\
    \ emphasis given to the energy use efﬁciency of nodes and\nless focus to the efﬁcient\
    \ applicability of acquired data.\nSensors 2022, 22, 3273\n13 of 31\nAs discussed\
    \ in Section 2, smallholder farms have communal data needs and similar\ncharacteristics\
    \ in weather and soil attributes. Thus, it is more cost-effective to deploy a\n\
    variety of sensors than a dense scatter of redundant sensors to obtain a more\
    \ holistic view.\nA WSN node can listen to multiple sensors as most reviewed papers\
    \ actually do. This helps\nto improve understanding of site-speciﬁc interplay\
    \ between parameters. It also simpliﬁes\ncommunication management when more nodes\
    \ are deployed. Overall, an efﬁcient sensor\ndeployment scheme for smallholder\
    \ agriculture shall give due consideration to wide area\ncoverage, efﬁcient power\
    \ use, extended network lifetime, reduced signal loss, low cost\nand reliable\
    \ data generation. It is also crucial to acquire all needed data to the required\n\
    spatial-temporal resolution. These are discussed in less detail in the reviewed\
    \ papers. Only\nsome projects mention a systematic node deployment strategy [73,75,88,100,111].\
    \ Most of\nweather monitoring projects follow the World Meteorology Organization\
    \ (WMO) standard\nto set up their network [82,83].\n5.3. Data Communication Approaches\n\
    Efﬁcient communication needs to be established between the sensing and control\
    \ layer\nas well as between control and backhaul layer for transmission of sensed\
    \ data. The advance-\nment of the wireless communication technology has brought\
    \ signiﬁcant breakthroughs in\nIoT. Radio frequency identiﬁers (RFID) and short-range\
    \ wireless communications have\nBluetooth and ad hoc WSNs as examples. Though\
    \ these technologies are known to have\nlow power requirements and can operate\
    \ for a considerable amount of time, most also have\nshort-range coverage and\
    \ are not suitable for wide spatial coverage applications such as\nagriculture\
    \ [129]. Cellular wireless networks can be used to address this limitation but\
    \ as\nIoT keeps growing and more objects become connected, network trafﬁc management\
    \ and\nsignal generation becomes a concern and requires further design improvements\
    \ [130,131].\nA recent communication technology that tries to overcome these limitations\
    \ is the\nLow-Power Wide Area Network (LPWAN). It elevates the short-range and\
    \ high cost of\npredecessor technology and can connect a wide domain of IoT applications.\
    \ LPWAN is\nsuitable for services with infrequent and small data exchange requirements.\
    \ However,\nit also spans wide spatial coverage with tolerable data loss, making\
    \ it appropriate for\napplications that target resource-constrained and remote\
    \ locations. Table 2 gives examples\nof wireless communication technology mostly\
    \ used in IoT.\nPreference trends for wireless communication technology in smallholder\
    \ agriculture\nover the past ten years are shown in Figure 6. As can be seen,\
    \ Zigbee and WiFi commu-\nnication protocols were predominantly used until recently,\
    \ while LoRa communication\nhas received more interest in the last three years.\
    \ Both Zigbee and WiFi have limited\nrange coverage but better data rates, making\
    \ them suitable for short- or medium-distance\napplications with high data needs.\
    \ The low duty cycle of the Zigbee protocol, which is an\noperational method of\
    \ reducing power consumption, and its large network size also made\nit preferred\
    \ in most smallholder agriculture applications [132,133]. A number of projects\n\
    also operate in standalone mode, a set-up in which a device acts both as a sensing\
    \ node\nand as controller or gateway.\nConsidering the backhaul communication\
    \ that allows gateways to transfer received\ndata to application servers, not\
    \ many alternatives exist in rural areas to cellular communi-\ncation. The penetration\
    \ of this technology has increased in developing countries reaching\nrural areas\
    \ [134–136]. Most publications use the technology for data transmission from\n\
    farms to central server. Trends in technology choice among the reviewed work is\
    \ shown\nin Figure 7. Despite wide penetration, cellular communication is frequently\
    \ unstable and\nunreliable in remote areas and may result in data loss. As a result,\
    \ more reliable options\nneed to be considered.\nSensors 2022, 22, 3273\n14 of\
    \ 31\n0\n1\n2\n3\n4\n5\n2011\n2013\n2015\n2017\n2019\n2021\nPaper count\nCable/Standalone\n\
    Wifi\nCellular\nBluetooth\nZigbee\nLoRa/LoRaWAN\nFigure 6. Wireless communication\
    \ technology preference trends of the reviewed works for small-\nholder agriculture\
    \ applications. The Y–axis denotes number of works using a speciﬁc communication\n\
    technology. Some papers have used multiple of this technology, simultaneously.\n\
    0\n1\n2\n3\n4\n5\n6\n7\n2011\n2013\n2015\n2017\n2019\n2021\nPaper count\nCable/Standalone\n\
    Ethernet\nWifi\nLoRa\nCellular\nFigure 7. Trends of common backhaul communication\
    \ standards use in smallholder agriculture applications.\nThe choice of an efﬁcient\
    \ distribution and communication channel among sensing\nnodes is critical to achieve\
    \ energy efﬁciency and reliably collect data. It ensures that nodes\nhave increased\
    \ lifetime and regular responsiveness. To this end, a WSN mesh topology is\ncommon\
    \ among projects; a few mention the use of star topology [100,113] or a clustered\n\
    hierarchical topology [110]. In mesh network topology, nodes have routing capability\
    \ and\ncommunication can be established among each other. This allows reliable\
    \ data transmission\nand reduced data loss. It requires more power energy and\
    \ thus suitable for short range\ncommunication. In star topology, nodes are connected\
    \ to one central node with routing\ncapability, and make a star-like structure.\
    \ Child nodes transmit data to this central hub\nwith no guarantee of delivery.\
    \ The communication range between nodes and the sink shall\nthus be kept reasonable\
    \ or data could be lost. Clustered topology is a tree-like arrangement\nof two\
    \ or more star topology to enhance this communication range. The scale, deployment\n\
    environment and resource have a play on which topology to adopt.\n5.4. Energy\
    \ Sources and Saving\nAnother design consideration for IoT and WSN applications\
    \ in smallholder agriculture\nis the power consumption of devices as commonly\
    \ there is limited or no electricity access.\nA typical sensing node functional\
    \ set-up is shown in Figure 8: it has a radio transceiver,\na micro-controller\
    \ board that interfaces with sensors, and a power unit. Dependent on the\napplication,\
    \ a node can also have extra elements such as a power generator, mobilizer or\n\
    location ﬁnder [137].\nSensors 2022, 22, 3273\n15 of 31\n \nExternal  parts \n\
    Main  parts \nOptional parts \n  \nProcessing Unit \nStorage  \nProcessor \n \
    \     RF Tx/Rx \nTransceiver Unit \nPower Unit \nPower Storage \nPower Generator\
    \ \nLocation Finder \nMobilizer  \n \nSense Unit \nSensor 1 \nSensor 2 \nSensor\
    \ n \n ADC \nFigure 8. Elementary components of typical sensor node in a WSN (ADC:\
    \ Analog-Digital-Converter;\nRF: Radio Frequency; Tx/Rx: Transmitter/Receiver).\n\
    Nodes can run on electricity mains, battery, or solar power. For nodes at the\
    \ sensing\nlayer, easily replaceable Li-Ion batteries are preferred power sources\
    \ because they are\naffordable and bring no technical complications. However,\
    \ frequent replacement is required\nand caution must be taken on the reliability\
    \ or quality of transmitted data due to their\nlimited lifetime. A work-around\
    \ is to apply an energy saving scheme such as sleep-and-\nawake [76,81,83]. This\
    \ allows reducing power consumption of nodes in idle state and\nthus extend battery\
    \ life. Solar power is also a promising option though it has seasonal\nﬂuctuations.\
    \ Nodes at the control layer need to run uninterrupted and require continuous,\n\
    reliable power supply. It also demands signiﬁcant power, which cannot be achieved\
    \ with\nsimple batteries. The wired electric mains is a sound source for such\
    \ requirements. It is,\nhowever, not always available and then solar panels [66,91,92,106,118,138],\
    \ rechargeable\nbatteries [81,84,93,94] or power banks [101] are the possible\
    \ options.\n5.5. Computational Analysis\nFor a systematic study and comparison\
    \ of approaches taken in the reviewed projects,\nwe used an idealized workﬂow\
    \ of a general data science project as presented in Figure 9. It\ndepicts a functional\
    \ action chain from data acquisition to decision-making and information\ndelivery.\
    \ It shows how data are produced, processed and presented (PPP) to stakeholders\n\
    at different operational levels.\n•\nData acquisition This entails the process\
    \ of what and how data are being collected.\nIn IoT and WSN set-ups, the data\
    \ acquisition layer focuses on parameter identiﬁcation,\ndevice selection and\
    \ set-up, communication network selection and establishment,\nand the data collection\
    \ phase itself. The sensing and control layers discussed in\nSection 5 are mapped\
    \ to this stage of data science.\n•\nData curation In this phase, data cleaning\
    \ and pre-processing of acquired sensor\ndata are conducted to improve its reliability.\
    \ Important tasks are ﬁltering, adding,\ndropping and transferring. It also handles\
    \ integration of data from different sensors,\nthrough well-deﬁned data mapping\
    \ algorithms. The heterogeneity of devices, oper-\nating platforms and absence\
    \ of de facto communication standards in IoT and WSN\ncommunication often obstruct\
    \ direct and full utilization of the technology. The syn-\ntactic and semantic\
    \ variations at hardware and software levels of the system pose\ninteroperability\
    \ and integration challenges [93]. Variation in data collection and rep-\nresentation,\
    \ different communication speciﬁcations such as transmission rate and\nbandwidth,\
    \ and data processing and presentation are issues to be addressed in this\nSensors\
    \ 2022, 22, 3273\n16 of 31\ncontext. One of the critical functionality of a data\
    \ curation is, thus, facilitation of such\ndata integration. This phase is crucial\
    \ as the remaining action chains are dependent\non its outcome.\n•\nData processing\
    \ and analysis The data processing and analysis phase is where compu-\ntations\
    \ are executed on the raw, sensor data acquired from farms. These computations\n\
    can be classiﬁed into three general groups: (a) Simple, which is a threshold-based\n\
    if-then analysis that determines incidents as deviations from pre-deﬁned values;\n\
    (b) Statistical, that determines standard statistics such as regressions and ANOVA;\n\
    and (c) AI, which brings forecasting and prediction capabilities through advanced\n\
    mathematical and machine learning computations, using artiﬁcial neural network\n\
    (ANN), deep learning (DL) and other techniques. Operations executed in this phase\n\
    are based on speciﬁc application needs and shall assist the decision-making of\
    \ small-\nholder farms. It is responsible to produce usable knowledge from the\
    \ pre-processed\ndata passed to it.\n•\nInformation presentation and visualization\
    \ The presentation and visualization phase\nhandles the human–computer interaction\
    \ (HCI) and deﬁnes appropriate information\ndelivery mechanisms. It also handles\
    \ the information presentation format prescribed\nas suitable by the end user.\
    \ Three broad categories for presentation and data visual-\nization are: web-based,\
    \ application-based, and SMS- or alert-based. Web-based data\npresentation can\
    \ reach users through a stand-alone web page or as social media feeds,\nsuch as\
    \ tweets. The application-based information presentation uses a dedicated\nmobile\
    \ application developed and installed on the user’s smartphone. Both web-\nand\
    \ application-based mechanisms support graphical and textual data visualization\n\
    options and provide multi-language access. They do require regular internet access\n\
    and smart devices. The SMS information presentation is a text-based data delivery\n\
    that runs on regular phones and can present short alert information to users on\
    \ the\nfarm status and actions advised.\n•\nComputing environment This environment\
    \ determines the computing capabilities\nused in all stages of data processing.\
    \ Edge computing, cloud computing or private\ncomputing environments can be used\
    \ in agriculture data processing. The choice\nof platform depends on the application\
    \ needs and resource availability. In an IoT\nand WSN set-up for agriculture data\
    \ processing, edge computing can be ideal to\nprocess and disseminate information\
    \ to farmers in real-time. This is also advanta-\ngeous especially when network\
    \ communications are fragile, as can be the case in\nsmallholder farming. Edge\
    \ computing, however, may present challenges in deploy-\nment in resource-constrained\
    \ devices such as sensor nodes and may set limits to data\nprocessing implementations.\
    \ AI algorithms speciﬁcally need substantial computation,\nmemory and power resources,\
    \ which are usually scarce in a WSN. Edge comput-\ning also sets higher quality\
    \ requirements to the software as it is harder to upgrade\nonce deployed.\nCloud\
    \ computing offers rich resources to implement sophisticated and large data\n\
    processing algorithms and persistent storage. It also facilitates the re-usability\
    \ of open\ncloud solutions provided as software as a service (SaaS) or infrastructure\
    \ as a service\n(IaaS). However, accessibility and network bandwidth demand is\
    \ a concern in small-\nholder communities. A private server can be set up with\
    \ equivalent resource provision\nto a cloud computing with self-built data analysis\
    \ and presentation mechanisms.\n•\nQuality assurance These are associated tasks\
    \ that ensure overall data processing\nand information generation are of some\
    \ expected quality standard and ﬁt with user\nexpectations. It is a rigorous task\
    \ that needs to be present in every stage of data\nprocessing. During data acquisition,\
    \ some QA measures can be device testing and\ncalibration, and communication network\
    \ reliability and efﬁciency validation. QA\nduring the data curation and data\
    \ processing phases can be validation of data by\npre-processing algorithms in\
    \ terms of reliability, efﬁciency and optimality. A dearth\nof accurate baseline\
    \ data regarding different agriculture parameters challenges these\nSensors 2022,\
    \ 22, 3273\n17 of 31\ntasks. Regardless, some quality assurance have to be in\
    \ place to ensure sensor data\nare reliable before further investigation and decision\
    \ support information generation.\nThe computing environment also needs to meet\
    \ required quality standards such as\nsecurity, reliability and accessibility.\n\
    \ \nData \npresentation \n& \nvisualization\n• Web\n• Mobile app\n• SMS\nData\
    \ \nanalysis & \nprocess\n• Simple (Logical)\n• Statistical\n• ML & AI\nData \n\
    curation\n• Clean\n• Transfer\n• Integrate \n• Preserve \nData \nAqcuisition \n\
    Quality Assurance      • Validation     • Calibration \n•  Security & anomaly\
    \ detection \nComputing Environment           •  Edge \n•  Cloud      •  Private\
    \     •  Hybrid \nFigure 9. A general dataﬂow schema in data science computations.\n\
    The quality assurance and computing environments are cross-cutting the action\
    \ chain\nof data processing. We believe that such an idealized action chain can\
    \ serve as a good\ncomparison mechanism between experiments.\nWe reviewed the\
    \ publications against these actions and environments of an idealized\ndata science\
    \ workﬂow. Table 3 provides an overview of how the methods used align with\nthe\
    \ schematic actions described above.\nTable 3. Assessment report of reviewed works\
    \ based on deﬁned data science actions. Note that\ncategorizations are not exclusive\
    \ and some works utilized multiple classes of computing action.\nISO/IEC 9126\
    \ describes software characteristics for quality metrics.\nData Science Action\n\
    Techniques/Approaches\nData curation\nData preservation [61,64,74,75,84,85,89,102,105,111,115]\n\
    Data transfer to JSON and XML formats [75,89,93,102]\nData fuzziﬁcation and de-fuzziﬁcation\
    \ [62]\nRedundant data removal [61]\nData analysis and processing\nIf then [60,64,68,69,85,91,93,99,104,111,115]\n\
    Statistical [61,80,87–89,100,105]\nML and AI [62,63,65,76,92,94,103]\nData presentation\
    \ and visualization\nWeb-based [58,61,63,64,74–76,81,84,91–94,99,100,105,111,115,138,139]\n\
    App-based [62,68,69,85,100,102,104,105,139]\nSMS-based [60,85,87,92,104,115]\n\
    Computing environment\nCloud [58,60,62,64,65,68,69,75,76,82,85,89,91,93,102,104,105,115,138,139]\n\
    Edge and/or Fog [61,99,103]\nPrivate server [74,81,84,87,94,100,111]\nQuality\
    \ assurance measures\nNon-elaborated calibration [84,93,106]\nData validation\
    \ based on descriptive statistics [104]\nReliability and data accuracy assessment\
    \ based on ISO/IEC 9126 [83]\nSensor calibration based on standard laboratory\
    \ results [76]\nSensor calibration using conventional weather station readings\
    \ [94]\nSensor data validation against standard laboratory results [82]\nSensor\
    \ data validation using linear correlation [65]\nTransaction validation based\
    \ on block chain [62]\nSensors 2022, 22, 3273\n18 of 31\n5.6. Quality Assurance\n\
    The calibration of sensors is a critical step before actual deployment in agricultural\n\
    applications.Laboratory analysis, manual investigation and existing repositories\
    \ can serve\nas calibration value sources [76,87,94]. Often, up-to-date ground\
    \ truth data for most\nsmallholder agriculture is not available, thus requiring\
    \ alternatives. One alternative can be\nto compare redundant readings of a sensor\
    \ and formulation of a calibration value. In these\ncases, appropriate testing\
    \ and validation measures must be taken [76,79,82,83]. Outdoor\nIoT-WSN applications\
    \ to smallholder agriculture also need to address environmental effects\ncaused\
    \ by topography, climate and vegetation cover on data quality.\nAnother critical\
    \ point related to quality assurance is security and anomaly control. Se-\ncurity\
    \ is a challenge in IoT and WSN deployment in agriculture as it is distributed\
    \ through\nthe ecosystem and could happen at different levels. The fact that smallholder\
    \ farms are\nfound in uncontrolled and often inaccessible areas and the limited\
    \ literacy rates exacerbate\nthis problem. Security can be perceived from two\
    \ broad perspectives: external and internal.\nThe external security threats are\
    \ posed by outside factors such as physical device damage or\nvandalism, denial\
    \ of service (DoS) attacks, signal jamming and data fabrications. Internal\nsecurity\
    \ threats are anomalies that happen due to wrong data and processing step which\n\
    compromise the reliability and quality of information generated. Faults in data\
    \ acquiring\nand processing anomalies can be mentioned as internal security challenges.\
    \ Security breach\ncould also happen at device, communication or transaction level.\
    \ Physical and logical\nfailures of nodes, calibration problem, device’s lifetime\
    \ and deployment environment could\ncause anomaly in the sensed data. Communication\
    \ anomaly could happen due to weak\nsecurity enforcement, resource or bandwidth\
    \ competitions among nodes and noise attenu-\nation on the signal transported.\
    \ The inability to withstand harsh and resource-deprived\nenvironment could also\
    \ challenge the communication standard and result in anomalous\ndata. Ambient\
    \ temperature and rain pose physical damage risks to sensing nodes and may\naffect\
    \ data and signal quality; tree and crop canopy may compromise the communication\n\
    between sensors and gateway. Lack of proper data curation, and appropriate processing\n\
    model and algorithm could potentially lead to transaction anomaly and generate\
    \ unreliable\ninformation. All these security problems pose quality concerns to\
    \ the IoT and WSN gener-\nated data which inhibit its utilization to decision\
    \ supports. Careful consideration of such\nfactors is required before the IoT\
    \ and WSN deployment for agricultural applications. Water-\nproof and heat-resistant\
    \ cases for nodes, integration of external, omnidirectional antennas\nand/or placement\
    \ of nodes at appropriate height, utilization of appropriate software tools\n\
    are relevant design and implementation considerations.\nProper monitoring and\
    \ analysis schemes may determine the efﬁciency and reliability\nof the installed\
    \ technology. Moreover, appropriate anomaly detection and prevention\nalgorithms\
    \ need to be deployed at the different layers of the IoT WSN communication to\n\
    act accordingly and avoid wrong input to a decision making. Some WSN communication\n\
    standards such as Zigbee and LoRaWAN has added security layer to the protocol\
    \ to\nwithstand the communication security challenge [27]. Transactions can also\
    \ be validated at\napplication layer as presented in [62]. These authors have\
    \ used the block chain technology\nto enforce security measures on sensor generated\
    \ data at the application layer. Recent\ndevelopments in computation platforms\
    \ such as cloud, edge and fog computing can also\nbe utilized to add security\
    \ layers to an IoT system. Hardware, software and data protection\nschemes can\
    \ be realized at these platforms. Susceptibility of data to interference and\n\
    other security threats are likely to be reduced if data are processed near the\
    \ device as in\nedge or fog computing. These innovations can also enhance energy\
    \ efﬁciency of nodes\nand reduce bandwidth competition between signals and more.\
    \ These anomaly detection\ncan be executed either at an end node or gateway level.\
    \ Each end node can be set to\nmonitor all sensors connected to it and detect\
    \ anomalous properties, in real-time. However,\nthe limited processing and storage\
    \ capacity of these nodes might inhibit executing resource-\nintensive and precise\
    \ anomaly detection algorithms. End node anomaly detection are also\nunable to\
    \ identify communication anomalies that could possibly happen at the network\n\
    Sensors 2022, 22, 3273\n19 of 31\nlayer. A rather optimal anomaly identiﬁcation\
    \ can be executed at the gateway node level.\nAs discussed in Section 5, gateway\
    \ nodes have more storage and computational power\nand can serve as a more reliable\
    \ and robust security enforcement platform. In addition\nto its resource abundance,\
    \ the gateway node can also be set as a centralized anomaly\ndetection point for\
    \ both device and communication level anomalies. Such computation\ncapability\
    \ is well-suited to most smallholder agriculture applications as it eliminates\
    \ the\ncloud communication and computation needed for further decisions. The fact\
    \ that measures\ncan be taken in (near) real-time and using the already established\
    \ wireless communication\nmakes fog computing at the gateway level more promising.\
    \ For a bigger WSN setup with\nseveral and heterogeneous sub-networks and multiple\
    \ gateways, a more comprehensive\ncentralized anomaly detection can be carried\
    \ at higher level such as in cloud computing.\nAdvanced analytical and problem\
    \ identiﬁcation algorithms can also run efﬁciently on\nsuch platforms. A hybrid\
    \ edge and cloud computing based anomaly detection in WSN is\npresented in [140].\n\
    6. Discussion\nIn our analysis, we found a signiﬁcant growth in research effort\
    \ in IoT and WSN\napplications for smallholder agriculture over the last decade,\
    \ with speed-up in the years\n2017–2019. Not much of this work has been deployed\
    \ in farm plots. Figure 10 shows\ndistribution of works in smallholder agricultural\
    \ application domains on different WSN de-\nployment environment over the last\
    \ decade. Most work was conducted only experimentally\nand much remains to be\
    \ done in actual deployment setting.\nAdvances in hardware, software and communication\
    \ technology as well as increased\nequipment availability are reasons for the\
    \ increased research interest. In real and outdoor\ndeployment, the gateway and\
    \ sensing nodes need to be dispersed, especially when a wider\nspatial coverage\
    \ is needed. Sensing nodes shall be placed at the farm without risk of loosing\n\
    of transmission. Additionally, gateway placement should consider stable power\
    \ provision\nand a trustworthy communication channel. In doing so, range and network\
    \ lifetime\nmaximization shall be given utmost considerations. We found no projects\
    \ that addressed\nthese requirements over a wide time span. Moreover, data and\
    \ system validation appear\nnot to receive much attention. Long-term behavior\
    \ of deployed systems and sensed data\nquality must be evaluated repeatedly to\
    \ demonstrate system reliability and usefulness. This\nwill establish conﬁdence\
    \ in any decision-making that utilizes the generated information.\nOnly a few\
    \ of the projects were found to have longer implementation and validation\nperiods\
    \ [26,73,79,82,83,88,93]. The remainder were pilot studies or proofs of concept\
    \ with a\nshort experimentation period of maximally a month.\n0\n1\n2\n3\n4\n\
    5\n6\n7\n8\n9\n10\nPA\nLM\nWM\nPAIM\nPA\nLM\nWM\nPAIM\nPA\nLM\nWM\nPAIM\nPA\n\
    LM\nWM\nPAIM\nPA\nLM\nWM\nPAIM\nPA\nLM\nWM\nPAIM\nPA\nLM\nWM\nPAIM\nPA\nLM\nWM\n\
    PAIM\nPA\nLM\nWM\nPAIM\nPA\nLM\nWM\nPAIM\nPA\nLM\nWM\nPAIM\n2021\n2020\n2019\n\
    2018\n2017\n2016\n2015\n2014\n2013\n2012\n2011\nPAPER COUNT \nExperiment\nIndoor\n\
    Outdoor\nSimulation\nFigure 10. IoT and WSN domains and deployment environment\
    \ in smallholder agriculture researches\n(PA:Precision Agriculture, LM: Livestock\
    \ Management, WM: Weather Monitoring, PAIM: Pest and\nAnimal Infestation Monitoring).\
    \ The Y-axis labels denote works under each deployment environment\nand application\
    \ domain.\nSensors 2022, 22, 3273\n20 of 31\nFigures 11 and 12 present the reviewed\
    \ papers’ spatial and temporal distribution over\nthe years of interest and by\
    \ continent, respectively. In both ﬁgures, the Y axis denotes the\npercentage\
    \ distribution of projects from the total 53 reviews.\n0%\n10%\n20%\n30%\n40%\n\
    50%\n60%\n70%\nAfrica\nAsia\nLatin America\nPAPER COUNT \nPA\nLM\nWM\nPAIM\nFigure\
    \ 11. Spatial distribution to continent of IoT and WSN applications in smallholder\
    \ agriculture\n(PA:Precision Agriculture, LM: Livestock Management, WM: Weather\
    \ Monitoring, PAIM: Pest and\nAnimal Infestation Monitoring). The Y-axis denotes\
    \ percentage distribution of works in the three\ncontinents and over each application\
    \ domain.\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n\
    Paper count \nAfrica\nAsia\nLatin America\nFigure 12. Temporal distribution of\
    \ IoT and WSN applications in smallholder agriculture. The Y-axis\nvalues indicate\
    \ percentage distribution of works targeting each continent in the speciﬁed time\
    \ period.\nLooking into the continental distribution of projects, Asia is the\
    \ front-runner (Figure 11)\nand this aligns with the global Information Communication\
    \ Technology (ICT) development\nindex report of the International Telecommunication\
    \ Unit (ITU) [141]. Asian countries are\nreported to have better ICT coverage\
    \ and utilization, also in rural areas. This implies that ac-\ntive research is\
    \ less challenged and equipment may be more readily available. Nonetheless,\n\
    research in Africa also shows promise. An interesting factor is the heterogeneity\
    \ of research\non the African continent. There seems to be an equivalent effort\
    \ in all types of smallholder\napplication, possibly due to equivalent importance\
    \ and impact on farm productivity. We\nalso observed, only 29% of the total projects\
    \ in Africa are deployed in real-ﬁeld while 50%\nand 21% are experimental and\
    \ simulation executed, respectively. This is also similar in\nAsia but Latin America\
    \ has better real-ﬁeld execution.\nAs discussed in Section 5.1, PA is researched\
    \ most widely and usually for the purpose\nof irrigation management. Smallholder\
    \ farms apply, however, mostly rain-fed practices\nwith limited or minimal irrigation\
    \ and so there is potential mismatch between farmer infor-\nSensors 2022, 22,\
    \ 3273\n21 of 31\nmation needs and produced information. The ubiquity of PA and\
    \ irrigation management\nmay imply two things. First, WSN and IoT implementation\
    \ and management is easy in\na conﬁned area, as in plot-level deployment. It can\
    \ provide precise data readings with a\nsmall number of sensors and few controlling\
    \ nodes. Secondly, the application will not fully\nutilize the data provided by\
    \ the technology. Further research on advanced data analysis is\nneeded as all\
    \ four domains may have signiﬁcant effects towards sustainable agriculture.\n\
    Even though irrigation is important for sustainable and productive farming, it\
    \ is not\nalways a solution to the poor productivity of these farmers. Instead,\
    \ research must focus\nmore on other key parameters such as soil nutrient monitoring\
    \ or early draught prediction.\nSuch can address the urgently needed data by smallholder\
    \ farms and assist sustained and\nefﬁcient utilization of those. Soil moisture\
    \ data, for instance, can be used beyond irrigation\ndecisions such as in pest\
    \ management, decisions in appropriate sowing time and crop\ntype to plant [98,120,121].\
    \ Information from weather sensors may help farmers to take\nappropriate measures\
    \ in situations like drought.\nExisting projects utilize off-the-shelf equipment.\
    \ Furthermore, in smallholder farmer\ncommunity, technical maintenance and operation\
    \ skills may not sufﬁce. In dense de-\nployment schemes, the equipment costs may\
    \ also become a sustenance bottleneck. Such\nconditions could affect farmer interest\
    \ to use the technology. Hence, it is important to\nconsider alternatives like\
    \ producing custom-made devices by integrating components that\nare open source,\
    \ simple, affordable and easily accessible. Non-proprietary Arduino or\nRaspberry\
    \ Pi (RPi) based node micro-controllers can ﬁt to this purpose. In addition to\
    \ being\nopen source, these hardware allows researchers to experiment with and\
    \ program for a ﬁt\nto the speciﬁc needs. A serious online community support also\
    \ adds to the advantage of\nusing open source devices. Table 4 shows micro-controllers\
    \ used among reviewed projects.\nAs can be seen in the table, most of the works\
    \ used Arduino and RPi while in rare cases\nothers like Atmega, MICA and Waspmote\
    \ are mentioned. Proprietary hardware comes\nwith pre-installed ﬁrmware that avoids\
    \ programming and other technical skills at the\nexpense of ﬂexibility and ease\
    \ of customization.\nTable 4. Major micro-controllers used in smallholder agriculture\
    \ application projects (PA:Precision\nAgriculture, LM: Livestock Management, WM:\
    \ Weather Monitoring, PAIM: Pest and Animal Infesta-\ntion Monitoring).\nMicro-Controllers\n\
    Application Domain\nPA\nLM\nWM\nPAIM\nArduino\n[62,77,78,85,87,98,100]\n[86,104]\n\
    [81]\nAtmega\n[89,91,96,102]\n[79]\n[91,92]\nNodeMCU\n[58,68]\n[70]\n[60,61]\n\
    RPi\n[63,64,84,101,139]\n[83,105]\nOthers\n[73–76,110,113]\n[82,94]\nThrough open\
    \ source devices and in collaboration with local start-ups, vocational\nschools\
    \ or universities, the required equipment can be produced locally, may help to\
    \ mini-\nmize the needed budget and technical assistance. Training and empowering\
    \ members of\nthe community through hands-on and easily understandable materials,\
    \ following partic-\nipatory research where community members are included from\
    \ conception to execution\nand working with active projects in the area could\
    \ also be possible alternatives.\nOur review brings to light that Zigbee (35%)\
    \ and WiFi (31%) WSN communication\nstandards are common in smallholder agriculture.\
    \ As shown in Figure 10, most work\nis in indoor or experimental simulations,\
    \ and this explains the preference for these stan-\ndards. The signiﬁcant set-up\
    \ complexity and cost, limited area coverage and network\ninstability in Zigbee\
    \ and WiFi makes them less-ﬁtting to smallholder agriculture deploy-\nments. In\
    \ Figure 6, we show that recent experiments work with other WSN communication\n\
    Sensors 2022, 22, 3273\n22 of 31\ntechnologies, such as the Long range (LoRa)\
    \ LPWAN standard. This indicates future\npossibilities and rooms for emerging\
    \ WSN standards to be of use in the agriculture domain.\nFor gateway–server communication,\
    \ about 80% of the reviewed work used cellular\ncommunication while wired approach\
    \ is used in rest. They are legitimate choices for the\nsmallholder environment\
    \ though cellular communication is often unreliable. An alternative\nis to use\
    \ a micro-SD in the gateway for storage and later reading, to eliminate data loss\
    \ as\nwell as transmission mismatches. Edge computing (data processing at the\
    \ control layer) is\na recent technology that shall also be considered when communication\
    \ between gateway\nand server is challenged [142]. Communication standards used\
    \ for node–gateway and\ngateway–server among the reviewed works is presented in\
    \ Table 5.\nMost reviewed papers focused on establishing the WSN and on data acquisition.\n\
    The other computing actions deﬁned in Section 5.5 were discussed sparsely, as\
    \ shown in\nTable 3. Speciﬁcally, the data curation and quality assurance phases,\
    \ which are crucial for\nreliable information generation, were not specially described\
    \ in these works. Neither was\nmuch reported on usability of the collected data\
    \ or how such was used in real application\nanalysis. In the few papers that reported\
    \ on data analysis, approximately half used simple\ndata analysis, and a quarter\
    \ statistical and AI analysis. The typical analysis method\nreported was the determination\
    \ of a threshold value. For instance, to set an irrigation\ntrigger, a pre-deﬁned\
    \ soil water content level is checked against the sensor-derived soil\nmoisture\
    \ level. Or such could trigger an alert message regarding possible crop disease\
    \ that\nreaches farmers when the pre-set alert condition is met [60]. Although\
    \ these approaches\nare simple and require few computing resources, more precise\
    \ and robust applications\nrequire soft-coded implementations based on holistic\
    \ and exhaustive scenarios that are\nhard to handle with pre-sets. Proactive applications\
    \ of such type can also support reliable\nprediction and forecasting, which is\
    \ needed in many agriculture applications [23]. These\nmechanisms allow farmers\
    \ to acquire information ahead of time and be aware of what to\nanticipate on.\
    \ We postulate they may even come with a learning effect. This in turn will\n\
    prepare farmers for risks and spur them to explore alternative coping mechanisms.\n\
    Table 5. WSN and backend communication standards adopted in smallholder agriculture\
    \ applications\n(PA:Precision Agriculture, LM: Livestock Management, WM: Weather\
    \ Monitoring, PAIM: Pest and\nAnimal Infestation Monitoring).\nNetwork\nCommunication\
    \ Standard\nApplication Domain\nPA\nLM\nPAIM\nWM\nWSN\nBluetooth\n[95–98]\n[99]\n\
    GPRS/GSM\n[84,85]\n[86]\nLoRa/LoRaWAN\n[100–103]\n[104]\n[105]\nWiFi\n[58,59,89,98]\n\
    [60,61]\n[93]\nZigbee\n[62,73–78,88,106]\n[79,80]\n[81]\n[82,83]\nWired\n[63–65,68,96,113]\n\
    [92]\n[70,94]\nBackhaul\nGPRS/GSM\n[73,77,87–90,102]\n[86,104]\n[91,92]\n[93,94]\n\
    LoRa\n[106]\nWiFi\n[58,62–69,85,89,97,98]\n[60,61,99]\n[70,82]\nEthernet/standalone\n\
    [74,78,84,95,96,100,103,110,113,139]\n[79]\n[81]\n[83,105]\nReal-time farm monitoring\
    \ also needs to reﬂect the spatio-temporal dynamics that\nexist on the farm and\
    \ that can only be met with advanced computational algorithms,\nsuch as using\
    \ AI. The work by [100] is a good example in this context. The authors\ndeveloped\
    \ an agricultural prediction system, capable of generating future complications\n\
    based on sensor-derived time-series data processed with the auto-regressive integrated\n\
    moving average (ARIMA) model. This model deploys probabilistic analysis of time-series\n\
    properties of parameters of interest. The forecasted information is veriﬁed against\
    \ pre-\nloaded information to generate decision support information. Threshold\
    \ values change\nSensors 2022, 22, 3273\n23 of 31\non the basis of forecasts,\
    \ and when the farmer makes adjustments such lead to periodical\nupdates of thresholds.\
    \ New computing paradigms such as integration of AI and IoT (AIoT)\nare expected\
    \ to revolutionize the data acquisition and processing in IoT applications. Future\n\
    research shall assess how such innovations can be effectively utilized in agriculture\
    \ domain.\nAmong the reviewed works, 31 papers reported on their computing environment\
    \ with\n70%, 21% and 9% in cloud, private and edge computing, respectively. Mostly\
    \ some cloud\nenvironment is used as a persistent data repository and/or data\
    \ visualization platform.\nAbout 30% of the 70% projects involving cloud computing\
    \ utilized SaaS and IaaS such\nas The Things Network or Things Speak. Web-based\
    \ data presentation is the preferred\nmode in these works (57%), while 26% and\
    \ 17% utilized mobile applications and SMS data\npresentation, respectively.\n\
    The use of low-cost sensors creates a need to calibrate sensor readings, following\n\
    speciﬁc implementation requirements. Only some projects were found to report on\
    \ calibra-\ntion issues [87,94]. Since most projects were experimental, sensors\
    \ were used as provided\nby vendors, in off-the-shelf mode. Implementations that\
    \ use sensor readings for actual\ndecision-making, however, shall take appropriate\
    \ test and calibration measures before\ndeployment and production. Humans are\
    \ indispensable in the process of sensor parameter\ninterpretation but none of\
    \ the projects that we reviewed appeared to have considered the\nhuman skills\
    \ component. We recommend that any platform should integrate humans with\nsensors\
    \ for inclusive perception and validation.\nWe also observed that soil chemical\
    \ composition and nutrient sensing is almost nonex-\nistent in reviewed work.\
    \ Research and industry communities need to collaborate to ﬁll\nsuch gaps and\
    \ produce sensors for the unaddressed essential farming factors.\n7. Challenges\n\
    Any innovation or technological intervention comes with challenges and opportuni-\n\
    ties. Especially when the application is in a remote or resource-constrained location\
    \ where\nliteracy and awareness are minimal, various limitations may prevent successful\
    \ implemen-\ntation. This requires a thorough study and analysis of these factors.\
    \ The following are some\nof these challenges that our analysis reveals.\n•\n\
    High investment costs: The investments needed to produce and deploy a WSN and\n\
    IoT system are signiﬁcant, which may not be affordable by most projects. Hardware\n\
    costs are those for gateway and sensor nodes, recurring IoT connection, and power\n\
    provision, while open source tools exist, realistic deployments may need commercial\n\
    cloud applications such as SAAS, which are a substantial cost factor.\n•\nLittle\
    \ awareness: Stakeholders in the agri-chain typically have limited knowledge of\n\
    recent technological innovations. This is a cause of resistance against acceptance\
    \ of\nIoT and sensor technology.\n•\nLow availability of tools and skilled personnel:\
    \ Most IoT and WSN equipment are\nnot produced in the developing countries. Operation\
    \ and maintenance of devices may\nrequire considerable knowledge, language and\
    \ professional skills. Such are often thin\non the ground and this hinders full\
    \ deployment and utilization.\n•\nRegulatory and policy gaps: Telecommunications\
    \ of many developing world coun-\ntries have no clear regulatory arrangement of\
    \ WSN and IoT implementations. The al-\nlowed Industrial Scientiﬁc and Medical\
    \ (ISM) radio frequency range for WSN com-\nmunication is not set yet and no other\
    \ rules exist governing the use of frequency\nbandwidth. As a result, investments\
    \ are risky because node communication may\nbecome blocked or interrupted.\n•\n\
    Poor interoperability: IoT and WSN have evolved rapidly over the past ﬁve years.\n\
    A number of tools and platforms exist that can be used for the realization of\
    \ the\ntechnology. There is however no standard yet that guarantees their interoperability.\n\
    •\nLow data quality: WSN deployment often comes with exposure to extreme physical\n\
    conditions. This may cause reading faults and poor data quality. Sensor data reliability\n\
    may also be compromised by deployment errors. Incorrect calibration, inconsistent\n\
    Sensors 2022, 22, 3273\n24 of 31\npower supply and unreliable communications can\
    \ result in data errors such as outliers,\ndrifts and missing values.\n8. Conclusions\n\
    Most smallholder farms are known to be resource-constrained and remotely located\n\
    which causes sincere challenges in in situ data collection. Consequently, farm-related\n\
    data are unavailable or is only found in small quantity, often fragmented or outdated.\n\
    This leads to uninformed farming practices, and consequently poor production and\
    \ low\nyields. IoT and WSN may prove to be an assisting tool in addressing information\
    \ needs.\nMonitoring crops and soil at farm-scale and in (near) real-time with\
    \ reasonable cost may\nhelp to determine the investments needed to upscale productivity.\n\
    The objective of this study is to investigate the potential for actual use of\
    \ IoT and WSN\nin more data-intensive approaches to smallholder farm practices.\
    \ We focus on how the\ntechnology can acquire farm-speciﬁc and (near) real-time\
    \ data. The kinds of collected data,\nthe different application domains and the\
    \ alignment of research needs are also assessed.\nDesign and implementation considerations\
    \ in smallholder applications are explored as well.\nIoT and WSN have been put\
    \ in practice in large-scale commercial farms but seldomly\nin smallholder farming,\
    \ in spite of general agreement on its adaptability with reasonable\ncost [130,143,144].\
    \ Some promising demonstrations of this have been published. Existing\nworks are\
    \ mostly experimental and may still lack robustness for actual implementation.\n\
    Actual implementation requires trust in and robustness given that failure may\
    \ come with\nunacceptable economic consequences. As a result, investments should\
    \ be kept in check,\nand the usability of free and existing communication platforms\
    \ shall be explored with more\ncase studies and real applications.\nMoreover,\
    \ as most smallholder farms are nestled in poor infrastructural conditions,\n\
    ﬁt-for-all solutions do not typically work. Future work shall consider the poor\
    \ infrastruc-\nture and limited solution space that needs to be contextualized.\
    \ The limited or speciﬁc\nparameters being monitored in most existing projects\
    \ also imply that there is considerable\nroom to integrate additional physical\
    \ and chemical sensors. They may monitor weather,\nsoil, crop, pests, or provide\
    \ other data on farm inputs, their integration is essential. WSNs\nand related\
    \ technological interventions shall be implemented to set an acceptable stan-\n\
    dard of smart smallholder agriculture. Diverse and affordable sensors relevant\
    \ to farm\nproductivity, and applied in mass, may become essential.\nSecurity\
    \ is a topic mostly overlooked and in its early stage of research in IoT and WSN\n\
    application to agriculture [145,146]. Particularly, no work is found that addresses\
    \ this issue\namong the reviewed projects. The need to integrate various communication\
    \ standards,\ndevices and data as well as data accuracy and availability need\
    \ in smart agriculture makes\nsecurity a challenge. Some of the security issues\
    \ speciﬁc to agriculture and discussed in\nSection 5.6 exacerbate the severity\
    \ of the security challenge in this domain. Security threats\nexist at different\
    \ levels of the IoT ecosystem and encompass both physical and logical\nissues.\
    \ Data integrity, reliability, accuracy and availability are qualities expected\
    \ of a smart\nagriculture system. All these create extra demands and opportunities\
    \ for a rigorous and\nin-depth researches addressing the matter. The constrained\
    \ nature of IoT and WSN devices\nis a setback to practice complex and promising\
    \ security solutions and this needs to be\naddressed while proposing security\
    \ measures.\nAs most of the reviewed projects are rooted in the prototype stage,\
    \ no discussion on\nhow such security concerns are addressed is found. Most anomaly\
    \ detection algorithms\nrely on some well-deﬁned data and compare current situation\
    \ against this to detect any\ndeviation or changes. This requires a spatially\
    \ and temporally detailed and reliable data.\nHowever, the absence or sparsity\
    \ of farm-level information to use as a reference is a concern\nwhen it comes\
    \ to smallholder farms. The fact that anomalies and other security problems\n\
    potentially inculcate to unreliable decision support system urges for more attention\
    \ to the\ndomain. Hence, it is necessary to know the existing security vulnerabilities\
    \ and create\nmechanisms to mitigate the effects of incidents. Equal emphasis\
    \ shall be given to security\nSensors 2022, 22, 3273\n25 of 31\nmeasures as to\
    \ the deployment of the agriculture system. Selection of appropriate commu-\n\
    nication standards, layer/s of security measures implementation, level of security\
    \ need\nand appropriate security measures identiﬁcation shall be executed parallel\
    \ to the system’s\nfunctionality development. The usability of existing security\
    \ and anomaly management\ntechniques for IoT and WSN in agriculture is an open\
    \ challenge yet to be investigated.\nInteroperability and data abstraction are\
    \ two functionalities a data curation operation\nin agriculture application needs\
    \ to offer. Seamless integration of all data coming from\nvarious sources and\
    \ data conversion shall be handled on this phase. Open standards such\nas the\
    \ ones by Open Geospatial Consortium (OGC) provide common languages known\nas\
    \ sensor model language (SML) to deﬁne sensors and their processes, semantically\
    \ and\nreduce the syntactic heterogeneity of data representations [147]. Such\
    \ open standards\nsupport efﬁcient machine-to-machine communication and provide\
    \ seamless integration of\nheterogeneous devices. It also allows users to interact\
    \ or access both raw and processed\ndata and reduce latency time. We believe relying\
    \ on such standard for any WSN setup\nhelps in avoiding and early identiﬁcation\
    \ of data anomalies. Such tools shall be explored\nmore and adopted to incorporate\
    \ these functionality to the data curation phase which is\nmissing in all the\
    \ reviewed works. The work by [93] is an exception which reports on\nutilizing\
    \ the OGC sensor web enablement (SWE) platform for their WSN setup.\nCost and\
    \ quality are important factors that inﬂuence such implementations and\nprojects\
    \ must focus on affordability and efﬁciency of technological innovations. The\
    \ in-\ntegration of human and electronic sensors can be one way to achieve these\
    \ requirements.\nA data acquisition platform that utilizes the most abundantly\
    \ found and precise sensors\nwithin the smallholder community, humans, along with\
    \ artiﬁcial sensors is effective for\na whole-sided and inclusive perception.\
    \ Humans’ read data can also be used to validate\nthe accuracy of sensors’ read\
    \ data. Geo-referencing sensing nodes is important to obtain\nlocation-speciﬁc\
    \ data and monitor farm-level spatial variability which is relevant in most\n\
    agricultural applications such as PA. Most applications reviewed, however, lack\
    \ such\ncapability and this remains a research gap to be ﬁlled.\nOne must note\
    \ the inherent limitations of IoT and WSN, which include limited spatial\ncoverage\
    \ and data quality. These need to be recognized and addressed. Consequently,\n\
    there is a need to augment with other data acquisition approaches [63,66,84,148].\
    \ Such a\ndata infrastructure must address required spatial and temporal scales.\
    \ This can be done\nwith complimentary approaches. The use of RS and participatory\
    \ tools alongside IoT and\nWSNs is of particular importance [66,149,150].\nCitizens’\
    \ abundance and capacity to generate as well as validate sensors’ acquired\ndata\
    \ could play a critical role at all stages of the farm data generation: from collection\
    \ to\nlogical decision making and interpretations. Human observations can be integrated\
    \ with\nWSNs to elevate the limited spatial coverage and enrich the data basket.\
    \ Some community\nmembers can also be used to communicate a rather complex ﬁndings\
    \ to farmers in a simple\nand usable forms [151]. These open doors to incorporate\
    \ citizens in any technological\ninterventions to bring about fully-ﬂedged, reliable,\
    \ sustainable and consumable product.\nSoil characteristics speciﬁcally are important\
    \ factors for improved farm yields and\nare must-have determinants for any intervention.\
    \ The spatial and temporal variability of\nsoil attributes needs to be understood,\
    \ both before and during the crop season, to help\nfarmers take appropriate measures.\
    \ Based on the ﬁndings of this paper, the authors are\nundertaking soil physical\
    \ and chemical properties monitoring and data collection research\nthrough sensors\
    \ deployment in two districts located in northern Ethiopia. An experimental\n\
    investigation result of the work is to be communicated soon.\nFunding: This study\
    \ was supported by the Dutch organization for internationalization in education\n\
    (Nufﬁc), University of Twente, Faculty of Geo-information Science and Earth Observation\
    \ (ITC) and\nMinistry of Science and Higher Education of Ethiopia (MoSHE) under\
    \ the Ethiopian Educational\nNetwork to Support Agricultural Transformation (EENSAT)\
    \ project (CF13198, 2016).\nSensors 2022, 22, 3273\n26 of 31\nConﬂicts of Interest:\
    \ The authors declare no conﬂict of interest. The funders had no role in the design\n\
    of the study; in the collection, analyses, or interpretation of data; in the writing\
    \ of the manuscript,\nor in the decision to publish the results.\nReferences\n\
    1.\nRicciardi, V.; Ramankutty, N.; Mehrabi, Z.; Jarvis, L.; Chookolingo, B. How\
    \ much of the world’s food do smallholders produce?\nGlob. Food Secur. 2018, 17,\
    \ 64–72. [CrossRef]\n2.\nInternational Labour Organization. Employment in Agriculture\
    \ (% of Total Employment) (Modeled ILO Estimate) | Data; International\nLabour\
    \ Organization: Geneva, Switzerland, 2017.\n3.\nFAO; IFAD; UNICEF; WFP; WHO. Food\
    \ Security and Nutrition in the World the State of Building Climate Resilience\
    \ for Food Security\nand Nutrition; Technical Report; FAO: Rome, Italy, 2018.\n\
    4.\nWorld Food Program. World Food Programme in Ethiopia, Federal Democratic Republic\
    \ of (ET); Technical Report; WFP: Rome,\nItaly, 2016.\n5.\nLowder, S.K.; Sánchez,\
    \ M.V.; Bertini, R. Which farms feed the world and has farmland become more concentrated?\
    \ World Dev.\n2021, 142, 105455. [CrossRef]\n6.\nFAO; IFAD; UNICEF; WFP; WHO.\
    \ The State of Food Security and Nutrition in the World 2017—Building Resilience\
    \ for Peace and Food\nSecurity; Technical Report; Food and Agriculture Organization\
    \ of the United Nations: Rome, Italy, 2017.\n7.\nRapsomanikis, G. The Economic\
    \ Lives of Smallholder Farmers: An Analysis Based on Household Data from Nine\
    \ Countries; Technical\nReport; Food and Agriculture Organization of the United\
    \ Nations: Rome, Italy, 2015.\n8.\nHanson, W.; Heeks, R. Impact of ICTs-in-Agriculture\
    \ on Rural Resilience in Developing Countries; Working Paper Development\nInformatics\
    \ 84; Centre for Development Informatics Global Development Institute, SEED: Vienna,\
    \ Austria, 2020. [CrossRef]\n9.\nEuropean Commission Development and Cooperation.\
    \ Sustainable Agriculture for the Future We Want; Technical Report; European\n\
    Commission: Brussels, Belgium, 2012.\n10.\nKamilaris, A.; Kartakoullis, A.; Prenafeta-Boldú,\
    \ F.X. A review on the practice of big data analysis in agriculture. Comput. Electron.\n\
    Agric. 2017, 143, 23–37. [CrossRef]\n11.\nIngram, J.; Maye, D. What Are the Implications\
    \ of Digitalisation for Agricultural Knowledge? Front. Sustain. Food Syst. 2020,\n\
    4, 66. [CrossRef]\n12.\nKrall, S. What Is Sustainable Agriculture? Technical Report;\
    \ Deutsche Gesellschaft für Internationale Zusammenarbeit (GIZ)\nGmbH: Bonn, Germany,\
    \ 2015.\n13.\nHenrichs, E.; Noack, T.; Pinzon Piedrahita, A.M.P.; Salem, M.A.;\
    \ Stolz, J.; Krupitzer, C. Can a Byte Improve Our Bite? An Analysis\nof Digital\
    \ Twins in the Food Industry. Sensors 2021, 22, 115. [CrossRef] [PubMed]\n14.\n\
    Keita, N.; Carfagna, E. Overview of methodological issues for research to improve\
    \ agricultural statistics in developing countries.\nIn Proceedings of the ICAS-V,\
    \ Nice, France, 19–24 September 2010; pp. 1–26.\n15.\nWulf, H.; Mulder, T.; Schaepman,\
    \ M.E.; Jörg, P.C. Remote Sesing of Soils; University of Zurich: Zurich, Switzerland,\
    \ 2014; pp. 1–71.\n[CrossRef]\n16.\nZerger, A.; Rossel, R.V.; Swain, D.; Wark,\
    \ T.; Handcock, R.N.; Doerr, V.; Bishop-Hurley, G.; Doerr, E.; Gibbons, P.; Lobsey,\
    \ C.\nEnvironmental sensor networks for vegetation, animal and soil sciences.\n\
    Int. J. Appl. Earth Obs. Geo-Inf. 2010, 12, 303–316.\n[CrossRef]\n17.\nDabrowska-Zielinska,\
    \ K.; Budzynska, M.; Gurdak, R.; Musial, J.; Malinska, A.; Gatkowska, M.; Bartold,\
    \ M. Application of\nSentinel-1 VH and VV and Sentinel-2 for soil moisture studies.\
    \ In Proceedings of the Active and Passive Microwave Remote Sensing for\nEnvironmental\
    \ Monitoring; Notarnicola, C., Pierdicca, N., Santi, E., Eds.; International Society\
    \ for Optics and Photonics, SPIE: San\nDiego, CA, USA, 2017; Volume 10426, pp.\
    \ 75–86. [CrossRef]\n18.\nJain, M.; Mondal, P.; Galford, G.L.; Fiske, G.; DeFries,\
    \ R.S. An automated approach to map winter cropped area of smallholder\nfarms\
    \ across large scales using MODIS imagery. Remote Sens. 2017, 9, 566. [CrossRef]\n\
    19.\nBurzykowska, A.; Velasco, A.; Klaase, A.; Huber, S.; Geerders, P.; Dost,\
    \ R.; Vrielink, A.; Haas, E.; Rolf, A.; Aparicio, E. How can\nEarth Observation\
    \ support agriculture development in rural areas? EO4SD—Agriculture and Rural\
    \ Development cluster. In A\nBetter World; Tudor Rose: Leicester, UK, 2018; pp.\
    \ 18–23.\n20.\nRokhmana, C.A. The Potential of UAV-based Remote Sensing for Supporting\
    \ Precision Agriculture in Indonesia. Procedia Environ.\nSci. 2015, 24, 245–253.\
    \ [CrossRef]\n21.\nAdão, T.; Hruška, J.; Pádua, L.; Bessa, J.; Peres, E.; Morais,\
    \ R.; Sousa, J.J. Hyperspectral imaging: A review on UAV-based sensors,\ndata\
    \ processing and applications for agriculture and forestry. Remote Sens. 2017,\
    \ 9, 1110. [CrossRef]\n22.\nNavarro, E.; Costa, N.; Pereira, A. A systematic review\
    \ of IoT solutions for smart farming. Sensors 2020, 20, 4231. [CrossRef]\n[PubMed]\n\
    23.\nSingh, V.; Sharma, N.; Singh, S. A review of imaging techniques for plant\
    \ disease detection. Artif. Intell. Agric. 2020, 4, 229–242.\n[CrossRef]\n24.\n\
    Dlodlo, N.; Kalezhi, J. The internet of things in agriculture for sustainable\
    \ rural development. In Proceedings of the 2015\nInternational Conference on Emerging\
    \ Trends in Networks and Computer Communications (ETNCC), Windhoek, Namibia,\n\
    17–20 May 2015; p. 6. [CrossRef]\n25.\nNachankar, P.J.; Somani, M.G.; Singh, D.M.;\
    \ Katkar, S.N. IoT in Agriculture. Int. Res. J. Eng. Technol. 2018, 5, 592—596.\n\
    Sensors 2022, 22, 3273\n27 of 31\n26.\nDavcev, D.; Mitreski, K.; Trajkovic, S.;\
    \ Nikolovski, V.; Koteli, N. IoT agriculture system based on LoRaWAN. In Proceedings\
    \ of\nthe 2018 14th IEEE International Workshop on Factory Communication Systems\
    \ (WFCS), Imperia, Italy, 13–15 June 2018; pp. 1–4.\n27.\nOjo, M.O.; Viola, I.;\
    \ Baratta, M.; Giordano, S. Practical experiences of a smart livestock location\
    \ monitoring system leveraging\ngnss, lorawan and cloud services. Sensors 2022,\
    \ 22, 273. [CrossRef] [PubMed]\n28.\nWeldegiorges, Z.K. Beneﬁts, Constraints and\
    \ Adoption of Technologies Introduced through the Eco-Farm Project in Ethiopia.\n\
    Master’s Thesis, Norwegian University of Life Sciences, Aas, Norway, 2014.\n29.\n\
    Lowder, S.K.; Skoet, J.; Raney, T. The Number, Size, and Distribution of Farms,\
    \ Smallholder Farms, and Family Farms Worldwide.\nWorld Dev. 2016, 87, 16–29.\
    \ [CrossRef]\n30.\nPaul, M.; wa G˜ıth˜ınji, M. Small farms, smaller plots: Land\
    \ size, fragmentation, and productivity in Ethiopia. J. Peasant Stud. 2018,\n\
    45, 757–775. [CrossRef]\n31.\nCo-operative, D.; Development, E. A Framework for\
    \ the Development of Smallholder Farmers through Cooperative Development;\nTechnical\
    \ Report; Department of Agriculture Forestry and Fisheries: Pretoria, South Africa,\
    \ 2012.\n32.\nCao, H.; Li, Y.; Chen, G.; Chen, D.; Qu, H.; Ma, W. Identifying\
    \ the limiting factors driving the winter wheat yield gap on\nsmallholder farms\
    \ by agronomic diagnosis in North China Plain. J. Integr. Agric. 2019, 18, 1701–1713.\
    \ [CrossRef]\n33.\nDutta, S.; Chakraborty, S.; Goswami, R.; Banerjee, H.; Majumdar,\
    \ K.; Li, B.; Jat, M.L. Maize yield in smallholder agriculture\nsystem—An approach\
    \ integrating socioeconomic and crop management factors. PLoS ONE 2020, 15, e0229100.\
    \ [CrossRef]\n[PubMed]\n34.\nCornejo-Velazquez, E.; Acevedo-Sandoval, O.A.; Romero-Trejo,\
    \ H.; Toriz-Palacios, A. Low-cost Technological Strategies for\nSmallholders Sustainability:\
    \ A Review. J. Technol. Manag. Innov. 2020, 15, 105–113. [CrossRef]\n35.\nTambo,\
    \ J.A.; Kansiime, M.K.; Mugambi, I.; Rwomushana, I.; Kenis, M.; Day, R.K.; Lamontagne-Godwin,\
    \ J. Understanding\nsmallholders’ responses to fall armyworm (Spodoptera Frugiperda)\
    \ Invasion: Evid. Five African Countries.Sci. Total Environ. 2020,\n740, 140015.\
    \ [CrossRef] [PubMed]\n36.\nClause, V.; Taverner, D.; Hayward, T. Space for Agriculture\
    \ in Developing Countries; Technical Report; UK Space Agency International\nPartnerships\
    \ Programme: Swindon, UK, 2018.\n37.\nGaffney, J.; Challender, M.; Califf, K.;\
    \ Harden, K. Building bridges between agribusiness innovation and smallholder\
    \ farmers: A\nreview. Glob. Food Secur. 2019, 20, 60–65. [CrossRef]\n38.\nShibusawa,\
    \ S.; Haché, C. Data Collection and Analysis Methods for Data from Field Experiments.\
    \ In Systems Analysis and\nModelling in Food and Agriculture; Ting, K., Fleisher,\
    \ D.H., Rodriguez, L.F., Eds.; UNESCO-EOLSS: Oxford, UK, 2009; p. 29.\n39.\nDaum,\
    \ T.; Buchwald, H.; Gerlicher, A.; Birner, R. Smartphone apps as a new method\
    \ to collect data on smallholder farming systems in\nthe digital age: A case study\
    \ from Zambia. Comput. Electron. Agric. 2018, 153, 144–150. [CrossRef]\n40.\n\
    Lobell, D.B.; Azzari, G.; Burke, M.; Gourlay, S.; Jin, Z.; Kilic, T.; Murray,\
    \ S. Eyes in the Sky, Boots on the Ground: Assessing\nSatellite- and Ground-Based\
    \ Approaches to Crop Yield Measurement and Analysis. Am. J. Agric. Econ. 2020,\
    \ 102, 202–219.\n[CrossRef]\n41.\nJayaraman, P.P.; Yavari, A.; Georgakopoulos,\
    \ D.; Morshed, A.; Zaslavsky, A. Internet of things platform for smart farming:\n\
    Experiences and lessons learnt. Sensors 2016, 16, 1884. [CrossRef]\n42.\nYalew,\
    \ S.G.; van Griensven, A.; Mul, M.L.; van der Zaag, P. Land suitability analysis\
    \ for agriculture in the Abbay basin using\nremote sensing, GIS and AHP techniques.\
    \ Model. Earth Syst. Environ. 2016, 2, 101. [CrossRef]\n43.\nSinha, P.; Robson,\
    \ A.; Schneider, D.; Kilic, T.; Mugera, H.K.; Ilukor, J.; Tindamanyire, J.M. The\
    \ potential of in situ hyperspectral\nremote sensing for differentiating 12 banana\
    \ genotypes grown in Uganda. ISPRS J. Photogramm. Remote Sens. 2020, 167, 85–103.\n\
    [CrossRef]\n44.\nSchumann, A.W. Precise placement and variable rate fertilizer\
    \ application technologies for horticultural crops. Horttechnology\n2010, 20,\
    \ 34–40. [CrossRef]\n45.\nGSARS. Global Strategy to Improve Agricultural and Rural\
    \ Statistics (GSARS): Handbook on Remote Sensing for Agricultural Statistics;\n\
    GSARS: Rome, Italy, 2017. [CrossRef]\n46.\nKhamala, E. Review of the Available\
    \ Remote Sensing Tools, Products, Methodologies and Data to Improve Crop Production\
    \ Forecasts;\nTechnical Report; FAO: Rome, Italy, 2017.\n47.\nBabaeian, E.; Sadeghi,\
    \ M.; Jones, S.B.; Montzka, C.; Vereecken, H.; Tuller, M. Ground, Proximal, and\
    \ Satellite Remote Sensing of\nSoil Moisture. Rev. Geophys. 2019, 57, 530–616.\
    \ [CrossRef]\n48.\nBégué, A.; Arvor, D.; Lelong, C.; Vintrou, E.; Simoes, M. Agricultural\
    \ Systems Studies using Remote Sensing. In Remote Sensing\nHandbook, Volume 2:\
    \ Land Resources Monitoring, Modeling, and Mapping with Remote Sensing; CRC Press:\
    \ Boca Raton, FL, USA, 2019.\n49.\nBartholomeus, H.; Kooistra, L.; Stevens, A.;\
    \ van Leeuwen, M.; van Wesemael, B.; Ben-Dor, E.; Tychon, B. Soil organic carbon\n\
    mapping of partially vegetated agricultural ﬁelds with imaging spectroscopy. Int.\
    \ J. Appl. Earth Obs. Geoinf. 2011, 13, 81–88.\n[CrossRef]\n50.\nSinﬁeld, J.V.;\
    \ Fagerman, D.; Colic, O. Evaluation of sensing technologies for on-the-go detection\
    \ of macro-nutrients in cultivated\nsoils. Comput. Electron. Agric. 2010, 70,\
    \ 1–18. [CrossRef]\n51.\nMarino, S.; Alvino, A. Proximal sensing and vegetation\
    \ indices for site-speciﬁc evaluation on an irrigated crop tomato. Eur. J.\nRemote\
    \ Sens. 2014, 47, 271–283. [CrossRef]\n52.\nGholizadeh, A.; Kopaˇcková, V. Detecting\
    \ vegetation stress as a soil contamination proxy: A review of optical proximal\
    \ and\nremote sensing techniques. Int. J. Environ. Sci. Technol. 2019, 16, 2511–2524.\
    \ [CrossRef]\nSensors 2022, 22, 3273\n28 of 31\n53.\nGe, Y.; Thomasson, J.A.;\
    \ Sui, R. Remote sensing of soil properties in precision agriculture: A review.\
    \ Front. Earth Sci. 2011,\n5, 229–238. [CrossRef]\n54.\nMeola, A. Why IoT, Big\
    \ Data & Smart Farming Are the Future of Agriculture; Technical Report; FAO: Rome,\
    \ Italy, 2017.\n55.\nAbdullah, A.; Enazi, S.A.; Damaj, I. AgriSys: A smart and\
    \ ubiquitous controlled-environment agriculture system. In Proceedings\nof the\
    \ 2016 3rd MEC International Conference on Big Data and Smart City (ICBDSC), Muscat,\
    \ Oman, 15–16 March 2016; p. 6.\n[CrossRef]\n56.\nWu, R.; Xu, Y.; Li, L.; Zha,\
    \ J.; Li, R. Design and implementation of an intelligent monitoring system based\
    \ on ZigBee for the\nagricultural greenhouse. In Advanced Technologies in Ad Hoc\
    \ and Sensor Networks; Lecture Notes in Electrical Engineering; Wang,\nX., Cui,\
    \ L., Guo, Z., Eds.; Springer: Berlin/Heidelberg, Germany, 2014; Volume 295 LNEE,\
    \ pp. 195–203. [CrossRef]\n57.\nPage, M.J.; McKenzie, J.E.; Bossuyt, P.M.; Boutron,\
    \ I.; Hoffmann, T.C.; Mulrow, C.D.; Shamseer, L.; Tetzlaff, J.M.; Akl, E.A.;\n\
    Brennan, S.E.; et al. The PRISMA 2020 statement: An updated guideline for reporting\
    \ systematic reviews. BMJ 2021, 372, n71.\n[CrossRef] [PubMed]\n58.\nDholu, M.;\
    \ Ghodinde, K.A. Internet of Things (IoT) for Precision Agriculture Application.\
    \ In Proceedings of the 2018 2nd\nInternational Conference on Trends in Electronics\
    \ and Informatics (ICOEI), Tirunelveli, India, 11–12 May 2018; pp. 339–342.\n\
    [CrossRef]\n59.\nAshifuddin Mondal, M.; Rehena, Z. IoT Based Intelligent Agriculture\
    \ Field Monitoring System. In Proceedings of the 2018 8th\nInternational Conference\
    \ on Cloud Computing, Data Science & Engineering (Conﬂuence), Noida, India, 11–12\
    \ January 2018;\npp. 625–629. [CrossRef]\n60.\nFoughali, K.; Fathallah, K.; Frihida,\
    \ A. A Cloud-IoT based decision support system for potato. Procedia Comput. Sci.\
    \ 2019,\n160, 616–623. [CrossRef]\n61.\nAraby, A.A.; Abd Elhameed, M.M.; Magdy,\
    \ N.M.; Said, L.A.; Abdelaal, N.; Abd Allah, Y.T.; Darweesh, M.S.; Fahim, M.A.;\n\
    Mostafa, H. Smart IoT Monitoring System for Agriculture with Predictive Analysis.\
    \ In Proceedings of the 2019 8th International\nConference on Modern Circuits\
    \ and Systems Technologies (MOCAST), Thessaloniki, Greece, 13–15 May 2019; pp.\
    \ 1–4. [CrossRef]\n62.\nMunir, M.S.; Bajwa, I.S.; Cheema, S.M. An intelligent\
    \ and secure smart watering system using fuzzy logic and blockchain. Comput.\n\
    Electr. Eng. 2019, 77, 109–119. [CrossRef]\n63.\nGoap, A.; Sharma, D.; Shukla,\
    \ A.K.; Rama Krishna, C. An IoT based smart irrigation management system using\
    \ Machine learning\nand open source technologies. Comput. Electron. Agric. 2018,\
    \ 155, 41–49. [CrossRef]\n64.\nNageswara Rao, R.; Sridhar, B. IoT based smart\
    \ crop-ﬁeld monitoring and automation irrigation system. In Proceedings of the\n\
    2018 2nd International Conference on Inventive Systems and Control (ICISC), Coimbatore,\
    \ India, 19–20 January 2018; pp. 478–483.\n[CrossRef]\n65.\nNawandar, N.K.; Satpute,\
    \ V.R. IoT based low cost and intelligent module for smart irrigation system.\
    \ Comput. Electron. Agric.\n2019, 162, 979–990. [CrossRef]\n66.\nA. Al-Mulla,\
    \ Y.; B. Al-Badi, T. IoT and RS Techniques for Enhancing Water Use Efﬁciency and\
    \ Achieving Water Security. In\nProceedings of the 4th International Conference\
    \ on Machine Learning and Machine Intelligence, Sanya, China, 22–24 December\n\
    2021; Association for Computing Machinery: New York, NY, USA, 2021; pp. 83–88.\
    \ [CrossRef]\n67.\nKumar, A.; Kumar, A.; De, A.; Shekhar, S.; Singh, R.K. IoT\
    \ based farming recommendation system using soil nutrient and\nenvironmental condition\
    \ detection. Int. J. Innov. Technol. Explor. Eng. 2019, 8, 3055–3060. [CrossRef]\n\
    68.\nDuangsuwan, S.; Teekapakvisit, C.; Maw, M.M. Development of soil moisture\
    \ monitoring by using IoT and UAV-SC for smart\nfarming application. Adv. Sci.\
    \ Technol. Eng. Syst. 2020, 5, 381–387. [CrossRef]\n69.\nMishra, D.; Abbas, A.;\
    \ Pande, T.; Pandey, A.K.; Agrawal, K.K.; Yadav, R.S. Smart agriculture system\
    \ using IoT. In Proceedings of\nthe Third International Conference on Advanced\
    \ Informatics for Computing Research, ICAICR ’19, Shimla, India, 15–16 June\n\
    2019. [CrossRef]\n70.\nMath, R.K.M.; Dharwadkar, N.V. IoT Based low-cost weather\
    \ station and monitoring system for precision agriculture in India. In\nProceedings\
    \ of the 2018 2nd International Conference on I-SMAC (I-SMAC 2018), Palladam,\
    \ India, 30–31 August 2018; pp. 81–86.\n[CrossRef]\n71.\nFerdoush, T.E.; Tahsin,\
    \ M.; Taher, K.A. Innovative smart farming system with wimax and solar energy.\
    \ In Proceedings of the\nInternational Conference on Computing Advancements, Dhaka,\
    \ Bangladesh, 10–12 January 2020; pp. 1–2.\n72.\nOjha, T.; Misra, S.; Raghuwanshi,\
    \ N.S.; Singh Raghuwanshi, N. Wireless sensor networks for agriculture: The state-of-the-art\
    \ in\npractice and future challenges. Comput. Electron. Agric. 2015, 118, 66–84.\
    \ [CrossRef]\n73.\nMafuta, M.; Zennaro, M.; Bagula, A.; Ault, G.; Gombachika,\
    \ H.; Chadza, T. Successful deployment of a Wireless Sensor Network\nfor precision\
    \ agriculture in Malawi. In Proceedings of the 2012 IEEE 3rd International Conference\
    \ on Networked Embedded\nSystems for Every Application (NESEA 2012), Liverpool,\
    \ UK, 13–14 December 2012; pp. 1–7. [CrossRef]\n74.\nAkka¸s, M.A.; Sokullu, R.\
    \ An IoT-based greenhouse monitoring system with Micaz motes. Procedia Comput.\
    \ Sci. 2017, 113, 603–608.\n[CrossRef]\n75.\nCaicedo-Ortiz, J.G.; De-la Hoz-Franco,\
    \ E.; Morales Ortega, R.; Piñeres-Espitia, G.; Combita-Niño, H.; Estévez, F.;\
    \ Cama-Pinto,\nA. Monitoring system for agronomic variables based in WSN technology\
    \ on cassava crops. Comput. Electron. Agric. 2018,\n145, 275–281. [CrossRef]\n\
    Sensors 2022, 22, 3273\n29 of 31\n76.\nEstrada-Lopez, J.J.; Castillo-Atoche, A.A.;\
    \ Vazquez-Castillo, J.; Sanchez-Sinencio, E. Smart Soil Parameters Estimation\
    \ System\nUsing an Autonomous Wireless Sensor Network with Dynamic Power Management\
    \ Strategy. IEEE Sens. J. 2018, 18, 8913–8923.\n[CrossRef]\n77.\nMulenga, R.;\
    \ Kalezhi, J.; Musonda, S.K.; Silavwe, S. Applying Internet of Things in Monitoring\
    \ and Control of an Irrigation System\nfor Sustainable Agriculture for Small-Scale\
    \ Farmers in Rural Communities. In Proceedings of the IEEE PES/IAS PowerAfrica\n\
    (PowerAfrica 2018), Cape Town, South Africa, 28–29 June 2018; pp. 841–845. [CrossRef]\n\
    78.\nBodunde, O.P.; Adie, U.C.; Ikumapayi, O.M.; Akinyoola, J.O.; Aderoba, A.A.\
    \ Architectural design and performance evaluation of\na ZigBee technology based\
    \ adaptive sprinkler irrigation robot. Comput. Electron. Agric. 2019, 160, 168–178.\
    \ [CrossRef]\n79.\nSimbeye, D.S.; Zhao, J.; Yang, S. Design and deployment of\
    \ wireless sensor networks for aquaculture monitoring and control\nbased on virtual\
    \ instruments. Comput. Electron. Agric. 2014, 102, 31–42. [CrossRef]\n80.\nMashoko\
    \ Nkwari, P.K.; Rimer, S.; Paul, B.S. Cattle monitoring system using wireless\
    \ sensor network in order to prevent cattle\nrustling. In Proceedings of the 2014\
    \ IST-Africa Conference Proceedings, Pointe aux Piments, Mauritius, 7–9 May 2014.\
    \ [CrossRef]\n81.\nBapat, V.; Kale, P.; Shinde, V.; Deshpande, N.; Shaligram,\
    \ A. WSN application for crop protection to divert animal intrusions in\nthe agricultural\
    \ land. Comput. Electron. Agric. 2017, 133, 88–96. [CrossRef]\n82.\nTenzin, S.;\
    \ Siyang, S.; Pobkrut, T.; Kerdcharoen, T. Low cost weather station for climate-smart\
    \ agriculture. In Proceedings of\nthe 2017 9th International Conference on Knowledge\
    \ and Smart Technology (KST), Chonburi, Thailand, 1–4 February 2017;\npp. 172–177.\
    \ [CrossRef]\n83.\nNsabagwa, M.; Byamukama, M.; Kondela, E.; Otim, J.S. Towards\
    \ a robust and affordable Automatic Weather Station. Dev. Eng.\n2019, 4, 100040.\
    \ [CrossRef]\n84.\nPopovi´c, T.; Latinovi´c, N.; Peši´c, A.; Zeˇcevi´c, Ž.; Krstaji´c,\
    \ B.; Djukanovi´c, S. Architecting an IoT-enabled platform for precision\nagriculture\
    \ and ecological monitoring: A case study. Comput. Electron. Agric. 2017, 140,\
    \ 255–265. [CrossRef]\n85.\nSujatha, G.S.S. IoT Based Smart Agriculture System.\
    \ In Proceedings of the 2018 International Conference on Wireless Communi-\ncations,\
    \ Signal Processing and Networking (WiSPNET), Chennai, India, 22–24 March 2018;\
    \ pp. 1–4. [CrossRef]\n86.\nKoompairojn, S.; Puitrakul, C.; Bangkok, T.; Riyagoon,\
    \ N.; Ruengittinun, S. Smart tag tracking for livestock farming.\nIn\nProceedings\
    \ of the 2017 10th International Conference on Ubi-media Computing and Workshops\
    \ (Ubi-Media), Pattaya, Thailand,\n1–4 Ausgut 2017; pp. 1–4. [CrossRef]\n87.\n\
    Akhil, R.; Gokul, M.S.; Menon, S.; Nair, L.S. Automated Soil Nutrient Monitoring\
    \ for Improved Agriculture. In Proceedings of\nthe 2018 International Conference\
    \ on Communication and Signal Processing (ICCSP), Chennai, India, 3–5 April 2018;\
    \ pp. 688–692.\n[CrossRef]\n88.\nNúñez V., J.M.; Fonthal, F.R.; Quezada L., Y.M.\
    \ Design and Implementation of WSN and IoT for Precision Agriculture in Tomato\n\
    Crops. In Proceedings of the 2018 IEEE ANDESCON, Santiago de Cali, Colombia, 22–24\
    \ August 2018; p. 5. [CrossRef]\n89.\nHarun, A.N.; Mohamed, N.; Ahmad, R.; Rahim,\
    \ A.R.A.; Ani, N.N. Improved Internet of Things (IoT) monitoring system for\n\
    growth optimization of Brassica chinensis.Comput. Electron. Agric. 2019, 164,\
    \ 104836. [CrossRef]\n90.\nPutra, B.T.W.; Syahputra, W.N.H.; Rusdiamin.; Indarto.;\
    \ Anam, K.; Darmawan, T.; Marhaenanto, B. Comprehensive measurement\nand evaluation\
    \ of modern paddy cultivation with a hydroganics system under different nutrient\
    \ regimes using WSN and\nground-based remote sensing. Measurement 2021, 178, 109420.\
    \ [CrossRef]\n91.\nYang, J.; Sharma, A.; Kumar, R. IoT-based framework for smart\
    \ agriculture.\nInt. J. Agric. Environ. Inf. Syst. 2021, 12, 1–14.\n[CrossRef]\n\
    92.\nKhattab, A.; Habib, S.E.; Ismail, H.; Zayan, S.; Fahmy, Y.; Khairy, M.M.\
    \ An IoT-based cognitive monitoring system for early plant\ndisease forecast.\
    \ Comput. Electron. Agric. 2019, 166, 105028. [CrossRef]\n93.\nSawant, S.; Durbha,\
    \ S.S.; Jagarlapudi, A. Interoperable agro-meteorological observation and analysis\
    \ platform for precision\nagriculture: A case study in citrus crop water requirement\
    \ estimation. Comput. Electron. Agric. 2017, 138, 175–187. [CrossRef]\n94.\nMasinde,\
    \ M.; Bagula, A.; Nzioka, M. SenseWeather: Based weather monitoring system for\
    \ Kenya. In Proceedings of the 2013\nIST-Africa Conference & Exhibition (IST-Africa\
    \ 2013), Nairobi, Kenya, 29–31 May 2013; pp. 1–13.\n95.\nYoon, C.; Huh, M.; Kang,\
    \ S.; Park, J.; Lee, C.\nImplement smart farm with IoT technology.\nIn Proceedings\
    \ of the 2018\n20th International Conference on Advanced Communication Technology\
    \ (ICACT), Chuncheon, Korea, 11–14 February 2018;\npp. 749–752. [CrossRef]\n96.\n\
    Vieira, R.G.; Da Cunha, A.M.; Ruiz, L.B.; De Camargo, A.P. On the design of a\
    \ long range WSN for precision irrigation. IEEE\nSens. J. 2018, 18, 773–780. [CrossRef]\n\
    97.\nKjellby, R.A.; Cenkeramaddi, L.R.; Froytlog, A.; Lozano, B.B.; Soumya, J.;\
    \ Bhange, M. Long-range Self-powered IoT Devices for\nAgriculture Aquaponics Based\
    \ on Multi-hop Topology. In Proceedings of the 5th World Forum Internet Things\
    \ (WF-IoT 2019),\nLimerick, Ireland, 15–18 April 2019; pp. 545–549. [CrossRef]\n\
    98.\nAmmad Uddin, M.; Ayaz, M.; Aggoune, E.H.M.; Mansour, A.; Le Jeune, D. Affordable\
    \ broad agile farming system for rural and\nremote area. IEEE Access 2019, 7,\
    \ 127098–127116. [CrossRef]\n99.\nHirsch, C.; Bartocci, E.; Grosu, R. Capacitive\
    \ Soil Moisture Sensor Node for IoT in Agriculture and Home. In Proceedings of\n\
    the 2019 IEEE 23rd International Symposium on Consumer Technologies (ISCT), Ancona,\
    \ Italy, 19–21 June 2019; pp. 97–102.\n[CrossRef]\n100. dos Santos, U.J.L.; Pessin,\
    \ G.; da Costa, C.A.; da Rosa Righi, R. AgriPrediction: A proactive internet of\
    \ things model to anticipate\nproblems and improve production in agricultural\
    \ crops. Comput. Electron. Agric. 2019, 161, 202–213. [CrossRef]\nSensors 2022,\
    \ 22, 3273\n30 of 31\n101. Wu, Y.; Li, L.; Li, M.; Zhang, M.; Sun, H.; Sygrimis,\
    \ N.; Lai, W. Remote-Control System for Greenhouse Based on Open Source\nHardware.\
    \ IFAC-PapersOnLine 2019, 52, 178–183. [CrossRef]\n102. Mabele, L.; Mutegi, L.\
    \ Leveraging low-power wide area networks for precision farming: Limabora—A smart\
    \ farming case using\nLoRa modules, gateway, ttn and ﬁrebase in Kenya. In Interactive\
    \ Mobile Communication, Technologies and Learning; Auer, M.E.,\nTsiatsos, T.,\
    \ Eds.; Springer: Cham, Switzerland, 2019; Volume 909, pp. 259–272. [CrossRef]\n\
    103. Nigussie, E.; Olwal, T.; Musumba, G.; Tegegne, T.; Lemma, A.; Mekuria, F.\
    \ IoT-based irrigation management for smallholder\nfarmers in rural Sub-Saharan\
    \ Africa. Procedia Comput. Sci. 2020, 177, 86–93. [CrossRef]\n104. Ntawuzumunsi,\
    \ E.; Kumaran, S.; Sibomana, L. Self-powered smart beehive monitoring and control\
    \ system (Sbmacs). Sensors\n2021, 21, 3522. [CrossRef] [PubMed]\n105. Rezvani,\
    \ S.M.E.; Abyaneh, H.Z.; Shamshiri, R.R.; Balasundram, S.K.; Dworak, V.; Goodarzi,\
    \ M.; Sultan, M.; Mahns, B. IoT-based\nsensor data fusion for determining optimality\
    \ degrees of microclimate parameters in commercial greenhouse production of\n\
    tomato. Sensors 2020, 20, 6474. [CrossRef]\n106. Heble, S.; Kumar, A.; Prasad,\
    \ K.V.; Samirana, S.; Rajalakshmi, P.; Desai, U.B. A low power IoT network for\
    \ smart agriculture.\nIn Proceedings of the 2018 IEEE 4th World Forum on Internet\
    \ of Things (WF-IoT), Singapore, 5–8 February 2018; pp. 609–614.\n[CrossRef]\n\
    107. Biggs, P.; Garrity, J.; LaSalle, C.; Polomska, A.; Pepper, R. Harnessing\
    \ the Internet of Things for Global Development; Technical Report;\nInternational\
    \ Telecommunication Union (ITU): Geneva, Switzerland, 2016.\n108. Mekonnen, Y.;\
    \ Burton, L.; Sarwat, A.; Bhansali, S. IoT Sensor Network Approach for Smart Farming:\
    \ An Application in Food,\nEnergy and Water System. In Proceedings of the 2018\
    \ IEEE Global Humanitarian Technology Conference (GHTC), San Jose, CA,\nUSA, 18–21\
    \ October 2019. [CrossRef]\n109. Kumar, S.; Kumar, S.; Mishra, P.; Chaube, M.K.\
    \ Chapter 17—Internet of animal health things (IoAT): A new frontier in animal\n\
    biometrics and data analytics research. In IoT-Based Data Analytics for the Healthcare\
    \ Industry; Singh, S.K., Singh, R.S., Pandey, A.K.,\nUdmale, S.S., Chaudhary,\
    \ A., Eds.; Academic Press: Cambridge, MA, USA, 2021; pp. 261–275. [CrossRef]\n\
    110. Abd El-Kader, S.M.; Mohammad El-Basioni, B.M. Precision farming solution\
    \ in Egypt using the wireless sensor network\ntechnology. Egypt. Inform. J. 2013,\
    \ 14, 221–233. [CrossRef]\n111. Khedo, K.K.; Hosseny, M.R.; Toonah, M.Z. PotatoSense:\
    \ A wireless sensor network system for precision agriculture.\nIn\nProceedings\
    \ of the 2014 IST-Africa Conference Proceedings, Pointe aux Piments, Mauritius,\
    \ 7–9 May 2014; pp. 1–11. [CrossRef]\n112. Codeluppi, G.; Davoli, L.; Ferrari,\
    \ G. Forecasting air temperature on edge devices with embedded AI. Sensors 2021,\
    \ 21, 3973.\n[CrossRef] [PubMed]\n113. Srbinovska, M.; Gavrovski, C.; Dimcev,\
    \ V.; Krkoleva, A.; Borozan, V. Environmental parameters monitoring in precision\n\
    agriculture using wireless sensor networks. J. Clean. Prod. 2015, 88, 297–307.\
    \ [CrossRef]\n114. Morais, R.; Silva, N.; Mendes, J.; Adão, T.; Pádua, L.; López-Riquelme,\
    \ J.A.; Pavón-Pulido, N.; Sousa, J.J.; Peres, E. mySense:\nA comprehensive data\
    \ management environment to improve precision agriculture practices. Comput. Electron.\
    \ Agric. 2019,\n162, 882–894. [CrossRef]\n115. Koshy, S.S.; Sunnam, V.S.; Rajgarhia,\
    \ P.; Chinnusamy, K.; Ravulapalli, D.P.; Chunduri, S. Application of the internet\
    \ of things\n(IoT) for smart farming: A case study on groundnut and castor pest\
    \ and disease forewarning. CSI Trans. ICT 2018, 6, 311–318.\n[CrossRef]\n116.\
    \ Dutta, D.; Natta, D.; Mandal, S.; Ghosh, N. MOOnitor: An IoT based multi-sensory\
    \ intelligent device for cattle activity monitoring.\nSens. Actuators A Phys.\
    \ 2022, 333, 113271. [CrossRef]\n117. Suseendran, G.; Balaganesh, D. Smart cattle\
    \ health monitoring system using IoT sensors. Mater. Today Proc. 2021, in press.\n\
    [CrossRef]\n118. Alonso, R.S.; Sittón-Candanedo, I.; García, Ó.; Prieto, J.; Rodríguez-González,\
    \ S. An intelligent Edge-IoT platform for monitoring\nlivestock and crops in a\
    \ dairy farming scenario. Ad Hoc Netw. 2020, 98, 102047. [CrossRef]\n119. Edwards-Murphy,\
    \ F.; Magno, M.; Whelan, P.M.; O’Halloran, J.; Popovici, E.M. B+WSN: Smart beehive\
    \ with preliminary decision\ntree analysis for agriculture and honey bee health\
    \ monitoring. Comput. Electron. Agric. 2016, 124, 211–219. [CrossRef]\n120. Weiland,\
    \ J.E. Soil-Pest Relationships; Technical Report; rngr.net: Houston, TX, USA,\
    \ 2012.\n121. Boyd, D. Soil Moisture Probes to Assist the Understanding of the\
    \ Soil Water Dynamics across the State; Technical Report; GDRC: Kobe,\nJapan,\
    \ 2015.\n122. Narayan, V.; Daniel, A. Multi-Tier Cluster Based Smart Farming Using\
    \ Wireless Sensor Network. In Proceedings of the 2020\n5th International Conference\
    \ on Computing, Communication and Security (ICCCS), Patna, India, 14–16 October\
    \ 2020; pp. 1–5.\n[CrossRef]\n123. Chethana, G.; Padmaja, K.V. An Iterative Approach\
    \ for Optimal Number of Balanced Clusters and Placement of Cluster Heads\nin WSN\
    \ with Spatial Constraints. In Proceedings of the 2019 4th International Conference\
    \ on Recent Trends on Electronics,\nInformation, Communication & Technology (RTEICT),\
    \ Bangalore, India, 17–18 May 2019; pp. 1314–1321. [CrossRef]\n124. Diribu, B.;\
    \ Libsie, M. Shape-based customized node deployment approach for WSNs. In Proceedings\
    \ of the AFRICON 2015,\nAddis Ababa, Ethiopia, 14–17 September 2015; pp. 1–5.\n\
    125. Liu, X.; Li, R.; Huang, N. A sensor deployment optimization model of the\
    \ wireless sensor networks under retransmission. In\nProceedings of the 4th Annual\
    \ IEEE International Conference on Cyber Technology in Automation, Control and\
    \ Intelligent\nSystems, Hong Kong, China, 4–7 June 2014; pp. 413–418.\nSensors\
    \ 2022, 22, 3273\n31 of 31\n126. Khattab, A.; Abdelgawad, A.; Yelmarthi, K. Design\
    \ and implementation of a cloud-based IoT scheme for precision agriculture. In\n\
    Proceedings of the 2016 28th International Conference on Microelectronics (ICM),\
    \ Giza, Egypt, 17–20 December 2016; pp. 201–204.\n[CrossRef]\n127. López-Riquelme,\
    \ J.A.; Pavón-Pulido, N.; Navarro-Hellín, H.; Soto-Valles, F.; Torres-Sánchez,\
    \ R. A software architecture based on\nFIWARE cloud for Precision Agriculture.\
    \ Agric. Water Manag. 2017, 183, 123–135. [CrossRef]\n128. Wu, X.; Liu, M.; Wu,\
    \ Y. In-situ soil moisture sensing: Optimal sensor placement and ﬁeld estimation.\
    \ ACM Trans. Sens. Netw.\n2012, 8, 1–30. [CrossRef]\n129. Zanella, A.; Bui, N.;\
    \ Castellani, A.; Vangelista, L.; Zorzi, M. Internet of things for smart cities.\
    \ IEEE Internet Things J. 2014, 1, 22–32.\n[CrossRef]\n130. Ugwuanyi, S.; Paul,\
    \ G.; Irvine, J. Survey of IoT for developing countries: Performance analysis\
    \ of LoRaWAN and cellular nb-IoT\nnetworks. Electronics 2021, 10, 2224. [CrossRef]\n\
    131. Biral, A.; Centenaro, M.; Zanella, A.; Vangelista, L.; Zorzi, M. The challenges\
    \ of M2M massive access in wireless cellular networks.\nDigit. Commun. Netw. 2015,\
    \ 1, 1–19. [CrossRef]\n132. Feng, X.; Yan, F.; Liu, X. Study of Wireless Communication\
    \ Technologies on Internet of Things for Precision Agriculture. Wirel.\nPers.\
    \ Commun. 2019, 108, 1785–1802. [CrossRef]\n133. Ali, A.I.; Partal, S.Z.; Kepke,\
    \ S.; Partal, H.P. ZigBee and LoRa based Wireless Sensors for Smart Environment\
    \ and IoT Applications.\nIn Proceedings of the 2019 1st Global Power, Energy and\
    \ Communication Conference (GPECOM), Nevsehir, Turkey, 12–15 June\n2019; pp. 19–23.\
    \ [CrossRef]\n134. Elliott, R. Mobile Phone Penetration Throughout Sub-Saharan\
    \ Africa; GeoPoll: Denver, CO, USA, 2019.\n135. ICT Data and Statistics Division,\
    \ Telecommunication Development Bureau. ICT Facts & Figures: The World in 2015;\
    \ Technical\nReport; ITU: Geneva, Switzerland, 2015.\n136. Bahia, K.; Suardi,\
    \ S. Connected Society: The State of Mobile Internet Connectivity 2019; Technical\
    \ Report; GSMA: London, UK, 2019.\n137. Akyildiz, I.F.; Su, W.; Sankarasubramaniam,\
    \ Y.; Cayirci, E. Wireless sensor networks: A survey. Comput. Netw. 2002, 38,\
    \ 393–422.\n[CrossRef]\n138. Botha, E.; Malekian, R.; Ijiga, O.E. IoT in Agriculture:\
    \ Enhanced Throughput in South African Farming Applications.\nIn\nProceedings\
    \ of the 2019 IEEE 2nd Wireless Africa Conference (WAC), Pretoria, South Africa,\
    \ 18–20 August 2019; pp. 1–5.\n[CrossRef]\n139. Adam, A.H.; Tamilkodi, R.; Madhavi,\
    \ K.V. Low-Cost Green Power Predictive Farming Using IoT and Cloud Computing.\
    \ In\nProceedings of the 2019 International Conference on Vision Towards Emerging\
    \ Trends in Communication and Networking\n(ViTECoN), Vellore, India, 30–31 March\
    \ 2019; pp. 1–5. [CrossRef]\n140. Cauteruccio, F.; Fortino, G.; Guerrieri, A.;\
    \ Liotta, A.; Mocanu, D.C.; Perra, C.; Terracina, G.; Torres Vega, M. Short-long\
    \ term\nanomaly detection in wireless sensor networks based on machine learning\
    \ and multi-parameterized edit distance. Inf. Fusion\n2019, 52, 13–30. [CrossRef]\n\
    141. Woodall, M.; Gibson, M. Measuring the Information Society Report; Technical\
    \ Report; International Telecommunication Union (ITU):\nGeneva, Switzerland, 2017.\n\
    142. da Costa Bezerra, S.F.; Filho, A.S.; Delicato, F.C.; da Rocha, A.R. Processing\
    \ complex events in fog-based internet of things systems\nfor smart agriculture.\
    \ Sensors 2021, 21, 7226. [CrossRef]\n143. Idbella, M.; Iadaresta, M.; Gagliarde,\
    \ G.; Mennella, A.; Mazzoleni, S.; Bonanomi, G. Agrilogger: A new wireless sensor\
    \ for\nmonitoring agrometeorological data in areas lacking communication networks.\
    \ Sensors 2020, 20, 1589. [CrossRef]\n144. Jones, J.W.; Antle, J.M.; Basso, B.;\
    \ Boote, K.J.; Conant, R.T.; Foster, I.; Godfray, H.C.J.; Herrero, M.; Howitt,\
    \ R.E.; Janssen, S.; et al.\nToward a new generation of agricultural system data,\
    \ models, and knowledge products: State of agricultural systems science.\nAgric.\
    \ Syst. 2017, 155, 269–288. [CrossRef] [PubMed]\n145. de Araujo Zanella, A.R.;\
    \ da Silva, E.; Albini, L.C.P. Security challenges to smart agriculture: Current\
    \ state, key issues, and future\ndirections. Array 2020, 8, 100048. [CrossRef]\n\
    146. Gupta, M.; Abdelsalam, M.; Khorsandroo, S.; Mittal, S. Security and privacy\
    \ in smart farming: Challenges and opportunities.\nIEEE Access 2020, 8, 34564–34584.\
    \ [CrossRef]\n147. Pu, F.; Wang, Z.; Du, C.; Zhang, W.; Chen, N. Semantic integration\
    \ of wireless sensor networks into open geospatial consortium\nsensor observation\
    \ service to access and share environmental monitoring systems. IET Softw. 2016,\
    \ 10, 45–53. [CrossRef]\n148. Nesarani, A.; Ramar, R.; Pandian, S. An efﬁcient\
    \ approach for rice prediction from authenticated block chain node using machine\n\
    learning technique. Environ. Technol. Innov. 2020, 20, 101064. [CrossRef]\n149.\
    \ Radoglou–Grammatikis, P.; Sarigiannidis, P.; Lagkas, T.; Moscholios, I. A compilation\
    \ of UAV applications for precision\nagriculture. Comput. Netw. 2020, 172, 107148.\
    \ [CrossRef]\n150. Popescu, D.; Stoican, F.; Stamatescu, G.; Ichim, L.; Dragana,\
    \ C. Advanced UAV–WSN system for intelligent monitoring in\nprecision agriculture.\
    \ Sensors 2020, 20, 817. [CrossRef] [PubMed]\n151. Bennett, R.; Alberti, G.; Çibik,\
    \ A.; Eremenko, T.; Formosa, S.; Formosa-Pace, J.; Jiménez-Buedo, M.; Lynch, K.;\
    \ Salazar, L.; Ubeda, P.\nBringing about the data revolution in development: What\
    \ data skills do aspiring development professionals need? J. Int. Dev.\n2022.\
    \ [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/9/3273/pdf?version=1650796560
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Utilization of Internet of Things and Wireless Sensor Networks for Sustainable
    Smallholder Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.compag.2017.01.026
  analysis: '>'
  authors:
  - Tamoghna Ojha
  - Sudip Misra
  - N. S. Raghuwanshi
  citation_count: 34
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Related works 3. Proposed
    system architecture 4. Energy optimization and duty cycle computation 5. Virtualization
    model 6. Case studies – typical applications 7. Performance evaluation 8. Conclusion
    Acknowledgement References Show full outline Cited by (41) Figures (9) Show 3
    more figures Tables (1) Table 1 Computers and Electronics in Agriculture Volume
    135, 1 April 2017, Pages 96-107 Original papers Sensing-cloud: Leveraging the
    benefits for agricultural applications Author links open overlay panel Tamoghna
    Ojha a b, Sudip Misra a, Narendra Singh Raghuwanshi b Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.compag.2017.01.026 Get rights and content
    Highlights • We present the physical node virtualization model for agricultural
    applications. • We justify the advantages of sensor-cloud framework over traditional
    WSN-based framework. • We formulate the sensor node utilization model targeting
    agricultural applications. • We present a model for providing cost effective agro-computing
    services to large number of farmers. • The proposed model is suitable for setups
    with multiple organizations, users, and applications. Abstract The advent of the
    sensor-cloud framework empowers the traditional wireless sensor networks (WSNs)
    in terms of dynamic operation, management, storage, and security. In recent times,
    the sensor-cloud framework is applied to various real-world applications. In this
    paper, we highlight the benefits of using sensor-cloud framework for the efficient
    addressing of various agricultural problems. We address the specific challenges
    associated with designing a sensor-cloud system for agricultural applications.
    We also mathematically characterize the virtualization technique underlying the
    proposed sensor-cloud framework by considering the specific challenges. Furthermore,
    the energy optimization framework and duty scheduling to conserve energy in the
    sensor-cloud framework is presented. The existing works on sensor-cloud computing
    for agriculture does not specifically define the specific components associated
    with it. We categorize the distinct features of the proposed model and evaluated
    its applicability using various metrics. Simulation-based results show the justification
    for choosing the framework for agricultural applications. Previous article in
    issue Next article in issue Keywords Sensor-cloudVirtualizationSystem model of
    sensor-cloudSensor-cloud for agricultural applications 1. Introduction In precision
    agriculture, WSNs are used to address different problems (e.g. Ojha et al., 2015,
    ur Rehman et al., 2014, Barcelo-Ordinas et al., 2013, Burrell et al., 2004). Some
    of the existing works in this domain with WSN applications are categorized into
    irrigation management (Nikolidakis et al., 2015, Lichtenberg et al., 2015, Reche
    et al., 2015, Greenwood et al., 2010, Gutiérrez et al., 2014, Moghaddam et al.,
    2010), precision agriculture (Chen et al., 2015, López et al., 2011, Díaz et al.,
    2011, Park et al., 2011, Riquelme et al., 2009), farmland monitoring (Corke et
    al., 2010, Voulodimos et al., 2010), greenhouse gases monitoring (Mao et al.,
    2012, Yang et al., 2013, Malaver et al., 2015), agricultural production process
    management (Dong et al., 2013, Díaz et al., 2011), optimization of plant growth
    (Hwang et al., 2010), and security and intrusion detection in fields (Roy et al.,
    2015, Garcia-Sanchez et al., 2011). However, these WSN-based applications primarily
    target serving single application only, on which WSN is deployed by the users
    only at their specific interest area. Consequently, only the users (generally
    the user organization) has access to the data, and, thereby, they are in sole
    charge of the maintenance of the network. Third party access to this information
    is generally not enabled in this framework. Alternatively, data sharing may happen
    between organizations with exchange of money. In recent times, the sensor-cloud
    framework has become very popular in various application domains. Compared to
    traditional WSNs, sensor-cloud provides numerous advantages. The science behind
    cloud computing empowers the distributed WSNs for enhanced storage and information
    processing capability. The integrated framework also creates a virtualized platform
    of sensors, which facilitates efficient and real-time information sharing among
    multiple users. The virtualization technique also enables dynamic resource management,
    which, in turn, increases resource utilization. Due to the abstraction of computing
    resources and efficient access control techniques, the overall architecture also
    provides information security. All these features the sensor-cloud framework suitable
    for real-time decision support in multi-user, multi-application scenarios. The
    initial works in sensor-cloud focused on defining the infrastructure and its components
    (Yuriyama and Kushida, 2010). Over the recent years, the concept of sensor-cloud
    and its architecture has matured (Alamri et al., 2013). In one of the initial
    works, the concept of physical sensor and its services virtualization was proposed
    by Evensen and Meling (2009). Later, Ibbotson et al. (2010) presented a semantically
    rich service oriented architecture (SOA), which focuses on simplification of sensor
    service discovery. Recently, Misra et al. (2014a) presented a theoretical model
    of sensor-cloud, which mathematically formulates the underlying virtualization
    technique involved in this technology. The authors promoted the concept of Sensor-as-a-Service
    (Se-aaS) (Misra et al., 2014a) and showed the benefits of the architecture in
    terms of cost effectiveness, lifetime of sensor nodes, and fault-tolerance. Madria
    et al. (2014) present an architecture for sensor-cloud which define the different
    part of the protocol stack and interconnections with physical sensors as well
    as users. In this work, the authors envision the sensor-cloud protocol stack comprised
    of three vertical layers – sensor-centric, middleware, and the client-centric.
    The Agriculture Sensor-Cloud Infrastructure (ASCI) (Kim et al., 2014) shows how
    various agricultural services can be offered via the sensor-cloud platform. The
    ASCI framework also devises a layered architecture, which shows the integration
    of various deployed sensors with different services. Krintz et al. (2016) proposes
    an open source, cloud-based agricultural analytics service named SmartFarm. This
    platform integrates various different technologies such as satellite imagery,
    weather predictions, and existing data sets with on-farm sensors. One major objective
    of this platform is to provide a cost-effective platform for data analytics ensuring
    data privacy. 1.1. Motivation The sensor-cloud framework is strongly founded on
    the principle of virtualization. The cloud provides the facility for storage and
    retrieval of huge amount of sensed data. Using the virtualization concept, the
    service providers are empowered with the power of greater sensor utility, while
    maintaining information security. In this distributed framework, the sensor owner
    is responsible for the deployment of sensor nodes. The service provider takes
    care of the maintenance and deployment overhead for the deployed nodes. The end-users
    consume the sensed information through various services offered by the service
    providers. Thus, the users are relieved from the task of deployment, maintenance,
    redeployment, system up-gradation, and any such works. In Fig. 1, we depict the
    structural comparison of the architecture for WSN and sensor-cloud. In this figure,
    we depict that WSNs are envisioned to work with single user and single application.
    On the other hand, sensor-cloud provides a framework supporting multi-user and
    multi-applications. The end-users subscribe to these various services which are
    running as applications in the framework. Unlike the traditional WSNs, in sensor-cloud
    we can construct different access levels which ensures information safety for
    different levels of users. Download : Download high-res image (181KB) Download
    : Download full-size image Fig. 1. Comparison of architectures: WSN vs sensor-cloud.
    In agricultural applications, this framework is very helpful due to its cost effectiveness
    and minimal maintenance requirements. The end-user, typically a farmer, has no
    burden of deploying and maintaining the field sensors unlike what would happen
    if they had used the conventional WSNs. From the service providers point-of-view
    as well, the sensor-cloud framework provides enhanced benefits. Unlike WSNs, in
    sensor-cloud, the service provider is able to utilize the deployed sensors for
    multiple applications and services. In turn, the service providing organization
    is able to provide the services to more number of people. The distributed framework
    also guarantees certain amount of fault-tolerance for the services. This is of
    great help specifically for agricultural applications, where sensor nodes face
    harsh climatic conditions leading to fault-proneness of the nodes. Thus, the sensor-cloud
    framework has the potential for leveraging benefits for both the end-users and
    service providers. 1.2. Contributions In this paper, we present a sensor-cloud
    architecture for the agricultural applications. We present a mathematical model
    of sensor-cloud virtualization specifically targeting agricultural applications.
    The mathematical model includes details on different components involved in virtualization.
    Using case studies, we point out the specific benefits of this new framework over
    the existing WSN-based framework. Simulation-based results are presented for both
    these frameworks. In the following, we list the major contributions of our work.
    • We present the physical node virtualization model for agricultural applications.
    Mathematically, we justify the advantages of the sensor-cloud framework over the
    traditional WSN-based framework. • We formulate the sensor node utilization model
    targeting any agricultural application. The theoretical model presented in this
    paper focuses on building up a virtual sensor configuration, which enhances node
    utilization. • We present a model for providing cost effective agricultural computing
    services to large number of farmers. • The theoretical model depicted in this
    paper is suitable for a multi-organization, multi-user, and multi-application
    scenario. This is a significant paradigm-shift from the typical agricultural applications.
    1.3. Organization The paper is organized as follows. In Section 2, we briefly
    discuss the existing literature in the area of sensor-cloud. The proposed system
    architecture is depicted in Section 3 highlighting the specific challenges and
    advantages of the sensor-cloud framework in the agricultural domain. The energy
    consumption optimization and virtualization models are presented in Sections 4
    Energy optimization and duty cycle computation, 5 Virtualization model, respectively.
    We also discuss, in Section 6, two potential applications, as case studies, which
    can be offered using the sensor-cloud framework. In Section 7, the simulation-based
    results are presented and discussed. Finally, the paper concludes in Section 8,
    citing direction for future works. 2. Related works Over the recent years, the
    concept of sensor-cloud has drawn lot of attention. A detailed survey of the sensor-cloud
    framework, applications, and its pros and cons is presented by Alamri et al. (2013).
    One of the initial works by Evensen and Meling (2009) proposed SenseWrap as a
    middleware for virtualizing any type of physical sensors. They also presented
    ZeroConf (Evensen and Meling, 2009), a protocol which lets the applications programmers
    interact with the sensors without the need of knowing their physical configuration.
    In this work, the authors mainly focus on sensor abstraction to facilitate the
    discovery of services and devices using a common interface. However, the virtualization
    framework presented in this work does not look into various important issues such
    as security, resource access, and dependency management. Ibbotson et al. (2010)
    presented the challenges of various sensor networks connected by heterogeneous
    communication infrastructures. The authors present a semantically rich service-oriented
    architecture (SOA) which simplifies the sensor discovery, access control, sensor
    data consumption, and utilization. Yuriyama and Kushida (2010) presented a detailed
    description of sensor-cloud infrastructure. This infrastructure enables the on-field
    sensors in a cloud framework to facilitate the virtualization of resources. Through
    this infrastructure, the deployed sensors can be accessed and controlled from
    the end-users’ side. Liu et al. (2012) described a sensor-cloud architecture,
    which is based on an extended architecture of the CloudMiner (Goscinski et al.,
    2011). Liu et al. (2012) envisioned this architecture to be a platform offering
    various computational, analytical, and storage services. Liu et al. (2012) addressed
    the use of virtualization of sensors in the CloudMiner architecture to capture
    and process sensor data for enabling new applications, and consequently, providing
    various services that can be availed based on that. Dynamic duty scheduling for
    minimizing the energy consumption of the sensor nodes in a sensor-cloud environment
    is presented in Ojha et al. (2014). The authors propose an algorithm to dynamically
    select a optimal duty interval for each WSN irrespective of the others. Misra
    et al. (2014b) studied the problem of ensuring Quality of Service (QoS) in a mobile
    sensor-cloud environment. The authors show that, instead of bandwidth shifting,
    bandwidth redistribution is required to maintain QoS in such environment. Misra
    et al. (2015) showed how to allocate sensors while maintaining QoS for target
    tracking applications in a sensor-cloud environment. In an another work, Misra
    et al. (2014a) presented a theoretical model of sensor-cloud. The authors mathematically
    define virtualization of sensors in the architecture, and thereafter, the framework
    is analyzed in detail with respect to various performance evaluation metrics.
    For virtualization within the sensor-cloud framework, an optimal composition of
    a virtual sensor and an adaptive data caching method was proposed by Chatterjee
    and Misra, 2014, Chatterjee and Misra, 2015, respectively. Chatterjee et al. (2015a)
    studied the issue of optimal data center selection. A pricing model for the sensor-cloud
    framework was presented in Chatterjee et al. (2015b). Madria et al. (2014) present
    a sensor-cloud architecture and described the different parts of the protocol
    stack. In this work, the protocol stack is divided into three vertical layers
    – sensor-centric, middleware, and the client-centric. The bottom layer is sensor-centric,
    and as the name suggests, this layer directly interacts with the physical sensors
    and takes care of the registration, maintenance, and data collection. The middleware
    layer is responsible for handling incoming requests, creating virtual sensors,
    and computing billing information. Lastly, the client-centric layer provides the
    user interface (UI), manages sessions, checks membership, and manages user repositories.
    However, this work considers only static sensors to be present in the framework.
    The integration of WSNs with Mobile Cloud Computing (MCC) was studied by Zhu et
    al., 2014, Zhu et al., 2015. The authors proposed two different schemes to increase
    the sensor data reliability in cloud and to minimize the energy consumption of
    the deployed sensors. In the first scheme, the WSN gateway selectively sends sensory
    data which is more meaningful to the cloud, by considering the time and priority
    of requested data. The other scheme is for the sensors to minimize their energy
    consumption by optimizing the sleep-wake schedule. Kim et al. (2014) proposed
    the architecture of Agriculture Sensor-Cloud Infrastructure (ASCI), which shows
    how various agricultural services can be offered via the sensor-cloud platform.
    The ASCI framework devises a layered architecture, which shows the integration
    of various deployed sensors with different services. Distefano et al. (2015) argue
    on the benefits of the device-centric approach of IoT over the data-centric one.
    In their proposed IoT-A reference architecture, the Sensing-and-Actuation-as-a-Service
    (SAaaS) approach is presented. In this architecture, various sensors, mobiles
    and personal devices are abstracted through a unified platform. A smart, cloud-controlled
    irrigation management system was proposed by Sales et al. (2015). The field implementation
    consists of a set of sensors and actuators deployed for monitoring plants’ water
    requirements. On the other hand, the cloud-based framework hosts a weather forecast
    application, which helps in making optimal irrigation decision. Whenever the on-field
    sensor system determines the soil moisture of the field to be lower than the threshold
    value, the next 6 h’s weather forecast is checked, and then the decision on whether
    or not to irrigated is made. An open source, cloud-based agricultural analytics
    service named SmartFarm was proposed by Krintz et al. (2016). This platform integrates
    various different technologies such as satellite imagery, weather predictions,
    and existing data sets with on-farm sensors. One major objective of this platform
    is to provide a cost-effective platform for data analytics ensuring data privacy.
    Additionally, the authors propose an app named RootRApp, which analyzes the SmartFarm
    sensor data to find the cause of wine grape quality difference. 3. Proposed system
    architecture In the sensor-cloud framework, we consider n number of on-field sensor
    networks ( ), which are deployed at different locations. For example, the set
    of all the on-field WSNs is represented by . In any such WSN, say , the on-field
    sensor nodes and the gateway are denoted by and , respectively. The set of all
    the gateway nodes is denoted by . Any sensor node communicate with the cloud through
    the gateway node . Consequently, the sensor-cloud renders efficient and smart
    decisions based on the sensed data. We consider any on-field WSN to be represented
    by a graph , where and E represent the set of sensor nodes in any WSN and the
    set of communication links between the nodes. For example, in this graph G, node
    i and j are connected, e.g. , iff , where r is the transmission range of nodes
    i and j. Here, we assume that the on-field nodes have similar transmission range.
    The on-field nodes follow the duty values ( ) computed by the cloud, and communicate
    their sensed information to the gateway at specific times. The dynamic duty values
    are computed by sensor-cloud framework using the dynamic duty selection scheme
    discussed in Section 4. We depict the system architecture in Fig. 2. In this figure,
    we show how these n number of on-field WSNs communicate with the cloud via their
    local gateways. In each of these WSNs, actual topologies are formed by the deployment
    of sensor nodes at that area. The local topology can also support multi-hop communication
    between the sensor nodes and the gateway. Needless to say, the end-users are unaware
    of the actual topology and connectivity. They are able to monitor the information
    of the nodes, which are pertinent to their subscribed services. On the other hand,
    the sensor owners can access status/maintenance related information about their
    deployed nodes in various locations. In Section 5, we present the detailed discussion
    on the components of each of these various entities and the relations among them.
    Download : Download high-res image (177KB) Download : Download full-size image
    Fig. 2. The proposed system architecture. 3.1. Challenges specific to agriculture
    In this section, we list the challenges devising a sensor-cloud framework specific
    to agricultural applications. We also point out challenges specific to developing
    countries such as India. i. Low maintenance: The agricultural applications are
    desirable to have low maintenance effort. This will essentially keep the system’s
    maintenance cost very low. Low maintenance is desirable in these systems due to
    the fact that a large number of end-users of these systems are typically non-technical
    persons. ii. Scalability: In agricultural applications, the monitoring area may
    cover a large area with multiple fields. Thus, it is desirable to have a scalable
    system with the change in target application area. iii. Cost-effective solutions
    required: The overall system cost is required to be low for larger scope and outreach
    of the applications. The challenge is to reduce the system cost targeting Low
    and Middle Income Countries (LMICs). iv. Small and irregular land holding: In
    developing countries such as India, the average land holding of a farmer is low,
    and the field shape is also irregular. Moreover, farmers may have non-contiguous
    fields allocated for them. Based on these, the field level heterogeneity is high
    for agricultural applications. v. Easy of operation: The agricultural system and
    applications will be used by non-technical persons also. Thus, it is desirable
    to keep the operations and interactions with the system minimum. vi. Fault-tolerance:
    Typically, the deployed systems in agricultural applications have to function
    in harsh environmental conditions, as they are deployed mostly at outdoor locations.
    Thus, tolerance against communication and other systemic failures are inevitable.
    3.2. Advantages of sensor-cloud architecture over WSN In the following, we enlist
    the specific advantages of applying sensor-cloud architecture over the traditional
    WSN. i. Scalability: Sensor-cloud architecture supports scalability of physical
    sensors with application/service demands. This architecture facilitates that the
    sensors can be accessed by multiple services and multiple users without any intervention.
    ii. Cost: In sensor-cloud, the end-user is relieved from most of the cost incurring
    tasks such as sensor deployment, maintenance, and other overheads related to system
    up-gradation. However, he/she is only required to subscribe to services, and pay-as-per-use
    of the subscribed services. On the other hand, the service provider utilizes the
    deployed infrastructure by using it for multiple users and multiple services.
    Consequently, the services can be made cheaper for individual users while generating
    sustainable revenue for service providers. iii. Lifetime: The advent of sensor-cloud
    provides optimal duty scheduling of the deployed sensor nodes. Due to this, the
    energy consumption of each sensor node can be reduced. Therefore, the overall
    network lifetime also increases significantly. iv. Reconfigurability: Sensor-cloud
    provides multiple services to end-users. Based on the available services, the
    user can choose to switch applications, and virtually reconfigure the sensor nodes
    as per their demand. v. Fault-tolerance: In WSNs, faults can occur randomly and
    can disrupt the network. However, in the sensor-cloud framework, the service provider
    provides fault-tolerance guarantees to end-users through service-level agreement
    (SLA). It is envisioned that sensor-cloud framework will bring in multiple service
    providers on a unique platform. Thus, the users will have option to choose and
    switch to different service providers with time. vi. Information security: Virtualization
    techniques enable the sensor-cloud to provide access control to users. It caters
    to the various layers of abstraction on the stored information and the physical
    sensors, thereby providing security to various levels of end-users. vi. Farmland
    security: Ensuring security of farmland and crop is an essential requirement for
    the agricultural applications. The sensor-cloud framework provides flexibility
    to add additional sensors or up-gradation of deployed system. Bapat et al. (2017)
    presents a WSN-based system for detecting animal intruders and subsequently diverting
    them using deterring gadgets. Any existing sensor-cloud based deployment can be
    upgraded with installation such sensor nodes. Compared to the traditional WSNs,
    in the sensor-cloud architecture, the up-gradation procedure is simple and scalable.
    The service provider, thus, is able to provide additional services on security
    and intrusion detection after deployment of required sensors. Also, in case a
    field’s data is contaminated, the abnormality in the recorded data can be detected
    by various existing anomaly detection techniques. vii. Quality of service (QoS):
    In a sensor-cloud, QoS guarantee is also defined through the use of SLAs. Thus,
    the end-users can choose and switch among different service providers. viii. Dynamic
    management: The sensor-cloud framework facilitates dynamic resource sharing by
    applying the theory of resource abstraction (Misra et al., 2014a, Misra et al.,
    2014b, Misra et al., 2015). Consequently, end-users are allowed to upgrade the
    service levels. Resources are dynamically allocated to services in synchronization
    with the change in the requirements. 4. Energy optimization and duty cycle computation
    In this section, we show and compare the energy consumption of typical on-field
    WSN and the sensor-cloud framework. We adopt the optimal duty scheduling approach
    proposed in our previous work (Ojha et al., 2014). Using this approach, the on-field
    sensor nodes, in a sensor-cloud framework, are able to optimize their energy consumption.
    4.1. Energy consumption of on-field WSN In any on-field standalone WSN (i.e. without
    the cloud framework), the total energy consumption ( ) at any time t caters to
    the following events – communication between the sensor node and the gateway node
    ( ) and computation and information processing inside the node ( ). Thus, (1)
    The overall energy consumption during communication between the sensor nodes (
    ) to the gateway is defined as, (2) where is the sensed information by node at
    time t for the time-interval . The entity is set by the gateway node and its value
    is determined only on local observations. Any node j’s energy consumption for
    communication with the gateway node is denoted as . Similarly, the entity is computed
    as follows, (3) where the energy consumption in node for its own computation and
    information processing is . Therefore, we can compute the total energy consumption
    of an on-field WSN as follows: (4) Thus, in an on-field WSN , the optimization
    problem for overall energy consumption is expressed as follows, (5) (6) (7) (8)
    Thus, finally, the overall energy consumption for the whole on-field WSNs is,
    (9) 4.2. Optimization of energy consumption in the sensor-cloud framework On the
    other hand, in the sensor-cloud architecture, the energy optimization problem
    is formulated with the help of various components of energy consumption within
    the network. The three major components of total energy consumption are – information
    uploading from sensor to gateway ( ), gateway to cloud ( ), and in-cloud processing
    ( ). Therefore, in summary, the optimization problem is formulated as, (10) (11)
    (12) (13) (14) (15) where and represents the information sensed by node j and
    the subset of the information at time t for an interval of . denote the value
    of optimal time-interval for any at time t, and it can be expended as . We show
    the computation of overall energy consumption for all the on-field WSNs as follows,
    (16) 4.3. Optimal duty scheduling The sensor-cloud framework collects the on-field
    information from the deployed sensor nodes at different intervals of time. It
    is noteworthy to mention that the time-interval of information collection is controlled
    by the sensor-cloud. The sensor-cloud framework can optimally decide on this parameter,
    and consequently, the energy consumption of the on-field WSNs can be minimized.
    In this regard, the following assumption is taken. Assumption 1 For any deployed
    WSN , the sensor-cloud framework calculates the required information update time-interval
    ( ) from the received information (Zhu et al., 2014). The cloud-based framework
    computes the required time-interval for any on-field WSN , as follows: (17) where
    represents the set of information collected by the cloud from the deployed sensor
    nodes at time t. is calculated using the following equation. (18) The optimal
    value of the time-interval in each step is computed with the help of time-interval
    determined at the th and th instance. Mathematically, (19) where is the value
    of optimal time-interval determined at the th instance. 5. Virtualization model
    In this section, we present the underlying virtualization model for the sensor-cloud
    framework targeting agricultural applications. We mathematically define the participating
    units of sensor virtualization. We define the units in two different types – actors
    and entities. The actors associated with the virtualization process are – the
    service providers, sensor owners, and the end-users. On the other hand, entities
    are the distinct components of virtualization related to sensors and services/applications.
    Thus, we define the different functions which represents the actual mapping between
    the different entities and actors. 5.1. Actors We, in the following, mathematically
    define the components of different types of actors associated with the sensor-cloud
    framework. Definition 1 In sensor-cloud, multiple service providers can coexist
    in the same framework. We name this actor as Cloud Service Provider (CSP), defined
    as , where is the number of service providers. In the following, we use the work
    ‘service provider’ and ‘cloud service provider’ interchangeably. CSPs are differentiated
    by their SLAs, which defines the critical service level parameters such as QoSs
    and fault-tolerance. Based on the region of deployment, which may be different
    sub-CSPs offering similar services. Definition 2 Any CSP ( ) is defined as a tuple
    with the following parameters: (20) where is a unique identifier of the CSP and
    indicates the type of the CSP – national or regional. holds the specific zone(s)
    the CSP is operating in. denotes the set of services which are offered by this
    CSP and is specific to the Service-level agreement between the CSP and the end-user.
    Definition 3 A sensor owner is defined as , where m is the number of owners registered
    at the sensor-cloud framework at any point of time. The associated parameters
    for a sensor owner are: (21) where and are the sensor owner’s unique identifier
    and type, respectively. Similarly, and denote the CSPs and services associated
    with the sensor owner . Sometimes, a CSP organization may also deploy the sensor
    nodes, and thus, is recognized as a sensor owner. Definition 4 The end-user is
    denoted as , where n is the number of users. End-user is a four-tuple actor defined
    as: (22) where and are the user’s unique identifier and type, respectively. Similarly,
    the CSPs and services associated with the user are denoted by and . 5.2. Entities
    The different entities, which forms the essential components of the sensor-cloud
    framework are mathematically defined in the following. In addition to the details
    about these components, we also discuss the inter-relation between them. Definition
    5 A physical sensor node is defined as a tuple using the following parameters,
    (23) where and denote the physical sensor’s identifier, type, state, and deployment
    location respectively. denotes the owner of the sensor. The set of CSP which has
    access to this sensor are denoted by . Definition 6 A virtual sensor is defined
    as a tuple comprising of the following parameters: (24) where and denote the virtual
    sensor’s identifier, type, and state, respectively. The location of the deployed
    sensor is indicated by . The set of CSPs which has access to is denoted by defines
    the services associated with , and refers to the set of the crops associated with
    the sensor . The influence area of a deployed sensor is denoted by . A sensor
    may also be used for deriving values for different types of sensors. In this case,
    denotes the set of the possible derived sensors. The virtual sensor id for any
    particular sensor is defined by the CSP. Therefore, for a specific CSP, is unique.
    Mathematically, (25) Definition 7 A service is defined as: (26) where and denote
    the service identifier and its type, respectively, and represents the set of sensors
    for any particular CSP attached with this service. For example, the virtual sensor
    for is defined as, (27) Definition 8 The coverage of a service is defined as the
    total influence area ( ) covered by the sensors associated with the service. Mathematically,
    (28) Definition 9 Service-level agreement (SLA) for any service is denoted by
    a tuple comprising of the following parameters: (29) where denotes the access
    levels granted to the end-user. Thus, using this metric, we can clearly define
    the actors which are given access to the service information at various levels.
    5.3. Functions In this process, the allowed sensor types are also checked while
    granting access to a certain service, and consequently, access to the attached
    sensors. Any service has a specific set of sensors which are compatible with the
    service type, and thus, may be attached with it. Furthermore, the access between
    the actors and the field sensors depends on the security levels i.e. access levels
    defined in the SLA. Definition 10 We define the relation between the set of sensor
    types ( ) and the service type ( ) using the Sensor-Service Compatibility (S2C)
    function . This compatibility check ensures proper filtering of the information
    for rightful access to the actors. (30) Here the service type of th service. Definition
    11 The ingress rules which define the actors and the manner in which they gain
    access to the service related information. Therefore, (31) where denotes an actor,
    which may be CSP, sensor owner, or an end-user. Definition 12 The mapping between
    a physical sensor and a virtual sensor is defined by the function . (32) A physical
    sensor can be attached to multiple virtual sensors of different CSPs. On the other
    hand, a virtual sensor can also be attached with multiple physical sensors. Definition
    13 The selection function is defines the relation between a service and the concerned
    sensor nodes. For any offered service, the concerned sensor nodes can be found
    using this function. Therefore, (33) The function returns the set of concerned
    sensor nodes for service having a coverage of . The concerned SLA is defined by
    . 6. Case studies – typical applications In this section, we discuss two typical
    agricultural applications designed using the sensor-cloud framework. 6.1. Irrigation
    management Fig. 3 shows a typical application of irrigation management using the
    sensor-cloud framework. In this application, the on-field sensor network is deployed
    at the users’ fields with application specific sensors. For example, water level
    sensors can be used only for crops which require standing water, and soil moisture
    sensors for other cases. However, sometimes, both these sensors can be present
    in the nodes helps the node to be reusable for different types of applications.
    It also empowers the node to measure whether the field is water-logged or not
    in case of heavy rain. In such situation, actuation of water removing pumps can
    be possible with the help of water-logging information. Optionally, the nodes
    can have soil temperature sensors, ambient temperature and humidity sensors as
    well. Download : Download high-res image (161KB) Download : Download full-size
    image Fig. 3. Typical application scenario: irrigation management using sensor-cloud
    framework. In the sensor-cloud framework, these nodes are deployed by the service
    providers or sensor owners. The end-users subscribe to the irrigation management
    service and access the on-field information. Thereby, they are able to monitor
    the change in field conditions, and are able to control the irrigation schedule.
    In this framework, the micro-weather information is also taken into consideration
    while determining the proper irrigation schedule (Sales et al., 2015). 6.2. Crop
    disease monitoring Crop disease monitoring is a potential service that can help
    the farmers in taking counter measures against the crop diseases. In Fig. 4, we
    depict a example scenario of crop disease monitoring with on-field sensors and
    Unmanned Aerial Vehicles (UAVs). The service offers dynamic monitoring of the
    crop disease. The UAVs (drones) are deployed for on-demand use of pesticides at
    specific locations. Limited use of pesticides and fertilizers also enhances the
    crop quality, while keeping the farming cost lower. In the cloud-based framework,
    the local climate related information (Matese et al., 2009) such as ambient temperature,
    humidity, wind speed can also be included while taking decisions on crop disease.
    One recent work by Gonçalves et al. studied the influence of mobility in precision
    spray based systems with WSN. In Ref. Baseca et al. (2013), UAVs are used for
    video sensing in precision agriculture. Download : Download high-res image (105KB)
    Download : Download full-size image Fig. 4. Typical application scenario: crop
    disease monitoring using sensor-cloud framework. 7. Performance evaluation 7.1.
    Simulation settings To evaluate our proposed scheme, we perform simulations using
    the NS-3 (http://www.nsnam.org/) simulator (version: 3.14). Table 1 enlists the
    simulation parameters. We use different performance metrics and evaluate the results
    with respect to the metrics. Table 1. Simulation parameters. Parameter Value Number
    of WSNs 10 Number of nodes in a WSN 50–100 Simulation area 10 km × 10 km Transmission
    range of a sensor node (r) 100 m Initial energy of a node 200 J Threshold battery
    level ( ) 25 J In the simulations, we simulated two different scenarios – traditional
    WSN (without the sensor-cloud framework) and the proposed sensor-cloud based framework.
    We considered a total of 10 different WSNs deployed in a field area spanning 10
    km × 10 km. Each WSN consists of randomly 50–100 nodes. The nodes in any WSN send
    their data to cloud at ‘duty intervals’ defined by the cloud. Accordingly, we
    calculate the energy consumption of the on-field WSNs, and compute the remaining
    lifetime of the WSNs. In our experiments, we considered the following unit cost
    values: , and . We also considered 20% of the nodes to be faulty. We simulate
    such a network keeping in mind the irrigation management application presented
    in Section 6.1. In the simulation based experiment, we considered 10 different
    WSNs deployed over a area of 10 km × 10 km. Here, each WSN consists of 50–100
    nodes, on an average. For simplicity, we keep the simulated nodes to be homogeneous.
    This type of configuration mimics an irrigation management application where the
    sensor nodes are deployed at different fields covering a vast area. These sensor
    nodes communicate with the cloud via their local gateway. Thereafter, we performed
    dynamic duty scheduling for these WSNs and accordingly compute their network lifetime.
    We show the utility of sensor-cloud over the WSNs, and calculate the cost for
    end-users for both sensor-cloud framework and traditional approach. 7.2. Evaluation
    metrics We studied the performance of the proposed system model with respect to
    the following metrics: • Energy consumption: The energy consumption of the deployed
    sensor nodes is computed for both traditional WSN and the sensor-cloud based framework.
    We define these entities in Sections 4.1 Energy consumption of on-field WSN, 4.2
    Optimization of energy consumption in the sensor-cloud framework. • Duty: In this
    work, duty is defined as the effective active time of a sensor node for a given
    period of time. In our simulations, the duty value for sensor-cloud framework
    is selected optimally, as explained in Section 4. • Network lifetime: We define
    the network lifetime as in the percentage of nodes which has not yet depleted
    their battery or their battery level is greater than that of a predefined threshold
    level. Thus, the metric is evaluated as the percentage of alive nodes over time.
    • Utility: Utility is defined as the benefit or gain achieved in proposed framework
    ( ) over the traditional framework ( ). We present the individual utility gain
    ( ) as well as the average utility gain ( ) with different number of WSNs. The
    individual utility reflects the utility gain of a specific WSN (e.g., ) in sensor-cloud
    framework over the traditional approach. On the other hand, average utility reflects
    the overall utility gain with multiple WSNs (e.g., to ) in a sensor-cloud framework
    over the traditional approach. Mathematically, • Cost: We define the overall cost
    for the end-users in sensor-cloud ( ) and traditional WSN ( ) as follows: where
    is the unit price per sensor allocated in the subscribed service. where is the
    cost of each sensor, and are the cost of sensor deployment and repair, respectively,
    is the number of sensor nodes originally deployed, and is the number of faulty
    nodes, which are eventually replaced. 7.3. Results and analysis In the following,
    we present the simulation-based results for the traditional WSN and the sensor-cloud
    framework. We compare and analyze the performance of both the framework with different
    performance metrics. (1) Energy consumption: In this section, the results for
    the energy consumption for both traditional as well as sensor-cloud scenarios
    are presented. Energy consumption for the individual on-field WSNs is presented
    in Fig. 5(a). On the other hand, Fig. 5(b) shows the results for the different
    number of WSNs and the corresponding cumulative energy consumption. In these scenarios,
    the energy consumption of the field nodes is controlled by the duty value selected
    for them. In the sensor-cloud framework, as presented in Section 4, the duty value
    is selected optimally. The results presented in Fig. 5(a) and (b) indicate the
    energy-efficiency of the sensor-cloud framework. Download : Download high-res
    image (334KB) Download : Download full-size image Fig. 5. Energy consumption.
    (2) Duty: Fig. 6 shows the duty values allocated to the on-field WSNs at different
    instants of time. These values are computed by the cloud dynamically, and are
    consequently allocated to the deployed networks. It is noteworthy that the duty
    values allocated to a WSN is fully independent of the duty values allocated to
    the other WSNs. This dynamic duty allocation is particularly useful in optimal
    energy scheduling for the on-field networks. Accordingly, the energy consumption
    in the sensor-cloud framework reduced over that of the traditional WSN based framework.
    Download : Download high-res image (755KB) Download : Download full-size image
    Fig. 6. Duty scheduling in the proposed scheme. (3) Network lifetime: We present
    the results for the network lifetime of on-field WSNs for both the traditional
    and sensor-cloud based frameworks in Fig. 7. In this figure, the results for traditional
    approaches are marked as ‘T-WSN’ (which stands for the acronym of Traditional
    WSN), and the results for the proposed sensor-cloud based framework are denoted
    by ‘S-C’ (which stands for the acronym of Sensor-cloud). The figure depicts the
    results for all the deployed WSNs (e.g. 1–10). For example, the on-field WSN is
    tagged with the legend ‘WSN1’. The energy consumption of the on-field WSNs in
    the sensor-cloud based framework is less than that of the traditional WSN based
    framework due to optimal duty scheduling. Also, unlike the traditional WSN based
    framework, multi-hop routing is not required in the sensor-cloud based framework.
    Consequently, the lifetime of the nodes in the on-field WSNs in the traditional
    approach depletes rapidly compared to the proposed approach. Download : Download
    high-res image (703KB) Download : Download full-size image Fig. 7. Network lifetime
    for individual sensor networks with and without cloud. (4) Utility: We present
    the utility of the proposed scheme over the traditional approach in Fig. 8. We
    demonstrate the individual utility gain ( ) as well as the average utility gain
    ( ) with different number of WSNs. The individual utility reflects the utility
    gain of that specific WSN (e.g., ) in the sensor-cloud framework over the traditional
    approach. On the other hand, the average utility reflects the overall utility
    gain with that many number of WSNs (e.g., to ) in sensor-cloud framework over
    the traditional approach. Therefore, when the number of WSN is 1, the individual
    and cumulative utilities are the same. However, sometimes the individual utility
    is greater than the cumulative utility, and the vice versa may also be possible.
    For example, for WSN id 7, the individual utility is greater than the cumulative
    utility, which refers to the situation that the other WSNs, with ids 1–6, have
    less utility than that of WSN id 7, and as result, the average utility is less
    than the individual utility gain. On the other hand, for WSN id 8, the opposite
    happens, and thus, the average utility gain is greater than the individual utility
    gain. Download : Download high-res image (255KB) Download : Download full-size
    image Fig. 8. Utility of the on-field WSNs. (5) Cost: We analyze the cost incurred
    to any end-user in the sensor-cloud framework as well as in the traditional WSN
    based framework. In Fig. 9(a), the cost incurred by the end-users in different
    WSNs is shown. The total cost with increasing number of on-field WSNs is plotted
    in Fig. 9(b). The sensor-cloud remains cost-effective to the end-users, as they
    are only charged for their service access. The other expenditure incurred in the
    traditional framework, such as purchase, deployment and maintenance, are accounted
    for the service providers or the sensor owners. Download : Download high-res image
    (330KB) Download : Download full-size image Fig. 9. Cost incurred for end-users.
    From these figures, we also find that the total cost for each WSN remains nearly
    same for the sensor-cloud framework. However, for the WSN based traditional framework,
    various types of costs results in varying total cost for each WSNs. Also, from
    Fig. 9(a), it is evident that for individual end-users, the incurred cost will
    be lower in sensor-cloud framework than that of the traditional WSNs. 8. Conclusion
    In this paper, we analyzed the benefits of using a sensor-cloud framework for
    efficient management of various agricultural applications. We discussed the specific
    challenges associated with designing a sensor-cloud system for agricultural applications.
    We mathematically devised the virtualization technique underlying the proposed
    sensor-cloud framework by considering specific challenges. Consequently, the energy
    optimization framework for sensor-cloud is presented and the duty scheduling to
    conserve energy in this framework is discussed. The existing works for sensor-cloud
    computing for agriculture does not specifically define the specific components
    associated with it. We present case studies of different applications as an example
    of the framework. Finally, with simulation-based results, we show the justification
    for choosing the framework for agricultural applications. In the future, we plan
    to extend the proposed framework for various other agricultural applications.
    Consequently, features related to mobility-aware dynamic service management are
    also required to be added in the framework. Acknowledgement This work is supported
    by Information Technology Research Academy (ITRA), Government of India under ITRA-Water
    grant ITRA/15(69)/WATER/M2M/01. References Alamri et al., 2013 A. Alamri, W.S.
    Ansari, M.M. Hassan, M.S. Hossain, A. Alelaiwi, M.A. Hossain A survey on sensor-cloud:
    architecture, applications, and approaches Int. J. Distrib. Sens. Netw., 2013
    (2013), pp. 1-18 View in ScopusGoogle Scholar Bapat et al., 2017 V. Bapat, P.
    Kale, V. Shinde, N. Deshpande, A. Shaligramd WSN application for crop protection
    to divert animal intrusions in the agricultural land Comput. Electron. Agric.,
    133 (February) (2017), pp. 88-96 View PDFView articleView in ScopusGoogle Scholar
    Barcelo-Ordinas et al., 2013 J.M. Barcelo-Ordinas, J.P. Chanet, K.M. Hou, J. García-Vidal
    A survey of wireless sensor technologies applied to precision agriculture J. Stafford
    (Ed.), Precision Agriculture’13, Wageningen Academic Publishers (2013), pp. 801-808
    CrossRefView in ScopusGoogle Scholar Baseca et al., 2013 C.C. Baseca, J.R. Díaz,
    J. Lloret Communication Ad Hoc protocol for intelligent video sensing using AR
    drones IEEE Mobile Ad-hoc and Sensor Networks (MSN) (2013), pp. 449-453 CrossRefView
    in ScopusGoogle Scholar Burrell et al., 2004 J. Burrell, T. Brooke, R. Beckwith
    Vineyard computing: sensor networks in agricultural production IEEE Pervasive
    Comput., 3 (1) (2004), pp. 38-45 View in ScopusGoogle Scholar Chatterjee and Misra,
    2014 S. Chatterjee, S. Misra Dynamic and adaptive data caching mechanism for virtualization
    within sensor-cloud Proceedings of IEEE ANTS, New Delhi, India (2014), pp. 1-6
    Google Scholar Chatterjee and Misra, 2015 S. Chatterjee, S. Misra Optimal composition
    of a virtual sensor for efficient virtualization within sensor-cloud Proceedings
    of IEEE International Conference on Communication, London, UK (2015), pp. 448-453
    CrossRefView in ScopusGoogle Scholar Chatterjee et al., 2015a S. Chatterjee, S.
    Misra, S.U. Khan Optimal data center scheduling for Quality of Service management
    in sensor-cloud IEEE Trans. Cloud Comput. (2015), 10.1109/TCC.2015.2487973 Google
    Scholar Chatterjee et al., 2015b S. Chatterjee, R. Ladia, S. Misra Dynamic optimal
    pricing for heterogeneous service-oriented architecture of sensor-cloud infrastructure
    IEEE Trans. Serv. Comput. (2015), 10.1109/TSC.2015.2453958 Google Scholar Chen
    et al., 2015 N. Chen, X. Zhang, C. Wang Integrated open geospatial web service
    enabled cyber-physical information infrastructure for precision agriculture monitoring
    Comput. Electron. Agric., 111 (2015), pp. 78-91 View PDFView articleView in ScopusGoogle
    Scholar Corke et al., 2010 P. Corke, T. Wark, R. Jurdak, W. Hu, P. Valencia, D.
    Moore Environmental wireless sensor networks Proc. IEEE, 98 (11) (2010), pp. 1903-1917
    View in ScopusGoogle Scholar Díaz et al., 2011 S.E. Díaz, J.C. Pérez, A.C. Mateos,
    M.-C. Marinescu, B.B. Guerra A novel methodology for the monitoring of the agricultural
    production process based on wireless sensor networks Comput. Electron. Agric.,
    76 (2) (2011), pp. 252-265 View PDFView articleView in ScopusGoogle Scholar Distefano
    et al., 2015 S. Distefano, G. Merlino, A. Puliafito A utility paradigm for IoT:
    the sensing cloud Pervasive Mobile Comput., 20 (2015), pp. 127-144 View PDFView
    articleView in ScopusGoogle Scholar Dong et al., 2013 X. Dong, M.C. Vuran, S.
    Irmak Autonomous precision agriculture through integration of wireless underground
    sensor networks with center pivot irrigation systems Ad Hoc Netw., 11 (7) (2013),
    pp. 1975-1987 View PDFView articleView in ScopusGoogle Scholar Evensen and Meling,
    2009 P. Evensen, H. Meling SenseWrap: a service oriented middleware with sensor
    virtualization and self-configuration Proceedings of International Conference
    on Intelligent Sensors, Sensor Networks and Information Processing, Melbourne,
    VIC, Australia (2009), pp. 261-266 CrossRefView in ScopusGoogle Scholar Garcia-Sanchez
    et al., 2011 A.-J. Garcia-Sanchez, F. Garcia-Sanchez, J. Garcia-Haro Wireless
    sensor network deployment for integrating video-surveillance and data-monitoring
    in precision agriculture over distributed crops Comput. Electron. Agric., 75 (2)
    (2011), pp. 288-303 View PDFView articleView in ScopusGoogle Scholar Goscinski
    et al., 2011 A. Goscinski, I. Janciak, Y. Han, P. Brezany Grid and Cloud Database
    Management Springer Berlin Heidelberg, Berlin, Heidelberg (2011) (Chapter The
    CloudMiner – Moving Data Mining into Computational Clouds) Google Scholar Greenwood
    et al., 2010 D.J. Greenwood, K. Zhang, H.W. Hilton, A.J. Thompson Opportunities
    for improving irrigation efficiency with quantitative models, soil water sensors
    and wireless technology J. Agric. Sci., 148 (2010), pp. 1-16 View in ScopusGoogle
    Scholar Gutiérrez et al., 2014 J. Gutiérrez, J.F. Villa-Medina, A. Nieto-Garibay,
    M. Ángel Porta-Gándara Automated irrigation system using a wireless sensor network
    and GPRS module IEEE Trans. Instrum. Meas., 63 (1) (2014), pp. 166-176 View in
    ScopusGoogle Scholar Hwang et al., 2010 J. Hwang, C. Shin, H. Yoe A wireless sensor
    network-based ubiquitous paprika growth management system Sensors, 10 (2010),
    pp. 11 566-11 589 Google Scholar Ibbotson et al., 2010 J. Ibbotson, C. Gibson,
    J. Wright, P. Waggett, P. Zerfos, B. Szymanski, D.J. Thornley Sensors as a service
    oriented architecture: middleware for sensor networks Proceedings of International
    Conference on Intelligent Environments, Kuala Lumpur (2010), pp. 209-214 CrossRefView
    in ScopusGoogle Scholar Kim et al., 2014 K. Kim, S. Lee, H. Yoo, D. Kim Agriculture
    sensor-cloud infrastructure and routing protocol in the physical sensor network
    layer Int. J. Distrib. Sens. Netw., 2014 (2014), pp. 1-13 Google Scholar Krintz
    et al., 2016 C. Krintz, R. Wolski, N. Golubovic, B.L.V. Kulkarni, B. Sethuramasamyraja,
    B. Roberts, B. Liu SmartFarm: improving agriculture sustainability using modern
    information technology Proceeding of ACM SIGKDD Workshop on Data Science for Food,
    Energy and Water, San Francisco, USA (2016) Google Scholar Lichtenberg et al.,
    2015 E. Lichtenberg, J. Majsztrik, M. Saavoss Grower demand for sensor-controlled
    irrigation Water Resour. Res., 51 (2015), 10.1002/2014WR015807 Google Scholar
    Liu et al., 2012 Y.-H. Liu, K.-L. Ong, A. Goscinski Networked Digital Technologies:
    4th International Conference, NDT 2012, Dubai, UAE, April 24-26, 2012, Proceedings,
    Part II, Springer Berlin Heidelberg, Berlin, Heidelberg (2012), pp. 475-486 (Chapter
    Sensor-Cloud Computing: Novel Applications and Research Problems) CrossRefView
    in ScopusGoogle Scholar López et al., 2011 J.A. López, A.-J. Garcia-Sanchez, F.
    Soto, A. Iborra, F. Garcia-Sanchez, J. Garcia-Haro Design and validation of a
    wireless sensor network architecture for precision horticulture applications Precision
    Agric., 12 (2) (2011), pp. 280-295 CrossRefView in ScopusGoogle Scholar Madria
    et al., 2014 S. Madria, V. Kumar, R. Dalvi Sensor cloud: a cloud of virtual sensors
    IEEE Softw., 31 (2) (2014), pp. 70-77 View in ScopusGoogle Scholar Malaver et
    al., 2015 A. Malaver, N. Motta, P. Corke, F. Gonzalez Development and integration
    of a solar powered unmanned aerial vehicle and a wireless sensor network to monitor
    greenhouse gases Sensors, 15 (2) (2015), pp. 4072-4096 CrossRefView in ScopusGoogle
    Scholar Mao et al., 2012 X. Mao, X. Miao, Y. He, X.-Y. Li, Y. Liu CitySee: urban
    CO2 monitoring with sensors Proceedings of IEEE INFOCOM, Orlando, FL, USA (2012),
    pp. 1611-1619 CrossRefView in ScopusGoogle Scholar Matese et al., 2009 A. Matese,
    S.F.D. Gennaro, A. Zaldei, L. Genesio, F.P. Vaccari A wireless sensor network
    for precision viticulture: the NAV system Comput. Electron. Agric., 69 (1) (2009),
    pp. 51-58 View PDFView articleView in ScopusGoogle Scholar Misra et al., 2014a
    S. Misra, S. Chatterjee, M.S. Obaidat On theoretical modeling of sensor-cloud:
    a paradigm shift from wireless sensor network IEEE Syst. J. (2014), pp. 1-10,
    10.1109/JSYST.2014.2362617 Google Scholar Misra et al., 2014b S. Misra, S. Das,
    M. Khatua, M.S. Obaidat QoS-guaranteed bandwidth shifting and redistribution in
    mobile cloud environment IEEE Trans. Cloud Comput., 2 (2) (2014), pp. 181-193
    View in ScopusGoogle Scholar Misra et al., 2015 S. Misra, A. Singh, S. Chatterjee,
    A.K. Mandal QoS-aware sensor allocation for target tracking in sensor-cloud Ad
    Hoc Netw., 33 (2015), pp. 140-153 View PDFView articleView in ScopusGoogle Scholar
    Moghaddam et al., 2010 M. Moghaddam, D. Entekhabi, Y. Goykhman, K. Li, M. Liu,
    A. Mahajan, A. Nayyar, D. Shuman, D. Teneketzis A wireless soil moisture smart
    sensor web using physics-based optimal control: concept and initial demonstrations
    IEEE J. Sel. Top. Appl. Earth Obser. Remote Sens., 3 (4) (2010), pp. 522-535 View
    in ScopusGoogle Scholar Nikolidakis et al., 2015 S.A. Nikolidakis, D. Kandris,
    D.D. Vergados, C. Douligeris Energy efficient automated control of irrigation
    in agriculture by using wireless sensor networks Comput. Electron. Agric., 113
    (April) (2015), pp. 154-163 View PDFView articleView in ScopusGoogle Scholar Ojha
    et al., 2014 T. Ojha, S. Bera, S. Misra, N.S. Raghuwanshi Dynamic duty scheduling
    for green sensor-cloud applications Proceedings of IEEE CloudCom, Singapore, Dec
    (2014), pp. 841-846 CrossRefView in ScopusGoogle Scholar Ojha et al., 2015 T.
    Ojha, S. Misra, N.S. Raghuwanshi Wireless sensor networks for agriculture: the
    state-of-the-art in practice and future challenges Comput. Electron. Agric., 118
    (October) (2015), pp. 66-84 View PDFView articleView in ScopusGoogle Scholar Park
    et al., 2011 D.-H. Park, B.-J. Kang, K.-R. Cho, C.-S. Shin, S.-E. Cho, J.-W. Park,
    W.-M. Yang A study on greenhouse automatic control system based on wireless sensor
    network Wireless Pers. Commun., 56 (1) (2011), pp. 117-130 CrossRefView in ScopusGoogle
    Scholar Reche et al., 2015 A. Reche, S. Sendra, J.R. Díaz, J. Lloret A smart M2M
    deployment to control the agriculture irrigation Proceedings of Ad-hoc Networks
    and Wireless, Benidorm, Spain (2015), pp. 139-151 lNCS 8629 CrossRefView in ScopusGoogle
    Scholar Riquelme et al., 2009 J.A.L. Riquelme, F. Soto, J. Suardíaz, P. Sánchez,
    A. Iborra, J.A. Vera Wireless sensor networks for precision horticulture in Southern
    Spain Comput. Electron. Agric., 68 (1) (2009), pp. 25-35 Google Scholar Roy et
    al., 2015 S.K. Roy, A. Roy, S. Misra, N.S. Raghuwanshi AID: a prototype for agricultural
    intrusion detection using wireless sensor network Proceedings of IEEE International
    Conference on Communications, London, UK (2015), pp. 7059-7064 CrossRefView in
    ScopusGoogle Scholar Sales et al., 2015 N. Sales, O. Remédios, A. Arsenio Wireless
    sensor and actuator system for smart irrigation on the cloud Proceedings of IEEE
    2nd World Forum on Internet of Things (WF-IoT), Milan, Italy (2015), pp. 693-698
    CrossRefView in ScopusGoogle Scholar ur Rehman et al., 2014 A. ur Rehman, A.Z.
    Abbasi, N. Islam, Z.A. Shaikh A review of wireless sensors and networks’ applications
    in agriculture Comput. Stand. Interfaces, 36 (2) (2014), pp. 263-270 Google Scholar
    Voulodimos et al., 2010 A.S. Voulodimos, C.Z. Patrikakis, A.B. Sideridis, V.A.
    Ntafis, E.M. Xylouri A complete farm management system based on animal identification
    using RFID technology Comput. Electron. Agric., 70 (2) (2010), pp. 380-388 View
    PDFView articleView in ScopusGoogle Scholar Yang et al., 2013 H. Yang, Y. Qin,
    G. Feng, H. Ci Online monitoring of geological CO2 storage and leakage based on
    wireless sensor networks IEEE Sens. J., 13 (2) (2013), pp. 556-562 View in ScopusGoogle
    Scholar Yuriyama and Kushida, 2010 M. Yuriyama, T. Kushida Sensor-cloud infrastructure
    – physical sensor management with virtualized sensors on cloud computing Proceedings
    of IEEE International Conference on Network-Based Information Systems, Takayama,
    Japan (2010), pp. 1-8 CrossRefView in ScopusGoogle Scholar Zhu et al., 2014 C.
    Zhu, H. Wang, X. Liu, L. Shu, L.T. Yang, V.C.M. Leung A novel sensory data processing
    framework to integrate sensor networks with mobile cloud IEEE Syst. J. (2014),
    pp. 1-12, 10.1109/JSYST.2014.2300535 Google Scholar Zhu et al., 2015 C. Zhu, Z.
    Sheng, V.C.M. Leung, L. Shu, L.T. Yang Towards offering more useful data reliably
    to mobile cloud from wireless sensor network IEEE Trans. Emerg. Top. Comput.,
    3 (1) (2015), pp. 84-94 View in ScopusGoogle Scholar Cited by (41) A smart decision
    framework for the prediction of thrips incidence in organic banana crops 2022,
    Ecological Modelling Citation Excerpt : Precision agriculture is a management
    strategy that combines different information and communication technologies (ICTs),
    also known as Internet of Things (IoT), to obtain data from numerous sources,
    and enabling an increase of efficiency and productivity based on the decisions
    made after analysing these data (Li and Chung, 2015) (Mazon-Olivo et al., 2018).
    With its roots in Industry 4.0, precision agriculture is a concept where applications
    such as smart farming (Despoudi et al., 2021; Shamrat et al., 2020), smart devices
    and platforms (Marcu et al., 2020) (Reddy Maddikunta, et al., 2021) (Suciu et
    al., 2019), Internet of Things (IoT) (Colizzi et al., 2020) (Khanna and Kaur,
    2019) (Raj et al., 2021), cyber-physical systems – CPS (An et al., 2017) (Guo
    et al., 2018), cloud computing (Ojha et al., 2017) (Hsu et al., 2020), temperature
    control (Ma and Chen, 2018) (Dan et al., 2015), blockchain (Singh and Singh, 2020),
    tracking and tracing technologies (Yusianto et al., 2019) (Mohd Bahrudin, et al.,
    2011), Artificial Intelligence (AI) (Jha et al., 2019) (Pantazi et al., 2020),
    Big Data (Kamilaris et al., 2017) (Hsu et al., 2020), autonomous land farming
    robots (Jayakrishna et al., 2018) (Shaik et al., 2018), autonomous aerial farming
    robots and smart monitors (Despoudi et al., 2021) (Boursianis et al., 2020) drive
    the management of the farm activities towards better efficiency and productivity,
    reducing the use of resources, pollution and improving the quality of life (Bhakta
    et al., 2019). Mathematical representations of the phenomena taking place on the
    farm are of paramount importance for improving the knowledge and decision-making
    for the banana production. Show abstract Thrips incidence prediction in organic
    banana crop with Machine learning 2021, Heliyon Citation Excerpt : Precision agriculture
    can be defined as the combination of information and communication technologies,
    also known as 4.0 technologies, which allows obtaining information from numerous
    sources, allowing more efficient decision-making based on the analysis of this
    information [10, 11]. The 4.0 technologies applied in the agricultural sector
    are Big Data [12, 13], Cloud Computing [14, 15], Cyber-Physical System [16, 17],
    Internet of Things (IoT) [18, 19], and Artificial Intelligence (AI) [20, 21].
    The interpretation of information with Machine Learning (ML) techniques allows
    the development of mathematical models with high estimation accuracy [22]. Show
    abstract A novel trust mechanism based on Fog Computing in Sensor–Cloud System
    2020, Future Generation Computer Systems Citation Excerpt : For the wireless sensor
    networks layer, researchers focus on the management strategy that aims at how
    to efficiently and optimally improve the utilization of physical sensor nodes,
    that is to say, a physical sensor node should service multiple sets of applications;
    for the cloud layer, the main work is establishing virtual sensor groups corresponding
    to physical sensor nodes and allocating virtual sensor nodes to users according
    to their requirement, in other words, users will not need to pay attention to
    the design and organization document of WSNs, which achieves great implementation
    efficiency and operation flexibility; for the user layer, the focus is on the
    design of application software and user interfaces that help users accurately
    publish requirements and find available resources. SCS is applied in environmental
    monitoring, disease surveillance, wildlife monitoring, remote sensing, agriculture
    and irrigation control, and so on [22,23]. For security breaches, they can exists
    in every part of SCS, such as data generation, data transmission, in-network processing
    and the cloud [24]. Show abstract Automatic delivery and recovery system of Wireless
    Sensor Networks (WSN) nodes based on UAV for agricultural applications 2019, Computers
    and Electronics in Agriculture Citation Excerpt : The result demonstrates that
    the proposed algorithm could perform relevant monitoring tasks with fewer monitoring
    nodes. Ojha et al. (2017) presented an energy optimization and duty scheduling
    algorithm to conserve energy in the sensor-cloud framework. Guo and Zhao (2014)
    established a propagation model for 2.4 GHz wireless sensor network in young apple
    orchard. Show abstract Crop welfare and security to farmers 2023, Advanced Technologies
    for Smart Agriculture A Review on the Importance of Internet of Things in Agriculture
    Applications 2023, Proceedings - 4th IEEE 2023 International Conference on Computing,
    Communication, and Intelligent Systems, ICCCIS 2023 View all citing articles on
    Scopus View Abstract © 2017 Elsevier B.V. All rights reserved. Recommended articles
    Falcon: An ambient temperature aware thermal control policy for IoT gateways Sustainable
    Computing: Informatics and Systems, Volume 16, 2017, pp. 48-55 Youhuizi Li, …,
    Jian Wan View PDF A new simulation-based genetic algorithm to efficiency measure
    in IDEA with weight restrictions Measurement, Volume 108, 2017, pp. 26-33 Bohlool
    Ebrahimi, …, Seyed Hassan Ghodsypour View PDF Set-based similarity learning in
    subspace for agricultural remote sensing classification Neurocomputing, Volume
    173, Part 2, 2016, pp. 332-338 Yi Tang, Xinrong Li View PDF Show 3 more articles
    Article Metrics Citations Citation Indexes: 40 Captures Readers: 115 View details
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply.'
  inline_citation: '>'
  journal: Computers and electronics in agriculture
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: 'Sensing-cloud: Leveraging the benefits for agricultural applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.12731/2658-6649-2022-14-6-423-454
  analysis: '>'
  authors:
  - Gurjeet Singh
  - Naresh Kalra
  - Neetu Yadav
  - Ashwani Sharma
  - Manoj Saini
  citation_count: 16
  full_citation: '>'
  full_text: ">\n423\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6,\
    \ 2022\nНАУЧНЫЕ ОБЗОРЫ И СООБЩЕНИЯ\n  \nSCIENTIFIC REVIEWS AND REPORTS\nDOI: 10.12731/2658-6649-2022-14-6-423-454\
    \ \nUDC 004:63\nSMART AGRICULTURE: A REVIEW\nGurjeet Singh, Naresh Kalra, Neetu\
    \ Yadav,                                                    \nAshwani Sharma,\
    \ Manoj Saini\nAgriculture is regarded as one of the most crucial sectors in guaranteeing\
    \ food \nsecurity. However, as the world’s population grows, so do agri-food demands,\
    \ \nnecessitating a shift from traditional agricultural practices to smart agriculture\
    \ \npractices, often known as agriculture 4.0. It is critical to recognize and\
    \ handle the \nproblems and challenges related with agriculture 4.0 in order to\
    \ fully profit from \nits promise. As a result, the goal of this research is to\
    \ contribute to the development \nof agriculture 4.0 by looking into the growing\
    \ trends of digital technologies in the \nfield of agriculture. A literature review\
    \ is done to examine the scientific literature \npertaining to crop farming published\
    \ in the previous decade for this goal. This \nthorough examination yielded significant\
    \ information on the existing state of digital \ntechnology in agriculture, as\
    \ well as potential future opportunities.\nKeywords: Smart Agriculture; Artificial\
    \ Intelligence; Machine Learning; IOT; \nEdge Computing; Fog Computing\nFor citation.\
    \ Gurjeet Singh, Naresh Kalra, Neetu Yadav, Ashwani Sharma, Manoj. \nSmart Agriculture:\
    \ A Review. Siberian Journal of Life Sciences and Agriculture, 2022, \nvol. 14,\
    \ no. 6, pp. 423-454. DOI: 10.12731/2658-6649-2022-14-6-423-454 \n1. Introduction\
    \ \n1.1. A worldwide dilemma of food security\nFood security is a multifaceted\
    \ notion that aims to eliminate hunger by \nassuring a steady supply of nutritious\
    \ food. It is defined by a four-pillar para-\ndigm, each of which is necessary\
    \ to provide food security [1]. Food security \nis becoming a severe global concern\
    \ as a result of anthropogenic factors such \nas rapid population expansion, urbanization,\
    \ industrialization, farmland loss, \nfreshwater scarcity, and environmental degradation.\
    \ This is due to the fact that \n424\nSiberian Journal of Life Sciences and Agriculture,\
    \ Vol. 14, №6, 2022\nthese factors have a direct impact on the agricultural industry,\
    \ which is the \nworld’s principal source of agri-food production. By 2050, it\
    \ is expected that \nthe global population will rise from 7.7 billion to 9.2 billion,\
    \ urban population \nwill rise by 66 percent, arable land will decline by approximately\
    \ 50 million \nhectares, global GHG emissions (source of CO 2 – promote crop disease\
    \ and \npest growth) will rise by 50 percent, agri-food production will decline\
    \ by 20%, \nand food demand will rise by 59 to 98 percent, posing an imminent\
    \ threat. To \nmeet rising food demands, agricultural practitioners around the\
    \ world will need \nto increase crop and livestock production to maximize agricultural\
    \ output. The \nemphasis of this review paper is crop farming, which includes\
    \ the production \nof both food and cash crops. \nA typical agri-food value chain\
    \ displaying three key stages in the production \nof agricultural products: pre-field\
    \ (pre-plantation stage), in-field (plantation and \nharvesting stage), and post-field\
    \ (post-harvesting stage). All of the stages are \nimportant in the value chain,\
    \ but in this examination, we will focus on the sec-\nond stage, in-field, which\
    \ includes numerous crop-growing operations such as \nploughing, sowing, spraying,\
    \ and harvesting, among others. Traditional agricul-\ntural approaches are now\
    \ used in these procedures, which are labor-intensive, \nrequire arable land,\
    \ time, and a significant quantity of water (for irrigation), and \nmake it difficult\
    \ to produce enough food [5]. A part of the problem is also due \nto the improper\
    \ application of pesticides and herbicides, as well as the misuse \nof available\
    \ technologies, both of which hurt crops and ultimately result in \nagricultural\
    \ waste [6]. These problems can be solved by combining advanced \ntechnologies\
    \ and computer-based applications that ensure higher crop yields, \nless water\
    \ use, better pesticide/herbicide use, and improved crop quality. This \nis where\
    \ the concept of smart agriculture comes into play.\n1.2. Smart Agriculture\n\
    Every industry is being revolutionized and reshaped by Industry 4.0. It’s a \n\
    strategic initiative that combines emerging disruptive digital technologies like\
    \ \nthe Internet of Things (IoT), big data and analytics (BDA), system integration\
    \ \n(SI), cloud computing (CC), simulation, autonomous robotic systems (ARS),\
    \ \naugmented reality (AR), artificial intelligence (AI), wireless sensor networks\
    \ \n(WSN), cyber-physical systems (CPS), digital twin (DT), and additive manu-\n\
    facturing (AM) to enable the digitization of the industry [7]. \nAgriculture 4.0,\
    \ also known as smart agriculture, smart farming or digital \nfarming [7], is\
    \ the next phase of industrial agriculture, fueled by the integra-\ntion of these\
    \ technologies in agriculture. Farmers can use smart agriculture to \naddress\
    \ a variety of agricultural food production concerns such as farm pro-\n425\n\
    Siberian Journal of Life Sciences and Agriculture, Том 14, №6, 2022\nductivity,\
    \ environmental impact, food security, crop losses, and sustainability. \nFarmers,\
    \ for example, can connect to farms remotely, regardless of location \nor time,\
    \ using IoT-enabled equipment based on WSNs to monitor and control \nfarm operations.\
    \ Drones outfitted with hyper spectral cameras can collect data \nfrom a variety\
    \ of sources on farmlands, while autonomous robots can assist \nor complete repetitive\
    \ chores on farms. Data analytics techniques can be used \nto examine the obtained\
    \ data, and computer programs can be utilized to help \nfarmers make decisions.\n\
    Similarly, smart agriculture can monitor and analyze a wide range of pa-\nrameters\
    \ related to environmental factors, weed control, crop production status, \nwater\
    \ management, soil conditions, irrigation scheduling, herbicides and pes-\nticides,\
    \ and controlled environment agriculture to increase crop yields, reduce \ncosts,\
    \ improve product quality, and maintain process inputs through the use of \nmodern\
    \ systems [8].\n1.3. Research Motivation and Contribution \nThe reason for writing\
    \ this assessment is that digital technologies in agri-\ncultural systems provide\
    \ new strategic solutions for increasing farm output ef-\nficiency and effectiveness.\
    \ Furthermore, digital transformation paves the door \nfor modern farming technologies\
    \ like vertical farming (hydroponics, aquapon-\nics, and aeroponics) to be used,\
    \ which has the potential to solve food security \nissues. However, there are\
    \ a number of issues and restrictions connected with \nthis change from a technological,\
    \ socioeconomic, and management perspective \nthat must be overcome in order to\
    \ fully realise the potential of agricultural 4.0 \n[9].A number of publications\
    \ [9–18] have examined developing trends in the \ndevelopment of agriculture 4.0\
    \ by offering concise information on essential \nuses, benefits, and research\
    \ problems of smart farming. These studies’ research \nfocuses on either explaining\
    \ more general technical aspects while focusing on \nonly one or a few digital\
    \ technologies, or improving agricultural supply chain \nperformance, or developing\
    \ an agriculture 4.0 definition, or achieving sustain-\nable agronomy through\
    \ precision agriculture, or proposing a smart farming \nframework. Nonetheless,\
    \ these studies do not include an explicit discussion of \nthe tools and techniques\
    \ utilized to construct various systems, as well as their \nmaturity level. There\
    \ are also few studies that look at the consequences of dig-\nital technology\
    \ in modern soilless farms including hydroponics, aquaponics, \nand aeroponics\
    \ (indoor/outdoor). As a result, in order to promote conversation \nin this field,\
    \ it is necessary to examine the emergence of agriculture 4.0 from \nmany angles.\
    \ This research seeks to provide a comprehensive overview of dig-\nital technologies\
    \ used in the second stage of the agricultural production value \n426\nSiberian\
    \ Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\nchain (in-field)\
    \ for various farm types as described in section 1.1. The study’s \nkey theoretical\
    \ contribution is the analysis and dissemination of the tools and \ntechniques\
    \ used, as well as the farm type, maturity level of produced systems, \nand potential\
    \ obstacles or inhibiting factors in agriculture 4.0 development. Re-\nsearchers\
    \ and agricultural practitioners will benefit from the review’s insights \nin\
    \ future study on agriculture 4.0. \n1.4. Paper organization \nThe following is\
    \ the structure of the paper after the introduction: \nSection 2 discusses the\
    \ methodology used to collect relevant literature; Sec-\ntion 3 then presents\
    \ the statistical results obtained after a general analysis of the \nselected\
    \ research studies; Section 4 then provides a detailed overview of the \ncore\
    \ technologies used in agricultural digitization; Section 5 then highlights the\
    \ \ntechnical and socio-economic roadblocks to digital integration in agriculture;\
    \ \nand finally, Section 6 outlines a discussion of the research questions.\n\
    2. Research Methodology \nA systematic literature review (SLR) is a technique\
    \ for organizing and iden-\ntifying research related to a specific topic [19].\
    \ SLR is used in this study to look \ninto the state of Industry 4.0 technologies\
    \ in the agricultural industry. Cases \nwhere the phrase ‘agricultural’ occurred\
    \ in the title, abstract, or keywords of \nan article with any of the ‘Industry\
    \ 4.0 technologies’ described in section 1.2 \nare specifically sought. A review\
    \ procedure is established prior to conducting \nthe SLR to ensure a transparent\
    \ and high-quality research process, which are \nthe features that distinguish\
    \ a systematic literature review [20]. By conducting \nthorough literature searches,\
    \ the review methodology also helps to reduce bias. \nThe creation of the research\
    \ questions, the defining of the search method, and \nthe specification of inclusion\
    \ and exclusion criteria are all part of this process. \nTo conduct SLR, this\
    \ paper uses a recommended reporting item for system-\natic reviews and meta-analysis\
    \ (PRISMA) approach. PRISMA is a minimum \ncollection of items based on evidence\
    \ that is used to guide the construction of \nsystematic literature reviews and\
    \ other meta-analyses [19].\n2.1. Review Protocol \nBefore doing the bibliographic\
    \ analysis, a review methodology is estab-\nlished to identify, analyze, and interpret\
    \ data that are relevant to the research \nfocus. To begin, research questions\
    \ are developed in order to provide insight \ninto the study of published studies\
    \ in the research area of interest from many \nperspectives. These are the questions\
    \ that must be addressed in the research. The \nsearch strategy is then created,\
    \ which aids in the identification of appropriate \n427\nSiberian Journal of Life\
    \ Sciences and Agriculture, Том 14, №6, 2022\nkeywords later in the search equation,\
    \ as well as the identification of relevant \ninformation sources, such as academic\
    \ databases and search engines that allow \naccess to vast amounts of digital\
    \ documentation. Science Direct, Scopus, and \nIEEE Xplore are three online research\
    \ archives that are utilized to find relevant \nstudies. Finally, boundaries are\
    \ created by predefining inclusion and exclusion \ncriteria for further inquiry\
    \ and content assessments of selected articles in order \nto narrow the search\
    \ results of each database.\n2.2. Evaluation Process \nIdentification, screening,\
    \ eligibility, and inclusion are the four stages of the \nliterature search process\
    \ that are evaluated. Consolidation is done for the re-\nmoval of duplicate items\
    \ in the identification step after initial metadata filtering \nby the use of\
    \ search expressions. After this phase, the number of publications is \nreduced.\
    \ The titles and abstracts of the papers are reviewed during the screening \n\
    stage, and the most relevant publications are chosen for integral reading. In\
    \ the \nthird stage, full-text screening of these papers is done to ensure that\
    \ they are \neligible for this paper’s goal.\n2.3. Threats to Validity \n(i) SLR\
    \ replication: Because the current search is confined to only three on-\nline\
    \ repositories, the provided SLR is vulnerable to risks to validity. \nAdditional\
    \ sources could potentially lead to the discovery of more pub-\nlications. Validity\
    \ can be regarded satisfactorily addressed because the SLR \nprocess is clearly\
    \ defined in sub-sections 2.1 and 2.2. However, it is possible \nthat slightly\
    \ different publications will be found if this SLR is replicated. This \nvariation\
    \ could be due to various personal choices made throughout the PRIS-\nMA screening\
    \ and eligibility phases, but it’s highly improbable that the overall \nresults\
    \ would alter.\n(ii)The search string used to discover the relevant papers covers\
    \ the entire \nspectrum of SLR; however it’s possible that some important studies\
    \ were over-\nlooked. More research may be found if more keywords and synonyms\
    \ in the \nsearch are included.\n3. Digitization Trends in Agriculture \nAlthough\
    \ the agriculture business is making significant progress in terms \nof digital\
    \ technology adoption, it is still lagging behind other industries such \nas healthcare,\
    \ manufacturing, mining, automotive, energy, and others [15]. The \ncrop farming\
    \ method considered while designing an application or framework \nis referred\
    \ to as the farm type. The farming method, for example, can be soil-\nbased or\
    \ soilless. Open-air fields (conventional outdoor agricultural farms) and \n428\n\
    Siberian Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\ngreenhouse\
    \ farms are included in the soil-based farming category (indoor). The \nsoilless\
    \ farming category, on the other hand, includes modern farming tech-\nniques such\
    \ as aquaponics, aeroponics, and hydroponics (mostly indoor). In \nthe recent\
    \ decade, autonomous robotics systems (including unmanned guided \nvehicles and\
    \ unmanned aerial vehicles (drones)), the internet of things, and \nmachine learning\
    \ appear to be the most commonly used technology in agricul-\nture. Agriculture’s\
    \ growing sectors include big data, wireless sensor networks, \ncyber-physical\
    \ systems, and digital twins. Furthermore, in contrast to indoor \nfarms, open\
    \ air farms are the most usually examined in research investigations. \nFew publications\
    \ exist for soilless farming systems (aquaponics, aeroponics, \nand hydroponics),\
    \ implying that these modern farming practices are still in \ntheir infancy. Similarly,\
    \ each use case’s services are identified and classified \ninto nine service categories:\
    \ I crop management, CM (estimation/harvesting \nperiod and seed plantation/prediction\
    \ of crop yield/ growth rate/harvesting/ \npollination/ spraying (fertilizer/\
    \ pesticide)); ii) crop quality management, CQM \n(fresh weight, green biomass,\
    \ height, length, width, leaf density, piment content \n(chlorophyll), and phytochemical\
    \ composition); iii) water and environmental \nmanagement, WEM (monitoring and\
    \ control of flow rate, water level, water \nquality (nutrients), temperature,\
    \ humidity, CO2, and weather forecasts, among \nother things); iv) irrigation\
    \ management, IM (water stress detection and sched-\nuling); v) farm management,\
    \ FM (monitoring of farm operations, tracking and \ncounting products, determining\
    \ production efficiency, financial analysis, energy \nconsumption analysis, technology\
    \ integration, and decision-making);\nPDM (pest and disease management) is a term\
    \ used to describe the man-\nagement of pests and diseases (pest identification\
    \ and disease detection) SM \n(Soil Management) vii) (moisture content, soil nutrients,\
    \ fertilizer needs and \napplication) WUVM (weed/unknown vegetation mapping, classification,\
    \ and \npesticide application) viii) weed and unwanted vegetation management FDC\
    \ \n(fruit detection and counting), and ix) \nThe role of various digital technologies\
    \ in smart farming is depicted in \nthese categories. Crop management characteristics\
    \ such as crop yield prediction, \ngrowth rate estimation, and harvesting period\
    \ evaluation are the most 4.0 in the \nprevious decade, whereas soil management,\
    \ fruit identification and counting, \nand crop quality management receive very\
    \ less attention. The European Union’s \nTRL scale, which divides system maturity\
    \ into three generic categories [21], is \nused to assess the technology readiness\
    \ level (TRL) of all use cases. The first \nlevel is conceptual, which corresponds\
    \ to European TRL 1–2 (use case is in \nconcept phase), the second level is prototype,\
    \ which corresponds to Europe-\n429\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\nan TRL 3–6 (use case is functional even without all planned\
    \ features), and the \nthird level is deployed, which corresponds to European\
    \ TRL 7–9. (Use case \nis mature with all the possible functions). Each use case’s\
    \ TRL was produced \nin a few experiments. It has been noticed that smart agricultural\
    \ systems have \nmade little progress from the concept and prototype stages to\
    \ the commercial \nstage. The majority of use cases, for example, are still in\
    \ the prototype stage.\n4. Agriculture 4.0 enabling technologies \n4.1. Internet\
    \ of Things driven agricultural systems \nThe Internet of Things (IoT) is a network\
    \ of interconnected computing de-\nvices, sensors, appliances, and machines that\
    \ are all connected to the internet \nand have their own unique identities and\
    \ capacities for remote sensing and \nmonitoring [21]. Network layer (communication),\
    \ perception layer (hardware \ndevices), , middleware layer (device management\
    \ and interoperability), service \nlayer (cloud computing), application layer\
    \ (data integration and analytics), and \nend-user layer are the six layers of\
    \ the IoT reference architecture (user-inter-\nface). IoT devices on the physical\
    \ layer in the agricultural domain collect data \non environmental and crop characteristics\
    \ such as temperature, humidity, pH \nvalue, water level, leaf colour, fresh leaf\
    \ weight, and so on. The network layer is \nresponsible for transmitting this\
    \ information, and its architecture is determined \nby the field size, farm location,\
    \ and type of farming method. ZigBee, LoRa, and \nSigfox, for example, are widely\
    \ utilized and employed in outdoor fields because \nthey are less expensive, have\
    \ low energy consumption, and have a long trans-\nmission range [22, 23]. Bluetooth,\
    \ despite being a secure technology, is only \nemployed in indoor farms due to\
    \ its limited transmission range [22]. Due to its \nhigh costs and high energy\
    \ consumption, Wi-Fi is not a promising technology \nfor agricultural applications\
    \ [22]. On the other hand, RFID (radio frequency \nidentification) and NFC (near\
    \ field communication) technologies are increas-\ningly being used in agricultural\
    \ systems for product tracking [24]. For periodic \nmonitoring of environmental\
    \ and soil characteristics, GPRS or mobile commu-\nnication technology (2G, 3G,\
    \ and 4G) is utilized. Furthermore, HTTP, WWW, \nand SMTP are the most commonly\
    \ utilized communication protocols in agri-\ncultural contexts. Similarly, middleware\
    \ HYDRA and SMEPP are commonly \nused in agricultural systems to enable interoperability\
    \ and system security for \ntheir context-aware functionalities [25]. \nCloud\
    \ computing approaches are used in the service layer to store data. \nThis information\
    \ is then used on the application layer to create smart apps that \nfarmers, agriculture\
    \ experts, and supply chain professionals can use to improve \n430\nSiberian Journal\
    \ of Life Sciences and Agriculture, Vol. 14, №6, 2022\nfarm monitoring and productivity.\
    \ The use of IoT in agriculture is intended to \nprovide farmers with decision-making\
    \ tools and automation technologies that \nallow them to seamlessly integrate\
    \ knowledge, products, and services in order to \nincrease production, quality,\
    \ and profit. A slew of research have been conduct-\ned and presented on the incubation\
    \ of IoT concepts in the agricultural industry. \nThe development of IoT-based\
    \ agricultural systems has addressed a variety of \ntechnological and architectural\
    \ concerns. However, most of these technologies \nare now in the conceptual stage\
    \ or in prototype form (not commercial). Farm \nmanagement, irrigation control,\
    \ crop development, health monitoring, and dis-\nease detection are all priorities.\
    \ \nSome of these studies also explained how IoT is being used in current ag-\n\
    ricultural systems like vertical farming (soilless farming - aquaponics, hydro-\n\
    ponics, and aeroponics) and greenhouse farming (soil-based). Furthermore, the\
    \ \nmajority of studies have been focused on a single issue.\n4.2. Wireless sensor\
    \ networks in agriculture \nA wireless sensor network (WSN) is a technology that\
    \ is utilized in an Inter-\nnet of Things (IoT) system. It is defined as a collection\
    \ of spatially distributed \nsensors for monitoring environmental physical conditions,\
    \ temporarily storing \nobtained data, and transferring the information to a central\
    \ point [22]. A wire-\nless sensor network (WSN) for smart farming is made up\
    \ of multiple sensor \nnodes connected by a wireless connection module. These\
    \ nodes have a variety \nof skills that allow them to self-organize, self-configure,\
    \ and self-diagnose (for \nexample, processing, trans- mission, and feeling).\
    \ There are various varieties of \nWSNs, which are classified based on the environment\
    \ in which they are used. \nTWSNs (terrestrial wireless sensor networks), WUSNs\
    \ (wireless underground \nsensor networks), UWSNs (underwater wireless sensor\
    \ networks), WMSNs \n(wireless multimedia sensor networks), and MWSNs (mobile\
    \ wireless sensor \nnetworks) are a few examples [26]. TWSN and UWSN are commonly\
    \ utilized \nin agricultural applications. TWSN nodes are sensors that collect\
    \ data from \nthe environment and are located above ground. The second type of\
    \ WSN is \nWUSNs, which are WSNs with sensor nodes embedded in the soil. Lower\
    \ fre-\nquencies easily enter the soil in this environment, whereas higher frequencies\
    \ \nare severely attenuated [27]. Because of the limited communication radius,\
    \ the \nnetwork requires a larger number of nodes to cover a big area. Many research\
    \ \npublications on the use of WSN for various outdoor and indoor farm applica-\n\
    tions, such as irrigation management, water quality testing, and environmental\
    \ \nmonitoring, are accessible in the literature. The goal of these experiments\
    \ was \nto create WSN architectures that were simple, low-cost, energy-efficient,\
    \ and \n431\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6, 2022\n\
    scalable. However, several aspects of WSNs, such as minimum maintenance, \nrobust\
    \ and fault-tolerant architecture, and interoperability, require more study. \n\
    4.3. Cloud computing in agriculture \nCloud computing (CC) is defined as a model\
    \ for enabling convenient, ubiq-\nuitous, on-demand network access to a shared\
    \ pool of configurable computing \nresources (e.g., networks, servers, storage,\
    \ applications, and services) that can \nbe rapidly provisioned and released with\
    \ minimal management effort or ser-\nvice provider interaction, according to the\
    \ National Institute of Standards and \nTechnologies (NIST) [28]. The datacenter\
    \ (hardware), infrastructure, platform, \nand application layers make up the primary\
    \ architecture of CC [29]. Each of \nthese layers corresponds to one of three\
    \ cloud service models: SaaS (software \nas a service), PaaS (platform as a service),\
    \ and IaaS (infrastructure as a service) \n(IaaS). In the agriculture sector,\
    \ cloud computing has gotten a lot of attention in \nthe last decade because it\
    \ provides: 1) low-cost storage for data collected from \nvarious domains via\
    \ WSNs and other preconfigured IoT devices, 2) large-scale \ncomputer systems\
    \ to make intelligent decisions by converting raw data into \nusable knowledge,\
    \ and 3) a secure platform for developing agricultural based \nIoT applications\
    \ [30]. \nCC is used to develop various agricultural applications in conjunction\
    \ with \nIoT and WSN. CC technology is also utilized to develop operational farm\
    \ man-\nagement systems (FMSs) that help farmers and farm managers monitor farm\
    \ \nactivities more efficiently. The traceability of agri-product quality is another\
    \ \narea of interest that is being investigated in global research [31]. However,\
    \ only \npreliminary research has been done to see if traceability complies with\
    \ food \nsafety and quality criteria. The usage of cloud-based agricultural systems\
    \ has \nthe potential to address issues such as rising food demand, pollution\
    \ from pes-\nticides and fertilizers, and the safety of agricultural products.\
    \ These FMSs, on \nthe other hand, lack the flexibility to offer run-time customization\
    \ in response \nto specific farmer needs. Furthermore, because most farm data\
    \ is fragmented \nand distributed, recording farm operations accurately in existing\
    \ FMSs systems \nis problematic [32].\n4.4. Edge/fog computing in agriculture\
    \ \nThe rapid expansion of IoT has resulted in an explosion of sensors and smart\
    \ \ndevices, creating massive amounts of data. The processing and analysis of\
    \ such a \nlarge volume of data in real time is difficult since it puts a strain\
    \ on the cloud serv-\ner and slows response times. When dealing with such a massive\
    \ data set, a cloud \nserver alone will not be able to offer real-time responses.\
    \ Furthermore, because \nIoT applications require a constant exchange of information\
    \ between devices and \n432\nSiberian Journal of Life Sciences and Agriculture,\
    \ Vol. 14, №6, 2022\nthe cloud, they are susceptible to network latency, making\
    \ CC unsuitable for these \napplications [23]. The introduction of the edge computing\
    \ idea has the potential \nto overcome the CC issues. This novel computing architecture\
    \ places computa-\ntional and storage resources (such as cloudlets or fog nodes)\
    \ closer to data sources \nlike mobile devices and sensors at the network’s edge.\
    \ This allows for real-time \nanalytics while maintaining data security on the\
    \ device [23]. Although edge com-\nputing has exciting potential for smart agriculture,\
    \ its applications in agricultural \nsystems are still in their infancy. As a\
    \ result, there are limited research studies in \nthis field. The majority of\
    \ the edge computing-based agricultural systems covered \nin these papers are\
    \ prototypes that solve a small number of challenges across a \nvariety of agricultural\
    \ disciplines. Interoperability and scalability issues haven’t \ngotten enough\
    \ attention so yet. Agricultural robots combine emerging technolo-\ngies such\
    \ as computer vision; wireless sensor networks (WSNs), satellite navi-\ngation\
    \ systems (GPS), artificial intelligence (AI), cloud computing (CC), and the \n\
    Internet of Things (IoT) to help farmers improve productivity and quality of ag-\n\
    ricultural products. AARS in smart farming can be mobile or fixed [33]. Mobile\
    \ \nAARS can move around the working field. Unmanned ground vehicles (UGVs) \n\
    and unidentified aerial vehicles (UAVs) are the two types of mobile AARSs, as\
    \ \ndiscussed in the following sections. \n4.5.1. Unmanned ground vehicles in\
    \ agriculture\nUnmanned ground vehicles (UGVs) are agricultural robots that work\
    \ with-\nout the use of a human operator on the ground. A platform for locomotive\
    \ ap-\nparatus and manipulator, navigation sensors, a supervisory control system,\
    \ an \ninterface for the control system, communication links for information exchange\
    \ \nbetween devices, and system architecture for integration between hardware\
    \ and \nsoftware agents are the main components of UGVs [34]. The control architec-\n\
    ture of a UGV can be remote-operated (controlled via an interface by a human \n\
    operator) or totally autonomous (operated without the use of a human control-\n\
    ler using artificial intelligence technology) [34]. Locomotive systems, likewise,\
    \ \ncan be based on wheels, tracks, or legs [34]. Legged robots are uncommon in\
    \ \nagriculture, despite their great terrain flexibility, inherent Omni directionality,\
    \ \nand soil protection. These robots, however, offer a disruptive locomotion\
    \ mech-\nanism for smart farms when paired with wheels (wheel-legged robots).\
    \ UGVs \nshould meet specific requirements, such as small size, maneuverability,\
    \ resil-\nience, efficiency, human-friendly interface, and safety, in addition\
    \ to the nec-\nessary features for infield operations, in order to improve crop\
    \ yields and farm \nproductivity. A 4WD locomotive system is used in the majority\
    \ of agricultural \nrobotic systems due to its ease of manufacture and control.\
    \ \n433\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6, 2022\n\
    The disadvantage of 4WD is that terrains with stone elements and/or voids \nhave\
    \ a significant impact on the wheels [34]. As a result, other mechanisms, \nsuch\
    \ as legged or wheel-legged locomotive systems, should be investigated. \nAlthough\
    \ some robots include computer vision systems, most of these robots \nare designed\
    \ with a low-cost computer vision system, such as traditional RGB \ncameras, due\
    \ to the difficulties of establishing an accurate and dependable sys-\ntem that\
    \ can replace manual labour. Furthermore, the majority of the systems \nmentioned\
    \ above are still in the research phase, with no large-scale commer-\ncial application.\n\
    4.5.2. Unmanned aerial vehicles in agriculture \nUnmanned aerial vehicles (UAVs),\
    \ sometimes known as aerial robots, are \nplanes that do not have a human pilot\
    \ on board. There are many different types \nof UAVs [35] depending on the technology\
    \ used to fly (wing structure) and the \nlevel of autonomy. Fixed-wing (planes),\
    \ single-rotor (helicopter), hybrid system \n(vertical takeoff and landing), and\
    \ multi-rotor UAVs are examples of wing types \n(drone). Drones (multi-rotor technology),\
    \ which are raised and driven by four \n(quad-rotor) or six (hex-rotor) rotors,\
    \ have grown in popularity in the agricul-\nture sector because to their mechanical\
    \ simplicity in comparison to helicopters, \nwhich rely on a much more complex\
    \ plate control mechanism [36]. Similarly, \nUAVs can be tele-operated or tele-commanded,\
    \ depending on their autonomy \nlevel, with the pilot providing references to\
    \ each actuator of the aircraft to con-\ntrol it in the same way that an onboard\
    \ pilot would, or tele-commanded with the \naircraft relying on an automatic controller\
    \ on board to maintain a stable flight \n[35]. Agricultural UAVs with the right\
    \ sensors (vision, infrared, multispectral, \nand hyper spectral cameras, for\
    \ example) can collect data (vegetation, leaf area, \nand reflectance indexes)\
    \ from their fields to monitor dynamic changes in crops \nthat aren’t visible\
    \ from the ground [37]. Farmers can deduce information about \ncrop illnesses,\
    \ nutrient deficits, water level, and other agricultural growth char-\nacteristics\
    \ using this data. Farmers might plan possible cures using this knowl-\nedge (irrigation,\
    \ fertilization, weed control, etc.). \nThe majority of the systems mentioned\
    \ above are still in the research stage, \nwith no large-scale commercial use.\
    \ Other issues with these UAVs include bat-\ntery life and flight time [35]. Lithium-ion\
    \ batteries are currently in use because \ntheir capacity exceeds that of conventional\
    \ batteries. \nHowever, increasing the battery capacity increases the weight of\
    \ the drone, \nand research is currently underway to overcome this issue. \nFurthermore,\
    \ existing UAVs have complicated user interfaces that can only \nbe used by experts\
    \ to accomplish agricultural chores. People who are elderly \n434\nSiberian Journal\
    \ of Life Sciences and Agriculture, Vol. 14, №6, 2022\nor unfamiliar with UAV\
    \ technology will be able to control it more readily if \nthe user interface is\
    \ improved and made more human-centered with multimod-\nal feedback. \n4.6. Big\
    \ data and analytics in agriculture \nRapid advancements in IoT and CC technologies\
    \ have massively expanded \nthe amount of data available. Textual content (structured,\
    \ semi-structured, and un-\nstructured) and multimedia content (e.g., videos,\
    \ photos, and audio) are included \nin this data, also known as Big Data (BD)\
    \ [38]. Big data analytics is the practice \nof analyzing large amounts of data\
    \ to find hidden patterns, unknown relationships, \nmarket trends, client preferences,\
    \ and other important information (BDA). Big \ndata is usually classified into\
    \ five dimensions, each of which is represented by a V. \nThe concept of BD-driven\
    \ smart agriculture is very new, but its trend is \ngood because it has the potential\
    \ to make a dramatic change in the food supply \nchain and boost food security\
    \ through higher productivity. Agricultural big data \nis typically generated\
    \ from a variety of sources in agriculture, including ground \nsensors, aerial\
    \ vehicles, and ground vehicles equipped with special cameras and \nsensors; governmental\
    \ bodies in the form of reports and regulations; private \norganizations through\
    \ online web services; farmers in the form of knowledge \ngained through surveys;\
    \ and social media [39]. Depending on the agricultural \ndomain, the data can\
    \ be environmental (weather, climate, moisture level, etc.), \nbiological (plant\
    \ disease), or geospatial, and it comes in a variety of volumes, \nspeeds, and\
    \ formats [40]. The information is acquired and stored in a computer \ndatabase,\
    \ where it is analyzed using computer algorithms for seed characteris-\ntics,\
    \ weather patterns, soil attributes (such as pH or nutrient content), marketing\
    \ \nand trade management, consumer behaviour, and inventory management. In \n\
    agriculture, a range of strategies and tools are used to examine large data. The\
    \ \nmost often employed techniques include machine learning, cloud-based plat-\n\
    forms, and modelling and simulation. Machine learning technologies are used \n\
    to solve problems like prediction, clustering, and classification, while cloud\
    \ \nplatforms are utilized for large-scale data storage, preprocessing, and visual-\n\
    ization. There are still numerous potential areas where BDA can be used to \n\
    address various agricultural concerns that are not well covered in existing lit-\n\
    erature. For example, data-intensive greenhouses and indoor vertical farming \n\
    systems, quality control and health monitoring of crops in outdoor and indoor\
    \ \nfarms, genetic engineering, decision support platforms to help farmers design\
    \ \nindoor vertical farms, and scientific models for policymakers to help them\
    \ make \ndecisions about the physical ecosystem’s sustainability. Finally, the\
    \ majority of \nsystems are still in the prototype stage.\n435\nSiberian Journal\
    \ of Life Sciences and Agriculture, Том 14, №6, 2022\n4.7. Artificial intelligence\
    \ in agriculture \nArtificial intelligence (AI) is the study of theories and computer\
    \ systems that \ncan perform activities that need human intelligence, such as\
    \ sensory percep-\ntion and decision-making [41]. AI, particularly in the areas\
    \ of machine learning \n(ML) and deep learning (DL), is seen as one of the primary\
    \ forces driving the \ndigitization of agriculture when combined with CC, IoT,\
    \ and big data. These \ntechnologies have the potential to increase crop production,\
    \ harvesting, pro-\ncessing, and marketing in real time [42]. ML and DL algorithms\
    \ are being used \nto determine various parameters such as weed detection, yield\
    \ prediction, and \ndisease identification in a number of intelligent agricultural\
    \ systems. The fol-\nlowing two sub-sections go through these systems.\n4.7.1.\
    \ Machine learning in agriculture \nsupervised learning (linear regression, regression\
    \ trees, non-linear regres-\nsion, Bayesian linear regression, polynomial regression,\
    \ and support vector \nregression), and unsupervised learning (hierarchal clustering,\
    \ k-means cluster-\ning, neural networks (NN) anomaly detection, principal component\
    \ analysis, \nindependent component analysis, a-priori algorithm, and singular\
    \ value decom-\nposition (SVD)). Weed detection, Crop yield prediction, disease\
    \ and weather \nprediction (rainfall), soil properties estimation ( moisture content,\
    \ type, pH, \ntemperature, etc.), water management, fertilizer amount determination,\
    \ and \nlivestock production and management all use machine learning techniques\
    \ and \nalgorithms [2, 43]. According to the study of these publications, “crop\
    \ yield \nprediction” is an extensively researched area, with the most widely\
    \ utilized ML \napproaches to allow smart farming being linear regression [4],\
    \ neural network \n(NN), random forest (RF), and support vector machine (SVM)\
    \ [2]. \nThe presented use cases are still in the research phase, and no commercial\
    \ \nuse has been recorded as of yet. Furthermore, AI and machine learning ap-\n\
    proaches are found to be underutilized in greenhouse and indoor vertical farm-\n\
    ing systems, particularly hydroponics, aquaponics, and aeroponics. There are \n\
    only a handful publications that use machine learning techniques. To enable \n\
    digital farming, new methodologies such as federated learning and privacy \npreserving\
    \ methods are being developed in light of the digital transformation’s \ncyber-security\
    \ and data privacy problems [44]. These methods create machine \nlearning models\
    \ from local parameters rather than sharing private data samples, \nreducing security\
    \ concerns.\n4.7.2. Deep learning in agriculture \nDeep learning (DL) is an extension\
    \ of classical machine learning (ML) \nbecause extra “depth” (complexity) is added\
    \ to the model, it can accomplish \n436\nSiberian Journal of Life Sciences and\
    \ Agriculture, Vol. 14, №6, 2022\ndifficult tasks (predictions and classification)\
    \ extraordinarily well and quick-\nly. DL’s main benefit is feature learning,\
    \ which includes extracting features \n(high-level information) from big datasets\
    \ automatically [45]. Long short term \nmemory (LSTM) networks, convolutional\
    \ neural networks (CNNs), recurrent \nneural (RNN) networks, generative adversarial\
    \ networks (GANs), radial basis \nfunction networks (RBFNs), multilayer perceptron\
    \ (MLPs), feed-forward ar-\ntificial neural network (ANN), self-organizing maps\
    \ (SOMs), deep belief net-\nworks (DBNs), restricted Boltzmann machines (RBMs),\
    \ and autoencoders are \nexamples of deep learning algorithms Various sites [46]\
    \ provide a full overview \nof these methods, popular architectures, and training\
    \ systems. DL algorithms \nare commonly used in agriculture to solve problems\
    \ related to computer vision \napplications that aim to predict key parameters\
    \ such as crop yields, soil mois-\nture content, weather conditions, and crop\
    \ growth conditions; detect diseases, \npests, and weeds; and identify leaf or\
    \ plant species [47]. Computer vision is an \ninterdisciplinary field that has\
    \ exploded in popularity in recent years thanks to \nthe rise of CNNs. It provides\
    \ methods and techniques for accurately process-\ning digital images and allowing\
    \ computers to analyze and comprehend the vi-\nsual world [48]. CNNs, generally\
    \ is known as Convet and its derivatives, are \nthe most widely used deep learning\
    \ algorithms in agricultural applications. \nRegion-based CNNs (RCNN), Fast-RCNN,\
    \ Faster-RCNN, YOLO, and Mask-\nRCNN are some of the CNN variants, with the first\
    \ four being the most typi-\ncally used to address object detection issues. On\
    \ the other side, Mask-RCNN \nis utilized to overcome instance segmentation issues.\
    \ The reader can find a \nthorough explanation of these algorithms and their applications\
    \ in the exist-\ning bibliography [47]. Other DL approaches have been employed\
    \ in a few re-\nsearch. When it comes to datasets, the majority of deep learning\
    \ models are \ntrained on photographs, with only a few trained on sensor data\
    \ collected in the \nfield. This demonstrates that DL can be used on a wide range\
    \ of datasets. It’s \nalso worth noting that the majority of the research is focused\
    \ on outdoor farms, \nwith next-generation farms (environment-controlled) receiving\
    \ less attention. \nThough digital farming has the potential to be enabled by\
    \ DL, most systems \nare still in the prototype stage. Furthermore, the additional\
    \ obstacles created \nby cyber-security and privacy concerns necessitate the improvement\
    \ of current \ndeep learning and computer vision technologies.\n4.8. Agricultural\
    \ decision support systems \nA decision support system (DSS) is a smart system\
    \ that assists stakehold-\ners and potential users in making decisions in response\
    \ to specific needs and \nchallenges by offering operational responses based on\
    \ meaningful informa-\n437\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\ntion retrieved from raw data, documents, personal knowledge,\
    \ and/or models \n[49]. Data-driven, model-driven, communication-driven, document-driven,\
    \ and \nknowledge-driven DSS are all possibilities. The following source [50]\
    \ lists the \nkey features of these DSSs. The volume of farming data has exploded\
    \ as a re-\nsult of the advent of agriculture 4.0. Platforms like agricultural\
    \ decision support \nsystems (ADSS) are necessary to convert this heterogeneous\
    \ data into practical \nknowledge in order to make evidence-based and precise\
    \ judgments about farm \nmanagement and facility layout [51]. ADSSs have gotten\
    \ a lot of interest in the \nagriculture industry over the last few years. A variety\
    \ of agricultural concerns, \nsuch as farm management, water management, and environmental\
    \ management, \nhave been addressed by a number of ADSSs. Most ADSSs have been\
    \ found \nto ignore expert knowledge, which is extremely useful since it enables\
    \ for the \nconstruction of systems that are tailored to the demands of the users.\
    \ Complex \nGUIs, insufficient re-planning components, a lack of prediction and\
    \ forecasting \nabilities, and a lack of ability to adjust to unpredictable and\
    \ dynamic elements \nare some of the other identified faults with some of these\
    \ ADDSs. It’s also worth \nnoting that all of the ADSSs are for outside agriculture\
    \ systems and are still in \ndevelopment. In comparison, the use of ADSS in indoor\
    \ soilless agriculture is \ncurrently underutilized.\n4.9. Agricultural cyber-physical\
    \ systems \nA cyber-physical system (CPS) is an automated distributed system that\
    \ inte-\ngrates physical processes with communication networks and computing infra-\n\
    structures [52], and it is one of the key technologies of Industry 4.0. There\
    \ are \nthree standard CPS reference architecture models: 5C, RAMI 4.0, and IIRA,\
    \ \nwhich may be found in full at the following source [53]. Among these, the\
    \ 5C \nis a well-known and widely used reference model. CPS takes advantage of\
    \ a \nnumber of existing technologies, including agent systems, IoT, CC, augmented\
    \ \nreality, big data, and machine learning (ML) [54]. Scalability, flexibility,\
    \ au-\ntonomy, reliability, resilience, safety, and security are all improved\
    \ as a result \nof its adoption.\nOne of the most difficult domains that can benefit\
    \ from CPS technology is \nagriculture. Agricultural cyber-physical systems (ACPSs)\
    \ combine advanced \nelectronic technology with agricultural infrastructure to\
    \ create integrated farm \nmanagement systems that interact with the physical\
    \ environment to keep crops \ngrowing at their best [55]. ACPSs collect high-accuracy\
    \ data regarding climate, \nsoil, and crops and utilize it to manage watering,\
    \ humidity, and plant health, \namong other things. For the management of various\
    \ services, a range of ACPSs \nhave been created; however, most of these systems\
    \ are still in the prototype and \n438\nSiberian Journal of Life Sciences and\
    \ Agriculture, Vol. 14, №6, 2022\nconceptual stages. Furthermore, the majority\
    \ of studies are for outdoor farms, \nwith only a few publications published on\
    \ soil-based greenhouse systems. There \nhas been no research on indoor soilless\
    \ agricultural methods. Since of its pro-\nspective applications in a variety\
    \ of fields, ACPSs have sparked a lot of academ-\nic interest; nevertheless, deploying\
    \ CPS models in real-world applications is \nstill a difficulty because it requires\
    \ the right hardware and software [56]. When \ndesigning ACPSs, special emphasis\
    \ should be paid to autonomy, robustness, and \nresilience in order to deal with\
    \ the unpredictable nature of the environment and \nthe unknown characteristics\
    \ of agricultural facilities. ACPSs are influenced by \na variety of factors,\
    \ including humans, sensors, robots, crops, and data.. ACPSs \nmust be properly\
    \ and extensively developed to provide a seamless operation \nwhile avoiding conflicts,\
    \ errors, and disturbances.\n4.10. Digital twins in agriculture \nA digital twin\
    \ (DT) is a dynamic virtual replica of a real-life (physical) \nobject that mimics\
    \ its behaviours and states across multiple stages of the ob-\nject’s lifecycle\
    \ by combining real-world data, simulation, and machine learning \nmodels with\
    \ data analytics to enable understanding, learning, and reasoning \n[57]. The\
    \ physical and virtual entities, the physical and virtual environments, \nthe\
    \ metrology, and realization modules that perform the physical to virtual and\
    \ \nvirtual to physical connection or twinning, the twinning and twinning rate,\
    \ and \nthe physical and virtual processes are all required for a complete description\
    \ of \nthe DT concept for any physical system [58]. Because of advancements in\
    \ tech-\nnology such as the Internet of Things, big data, wireless sensor networks,\
    \ and \ncloud computing, the DT concept has gained traction. This is due to the\
    \ fact that \nthese technologies enable real-time monitoring of physical twins\
    \ at high spatial \nresolutions using both small devices and distant sensing,\
    \ which generate ev-\ner-increasing data streams [21]. In comparison to other\
    \ fields, the notion of DT \nin agricultural applications is relatively new, with\
    \ the first references appearing \nin 2017; as a result, its added value has not\
    \ yet been thoroughly studied [21]. \nBecause of its reliance on natural circumstances\
    \ (temperature, soil, humidity), \nas well as the presence of living and non-living\
    \ physical twins (plants and an-\nimals), framing is a very complex and dynamic\
    \ realm (indoor farm buildings, \ngrow beds, outdoor agricultural fields, agricultural\
    \ machinery). \nNon-living physical twins interact directly or indirectly with\
    \ plants and \nanimals (living physical twins), posing more obstacles for DT in\
    \ agriculture, \nwhereas non-living physical twins are the focus of DT in other\
    \ domains such \nas manufacturing. The majority of research has been on open-air\
    \ agricultur-\nal systems. There is just one study that proposes DT for a soil-based\
    \ vertical \n439\nSiberian Journal of Life Sciences and Agriculture, Том 14, №6,\
    \ 2022\nfarming system and one study that implements DT for a soilless vertical\
    \ farm-\ning system (aquaponics). This could be due to the difficulty of designing\
    \ and \nmanaging modern farming systems. Furthermore, the majority of DTs are\
    \ still \nin the research phase, with no commercial deployment planned. Cost savings,\
    \ \ndisaster prevention, clearer decision making, and efficient management oper-\n\
    ations are all reported benefits of DT applications in agriculture, which can\
    \ be \napplied to a variety of agricultural subfields such as plant and animal\
    \ breeding, \naquaponics, vertical farming, cropping systems, and livestock farming.\
    \ While \nDT technology offers a lot of promise, achieving synchronization between\
    \ the \nreal and digital worlds is difficult. Due to the quirks of living physical\
    \ twins, \nthe intricacy of this procedure is magnified in agricultural settings.\
    \ As a result, \nagricultural DT should begin with micro-farms, which can then\
    \ be gradually up-\ngraded to a more intelligent and autonomous form by adding\
    \ more components.\n4.11. Roadblocks in digitization of agriculture industry \n\
    This section outlines a series of interconnected hurdles to a wider adoption of\
    \ \ndigital technologies in agriculture. Following a review of the literature,\
    \ 21 barri-\ners were found, which were divided into technical and socioeconomic\
    \ categories.\n4.12. Technical roadblocks \n•Interoperability: Data is regarded\
    \ as a critical component in the success of \nsmart systems. Agricultural data\
    \ is typically gathered from a variety of sources, \nincluding thousands of individual\
    \ farmlands, animal industries, and business ap-\nplications. Data can be in a\
    \ variety of formats, making data integration difficult. \nAs a result, after\
    \ systematic data collection, storage, processing, and knowledge \nmining, data\
    \ interoperability is critical to increasing the value of this widely \ndistributed\
    \ data [59]. Interconnected and interoperable devices are also required \nfor\
    \ successful communication between heterogeneous devices. The system’s in-\nteroperability\
    \ can be improved through cross-technology communication [60].\n•Standardization:\
    \ Standardization of devices is required to fully use digital \ntechnologies for\
    \ smart farming applications. Differences in output can occur \nas a result of\
    \ misinterpretation and changes over time. Device, application, and \nsystem interoperability\
    \ concerns can also be overcome by standardization [25].\n•Data quality: Data\
    \ quality, as well as data security, storage, and openness, \nare essential for\
    \ producing meaningful outcomes. Another impediment to the \nadoption of smart\
    \ farming technologies is the lack of decentralized data man-\nagement systems\
    \ [9]. Multiple actors’ willingness to exchange farm data is be-\ning harmed as\
    \ a result of this problem.\n•Hardware implementation: It is incredibly difficult\
    \ to establish a smart agri-\ncultural setup in large-scale open areas. This is\
    \ due to the fact that all hardware, \n440\nSiberian Journal of Life Sciences\
    \ and Agriculture, Vol. 14, №6, 2022\nincluding IoT devices, wireless sensor networks,\
    \ sensor nodes, machinery, and \nequipment, is directly exposed to harsh environmental\
    \ conditions such as heavy \nrainfall, extreme temperatures, extreme humidity,\
    \ high wind speeds, and a vari-\nety of other dangers that can destroy electronic\
    \ circuits or disrupt their normal \nfunctionality [61]. A possible answer is\
    \ to construct a sturdy and lasting casing \nfor all of the expensive devices\
    \ that can withstand real-world conditions [62].\n•Adequate power sources: Typically,\
    \ wireless gadgets used on farms func-\ntion for an extended period of time and\
    \ have a limited battery life. \nBecause replacing a battery in the event of a\
    \ failure is difficult, especially in \nopen-air farms where devices are strategically\
    \ located with limited access [61], a \nproper energy-saving system is required.\
    \ Low-power sensors and proper commu-\nnication management are two viable strategies\
    \ for reducing energy consumption \n[24, 63]. Other intriguing technologies to\
    \ eliminate the need for battery renewal by \nrecharging batteries using electromagnetic\
    \ waves include wireless power transfer \nand self-supporting wireless systems.\
    \ In most agricultural applications, however, \nlong-distance wireless charging\
    \ is required [9]. Another potential alternative is to \ncapture ambient energy\
    \ from rivers, fluid flow, vehicle movement, and the ground \nsurface using sensor\
    \ nodes; however the converted electrical energy is current-\nly restricted, necessitating\
    \ the need to enhance power conversion efficiency [64].\n•Reliability: The dependability\
    \ of devices, as well as the software applica-\ntions that run on them, is critical.\
    \ This is due to the fact that IoT devices must \ncollect and transmit data from\
    \ which judgments are made utilizing a variety of \nsoftware packages. Unreliable\
    \ sensing, processing, and transmission can result \nin erroneous monitoring data\
    \ reports, significant delays, and even data loss, all \nof which can have a negative\
    \ impact on agricultural system performance [25].\n •Adaptability: Agriculture\
    \ is a complicated, dynamic, and continuously \nchanging environment. As a result,\
    \ when building a system, it is critical for de-\nvices and applications to react\
    \ proactively with other entities in the face of un-\nknown and dynamic elements\
    \ in order to provide the required performance [65].\n•Robust wireless architectures:\
    \ Low-cost, wide-area coverage, enough net-\nworking flexibility, and high scalability\
    \ are all advantages of wireless networks \nand communication technologies. However,\
    \ in a dynamic agriculture environ-\nment, such as temperature swings, the movement\
    \ of live objects, and the ex-\nistence of impediments, dependable wireless connection\
    \ is a major difficulty. \nFor example, multipath propagation effects cause signal\
    \ strength oscillations, \nresulting in unstable connectivity and insufficient\
    \ data transmission [66]. These \nelements have an impact on the agricultural\
    \ system’s performance. As a result, \nrobust and fault-tolerant wireless architectures\
    \ with proper sensor node place-\n441\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\nment, antenna height, network topology, and communication\
    \ protocols are re-\nquired, as well as low-maintenance wireless systems [11].\n\
    •Interference: Because of the extensive deployment of IoT devices and wire-\n\
    less sensor networks, another difficulty is wireless interference and quality\
    \ of \nservice degradation. Effective channel scheduling between heterogeneous\
    \ sens-\ning devices, cognitive radio-assisted WSNs, and upcoming networking prim-\n\
    itives like concurrent transmission [67] can all help to solve these problems.\
    \ \nBecause agriculture equipment are dispersed in indoor greenhouses, outdoor\
    \ \nfarmlands, underground locations, and even aquatic areas, cross-media com-\n\
    munication between underground, underwater, and air is also necessary for full\
    \ \nintegration of smart technologies [68].\n•Security and privacy: Because smart\
    \ agricultural systems are dispersed, \nthey are vulnerable to cyber-attacks such\
    \ as eavesdropping, data integrity, de-\nnial-of-service assaults, and other sorts\
    \ of disruptions that could jeopardize the \nsystem’s privacy, integrity, and\
    \ availability [69]. With various privacy-preserv-\ning techniques and federated\
    \ learning approaches, cyber-security is a funda-\nmental concern that needs to\
    \ be addressed in the context of smart farming [44].\n•Compatibility: in order\
    \ to meet the fragmentation and scalability standards, \nthe models or software\
    \ applications developed must be adaptable and able to \nrun on any equipment\
    \ in the agricultural system [13]. \n•Resource optimization: To boost farm profitability,\
    \ farmers need a resource op-\ntimization procedure to determine the ideal number\
    \ of IoT devices and gateways, \ncloud storage size, and volume of transmitted\
    \ data. Resource optimization is diffi-\ncult since farms vary in size and require\
    \ different types of sensors to assess different \nvariables [70]. Second, most\
    \ farm management systems do not support run-time \nchanges to match the demands\
    \ of individual farmers. To estimate adequate resource \nallocation, complicated\
    \ mathematical models and algorithms are necessary [32].\n•Scalability: Due to\
    \ technological improvements, the number of gadgets, \ngear, and sensors put on\
    \ farms is continually expanding. \nGateways, network applications, and back-end\
    \ databases should all be de-\npendable and scalable in order to serve these entities\
    \ [71].\n•Human-centered user interfaces: Existing agricultural software and gadgets\
    \ \nhave complicated user interfaces, which are limiting smart farming methods.\
    \ \nThe majority of graphical user interfaces are constructed in such a way that\
    \ \nonly specialists can use them to accomplish agricultural activities. By making\
    \ \nthe user interface more human-centered and providing multimodal feedback,\
    \ a \nbigger group of individuals will be able to use it to complete various agricul-\n\
    tural tasks [35].\n442\nSiberian Journal of Life Sciences and Agriculture, Vol.\
    \ 14, №6, 2022\n4.13. Socio-economic roadblocks \n•Gap between farmers and researchers:\
    \ Farmers’ engagement is critical to \nthe success of the agriculture industry’s\
    \ digitization. Agricultural specialists are \nfrequently unaware of the concerns\
    \ that farmers encounter during the agri-food \nproduction process, which smart\
    \ technologies could solve [16]. Furthermore, it \nis critical to completely comprehend\
    \ the nature of problems in order to create \nan appropriate smart solution. \n\
    As a result, bridging the gap between farmers, agricultural professionals, \n\
    and AI researchers is critical.\n•Expenses connected with smart systems: the costs\
    \ associated with adopt-\ning smart technology and systems are a major impediment\
    \ to the agriculture \nsector’s digitization. These expenses typically include\
    \ deployment, operation, \nand maintenance. Smart system deployment costs are\
    \ typically significant since \nthey include: I hardware installation, such as\
    \ autonomous robots and drones, \nWSNs, gateways, and base station infrastructure,\
    \ and ii) paying trained labour \nto do particular agricultural tasks [72]. Similarly,\
    \ subscriptions to centralized \nnetworks and software packages are necessary\
    \ to support data processing, con-\ntrol of IoT devices and equipment, and knowledge\
    \ exchange, which eventually \nraises operating expenses [73]. Even if service\
    \ providers occasionally provide \nfree subscription packages with limited capabilities,\
    \ storage capacity is limited. \nPeriodic maintenance is essential to ensure the\
    \ proper operation of the smart \nsystem, which adds to the total costs.\nEnvironmental,\
    \ ethical, and societal costs may also be connected with the \nadoption of smart\
    \ devices. Initiatives focusing on cooperative farming are need-\ned to overcome\
    \ cost-related roadblocks by providing: I support services for \nbetter cost management\
    \ and needed investments, and ii) hardware solutions to \ntransform conventional\
    \ equipment into smart farm-ready machinery to reduce \nhigh initial costs [73].\n\
    •Digital division: a lack of awareness of digital technology and their appli-\n\
    cations is another problem limiting the digitalization of the agriculture sector.\
    \ \nThe majority of farmers have no understanding what digital technologies are,\
    \ \nhow to install and utilize them, or which technology is appropriate for their\
    \ farm \nand matches their needs [14]. As a result, farmers must be educated on\
    \ current \nfarming technologies and processes. \nFurthermore, various tactics\
    \ are required to develop tools that use natural \nlanguage and are easily understood\
    \ by farmers with low levels of education [74]. \n•Return on investment: In agriculture,\
    \ like in other industries, the profit \nmargin is critical. When it comes to\
    \ implementing modern technologies, farm-\n443\nSiberian Journal of Life Sciences\
    \ and Agriculture, Том 14, №6, 2022\ners are concerned about the time it will\
    \ take to recoup their investment and the \ndifficulty in assessing the benefits\
    \ [12].\n•Building faith in the effectiveness of smart technology in agriculture\
    \ is \ndifficult, unlike in other disciplines, because many decisions influence\
    \ systems \nthat involve both living and non-living elements, and the results\
    \ can be difficult \nto reverse [16]. In addition, the lack of verification of\
    \ the influence of digital \ntools on farm productivity exacerbates the current\
    \ difficulties.\n•Legal frameworks: different regions and nations have distinct\
    \ legal frame-\nworks that influence the deployment of digital technologies in\
    \ agriculture, par-\nticularly in monitoring and agri-food supply [31]. Similarly,\
    \ laws governing \nresource allocation (spectrum for wireless devices), data privacy,\
    \ and security \ndiffer from country to country [31].\n•Connectivity infrastructure:\
    \ In most developing nations, connectivity in-\nfrastructure is poor, limiting\
    \ access to advanced digital technologies that could \nhelp turn data from disparate\
    \ sources into useful and actionable insights [10].\n4.14. Discussion \nThe goal\
    \ of this study was to describe the new digital technologies that are \nbeing\
    \ used in the agricultural industry in order to predict the future trajectories\
    \ \nof agriculture 4.0. Big data and analytics, wireless sensor networks, cyber-phys-\n\
    ical systems, and digital twins are among the technologies that have yet to be\
    \ \nfully explored in agriculture. This disparity could be due to the fact that\
    \ install-\ning advanced technologies with more complex processes can be costly,\
    \ at least \nin the early stages of their acceptance. The agricultural industry’s\
    \ development \nof these technologies is expected to speed up in the next years.\
    \ The findings of \nSLR also reveal that IoT is widely used in farms. This is\
    \ owing to the IoT’s di-\nverse capabilities, which include monitoring, tracking,\
    \ and tracing, agricultural \nmachinery, and precision agriculture [21]. One of\
    \ the key research aims within \nthe farm 4.0 techniques can be regarded to be\
    \ IoT. Nonetheless, when building \nan intelligent agricultural system, only a\
    \ few researches have examined data \nsecurity and dependability, scalability,\
    \ and interoperability. The outcomes of \nthe study also revealed that the majority\
    \ of use cases are still in the prototype \nstage. The reason for this could be\
    \ that most agricultural activities involve live \nsubjects, such as animals and\
    \ plants, or perishable products, and establish-\ning systems for living subjects\
    \ is more difficult than developing systems for \nnon-living human-made systems.\
    \ Another explanation could be that, due to the \ntrans-disciplinary character\
    \ of agriculture, it is a late adopter of technology. As a \nresult, in order\
    \ to construct intelligent systems, the agricultural community must \nbecome conversant\
    \ with all digital technologies. Finally, differences in plant/\n444\nSiberian\
    \ Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\ncrop species and\
    \ growth conditions complicate agricultural system digitaliza-\ntion [55]. In\
    \ contrast to indoor farms, the majority of the technologies created \nby SLR\
    \ are for open-air soil-based farms (soilless and soil-based). This is owing \n\
    to the complicated design and maintenance of indoor farms, particularly soilless\
    \ \nfarms, where the parameters and elements to be maintained are numerous (pH,\
    \ \nair temperature, humidity, etc.) [5]. However, by incorporating digital technol-\n\
    ogy and data-driven computer applications into indoor farms, a more reliable \n\
    control of the process can be attained. Furthermore, SLR reveals that insufficient\
    \ \nresearch is undertaken in three of the nine service areas described in section\
    \ 3 \n(soil management, fruit detection and counting, and crop quality management).\
    \ \nThis supports the notion that significant research and development is required\
    \ \nin some areas to ensure the successful digitization of the agriculture business\
    \ \nin both developed and developing countries. The agriculture ecosystem’s com-\n\
    plexity creates a set of interrelated hurdles that prevent full integration of\
    \ digital \ntechnology for agriculture 4.0 implementation. As a result, identifying\
    \ possible \nbottlenecks is critical in order to devise strategic strategies to\
    \ overcome them. \nThis research aims to figure out what these stumbling barriers\
    \ are. Following \nthe investigation, 21 barriers were found and characterized\
    \ on both a technical \nand socioeconomic level. These impediments are addressed\
    \ in section 5, which \noutlines what needs to be done on a bigger scale to digitize\
    \ the agricultural \neconomy. However, it is still unknown how much removing or\
    \ mitigating these \nhurdles aids in the successful integration of digital technologies.\
    \ \n4.16. Added value of agricultural digitization \nSeveral benefits that can\
    \ inspire framers and other actors to assist agriculture \nindustry digitization\
    \ have been discovered and outlined based on analysis. The \nbenefits described\
    \ here have the potential to increase farm productivity and im-\nprove product\
    \ quality, but they should not be viewed as a cure for the problems \nthat come\
    \ with smart agriculture [73]. \n•Improved agility: Farm operations can now be\
    \ more agile thanks to digital \ntechnologies. Farmers and agricultural professionals\
    \ can quickly respond to \nany anticipated changes in environmental and water\
    \ conditions using real-time \nsurveillance and forecasting technologies to save\
    \ crops [72].\n•Green process: By lowering the use of in-field fuel, nitrogen\
    \ fertilizers, \npesticides, and herbicides, digital technologies make farming\
    \ more ecologically \nfriendly and climate-resilient [75].\n•Resource efficiency:\
    \ By increasing the quantity and quality of agricultural \noutput while reducing\
    \ the use of water, energy, fertilizers, and pesticides, digital \nplatforms can\
    \ improve resource efficiency [3]. \n445\nSiberian Journal of Life Sciences and\
    \ Agriculture, Том 14, №6, 2022\n•Time and cost savings: By automating various\
    \ tasks such as harvesting, sow-\ning, or irrigation, managing the application\
    \ of fertilizers or pesticides, and sched-\nuling irrigation, digital technologies\
    \ provide significant time and cost savings [76].\n•Asset management: digital\
    \ technologies enable real-time observation of \nfarm holdings and equipment,\
    \ allowing for theft prevention, component re-\nplacement, and routine maintenance\
    \ [10].\n•Product safety: By eliminating fraud [17, 18] linked to adulteration,\
    \ coun-\nterfeiting, and artificial enhancement, digital technologies maintain\
    \ appropriate \nfarm output and ensure a safe and nutritious supply of agri-food\
    \ products [69].\n4.17. Considerations and future prospects \nThe agricultural\
    \ industry would see major benefits as a result of the planned \nmeasures. However,\
    \ the impediments identified in section 5 must be solved first \nin order to make\
    \ things sustainable for small and medium-scale growers. Some \nof the above hurdles\
    \ can be mitigated by awareness campaigns emphasizing the \nimportance of smart\
    \ agriculture at every level of the agricultural value chain and \nencouraging\
    \ novel techniques (such as gamification) to encourage stakeholders \nto take\
    \ an active role in the digital transformation [9]. Initiatives at the federal\
    \ \nlevel, grants and endowments, public-private collaborations, data transparency,\
    \ \nand regional research efforts can all help overcome potential hurdles. Finally,\
    \ \nwhen constructing a smart agriculture system, a roadmap can be used, starting\
    \ \nwith a basic architecture with few components and simpler functionality and\
    \ \ngradually adding components and functionality to develop a sophisticated sys-\n\
    tem with full digitization potential [21]. These issues can pave the road for\
    \ ag-\nriculture 4.0’s successful adoption. The use of explainable artificial\
    \ intelligence \nto monitor crop development, estimate crop biomass, evaluate\
    \ crop health, and \ncontrol pests and diseases is one of the future prospects\
    \ of digital technologies \nin smart agriculture. Explainable AI eliminates the\
    \ old black-box approach of \nmachine learning and allows for a better understanding\
    \ of the reasoning behind \nany given decision [15]. The use of common semantics\
    \ and ontologies to de-\nscribe big data, as well as the adoption of open standards,\
    \ has the potential to \naccelerate research and development in the field of smart\
    \ farming. Similarly, \n5G technology must be thoroughly investigated in order\
    \ to enable improved \nconnectivity and live streaming of crop data [6]. By executing\
    \ precise crop in-\nspections remotely, 5G technology will reduce internet costs\
    \ and enhance the \nentire user experience of farm management and food safety\
    \ [77]. It would also \nhelp to close the gap between stakeholders by keeping\
    \ them informed about \ncrop availability. Finally, blockchain can be used in\
    \ conjunction with IoT and \nother technologies to address data privacy and security\
    \ concerns [78]. \n446\nSiberian Journal of Life Sciences and Agriculture, Vol.\
    \ 14, №6, 2022\n4.18. Transition to Agriculture 5.0 \nThe agriculture sector has\
    \ traditionally had a breakthrough during industri-\nal revolutions. Agriculture\
    \ 4.0 offers significant potential to offset rising food \ndemands and prepare\
    \ for the future by reinforcing agricultural systems with \nWSN, IoT, AI, and\
    \ other technologies, as formally mentioned in preceding \nsections. While agricultural\
    \ 4.0 is still being implemented, agriculture 5.0 is \nalready being discussed.\
    \ \nAgriculture 5.0 builds on agriculture 4.0 by incorporating industry 5.0 prin-\n\
    ciples to provide healthy, affordable food while also ensuring that the environ-\n\
    ments on which life depends are not degraded [79]. Industry 4.0 focuses less \n\
    on the original principles of social fairness and sustainability and more on dig-\n\
    italization and AI-driven technologies for increasing efficiency and flexibility,\
    \ \nthe European Commission formally called for the Fifth Industrial Revolution\
    \ \n(industry 5.0) in 2021 [80]. Industry 5.0 adds to and expands on the industry\
    \ 4.0 \nconcepts by emphasizing human-centricity, sustainability, and resiliency\
    \ [81]. \nIt entails improving human-machine collaboration, decreasing environmental\
    \ \neffect through the circular economy, and designing systems with a high degree\
    \ \nof robustness to reach an ideal balance of efficiency and productivity. Among\
    \ \nthe enabling technologies of industry are cobots (collaborative robots), smart\
    \ \nmaterials with embedded bio-inspired sensors, digital twins, AI, energy efficient\
    \ \nand secure data management, renewable energy sources, and others 5.0[80].\n\
    Farm production efficiency and crop quality can be improved in agriculture \n\
    5.0 settings by delegating repetitive and boring activities to machines and those\
    \ \nthat need critical thinking to humans. For this reason, agricultural cyber\
    \ physical \ncognitive systems (CPCS) that observe/study the environment and conduct\
    \ ap-\npropriate actions, comparable to those established for the manufacturing\
    \ sector, \nshould be developed. This might include collaborative farm robots\
    \ that work in \nthe fields to aid crop growers with time-consuming operations\
    \ like seed sowing \nand harvesting. Similarly, digital twins in agriculture 5.0\
    \ can add substantial value \nby recognizing technical difficulties in agricultural\
    \ systems and resolving them \nmore quickly, detecting crop illnesses, and producing\
    \ more accurate crop output \nestimates. This demonstrates that agriculture 5.0\
    \ has the potential to pave the way \nfor climate-smart, sustainable, and resilient\
    \ agriculture, but it is still in its infancy. \n5. Conclusions \nConcerns about\
    \ global food security have heightened the demand for \nnext-generation industrial\
    \ farms and agricultural intensive production systems. \nDigital technologies,\
    \ such as those given by the Industry 4.0 programme, are at \n447\nSiberian Journal\
    \ of Life Sciences and Agriculture, Том 14, №6, 2022\nthe vanguard of this modern\
    \ agricultural period, providing a wide range of in-\nnovative solutions. Disruptive\
    \ technologies are being integrated into traditional \nagriculture systems by\
    \ scientists and researchers in order to boost crop yields, \ncut costs, reduce\
    \ waste, and sustain process inputs. This report includes an SLR \nthat discusses\
    \ the current state of various technologies in the agriculture sector. \nSeveral\
    \ findings are drawn, including the fact that big data and analytics inte-\ngration,\
    \ wireless sensor networks, cyber-physical systems, and digital twins in \nagriculture\
    \ are still in their infancy, with the majority of use cases still in the \nprototype\
    \ stage. Similarly, 21 technological and socioeconomic impediments \nare found\
    \ and categorized. These impediments must be identified and addressed \nif the\
    \ agriculture industry is to be digitalized. The report also identifies and \n\
    presents the additional value of digital technology in the agriculture industry.\
    \ \nOverall, this research contributes to the ongoing research on agricultural\
    \ 4.0. \nThe review’s principal restriction is twofold: first, only three online\
    \ reposito-\nries (Scopus, IEEE, and Science Direct) are considered for literature\
    \ searches, \nand second, new keywords and synonyms may return more papers. The\
    \ main \nconclusions are highly unlikely to alter in either scenario. Additional\
    \ research \ndatabases and areas can be considered for future study in order to\
    \ provide a \ncomplete overview of the agriculture industry in terms of digitization.\
    \ In addi-\ntion, papers focusing on agriculture 5.0 in general will be featured.\n\
    References\n1. F Schierhorn, M. Elferink, Global Demand for Food Is Rising. Can\
    \ We Meet \nIt? Harv Bus Rev, 2016, 7 (2017). https://hbr.org/2016/04/global-demand-for-\n\
    food-is-rising-can-we-meet-it\n2. Singh, G. Machine Learning Models in Stock Market\
    \ Prediction. International \nJournal of Innovative Technology and Exploring Engineering,\
    \ 2022, vol. 11, \nno. 3, pp. 18-28. https://doi.org/10.35940/ijitee.C9733.0111322\n\
    3. WK Mok, YX Tan, WN. Chen, Technology innovations for food security in \nSingapore:\
    \ A case study of future food systems for an increasingly natural re-\nsource-scarce\
    \ world, Trends Food Sci Technol, 2020, vol. 102, pp. 155–168, \nhttps://doi.org/10.1016/j.tifs.2020.06.013\n\
    4. Nagar, P., & Issar, G. S. Detection of outliers in stock market using regression\
    \ \nanalysis. International Journal of Emerging Technologies in Computational\
    \ and \nApplied Science, 2013. https://doi.org/10.5281/zenodo.6047417\n5. R Abbasi,\
    \ P Martinez, R. Ahmad, An ontology model to represent aquapon-\nics 4.0 system’s\
    \ knowledge, Inf Process Agric, 2021. https://doi.org/10.1016/J.\nINPA.2021.12.001\n\
    448\nSiberian Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\n6.\
    \ R Abbasi, P Martinez, R. Ahmad, An ontology model to support the automat-\n\
    ed design of aquaponic grow beds, Procedia CIRP, 2021, vol. 100, pp. 55–60, \n\
    https://doi.org/10.1016/j.procir.2021.05.009\n7. G Aceto, V Persico, A. Pescapé,\
    \ A Survey on Information and Communication \nTech- nologies for Industry 4.0:\
    \ State-of-the-Art, Taxonomies, Perspectives, \nand Challenges, IEEE Commun Surv\
    \ Tutorials, 2019. https://doi.org/10.1109/\nCOMST.2019.2938259\n8. B. Ozdogan,\
    \ A. Gacar, H. Aktas. Digital agriculture practices in the context of \nagriculture\
    \ 4.0. Journal of Economics, Finance and Accounting (JEFA), 2017, \nvol. 4, iss.\
    \ 2, pp. 184-191. https://doi.org/10.17261/pressacademia.2017.448\n9. Y Liu, X\
    \ Ma, L Shu, GP Hancke, AM. Abu-Mahfouz, From Industry 4.0 to Ag-\nriculture 4.0:\
    \ Current Status, Enabling Technologies, and Research Challenges, \nIEEE Trans\
    \ Ind Informatics, 2021, vol. 17, no. 6, pp. 4322-4334. https://doi.\norg/10.1109/TII.2020.3003910\n\
    10. F da Silveira, FH Lermen, FG. Amaral, An overview of agriculture 4.0 devel-\n\
    opment: Systematic review of descriptions, technologies, barriers, advantag-\n\
    es, and disadvantages, Comput Electron Agric 189 (2021) 106405, https://doi.\n\
    org/10.1016/J.COMPAG.2021.106405\n11. G Idoje, T Dagiuklas, M. Iqbal, Survey for\
    \ smart farming technologies: Chal-\nlenges and issues, Comput Electr Eng, 2021,\
    \ vol. 92, 107104. https://doi.\norg/10.1016/J.COMPELECENG.2021.107104\n12. J\
    \ Miranda, P Ponce, A Molina, P. Wright, Sensing, smart and sustain- able tech-\n\
    nologies for Agri-Food 4.0, Comput Ind, 2019, vol. 108, pp. 21–36. https://doi.\n\
    org/10.1016/J.COMPIND.2019.02.002 \n13. M Lezoche, H Panetto, J Kacprzyk, JE Hernandez,\
    \ Alemany Díaz MME. \nAgri-food 4.0: A survey of the supply chains and technologies\
    \ for the future \nagriculture, Comput Ind, 2020, vol. 117, 103187. https://doi.org/10.1016/J.\n\
    COMPIND.2020.103187\n14. Bhakta I, Phadikar S, Majumder K. State-of-the-art technologies\
    \ in precision \nagriculture: a systematic review. Journal of the Science of Food\
    \ and Agriculture, \n2019, vol. 99, no. 11. pp. 4878-4888. https://doi.org/10.1002/jsfa.9693\n\
    15. SO Araújo, RS Peres, J Barata, F Lidon, JC. Ramalho, Characterising the \n\
    Agriculture 4.0 Landscape — Emerging Trends, Challenges and Opportu-\nnities,\
    \ Agron, 2021, vol. 11, no. 4, 667. https://doi.org/10.3390/AGRONO-\nMY11040667\n\
    16. M Bacco, P Barsocchi, E Ferro, A Gotta, M. Ruggeri, The Digitisation of Agri-\n\
    culture: a Survey of Research Activities on Smart Farming, Array, 2019, 3–4, \n\
    100009. https://doi.org/10.1016/j.array.2019.100009\n449\nSiberian Journal of\
    \ Life Sciences and Agriculture, Том 14, №6, 2022\n17. Singh, G., & Nager, P.\
    \ A case Study on Nutek India Limited Regarding Deep \nFalling in Share Price.\
    \ Researchers World - Journal of Arts, Science & Com-\nmerce, 2012, vol. 3(2),\
    \ 3.\n18. Nager, P., & Singh, G. An Analysis of Outliers For Fraud Detection in\
    \ Indian \nStock Market. Researchers World - Journal of Arts, Science & Commerce,\
    \ 2012, \nvol. 3(4), 4.\n19. MJ Page, JE McKenzie, PM Bossuyt, I Boutron, TC Hoffmann,\
    \ CD Mulrow, et \nal., The PRISMA 2020 statement: An updated guideline for reporting\
    \ systematic \nreviews, BMJ, 2021, 372. https://doi.org/10.1136/BMJ.N71\n20. Ahmed\
    \ MA, Ahsan I, Abbas M. Systematic Literature Review: Ingenious \nSoftware Project\
    \ Management while narrowing the impact aspect. RACS ‘16: \nProceedings of the\
    \ International Conference on Research in Adaptive and Con-\nvergent Systems,\
    \ 2016, pp. 165–168. https://doi.org/10.1145/2987386.2987422\n21. C Pylianidis,\
    \ S Osinga, IN. Athanasiadis, Introducing digital twins to agricul-\nture, Comput\
    \ Electron Agric 184 (2021) 105942, https://doi.org/10.1016/J.\nCOMPAG.2020.105942\
    \ \n22. Shaikh ZA Aqeel-ur-Rehman, NA Shaikh, N Islam, An integrated framework\
    \ \nto de- velop context aware sensor grid for agriculture, Aust J Basic Appl\
    \ Sci, \n2010. \n23. W Shi, J Cao, Q Zhang, Y Li, L. Xu, Edge Computing: Vision\
    \ and Chal-\nlenges, IEEE Internet Things J 3, 2016, 637–646, https://doi.org/10.1109/\n\
    JIOT.2016.2579198\n24. A Tzounis, N Katsoulas, T Bartzanas, C. Kittas, Internet\
    \ of Things in agricul- \nture, recent advances and future challenges, Biosyst\
    \ Eng, 164, 2017, 31–48, \nhttps://doi.org/10.1016/J.BIOSYSTEMSENG.2017.09.007\n\
    25. VP Kour, S. Arora, Recent Developments of the Internet of Things in Agri-\
    \ cul-\nture: A Survey, IEEE Access 8, 2020, 129924–129957, https://doi.org/10.1109/\n\
    AC- CESS.2020.3009298\n26. MU Aftab, O Ashraf, M Irfan, M Majid, A Nisar, MA.\
    \ Habib, A Review Study \nof Wireless Sensor Networks and Its Security, Commun\
    \ Netw, 7, 2015, 172–179, \nhttps://doi.org/10.4236/cn.2015.74016\n27. X Yu, P\
    \ Wu, W Han, Z. Zhang, A survey on wireless sensor network infra-\nstructure for\
    \ agriculture, Comput Stand Interfaces, 1, 2013, 59–64, https://doi.\norg/10.1016/J.CSI.2012.05.001\n\
    28. Mell PM, Grance T. The NIST definition of cloud computing, 2011. https://doi.\n\
    org/10.6028/NIST.SP.800-145\n29. Alwada’n T. Cloud computing and multi-agent system:\
    \ monitoring and services. \n2018. \n450\nSiberian Journal of Life Sciences and\
    \ Agriculture, Vol. 14, №6, 2022\n30. X Shi, X An, Q Zhao, H Liu, L Xia, X Sun,\
    \ et al., State-of-the-art inter- net of \nthings in protected agriculture, Sensors\
    \ (Switzerland), 19, 2019, 1833, https://\ndoi.org/10.3390/s19081833\n31. J Wang,\
    \ H Yue, Z. Zhou, An improved traceability system for food quality assur-\nance\
    \ and evaluation based on fuzzy classification and neural network, Food Con-\n\
    trol, 79, 2017, 363–370, https://doi.org/10.1016/J.FOODCONT.2017.04.013\n32. S\
    \ Fountas, G Carli, CG Sørensen, Z Tsiropoulos, C Cavalaris, A Vatsanidou, et\
    \ \nal., Farm management information systems: Current situation and future per-\n\
    spectives, Comput Electron Agric, 115, 2015, 40–50, https://doi.org/10.1016/J.\n\
    COMPAG.2015.05.011\n33. A Bechar, C. Vigneault, Agricultural robots for field\
    \ operations: Concepts and \ncomponents, Biosyst Eng, 149, 2016, 94–111, https://doi.org/10.1016/J.BIO-\n\
    SYSTEMSENG.2016.06.014\n34. Gonzalez-De-Santos P, Fernández R, Sepúlveda D, Navas\
    \ E, Armada M. Un- \nmanned Ground Vehicles for Smart Farms. Agron - Clim Chang\
    \ Food Secur, \n2020. https://doi.org/10.5772/INTECHOPEN.90683\n35. J del Cerro,\
    \ CC Ulloa, A Barrientos, L. Rivas J de, Unmanned Aerial Vehicles in \nAgri- culture:\
    \ A Survey, Agron, 11, 2021, 203, https://doi.org/10.3390/AGRON-\nOMY11020203\n\
    36. Patel PN, Patel M, Faldu RM, Dave YR. Quadcopter for Agricultural Surveil-\n\
    lance, 2013.\n37. Sylvester G, Food and Agriculture Organization of the United\
    \ Nations., International \nTelecommunication Union. E-agriculture in action:\
    \ drones for agriculture n.d.:112. \n38. U Sivarajah, MM Kamal, Z Irani, V. Weerakkody,\
    \ Critical analysis of Big Data \nchallenges and analytical methods, J Bus Res,\
    \ 70, 2017, 263–286, https://doi.\norg/10.1016/J.JBUSRES.2016.08.001\n39. M Chi,\
    \ A Plaza, JA Benediktsson, Z Sun, J Shen, Y. Zhu, Big Data for Re- \nmote Sensing:\
    \ Challenges and Opportunities, Proc IEEE, 104, 2016, 2207–2219, \nhttps://doi.org/10.1109/JPROC.2016.2598228\
    \ \n40. K Tesfaye, K Sonder, J Caims, C Magorokosho, A Tarekegn, GT Kassie, et\
    \ al. \nTarget- ing drought-tolerant maize varieties in southern Africa: a geospatial\
    \ crop \nmodeling approach using big data, Int Food Agribus Manag Rev, 19, 2016.\
    \ \n41. R Sharma, SS Kamble, A Gunasekaran, V Kumar, A. Kumar, A system- atic\
    \ \nliterature review on machine learning applications for sustainable agri- culture\
    \ \nsupply chain performance, Comput Oper Res, 119, 2020, 104926, https://doi.\n\
    org/10.1016/J.COR.2020.104926\n42. T Talaviya, D Shah, N Patel, H Yagnik, M. Shah,\
    \ Implementation of artifi-\ncial intelli- gence in agriculture for optimisation\
    \ of irrigation and application \n451\nSiberian Journal of Life Sciences and Agriculture,\
    \ Том 14, №6, 2022\nof pesticides and herbicides, Artif Intell Agric, 4, 2020,\
    \ 58–73, https://doi.\norg/10.1016/J.AIIA.2020.04.002\n43. KG Liakos, P Busato,\
    \ D Moshou, S Pearson, D. Bochtis, Machine Learn- ing in \nAgriculture: A Review,\
    \ Sensors, 18, 2018, 2674, https://doi.org/10.3390/S18082674\n44. G Xu, H Li,\
    \ S Liu, K Yang, X. Lin, VerifyNet: Secure and Verifiable Federat-\ned Learning,\
    \ IEEE Trans Inf Forensics Secur, 15, 2020, 911–926, https://doi.\norg/10.1109/TIFS.2019.2929409\n\
    45. J. Schmidhuber, Deep Learning in Neural Networks: An Overview, Neural Net-\n\
    works, 61, 2014, 85–117, https://doi.org/10.1016/j.neunet.2014.09.003 \n46. Canziani\
    \ A, Paszke A, Culurciello E. An Analysis of Deep Neural Network \nModels for\
    \ Practical Applications, 2016. \n47. A Kamilaris, FX. Prenafeta-Boldu, Deep learning\
    \ in agriculture: A survey, \nComput Electron Agric, 147, 2018, 70–90, https://doi.org/10.1016/j.com-\n\
    pag.2018.02.016\n48. V Kakani, VH Nguyen, BP Kumar, H Kim, VR. Pasupuleti, A critical\
    \ review on \ncomputer vision and artificial intelligence in food industry, J\
    \ Agric Food Res, 2, \n2020, https://doi.org/10.1016/J.JAFR.2020.100033\n49. F\
    \ Terribile, A Agrillo, A Bonfante, G Buscemi, M Colandrea, A D’Antonio, et al.,\
    \ A \nWeb-based spatial decision supporting system for land management and soil\
    \ con-\nservation, Solid Earth 6 (2015) 903–928, https://doi.org/10.5194/SE-6-903-2015\n\
    50. A Felsberger, B Oberegger, G. Reiner, A Review of Decision Support Systems\
    \ \nfor Manufacturing Systems, Undefined, 2016. \n51. P Taechatanasat, L. Armstrong,\
    \ Decision Support System Data for Farmer De-\ncision Making, ECU Publ Post (2013)\
    \ 2014 . \n52. L Wang, M Törngren, M. Onori, Current status and advancement of\
    \ cyber- phys-\nical systems in manufacturing, J Manuf Syst, 37, 2015), 517–527,\
    \ https://doi.\norg/10.1016/J.JMSY.2015.04.008\n53. DGS Pivoto, LFF de Almeida,\
    \ R da Rosa Righi, JJPC Rodrigues, AB Lugli, \nAM. Al- berti, Cyber-physical systems\
    \ architectures for industrial internet of \nthings appli- cations in Industry\
    \ 4.0: A literature review, J Manuf Syst, 58, 2021, \n176–192, https://doi.org/10.1016/J.JMSY.2020.11.017\n\
    54. AF Jimenez, PF Cardenas, F Jimenez, A Canales, A. López, A cyber-physical\
    \ in-\ntelli- gent agent for irrigation scheduling in horticultural crops, Comput\
    \ Electron \nAgric, 178, 2020, 105777, https://doi.org/10.1016/J.COMPAG.2020.105777\n\
    55. A Selmani, H Oubehar, M Outanoute, A Ed-Dahhak, M Guerbaoui, A Lach- hab,\
    \ \net al., Agricultural cyber-physical system enabled for remote management of\
    \ \nsolar-powered precision irrigation, Biosyst Eng, 177, 2019, 18–30, https://doi.\n\
    org/10.1016/J.BIOSYSTEMSENG.2018.06.007\n452\nSiberian Journal of Life Sciences\
    \ and Agriculture, Vol. 14, №6, 2022\n56. A Nayak, RR Levalle, S Lee, SY. Nof,\
    \ Resource sharing in cyber-physical sys-\ntems: modelling framework and case\
    \ studies, 54, 2016, 6969–6983, https://doi.\norg/10.1080/00207543.2016.1146419\n\
    57. C Verdouw, B Tekinerdogan, A Beulens, S. Wolfert, Digital twins in smart farming,\
    \ \nAgric Syst, 189, 2021, 103046, https://doi.org/10.1016/J.AGSY.2020.103046\n\
    58. D Jones, C Snider, A Nassehi, J Yon, B Hicks, Characterising the Digital Twin:\
    \ \nA systematic literature review, CIRP J Manuf Sci Technol, 29, 2020, 36–52,\
    \ \nhttps://doi.org/10.1016/J.CIRPJ.2020.02.002\n59. S Aydin, MN. Aydin, Semantic\
    \ and syntactic interoperability for agricultural \nopen- data platforms in the\
    \ context of IoT using crop-specific trait ontologies, \nAppl Sci, 10, 2020, https://doi.org/10.3390/app10134460\n\
    60. Y He, J Guo, X. Zheng, From Surveillance to Digital Twin: Challenges and Re-\n\
    cent Advances of Signal Processing for Industrial Internet of Things, IEEE Signal\
    \ \nProcess Mag, 35, 2018, 120–129, https://doi.org/10.1109/MSP.2018.2842228\n\
    61. MS Farooq, S Riaz, A Abid, K Abid, MA. Naeem, A Survey on the Role of IoT\
    \ \nin Agriculture for the Implementation of Smart Farming, IEEE Access, 7, 2019,\
    \ \n156237–156271, https://doi.org/10.1109/ACCESS.2019.2949703\n62. A Villa-Henriksen,\
    \ GTC Edwards, LA Pesonen, O Green, CAG. Sørensen, In-\nternet of Things in arable\
    \ farming: Implementation, applications, challenges and \npotential, Biosyst Eng,\
    \ 191, 2020, 60–84, https://doi.org/10.1016/J.BIOSYSTE-\nMSENG.2019.12.013\n63.\
    \ HM Jawad, R Nordin, SK Gharghan, AM Jawad, M. Ismail, Energy-efficient \nwire-\
    \ less sensor networks for precision agriculture: A review, Sensors (Swit-\nzerland),\
    \ 17, 2017, 1781, https://doi.org/10.3390/s17081781\n64. L Sigrist, N Stricker,\
    \ D Bernath, J Beutel, L. Thiele, Thermoelectric Energy \nHarvesting from Gradients\
    \ in the Earth Surface, IEEE Trans Ind Electron, 67, \n2020, 9460–9470, https://doi.org/10.1109/TIE.2019.2952796\n\
    65. AR Yanes, P Martinez, R. Ahmad, Towards automated aquaponics: A re-\nview\
    \ on monitoring, IoT, and smart systems, J Clean Prod, 2020, https://doi.\norg/10.1016/j.jclepro.2020.121571\n\
    66. N Brinis, LA. Saidane, Context Aware Wireless Sensor Network Suitable \nfor\
    \ Preci- sion Agriculture, Wirel Sens Netw, 2016, https://doi.org/10.4236/\nwsn.2016.81001\n\
    67. M Zimmerling, L Mottola, S. Santini, Synchronous Transmissions in Low-Pow-\n\
    er Wireless: A Survey of Communication Protocols and Network Services, ACM \n\
    Comput Surv, 53 2021, https://doi.org/10.1145/3410159\n68. F Tonolini, F. Adib,\
    \ Networking across boundaries: Enabling wireless com-\nmunica- tion through the\
    \ water-air interface, SIGCOMM 2018 - Proc 2018 \n453\nSiberian Journal of Life\
    \ Sciences and Agriculture, Том 14, №6, 2022\nConf ACM Spec Interes Gr Data Commun,\
    \ 2018, 117–131, https://doi.\norg/10.1145/3230543.3230580\n69. L Chen, S Thombre,\
    \ K Jarvinen, ES Lohan, A Alen-Savikko, H Leppakoski, et al., Ro- \nbustness,\
    \ Security and Privacy in Location-Based Services for Future IoT: A Survey, \n\
    IEEE Access, 5, 2017, 8956–8977, https://doi.org/10.1109/ACCESS.2017.2695525\n\
    70. Y Njah, M. Cheriet, Parallel Route Optimization and Service Assurance in Ener-\n\
    gy- Efficient Software-Defined Industrial IoT Networks, IEEE Access, 9, 2021,\
    \ \n24682–24696, https://doi.org/10.1109/ACCESS.2021.3056931\n71. A Rajput, VB.\
    \ Kumaravelu, Scalable and sustainable wireless sensor networks \nfor agricultural\
    \ application of Internet of things using fuzzy c-means algorithm, \nSustain Comput\
    \ Informatics Syst, 22, 2019, 62–74, https://doi.org/10.1016/J.\nSUSCOM.2019.02.003\n\
    72. BB Sinha, R. Dhanalakshmi, Recent advancements and challenges of Internet\
    \ \nof Things in smart agriculture: A survey, Futur Gener Comput Syst, 126, 2022,\
    \ \n169–184, https://doi.org/10.1016/J.FUTURE.2021.08.006\n73. F Caffaro, E. Cavallo,\
    \ The effects of individual variables, farming system char-\nacter- istics and\
    \ perceived barriers on actual use of smart farming technologies: \nEvidence from\
    \ the piedmont region, northwestern Italy, Agric, 9, 2019, https://\ndoi.org/10.3390/AGRI-\
    \ CULTURE9050111 \n74. Mohit Jain, Pratyush Kumar, Ishita Bhansali, Q. Vera Liao,\
    \ Khai Truong, \nShwetak Patel. FarmChat: A Conversational Agent to Answer Farmer\
    \ Que-\nries. Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiq-\n\
    uitous Technologies, 2018, vol. 2, issue 4, article 170, pp 1–22. https://doi.\n\
    org/10.1145/3287048\n75. Mclaughlan B, Brandli J, Smith F. Toward Sustainable\
    \ High-Yield Agriculture \nvia Intelligent Control Systems, 2015. \n76. RK Kodali,\
    \ S Soratkal, L. Boppana, IOT based control of appliances, in: Pro-\nceeding -\
    \ IEEE Int Conf Comput Commun Autom ICCCA 2016, 2017, pp. \n1293–1297, https://doi.org/10.1109/CCAA.2016.7813918\n\
    77. Abbasi R, Reyes A, Martinez E, Ahmad R. Real-time implementation of digital\
    \ \ntwin for robot based production line n.d.:4–6. \n78. O Bermeo-Almeida, M Cardenas-Rodriguez,\
    \ T Samaniego-Cobo, E Ferruzo-\nla- Gómez, R Cabezas-Cabezas, W. Bazán-Vera, Blockchain\
    \ in Agriculture: A \nSystematic Literature Review, Commun Comput Inf Sci, 883,\
    \ 2018, 44–56, \nhttps://doi.org/10.1007/978-3-030-00940-3_4\n79. V Saiz-Rubio,\
    \ F. Rovira-Más, From Smart Farming towards Agriculture 5.0: \nA Review on Crop\
    \ Data Management, Agron, 10, 2020, 207, https://doi.\norg/10.3390/AGRONOMY10020207\n\
    454\nSiberian Journal of Life Sciences and Agriculture, Vol. 14, №6, 2022\n80.\
    \ X Xu, Y Lu, B Vogel-Heuser, L. Wang, Industry 4.0 and Industry 5.0 – Incep-\n\
    tion, conception and perception, J Manuf Syst, 61, 2021, 530–535, https://doi.\n\
    org/10.1016/J.JMSY.2021.10.006\n81. PKR Maddikunta, Q-V Pham, P B, N Deepa, K\
    \ Dev, TR Gadekallu, et al., In-\ndustry 5.0: A survey on enabling technologies\
    \ and potential applications, J Ind \nInf Integr, 2021, 100257, https://doi.org/10.1016/J.JII.2021.100257\n\
    DATA ABOUT THE AUTHORS\nGurjeet Singh, Associate Professor& Dean, Lords School\
    \ of Computer Ap-\nplications & IT\n \nLords University\n \nAlwar-Bhiwadi Highway,\
    \ Chikani, Alwar, 301028, Rajasthan\n \nresearch.gurjeet@gmail.com\nNaresh Kalra,\
    \ Deputy Registrar (Research), Faculty of Pharmacy\n \nLords University\n \nAlwar-Bhiwadi\
    \ Highway, Chikani, Alwar, 301028, Rajasthan\n \nnaresh.kalra@lordsuni.edu.in\n\
    Neetu Yadav, Associate Professor& Dean, Lords School of Social Sciences \n& Humanities\n\
    \ \nLords University\n \nAlwar-Bhiwadi Highway, Chikani, Alwar, 301028, Rajasthan\n\
    \ \nneetu.yadav@lordsuni.edu.in\nAshwani Sharma, Assistant Professor, Lords School\
    \ of Computer Applica-\ntions & IT\n \nLords University\n \nAlwar-Bhiwadi Highway,\
    \ Chikani, Alwar, 301028, Rajasthan\n \nashwani.sharma@lordsuni.edu.in\nAshwani\
    \ Sharma, Assistant Professor, Lords School of Computer Applica-\ntions & IT\n\
    \ \nLords University\n \nAlwar-Bhiwadi Highway, Chikani, Alwar, 301028, Rajasthan\n\
    \ \nmanoj.saini@lordsuni.edu.in \nПоступила 21.05.2022 \nReceived 21.05.2022\n\
    После рецензирования 21.06.2022 \nRevised 21.06.2022\nПринята 03.07.2022 \nAccepted\
    \ 03.07.2022\n"
  inline_citation: '>'
  journal: Siberian journal of life sciences and agriculture (Print)
  limitations: '>'
  pdf_link: http://discover-journal.ru/jour/index.php/sjlsa/article/download/657/260
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'SMART AGRICULTURE: A REVIEW'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/ftfc.2011.5948923
  analysis: '>'
  authors:
  - Rym Chéour
  - Khawla Lahmar
  - Mohamed Abid
  citation_count: 9
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy IEEE.org IEEE Xplore IEEE
    SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse
    My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out
    All Books Conferences Courses Journals & Magazines Standards Authors Citations
    ADVANCED SEARCH Conferences >2011 Faible Tension Faible Co... Evolution of wireless
    sensor networks and necessity of power management technique Publisher: IEEE Cite
    This PDF Rym Cheour; Khawla Lahmar; Mohamed Abid All Authors 8 Cites in Papers
    446 Full Text Views Abstract Document Sections I. Introduction II. Evolution of
    wsn III. Technique to reduce the energy consumption IV. Conclusion Authors Figures
    References Citations Keywords Metrics Abstract: Wireless sensor networks interfere
    in a growing number of applications ranging from simple environmental monitoring
    like temperature detection to complex calculation such as video processing. This
    last type of application requires a high load at the sensor level and leads to
    a problem of optimization. It is critical to design algorithms and protocols in
    such a way to use minimal energy. This paper provides a survey of WSNs technologies,
    main applications and hardware evolutions. In the other hand, we will provide
    an insight about the latest trends of the technique to reduce the power consumption
    within the WSN that could possibly make this emerging technological area more
    useful than ever. Published in: 2011 Faible Tension Faible Consommation (FTFC)
    Date of Conference: 30 May 2011 - 01 June 2011 Date Added to IEEE Xplore: 11 July
    2011 ISBN Information: DOI: 10.1109/FTFC.2011.5948923 Publisher: IEEE Conference
    Location: Marrakech, Morocco SECTION I. Introduction Sensor area is growing at
    an accelerated pace, attracting more and more people to its use, and is becoming
    one of the subjects of predilection of researchers. The imminent progress made
    in MEMS (Micro Electro Mechanical systems) coupled with wireless communication
    and digital electronic has led to the massive deployment of tiny size, low cost,
    low power, multifunctional and high performance sensor nodes[1]. Thus, the network
    technologies of wireless sensor have become a global trend in communication, mobility
    and research of flexible implementation. The first challenge of a wireless sensor
    network is to ensure optimal performance for users and to save the energy consumed
    by sensor nodes [2]. Widespread in hostile environments and equipped with limited
    resources, this network sees reducing its performances and confines itself to
    some applications. Once deployed, it is often impossible or inappropriate to recharge
    sensor nodes or replace their batteries [3] [2]. Recently, wireless sensor networks
    (WSN) are expected to carry out high functionalities in various scopes. It’s more
    evident now to support heterogeneous WSN’s applications with different sensors:
    temperature, pressure, image, sound, video instead of sampling temperature and
    sending the value to a base station. Unfortunately, energy remains the major handicap
    in front of this progress due to limit capacity of node’s batteries. Therefore,
    the energy optimization becomes more and more a necessity for sustaining a sufficiently
    long network lifetime [4]. Since most systems require much longer lifetime, significant
    research has been undertaken to increase lifetime while still meeting functional
    requirements. There are many techniques to reduce power consumption [1]. This
    paper presents an overview of some of the key areas and research in wireless sensor
    networks related to energy savings. The remainder of the paper is organized as
    follows: we use examples of recent work to portray the state of art of the evolution
    those networks. In particular, we discuss the progress made in the fields of application,
    the architecture and the platforms in the second section. Besides we give a glance
    about the progress known by the architecture and the platforms of WSN. We have
    proposed also many innovative applications of wireless sensor networks. We also
    attempt an investigation also into pertaining energy constraints. Section 3 states
    the deployment of the power management technique to meet the best of our needs.
    We conclude in section 4. SECTION II. Evolution of wsn Wireless sensor network
    (WSN) is an exciting new technology that has attracted extensive interest. The
    WSN is subject for various resource constraints which are memory, processing ability,
    bandwidth, and mainly energy efficiency [2]. To overcome those many possible architecture
    and new platforms have been defined offering more reliability and broadening the
    spectrum of deployment of these networks. We try to provide next an overview of
    the recent advances of architecture, in the platforms and the field of application.
    A. Hardware architecture A Wireless Sensor Network is a self-configuring network
    of small sensor nodes communicating among themselves using radio signals, and
    deployed in quantity to sense, monitor and understand the physical world [4].
    A sensor node is typically made up of four basic components which are the sensing
    unit, the processing unit, the transceiver section and the power supply unit as
    illustrated in figure 1. The motes or the sensor nodes have to provide information
    anytime and anywhere to a final user, by collecting, processing, analysing, and
    disseminating data [5]. The recent advances of wireless sensor networks create
    new opportunities for innovative applications, but poses new technical challenges
    for constructing such applications. In fact, new types of sensors are now commercially
    available and could be broadly classified as pressure, temperature, light, biological,
    chemical, strain, fatigue, tilt sensors, humidity, vibration, microphone, camera
    and so on] 61. Figure 1 A sensor node components Show All Today, the lack of appropriate
    tools and methodology that are able to handle the imminent progress made in WSN
    is an obstacle to potential uptake. That’s why this progress requires inherent
    evolution in the hardware architecture of the motes. The nodes forming the WSN
    are now equipped with more processors and are more powerful (4Mhz mica, 12Mhz
    with Imote2) and a greater memory. As it is shown in Table1, new platforms have
    32Mbyte as RAM memory and the same capacity as flash memory. In addition, they
    support dynamic voltage and frequency scaling (DVFS) technique thanks to the range
    of frequency of processor. Table 1. Evolution of hardware resources of motes WeC
    Dot Mica2 Imotel Imote2 Shimmer [7] Cookies [8] Egs [9] development 1999 2001
    2003 2005 2007 2008 2008 2010 Processor (MHz) 4 7 12–48 13–400 8 96 Flash 8K 16K
    128K 512K 32MB 48KB +external memory 2GB 4 Mbit 256 KB +external memory 2GB RAM
    0.5K 1K 4K 64K 32MB 10KB 4 Kbytes +62 Kbytes 52KB Transceiver RFM ChipCon Bluetooth
    Zeegbee Bluetooth and 802.15.4 (WML-C46A, CC2420) ETRX2 TELEGE SIS CC2520: 802.15.4
    and 2 Bluetooth modules AC Amtel ARM 7TDMI XScale PXA271 MSP430 processor ADUC84
    1 + Spartan 3FPGA ARM Cortex M3 The heterogeneity of the nodes in the WSN as well
    as the power resources, help not only to improve the capabilities of the WSN,
    but also to limit its lifetime. The lifetime of a node may be determined by the
    battery life. The network lifetime is defined as the maximum number of times a
    certain data collection function or task can be carried out without any node running
    out of energy [4]. This is why implementing dynamic power management techniques
    become more and more obligatory. B. Platforms of Sensor Networks The WSN platforms
    (mica2, micaz, etc.) used to contain just a temperature or pressure sensor and
    they were restricted to the transmission of the captured information to a third
    element. Recently, the proliferation of the WSN has led to new generation of platforms
    that are equipped with a camera, a microphone, an earpiece for dedicated applications
    that integrate audio or video treatments. Also treatment has become increasingly
    complex and requires more resources and mainly better power management than sleep-policies.
    In this context, new platforms (imate2) are equipped with processors with management
    policy dynamic frequency and voltage (DVFS). Indeed, the functioning of a processor
    is not constant; it consists of treatment periods that require computing variable
    power. C. Applications of Sensor Networks WSN have become an equipment key in
    many industrial applications. Indeed, WSN have proved their efficiency in monitoring,
    tracking, or controlling phenomena where wiring is difficult or cost-prohibitive.
    In terms of areas of application, sensor networks have been extremely successful,
    because they hold a potential which revolutionized many sectors of our economy
    and our daily life, such as the monitoring and preservation of the environment,
    the industrial manufacturing, passing through the automation in the sectors of
    transport and health, modernization of the medicine, the agriculture, the telematics,
    and the logistics [10]. Also they invade military and many other different scoops
    that were unthinkable several decades ago such as cellular phones, GPS units,
    television satellite, remote sensing and the internet [5]. Far away from simple
    application, WSN set up today applications more complex with heterogeneous sensors.
    We have attempt next to give a glance about the latest trends of application of
    WSN. 1) Habitat Monitoring As an example, we cite an application for firefighters
    proposed in the project GEODE, comprising nodes for sampling temperature, smoke
    detection and motion as well as cameras in a building. On the other hand, we can
    also equip firefighters with their nodes to determine areas where there are people
    in danger or simply determining the output once it is in the building on fire[11].
    2) Agriculture In addition, WSNs have the potential for widespread application
    in precision agriculture, particularly in the areas of crop and irrigation management,
    planned fertilization and pest control, variable rate chemical input application
    and modeling crop performance[12]. 3) Civil infrastructures Once deployed in offshore
    fields, the use a low-cost WSN presents a major advantage when it comes to feeding
    measurement and communication equipment data to central units. The WSN can be
    retrofitted on offshore platforms that have hundreds of pumps, fans, and other
    motor driven devices requiring permanent maintenance[13]. 4) Medicine Bio-sensors
    are implanted in the human body to monitor the patient’s physiological parameters
    such as heart beat or blood pressure. The data so collected is sent regularly
    to alert the concerned doctor on detection of an anomaly[2]. 5) Environment monitoring
    These sensors are very useful for environmental applications also. As a network,
    they have been used to detect environmental hazards such as earthquakes and floods.
    Some motes have even deployed to analyse remote locations, observing the motion
    of a tornado, or detecting fire in a forest [5]. Sensors that are used also for
    satellite oceanographic observations, records the amount of incident energy returned
    from the imaged surface. This application provides a wealth of information on
    a diverse range of geophysical and biological parameters and phenomena [14]. 6)
    Logistic The WSN nodes are attached to goods which are mostly food due to their
    perishable nature. The goods are loaded from a warehouse to a freight vehicle,
    in which their nodes need to self-organize and form a network of nodes, which
    can deliver information of the goods’ state to the outside world using a gateway
    [15]. SECTION III. Technique to reduce the energy consumption WSN are subject
    to many resource constraints which are mainly closely related to the energy consumption.
    The nodes contain a conventional battery, supplemented by a renewable source that
    generates power using scavenging techniques (vibration, solar, EM, piezoelectric,
    radioactive, etc.)[16]. However, a sensor node powered by 2 AA batteries can last
    for up to three years with a 1% low duty cycle working mode [4]. To extend the
    autonomy of a system, only two methods exist: increasing the capacity of the on-board
    energy or reducing the consumption of the system. The first solution is a subject
    of research related to the field of batteries. However, it is always difficult
    to increase the capacity of a battery without increasing the weight, volume and
    price. Notwithstanding, the battery technology is not progressing fast enough
    to satisfy those requirements [2]. The second solution has also led to several
    researches in the field of electronics and computer science. Different techniques
    can minimize the energy consumption of WSN. In the literature, there are several
    methods that allow us to get a system with low consumption. Typically, they are
    divided into three categories. A. Hardware Level In fact, the power being proportional
    to the square of the voltage, we can think that the most effective one is to lower
    it [16]. However, lowering this parameter also leads to a reduction of the threshold
    voltage Vth which increases the leakage current and therefore the static power.
    Because our system is often in standby mode, it is therefore necessary to find
    a compromise between the reduction of the supply voltage and the threshold voltage.
    On the other hand, we can reduce the output capacity at the layout level, to the
    sizing gates level and also at the architectural level [17]. There is also the
    opportunity to try to reduce the frequency of activation at the architectural
    level partitioning the circuit block, enable those who are necessary for the application
    and put the rest in standby mode. It is possible to add solar cells or scavenge
    energy from motion or wind[16]. B. Software Level Numerous system software techniques
    have achieved to extend the WSN lifetime such as duty-cycling subsystems, batching
    operation, reducing redundancies, low-power software approaches[18]. Given that
    the number of instruction is proportional to the consumption, the techniques of
    code’s optimization can help to minimize this consumption by reducing the number
    of access to the external memory. But as the optimization of these codes is manually
    difficult to implement, we can use other techniques for automatic optimization
    that intervenes at the level of the code generator. Among the automatic optimization
    techniques, we can cite inlining and loop method (copy the code in a function
    where it is mentioned instead of using a procedure of function call) and the unrolling
    technique(Copy the code several times)[3]. At the level of communication, we can
    cite low power listening, communication scheduling, power-aware routing etc. At
    the operating system level, the Operating System (OS) for sensor nodes could implement
    a low-power task-scheduling which take advantage of nonlinear battery effects
    to reduce energy consumption. At the computation level, the operating system powers
    down the processor between events when idle which reduces considerably the wasted
    energy[19]. C. Hybrid At the software level power management solutions are targeted
    to minimize the communications since transmitting and listening to messages is
    energy expensive, and to create sleep/wake-up schedules for nodes or particular
    components of nodes [2]. Indeed, this power manager allows us to adapt the energy
    resources in an automatic way and to reduce the power consumption of the WSN.
    Dispose of this utility offers various advantages such as a structure in which
    nodes can intelligently manage their own power and a module which has a global
    view across the network, the power and the sensor nodes states. Each component
    in the node can have different power modes. A task can be active, slowed down,
    or in sleep mode: radio can transmit, receive or in standby or other mode [20].
    Each sleep state of the node corresponds to a particular combination of components
    of power. An interesting aspect of this concept is to take advantage of the static
    and dynamic resources management algorithms. Those policies refer mainly to the
    DPM (Dynamic Power Management) technique and to DVFS (Dynamic Voltage and Frequency
    Scaling). 1) DPM The basic idea of DPM is to stop devices when they are not required
    and to wake them up when they are. Test-bed developed in cooperation with the
    start-up company SeNet s.r.1. for agricultural monitoring has shown that in sleeping
    mode, node consumption is only 0.5 mA, whereas during the activity mode the overall
    consumption is 30 rnA[17]. Currently, the DPM is done thanks to the ability of
    the hardware to support mechanisms of sleep state ranging from total activity
    of the system up to full sleep implementation or disconnection of the system.
    Indeed, idle state transitions and implementation cost is running a bit expensive
    in the point of view of energy. In addition, the node must have a progressive
    quality scalability of energy so that its lifetime will be extended if the application
    requires, this is achieved at the expense of accuracy[3]. 2) Dynamic voltage and
    frequency scaling Approaches to deal with the reduction of energy consumption
    are various. We will give a synthesis of those methods. Pillali article [16] introduced
    the dynamic management of tension as a key for the physical characteristics of
    the processor to reduce the energy dissipation by minimizing the supply voltage
    and the frequency. These algorithms have proved their effeicency by offering a
    considerable energy gain, while ensuring the performance of the real time embedded
    system. Notwithstanding this, we can not deny their impact in the execution time.
    Thus, taking into account the time constraints is necessary. Consequently, he
    introduced a new algorithm “Real Time Dynamic Voltage Scaling” which modifies
    the operating system real time and task management. The article written by Sinha
    and Chandrakasan [21] proposes the use of power aware methodology. They employ
    a micro incorporated operating system to reduce the energy consumption of the
    node by exploiting the node sleep state and active power management. The appearance
    of variable voltage processors has led to greater autonomy and energy savings.
    Dynamic voltage and frequency scaling (DVFS) is an effective technique for reducing
    CPU energy. The DVFS tries to combine the performance and the lifetime of the
    battery. Lowering only the operating frequency can reduce the power consumption
    but the energy consumption remains the same because the computation needs more
    time to finish. Lowering the supply voltage can reduce a significant amount of
    energy because of the quadratic relation between power and voltage. Lowering the
    supply voltage and operating frequency reduces the power and energy consumption
    further[19]. A number of modern microprocessors such as Intel’s XScale and Transmeta’s
    Cruso are equipped with the DVFS functionality [3]. The first feature of this
    technique provides high performance only for a short time reduced, while the rest
    of the time a low CPU power is largely sufficient [16] [20]. Most micro-processor
    systems are characterized by a time-varying computational load. DVFS exploits
    the CMOS property that a linear reduction in the supply voltage results in a cubic
    reduction in the power consumption at the expense of a linear slow down in the
    processor frequency [21]. It is better thus to run the processor at the weakest
    frequency compatible with the necessary performance level. When used at a reduced
    frequency, the processor can operate at a lower supply voltage. As wireless sensor
    networks interfere in a growing number of applications ranging from simple environmental
    monitoring like temperature detection to complex calculation such as video processing.
    This last type of application requires a high load at the sensor level and leads
    to a problem of optimization. It is in this perspective that EDF DVFS technique
    justifies itself. SECTION IV. Conclusion Wireless sensor networks have been widely
    used in many areas. They provide endless opportunities, but at the same time pose
    several challenges, such as the fact that energy is a scarce and usually non-renewable
    resource. The aim of this paper is to discuss some of the most relevant issues
    of WSNs, from the application, design and technology point of view. We covered
    also the techniques reducing the power consumption within the nodes. We focused
    also in the DVFS and DPM techniques. Authors Figures References Citations Keywords
    Metrics More Like This Run-time Monitoring of Energy Consumption in Wireless Sensor
    Networks 2007 IEEE International Conference on Control and Automation Published:
    2007 Energy Consumption & Lifetime Analysis in Cluster-Based Wireless Sensor Networks
    for Periodic Monitoring Applications 2009 International Conference on Networks
    Security, Wireless Communications and Trusted Computing Published: 2009 Show More
    IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2011
  relevance_score1: 0
  relevance_score2: 0
  title: Evolution of wireless sensor networks and necessity of power management technique
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s21206910
  analysis: '>'
  authors:
  - Juan S. Angarita-Zapata
  - Ainhoa Alonso-Vicario
  - Antonio D. Masegosa
  - Jon Legarda
  citation_count: 14
  full_citation: '>'
  full_text: ">\nsensors\nArticle\nA Taxonomy of Food Supply Chain Problems from a\n\
    Computational Intelligence Perspective\nJuan S. Angarita-Zapata 1,*\n, Ainhoa\
    \ Alonso-Vicario 1\n, Antonio D. Masegosa 1,2\nand Jon Legarda 1\n\x01\x02\x03\
    \x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\nCitation: Angarita-Zapata,\
    \ J.S.;\nAlonso-Vicario, A.; Masegosa, A.D.;\nLegarda, J. A Taxonomy of Food\n\
    Supply Chain Problems from a\nComputational Intelligence\nPerspective. Sensors\
    \ 2021, 21, 6910.\nhttps://doi.org/10.3390/s21206910\nAcademic Editors: Christian\n\
    Krupitzer, Anthony Stein and\nJanick Edinger\nReceived: 4 September 2021\nAccepted:\
    \ 15 October 2021\nPublished: 18 October 2021\nPublisher’s Note: MDPI stays neutral\n\
    with regard to jurisdictional claims in\npublished maps and institutional afﬁl-\n\
    iations.\nCopyright: © 2021 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\n1\nDeusto Institute of Technology (DeustoTech), Faculty of Engineering,\
    \ University of Deusto,\n48007 Bilbao, Spain; ainhoa.alonso@deusto.es (A.A.-V.);\
    \ ad.masegosa@deusto.es (A.D.M.);\njlegarda@deusto.es (J.L.)\n2\nIkerbasque, Basque\
    \ Foundation for Science, 48009 Bilbao, Spain\n*\nCorrespondence: js.angarita@deusto.es\n\
    Abstract: In the last few years, the Internet of Things, and other enabling technologies,\
    \ have been\nprogressively used for digitizing Food Supply Chains (FSC). These\
    \ and other digitalization-enabling\ntechnologies are generating a massive amount\
    \ of data with enormous potential to manage supply\nchains more efﬁciently and\
    \ sustainably. Nevertheless, the intricate patterns and complexity embedded\n\
    in large volumes of data present a challenge for systematic human expert analysis.\
    \ In such a data-\ndriven context, Computational Intelligence (CI) has achieved\
    \ signiﬁcant momentum to analyze, mine,\nand extract the underlying data information,\
    \ or solve complex optimization problems, striking a\nbalance between productive\
    \ efﬁciency and sustainability of food supply systems. Although some\nrecent studies\
    \ have sorted the CI literature in this ﬁeld, they are mainly oriented towards\
    \ a single\nfamily of CI methods (a group of methods that share common characteristics)\
    \ and review their\napplication in speciﬁc FSC stages. As such, there is a gap\
    \ in identifying and classifying FSC problems\nfrom a broader perspective, encompassing\
    \ the various families of CI methods that can be applied in\ndifferent stages\
    \ (from production to retailing) and identifying the problems that arise in these\
    \ stages\nfrom a CI perspective. This paper presents a new and comprehensive taxonomy\
    \ of FSC problems\n(associated with agriculture, ﬁsh farming, and livestock) from\
    \ a CI approach; that is, it deﬁnes FSC\nproblems (from production to retail)\
    \ and categorizes them based on how they can be modeled from\na CI point of view.\
    \ Furthermore, we review the CI approaches that are more commonly used in\neach\
    \ stage of the FSC and in their corresponding categories of problems. We also\
    \ introduce a set of\nguidelines to help FSC researchers and practitioners to\
    \ decide on suitable families of methods when\naddressing any particular problems\
    \ they might encounter. Finally, based on the proposed taxonomy,\nwe identify\
    \ and discuss challenges and research opportunities that the community should\
    \ explore to\nenhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nKeywords: food supply chain; computational intelligence; fish farming;\
    \ agriculture; livestock; machine\nlearning; neural networks; deep learning; meta-heuristics;\
    \ fuzzy systems; probabilistic methods\n1. Introduction\nCurrently, one worldwide\
    \ challenge is how to sustainably guarantee global food needs\nin the face of\
    \ a growing population that is projected to be 9–10 billion by 2050 [1]. In this\n\
    sense, the enhancement of production and management of the current Food Supply\
    \ Chains\n(FSCs) is a crucial factor that contributes to accomplishing such an\
    \ aim. Nowadays, new\nInformation and Communication Technologies (ICTs) (e.g.,\
    \ the Internet of Things) play\nan active role in the digitization of FSCs [2].\
    \ As a result, large volumes of data are being\ngenerated in all FSC stages, ranging\
    \ from production to retail. The analysis of such data\nwould enable FSC actors\
    \ to extract relevant information or to optimize speciﬁc processes,\nallowing\
    \ improvement of the FSC administration, productivity, and sustainability.\nNevertheless,\
    \ the high volumes of available data and their complex patterns raise\nsigniﬁcant\
    \ challenges when analyzing and extracting values. In this context, Computational\n\
    Sensors 2021, 21, 6910. https://doi.org/10.3390/s21206910\nhttps://www.mdpi.com/journal/sensors\n\
    Sensors 2021, 21, 6910\n2 of 34\nIntelligence (CI) seems to be a successful paradigm\
    \ to build intelligent systems that are\nable to leverage this high availability\
    \ of data. CI is the ability of a digital system or\nalgorithm to perform tasks\
    \ commonly associated with intelligent beings [3]. Within such\ntasks, we can\
    \ ﬁnd speech recognition, visual perception, decision-making, prediction, and\n\
    translation, among others [4]. Over the last few years, the number of academic\
    \ publications\nconcerning CI applied to FSC has rapidly increased [5–7]. Within\
    \ the most representative\nCI methods applied to FSCs, we ﬁnd Neural Networks,\
    \ Fuzzy Logic, Swarm Intelligence,\nor Probabilistic Reasoning.\nThe scientiﬁc\
    \ literature reports different studies that aim to review and order the\napplication\
    \ of CI methods in different FSC stages. The variety of CI methods has led to\
    \ the\nemergence of research papers (published between 2012 and 2020), which select\
    \ a partic-\nular family of CI techniques and review their application in speciﬁc\
    \ FSC stages [2,6–12].\nHowever, these papers focus on only one or two families\
    \ of CI methods at most, and in the\nmajority of cases, do not cover all FSC stages.\
    \ Therefore, there is a lack of comprehensive\nstudies that review the application\
    \ of the most important families of CI methods in all FSC\nstages (from production\
    \ to retail). Additionally, few efforts have been made to classify FSC\nproblems\
    \ from a CI perspective. Hence, there is no categorization of the typologies of\
    \ FSC\nproblems to help determine how they can be modeled from a CI view (e.g.,\
    \ optimization,\nuncertain knowledge handling, reasoning) and what CI methods\
    \ can be most suitably used\nto approach them. Thus, despite the progress made\
    \ in organizing and systematizing the\nexisting literature at the point where\
    \ CI and FSCs meet, to the best of our knowledge, no\ntaxonomy has been proposed\
    \ in this regard.\nWith the above-mentioned ideas in mind, we propose a novel\
    \ taxonomy of FSC\nproblems from a CI perspective. Speciﬁcally, we focus on the\
    \ supply chain of agriculture,\nﬁsh farming, and livestock. The latter is justiﬁed\
    \ based on the fact that these supply chains\nprovide most of the food consumed\
    \ by the population of the world [13] and, therefore, they\nare the most studied\
    \ and researched FSCs in the scientiﬁc and academic literature. The\nmain contributions\
    \ of this article are:\n•\nA new taxonomy that provides a comprehensive view of\
    \ different FSC problems\nlocated in the chain stages typically studied in the\
    \ scientiﬁc literature (production,\nprocessing, distribution, and retail). This\
    \ taxonomy represents a new and broader\nproposal in order to identify and deﬁne\
    \ FSC problems that have been approached\nusing CI in the four aforementioned\
    \ stages. Besides, although some research articles\nhave described diverse FSC\
    \ problems, their deﬁnitions are not uniﬁed and vary\nfrom one paper to another.\
    \ Thus, this taxonomy also represents an effort to unify\nand consolidate deﬁnitions\
    \ of the FSC problems available in the literature, which\nrepresents a valuable\
    \ source of information for FSC researchers and practitioners\nworking in this\
    \ domain.\n•\nTo classify the FSC problems from a CI perspective. This classiﬁcation\
    \ allows FSC\nproblems to be mapped into common categories of problems in the\
    \ CI domain. Thus,\nwe provide a framework that helps display the similarities\
    \ and differences among\nFSC problems depending on how they can be modeled under\
    \ a CI perspective. To the\nbest of our knowledge, in this regard, no classiﬁcation\
    \ has been previously proposed.\n•\nTo establish a set of guidelines for the use\
    \ of CI in the FSC ﬁeld. These guidelines\naim to help FSC researchers and practitioners\
    \ to identify which FSC problems can\nbe addressed using CI, and the most appropriate\
    \ families of techniques to solve\nthem. Thus, these guidelines represent a ﬁrst\
    \ attempt to deﬁne a general framework\nto support the model selection problem\
    \ at the point where the ﬁelds of FSC and\nCI converge.\n•\nTo identify and discuss\
    \ challenges and research opportunities in the FSC domain,\nwhich are directed\
    \ towards more robust, explainable, interoperable, and accurate CI\nsolutions\
    \ that support FSC management and operation.\nThe rest of this paper is structured\
    \ as follows. Section 2 provides background in-\nformation on FSC and CI to facilitate\
    \ the understanding of the article. Furthermore, it\nSensors 2021, 21, 6910\n\
    3 of 34\nsummarizes other efforts directed at reviewing and categorizing the scientiﬁc\
    \ literature at\nthe point where FSC and CI meet in order to highlight how this\
    \ paper complements and\nenhances previous studies. Section 3 presents the proposed\
    \ taxonomy, its structure, and the\nclassiﬁcation of FSC from a CI perspective.\
    \ Afterwards, Section 4 gives FSC researchers and\npractitioners a set of guidelines\
    \ for the use of CI within the FSC domain. Lastly, Section 5\nsummarizes the main\
    \ conclusions and sets a research agenda for CI in the FSC ﬁeld.\n2. Background\
    \ and Motivation\nThis section provides some contextual and relevant background\
    \ information to facili-\ntate the understanding of the paper, and to assess similar\
    \ studies in this area. We start by\nintroducing the basic FSC stages examined\
    \ in this study (Section 2.1). Then, Section 2.2\npresents the main families of\
    \ CI approaches typically considered in FSC research. Finally,\nSection 2.3 reviews\
    \ similar works at the point where FSC and CI converge, which have\nidentiﬁed\
    \ and classiﬁed CI-based problems and methods. Section 2 ends with a discussion\n\
    of the main contributions of this research article.\n2.1. Food Supply Chain\n\
    FSC refers to the system that encompasses all activities, organizations, actors,\
    \ tech-\nnologies, information, resources, and services involved in producing\
    \ agri-food products for\nconsumer markets (e.g., fresh food, meat, and processed\
    \ food products) [14]. The upstream\nand downstream sectors form the supply of\
    \ agricultural inputs (such as seeds, fertilizers,\nfeed, medicine, or equipment)\
    \ to production, post-harvest handling, processing, transporta-\ntion, marketing,\
    \ distribution, and retailing [15]. They also include support services such as\n\
    extension services, research and development, and market information.\nBefore\
    \ the ﬁnal consumption of food products, FSC can include diverse stages wherein\n\
    production, processing, distribution, and retail are the stages most commonly\
    \ studied in\nthe scientiﬁc literature [16]. First, the production stage forms\
    \ the initial set of processes to\nobtain raw products derived from agriculture,\
    \ ﬁsh farming, or livestock. Agriculture refers\nto farming applications, including\
    \ the cultivation of soils for the harvest of crops [17]. Fish\nfarming involves\
    \ raising ﬁsh commercially in tanks or ﬁsh ponds, usually for consumer\nmarkets\
    \ [18]. Meanwhile, livestock is devoted to practices related to animal husbandry\
    \ for\nmeat, milk, eggs, or wool [19]. Continuing further down the production\
    \ chain, we ﬁnd\nthe processing stage, wherein the produced raw materials are\
    \ exposed to diverse transfor-\nmation processes (e.g., meat curing, washing and\
    \ disinfecting vegetables, fermentation),\nwhich allow consumable food products\
    \ to be obtained.\nOnce food products are ready to be delivered to the end-users,\
    \ the following FSC\nstages are distribution and retail. Their main purpose is\
    \ to connect the production and\nprocessing stages with the food users to complete\
    \ the supply chain loop [16]. Consequently,\nin the distribution stage, the processed\
    \ food is sent to distribution centers and warehouses.\nFrom such locations, different\
    \ distribution channels start to deliver the products to retail\nstores for sale.\
    \ Thus, retail is the end stage of the FSC and represents the link to consumers.\n\
    FSCs consist of a wide range of enterprises, ranging from smallholders, farmers’\n\
    organizations, co-operatives, and start-up companies to multinational enterprises\
    \ through\nparent companies or their local afﬁliates [14,15]. In this context,\
    \ FSC companies relate\nto each other through a variety of arrangements. Downstream\
    \ companies in the supply\nchain may engage in various types of relationships\
    \ with producers to secure access to\nagricultural products. They can impose standards\
    \ and speciﬁcations on producers with\nlittle involvement beyond a buying contract.\
    \ However, they can also become more actively\ninvolved, particularly through\
    \ contract farming, to coordinate production and ensure\nquality and safety [14].\
    \ In the new circular chain schemes, this type of relationship becomes\nmore complex,\
    \ involving more than one enterprise from the chain in the decision-making\nprocess\
    \ [20].\nCurrently, an appropriate and effective strategy to address this challenge\
    \ is the digiti-\nzation of FSCs, both of their internal processes and of their\
    \ relationships with other actors\nSensors 2021, 21, 6910\n4 of 34\nin the chain\
    \ [2]. Digitization has led to the generation of big volumes of data throughout\
    \ the\nentire supply chain. The exploitation of such data would allow FSC actors\
    \ to extract knowl-\nedge that could improve their internal processes in terms\
    \ of productivity and sustainability,\nas well as that of the FSC as a whole.\
    \ However, the data obtained through digitization\nusually contain complex and\
    \ intricate patterns that stand out as diverse challenges for\nprocessing and\
    \ analysis to extract value from it. Thus, CI arises as a solution that could\n\
    leverage and mine the underlying patterns of such data in order to obtain the\
    \ maximum\nvalue of the information, according to the analyses made.\n2.2. Computational\
    \ Intelligence Approaches\nCI is centered on the ability of a computer or algorithm\
    \ to learn speciﬁc tasks (e.g.,\npattern recognition, forecasting) from data that\
    \ is typically related to experimental observa-\ntions without human intervention\
    \ [3]. In the context of FSC, diverse IoT devices and data\nmanagement systems\
    \ sense and gather such data, which they then deploy in each supply\nchain stage.\
    \ After obtaining data, different CI approaches are used to process, analyze,\
    \ and\nextract information. In this section, we introduce the relevant background\
    \ information in\nrelation to families of CI-based methods that are typically\
    \ used in FSC applications. Fol-\nlowing the guidelines and classiﬁcation proposed\
    \ in [3], we have grouped the CI methods\ninto ﬁve families that are presented\
    \ in more detail below. They are CI-based Statistical\nLearning Methods, Artiﬁcial\
    \ Neural Networks and Deep Learning, CI-based Optimization\nMethods, Fuzzy Systems,\
    \ and Probabilistic Reasoning. These groups of CI-based methods\nare presented\
    \ below.\n2.2.1. CI-Based Statistical Learning Methods\nStatistical Learning Methods,\
    \ also known as Machine Learning (ML) methods are\nalgorithms that are able to\
    \ learn a speciﬁc task without being explicitly programmed. More\nformally, according\
    \ to Mitchell [21], these types of methods learn from experiences E,\nrelated\
    \ to a task T, and their performance is evaluated by a metric P. The performance\
    \ in T\nimproves according to P, with experience E. Classically, these methods\
    \ can be classiﬁed\naccording to the three basic learning approaches presented\
    \ below: unsupervised learning,\nsupervised learning, and reinforcement learning.\n\
    Unsupervised learning looks for patterns in data with no pre-existing labels.\
    \ Its\ncentral approach is usually focused on organizing X data points into speciﬁc\
    \ groups [22].\nData points that are in the same group should have similar properties,\
    \ while data points\nin different groups should have highly different features.\
    \ It is important to note that\nthese potential groups are not previously deﬁned\
    \ and it is the purpose of unsupervised\nlearning algorithms to discover them.\
    \ Some examples of unsupervised learning methods\nare hierarchical clustering,\
    \ k-means, anomaly detection techniques, among others.\nSupervised learning is\
    \ the other fundamental area of Statistical Learning Methods [23].\nIt consists\
    \ of algorithms that learn a function ( f : X 7→ Y) by training with a ﬁnite number\n\
    of input-output pairs, X being the input domain and X the output co-domain. This\
    \ learning\nstage can be seen as E in Mitchell’s deﬁnition [21], and the speciﬁc\
    \ task T usually involves\npredicting an output given a new and unseen input [24].\
    \ Common families of methods that\nstand out in supervised learning are decision\
    \ tree-based (e.g., Decision Tree, Extra Trees),\ninstance-based (e.g., K-Nearest\
    \ Neighbors), kernel-based (e.g., Support Vector Machine), or\nensemble-based\
    \ methods (Random Forest, AdaBoost).\nSupervised learning problems can usually\
    \ be divided into classiﬁcation and regres-\nsion [25,26]. In both cases, the\
    \ basis is an input data-set, X, and their difference is the\ntype of target variable,\
    \ Y, to be predicted. In the classiﬁcation case, Y is divided into\ndiscrete categories,\
    \ while in regression, the aim is to predict continuous values. Standard\nclassiﬁcation\
    \ problems can be either binary or multi-class problems [27]. In the former\n\
    case, an instance can only be associated with one of two values: the positive\
    \ or negative\nequivalent to 0 or 1; whereas, in multi-class problems, there are\
    \ more than two classes\nunder consideration. A multi-class problem means that\
    \ a given instance belongs to one of\nSensors 2021, 21, 6910\n5 of 34\nthe multiple\
    \ possible categories. Diversely, a supervised regression problem [28] consists\n\
    of ﬁnding a function that can predict, for a given example, a real value in R.\n\
    The third learning approach is reinforcement learning [29]. In this case, the\
    \ focus is\non developing a learning agent able to observe the environment and\
    \ obtain some input\nfrom it. Then, the agent makes an action and it changes to\
    \ a new environment, receiving an\nevaluation value (award or penalty) related\
    \ to the action made. Unlike the unsupervised\nlearning approach, the agent receives\
    \ guidance from an external evaluation. Moreover,\ndifferent to supervised learning,\
    \ in reinforcement learning, the agent is provided with an\nevaluation value regarding\
    \ the action made and not with a clear speciﬁcation about the\ncorrespondence\
    \ between input and output data. Relevant approaches within reinforcement\nlearning\
    \ are value-based [30], policy-based [31], and model-based [32].\nLastly, it is\
    \ important to note that Artiﬁcial Neural Networks are not considered within\n\
    this family of methods. We will treat them as a separate class of methods because\
    \ of their\nimportant role in CI.\n2.2.2. Artiﬁcial Neural Networks and Deep Learning\n\
    Artiﬁcial Neural Networks (ANNs) are computing systems with an inner structure\n\
    that is based on a set of connected units, named neurons, as they are inspired\
    \ by a biological\nbrain. Just as is the case for animals, wherein two neurons\
    \ are connected by means of a link\n(synapses), the neurons of an ANN are connected\
    \ through edges that transmit signals from\none artiﬁcial neuron to another. The\
    \ signals transferred between neurons are represented by\nreal numbers, and the\
    \ output of each neural unit is computed by some non-linear function\nof the sum\
    \ of its inputs.\nEvery edge that connects two neurons (usually) has a weight\
    \ that is adjusted as the\nlearning process of the ANN is underway. The role of\
    \ such edges is to increase or decrease\nthe strength of the signal at the connection\
    \ of two neurons. Additionally, neural units are\naggregated into layers, and\
    \ they may carry out diverse transformations on the inputs that\nthey receive.\
    \ Thus, the purpose of ANNs is to process input data from the ﬁrst layer (input\n\
    layer) to the last layer (output layer), while approximating linear or non-linear\
    \ functions\nthat are generally unknown. The collection of neuron units arranged\
    \ in layers, edges, and\nweights forms a network topology that is usually called\
    \ an architecture (Figure 1). ANNs\nhave evolved into a broad family of architectures\
    \ that depend on the speciﬁc application\ndomain. The feed-forward neural network\
    \ is a type of classical architecture. In this network,\nthe input data moves\
    \ from the input layer directly through any hidden layers (intermediate\nlayers\
    \ located in-between the input and output layers) to the output layer.\nFigure\
    \ 1. Basic architecture of an ANN. It is composed of edges and neural units arranged\
    \ using\nan input layer (blue neural units), a hidden layer (white neural units),\
    \ and an output layer (yellow\nneural units).\nBecause of their ability to reproduce\
    \ and model nonlinear processes, ANNs have been\napplied in diverse supervised\
    \ learning, unsupervised learning, and reinforcement learning\nproblems. Application\
    \ areas may include time series forecasting, pattern recognition, signal\nclassiﬁcation,\
    \ among others. However, as more complex problems (e.g., image processing,\nspeech\
    \ recognition) have arisen in the last few years, further development in the ANN\n\
    Sensors 2021, 21, 6910\n6 of 34\narea is required to deal with resulting challenges.\
    \ The common denominator of these ﬁelds\nis the high complexity and enormous volumes\
    \ of data generated and managed in them.\nAs a result, a subset of ANNs, named\
    \ Deep Learning (DL) [33] has emerged to cope with\nthis complexity.\nA deep neural\
    \ network is a classical ANN composed of multiple layers between the\ninput and\
    \ output layers. Theoretically, DL architectures allow any non-linear function\
    \ to be\napproximated [34]. Therefore, this approach has become dominant in multiple\
    \ application\nﬁelds like computer vision [35] and natural language processing\
    \ [36]. Between the most\ncommon deep neural networks, we can ﬁnd recurrent neural\
    \ networks, convolutional\nneural networks, and long short-term memory neural\
    \ networks [37]. The main strength\nof this approach lies in its ability to learn\
    \ automatically from raw data and to learn more\ncomplex representations of data\
    \ than other Statistical Learning methods [38]. The latter\ncould be valuable\
    \ for research areas characterized by having complex data, which can\nbarely be\
    \ analyzed by human reasoning and classical data preprocessing approaches. The\n\
    other relevant characteristics of Deep neural architectures come from their architectural\n\
    ﬂexibility that enables data fusion, as they allow different data formats to merge,\
    \ combining\ndata from multiple sources and therefore extracting more valuable\
    \ knowledge. In other\nwords, DL facilitates the use of multi-dimensional data,\
    \ which is quite difﬁcult to achieve\nwith classical ANNs and ML methods.\n2.2.3.\
    \ CI-Based Optimization Methods\nThe growing computational capabilities and the\
    \ fact that some problems of great\npractical value (e.g., scheduling, routing,\
    \ facility location) can not be solved optimally\n(because they are NP-Hard problems)\
    \ has led to increased use of approximating algorithms.\nMeta-heuristics are a\
    \ suitable approach in situations where exact algorithms can not give an\nanswer\
    \ using a reasonable amount of time or memory [39]. These methods arose with the\n\
    idea of extracting the best parts of different successful heuristics to create\
    \ generic methods\nthat could be applied to a more signiﬁcant number of problems\
    \ and contexts. Due to the\nwide variety of meta-heuristics, different classiﬁcation\
    \ categories have been proposed [40].\nWe group these techniques according to\
    \ the next categories: Evolutionary Computation\n(EC) [41], Swarm Intelligence\
    \ (SI) [42], and other meta-heuristics (local search-based meta-\nheuristics [43]).\
    \ These groups are presented with more detail as follows.\nEC is a group of meta-heuristic\
    \ optimization algorithms inspired by biological evolu-\ntion. Within this family\
    \ of methods, they operate from an initial set of candidate solutions\n(initial\
    \ generation), which are updated in an iterative way. Then, each new generation\n\
    is generated by randomly removing candidate solutions according to predeﬁned criteria\n\
    and by inserting random changes. After a set of iterations, the population of\
    \ solutions\nwill gradually evolve to increase its competitiveness, framed by\
    \ a ﬁtness function that is\ndetermined by each algorithm. Following the described\
    \ procedure, EC algorithms can\nproduce highly optimized solutions for complex\
    \ real-world optimization problems like the\ntraveling salesman problem [44].\
    \ Some well-known examples of EC meta-heuristics are\nGenetic algorithms [45]\
    \ and Differential evolution [46], among others.\nThe second biggest category\
    \ of meta-heuristics is the category of Swarm Intelligence\n(SI). This approach\
    \ consists of a population of agents interacting with each other and their\nenvironment.\
    \ The agents follow a set of basic rules, and although there is no centralized\n\
    control structure guiding the agents on how they should behave, the interaction\
    \ between\nthem leads to the emergence of intelligent global behavior. SI is inspired\
    \ by biological\nsystems such as ant and bee colonies and is commonly used to\
    \ solve combinatorial and\ncontinuous optimization problems (e.g., shortest path\
    \ problems for delivery or optimization\nof unknown parameters in time series).\
    \ Two of the most well-known SI algorithms are Ant\nColony [47], and Particle\
    \ Swarm [48] methods.\nSensors 2021, 21, 6910\n7 of 34\nThe third category groups\
    \ together the rest of the meta-heuristics, which are outside\nof the domains\
    \ of EC and SI but are still relevant for solving optimization problems. For\n\
    example, this is the case for local search-based meta-heuristics that are focused\
    \ on ﬁnding\na solution that maximizes a criterion among a set of candidate solutions.\
    \ These meta-\nheuristics move from one solution to another in the search space\
    \ of candidate solutions\nby applying local changes until an optimal solution\
    \ is found or a time budget is reached.\nWithin this category of meta-heuristics,\
    \ representative methods include Tabu Search [49],\nand Greedy Randomized Adaptive\
    \ Search Procedure (also known as GRASP) [50].\n2.2.4. Fuzzy Systems\nClassical\
    \ logic is based on the crisp set concept, where a group of objects is considered\n\
    to be a collection. In this sense, a crisp subset can be deﬁned from a broader\
    \ set where its\nelements belong to the subset according to some particular condition.\
    \ Thus, we can deﬁne\nthe concept of membership wherein a value of one is assigned\
    \ to the elements of the subset\nand a value of zero to the elements that do not\
    \ belong to that subset. Unlike crisp sets, a\nfuzzy set allows partial belonging\
    \ to a set through a degree of membership, denoted by\na function µ, that maps\
    \ all the elements in the set to a value in the real interval between\nzero and\
    \ one [51]. Then, as in the crisp case, a value of zero means that the element\
    \ under\nconsideration does not belong to the set, and a value of one represents\
    \ that the element\nbelongs entirely to the set. However, unlike in the crisp\
    \ case, a value greater than zero\nand lower than one represents a partial membership\
    \ to the subset. Consequently, the set’s\nmembership function is the relationship\
    \ between the elements of the set and their degree\nof belonging.\nHaving introduced\
    \ the basic notions of fuzzy sets, the next key concept is fuzzy\ninference systems.\
    \ A fuzzy system is a repository of fuzzy expert knowledge that can\nreason the\
    \ data in vague terms instead of precise Boolean logic. This expert knowledge\
    \ is a\ncollection of fuzzy membership functions and a set of fuzzy rules that\
    \ is formed as follows:\nIF (conditions are fulﬁlled) THEN (consequences are inferred).\
    \ The basic conﬁguration of a\nfuzzy system is shown in Figure 2, and it can be\
    \ divided into four main parts: a fuzziﬁer, a\nknowledge base, an inference engine,\
    \ and a defuzziﬁer [52].\nFigure 2. Structure and components of a Fuzzy System.\n\
    The Fuzziﬁer maps a real crisp input to a fuzzy function and, therefore, determines\n\
    the degree of membership of the input to a vague concept (categories using the\
    \ fuzzy sets).\nThe values of the input variables are mapped to the range of values\
    \ of the corresponding\nuniverse of discourse. The range and resolution of input-fuzzy\
    \ sets and their effect on the\nfuzziﬁcation process are considered to be factors\
    \ that affect the overall performance of\nthe system.\nThe knowledge base comprises\
    \ the knowledge of the application domain. It can be\nsplit into a database of\
    \ deﬁnitions used to express linguistic control rules in the controller\nand a\
    \ rule base that describes the knowledge held by the experts in the domain. Intuitively,\n\
    the knowledge base is the core element of a fuzzy controller as it will contain\
    \ all the\ninformation necessary to accomplish its execution tasks.\nThe Inference\
    \ Engine provides the decision-making logic of the controller. It deduces\nthe\
    \ fuzzy control actions by employing fuzzy implications and fuzzy rules of inference.\
    \ In\nmany aspects, it can be viewed as an emulation of human decision-making.\
    \ Finally, the\nDefuzziﬁcation process converts fuzzy control values into crisp\
    \ quantities; that is, it links\na single point to a fuzzy set, given that the\
    \ point belongs to the support of the fuzzy set.\nSensors 2021, 21, 6910\n8 of\
    \ 34\nThere are many de-fuzziﬁcation techniques, the most famous being the center-of-area\
    \ or\ncenter-of-gravity.\n2.2.5. Probabilistic Reasoning\nProbabilistic Reasoning\
    \ states that users can infer plausible models to explain input\ndata. Thus, a\
    \ model can predict an output based on new, unknown input data, which allows\n\
    decisions to be made regarding future actions. In this context of predictions,\
    \ uncertainty\nplays a relevant role for three reasons [53]. First, uncertainty\
    \ can be introduced from noisy\ninput data into the training process of a model.\
    \ Secondly, input data can be consistent with\ndifferent models, and therefore\
    \ which model is more appropriate for the data at hand is\nuncertain. And third,\
    \ a model can have diverse parameters (e.g., the coefﬁcients of linear\nregression)\
    \ and/or different inner structures (e.g., the architecture of ANNs); hence, there\n\
    is uncertainty regarding the speciﬁcations for a concrete model [54].\nFrom a\
    \ general perspective, the basic foundations of Probabilistic Reasoning are\n\
    condensed in the Bayesian learning paradigm [54]. Primarily, probability distributions\
    \ are\nconsidered to represent all uncertainties that can interfere in a model\
    \ (e.g., noise in the input\ndata, the model’s parameters). Then, the basic rules\
    \ of probability theory are considered\nto infer unobserved quantities given the\
    \ observed data. Thus, the process of learning\nfrom data occurs through the transformation\
    \ of the prior probability distributions (deﬁned\nbefore having the input data)\
    \ into posterior distributions (after observing the data).\nThe assumptions mentioned\
    \ above are supported by two of the basic rules of prob-\nability theory. They\
    \ are the sum rule and the product rule, which can be expressed as\nP(x) = ∑y∈Y\
    \ P(x, y) and P(x, y) = P(x)P(y | x), respectively. Here x and y correspond to\n\
    observed or uncertain quantities, taking values in sets X and Y. P(x) is the probability\
    \ of x\nregarding the frequency of observing a particular value. P(x, y) is the\
    \ joint probability of\nobserving x and y, and P(y|x) is the probability of y\
    \ conditioned on observing a concrete x\nvalue. Keeping these two probability\
    \ theory rules in mind, x and y can be integrated into\nthe Bayes’ theorem to\
    \ describe the probability of an event based on the prior knowledge\nof conditions\
    \ that might be related to the event. In the context of Statistical Learning,\
    \ this\ntheorem is stated as P(θ | D, m) = P(D|θ,m)P(θ|m)\nP(D|m)\n. Here, P(D\
    \ | θ, m) is the likelihood of\nparameters θ in model m, P(θ | m) is the prior\
    \ probability of θ, and P(θ | D, m) is the\nposterior probability of θ given data\
    \ x.\nThus, learning is the transformation of prior knowledge or assumptions regarding\
    \ the\nparameters P(θ | m), through data D, into the posterior knowledge about\
    \ the parameters\nP(θ | D, m). Such a posterior distribution then becomes prior\
    \ knowledge for future data\npredictions. Within this framework, the most typical\
    \ methods used over the last few years\nwere Bayesian networks [55]. Other representative\
    \ techniques are Markov networks and\nRandom Fields [56].\n2.2.6. Summary of CI-Based\
    \ Approaches\nHaving presented the families of CI methods usually considered in\
    \ FSC, this section\nintroduces a summary of the methods presented above and their\
    \ strengths and weak-\nnesses (Table 1). First of all, we would like to point\
    \ out that this list of advantages and\ndisadvantages does not refer to a comparison\
    \ between the different categories of methods\nconsidered in this paper, as they\
    \ are often used to solve different types of problems and\ntherefore the comparison\
    \ is not straightforward. Instead, these strengths and weaknesses\nrefer to a\
    \ comparison between CI-based approaches versus non CI-based approaches that\n\
    are used to solve similar categories of problems.\nSensors 2021, 21, 6910\n9 of\
    \ 34\nTable 1. Summary of CI-based approaches reviewed.\nCI Approach\nStrengths\n\
    Weaknesses\nCI-based statistical\nlearning methods\n- Expert knowledge of the\n\
    problem domain where they are applied is not required.\n- No assumptions about\
    \ the characteristics\nof the data available (non-parametric method) are made.\n\
    - They can work properly with medium and\nlarge sized datasets.\n- Expert Statistical\
    \ Learning knowledge\nis required.\n- Their performance is highly dependent\n\
    on the quality and availability of data.\n- They have problems ﬁnding meaningful\n\
    representations of the data when the\ncomplexity of hidden patterns of the data\
    \ is\nvery high (e.g., computer vision).\nArtiﬁcial neural networks\nand Deep\
    \ learning\n- Expert knowledge of the problem is not required\ndomain where they\
    \ are applied.\n- No assumptions about the characteristics of\nthe data available\
    \ (non-parametric method).\n- They can extract complex and non-linear\npatterns\
    \ embedded in data.\n- Work directly on raw data without almost any\nneed for\
    \ feature extraction.\n- Expert Statistical Learning knowledge\nis required.\n\
    - High volumes of data are required.\n- High computational capabilities\nare needed.\n\
    CI-based optimization\nmethods\n- Satisfactory solutions for complex\nproblems.\n\
    - They can work in scenarios with\ntime and computational capabilities\ndeﬁned\
    \ by the user.\n- They are approximate methods,\nso an optimal solution is not\
    \ guaranteed.\n- Expert knowledge is required for\nthe design of the methods.\n\
    Fuzzy systems\n- The methods are capable of modeling\nimpressions and vagueness\
    \ associated\nwith the data of the problem domain.\n- The results are easily interpretable.\n\
    - Expert knowledge associated with\nthe problem domain is required.\n- Not able\
    \ to deal effectively with\nuncertainty associated with the\ndata available.\n\
    Probabilistic Reasoning\n- Able to deal with high levels of\nuncertainty in the\
    \ data available.\n- Unable to deal with complex problems\ncharacterized by data\
    \ representing\ndifferent variables of interest.\n- Difﬁculties in modeling ambiguities\n\
    and inaccuracies in the input data.\n2.3. Motivation\nThe objectives of this section\
    \ are two-fold. First, it reviews the related work at the\npoint where FSC and\
    \ CI meet, in order to identify previous contributions regarding the\nclassiﬁcation\
    \ of FSC problems, and the CI methods used to solve them. Having already\nintroduced\
    \ these previous studies, the ﬁnal part of this section is devoted to presenting\
    \ the\nmain novelty and contributions of this paper.\nIn 2012, Grifﬁs et al. [11]\
    \ focused on the distribution stage of an FSC to present an\noverview of CI-based\
    \ optimization methods that can play a relevant role for problems like\nvehicle\
    \ routing, supply chain risks, and disruptions. The authors emphasized how meta-\n\
    heuristic techniques provide near-optimal solutions to logistics problems. Following\
    \ this\nline of research, in 2016, Wari and Zhu [12] presented an updated survey\
    \ on applying meta-\nheuristics to solve optimization problems in the processing\
    \ (e.g., fermentation, thermal\ndrying, and distillation) and distribution (e.g.,\
    \ warehousing location, production planning,\nand scheduling) stages of an FSC.\
    \ More recently, in 2017, Kamilaris et al. [7] reviewed\narticles on smart farming\
    \ to show how digital technologies can enhance the circularity of\nthe FSC at\
    \ the production stage. They highlighted the problems that can be approached by\n\
    utilizing CI-based Statistical Learning, ANNs, and DL methods.\nComplementary\
    \ to the advances reported by Kamilaris et al. [7], in 2020, Sharma et al. [15]\n\
    and Misra et al. [2] carried out a bibliometric analysis and a review, respectively,\
    \ of CI-\nbased Statistical Learning applications over the whole FSC. Based on\
    \ their results, the\nauthors designed a series of recommendations to design and\
    \ deploy Statistical Learning-\nSensors 2021, 21, 6910\n10 of 34\nbased solutions\
    \ for data-driven decision-making processes in the FSC. In the same year,\nCamarena\
    \ [10] made a critical analysis of what can be done with Artiﬁcial Intelligence,\n\
    without emphasizing any single method in particular, for the transition to a sustainable\n\
    FSC. Lastly, the studies of Liakos et al. [6] and Saiz-Rubio and Rovira-Mas [9],\
    \ in 2018 and\n2020, respectively, presented comprehensive reviews of research\
    \ directed at the application\nof ML in the FSC production stage. The authors\
    \ surveyed how ML can help farmers make\nmore informed decisions on the management\
    \ of agriculture and livestock systems.\nFigure 3 presents a synthesis of the\
    \ studies described above and highlights how this\narticle complements and extends\
    \ the existing literature. Each cited paper is represented\nby a grey circle,\
    \ which can have one or two inner circles (green and blue). Green circles\nrepresent\
    \ FSC stages covered by a study, while blue circles depict the CI approaches\n\
    considered within it. The size of the circle is determined by the number of FSC\
    \ stages and\nCI techniques considered in each article. Thus, a green circle would\
    \ have the biggest size if\nthe paper to which it belongs addresses the four basic\
    \ stages of the FSC. The same logic is\nused for the blue circles: the more families\
    \ of methods a paper considers, the bigger the\ncircle’s size would be. Furthermore,\
    \ we can ﬁnd our research article in the center of the\nﬁgure in the violet circle.\n\
    Figure 3. Motivations and state-of-the-art concepts at the point where FSC and\
    \ CI meet.\nAccording to Figure 3 we can see that there are no research articles\
    \ that present a\ncomprehensive taxonomy at the point where FSC problems and CI\
    \ converge. This means\nthat there are no research studies that consider the problems\
    \ of the four basic FSC stages,\nnor the diversity of the CI methods that can\
    \ be applied to solve them. Instead, most of the\npapers focus on one or two FSC\
    \ stages, and they tend to review the role a unique CI family\nof methods has\
    \ over them. Therefore, we propose a new taxonomy that embraces the\ncomplete\
    \ FSC and the ﬁve families of CI methods most commonly used in the FSC stages.\n\
    Sensors 2021, 21, 6910\n11 of 34\nFurthermore, our proposal extends the previous\
    \ classiﬁcation efforts by adding a new\ncategorization attribute, which indicates\
    \ the type of FSC problem being addressed from\na CI perspective. In addition\
    \ to increasing the classiﬁcation capacity of our taxonomy,\nthis attribute allows\
    \ us to establish a novel mapping between the FSC problems and the\ntypologies\
    \ of CI problems that can be used to approach the former ones. By doing so,\n\
    we contribute to facilitating the choice of the most convenient family of CI methods\
    \ to\nuse depending on the FSC problem at hand. This represents a valuable and\
    \ novel source\nof information for FSC researchers and practitioners who aim to\
    \ incorporate CI-based\nsolutions into their FSC applications.\n3. A Taxonomy\
    \ of CI-Based Problems in the Food Supply Chain\nThis section introduces details\
    \ of the taxonomy proposed. First, Section 3.1 presents\nthe methodology followed\
    \ to design the taxonomy. Then, Sections 3.3 and 3.4 show the\ntaxonomy’s structure\
    \ and describe its parts. Finally, Section 3.5 gives an overview of the\ncategorization\
    \ of FSC problems, from a CI perspective, using the taxonomy.\n3.1. Methodology\
    \ for the Design of the Taxonomy\nThis section introduces the methodology followed\
    \ to build the taxonomy proposed.\nFirst, we note that this research paper does\
    \ not aim to carry out a systematic literature\nreview or survey. Instead, our\
    \ scope lies in searching and reviewing the representative\nliterature to propose\
    \ a taxonomy that describes and categorizes FSC problems and how\nthey are solved\
    \ from a CI-based perspective. As such, the taxonomy proposed does not seek\n\
    to identify all details associated with the FSC problems to maintain its comprehensibility\n\
    and size. It is designed according to core characteristics that may alter the\
    \ complexity and\nmodeling of FSC problems from the CI perspective.\nWith these\
    \ ideas in mind, Figure 4 shows the methodology followed to build the\ntaxonomy\
    \ introduced in this research paper. This methodology follows a structure-based\n\
    literature review that includes the steps depicted in Figure 4. The ﬁrst step\
    \ is named Scope\n& Research Question, which aims to limit the areas of knowledge\
    \ to be consulted; that is,\nthe point where FSC and CI converge. For this step,\
    \ the research questions that guided\nour search were: “What are the most common\
    \ FSC problems reported in the literature?”,\n“What are the CI methods typically\
    \ used to approach these problems?”, “How can FSC\nbe categorized from a CI perspective?”,\
    \ and “Is there any taxonomy to categorize FSC\nproblems considering a CI approach?”.\n\
    Figure 4. Steps followed to build the proposed taxonomy.\nThe following step deﬁned\
    \ the search set-up. We deﬁne the keywords, periods,\nonline resources, and criteria\
    \ to search and review the scientiﬁc literature. The keywords\nconsidered were:\
    \ Food Supply Chain(s), agrifood, ﬁsh farming, agriculture, livestock,\nSensors\
    \ 2021, 21, 6910\n12 of 34\nproduction, processing, distribution, logistics, retail,\
    \ computational intelligence machine\nlearning, deep learning, meta-heuristics,\
    \ fuzzy systems, and probabilistic methods. The\nperiod was between 2012 and 2020,\
    \ and the bibliographic resources searched were the\nWeb of Science, Scopus, and\
    \ Google Scholar. Finally, the main criteria for selecting and\nreviewing the\
    \ literature was that they be review or survey papers. The latter is based on\n\
    the fact that this type of paper offers a general and consolidated overview of\
    \ the state-of-\nthe-art concerning CI-based FSC problems reported in the literature.\
    \ Moreover, these types\nof papers allowed us to know if any taxonomy was previously\
    \ proposed to classify the\nFSC problems.\nThe next stage in Figure 4 is search,\
    \ select, and review. Using the search set-up\nmentioned above, we identiﬁed the\
    \ survey and review papers introduced in the Motivation\nSection 2.3. Next, we\
    \ analyzed the FSC problems considered in these papers, the FSC stages\nwhere\
    \ the problems were located, and the families of CI methods usually considered\
    \ to\napproach these FSC problems.\nBased on the ﬁndings mentioned above, we moved\
    \ to the ﬁnal step of the methodology\nshown in Figure 4. The objective was to\
    \ design a new taxonomy that embraces the\ncomplete FSC and the ﬁve families of\
    \ CI methods most commonly used in the FSC stages.\nThis taxonomy also intends\
    \ to expand the previous classiﬁcation efforts by adding a\nnew categorization\
    \ attribute, indicating the type of FSC problem addressed from a CI\nperspective.\
    \ Thus, we characterized how the FSC problems identiﬁed in the previous\nstep\
    \ can be modeled from a CI perspective. To do so, we considered the typologies\n\
    of problems in the CI domain (problem-solving, uncertain knowledge and reasoning,\n\
    knowledge discovery and function approximation, and communication and perception)\n\
    that better suited the families of CI methods considered in the studies reviewed.\n\
    Having built the taxonomy, we checked its robustness and ability to discriminate\n\
    papers that approached different FSC problems. To accomplish this aim, we extracted\n\
    relevant references cited by the review and survey papers previously identiﬁed,\
    \ as well as\nthe recent literature, and mapped them into the proposed taxonomy.\
    \ This is shown in the\nfollowing section, where the taxonomy is introduced, to\
    \ validate its classiﬁcation power.\n3.2. The Taxonomy Overview\nThe taxonomy\
    \ aims, ﬁrstly, to extend the previous classiﬁcation efforts on FSC prob-\nlems\
    \ to cover all stages of Agrifood supply chains; and, secondly, to add a new level\
    \ of\ncategorization that allows typologies of FSC problems to be mapped to typologies\
    \ of CI\nproblems. We can see the structure of the proposed taxonomy in Figure\
    \ 5. As we can see,\nin level one, the taxonomy includes the four basic stages\
    \ of an FSC that were introduced in\nSection 2.2.1; that is, production, processing,\
    \ distribution, and retail. Then, in level two, it\ncontains the different categories\
    \ of FSC problems that we can ﬁnd in each stage. It is impor-\ntant to clarify\
    \ that although these FSC problems have been reported previously, in related\n\
    studies [2,6–12], to the best of our knowledge, this is the ﬁrst time that their\
    \ deﬁnitions are\nuniﬁed and consolidated in one taxonomy. Lastly, in level three,\
    \ the taxonomy introduces\nthe typologies of problems from a CI perspective. Speciﬁcally,\
    \ this level seeks to classify\nthe FSC problems depending on how they can be\
    \ modeled and solved by CI methods.\nHaving presented the structure of the taxonomy,\
    \ the following Section 3.3 details\nthe FSC problems identiﬁed for the production,\
    \ processing, distribution, and retail stages.\nThose problems represent the second\
    \ level of the taxonomy. They are formally deﬁned\nfrom a purely FSC perspective,\
    \ and we clearly state the key objective of each problem\nwithin the particular\
    \ chain stage where it is identiﬁed. Afterwards, Section 3.4 presents\nthe third\
    \ level of the taxonomy that contains the attributes to categorize the FSC problems\n\
    of level 2 under a CI approach. These attributes correspond to the four typologies\
    \ of CI\nproblems that are more commonly used in the literature to address FSC\
    \ problems. Finally,\nSection 3.5 introduces the classiﬁcation and mapping of\
    \ FSC problems according to how\nthey can be modeled by CI typologies.\nSensors\
    \ 2021, 21, 6910\n13 of 34\nFigure 5. A taxonomy of computational intelligence\
    \ in an FSC.\n3.3. Level 2: Identiﬁcation and Deﬁnition of Food Supply Chain Problems\n\
    In this section, we present the FSC problems identiﬁed for each of the FSC stages\n\
    shown in Figure 5, which corresponds to the second level of our taxonomy. These\
    \ problems\nare formally deﬁned in more detail below.\n3.3.1. Production Problems\n\
    The FSC production stage can be split into three main production systems: ﬁsh\n\
    farming, agriculture, and livestock. These three production systems and their\
    \ associated\nproblems can be observed in Figure 6 and they are deﬁned below.\n\
    Figure 6. FSC problems in the production stage.\nFish farming (also known as pisciculture)\
    \ is the production system concerned with\nraising ﬁsh in closed environments,\
    \ such as ponds or tanks, for human consumption. Nowa-\ndays nearly half of the\
    \ ﬁsh consumed in the word are raised in artiﬁcial environments [57].\nFish farming\
    \ production has a high degree of complexity as it involves interrelated physical\n\
    (e.g., water and nutrient supply), chemical (e.g., pH, oxygen), and environmental\
    \ (e.g.,\nwaste generated) elements. Therefore, the management of this process\
    \ requires advanced\nsensing, control, and communication technologies as well\
    \ as expert knowledge to make\nefﬁcient and sustainable decisions, and maximize\
    \ the productivity. Within this context, the\nSensors 2021, 21, 6910\n14 of 34\n\
    most typical CI-based processes reported in the literature are ﬁsh weight estimation\
    \ [58],\nproduction estimation, and optimization [59]. Their deﬁnitions are presented\
    \ below.\n•\nFish weight estimation: This process estimates ﬁsh weight considering\
    \ morphological\nfeatures (e.g., length, width, and mass).\n•\nProduction estimation\
    \ and optimization: This process is centered on the optimiza-\ntion of ﬁsh production\
    \ and forecasting of seasonal demand to adjust the production.\nTo accomplish\
    \ such aims, the optimization of production is carried out by monitoring\ncrucial\
    \ elements of ﬁsh ponds, like water oxygen levels, nutrients, and food supply,\n\
    which inﬂuence the growth of ﬁsh. Meanwhile, historical records of seasonal de-\n\
    mand are stored and continuously analyzed to determine the most suitable levels\
    \ of\nproduction depending on the year and season.\nThe following production system\
    \ considered in this study is agriculture, in particular,\nhorticulture. Horticulture\
    \ is the greenhouse industry dedicated to plant cultivation and\nprocessing of\
    \ different types of crops for food and commercial consumption (e.g., ﬂowers,\n\
    fruits and nuts, vegetables and herbs). The main challenges of these production\
    \ systems\nare to improve plant growth, yields, quality, nutritional value, and\
    \ resistance to insects,\ndiseases, and environmental stress.\nIn order to achieve\
    \ these improvements, different processes are managed to try and\nmaintain a balance\
    \ between efﬁciency, productivity, and sustainability, such as monitoring\nand\
    \ controlling indoor-outdoor climate conditions, crop management, and production\
    \ fore-\ncasting, among others. They are commonly approached in the specialized\
    \ literature [6,9,60]\nin open-ﬁeld agriculture and intensive horticulture. Within\
    \ the most representative pro-\ncesses, we ﬁnd the crop yield and harvest forecasting\
    \ [60–62], crop protection [63,64],\nweather prediction and irrigation management\
    \ [65,66], and site-speciﬁc nutrient manage-\nment [67,68]. These processes, which\
    \ are shown in Figure 6, are deﬁned as follows.\n•\nCrop yield and harvesting\
    \ prediction: This problem is focused on yield estimation\nto match crop supply\
    \ with demand and on crop management to increase productivity.\n•\nCrop protection:\
    \ This is based on the identiﬁcation and diagnosis of biotic (infesta-\ntions,\
    \ diseases, and weeds) and abiotic (nutrients, water deﬁciency) stress factors\
    \ that\naffect crop productivity.\n•\nWeather prediction and irrigation management:\
    \ This problem is mainly concerned\nwith weather forecasting for the optimal use\
    \ of water, which enables the design and\ndeployment of crop irrigation scheduling\
    \ and planning.\n•\nSite-speciﬁc nutrient management: This is based on the management\
    \ of soil quality\nto determine which nutrients need to be supplied in order to\
    \ maintain the chemical\ncharacteristics required for the crop under consideration.\n\
    Lastly, the third production system considered for the production stage is livestock.\n\
    This production system is dedicated to the growth and management of domestic animals\n\
    (e.g., cattle, sheep, and goats) raised in agricultural settings to generate food\
    \ products like\nmeat, eggs, or milk, among others. Livestock can be carried out\
    \ through either extensive or\nintensive systems. Extensive systems involve animals\
    \ roaming grasslands (usually under\nthe supervision of a herdsman). Diversely,\
    \ intensive livestock is located in closed infras-\ntructures and is equipped\
    \ with ICT technology, which enables animals to be monitored\nin real-time. Within\
    \ these production systems the most typical problems we come across\nare grassland\
    \ monitoring [69], animal welfare [70], animal behavior tracking [71], and\nlivestock\
    \ production prediction and optimization [72,73], as shown in Figure 6. The formal\n\
    deﬁnitions of these problems from an FSC perspective are listed below.\n•\nGrassland\
    \ monitoring: This problem is related to the accurate identiﬁcation of grass-\n\
    land inventories in order to discriminate between the most suitable types for\
    \ live-\nstock purposes.\n•\nAnimal welfare: This is focused on the pattern classiﬁcation\
    \ of ingestive behavior in\ngrazing animals for studies of animal nutrition, growth,\
    \ and health.\nSensors 2021, 21, 6910\n15 of 34\n•\nAnimal behavior tracking:\
    \ This is based on the use of behavior analysis to detect\nearly signs of health\
    \ issues and promote early intervention.\n•\nLivestock production: This problem\
    \ is centered on predictions and estimations of\nfarming parameters to optimize\
    \ the economic-energy efﬁciency and sustainability of\nproduction systems.\n3.3.2.\
    \ Processing Problems\nOnce the raw materials of food products have been grown,\
    \ they are delivered to the\nnext step of the FSC, or ‘processing’. Different\
    \ industrial processes (e.g., washing, disinfect-\ning, packaging) are carried\
    \ out in this stage to transform the raw output of production into\nedible food\
    \ products. Depending on the production system under consideration and the\nfood\
    \ products obtained from them, diverse industrial processes can be followed to\
    \ obtain\nthe goods that move on to the distribution stage. However, in spite\
    \ of such production\nparticularities, we have identiﬁed a set of common problems\
    \ that could occur in the three\nproduction systems presented in the section above.\
    \ These problems are shown in Figure 7\nand they are: demand prediction [74],\
    \ production planning for distribution [75], prediction\nof post-harvest losses\
    \ [76], and manufacturing industry processes, such as cooking, drying,\nand others\
    \ [77].\nFigure 7. FSC problems in the processing stage.\n•\nDemand prediction:\
    \ This problem in concerneed with the demand prediction of food\nrequirements\
    \ to avoid overstocking, overproduction, and over-utilization of resources.\n\
    The key idea is to estimate the quantity of food products that will be sold to\
    \ deﬁne\nhow much raw material needs to be processed.\n•\nProduction planning\
    \ for distribution: This is centered on production planning to\nmatch distribution\
    \ requirements. This problem is mostly determined by the sale\nvolumes that a\
    \ particular food product is expected to have.\n•\nPrediction of post-harvest\
    \ losses: This is focused on making estimations of food\nlosses associated with\
    \ the processing procedures carried out after harvesting raw\nmaterials coming\
    \ from the production stage.\n•\nFood manufacturing industry: This is associated\
    \ with the optimization of the pro-\ncessing technologies required to transform\
    \ raw foods into edible food (e.g., thermal,\ndrying, contact cooking, microwave\
    \ heating, etc.). These processes are performed\nusing industrial machinery.\n\
    3.3.3. Distribution Problems\nIn the third step of the food supply chain, food\
    \ products ready for human consumption\nare received from the processing stage\
    \ to be delivered to end-consumers. Speciﬁcally,\nﬁnished products arrive at warehouses,\
    \ and from there, the shipment department is\nin charge of deﬁning the most suitable\
    \ strategy to deliver products to end-consumers.\nThe essential purpose is to\
    \ distribute food products on time by the date speciﬁed in the\nretail stage.\n\
    Sensors 2021, 21, 6910\n16 of 34\nFor this particular stage of the FSC, the most\
    \ common problems reported in the spe-\ncialized literature are shown in Figure\
    \ 8 and deﬁned below. These problems include vehicle\nrouting and ﬂeet management\
    \ [78,79], storage location assignment [80,81], prediction of\nsupply chain risks\
    \ and disruptions [82,83], shelf life prediction and maturity level [84–86],\n\
    demand forecasting [87], and last mile delivery [88].\nFigure 8. FSC problems\
    \ in the distribution stage.\n•\nVehicle routing and ﬂeet management: This is\
    \ focused on determining the most\noptimal route for the delivery of food under\
    \ different scenario constraints (e.g., size of\nthe ﬂeet, fuel availability,\
    \ etc.).\n•\nStorage location assignment problem: This problem is concerned with\
    \ deciding the\nmost suitable way to store food products in a set of warehouses\
    \ in order to cope with\ndaily demand operations.\n•\nPrediction of supply chain\
    \ risks and disruptions: This is concerned with the fore-\ncasting of potential\
    \ disruptions in the logistics of food products and their associated\nfood losses.\n\
    •\nShelf life prediction and maturity level: This problem is related to the forecasting\
    \ of\nshelf life based on data sensed during the distribution process.\n•\nDemand\
    \ forecasting: This consists of understanding demand behaviors and forecast-\n\
    ing user demand generated from the retail stage. Thus, it is possible to optimize\
    \ the\ndelivery routes and warehouse locations used during the distribution stage.\n\
    •\nLast mile delivery: This problem is dedicated to the delivery of food products\
    \ using\nthe local road transport network (last mile) of cities.\n3.3.4. Retail\
    \ Problems\nIn the ﬁnal part of the FSC, we ﬁnd the retail stage. At this point,\
    \ food products are\nreceived through the distribution channels, ready for sale.\
    \ This stage encompasses the\nconcept of an ’end-consumer’, which could be supermarkets\
    \ or clients that go to these\nplaces to buy food products. The most common problems\
    \ identiﬁed in the literature for\nthis stage of the supply chain are deﬁned below\
    \ and are also summarized in Figure 9.\nLastly, we characterized the retail stage\
    \ (Figure 5). Retail-related problems commonly\naddressed with CI, in this link\
    \ of the FSC, are diet and nutrition applications [89,90],\nfood consumption and\
    \ food waste [91,92], consumer demand, perception and buying\nbehavior [93,94],\
    \ dynamic discounting based on the sell-by date [95], and day demand\nprediction\
    \ and inventory management [74].\nSensors 2021, 21, 6910\n17 of 34\nFigure 9.\
    \ FSC problems in the retail stage.\n•\nDiet and Nutrition: This is based on estimating\
    \ nutrient values using the classiﬁcation\nof food dishes and dietary assessment.\n\
    •\nFood consumption and food waste: This problem is associated with the identification\n\
    and prediction of food waste based on the buying and storage behavior of end-customers.\n\
    •\nConsumer demand, perception, and buying behavior: This problem is focused on\n\
    determining consumer proﬁles in order to predict buying behaviors and support\
    \ the\nmanagement of shop counters.\n•\nDynamic discounting based on sell-by date:\
    \ This is centered on automated price\nchanges at supermarkets based on the sell-by\
    \ date. The objective is to offer larger\ndiscounts for items with the shortest\
    \ remaining shelf life.\n•\nDaily demand prediction and inventory management:\
    \ This problem consists of\npredicting daily demand to better manage product stocks\
    \ at supermarkets.\n3.4. Level 3: Typologies of CI Problems\nIn this section,\
    \ we introduce the attributes that represent the most typical typologies\nof CI\
    \ modeling approaches used in the FSC literature. The attributes correspond to\
    \ the\nthird level of the taxonomy shown in Figure 5, and they are presented below.\n\
    •\nProblem-solving: This category is related to problems of complex decision-making\n\
    processes that need to be solved, keeping two key objectives in mind: quality\
    \ of the\nsolution and the computational time required to solve it. As a common\
    \ denominator,\nthis attribute categorizes problems that are NP-hard. Thus, this\
    \ class embodies FSC\nproblems for which there is no certainty that the method\
    \ can optimally solve them\nin a polynomial time (time complexity [96]) with respect\
    \ to the input data size. This\ncategory includes, for example, optimization or\
    \ search problems such as the vehicle\nrouting problem in the transportation stage\
    \ of the FSC.\n•\nUncertain knowledge and reasoning: This category corresponds\
    \ to FSC problems\ncharacterized by having partially observable, non-deterministic,\
    \ vague, or imprecise\ndata. In such uncertain scenarios, this attribute represents\
    \ problems that can be\naddressed in two possible ways. First, by using an approach\
    \ that acts based on\nassumptions of uncertain input data in order to give a probabilistic-based\
    \ solution\nto the problem at hand. Or second, by representing and reasoning with\
    \ the partially\navailable information in a manner similar to the way that humans\
    \ express knowledge\nand summarize data. This second approach allows non-exact\
    \ data to be represented\nin linguist terms in order to make decisions within\
    \ certain margins of correctness.\n•\nKnowledge discovery and function approximation:\
    \ This class represents FSC prob-\nlems that are distinguished by having large\
    \ volumes of data, which enable under-\nstanding and useful knowledge to be extracted\
    \ from them. Such knowledge could be\nused to make either predictions of future\
    \ events or discrimination and recognition of\npatterns. These types of problems\
    \ can usually be addressed with methods that can be\ntrained using the available\
    \ data to learn a speciﬁc task.\n•\nCommunication and perception: This category\
    \ consists of FSC problems focused\non the automatic extraction, analysis, and\
    \ understanding of information obtained\nSensors 2021, 21, 6910\n18 of 34\nfrom\
    \ digital images, texts, or voice recordings. It is worth noting that within the\
    \ FSC\ndomain, most problems solved using a communication and perception approach\
    \ are\nfocused on designing and developing autonomous computer vision systems.\
    \ These\nsystems are able to process high-dimensional data to support decision-making;\
    \ from\nobject detection to video tracking and object recognition.\n3.5. Mapping\
    \ Process between Level 2 and Level 3: Classiﬁcation of FSC Problems from a\n\
    CI Perspective\nThis section presents the categorization of FSC problems previously\
    \ identiﬁed in\nSection 3.3 from a CI perspective. Speciﬁcally, every problem\
    \ is categorized according\nto the four typologies of CI problems that we described\
    \ above: problem-solving, uncer-\ntain knowledge and reasoning, knowledge discovery\
    \ and function approximation, and\ncommunication and perception. In addition,\
    \ using relevant work from the recent FSC\nliterature, we show how the taxonomy\
    \ is able to effectively and robustly discriminate these\npapers. Thus, Section\
    \ 3.5.1 is devoted to classifying the FSC problems coming from the\nproduction\
    \ stage. Then, Section 3.5.2 introduces the classiﬁcation of problems deﬁned for\n\
    the processing stage. Lastly, Sections 3.5.3 and 3.5.4 expose the categorization\
    \ of problems\nfor the distribution and retail phases, respectively.\n3.5.1. Classiﬁcation\
    \ of Production Problems\nFigure 10 presents the categorization of production\
    \ problems for the ﬁsh farming\nand livestock cases. The attributes of the taxonomy\
    \ are depicted on the left in Figure 10,\nwhereas the ﬁsh farming (in purple)\
    \ and livestock (in red) problems are found on the right.\nThe problems and attributes\
    \ are connected by gray bars that connect the ways in which a\nspeciﬁc problem\
    \ can be modeled from a CI perspective. Fish weight estimation, grassland\nmonitoring,\
    \ animal welfare, and animal behavior tracking are problems that are classiﬁed\n\
    using the communication and perception attribute. This is justiﬁed due to the\
    \ fact that\nthese problems are usually characterized by having image and video\
    \ records as input\ndata (non-structured data). Having such data implies the use\
    \ of automatic information\nextraction by means of computer vision systems, based\
    \ on DL, which allow extraction of\nhigh-dimensional patterns embedded in image\
    \ and video data [97–103].\nFigure 10. Fish farming and livestock problems classiﬁed\
    \ by the proposed taxonomy.\nThe production estimation and optimization and livestock\
    \ production problems in\nFigure 10 are classiﬁed using the knowledge discovery\
    \ and function approximation and\nuncertain knowledge and reasoning attributes.\
    \ Such categorization is determined by the\ncentral characteristics of these problems,\
    \ which are concerned with the prediction and\noptimization of production values\
    \ using historical data records (structured data) [104,105].\nBesides, production\
    \ forecasting contains uncertainties regarding external factors of the\nproduction\
    \ systems, which encourage the use of probabilistic methods, such as the studies\n\
    carried out by [106,107].\nSensors 2021, 21, 6910\n19 of 34\nFigure 11 shows the\
    \ categorization of agriculture problems. As we can seen, crop\nprotection, which\
    \ usually involves video and image records, is categorized as a com-\nmunication\
    \ and perception problem commonly used in DL methods like convolutional\nand recurrent\
    \ neural networks [108–110]. On the other hand, the remaining agricultural\nproblems\
    \ can be categorized under knowledge discovery and function approximation,\nproblem-solving,\
    \ and uncertain knowledge and reasoning attributes as explained below.\nIn terms\
    \ of knowledge discovery and function approximation, this attribute categorizes\n\
    problems focused on the prediction of greenhouse conditions for the optimal management\n\
    of crop production, nutrients, and irrigation supply. This can be done using supervised\n\
    learning techniques that forecast variables of interest like temperature, water,\
    \ or nitro-\ngen [6,111]. Secondly, the problem-solving attribute categorizes\
    \ the weather prediction and\nirrigation management and the site-speciﬁc management\
    \ problems. These problems can be\ndeﬁned as optimization scenarios in which we\
    \ can ﬁnd concrete values associated with\nweather, irrigation, and nutrients.\
    \ In this case, the most common approach to solving them\nis based on meta-heuristics\
    \ [112–114].\nFinally, the uncertain knowledge and reasoning attributes characterize\
    \ the same prob-\nlems that fall into the knowledge discovery and function approximation\
    \ attribute. The\ndifference lies in the fact that the agriculture problems are\
    \ approached as decision systems\nunder uncertainty. In this case, fuzzy logic\
    \ is the most suitable strategy to accomplish such\nan aim [115–117] Speciﬁcally,\
    \ the fuzzy approach allows us to evaluate whether particular\nactions need to\
    \ be taken according to sensed and predicted conditions coming from agri-\nculture\
    \ systems (e.g., optimal management strategies for the control of temperature\
    \ control\ninside greenhouse systems).\nFigure 11. Agriculture problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.2. Classiﬁcation of Processing Problems\nHaving\
    \ presented the production stage, Figure 12 features the categorization of prob-\n\
    lems in the processing stage. Any of the depicted FSC problems are classiﬁed using\
    \ the\ncommunication and perception attribute, mainly because the type of input\
    \ data they handle\nis not associated with images or video records. In contrast,\
    \ when the aim is to determine\nfuture scenarios based on the available data,\
    \ all problems tend to have historical data as\ntheir input data.\nPrecisely,\
    \ the knowledge discovery and function approximation attribute categorizes\nthe\
    \ prediction of post-harvest losses and demand prediction problems as being super-\n\
    vised learning problems, whose aims are to claasify and forecast the objective\
    \ variable.\nFor instance, we consider research from [8,118] to be within this\
    \ category. Following the\ntaxonomy’s attributes in Figure 12, the problem-solving\
    \ attribute can represent and model\ndemand predictions, the food manufacturing\
    \ industry, and production planning for dis-\ntribution problems. In this scenario,\
    \ they are classiﬁed as being optimization problems,\nwith the objective of optimizing\
    \ procedures related to the problems listed. An example, for\ninstance, could\
    \ be the optimization of industrial manufacturing processes, like heating and\n\
    Sensors 2021, 21, 6910\n20 of 34\ndrying, using meta-heuristic techniques. Examples\
    \ of studies categorized by the taxonomy\nof the previously mentioned approaches\
    \ are found in [119,120].\nLastly, the uncertain knowledge and reasoning attribute\
    \ system also classiﬁes produc-\ntion planning for distribution problems. Probabilistic\
    \ methods tend to be used to approach\nthese kind of problems as production planning\
    \ can incorporate uncertainty coming from\nprocesses that are not directly related\
    \ to the production process, which can cope with\nprobability theory [121]. An\
    \ example of this last situation could be a change in the delivery\ndate due to\
    \ delays attributable to the weather [122].\nFigure 12. Processing problems classiﬁed\
    \ by the proposed taxonomy.\n3.5.3. Classiﬁcation of Distribution Problems\nFigure\
    \ 13 exhibits the classiﬁcation of FSC problems in the distribution stage. Unlike\n\
    the two previous stages (production and processing), the predominant approaches\
    \ here are\nthe ones imposed by the problem-solving and knowledge discovery and\
    \ function approxi-\nmation attributes. The former attribute categorizes vehicle\
    \ routing and ﬂeet management,\nthe storage location assignment problem, and last\
    \ mile delivery problems, as they are\ndevoted to optimizing routing and delivery\
    \ situations. The purpose of these applications\nis to optimize, using meta-heuristics,\
    \ a concrete goal under different constraints; for in-\nstance, ﬂeet size, available\
    \ fuel, and others. Representative studies that fall in this category\nare [123–127].\n\
    The knowledge discovery and function approximation attribute includes prediction\n\
    of chain and disruptions, a shelf life prediction and maturity level, and demand\
    \ forecasting\nproblems. This attribute classiﬁes these problems under a supervised\
    \ learning perspective,\nwhere the aim is to predict expected values, such as\
    \ we can see in research carried out\nin [84,128–131]. For instance, potential\
    \ disruptions to the cold food products chain, or an\nestimation of how much product\
    \ volume needs to be distributed to meet retail demands.\nFigure 13. Distribution\
    \ problems classiﬁed by the proposed taxonomy.\n3.5.4. Classiﬁcation of Retail\
    \ Problems\nFinally, Figure 14 introduces the classification of problems in the\
    \ retail stage of\nthe FSC. In this last step, the communication and perception\
    \ attribute appears once\nSensors 2021, 21, 6910\n21 of 34\nagain to represent\
    \ the problems in which the input data correspond to non-structured\ndata, such\
    \ as images (dynamic discounting, daily demand prediction, and inventory\nmanagement)\
    \ [95,132–135]. For these particular cases, the problems can be modeled using\n\
    DL techniques to determining price discounts based on stock levels inside supermarkets\n\
    and by managing inventories according to food product existence.\nContrarily,\
    \ the knowledge discovery and function approximation attribute includes\nproblems\
    \ associated with the extraction of patterns (food consumption and food waste),\n\
    the prediction of future values related to consumer demand and buying behavior,\
    \ and the\ngeneration of healthy menus or estimating nutritional values. Research\
    \ articles on this\nattribute include [89,90,136–139]. Furthermore, this attribute\
    \ can also classify the dynamic\ndiscounting and daily demand prediction and inventory\
    \ management problems when\ntheir input data corresponds to structured information\
    \ like historical records.\nIn addition to the attributes mentioned above, the\
    \ uncertain knowledge and reasoning,\nand problem-solving attributes can be used\
    \ to categorize a couple of problems in the retail\nstage. Those problems are\
    \ consumer demand, perception, and buying behavior, as well\nas daily demand prediction\
    \ and inventory management. Consumer demand, perception,\nand buying behavior\
    \ can be approached with a probabilistic system [140–142], for instance,\nuncertainty\
    \ concerning what food products are expected to be bought. Meanwhile, daily\n\
    demand prediction and inventory management can be addressed with an optimization\n\
    paradigm [143,144]. For this case, the aim is to optimize stock levels in such\
    \ a way that\nfood waste can be decreased or even to avoiding over-stocking issues\
    \ completely.\nFigure 14. Retail problems classiﬁed by the proposed taxonomy.\n\
    4. Guidelines for the Use of Computational Intelligence Approaches in the Food\n\
    Supply Chain\nHaving presented and validated the taxonomy of FSC problems, this\
    \ section presents\na set of guidelines for researchers and practitioners in FSC\
    \ for the use of CI within this\ndomain (Figure 15). Concretely, we try to guide\
    \ the users to (1) select the typology of a\nCI problem that they are addressing;\
    \ and (2) identify what families of CI methods could\nbe more suitable for the\
    \ problem at hand. The latter does not mean that in all cases the\nfamily of methods\
    \ suggested is the most appropriate, as this may depend on the speciﬁc\ncharacteristics\
    \ of the problem being addressed.\nThe guidelines depicted in Figure 15 start\
    \ with a basic question posed to the user:\n“What is the purpose and modeling\
    \ characteristics of the problem at hand?” (it could be\ncommunication and perception,\
    \ uncertain knowledge and reasoning, knowledge discovery\nand function approximation,\
    \ and problem-solving). If the purpose is the automatic analysis\nand extraction\
    \ of information from digital images to decide on the action to be taken\nregarding\
    \ the management of food supply systems (communication and perception), the\n\
    suitable family of methods would be deep neural networks (e.g., convolutional\
    \ neural\nnetworks). This family of CI methods enables the creation of computer\
    \ vision systems,\nwhich allows the environment of object characteristics to be\
    \ perceived in a visual way.\nBased on this visual analysis, these systems communicate\
    \ or recommend actions that\nSensors 2021, 21, 6910\n22 of 34\nachieve desired\
    \ states or match predeﬁned conditions (e.g., identify the quality of potatoes\n\
    in order to evaluate the units that are either damaged or edible).\nFigure 15.\
    \ Guidelines for the method selection problem in the food supply chain. Pd: production,\
    \ Ps:\nprocessing, D: distribution, R: retail.\nIf the objective of the user is\
    \ to handle problems characterized by partially observable,\nnon-deterministic,\
    \ or imprecise data (uncertain knowledge and reasoning), fuzzy systems\nor probabilistic\
    \ methods are recommended. For the former CI approach, it is important\nto highlight\
    \ that fuzzy systems need to be paired with hardware (e.g., PID controllers)\n\
    to work properly in food applications. This is due to the fact that hardware components\n\
    allow decisions made by fuzzy systems to be translated into actions (e.g., management\n\
    of nutrients and irrigation supply inside a greenhouse system depending on conditions\n\
    associated with temperature). Probabilistic methods are suitable for making estimations\
    \ of\nrelevant variables (e.g., planning production according to seasonal demand)\
    \ in scenarios\nwith partially observable data.\nWhen the users’ aim is directed\
    \ at making predictions from historical data, making\nclassiﬁcations that discriminate\
    \ between data categories, or ﬁnding hidden patterns in data,\nthe best modeling\
    \ approach to use is knowledge discovery and function approximation.\nFirstly,\
    \ for predictions and classiﬁcations, the user should determine the type of input\n\
    data at hand. In general terms, the input data can be structured (e.g., historical\
    \ records,\ntabular data) or unstructured (e.g., video, images). In the former,\
    \ and depending on the\ndata size, the supervised learning techniques are the\
    \ CI methods to be used when facing\nsmall, medium, and large data no bigger than\
    \ 40–50 gigabytes. Supervised DL, how-\never, is the recommended approach for\
    \ big datasets. In terms of making predictions and\nclassiﬁcations when using\
    \ unstructured data, supervised DL would be the most suitable\nlearning approach;\
    \ while unsupervised ML or unsupervised DL are the recommended\nCI approaches\
    \ for pattern analysis. Finally, as we can see in Figure 15, the other category\n\
    of problems that users might face is problem-solving. In this case, the user’s\
    \ aim is to\noptimize particular values in order to achieve a desired level of\
    \ performance. As such,\nthe above-suggested approaches are therefore all meta-heuristics\
    \ (e.g., EC, SI, and local\nsearch-based techniques).\nIn addition to the analyses\
    \ presented above, the bottom part of Figure 15 also depicts\nwhich FSC stages\
    \ the four CI modeling approaches (and their associated methods) are\nusually\
    \ applied in. Fuzzy systems and probabilistic approaches are typically considered\
    \ for\ncontrol applications in the production, processing, and retail stages.\
    \ In contrast, optimiza-\ntion with meta-heuristics and prediction-classiﬁcation-pattern\
    \ analysis with ML and DL\nare modeling perspectives that are considered in the\
    \ entire FSC process. The contributions\nSensors 2021, 21, 6910\n23 of 34\nof\
    \ communication and perception approaches using DL methods tend to be more typically\n\
    focused on the production and retail stages.\n5. Conclusions\nThis ﬁnal section\
    \ introduces the main reﬂections drawn from the research carried out\nin this\
    \ paper. Section 5.1 introduces the summary and conclusions. Then, Section 5.2\
    \ details\na set of challenges and research opportunities to encourage further\
    \ exploration and use of\nthe possible contributions that CI might bring to the\
    \ FSC ﬁeld.\n5.1. Summary\nThis paper has proposed a new and comprehensive taxonomy\
    \ of FSC problems\nunder a CI paradigm for three representative supply chains:\
    \ agriculture, ﬁsh farming,\nand livestock. The taxonomy was built based on three\
    \ levels in order to categorize FSC\nproblems according to how they can be modeled\
    \ using CI approaches. The ﬁrst and second\nlevels are focused on identifying\
    \ the chain stage (production, processing, distribution,\nand retail) and the\
    \ speciﬁc FSC problem to be addressed (e.g., vehicle routing problems\nin the\
    \ distribution stage). The third level presents the typologies of FSC problems\
    \ from\na CI perspective, and aims to categorize FSC problems depending on how\
    \ they can be\nmodeled and solved by CI methods. In the third level of the taxonomy\
    \ we have deﬁned\nfour attributes, presented as follows, (1) problem solving,\
    \ which is in charge of classifying\nFSC problems focused on optimizing processes;\
    \ (2) uncertain knowledge and reasoning,\nwhich concers problems that have partially\
    \ observable, non-deterministic, incomplete, or\nimprecise data; (3) knowledge\
    \ discovery and function approximation, which has the role\nof categorizing problems\
    \ that aim to make predictions of future scenarios, classiﬁcation of\nvariables,\
    \ or analysis of patterns embedded in data; (4) communication and perception,\n\
    groups FSC problems that involve computer vision systems to sensing and suggesting\n\
    plausible actions to take in order to intervene in such environments.\nTo check\
    \ the robustness of the taxonomy, we categorized FSC problems with CI\nmethods,\
    \ especially in the production, processing, distribution, and retail stages. Here,\
    \ it is\nrelevant to highlight that we introduced a set of uniﬁed deﬁnitions for\
    \ these problems. As\na result, we were able to draw some interesting conclusions.\
    \ In the ﬁsh and livestock cases\nof the production stage, using the DL and the\
    \ communication and perception attribute\nsigniﬁcantly inﬂuences applications\
    \ (e.g., ﬁsh weight estimation, grassland monitoring,\nanimal welfare) where the\
    \ input data is determined by image and video records (non-\nstructured data).\
    \ In contrast, we have the case of classic ML, which is narrowed to FSC\nproblems,\
    \ and for which, the objective is to make production predictions using historical\n\
    data records (structured data). In the case of agriculture production systems,\
    \ the scope of\nthe CI approach is broader. Speciﬁcally, we found that DL, ML,\
    \ FL, and Meta-heuristics are\nmethods for modeling production problems related\
    \ to crop protection and yield, weather\nprediction, and irrigation and nutrient\
    \ management.\nIn the processing stage, ML, meta-heuristics, and probabilistic\
    \ methods are the CI\napproaches commonly used. In terms of ML, the aim is to\
    \ extract patterns and forecast\nobjective variables like demand prediction and\
    \ prediction of post-harvest losses. As for\nmeta-heuristics and probabilistic\
    \ techniques, they aim to optimize food manufacturing\nprocesses (e.g., heating,\
    \ drying) and production planning for distribution. Further down\nin the supply\
    \ chain, the predominant family of CI methods is meta-heuristics, found in\nthe\
    \ distribution link. This data-driven approach is devoted to optimizing the routing\n\
    and delivery problems under various constraints such as ﬂeet size and available\
    \ fuel.\nLastly, DL is the principal CI approach in problems with non-structured\
    \ input data (e.g.,\ndynamic discounting, diet, and nutrition) in the retail stage.\
    \ Classical ML has been used to\nextract patterns (food consumption and food waste)\
    \ and predict consumer demand and\nbuying behavior.\nThe taxonomy allowed us to\
    \ ﬁgure out which modeling approaches are more typically\nconsidered when dealing\
    \ with problems at the four supply chain stages. In this manner,\nSensors 2021,\
    \ 21, 6910\n24 of 34\nwe gave a general overview of well-established tendencies\
    \ regarding CI across the three\nsupply chains considered. Thus, the deﬁnition\
    \ and classiﬁcation of FSC problems helped\nus introduce guidelines for the incorporation\
    \ and use of CI in the food industry. These\nguidelines are built upon CI’s primary\
    \ purposes in the food supply chain: communication\nand perception, uncertain\
    \ knowledge and reasoning representations, knowledge discovery\nand function approximation,\
    \ and problem-solving. These guidelines aim to help non-expert\nCI users to identify\
    \ families of methods that can supply a solution for their particular CI-\nbased\
    \ needs in different FSC problems.\nIn summary, the taxonomy analysis suggests\
    \ that there is no family of CI methods\nthat best suits all FSC problems. However,\
    \ we state the need for a comparison framework\nthat allows the description and\
    \ analysis of the performance of different CI methods in\ndiverse supply chain\
    \ problems. In this context, the taxonomy presented sets up the basis\nfor a common\
    \ framework that, in further research, will facilitate experimentation in order\n\
    to determine which CI approaches are more appropriate for each type of FSC problem.\n\
    This may also help determine a suitable baseline of methods to make fair comparisons,\n\
    depending on the family of CI methods chosen for the FSC problem at hand.\n5.2.\
    \ Challenges and Research Opportunities\nAs industry 4.0 is ﬂourishing for the\
    \ FSC management and operation, emerging re-\nsearch paths arise for CI to yield\
    \ more robust, interoperable, and accurate methods [145,146].\nTherefore, this\
    \ section points out challenges and research opportunities that the community\n\
    should explore to enhance the contributions that CI can bring to the digitization\
    \ of the FSC.\nThese challenges are motivated by the gaps located at the intersection\
    \ of FSC and CI, which\nwere identiﬁed through the proposed taxonomy.\n5.2.1.\
    \ Data Fusion from Different Data Sources\nSigniﬁcantly, few CI methods can incorporate\
    \ data from different types of sources.\nBesides, in real scenarios, the data\
    \ available from a unique type of sensor might not be\nsufﬁcient to fully represent\
    \ the FSC problem that is intended to be addressed. For instance,\ndifferent Internet\
    \ of Things (IoT) devices (e.g., agricultural environment monitoring sys-\ntems,\
    \ GPS, cameras) provide diverse data for the optimum management of production\n\
    systems [147–149]. Amongst the relevant data for the aforementioned example, we\
    \ ﬁnd\ntemperature, humidity, localization coordinates, crop images, and others.\n\
    As a common denominator, all the data associated with the aforementioned variables\n\
    can have a different format, ranging from historical records in the form of tables,\
    \ to non-\nstructured data like images. Additionally, all of them offer valuable\
    \ information for the\npurpose at hand (e.g., prediction of crop production or\
    \ management of pest diseases). In\nthis context, the challenge lies in deﬁning\
    \ guidelines for the harmonizing and fusion of\ndata from diverse sources. Such\
    \ guidelines should consider that each FSC stage can add\nparticularities to the\
    \ data for the CI-based problem under consideration. How to properly\ncollect\
    \ and generate a single dataset with information obtained from varied and different\n\
    sources, which are fed into a CI method, is a research opportunity that must be\
    \ addressed\nto further enhance CI contributions in the FSC domain.\nIf the integration\
    \ process is not done correctly, inconsistencies will appear, resulting in\na\
    \ decrease in the performance of CI approaches [150]. Hence, merging data from\
    \ different\ninput sources presents a notorious problem that commonly attracts\
    \ more issues, such as\ninconsistent, duplicate, redundant, and correlated data.\
    \ One potential research direction\nto take to help cope with this challenge could\
    \ be designing automatic preprocessing\napproaches that fuse and harmonize data\
    \ sources to provide the accepted input format\nof CI methods. For the latter,\
    \ it is important to note that every CI approach requires\ndifferent input data\
    \ formats, which could split the design of the aforementioned automatic\ndata\
    \ preprocessing methods into diverse paths depending on the particular family\
    \ of CI\nmethods under consideration.\nSensors 2021, 21, 6910\n25 of 34\n5.2.2.\
    \ Real-Time Data and Incremental Learning\nIn supervised learning, the input data\
    \ is available before starting any training pro-\ncesses. Here, the task is to\
    \ build up a model from that data using a batch approach. The\nlatter means that\
    \ DL and ML methods use all available samples in the input data to build\nand\
    \ train a model to make predictions or classiﬁcations when new data comes into\
    \ the\ntrained model. Currently, most DL and ML applications are focused on the\
    \ batch learning\napproach, wherein data are given before training the ML models\
    \ [151]. In this context,\nmodel training and optimization processes are purely\
    \ based on the aforementioned in-\nput dataset, whose data distribution is supposed\
    \ to be static. Nevertheless, such a static\napproach is not the case for real\
    \ CI-based applications within the FSC.\nDL and ML methods must real FSC scenarios,\
    \ wherein different IoT devices continu-\nously generate new data streams. For\
    \ instance, dynamic discounts in the retail stage or the\nmanagement of greenhouse\
    \ systems whose conditions must be constantly monitored to\nguarantee the optimal\
    \ control of crops are examples of real-time data streams. Therefore,\nthe key\
    \ challenge is to design ML and DL methods that adapt to real-time data, and work\n\
    with limited resources (e.g., memory), while maintaining their predictive capacities.\n\
    Further research is needed to deal with the aforementioned challenge, and should\n\
    include the concepts of incremental learning [152,153] in the design and deployment\
    \ of\nDL and ML methods in FSC problems. Furthermore, although incremental learning\
    \ is a\nsuitable strategy when dealing with the adaptation of DL and ML to real-time\
    \ data streams,\nthe concept of incremental learning brings up other issues that\
    \ must be considered when it\nis included in the FSC context. These issues are\
    \ introduced in more detail below.\nThe ﬁrst issue is related to the concept of\
    \ drift, which is associated with changes in\nthe new input data’s statistical\
    \ properties (e.g., statistical distribution), which can highly\ninﬂuence the\
    \ performance of pre-trained DL or ML methods [154]. Secondly, we have\nthe stability-plasticity\
    \ dilemma that, in noisy environments, refers to when and how to\nadapt the current\
    \ model to the new data stream [155]. On the one hand, quick updates\nenable fast\
    \ adaptations of the model according to new data; however, at the same time, old\n\
    information that could be useful later in the process is forgotten just as quickly.\
    \ On the\nother hand, slow adaptations can be made, and old data is retained longer,\
    \ causing the\nmodel’s reactivity capacity to decrease; thereby, affecting the\
    \ model’s forecasting power.\nThus, deﬁning policies to balance the two scenarios\
    \ mentioned above is a relevant challenge\nto support the inclusion of CI approaches\
    \ in real-time data environments.\nFinally, the third challenge associated with\
    \ incremental learning is adaptive model\ncomplexity [156]. This issue is concerned\
    \ with the fact that as concept drift events become\nmore frequent, increasing\
    \ model complexity is required. Although the latter improves the\nmodel’s performance,\
    \ increasing its complexity leads to an increase in the need of more\ncomputational\
    \ resources, which are not always affordable or available in different domains,\n\
    such as FSC.\n5.2.3. Explainability of Computational Intelligence Methods\nNowadays,\
    \ CI systems have increased their capacity to carry out different tasks (e.g.,\n\
    predictions, classiﬁcation) with almost no human intervention and are achieving\
    \ high\nproﬁciency levels. In a narrow scope, if the only objective when evaluating\
    \ CI methods is\nperformance, such an object has clearly been achieved thanks\
    \ to this increasing capacity.\nNonetheless, when decisions derived from CI-based\
    \ techniques affect the dynamics of hu-\nman life (e.g., social, cultural, environmental\
    \ dimensions), understanding how CI systems\nhave achieved this performance becomes\
    \ necessary [157].\nWhile some CI approaches, such as fuzzy logic and ML methods\
    \ (e.g., rule-based\nlearners, decision trees), can provide different degrees\
    \ of interpretability and transparency\nof decisions made in their inner structure;\
    \ other methods cannot provide this information\n(e.g., black-box decision systems\
    \ [158]). In these cases, there are no clues regarding the\nsystems’ decisions\
    \ to obtain the ﬁnal result. One example is DL methods, whose complex\ninner structure\
    \ is full of intricate connections between layers and neurons and have a broad\n\
    Sensors 2021, 21, 6910\n26 of 34\nspace of hyperparameters. Therefore, understanding\
    \ where the high performance of DL\nmethods comes from is quite tricky.\nAs DL\
    \ is increasingly being employed in diverse FSC applications due to its per-\n\
    formance capacities, the demand for interpretability, explainability, and transparency\
    \ is\ngrowing between diverse FSC stakeholders. Such demand lies in the fact that\
    \ decisions\nmade based on CI systems can lead to actions, which can not be justiﬁed\
    \ or that require\ndetailed explanations [159] in order to enhance the management\
    \ of the supply chain. For\nexample, the shelf-life of perishable products needs\
    \ to be predicted in the distribution\nstage. However, understanding the factors\
    \ that inﬂuence the deterioration or preservation\nof food products is vital to\
    \ improve the management of distribution chains. The latter is\nknown as explainable\
    \ artiﬁcial intelligence (XAI) and is widely acknowledged as a crucial\nconcept\
    \ to be taken into account in the practical deployment of CI methods [160].\n\
    In this sense, as stated by [160], the challenge of XAI in different knowledge\
    \ domains,\nsuch as FSCs, is creating more explainable methods while maintaining\
    \ their output perfor-\nmance. Besides, it is crucial to facilitate stakeholder\
    \ understanding and trust in decisions\nsupported by CI systems whose outputs\
    \ become the basis for different actions along the\nwhole supply chain.\n5.2.4.\
    \ The Method Selection Problem\nAs shown in this research paper, depending on\
    \ the FSC problem at hand, different\ntypes of CI methods could be used. In this\
    \ sense, Section 4 provides helpful information\nto guide non-expert CI users\
    \ when choosing the most suitable CI family of methods\ndepending on the purpose\
    \ to be pursued (e.g., prediction, classiﬁcation, optimization). In\nthis context,\
    \ keeping in mind the no-free-lunch theorem [161] (which states that there is\n\
    no unique algorithm that can be competitive in all problems), the proposed guidelines\n\
    contribute to dealing with the model selection problem in the FSC area. Nevertheless,\n\
    having identiﬁed the most suitable families of CI methods, it is still difﬁcult\
    \ to choose the\nbest method within each family.\nFor instance, if the objective\
    \ is to optimize a food production process in the processing\nstage, the critical\
    \ question would be to ask what meta-heuristic approach is the most\nsuitable\
    \ for the considered problem. The answer to this question could be to use an\n\
    EC, SI, or local-based approach. However, solving such a decision requires a thorough\n\
    experimentation that demands a large amount of effort and is time-consuming [162].\n\
    Another similar example of the method selection problem is the case of ML. FSC\
    \ data\nallows different variables of interest to be predicted under diverse scenarios,\
    \ ranging from\nﬁsh farming production to agriculture. These characteristics of\
    \ the production context\ninﬂuence ML method performance, and selecting the most\
    \ appropriate method from a\npool of candidates is a time-consuming task. Thus,\
    \ the automation of choosing the best CI\ntechnique from a predeﬁned set of methods\
    \ of the same family is a crucial challenge that\ncould help increase inclusion\
    \ of CI into the FSC.\nCurrently, there are well-established automated approaches\
    \ focused on ML and DL.\nTherefore, we can use the automation of complete ML or\
    \ DL workﬂows, known as Auto-\nmated Machine learning (AutoML) [163] and Automated\
    \ Deep learning (AutoDL) [164].\nSuch approaches are considered to be promising\
    \ strategies to reduce human effort and\ntime cost of ML and DL in research areas\
    \ in which specialized knowledge is an asset\nthat is not always available or\
    \ affordable. Particularly, AutoML and AutoDL seek to ﬁnd\ncompetitive ML pipelines\
    \ (the workﬂow from data preprocessing to model selection) and\nneural network\
    \ architectures automatically without almost any human intervention. The\ncentral\
    \ purpose is maximizing or minimizing a performance metric on input data without\n\
    it having to be specialized in the problem domain where the data comes.\nAutoML\
    \ and AutoDL methods have been successfully used in other areas [165,166].\nHowever,\
    \ an extensive analysis to determine their strengths and weaknesses has not been\n\
    carried out in very diverse learning tasks, such as FSCs. Additionally, the concept\
    \ of\nAutoML and AutoDL could be extrapolated to an even broader space, such as\
    \ automated\nSensors 2021, 21, 6910\n27 of 34\ncomputational intelligence. In\
    \ this case, the focus would be on supporting non-expert\nusers in selecting other\
    \ CI techniques like meta-heuristics and its sub-families (e.g., EC,\nSI, local-based\
    \ approaches). In this context, the research challenge lies in the design and\n\
    development of automated methods for other families of CI methods, including fuzzy\n\
    logic, meta-heuristic, probabilistic methods, and others.\n5.2.5. Interoperability\
    \ and Deployment of CI with Information and\nCommunication Technologies\nCI is\
    \ only one part of the entire ICT ecosystem required to digitize processes in\
    \ the\nFSC. IoT technologies, information storage and management technologies,\
    \ data analytic\nand visualization tools, or decision support technologies are\
    \ other relevant components\nwithout which CI cannot reach its full potential.\
    \ All these technologies have switched the\nfocus from traditional automation\
    \ of FSC processes to a cloud-based paradigm where all\nICTs operate efﬁciently\
    \ and intuitively [167]. Within the cloud-based approaches, major\ntechnologies\
    \ must be able to interoperate with each other and themselves. Thus, such\ninterconnectivity\
    \ and exchange of information are some of the main challenges raised\nwhen incorporating\
    \ CI and other industry 4.0 approaches into the daily operation and\nmanagement\
    \ of FSCs [168].\nOne of the latent issues is the lack of standardization of the\
    \ data models with CI\nmethods. Ultimately the goal of Industry 4.0 in FSCs is\
    \ to incorporate semantic interoper-\nability, which enables systems to exchange\
    \ information with unambiguous meaning [169].\nHowever, the study of interoperability\
    \ standards for CI approaches is a research area that\nstill needs to be fully\
    \ exploited. The demand for these standards is also growing at a\npace never seen\
    \ before, as the current trend of Industry 4.0 is characterized by complex\nautomation\
    \ and production systems where CI works with a wide variety of standards,\ncomponents,\
    \ and services in a cloud-based environment [170]. Despite such challenges, re-\n\
    cent advances have been made in interoperability standards for cloud-based environments.\n\
    Some examples are the interoperable cloud-based manufacturing system [171], the\
    \ hybrid\nmanufacturing cloud framework [172], and the new generation artiﬁcial\
    \ intelligence-driven\nintelligent manufacturing architecture [173].\nAnother\
    \ big challenge of CI in integration with ICTs lies in the manufacturing pro-\n\
    cesses of the FSC production stage. Nowadays, CI approaches are usually focused\
    \ on\nmaximizing accuracy without considering the resources they consume. Nevertheless,\
    \ with\nthe increasing demand of developing a globally low carbon economy, the\
    \ need to build an\nintelligent and environmentally friendly food industry is\
    \ becoming more urgent [174,175].\nIn this sense, CI approaches require that a\
    \ balance be struck between the computational\nresources they use, the energy\
    \ they consume, and the performance they can achieve in the\ntime-frame allowed\
    \ by food manufacturing processes [176]. Furthermore, the aforemen-\ntioned resources\
    \ are assets that are not always available in small- and medium-sized food\nindustries.\
    \ Therefore, more research is required to develop CI methods that are capable\n\
    of being deployed in IoT devices and smart manufacturing industries under different\n\
    constraints like energy efﬁciency and computational resources. In conclusion,\
    \ this research\npath could imply bringing in the concepts of edge computing and\
    \ fog computing [177] for\nthe efﬁcient inclusion of CI in food manufacturing\
    \ processes [178].\nAuthor Contributions: Conceptualization, J.S.A.-Z., A.A.-V.\
    \ and A.D.M.; Methodology, J.S.A.-Z.,\nA.A.-V. and A.D.M.; Validation, J.S.A.-Z.\
    \ and A.D.M.; Formal Analysis, J.S.A.-Z., A.A.-V., A.D.M. and\nJ.L.; Investigation,\
    \ J.S.A.-Z.; Data Curation, J.S.A.-Z.; Writing—Original Draft Preparation, J.S.A.-Z.,\n\
    A.D.M. and J.L.; Writing—Review and Editing, J.S.A.-Z., A.D.M. and J.L.; Visualization,\
    \ J.S.A.-Z.;\nSupervision, A.A.-V. and A.D.M.; Project Administration, A.A.-V.;\
    \ Funding Acquisition, A.A.-V. and\nA.D.M. All authors have read and agreed to\
    \ the published version of the manuscript.\nFunding: This work has been funded\
    \ by the European Union’s Horizon 2020 Research and Innovation\nProgramme under\
    \ Grants 101000617 and 861540. This work has also been funded by the Prize UD-\n\
    Grupo Santander 2019 and the Spanish Ministry of Science and Innovation through\
    \ research project\nPID2019-109393RA-I00.\nSensors 2021, 21, 6910\n28 of 34\n\
    Institutional Review Board Statement: Not applicable.\nInformed Consent Statement:\
    \ Not applicable.\nData Availability Statement: All data analyzed during this\
    \ study are included in this article.\nAcknowledgments: We want to thank the reviewers\
    \ for their feedback that enabled us to enhance\nthis article’s quality and scientiﬁc\
    \ rigour.\nConﬂicts of Interest: The authors declare no conﬂict of interest.\n\
    References\n1.\nWorld Population Projected to Reach 9.8 Billion in 2050, and 11.2\
    \ Billion in 2100. 2017. Available online: https://www.un.org/\ndevelopment/desa/en/news/population/world-population-prospects-2017.html\
    \ (accessed on 30 September 2010).\n2.\nMisra, N.N.; Dixit, Y.; Al-Mallahi, A.;\
    \ Bhullar, M.S.; Upadhyay, R.; Martynenko, A. IoT, big data and artiﬁcial intelligence\
    \ in\nagriculture and food industry. IEEE Internet Things J. 2020. [CrossRef]\n\
    3.\nKacprzyk, J.; Pedrycz, W. Introduction. In Springer Handbook of Computational\
    \ Intelligence; Springer: Berlin/Heidelberg, Germany,\n2015; pp. 1–4.\n4.\nBishop,\
    \ C.M. Pattern Recognition and Machine Learning; Springer: Berlin/Heidelberg,\
    \ Germany, 2006.\n5.\nKakani, V.; Nguyen, V.H.; Kumar, B.P.; Kim, H.; Pasupuleti,\
    \ V.R. A critical review on computer vision and artiﬁcial intelligence in\nfood\
    \ industry. J. Agric. Food Res. 2020, 2, 100033. [CrossRef]\n6.\nLiakos, K.G.;\
    \ Busato, P.; Moshou, D.; Pearson, S.; Bochtis, D. Machine Learning in Agriculture:\
    \ A Review. Sensors 2018, 18, 2674.\n[CrossRef]\n7.\nKamilaris, A.; Kartakoullis,\
    \ A.; Prenafeta-Boldú, F.X. A review on the practice of big data analysis in agriculture.\
    \ Comput. Electron.\nAgric. 2017, 143, 23–37. [CrossRef]\n8.\nOnwude, D.I.; Chen,\
    \ G.; Eke-emezie, N.; Kabutey, A.; Khaled, A.Y.; Sturm, B. Recent Advances in\
    \ Reducing Food Losses in the\nSupply Chain of Fresh Agricultural Produce. Processes\
    \ 2020, 8, 1431. [CrossRef]\n9.\nSaiz-Rubio, V.; Rovira-Más, F. From Smart Farming\
    \ towards Agriculture 5.0: A Review on Crop Data Management. Agronomy\n2020, 10,\
    \ 207. [CrossRef]\n10.\nCamaréna, S. Artiﬁcial intelligence in the design of the\
    \ transitions to sustainable food systems. J. Clean. Prod. 2020, 271, 122574.\n\
    [CrossRef]\n11.\nGrifﬁs, S.E.; Bell, J.E.; Closs, D.J. Metaheuristics in Logistics\
    \ and Supply Chain Management. J. Bus. Logist. 2012, 33, 90–106.\n[CrossRef]\n\
    12.\nWari, E.; Zhu, W. A survey on metaheuristics for optimization in food manufacturing\
    \ industry.\nAppl. Soft Comput. 2016,\n46, 328–343. [CrossRef]\n13.\nEnvironmental\
    \ Sustainability Vision Towards 2030: Achievements, Challenges and Opportunities.\
    \ 2012. Available online:\nwww.yumpu.com/en/document/read/20931680/environmental-sustainability-vision-towards-2030-fooddrinkeurope\
    \ (accessed\non 30 September 2010).\n14.\nOECD-FAO. OECD-FAO Guidance for Responsible\
    \ Agricultural Supply Chains; OECD: Paris, France, 2016; p. 88.\n15.\nSharma,\
    \ R.; Kamble, S.S.; Gunasekaran, A.; Kumar, V.; Kumar, A. A systematic literature\
    \ review on machine learning applications\nfor sustainable agriculture supply\
    \ chain performance. Comput. Oper. Res. 2020, 119, 104926. [CrossRef]\n16.\nBorodin,\
    \ V.; Bourtembourg, J.; Hnaien, F.; Labadie, N. Handling uncertainty in agricultural\
    \ supply chain management: A state of\nthe art. Eur. J. Oper. Res. 2016, 254,\
    \ 348–359. [CrossRef]\n17.\nDethier, J.J.; Effenberger, A. Agriculture and development:\
    \ A brief review of the literature.\nEcon. Syst. 2012, 36, 175–205.\n[CrossRef]\n\
    18.\nFøre, M.; Frank, K.; Norton, T.; Svendsen, E.; Alfredsen, J.A.; Dempster,\
    \ T.; Eguiraun, H.; Watson, W.; Stahl, A.; Sunde, L.M.; et al.\nPrecision ﬁsh\
    \ farming: A new framework to improve production in aquaculture. Biosyst. Eng.\
    \ 2018, 173, 176–193. [CrossRef]\n19.\nSundrum, A. Organic livestock farming:\
    \ A critical review. Livest. Prod. Sci. 2001, 67, 207–215. [CrossRef]\n20.\nKamble,\
    \ S.S.; Gunasekaran, A.; Gawankar, S.A. Achieving sustainable performance in a\
    \ data-driven agriculture supply chain: A\nreview for research and applications.\
    \ Int. J. Prod. Econ. 2020, 219, 179–194. [CrossRef]\n21.\nJordan, M.I.; Mitchell,\
    \ T.M. Machine learning: Trends, perspectives, and prospects. Science 2015, 349,\
    \ 255–260. [CrossRef]\n22.\nHinton, G.; Sejnowski, T.J. Unsupervised Learning:\
    \ Foundations of Neural Computation; The MIT Press: Cambridge, MA, USA, 1999.\n\
    23.\nStephen, M. Machine Learning: An Algorithmic Perspective; CRC Press: Boca\
    \ Raton, FL, USA, 2014.\n24.\nCharte, D.; Charte, F.; García, S.; Herrera, F.\
    \ A snapshot on nonstandard supervised learning problems: Taxonomy, relationships,\n\
    problem transformations and algorithm adaptations. Prog. Artif. Intell. 2019,\
    \ 8, 2192–6360. [CrossRef]\n25.\nJain, A.; Duin, R.; Mao, J. Statistical pattern\
    \ recognition: A review. IEEE Trans. Pattern Anal. Mach. Intell. 2000, 22, 4–37.\
    \ [CrossRef]\n26.\nFukunaga, K. Introduction to Statistical Pattern Recognition,\
    \ 2nd ed.; Academic Press Professional, Inc.: Cambridge, MA, USA, 1990.\n27.\n\
    Duda, R.O.; Hart, P.E.; Stork, D.G.; Duda, C.R.O.; Hart, P.E.; Stork, D.G. Pattern\
    \ Classiﬁcation, 2nd ed.; Wiley: Hoboken, NJ,\nUSA, 2001.\n28.\nSmola, A.J.; Schölkopf,\
    \ B. On a Kernel-Based Method for Pattern Recognition, Regression, Approximation,\
    \ and Operator\nInversion. Algorithmica 1998, 22, 211–231. [CrossRef]\nSensors\
    \ 2021, 21, 6910\n29 of 34\n29.\nJaafra, Y.; Luc Laurent, J.; Deruyver, A.; Saber\
    \ Naceur, M. Reinforcement learning for neural architecture search: A review.\n\
    Image Vis. Comput. 2019, 89, 57–66. [CrossRef]\n30.\nTaylor, M.E.; Stone, P. Behavior\
    \ Transfer for Value-Function-Based Reinforcement Learning. In Proceedings of\
    \ the Fourth\nInternational Joint Conference on Autonomous Agents and Multiagent\
    \ Systems, Utrecht, The Netherlands, 25–29 July 2005;\npp. 53–59.\n31.\nSewak,\
    \ M. Policy-Based Reinforcement Learning Approaches. In Deep Reinforcement Learning:\
    \ Frontiers of Artiﬁcial Intelligence;\nSpringer: Singapore, 2019; pp. 127–140.\n\
    32.\nRay, S.; Tadepalli, P. Model-Based Reinforcement Learning. In Encyclopedia\
    \ of Machine Learning; Springer: New York, NY, USA,\n2010; pp. 690–693.\n33.\n\
    Pouyanfar, S.; Sadiq, S.; Yan, Y.; Tian, H.; Tao, Y.; Reyes, M.P.; Shyu, M.L.;\
    \ Chen, S.C.; Iyengar, S.S. A Survey on Deep Learning:\nAlgorithms, Techniques,\
    \ and Applications. ACM Comput. Surv. 2018, 51, 1–36. [CrossRef]\n34.\nLeCun,\
    \ Y.; Bengio, Y.; Hinton, G. Deep learning. Nature 2015, 521, 436–444. [CrossRef]\n\
    35.\nLiu, L.; Ouyang, W.; Wang, X.; Fieguth, P.; Chen, J.; Liu, X.; Pietikäinen,\
    \ M. Deep Learning for Generic Object Detection: A Survey.\nInt. J. Comput. Vis.\
    \ 2020, 128, 261–318. [CrossRef]\n36.\nDeng, L.; Liu, Y. Deep Learning in Natural\
    \ Language Processing, 1st ed.; Springer: Berlin/Heidelberg, Germany, 2018.\n\
    37.\nSchmidhuber, J. Deep learning in neural networks: An overview. Neural Netw.\
    \ 2015, 61, 85–117. [CrossRef] [PubMed]\n38.\nDargan, S.; Kumar, M.; Ayyagari,\
    \ M.R.; Kumar, G. A Survey of Deep Learning and Its Applications: A New Paradigm\
    \ to Machine\nLearning. Arch. Comput. Methods Eng. 2020, 27, 1071–1092. [CrossRef]\n\
    39.\nBianchi, L.; Dorigo, M.; Gambardella, L.M.; Gutjahr, W.J. A survey on metaheuristics\
    \ for stochastic combinatorial optimization.\nNat. Comput. 2009, 8, 239–287. [CrossRef]\n\
    40.\nBlum, C.; Roli, A. Metaheuristics in Combinatorial Optimization: Overview\
    \ and Conceptual Comparison. ACM Comput. Surv.\n2003, 35, 268–308. [CrossRef]\n\
    41.\nFoster, J.A. Evolutionary computation. Nat. Rev. Genet. 2001, 2, 428–436.\
    \ [CrossRef] [PubMed]\n42.\nChakraborty, A.; Kar, A.K. Swarm Intelligence: A Review\
    \ of Algorithms. In Nature-Inspired Computing and Optimization: Theory\nand Applications;\
    \ Springer: Cham, Switzerland, 2017; pp. 475–494.\n43.\nStefan, V.; Silvano, M.;\
    \ Osman, I.H.; Cathérine, R. Advances and Trends in Local Search Paradigms for\
    \ Optimization, 1st ed.; Springer:\nNew York, NY, USA, 2000.\n44.\nBektas, T.\
    \ The multiple traveling salesman problem: an overview of formulations and solution\
    \ procedures.\nOmega 2006,\n34, 209–219. [CrossRef]\n45.\nKatoch, S.; Chauhan,\
    \ S.S.; Kumar, V. A review on genetic algorithm: past, present, and future. Multimed.\
    \ Tools Appl. 2021,\n80, 8091–8126. [CrossRef]\n46.\nStorn, R.; Price, K. Differential\
    \ Evolution—A Simple and Efﬁcient Heuristic for global Optimization over Continuous\
    \ Spaces.\nJ. Glob. Optim. 1997, 11, 341–359. [CrossRef]\n47.\nStutzle, T.; Dorigo,\
    \ M. Ant Colony Optimization, 1st ed.; The MIT Press: Cambridge, MA, USA, 2004.\n\
    48.\nKennedy, J.; Eberhart, R. Particle swarm optimization. In Proceedings of\
    \ the International Conference on Neural Networks,\nPerth, Australia, 27 November\
    \ –1 December 1995; pp. 1942–1948.\n49.\nGlover, F. Tabu Search—Part I. ORSA J.\
    \ Comput. 1989, 1, 190–206. [CrossRef]\n50.\nFeo, T.A.; Resende, M.G.C. Greedy\
    \ Randomized Adaptive Search Procedures. J. Glob. Optim. 1995, 1995, 2. [CrossRef]\n\
    51.\nBiacino, L.; Gerla, G. Fuzzy logic, continuity and effectiveness. Arch. Math.\
    \ Log. 2002, 41, 643–667. [CrossRef]\n52.\nCox, E. The Fuzzy Systems Handbook:\
    \ A Practitioner’s Guide to Building, Using, and Maintaining Fuzzy Systems; Academic\
    \ Press\nProfessional, Inc.: Cambridge, MA, USA, 1994.\n53.\nGhahramani, Z. Bayesian\
    \ non-parametrics and the probabilistic approach to modelling. Philos. Trans.\
    \ R. Soc. Math. Phys. Eng. Sci.\n2013, 371, 20110553. [CrossRef] [PubMed]\n54.\n\
    Ghahramani, Z. Probabilistic machine learning and artiﬁcial intelligence. Nature\
    \ 2015, 521, 452–459. [CrossRef]\n55.\nBorgelt, C.; Steinbrecher, M.; Kruse, R.R.\
    \ Graphical Models: Representations for Learning, Reasoning and Data Mining, 2nd\
    \ ed.; Wiley\nPublishing: Hoboken, NJ, USA, 2009.\n56.\nRue, H.; Held, L. Gaussian\
    \ Markov Random Fields: Theory and Applications, 1st ed.; Chapman and Hall/CRC:\
    \ Boca Raton, FL,\nUSA, 2005.\n57.\nAquaculture. 2021. Available online: www.fao.org/documents/card/es/c/cb4850en/\
    \ (accessed on 3 August 2021).\n58.\nKonovalov, D.A.; Saleh, A.; Efremova, D.B.;\
    \ Domingos, J.A.; Jerry, D.R. Automatic Weight Estimation of Harvested Fish\n\
    from Images. In Proceedings of the 2019 Digital Image Computing: Techniques and\
    \ Applications (DICTA), Perth, Australia,\n2–4 December 2019.\n59.\nYang, X.;\
    \ Zhang, S.; Liu, J.; Gao, Q.; Dong, S.; Zhou, C. Deep learning for smart ﬁsh\
    \ farming: Applications, opportunities and\nchallenges. Rev. Aquac. 2021, 13,\
    \ 66–90. [CrossRef]\n60.\nTaskiner, T.; Bilgen, B. Optimization Models for Harvest\
    \ and Production Planning in Agri-Food Supply Chain: A Systematic\nReview. Logistics\
    \ 2021, 5, 52. [CrossRef]\n61.\nSu, Y.; Xu, H.; Yan, L. Support vector machine-based\
    \ open crop model (SBOCM): Case of rice production in China. Saudi J. Biol.\n\
    Sci. 2017, 24, 537–547. [CrossRef]\nSensors 2021, 21, 6910\n30 of 34\n62.\nPantazi,\
    \ X.; Moshou, D.; Alexandridis, T.; Whetton, R.; Mouazen, A. Wheat yield prediction\
    \ using machine learning and advanced\nsensing techniques. Comput. Electron. Agric.\
    \ 2016, 121, 57–65. [CrossRef]\n63.\nSambasivam, G.; Opiyo, G.D. A predictive\
    \ machine learning application in agriculture: Cassava disease detection and classiﬁca-\n\
    tion with imbalanced dataset using convolutional neural networks. Egypt. Inform.\
    \ J. 2021, 22, 27–34. [CrossRef]\n64.\nJan, B.; Anne-Katrin, M.; Till, R.; Christoph,\
    \ R.; Lutz, P. A review of advanced machine learning methods for the detection\
    \ of\nbiotic stress in precision crop protection. Precis. Agric. 2015, 16, 1573–1618.\n\
    65.\nRomero, M.; Luo, Y.; Su, B.; Fuentes, S. Vineyard water status estimation\
    \ using multispectral imagery from an UAV platform and\nmachine learning algorithms\
    \ for irrigation scheduling management. Comput. Electron. Agric. 2018, 147, 109–117.\
    \ [CrossRef]\n66.\nTraore, S.; Luo, Y.; Fipps, G. Deployment of artiﬁcial neural\
    \ network for short-term forecasting of evapotranspiration using public\nweather\
    \ forecast restricted messages. Agric. Water Manag. 2016, 163, 363–379. [CrossRef]\n\
    67.\nSirsat, M.; Cernadas, E.; Fernández-Delgado, M.; Barro, S. Automatic prediction\
    \ of village-wise soil fertility for several nutrients\nin India using a wide\
    \ range of regression methods. Comput. Electron. Agric. 2018, 154, 120–133. [CrossRef]\n\
    68.\nCoopersmith, E.J.; Minsker, B.S.; Wenzel, C.E.; Gilmore, B.J. Machine learning\
    \ assessments of soil drying for agricultural planning.\nComput. Electron. Agric.\
    \ 2014, 104, 93–104. [CrossRef]\n69.\nBarrett, B.; Nitze, I.; Green, S.; Cawkwell,\
    \ F. Assessment of multi-temporal, multi-sensor radar and ancillary spatial data\
    \ for\ngrasslands monitoring in Ireland using machine learning approaches. Remote\
    \ Sens. Environ. 2014, 152, 109–124. [CrossRef]\n70.\nVinicius, P.; Zen, K.L.;\
    \ Rocha, P.C.S.; Rafael, C.; Da Silva, J.C.C.; José, K.H.; Richardson, R.; Luiz,\
    \ B.F.; Simioni, A.T. In vivo pattern\nclassiﬁcation of ingestive behavior in\
    \ ruminants using FBG sensors and machine learning. Sensors 2015, 15, 28456–28471.\n\
    71.\nMatthews, S.G.; Miller, A.L.; PlÖtz, T.; Kyriazakis, I. Automated tracking\
    \ to measure behavioural changes in pigs for health and\nwelfare monitoring. Sci.\
    \ Rep. 2017, 7, 2045–2322. [CrossRef]\n72.\nAlonso, J.; Villa, A.; Bahamonde,\
    \ A. Improved estimation of bovine weight trajectories using Support Vector Machine\
    \ Classiﬁca-\ntion. Comput. Electron. Agric. 2015, 110, 36–41. [CrossRef]\n73.\n\
    Craninx, M.; Fievez, V.; Vlaeminck, B.; De Baets, B. Artiﬁcial neural network\
    \ models of the rumen fermentation pattern in dairy\ncattle. Comput. Electron.\
    \ Agric. 2008, 60, 226–238. [CrossRef]\n74.\nErik, H.; Emanuel, R. Big data analytics\
    \ and demand forecasting in supply chains: A conceptual analysis. Int. J. Logist.\
    \ Manag.\n2018, 29, 2.\n75.\nFeng, Q.; Shanthikumar, J.G. How Research in Production\
    \ and Operations Management May Evolve in the Era of Big Data.\nProd. Oper. Manag.\
    \ 2018, 27, 1670–1684. [CrossRef]\n76.\nPurandare, H.; Ketkar, N.; Pansare, S.;\
    \ Padhye, P.; Ghotkar, A. Analysis of post-harvest losses: An Internet of Things\
    \ and machine\nlearning approach. In Proceedings of the International Conference\
    \ on Automatic Control and Dynamic Optimization Techniques,\nPune, India, 9–10\
    \ September 2016; pp. 222–226.\n77.\nBanga, J.R.; Balsa-Canto, E.; Moles, C.G.;\
    \ Alonso, A.A. Improving food processing using modern optimization methods.\n\
    Trends Food Sci. Technol. 2003, 14, 131–144. [CrossRef]\n78.\nEneko, O.; Yang,\
    \ X.S.; Fernando, D.; Enrique, O.; Masegosa, A.D.; Asier, P. A discrete ﬁreﬂy\
    \ algorithm to solve a rich vehicle\nrouting problem modelling a newspaper distribution\
    \ system with recycling policy. Soft Comput. 2017, 21, 1433–7479.\n79.\nNasr,\
    \ N.; Niaki, S.T.A.; Hussenzadek Kashan, A.; Seifbarghy, M. An efficient solution\
    \ method for an agri-fresh food supply chain:\nhybridization of Lagrangian relaxation\
    \ and genetic algorithm. Environ. Sci. Pollut. Res. 2021, 1–19. [CrossRef]\n80.\n\
    Hui, Y.Y.; Choy, K.; Ho, G.; Leung, K.; Lam, H. A cloud-based location assignment\
    \ system for packaged food allocation in\ne-fulﬁllment warehouse. Int. J. Eng.\
    \ Bus. Manag. 2016, 8, 1847979016684832. [CrossRef]\n81.\nMosallanezhad, B.; Hajiaghaei-Keshteli,\
    \ M.; Triki, C. Shrimp closed-loop supply chain network design. Soft Comput. 2021,\n\
    25, 7399–7422. [CrossRef]\n82.\nLuangkesorn, K.; Klein, G.; Bidanda, B. Analysis\
    \ of production systems with potential for severe disruptions. Int. J. Prod. Econ.\n\
    2016, 171, 478–486. [CrossRef]\n83.\nLestari, F.; Mas’ari, A.; Meilani, S.; Riandika,\
    \ I.N.; Hamid, A.B.A. Risk Mitigation Via Integrating House of Risk and Probability\n\
    Impact Matrix in Halal Food Supply Chain. J. Tek. Ind. 2021, 22, 138–154.\n84.\n\
    Wang, Y.; Zhao, Y.; Addepalli, S. Remaining Useful Life Prediction using Deep\
    \ Learning Approaches: A Review. Procedia Manuf.\n2020, 49, 81–88. [CrossRef]\n\
    85.\nBrooks, C.; Parr, L.; Smith, J.M.; Buchanan, D.; Snioch, D.; Hebishy, E.\
    \ A review of food fraud and food authenticity across the\nfood supply chain,\
    \ with an examination of the impact of the COVID-19 pandemic and Brexit on food\
    \ industry. Food Control 2021,\n130, 108171. [CrossRef]\n86.\nShahbazi, Z.; Byun,\
    \ Y.C. A Procedure for Tracing Supply Chains for Perishable Food Based on Blockchain,\
    \ Machine Learning and\nFuzzy Logic. Electronics 2021, 10, 41. [CrossRef]\n87.\n\
    Feizabadi, J. Machine learning demand forecasting and supply chain performance.\
    \ Int. J. Logist. Res. Appl. 2020, 1–24. [CrossRef]\n88.\nBányai, T. Real-Time\
    \ Decision Making in First Mile and Last Mile Logistics: How Smart Scheduling\
    \ Affects Energy Efﬁciency of\nHyperconnected Supply Chain Solutions. Energies\
    \ 2018, 11, 1833. [CrossRef]\n89.\nVasiloglou, M.F.; Mougiakakou, S.; Aubry, E.;\
    \ Bokelmann, A.; Fricker, R.; Gomes, F.; Guntermann, C.; Meyer, A.; Studerus,\
    \ D.;\nStanga, Z. A Comparative Study on Carbohydrate Estimation: GoCARB vs. Dietitians.\
    \ Nutrients 2018, 10, 741. [CrossRef]\n90.\nEftimov, T.; Korosec, P.; Korousi´c\
    \ Seljak, B. StandFood: Standardization of Foods Using a Semi-Automatic System\
    \ for Classifying\nand Describing Foods According to FoodEx2. Nutrients 2017,\
    \ 10, 542. [CrossRef]\nSensors 2021, 21, 6910\n31 of 34\n91.\nGrainger, M.J.;\
    \ Aramyan, L.; Logatcheva, K.; Piras, S.; Righi, S.; Setti, M.; Vittuari, M.;\
    \ Stewart, G.B. The use of systems models to\nidentify food waste drivers. Glob.\
    \ Food Secur. 2018, 16, 1–8. [CrossRef]\n92.\nBonaccorsi, M.; Betti, S.; Rateni,\
    \ G.; Esposito, D.; Brischetto, A.; Marseglia, M.; Dario, P.; Cavallo, F. ‘HighChest’:\
    \ An Augmented\nFreezer Designed for Smart Food Management and Promotion of Eco-Efﬁcient\
    \ Behaviour. Sensors 2017, 17, 1357. [CrossRef]\n93.\nBorimnejad, V.; Samani,\
    \ R.E. Modeling consumer’s behavior for packed vegetable in “Mayadin management\
    \ organization of\nTehran” using artiﬁcial neural network. Cogent Bus. Manag.\
    \ 2016, 3, 1208898. [CrossRef]\n94.\nCene, E.; Karaman, F. Analysing organic food\
    \ buyers’ perceptions with Bayesian networks: A case study in Turkey. J. Appl.\
    \ Stat.\n2015, 42, 1572–1590. [CrossRef]\n95.\nCEPS. Digitising Agrifood—Pathways\
    \ and Challenges. 2019. Available online: www.ceps.eu/ceps-publications/digitising-\n\
    agrifood. (accessed on 3 October 2021)\n96.\nSipser, M. Introduction to the Theory\
    \ of Computation. Available online: http://fuuu.be/polytech/INFOF408/Introduction-To-\n\
    The-Theory-Of-Computation-Michael-Sipser.pdf(accessed on 3 October 2021)\n97.\n\
    Nesteruk, S.; Shadrin, D.; Pukalchik, M.; Somov, A.; Zeidler, C.; Zabel, P.; Schubert,\
    \ D. Image Compression and Plants\nClassiﬁcation Using Machine Learning in Controlled-Environment\
    \ Agriculture: Antarctic Station Use Case. IEEE Sens. J. 2021,\n21, 17564–17572.\
    \ [CrossRef]\n98.\nIqbal, M.A.; Wang, Z.; Ali, Z.A.; Riaz, S. Automatic Fish Species\
    \ Classiﬁcation Using Deep Convolutional Neural Networks.\nWirel. Pers. Commun.\
    \ 2021, 116, 1043–1053. [CrossRef]\n99.\nPetrellis, N. Measurement of Fish Morphological\
    \ Features through Image Processing and Deep Learning Techniques. Appl. Sci.\n\
    2021, 11, 4416. [CrossRef]\n100. Jung, D.H.; Kim, N.Y.; Moon, S.H.; Jhin, C.;\
    \ Kim, H.J.; Yang, J.S.; Kim, H.S.; Lee, T.S.; Lee, J.Y.; Park, S.H. Deep Learning-Based\n\
    Cattle Vocal Classiﬁcation Model and Real-Time Livestock Monitoring System with\
    \ Noise Filtering. Animals 2021, 11, 357.\n[CrossRef] [PubMed]\n101. Kim, Y.J.;\
    \ Park, D.H.; Park, H.; Kim, S.H. Pig Datasets of Livestock for Deep Learning\
    \ to detect Posture using Surveillance\nCamera. In Proceedings of the International\
    \ Conference on Information and Communication Technology Convergence, Jeju,\n\
    Korea, 21–23 October 2020; pp. 1196–1198.\n102. Qiao, Y.; Su, D.; Kong, H.; Sukkarieh,\
    \ S.; Lomax, S.; Clark, C. Data Augmentation for Deep Learning based Cattle Segmentation\n\
    in Precision Livestock Farming. In Proceedings of the International Conference\
    \ on Automation Science and Engineering, Hong\nKong, China, 20–21 August 2020;\
    \ pp. 979–984.\n103. Qiao, Y.; Truman, M.; Sukkarieh, S. Cattle segmentation and\
    \ contour extraction based on Mask R-CNN for precision livestock\nfarming. Comput.\
    \ Electron. Agric. 2019, 165, 104958. [CrossRef]\n104. Zhao, S.; Zhang, S.; Liu,\
    \ J.; Wang, H.; Zhu, J.; Li, D.; Zhao, R. Application of machine learning in intelligent\
    \ ﬁsh aquaculture: A\nreview. Aquaculture 2021, 540, 724–736. [CrossRef]\n105.\
    \ Gao, G.; Xiao, K.; Chen, M. An intelligent IoT-based control and traceability\
    \ system to forecast and maintain water quality in\nfreshwater ﬁsh farms. Comput.\
    \ Electron. Agric. 2019, 166, 105013. [CrossRef]\n106. Lopes, B.D.M.; Silva, L.C.B.;\
    \ Blanquet, I.M.; Georgieva, P.; Marques, C.A.F. Prediction of ﬁsh mortality based\
    \ on a probabilistic\nanomaly detection approach for recirculating aquaculture\
    \ system facilities. Rev. Sci. Instrum. 2021, 92, 025119. [CrossRef]\n107. Strabel,\
    \ T.; Szyda, J.; Ptak, E.; Jamrozik, J. Comparison of Random Regression Test-Day\
    \ Models for Polish Black and White Cattle.\nJ. Dairy Sci. 2005, 88, 3688–3699.\
    \ [CrossRef]\n108. Bayer, P.E.; Edwards, D. Machine learning in agriculture: from\
    \ silos to marketplaces. Plant Biotechnol. J. 2021, 19, 648–650.\n[CrossRef]\n\
    109. Ozguven, M.M.; Adem, K. Automatic detection and classiﬁcation of leaf spot\
    \ disease in sugar beet using deep learning algorithms.\nPhys. A Stat. Mech. Appl.\
    \ 2019, 535, 122537. [CrossRef]\n110. Bah, M.D.; Dericquebourg, E.; Haﬁane, A.;\
    \ Canals, R. Deep Learning Based Classiﬁcation System for Identifying Weeds Using\n\
    High-Resolution UAV Imagery. In Intelligent Computing; Arai, K., Kapoor, S., Bhatia,\
    \ R., Eds.; Springer: Cham, Switzerland, 2019;\npp. 176–187.\n111. Chlingaryan,\
    \ A.; Sukkarieh, S.; Whelan, B. Machine learning approaches for crop yield prediction\
    \ and nitrogen status estimation\nin precision agriculture: A review. Comput.\
    \ Electron. Agric. 2018, 151, 61–69. [CrossRef]\n112. Wu, L.; Huang, G.; Fan,\
    \ J.; Ma, X.; Zhou, H.; Zeng, W. Hybrid extreme learning machine with meta-heuristic\
    \ algorithms for\nmonthly pan evaporation prediction. Comput. Electron. Agric.\
    \ 2020, 168, 105115. [CrossRef]\n113. Kong, Q.; Kuriyan, K.; Shah, N.; Guo, M.\
    \ Development of a responsive optimisation framework for decision-making in precision\n\
    agriculture. Comput. Chem. Eng. 2019, 131, 106585. [CrossRef]\n114. Valente, J.;\
    \ Del Cerro, J.; Barrientos, A.; Sanz, D. Aerial coverage optimization in precision\
    \ agriculture management: A musical\nharmony inspired approach. Comput. Electron.\
    \ Agric. 2013, 99, 153–159. [CrossRef]\n115. Remya, S.; Sasikala, R. Performance\
    \ evaluation of optimized and adaptive neuro fuzzy inference system for predictive\
    \ modeling\nin agriculture. Comput. Electr. Eng. 2020, 86, 106718. [CrossRef]\n\
    116. Giusti, E.; Marsili-Libelli, S. A Fuzzy Decision Support System for irrigation\
    \ and water conservation in agriculture. Environ.\nModel. Softw. 2015, 63, 73–86.\
    \ [CrossRef]\n117. Papageorgiou, E.; Markinos, A.; Gemtos, T. Fuzzy cognitive\
    \ map based approach for predicting yield in cotton crop production\nas a basis\
    \ for decision support system in precision agriculture application. Appl. Soft\
    \ Comput. 2011, 11, 3643–3657. [CrossRef]\nSensors 2021, 21, 6910\n32 of 34\n\
    118. Dilkhush Mihirsen, D.; Joseph, J.T.; Renisha, B. Time Series Analysis for\
    \ Supply Chain Planning in Restaurants. In Proceedings of\nthe International Conference\
    \ on Computing, Communication and Security, Patna, India, 14–16 October 2020;\
    \ pp. 1–5.\n119. Sadati, N.; Chinnam, R.B.; Nezhad, M.Z. Observational data-driven\
    \ modeling and optimization of manufacturing processes.\nExpert Syst. Appl. 2018,\
    \ 93, 456–464. [CrossRef]\n120. Jonkman, J.; Bloemhof, J.M.; van der Vorst, J.G.;\
    \ van der Padt, A. Selecting food process designs from a supply chain perspective.\n\
    J. Food Eng. 2017, 195, 52–60. [CrossRef]\n121. Ekin, T. Integrated maintenance\
    \ and production planning with endogenous uncertain yield.\nReliab. Eng. Syst.\
    \ Saf. 2018,\n179, 52–61. [CrossRef]\n122. Graves, S.C. Uncertainty and Production\
    \ Planning. In Planning Production and Inventories in the Extended Enterprise:\
    \ A State of the\nArt Handbook, Volume 1; Springer: New York, NY, USA, 2011; pp.\
    \ 83–101.\n123. Zhang, R.Q.; Wang, M.; Pan, X. New model of the storage location\
    \ assignment problem considering demand correlation pattern.\nComput. Ind. Eng.\
    \ 2019, 129, 210–219. [CrossRef]\n124. Baldi, M.M.; Manerba, D.; Perboli, G.;\
    \ Tadei, R. A Generalized Bin Packing Problem for parcel delivery in last-mile\
    \ logistics.\nEur. J. Oper. Res. 2019, 274, 990–999. [CrossRef]\n125. Huang, K.;\
    \ Ardiansyah, M.N. A decision model for last-mile delivery planning with crowdsourcing\
    \ integration. Comput. Ind.\nEng. 2019, 135, 898–912. [CrossRef]\n126. Mummoorthy,\
    \ A.; Mohanasundaram, R.; Saraff, S.; Arun, R. Fleet Management and Vehicle Routing\
    \ in Real Time Using Parallel\nComputing Algorithms. In Soft Computing and Signal\
    \ Processing; Wang, J., Reddy, G.R.M., Prasad, V.K., Reddy, V.S., Eds. Springer:\n\
    Singapore, 2019; pp. 263–270.\n127. Goel, R.; Maini, R. A hybrid of ant colony\
    \ and ﬁreﬂy algorithms (HAFA) for solving vehicle routing problems. J. Comput.\
    \ Sci.\n2018, 25, 28–37. [CrossRef]\n128. Goel, R.; Maini, R. A survey of machine\
    \ learning techniques for food sales prediction. Artif. Intell. Rev. 2018, 52,\
    \ 441–447.\n129. Baryannis, G.; Dani, S.; Antoniou, G. Predicting supply chain\
    \ risks using machine learning: The trade-off between performance\nand interpretability.\
    \ Future Gener. Comput. Syst. 2019, 101, 993–1004. [CrossRef]\n130. Baryannis,\
    \ G.; Dani, S.; Validi, S.; Antoniou, G. Decision Support Systems and Artiﬁcial\
    \ Intelligence in Supply Chain Risk\nManagement. In Revisiting Supply Chain Risk;\
    \ Springer: Cham, Switzerland, 2019; pp. 53–71.\n131. Baryannis, G.; Validi, S.;\
    \ Dani, S.; Antoniou, G. Supply chain risk management and artiﬁcial intelligence:\
    \ state of the art and\nfuture research directions. Int. J. Prod. Res. 2019, 57,\
    \ 2179–2202. [CrossRef]\n132. Morris, S.; Conn Welch, K.; Schroeder, M. Inventory\
    \ Management of the Refrigerator’s Produce Bins Using Classiﬁcation\nAlgorithms\
    \ and Hand Analysis. In Proceedings of the IEEE SoutheastCon 2021, Virtual Conference,\
    \ 10–14 March 2021; pp. 1–8.\n133. Runzel, M.A.S.; Hassler, E.E.; Rogers, R.E.L.;\
    \ Formato, G.; Cazier, J.A. Designing a Smart Honey Supply Chain for Sustainable\n\
    Development. IEEE Consum. Electron. Mag. 2021, 10, 69–78. [CrossRef]\n134. Kudo,\
    \ T. A Proposal for Article Management Method Using Wearable Camera. Procedia\
    \ Comput. Sci. 2020, 176, 1338–1347.\n[CrossRef]\n135. Xu, L.; Kamat, V.R.; Menassa,\
    \ C.C.\nAutomatic extraction of 1D barcodes from video scans for drone-assisted\
    \ inventory\nmanagement in warehousing applications. Int. J. Logist. Res. Appl.\
    \ 2018, 21, 243–258. [CrossRef]\n136. Gunawardena, D.; Sarathchandra, K. BestDish:\
    \ A Digital Menu and Food Item Recommendation System for Restaurants in the\n\
    Hotel Sector. In Proceedings of the International Conference on Image Processing\
    \ and Robotics, Abu Dabi, United Arab Emirates,\n25–28 October 2020; pp. 1–7.\n\
    137. Chiciudean, G.O.; Harun, R.; Ilea, M.; Chiciudean, D.I.; Arion, F.H.; Ilies,\
    \ G.; Muresan, I.C. Organic Food Consumers and\nPurchase Intention: A Case Study\
    \ in Romania. Agronomy 2019, 9, 145. [CrossRef]\n138. Priore, P.; Ponte, B.; Rosillo,\
    \ R.; de la Fuente, D. Applying machine learning to the dynamic selection of replenishment\
    \ policies in\nfast-changing supply chain environments. Int. J. Prod. Res. 2019,\
    \ 57, 3663–3677. [CrossRef]\n139. Tangtisanon, P. Web Service Based Food Additive\
    \ Inventory Management with Forecasting System. In Proceedings of the 2018\n3rd\
    \ International Conference on Computer and Communication Systems (ICCCS), Nagoya,\
    \ Japan, 27–30 April 2018; pp. 448–452.\n140. Maihami, R.; Govindan, K.; Fattahi,\
    \ M. The inventory and pricing decisions in a three-echelon supply chain of deteriorating\n\
    items under probabilistic environment. Transp. Res. Part E Logist. Transp. Rev.\
    \ 2019, 131, 118–138. [CrossRef]\n141. Cevallos-Torres, L.; Botto-Tobar, M. Case\
    \ Study: Probabilistic Estimates in the Application of Inventory Models for Perishable\n\
    Products in SMEs. In Problem-Based Learning: A Didactic Strategy in the Teaching\
    \ of System Simulation; Springer: Cham, Switzerland,\n2019; pp. 123–132.\n142.\
    \ Zhang, Y.; Hua, G.; Wang, S.; Zhang, J.; Fernandez, V. Managing demand uncertainty:\
    \ Probabilistic selling versus inventory\nsubstitution. Int. J. Prod. Econ. 2018,\
    \ 196, 56–67. [CrossRef]\n143. Shen, L.; Li, F.; Li, C.; Wang, Y.; Qian, X.; Feng,\
    \ T.; Wang, C. Inventory Optimization of Fresh Agricultural Products Supply Chain\n\
    Based on Agricultural Superdocking. J. Adv. Transp. 2020, 2020, 1–13. [CrossRef]\n\
    144. Fathi, M.; Nourmohammadi, A.; Ghobakhloo, M.; Youseﬁ, M. Production Sustainability\
    \ via Supermarket Location Optimization\nin Assembly Lines. Sustainability 2020,\
    \ 12, 4728. [CrossRef]\n145. Liu, Y.; Ma, X.; Shu, L.; Hancke, G.P.; Abu-Mahfouz,\
    \ A.M. From Industry 4.0 to Agriculture 4.0: Current Status, Enabling\nTechnologies,\
    \ and Research Challenges. IEEE Trans. Ind. Inform. 2021, 17, 4322–4334. [CrossRef]\n\
    Sensors 2021, 21, 6910\n33 of 34\n146. Araujo, S.O.; Peres, R.S.; Barata, J.;\
    \ Lidon, F.; Ramalho, J.C. Characterising the Agriculture 4.0 Landscape—Emerging\
    \ Trends,\nChallenges and Opportunities. Agronomy 2021, 11, 667. [CrossRef]\n\
    147. Moysiadis, T.; Adamides, G.; Stylianou, A.; Zotos, N.; Giannakopoulou, M.;\
    \ Alexiou, G. Use of IoT technologies for irrigation\nand plant protection: the\
    \ case for Cypriot fruits and vegetables. In Bio-Economy and Agri-Production;\
    \ Bochtis, D., Achillas, C.,\nBanias, G., Lampridi, M., Eds.; Academic Press:\
    \ Cambridge, MA, USA, 2021; pp. 175–194.\n148. Serazetdinova, L.; Garratt, J.;\
    \ Baylis, A.; Stergiadis, S.; Collison, M.; Davis, S. How should we turn data\
    \ into decisions in AgriFood?\nJ. Sci. Food Agric. 2019, 99, 3213–3219. [CrossRef]\n\
    149. Brewster, C.; Roussaki, I.; Kalatzis, N.; Doolin, K.; Ellis, K. IoT in Agriculture:\
    \ Designing a Europe-Wide Large-Scale Pilot.\nIEEE Commun. Mag. 2017, 55, 26–33.\
    \ [CrossRef]\n150. Garcia, S.; Luengo, J.; Herrera, F. Data Preprocessing in Data\
    \ Mining; Springer: Cham, Switzerland, 2015.\n151. Chefrour, A. Incremental supervised\
    \ learning: Algorithms and applications in pattern recognition. Evol. Intell.\
    \ 2019, 12, 97–112.\n[CrossRef]\n152. Wu, Y.; Chen, Y.; Wang, L.; Ye, Y.; Liu,\
    \ Z.; Guo, Y.; Fu, Y. Large Scale Incremental Learning. In Proceedings of the\
    \ IEEE/CVF\nConference on Computer Vision and Pattern Recognition, Long Beach,\
    \ CA, USA, 15–20 June 2019.\n153. Castro, F.M.; Marin-Jimenez, M.J.; Guil, N.;\
    \ Schmid, C.; Alahari, K. End-to-End Incremental Learning. In Proceedings of the\n\
    European Conference on Computer Vision (ECCV), Munich, Germany, 8–14 September\
    \ 2018.\n154. Ditzler, G.; Roveri, M.; Alippi, C.; Polikar, R. Learning in Nonstationary\
    \ Environments: A Survey. IEEE Comput. Intell. Mag. 2015,\n10, 12–25. [CrossRef]\n\
    155. Polikar, R.; Upda, L.; Upda, S.; Honavar, V. Learn++: an incremental learning\
    \ algorithm for supervised neural networks.\nIEEE Trans. Syst. Man Cybern. Part\
    \ C (Appl. Rev.) 2001, 31, 497–508. [CrossRef]\n156. Agarwal, S.; Rattani, A.;\
    \ Chowdary, C.R. AILearn: An Adaptive Incremental Learning Model for Spoof Fingerprint\
    \ Detection.\narXiv 2020, arXiv:2012.14639.\n157. Goodman, B.; Flaxman, S. European\
    \ Union Regulations on Algorithmic Decision-Making and a “Right to Explanation”.\
    \ AI Mag.\n2017, 38, 50–57. [CrossRef]\n158. Castelvecchi, D. Can we open the\
    \ black box of AI? Nature 2016, 538. [CrossRef]\n159. Gunning, D.; Aha, D. DARPA’s\
    \ Explainable Artiﬁcial Intelligence (XAI) Program. AI Mag. 2019, 40, 44–58.\n\
    160. Barredo Arrieta, A.; Díaz-Rodríguez, N.; Del Ser, J.; Bennetot, A.; Tabik,\
    \ S.; Barbado, A.; Garcia, S.; Gil-Lopez, S.; Molina, D.;\nBenjamins, R.; et al.\n\
    Explainable Artiﬁcial Intelligence (XAI): Concepts, taxonomies, opportunities\
    \ and challenges toward\nresponsible AI. Inf. Fusion 2020, 58, 82–115. [CrossRef]\n\
    161. Wolpert, D.H.; Macready, W.G. No free lunch theorems for optimization. IEEE\
    \ Trans. Evol. Comput. 1997, 1, 67–82. [CrossRef]\n162. Osaba, E.; Villar-Rodriguez,\
    \ E.; Del Ser, J.; Nebro, A.J.; Molina, D.; LaTorre, A.; Suganthan, P.N.; Coello\
    \ Coello, C.A.; Herrera, F.\nA Tutorial On the design, experimentation and application\
    \ of metaheuristic algorithms to real-World optimization problems.\nSwarm Evol.\
    \ Comput. 2021, 64, 100888. [CrossRef]\n163. Hutter, F.; Kotthoff, L.; Vanschoren,\
    \ J. (Eds.)\nAutomated Machine Learning:\nMethods, Systems, Challenges; Springer:\n\
    Berlin/Heidelberg, Germany, 2018.\n164. Zimmer, L.; Lindauer, M.; Hutter, F. Auto-PyTorch\
    \ Tabular: Multi-Fidelity MetaLearning for Efﬁcient and Robust AutoDLL.\narXiv\
    \ 2020, arXiv:2006.13799.\n165. Angarita-Zapata, J.S.; Masegosa, A.D.; Triguero,\
    \ I. General-Purpose Automated Machine Learning for Transportation: A Case\nStudy\
    \ of Auto-sklearn for Trafﬁc Forecasting. In Information Processing and Management\
    \ of Uncertainty in Knowledge-Based Systems;\nLesot, M.J., Vieira, S., Reformat,\
    \ M.Z., Carvalho, J.P., Wilbik, A., Bouchon-Meunier, B., Yager, R.R., Eds.; Springer:\
    \ Cham,\nSwitzerland, 2020; pp. 728–744.\n166. Li, Z.; Guo, H.; Wang, W.M.; Guan,\
    \ Y.; Barenji, A.V.; Huang, G.Q.; McFall, K.S.; Chen, X. A Blockchain and AutoML\
    \ Approach for\nOpen and Automated Customer Service. IEEE Trans. Ind. Inform.\
    \ 2019, 15, 3642–3651. [CrossRef]\n167. Zeid, A.; Sundaram, S.; Moghaddam, M.;\
    \ Kamarthi, S.; Marion, T. Interoperability in Smart Manufacturing: Research Challenges.\n\
    Machines 2019, 7, 21. [CrossRef]\n168. Bhatia, M.; Ahanger, T.A. Intelligent decision-making\
    \ in Smart Food Industry: Quality perspective. Pervasive Mob. Comput. 2021,\n\
    72, 101304. [CrossRef]\n169. Burns, T.; Cosgrove, J.; Doyle, F. A Review of Interoperability\
    \ Standards for Industry 4.0. Procedia Manuf. 2019, 38, 646–653.\n[CrossRef]\n\
    170. Nilsson, J.; Sandin, F. Semantic Interoperability in Industry 4.0: Survey\
    \ of Recent Developments and Outlook. In Proceedings of\nthe IEEE International\
    \ Conference on Industrial Informatics (INDIN), Porto, Portugal, 18–20 July 2018;\
    \ pp. 127–132.\n171. Wang, X.V.; Wang, L.; Givehchi, M. ICMS: A Cloud-Based System\
    \ for Production Management. In Advances in Production\nManagement Systems: Innovative\
    \ Production Management Towards Sustainable Growth; Umeda, S., Nakano, M., Mizuyama,\
    \ H.,\nHibino, H., Kiritsis, D., von Cieminski, G., Eds.; Springer: Cham, Switzerland,\
    \ 2015; pp. 444–451.\n172. Lu, Y.; Xu, X.; Xu, J. Development of a Hybrid Manufacturing\
    \ Cloud. J. Manuf. Syst. 2014, 33, 551–566. [CrossRef]\n173. Li, B.; Chai, X.;\
    \ Hou, B.; Zhang, L.; Zhou, J.; Liu, Y. New Generation Artiﬁcial Intelligence-Driven\
    \ Intelligent Manufacturing\n(NGAIIM). In Proceedings of the 2018 IEEE SmartWorld,\
    \ Ubiquitous Intelligence Computing, Advanced Trusted Computing,\nScalable Computing\
    \ Communications, Cloud Big Data Computing, Internet of People and Smart City\
    \ Innovation (Smart-\nWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Guangzhou, China,\
    \ 8–12 October 2018; pp. 1864–1869.\nSensors 2021, 21, 6910\n34 of 34\n174. Perez-Pons,\
    \ M.E.; Plaza-Hernández, M.; Alonso, R.S.; Parra-Domínguez, J.; Prieto, J. Increasing\
    \ Proﬁtability and Monitoring\nEnvironmental Performance: A Case Study in the\
    \ Agri-Food Industry through an Edge-IoT Platform. Sustainability 2021, 13, 283.\n\
    [CrossRef]\n175. Zhang, J.; Qu, X.; Sangaiah, A.K. A Study of Green Development\
    \ Mode and Total Factor Productivity of the Food Industry Based\non the Industrial\
    \ Internet of Things. IEEE Commun. Mag. 2018, 56, 72–78. [CrossRef]\n176. Alonso,\
    \ R.S.; Sittón-Candanedo, I.; García, Ó.; Prieto, J.; Rodríguez-González, S. An\
    \ intelligent Edge-IoT platform for monitoring\nlivestock and crops in a dairy\
    \ farming scenario. Ad Hoc Netw. 2020, 98, 102047. [CrossRef]\n177. Chalapathi,\
    \ G.S.S.; Chamola, V.; Vaish, A.; Buyya, R. Industrial Internet of Things (IIoT)\
    \ Applications of Edge and Fog Computing: A\nReview and Future Directions; Springer:\
    \ Cham, Switzerland, 2021; pp. 293–325.\n178. Kumar, N.; Rodrigues, J.J.P.C.;\
    \ Guizani, M.; Choo, K.K.R.; Lu, R.; Verikoukis, C.; Zhong, Z. Achieving Energy\
    \ Efﬁciency and\nSustainability in Edge/Fog Deployment. IEEE Commun. Mag. 2018,\
    \ 56, 20–21. [CrossRef]\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/21/20/6910/pdf?version=1634723940
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: A Taxonomy of Food Supply Chain Problems from a Computational Intelligence
    Perspective
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/smartcities5010019
  analysis: '>'
  authors:
  - Nasim Nezamoddini
  - Amirhosein Gholami
  citation_count: 7
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Nezamoddini, N.; Gholami,\nA. A Survey of Adaptive Multi-Agent\nNetworks\
    \ and Their Applications in\nSmart Cities. Smart Cities 2022, 5,\n318–347. https://doi.org/\n\
    10.3390/smartcities5010019\nAcademic Editor: Zhixiang Fang\nReceived: 11 January\
    \ 2022\nAccepted: 7 March 2022\nPublished: 9 March 2022\nPublisher’s Note: MDPI\
    \ stays neutral\nwith regard to jurisdictional claims in\npublished maps and institutional\
    \ afﬁl-\niations.\nCopyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsmart cities\nArticle\nA Survey of Adaptive Multi-Agent Networks and Their\n\
    Applications in Smart Cities\nNasim Nezamoddini 1,∗\nand Amirhosein Gholami 2\n\
    1\nIndustrial and Systems Engineering Department, Oakland University, Rochester,\
    \ MI 48309, USA\n2\nSystems Science and Industrial Engineering Department, Binghamton\
    \ University,\nBinghamton, NY 13902, USA; agholam1@binghamton.edu\n*\nCorrespondence:\
    \ nezamoddini@oakland.edu; Tel.: +1-(248)-370-2989\nAbstract: The world is moving\
    \ toward a new connected world in which millions of intelligent\nprocessing devices\
    \ communicate with each other to provide services in transportation, telecommu-\n\
    nication, and power grids in the future’s smart cities. Distributed computing\
    \ is considered one of\nthe efﬁcient platforms for processing and management of\
    \ massive amounts of data collected by\nsmart devices. This can be implemented\
    \ by utilizing multi-agent systems (MASs) with multiple\nautonomous computational\
    \ entities by memory and computation capabilities and the possibility\nof message-passing\
    \ between them. These systems provide a dynamic and self-adaptive platform\nfor\
    \ managing distributed large-scale systems, such as the Internet-of-Things (IoTs).\
    \ Despite, the\npotential applicability of MASs in smart cities, very few practical\
    \ systems have been deployed using\nagent-oriented systems. This research surveys\
    \ the existing techniques presented in the literature\nthat can be utilized for\
    \ implementing adaptive multi-agent networks in smart cities. The related\nliterature\
    \ is categorized based on the steps of designing and controlling these adaptive\
    \ systems.\nThese steps cover the techniques required to deﬁne, monitor, plan,\
    \ and evaluate the performance of\nan autonomous MAS. At the end, the challenges\
    \ and barriers for the utilization of these systems in\ncurrent smart cities,\
    \ and insights and directions for future research in this domain, are presented.\n\
    Keywords: MAS; adaptive systems; network systems; smart city; systems of systems\n\
    1. Introduction\nThe smart city is a new notion that has rapidly gained ground\
    \ in the agendas of city\nauthorities all over the world. An increasing population\
    \ concentration in urban areas and\nsubsequent arising challenges have highlighted\
    \ the need for intelligent ways to facilitate\ncitizen’s lives, deliver services,\
    \ and mitigate against disasters [1]. One of the solutions was to\nintroduce new\
    \ urban areas equipped with a city with an advanced metering infrastructure\n\
    and smart objects with ubiquitous sensing and embedded intelligence [2]. Each\
    \ one of the\nsmart objects collects the data from their environment, communicates\
    \ with other objects,\nprocess information, and in some cases, autonomously react\
    \ to dynamic internal and\nexternal changes [3]. Wireless sensor networks (WSN),\
    \ radio frequency identiﬁcation\n(RFID), near-ﬁeld communications (NFC) tags,\
    \ unique/universal/ubiquitous identiﬁers\n(UID), actuators, smartphones, and smart\
    \ appliances are examples of these smart devices.\nThe devices are connected through\
    \ a platform called the Internet-of-Things (IoTs) that\nallows technologies to\
    \ access and interchange data through wireless and sired internet\nnetworks [4].\n\
    Although adopting the IoTs opens new possibilities and opportunities to change\n\
    our society to a connected world, at the same time, it brings its own problems\
    \ and risks.\nIntegrating a diverse range of devices with different functionalities,\
    \ computation capa-\nbilities, and data streams is extremely challenging [5].\
    \ Scalability is another major issue\nfor controlling IoTs systems, considering\
    \ the highly dynamic and distributed nature of\nthese networked systems [6]. Each\
    \ of the sensing devices and other end users may join or\nSmart Cities 2022, 5,\
    \ 318–347. https://doi.org/10.3390/smartcities5010019\nhttps://www.mdpi.com/journal/smartcities\n\
    Smart Cities 2022, 5\n319\nleave the system or change their locations at any time,\
    \ and that makes the topology of the\nsystem uncertain and subject to unexpected\
    \ changes. The control mechanisms with ﬁxed\nconﬁgurations are not efﬁcient for\
    \ the heterogeneous and dynamic nature of IoTs systems.\nThe distributed nature\
    \ of the IoTs also makes it more vulnerable to possible cyber-attacks\nand failures.\
    \ Failures in part of the system, especially in a central leader, may cascade\
    \ to\nother connected nodes and eventually result in the collapse of the whole\
    \ system. These\nsystems need to be designed and controlled in a more robust and\
    \ resilient way, promoting\nthe efﬁciency of the system in delivering services\
    \ and achieving its predeﬁned targets\nand goals.\nThe distributed processing\
    \ and control of multi-agent systems (MAS) or agent-oriented\nprogramming (AOP)\
    \ are some of the main technological paradigms for the efﬁcient deploy-\nment\
    \ of smart devices and services in the smart city [7]. These techniques are considered\n\
    the best abstraction approaches for modeling the operations and functionalities\
    \ of IoTs\nsystems in all three layers of perception, network, and application\
    \ [8]. They also proved\ntheir effectiveness in supporting autonomous networks\
    \ of the objects in the IoTs with\nself-adaptive and self-organizing properties\
    \ [9]. There is a large number of instantaneous\ncommunications between devices\
    \ in the IoT. In MAS, each device is mapped to an agent\nwith a predeﬁned range\
    \ of features and capabilities. This mapping provides a suitable high-\nperformance\
    \ infrastructure for testing and implementing large-scale data acquisition and\n\
    offers a scalable platform for the distributed computing of the received data\
    \ [10]. Moreover,\nsimulating objects as smart-reactive agents enables the real-time\
    \ tuning of control parame-\nters in complex interconnected networks, such as\
    \ the IoT. The autonomous agents in the\nMAS can be programmed and function without\
    \ human intervention. They are also able to\ninteract with other agents and reﬂect\
    \ modular functionalities and coordination. The agents\nin the MAS also reﬂect\
    \ goal-oriented behavior, which is one of the main requirements for\nmanaging\
    \ connected devices in smart cities [11]. These advantages make them suitable\n\
    platforms for implementing different domains of a smart city, including mobility,\
    \ envi-\nronment, governance, energy, economy, health, technology, and education\
    \ [12]. Figure 1\nsummarizes some of the related literature for the application\
    \ of multi-agent systems in\ndifferent applications in a smart city.\nEducation\n\
    Pireva et al., \n2014 Samia et \nal., 2018\nAl-Tarabily et \nal., 2018\nHamal\
    \ et al., \n2021\nIlango et al., \n2021\nEnergy\nCoelho et al., \n2017\nShawon\
    \ et al., \n2019\nKhan et al., \n2021\nCosta et al., \n2022\nMerabet et al.\n\
    2014\nMobility\nChen et al., \n2009\nTorabi et al., \n2018\nCruz-Piris et al.,\
    \ \n2018\nFernández-\nIsabel et al., \n2020\nEconomy\nČech et al., \n2013\nCalvaresi\
    \ et al., \n2019\nBajo et al., 2017\nPapi et al., 2022\nMinarsch et al.\n2021\n\
    Health\nAlanezi, 2021\nZhang et al., \n2021\nMutlag et al., \n2021\nJemal et al.,\
    \ \n2015\nElghamrawy, \n2020\nTechnology\nAlexakos & \nKalogeras,  \n2015\nLom\
    \ & Přibyl, \n2017\nCiortea et al.,\n2018\nClemen et al.,\n2021\nEnvironment\n\
    Likotiko et al., \n2017\nKoc & Işık, \n2020\nChallenger et a., \n2021\nAlsamhi\
    \ et al., \n2021\nGovernance\nKumar, 2011\nIskhakov et al., \n2018\nPawlak et\
    \ al., \n2018\nFanitabasi, 2021\nAdaptive Multi-Agent Networks\nGovernance\nKumar,\
    \ 2011\nIskhakov et al., \n2018\nPawlak et al., \n2018\nFanitabasi, 2021\nSmart\
    \ City\nFigure 1. Multi-agent systems in smart city applications.\nSelf-adaptiveness\
    \ is one of the main requirements in designing pervasive interconnected\nsystems,\
    \ such as the IoTs and smart cities [13]. The cooperative nature of MAS-based\
    \ systems\nand their learning capabilities enable the designing of robust solutions\
    \ that can adapt their\nconﬁguration and operations when facing unexpected variations\
    \ and disruptions [14].\nTo achieve these abilities, it is necessary to learn\
    \ from previous events, such as abrupt\nenvironmental changes and internal misfunctions,\
    \ and adapt the controlling parameters\nand strategies continuously. The overview\
    \ of a self-adaptive system is presented in Figure 2.\nA self-adaptive MAS constantly\
    \ receives feedback from internal units and the external\nenvironment. The received\
    \ data is monitored and analyzed, and perceptions are fed into\nSmart Cities 2022,\
    \ 5\n320\nthe planning module to decide the next action and response of the system.\
    \ Control com-\nmands are deﬁned considering system’s main goal and the units’\
    \ roles and responsibilities\nin achieving the desired level. Then, actions are\
    \ sent back to the actuating units and\noutcomes are collected for updating the\
    \ next actions and eventually system evaluation\nand modiﬁcations.\nExisting survey\
    \ articles in the literature cover relatively narrow topics of multi-agent\nsystems\
    \ and fail to provide a broad understanding of these systems and their utilization\n\
    in IoTs platforms. Some researchers only focused on particular applications of\
    \ these sys-\ntems [8,15–18] , while others reviewed variations of a certain control\
    \ technique [19–21].\nSuccessful applications of MASs in real-world smart cities\
    \ require a more comprehensive\nsystematic perspective, integrating different\
    \ steps of system deﬁnition, monitoring, plan-\nning, and evaluation. This paper\
    \ enhances the previously published papers related to MAS\nsystems with a systematic\
    \ survey of the steps required to realize future IoTs platforms\nand smart cities.\
    \ Speciﬁcally, we focus on the techniques that enable MAS to perceive\nsystem\
    \ status and environment dynamics and react autonomously to overcome unexpected\n\
    changes and disruptions. The rest of the paper is organized as follows: In Section\
    \ 2, all\nfactors required for deﬁning MAS frameworks are reviewed. Correspondingly,\
    \ Section 3\ninvestigates the state of the art of the models that can be applied\
    \ for data monitoring,\nand the status measurement of these systems. The concepts\
    \ and techniques for planning\nand controlling MASs are listed in Section 4. The\
    \ common platforms for validating and\nevaluating these systems are presented\
    \ in Section 5. The last section provides insights to\nexisting gaps and open\
    \ issues that can be addressed by this research community to achieve\nfully operative\
    \ autonomous IoTs in future smart cities.\nDefine\nMonitor\nPlan  \nParameters\n\
    Perceptions\nEvents\nActions\nEvaluate  \nModifications\nOutcomes\nUpdates\nFeatures\n\
    Goals\nFigure 2. Overview of a self-adaptive MAS.\n2. Deﬁnition Frameworks\nThe\
    \ ﬁrst step for designing an adaptive multi-agent network is to deﬁne the key\n\
    features and requirements of the system. These systems can be identiﬁed based\
    \ on the\ncharacteristics of their entities, operations and actions, information\
    \ ﬂow, and the external\nenvironment that they operate in [8]. Summary of the\
    \ inﬂuencing factors in deﬁning MASs\nis presented in Figure 3.\nSmart Cities\
    \ 2022, 5\n321\nAdaptive Multi-Agent Networks\nEntity\nInformation\nEnvironment\n\
    Action\nNodes\nFeatures (learning level, reliability, ...)\nLinks\nBoundary\n\
    Constraints\nAdaptation Sources\nUncertainty\nObservability\nMessage Passing Platform\n\
    Sharing Level\nFailures\nPhysical paths\nInformation flow\nCloseness\nRoles (leaders,\
    \ followers, ... )\nDevices (actuators, sensors, ...)\nSupport Level\nCollective\n\
    Cooperative\nCollaborative\nCompetitive\nCoordinative\nParameters\nStructure\n\
    Context\nSettings\nResources\nRequirements\nFully Observable\nPartially Observable\n\
    Not Observable\nCentralized\nDistributed\nDecentralized\nDelays\nNoises\nData\
    \ Loss\nTiming\nContinuous\nDiscrete\nEvent Triggered\nFigure 3. Contributing\
    \ factors in deﬁning adaptive MASs.\n2.1. Entities\nA MAS system is a network\
    \ of multiple entities that may or may not interact with each\nother. In most\
    \ of the MAS literature, these systems are mapped into a graph G(v, ϵ) with a\n\
    non-empty set of nodes or agents v = {v1, ..., vN} and edges ϵ connecting these\
    \ agents [22].\nEntity deﬁnes the type of these agents and their communication\
    \ links that can be same\nor different in a MAS platform. Nodes in adaptive multi-agent\
    \ networks varied in their\nassigned devices, roles, features, and dynamics. They\
    \ can be deﬁned as agents reﬂecting\neither software or hardware devices. In the\
    \ IoTs platforms, a node can be a sensor to collect\nthe data, an actuator to\
    \ perform commands, or a combination of both [23]. Nodes are also\ndeﬁned based\
    \ on the role/roles that they play in the network. For example, the agents\nmay\
    \ play leader or follower roles in MASs. The leader is the main decision maker\
    \ in these\nsystems, and has access to the target settings [24]. Other agents\
    \ called “followers” just\nmimic and minimize their distances from the leader.\
    \ Some agents are listeners that can only\nobserve their relative position and\
    \ environment, while other speaker agents are able to\nproduce a communication\
    \ output with other nodes and agents [25]. In the literature, there\nare more\
    \ complex roles, such as meta-agents, that can perform high-level responsibilities,\n\
    such as reasoning for other special-purpose agents [26]. Nodes may also play the\
    \ role\nof external observer or resource, either collecting status data or feeding\
    \ other operating\nagents [27].\nIn real-world heterogeneous MASs, agents/nodes\
    \ also differ based on their features\nand settings, including accessibility,\
    \ energy usage, authority level, and learning and in-\nformation processing capabilities\
    \ [28]. Sometimes agents are identiﬁed based on their\nreliability and performance\
    \ quality in the system. Reliability is the degree of reliance that a\nsystem\
    \ can place on the agent and its information and services. For example, in swarm\
    \ op-\ntimization, agents are categorized and distinguished based on the quality\
    \ of their solutions\nin the previous iteration [29]. In the IoTs systems, some\
    \ agents and elements may be self-\ninterested, with a lack of a global perspective\
    \ of the system [30], and the potential to inject\nunreliable and misleading information\
    \ into the system, which needs extra considerations\nduring modeling and evaluation\
    \ states [31].\nThe agents also differ based on their dynamics and mathematical\
    \ descriptions, ex-\nplaining the movement and evolution of the agents over time\
    \ [32]. These changes are\nthe result of injecting a control input in the agent.\
    \ These dynamics can be expressed as\nlinear or nonlinear models [33]. In linear\
    \ models, we may be faced with a ﬁrst-order single\nintegrator that all agents\
    \ converge to constant values, or double-integrator differential\nequations, which\
    \ agents may converge to multiple ﬁnal states [34]. These models are\nspecial\
    \ forms of general linear models, where the agents are inﬂuenced with state and\
    \ input\nmatrix parameters. Nonlinear agent models also include Lagrangian systems,\
    \ unicycle\nSmart Cities 2022, 5\n322\nmodels, and the attitude dynamics of rigid\
    \ bodies [32]. In the majority of nonlinear models,\nit is assumed that agents’\
    \ nonlinear functions are either unknown or contain unknown\nparameters [35],\
    \ and this uncertainty needs to be addressed by either limiting conditions or\n\
    approximation techniques, such as fuzzy logic systems [36] and neural networks\
    \ [37]. Each\none of these models use different sets of equations to explain the\
    \ dynamics of individual\nagents. Depending on the number of agreement metrics,\
    \ agents’ dynamics can be also\ncategorized as ﬁrst-, second-, and higher-order\
    \ models [8].\nOther than individual nodes, edges and joint connections between\
    \ the agents play an\nimportant role in the controllability of MASs [38,39]. These\
    \ interactions enable cooperation\nbetween agents and reﬂect communication paths,\
    \ such as wires, plans, and routes in\nthe network. They are deﬁned to investigate\
    \ the physical entity ﬂow or information\nsharing between agents [40]. Agents\
    \ in MAS platforms exchange their local states and\ncontrol commands with other\
    \ neighboring nodes or inﬂuencing nodes. The communication\nplatform is shown\
    \ as an undirected graph in cases that both agents can communication\nwith each\
    \ other. In the cases that there is a one-way information ﬂow between agents,\n\
    directed graphs are used to reﬂect these interactions [41]. The links and their\
    \ weights can\nbe also applied to show the similarities and closeness of agent\
    \ pairs in the system.\n2.2. Actions\nMulti-agent systems can be also investigated\
    \ from an action standpoint and distin-\nguished based on their support level,\
    \ requirements, adaptation sources, timing, and con-\nstraints that they may face\
    \ during their operations. Actions or decisions can be deﬁned\nin terms of policies\
    \ that determine a set of actions or probabilities for selecting actions in\n\
    each state of the system [42]. These policies are either deterministic or stochastic\
    \ policies.\nIn deterministic policies, the optimal ﬁxed decisions are determined\
    \ for each state of the\nagent, while in stochastic policies, the probability\
    \ distribution of the actions is deﬁned.\nIn nonstationary systems, the decisions\
    \ vary with time as well [43].\nSupport level refers to the agents’ supports and\
    \ reactions versus other agents’ actions\nand decisions. For example, they may\
    \ follow the same or different goals. Minimizing\noperation errors, maintaining\
    \ a certain status, or maximizing system performance over\ntime are examples of\
    \ these objectives [44]. There are also cases in which agents follow\nmore than\
    \ one goal, which require more complex reward structures [43]. In systems that\n\
    agents have common goals, depending on on their awareness, they may fall into\
    \ one of\nthe collective or cooperative MASs [45]. In collective MASs such as\
    \ robot formations,\nthe agents have the same goal, but agents independently perform\
    \ their own tasks and\nexplore their possible contributions to accomplish the\
    \ system’s main goal [46]. Swarm\nintelligence is also an example of the collective\
    \ systems in which agents optimize the\nmain objective function, and agents’ actions\
    \ are guided by the partial information sharing\nof successful agents with other\
    \ exploring agents [47]. In cooperative MASs, agents are\naware of other agents\
    \ and share their local information to help them achieve their common\ngoals.\
    \ Consensus and rescue agents are two well-known examples of such systems [21].\n\
    In systems with nonidentical goals, we may experience negative or positive interactions\n\
    between agents. Negative interactions refer to the agents competing for shared\
    \ resources\nor agents with conﬂicting individual goals [48]. In systems with\
    \ positive interactions\nsuch as path planning, the agents only focus on their\
    \ own operations while minimizing\ninterference with other agents [40]. In collaborative\
    \ MASs such as machine learning\ntechniques, although agents have different goals,\
    \ they help other agents by sharing their\nexperience and knowledge from their\
    \ environment and rewarding system. There are also\nexamples of multi-agent systems\
    \ with combined positive cooperative intra-group and\nnegative competitive inter-group\
    \ interactions [49].\nIt should be noted that not all goals in real-world problems\
    \ are functional and some\nare deﬁned to meet certain requirements, such as reliability\
    \ and the system’s tracking\nerror [50]. It was shown that the individual contribution\
    \ of the agents on the global solution\ncan be quantiﬁed and speciﬁed by a control\
    \ mechanism [51]. Requirement constraints\nSmart Cities 2022, 5\n323\nusually\
    \ reﬂect the desired output deﬁned by the decision maker. Synchronization, tracking,\n\
    and estimation errors are examples of such constraints in the system [24,52].\
    \ Deadlines\nfor accomplishing tasks can be also considered another form of the\
    \ constraints for the\nMAS [53].\nActions are also categorized based on the source\
    \ of their adaptations. Adaptation\ntechniques are deﬁned in three main groups\
    \ of parameters, structure, and context [13].\nSimilarly in MASs, adaptations\
    \ are achieved by changing a system’s decisions and be-\nhaviors through parameters\
    \ and network structures. These parameters can be deﬁned at\nmacro-level as system\
    \ parameters or at micro-level in terms of agents’ actions and decisions.\nThe\
    \ environment or context can be also altered using the decisions of the actuator\
    \ agents in\nthe system. In some MASs such as formation and tracking controls,\
    \ the agents only focus\non their locating decisions [19]. In other applications\
    \ such as distributed computing, their\nparameter decisions may represent their\
    \ beliefs and estimations for certain variables and\nsystem settings [54]. Settings\
    \ for the level of resource or service that agents provide for\nother agents or\
    \ borrow from other agents are other examples of parameter settings [55].\nAdaptation\
    \ can be also achieved by changing the structure and topology of the system.\n\
    Underlying topology can be ﬁxed or switched over time because of unreliable transmis-\n\
    sion or limitations in the communication and sensing range of the agents. At the\
    \ same\ntime, new agents may join the system and start to create new connections\
    \ and change the\nneighborhood map of the previous agents. Sometimes communications\
    \ may fail due to\nlink failures between two agents [56].\nActions are also distinguished\
    \ based on their timing and sequences [57]. The dynamics\nof the MAS can be shown\
    \ for both continuous-time [58] and discrete-time systems [38].\nOther than time-based\
    \ control techniques, we may deﬁne event-triggered mechanisms\nthat reduce network\
    \ congestion. These techniques initiate and release control commands\nonly after\
    \ detecting triggering conditions deﬁned based on certain error thresholds [59].\n\
    Any sampling [60], transmission [61], estimation [62], or control [63] can be\
    \ modiﬁed to an\nevent-triggered mechanism.\nThe actions of MASs are subject to\
    \ the constraints in their settings, resources, and re-\nquirements [64,65]. In\
    \ an IoTs system in which agents represent devices in the system,\nthe constraints\
    \ can reﬂect settings, technical limitations, or working range of the devices\n\
    in the network [21]. For example, it is necessary to consider the sensing limitations\
    \ of the\nwireless sensor agents or computation capabilities of the agents in\
    \ distributed processing.\nIn practical applications, it is also necessary to\
    \ model boundaries for the operations and\ninputs of actuator agents. These limitations\
    \ can be modeled as input saturation constraints\nduring the MAS modeling phase\
    \ [66]. Communication constraints are caused by physical\nobstacles or artiﬁcial\
    \ settings [67]. They can inﬂuence both agents’ actions and system con-\ntexts\
    \ by limiting network congestion in the system [67]. For example, physical barriers\
    \ may\nlimit the movements and actions of the multi-robot systems and need to\
    \ be modeled as state\nconstraints of the agents [68]. Most of the real-world\
    \ multi-agent systems are also subject\nto constraints in resources, such as data\
    \ sampling, computation, memory, and processing\nresource availability. The energy\
    \ constraint of the individual agents is another constraint\naffecting the design\
    \ and control of the distributed MASs [69]. Bandwidth capacity is a\nconstraint\
    \ that affects the agents’ communications with each other and controller units\
    \ [70].\n2.3. Environment\nAgents interact and inﬂuence the environment during\
    \ their operation period. The en-\nvironment can be deﬁned based on its boundary,\
    \ uncertainty, and observability levels.\nThere is no exact deﬁnition for the\
    \ boundaries of the environment in MASs, but in most of\nthe literature, any external\
    \ surrounding condition of the agents is deﬁned as an environ-\nment [71]. Environment\
    \ boundaries mainly depend on MAS application and in general,\nthey include a\
    \ shared physical, communication, and social structure and space of the agents,\n\
    and resources and services deﬁning the constraints, interaction rules, and relations\
    \ between\nthem [72]. In fact, this abstraction is considered an external world\
    \ that provides a median\nSmart Cities 2022, 5\n324\nfor coordination, maintaining\
    \ the independence of the processes from the actions of the\noperating agents.\
    \ The environment boundaries are also deﬁned based on their interaction\nmediation\
    \ and resource and context management mechanisms [73]. Other external entities\n\
    interacting with agents or monitored by them are also considered part of the environment.\n\
    For example, targets in tracking problems or reference models are part of the\
    \ external envi-\nronment in these problems [74]. In multi-agent programming,\
    \ the environment is models\nbased on aspects such as the action model, agents’\
    \ perception model, a computational\nmodel for internal and external functionalities,\
    \ the data exchange model between agents\nand the environment, and agents’ distribution\
    \ model [71].\nIn most of the real-world MASs, especially in the IoTs domain,\
    \ agents operate in\nan uncertain environment. Therefore, it is necessary to investigate\
    \ the environment’s\nlevel of uncertainty and underlying hidden dynamics. The\
    \ systems may perform in a\ndeterministic environment [75] or be subject to a\
    \ variety of uncertainties that affect the\ncontrollability of the MAS [76]. Uncertainty\
    \ can be caused because of an unknown value\nfunction or constraint of the system\
    \ [44,77]. For example, the location of other agents\nin path planning [78] and\
    \ agents’ behaviors and parameter settings in a heterogeneous\ncontrol [79] can\
    \ be considered as a source of uncertainties in the environment of the agent.\n\
    Uncertainty in communications is another source that becomes critical in MAS networks,\n\
    such as multi-robot systems [80]. Unknown disturbances can be one of the uncertainty\n\
    sources in the MASs environment [81]. Sometimes uncertainty is a result of unmodeled\n\
    dynamics between agents and the environment [82]. The environment can be uncertain\n\
    in such a way that targets appear at random times [83]. Uncertainty may also originate\n\
    in one of the environment parameters [84]. Uncertainty in the environment can\
    \ be also\nreﬂected by injected noises in the system that affect the state of\
    \ the agents [85]. The main\nsource of the uncertainty arises from the operations\
    \ of the other agents that make the\nenvironment unpredictable. These dynamics\
    \ make the environment nonstationary due to\nthe simultaneous learning of the\
    \ agents for the best policies that change the overall state\nof the environment\
    \ constantly [86]. Uncertainty in the environment is usually modeled\nby stochasticity\
    \ in process equations, output/measurement equations, or communication\nchannels\
    \ between the agents [20].\nIn theory, the environment can be modeled on one of\
    \ the categories of the fully\nobservable, partially observable, or not observable\
    \ categories [87]. In fully observable\nsystems, agents are able to perceive complete\
    \ information about the state of the environment\nand its elements, such as resources\
    \ and other agents’ states [74]. Agents in a partially\nobservable environment,\
    \ such as a partially observable MDP (POMDP), are only able to\nlearn partial\
    \ information about the states and their probability distributions instead of\n\
    absolute values [88]. In these systems, the relations between actions and rewards\
    \ are not\nclear and need to be estimated [89]. In a more extreme case, the agents\
    \ may not be able to\nperceive anything about the environment and blindly act\
    \ on their tasks and responsibilities.\nVisibility plays an important role in\
    \ the controllability and efﬁciency of the MASs [90]. Most\nof the developed techniques\
    \ are based on an unrealistic assumption for the observability\nof the environment\
    \ and agents are always under constraints, forcing them to learn the\nabstractions\
    \ of the environment instead of the details. One of the main assumptions for the\n\
    observability of the environment for agents’ actions and their rewards and penalties\
    \ is that\nof the Markovian environment [91]. In this environment, the future\
    \ state of the agents is\ndetermined by their current states. In non-Markovian\
    \ environments, state dynamics are\nmore complex and there may be strong dependencies\
    \ on initial states or changes that are\nepisodic over time [92]. Observability\
    \ can be also limited by agents’ information received\nfrom other agents. For\
    \ example, they may not have access to the communication network\nall the time\
    \ and get disconnected for a period of time [90]. The agents may also have noisy\n\
    observations affecting their perceptions from the environment and other agents\
    \ [93].\nSmart Cities 2022, 5\n325\n2.4. Information Flow\nTo design an effective\
    \ MAS control mechanism, it is necessary to pay attention to\nthe information\
    \ ﬂow between agents that can be deﬁned in the forms of its message\npassing platform,\
    \ information sharing level, and communication failures over time [94].\nInformation\
    \ ﬂow in an adaptive multi-agent network is implemented either for collecting\n\
    agent status and outcomes and sending them to controllers or for delivering commands\n\
    from controllers to interacting agents.\nThe message passing platform reﬂects\
    \ the access level of the agents to high-level\ninformation about system status,\
    \ goals, and constraints. Three main platforms for infor-\nmation ﬂow between\
    \ agents and controllers include centralized, layers or decentralized,\nand distributed\
    \ frameworks (Figure 4). In a centralized approach, one agent has access\nto agent\
    \ information and decides for the whole system [95,96]. Scalability, vulnerability\n\
    to the controller agent failure, and a need for high communication resources for\
    \ agents\nare common problems for this approach. To overcome this issue, some\
    \ researchers used\nassumptions such as the parametric similarity of the agents\
    \ to approximate all policies in\nonly one unique policy [97]. After receiving\
    \ a common policy in this framework, agents\ncan locally explore their policies\
    \ to minimize their own losses. The common policy is\nupdated interactively using\
    \ the feedback received from the trajectories of all agents. These\ntechniques\
    \ are considered as hybrid forms with some levels of decentralized information\n\
    updates and ﬂow between agents. In decentralized or layered approaches, the system\
    \ is\ncontrolled by more than one controller in each layer or community [98].\
    \ This technique is\nconsidered more reliable than the previous technique, but\
    \ it requires a precise deﬁnition\nof the communication and cooperation rules\
    \ between the controllers. The distributed\nform is considered the most common\
    \ technique in controlling MASs, where each agent is\nresponsible for deciding\
    \ and coordinating with other agents to achieve the main goal of the\nsystem [99].\
    \ In this technique agents have full autonomy to select their own actions [100].\n\
    This technique is more robust and scalable. However, it is more challenging in\
    \ terms of\nﬁnding the best decision of the agents given their limitations in\
    \ exploration and information\naccess. None of these platforms are considered\
    \ a best option, and depending on the system\ngoals and resources, one speciﬁc\
    \ platform is chosen.\nCentralized\nDecentralized\nDistributed\nSensor\nActuator\n\
    Controller\nState Data\nCommands\nFigure 4. MAS information ﬂow platforms.\nIt\
    \ is also necessary to consider the knowledge and information sharing levels between\n\
    agents [101]. It was shown that the degree of information sharing directly affects\
    \ the learn-\ning process of the agents and system efﬁciency [102]. Some of the\
    \ agents have minimum\ninformation-sharing regarding expected rewards, agent conﬁguration,\
    \ or adaptation tac-\ntics [28]. Although in most of the existing literature it\
    \ is assumed that agents are only able\nto communicate with their neighboring\
    \ agents, some studies targeted other types of peer-\nto-peer communications between\
    \ agents, such as broadcasting or communications through\nmiddle agents [94].\
    \ The middleware can be a matchmaker that manages and matches the\nright information\
    \ to the right agent or a broker that ﬁlters or rewords the communicated\ninformation\
    \ and then distributes it to the related agents. The agents may also use a trace\n\
    manager that receives the data and sends it to the subscribed agents based on\
    \ their interests\nand registered requests. In the literature, more ﬂexible information\
    \ sharing was proposed,\nwhereby agents are able to compare and choose their own\
    \ communication platforms [103].\nSmart Cities 2022, 5\n326\nThey can also have\
    \ the authority to select their communication source from a list of multiple\n\
    signal sources [104]. On the other hand, targeted communications architecture\
    \ helps agents\nto choose the contents and receivers of their messages in cooperative,\
    \ competitive, or mixed\nenvironments [105].\nThese communication and information\
    \ dynamics are subject to failures and challenges,\nsuch as delays, data losses,\
    \ quantization errors, noises, unknown dynamics, fading channels,\nnodes-access\
    \ competition, and sampling intervals [60]. In communication latencies, state\n\
    information of the neighboring agents is received by delays due to limitations\
    \ on the\ncapacity of communication channels and network congestion [106]. In\
    \ some cases, delays\nare not ﬁxed and vary due to differences in the observability\
    \ of the state over time [107].\nThis is different from input delays that reﬂect\
    \ the processing and connecting times of the\nincoming data ﬂow in the MASs [108].\
    \ The other inﬂuencing factor is to consider data\nlosses in deﬁning MAS communications.\
    \ The packet dropout rate in the network is usually\nvariable and stochastic due\
    \ to ﬂuctuations in the power supply and the trafﬁc of the system,\nand they are\
    \ usually modeled by the Bernoulli process [109]. Information dynamics are also\n\
    designed based on missing information rates during communications and the usefulness\
    \ of\nthe collected information for their decision-making process [110]. Noises\
    \ in agents’ statuses\nand measurements are another challenge inﬂuencing the quality\
    \ of the information ﬂow\nin multi-agent networks [111]. Two major types of noises\
    \ are additive and multiplicative\nnoises. The noises caused by external sources\
    \ are modeled as additive-inﬂuencing nodes\nmeasurements. The multiplicative noises\
    \ are the results of missing information and a\nfailure in modeling the internal\
    \ dynamics of the system, and inﬂuence agents’ states. They\nare also modeled\
    \ as random noise with known probabilities and unknown non-random\nnoise with\
    \ bounded energy or bounded magnitude [62].\n3. Monitoring Paradigms\nTo survive\
    \ in dynamic environments, an adaptive multi-agent system requires the\nconstant\
    \ monitoring of its internal and external states. The data collected by distributed\n\
    sensing agents are processed to explore the environment, evaluate system performance,\n\
    and deﬁne the next optimal actions. The data analysis can be implemented in a\
    \ central\nprocessor or in distributed local processors. The centralized single\
    \ processing of the data\nwill be very challenging given the complex relations\
    \ between agents and the high levels\nof multicollinearity between variables [96].\
    \ Traditional data mining techniques for ﬂat\nvectorial data analysis are inefﬁcient\
    \ for handling large-scale data with inherent relational\ndependencies, weights,\
    \ edge directions, and heterogeneity between system elements [112].\nThe other\
    \ challenge for processing the data collected through MASs is resource limitation\n\
    for transmission, processing, and storing high-dimensional data streams collected\
    \ by the\nagents over time. In the literature, a wide range of techniques were\
    \ proposed for alleviating\nthe data collection burden, and event-triggered data\
    \ sampling is one of the most acceptable\napproaches [62]. Distributed processing,\
    \ data abstraction, and subgraph selection are\nother examples for reducing the\
    \ computation times of data processing in MASs [65]. Some\nresearchers also focused\
    \ on developing innovative techniques for analyzing distributed data\nstreams,\
    \ which are mainly categorized as spatio-temporal data analyzing techniques [113].\n\
    In these techniques, deep learning algorithms such as graph neural networks (GNN),\n\
    graph convolutional networks (GCN), graph autoencoders (GAE), graph recurrent\
    \ neural\nnetworks (GRNN), or graph reinforcement learning were widely applied\
    \ for processing the\ndata collected from interconnected system elements or agents\
    \ [114]. These approaches were\napplied for one of the data mining tasks, such\
    \ as dimension reduction and prediction, and\npattern mining, clustering, and\
    \ anomaly detection in large-scale networks, such as multi-\nagent systems. The\
    \ required analytics for these techniques can be implemented in agent\nor system\
    \ levels. In this survey, we focus on system-level techniques and omit reviewing\n\
    techniques in single-agent levels. This is mainly because most of the agent-level\
    \ techniques\nare implemented on traditional vectorial data and are not speciﬁed\
    \ for MAS platforms.\nSmart Cities 2022, 5\n327\n3.1. Dimension Reduction and\
    \ Filtering\nOne of the main requirements for MASs is a way to abstract the overall\
    \ data stream or\nﬁlter unnecessary information collected over time. This is very\
    \ important in distributed\nsystems such as the IoTs and can considerably reduce\
    \ the computation time of the main\nsystem. These techniques are also effective\
    \ for clustering and categorizing the system status\nor their quick comparison\
    \ with the target network.\nSome initial techniques for abstracting MASs and their\
    \ relations was the use of graph\ntheory and the eigenvectors of the network adjacency\
    \ matrix [115]. These techniques are\nnot sufﬁcient for complex systems with dynamic\
    \ multi-dimensional agents. To solve this\nproblem, encoding techniques such as\
    \ GAE were applied for encoding or decoding graphs\ninto vectors [114]. The encoding\
    \ techniques are called network-embedding mechanisms\nand may encode the topological\
    \ features of the nodes and their ﬁrst- and second-order\nproximity information\
    \ [116], agents’ attributes [117,118], MAS dynamics and evolution over\ntime [119],\
    \ and information diffusion or dynamic role evolutions [120]. Generative network\n\
    automata techniques are also applied for the simultaneous representation of the\
    \ state transi-\ntions and topology transformations of the network based on graph\
    \ rewriting concepts [121].\nOther deep neural techniques that can be applied\
    \ for MAS abstraction include long–short-\nterm memory (LSTM) recurrent neural\
    \ networks and variational autoencoders [122]. Some\nof these techniques can be\
    \ also utilized for modeling opponent agents based on the local\ninformation of\
    \ the main agents [123]. Some knowledge distillation techniques such as\npruning\
    \ and low-rank decomposition can be also applied for original multi-agent systems\n\
    to remove redundant information collected from distributed agents [124]. There\
    \ are other\nabstraction techniques in the literature that reduce the number of\
    \ local states by collaps-\ning data values. These techniques are mostly applied\
    \ for the veriﬁcation and testing of\nmulti-agent systems [125]. Traditional dimension-reduction\
    \ techniques such as principal\ncomponent analysis were also modiﬁed successfully\
    \ and applied for multi-agent networks,\nsuch as WSN [126]. The only drawback\
    \ of these techniques is their high computation time\nfor large-scale systems\
    \ and losing the neighborhood pattern of the agents. This can be\nsolved by relying\
    \ more on the structural roles of nodes and increasing the ﬂexibility of\nlearning\
    \ node representations [127]. Learning over a common communication grounding\n\
    through autoencoding was another solution to reduce computation time and increase\
    \ total\nsystem performance [128].\n3.2. Anomaly Detection\nThe remote access\
    \ of different devices and the distributed nature of computing in\nthe IoTs makes\
    \ it vulnerable to various attacks. Many different techniques were proposed\n\
    to identify anomalies in distributed platforms, such as MAS [129]. Anomalies are\
    \ states\nof the system that remarkably differ from normal system operations.\
    \ These techniques\ncan be applied for malicious interactions or attacks that\
    \ may delete or manipulate the\ndata related to the network structure and node\
    \ or link statuses [130]. Anomalies can be\nin three different levels, such as\
    \ point, contextual, or collective anomalies [114]. In point\nanomalies, irregularity\
    \ happens in one agent that can be observed without any reason.\nContext abnormalities\
    \ include a higher range of agent anomalies over time. For example,\ncommunication\
    \ patterns may change in part of the MAS. In collective anomalies, agents\nalone\
    \ may seem completely normal, but a collection of the data collected from agents\n\
    shows unusual patterns. The survey for the anomaly detection in the node, edge,\
    \ subgraph,\nand graph levels is reviewed in reference [131]. These anomalies\
    \ can emerge in structural,\nattributed, or dynamic temporal graphs. In node-level\
    \ anomaly detection, the agents\nthat are signiﬁcantly different from other agents\
    \ are identiﬁed. In the IoTs platform, that\ncan reﬂect abnormal users or a network\
    \ intruder that injects fake information into the\nsystem [132]. These nodes also\
    \ can represent agents with performances considerably\ndeviating from the rest\
    \ of the agents. In edge-level anomaly detection, unusual and\nunexpected connections\
    \ and relations between agents are identiﬁed [133]. Subgraph-level\nanomaly detection\
    \ focuses on multiple agents that collectively show anomalous behavior.\nSmart\
    \ Cities 2022, 5\n328\nIdentifying this group of agents will be very challenging\
    \ and usually bipartite graphs\nare utilized to identify dense blocks in these\
    \ networks [134]. Sometimes the anomalies\nare identiﬁed at a graph level and\
    \ in certain snapshots of the temporal system, using its\nunusual evolving patterns\
    \ and features. Deep neural networks such as LSTM were widely\napplied for this\
    \ purpose [135]. Multi-agent systems are introduced as an efﬁcient platform\n\
    for anomaly detection techniques for IoTs systems [129]. Other techniques such\
    \ as Kmean\nclustering proved their effectiveness for identifying unusual patterns\
    \ of collected data in\ndistributed networks [136].\n3.3. Predictive Models\n\
    Predictive models can be applied at either system or entity levels for predicting\n\
    certain features and characteristics over time [137]. For example, knowing and\
    \ predicting\nfuture topological changes, such as removing and adding agents and\
    \ new communications\npatterns, can have a substantial effect on designing control\
    \ protocols. Deep graph generative\nmodels are widely used for this purpose to\
    \ model a network structure without knowing its\nstructural information [138].\
    \ They may also utilize recurrent neural networks for predicting\nfuture connections\
    \ or edges in the graph based on node-ordering procedures [112]. There\nare other\
    \ techniques that utilize efﬁcient sampling strategies to extract patterns in\
    \ input\ndata and learn their dynamics to generate a predicted temporal network\
    \ [139]. Other than\nstructural patterns of the system, estimating future states\
    \ of other agents can help agents\nto optimize their own actions more efﬁciently.\
    \ It was proved that convolutional neural\nnetworks successfully captured the\
    \ spatio-temporal characteristics of the networked entities\nand predicted their\
    \ future features (nodes) and communications (edges) with neighboring\nagents\
    \ [140]. As an example, predicting the future trajectories of the agents is one\
    \ of the\ncommon problems in the literature, with a main application in robot\
    \ planning, autonomous\ndriving, and trafﬁc prediction [141]. These estimation\
    \ techniques are useful in missing\ndata treatment of IoTs systems as well [142].\
    \ The other application of predictive models\nis in the early detection of events\
    \ in event-triggered techniques or identifying hotspots\nwith an unusual density\
    \ of certain events [143]. Classiﬁcation techniques for a network\nof connected\
    \ agents can be applied for the performance monitoring of the system and\ninitiating\
    \ corrective actions if classiﬁed as an abnormal graph [144]. One of the common\n\
    platforms for this purpose is DeepSphere, which was applied to learn the evolving\
    \ patterns\nof a system over time and identify anomalous snapshots of the network\
    \ over time [145].\nThe distributed estimation of certain features of the system\
    \ or environment is another\nexample for system-level predictive models. These\
    \ techniques can either run at the same\ntime or need consensus in their two sampling\
    \ stages, and utilize a wide range of approaches,\nincluding the adaptive observer,\
    \ Kalman ﬁlter, Luenberger observer, Bayesian ﬁlter, belief\npropagation inference,\
    \ and the H∞ ﬁlter [146].\n3.4. Clustering\nMonitoring MAS dynamics can be also\
    \ targeted for clustering agents based on their\nperformance or hidden interestsThis\
    \ is mainly because grouping agents may help to iden-\ntify non-cooperative agents\
    \ or design more dedicated control frameworks for each group of\nthe agents [147].\
    \ Sometimes clustering is helpful when heterogeneous agents show different\ndynamics\
    \ in consensus, which requires more customized control protocols [148]. The simi-\n\
    larities between a group of agents or their trajectories can be measured by dynamic\
    \ corre-\nlations between agents [149] or using principal component analysis (PCA)\
    \ projects [150].\nClustering agents can be investigated by applying traditional\
    \ graph partitioning and com-\nmunity detection techniques, such as spectral clustering,\
    \ hierarchical clustering, Markov\nmodels, and modularity maximization methods\
    \ [151,152]. Deep learning is also considered\nan effective tool for community\
    \ detection in high-dimensional multi-label graph-structured\ndata [153]. This\
    \ problem was also investigated in dynamic time-varying graphs, with the\nevolution\
    \ of groups and their growth, contraction, merging, splitting, and birth and death\n\
    over time [154]. The results show that the emergence of these communities is independent\n\
    Smart Cities 2022, 5\n329\nof initial measurements and settings and mostly depends\
    \ on node dynamics, underlying\ninteraction graphs, and coupling strengths between\
    \ agents [155]. Cluster dynamics are also\ninvestigated in controlling a swarm\
    \ of agents in formation control and their aggregation,\nand splitting patterns\
    \ and other quantitative features, such as size and cluster distances\nfrom each\
    \ other [156]. Sometimes, clustering is a dynamic process in which agents with\n\
    similar behaviors ﬁnd each other and join together in the state space [157]. This\
    \ will be\nsimilar to the dynamics of the group consensus techniques presented\
    \ in the literature [158].\nOther similar variations were proposed for deﬁning\
    \ monitoring agents to optimize the\nprocess of automated clustering [159].\n\
    3.5. Pattern Recognition\nTo design more robust and resilient MASs, they should\
    \ be able to learn the behavior of\nother agents and environment dynamics to improve\
    \ their performance over time. Pattern\nmining is considered one of the main techniques\
    \ for knowledge discovery and identifying\ncausal structures and associations\
    \ [160]. For this purpose, graph pattern mining techniques\nare recognized as\
    \ suitable approaches for knowledge discovery in multi-agent network\nsystems.\
    \ The pattern mining techniques can focus either on structural patterns such as\n\
    frequent subgraphs, paths, cliques, and motifs, or the label evolution patterns\
    \ of dynamic\ngraphs with single or multiple attributes [161]. Knowledge discovery\
    \ on graphs can be also\napplied to ﬁnd periodic patterns that repeatedly are\
    \ observed in agents’ communications or\nstates [162]. Sometimes considering more\
    \ than one label in agents and their communications\nadds interesting ﬁndings\
    \ for the dynamic changes of the attributed multi-agent graph.\nAs an example,\
    \ mining-trend motifs help to identify a group of nodes or agents that show\n\
    similar increasing or decreasing trends over time [163]. More complex trends such\
    \ as\nrecurrent trends are identiﬁed in a set of nodes over a sequence of time\
    \ intervals using\nalgorithms, such as RPMiner [164]. The identiﬁed patterns in\
    \ attributes and states may\nentail changes in the network topological structures\
    \ and agnets communication, which are\nknown as triggering patterns [165]. It\
    \ was shown that in the pattern mining of multi-agent\nnetworks, relying on occurrence\
    \ frequency is sometimes misleading and new metrics such\nas sequence virtual\
    \ growth rate are necessary to identify highly correlated patterns with\na signiﬁcant\
    \ trend sequence in the graph [166]. Norm mining is another category that\ninvestigates\
    \ events triggering rewards and penalties and identiﬁes the norms in a varying\n\
    environment setting [167]. This will help agents to survive and adapt to their\
    \ environment\nwithout the deprivation of their resources and services.\n4. Development\
    \ Approaches\nMulti-agent systems are one of the main paradigms proposed for implementing\
    \ the\nIoTs. The ﬁrst step for developing these systems is to determine their\
    \ main platform and\ndeﬁne the features reviewed in Section 2. Then, appropriate\
    \ learning mechanisms are\nselected to empower their adaptiveness against a new\
    \ environments and possible changes\nin external and internal dynamics. At the\
    \ end, a suitable control mechanism is designed to\nguarantee achieving the main\
    \ goals of the system.\n4.1. Main Platform\nAdaptive multi-agent networks are\
    \ developed on the main platform, enabling informa-\ntion ﬂow, intelligent learning,\
    \ and the real-time decision making of the included agents and\nelements. This\
    \ abstraction framework for modeling the structural, behavioral, and social\n\
    models of the agents can be deﬁned using appropriate an AOP, which is a specialization\
    \ of\nobject-oriented programming [168]. These platforms initially were inspired\
    \ by adaptive\norganizational models and later more structured techniques (e.g.,\
    \ JADE) were proposed\nin the software engineering domain [169]. Rapid advances\
    \ in computation capabilities\noffered more customized models, such as O-MaSE,\
    \ that utilized three concepts of the meta-\nmodel, method fragments, and guidelines\
    \ based on method engineering concepts [170].\nThese platforms varied case by\
    \ case and targeted either a speciﬁc application domain, such\nSmart Cities 2022,\
    \ 5\n330\nas a microgrid [15], or ﬂexible general-purpose platforms [171]. Some\
    \ of the program-\nming languages applied for implementing agent-oriented platforms\
    \ include Java, C/C++,\nPython, AgentSpeak, NetLoGo, XML, and GAML [172]. The\
    \ majority of these platforms\nare designed by adding reasoning and cognitive\
    \ models, such as the procedural reasoning\nsystem (PRS) and/or belief–desire–intention\
    \ (BDI) models [173]. PRSs help reasoning about\nprocesses, enabling agents to\
    \ interact with the dynamic environment and use procedures\nfor selecting intentions.\
    \ These procedures are triggered when they can contribute to achieve\ncertain\
    \ goals. In a BDI model, which is the most common approach, the behavior of the\n\
    agent is deﬁned in terms of its beliefs, goals, and plans. In this model, the\
    \ interpreter is re-\nsponsible for updating these features based on the feedback\
    \ received from the environment\nand the managing agents’ intentions/or actions.\
    \ These models showed great success in\nintegrating AI as a pluggable component\
    \ [174] or in meta-level plans [175]. The multi-agent-\noriented programming (MAOP)\
    \ platforms such as JaCaMo have a structured approach\nbased on three concepts\
    \ of agent, environment, and organization dimensions [176]. They\nalso successfully\
    \ integrated with the IoTs to offer self-adaptive applications in human-\ncentric\
    \ environments [177]. Systems of systems is another efﬁcient methodology to develop\n\
    meta-models to manage MASs with different subsystems [178]. During the last decades,\n\
    tens of these approaches and updates for old versions were proposed. To choose\
    \ the best\noption from the long list of the proposed AOP techniques and platforms,\
    \ they can be com-\npared based on basic platform properties, usability and scalability,\
    \ stability and operating\nabilities, security management, and their applicability\
    \ in practice [172]. They also need to\nbe investigated and evaluated based on\
    \ their architectural debt and their long-term effects\non the health of a software\
    \ system [179]. The evaluation frameworks for agent-oriented\nmethodologies are\
    \ reviewed in reference [180]. Although various AOPs were proposed in\nthe literature,\
    \ they still suffer strong reasoning and decision modules for modeling costs,\n\
    preferences, time, resources, and durative actions, etc., [181]. As a result,\
    \ developers are\nstill reluctant to switch to these platforms and prefer to utilize\
    \ the current programming\nlanguage with small modiﬁcations of the main code [181].\n\
    4.2. Learning Mechanism\nOne of the main frameworks in adaptive multi-agent networks\
    \ is their learning mech-\nanism. Most of the recent learning frameworks are online,\
    \ helping the system to learn the\ndynamics of their environment and the best\
    \ responses to these changes. Various aspects\nsuch as knowledge-access level\
    \ and learning technique were investigated for grouping\nthe MAS learning literature\
    \ [182]. Agents may have full autonomy to learn and share\ntheir knowledge with\
    \ other agents [100] or may be restricted to only communicate and\nshare their\
    \ states with a central learner [183]. If learning is system-wise, one agent or\
    \ the\nmain ruler learns the policies for all agents in the system. In this case,\
    \ the learner has\nfull observability to discover the states of the involved agents\
    \ without a detailed focus\non the individual agent’s actions. In this learning\
    \ mechanism, information is collected\nfrom distributed agents and fed to the\
    \ central learner of the system. This helps to achieve\nhigh-level information\
    \ about system dynamics without getting trapped in the difﬁculties of\ncoordinating\
    \ information ﬂow between multiple learners. Centralized learning and train-\n\
    ing can be integrated with either a central decision maker or decentralized excitation\
    \ [184].\nIn the second category, the centralized learner learns the value function\
    \ using the criteria\nfor guiding distributed actors [185]. The centralized learning\
    \ mechanisms suffer from\nproblems such as the complexity of the state process\
    \ and learning process. They were also\ndeveloped based on some unrealistic assumptions,\
    \ such as consistent and complete access\nto all agents’ information. The other\
    \ challenge of centralized learning is its vulnerability\nagainst the failures\
    \ of the learner, a need for the high computation and memory resources\nin the\
    \ central learner, and scalability for large-scale systems with thousands of distributed\n\
    agents [186]. As a result of this learning, it may entail homogeneous team learning\
    \ with one\npolicy for all agents or heterogeneous learning with a unique behavior\
    \ for each individual\nagent [187]. Other variations of this platform to alleviate\
    \ the listed challenges are QMIX\nSmart Cities 2022, 5\n331\nwith mixed global\
    \ and local components [188]. Coordinated sampling by means of the\nmaximum-entropy\
    \ RL technique and policy distillation were other proposed solutions for\nimproving\
    \ centralized learning mechanisms [189]. There are also some hybrid techniques\n\
    that agents learn individually but then share in a centralized common knowledge\
    \ memory\nfor sorting and storing their knowledge [190]. In distributed learning\
    \ techniques, each\nagent is responsible for their own learning [191]. In these\
    \ learning frameworks, the agents\nhave limited observability and only explore\
    \ their surrounding environments and they are\nunable to learn the overall dynamics\
    \ of the systems in real-time. Most of these learning\ntechniques are integrated\
    \ with the decision-making process of the control mechanisms.\nThe role-based\
    \ learning technique is another trend in the literature in which the complex\n\
    tasks are decomposed into different roles. The RODE technique is one of the examples\n\
    for such learning that utilize agents clustering to discover roles and the required\
    \ learning\ngroups [90]. The learning and updating learned models can get initiated\
    \ based on certain\nevents or on discrete or continuous-time updates over the\
    \ system’s operation. Some of\nthe common learning techniques applied in the literature\
    \ include reinforcement learning,\nsupervised learning, deep learning, game theory,\
    \ probabilistic, swarm systems, applied\nlogic, evolutionary algorithms, or a\
    \ combination of some of them [192]. Since most of these\ntechniques were applied\
    \ for the simultaneous learning and control of the MASs, they are\nreviewed in\
    \ the next section. Some of the proposed techniques for learning are initiated\n\
    after receiving initial domain knowledge. In the literature, these techniques\
    \ are identiﬁed\nas transfer learning methods [182].\n4.3. Control Solutions\n\
    Control solutions can be investigated from aspects such as applications and techniques.\n\
    There are some literature that surveyed existing control techniques for multi-agent\
    \ sys-\ntems [193]. They focused on interaction limitations and categorized them\
    \ into sensing-based\ncontrol, event-based control, pinning-based control, resilient\
    \ control, and collaborative\ncontrol. This sections reviews the applications\
    \ and techniques of MASs control especially\nthose that can be applied in controlling\
    \ and managing smart cities.\n4.3.1. MASs Applications\nThe multi-agent systems\
    \ control is applied for a variety of domains including consen-\nsus and synchronization,\
    \ leader-following coordination, formation control, containment\nand surrounding\
    \ control, coverage, and distributed optimization and estimation [32,194].\nConsensus\
    \ and synchronization are the most common domains for the MAS literature.\nThe\
    \ main goal in this category is to reach an agreement in all agents and lead their\
    \ states\nto a common state or time-varying reference [21]. This is achieved by\
    \ monitoring and\ninformation exchanges between neighboring nodes. Therefore,\
    \ consensus highly depends\non the communication graphs between agents and their\
    \ information sharing levels [195].\nOne of the main features of a smart city\
    \ is consensus between smart service systems that\ninteract and coordinate decisions\
    \ in the system. For example, in a typical autonomous\ntransportation method,\
    \ multiple agents such as client agents, car agents, parking agents,\nroute agents,\
    \ and many other agents interact with each other while seeking the agreement\n\
    and balance of interests [196]. Other examples for the application of MAS consensus\
    \ are\npresented for smart parking that tests various negotiation strategies to\
    \ reach agreement\nbetween the involved agents [197]. Applications of consensus\
    \ in other platforms of a smart\ncity such as in block chains [198] and smart\
    \ grids [199], a smart factory [200], or other\nservices provided by multi-robot\
    \ rendezvous [201] are investigated in the literature. Con-\nsensus can be also\
    \ applied for distributed computing where different processors need to\nreach\
    \ the same estimation after iterative computations [21]. Leader–follower consensus\
    \ can\nbe considered as a special case of consensus in which the main goal is\
    \ to minimize tracking\nerror and state difference between leader and follower\
    \ agents [24]. Examples of leader–\nfollower control for smart city applications\
    \ are presented for IoTs-based digital twins [202]\nand irrigation management\
    \ systems [203]. This can be used in pinning control, in which\nSmart Cities 2022,\
    \ 5\n332\nthe leader reﬂects the desired trajectory of the system [41]. One of\
    \ the best applications\nof pinning control is to restore complex cyberphysical\
    \ networks in the smart city to their\ninitial states after mixed attack strategies\
    \ [204]. Group consensus is another variation in\nwhich agents with different\
    \ task distributions converge to multiple consensus values [205].\nApplications\
    \ of this consensus for capturing the supportability of applications on smart\n\
    city platforms and the IoTs [206], or recovery control with ideal structures [207],\
    \ are also\npresented in the literature.\nFormation control is another domain\
    \ for applying MASs [19]. In this category of\ncontrol framework, network evolution\
    \ is guided to reach and maintain a desired geo-\nmetric form by monitoring and\
    \ controlling their absolute or relative distance from other\nagents [208]. In\
    \ problems with monitoring agents’ positions, depending on their interac-\ntions\
    \ with other agents, they might follow displacement-based control [209] or distance-\n\
    based control mechanisms [210]. The relative position of neighboring agents is\
    \ measured\nwith respect to a global coordinate system in displacement-based control,\
    \ while the base\nis changed to the agent’s local coordinate system in distance-based\
    \ control systems [19].\nFlocking is a special case of formation control in which\
    \ the main goal is to keep all agents\nat an equal distance from their neighbors\
    \ [211]. Applications of formation control in smart\ncities are presented in the\
    \ literature for search and rescue, operations, intelligent highways,\nand mobile\
    \ sensor networks [212]. Flocking is another techniques that can be used to solve\n\
    robust problems in distributed environments [213]. In this technique, a large\
    \ number of\nagents organize into a coordinated motion using three simple rules\
    \ of cohesion, separation,\nand alignment [214]. One potential application for\
    \ this technique can be forming a setting\nin which each agent is equally distanced\
    \ from its neighbors [32]. This idea is applied to\npropose simple and scalable\
    \ protocols for the migration of virtual machines (VMs) in IoTs\ncloud platforms\
    \ [215].\nContainment control is similar to distributed average tracking with\
    \ multiple leaders.\nHowever, in this technique, the control protocol guides the\
    \ followers and their state de-\ncisions to the convex hull formed by the leaders\
    \ instead of leaders’ state averages [216].\nThis can be helpful in smart cities\
    \ when a failure or accident happens in certain areas.\nContainment control guides\
    \ multi-agents such as autonomous robots to secure and remove\nundesirable outcomes\
    \ while limiting their movements into other populated areas in the\ncity [217].\
    \ In the surrounding control problems, the main goal is to protect a set of sta-\n\
    tionary or moving agents from possible threats surrounding them using other controlled\n\
    agents [218]. One of the main applications for this technique is unmanned ground\
    \ vehi-\ncles or unmanned surface vessels [219]. There are very few applications\
    \ for containment\nand surrounding control in the literature and this area needs\
    \ further investigation to ﬁnd\nsuitable applications in future connected smart\
    \ cities [220].\nOne of the common goals in utilizing MASs is distributed optimization\
    \ [49]. These\ntechniques cover problems such as constrained, unconstrained, dynamic,\
    \ and time-varying\nmodels. The applications for this domain of MAS control in\
    \ smart cities are promising [221].\nExamples of such applications are presented\
    \ in energy [222,223], transportation [148,224],\nhealth care [225], and supply\
    \ chains [226,227]. Task allocations in cloud computing plat-\nforms are considered\
    \ as one of the main applications of distributed multi-agent optimization\nin\
    \ smart cities [220]. Distributed estimation can be also reformulated as a distributed\
    \ opti-\nmization problem in which the main goal is to reduce computation time\
    \ and estimation\nerror by splitting the task between multiple agents [228,229].\
    \ Some of the variations for this\ndomain include distributed parameter estimation\
    \ and distributed data regression using an\naverage consensus algorithm, and a\
    \ distributed Kalman ﬁltering algorithm [32]. One of the\nmain applications of\
    \ distributed estimation in smart cities is monitoring the environmental\nstate\
    \ using deployed sensors in the system [142]. The state estimation of wireless\
    \ power\ntransfer systems in IoTs applications [230], and crowd sensing [231],\
    \ are other examples of\ndistributed estimation in smart cities. Simulating real-world\
    \ systems can be also considered\none of the initial applications of multi-agent\
    \ systems [232].\nSmart Cities 2022, 5\n333\n4.3.2. Control Techniques\nIn the\
    \ literature, various techniques were applied for controlling multi-agent systems,\n\
    namely graph theory, game theory, control theory, and machine learning, which\
    \ are con-\nsidered the most commonly used techniques for this purpose [29,45].\
    \ There are also other\nalgorithms such as optimization and bio-inspired algorithms,\
    \ which were applied for the\ncollective behavior of these systems [233].\nGraph\
    \ theory was applied for deﬁning the structural controllability of multi-agent\n\
    systems [234]. One of the most frequently used techniques in this domain is to\
    \ use a graph\nLaplacian matrix to investigate MAS dynamics and convergence rates\
    \ [67]. In the literature,\nconsensus problems were also investigated using an\
    \ edge Laplacian matrix by deﬁning the\nedge state as a relative state difference\
    \ for the edges [235]. The graph Laplacian spectrum\nhas the second smallest and\
    \ largest eigenvalues and their ratios play an important role\nin MASs control\
    \ [236]. In recent literature, graph theory was mostly used for an initial\nanalysis\
    \ of the network dynamics, and other complementary approaches were applied\nto\
    \ reach consensus states [237]. Applications of graph theory are not limited to\
    \ using an\nLaplacian matrix and, in some cases, only adjacency and valency matrices\
    \ were applied to\ninvestigate the network dynamic and its synchronization [238].\n\
    Game theory is another popular technique for modeling the dynamics and decision\n\
    making of rationale collaborator agents in MASs [239]. In most of the distributed\
    \ games,\nthe main goal is to reach the Nash equilibrium while optimizing its\
    \ own performance\nmetric [240]. Markov games or stochastic games are examples\
    \ of the initial applications\nof sequential multi-agent games that can be solved\
    \ using dynamic programming (DP),\nQ-learning, or linear programming techniques\
    \ [45]. Uncertainties in an agent’s payoff and\nreward/utility can be also modeled\
    \ using Bayesian–Stackelberg games [241]. Evolutionary\ngames are other variations\
    \ of game theory techniques applied for modeling the collec-\ntive behavior of\
    \ the agents, with bounded rationality repeatedly looking for equilibrium\npoints\
    \ [242]. The majority of the MAS problems were solved using control theory and\n\
    its variations, such as adaptive control. For example, distributed model predictive\
    \ con-\ntrol is widely applied for modeling different types of dynamics, with\
    \ goals of regulation,\ntracking, or economic considerations in the system [64].\
    \ A survey for online learning\ncontrol mechanisms in multi-agent systems was\
    \ presented [194]. Neuro-adaptive optimal\ncontrol is considered one of the most\
    \ popular techniques in controlling complex MASs\nby solving an associated matrix\
    \ of equations, such as the coupled Riccati equations or\ncoupled Hamilton–Jacobi\
    \ equations [243]. In the literature, other traditional optimization\ntechniques\
    \ such as variational inequality [106], duality theory [244], and the alternating\n\
    direction method of multipliers (ADMM) [245] were applied for optimizing the operations\n\
    of multi-agent systems.\nReinforcement learning is one of the well-known semi-supervised\
    \ learning techniques\napplied in the simultaneous learning and control of adaptive\
    \ MASs [246]. The multi-\nagent reinforcement learning (MARL) technique is usually\
    \ applied for perceiving the\nenvironment based on partial information, such as\
    \ rewards and penalties received as\nfeedback from the previous actions and decisions\
    \ [86]. Other techniques developed based\non RL include Q-learning and policy\
    \ gradient techniques that try to learn the optimal policy\nof the agents. The\
    \ MARL techniques with networked agents are a special case of the MARL\nalgorithms,\
    \ in which agents can communicate with neighboring agents in a time-varying\n\
    communication topology [247]. These algorithms were developed for both cooperative\n\
    and non-cooperative settings. Using RL in MASs is very challenging because of\
    \ the joint\naction space and dynamics generated with multiple autonomous decision\
    \ makers that\nmake the environment nonstationary and difﬁcult to be perceived\
    \ [248]. Using an ensemble\nof the policies is another technique proposed for\
    \ designing control frameworks robust\nto environmental change and nonstationary\
    \ dynamics [249]. Reference [188] proposed\nQMIX, which exploits a linear decomposition\
    \ of the joint value function across agents\nwhile keeping the local and global\
    \ maximum value functions monotonically over standard\nQ-learning. The other challenge\
    \ is the high computation time for processing continuous\nSmart Cities 2022, 5\n\
    334\nstates and actions in MAS settings modeled by the Markov decision process,\
    \ Markov\ngame, or extensive form games [250]. In these settings, due to increasing\
    \ number of\nstate action pairs, it is very challenging to approximate value function\
    \ or optimal policy.\nOne of the main solutions for this problem is to apply deep\
    \ reinforcement learning(DRL)\nthat integrates deep neural networks in the learning\
    \ process of RL iterations [251]. Two\nwell-known variations of these techniques\
    \ include deep Q-learning [252] and the deep\ndeterministic policy gradient (DDPG),\
    \ which are designed based on actor–critic networks\nwith a replay buffer [253].\
    \ Policy gradient techniques such as DDPG perform better in\nMASs due to the independence\
    \ of approximation from system dynamics. Other challenges\nof using RL-based control\
    \ mechanisms in MASs include credit assignment problems that\nreﬂect a lack of\
    \ tracing agents’ actions and their inﬂuences on system outcomes [187]. This\n\
    problem may result in the emergence of lazy inactive agents not willing to contribute\
    \ to\nlearning system dynamics. One of the proposed platforms for addressing this\
    \ challenge is\ncounterfactual multi-agent (COMA) policy gradients using a counterfactual\
    \ baseline that\nkeeps other agents’ actions ﬁxed while marginalizing the actions\
    \ of the single agent [185].\nAn overview of the reviewed techniques is presented\
    \ in Figure 5.\nDomains\nConsensus & \nSynchronization\nLeader/Follower \nTracking\n\
    Formation Control\nContainment  & \nSurrounding\nCoverage Control\nDistributed\
    \ \nOptimization\nDistributed Estimation\nTechniques\nReinforcement Learning\n\
    MARL\nQMIX\nCOMA\nDRL\nDDPG\nGraph Theory\nControl Theory\nTraditional Optimization\
    \ \nADMM\nDuality Theory\nVariational Inequality\nGame Theory\nNeuro-Adaptive\n\
    Adaptive Control\nMPC\nDQN\nFigure 5. MAS control overview.\n5. Evaluation Metrics\n\
    The next step in implementing adaptive MASs is their evaluation and validation.\
    \ We\nfocus on two main factors for this topic that include the main performance\
    \ indicators\napplied for evaluating these systems and also existing test platforms\
    \ and datasets applied\nfor this purpose.\n5.1. Performance Indicators\nThe performance\
    \ of MASs is calculated based on various factors, such as convergence,\nstability,\
    \ optimality, robustness, security, and other practical indicators, such as the\
    \ quality\nof services, security, scalability, and bandwidth utilization [46].\
    \ The performance of MASs\ncan also be measured based on more practical statistical\
    \ and quantitative factors for outputs\nand resource utilization, such as throughput,\
    \ response time, the number of concurrent\nagents/tasks, computational time, and\
    \ communications overheads [254].\nSmart Cities 2022, 5\n335\nConvergence is applied\
    \ in many MASs techniques and is considered one of the main\nperformance criteria\
    \ of the algorithm. The Nash equilibrium is a point and setting that\nall agents\
    \ will prefer in which no agent can gain any more by changing only its own\ndecisions.\
    \ This point highly relies on its underlying assumptions, such as the rationality\n\
    and reasoning capabilities of the agents [255]. Since convergence is not practical\
    \ in real-\nworld problems, researchers presented ﬁnite time convergence rules\
    \ for controlling MASs.\nThe main drawback of these rules is their dependency\
    \ to initial states that makes them\ninfeasible for cases with unknown initial\
    \ states. Therefore, a ﬁxed time stability rule is\npresented that works well\
    \ with any arbitrary initial state of the agents. This type of analysis\nwas tested\
    \ for both time-triggered, and event-triggered systems and worked efﬁciently for\n\
    both categories of the problems. These assumptions are violated in the bounded\
    \ rationality\nand limitations of the mutual modeling of the agents. Moreover,\
    \ it was shown that many\nof the value-based MARL algorithms do not converge to\
    \ a stationary NE, and we may\nneed to deﬁne cyclic equilibrium instead of unique\
    \ states. To overcome this problem, some\nof the recent techniques used regret\
    \ concepts instead of NE, which measure performance\ncompared to the best static\
    \ strategy of the agents.\nStability is one of the main indicators in evaluating\
    \ the control mechanism of MASs.\nThis measure shows whether the proposed scheme\
    \ will deviate the convergence of the\nagents when facing future changes of the\
    \ state and output of the system and distribu-\ntions [256]. Lyapunov-based stability\
    \ is known as one of the primary methods for testing\nthe stability of MASs [257].\
    \ The Routh–Hurwitz stability criterion was also applied for\na stability analysis\
    \ of high-order consensus problems [258]. A system is also considered\nstable\
    \ if after disturbance its solution and state are bounded in a certain region.\
    \ It was\nproved that stability analysis for the cooperative control of heterogeneous\
    \ agents with\nnonlinear dynamics is more challenging and needs error compensation\
    \ controllers to elim-\ninate error dynamics for the equilibrium point [259].\
    \ Barbalat’s Lemma is an extension\nfor Lyapunov analysis that overcomes the limitations\
    \ of this technique in handling the\nstability of autonomous and time-varying\
    \ nonlinear systems [260]. One of the measures to\nevaluate the proposed control\
    \ mechanism is optimality, in which the solution is compared\nwith the optimal\
    \ solution of the centralized technique [64]. It is also important to quantify\n\
    the optimality gap or bounds that the solution deviates from in its equivalent\
    \ centralized\nproblem solution [261]. Most of the MAS problems involve a nonconvex\
    \ objective function\nwith the local optimum point. To improve the efﬁciency of\
    \ the search of the agents, some\nresearchers deﬁned conditions for the optimality\
    \ of the consensus protocols [262].\nRobustness is deﬁned to reﬂect the control\
    \ system’s capability in handling future exter-\nnal unknown perturbations [263].\
    \ Determining the robustness of MASs with a large number\nof nodes is an NP-hard\
    \ problem such that its calculations require more complex techniques,\nsuch as\
    \ machine learning and neural networks [264]. There are speciﬁc considerations\n\
    that can help to increase the robustness of these systems. For example, it was\
    \ shown that\nexisting feedback controls and responsibility declarations of the\
    \ agents are very impor-\ntant in system robustness [265]. The robustness of the\
    \ system can be investigated against\nperturbations of the coupling strengths\
    \ [266], communication delays [267], and agents’\ndynamics [268] by introducing\
    \ required formulations and protocols. These conditions for\nlarge open systems\
    \ with a heterogeneous group of agents and unpredictable dynamics\nwere investigated\
    \ in reference [269]. Increasing the number of agents and decreasing the\ncontribution\
    \ of each agent on overall dynamics was considered an inﬂuencing factor in the\n\
    robustness of the synchronization of heterogeneous MASs [270]. Communications\
    \ strength\nand the nominal magnitude of the edge weights were identiﬁed as other\
    \ important factors\nfor the robustness of consensus networks [271]. The security\
    \ of MASs and their control\nprotocols need to be investigated for evaluating\
    \ and adopting a suitable platform. The\nanalysis of security against the physical\
    \ faults and cyber-attacks of sensors and actuators,\nand surveys for recent advances,\
    \ were summarized in reference [272]. The surveyed tech-\nniques investigated\
    \ the security from the detection of the attack or fault and the techniques\n\
    Smart Cities 2022, 5\n336\nand protocols proposed for secure and fault-tolerant\
    \ control mechanisms. Another survey\ninvestigated the security from access control\
    \ and trust models standpoints [273].\n5.2. Test Datasets and Platforms\nThere\
    \ are multiple test platforms and datasets, which are mainly used for compar-\n\
    ing the efﬁciency of the proposed MASs control mechanisms. In machine learning,\
    \ one\nof the common platforms for testing MARL and other MAS techniques is MiniGrid\
    \ in\nOpenai-Gym [274]. The TRACILOGIS platform is utilized for dynamic resource\
    \ alloca-\ntion and scheduling [275]. There are also two- and multiple-player\
    \ games such as the\nMultiStep MNIST Game, FindGoal, RedBlueDoors, and StarCraft\
    \ II that can be used for\ntesting and comparing MAS techniques [90,128,276].\
    \ Other MAS control problems such as\nconsensus and containment control are tested\
    \ using simulation on small-scale numerical\nexperiments with predeﬁned equations\
    \ for system dynamics and state changes, and their\ninitial communication topologies\
    \ or Laplacian matrices [24]. There are also datasets such as\nGraphGT from various\
    \ domains for graph generation and transformation problems [277].\nThe SNAP data\
    \ set [278] and the co-authorship network Hepth, communication network\nAS, and\
    \ interaction user network Stov are other examples of graph data sets that can\
    \ be\nutilized for testing and evaluating multi-agent network monitoring platforms\
    \ [119].\n6. Conclusions\nThis research surveyed the techniques proposed for designing\
    \ and controlling adap-\ntive multi-agent networked systems. These systems provide\
    \ distributed frameworks for\nimplementing IoTs systems comprising smart nodes\
    \ and devices. Agents in these sys-\ntems reﬂect the required levels of reactivity,\
    \ autonomy, proactiveness, and social ability\nenabling the main system to resist\
    \ possible external disturbances and internal failures. This\nis considered as\
    \ one of the main requirements for smart cities. Future cities will no longer\n\
    be considered as a set of disconnected systems, and they will change to interconnected\n\
    networks with millions of smart agents. These agents and subsystems will constantly\n\
    sense, monitor, plan, and communicate with each other to provide more adaptive,\
    \ dynamic,\nefﬁcient, and reliable services for future citizens. To achieve this\
    \ goal, we require new\nperspectives, integrating existing advancements and variations\
    \ in deﬁning, monitoring,\nplanning, and evaluating multi-agent systems. This\
    \ research reviewed and summarized\nthe recent advances to meet these requirements\
    \ for the successful implementation of future\nsmart cities.\nMost of the proposed\
    \ MAS techniques in the literature were developed as separate\nmodules of the\
    \ system for either designing and planning or evaluating these systems. Few\n\
    researchers linked the proposed techniques to establish a solid integrated framework\
    \ that is\nable to simultaneously monitor, adapt, control, and evaluate its performance.\
    \ For example,\nbig-data analytics techniques are not fully linked to control\
    \ techniques and their potential\napplicability in reducing the computation steps\
    \ of these search platforms is not fully\ninvestigated in the literature. Integrating\
    \ more advanced state monitoring platforms such\nas clustering and pattern mining\
    \ on the collected agents’ data streams enables the designing\nof more customized\
    \ frameworks for the various communities of the agents. Investigating\nthe potential\
    \ advantages of state monitoring techniques in designing noise- and fault-\ntolerant\
    \ control mechanisms are other suggestions for future research in the MAS domain.\n\
    One of the other existing challenges that need to be addressed before using MASs\
    \ for\nsmart city platforms is heterogeneity of the involved agents in the network.\
    \ A smart city\nshould be able to efﬁciently control and monitor a wide range\
    \ of heterogeneous systems\nwith different entities, actions, and information\
    \ ﬂows. Most of the problems in the literature\nare simpliﬁed by deﬁning initial\
    \ assumptions on system structure, autonomy, and entity\ntypes and dynamics. More\
    \ investigations and research are required for evaluating the\nproposed control\
    \ mechanisms for heterogeneous systems, in which the agents not only\nhave nonidentical\
    \ deﬁnitions and duties but also differ in levels of uncertainty, disturbance,\n\
    and noise.\nSmart Cities 2022, 5\n337\nThe other missing aspect in the existing\
    \ literature is considering the high level of\nenvironment uncertainty for systems\
    \ exploring new platforms. The majority of the pro-\nposed techniques in this\
    \ domain suffer from high computation times for iterative search\nto estimate\
    \ system dynamics and best policy. Moreover, the recently presented MASs\ntechniques\
    \ in the machine learning domain neglected the power of information sharing\n\
    and communication between agents, and the techniques still rely on a central processor\
    \ for\nstoring, processing, and decision making. The reviewed literature highlighted\
    \ the need\nfor revising these approaches to make them suitable for future distributed\
    \ multi-agent\nsystems that are able to establish wireless communications with\
    \ other agents while explor-\ning solutions for emerging complex situations, such\
    \ as internal failure or cyber-attacks.\nThe control mechanisms can be also improved\
    \ by utilizing middle agents for the matching\nand abstracting of the signal-sharing\
    \ process to reduce the computation time and increase\ntheir convergence rates.\
    \ Most of the techniques were developed for static platforms and\ndid not include\
    \ potential changes in agents’ locations, communications, qualiﬁcations,\nand\
    \ reliability. Developing more general frameworks which are robust against episodic\n\
    dynamics with predictable cycles and trends is another great idea for empowering\
    \ adap-\ntive multi-agent networks. For the successful implementation of these\
    \ systems on the\ninternet of things, it is necessary to constantly evaluate the\
    \ systems and its changes to\nprevent potential security issues that infected\
    \ agents may cause. The control mechanisms\nneed to be designed in a more dynamic\
    \ platform that can immediately react to changes\nin agents’ availabilities, and\
    \ thereby trust change. Designing and deﬁning unique and\ngeneral performance\
    \ indicators and test frameworks can also provide a fair measurement\nfor comparing\
    \ existing techniques and determining their strengths and weaknesses in\ncontrolling\
    \ multi-agent networks with predeﬁned features and requirements.\nAuthor Contributions:\
    \ This paper represents a result of collegial teamwork. N.N. designed the\nresearch,\
    \ conducted the literature reviews, and prepared the original draft of the manuscript.\
    \ A.G.\nﬁnalized and transformed the manuscript to meet MDPI draft, and submitted\
    \ to the journal. All\nauthors have read and agreed to the published version of\
    \ the manuscript.\nFunding: This research received no external funding.\nInstitutional\
    \ Review Board Statement: Not applicable.\nInformed Consent Statement: Not applicable.\n\
    Data Availability Statement: Not applicable.\nAcknowledgments: The authors did\
    \ not receive support from any organization for the submit-\nted work.\nConﬂicts\
    \ of Interest: The authors declare that there is no conﬂict of interest.\nReferences\n\
    1.\nCocchia, A. Smart and digital city: A systematic literature review. In Smart\
    \ City; Springer: Cham, Switzerland, 2014; pp. 13–43.\n2.\nKim, T.; Ramos, C.;\
    \ Mohammed, S. Smart city and IoT. Future Gener. Comput. Syst. 2017, 76, 159–162.\
    \ [CrossRef]\n3.\nKhan, J.Y.; Yuce, M.R. Internet of Things (IoT): Systems and\
    \ Applications; CRC Press: Boca Raton, FL, USA, 2019.\n4.\nPark, E.; Del Pobil,\
    \ A.P.; Kwon, S.J. The role of Internet of Things (IoT) in smart cities: Technology\
    \ roadmap-oriented approaches.\nSustainability 2018, 10, 1388. [CrossRef]\n5.\n\
    Mukhopadhyay, S.C.; Suryadevara, N.K. Internet of things: Challenges and opportunities.\
    \ In Internet of Things; Springer:\nBerlin/Heidelberg, Germany, 2014; Volume 9,\
    \ pp. 1–17.\n6.\nIqbal, A.; Suryani, M.A.; Saleem, R.; Suryani, M.A. Internet\
    \ of things (IoT): On-going security challenges and risks. Int. J. Comput.\nSci.\
    \ Inf. Secur. 2016, 14, 671.\n7.\nRoscia, M.; Longo, M.; Lazaroiu, G.C. Smart\
    \ City by multi-agent systems. In Proceedings of the 2013 International Conference\
    \ on\nRenewable Energy Research and Applications (ICRERA), Madrid, Spain, 20–23\
    \ October 2013; pp. 371–376.\n8.\nDorri, A.; Kanhere, S.S.; Jurdak, R. Multi-agent\
    \ systems: A survey. IEEE Access 2018, 6, 28573–28593. [CrossRef]\n9.\ndo Nascimento,\
    \ N.M.; de Lucena, C.J.P. FIoT: An agent-based framework for self-adaptive and\
    \ self-organizing applications based\non the Internet of Things. Inf. Sci. 2017,\
    \ 378, 161–176. [CrossRef]\n10.\nForestiero, A. Multi-agent recommendation system\
    \ in Internet of Things. In Proceedings of the 2017 17th IEEE/ACM International\n\
    Symposium on Cluster, Cloud and Grid Computing (CCGRID), Madrid, Spain, 14–17\
    \ May 2017; pp. 772–775.\nSmart Cities 2022, 5\n338\n11.\nAseere, A.M. Multiagent\
    \ Systems Applied to Smart City. J. Eng. Appl. Sci. 2020, 7, 29–36.\n12.\nLongo,\
    \ M.; Roscia, M.; Lazaroiu, C. Innovating multi-agent systems applied to smart\
    \ city. Res. J. Appl. Sci. Eng. Technol. 2014, 7,\n4296–4302. [CrossRef]\n13.\n\
    Krupitzer, C.; Roth, F.M.; VanSyckel, S.; Schiele, G.; Becker, C. A survey on\
    \ engineering approaches for self-adaptive systems.\nPervasive Mob. Comput. 2015,\
    \ 17, 184–206. [CrossRef]\n14.\nBoes, J.; Migeon, F. Self-organizing multi-agent\
    \ systems for the control of complex systems. J. Syst. Softw. 2017, 134, 12–28.\n\
    [CrossRef]\n15.\nKantamneni, A.; Brown, L.E.; Parker, G.; Weaver, W.W. Survey\
    \ of multi-agent systems for microgrid control. Eng. Appl. Artif.\nIntell. 2015,\
    \ 45, 192–203. [CrossRef]\n16.\nKaviani, S. Multi-Agent Clinical Decision Support\
    \ Systems: A Survey. In Proceedings of the 1st Korea Artiﬁcial Intelligence\n\
    Conference, Jeju Island, Korea, 23–25 April 2020\n17.\nDominguez, R.; Cannella,\
    \ S. Insights on multi-agent systems applications for supply chain management.\
    \ Sustainability 2020,\n12, 1935. [CrossRef]\n18.\nGjikopulli, A.A.; Banerjee,\
    \ A. A survey on Multi-Agent Systems (MAS). Netw. Archit. Serv. 2020, 55–59.\n\
    19.\nOh, K.K.; Park, M.C.; Ahn, H.S. A survey of multi-agent formation control.\
    \ Automatica 2015, 53, 424–440. [CrossRef]\n20.\nMa, L.; Wang, Z.; Han, Q.L.;\
    \ Liu, Y. Consensus control of stochastic multi-agent systems: A survey. Sci.\
    \ China Inf. Sci. 2017,\n60, 120201. [CrossRef]\n21.\nLi, Y.; Tan, C. A survey\
    \ of the consensus for multi-agent systems. Syst. Sci. Control Eng. 2019, 7, 468–482.\
    \ [CrossRef]\n22.\nRahmani, A.; Ji, M.; Mesbahi, M.; Egerstedt, M. Controllability\
    \ of multi-agent systems from a graph-theoretic perspective. SIAM\nJ. Control\
    \ Optim. 2009, 48, 162–186. [CrossRef]\n23.\nDiaconescu, I.M.; Wagner, G. Modeling\
    \ and simulation of web-of-things systems as multi-agent systems. In German Conference\
    \ on\nMultiagent System Technologies; Springer: Cham, Switzerland, 2015; pp. 137–153.\n\
    24.\nLiang, H.; Liu, G.; Zhang, H.; Huang, T. Neural-Network-Based Event-Triggered\
    \ Adaptive Control of Nonafﬁne Nonlinear\nMultiagent Systems With Dynamic Uncertainties.\
    \ IEEE Trans. Neural Netw. Learn. Syst. 2021, 32, 2239–2250. [CrossRef]\n25.\n\
    Lowe, R.; Gupta, A.; Foerster, J.; Kiela, D.; Pineau, J. On the interaction between\
    \ supervision and self-play in emergent\ncommunication. arXiv 2020, arXiv:2002.01093.\n\
    26.\nFouad, H.; Moskowitz, I.S. Meta-Agents: Using Multi-Agent Networks to Manage\
    \ Dynamic Changes in the Internet of Things. In\nArtiﬁcial Intelligence for the\
    \ Internet of Everything; Elsevier: Cambridge, MA, USA, 2019; pp. 271–281.\n27.\n\
    Xu, X.; Chen, S.; Huang, W.; Gao, L. Leader-following consensus of discrete-time\
    \ multi-agent systems with observer-based\nprotocols. Neurocomputing 2013, 118,\
    \ 334–341. [CrossRef]\n28.\nD’Angelo, M.; Gerasimou, S.; Ghahremani, S.; Grohmann,\
    \ J.; Nunes, I.; Pournaras, E.; Tomforde, S. On learning in collective\nself-adaptive\
    \ systems: State of practice and a 3d framework. In Proceedings of the 2019 IEEE/ACM\
    \ 14th International Symposium\non Software Engineering for Adaptive and Self-Managing\
    \ Systems (SEAMS), Montreal, QC, Canada, 25 May 2019; pp. 13–24.\n29.\nZheng,\
    \ Y.; Wang, L. Consensus of heterogeneous multi-agent systems without velocity\
    \ measurements. Int. J. Control 2012,\n85, 906–914. [CrossRef]\n30.\nGottifredi,\
    \ S.; Tamargo, L.H.; García, A.J.; Simari, G.R. Arguing about informant credibility\
    \ in open multi-agent systems. Artif.\nIntell. 2018, 259, 91–109. [CrossRef]\n\
    31.\nKendrick, P.; Hussain, A.; Criado, N.; Randles, M. Multi-agent systems for\
    \ scalable internet of things security. In Proceedings\nof the Second International\
    \ Conference on Internet of things, Data and Cloud Computing, Cambridge, UK, 22–23\
    \ March 2017;\npp. 1–6.\n32.\nChen, F.; Ren, W. On the control of multi-agent\
    \ systems: A survey. Found. Trends® Syst. Control 2019, 6, 339–499. [CrossRef]\n\
    33.\nZuo, Z.; Zhang, J.; Wang, Y. Adaptive fault-tolerant tracking control for\
    \ linear and Lipschitz nonlinear multi-agent systems. IEEE\nTrans. Ind. Electron.\
    \ 2014, 62, 3923–3931. [CrossRef]\n34.\nAmirkhani, A.; Barshooi, A.H. Consensus\
    \ in multi-agent systems: A review. Artif. Intell. Rev. 2021, 2021, 1–39. [CrossRef]\n\
    35.\nJiang, C.; Du, H.; Zhu, W.; Yin, L.; Jin, X.; Wen, G. Synchronization of\
    \ nonlinear networked agents under event-triggered control.\nInf. Sci. 2018, 459,\
    \ 317–326. [CrossRef]\n36.\nZhang, L.; Chen, B.; Lin, C.; Shang, Y. Fuzzy adaptive\
    \ ﬁnite-time consensus tracking control for nonlinear multi-agent systems.\nInt.\
    \ J. Syst. Sci. 2021, 52, 1346–1358. [CrossRef]\n37.\nWang, Z.; Xue, H.; Pan,\
    \ Y.; Liang, H. Adaptive neural networks event-triggered fault-tolerant consensus\
    \ control for a class of\nnonlinear multi-agent systems. AIMS Math. 2020, 5, 2780–2800.\
    \ [CrossRef]\n38.\nGuan, Y.; Ji, Z.; Zhang, L.; Wang, L. Controllability of heterogeneous\
    \ multi-agent systems under directed and weighted topology.\nInt. J. Control 2016,\
    \ 89, 1009–1024. [CrossRef]\n39.\nRen, W.; Beard, R.W. Consensus seeking in multiagent\
    \ systems under dynamically changing interaction topologies. IEEE Trans.\nAutom.\
    \ Control 2005, 50, 655–661. [CrossRef]\n40.\nDesaraju, V.R.; How, J.P. Decentralized\
    \ path planning for multi-agent teams with complex constraints. Auton. Robot.\
    \ 2012,\n32, 385–403. [CrossRef]\n41.\nMovric, K.H.; Lewis, F.L. Cooperative optimal\
    \ control for multi-agent systems on directed graph topologies. IEEE Trans. Autom.\n\
    Control 2013, 59, 769–774. [CrossRef]\nSmart Cities 2022, 5\n339\n42.\nDe Nijs,\
    \ F. Resource-Constrained Multi-Agent Markov Decision Processes. Ph.D. Thesis,\
    \ Delft University of Technology, Delft,\nThe Netherlands, 2019.\n43.\nRadulescu,\
    \ R.; Mannion, P.; Roijers, D.M.; Nowé, A. Recent Advances in Multi-Objective\
    \ Multi-Agent Decision Making; Benelux\nAssociation for Artiﬁcial Intelligence:\
    \ Leiden, The Netherlands, 2020; pp. 392–394.\n44.\nLee, D.; Hu, J. Primal-dual\
    \ distributed temporal difference learning. arXiv 2018, arXiv:1805.07918.\n45.\n\
    Rizk, Y.; Awad, M.; Tunstel, E.W. Decision making in multiagent systems: A survey.\
    \ IEEE Trans. Cogn. Dev. Syst. 2018, 10, 514–529.\n[CrossRef]\n46.\nRossi, F.;\
    \ Bandyopadhyay, S.; Wolf, M.; Pavone, M. Review of multi-agent algorithms for\
    \ collective behavior: A structural\ntaxonomy. IFAC-PapersOnLine 2018, 51, 112–117.\
    \ [CrossRef]\n47.\nAydin, M.E. Coordinating metaheuristic agents with swarm intelligence.\
    \ J. Intell. Manuf. 2012, 23, 991–999. [CrossRef]\n48.\nZhu, L.; Xiang, Z. Aggregation\
    \ analysis for competitive multiagent systems with saddle points via switching\
    \ strategies. IEEE\nTrans. Neural Netw. Learn. Syst. 2017, 29, 2931–2943. [CrossRef]\n\
    49.\nYang, T.; Yi, X.; Wu, J.; Yuan, Y.; Wu, D.; Meng, Z.; Hong, Y.; Wang, H.;\
    \ Lin, Z.; Johansson, K.H. A survey of distributed\noptimization. Annu. Rev. Control\
    \ 2019, 47, 278–305. [CrossRef]\n50.\nXiao, W.; Cao, L.; Li, H.; Lu, R. Observer-based\
    \ adaptive consensus control for nonlinear multi-agent systems with time-delay.\n\
    Sci. China Inf. Sci. 2020, 63, 1–17. [CrossRef]\n51.\nBrown, R.; Rossi, F.; Solovey,\
    \ K.; Tsao, M.; Wolf, M.T.; Pavone, M. On Local Computation for Network-Structured\
    \ Convex\nOptimization in Multi-Agent Systems. IEEE Trans. Control Netw. Syst.\
    \ 2021, 8, 542–554. [CrossRef]\n52.\nShen, Q.; Shi, P.; Zhu, J.; Wang, S.; Shi,\
    \ Y. Neural Networks-Based Distributed Adaptive Control of Nonlinear Multiagent\
    \ Systems.\nIEEE Trans. Neural Netw. Learn. Syst. 2020, 31, 1010–1021. [CrossRef]\n\
    53.\nCalvaresi, D.; Cid, Y.D.; Marinoni, M.; Dragoni, A.F.; Najjar, A.; Schumacher,\
    \ M. Real-time multi-agent systems: Rationality,\nformal model, and empirical\
    \ results. Auton. Agents Multi-Agent Syst. 2021, 35, 12. [CrossRef]\n54.\nEriksson,\
    \ A.; Hansson, J. Distributed Optimisation in Multi-Agent Systems Through Deep\
    \ Reinforcement Learning; TRITA-EECS-EX:\nStockholm, Sweden, 2019.\n55.\nYu, H.;\
    \ Shen, Z.; Leung, C.; Miao, C.; Lesser, V.R. A survey of multi-agent trust management\
    \ systems. IEEE Access 2013, 1, 35–50.\n56.\nTariverdi, A.; Talebi, H.A.; Shaﬁee,\
    \ M. Fault-tolerant consensus of nonlinear multi-agent systems with directed link\
    \ failures,\ncommunication noise and actuator faults. Int. J. Control 2021, 94,\
    \ 60–74. [CrossRef]\n57.\nCalvaresi, D.; Marinoni, M.; Sturm, A.; Schumacher,\
    \ M.; Buttazzo, G. The challenge of real-time multi-agent systems for\nenabling\
    \ IoT and CPS. In Proceedings of the International Conference on Web Intelligence,\
    \ Leipzig, Germany, 23–26 August 2017;\npp. 356–364.\n58.\nCheng, L.; Hou, Z.G.;\
    \ Tan, M.; Lin, Y.; Zhang, W. Neural-network-based adaptive leader-following control\
    \ for multiagent systems\nwith uncertainties. IEEE Trans. Neural Netw. 2010, 21,\
    \ 1351–1358. [CrossRef] [PubMed]\n59.\nDing, L.; Han, Q.L.; Ge, X.; Zhang, X.M.\
    \ An overview of recent advances in event-triggered consensus of multiagent systems.\n\
    IEEE Trans. Cybern. 2017, 48, 1110–1123. [CrossRef]\n60.\nShen, B.; Wang, Z.;\
    \ Liu, X. A Stochastic Sampled-Data Approach to Distributed H∞ Filtering in Sensor\
    \ Networks. IEEE Trans.\nCircuits Syst. I Regul. Pap. 2011, 58, 2237–2246. [CrossRef]\n\
    61.\nHeemels, W.H.; Donkers, M.; Teel, A.R. Periodic event-triggered control for\
    \ linear systems. IEEE Trans. Autom. Control 2012,\n58, 847–861. [CrossRef]\n\
    62.\nGe, X.; Han, Q.L.; Ding, L.; Wang, Y.L.; Zhang, X.M. Dynamic event-triggered\
    \ distributed coordination control and its applications:\nA survey of trends and\
    \ techniques. IEEE Trans. Syst. Man Cybern. Syst. 2020, 50, 3112–3125. [CrossRef]\n\
    63.\nZhang, X.M.; Han, Q.L.; Zhang, B.L. An overview and deep investigation on\
    \ sampled-data-based event-triggered control and\nﬁltering for networked systems.\
    \ IEEE Trans. Ind. Inform. 2016, 13, 4–16. [CrossRef]\n64.\nNegenborn, R.; Maestre,\
    \ J. Distributed Model Predictive Control: An overview of features and research\
    \ opportunities. In\nProceedings of the 11th IEEE International Conference on\
    \ Networking, Sensing and Control, Miami, FL, USA, 7–9 April 2014.\n65.\nLiu,\
    \ P.; Xiao, F.; Wei, B.; Wang, A. Distributed constrained optimization problem\
    \ of heterogeneous linear multi-agent systems\nwith communication delays. Syst.\
    \ Control Lett. 2021, 155, 105002. [CrossRef]\n66.\nChen, Z.; Li, Z.; Chen, C.P.\
    \ Adaptive neural control of uncertain MIMO nonlinear systems with state and input\
    \ constraints. IEEE\nTrans. Neural Netw. Learn. Syst. 2016, 28, 1318–1330. [CrossRef]\
    \ [PubMed]\n67.\nWen, G.; Duan, Z.; Yu, W.; Chen, G. Consensus in multi-agent\
    \ systems with communication constraints. Int. J. Robust Nonlinear\nControl 2012,\
    \ 22, 170–182. [CrossRef]\n68.\nZhang, Y.; Liang, H.; Ma, H.; Zhou, Q.; Yu, Z.\
    \ Distributed adaptive consensus tracking control for nonlinear multi-agent systems\n\
    with state constraints. Appl. Math. Comput. 2018, 326, 16–32. [CrossRef]\n69.\n\
    Zhang, D.; Xu, Z.; Srinivasan, D.; Yu, L. Leader-follower consensus of multiagent\
    \ systems with energy constraints: A Markovian\nsystem approach. IEEE Trans. Syst.\
    \ Man Cybern. Syst. 2017, 47, 1727–1736. [CrossRef]\n70.\nMarcotte, R.J.; Wang,\
    \ X.; Mehta, D.; Olson, E. Optimizing multi-robot communication under bandwidth\
    \ constraints. Auton. Robot.\n2020, 44, 43–55. [CrossRef]\n71.\nRicci, A.; Piunti,\
    \ M.; Viroli, M. Environment programming in multi-agent systems: An artifact-based\
    \ perspective. Auton. Agents\nMulti-Agent Syst. 2011, 23, 158–192. [CrossRef]\n\
    Smart Cities 2022, 5\n340\n72.\nWeyns, D.; Omicini, A.; Odell, J. Environment\
    \ as a ﬁrst class abstraction in multiagent systems. Auton. Agents Multi-Agent\
    \ Syst.\n2007, 14, 5–30. [CrossRef]\n73.\nPlaton, E.; Mamei, M.; Sabouret, N.;\
    \ Honiden, S.; Parunak, H.V.D. Mechanisms for environments in multi-agent systems:\
    \ Survey\nand opportunities. Auton. Agents Multi-Agent Syst. 2007, 14, 31–47.\
    \ [CrossRef]\n74.\nJohansson, K.; Rosolia, U.; Ubellacker, W.; Singletary, A.;\
    \ Ames, A.D. Mixed Observable RRT: Multi-Agent Mission-Planning in\nPartially\
    \ Observable Environments. arXiv 2021, arXiv:2110.01002.\n75.\nBourne, R.A.; Excelente-Toledo,\
    \ C.B.; Jennings, N.R. Run-time selection of coordination mechanisms in multi-agent\
    \ systems. In\n14th European Conference on Artiﬁcial Intelligence (ECAI-2000);\
    \ IOS Press: Amsterdam, The Netherlands, 2000.\n76.\nChen, S.; Wang, M.; Li, Q.\
    \ Second-order consensus of hybrid multi-agent systems with unknown disturbances\
    \ via sliding mode\ncontrol. IEEE Access 2020, 8, 34973–34980. [CrossRef]\n77.\n\
    Hernandez-Leal, P.; Kartal, B.; Taylor, M.E. A survey and critique of multiagent\
    \ deep reinforcement learning. Auton. Agents\nMulti-Agent Syst. 2019, 33, 750–797.\
    \ [CrossRef]\n78.\nWagner, G.; Choset, H. Path planning for multiple agents under\
    \ uncertainty. In Proceedings of the Twenty-Seventh International\nConference\
    \ on Automated Planning and Scheduling, Pittsburgh, PA, USA, 18–23 June 2017.\n\
    79.\nLi, Z.; Duan, Z.; Xie, L.; Liu, X. Distributed robust control of linear multi-agent\
    \ systems with parameter uncertainties. Int. J.\nControl 2012, 85, 1039–1050.\
    \ [CrossRef]\n80.\nAmato, C. Decision-Making Under Uncertainty in Multi-Agent\
    \ and Multi-Robot Systems: Planning and Learning. In Proceedings\nof the IJCAI,\
    \ Stockholm, Sweden, 13–19 July 2018; pp. 5662–5666.\n81.\nPeng, Z.; Zhang, J.;\
    \ Hu, J.; Huang, R.; Ghosh, B.K. Optimal containment control of continuous-time\
    \ multi-agent systems with\nunknown disturbances using data-driven approach. Sci.\
    \ China Inf. Sci. 2020, 63, 209205. [CrossRef]\n82.\nHu, G. Robust consensus tracking\
    \ for an integrator-type multi-agent system with disturbances and unmodelled dynamics.\
    \ Int. J.\nControl 2011, 84, 1–8. [CrossRef]\n83.\nKhazaeni, Y.; Cassandras, C.G.\
    \ Event-driven cooperative receding horizon control for multi-agent systems in\
    \ uncertain environ-\nments. IEEE Trans. Control Netw. Syst. 2016, 5, 409–422.\
    \ [CrossRef]\n84.\nZuo, Z.; Wang, C.; Ding, Z. Robust consensus control of uncertain\
    \ multi-agent systems with input delay: A model reduction\nmethod. Int. J. Robust\
    \ Nonlinear Control 2017, 27, 1874–1894. [CrossRef]\n85.\nZhou, Z.; Xu, H. Mean\
    \ ﬁeld game and decentralized intelligent adaptive pursuit evasion strategy for\
    \ massive multi-agent system\nunder uncertain environment. In Proceedings of the\
    \ 2020 American Control Conference (ACC), Denver, CO, USA, 1–3 July 2020;\npp.\
    \ 5382–5387.\n86.\nBusoniu, L.; Babuska, R.; De Schutter, B. A comprehensive survey\
    \ of multiagent reinforcement learning. IEEE Trans. Syst. Man\nCybern. Part C\
    \ (Appl. Rev.) 2008, 38, 156–172. [CrossRef]\n87.\nKhan, N. Learning to Cooperate\
    \ Using Deep Reinforcement Learning in a Multi-Agent System. Ph.D. Thesis, University\
    \ of\nMinnesota, Minneapolis, MN, USA, 2020.\n88.\nOmidshaﬁei, S.; Pazis, J.;\
    \ Amato, C.; How, J.P.; Vian, J. Deep decentralized multi-task multi-agent reinforcement\
    \ learning under\npartial observability. In Proceedings of the International Conference\
    \ on Machine Learning, PMLR, Sydney, Australia, 6–11 August\n2017; pp. 2681–2690.\n\
    89.\nShang, W.; Li, Q.; Qin, Z.; Yu, Y.; Meng, Y.; Ye, J. Partially observable\
    \ environment estimation with uplift inference for\nreinforcement learning based\
    \ recommendation. Mach. Learn. 2021, 110, 2603–2640. [CrossRef]\n90.\nWang, R.E.;\
    \ Everett, M.; How, J.P. R-MADDPG for partially observable environments and limited\
    \ communication. arXiv 2020,\narXiv:2002.06684.\n91.\nLi, W.; Xie, L.; Zhang,\
    \ J.F. Containment control of leader-following multi-agent systems with Markovian\
    \ switching network\ntopologies and measurement noises. Automatica 2015, 51, 263–267.\
    \ [CrossRef]\n92.\nPerez, J.; Silander, T. Non-markovian control with gated end-to-end\
    \ memory policy networks. arXiv 2017, arXiv:1705.10993.\n93.\nMansour, A.M. Cooperative\
    \ Multi-Agent Vehicle-to-Vehicle Wireless Network in a Noisy Environment. Int.\
    \ J. Circuits, Syst.\nSignal Process. 2021, 15, 135–148. [CrossRef]\n94.\nBúrdalo,\
    \ L.; Terrasa, A.; Julián, V.; García-Fornes, A. The information ﬂow problem in\
    \ multi-agent systems. Eng. Appl. Artif. Intell.\n2018, 70, 130–141. [CrossRef]\n\
    95.\nBaki, B.; Bouzid, M.; Lig˛eza, A.; Mouaddib, A.I. A centralized planning\
    \ technique with temporal constraints and uncertainty for\nmulti-agent systems.\
    \ J. Exp. Theor. Artif. Intell. 2006, 18, 331–364. [CrossRef]\n96.\nGe, M.; Bangui,\
    \ H.; Buhnova, B. Big data for internet of things: A survey. Future Gener. Comput.\
    \ Syst. 2018, 87, 601–614. [CrossRef]\n97.\nKhan, A.; Zhang, C.; Lee, D.D.; Kumar,\
    \ V.; Ribeiro, A. Scalable centralized deep multi-agent reinforcement learning\
    \ via policy\ngradients. arXiv 2018, arXiv:1805.08776.\n98.\nHuang, D.; Jiang,\
    \ H.; Yu, Z.; Hu, C.; Fan, X. Cluster-delay consensus in MASs with layered intermittent\
    \ communication: A\nmulti-tracking approach. Nonlinear Dyn. 2019, 95, 1713–1730.\
    \ [CrossRef]\n99.\nGe, X.; Yang, F.; Han, Q.L. Distributed networked control systems:\
    \ A brief overview. Inf. Sci. 2017, 380, 117–131. [CrossRef]\n100. Sayed, A.H.\
    \ Adaptive networks. Proc. IEEE 2014, 102, 460–497. [CrossRef]\n101. Zhuge, H.\
    \ Knowledge ﬂow network planning and simulation. Decis. Support Syst. 2006, 42,\
    \ 571–592. [CrossRef]\nSmart Cities 2022, 5\n341\n102. Zhang, C.; Lesser, V.R.;\
    \ Abdallah, S. Self-organization for coordinating decentralized reinforcement\
    \ learning. In Proceedings of\nthe 9th International Conference on Autonomous\
    \ Agents and Multiagent Systems: IFAAMAS, Richland, SC, USA, 9–13 May 2010;\n\
    Volume 1, pp. 739–746.\n103. Althnian, A.; Agah, A. Evolutionary learning of goal-oriented\
    \ communication strategies in multi-agent systems. J. Autom. Mob.\nRobot. Intell.\
    \ Syst. 2015, 9, 52–64. [CrossRef]\n104. Zhang, T.; Zhu, Q. Informational design\
    \ of dynamic multi-agent system. arXiv 2021, arXiv:2105.03052.\n105. Das, A.;\
    \ Gervet, T.; Romoff, J.; Batra, D.; Parikh, D.; Rabbat, M.; Pineau, J. Tarmac:\
    \ Targeted multi-agent communication. In\nProceedings of the International Conference\
    \ on Machine Learning, PMLR, Long Beach, CA, USA, 9–15 June 2019; pp. 1538–1546.\n\
    106. Wang, D.; Wang, Z.; Chen, M.; Wang, W. Distributed optimization for multi-agent\
    \ systems with constraints set and communication\ntime-delay over a directed graph.\
    \ Inf. Sci. 2018, 438, 1–14. [CrossRef]\n107. Jiang, X.; Xia, G.; Feng, Z. Output\
    \ consensus of high-order linear multi-agent systems with time-varying delays.\
    \ IET Control\nTheory Appl. 2019, 13, 1084–1094. [CrossRef]\n108. Tan, X.; Cao,\
    \ J.; Li, X.; Alsaedi, A. Leader-following mean square consensus of stochastic\
    \ multi-agent systems with input delay\nvia event-triggered control. IET Control\
    \ Theory Appl. 2017, 12, 299–309. [CrossRef]\n109. Han, F.; Wei, G.; Ding, D.;\
    \ Song, Y. Local condition based consensus ﬁltering with stochastic nonlinearities\
    \ and multiple missing\nmeasurements. IEEE Trans. Autom. Control 2017, 62, 4784–4790.\
    \ [CrossRef]\n110. Cholvy, L.; da Costa Pereira, C. Usefulness of information\
    \ for goal achievement. In International Conference on Principles and\nPractice\
    \ of Multi-Agent Systems; Springer: Cham, Switzerland, 2019; pp. 123–137.\n111.\
    \ Djaidja, S.; Wu, Q.H.; Fang, H. Leader-following consensus of double-integrator\
    \ multi-agent systems with noisy measurements.\nInt. J. Control Autom. Syst. 2015,\
    \ 13, 17–24. [CrossRef]\n112. Bacciu, D.; Micheli, A.; Podda, M. Edge-based sequential\
    \ graph generation with recurrent neural networks. Neurocomputing 2020,\n416,\
    \ 177–189. [CrossRef]\n113. Atluri, G.; Karpatne, A.; Kumar, V. Spatio-temporal\
    \ data mining: A survey of problems and methods. ACM Comput. Surv.\n(CSUR) 2018,\
    \ 51, 1–41. [CrossRef]\n114. Wu, Z.; Pan, S.; Chen, F.; Long, G.; Zhang, C.; Philip,\
    \ S.Y. A comprehensive survey on graph neural networks. IEEE Trans. Neural\nNetw.\
    \ Learn. Syst. 2020, 32, 4–24. [CrossRef]\n115. Laurence, E.; Doyon, N.; Dubé,\
    \ L.J.; Desrosiers, P. Spectral dimension reduction of complex dynamical networks.\
    \ Phys. Rev. X\n2019, 9, 011042. [CrossRef]\n116. Wang, D.; Cui, P.; Zhu, W. Structural\
    \ deep network embedding.\nIn Proceedings of the 22nd ACM SIGKDD International\n\
    Conference on Knowledge Discovery and Data Mining, San Francisco, CA, USA, 13–17\
    \ August 2016; pp. 1225–1234.\n117. Kipf, T.N.; Welling, M. Variational graph\
    \ auto-encoders. arXiv 2016, arXiv:1611.07308.\n118. Hamilton, W.L.; Ying, R.;\
    \ Leskovec, J. Inductive representation learning on large graphs. In Proceedings\
    \ of the 31st International\nConference on Neural Information Processing Systems,\
    \ Long Beach, CA, USA, 4–9 December 2017; pp. 1025–1035.\n119. Mahdavi, S.; Khoshraftar,\
    \ S.; An, A. Dynamic joint variational graph autoencoders. arXiv 2019, arXiv:1910.01963.\n\
    120. Barros, C.D.; Mendonça, M.R.; Vieira, A.B.; Ziviani, A. A Survey on Embedding\
    \ Dynamic Graphs. arXiv 2021, arXiv:2101.01229.\n121. Sayama, H.; Laramee, C.\
    \ Generative network automata: A generalized framework for modeling adaptive network\
    \ dynamics\nusing graph rewritings. In Adaptive Networks; Springer: Heidelberg,\
    \ Germany, 2009; pp. 311–332.\n122. Taheri, A.; Gimpel, K.; Berger-Wolf, T. Learning\
    \ Graph Representations with Recurrent Neural Network Autoencoders; KDD Deep\n\
    Learning Day: London, UK, 2018.\n123. Papoudakis, G.; Albrecht, S.V.\nVariational\
    \ autoencoders for opponent modeling in multi-agent systems.\narXiv 2020,\narXiv:2001.10829.\n\
    124. Zhang, K.; Ying, H.; Dai, H.N.; Li, L.; Peng, Y.; Guo, K.; Yu, H. Compacting\
    \ Deep Neural Networks for Internet of Things:\nMethods and Applications. IEEE\
    \ Internet Things J. 2021, 8, 11935–11959. [CrossRef]\n125. Lomuscio, A.; Qu,\
    \ H.; Russo, F. Automatic data-abstraction in model checking multi-agent systems.\
    \ In International Workshop on\nModel Checking and Artiﬁcial Intelligence; Springer:\
    \ Heidelberg, Germany, 2010; pp. 52–68.\n126. Rassam, M.A.; Zainal, A.; Maarof,\
    \ M.A. An adaptive and efﬁcient dimension reduction model for multivariate wireless\
    \ sensor\nnetworks applications. Appl. Soft Comput. 2013, 13, 1978–1996. [CrossRef]\n\
    127. Grover, A.; Leskovec, J. node2vec: Scalable feature learning for networks.\
    \ In Proceedings of the 22nd ACM SIGKDD International\nConference on Knowledge\
    \ Discovery and Data Mining, San Francisco, CA, USA, 13–17 August 2016; pp. 855–864.\n\
    128. Lin, T.; Huh, J.; Stauffer, C.; Lim, S.N.; Isola, P. Learning to Ground Multi-Agent\
    \ Communication with Autoencoders.\nIn\nProceedings of the Advances in Neural\
    \ Information Processing Systems, Virtual, 6–14 December 2021; Volume 34.\n129.\
    \ García, N.M. Multi-agent system for anomaly detection in Industry 4.0 using\
    \ Machine Learning techniques. ADCAIJ Adv. Distrib.\nComput. Artif. Intell. J.\
    \ 2019, 8, 33–40.\n130. Tahsien, S.M. A Neural Network Guided Genetic Algorithm\
    \ for Flexible Flow Shop Scheduling Problem with Sequence Dependent\nSetup Time.\
    \ Ph.D. Thesis, The University of Guelph, Guelph, ON, Canada, 2020.\n131. Ma,\
    \ X.; Wu, J.; Xue, S.; Yang, J.; Sheng, Q.Z.; Xiong, H. A Comprehensive Survey\
    \ on Graph Anomaly Detection with Deep\nLearning. arXiv 2021, arXiv:2106.07178.\n\
    132. Ding, K.; Li, J.; Liu, H. Interactive anomaly detection on attributed networks.\
    \ In Proceedings of the Twelfth ACM International\nConference on Web Search and\
    \ Data Mining, Melbourne, VIC, Australia, 11–15 February 2019; pp. 357–365.\n\
    Smart Cities 2022, 5\n342\n133. Duan, D.; Tong, L.; Li, Y.; Lu, J.; Shi, L.; Zhang,\
    \ C. AANE: Anomaly Aware Network Embedding For Anomalous Link Detection.\nIn Proceedings\
    \ of the 2020 IEEE International Conference on Data Mining (ICDM), Sorrento, Italy,\
    \ 17–20 November 2020;\npp. 1002–1007.\n134. Zheng, M.; Zhou, C.; Wu, J.; Pan,\
    \ S.; Shi, J.; Guo, L. Fraudne: A joint embedding approach for fraud detection.\
    \ In Proceedings of\nthe 2018 International Joint Conference on Neural Networks\
    \ (IJCNN), Rio de Janeiro, Brazil, 8–13 July 2018; pp. 1–8.\n135. Ruff, L.; Vandermeulen,\
    \ R.; Goernitz, N.; Deecke, L.; Siddiqui, S.A.; Binder, A.; Müller, E.; Kloft,\
    \ M. Deep one-class classiﬁcation.\nIn Proceedings of the International Conference\
    \ on Machine Learning, PMLR, Stockholm, Sweden, 10–15 July 2018; pp. 4393–4402.\n\
    136. Louati, F.; Ktata, F.B. A deep learning-based multi-agent system for intrusion\
    \ detection. SN Appl. Sci. 2020, 2, 1–13. [CrossRef]\n137. Guo, X.; Zhao, L. A\
    \ systematic survey on deep generative models for graph generation. arXiv 2020,\
    \ arXiv:2007.06686.\n138. You, J.; Ying, R.; Ren, X.; Hamilton, W.; Leskovec,\
    \ J. Graphrnn: Generating realistic graphs with deep auto-regressive models. In\n\
    Proceedings of the International Conference on Machine Learning, PMLR, Stockholm,\
    \ Sweden, 10–15 July 2018; pp. 5708–5717.\n139. Zhou, D.; Zheng, L.; Han, J.;\
    \ He, J. A data-driven graph generative model for temporal interaction networks.\
    \ In Proceedings\nof the 26th ACM SIGKDD International Conference on Knowledge\
    \ Discovery & Data Mining, Virtual Event, CA, USA, 23–27\nAugust 2020; pp. 401–411.\n\
    140. Peng, H.; Wang, H.; Du, B.; Bhuiyan, M.Z.A.; Ma, H.; Liu, J.; Wang, L.; Yang,\
    \ Z.; Du, L.; Wang, S.; et al. Spatial temporal incidence\ndynamic graph neural\
    \ networks for trafﬁc ﬂow forecasting. Inf. Sci. 2020, 521, 277–290. [CrossRef]\n\
    141. Li, L.; Yao, J.; Wenliang, L.; He, T.; Xiao, T.; Yan, J.; Wipf, D.; Zhang,\
    \ Z. GRIN: Generative Relation and Intention Network for\nMulti-agent Trajectory\
    \ Prediction. In Proceedings of the Advances in Neural Information Processing\
    \ Systems, Virtual, 6–14\nDecember 2021; Volume 34.\n142. Guastella, D.; Camps,\
    \ V.; Gleizes, M.P. Multi-agent Systems for Estimating Missing Information in\
    \ Smart Cities.\nIn 11th\nInternational Conference on Agents and Artiﬁcial Intelligence-ICAART\
    \ 2019; SCITEPRESS-Science and Technology Springer: Prague,\nCzech Republic, 2019;\
    \ pp. 214–223.\n143. Feng, W.; Zhang, C.; Zhang, W.; Han, J.; Wang, J.; Aggarwal,\
    \ C.; Huang, J. STREAMCUBE: Hierarchical spatio-temporal hashtag\nclustering for\
    \ event exploration over the Twitter stream. In Proceedings of the 2015 IEEE 31st\
    \ International Conference on Data\nEngineering, Seoul, Korea, 13–17 April 2015;\
    \ pp. 1561–1572.\n144. Zhao, L.; Akoglu, L. On using classiﬁcation datasets to\
    \ evaluate graph outlier detection: Peculiar observations and new insights.\n\
    Big Data 2021, 2021, 69. [CrossRef] [PubMed]\n145. Teng, X.; Yan, M.; Ertugrul,\
    \ A.M.; Lin, Y.R. Deep into hypersphere: Robust and unsupervised anomaly discovery\
    \ in dynamic\nnetworks. In Proceedings of the Twenty-Seventh International Joint\
    \ Conference on Artiﬁcial Intelligence, Stockholm, Sweden,\n13–19 July 2018.\n\
    146. Ierardi, C.; Orihuela, L.; Jurado, I. Distributed estimation techniques for\
    \ cyber-physical systems: A systematic review. Sensors\n2019, 19, 4720. [CrossRef]\n\
    147. Jing, G.; Zheng, Y.; Wang, L. Flocking of multi-agent systems with multiple\
    \ groups. Int. J. Control 2014, 87, 2573–2582. [CrossRef]\n148. Chen, K.; Wang,\
    \ J.; Zhang, Y.; Lewis, F.L. Cluster consensus of heterogeneous linear multi-agent\
    \ systems. IET Control Theory Appl.\n2018, 12, 1533–1542. [CrossRef]\n149. Belghache,\
    \ E.; Georgé, J.P.; Gleizes, M.P. DREAM: Dynamic data relation extraction using\
    \ adaptive multi-agent systems.\nIn Proceedings of the 2017 Twelfth International\
    \ Conference on Digital Information Management (ICDIM), Fukuoka, Japan,\n12–14\
    \ September 2017; pp. 292–297.\n150. Li, W.; Yang, J.Y. Comparing networks from\
    \ a data analysis perspective. In International Conference on Complex Sciences;\
    \ Springer:\nHeidelberg, Germany, 2009; pp. 1907–1916.\n151. Kim, J.; Lee, J.G.\
    \ Community detection in multi-layer graphs: A survey. ACM SIGMOD Rec. 2015, 44,\
    \ 37–48. [CrossRef]\n152. Banka, A.A.; Naaz, R. Large Scale Graph Analytics for\
    \ Communities Using Graph Neural Networks. In International Conference\non Computational\
    \ Data and Social Networks; Springer: Cham, Switzerland, 2020; pp. 39–47.\n153.\
    \ Liu, F.; Xue, S.; Wu, J.; Zhou, C.; Hu, W.; Paris, C.; Nepal, S.; Yang, J.;\
    \ Yu, P.S. Deep learning for community detection: Progress,\nchallenges and opportunities.\
    \ arXiv 2020, arXiv:2005.08225.\n154. Cazabet, R.; Rossetti, G.; Amblard, F. Dynamic\
    \ Community Detection; Springer: New York, NY, USA, 2017.\n155. Rossetti, G.;\
    \ Cazabet, R. Community discovery in dynamic networks: A survey. ACM Comput. Surv.\
    \ (CSUR) 2018, 51, 1–37.\n[CrossRef]\n156. Chen, Z.; Liao, H.; Chu, T. Aggregation\
    \ and splitting in self-driven swarms. Phys. A Stat. Mech. Appl. 2012, 391, 3988–3994.\n\
    [CrossRef]\n157. Ogston, E.; Overeinder, B.; Van Steen, M.; Brazier, F. A method\
    \ for decentralized clustering in large multi-agent systems. In\nProceedings of\
    \ the Second International Joint Conference on Autonomous Agents and Multiagent\
    \ Systems, Melbourne, VIC,\nAustralia, 14–18 July 2003; pp. 789–796.\n158. Cai,\
    \ N.; Diao, C.; Khan, M.J. A novel clustering method based on quasi-consensus\
    \ motions of dynamical multiagent systems.\nComplexity 2017, 2017, 4978613. [CrossRef]\n\
    159. Kadar, M.; Muntean, M.V.; Csabai, T. A Multi-agent System with Self-optimization\
    \ for Automated Clustering (MASAC). In\nAgents and Multi-Agent Systems: Technologies\
    \ and Applications 2019; Springer: Singapore, 2019; pp. 117–128.\n160. Sequeira,\
    \ P.; Antunes, C. Real-time sensory pattern mining for autonomous agents. In International\
    \ Workshop on Agents and Data\nMining Interaction; Springer: Heidelberg, Germany,\
    \ 2010; pp. 71–83.\nSmart Cities 2022, 5\n343\n161. Fournier-Viger, P.; He, G.;\
    \ Cheng, C.; Li, J.; Zhou, M.; Lin, J.C.W.; Yun, U. A survey of pattern mining\
    \ in dynamic graphs. Wiley\nInterdiscip. Rev. Data Min. Knowl. Discov. 2020, 10,\
    \ e1372. [CrossRef]\n162. Halder, S.; Samiullah, M.; Lee, Y.K. Supergraph based\
    \ periodic pattern mining in dynamic social networks. Expert Syst. Appl.\n2017,\
    \ 72, 430–442. [CrossRef]\n163. Jin, R.; McCallen, S.; Almaas, E. Trend motif:\
    \ A graph mining approach for analysis of dynamic complex networks. In Proceedings\n\
    of the Seventh IEEE International Conference on Data Mining (ICDM 2007), Omaha,\
    \ NE, USA, 28–31 October 2007; pp. 541–546.\n164. Cheng, Z.; Flouvat, F.; Selmaoui-Folcher,\
    \ N. Mining recurrent patterns in a dynamic attributed graph. In Paciﬁc-Asia Conference\
    \ on\nKnowledge Discovery and Data Mining; Springer: Cham, Switzerland, 2017;\
    \ pp. 631–643.\n165. Kaytoue, M.; Pitarch, Y.; Plantevit, M.; Robardet, C. Triggering\
    \ patterns of topology changes in dynamic graphs. In Proceedings\nof the 2014\
    \ IEEE/ACM International Conference on Advances in Social Networks Analysis and\
    \ Mining (ASONAM 2014), Beijing,\nChina, 17–20 August 2014; pp. 158–165.\n166.\
    \ Fournier-Viger, P.; Cheng, C.; Cheng, Z.; Lin, J.C.W.; Selmaoui-Folcher, N.\
    \ Mining signiﬁcant trend sequences in dynamic\nattributed graphs. Knowl.-Based\
    \ Syst. 2019, 182, 104797. [CrossRef]\n167. Mahmoud, M.A.; Ahmad, M.S.; Mostafa,\
    \ S.A. Norm-based behavior regulating technique for multi-agent in complex adaptive\n\
    systems. IEEE Access 2019, 7, 126662–126678. [CrossRef]\n168. Venkatesan, D. A\
    \ Novel Agent-Based Enterprise Level System Development Technology. Ph.D. Thesis,\
    \ Anna University, Tamil\nNadu, India, 2018.\n169. Bellifemine, F.; Bergenti,\
    \ F.; Caire, G.; Poggi, A. JADE—A java agent development framework. In Multi-Agent\
    \ Programming;\nSpringer: Boston, MA, USA, 2005; pp. 125–147.\n170. DeLoach, S.A.;\
    \ Garcia-Ojeda, J.C. O-MaSE: A customisable approach to designing and building\
    \ complex, adaptive multi-agent\nsystems. Int. J. Agent-Oriented Softw. Eng. 2010,\
    \ 4, 244–280. [CrossRef]\n171. Cardoso, R.C.; Ferrando, A. A Review of Agent-Based\
    \ Programming for Multi-Agent Systems. Computers 2021, 10, 16. [CrossRef]\n172.\
    \ Kravari, K.; Bassiliades, N. A survey of agent platforms. J. Artif. Soc. Soc.\
    \ Simul. 2015, 18, 11. [CrossRef]\n173. Bordini, R.H.; El Fallah Seghrouchni,\
    \ A.; Hindriks, K.; Logan, B.; Ricci, A. Agent programming in the cognitive era.\
    \ Auton. Agents\nMulti-Agent Syst. 2020, 34, 37. [CrossRef]\n174. Costantini,\
    \ S. ACE: A ﬂexible environment for complex event processing in logical agents.\
    \ In International Workshop on Engineering\nMulti-Agent Systems; Springer: Cham,\
    \ Switzerland, 2015; pp. 70–91.\n175. Araujo, P.; Rodríguez, S.; Hilaire, V. A\
    \ metamodeling approach for the identiﬁcation of organizational smells in multi-agent\n\
    systems: Application to ASPECS. Artif. Intell. Rev. 2018, 49, 183–210. [CrossRef]\n\
    176. Boissier, O.; Bordini, R.H.; Hübner, J.F.; Ricci, A. Dimensions in programming\
    \ multi-agent systems. Knowl. Eng. Rev. 2019, 34, e2.\n[CrossRef]\n177. Rahimi,\
    \ H.; Trentin, I.F.; Ramparany, F.; Boissier, O. SMASH: A Semantic-enabled Multi-agent\
    \ Approach for Self-adaptation of\nHuman-centered IoT. arXiv 2021, arXiv:2105.14915.\n\
    178. Baek, Y.M.; Song, J.; Shin, Y.J.; Park, S.; Bae, D.H. A meta-model for representing\
    \ system-of-systems ontologies. In Proceedings of\nthe 2018 IEEE/ACM 6th International\
    \ Workshop on Software Engineering for Systems-of-Systems (SESoS), Gothenburg,\
    \ Sweden,\n29 May 2018; pp. 1–7.\n179. Pigazzini, I.; Briola, D.; Fontana, F.A.\
    \ Architectural Technical Debt of Multiagent Systems Development Platforms. In\
    \ Proceedings\nof the WOA 2021: Workshop “From Objects to Agents”, Bologna, Italy,\
    \ 1–3 September 2021.\n180. Jazayeri, A.; Bass, E.J. Agent-Oriented Methodologies\
    \ Evaluation Frameworks: A Review. Int. J. Softw. Eng. Knowl. Eng. 2020,\n30,\
    \ 1337–1370. [CrossRef]\n181. Logan, B. An agent programming manifesto. Int. J.\
    \ Agent-Oriented Softw. Eng. 2018, 6, 187–210. [CrossRef]\n182. Da Silva, F.L.;\
    \ Costa, A.H.R. A survey on transfer learning for multiagent reinforcement learning\
    \ systems. J. Artif. Intell. Res.\n2019, 64, 645–703. [CrossRef]\n183. Dusparic,\
    \ I.; Cahill, V. Autonomic multi-policy optimization in pervasive systems: Overview\
    \ and evaluation. ACM Trans. Auton.\nAdapt. Syst. (TAAS) 2012, 7, 1–25. [CrossRef]\n\
    184. Sharma, P.K.; Fernandez, R.; Zaroukian, E.; Dorothy, M.; Basak, A.; Asher,\
    \ D.E. Survey of recent multi-agent reinforcement\nlearning algorithms utilizing\
    \ centralized training. In Artiﬁcial Intelligence and Machine Learning for Multi-Domain\
    \ Operations\nApplications III; International Society for Optics and Photonics:\
    \ Orlando, FL, USA, 2021; Volume 11746, p. 117462K.\n185. Foerster, J.; Farquhar,\
    \ G.; Afouras, T.; Nardelli, N.; Whiteson, S. Counterfactual multi-agent policy\
    \ gradients. In Proceedings of\nthe AAAI Conference on Artiﬁcial Intelligence,\
    \ New Orleans, LA, USA, 2–7 February 2018; Volume 32.\n186. De Lemos, R.; Giese,\
    \ H.; Müller, H.A.; Shaw, M.; Andersson, J.; Litoiu, M.; Schmerl, B.; Tamura,\
    \ G.; Villegas, N.M.; Vogel, T.; et al.\nSoftware engineering for self-adaptive\
    \ systems: A second research roadmap. In Software Engineering for Self-Adaptive\
    \ Systems II;\nSpringer: Heidelberg, Germany, 2013; pp. 1–32.\n187. Panait, L.;\
    \ Luke, S. Cooperative multi-agent learning: The state of the art. Auton. Agents\
    \ Multi-Agent Syst. 2005, 11, 387–434.\n[CrossRef]\n188. Rashid, T.; Samvelyan,\
    \ M.; Schroeder, C.; Farquhar, G.; Foerster, J.; Whiteson, S. Qmix: Monotonic\
    \ value function factorisation\nfor deep multi-agent reinforcement learning. In\
    \ Proceedings of the International Conference on Machine Learning, PMLR,\nStockholm,\
    \ Sweden, 10–15 July 2018; pp. 4295–4304.\nSmart Cities 2022, 5\n344\n189. Chen,\
    \ G. A New Framework for Multi-Agent Reinforcement Learning–Centralized Training\
    \ and Exploration with Decentralized\nExecution via Policy Distillation. arXiv\
    \ 2019, arXiv:1910.09152.\n190. Pesce, E.; Montana, G. Improving coordination\
    \ in small-scale multi-agent deep reinforcement learning through memory-driven\n\
    communication. Mach. Learn. 2020, 109, 1727–1747. [CrossRef]\n191. Czarnowski,\
    \ I.; J˛edrzejowicz, P. An agent-based framework for distributed learning. Eng.\
    \ Appl. Artif. Intell. 2011, 24, 93–102.\n[CrossRef]\n192. D’Angelo, M. Engineering\
    \ Decentralized Learning in Self-Adaptive Systems. Ph.D. Thesis, Linnaeus University\
    \ Press, Vaxjo,\nSweden, 2021.\n193. Shi, P.; Yan, B. A survey on intelligent\
    \ control for multiagent systems. IEEE Trans. Syst. Man Cybern. Syst. 2020, 51,\
    \ 161–175.\n[CrossRef]\n194. Poveda, J.I.; Benosman, M.; Teel, A.R. Hybrid online\
    \ learning control in networked multiagent systems: A survey. Int. J. Adapt.\n\
    Control Signal Process. 2019, 33, 228–261. [CrossRef]\n195. Tahbaz-Salehi, A.;\
    \ Jadbabaie, A. A necessary and sufﬁcient condition for consensus over random\
    \ networks. IEEE Trans. Autom.\nControl 2008, 53, 791–795. [CrossRef]\n196. Svítek,\
    \ M.; Skobelev, P.; Kozhevnikov, S. Smart City 5.0 as an urban ecosystem of Smart\
    \ services. In International Workshop on\nService Orientation in Holonic and Multi-Agent\
    \ Manufacturing; Springer: Cham, Switzerland, 2019; pp. 426–438.\n197. Alves,\
    \ B.R.; Alves, G.V.; Borges, A.P.; Leitão, P. Experimentation of negotiation protocols\
    \ for consensus problems in smart parking\nsystems. In International Conference\
    \ on Industrial Applications of Holonic and Multi-Agent Systems; Springer: Cham,\
    \ Switzerland,\n2019; pp. 189–202.\n198. Yu, H.; Yang, Z.; Sinnott, R.O. Decentralized\
    \ big data auditing for smart city environments leveraging blockchain technology.\n\
    IEEE Access 2018, 7, 6288–6296. [CrossRef]\n199. Yang, S.; Tan, S.; Xu, J.X. Consensus\
    \ based approach for economic dispatch problem in a smart grid. IEEE Trans. Power\
    \ Syst. 2013,\n28, 4416–4426. [CrossRef]\n200. De Sousa, A.L.; De Oliveira, A.S.\
    \ Distributed MAS with Leaderless Consensus to Job-Shop Scheduler in a Virtual\
    \ Smart Factory\nwith Modular Conveyors. In Proceedings of the 2020 Latin American\
    \ Robotics Symposium (LARS), 2020 Brazilian Symposium\non Robotics (SBR) and 2020\
    \ Workshop on Robotics in Education (WRE), Natal, Brazil, 9–13 November 2020;\
    \ pp. 1–6.\n201. Cardona, G.A.; Calderon, J.M. Robot swarm navigation and victim\
    \ detection using rendezvous consensus in search and rescue\noperations. Appl.\
    \ Sci. 2019, 9, 1702. [CrossRef]\n202. Saad, A.; Faddel, S.; Youssef, T.; Mohammed,\
    \ O.A. On the implementation of IoT-based digital twin for networked microgrids\n\
    resiliency against cyber attacks. IEEE Trans. Smart Grid 2020, 11, 5138–5150.\
    \ [CrossRef]\n203. Lee, S.; Yang, Y.; Nayel, M.; Zhai, Y. Leader-follower irrigation\
    \ system management with Shapley value. In International Workshop\non Automation,\
    \ Control, and Communication Engineering (IWACCE 2021); SPIE: Beijing, China,\
    \ 2021; Volume 11929, pp. 8–14.\n204. Song, Z.; Liu, Y.; Tan, M. Robust pinning\
    \ synchronization of complex cyberphysical networks under mixed attack strategies.\
    \ Int.\nJ. Robust Nonlinear Control 2019, 29, 1265–1278. [CrossRef]\n205. Miao,\
    \ G.; Ma, Q. Group consensus of the ﬁrst-order multi-agent systems with nonlinear\
    \ input constraints. Neurocomputing 2015,\n161, 113–119. [CrossRef]\n206. Yamakami,\
    \ T. A dimensional framework to evaluate coverage of IoT services in city platform\
    \ as a service. In Proceedings of the\n2017 International Conference on Service\
    \ Systems and Service Management, Dalian, China, 16–18 June 2017; pp. 1–5.\n207.\
    \ Etemadyrad, N.; Li, Q.; Zhao, L. Deep Graph Spectral Evolution Networks for\
    \ Graph Topological Evolution. In Proceedings of\nthe AAAI Conference on Artiﬁcial\
    \ Intelligence, Vancouver, BC, Canada, 2–9 February 2021; Volume 35, pp. 7358–7366.\n\
    208. Ren, W.; Beard, R.W. Formation feedback control for multiple spacecraft via\
    \ virtual structures. IEE Proc. Control Theory Appl.\n2004, 151, 357–368. [CrossRef]\n\
    209. Cortés, J. Global and robust formation-shape stabilization of relative sensing\
    \ networks. Automatica 2009, 45, 2754–2762. [CrossRef]\n210. Krick, L.; Broucke,\
    \ M.E.; Francis, B.A. Stabilisation of inﬁnitesimally rigid formations of multi-robot\
    \ networks. Int. J. Control 2009,\n82, 423–439. [CrossRef]\n211. Olfati-Saber,\
    \ R.; Jalalkamali, P. Collaborative target tracking using distributed Kalman ﬁltering\
    \ on mobile sensor networks. In\nProceedings of the 2011 American Control Conference,\
    \ San Francisco, CA, USA, 29 June–1 July 2011; pp. 1100–1105.\n212. Wang, H.;\
    \ Shi, D.; Song, B.\nA dynamic role assignment formation control algorithm based\
    \ on hungarian method.\nIn\nProceedings of the 2018 IEEE SmartWorld, Ubiquitous\
    \ Intelligence & Computing, Advanced & Trusted Computing, Scal-\nable Computing\
    \ & Communications, Cloud & Big Data Computing, Internet of People and Smart City\
    \ Innovation (Smart-\nWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI), Guangzhou, China,\
    \ 8–12 October 2018; pp. 687–696.\n213. Barve, A.; Nene, M.J. Survey of Flocking\
    \ Algorithms in multi-agent Systems. Int. J. Comput. Sci. Issues (IJCSI) 2013,\
    \ 10, 110–117.\n214. Olfati-Saber, R. Flocking for multi-agent dynamic systems:\
    \ Algorithms and theory. IEEE Trans. Autom. Control 2006, 51, 401–420.\n[CrossRef]\n\
    215. Abdelwahab, S.; Hamdaoui, B. Flocking virtual machines in quest for responsive\
    \ iot cloud services. In Proceedings of the 2017\nIEEE International Conference\
    \ on Communications (ICC), Paris, France, 21–25 May 2017; pp. 1–6.\n216. Haghshenas,\
    \ H.; Badamchizadeh, M.A.; Baradarannia, M. Containment control of heterogeneous\
    \ linear multi-agent systems.\nAutomatica 2015, 54, 210–216. [CrossRef]\nSmart\
    \ Cities 2022, 5\n345\n217. Ji, M.; Ferrari-Trecate, G.; Egerstedt, M.; Buffa,\
    \ A. Containment control in mobile networks. IEEE Trans. Autom. Control 2008,\n\
    53, 1972–1975. [CrossRef]\n218. Xu, B.; Zhang, H.T.; Meng, H.; Hu, B.; Chen, D.;\
    \ Chen, G. Moving target surrounding control of linear multiagent systems with\n\
    input saturation. IEEE Trans. Syst. Man Cybern. Syst. 2020, 52, 1705–1715. [CrossRef]\n\
    219. Hu, B.B.; Zhang, H.T.; Liu, B.; Meng, H.; Chen, G. Distributed Surrounding\
    \ Control of Multiple Unmanned Surface Vessels With\nVarying Interconnection Topologies.\
    \ IEEE Trans. Control Syst. Technol. 2021, 30, 400–407. [CrossRef]\n220. Li, M.;\
    \ Wang, Z.; Li, K.; Liao, X.; Hone, K.; Liu, X. Task Allocation on Layered Multiagent\
    \ Systems: When Evolutionary\nMany-Objective Optimization Meets Deep Q-Learning.\
    \ IEEE Trans. Evol. Comput. 2021, 25, 842–855. [CrossRef]\n221. Amini, M.H.; Mohammadi,\
    \ J.; Kar, S. Promises of fully distributed optimization for iot-based smart city\
    \ infrastructures. In\nOptimization, Learning, and Control for Interdependent\
    \ Complex Networks; Springer: Cham, Switzerland, 2020; pp. 15–35.\n222. Raju,\
    \ L.; Sankar, S.; Milton, R. Distributed optimization of solar micro-grid using\
    \ multi agent reinforcement learning. Procedia\nComput. Sci. 2015, 46, 231–239.\
    \ [CrossRef]\n223. Mohamed, M.A.; Jin, T.; Su, W. Multi-agent energy management\
    \ of smart islands using primal-dual method of multipliers.\nEnergy 2020, 208,\
    \ 118306. [CrossRef]\n224. Olszewski, R.; Pałka, P.; Turek, A. Solving “Smart\
    \ City” Transport Problems by Designing Carpooling Gamiﬁcation Schemes with\n\
    Multi-Agent Systems: The Case of the So-Called “Mordor of Warsaw”. Sensors 2018,\
    \ 18, 141. [CrossRef]\n225. Euchi, J.; Zidi, S.; Laouamer, L. A new distributed\
    \ optimization approach for home healthcare routing and scheduling problem.\n\
    Decis. Sci. Lett. 2021, 10, 217–230. [CrossRef]\n226. Lin, F.r.; Kuo, H.c.; Lin,\
    \ S.m. The enhancement of solving the distributed constraint satisfaction problem\
    \ for cooperative supply\nchains using multi-agent systems. Decis. Support Syst.\
    \ 2008, 45, 795–810. [CrossRef]\n227. Hsieh, F.S. Dynamic conﬁguration and collaborative\
    \ scheduling in supply chains based on scalable multi-agent architecture. J.\n\
    Ind. Eng. Int. 2019, 15, 249–269. [CrossRef]\n228. Liu, Q.; Yang, S.; Wang, J.\
    \ A collective neurodynamic approach to distributed constrained optimization.\
    \ IEEE Trans. Neural Netw.\nLearn. Syst. 2016, 28, 1747–1758. [CrossRef]\n229.\
    \ Necoara, I.; Nedelcu, V.; Dumitrache, I. Parallel and distributed optimization\
    \ methods for estimation and control in networks. J.\nProcess Control 2011, 21,\
    \ 756–766. [CrossRef]\n230. Rana, M.M.; Abdelhadi, A.; Shireen, W. Monitoring\
    \ Operating Conditions of Wireless Power Transfer Systems Using Distributed\n\
    Estimation Process. In Proceedings of the 2021 IEEE International Conference on\
    \ Communications Workshops (ICC Workshops),\nMontreal, QC, Canada, 14–23 June\
    \ 2021; pp. 1–4.\n231. Guastella, D.A.; Campss, V.; Gleizes, M.P. A Cooperative\
    \ Multi-Agent System for Crowd Sensing Based Estimation in Smart\nCities. IEEE\
    \ Access 2020, 8, 183051–183070. [CrossRef]\n232. Tan, R.K.; Bora, ¸S. Exploiting\
    \ of Adaptive Multi Agent System Theory in Modeling and Simulation: A Survey.\
    \ J. Appl. Math.\nComput. (JAMC) 2018, 1, 21–26. [CrossRef]\n233. Rossi, F.; Bandyopadhyay,\
    \ S.; Wolf, M.T.; Pavone, M. Multi-Agent Algorithms for Collective Behavior: A\
    \ structural and\napplication-focused atlas. arXiv 2021, arXiv:2103.11067.\n234.\
    \ Chen, F.; Ren, W. Multi-Agent Control: A Graph-Theoretic Perspective. J. Syst.\
    \ Sci. Complex. 2021, 34, 1973–2002. [CrossRef]\n235. Zelazo, D.; Rahmani, A.;\
    \ Mesbahi, M. Agreement via the edge laplacian. In Proceedings of the 2007 46th\
    \ IEEE Conference on\nDecision and Control, New Orleans, LA, USA, 12–14 December\
    \ 2007; pp. 2309–2314.\n236. You, K.; Xie, L. Network topology and communication\
    \ data rate for consensusability of discrete-time multi-agent systems. IEEE\n\
    Trans. Autom. Control 2011, 56, 2262–2275. [CrossRef]\n237. Shi, C.X.; Yang, G.H.\
    \ Robust consensus control for a class of multi-agent systems via distributed\
    \ PID algorithm and weighted\nedge dynamics. Appl. Math. Comput. 2018, 316, 73–88.\
    \ [CrossRef]\n238. Wang, Q.; Wang, Y. Cluster synchronization of a class of multi-agent\
    \ systems with a bipartite graph topology. Sci. China Inf. Sci.\n2014, 57, 1–11.\
    \ [CrossRef]\n239. Shoham, Y.; Leyton-Brown, K. Multiagent Systems: Algorithmic,\
    \ Game-Theoretic, and Logical Foundations; Cambridge University\nPress: Cambridge,\
    \ UK, 2008.\n240. Zhu, M.; Martínez, S. Distributed coverage games for energy-aware\
    \ mobile sensor networks. SIAM J. Control Optim. 2013,\n51, 1–27. [CrossRef]\n\
    241. Sengupta, S.; Kambhampati, S. Multi-agent reinforcement learning in bayesian\
    \ stackelberg markov games for adaptive moving\ntarget defense. arXiv 2020, arXiv:2007.10457.\n\
    242. Sun, C.; Wang, X.; Liu, J. Evolutionary game theoretic approach for optimal\
    \ resource allocation in multi-agent systems. In\nProceedings of the 2017 Chinese\
    \ Automation Congress (CAC), Jinan, China, 20–22 October 2017; pp. 5588–5592.\n\
    243. Yan, B.; Shi, P.; Lim, C.C.; Shi, Z. Optimal robust formation control for\
    \ heterogeneous multi-agent systems based on reinforcement\nlearning. Int. J.\
    \ Robust Nonlinear Control 2021, 32, 2683–2704. [CrossRef]\n244. Wai, H.T.; Yang,\
    \ Z.; Wang, Z.; Hong, M. Multi-agent reinforcement learning via double averaging\
    \ primal-dual optimization.\narXiv 2018, arXiv:1806.00877.\n245. Jian, L.; Zhao,\
    \ Y.; Hu, J.; Li, P. Distributed inexact consensus-based ADMM method for multi-agent\
    \ unconstrained optimization\nproblem. IEEE Access 2019, 7, 79311–79319. [CrossRef]\n\
    246. Kapoor, S. Multi-agent reinforcement learning: A report on challenges and\
    \ approaches. arXiv 2018, arXiv:1807.09427.\nSmart Cities 2022, 5\n346\n247. Zhang,\
    \ K.; Yang, Z.; Ba¸sar, T. Decentralized multi-agent reinforcement learning with\
    \ networked agents: Recent advances. arXiv\n2019, arXiv:1912.03821.\n248. Papoudakis,\
    \ G.; Christianos, F.; Rahman, A.; Albrecht, S.V. Dealing with non-stationarity\
    \ in multi-agent deep reinforcement\nlearning. arXiv 2019, arXiv:1906.04737.\n\
    249. Lowe, R.; Wu, Y.; Tamar, A.; Harb, J.; Abbeel, P.; Mordatch, I. Multi-agent\
    \ actor-critic for mixed cooperative-competitive\nenvironments. arXiv 2017, arXiv:1706.02275.\n\
    250. Zhang, K.; Yang, Z.; Ba¸sar, T. Multi-agent reinforcement learning: A selective\
    \ overview of theories and algorithms. In Handbook of\nReinforcement Learning\
    \ and Control; Springer: Cham, Switzerland, 2021; pp. 321–384.\n251. Du, W.; Ding,\
    \ S. A survey on multi-agent deep reinforcement learning: From the perspective\
    \ of challenges and applications.\nArtif. Intell. Rev. 2021, 54, 3215–3238. [CrossRef]\n\
    252. Mnih, V.; Badia, A.P.; Mirza, M.; Graves, A.; Lillicrap, T.; Harley, T.;\
    \ Silver, D.; Kavukcuoglu, K. Asynchronous methods for\ndeep reinforcement learning.\
    \ In Proceedings of the International Conference on Machine Learning, PMLR, New\
    \ York, NY, USA,\n20–22 June 2016; pp. 1928–1937.\n253. Lillicrap, T.P.; Hunt,\
    \ J.J.; Pritzel, A.; Heess, N.; Erez, T.; Tassa, Y.; Silver, D.; Wierstra, D.\
    \ Continuous control with deep\nreinforcement learning. arXiv 2015, arXiv:1509.02971.\n\
    254. Lee, L.C.; Nwana, H.S.; Ndumu, D.T.; De Wilde, P. The stability, scalability\
    \ and performance of multi-agent systems. BT Technol.\nJ. 1998, 16, 94–103. [CrossRef]\n\
    255. Liu, J.; Zhang, Y.; Sun, C.; Yu, Y. Fixed-time consensus of multi-agent systems\
    \ with input delay and uncertain disturbances via\nevent-triggered control. Inf.\
    \ Sci. 2019, 480, 261–272. [CrossRef]\n256. Chli, M.; De Wilde, P.; Goossenaerts,\
    \ J.; Abramov, V.; Szirbik, N.; Correia, L.; Mariano, P.; Ribeiro, R. Stability\
    \ of multi-agent\nsystems. In Proceedings of the SMC’03 Conference Proceedings,\
    \ 2003 IEEE International Conference on Systems, Man and\nCybernetics. Conference\
    \ Theme-System Security and Assurance (Cat. No. 03CH37483), Washington, DC, USA,\
    \ 8 October 2003;\nVolume 1, pp. 551–556.\n257. Maadani, M.; Butcher, E.A. Consensus\
    \ stability in multi-agent systems with periodically switched communication topology\n\
    using Floquet theory. Trans. Inst. Meas. Control 2021, 43, 1239–1254. [CrossRef]\n\
    258. Miao, G.; Xu, S.; Zou, Y. Consentability for high-order multi-agent systems\
    \ under noise environment and time delays. J. Frankl.\nInst. 2013, 350, 244–257.\
    \ [CrossRef]\n259. Wang, B.; Fang, X.; Zhao, Y. Stability Analysis of Cooperative\
    \ Control for Heterogeneous Multi-agent Systems with Nonlinear\nDynamics. In Proceedings\
    \ of the 2019 IEEE International Conference on Industrial Technology (ICIT), Melbourne,\
    \ VIC, Australia,\n13–15 February 2019; pp. 1446–1453.\n260. Liu, Y.; Min, H.;\
    \ Wang, S.; Liu, Z.; Liao, S. Distributed consensus of a class of networked heterogeneous\
    \ multi-agent systems. J.\nFrankl. Inst. 2014, 351, 1700–1716. [CrossRef]\n261.\
    \ Sun, X.; Cassandras, C.G.; Meng, X. Exploiting submodularity to quantify near-optimality\
    \ in multi-agent coverage problems.\nAutomatica 2019, 100, 349–359. [CrossRef]\n\
    262. Katsuura, H.; Fujisaki, Y. Optimality of consensus protocols for multi-agent\
    \ systems with interaction. In Proceedings of the 2014\nIEEE International Symposium\
    \ on Intelligent Control (ISIC), Juan Les Pins, France, 8–10 October 2014; pp.\
    \ 282–285.\n263. Yang, X.; Wang, J.; Tan, Y. Robustness analysis of leader–follower\
    \ consensus for multi-agent systems characterized by double\nintegrators. Syst.\
    \ Control Lett. 2012, 61, 1103–1115. [CrossRef]\n264. Wang, G.; Xu, M.; Wu, Y.;\
    \ Zheng, N.; Xu, J.; Qiao, T. Using machine learning for determining network robustness\
    \ of multi-\nagent systems under attacks. In Paciﬁc Rim International Conference\
    \ on Artiﬁcial Intelligence; Springer: Cham, Switzerland, 2018;\npp. 491–498.\n\
    265. Baldoni, M.; Baroglio, C.; Micalizio, R. Fragility and Robustness in Multiagent\
    \ Systems. In International Workshop on Engineering\nMulti-Agent Systems; Springer:\
    \ Cham, Switzerland 2020; pp. 61–77.\n266. Tian, Y.P.; Liu, C.L. Robust consensus\
    \ of multi-agent systems with diverse input delays and asymmetric interconnection\n\
    perturbations. Automatica 2009, 45, 1347–1353. [CrossRef]\n267. Münz, U.; Papachristodoulou,\
    \ A.; Allgöwer, F. Delay robustness in consensus problems.\nAutomatica 2010, 46,\
    \ 1252–1265.\n[CrossRef]\n268. Trentelman, H.L.; Takaba, K.; Monshizadeh, N. Robust\
    \ synchronization of uncertain linear multi-agent systems. IEEE Trans.\nAutom.\
    \ Control 2013, 58, 1511–1523. [CrossRef]\n269. Minsky, N.H.; Murata, T. On manageability\
    \ and robustness of open multi-agent systems. In International Workshop on Software\n\
    Engineering for Large-Scale Multi-Agent Systems; Springer: Heidelberg, Germany,\
    \ 2003; pp. 189–206.\n270. Kim, J.; Yang, J.; Shim, H.; Kim, J.S. Robustness of\
    \ synchronization in heterogeneous multi-agent systems. In Proceedings of the\n\
    2013 European Control Conference (ECC), Zurich, Switzerland, 17–19 July 2013;\
    \ pp. 3821–3826.\n271. Zelazo, D.; Bürger, M. On the robustness of uncertain consensus\
    \ networks. IEEE Trans. Control Netw. Syst. 2015, 4, 170–178.\n[CrossRef]\n272.\
    \ Zhang, D.; Feng, G.; Shi, Y.; Srinivasan, D. Physical safety and cyber security\
    \ analysis of multi-agent systems: A survey of recent\nadvances. IEEE/CAA J. Autom.\
    \ Sin. 2021, 8, 319–333. [CrossRef]\n273. Jung, Y.; Kim, M.; Masoumzadeh, A.;\
    \ Joshi, J.B. A survey of security issue in multi-agent systems. Artif. Intell.\
    \ Rev. 2012,\n37, 239–260. [CrossRef]\nSmart Cities 2022, 5\n347\n274. Chevalier-Boisvert,\
    \ M.; Willems, L.; Pal, S. Minimalistic Gridworld Environment for OpenAI Gym.\
    \ 2018. Available online:\nhttps://github.com/maximecb/gym-minigrid (accessed\
    \ on 10 January 2022).\n275. Mezgebe, T.T.; Demesure, G.; El Haouzi, H.B.; Pannequin,\
    \ R.; Thomas, A. CoMM: A consensus algorithm for multi-agent-based\nmanufacturing\
    \ system to deal with perturbation. Int. J. Adv. Manuf. Technol. 2019, 105, 3911–3926.\
    \ [CrossRef]\n276. Foerster, J.N.; Assael, Y.M.; De Freitas, N.; Whiteson, S.\
    \ Learning to communicate with deep multi-agent reinforcement learning.\narXiv\
    \ 2016, arXiv:1605.06676.\n277. Du, Y.; Wang, S.; Guo, X.; Cao, H.; Hu, S.; Jiang,\
    \ J.; Varala, A.; Angirekula, A.; Zhao, L. GraphGT: Machine Learning Datasets\
    \ for\nGraph Generation and Transformation. In Proceedings of the Thirty-Fifth\
    \ Conference on Neural Information Processing Systems\nDatasets and Benchmarks\
    \ Track (Round 2), Virtual, 6–14 December 2021.\n278. Leskovec, J.; Krevl, A.\
    \ SNAP Datasets: Stanford Large Network Dataset Collection; SNAP: Santa Monica,\
    \ CA, USA, 2014.\n"
  inline_citation: '>'
  journal: Smart cities (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2624-6511/5/1/19/pdf?version=1646988778
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: A Survey of Adaptive Multi-Agent Networks and Their Applications in Smart
    Cities
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s22124380
  analysis: '>'
  authors:
  - Abbas Syed
  - Daniel Sierra-Sosa
  - Anup Kumar
  - Adel Elmaghraby
  citation_count: 7
  full_citation: '>'
  full_text: ">\n\x01\x02\x03\x01\x04\x05\x06\a\b\x01\n\x01\x02\x03\x04\x05\x06\a\n\
    Citation: Syed, A.S.; Sierra-Sosa, D.;\nKumar, A.; Elmaghraby, A. Making\nCities\
    \ Smarter—Optimization\nProblems for the IoT Enabled Smart\nCity Development:\
    \ A Mapping of\nApplications, Objectives, Constraints.\nSensors 2022, 22, 4380.\
    \ https://\ndoi.org/10.3390/s22124380\nAcademic Editors: Laura Belli, Luca\nDavoli,\
    \ Marco Martalò and Gianluigi\nFerrari\nReceived: 17 May 2022\nAccepted: 8 June\
    \ 2022\nPublished: 9 June 2022\nPublisher’s Note: MDPI stays neutral\nwith regard\
    \ to jurisdictional claims in\npublished maps and institutional afﬁl-\niations.\n\
    Copyright:\n© 2022 by the authors.\nLicensee MDPI, Basel, Switzerland.\nThis article\
    \ is an open access article\ndistributed\nunder\nthe\nterms\nand\nconditions of\
    \ the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nsensors\nReview\nMaking Cities Smarter—Optimization Problems for the IoT\n\
    Enabled Smart City Development: A Mapping of Applications,\nObjectives, Constraints\n\
    Abbas Shah Syed 1,*\n, Daniel Sierra-Sosa 2\n, Anup Kumar 1 and Adel Elmaghraby\
    \ 1\n1\nDepartment of Computer Science and Engineering, University of Louisville,\
    \ Louisville, KY 40208, USA;\nanup.kumar@louisville.edu (A.K.); adel.elmaghraby@louisville.edu\
    \ (A.E.)\n2\nDepartment of Computer Science and Information Technology, Hood College,\
    \ Frederick, MD 21701, USA;\nsierra-sosa@hood.edu\n*\nCorrespondence: m0syed03@louisville.edu\n\
    Abstract: One of the prime aims of smart cities has been to optimally manage the\
    \ available resources\nand systems that are used in the city. With an increase\
    \ in urban population that is set to grow even\nfaster in the future, smart city\
    \ development has been the main goal for governments worldwide.\nIn this regard,\
    \ while the useage of Artiﬁcial Intelligence (AI) techniques covering the areas\
    \ of\nMachine and Deep Learning have garnered much attention for Smart Cities,\
    \ less attention has\nfocused towards the use of combinatorial optimization schemes.\
    \ To help with this, the current review\npresents a coverage of optimization methods\
    \ and applications from a smart city perspective enabled\nby the Internet of Things\
    \ (IoT). A mapping is provided for the most encountered applications of\ncomputational\
    \ optimization within IoT smart cities for ﬁve popular optimization methods, ant\
    \ colony\noptimization, genetic algorithm, particle swarm optimization, artiﬁcial\
    \ bee colony optimization and\ndifferential evolution. For each application identiﬁed,\
    \ the algorithms used, objectives considered,\nthe nature of the formulation and\
    \ constraints taken in to account have been speciﬁed and discussed.\nLastly, the\
    \ data setup used by each covered work is also mentioned and directions for future\
    \ work\nhave been identiﬁed. This review will help researchers by providing them\
    \ a consolidated starting\npoint for research in the domain of smart city application\
    \ optimization.\nKeywords: smart cities; Internet of Things (IoT); Artiﬁcial Intelligence;\
    \ optimization; genetic agorithm;\nparticle swarm optimization; heuristics\n1.\
    \ Introduction\nThe increasing population and urbanization in the world has led\
    \ to increased stress\non cities around the world. With an estimated 70% of the\
    \ worlds population living in\ncities by 2050 [1], governments and administrations\
    \ are developing methods to cater\nto this increasing rise in their city’s dwellers.\
    \ Moreover, the ever increasing effects of\nclimate change and global warming\
    \ have made necessary that these developments to\nthe city’s capacity also be\
    \ sustainable and environmentally friendly, following the United\nNations Sustainable\
    \ Development Goals for 2030 [2]. Considering these requirements,\nSmart Cities\
    \ have become a topic of great interest by governments and the private sector\n\
    worldwide. Smart Cities make use of technology to improve the living experience\
    \ of the\ncity’s inhabitants by contributing to important aspects of a city’s\
    \ functioning. There are\nvarious domains within smart cities, these include Smart\
    \ Agriculture, Smart City Services,\nSmart Grid, Smart Health, Smart Homes, Smart\
    \ Industry, Smart Infrastructure and Smart\nTransportation. With improvement of\
    \ Artiﬁcial intelligence (AI) capabilities in the last\ndecade, there have been\
    \ different applications of machine and deep learning algorithms\nwithin each\
    \ of these domains [3] providing for better decision making and improvement of\n\
    services. Apart from various supervised and unsupervised learning applications,\
    \ several\ntasks within different components of smart cities can be formulated\
    \ into optimization\nSensors 2022, 22, 4380. https://doi.org/10.3390/s22124380\n\
    https://www.mdpi.com/journal/sensors\nSensors 2022, 22, 4380\n2 of 34\nproblems\
    \ and/or require heuristics to be incorporated in some form. However, coverage\
    \ of\nsuch efforts for IoT bases Smart Cities has received less attention compared\
    \ to applications\nutilizing algorithms within the machine and deep learning domain.\n\
    In this regard, this paper presents a coverage of combinatorial optimization in\
    \ Internet\nof Things (IoT) based smart cities by deliberating on the most popular\
    \ applications of\noptimization algorithms and providing an insight to how those\
    \ problems are formulated\nand worked upon. Since optimization has been a topic\
    \ of interest to researchers in general,\nthere have several surveys which pertain\
    \ to individual aspects of smart cities such as\nelectricity distribution networks\
    \ [4], emergency facility location [5] and optimization in the\nindustry [6].\
    \ Vukobratovi´c et al. in [4] discuss the various optimization schemes used in\n\
    distribution network management and scheduling, Wang et al. [5] provide an overview\
    \ of\nthe emergency facility location problem. They deliberate on the mathematical\
    \ formulations\nand the extension of those problems. In [6], the authors provide\
    \ a review of optimization\nalgorithm development for industry 4.0, they provide\
    \ a discussion of the problems present\nin the industry and also discuss mathematical\
    \ formulations. Our work is different from\nthe work in [4–6] in that we provide\
    \ a mapped overview of the optimization landscape\nin the smart city domain while\
    \ considering the IoT. Through this mapping, the common\noptimization problems\
    \ across the various components of the IoT enabled smart city have\nbeen identiﬁed\
    \ to assist researchers working on optimization schemes in the ﬁeld. For each\n\
    problem discussed, the objective function used, the nature of the objective as\
    \ well as the\nconstraints considered have also been elaborated on. As has been\
    \ observed by [7], combi-\nnatorial optimization problems in the real-world are\
    \ known to be difﬁcult to formulate and\ngenerally are hard to solve. Moreover,\
    \ choosing the right algorithm is also a tedious task\nas each comes with a different\
    \ set of characterizations. This is very applicable to the IoT\nbases smart city\
    \ where applications in each component caters to a different environment\nand\
    \ aspect of the city’s operation and therefore requires intricate design of the\
    \ problem.\nIn order to organize the review, this paper takes guidance from the\
    \ work of [7]. They\nnote that the most popular algorithms for use in combinatorial\
    \ optimization problems are\nthe Ant Colony Optimization (ACO), Genetic Algorithm\
    \ (GA), Particle Swarm Optimization\n(PSO), Differential Evolution (DE) and Artiﬁcial\
    \ Bee Colony (ABC). Moreover, following\nfrom the discussion in [7], this paper\
    \ considers six factors for each application identiﬁed.\nThese are:\n1.\nThe type\
    \ of application: This refers to the problem being optimized within the smart\n\
    city domain.\n2.\nData Setup: For each application, we mention the data setup\
    \ used. While doing so,\nwe aim to capture the various ways in which researchers\
    \ have sourced data for their\nproposed method.\n3.\nSingle-Parallel problems:\
    \ Another thing to note in smart city optimization problems\nis whether a problem\
    \ has been considered as a single problem or multiple sub-\nproblems/parallel.\n\
    4.\nObjective direction, function and number of objectives: Maximization or minimization,\n\
    lowest ﬁtness function value desirable or higher ﬁtness function value is desirable.\n\
    Since we list the objectives, we also covere the number of objectives inherently.\
    \ Single\nobjective, where a single ﬁtness is optimized for its best value or\
    \ multi-objective where\nmultiple objective functions need to be considered at\
    \ the same time. The latter is a\ncomplex process as some objectives may have\
    \ conﬂicts and thus requires the need to\nperform trade-offs with what’s acceptable.\n\
    5.\nConstraints: Constraints are a set of restrictions or prerequisites that may\
    \ sometimes\nbe necessary to determine if a solution is considered valid or not.\
    \ Soft constraints\nare desirable but not necessary whereas hard constraints are\
    \ mandatory to be met.\nConstraints are put on the ﬁtness function according to\
    \ application being considered.\nCovering this aspect is particularly important\
    \ as constraints are determined by the\napplication being worked on.\nThe main\
    \ contributions of the paper are as follows:\nSensors 2022, 22, 4380\n3 of 34\n\
    1.\nThe paper provides a mapping of the optimization scenario for IoT based smart\
    \ city\napplications for all smart city constituent domains thereby providing\
    \ an overall view\nof the state of IoT enabled optimization applications for smart\
    \ cities.\n2.\nFor all of the applications discussed, the objective/s used in\
    \ the problem formulation\nare identiﬁed in terms of what function was used, the\
    \ number of objectives, whether\nit was solved in a parallel or singular manner\
    \ as well as the constraints considered\nhave also been highlighted.\n3.\nThe\
    \ detailed information provided herein for the covered work helps highlight the\n\
    diversity of the formulations used in different smart city applications. As is\
    \ observed,\nsimilar applications in smart cities require signiﬁcantly different\
    \ formualtions in\nterms of the constraints imposed as well as the objective function\
    \ utilized. Using the\nprovided insights, researchers and other stakeholders working\
    \ in the ﬁeld of smart\ncity optimization will have a ﬁrm starting point to develop\
    \ new applications.\n4.\nIt provides recommendations and directions for future\
    \ work in the domain of using\noptimization algorithms for the IoT based Smart\
    \ Cities.\nThe survey is organized as follows, Section 2 presents an introduction\
    \ to the ﬁve\nconsidered combinatorial optimization algorithms, Section 3 presents\
    \ the applications\nfound for these algorithms for each component of smart cities\
    \ and provides a discussion of\nthem based on the factors discussed previously.\
    \ Recommendations based on the compiled\ncoverage are given in Section 4 with\
    \ directions for future work in Section 5 to help guide\nresearchers in this ﬁeld\
    \ while Section 6 concludes the paper.\n2. Algorithms\nMetaheuristic algorithms\
    \ are widely used to solve combinatorial optimziation prob-\nlems in the real-world\
    \ [7]. The aim of these algorithms is to determine the minima or\nmaxima of an\
    \ objective function which translates an optimization objective in to one or\n\
    more mathematical equations. Five algorithms have been considered in this review,\
    \ these\nare the Ant Colony Algorithm, Genetic Algorithm, Particle Swarm Optimization\
    \ Algorithm,\nDifferential Evolution and Artiﬁcial Bee Colony. As mentioned earlier,\
    \ these have been\nchosen as these were the most commonly used optimzation algorithms\
    \ identiﬁed by [7].\nIn this section, we provide a brief intuitive description\
    \ for each of them.\n2.1. Ant Colony Optimization\nAnt colony optimization is\
    \ derived from the behavior of ants searching for food [8]. It\nwas observed that\
    \ during this process, each ant deposits a chemical called pheromone on\nthe path\
    \ which it takes towards the food. The more the ants take a given path, the more\n\
    the pheromone is deposited on it as it is deposited by each ant going over it.\
    \ Subsequent\nants that want to go towards the food use the amount of pheromone\
    \ on a given path or\nsub-path to decide which path to take so as to determine\
    \ the optimal route to the food.\nIn the artiﬁcial ant colony optimization algorithm,\
    \ the points on the path that form the\nsub-paths are encoded on a graph where\
    \ each ant can only visit a given vertex (travel\non the same sub-path) once.\
    \ Each iteration starts with a number of artiﬁcial ants, an ant\nwould choose\
    \ the next vertex to visit based on the level of pheromone on the possible\nsub-paths\
    \ available to it as well as whether that path has been used before. At the end\
    \ of\neach iteration, the pheromone levels are updated so as to prioritize the\
    \ use of the most used\npath for ants in the next iteration.\n2.2. Genetic Algorithm\n\
    A genetic algorithm [9] is based on evolutionary science. The idea behind the\
    \ genetic al-\ngorithm is that starting from a given population set of organisms,\
    \ subsequent reproduction\nwill result in ﬁtter organisms being produced given\
    \ that the organisms chosen for repro-\nduction have some level of ﬁtness. To\
    \ solve an optimization problem, a genetic algorithm\nbegins with a given population\
    \ size of strings also called a chromosome. Each ‘chromo-\nsome’ consists of a\
    \ ‘gene’ which may represent points in the population. The sequence\nSensors 2022,\
    \ 22, 4380\n4 of 34\nin which the genes are present would represent a solution\
    \ to the problem. For e.g., for a\nroute scheduling problem, this may be the coordinates\
    \ of the stops. The ‘goodness’ of a\nchromosome is determined by a ﬁtness function\
    \ that quantiﬁes how appropriate a given\nchromosome is as a solution for the\
    \ problem. Choosing the right ﬁtness function is an\nimportant consideration in\
    \ genetic algorithms as it needs to gauge the kind of optimization\nthat is to\
    \ be performed. The optimization process starts with an initial population of\
    \ a\ngiven size. Once a ﬁtness function has been deﬁned, in each iteration, two\
    \ or more chro-\nmosomes (parents) are taken at random from the population and\
    \ one or more offsprings\nare generated. The random selection takes the selected\
    \ parents ﬁtness function value in to\naccount, however, its necessary that not\
    \ all parents chosen are the ﬁttest of the population\nas otherwise, diversity\
    \ will be compromised, and the algorithm may get stuck in a local\nminimum. The\
    \ method by which these offspring are generated is called the Crossover\nfunction\
    \ and the number of parents mated to form offsprings from them depends on the\n\
    crossover rate. The Crossover function deﬁnes the way the genes within the chromosomes\n\
    are exchanged. Usually, the crossover rate has a high value. Moreover, depending\
    \ on some\nmutation rate, a given fraction of all offsprings are mutated. Mutation\
    \ depends on the\nmutation function used and involves members of the offspring\
    \ being swapped in some\nmanner. When one iteration of the offspring creation\
    \ from the parents in the entire popula-\ntion is completed, the offsprings replace\
    \ members of the original population (typically the\nweakest) and one generation\
    \ of the GA is said to be completed. In order to converge to a\nsufﬁciently good\
    \ result, GA’s need to run for many generations.\n2.3. Particle Swarm Optimization\n\
    Particle Swarm Optimization is modeled on the social behavior of animals rather\
    \ than\nthe evolutionary biological behavior on which Genetic Algorithms are based.\
    \ PSO [10] is\nparticularly based on the behavior of a ﬂock of birds searching\
    \ for food. Each bird in the\nﬂock searches for food and can communicate with\
    \ other birds in the ﬂock as soon as it\nﬁnds food or a good direction for it.\
    \ Therefore, each bird has two food ‘directions’ that it\nneeds to consider, ﬁrst\
    \ is on an individual level which is called the personal best and the\nsecond\
    \ is on the ﬂock level which is the global best. Using these two values the bird\
    \ will\nproceed towards that path and will inform other birds in the ﬂock too.\
    \ The idea here is\nthat after enough time and with all the individuals working\
    \ together, the swarm will ﬁnd\nthe place with the highest concentration of food.\
    \ In terms of using PSO for optimization\ntasks, individual birds are equivalent\
    \ to a solution as in a GA and each is considered as a\npoint or a particle, collectively\
    \ they make up the swarm. This swarm population may be\ninitialized randomly or\
    \ based on some domain knowledge about the problem. The highest\nconcentration\
    \ of food represents the optimal solution for the whole swarm where as a good\n\
    direction represents the local optimal solution for each case. The aim here, like\
    \ birds in a\nﬂock is to determine the global optimal solution using information\
    \ from each individual\nparticle. Each particle has three aspects to it, its position,\
    \ its velocity and a value of its\ncurrent position’s ‘goodness’. This ‘goodness’\
    \ as in the GA is deﬁned by a ﬁtness function.\nLike birds, each particle has\
    \ a personal best ﬁtness value and is also ware of the global best\nﬁtness value.\
    \ For any particle, the new direction of movement is decided by a combination\n\
    of the personal best and the global best as well as the particle’s intention to\
    \ maintain\nits current movement. Furthermore, several different topologies can\
    \ be utilized, and a\nneighborhood can also be set for each particle to convey\
    \ positions when limiting the global\nbest parameter to the local best scheme\
    \ rather than the whole swarm. The algorithm may\nbe stopped till the best solution\
    \ is reached or no more improvement is observed.\n2.4. Differential Evolution\n\
    Differential evolution [11] is a stochastic evolutionary algorithm which is used\
    \ for\noptimization problems for continuous functions. The DE algorithm does not\
    \ expect gra-\ndient information and thus it doesn’t need to be differentiable.\
    \ Like other evolutionary\nalgorithms, a solution is searched for in the design\
    \ space by maintaining a set of individual\ncandidate solutions. In each iteration,\
    \ the solutions with the best ﬁtness are combined\nSensors 2022, 22, 4380\n5 of\
    \ 34\ntogether and retained for the next iteration. The aim is to improve upon\
    \ the ﬁtness value\nand this process is repeated until a pre-decided condition\
    \ for termination of this process\nis satisﬁed. Differential Evolution is very\
    \ similar to Genetic Algorithms in that both are\nevolutionary in nature, however,\
    \ the difference is that the DE uses real numbers in the\nchromosome and also\
    \ that the mutation operation consists of the difference between two\nor more\
    \ chromosomes of the population with the possible addition of some type of noise\n\
    to create a new individual. Like GA, DE also suffer from getting stuck in local\
    \ minima.\nThe DE algorithm also has three control parameters, the population\
    \ size, the mutation\nfactor and the crossover probability.\n2.5. Artiﬁcial Bee\
    \ Colony\nArticle Bee Colony [12] is a swarm intelligence algorithm based on the\
    \ behavior of bees.\nWithin bees, there are different social classes who work\
    \ together to complete tasks such as\nharvesting pollen and nesting through the\
    \ use of smell, ’swing dance’ and other methods.\nBee colonies consist of three\
    \ types of bees, queen, male and the worker bees which work\non activities such\
    \ as searching for food, gathering and storage of honey. After gathering\nhoney,\
    \ the worker bee comes to the nest and informs other bees about the location of\
    \ the\nhoney source site through a dance. The ABC algorithm simulates the behavior\
    \ of bees\nby considering three elements, the food source, employed bees and unemployed\
    \ bees.\nThe food source is represented as revenue considering its distance and\
    \ quality, the higher\nthe revenue, the better is the value. In computational\
    \ optimization terms, the food source is\na potential solution to the objective\
    \ formulation of the considered problem and the quality\nor value of the food\
    \ source represents the ﬁtness value of that particular solution. At the\nstart,\
    \ all bees are used as scouts, searching for food sources. When a food source\
    \ is found,\nfor a high value food source, bees who ﬁnd those food sources become\
    \ hire bees and collect\nthe food source. If the food source is of intermediate\
    \ value, the bees become follow bees\nand if the food source value becomes low,\
    \ the bees become scout bees to look for better\nfood sources. Hire bees, the\
    \ bees with a food source location having a high value, lead\nthe follow bees\
    \ to develop solutions in their neighborhood in order to come up with more\nsolutions.\
    \ A subset of the highest-ranking solutions are then considered before this process\n\
    is repeated again until the end conditions are met.\n3. Optimization Application\
    \ in Smart Cities\nSeveral tasks in smart city operations require the use of metheuristics\
    \ to be solved,\nthe aim being to optimize the resources present in the city.\
    \ This section presents the different\nuses of optimization techniques for IoT\
    \ enabled Smart Cities. This task is performed for all\neight components, Smart\
    \ Agriculture, Smart City Services, Smart Grid, Smart Health, Smart\nHomes, Smart\
    \ Homes, Smart Industry, Smart Infrastructure and Smart Transportation.\n3.1.\
    \ Smart Agriculture\nSmart Agriculture involves the use of digital technologies\
    \ such as sensors and intelli-\ngent systems to improve agricultural productivity.\
    \ The sustenance of agriculture depends\non water, and it is central to the agricultural\
    \ production of food items around the world.\nHowever, water is becoming an ever-scarce\
    \ resource due to the increasing demand caused\nby human population growth, increased\
    \ economic activity by industries and also due to\nclimate change. It therefore\
    \ is necessary to utilize this precious resource wisely so as make\nuse of it\
    \ in the best manner possible. One approach towards ensuring that water and land\n\
    is used appropriately is by introducing irrigation management schemes such as\
    \ irrigation\nscheduling and water allocation in the farming process. A summary\
    \ of the optimization\nproblems, objectives, constraints in smart agriculture\
    \ and the use of IoT is illustrated in\nFigure 1.\nSensors 2022, 22, 4380\n6 of\
    \ 34\nSmart Agriculture \nIrrigaƟon\nWater\nScheduling \nIrrigaƟon\nWater\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon\nand Water\nControl \nObjectives: Minimize\nwater\nusage/deviation/leakage\n\
    Maximize benefits\nConstraints: Land area\navailable, water limits\nObjectives:Minimize\n\
    leakage \nMaximize net return,\nwater usage \nConstraints: Water\nlimits, capacity\
    \ of\nirrigation system, flow\ncapacity, discharge\nlimits, time limits\nObjectives:\
    \ Minimize\nenergy cost \nConstraints: Limited\nenergy available, water\nvolume\
    \ minimums\nIoT Usage: Sensors provide information about water flow, amount of\
    \ water and more\nConstraints: Water\nlimits, capacity of\nirrigation system,\
    \ flow\ncapacity, discharge\nlimits, time limits\nFigure 1. Optimization applications\
    \ in Smart Agriculture.\nMeasurements in water irrigation systems are typically\
    \ performed by sensors placed\nat different points in the canals and rivers to\
    \ determine water ﬂow, volume and speed. This\ninformation regarding water movement\
    \ can be combined with economic information such\nas yeild, crop proﬁt to optimization\
    \ water distribution. Irrigation management through\nscheduling has been performed\
    \ by the authors of [13–16] to maximize net return on crop\nproﬁts, water use\
    \ efﬁciency and to minimize leakage losses. In [17] Fuqiang et al. aim to\noptimize\
    \ water delivery through canals while also performing scheduling. They do this\n\
    using a genetic algorithm and work with two objectives, minimizing the difference\
    \ between\nthe time of water delivery and water demand and the ﬂuctuation in water\
    \ discharge of the\nmain canal. Their model was applied to a district in China.\n\
    The authors in [18,19] work on optimal allocation of water. Of these, Ikudayisi\
    \ et al. [18]\nuse the differential evolution algorithm to minimize the water\
    \ allocated to farms in South\nAfrica while maximizing the beneﬁts in terms of\
    \ job creation, ensuring food security and\nthe yield of crops. Wu et al. [19]\
    \ approach this as problem of reducing deviation between\ndifferent channels and\
    \ minimizing water seepage to ensure a more consistent supply to\nall water channels.\
    \ An approach presented by Ocampo et al. [20] tackles this problem not\nas a task\
    \ of allocation directly but considers the scenario of providing sufﬁcient water\
    \ to a\nsmart farm while controlling two water pumps. The objective function is\
    \ formulated to\nminimize the energy cost of the water pumps while maintaining\
    \ sufﬁcient supply of water\nto the plants on the farms. Constraints considered\
    \ for such applications include the limited\nquantities of water being worked\
    \ with, the time for which the water was available and the\narea of land which\
    \ was to be considered. Another allocation based scheme is presented\nby the authors\
    \ of Zhuo et al. [21] who use a genetic algorithm for an irrigation system\nbased\
    \ on a reservoir and two pumping stations. Their aim is to ensure that there is\
    \ no\nwater shortage. The objective function used by them is the minimization\
    \ of the annual\nsum of squared water shortage. Other work in [22] also minimizes\
    \ use of groundwater\nSensors 2022, 22, 4380\n7 of 34\nand increase beneﬁt to\
    \ the regional water supply through reduction of water deﬁcits in the\nDujiangyan\
    \ of China.\nA precision agriculture scheme is presented by Roy et al. [23] who\
    \ combine an IoT\nsystem consisting of sensors on plants using a GA based rainfall\
    \ predictor. Combining\npredicted rainfall information along with the sensed moisture\
    \ level in the crops, they control\nplant watering. Lin et al. [24] propose a\
    \ framework for the management of fertigation and\nirrigation in precision agriculture.\
    \ They perform short term management and long-term\nmanagement. Soil and crop\
    \ growth data is gathered from IoT based sensor systems. Long\nterm planning refers\
    \ to the allocation of water and fertilizer resources to crops in terms of\nquantity\
    \ so as to meet demands whereas short term refers to when how to use them. They\n\
    use a genetic algorithm for long term planning considering the allocation of water\
    \ and\nfertilizer for crops to maintain pH value and the electrical conductivity.\
    \ This information\nhas been presented in Table 1 while a summary of the identiﬁed\
    \ data sources used by each\nconsidered work has been provided in Table 2.\nTable\
    \ 1. Optimization in Smart Agriculture.\nApplication\nAlgorithm\nSingle/Parallel\n\
    Problems\nObjectives\nConstraints\nIrrigation\nManagement\n(Irrigation Water\n\
    Scheduling)\nACO [13]\nSingle\nMaximizing net return on crop\nConstraint on water\
    \ availability\nPSO [14]\nCapacity of irrigation system\nWater savings should\
    \ be more than\ndeﬁciency\nGA [17]\nSingle\nMinimize water ﬂuctuations\nand difference\
    \ between the\ntime of water demand and\nneed\nFinite canal capacity\nMaximum\
    \ rotation time limitation\nGA [15]\nParallel\nMaximize yield, global and\nlocal\
    \ water use efﬁciencies\nConstraint on irrigation interval\nMinimum and max irrigation\
    \ amount\nGA [16]\nParallel\nMinimize leakage loss both\nindividually and overall\n\
    Flow capacity limited by maximum\nIrrigation time constraint\nNet discharge constraint\n\
    Total ﬂow rate should be sum of\nindividual ﬂowrates\nIrrigation\nManagement\n\
    (Irrigation Water\nAllocation)\nDE [18]\nSingle\nMinimize irrigation water\nallocated\
    \ and maximizes net\nbeneﬁts\nConstraint on the land area available\nMinimum and\
    \ max planting areas for\ncrops\nLimited water available for the farm\nPSO [19]\n\
    Parallel\nMinimize deviation in the\ndifferent channels, water\nseepage in the\
    \ distribution\nchannels\nTime\nWater quantity constraints\nSensors 2022, 22,\
    \ 4380\n8 of 34\nTable 1. Cont.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\n\
    Objectives\nConstraints\nGA [22]\nParallel\nMaximize beneﬁt to regional\nwater\
    \ supply, minimize water\ndeﬁcit groundwater\nexploitation in regions\nWater supply\
    \ quantity constraints for\nannual water, ground water\nIrrigation\nManagement\n\
    (Energy\nOptimization)\nGA [20]\nParallel\nMinimize energy cost while\nmaintaining\
    \ water supply for\nplants\nLimited energy available\nWater volume maintained\
    \ in storage\ntank, ﬁsh pond\nGA [21]\nSingle\nMinimize sum of squared\nwater\
    \ shortage\nAnnual water availability in reservoir\nWater rights of replenishment\n\
    pumping station\nWater rights of the irrigation pumping\nstation\nOperational\
    \ rule constraints\nIrrigation\nManagement\n(Water Control)\nGA [25]\nSingle\n\
    Maximize yield\nMinimum and maximum water depth\nlimits\nMin and max soil moisture\n\
    Irrigation and\nFertilizer\nManagement\nGA [24]\nSingle\nMaximize economic proﬁts\n\
    and environmental beneﬁts\nLimits on the demand of water for\neach crop\nTotal\
    \ water does not exceed available\nTotal fertilizer doesn’t exceed\navailability\n\
    Water allocation should be positive\nTable 2. Data setup used for Smart Agriculture\
    \ Optimization.\nData Type\nPapers\nSelf-collected/Presented\n[14,16,17,20,24,25]\n\
    Government and private agencies\n[13–19,25]\n3.2. Smart City Services\nAccording\
    \ to the world bank, the amount of annual solid waste generated is set to be\n\
    3.40 billion tons [26] in 2050. Managing this waste and its collection in an efﬁcient\
    \ manner is\nimperative for health and climate reaons. The most common application\
    \ towards smart city\nservices optimization is waste management as illustrated\
    \ in Figure 2 which summarizes\nthe objectives, constraints and the use of IoT.\n\
    Smart waste collection systems include sensors attached to trash cans which can\n\
    inform the municipal authority about the status of the garbage present in them.\
    \ Once the\ntrash cans are close to being full, it is the responsibility of the\
    \ municipal corporation to\nperform garbage collection in an efﬁcient manner.\
    \ In this respect, data provided by the\nsensors on garbage cans can be used to\
    \ determine an optimized route for garbage collection\nto construct the Vehicle\
    \ Routing Problem (VRP) in the Smart City Services domain. As such,\nthis problem\
    \ has been performed keeping in view various goals. The minimization of\nthe route\
    \ distance taken by a garbage tuck has been performed by the authors in [27–31].\n\
    The aim in this case is to determine a route for garbage collection vehicles that\
    \ minimizes\nthe total distance traveled by the them. Zhang et al. [31] consider\
    \ multi-vehicle allocation\nSensors 2022, 22, 4380\n9 of 34\nwhile considering\
    \ the single objective of minimizing route distance. Wei et al. [32] use\nthe\
    \ Artiﬁcial Bee Colony algorithm to determine garbage collection routes resulting\
    \ in\nthe minimum emission of CO2. Another optimization objective in route optimization\n\
    for waste management has been the minimization of the total travel time, such\
    \ a target\nis described by the authors of [33–36] who aim to reduce travel time\
    \ while considering\nemptying of waste bins. Another optimization consideration\
    \ in route optimization for\nwaste management is to reduce cost. This has been\
    \ carried out by Tirkolaee et al. [37] who\nformulate a multi-objective function\
    \ of travel cost and total useage cost of vehicles and\ndetermine the route with\
    \ the minimum costs using the ACO. Constraints considered in\nsuch applications\
    \ are related to a ﬁxed road network which depends on the locality for\nwhich\
    \ the optimization is being performed, the continuity in the determined route\
    \ as well\nas fulﬁllment of capacity restrictions. The useage of optimization\
    \ algorithms in smart city\nservices is provided in Table 3 and the data sources\
    \ used are provided in Table 4.\nSmart City Services \nWaste Management\nRoute\
    \ OpƟmizaƟon \nObjectives: Minimize\ndistance, CO2\nemissions, travel time\nConstraints:\
    \ Road\nnetwork fixed, location\nserved by one truck,\ncontinuous routes,\ndeadline\
    \ to finish jobs,\ncapacity limited\nIoT usage: Sensors for\ntrash fill level\
    \ and\nweight detection\nFigure 2. Optimization applications in Smart City Services.\n\
    Sensors 2022, 22, 4380\n10 of 34\nTable 3. Optimization in Smart City Services.\n\
    Application\nAlgorithm\nSingle/Parallel Problems\nObjectives\nConstraints\nWaste\
    \ Management\nRoute Optimization\nACO [27]\nSingle\nMinimization of\ndistance\n\
    Road Network is ﬁxed\nGA [28,29,31]\nEach dumpster served by one\ntruck only\n\
    Trucks leave depot to go to landﬁll\nPSO [30]\nRoutes are continuous\nABC [32]\n\
    Single\nMinimize CO2\nemissions\nCapacity constraint for bins as\nwell as trucks\n\
    ACO [33]\nSingle\nMinimize total\ntravel time\nTrucks leave a depot empty\nGA\
    \ [34,35]\nBins needs to be fully emptied by\ntrucks\nVehicle start depot and\
    \ end at\nlandﬁll\nPSO [36]\nDemand should not exceed\ncapacity\nACO [37]\nSingle\n\
    Minimize travel\ncost and total usage\ncost of vehicles\nSubtour elimination\n\
    Jobs should ﬁnish within a given\ndeadline\nTable 4. Data setup used for Smart\
    \ City Services Optimization.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [27–29,31,33,35,37]\nGovernment Agency\n[34,36]\nDataset\nCapacitated VRP datasets\
    \ [38] by [30],\nCapacitated VRP Instances [39] by [32]\n3.3. Smart Grid\nThe\
    \ electricity grid has been a major beneﬁciary of smart city technologies. The\
    \ in-\ncreasing demand for energy by consumers along with the environmental impact\
    \ that fossil\nfuel-based energy production has on the planet has forced utility\
    \ companies to introduce\nrenewable energy sources within the electricity distribution\
    \ system and make their energy\nproduction and distribution systems more efﬁcient\
    \ through planning and design improve-\nments. Optimization algorithms ﬁnd applications\
    \ within the smart grid (SG) domain in\nterms of power management and planning.\
    \ A summary of the applications, objectives,\nconstraints and IoT useage for optimization\
    \ algorithms in Smart Grids has been illustrated\nin Figure 3.\nAn increasing\
    \ population has led to an increasing demand for electricity around\nthe world.\
    \ This burdening of the electricity grid has led to measures for increasing the\n\
    performance of the electricity distribution system by reducing loss, prevent overload\n\
    and reduce cost. The authors in [40–46] work on the improvement of grid performance\n\
    by minimizing cost and reducing power losses. Power loss minimization is speciﬁcally\n\
    targeted by [40,42,44]. Of these, Ettappan et al. [40] aim for the reduction of\
    \ power losses,\nvoltage deviation and increasing voltage stability. Atteya et\
    \ al. [44] also address this\nproblem by considering network redistribution to\
    \ minimize losses in the grid whereas\nSakr et al. [42] focuses on minimizing\
    \ transfer losses in the smart grid to accomplish\nthis task. Nguyen and Mohammadi\
    \ [43] attempt the reduction of power losses and line\ncongestion by determining\
    \ the location of thyristor controlled series compensator devices\n(TCSC). The\
    \ problem is formulated as a multi-objective problem aiming to minimize\nloadability\
    \ of the lines, active power loss and the reactance of the transmission line.\
    \ A cost\nSensors 2022, 22, 4380\n11 of 34\nreduction-based approach to improve\
    \ grid performance is followed by Das et al. [41] who\naim to reduce cost of maintaining\
    \ electrical stability and also the cost of management of the\ndistribution network.\
    \ The do this by considering changing the location of energy storage\nsystems\
    \ within the grid. Kanwar et al. [45] take maximizing proﬁts and minimization\
    \ of\npower losses while considering sizing of a distributed energy resource generation\
    \ system.\nSmart Grid \nPower Management \nImproved Grid\nPerformance \nDistributed\n\
    Energy\nResource\nManagement \nPlanning \nExpansion of\nDistribuƟon\nNetwork \n\
    Objectives: Minimize power\nloss, voltage deviation,\nreactance, average\nloadability,\
    \ cost \nMaximize profit  \nConstraints: Power flow\nrestrictions, location\n\
    limitations, operational\nlimitations. capacity limits,\nload balances, power\
    \ limits,\ntopology restrictions\nObjectives: Minimize cost,\nemissions \nConstraints:\
    \ Power limits\n(generation and\ndistribution), battery\ncharge/discharge limits,\n\
    load schedule restrictions,\ncapacity limits\nObjectives: Minimize\nexpansion\
    \ cost, number of\nunits, power losses\nConstraints: Power flow\nrestrictions,\
    \ generation\nlimits, infrastructure limits\nIoT Usage: Loads and other devices\
    \ in the power network can be swithced on and off as needed. Phase\nmeasurement\
    \ units for e.g., provide capability to obtain measurements in the smart grid\n\
    Figure 3. Optimization applications in Smart Grid.\nDistributed energy resource\
    \ (DER) management is another area where optimization\nalgorithms are used in\
    \ Smart Grids. The management of distributed energy sources\nwithin smart grids\
    \ is dependent on the interconnectivity provided by IoT in the smart\ngrid system.\
    \ Smart meters within the smart grid provide real-time information relating\n\
    to power consumption which can be used for controlling DER electricity. Moreover,\
    \ IoT\ndevices allow for switching loads and generation sources as required. This\
    \ assists in\ncreating a virtual power plant (VPP) to aggregate all energy sources\
    \ in a DER scenario.\nWith global warming and a changing climate, utilities around\
    \ the world are increasingly\nincorporating various renewable energy sources within\
    \ their grid which often times are\nan economically convenient option as well.\
    \ However, many of these sources such as wind\nand solar (photo voltaic [PV])\
    \ do not offer a consistent supply of power throughout the day.\nIn this regard,\
    \ systems such as batteries as well as conventional generation plants need to\n\
    be used together along with renewable energy sources. For utility companies, it\
    \ is necessary\nto optimize power production so that the maximum amount of energy\
    \ is utilized from\nthese renewable sources so as to reduce cost to the user while\
    \ also maintaining the quality\nof service. The authors in [47–60] provide a management\
    \ scheme for DERs to minimize cost.\nIn this regard, the authors in [47,48,50–52,55,58–60]\
    \ all formulate the problem of distributed\nenergy resource management as a single\
    \ objective problem where the cost incurred is\nSensors 2022, 22, 4380\n12 of\
    \ 34\nminimized. On the other hand, the authors in [49,53,56,57] formulate this\
    \ as a multi-\nobjective problem. Azaza and Wallin [57] not only target reduction\
    \ of electricity production\ncost but also maximize reliability of the system\
    \ while reducing the environmental impact of\nthe distribution system. It is interesting\
    \ to note that the improvement of system reliability\nis formulated as a minimization\
    \ problem as well. Similarly, Das et al. [49] consider the\nreduction of both\
    \ the total cost as well as the environmental cost of the system. Their\nconsidered\
    \ scenario also consists of a PV, Wind Turbine and battery. The constraints\n\
    considered were constraints regarding power ﬂow, limitations on power and voltage\n\
    values, power balance constraint and power generation constraints on the renewable\n\
    energy sources. In [47,60], a DER management system is developed for a microgrid\
    \ which\nconsists of a controllable collection of energy storage and generation\
    \ sources powered by\nIoT devices.\nPlanning in distribution networks has been\
    \ considered by the work of [61,62]. Mahdavi\net al. [61] work on expanding transmission\
    \ lines utilizing the artiﬁcial bee colony algorithm\nto minimize cost of network\
    \ expansion, power losses in load and generation. On the\nother hand, Maji and\
    \ Acharjee [62] aim to determine the minimum number of Phase\nMeasurement Units\
    \ (PMUs) to make the distribution network observable. The constraints\nused were\
    \ power ﬂow and balance of power as well as limits on the number of transmission\n\
    lines available. The internet of things also ﬁnds usefulness in terms of the use\
    \ of Phase\nMeasurement Units (PMU) that provide voltage and current measurement\
    \ capabilities\nwithin smart grids to perform maintenance and monitoring operations.\
    \ This has provided\nin Table 5 and the data setups used by the covered research\
    \ work is presented in Table 6.\nTable 5. Optimization in Smart Grid.\nApplication\n\
    Algorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nPower\nManagement\n\
    (Improve Grid\nPerformance)\nABC [40]\nSingle\nMinimize active power\nloss, volage\
    \ deviation and\nvoltage stability index\n(L-index)\nPower ﬂow constraints\nGA\
    \ [42]\nRestriction on power source\ninstallations and other components\nrelated\
    \ to power structure\nPSO [44,46]\nSingle\nMinimize power loss\nGeneration and\
    \ other component\noperations within limits\nGA [43]\nSingle\nMinimize average\n\
    percentage of loadability of\nthe lines, active power loss,\nreactance of transmission\n\
    line\nLimitation on values of bus voltage\nTransmission line capacity, generator\n\
    active and reactive power.\nABC [41]\nSingle\nMinimize cost for\nmaintaining thermal\
    \ and\nvoltage stability and lower\nasset management of\ndistribution networks\n\
    Active and reactive power must be\nbalanced\nLimits on voltage and load maximum\n\
    ESS max charging and discharging\nconstraints\nSensors 2022, 22, 4380\n13 of 34\n\
    Table 5. Cont.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\nObjectives\n\
    Constraints\nPSO [45]\nParallel\nMaximize annual proﬁt by\nreducing charges for\n\
    annual energy losses, peak\npower loses etc\nConstraint on the node voltage (soft)\n\
    Minimize power loss for\nthe network\nreconﬁguration\nPower injected by DER and\
    \ SG within\nlimit\nPower generated at a given node has a\nlimit\nFor reconﬁguration:\n\
    Radial topology,\nNode voltages has a max hard\nconstraint\nPower\nManagement\n\
    (Distributed Energy\nResource\nManagement)\nABC [50–52]\nSingle\nMinimize total\
    \ cost\nPower generation by renewables\nwithin limits\nDE [53–55]\nBattery charge\
    \ and discharge limits\nand system reliability\nGA [47,48]\nPower balance constraint\
    \ (generated\nequal to consumed)\nPSO [58–60]\nSpeciﬁc loads are interruptible\n\
    Constraints on the efﬁciencies of the\nsources\nDE [56]\nSingle\nMinimize cost\
    \ and\nemission\nABC [63]\nSingle\nMinimize cost and power\nimported from outside\n\
    micro-grid\nPower ﬂow constraints for the DER\nGA [49]\nSingle\nMinimization of\
    \ cost of\nenergy and life cycle\nemissions (CO2 and energy\nstored in batteries\
    \ or\nconverted by renewable\nsources during process of\nsatisfying load\nrequirements)\n\
    Constraints on battery capacity\nSystem reliability constraint\nEnergy produced\
    \ equal or greater\nsthan required\nPSO [57]\nSingle\nMinimize reliability cost,\n\
    cost of electricity\nproduction and operation\nenvironmental impact\n()using renewable\
    \ factor)\nExpansion of\ndistribution\nnetwork\nABC [61]\nSingle\nMinimize cost\
    \ of network\nexpansion, active losses\nand loss of load and\ngeneration\nPower\
    \ ﬂow and active power\nbalanced\nPower generation limits\nNumber of transmission\
    \ line limits\nPSO [62]\nSingle\nMinimize number of PMUs\nSG Network should be\
    \ observable\nSensors 2022, 22, 4380\n14 of 34\nTable 6. Data setup used for Smart\
    \ Grid.\nData Type\nPapers\nSelf-collected/Presented/Generated\n25 Bus networks\
    \ [49,53,55–60,63]\nGovernment Agency/other research work\n[48,50–52,57,61]\n\
    Dataset/Standard Network\nIEEE 14 Bus [42,62]\nIEEE 30 Bus [40,42,43]\nIEEE 33\
    \ Bus [41,44,45,54]\nIEEE 37 Bus [47]\nIEEE 57 Bus [40,42,62]\nIEEE 69 Bus [45]\n\
    119 Node system of [46,64]\n3.4. Smart Health\nSmart health refers to the use\
    \ of technology to provide better healthcare to patients.\nThis can be in the\
    \ form of developing tools for better diagnosis of diseases or the use\nof algorithms\
    \ for better planning and healthcare delivery. The deployment of timely\nemergency\
    \ vehicles to a person in need is imperative towards providing healthcare services\n\
    to people. Two applications of optimization problems within Smart Health are emergency\n\
    vehicle routing and their allocation and relocation as shown in Figure 4. It also\
    \ summarizes\nthe objectives uses, constraints considered and role of IoT.\nSmart\
    \ Health \nEmergency\nVehicle\nAllocaƟon and\nRelocaƟon \nEmergency\nVehicle RouƟng\
    \ \nObjectives: Minimize time,\ncost\nConstraints: Traffic balance,\ntraffic flow\
    \ restrictions,\nvehicle speed and number\nlimits, location of\nemergency vehicle\n\
    Objectives: Minimize time,\nvehicle density \nConstraints: Road connection\nrestrictions,\
    \ time limits \nIoT Usage: Real time location services, real time traffic\ninformation,\
    \ vehicle to vehicle and vehicle to infrastructure\ncommunication can also provide\
    \ better navigation and monitoring\nservices\nFigure 4. Optimization applications\
    \ in Smart Health.\nSensors 2022, 22, 4380\n15 of 34\nLate arrival of ambulances\
    \ and other emergency vehicles to people in need may result\nin irreversible damage\
    \ to life and property. Studies have shown that delayed ambulance\ndispatch increases\
    \ mortality [65], moreover, economically speaking, a one-minute delay in\nresponse\
    \ time for cardiac patients found that the mortality increases by 1% and adds\
    \ annual\ncosts of USD 7 billion in healthcare expenditure [66]. Keeping this\
    \ in mind ambulance\ndeployment and location determination have been of considerable\
    \ interest in the area of\noptimization for smart health. These two problems are\
    \ speciﬁc cases of the Vehicle Routing\nProblem [67] and Maximum coverage problem\
    \ [68] sometimes called the Ambulance Rout-\ning Problem [69] and Ambulance Location\
    \ Problem [70]. The authors in [71] work on the\noptimal allocation determination\
    \ based on ﬁxed sites and a ﬁnite number of ambulances\nwhile minimizing lateness\
    \ of ambulance arrival using the Ant Colony Optimization. Later\non, in their\
    \ work in [72], they do a comparison with using GAs and ﬁnd that GAs provide\n\
    the better performance. Kochetov and Shamray [73] attempt localization of ambulance\n\
    ﬂeet at base stations with the aim to minimize the average waiting time for arrival\
    \ of\nambulances. An interesting approach to this problem is presented in Yan\
    \ et al. [74] who\nwork on this problem from a scheduling perspective where they\
    \ control scheduling of\nemergency vehicles to reduce the total cost in terms\
    \ of money and time using a Genetic\nAlgorithm. Another approach for sequencing\
    \ vehicles to ensure emergency vehicles reach\ntheir destination in time is presented\
    \ by Lu et al. [75] who aim to prioritize emergency\nvehicle thoroughfare on trafﬁc\
    \ intersections. They do this by minimizing the entrance time\nof the vehicle\
    \ by manipulating vehicle order. Constraints used for these problems include\n\
    constraints on the speed of the ambulances, the ﬂow of vehicles on the road, speciﬁc\
    \ road\nconnections present as well as time constraints. The internet of things\
    \ serves a pivotal role\nin enabling the allocation and routing of emergency vehicles.\
    \ The connectivity provided by\nIoT through vehicle-to-vehicle communication as\
    \ well as vehicle to infrastructure commu-\nnication facilitates providing a real-time\
    \ indication of the vehicle’s location as well as the\ncondition of trafﬁc in\
    \ a given area. This information can then be used to determine an opti-\nmal route\
    \ for emergency vehicles as well as for their optimal deployment to serve people\n\
    in need. Information about optimization methods for smart health has been presented\
    \ in\nTable 7 and the data setups used in these approaches in Table 8.\nTable\
    \ 7. Optimization in Smart Health.\nApplication\nAlgorithm\nSingle/Parallel Problems\n\
    Objectives\nConstraints\nEmergency Vehicle\nAllocation and\nRelocation\nACO [71]\n\
    Single\nMinimize lateness\nAmbulance from nearest hospital is\ndispatched\nGA\
    \ [72]\nSpeed of ambulance\nTotal number of ambulance limits\nGA [73]\nSingle\n\
    Minimize average\nwaiting time of\nambulances\nBalance constraints on exit and\
    \ entry\nvolumes\nFlow conservation constraints\nGA [74]\nSingle\nMinimize total\
    \ cost in\nmoney and time\nEmergency Vehicle\nRouting\nPSO [76]\nSingle\nMinimize\
    \ travel time,\nroad length traveled,\ndensity of vehicles on\nthe road\nRoad\
    \ connections are speciﬁc\nGA [75]\nSingle\nMinimize the entrance\ntime of emergency\n\
    vehicle by changing\nthe order of vehicles\ngoing through\nintersections\nConstraint\
    \ on the difference between\narrival times of current and previous\nvehicles and\
    \ on the entrance time of the\nvehicle\nSensors 2022, 22, 4380\n16 of 34\nTable\
    \ 8. Data setup used for Smart Health\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [71–76]\nGovernment Agency/other research work\n[72–74]\n3.5. Smart Homes\nHome\
    \ energy management has been the prime application of optimization in smart\n\
    homes, a summary of the objectives, constraints and the use of IoT has been shown\
    \ in\nFigure 5.\nSmart Homes \nHome Energy Management \nAppliance\nScheduling\
    \ \nObjectives: Minimize\ncost, time, peak to\naverage power ratio,\ndiscomfort\
    \ \nConstraints: Capacity\nlimits, flow, one level\nper location\nIoT usage: Sensors\
    \ for providing power consumption data and other environmental\nreadings such\
    \ as temperature etc for comfort determination in homes, smart meters\nprovide\
    \ interconnectivity betwen homes\nFigure 5. Optimization applications in Smart\
    \ Homes.\nHome energy management refers to the development of demand side management\n\
    schemes that aim to reduce the electricity cost billed to a customer or maintain\
    \ comfort for\nthe user. One way this is performed is by appropriate appliance\
    \ scheduling. The idea here\nis to schedule the usage of appliances in such a\
    \ way that the most power-hungry devices are\nturned on during off peak hours\
    \ when electricity costs might be lower. The combination of\nthe Smart Grid and\
    \ Smart Homes facilitates the development of optimization schemes that\nnot only\
    \ beneﬁt the customer (in terms of reduced electricity costs and maintaining comfort)\n\
    but also be useful for the utilities in ensuring that load proﬁles (though minimizing\
    \ the\nSensors 2022, 22, 4380\n17 of 34\npeak to average ratio) are more consistent\
    \ thereby allowing better planning of the power\ngeneration mix used by them.\
    \ The authors of [77] perform appliance scheduling for the pur-\npose of minimizing\
    \ electricity cost and the waiting time for appliance usage. Interestingly,\n\
    they incorporate comfort maintenance by adding it as a constraint. A similar approach\
    \ has\nbeen followed by Bui et al. [78] and Makhadmeh et al. [79] who aim to minimize\
    \ the cost\nof electricity usage with a constraint for maintenance of comfort.\
    \ Makhadmeh et al. [79]\nalso include the reduction of waiting time rate for appliances\
    \ by the user and the reduction\nof the peak to average ratio of the power consumed\
    \ as constraints. The authors in [80–83]\nperform appliance scheduling while considering\
    \ electricity cost and peak to average ratio\nwhich need to be minimized. All\
    \ of the authors present a multi-objective function for this\npurpose combining\
    \ the objectives of minimizing the cost and the peak to average power\nratio.\
    \ Azimi et al. [84] combine the problem of reducing cost and power together as\
    \ a\nsingle objective by considering the minimization of the ratio of operating\
    \ cost and load\nfactor in a battery supported system. The works of [85–89] also\
    \ consider user comfort\nas part of the objective. In [85], Essiet and Wang form\
    \ a multi-objective minimization\nproblem of electricity cost, peak to average\
    \ ratio for power and discomfort of users in a\nsmart home supported by a renewable\
    \ energy system consisting of a battery and PV system.\nIn Chanra et al. [90],\
    \ the authors aim to reduce electricity cost by appliance scheduling\nin such\
    \ a manner so as to make as much use of onsite energy units as possible so as\
    \ to\nreduce usage of utility provided electricity. The energy units they consider\
    \ are a diesel\ngenerator, renewables and battery. Another approach that aims\
    \ to reduce cost of consumed\nelectricity is presented by Faia et al. [91] who\
    \ formulate it as a problem of minimizing the\nenergy bill and the cost associated\
    \ with curtailment of power in a system with a battery\nand a photovoltaic system.\
    \ The work in [88,92–94] also perform appliance scheduling to\nreduce cost of\
    \ electricity. Appliance scheduling for smart homes has also been performed\n\
    by Fatima et al. [81] and Abid et al. [80] considering a microgrid for homes where\
    \ instead of\noptimizing data from single homes, the authors used data from connected\
    \ smart meters to\ndetermine an optimized control scheme for appliances across\
    \ the grid. The constraints used\nfor optimization in smart homes are on the comfort\
    \ needing to be maintained, constraints\non the powerﬂow, time of operation, the\
    \ maximum power that is present or used and which\nappliances are switchable appliances.\
    \ Appliance scheduling is based on smart meters as\nwell as individual control\
    \ and monitoring of appliances using IoT systems. IoT devices\nenable the microgrid\
    \ which is used to gather data as well as control the switching on and\noff of\
    \ sources from the houses electricty supply. The information gathered from these\n\
    IoT units can be processed to optimize energy consumption patterns to reduce cost\
    \ to the\ncustomer as well as increase comfort. The use of the considered optimization\
    \ schemes for\nsmart homes has been presented in Table 9 with the data setups\
    \ presented in Table 10.\nTable 9. Optimization in Smart Homes.\nApplication\n\
    Algorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nHome Energy\nManagement\n\
    ACO [77]\nSingle\nMinimize cost and\nwaiting time\nComfort needs to be maintained\n\
    ACO [80]\nParallel\nMinimize cost and peak\nto average ratio\nPower ﬂow constraints\n\
    ACO [81]\nSingle\nMinimize cost and peak\nto average ratio\nMaximum energy capacity\
    \ constraint\nDE [82]\nDevice counted that can be shifted is\npositive\nPSO [83]\n\
    Number of devices shifted at any time\nshould not be more than the available\n\
    number of controllable devices\nSensors 2022, 22, 4380\n18 of 34\nTable 9. Cont.\n\
    Application\nAlgorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nGA\
    \ [95]\nSingle\nMinimize peak to\naverage ratio for load\nshaping\nLoad shaping,\
    \ redistribution of load in\na ﬂexible manner\nGA [84]\nSingle\nMinimize ratio\
    \ of\noperating cost and load\nfactor\nCharging and discharging of batteries\n\
    Complete load transfer and load\nclipping limits\nDE [85]\nSingle\nMinimize electricity\n\
    cost, peak to average\nratio of power and\ndiscomfort\nminimization of users\n\
    Constraints on PV supply limits\nACO [86]\nState of charge and rate of discharge\
    \ of\nbattery\nDE [87]\nSingle\nMinimize electricity\ncost and discomfort\nTime\
    \ of operation within speciﬁed\nlimits\nPSO [89]\nTemperature, air quality, illumination\n\
    and energy should be within\nmaximum limits\nGA [63,88,96]\nParallel\nA given\
    \ appliance must be on for\nspeciﬁed times of the day\nPower limits to be followed\n\
    ABC [78]\nSingle\nMinimize cost of\nelectricity\nAppliances for comfort have ﬁxed\n\
    times\nDE [90,92]\nSome appliances cannot be delayed\nGA [93]\nPower balance constraints\n\
    PSO [79,94]\nSurplus solar power sold back to\ndistribution system\nMaintain zero\
    \ net energy in building\nTime constraints\nLoad safety factor\nLoad phases of\
    \ appliances fulﬁll\nenergy requirements\nComfort needs to be maintained\nPeak\
    \ to average power ratio balancing\nPSO [91]\nSingle\nMinimize energy bill\nand\
    \ cost associated\nwith KWH curtailment\nPower values within limits, battery\n\
    charge and discharge limits\nTable 10. Data setup used for Smart Homes.\nData\
    \ Type\nPapers\nSelf-collected/Presented/Generated\n[63,77–85,87,88,92–94,96]\n\
    Government Agency/other research work\n[79–81,85,89–91,95,96]\n3.6. Smart Industry\n\
    One of the biggest enablers of the Industry 4.0 concept has been the use of AI\
    \ tech-\nniques to improve the efﬁciency of the manufacturing and production process.\
    \ This has led\nto the development of cyber physical systems aiming to assist\
    \ in activity recognition [97],\nmachine health prediction [98] and production\
    \ management in terms of bottleneck predic-\ntion [99]. Apart from conventional\
    \ AI applications of anomaly detection, classiﬁcation and\nregression, computational\
    \ optimization also ﬁnds numerous applications as it ﬁts well with\nSensors 2022,\
    \ 22, 4380\n19 of 34\nthe objective of efﬁcient and streamlined manufacturing.\
    \ The major applications for the use\nof computational optimization have been\
    \ in the area of routing and location for logistics and\nare variations of the\
    \ vehicle routing problem and are typically represented as Multidepot\nVehicle\
    \ Routing Problem (MVRP), Vehicle Routing Problem Pick-up and Delivery with\n\
    Time Windows (VRPPDTW) or Large-scale Dynamic Vehicle Routing Problem (LSDVRP).\n\
    Figure 6 summarizes the objectives utilized, constraints and the role of IoT in\
    \ optimization\nfor Smart Industry.\nSmart Industry \nLocaƟon DeterminaƟon of\
    \ sites \nRouƟng for LogisƟcs \nObjectives: Minimize\ntransportation,\nestablishment\
    \ and\ndistribution cost, Maximize\nprofit\nConstraints: Number of\nsites need\
    \ to be met,\ndistance coverage for\nlocations, time limits,\ncapacity, demands\
    \ need to\nbe met\nObjectives: Minimize\ndistance travelled, CO2\nemissions, number\
    \ of\nvehicles, time, fuel, cost\nConstraints: Customer\nserved only once, route\
    \ is\ncontinuous, demand limits,\nvehicle count limits,\nvehicle load limits,\
    \ speed,\ntime and distance limits,\ntime limits\nIoT Usage: Sensing units provide\
    \ information relating to the loads to be\ncollected as well as traffic and other\
    \ information\nFigure 6. Optimization applications in Smart Industry.\nThe authors\
    \ in [100,101] use the ABC and the GA respectively to determine the\nbest location\
    \ of service sites for logistic operations. Both these approaches use multi-\n\
    objective formulations aiming to reduce cost of operations, transportation as\
    \ well as the\nestablishment of the centers. The authors in Su et al. [102] use\
    \ ACO, Alinaghia et al. [103]\nPSO and Utama et al. [104] use ABC to address the\
    \ problem of determining the best route for\nlogistics operations. The routing\
    \ and coverage problem for logistics involves determining\nthe best route for\
    \ either a single or multiple vehicles at a depot which have to visit every\n\
    customer. The works of [102–104] focus on reducing the cost incurred in the routing\
    \ for\nvehicles in logistics as a single objective formulation. On the other hand,\
    \ the authors\nof [105–107] all work on the minimization of distance as their\
    \ objective in determining\nthe optimal route for delivery vehicles trying to\
    \ serve multiple locations. Mounia and\nBachir [106] address routing in logistics\
    \ as a multi-objective problem where they not only\naim to minimize the distance\
    \ traveled by the vehicles but also aim to reduce CO2 emissions\nand the number\
    \ of vehicles used. A time based optimization approach is presented by\nthe authors\
    \ of [108,109] also factoring in reduction of fuel consumption in their objective\n\
    Sensors 2022, 22, 4380\n20 of 34\nfunction formulation. Constraints used for the\
    \ routing and location determination problem\nare related to time, capacity constraints\
    \ for the vehicles, each customer being served only\nonce, constraints related\
    \ to the route. The determination of the location and the route for\nvehicles\
    \ is dependent on real time information concerning the trafﬁc in the area as well\
    \ the\nloads to be collected from each site in addition to other information which\
    \ can be provided\nby IoT units. The usage of optimization algorithms for smart\
    \ industry has been presented\nin Table 11 with data setups presented in Table\
    \ 12.\nTable 11. Optimization in Smart Industry.\nApplication\nAlgorithm\nSingle/Parallel\
    \ Problems\nObjectives\nConstraints\nLocation\ndetermination for sites\nABC [100]\n\
    Single\nMinimize transportation\nand hub establishment\ncost\nSingle allocation\
    \ for each demand node\nA given number of hubs are established\nCovering radius\
    \ constraint\nTime reliability constraint\nGA [101]\nParallel\nMinimize distribution\
    \ cost\nand maximize proﬁt\nLoad capacity meets needs of customers\nA delivery\
    \ vehicle can only be delivered\nwhen it receives a task\nCapacity constraints\n\
    Routing for Logistics\nABC [106]\nParallel\nMinimize distance\ntravelled, CO2\
    \ emissions,\nnumber of vehicles used\nEvery customer visited only once\nEvery\
    \ vehicle visiting a location must leave\nit too\nEnsure route continuity\nDemands\
    \ of any route must not exceed\ncapacity\nEdges satisfying time window constraint\n\
    are allowed.\nABC [107]\nSingle\nMinimize total\ntransportation distance\nEach\
    \ customer served only once\nGA [105]\nRoute should start and end at the same\n\
    depot\nServed demand of each vehicle does not\nexceed capacity limit\nACO [102]\n\
    Single\nMinimizing total cost\nEach customer served only once\nPSO [103]\nDispatched\
    \ vehicles not more than\navailable\nABC [104]\nVehicle routes don’t contain disconnected\n\
    routes\nCustomer demand shouldn’t be larger than\nvehicle capacity\nABC [109]\n\
    Single\nMinimize travelling time\nVehicle load constraint\nSubtours not allowed\n\
    Speed, time and distance\nMaximum number of vehicles on a route\nEach customer\
    \ served by one vehicle\nVehicle number max limit\nPSO [108]\nParallel\nMinimize\
    \ fuel\nconsumption and travel\ntime\nEach customer serviced by only one vehicle\n\
    Continuity in route\nVehicle load conservation between nodes,\nFirst in ﬁrst out\
    \ proper when traveling time\nis computed\nTime taken for customers as stated,\n\
    Maximum time for servicing\nVehicle capacity constraint\nDepot is the ﬁrst and\
    \ ﬁnal destination of\neach vehicle\nSensors 2022, 22, 4380\n21 of 34\nTable 12.\
    \ Data setup for Smart Industry.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [100,101,105,109]\nGovernment Agency/other research work\n[102,104,106,107,109]\n\
    Dataset/Standard Network\nTest instances in [110] used by [103,108]\n3.7. Smart\
    \ Infrastructure\nWithin the infrastructure domain, the most common optimization\
    \ problem is the area\nof health monitoring of structures. Structural Health Monitoring\
    \ (SHM) is a necessary\napplication within the smart infrastructure domain as\
    \ it makes for safe usage of different\nstructures of public use. These structures\
    \ can be buildings as well as transport structures\nsuch as bridges, tunnels.\
    \ Structural health monitoring typically involves the use of sensors\nattached\
    \ to a structure at several points that can gauge some type of physical variable\n\
    (vibration, strain, acceleration, temperature, tilt etc) from the structure. Data\
    \ gathered from\nthese connected sensors is then used to determine if any structural\
    \ damage has taken place\nor not. Within the domain of SHM, optimization algorithms\
    \ ﬁnd application towards the\nOptimal Sensor Placement Problem (OSP) as illustrated\
    \ in Figure 7. Figure 7 summarizes\nthe objectives used, constraint and the use\
    \ of IoT.\nSmart Infrastructure \nOpƟmal Sensor Placement \nObjectives: Minimize\
    \ error,\nredundancy \nMaximize sensor coverage,\nconnectivity, relaibility\n\
    Constraints: Sensor placement\nlocations limitations, number of\nsensors limited\n\
    IoT usage: The placement of sensors\nespecially is performed using IoT\nwhere\
    \ connected sensors povide the\ndata using which optimization is\nperformed\n\
    Figure 7. Optimization applications in Smart Infrastructure.\nFor the optimal\
    \ sensor placement problem (OSP), the aim is to determine the best\nnumber and\
    \ placement of sensors over a structure so as to reduce the number of sensors\n\
    used as well as improve the measurement process, both these aims result in increased\n\
    reliability of the SHM system as well as potentially lower the cost of the system\
    \ too.\nThe authors in [111–115] work on the placement of sensors for structural\
    \ health moni-\ntoring focusing on improving the effectiveness of the deployed\
    \ system. In this regard,\nrefs. [111,114] use the genetic algorithm to solve\
    \ a multi-objective problem aiming to mini-\nSensors 2022, 22, 4380\n22 of 34\n\
    mize the measurement error and cost. Yang et al. in [113] formulate OSP as single\
    \ objective\nminimization where they aim to reduce the ratio of sensor placement\
    \ performance to\nthe redundancy of information resulting from each tested placement.\
    \ Another approach\nthat works on the error is presented by [112] who use the\
    \ Particle Swarm Optimization\nto maximize the reconstruction accuracy and robust\
    \ transfer relationship between the\ndeformation and surface strain with different\
    \ sensor placements. It must be noted that the\nobjective function is formulated\
    \ as minimization of negated accuracy and negated robust-\nness measurement. Optimized\
    \ structural health monitoring for aircraft monitoring has\nbeen targeted in [116].\
    \ In their setup consisting of vibration sensors, the authors optimize\nsensor\
    \ placement by minimizing the cross correlation of the vibration waves in the\
    \ sensing\nnetwork. The most common constraint for sensor placement is restrictions\
    \ on the places\nwhere sensors can be placed. This information has been provided\
    \ in Table 13 and the data\nsetups are presented in Table 14.\nTable 13. Optimization\
    \ in Smart Infrastructure.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\n\
    Objectives\nConstraints\nSensor placement\nGA [111]\nSingle\nMinimize measurement\n\
    error and measurement\ncost\nPSO [112]\nSingle\nMaximize\nreconstruction accuracy\n\
    and robustness of\ntransfer relationship\nbetween deformation\ndisplacement and\n\
    surface strain\n(formulated as a\nminimization problem\nfor negated accuracy\n\
    and robustness)\nSensor placements within predeﬁned\nrange and angles\nGA [113]\n\
    Single\nMinimize the ratio of\nsensor placement\nperformance to\nredundancy\n\
    information\nSensor placement is permitted on\nchosen location\nGA [114]\nSingle\n\
    Minimize the MAE\nbetween the system\nand the estimated\nresponse (global error)\n\
    and minimize the\nmaximum difference\nbetween the system\nand its estimated\n\
    response (local error)\nSensor locations are from a set of\npredeﬁned locations\n\
    DE [115]\nSingle\nMaximize quality of\ncoverage, lifetime,\nconnectivity uniformity\n\
    of sensor nodes and\ncluster heads and\nreliability\nConstraint on the number\
    \ of cluster\nheads associated with each sensor\nnode and cluster head\nGA [116]\n\
    Single\nMinimize cross\ncorrelation of the\nsensing network\nSensor placement\
    \ is permitted on\nchosen location\nSensors 2022, 22, 4380\n23 of 34\nTable 14.\
    \ Data types for Smart Infrastructure.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [111–114,116,116–118]\n3.8. Smart Transportation\nOne of the most popular optimization\
    \ applications within smart cities are within the\nsmart transport domain. These\
    \ include parking system routing, trafﬁc signal control and\nscheduling. A summary\
    \ of the applications, their objectives, constraints and the role of IoT\nis illustrated\
    \ in Figure 8.\nSmart TransportaƟon \nTraﬃc Signal\nControl \nTraﬃc RouƟng \n\
    Parking System\nRouƟng \nRoad Traﬃc\nRouƟng \nObjectives: Minimize\ntime delay\n\
    Constraints: Traffic\nvolume constraint, traffic\nflow constraint, duration\n\
    of traffic light phases \nIoT usage: For parking, IoT nodes indicate to free parking\
    \ spots from which data is\ngathered and sent to the cloud. Connected vehicles\
    \ are also another source of IoT data\nused for navigation purposes along with\
    \ data from cellphones. \nObjectives: Minimize\ntravel distance, traffic\ncongestion\n\
    Constraints: Roadmap\nto be followed is fixed,\nroad connections fixed \nObjectives:\
    \ Minimize\ntravel time, delay,\nemissions, traffic flow\nConstraints: Road\n\
    connections are fixed,\nnumber of routes are\nfixed \nFigure 8. Optimization applications\
    \ in Smart Transportation\nSmart transport systems consist of sensors along roads\
    \ and trafﬁc intersections to mea-\nsure relevant parameters while also providing\
    \ communication services between vehicles\nand infrastructure. This allows for\
    \ measurement of the current state of roads in terms\nof trafﬁc congestion and\
    \ usage thereby allowing for the use of optimization techniques\nto improve trip\
    \ experiences for users and make the transportation system more efﬁcient.\nThe\
    \ authors in [119–123] work on the minimization of time (wait and travel) in trafﬁc\n\
    signal control. The aim of such systems is to reduce trafﬁc build up on signal\
    \ intersections.\nOf these, the work in [119–121] use the artiﬁcial bee colony\
    \ and the genetic algorithm\nrespectively for a single objective function of minimizing\
    \ delay time. An interesting ap-\nproach for this problem is presented by Li et\
    \ al. [123] who use a multi objective formulation\ntargeting the minimization\
    \ of the average travel time both overall and individually for all\nvehiclesl.\
    \ Another multi-objective approach in trafﬁc signal control is presented by Chen\n\
    Sensors 2022, 22, 4380\n24 of 34\nand Yuan [124] who form a mixed problem of minimizing\
    \ vehicle emissions and travel time\ntogether. Korkmaz [125] work on the estimation\
    \ of delays in trafﬁc signals using a genetic\nalgorithm, they use it to minimize\
    \ the difference between the estimated and simulated\nvalues. Tang et al. [122]\
    \ carry out distributed optimization in a fog and cloud hierarchy.\nFirst, fog\
    \ nodes optimize phase timings within a single cycle and if the number of vehicles\n\
    exceeds a threshold, the results are sent to the central controller to further\
    \ optimize over\ndifferent cycles so that a trafﬁc jam is avoided or alleviated.\
    \ Zhang et al. [126] attempt\ntrafﬁc signal optimization using multi objective\
    \ optimization functions of reducing time\ndelay and increasing trafﬁc capacity.\
    \ Constraints used for trafﬁc signal control are timing\nconstraints on the phase\
    \ durations, ﬂow rate of vehicles and on the travel time.\nTrafﬁc routing is also\
    \ another important aspect in smart transportation. This typically\ninvolves the\
    \ determination of the best route to the destination keeping in view various\n\
    criteria such as reduction of distance, time, cost etc. The problem of trafﬁc\
    \ routing is\naddressed by the works of [127–137]. The authors in [129,130] use\
    \ the ant colony opti-\nmization and genetic algorithm to minimize the travel\
    \ distance in parking system routing.\nThey aim to minimize distance traveled\
    \ by a driver looking to ﬁnd a free parking spot,\nusing the algorithm, an optimized\
    \ route is determined for the parking spot. In [131–133]\nthe ant colony optimization\
    \ algorithm is used to determine the best route in a generic\ntrafﬁc scenario\
    \ where cars can communicate with road side units in a Vehicular Adhoc\nNETwork\
    \ (VANET) architecture. Routing for public transport is performed by [134,138]\n\
    in a connected vehicle scenario aiming to minimize travel time. An economic objective\n\
    approach to trafﬁc routing is taken by the authors of [127,136,137] who minimize\
    \ the total\ncost of the trip. Mao [127] also include trafﬁc congestion and travel\
    \ time as well in their\ncomputation. Hassoune et al. [139] work on a parking\
    \ guidance using the ant colony\noptimization algorithm to reduce trafﬁc congestion\
    \ and minimize distance. Constraints\nfor trafﬁc routing are related to the road\
    \ network allowing travel in speciﬁc directions,\nsignaling and travel time. Within\
    \ smart transportation, IoT nodes are used to determine\noccupied parking spaces\
    \ and this data is used for routing applications in parking. Trafﬁc\nrouting is\
    \ based on vehicle to vehicle and vehicle to infrastructure communication provided\n\
    by VANETs within the IoT framework. These systems enable cars to exchange data\
    \ with\neach other and also with ﬁxed infrastructure on the roads. This discussion\
    \ is also presented\nin Table 15 and the data setups for the covered work are\
    \ presented in Table 16.\nTable 15. Optimization in Smart Transportation.\nApplication\n\
    Algorithm\nSingle/Parallel\nProblems\nObjectives\nConstraints\nTrafﬁc signal\n\
    control\nABC [138]\nSingle\nMinimize travel time\nInterval of feasible green time\
    \ length values\nABC [128]\nInterval of feasible offset time length values\nConstraints\
    \ on cycle lengths\nABC [119,120]\nSingle\nMinimize time delay\nOnly one active\
    \ stage\nGA [121,122]\nFlow dynamic constraint\nGA [123]\nParallel\nMinimize time\
    \ delay and also\nachieve trafﬁc network\nequilibrium\nLink volume constraint\n\
    Constraints on duration of green/red phases\nOffset phase duration\nMinimize average\
    \ travel time.\nRelationship between route and link ﬂows\nneed to be maintained\
    \ as deﬁned\nGA [124]\nSingle\nMinimize vehicle emissions\nand travel time for\
    \ vehicles\nSum of green time of each phase is equal to\ntotal available green\
    \ time\nGreen time is set by a lower bound\nSensors 2022, 22, 4380\n25 of 34\n\
    Table 15. Cont.\nApplication\nAlgorithm\nSingle/Parallel\nProblems\nObjectives\n\
    Constraints\nGA [126]\nParallel\nMinimize delay, and exhaust\nemission and maximize\
    \ trafﬁc\ncapacity (formulated as\nminimization problem)\nCycle length of signals\
    \ has minimum and\nmaximum limits\nTrafﬁc Routing\n(Parking System)\nACO [129]\n\
    Parallel\nMinimize distance with bend\nstraightening and turn\nreduction\nBend\
    \ straightening and turn reduction\nACO [139]\nParallel\nReduce trafﬁc ﬂow and\n\
    shortest distance towards\nparking\nGA [130]\nSingle\nMinimize distance\nSpeciﬁc\
    \ preﬁxed routes possible for free\nparking\nTrafﬁc Routing\n(Road Trafﬁc)\nACO\
    \ [131,132]\nSingle\nMinimize distance, minimize\ncongestion\nFollow roadmap\n\
    ACO [133]\nSingle\nMaximize ﬂow\nACO [134]\nSingle\nMinimize travel time\nConstraint\
    \ on relationship between green time\nlengths cycle length, offset on the network\n\
    calculation\nGA [135]\nInterval of feasible green time length values\nInterval\
    \ of feasible offset time length values\nSpeciﬁc road segments\nConnected constraints\
    \ on the values of time\ntaken for vehicles\nDE [136]\nSingle\nMinimize travelling\
    \ cost and\nrental cost\nEach bus has one employee\nEmployees can be assigned\
    \ when stop is\navailable\nBus stop assigned when bus is in use\nConstraint on\
    \ distance of bus stop from\nemployee home and more\nDE [137]\nSingle\nMinimize\
    \ total cost\nRoad network connections followed\nSolutions contains correct number\
    \ of routes\nACO [127]\nSingle\nMinimize transit time, travel\ndistance, road\
    \ congestion and\ntrafﬁc expenses\nVariable value constraints\nTable 16. Data\
    \ types for Smart Transportation.\nData Type\nPapers\nSelf-collected/Presented/Generated\n\
    [119–124,126,128–133,135,138,139]\nGovernmentAgency/other research work\n[119,121,123,124,128,130,134–137]\n\
    4. Recommendations\nThis survey discussed the application scenario for optimization\
    \ algorithms within\nthe IoT based Smart Cities in terms of objectives, constraints\
    \ and formulations. There are\nseveral takeaways from this exercise. The ﬁrst\
    \ aspect observed was the lack of standardized\ndatasets being utilized by the\
    \ methodologies covered as discussed in the various sections.\nThis limits the\
    \ ability to effectively compare proposed methodologies for a similar problem.\n\
    This issue was less observed for the case of Smart Grids where standardized network\n\
    architectures were used. The use of standardized test sets would enable a fair\
    \ comparison\nof competing methodologies. Another aspect would be the use of more\
    \ detailed statistical\nanalysis of experiment data such as running time than\
    \ mean, standard deviation etc as\nhas been mentioned by [7]. Such analysis would\
    \ help to understand better the effects of\ndifferent constraints on the algorithm\
    \ better also help with comparative analysis with other\nmethodologies. For the\
    \ nature of coverage herein, it would contribute to possibly looking\nat performance\
    \ of cross-smart city component applications which are similar.\nSensors 2022,\
    \ 22, 4380\n26 of 34\n5. Future Work\nWhile this review presents a coverage of\
    \ the current state of IoT enabled Smart City\noptimziation applications, there\
    \ are several avenues of future work that have been identiﬁed\nas well.\n5.1.\
    \ Novel Applications\nWhile combinatorial optimization algorithms have found wide\
    \ ranging applications\nin all aspects of a city’s operations for e.g., in planning\
    \ [140,141] and scheduling [142],\nit is expected that as more aspects of a city\
    \ are instrumented and data gathering takes\nplace, applications of optimization\
    \ algorithms which work on real-time measurements\nwill be further developed.\
    \ With newly instrumented systems, one could also leverage\nmachine and deep learning\
    \ algorithms for predicting a variable of interest and then utilize\noptimization\
    \ algorithms for a given application. Such a combination could spearhead\noptimization\
    \ application development. Apart from prediction, machine learning could be\n\
    used for classiﬁcation purposes too in conjunction with combinatorial optimization\
    \ schemes.\nOne such application could be in the industry where worker activity\
    \ recognition [143] is\nperformed and such data is collected for then scheduling\
    \ operations in cooperation with\nautomated machine processes using heuristics.\n\
    5.2. Hybrid Algorithms\nThe aim of hybrid methodologies is to combine the best\
    \ performance characteristics of\ndifferent algorithms to reach to an optimal\
    \ solution for an optimization problem. There have\nbeen several works which combine\
    \ multiple optimization techniques. For e.g., the authors\nin [144] use a combination\
    \ of a PSO and GA to solve the ambulance location and allocation\nproblem. They\
    \ do this in a subproblem form with the objective being the minimization\nof the\
    \ mean waiting time of the injured people and the response time between stations\n\
    and affected areas. The constraints are balance of ﬂow, cost of open stations,\
    \ number of\nambulances given to an areas satisfying its requirements, one affected\
    \ area served by one\nstation, station ambulance capacity is respected and that\
    \ no ambulances allocated if station\nis closed. It is expected that work towards\
    \ hybrid algorithms algorithms will increase the\napplicability of combinatorial\
    \ optimization in smart cities. Such a hybrid system has been\nused in Smart Agriculture\
    \ by [145] also utilizing a GA and a modiﬁed PSO algorithm.\n5.3. Novel Nature\
    \ Inspired/Heuristic Algorithms\nAnt colony, Genetic algorithms and Particle Swarm\
    \ Optimization, Differential Evolu-\ntion and Artiﬁcial Bee Colony algorithms\
    \ for solving Smart City optimization problems\nwere considered during the survey.\
    \ However, there were some attempts that were based on\nother evolutionary or\
    \ collective behavior of other living organisms. Examples of such algo-\nrithms\
    \ include the use of shufﬂed frog leaping optimization, graywolf optimization\
    \ [146]\nfor power management and also for trafﬁc routing [147], earthworm optimization\
    \ [148] for\npower management in smart grid, vehicle routing using simulated annealing\
    \ [149] and\nseveral different ones for home energy management [150] and elephant\
    \ herding optimiza-\ntion [151] as well in addition to others.\n5.4. Distributed\
    \ Optimization Scheme\nAs the computation power at the edge increases, the methodologies\
    \ which utilize a\ndistributed optimization scheme to fully utilize the IoT capabilities\
    \ they operate in can\npotentially provide better performance. Herein, there could\
    \ be multiple objectives and\neach can be optimized at a lower level before optimization\
    \ is performed at a higher one\nare bound to increase. One such example was suggested\
    \ by Tang et al. [122] who carry out\ndistributed optimization in a fog and cloud\
    \ architecture. First, fog nodes optimize phase\ntimings within a single cycle\
    \ and if the vehicles exceeding number increases a threshold,\nthe results are\
    \ sent to the central controller to further optimize over different cycles so\
    \ that\na trafﬁc jam is avoided or alleviated.\nSensors 2022, 22, 4380\n27 of\
    \ 34\n5.5. Use of Reinforcement Learning\nReinforcement learning (RL) has the\
    \ potential to provide solutions to combinatorial\noptimization problems as covered\
    \ in [152]. The idea is to use machine learning and\nreinforcement learning to\
    \ get rid of human created heurists which may lead to optimizations\ntowards local\
    \ optimums. Agents can be trained to search for these heuristics to automate\n\
    the process. ML and RL methods have been observed to be faster compared to metaheuristic\n\
    methods for solving optimization problems as noted by [152], especially for large\
    \ problems.\nSuch methods could be useful for applications within the IoT based\
    \ Smart City landscape.\nIt must be noted however that the usage of RL and ML\
    \ towards combinatorial optimization\nproblems is still a growing research area.\
    \ An example of such use is its use for trafﬁc signal\ncontrol as described in\
    \ [153].\n6. Conclusions\nThis paper provides coverage of the application of ﬁve\
    \ popular computational algo-\nrithms in the IoT enabled Smart City. It provides\
    \ a mapping of the various applications\nto the speciﬁc smart city domain as well\
    \ as highlights the different formulations of the\nobjective function used to\
    \ solve the considered problem. This coverage is provided in\nterms of the number\
    \ of objectives as well as whether the problem was solved as a single\nobjective,\
    \ in a hierarchical manner or otherwise. It also highlights the constraints used\n\
    by the researchers in solving the problem which is an important aspect as constraints\
    \ are\ngoverned by the application at hand. An overview of the mapping of various\
    \ smart city\noptimization applications derived from this work is provided in\
    \ Figure 9.\nSmart\nAgriculture \nIrrigaƟon Water\nScheduling \nSmart Homes \n\
    Home Energy\nManagement \nSmart City\nServices \nWaste\nManagement\nRoute\nOpƟmizaƟon\
    \ \nSmart Industry \nSmart Grid \nPower\nManagement \nPlanning \nSmart\nInfrastructure\
    \ \nOpƟmal Sensor\nPlacement \nSmart Health \nEmergency\nVehicle\nAllocaƟon and\n\
    RelocaƟon \nEmergency\nVehicle RouƟng \nSmart Transport \nTraﬃc Signal\nControl\
    \ \nTraﬃc RouƟng \nOpƟmizaƟon in Smart CiƟes \nRouƟng and\nLocaƟon\nDeterminaƟon\n\
    for LogisƟcs \nIrrigaƟon Water\nAllocaƟon \nEnergy\nOpƟmizaƟon and\nWater Control\
    \ \nFigure 9. Optimization applications in IoT based Smart Cities.\nFigure 10\
    \ illustrate the distribution counts for each of the algorithms considered in\n\
    this survey. It was found that genetic algorithms was found to be most commonly\
    \ used\noptimization scheme as can be seen from Figure 10 and was used a total\
    \ of 33 times\nin the approaches covered in the survey as has been observed by.\
    \ This inspite of the\nfact that GAs are more computationally intensive than PSO\
    \ with the latter being faster as\nwell [154]. However, it must be noted that\
    \ the performance of any optimization algorithm is\nSensors 2022, 22, 4380\n28\
    \ of 34\nproblem dependent [154]. The PSO algorithm was used the most for smart\
    \ grid applications\nwhereas ACO and GA were equally used for Smart Transportation.\
    \ When looking at the\ndifference between the uses of bio-inspired (PSO, ACO,\
    \ ABC) and nature-inspired (GA, DE)\nalgorithms, it was observed that bio-inspired\
    \ algorithms were used more times at 53 vs.\n45 respectively as the proposed technique.\
    \ This indicates that nature inspired algorithms,\neven though relatively newer,\
    \ are getting increasing traction for use in various applications\nrelating to\
    \ Smart Cities.\nFigure 11 illustrates the counts for the different ways in which\
    \ the objective function\nwas solved. It can be observed that even though there\
    \ were nearly similar number of\nmultiple and single objective function formulations\
    \ (59 and 51 respectively), the solutions\nfor these were mostly derived as a\
    \ single problem. This meaning that the objectives were\ncombined in some form\
    \ (such as weighted combination of two or more objectives).\n0\n1\n2\n3\n4\n5\n\
    6\n7\n8\n9\nSmart Agriculture\nSmart City Services\nSmart Grid\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transportation\nUseage\
    \ count for various algorithms with respect to smart city component\nGA\nACO\n\
    PSO\nDE\nABC\nFigure 10. Count of different algorithms used with respect to Smart\
    \ City Component.\n0\n5\n10\n15\n20\n25\nSmart Agriculture\nSmart City Services\n\
    Smart Grid\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transportation\nCount for different problem solutions with respect to smart\
    \ city component\nParallel\nSingle\nFigure 11. Solution scheme for problems with\
    \ respect to Smart City Component.\nAnother interesting observation from this\
    \ review was on the formulations of simi-\nlar standard combinatorial optimization\
    \ problems within different smart city domains.\nFor e.g., the vehicle routing\
    \ problem exists in smart health (emergency vehicle routing),\nsmart transportation\
    \ (trafﬁc routing and public transport routing) as well as in smart in-\ndustry\
    \ (routing for logistics). While, the objective of the routing problem in various\
    \ papers\nwas observed to target time incurred for the trip, the constraints incorporated\
    \ domain\nknowledge in to the problem. That is, routing in the smart industry\
    \ included constraints on\nvisiting all depots while for smart health and smart\
    \ transport, constraints included speed\nand road trafﬁc. These insights highlight\
    \ the difference in working on similar optimization\nproblems in different smart\
    \ city domains.\nSensors 2022, 22, 4380\n29 of 34\nThis review will help researchers\
    \ in the ﬁeld of computational optimization for smart\ncities to develop better\
    \ problem formulations for the problems encountered in IoT based\nsmart cities.\
    \ It will also provide new researchers starting in the ﬁeld by presenting them\n\
    with an overview of the optimization scope within the IoT supported Smart City\
    \ domain.\nAuthor Contributions: The review was conducted by A.S.S. under the\
    \ guidance of D.S.-S., A.K. and\nA.E. All authors have read and agreed to the\
    \ published version of the manuscript.\nFunding: This research received no external\
    \ funding.\nInstitutional Review Board Statement: Not applicable.\nInformed Consent\
    \ Statement: Not applicable.\nData Availability Statement: Not applicable.\nConﬂicts\
    \ of Interest: The authors declare no conﬂict of interest.\nReferences\n1.\nWorldometers.\
    \ World Population Forecast-Worldometers. Available online: https://www.worldometers.info/world-population/\n\
    #table-forecast (accessed on 9 March 2022).\n2.\nNations, U. About the Sustainable\
    \ Development Goals-United Nations Sustainable Development. Available online:\
    \ https:\n//www.un.org/sustainabledevelopment/sustainable-development-goals/ (accessed\
    \ on 9 March 2022).\n3.\nSyed, A.S.; Sierra-Sosa, D.; Kumar, A.; Elmaghraby, A.\
    \ IoT in Smart Cities: A Survey of Technologies, Practices and Challenges.\nSmart\
    \ Cities 2021, 4, 429–475. [CrossRef]\n4.\nVukobratovi´c, M.; Mari´c, P.; Horvat,\
    \ G.; Balki´c, Z.; Suˇci´c, S. A Survey on Computational Intelligence Applications\
    \ in Distribution\nNetwork Optimization. Electronics 2021, 10, 1247. [CrossRef]\n\
    5.\nWang, W.; Wu, S.; Wang, S.; Zhen, L.; Qu, X. Emergency facility location problems\
    \ in logistics: Status and perspectives. Transp.\nRes. Part E Logist. Transp.\
    \ Rev. 2021, 154, 102465. [CrossRef]\n6.\nCsalódi, R.; Süle, Z.; Jaskó, S.; Holczinger,\
    \ T.; Abonyi, J. Industry 4.0-driven development of optimization algorithms: A\
    \ systematic\noverview. Complexity 2021, 2021, 6621235. [CrossRef]\n7.\nPeres,\
    \ F.; Castelli, M. Combinatorial Optimization Problems and Metaheuristics: Review,\
    \ Challenges, Design, and Development.\nAppl. Sci. 2021, 11, 6449. [CrossRef]\n\
    8.\nDorigo, M.; Socha, K. Ant colony optimization. In Handbook of Approximation\
    \ Algorithms and Metaheuristics; Taylor & Francis\nGroup: New York, NY, USA, 2007;\
    \ Chapter 26, pp. 1–14. [CrossRef]\n9.\nWhitley, D. A genetic algorithm tutorial.\
    \ Stat. Comput. 1994, 4, 65–85. [CrossRef]\n10.\nKennedy, J.; Eberhart, R. Particle\
    \ swarm optimization. In Proceedings of the ICNN’95-International Conference on\
    \ Neural\nNetworks, Perth, WA, Australia, 27 November–1 December 1995; Volume\
    \ 4, pp. 1942–1948.\n11.\nFeoktistov, V. Differential Evolution; Springer: Berlin/Heidelberg,\
    \ Germany, 2006.\n12.\nKaraboga, D. Artiﬁcial bee colony algorithm. Scholarpedia\
    \ 2010, 5, 6915. [CrossRef]\n13.\nNguyen, D.C.H.; Ascough, J.C., II; Maier, H.R.;\
    \ Dandy, G.C.; Andales, A.A. Optimization of irrigation scheduling using ant\n\
    colony algorithms and an advanced cropping system model. Environ. Model. Softw.\
    \ 2017, 97, 32–45. [CrossRef]\n14.\nSaeidian, B.; Mesgari, M.S.; Pradhan, B.;\
    \ Alamri, A.M. Irrigation water allocation at farm level based on temporal cultivation-\n\
    related data using meta-heuristic optimisation algorithms. Water 2019, 11, 2611.\
    \ [CrossRef]\n15.\nGuo, D.; Olesen, J.E.; Manevski, K.; Ma, X. Optimizing irrigation\
    \ schedule in a large agricultural region under different hydrologic\nscenarios.\
    \ Agric. Water Manag. 2021, 245, 106575. [CrossRef]\n16.\nGuo, S.; Zhang, F.;\
    \ Zhang, C.; An, C.; Wang, S.; Guo, P. A multi-objective hierarchical model for\
    \ irrigation scheduling in the\ncomplex canal system. Sustainability 2019, 11,\
    \ 24. [CrossRef]\n17.\nZhang, F.; He, C.; Yaqiong, F.; Hao, X.; Kang, S. Canal\
    \ delivery and irrigation scheduling optimization based on crop water\ndemand.\
    \ Agric. Water Manag. 2022, 260, 107245. [CrossRef]\n18.\nIkudayisi, A.; Adeyemo,\
    \ J.; Odiyo, J.; Enitan, A. Optimum irrigation water allocation and crop distribution\
    \ using combined\nPareto multi-objective differential evolution. Cogent Eng. 2018,\
    \ 5, 1535749. [CrossRef]\n19.\nWu, J.J.; Huang, R.; Fang, T.Y.; Han, Y. Multi-objective\
    \ model of irrigation water distribution based on particle swarm optimization.\n\
    In IOP Conference Series: Earth and Environmental Science; IOP Publishing: Bristol,\
    \ UK, 2019; Volume 344, p. 12087.\n20.\nOcampo, A.L.P.D.; Dadios, E.P. Energy\
    \ cost optimization in irrigation system of smart farm by using genetic algorithm.\
    \ In Pro-\nceedings of the 2017 IEEE 9th International Conference on Humanoid,\
    \ Nanotechnology, Information Technology, Communication\nand Control, Environment\
    \ and Management (HNICEM), Manila, Philippines, 1–3 December 2017; pp. 1–7.\n\
    21.\nZhuo, L.; Cheng, J.; Gong, Z. Optimal water allocation method based on the\
    \ genetic algorithm for a system of a reservoir and two\npumping stations. Water\
    \ Supply 2022, 22, 849–859. [CrossRef]\n22.\nLi, R.; Chang, Y.; Wang, Z. Study\
    \ of optimal allocation of water resources in Dujiangyan irrigation district of\
    \ China based on an\nimproved genetic algorithm. Water Supply 2021, 21, 2989–2999.\
    \ [CrossRef]\nSensors 2022, 22, 4380\n30 of 34\n23.\nRoy, S.K.; De, D. Genetic\
    \ algorithm based internet of precision agricultural things (IopaT) for agriculture\
    \ 4.0. Internet Things 2020,\n18, 100201. [CrossRef]\n24.\nLin, N.; Wang, X.;\
    \ Zhang, Y.; Hu, X.; Ruan, J. Fertigation management for sustainable precision\
    \ agriculture based on Internet of\nThings. J. Clean. Prod. 2020, 277, 124119.\
    \ [CrossRef]\n25.\nArif, C.; Setiawan, B.I.; Mizoguchi, M.; Nugroho, B.D.A. Genetic\
    \ Algorithms Optimization for water management in irrigated\npaddy ﬁelds. In IOP\
    \ Conference Series: Earth and Environmental Science; IOP Publishing: Bristol,\
    \ UK, 2019; Volume 335, p. 12002.\n26.\nWorldBank. Solid Waste Management. Available\
    \ online: https://www.worldbank.org/en/topic/urbandevelopment/brief/\nsolid-waste-management\
    \ (accessed on 9 March 2022).\n27.\nSharmin, S.; Al-Amin, S.T. A cloud-based dynamic\
    \ waste management system for smart cities. In Proceedings of the 7th Annual\n\
    Symposium on Computing for Development, ACM DEV-7 2016, Nairobi Kenya, 18–20 November\
    \ 2016. [CrossRef]\n28.\nFujdiak, R.; Masek, P.; Mlynek, P.; Misurec, J.; Olshannikova,\
    \ E. Using genetic algorithm for advanced municipal waste collection\nin Smart\
    \ City. In Proceedings of the 2016 10th International Symposium on Communication\
    \ Systems, Networks and Digital\nSignal Processing, CSNDSP 2016, Nairobi, Kenya,\
    \ 18–20 November 2016; pp. 1–6. [CrossRef]\n29.\nAssaf, R.; Saleh, Y. Vehicle-routing\
    \ optimization for municipal solid waste collection using genetic algorithm: The\
    \ case of southern\nNablus city. Civ. Environ. Eng. Rep. 2017, 26, 43–57. [CrossRef]\n\
    30.\nHannan, M.A.; Lipu, M.S.H.; Akhtar, M.; Begum, R.A.; Mamum, M.A.A.; Hussain,\
    \ A.; Mia, M.S.; Basri, H. Solid waste collection\noptimization objectives, constraints,\
    \ modeling approaches, and their challenges toward achieving sustainable development\
    \ goals.\nJ. Clean. Prod. 2020, 277, 123557. [CrossRef]\n31.\nZhang, Y.; Luo,\
    \ X.; Han, X.; Lu, Y.; Wei, J.; Yu, C. Optimization of Urban Waste Transportation\
    \ Route Based on Genetic Algorithm.\nSecur. Commun. Netw. 2022, 2022, 1–10. [CrossRef]\n\
    32.\nWei, Q.; Guo, Z.; Lau, H.C.; He, Z. An artiﬁcial bee colony-based hybrid\
    \ approach for waste collection problem with midway\ndisposal pattern. Appl. Soft\
    \ Comput. 2019, 76, 629–637. [CrossRef]\n33.\nRaﬂesia, S.P.; Pamosoaji, A.K. A\
    \ Novel Ant Colony optimization Algorithm for Waste Collection Problem. In Proceedings\
    \ of\nthe 2019 4th International Conference on Information Technology, Information\
    \ Systems and Electrical Engineering (ICITISEE),\nYogyakarta, Indonesia, 20–21\
    \ November 2019; pp. 413–416.\n34.\nYazdani, M.; Kabirifar, K.; Frimpong, B.E.;\
    \ Shariati, M.; Mirmozaffari, M.; Boskabadi, A. Improving construction and demolition\n\
    waste collection service in an urban area using a simheuristic approach: A case\
    \ study in Sydney, Australia. J. Clean. Prod. 2021,\n280, 124138. [CrossRef]\n\
    35.\nIdwan, S.; Mahmood, I.; Zubairi, J.A.; Matar, I. Optimal management of solid\
    \ waste in smart cities using internet of things. Wirel.\nPers. Commun. 2020,\
    \ 110, 485–501. [CrossRef]\n36.\nFaizal, U.M.; Jayachitra, R.; Vijayakumar, P.;\
    \ Rajasekar, M. Optimization of inbound vehicle routes in the collection of bio-medical\n\
    wastes. Mater. Today Proc. 2021, 45, 692–699. [CrossRef]\n37.\nTirkolaee, E.B.;\
    \ Alinaghian, M.; Hosseinabadi, A.A.R.; Sasi, M.B.; Sangaiah, A.K. An improved\
    \ ant colony optimization for the\nmulti-trip Capacitated Arc Routing Problem.\
    \ Comput. Electr. Eng. 2019, 77, 457–470. [CrossRef]\n38.\nBranch and Cut for\
    \ Vehicle Routing. Available online: https://www.coin-or.org/SYMPHONY/branchandcut/VRP/data/index.\n\
    htm (accessed on 9 March 2022).\n39.\nCapacitated VRP Instances|Vehicle Routing\
    \ Problem. Available online: https://neo.lcc.uma.es/vrp/vrp-instances/capacitated-\n\
    vrp-instances/ (accessed on 9 March 2022).\n40.\nEttappan, M.; Vimala, V.; Ramesh,\
    \ S.; Kesavan, V.T. Optimal reactive power dispatch for real power loss minimization\
    \ and\nvoltage stability enhancement using artiﬁcial bee colony algorithm. Microprocess.\
    \ Microsyst. 2020, 76, 103085. [CrossRef]\n41.\nDas, C.K.; Bass, O.; Kothapalli,\
    \ G.; Mahmoud, T.S.; Habibi, D. Optimal placement of distributed energy storage\
    \ systems in\ndistribution networks using artiﬁcial bee colony algorithm. Appl.\
    \ Energy 2018, 232, 212–228. [CrossRef]\n42.\nSakr, W.S.; El-Sehiemy, R.A.; Azmy,\
    \ A.M. Adaptive differential evolution algorithm for efﬁcient reactive power management.\n\
    Appl. Soft Comput. 2017, 53, 336–351. [CrossRef]\n43.\nNguyen, T.T.; Mohammadi,\
    \ F. Optimal placement of TCSC for congestion management and power loss reduction\
    \ using\nmulti-objective genetic algorithm. Sustainability 2020, 12, 2813. [CrossRef]\n\
    44.\nAtteya, I.I.; Ashour, H.A.; Fahmi, N.; Strickland, D. Distribution network\
    \ reconﬁguration in smart grid system using modiﬁed\nparticle swarm optimization.\
    \ In Proceedings of the 2016 IEEE International Conference on Renewable Energy\
    \ Research and\nApplications (ICRERA), Birmingham, UK, 20–23 November 2016; Volumr\
    \ 5, pp. 305–313. [CrossRef]\n45.\nKanwar, N.; Gupta, N.; Niazi, K.R.; Swarnkar,\
    \ A.; Bansal, R.C. Simultaneous allocation of distributed energy resource using\n\
    improved particle swarm optimization. Appl. Energy 2017, 185, 1684–1693. [CrossRef]\n\
    46.\nUtkarsh, K.; Trivedi, A.; Srinivasan, D.; Reindl, T. A Consensus-Based Distributed\
    \ Computational Intelligence Technique for\nReal-Time Optimal Control in Smart\
    \ Distribution Grids. IEEE Trans. Emerg. Top. Comput. Intell. 2016, 1, 51–60.\
    \ [CrossRef]\n47.\nAskarzadeh, A. A memory-based genetic algorithm for optimization\
    \ of power generation in a microgrid. IEEE Trans. Sustain.\nEnergy 2017, 9, 1081–1089.\
    \ [CrossRef]\n48.\nMohammed, O.H.; Amirat, Y.; Benbouzid, M. Economical evaluation\
    \ and optimal energy management of a stand-alone hybrid\nenergy system handling\
    \ in genetic algorithm strategies. Electronics 2018, 7, 233. [CrossRef]\n49.\n\
    Das, B.K.; Hassan, R.; Tushar, M.S.H.K.; Zaman, F.; Hasan, M.; Das, P. Techno-economic\
    \ and environmental assessment of a\nhybrid renewable energy system using multi-objective\
    \ genetic algorithm: A case study for remote Island in Bangladesh. Energy\nConvers.\
    \ Manag. 2021, 230, 113823. [CrossRef]\nSensors 2022, 22, 4380\n31 of 34\n50.\n\
    Geleta, D.K.; Manshahia, M.S. Artiﬁcial bee colony-based optimization of hybrid\
    \ wind and solar renewable energy system. In\nResearch Anthology on Clean Energy\
    \ Management and Solutions; IGI Global: Hershey, PA, USA, 2021; pp. 819–842.\n\
    51.\nMoghaddam, M.M.; Marzband, M.; Azarinejadian, F. Optimal energy management\
    \ for a home Microgrid based on multi-period\nartiﬁcial bee colony. In Proceedings\
    \ of the 2017 Iranian Conference on Electrical Engineering (ICEE), Tehran, Iran,\
    \ 2–4 May 2017;\npp. 1446–1451.\n52.\nHabib, H.U.R.; Wang, S.; Waqar, A.; Farhan,\
    \ B.S.; Kotb, K.M.; Kim, Y.S. Combined Heat and Power Units Sizing and Energy\n\
    Cost Optimization of a Residential Building by Using an Artiﬁcial Bee Colony Algorithm.\
    \ IEEE Access 2020, 8, 218289–218303.\n[CrossRef]\n53.\nLezama, F.; Soares, J.;\
    \ Faia, R.; Pinto, T.; Vale, Z. A new hybrid-adaptive differential evolution for\
    \ a smart grid application under\nuncertainty. In Proceedings of the 2018 IEEE\
    \ Congress on Evolutionary Computation (CEC), Rio de Janeiro, Brazil, 8–13 July\n\
    2018; pp. 1–8.\n54.\nLezama, F.; Sucar, L.E.; de Cote, E.M.; Soares, J.; Vale,\
    \ Z. Differential evolution strategies for large-scale energy resource\nmanagement\
    \ in smart grids. In Proceedings of the Genetic and Evolutionary Computation Conference\
    \ Companion, Berlin,\nGermany, 15–19 July 2017; pp. 1279–1286.\n55.\nPalakonda,\
    \ V.; Awad, N.H.; Mallipeddi, R.; Ali, M.Z.; Veluvolu, K.C.; Suganthan, P.N. Differential\
    \ evolution with stochastic\nselection for uncertain environments: A smart grid\
    \ application. In Proceedings of the 2018 IEEE Congress on Evolutionary\nComputation\
    \ (CEC), Rio de Janeiro, Brazil, 8–13 July 2018; pp. 1–7.\n56.\nMandal, S.; Mandal,\
    \ K.K. Optimal energy management of microgrids under environmental constraints\
    \ using chaos enhanced\ndifferential evolution. Renew. Energy Focus 2020, 34,\
    \ 129–141. [CrossRef]\n57.\nAzaza, M.; Wallin, F. Multi objective particle swarm\
    \ optimization of hybrid micro-grid system: A case study in Sweden. Energy\n2017,\
    \ 123, 108–118. [CrossRef]\n58.\nGabbar, H.A.; Abdussami, M.R.; Adham, M.I. Optimal\
    \ Planning of Nuclear-Renewable Micro-Hybrid Energy System by Particle\nSwarm\
    \ Optimization. IEEE Access 2020, 8, 181049–181073. [CrossRef]\n59.\nBhayo, B.A.;\
    \ Al-Kayiem, H.H.; Gilani, S.I.U.; Ismail, F.B. Power management optimization\
    \ of hybrid solar photovoltaic-battery\nintegrated with pumped-hydro-storage system\
    \ for standalone electricity generation. Energy Convers. Manag. 2020, 215, 112942.\n\
    [CrossRef]\n60.\nGrisales-Noreña, L.F.; Montoya, O.D.; Ramos-Paja, C.A. An energy\
    \ management system for optimal operation of BSS in DC\ndistributed generation\
    \ environments based on a parallel PSO algorithm. J. Energy Storage 2020, 29,\
    \ 101488. [CrossRef]\n61.\nMahdavi, M.; Kimiyaghalam, A.; Alhelou, H.H.; Javadi,\
    \ M.; Catalão, J.P.S.; Ashouri, A. Transmission Expansion Planning\nConsidering\
    \ Power Losses, Expansion of Substations and Uncertainty in Fuel Price Using Discrete\
    \ Artiﬁcial Bee Colony Algorithm.\nIEEE Access 2021, 9, 135983–135995. [CrossRef]\n\
    62.\nMaji, T.K.; Acharjee, P. Multiple Solutions of Optimal PMU Placement Using\
    \ Exponential Binary PSO Algorithm for Smart Grid\nApplications. IEEE Trans. Ind.\
    \ Appl. 2017, 53, 2550–2559. [CrossRef]\n63.\nRasheed, M.B.; R-Moreno, M.D. Minimizing\
    \ pricing policies based on user load proﬁles and residential demand responses\
    \ in\nsmart grids. Appl. Energy 2022, 310, 118492. [CrossRef]\n64.\nZhang, D.;\
    \ Fu, Z.; Zhang, L. An improved TS algorithm for loss-minimum reconﬁguration in\
    \ large-scale distribution systems.\nElectr. Power Syst. Res. 2007, 77, 685–694.\
    \ [CrossRef]\n65.\nPell, J.P.; Sirel, J.M.; Marsden, A.K.; Ford, I.; Cobbe, S.M.\
    \ Effect of reducing ambulance response times on deaths from out of\nhospital\
    \ cardiac arrest: Cohort study. BMJ 2001, 322, 1385–1388. [CrossRef]\n66.\nRapidSOS.\
    \ Outcomes: Quantifying the Impact of Emergency Response Time-RapidSOS. Available\
    \ online: https://rapidsos.com/\nour-latest/quantifying-impact-of-emergency-times-whitepaper-download/\
    \ (accessed on 9 March 2022).\n67.\nToth, P.; Vigo, D. The Vehicle Routing Problem;\
    \ SIAM: Philadelphia, PA, USA, 2002.\n68.\nAgeev, A.A.; Sviridenko, M.I. Approximation\
    \ Algorithms for Maximum Coverage and Max Cut with Given Sizes of Parts; Springer:\n\
    Berlin/Heidelberg, Germany, 1999; pp. 17–30.\n69.\nMouhcine, E.; Karouani, Y.;\
    \ Mansouri, K.; Mohamed, Y. Toward a distributed strategy for emergency ambulance\
    \ routing problem.\nIn Proceedings of the 2018 4th International Conference on\
    \ Optimization and Applications (ICOA), Mohammedia, Morocco,\n26–27 April 2018;\
    \ pp. 1–4.\n70.\nBrotcorne, L.; Laporte, G.; Semet, F. Ambulance location and\
    \ relocation models. Eur. J. Oper. Res. 2003, 147, 451–463. [CrossRef]\n71.\n\
    Benabdouallah, M.; Bojji, C.; Yaakoubi, O.E. Deployment and redeployment of ambulances\
    \ using a heuristic method and an\nAnt Colony Optimization-Case study. In Proceedings\
    \ of the 2016 Third International Conference on Systems of Collaboration\n(SysCo),\
    \ Casablanca, Morocco, 28–29 November 2016; pp. 1–4. [CrossRef]\n72.\nBenabdouallah,\
    \ M.; Bojji, C. Comparison between GA and ACO for emergency coverage problem in\
    \ a smart healthcare\nenvironment. In Proceedings of the Proceedings of the 2017\
    \ International Conference on Smart Digital Environment, Rabat,\nMorocco, 21–23\
    \ July 2017; pp. 48–55.\n73.\nKochetov, Y.A.; Shamray, N.B. Optimization of the\
    \ ambulance ﬂeet location and relocation. J. Appl. Ind. Math. 2021, 15, 234–252.\n\
    [CrossRef]\n74.\nYan, Y.; Kong, Y.; Fu, Z. Dynamic Resource Scheduling in Emergency\
    \ Environment. J. Inf. Hiding Priv. Prot. 2019, 1, 143.\n[CrossRef]\n75.\nLu,\
    \ Q.; Kim, K.D. A genetic algorithm approach for expedited crossing of emergency\
    \ vehicles in connected and autonomous\nintersection trafﬁc. J. Adv. Transp. 2017,\
    \ 2017, 7318917. [CrossRef]\nSensors 2022, 22, 4380\n32 of 34\n76.\nAmer, H.M.;\
    \ Al-Kashoash, H.A.; Kemp, A.; Mihaylova, L.; Mayﬁeld, M. Coalition game for emergency\
    \ vehicles re-routing in\nsmart cities. In Proceedings of the 2018 IEEE 10th Sensor\
    \ Array and Multichannel Signal Processing Workshop (SAM), Shefﬁeld,\nUK, 8–11\
    \ July 2018; pp. 306–310. [CrossRef]\n77.\nSilva, B.N.; Han, K. Mutation operator\
    \ integrated ant colony optimization based domestic appliance scheduling for lucrative\n\
    demand side management. Future Gener. Comput. Syst. 2019, 100, 557–568. [CrossRef]\n\
    78.\nBui, K.N.; Agbehadji, I.E.; Millham, R.; Camacho, D.; Jung, J.J. Distributed\
    \ artiﬁcial bee colony approach for connected appliances\nin smart home energy\
    \ management system. Expert Syst. 2020, 37, e12521. [CrossRef]\n79.\nMakhadmeh,\
    \ S.N.; Khader, A.T.; Al-Betar, M.A.; Naim, S.; Alyasseri, Z.A.A.; Abasi, A.K.\
    \ Particle Swarm optimization Algorithm\nfor Power Scheduling Problem Using Smart\
    \ Battery. In Proceedings of the 2019 IEEE Jordan International Joint Conference\
    \ on\nElectrical Engineering and Information Technology (JEEIT), Amman, Jordan,\
    \ 9–11 April 2019; pp. 672–677. [CrossRef]\n80.\nAbid, S.; Zafar, A.; Khalid,\
    \ R.; Javaid, S.; Qasim, U.; Khan, Z.A.; Javaid, N. Managing Energy in Smart Homes\
    \ Using Binary Particle\nSwarm Optimization; Springer: Berlin/Heidelberg, Germany,\
    \ 2017; pp. 189–196.\n81.\nFatima, I.; Khalid, A.; Zahoor, S.; Yasmeen, A.; Arif,\
    \ S.; Zafar, U.; Javaid, N. Home Energy Management System Using Ant Colony\nOptimization\
    \ Technique in Microgrid; Springer: Berlin/Heidelberg, Germany, 2017; pp. 267–279.\n\
    82.\nRehman, N.U.; Javaid, N.; Khan, Z.A. An enhanced differential evolution based\
    \ energy management system for smart grids.\nIn Proceedings of the 2017 31st International\
    \ Conference on Advanced Information Networking and Applications Workshops\n(WAINA),\
    \ Taipei, Taiwan, 27–29 March 2017; pp. 132–137.\n83.\nGupta, I.; Anandini, G.N.;\
    \ Gupta, M. An hour wise device scheduling approach for demand side management\
    \ in smart grid\nusing particle swarm optimization. In Proceedings of the 2016\
    \ National Power Systems Conference, NPSC 2016, Bhubaneswar,\nIndia, 19–21 December\
    \ 2016; pp. 1–6. [CrossRef]\n84.\nNasab, M.A.; Zand, M.; Eskandari, M.; Sanjeevikumar,\
    \ P.; Siano, P. Optimal Planning of Electrical Appliance of Residential Units\n\
    in a Smart Home Network Using Cloud Services. Smart Cities 2021, 4, 1173–1195.\
    \ [CrossRef]\n85.\nEssiet, I.O.; Sun, Y.; Wang, Z. Optimized energy consumption\
    \ model for smart home using improved differential evolution\nalgorithm. Energy\
    \ 2019, 172, 354–365. [CrossRef]\n86.\nUllah, I.; Kim, D. An improved optimization\
    \ function for maximizing user comfort with minimum energy consumption in smart\n\
    homes. Energies 2017, 10, 1818. [CrossRef]\n87.\nReghukumar, R.; Sambhu, S.; Pandi,\
    \ V.R. Multi-objective optimization for efﬁcient home energy management system\
    \ using\ndifferential evolution algorithm. In Proceedings of the 2018 3rd IEEE\
    \ International Conference on Recent Trends in Electronics,\nInformation & Communication\
    \ Technology (RTEICT), Bangalore, India, 18–19 May 2018; pp. 1157–1162.\n88.\n\
    Pamulapati, T.; Mallipeddi, R.; Lee, M. Multi-objective home appliance scheduling\
    \ with implicit and interactive user satisfaction\nmodelling. Appl. Energy 2020,\
    \ 267, 114690. [CrossRef]\n89.\nJordehi, A.R. Binary particle swarm optimisation\
    \ with quadratic transfer function: A new binary optimisation algorithm for\n\
    optimal scheduling of appliances in smart homes. Appl. Soft Comput. 2019, 78,\
    \ 465–480. [CrossRef]\n90.\nChandra, P.; Das, A.; Das, C.; Naskar, A.; Ganguly,\
    \ B.; Paul, S. Differential Evolution Algorithm Based Energy Management of\nResidential\
    \ Microgrid Under Appliance Scheduling DSM. In Proceedings of the 2020 IEEE Vlsi\
    \ Device Circuit and System (VLSI\nDCS), Kolkata, India, 18–19 July 2020; pp.\
    \ 50–55.\n91.\nFaia, R.; Faria, P.; Vale, Z.; Spinola, J. Demand response optimization\
    \ using particle swarm algorithm considering optimum\nbattery energy storage schedule\
    \ in a residential house. Energies 2019, 12, 1645. [CrossRef]\n92.\nMadathil,\
    \ D.; Pandi, V.R.; Ilango, K.; Nair, M.G. Differential evolution based energy\
    \ management system for zero net energy\nbuilding. In Proceedings of the 2017\
    \ International Conference on Technological Advancements in Power and Energy (TAP\n\
    Energy), Kollam, India, 21–23 December 2017; pp. 1–5.\n93.\nSwalehe, H.; Marungsri,\
    \ B. Intelligent algorithm for optimal load management in smart home appliance\
    \ scheduling in distribution\nsystem. In Proceedings of the 2018 International\
    \ Electrical Engineering Congress (iEECON), Krabi, Thailand, 7–9 March 2018;\n\
    pp. 1–4.\n94.\nChang, J.C.; Wu, T.H. Demand Side Management of Power for Time-of-Use\
    \ Pricing Based on Particle Swarm Optimization. In\nProceedings of the 2020 3rd\
    \ IEEE International Conference on Knowledge Innovation and Invention (ICKII),\
    \ Kaohsiung, Taiwan,\n21–23 August 2020; pp. 317–320.\n95.\nBharathi, C.; Rekha,\
    \ D.; Vijayakumar, V. Genetic Algorithm Based Demand Side Management for Smart\
    \ Grid. Wirel. Pers.\nCommun. 2017, 93, 481–502. [CrossRef]\n96.\nChen, Z.; Chen,\
    \ Y.; He, R.; Liu, J.; Gao, M.; Zhang, L. Multi-objective residential load scheduling\
    \ approach for demand response\nin smart grid. Sustain. Cities Soc. 2022, 76,\
    \ 103530. [CrossRef]\n97.\nTao, W.; Lai, Z.H.; Leu, M.C.; Yin, Z. Worker Activity\
    \ Recognition in Smart Manufacturing Using IMU and sEMG Signals with\nConvolutional\
    \ Neural Networks. Procedia Manuf. 2018, 26, 1159–1166. [CrossRef]\n98.\nZhao,\
    \ R.; Yan, R.; Chen, Z.; Mao, K.; Wang, P.; Gao, R.X. Deep learning and its applications\
    \ to machine health monitoring. Mech.\nSyst. Signal Process. 2019, 115, 213–237.\
    \ [CrossRef]\n99.\nHuang, B.; Wang, W.; Ren, S.; Zhong, R.Y.; Jiang, J. A proactive\
    \ task dispatching method based on future bottleneck prediction for\nthe smart\
    \ factory. Int. J. Comput. Integr. Manuf. 2019, 32, 278–293. [CrossRef]\n100.\
    \ Sadeghi, M.; Tavakkoli-Moghaddam, R.; Babazadeh, R. An efﬁcient artiﬁcial bee\
    \ colony algorithm for a p-hub covering location\nproblem with travel time reliability.\
    \ Int. J. Ind. Eng. 2018, 25, 40–53.\nSensors 2022, 22, 4380\n33 of 34\n101. Guo,\
    \ K. Research on location selection model of distribution network with constrained\
    \ line constraints based on genetic algorithm.\nNeural Comput. Appl. 2020, 32,\
    \ 1679–1689. [CrossRef]\n102. Su, Y.; Liu, J.; Xiang, X.; Zhang, X. A responsive\
    \ ant colony optimization for large-scale dynamic vehicle routing problems via\n\
    pheromone diversity enhancement. Complex Intell. Syst. 2021, 7, 2543–2558. [CrossRef]\n\
    103. Alinaghian, M.; Ghazanfari, M.; Norouzi, N.; Nouralizadeh, H. A novel model\
    \ for the time dependent competitive vehicle\nrouting problem: Modiﬁed random\
    \ topology particle swarm optimization. Netw. Spat. Econ. 2017, 17, 1185–1211.\
    \ [CrossRef]\n104. Utama, D.M.; Fitria, T.A.; Garside, A.K. Artiﬁcial Bee Colony\
    \ Algorithm for Solving Green Vehicle Routing Problems with Time\nWindows. J.\
    \ Physics Conf. Ser. 2021, 1933, 12043. [CrossRef]\n105. Ibrahim, M.F.; Nurhakiki,\
    \ F.R.; Utama, D.M.; Rizaki, A.A. Optimised Genetic Algorithm Crossover and Mutation\
    \ Stage for\nVehicle Routing Problem Pick-Up and Delivery with Time Windows. In\
    \ IOP Conference Series: Materials Science and Engineering;\nIOP Publishing: Bristol,\
    \ UK, 2021; Volume 1071, p. 12025.\n106. Mounia, D.A.; Bachir, D. A hybrid discrete\
    \ artiﬁcial bee colony for the green pickup and delivery problem with time windows.\n\
    Informatica 2020, 44, 507–519.\n107. Gu, Z.; Zhu, Y.; Wang, Y.; Du, X.; Guizani,\
    \ M.; Tian, Z. Applying artiﬁcial bee colony algorithm to the multidepot vehicle\
    \ routing\nproblem. Softw. Pract. Exp. 2020, 52, 756–771. [CrossRef]\n108. Norouzi,\
    \ N.; Sadegh-Amalnick, M.; Tavakkoli-Moghaddam, R. Modiﬁed particle swarm optimization\
    \ in a time-dependent\nvehicle routing problem: Minimizing fuel consumption. Optim.\
    \ Lett. 2017, 11, 121–134. [CrossRef]\n109. Ng, K.K.H.; Lee, C.K.M.; Zhang, S.Z.;\
    \ Wu, K.; Ho, W. A multiple colonies artiﬁcial bee colony algorithm for a capacitated\n\
    vehicle routing problem and re-routing strategies under time-dependent trafﬁc\
    \ congestion. Comput. Ind. Eng. 2017, 109, 151–168.\n[CrossRef]\n110. Solomon,\
    \ M.M. Algorithms for the vehicle routing and scheduling problems with time window\
    \ constraints. Oper. Res. 1987,\n35, 254–265. [CrossRef]\n111. Huang, Y.; Ludwig,\
    \ S.A.; Deng, F. Sensor optimization using a genetic algorithm for structural\
    \ health monitoring in harsh\nenvironments. J. Civ. Struct. Health Monit. 2016,\
    \ 6, 509–519. [CrossRef]\n112. Zhao, F.; Bao, H.; Xue, S.; Xu, Q. Multi-objective\
    \ particle swarm optimization of sensor distribution scheme with consideration\
    \ of\nthe accuracy and the robustness for deformation reconstruction. Sensors\
    \ 2019, 19, 1306. [CrossRef]\n113. Yang, C.; Liang, K.; Zhang, X.; Geng, X. Sensor\
    \ placement algorithm for structural health monitoring with redundancy elimination\n\
    model based on sub-clustering strategy. Mech. Syst. Signal Process. 2019, 124,\
    \ 369–387. [CrossRef]\n114. Downey, A.; Hu, C.; Laﬂamme, S. Optimal sensor placement\
    \ within a hybrid dense sensor network using an adaptive genetic\nalgorithm with\
    \ learning gene pool. Struct. Health Monit. 2018, 17, 450–460. [CrossRef]\n115.\
    \ Cao, B.; Kang, X.; Zhao, J.; Yang, P.; Lv, Z.; Liu, X. Differential evolution-based\
    \ 3-D directional wireless sensor network deployment\noptimization. IEEE Internet\
    \ Things J. 2018, 5, 3594–3605. [CrossRef]\n116. Marks, R.; Clarke, A.; Featherston,\
    \ C.A.; Pullin, R. Optimization of acousto-ultrasonic sensor networks using genetic\
    \ algorithms\nbased on experimental and numerical data sets. Int. J. Distrib.\
    \ Sens. Netw. 2017, 13, 1550147717743702. [CrossRef]\n117. Liu, H.; He, X.; Jiao,\
    \ Y. Damage identiﬁcation algorithm of hinged joints for simply supported slab\
    \ bridges based on modiﬁed\nhinge plate method and artiﬁcial bee colony algorithms.\
    \ Algorithms 2018, 11, 198. [CrossRef]\n118. Tran-Ngoc, H.; Khatir, S.; Roeck,\
    \ G.D.; Bui-Tien, T.; Nguyen-Ngoc, L.; Wahab, M.A. Model updating for Nam O bridge\
    \ using\nparticle swarm optimization algorithm and genetic algorithm. Sensors\
    \ 2018, 18, 4131. [CrossRef]\n119. Gao, K.; Zhang, Y.; Sadollah, A.; Su, R. Improved\
    \ artiﬁcial bee colony algorithm for solving urban trafﬁc light scheduling problem.\n\
    In Proceedings of the 2017 IEEE Congress on Evolutionary Computation (CEC), Donostia,\
    \ Spain, 5–8 June 2017; pp. 395–402.\n120. Adebiyi, R.F.; Abubilal, K.A.; Mu’azu,\
    \ M.B.; Adebiyi, B.H. Development and simulation of adaptive trafﬁc light controller\
    \ using\nartiﬁcial bee colony algorithm. Int. J. Intell. Syst. Appl. 2018, 10,\
    \ 68–74. [CrossRef]\n121. Mao, T.; Mihaita, A.S.; Cai, C. Trafﬁc signal control\
    \ optimization under severe incident conditions using Genetic Algorithm. arXiv\n\
    2019, arXiv:1906.05356.\n122. Tang, C.; Xia, S.; Zhu, C.; Wei, X. Phase Timing\
    \ Optimization for Smart Trafﬁc Control Based on Fog Computing. IEEE Access\n\
    2019, 7, 84217–84228. [CrossRef]\n123. Li, Z.; Shahidehpour, M.; Bahramirad, S.;\
    \ Khodaei, A. Optimizing Trafﬁc Signal Settings in Smart Cities. IEEE Trans. Smart\
    \ Grid\n2017, 8, 2382–2393. [CrossRef]\n124. Chen, X.; Yuan, Z. Environmentally\
    \ friendly trafﬁc control strategy-A case study in Xi’an city. J. Clean. Prod.\
    \ 2020, 249, 119397.\n125. Korkmaz, E.; AKGÜNGÖR, A.P. Delay estimation models\
    \ for signalized intersections using differential evolution algorithm. J.\nEng.\
    \ Res. 2017, 5, 16–29.\n126. Zhang, X.; Fan, X.; Yu, S.; Shan, A.; Fan, S.; Xiao,\
    \ Y.; Dang, F. Intersection Signal Timing Optimization: A Multi-Objective\nEvolutionary\
    \ Algorithm. Sustainability 2022, 14, 1506. [CrossRef]\n127. Mao, X. Study on\
    \ ant colony optimization algorithm for “one-day tour” trafﬁc line. Clust. Comput.\
    \ 2019, 22, 3673–3680.\n128. Jovanovi´c, A.; Teodorovi´c, D. Fixed-Time Trafﬁc\
    \ Control at Superstreet Intersections by Bee Colony Optimization. Transp. Res.\n\
    Rec. 2021, 2676, 228–241. [CrossRef]\n129. Wang, M.; Dong, H.; Li, X.; Song, L.;\
    \ Pang, D. A novel parking system designed for smart cities. In Proceedings of\
    \ the 2017\nChinese Automation Congress (CAC), Jinan, China, 20–22 October 2017;\
    \ pp. 3429–3434. [CrossRef]\nSensors 2022, 22, 4380\n34 of 34\n130. Aydin, I.;\
    \ Karakose, M.; Karakose, E. A navigation and reservation based smart parking\
    \ platform using genetic optimization for\nsmart cities. In Proceedings of the\
    \ 2017 5th International Istanbul Smart Grid and Cities Congress and Fair (ICSG),\
    \ Istanbul,\nTurkey, 19–21 April 2017; pp. 120–124. [CrossRef]\n131. Ferdous,\
    \ F.; Mahmud, M.S. Intelligent trafﬁc monitoring system using VANET infrastructure\
    \ and ant colony optimization. In\nProceedings of the 2016 5th International Conference\
    \ on Informatics, Electronics and Vision, ICIEV 2016, Dhaka, Bangladesh,\n13–14\
    \ May 2016; pp. 356–360. [CrossRef]\n132. Rehman, A.; Rathore, M.M.; Paul, A.;\
    \ Saeed, F.; Ahmad, R.W. Vehicular trafﬁc optimisation and even distribution using\
    \ ant\ncolony in smart city environment. IET Intell. Transp. Syst. 2018, 12, 594–601.\
    \ [CrossRef]\n133. Pompei, F. Ant Colony Optimisation and Geolocation Technologies\
    \ for the Transportation Assignment Problem. In Proceedings\nof the 2017 IEEE\
    \ 41st Annual Computer Software and Applications Conference (COMPSAC), Turin,\
    \ Italy, 4–8 July 2017; Volume\n2, pp. 749–753. [CrossRef]\n134. Nguyen, T.H.;\
    \ Jung, J.J. Ant colony optimization-based trafﬁc routing with intersection negotiation\
    \ for connected vehicles. Appl.\nSoft Comput. 2021, 112, 107828. [CrossRef]\n\
    135. Yi, Y.; Choi, K.; Lee, Y.J. Optimal limited-stop bus routes selection using\
    \ a genetic algorithm and smart card data. J. Public Transp.\n2016, 19, 178–198.\
    \ [CrossRef]\n136. Pitakaso, R.; Sethanan, K.; Srijaroon, N. Modiﬁed differential\
    \ evolution algorithms for multi-vehicle allocation and route\noptimization for\
    \ employee transportation. Eng. Optim. 2020, 52, 1225–1243. [CrossRef]\n137. Buba,\
    \ A.T.; Lee, L.S. Differential evolution with improved sub-route reversal repair\
    \ mechanism for multiobjective urban transit\nrouting problem. Numer. Algebr.\
    \ Control Optim. 2018, 8, 351.\n138. Jovanovi´c, A.; Nikoli´c, M.; Teodorovi´c,\
    \ D. Area-wide urban trafﬁc control: A Bee Colony Optimization approach. Transp.\
    \ Res.\nPart C Emerg. Technol. 2017, 77, 329–350. [CrossRef]\n139. Hassoune, K.;\
    \ Dachry, W.; Moutaouakkil, F.; Medromi, H. Dynamic parking guidance architecture\
    \ using ant colony optimization\nand multi-agent systems. J. Adv. Inf. Technol.\
    \ 2020, 11, 58–63. [CrossRef]\n140. Bijandi, M.; Karimi, M.; Bansouleh, B.F.;\
    \ van der Knaap, W. Agricultural land partitioning model based on irrigation efﬁciency\n\
    using a multi-objective artiﬁcial bee colony algorithm. Trans. GIS 2021, 25, 551–574.\
    \ [CrossRef]\n141. Darmian, S.M.; Fattahi, M.; Keyvanshokooh, E. An optimization-based\
    \ approach for the healthcare districting under uncertainty.\nComput. Oper. Res.\
    \ 2021, 135, 105425. [CrossRef]\n142. Ding, Z.; Fu, K.; Deng, W.; Li, J.; Zhongrong,\
    \ L. A modiﬁed Artiﬁcial Bee Colony algorithm for structural damage identiﬁcation\n\
    under varying temperature based on a novel objective function. Appl. Math. Model.\
    \ 2020, 88, 122–141. [CrossRef]\n143. Tao, W.; Leu, M.C.; Yin, Z. Multi-modal\
    \ recognition of worker activity for human-centered intelligent manufacturing.\
    \ Eng. Appl.\nArtif. Intell. 2020, 95, 103868. [CrossRef]\n144. Wang, C.; Shi,\
    \ H.; Zuo, X. A multi-objective genetic algorithm based approach for dynamical\
    \ bus vehicles scheduling under\ntrafﬁc congestion. Swarm Evol. Comput. 2020,\
    \ 54, 100667. [CrossRef]\n145. Banerjee, A.; Mitra, A.; Biswas, A. An integrated\
    \ application of IoT-based WSN in the ﬁeld of indian agriculture system using\n\
    hybrid optimization technique and machine learning. In Agricultural Informatics:\
    \ Automation Using the IoT and Machine Learning;\nJohn Wiley & Sons, Inc.: Hoboken,\
    \ NJ, USA, 2021; pp. 171–187. [CrossRef]\n146. Du, J.; Zhang, Z.; Li, M.; Guo,\
    \ J.; Zhu, K. Optimal scheduling of integrated energy system based on improved\
    \ grey wolf\noptimization algorithm. Sci. Rep. 2022, 12, 7095. [CrossRef] [PubMed]\n\
    147. Li, S.; Wang, F. Research on Optimization of Improved Gray Wolf Optimization-Extreme\
    \ Learning Machine Algorithm in Vehicle\nRoute Planning. Discret. Dyn. Nat. Soc.\
    \ 2020, 2020, 8647820. [CrossRef]\n148. Khan, A.; Mushtaq, N.; Faraz, S.H.; Khan,\
    \ O.A.; Sarwar, M.A.; Javaid, N. Genetic Algorithm and Earthworm Optimization\
    \ Algorithm\nfor Energy Management in Smart Grid; Springer: Berlin/Heidelberg,\
    \ Germany, 2017; pp. 447–459.\n149. Amer, H.; Salman, N.; Hawes, M.; Chaqfeh,\
    \ M.; Mihaylova, L.; Mayﬁeld, M. An improved simulated annealing technique for\n\
    enhanced mobility in smart cities. Sensors 2016, 16, 1013. [CrossRef]\n150. Qayyum,\
    \ N.; Amin, A.; Jamil, U.; Mahmood, A. Optimization techniques for home energy\
    \ management: A review. In Proceedings\nof the 2019 2nd International Conference\
    \ on Computing, Mathematics and Engineering Technologies, iCoMET 2019, Sukkur,\n\
    Pakistan, 30–31 January 2019. [CrossRef]\n151. Li, J.; Lei, H.; Alavi, A.H.; Wang,\
    \ G.G. Elephant herding optimization: Variants, hybrids, and applications. Mathematics\
    \ 2020,\n8, 1415. [CrossRef]\n152. Mazyavkina, N.; Sviridov, S.; Ivanov, S.; Burnaev,\
    \ E. Reinforcement learning for combinatorial optimization: A survey. Comput.\n\
    Oper. Res. 2021, 134, 105400. [CrossRef]\n153. Cabrejas-Egea, A.; Zhang, R.; Walton,\
    \ N. Reinforcement learning for trafﬁc signal control: Comparison with commercial\
    \ systems.\nTransp. Res. Procedia 2021, 58, 638–645. [CrossRef]\n154. Hassan,\
    \ R.; Cohanim, B.; De Weck, O.; Venter, G. A comparison of particle swarm optimization\
    \ and the genetic algorithm. In\nProceedings of the 46th AIAA/ASME/ASCE/AHS/ASC\
    \ Structures, Structural Dynamics and Materials Conference, Austin, TX,\nUSA,\
    \ 18–21 April 2005; p. 1897.\n"
  inline_citation: '>'
  journal: Sensors (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/1424-8220/22/12/4380/pdf?version=1654771609
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Making Cities Smarter—Optimization Problems for the IoT Enabled Smart City
    Development: A Mapping of Applications, Objectives, Constraints'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.30630/joiv.2.2.118
  analysis: '>'
  authors:
  - M. Sandeep Kumar
  - Prabhu Jayagopal
  citation_count: 4
  full_citation: '>'
  full_text: ">\n96 \n \nResearch and development of virtualization in           \
    \                   \nWireless sensor networks \nM. Sandeep Kumar#, Prabhu. J*\
    \ \n# School of Information Technology and Engineering, Vellore Institute of Technology,\
    \ VIT University, India \n Associate Professor, School of Information Technology\
    \ and Engineering, Vellore Institute of Technology, VIT University, India \n E-mail:\
    \ sandeepkumarm322@gmail.com  \n \n \nAbstract— Virtualization is foundational\
    \ for applying both cloud computing and big data. It provides the basis for many\
    \ platform \nattributes required to access, store, analyze, and manage the distributed\
    \ computing components in big data environments. \nVirtualization also able to\
    \ use in a wireless sensor network in Agriculture field. WSNs emerging approach\
    \ in commercial applications \nlike Healthcare, agriculture, Industries. Virtualization\
    \ in sensor network offers more flexibility, cost, effective solution; promote\
    \ \ndiversity, security, and manageability. In this chapter describes WSNs in\
    \ agriculture domain, issues, challenges, etc. Also describes \nvirtualization\
    \ technology, techniques, and tools. \n \nKeywords— WSNs, Agriculture, Big Data,\
    \ Virtualization, Sensor. \n \n \nI. INTRODUCTION \nCurrently most exciting topic\
    \ worldwide is wireless sensor \nnetworks (WSNs). Most of application and business\
    \ \nopportunities perform daily life with WSN business increase \n$0.45 billion\
    \ in 2012 to $2 billion in upcoming years at \n2022.WSNs mainly described based\
    \ on a network with small \ndevices as sensor nodes; it  spatially assigned and\
    \ perform \ncooperatively in connecting information group by monitoring \nfield\
    \ by wireless links. Data are collected based on various \nnodes sent to the sink,\
    \ it may neither used as data placed or \nplaced on another network. WSNs technology\
    \ provides more \nbenefits over previous network solution like less cost, \nscalability,\
    \ reliability, accuracy, flexibility and easy to spot \nwith a more comfortable\
    \ range of application. Agriculture \npractices based on sensors and network only.\
    \ Precision \nfarming, Smart agriculture, intensive agriculture, variable rate\
    \ \ntechnology based on sensor-based farming and process are \nsimilar to each\
    \ other. Many researchers’ analysis and come to \nknow that issues arise from\
    \ sensors and networks. Some of \nthe problems like energy constraints, usage\
    \ of small memory, \ndata security, and restriction in power are issues form a\
    \ sensor \nnetwork, and most of the research identifies a solution. \nII. BACKGROUND\
    \ \nMd.Motaharul Islam et al. (2012)  describes the novel \napproach for utilizing\
    \ the significant data using WSN \nresources in the sensor in virtualization platform.\
    \ It represents \nsensor virtualization architecture, challenges, opportunities\
    \ \nthat focus on research field in sensor network virtualization. \nSunil N.more\
    \ et al. (2002) describes an overview of various \nWSN technologies that used\
    \ in the agriculture field. It offers \ninformation regarding WSN, and its standard\
    \ technology \nnamely types of WSN framework, wireless communication, \ndifferent\
    \ wireless sensors with a particular application and a \ncase study of WSN. \n\
    Extraction of the sensor and its efficient usage to solve \nagriculture in the\
    \ field. A difficult task for displaying user’s \nunavailability in increase information.\
    \ Aqeel –ur- Rehman et \nal. (2014) describe the requirement of wireless sensors\
    \ in \nagriculture, WSN technology, its application in various need \nof farming\
    \ by review document in the existing framework in \nagriculture application. \n\
    Manijeh Keshgary et al. (2012 ) describe two topologies of \nWSN for producing\
    \ automated monitoring for precision \nagriculture. The first topology represents\
    \ each sensor node \ndetermined in a random way for evaluating topology based\
    \ on \nOPNET Modeler. In this model, sensor nodes data’s gather \ndepends on water\
    \ level, gate arrangement, rainfall and soil \nmoisture. Further real-time information’s\
    \ communicated to \nthe sink node via Wi-Fi. Delay, throughput, and load are \n\
    parameters used to set the performances. \nWen Hu et al. (2010) represent the\
    \ application of WSN \ntechnology for a long time and large-scale environmental\
    \ \nmonitoring.In this work, we describe a real-time example of \nagriculture,\
    \ investigate issues, challenges that meet the \nrequirements for farmers in information\
    \ collection system. \n \nINTERNATIONAL JOURNAL ON INFORMATICS VISUALIZATION \n\
    \ \n \n \nVOL 2 (2018) NO 2\n  \ne-ISSN : 2549-9904 \nISSN    : 2549-9610  \n\
    \ \n97 \n \nReliability and productivity are two main essential aspects \nthat\
    \ designed for selecting both system hardware and software. \nMohd Fauzi Othman\
    \ et al. (2012) examine an overview of \nwireless \nsensor \nnetwork \napplication\
    \ \nbased \non \nthe \nenvironmental monitoring.It associates to implement perfect\
    \ \nmonitoring system, various needs to be followed. From this \ncase study of\
    \ the monitoring system, we have another way to \nrepresent the conventional approach\
    \ that has been used to \nmonitor the environment. This approach will offer more\
    \ \nimprovised system performance for convenient methods that \nsatisfy entire\
    \ functional requirements. \nXiaoqing Yu et al. (2013) describe hybrid wireless\
    \ sensor \nnetwork framework for agriculture. In this system, we \ncompared between\
    \ a hybrid WSN and a terrestrial wireless \nsensor network; it conveys information\
    \ in the soil. \nExperiment analysis using soil that consists of 55% and 35 %,\
    \ \nsilt, and 15% clay, it had specific density of 2.6 〖cm〗^(-3) \nand 1.5 g/\
    \  〖cm〗^3 respectively. This experiment evaluated \nbased on several soil moistures\
    \ and three signal frequency \nmeasures. Finally result shows that the radio signal\
    \ path loss \nis less for low frequency and moisture in soils. \nTamoghna Ojha\
    \ et al. (2015) describe a clear overview of \ndeployment of WSN in different\
    \ farming application present \nin Indian soil. We also investigate benefits,\
    \ issues, and \nsolution in WSN, while finding the factor for enhancing and \n\
    further research direction in WSN with new age technology. \nRaul Morais et al.\
    \ describes data acquisition platform for a \ngathering of solar, wind, water\
    \ information by using ZigBee \nnetwork. Zhang et al. (2007) demonstrate greenhouse\
    \ wireless \nmonitoring system; it could be more realistic in directing \nWSN\
    \ based on ZigBee technology. Li and Liu et al. represent \ngreenhouse monitoring\
    \ framework that applied by WSN for \ncontrolling terminal of the system.An overall\
    \ structure \ndesigned by ARM0 and Linux based on usage of the data \nreceiver,\
    \ real-time overview and preserving data in a \ngreenhouse environment. The Main\
    \ control terminal used for \ntransmitting with remote management center by GPRS.\
    \ The \nentire data acquisition from greenhouse platform based on \nWSN only.\
    \ \nZhang.Z et al. (2017) demonstrate agriculture information \ncollection framework\
    \ that used for monitoring agriculture \nplatform based on ZigBee technology.\
    \ This context more \nrelies on collecting soil information with high feasibility.\
    \ This \nstructure not only useful in resolving issues of low \nagricultural irrigation,\
    \ water usage rate based on the presence \nof soil moisture gathered by WSN nodes.\
    \ Water –saving, \nenhancing effective irrigation management based on soil \n\
    moisture sensors. Further ZigBee technology more practices \nin industry for collecting\
    \ information, detecting of blood \npressure, temperature and heart rate information\
    \ in the \nmedical field.  \nHaiyuan sun et al. (2017) describes the practical\
    \ \nexamination of mobile software development technologies \nand Zigbee communication\
    \ network. This system performs \nmore compact and flexible ios based client,\
    \ for considering \nbenefits of Model view model. Message digest algorithm and\
    \ \nRivest Shamir Adleman algorithm that is integrated to secure \ninformation\
    \ security by using encryption technologies. By \ncomparing with specific marking\
    \ framework, this system \noffers more accuracy in gathering information from\
    \ WSN. \nRubella et al. (2017) describe crop monitoring framework \nbased on the\
    \ wireless sensor network. Currently, IOT plays a \ncrucial role in promoting\
    \ agriculture information. ARM \nprocessors combined with sensors like temperature,\
    \ humidity, \nwater level utilized for agriculture monitoring and crop \nproduction.\
    \ The crops details  monitored and upload data are \nin the cloud on IOT platform.\
    \ Input material for saving, \nefficiency, \nproductivity, \nprofitability \n\
    for \nimproving \nproduction system for a farmer in controlling the production\
    \ \nof agriculture. \nZulkifli C.Z et al. (2017) describes RFID (Radio Frequency\
    \ \nIdentification) technology and WMSN (Wireless Mess \nSensor Network) for agriculture\
    \ field, crop monitoring, \nplant.Wiring, piping cost, installation, management\
    \ for a large \narea for reducing the WMSN. The use of technology in \nagriculture\
    \ required for improving production for reducing \nlabor cost and water needs.\
    \ Hence WMSN technology \ndetermines well in most of the technology in developing\
    \ the \ncurrent irrigation frameworks. Continuously improvement \nand correct\
    \ rate that afford for a large dataset for WMSN \napplication by using soil moisture\
    \ sensors. \nBalakumar et al. (2017) demonstrate various possibilities \nin combining\
    \ with distributed clustering mechanism with \nreal-time applications. Moreover\
    \ this technique that \ncombined with lifetime sensor node that has utilized in\
    \ remote \nand critical applications. \nMondal.A et al. (2017) represents detailed\
    \ design level of \nimplementing the low-cost WSN for agriculture domain.The \n\
    successful construction for performing the detail designed \nnode for water present\
    \ in the soil for low cost in WSN. The \nSelection of the component, combined\
    \ with building the \nprototype, firmware, hardware for implementing this work.\
    \ \nThe transmission of data in APL mode improved based on its \nreliability of\
    \ the network. But the packets well reduce less \naround 0.1% by implementing\
    \ static routing algorithm based \non the particular scenario. \nArun.M Patokar\
    \ et al. (2018) construct precision \nagriculture framework for monitoring the\
    \ metrics that need \nfor the crop. For producing precision agriculture, WSN \n\
    platform affirms in making acquiring, processing information, \nrecording the\
    \ data node. This system provides low cost based \non the type of system required\
    \ to enhance the efficiency of \nresource used for improving performance in production.\
    \ The \nProduction of crop directly access and controlled by smart \nphone’s;\
    \ it affords more flexibility, user-friendly, fast in \nprocessing. \n \nConstruction\
    \ Of Virtualization Of Wireless Sensor Network  \n Design aim in VSN (Virtualization\
    \ sensor network) \nThe primary objective of performing the virtualization in\
    \ a \nsensor network offered by many researchers. Some of the \nissues behind\
    \ sensor network virtualization, each stage need \nto fulfill their criteria \
    \ \nFlexibility \nFlexibility constructed based the adjusting change occur \n\
    from external, and VSNs offers some problems in elasticity. \nVSN provides more\
    \ freedom in each feature of sensor \nnetworking. Sensor virtualization network\
    \ service provider \nneed to generate shapes of virtual sensor network topology.\
    \ It \ngives more flexible routing and functionality in altering \ncontrol protocols\
    \ that independently placed in the physical \n98 \n \nsensor network with previous\
    \ SVNSPs (Sensor Virtualization \nNetwork Service Provider). \nNetwork Heterogeneity\
    \ \nIt is most necessity issues in constructing the VSNs. It \nmainly based on\
    \ two aspects like i) Heterogeneity-based on \nsensor Network technology with\
    \ various sensor nodes. ii) \nEach point to point SVNSP designed at the top of\
    \ the \nheterogeneous mixture based on SInp, it also called \nheterogeneous. SVNSPs\
    \ need to perform across various \ndomains, point to point VSNs without the requirement\
    \ of any \nparticular solution. It mainly based on infrastructure it can \nassist\
    \ different protocol, an algorithm for performing with \nvarious SVNSPs. More\
    \ Heterogeneity of end user devices \nneeds to consider. \nIsolation \nSensor\
    \ network Virtualization needs to assure isolation \nwith previous VSNs to enhance\
    \ in fault –tolerance, security, \nand privacy. Sensor network protocol is unerect\
    \ to \nmisconfigure; an error occurs in implementation. Sensor \nvirtualization\
    \ need assure the misconfiguration on single \nVSNs even though it exists with\
    \ same physical part of the \nsensor network. Device abstraction is needed to\
    \ move further \nwith effective software isolation; the various instance needs\
    \ \nto be unmodified with sensing application by using the virtual \nsensors in\
    \ applying with the physical sensor. Mostly strong \nisolation is enhanced their\
    \ performance when each user‘s \nperformance with shared function device resources.\
    \ Sharing \nGuarantees provides fewer fractions in sensor resources. \nManageability\
    \ \nCentral important part of constructing VSN is to maintain \nthe VSN applications.\
    \ VSNs offer each SVNSP stay \nindependent in a physical sensor network. By splitting\
    \ \nSVNSPs from SInPs, sensor network virtualization needs to \nstandard network\
    \ in maintaining each step. It describes each \nlayer in network architecture\
    \ needs offer entire, point to point \ncontrol over NSNs to SVNSPs. Moreover,\
    \ it requires \ncoordination in the various regions in previous WSN domains. \n\
    Scalability \nSensor networks are the more specific principle of sensor \nnetwork\
    \ virtualization. We get Scalability from indispensable \ncomponent equations.\
    \ SInPs (Sensor Infrastructure provider) \nare scalable assist in more number\
    \ of coexisting VSNs \nwithout any changes in the performance. In the construction\
    \ \nof large-scale sensor network, it requires to perform the VSNs \nscalability;\
    \ any changes can be made or efficiently in \nimplementing the physical sensor\
    \ network. \nStability and Convergence \nIsolation assures the faults of single\
    \ VSN, it will not affect \nwith other VSNs, in causing some errors, misconfiguration\
    \ \nbased on physical network, it also unstable with the sensor \nnetwork and\
    \ virtualization platform. Due to instability \noccurrence in SInPs, it lies instability\
    \ for the entire host in \nVSNs. Mostly VSNs assure the balance of sensor \nvirtualization\
    \ platform in some scenario. Uncertainty may \naffect with VSNs required to perform\
    \ successfully in \nconverge of stability. \nProgrammability \nProgrammability\
    \ provides more assurance in both \nflexibility and manageability. Indispensable\
    \ require in virtual \nsensor network component as programmability. By using \n\
    programmability; SVNSPs perform protocol place in services. \nTwo need questions\
    \ to satisfy: Whether programmability \nrequires allowing? Then how to achieve?\
    \ Solutions are merely \ncomfortable, practical and more secure of some duration.\
    \ For \ndistributing resource constraints in a sensor node, \nprogrammability\
    \ offers more research gaps in VSNs. \nLegacy support \nIt mainly concerns with\
    \ placing the new approach or \ntechnology.  We can easily integrate legacy with\
    \ sensor \nnetwork virtualization in assisting with previous WSN \ndomain like\
    \ VSN, in gathering sensor networks due the \nefficiency are still research challenges.\
    \ Most of the \nresearchers concentrate on design only. \n \nSome Of The Challenges\
    \ While Constructing Vsns  \nInterfacing \nSVNSP make use of physical resources\
    \ from single to \nmultiple environments, it offers in performing virtual sensor\
    \ \nnetwork. SInP necessity needs to provide the interface that \nallows service\
    \ providers for connecting and giving the needs. \nInteroperability is similar\
    \ to an interface that needs to \nrecognize the standards requirements in performing\
    \ sensor \nvirtualization as a request to various nodes, links of virtual \nsensors\
    \ with some attributes. Monitoring interface is a perfect \nexample of sensor\
    \ web design. \nManaging limited resource \nResources allocation offers sensor\
    \ network virtualization \nplatform, consists of both static and dynamic allocation\
    \ of the \nnode. Links of virtual sensor connects with physical nodes \nthat as\
    \ paths called virtual sensor network embedding. In this \nconstraint of nodes,\
    \ links offer in decreasing the NP-based \nissues. When an entire network request\
    \ to determined in \nadvance.  Storage, power consuming, less battery power are\
    \ \nsome issues in maintaining. More efficient research need an \napplication\
    \ from the virtual network to real WSN requires. \nMoreover, it will be accessible\
    \ and useful in constructing the \nvirtualization in sensor nodes. \nResource\
    \ Discovery \nResource Discovery allocates requests from various virtual \nsensor\
    \ providers.The environment can perform topology \nsensor network in maintaining\
    \ the vital sensor network \ncomponents. It also shares the crucial information\
    \ in \ndetermining the links between the network and even \ninstallation of the\
    \ virtual sensor network. \nQuality of service and experience \nQuality of service\
    \ mainly used for sorting the whole \nvirtualizations. It evaluates the network\
    \ operator’s agreement \nlike noise, decreases packets. Meanwhile, the experience\
    \ \nassessing sensor network for fulfilling the various application \nstages based\
    \ on user’s needs. Need to ensure that significant \nchallenges are in VSNs. \n\
    Security \nSecurity offers data from the physical sensor node to \nvarious user\
    \ application stages. In large scale, WSNs data are \noffers in physical sensors\
    \ are the most necessary. Misuse the \nprocess effect in users level application,\
    \ and VSNs need to \noffer both security and authentication control. \n Resource\
    \ Scheduling \nThe virtual sensor network is the providers that specifically \n\
    assure the characteristics of the virtual node with the \nbandwidth to assigns\
    \ its network. Virtual sensor routers are \nservice providers that may request\
    \ to ensure the limited \n99 \n \nprocessing packet in CPU for particular storage\
    \ needs and \nalso provides the memory size. \nThe virtual sensor connects for\
    \ providing request range \nfrom most excellent service in combining with fix\
    \ loss, and \ndelay characteristics to recovered from physical links. It \naffords\
    \ with assurance in producing the illusion in remote and \nplaced network services\
    \ for the single service provider.It \nrequired infrastructure need to deployed\
    \ proper scheduling \nalgorithm for an entire component of the sensor network.\
    \ By \nPrevious framework virtualization offers scheduling process \nlike CPU,\
    \ Storage, memory,  network interface, it runs on \neach VM to host sensor node.\
    \ Sensor network Virtualization \nmay be enhanced control for performing the resource\
    \ \nscheduling placed on the physical platform. \n Admission Control and Resource\
    \ Usage Policy \nSensor platform offers more secured that resource will not \n\
    be part of Provisioned to transfer QoS support. It allows \ndetermining comprehensive\
    \ accounting and performance in \ncontrolling the admission algorithm, in giving\
    \ more assurance \nresource assigned to virtual sensor networks. It will not be\
    \ \nmore physical storage lies on physical sensor networks. \nMoreover, will not\
    \ permit dynamic to rescale in allocating \nresources. To avoids the constraints\
    \ iniquity by virtual sensor \nnetworks. Its controls by placing the service providers,\
    \ will \nnot overflow the enormous resource assign to them by using \nboth direct\
    \ and indirect process. \nNaming and Addressing \nBy essential heterogeneity in\
    \ naming and addressing \noutlines of the previous process. The Main challenges\
    \ of \nsensor network virtualization like virtual sensor network, \npoint to point\
    \ connection, communication between universal. \nMoreover, various stages of application\
    \ users at the same time \ncommunicate with various virtual networks by many platform\
    \ \nproviders by different techniques in processing separate \nservice. It affords\
    \ with incorporating heterogeneity in many \nshapes are some of the issues in\
    \ sensor network virtualization. \nSome recent research projects are split with\
    \ their identities, \nend host to physical and logical place to add some need\
    \ stages \nin the new process.It also provides standard finding space to \noffer\
    \ communication accurately without striking down both \nphysical and virtual sensor\
    \ network. Moreover, will not be a \nphysical process because of unrestrained\
    \ memory requires. \nThe Main essential research gaps in naming, addressing in\
    \ \nidentifying the worldwide communication that able to connect \nwith the federation\
    \ sensor system. \nVirtual sensor network operations and management \nSome of\
    \ the specific challenges in sensor network \nvirtualization like Operation and\
    \ management. By splitting \naccountability and duty among various users in sensor\
    \ \nnetwork virtualization platform.  It provides more \nmaintenance in decreasing\
    \ process of error. By controlling \nboth proactive and reactive process to enforce\
    \ responsibility \nin hosting virtual sensor networks. Significance in flexibility\
    \ \nneeds to be described in various stages of sensor network \noperation centers\
    \ to brilliant agents for sensor network \ncomponents. Virtual sensor network\
    \ operation can single \nservice providers in configuration, maintain, accessing\
    \ the \nvirtual sensor networks with regardless of others. From virtual \nsensor\
    \ network, it covers part lies in physical sensor networks, \nthe application\
    \ needs to improve with aggregate data from \nmany places, frequently from conflict,\
    \ maintain process \nanalyze the users in sensor platform providers. Average layers\
    \ \nof abstraction in continuing management software’s provider \nwith a more\
    \ efficient solution. Most of the loss lies on \nphysical sensor network elements\
    \ that get from failures of \ncascading in virtual sensor networks; it straightly\
    \ connects the \nhost to the parts. For example, physical connection failures\
    \ to \nprovide results in whole virtual connection by passing it. \nCorresponding\
    \ physical sensor node failure may need to \nrepeat in installation for a complete\
    \ service provider in \ncustom software. Some of the failure like detection and\
    \ \nisolation and also well with prevention and recuperation in the \nstable state\
    \ are the some of the research gaps. \n \nWsns USED IN AGRICULTURE DOMAIN \nNecessity\
    \ of using WSNs \n Ability in decision making  \nIt provides many hops in nature.\
    \ In the vast region, features \nneed to improve in energy efficiency with the\
    \ whole network \nand also improve in lifetime duration. Some of the features\
    \ \nlike multiple sensor nodes combined themselves and got the \nresult. \n Dynamic\
    \ topology configuration \nFor preserving the power of the battery, sensor node\
    \ acts \nthem as a sleep mode in much time. By applying topology \nmanagement\
    \ approach, sensor nodes cooperate in decision \nmaking, in reducing network duration.The\
    \ network topology \nperformed with less number of nodes as it stays in active\
    \ mode. \nFault tolerance \nThe Main challenges in performing the WSNs in sensor\
    \ \nnode called fault –Prone. Below is some scenario, unplanned \nnodes placed\
    \ for getting an advantage in network partitioning \nand also change to the entire\
    \ performance of network are \ndisturbed. Moreover, measure from sensor nodes\
    \ may be self-\norganized in the network topology. \n Context-awareness \nIt mainly\
    \ consists of sensor data based on physical and \nenvironmental components. Sensor\
    \ nodes benefit knowledge \non covering context. A decision on sensor nodes based\
    \ on \ncontext-aware. \nScalability \n WSN protocol constructed for performing\
    \ the network \nregardless of its size and number of count. The Features of \n\
    WSNs are essential for most of the applications. \n Node heterogeneity \nWSNs\
    \ are frequently assumed to determine homogeneous \nsensor placed in devices.\
    \ Computation power, memory, \nsensing ability, transceiver unit, and movement\
    \ capability are \nsome real scenario based on methods in different processing.\
    \ \nTolerance versus communication failure in criticizes \nplatform conditions\
    \ \nVast areas in agriculture domain, WSNs uncomforted in \ncriticize platform\
    \ conditions. WSN protocol stacks some of \nthe \ntechniques \nthat \nhave \n\
    phenomenon \nfailure \nin \ncommunication network caused because of surrounding\
    \ \neffects. \nAutonomous operating nodes \nSome potential features of WSNs are\
    \ self-reliant operating \nmode and adaptiveness. In an application like agriculture\
    \ has \nsome specific features plays a crucial role in performing well \nin operation\
    \ modes. \nInformation security \n100 \n \nWSNs convey raw data in concerning\
    \ parameter of \nagriculture field. It assures the security of sensing data. WSNs\
    \ \noffers process control mechanism; anomaly detection limited \nto unauthenticated\
    \ customers. \n \nFig. 1 Process of WSNs \n \nRequirement in using Sensors in\
    \ Agriculture \nThe sensor collects data from physical and environmental \nattributes.Actuators\
    \ perform based on feedback and situations. \nSensor accumulate used of finding\
    \ the people, locations, \nobjects are assigned as context. Context acquisition\
    \ offers to \nneed contribution over time variants attributes. \nIt requires various\
    \ needs in agriculture domain like \ngrouping data like weather, crop, and soil.The\
    \ Maintains of \nvarious lands and diverse crop in one field. Need crops for \n\
    numerous regions in different weather and soil condition. We \nuse proactive solution\
    \ instead of reactive solutions. Moreover, \nit requires both parallels, distributed\
    \ processing. Wireless \nSensors and actuator need to gather the data in various\
    \ \nsituations based decision making. \nTypes of sensor used in Agriculture Domain\
    \ \nIn this section, we explicitly describe various types of \nsensor used in\
    \ agriculture field like soil, weather, plant, and \nenvironment. In table 1,\
    \ 2, 3, 4; represent the different sensor \nutilized in this area. \n \nTABLE\
    \ 1 \nSENSOR USED IN AGRICULTURE (SOIL) \n \nSensors \nTempe \nurature \nMoisture\
    \ \nFlow \nof \nwater \nConduc \ntivity \nSalinity \nEC sensor \n+ \n+ \n+ \n\
    + \n+ \nHydra Probe soil \n+ \n+ \n+ \n+ \n+ \nMP 406 soil  \n+ \n+ \n- \n- \n\
    - \n107-L temperature \n+ \n- \n- \n- \n- \nECRN-100 high –\nREC rain \n- \n-\
    \ \n+ \n- \n- \n+:  Available       -: Not available \n \nTABLE 2 \nSENSOR USED\
    \ IN AGRICULTURE (WEATHER) \n \nSensor \nTempe \nrature \nWind \nSpeed \nWind\
    \ \nDirection \nHumi \ndity \nAtmos \npheric \npressure \nWeather \nSensor \n\
    + \n+ \n+ \n+ \n+ \nSHT71 \n(Humidity and \ntemperature) \n+ \n+ \n+ \n- \n- \n\
    107-L \ntemperature \n+ \n- \n- \n- \n- \nCM-100 \ncompact \n+ \n+ \n+ \n+ \n\
    + \nCl-340 hand-\nheld \nphotosynthesis \n+ \n+ \n- \n- \n- \n+:  Available  \
    \     -: Not available \n \nTABLE 3 \nSENSOR USED IN AGRICULTURE (PLANT) \n \n\
    Sensor \nMoisture \nTemper \nature \nCO2 \nPhoto \nsynthesis \nHydro \ngen \n\
    wetness \nLeaf wetness \nsensor \n+ \n- \n- \n- \n- \n- \n237-L ,leaf \nwetness\
    \ \nsensor \n+ \n+ \n- \n- \n- \n+ \nLW 100,leaf \nwetness \nsensor \n+ \n+ \n\
    - \n- \n- \n+ \nSenseH2 \nhydrogen \nsensor \n+ \n+ \n- \n- \n- \n+ \nTPS-2 \n\
    portable \nphotosynthesis \n+ \n+ \n+ \n+ \n- \n+ \nCI-340 hand –\nheld \nphotosynthesis\
    \ \n+ \n+ \n+ \n+ \n+ \n+ \nPTM-48A \nphotosynthesis \nmonitor \n+ \n+ \n+ \n\
    + \n \n+ \n+:  Available       -: Not available \n \nTABLE 4 \nSENSOR USED IN\
    \ AGRICULTURE (ENVIRONMENT) \n \nSensor \nHumi\ndity  \nTe\nmp\nera\ntur\ne \n\
    Atmo\nspher\nic \npress\nure \nWind \nspeed \nDirec\ntion \nRainf\nall \nSolar\
    \ \nradia\ntion \nWXT 520 \ncompact \nweather \nstation \n+ \n+ \n+ \n+ \n+ \n\
    + \n- \nCM-100 \ncompact \nweather \nstation \n+ \n+ \n+ \n+ \n+ \n- \n- \nMet\
    \ \nstation \none \n(MSO) \nweather \nstation \n+ \n+ \n+ \n+ \n+ \n- \n- \nAll\
    \ \n–in-\none \n(AIO )we\nather \nsensor \n+ \n+ \n+ \n+ \n+ \n- \n- \nXFAM-\n\
    115 \nKPASR \n- \n- \n- \n \n \n- \n- \nRM \nYoung \n(Model \n5103) \n- \n- \n\
    - \n+ \n+ \n- \n- \nMet \none \nseries 380 \nrain gauge \n- \n- \n- \n- \n- \n\
    + \n- \nRG13/RG\n13H \n- \n- \n- \n- \n- \n+ \n- \n101 \n \nLI-200 \nPyranome\n\
    ter \n- \n- \n- \n- \n- \n- \n+ \nCS300-L \nPyranome\nter \n- \n- \n- \n- \n-\
    \ \n- \n+ \n+:  Available       -: Not available \n \nTABLE 5 \n PERFORMS OF SENSORS\
    \ \n \nItem \nCondition \nAmount \nof \nwater level \nMin \nMax \n \nSensor in\
    \ dry soil \nHigh \n0% \n30% \nOutput  \nSensor in humid soil \nMedium \n30% \n\
    70% \n \nSensor in water \nLow \n70% \n85% \n \nSensor in water \nNo  \n85% \n\
    95% \n \nTABLE 6 \nCOMPARISON OF WSN TECHNOLOGIES \n \n \nZigbee \nBluetooth \n\
    Wibree \nWiFi \nFrequency \nband \n2.4 GHz \n2.4 GHz \n2.4 \nGHz \n2.4 GHz \n\
    Range \n30m-1.6 km \n3-300 ft \nUp \nto \n10 ft \n100-150 ft \nData rate \n250\
    \ hbps \n1 Mbps \n1 Mbps \n11-54 Mbps \nPower \nconsumption \nLow \nMedium \n\
    Low \nHigh \nCost \nLow \nLow \nLow \nHigh \nProtocol \nDSSS,CSMA/CA \nFHSS \n\
    FHSS \nDSSS \n/CCK,OFDM \nSecurity \n128 bit \n64 or 128 \nbit \n128 bit \n128\
    \ bit \n \nZigBee, Bluetooth, Wibree, and WiFi are some of the \nwireless communication\
    \ techniques that have part of various \nsensor network based on research aspects.\
    \ This technology \nhas the different ability and its properties that are having\
    \ \ncomplemented. Clear and brief comparison in given table 6. \nSome Of The Issues\
    \ In Wireless Sensor Networks In \nAgriculture Field    \nWireless sensor networks\
    \ mainly based on flexible and \nautonomous, it has opportunities to design with\
    \ previous \napplication domain like remote sensing and optimized \nsolution.\
    \ Wireless sensor network technology has many \nproblems that required dealing\
    \ with long-term availability \nframework. Sensor nodes dictate design and development\
    \ the \nenergy consumption, communication, protocols, deployment. \nIn many scenario\
    \ farming placed with various resources, \nnature of land and different climate.\
    \  \nEnergy Consumption \nSensor nodes deployed in a wireless sensor network,\
    \ \nconsists of event detection, data processing, and transmission \nare the responsibility\
    \ of WSNs. In some case, the multi-hop \nnetwork has a task in node and data routing.\
    \ Each work \nrequires energy consumption. Node is based on the restrict the \n\
    perfect source for  Lithium cells.  Sensor node lifetime mainly \nbased on battery\
    \ life duration. By placing required energy \nmanagement approach in hardware\
    \ and software, battery life \nneeds to enhance more length. Use of renewable\
    \ energy \nsources like solar power and kinetic energy required to adjust, \n\
    when less expensive result. However in some case of \nagriculture domain sensor\
    \ simultaneously recharge when \nbattery altered their places and process usually\
    \ well. \nData acquisition, sampling, and transmission \nEnergy is spent in every\
    \ data samples, process and \ntransmits. Optimized data are gathered with sample\
    \ rate when \nit required being programmed and not only need data, but \nenergy\
    \ also not spent unnecessarily. Frequently data \nacquisition makes a large number\
    \ of packets that are \ntransmitted and discharge the battery quickly. In agriculture\
    \ \ndomain, the sampling rate is not higher, and it will make a \nchange depends\
    \ on types of crop used in resources. \nFault tolerance \nSensor nodes are deployed\
    \ in criticize platform, unerect to \na physical cause, block, and interference.\
    \ To preserve the \nreliability of a WSN, failure of sensor node need not cause\
    \ the \nentire process of the network. Some technique placed on \nimproving the\
    \ fault tolerance in a system like the use of sensor \nnetwork, reprocessing sensor\
    \ network and over processing \nsensor region. \nSize and Housing in sensor nodes\
    \ \nIt required being too small and needed to distribute. Some \nof the critical\
    \ factors like heat, rain, physical misbehavior by \nhuman or animals. \nSensor\
    \ placement \nSensor node placement is an essential problem in \nconstructing\
    \ the network topologies process using parameter \ncomprising the sensor. It required\
    \ to creating in designing and \nperforming smartly when WSN need to established\
    \ in \nreliability and autonomously. Sensors are need covered and \nplaced in\
    \ position in measuring parameter without the need \nfor hindrance. Example sensor\
    \ light is deployed in height and \nneglected the close plant leaves. Accurate\
    \ measures put in \nground-based on the level of water and moisture content on\
    \ \nthe ground. Deallocate of the sensor in various positions based \non durable\
    \ wind and water currents, need to place \nappropriately in required form with\
    \ afford nodes. \nSome Of The Essential Application In Agriculture And \nFarming\
    \ Using WSNs   \nIrrigation management system \nNow a day’s agriculture needs\
    \ better irrigation framework \nin optimizing the use of water in the farming\
    \ process. \nRequired structure in groundwater level as an alarming \nreduction.\
    \ Cost effective and water usage are the some of the \nmicro irrigation approaches.Moreover,\
    \ micro irrigation is \nbetter based on soil formation and environment. WSNs placed\
    \ \nwith coordinating techniques. \nFarming Monitoring framework \n Now different\
    \ useful structure and device make use in \nfarming. A better context is to maintain\
    \ this method to secure \nthe whole operation, process automated for farming.\
    \ Remote \nmonitoring framework assists in better management in \ncolossal agriculture\
    \ domain. The input of traditional data like \nsatellite images, weather forecast,\
    \ and performance system \nwill be better. \nPest and control disease  \nUsage\
    \ of pesticides and fertilizer assist in improving the \ncrop quality and cost\
    \ Control. Moreover, utilization of \npesticides can control the occurrence of\
    \ the crop in pests. For \nanalyzing the environment like temperature, humidity,\
    \ and \nspeed of the wind. WSNs can be monitor and analysis the \nevents over\
    \ a field of interest. \nHorticulture \nHorticulture mainly based on low scale\
    \ or less intensity \nfarming. Cultivation productions, distribution, usage of\
    \ \n102 \n \nflower, \nfruit, \nand \nornamentals \nare \nhandling \nin \nHorticulture.The\
    \ primary research describes in this section \nabout greenhouse and Horticulture.\
    \ The Present state process \nof plant nursery helps based on usage of sensor\
    \ network \nanalyzed in temperature, humidity, soil moisture, and \ntemperature.\
    \ It also used for the handle and identified the plant \ndiseases. \nTelosB sensor\
    \ motes and Ech2o soil moisture sensor are \nintroduced for context-aware irrigation\
    \ activity framework. \n30%-50% of conservation of water analyze in green area\
    \ \nirrigation by using field test. \nGrowth is to decrease the cost of irrigation\
    \ activity using \nsensor node and WSAN protocol. Light, humidity, soil \nmoisture\
    \ sensor are irrigation monitor using five sensor nodes. \nNodes are constructed\
    \ based on Atmel ATMega 64L, AVR \nmicrocontroller referable afford with six sleep\
    \ modes like Idle, \nADC, Noise Reduction, Power-save and down, enhance, \nStand-by.\
    \ Some of less power feature consumption like XBee \nand OEM RF module. Some advantage\
    \ provides for power \nconsumption; cost properties are construct instead of the\
    \ size \nof sensor mode. \nViticulture \nThe essential usage of sensor network\
    \ performs in \nVineyards. They briefly explain the variety of sensor network\
    \ \nconfigurations and its application based on various priorities \nin the vineyard.\
    \ It takes more than six months to construct \nwith 65 nodes and multi-hop WSN.\
    \ Gathering of data mainly \nused of two need aspects in the production of wine\
    \ like heat \nsummation and essential frost damage. \nIt provides feasibility\
    \ in ZigBee, we using remote sensor \nnetwork called as MPWiNodeZ, propose for\
    \ precision \nviticulture. Solar power, wind power, Hypro power are \nbatteries\
    \ used for recharging the harvest energy platform. \nGreen House \nMonitoring\
    \ environment and greenhouse controlling are \nessential aspects but not depends\
    \ on the natural agent. By \ncollecting both in and out climate data in the greenhouse\
    \ for \nmuch solar power, wireless acquisition station (SPWAS) used \nto construct\
    \ wireless data acquisition network. Connection \nusing RF links used as a base\
    \ station, up to 32 SPWASs. The \nCollection of climate data successfully without\
    \ any errors. \nGrowth in both hardware and software acquisition framework \n\
    depends on Bluetooth technology. Temperature and relative \nhumidity take a measurement.\
    \  \nFuture Aspect of WSNs   \nThe essential application used in WSNs in agriculture\
    \ and \nfarming. \nThe \npresent \nscenario \nworks \nin \nirrigation \nmanagement,\
    \ Greenhouse, Viticulture, Horticulture, pest \ncontrol disease, farming monitoring\
    \ framework. \nSome of the factors needs to improve in WSNs in future  \nCost\
    \ \n Provides of less cost result ever suitable for enhancing the \nscope and\
    \ stretch of the application. \nAutonomous operation \nThe Longtime result of\
    \ the provision for independent \noperation needs for future purpose. \nIntelligence\
    \ \nThe changes in the result in providing various challenges \nfor preserving\
    \ the energy in real time process. \nPortability \nPortability essential using\
    \ in the application and framework \nlike Sip (System in package) and SoC (System\
    \ on Chip) are \ntechnologies applied for consideration. \nLow maintenance \n\
    Low maintenance potentially used for construct framework \nit needs to the less\
    \ maintained effort. It performs a long time \nbased on some average cost. \n\
    Energy –efficiency \n To get assurance in enhance lifetime with the autonomous\
    \ \noperation, result required to get improved energy efficient \nincorporating\
    \ with intelligent algorithms. \nRobust architecture \n The current arising application\
    \ needs to assure the required \noperation for robust and fault tolerant structure.\
    \ \nEase of operation \nThe application requires using easy and simple to manage.\
    \ \nMostly non – the technical person will be the end-user for the \napplications.\
    \ \nInteroperability \nIt \nvaries \nbetween \nthe \ndifferent \ncomponent \n\
    and \ncommunication technologies for improving the entire \nfunctionality of the\
    \ framework. \nSome additional challenges in the global scenario and \nIndian\
    \ scenario with WSNs in agriculture. Listing some \npotential problems in Indian\
    \ agriculture. \nCost:  Sensor cost is higher, as it combined with an \napplication\
    \ like LMISs. \nVariable climate and soil: Most significant part in \nconstructing\
    \ the WSNs in agriculture in India varies in \ntemperature, types of land. Some\
    \ parameter needs to perform \nin function properly with other location also.\
    \ \nSegmented land structure: \nSome specific challenge in Indian agriculture\
    \ using WSNs \nlike irrigation management. \nAverage farmer requirement \n Average\
    \ land having per farmer is less than global status \nbecause of the necessity\
    \ of smaller and personalized \nframework. \nOverall plan \n Structure of segment\
    \ land and farmer need to get success \nin automatic farming and agriculture.\
    \ \nFuture Application  \nIn a Current scenario more advance new technique and\
    \ \nconcepts like sensor cloud technology, big data analytics, \nInternet of thing\
    \ (IoT). \nSensor cloud computing \nSensor cloud computing mainly based on Land,\
    \ WSN \napplication combined with cloud computing. It connected \nsystem in getting\
    \ an advantages WSNs for better power and \nstorage. Moreover, sensor cloud provides\
    \ better data \nmanagement and control accessing in more resource usage. \nSome\
    \ essential application used in agriculture domain like \n• \nCloud providers\
    \ in storing the spatial difference in \nsoil and environment platform with various\
    \ season \nrequired to arises. \n• \nMobile sensor cloud services used for managing\
    \ the \ncrop monitoring and yield prediction. \n• \nConstruction of sensor cloud\
    \ manages vast field \nusing smart irrigation framework. \n103 \n \n• \nTo construct\
    \ sensor cloud control environment \nframework for breaking season production\
    \ of \ngreenhouse farming like vegetable and flowers. \nBig data analytics \n\
    Big data analytics applied to large data with many data \ntypes. Hidden correlations,\
    \ unknown pattern, business \ntrends.Disaster is possible techniques used in big\
    \ data \nanalytics. \n• \nConstruct growth of crop and managing disease \nmodel\
    \ depends on farm data. \n• \nWeb analytics service used by the farmer for better\
    \ \ninformation about agriculture. \n• \nFor large agriculture field, the farmer\
    \ used \nequipment control framework. \n• \nDecision affords service for better\
    \ productivity in the \ncrop at low cost with climate information and large-\n\
    scale agriculture. \n• \nGovernment and industries perform optimal policy \nin\
    \ determining big data analytics. \nInternet of things \nIoT provides an essential\
    \ result with a different application. \nSome critical IoT based agriculture application\
    \ like  \n• \nRFID tags used for cost-effective and agriculture \nsupply chain\
    \ management. \n• \nAnimal process monitor by remote. \n• \nUser rate and time\
    \ depend on control of remote and \nduration for spraying pesticide. \n• \nLeak\
    \ detection and remote water flow are access and \nmaintain the vast field for\
    \ the supply of water. \n \nCONCLUSION \nWe describe Virtualization using wireless\
    \ sensor Network \nin Agriculture field. WSNs emerging approach in commercial\
    \ \napplications \nlike \nHealthcare, \nagriculture, \nIndustries. \nVirtualization\
    \ in sensor network offers more flexibility, cost, \neffective solution; promote\
    \ diversity,  security, and \nmanageability. We describe the construction of virtualization\
    \ \nin WSNs with some necessity like Network heterogeneity \nIsolation, \nManagement,\
    \ \nScalability, \nStability \nand \nconvergence, programmability, legacy support.\
    \ Some \nchallenges in implementing VSNs such as Interfacing, \nmanaging limited\
    \ resources, resource discovery, quality of \nservices and experience, security,\
    \ resource scheduling, \nNaming and addressing, Virtual sensor network operation\
    \ and \nmanagement, etc. Analysis performance of WSNs in \nagriculture based on\
    \ Dynamic topology configuration, fault \ntolerance, context awareness, scalability,\
    \ Node heterogeneity, \nautonomous operating nodes, and information security and\
    \ \nexplains with the sensor used in agriculture in soil and \nweather. The parameter\
    \ used in the soil like temperature, \nmoisture, the flow of water, conductivity,\
    \ salinity and utilized \nin weather like temperature, wind speed, direction,\
    \ humidity \nand atmospheric pressure. WSNs has some issues in \nperforming in\
    \ agriculture domain like energy consumption, \nData acquisition, sampling and\
    \ transmission, fault tolerance, \nsize and housing in sensor nodes, sensor placement\
    \ and \nspecific application in agriculture farming by WSNs such as \nIrrigation\
    \ management, Farming monitoring, Pest control, \nhorticulture, viticulture, greenhouse.\
    \ Future aspect of WSNs \nin Big data analytics, IOT, Sensor cloud computing.\
    \ \nREFERENCES \n[1] \nIslam, M. M., & Huh, E. N. (2012). Virtualization in Wireless\
    \ Sensor \nNetwork: Challenges and Opportunities. JNW, 7(3), 412-418. \n[2] \n\
    Keshtgary, M., & Deljoo, A. (2012). An efficient wireless sensor \nnetwork for\
    \ precision agriculture. Canadian Journal of Multimedia and \nWireless Networks,\
    \ 3(1), 1-5. \n[3] \nOthman, M. F., & Shazali, K. (2012). Wireless sensor network\
    \ \napplications: A study in environment monitoring system. Procedia \nEngineering,\
    \ 41, 1204-1210. \n[4] \nOjha, T., Misra, S., & Raghuwanshi, N. S. (2015). Wireless\
    \ sensor \nnetworks for agriculture: The state-of-the-art in practice and future\
    \ \nchallenges. Computers and Electronics in Agriculture, 118, 66-84. \n[5] \n\
    Zulkifli, C. Z., & Noor, N. N. (2017). Wireless Sensor Network and \nInternet\
    \ of Things (IoT) Solution in Agriculture. Pertanika Journal of \nScience & Technology,\
    \ 25(1). \n[6] \nAkyildiz, I. F., Su, W., Sankarasubramaniam, Y., & Cayirci, E.\
    \ (2002). \nWireless sensor networks: a survey. Computer networks, 38(4), 393-\n\
    422. \n[7] \nHill, J., Horton, M., Kling, R., & Krishnamurthy, L. (2004). The\
    \ \nplatforms are enabling wireless sensor networks. Communications of \nthe ACM,\
    \ 47(6), 41-46. \n[8] \nValente, A., Morais, R., Serodio, C., Mestre, P., Pinto,\
    \ S., & Cabral, \nM. (2007, October). A ZigBee sensor element for distributed\
    \ \nmonitoring of soil parameters in environmental monitoring. In Sensors, \n\
    2007 IEEE (pp. 135-138). IEEE. \n[9] \nYoubing, Z. R. G. G. F., & Chengfei, L.\
    \ (2008). Realization of \nCommunication in Wireless Monitoring System in Greenhouse\
    \ Based \non IEEE802. 15.4 [J]. Transactions of the Chinese Society for \nAgricultural\
    \ Machinery, 8, 029. \n[10] Kim, Y., Evans, R. G., & Iversen, W. M. (2008). Remote\
    \ sensing and \ncontrol of an irrigation system using a distributed wireless sensor\
    \ \nnetwork. IEEE transactions on instrumentation and measurement, \n57(7), 1379-1387.\
    \ \n[11] Li, L., Li, H. X., & Liu, H. (2009). A greenhouse environment \nmonitoring\
    \ system based on the wireless sensor network. Transactions \nof the Chinese Society\
    \ for Agricultural Machinery, 9(40), 228-231. \n[12] Corke, P., Wark, T., Jurdak,\
    \ R., Hu, W., Valencia, P., & Moore, D. \n(2010). Environmental wireless sensor\
    \ networks. Proceedings of the \nIEEE, 98(11), 1903-1917. \n[13] Yu, X., Wu, P.,\
    \ Han, W., & Zhang, Z. (2013). A survey of wireless \nsensor network infrastructure\
    \ for agriculture. Computer Standards & \nInterfaces, 35(1), 59-64. \n[14] Abbasi,\
    \ A. Z., Islam, N., & Shaikh, Z. A. (2014). A review of wireless \nsensors and\
    \ networks' applications in agriculture. Computer Standards \n& Interfaces, 36(2),\
    \ 263-270. \n[15] Rawat, P., Singh, K. D., Chaouchi, H., & Bonnin, J. M. (2014).\
    \ \nWireless sensor networks: a survey on recent developments and \npotential\
    \ synergies. The Journal of Supercomputing, 68(1), 1-48. \n[16] Ojha, T., Misra,\
    \ S., & Raghuwanshi, N. S. (2015). Wireless sensor \nnetworks for agriculture:\
    \ The state-of-the-art in practice and future \nchallenges. Computers and Electronics\
    \ in Agriculture, 118, 66-84. \n[17] Zhang, Z., Wu, P., Han, W., & Yu, X. (2017).\
    \ A remote monitoring \nsystem for agricultural information based on the wireless\
    \ sensor \nnetwork. Journal of the Chinese Institute of Engineers, 40(1), 75-81.\
    \ \n[18] Sun, H., Zhang, J., Sun, G., & Li, Y. (2017). Agricultural Traceable\
    \ \nand Marketing System Based on iOS-Platform and Wireless Sensor \nNetwork.\
    \ Journal of Computer and Communications, 5(06), 45. \n[19] Rubala, J. I., Anitha,\
    \ D., & Student, P. G. (2017). Agriculture Field \nMonitoring using Wireless Sensor\
    \ Networks for Improving Crop \nProduction. International Journal of Engineering\
    \ Science, 5216.  \n[20] Prabhu, B., Balakumar, N., & Antony, A. J. (2017). Wireless\
    \ Sensor \nNetwork Based Smart Environment Applications. \n[21] Mondal, A., Misra,\
    \ I. S., & Bose, S. (2017, April). Building a low-cost \nsolution using wireless\
    \ sensor network for agriculture application. In \nInnovations in Electronics,\
    \ Signal Processing and Communication \n(IESC), 2017 International Conference\
    \ on (pp. 61-65). IEEE \n[22] Patokar, A. M., & Gohokar, V. V. (2018). Precision\
    \ Agriculture \nSystem Design Using Wireless Sensor Network. In Information and\
    \ \nCommunication Technology (pp. 169-177). Springer, Singapore. \n \n"
  inline_citation: '>'
  journal: 'JOIV : International Journal on Informatics Visualization'
  limitations: '>'
  pdf_link: http://joiv.org/index.php/joiv/article/download/118/99
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: Research and development of virtualization in Wireless sensor networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/s11042-019-7212-5
  analysis: '>'
  authors:
  - Yuha Park
  - Myung Hwan Na
  - Wanhyun Cho
  citation_count: 4
  full_citation: '>'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Multimedia Tools and Applications
    Article Determination on environmental factors and growth factors affecting tomato
    yield using pattern recognition techniques Published: 29 January 2019 Volume 78,
    pages 28815–28834, (2019) Cite this article Download PDF Access provided by University
    of Nebraska-Lincoln Multimedia Tools and Applications Aims and scope Submit manuscript
    Yuha Park, Myung Hwan Na & Wanhyun Cho   425 Accesses 3 Citations Explore all
    metrics Abstract In the area of smart farming, a big data is being created using
    information and communication technologies such as the Internet of Things and
    Cloud computing. Drawing clear and reliable information from analyzing the big
    data is a challenge task for farmers, researchers, consultants and participants
    in the agricultural production business. Now, however, there are no many researches
    as much as the participants need. The paper suggests a statistical application
    approach for seeking the useful information of the agricultural big data. In the
    paper the dataset is composed in order to conduct quantitative analysis. From
    various radars and sensors in researched greenhouses, five environmental factors
    are measured. In addition to using those environmental factors, a dataset is built
    through collecting four growth factors, and yield of tomato. Using pattern recognition
    techniques such as dynamic time warping and multidimensional scaling the paper
    investigates the relationships among three factors, the environmental factors,
    the growth factors, and the tomato yield in order to find the most important environmental
    and growth factors with the aim to increasing tomato production in facility farms.
    Through analyzing the observed dataset using those pattern recognition techniques,
    the similarities of temporal sequences among the given patterns of the factors
    can be measured. Therefore the paper determines the environmental factors and
    the growth factors that have a strong influence on tomato production currently
    grown in smart farming greenhouses. Using the analysis results, the paper proposes
    data-driven cultivation strategies for managing the environmental and growth factors
    to increase the productivities of tomato. 1 Introduction Recently, agriculturally
    advanced countries are making efforts to improve productivity and quality through
    combining agriculture and advanced technologies, such as factory type gardening,
    precision agriculture using GPS, and smart farming with Internet of Things (IoT)
    sensors. Smart farming is the phenomenon in the result of propelling rapid developments
    in the IoT and Cloud computing [4, 15, 16]. Farmers through harvesting crops using
    smart farming system can check growth environment of crops based on real-time
    data, and control the complex environmental conditions in order to ensure the
    highest productivity even with a small amount of labor [19]. Therefore, we can
    measure the environmental growth information of crops from various sensors in
    real time. In addition, by using the collected information, an optimal growth
    management system can be constructed. The system can increase dramatically the
    productivity and the quality of crops by automatically managing crops. Smart farming
    is introducing and spreading with government-led in Korea. As the representative
    crop of smart farming, tomato is one of the highly nutritious and a very popular
    food source, so it is a very high value-added fruit. This trend is increasing
    the demand for tomato. Therefore, tomato cultivation is becoming a high value-added
    business for farmers, and farmers are paying more attention to high-quality, high-yielding
    cultivation techniques [3, 13]. For this reason, farmers are interested in developing
    smart farming technology that can improve the tomato yield by combining agriculture
    and new technologies. Using the IoT sensors and Cloud computing technologies,
    we have been collecting big data from several facility farms (smart farming) in
    the area of Korea since 2014. Unfortunately, because smart farming and big data
    are relatively new concepts, knowledge about their applications and implications
    for research and development is not widely spread [18]. Therefore there are very
    few previous studies related to investigate the relationships between yields of
    crops and environmental growth factors using agricultural big data created from
    smart farming. Existing smart farming system concentrated on hardware such as
    plantation automation, while it is necessary for researches to analyze optimal
    growth conditions based on big data and to integrate them into the field of cultivation.
    For example, it give us useful to utilize big data in order to control temperature,
    humidity, and so on in the facility farms. There is necessary to develop the data-based
    smart farming that improve the reliability of data analysis and increase the number
    of agricultural products with precise environmental control. In this paper, so
    our aim is to identify the possibility of applying the agricultural big data into
    a statistical model with quantitative approach and pattern recognition techniques
    in the purpose of decision making such as increasing the crop production. In addition,
    we come up with the idea of data-driven cultivation strategies with analyzing
    the data. We reviewed studies implemented for researching the influential environmental
    factors with applying the quantitative models in the purpose of elevating the
    productivity and the quality of tomato. Using a generalized randomized block design,
    Estrada-Oritz et al. [6] evaluated the effect of different percentages of phosphite
    added to the nutrient solution on the concentration of total P in leaves and the
    activation of the antioxidant system, which determines the concentration of anthocyanin,
    yield, pH, electrical conductivity, and tomato fruit size. They suggest that supplying
    20% phosphite in the nutrient solution improves tomato performance and that supplying
    30% phosphite activate dense mechanisms in the plants, which increases the concentration
    of anthocyanins and improves qualities of tomato. Letourneau et al. [11] performed
    a field-scale experiment to simultaneously evaluate the impacts of three irrigation
    management scales and a pulsed water application method on tomato yield and water
    use-efficiency. The results of their experiment showed that spatial variability
    of the soil properties at the experimental site was important but most likely
    not enough to influence the crop response to irrigation practices. Boyer et al.
    [1] carried out studies to investigate whether arbuscular mycorrhizal fungi (AMF)
    could improve tomato production in coir under low nitrogen input and regulated
    deficit irrigation. Application of AMF led to an appreciable increase in the size
    and number of class 1 fruit, especially under either deficient irrigation or low
    nitrogen input condition. Fan et al. [7] evaluated the effects of plastic mulch
    (PM) and plastic mulch with row covers (PMRC) versus the conventional MRS, on
    total yield, yield per plant, average fruit weight, soluble solids content, treatable
    acidity, firmness, fruit postharvest quality, total phenolic content, total antioxidant
    content, oxygen radical absorbance capacity and phenolic composition analyzed
    by high-performance liquid chromatography in tomato selection ‘SJ8976–1’ at different
    harvest times during the growing season. Therefore, based on previous studies,
    we propose a method to identify the various environmental factors affecting tomato
    production using the pattern recognition methods such as dynamic time warping
    (DTW) and multidimensional scaling (MDS). In our study, firstly, we will roughly
    examine the dataset including the environmental factors, growth factors, and the
    tomato yields through various graphs. Second, we will determine the relationships
    between environmental factors, growth factors and tomato yield using DTW. Third,
    we will identify the environmental factors and growth factors that have the greatest
    impact on tomato yields for each farm using the MDS. Finally, based on the results
    of the analysis, we will suggest data-driven cultivation techniques to increase
    the tomato production. 2 Dataset and methods 2.1 Dataset 2.1.1 Data capture and
    collection The dataset used in our study including five environmental factors,
    four growth factors and tomato yield is collected from six greenhouse farms (smart
    farming) from the 3rd week of August, 2017 to the 4st week of July, 2018 in South
    Korea. Tomatoes were mostly harvested from the 3rd week of November until the
    1st week of July of the following year at each farm. Table 1 shows the 1st harvest
    date and last harvesting date of the tomato species grown in the each region.
    Table 1 Tomato data for 1st harvest date, Last harvest date, grown region and
    varieties type Full size table Fig. 1 shows the architecture of the smart farming
    system. Each environmental factor is measured automatically every single minutes
    using various radars and sensors. The measured values of the environmental factors
    in the greenhouse are firstly converted from analog to digital and then transmitted
    to the computer. Using this system the cultivation environments in the greenhouse
    is controlled automatically. Also it can be possible that all environmental factors
    such as carbon dioxide, temperatures, soil temperature/humidity and surface humidity
    of crops, which is detected by the sensors, are controlled multi-interactively.
    That is, it is the complex environment-control system. The big data received from
    the system is cumulated in the server of farm. So we can monitor the signal from
    the data, analyze the important environmental and growth factors to affect the
    tomato yield, and calculate the optimum values of the environmental factors and
    the growth factors. Fig. 1 Architecture of smart farming system Full size image
    The growth factors were measured once a week for our study. Because there were
    limitations to measure automatically using image processing technique or robotic
    technologies, we measured the growth information by hand as shown in Fig. 2. In
    the study, we selected five samples among the tomato plants in the greenhouses.
    With the standards overall the data measurement process, we conducted the measurement
    to acquire reliable and precise data. The measurement records was converted from
    analog to digital and then saved to the computer. When the pre-data processing
    is necessary, we used outlier detection method and anomaly detection algorithm
    to adjust the measurement error and the missing values. Also the production volume
    was recorded as digital in the computer at intervals of two or three days after
    the tomatoes were harvested. Fig. 2 How to measure growth factors Full size image
    2.1.2 Data integration After pre-data processing of deduplication, de-noising,
    cleaning, and transformation into the collected data, we organized the dataset.
    We used the R and the Python for organizing the dataset and conducting the pre-data
    processing. The specific factor names and units of measurement used in our study
    are given in Table 2. The dataset consists on largely three parts: the tomato
    yield, the environmental factors, and the growth factors. The environmental factors
    are inside temperature, DIF (difference between the highest temperature and the
    lowest temperature on a day), inside humidity, CO2 level, and cumulative solar
    radiation amount. And the growth factors are leaf number (the number of the leaves),
    leaf length, leaf width, and stem width. We calculated all variables into weekly
    average values in order to apply our model using the pattern recognition techniques.
    Table 2 The list of response variable and explanatory factors Full size table
    2.2 Methods 2.2.1 Pattern recognition techniques The dynamic time warping algorithm
    (DTW) has earned its popularity by being extremely efficient as the time-series
    similarity measure which minimizes the effects of shifting and distortion in time
    by allowing elastic transformation of time series in order to detect similar shapes
    with different phases [14]. Given two time series X = (x1, ⋯, xM), M ∈ ℕ and Y = (y1, ⋯, yN),
    N ∈ ℕ respectively by the sequences of values, the DTW yield optimal solution
    in the O(MN) time which could be improved further through different techniques
    such as multi-scaling. The only restriction placed on the data sequences is that
    they should be sampled at equidistant points in time. If sequences are taking
    values from some feature space Φ, than in order to compare two different sequences
    X, Y ∈ Φ, one needs to use the local distance measure which is defined to be a
    function: $$ d:\Phi \times \Phi \to \mathfrak{R} $$ (1) Intuitively d has a small
    value when sequences are similar and large value if they are different. Since
    the dynamic programing algorithm lies in the core of DTW, it is common to call
    this distance function as the cost function and the task of optimal alignment
    of the sequences becoming the task of arranging all sequence points by minimizing
    the cost function. Algorithm starts by building the distance matrix D ∈ ℝM × N
    representing all pairwise distances between X and Y. This distance matrix called
    the local cost matrix for the alignment of two sequences X and Y: $$ D\in {\mathbb{R}}^{M\times
    N}:{d}_{ij}=\parallel {x}_i-{y}_j\parallel, i\in \left[1:\mathrm{M}\right],j\in
    \left[1:\mathrm{N}\right]. $$ (2) Once the local cost matrix built, the algorithm
    finds the alignment path which runs through the low-cost areas – valleys on the
    cost matrix. This alignment path (or warping path, or warping function) defines
    the correspondence of an element xi ∈ X to yj ∈ Y following the boundary condition
    which assign first and last elements of X and Y to each other. Fig. 3 shows the
    optimal warping path alignment of the two given time series. Fig. 3 The optimal
    warping path alignment of two given time series Full size image With dtw package
    of R we can calculate a time series alignment with a variety of continuity constraints,
    restriction windows, endpoints, local distance definitions, and so on. It provides
    also functions for visualizing alignment and constraints using several classical
    diagram types. The warping distances measure the similarity between two temporal
    sequences. So we interpret that the smaller be the distance value, the stronger
    effect for tomato yield [8, 9]. Second, the multidimensional scaling (MDS) [10]
    can be considered to be an alternative to factor analysis. In general, the goal
    of the analysis is to detect meaningful underlying dimensions that allow the researcher
    to explain observed similarities or dissimilarities (distances) between the investigated
    objects. In factor analysis, the similarities between objects are expressed in
    the correlation matrix. With MDS, we can analyze any kind of similarity or dissimilarity
    matrix, in addition to correlation matrices. In general, MDS attempts to arrange
    objects in a space with a particular number of dimensions (two-dimension or three-dimension)
    so as to reproduce the observed distances. As a result, we can explain the distances
    between objects in terms of underlying dimensions. MDS is a way to rearrange objects
    in an efficient manner, so as to arrive at a configuration that best approximates
    the observed distances. It actually moves objects around in the space defined
    by the requested number of dimensions, and checks how well the distances between
    objects can be reproduced by the new configuration. In more technical terms, it
    uses a function minimization algorithm that evaluates different configurations
    with the goal of maximizing the goodness-of-fit. The most common measure that
    is used to evaluate how well (or poorly) a particular configuration reproduces
    the observed distance matrix is the stress measure. The raw stress value of a
    configuration is defined by: $$ stress=\sqrt{\frac{\sum \limits_{ij}{\left({d}_{ij}-{\widehat{d}}_{ij}\right)}^2}{\sum
    \limits_{ij}{d}_{ij}^2}} $$ (3) In this formula, \( {\widehat{d}}_{ij} \) is predicted
    distance based on the MDS model, and dij stands for the input data (i.e. observed
    distances). The predicted distance \( {\widehat{d}}_{ij}=f\left({d}_{ij}\right)
    \) indicates a nonmetric, monotone transformation of the observed input data (distances).
    Thus, it will attempt to reproduce the general rank-ordering of distances between
    the objects in the analysis. Here, the smaller the stress value, the better is
    the fit of the reproduced distance matrix to the observed distance matrix. With
    cmdscale() function of the R which comes with the default function, classical
    scaling can be performed. It is a most common function so we used the cmdscale()
    to perform the MDS. Also, with plot() function of the R the graphic which represents
    the distances between the factors in a two-dimensional space can be obtained.
    In this study, we used the correlation coefficient of the variables as the distance
    matrix. 2.2.2 Conceptual model In this study, the conceptual model was set up
    and analyzed as shown in Fig. 4. Here, we can express the mutual progress steps
    between the environmental factors, the growth factors and the tomato yield. We
    aim ultimately to find the influential factors on tomato yield in our study. The
    environmental factors affect the growth factors, and the growth factors will finally
    affect the tomato yield. Finding vital few `s (key factors) among the various
    environmental and growth factors affecting the tomato yield in the tomato production
    models mutually correlated with these various factors helps to make decisions
    about growth and reproduction of tomato. Fig. 4 The process of impacts on various
    factors Full size image We use the DTW and the MDS to identify the vital few’s
    and appropriate levels of environmental management and growth environment. The
    DTW and the MDS are powerful methods of identification for objects what we want
    to find as the pattern recognition techniques. Zhen et al. [20] analyzed that
    electrical current signals based on the DTW has a significant potential to extract
    weak signals and identified the presence of incipient faults of the downstream
    mechanical equipment of motor drives. Tuzcu and Nas [17] proposed that the DTW
    can be a stronger analysis tool for recognition of ECG changes that are noted
    in life-threatening arrhythmias in order to classify and identify electrocardiograms
    (ECGs) of various heart rhythm disturbances. Also the DTW is used for researches
    in the word recognition or speech recognition [2, 12]. Costa et al. [5] introduced
    a scalable, distributed weighted-MDS that adaptively emphasizes the most accurate
    range measurements and naturally accounts for communication constraints within
    the sensor network for a wide variety of wireless sensor network applications.
    Finding the vital few’s using the DTW and the MDS is first attempt in the field
    of agricultural research. So it will be useful for researches on key factors for
    the development of crop production model using various statistical and big data
    analysis techniques in the future. The process of exploring key factors through
    the estimation of productivity based on changes in the environmental factors and
    the growth factors as follows. First of all, we use the DTW and the MDS to extract
    the environmental factors that have the greatest impact on the tomato yield, and
    secondly to find the growth factors that have the greatest influence on the tomato
    yield. Moreover, we identify the environmental factors that have the greatest
    influence on the growth of tomato. Finally, using the DTW and the MDS, we select
    the most important factors affecting the tomato yield among the various factors,
    and using the derived results, we present a new cultivation strategy that can
    improve the tomato yield. That is, a proposed strategy is a data-driven cultivation
    strategy. 3 Experimental results and discussion 3.1 Farm clustering First, we
    plotted and compared the tomato yield of the six farms. From these six line graphs
    as shown in Fig. 5, we can see roughly how the tomato yield was produced. In the
    farm A and B, we can see that tomato yield of two farms are the lowest than that
    of other farms. There are higher tomato yield at the beginning of the harvest
    in the farm C and D, while there are the medium values at this time in the farm
    E and F. But after the middle point of the harvest, tomato yield in the farm E
    and F are higher than that of the farm C and D. We can also see that the tomato
    yield patterns of the farm A and B are roughly similar, while the pattern of the
    other farms is different from that of the two farms. Also, the patterns of the
    farm C and D are roughly similar because the variation of the tomato yield is
    high but it is in the certain range. However, the patterns of the farm E and F
    are similar rather than those of the other farms since there are two highest yielding
    parts of the harvest—the beginning and the later part of the harvest. Fig. 5 The
    line graphs of tomato yield in farm a (red ●), b (yellow ▲), c (green ■), d (grey
    ○), e (blue △), and f (pink □) Full size image Next, we applied a one-way ANOVA
    to test whether there are differences in the tomato yield of the six farms. Table
    3 shows mean and standard deviation for the tomato yield on each farm. From the
    result of the ANOVA test, we note that the mean of the tomato yield on farm D
    is the highest (2.39 kg/3.3m2) while the mean of the tomato yield on farm B is
    the lowest (0.264 kg/3.3m2). The means of the tomato yield differ significantly
    according to ANOVA test (p = 0.05). Table 3 ANOVA table for comparison on means
    of tomato yield in six farms Full size table Here we applied agglomerative hierarchical
    cluster analysis using tomato yields from each farm to verify the results derived
    so far. Fig. 6 shows the result of the agglomerative hierarchical clustering analysis
    on the tomato yield. There are three cluster as the result of the agglomerative
    hierarchical clustering analysis: cluster 1–farm A and B (the lowest production
    group), cluster 2–farm C and D (the highest production group), cluster 3–farm
    E and F (the middle production group). These results are consistent with the results
    derived from the line plots for the tomato yield in the Fig. 5. We expected by
    each farm that there exist the differences with the tomato production volume of
    a harvest period and the patterns of the environmental and growth factors. So
    analyzing the patterns of each factor by the individual farms and clusters allows
    us to draw useful ideas for identification of the differences. Next, we performed
    the analysis on relationships and effects between each factors. Fig. 6 The result
    of Agglomerative Hierarchical Clustering analysis on tomato yield Full size image
    3.2 Effect of Environmental factors on tomato yield We plotted line graphs to
    see how the environmental factors are managed during the tomato growing season
    at each farm. Fig. 7 shows the line graphs for the five environmental factors
    of each farm. The inside temperature is only maintained at the same shape in the
    six farms, but the other environmental factors except the inside temperature are
    different pattern in all six farms. Fig. 7 The measured values of five environmental
    factors on each farm: a (red ●), b (yellow ▲), c (green ■), d (grey ○), e (blue
    △), and f (pink □) Full size image Next, we used the DTW and MDS techniques to
    determine the influential factors which of the five environmental factors are
    most influential on tomato yield at the each farm. Fig. 8 shows the results of
    applying DTW to find out the relationships between tomato production and five
    environmental factors in each farm. In addition, Fig. 9 shows the results of applying
    MDS in order to understand the relationship between the tomato yields of six farms
    and five environmental factors. From these two figures, we can see two facts.
    First, from the plot of DTW in Fig. 8, we can also note that the order of environmental
    factors affecting tomato yields are solar radiation, inside temperature, inside
    humidity, CO2 level and DIF, and secondly, from the MDS plot in Fig. 9 we can
    see that the yields of the six farmers are most affected by any environmental
    variables. Fig. 8 The warping paths between tomato yield and five environmental
    factors on each farm Full size image Fig. 9 The multidimensional scaling plots
    on between five environmental factors and six farms. The factors in each plot
    as follow: ×1-inside temperature, ×2-DIF, ×3-inside humidity, ×4-CO2 level, ×5-cumulative
    solar radiation, y-tomato yield Full size image Next, we summarize the distance
    calculated from the DTW and MDS methods as the Table 4 in order to more precisely
    numerically investigate the relationship between the tomato yield and the environmental
    factors. Table 4 shows the distances between the tomato yield of each farm and
    five environmental factor derived by using DTW and MDS methods. The smaller the
    distance, the greater the impact on the tomato yield. Here, from the results shown
    in Table 4, we note that the order of environmental factors that have the greatest
    effect on the tomato yield is in order of solar radiation, inside temperature,
    inside humidity, CO2 level, and DIF. In particular, CO2 level has the greatest
    influence on Farm B, which has low tomato yields. Therefore, we can see that the
    maintaining the solar radiation and the inside temperature while keeping the CO2
    level properly is a cultivation method that can increase the yield. Table 4 The
    distances between tomato yield and each environmental factor using DTW and MDS
    Full size table Furthermore, we computed the 95% confidence interval for each
    factor to determine the optimal level for the five environmental factors in each
    three clusters. Table 5 shows the 95% confidence intervals for the environmental
    factors by clusters. From this table, we note that the average values of the five
    environmental factors that can maximize tomato yield based on the best-yielding
    group (Farm C and D) are inside temperature 20 °C, DIF 13 °C, inside humidity
    76%, and solar radiation 1450 J/cm2. Table 5 The 95% confidence intervals for
    five environmental factors based on farm C and D Full size table 3.3 Effect of
    growth factors on tomato yield We plotted the measured values over time to see
    how the four growth factors of tomato grew during the growing season by six farms.
    Fig. 10 shows the status of growth factors of tomato grown in each farm. The patterns
    of plant length, leaf number, leaf length, leaf width and stem width are different
    in all six farms. From the results shown in Fig. 10, we can see that the status
    of the four growth factors in farm A and B with the low yielding tomatoes are
    gradually falling in the growing period. However, in other farms (C-F) with high
    tomato yield, the state of the four growth factors remained constant in the growing
    period. Fig. 10 The measured values of four growth factors on each farm: a (red
    ●), b (yellow ▲), c (green ■), d (grey ○), e (blue △), and f (pink □) Full size
    image Next, we performed the DTW and MDS methods on the growth dataset and the
    tomato yield data to determine the effect of the four growth factors on the tomato
    yield of each farm. Fig. 11 shows the warping paths between the tomato yield and
    the four growth factors on each farm. Fig. 12 also shows the results of applying
    the MDS method for the tomato yield data and growth dataset of each farm. From
    these two figures, we can see that the order of growth factors that have a large
    effect on the tomato yield are given as leaf number, leaf length, leaf width,
    and stem width. Fig. 11 The warping paths between tomato yield and growth factors
    on farm C, D, E, and F Full size image Fig. 12 The multidimensional scaling plots
    between the growth factors and the tomato yield. The factors in each plot as follow:
    z1-leaf number, z2-leaf length, z3-leaf width, z4-stem width, y-tomato yield Full
    size image Next, we calculated the distance to more numerically investigate the
    relationships between the growth factors and the tomato yield of each farm. Table
    6 shows the distance between the tomato yield and the growth factors of each farm.
    From the Table 6, we can see that leaf number and leaf length among the growth
    factors mainly affect the tomato yield of each farm. The other two growth factors,
    leaf width and stem width, didn’t largely affect the tomato yield. These are generally
    consistent with the results given in the Fig. 11 and the Fig. 12. Table 6 The
    distances by farm between tomato yield and each growth factor using DTW and MDS
    Full size table We also calculated the mean values of growth factors for each
    cluster to see how the growth factors should be given in order to improve the
    tomato yield of each farm. Table 7 shows the 95% confidence intervals for the
    mean of the growth factors for each cluster. From these results, it can be seen
    that leaf length, leaf width, and stem width should be sufficiently grown in order
    to maximize the yield of tomato, while leaf number has a negative effect on the
    improvement of the tomato yield. Table 7 The 95% confidence intervals of growth
    factors Full size table 3.4 Effect of environmental factors on growth factors
    We plotted the results obtained by applying the MDS method with two datasets in
    order to understand the relationships between environmental factors and growth
    factors of each farm. Fig. 13 shows the MDS plots between environmental and growth
    factors. Fig. 13 The MDS plots between environmental factors and growth factors.
    The factors in each plot as follow: ×1-inside temperature, ×2-DIF, ×3-inside humidity,
    ×4-CO2 level, ×5-cumulative solar radiation, z1-leaf number, z2-leaf length, z3-leaf
    width, z4-stem width Full size image We applied the DTW method to numerically
    evaluate the influence of each environmental factors on the growth factors. Table
    8 shows the importance and distance of the environmental factors affecting the
    growth factors. From the Table 8, we can see that the CO2 level has the greatest
    effect on all growth factors, followed by inside humidity, DIF, and inside temperature.
    In particular, we can see that solar radiation mainly affects leaf number. Table
    8 The most influential environmental factors on each growth factor using DTW method.
    (Importance order: Distances between each environmental factor and growth factor)
    Full size table We applied the MDS method to the same datasets to confirm the
    results of the DTW method derived above. Table 9 shows the importance and distance
    of the environmental factors affecting the growth factors. From the Table 9, inside
    humidity and CO2 levels have the greatest impact on all growth factors, while
    DIF and solar radiation have an intermediate impact. However, the inside temperature
    was not significantly affected. Comparing the two results, only the solar radiation
    showed a large difference, and the other environmental factors showed almost similar
    results. Table 9 The most influential environmental factors on each growth factor
    using MDS method. (Importance order: Distances between each environmental factor
    and growth factor) Full size table 3.5 Data-driven cultivation strategy Summarizing
    all the results induced so far, following tomato cultivation strategies can be
    derived. First, the cumulative solar radiation, the inside temperature, the inside
    humidity, the CO2 level, and the DIF need to be thoroughly controlled to improve
    the tomato yield. In particular, the CO2 level has a significant impact on the
    tomato yield, so it is very important to keep this factors at an appropriate level.
    Second, the growth factors affecting the tomato yield in each farm are in order
    of the leaf number, the leaf length, the leaf width and the stem width. However,
    the leaf number has an adverse effect and the other three growth factors have
    a positive effect on increasing the tomato yield. Therefore, in order to maximize
    the tomato yield, appropriate the number of leaves with the large length and width
    of leaves is needed. Third, considering the relationships between the environmental
    factors and the growth factors affecting the tomato yield, the CO2 level and the
    inside humidity are the most influential environmental factors for all growth
    factors. Next, we found that the DIF and the inside temperature affect the growth
    factors. In particular, the CO2 levels have a significant effect on the leaf number.
    Third, considering the relationships between environmental factors and growth
    factors affecting the tomato yield, CO2 level and inside humidity are the most
    influential environmental factors for all growth factors. Next, we found that
    DIF and inside temperature affect the growth factors. In particular, CO2 levels
    have a significant effect on leaf number. 4 Conclusion In this paper, we analyzed
    the effects of environmental factors and growth factors affecting tomato yield
    using real data collected from the six farms. After pre-data processing of deduplication,
    de-noising, cleaning, and transformation, we organized the dataset including the
    five environmental factors, the four growth factors, and the tomato yield collected
    from six smart farming greenhouses during a harvesting period. As using real collected
    data, we measured the hidden relationships between the patterns of various factors,
    and not in the experiment environments, verified differences of the tomato farming
    in the real cultivation environments. Also, we drew the idea for increasing the
    productivity of tomato from analyzing the real cultivation environments and strategies
    from each farm. Firstly we analyzed the dataset using the dynamic time warping
    (DTW) and the multidimensional scaling (MDS) methods, which are two of the most
    representative pattern recognition techniques, to investigate the relationships
    between these three factors. We notice that using the DTW and MDS the relationships
    among the related factors were presented with the concepts of distances between
    the patterns of time-series sequences. The warping distances measure similarity
    between two temporal sequences. So we interpret that the smaller be the distance
    value, the stronger effect for the tomato yield. Therefore interpreting those
    distances is useful for the decision maker such as farmers and consultants to
    contribute to achieve the desired performance. Exploring key factors using the
    DTW and the MDS is the first try in the field of agricultural research. We noticed
    that the DTW and the MDS is helpful to find key factors for the development of
    crop production model using various statistical and big data analysis techniques.
    Based on the results of the analysis, the cultivation strategies to improve the
    tomato yield is given as follows: the inside temperature, the inside humidity,
    and the CO2 level are important environmental factors that can increase the tomato
    yield. Among them, the inside humidity and the CO2 level have a great influence
    on the growth of tomato plant. Furthermore, we noticed that the three growth factors
    such as the leaf length, the leaf width, and the stem width largely contributes
    to improve the tomato yield, but the leaf number has a negative effect on the
    improvement of the tomato yield. Finally, we found that limiting the excessive
    growth of the leaf number while maintaining simultaneously the three environmental
    factors, the inside temperature, the inside humidity and the CO2 level in an appropriate
    range is the optimal cultivation strategy to maximize the tomato yield. A proposed
    data-driven cultivation strategy for managing the environmental factors and the
    growth factors can be expected to increase the productivities of tomato. Future
    research will attempt to verify whether the proposed strategies can increase the
    tomato yield by applying the derived cultivation strategies to actual farms. We
    also consider developing the smart farming system using IoT-based technologies
    that can automatically manage the environmental and growth factors in the optimum
    range in each growth stages. References Boyer LR, Feng W, Gulbis N, Hajdu K, Harrison
    RJ, Jeffries P, Xu X (2016) The use of Arbuscular Mycorrhizal Fungi to improve
    tomato production in coir substrate. Front Plant Sci 7(1237):1–9. https://doi.org/10.3389/fpls.2016.01237
    Google Scholar   Chaudhuri BB, Rankine D, Linggard R (1983) Automatic Recognition
    of Isolated Spoken Words with New Features. Electron Lett 39(11):865 Google Scholar   Cho
    W, Na M, Park Y (2018) Extraction of optimum condition of cultivation factors
    to improve tomato production using statistical regression analysis and response
    surface methodology. Adv Sci Lett 24:2084–2087 Article   Google Scholar   Coble
    KH, Mishra AK, Ferrell S, Griffin T (2018) Big data in agriculture: a challenge
    for the future. Applied Economic Perspectives and Policy 40(1):79–96. https://doi.org/10.1093/aepp/ppx056
    Article   Google Scholar   Costa JA, Patwari N, Hero AO III (2006) Distributed
    weighted-multidimensional scaling for node localization in sensor networks. ACM
    Transactions on Sensor Networks 2(1):39–64. https://doi.org/10.1145/1138127.1138129
    Article   Google Scholar   Estrada-Ortiz E, Trejo-Tellez LI, Gomez-Merino FC,
    Nunez-Escobar R, Sandoval-Villa M (2013) The effects of phosphite on tomato yield
    and fruit quality. J Soil Sci Plant Nutr 13(3):612–620. https://doi.org/10.4067/S0718-95162013005000049
    Google Scholar   Fan L, Dube C, Khanizadeh S (2017) The effect of production systems
    on tomato quality (Phenolic Compounds Marcos Soto-Hernández). IntechOpen 177-213.
    https://doi.org/10.5772/67233 Giorgino T (2009) Computing and visualizing dynamic
    time warping alignments in R: The DTW package. Journal of Statistical Software
    31(7): 1–24. http://www.jstatsoft.org/v31/i07/. Accessed Aug 2009 Giorgino T,
    Tormene P (2009) DTW: Dynamic time warping algorithms. R package version 1.13–1,
    http://CRAN.R-project.org/package=dtw. Accessed 18 May 2018 Jaworska N, Chupetlovska-Anastasova
    A (2009) A review of multidimensional scaling (MDS) and its utility in various
    psychological domains. Tutor Quant Methods Psychol 5(1):1–10 Article   Google
    Scholar   Letourneau G, Caron J, Anderson L, Cormier J (2015) Matric potential-based
    irrigation management of field-grown tomato: effects on yield and water use efficiency.
    Agric Water Manag 161:102–113. https://doi.org/10.1016/j.agwat.2015.07.005 Article   Google
    Scholar   Myers CS, Rabiner LR, Rosenberg AE (1981) On the Use of Dynamic Time
    Warping for Word Spotting and Connected Word Recognition. Bell Labs Technical
    Journal 60(3):303–325 Article   Google Scholar   Na M, Park Y, Cho W (2017) A
    study on optimal environmental factors of tomato using smart farm data. Journal
    of the Korean Data & Information Science. Society 28(6):1427–1435 Google Scholar   Senin
    P (2008) Dynamic time warping algorithm review, technical report. Information
    and Computer Science Department. University of Hawaii at Manoa, Honolulu Google
    Scholar   Stubbs M (2016) Big data in U.S. agriculture, Congressional Research
    Service Report. 1–14 Sundmaeker H, Verdouw C, Wolfert S, Pérez Freire L (2016)
    Internet of food and farm 2020. In: Vermesan O, Friess P (eds) Digitising the
    Industry - Internet of Things Connecting Physical, Digital and Virtual Worlds.
    River Publishers, Gistrup, pp 129–151 Tuzcu V, Nas S (2005) Dynamic time warping
    as a novel tool in pattern recognition of ECG changes in heart rhythm disturbances.
    2005 IEEE International Conference on Systems. Man and Cybernetics 1:182–186.
    https://doi.org/10.1109/ICSMC.2005.1571142. Article   Google Scholar   Wolfert
    S, Ge L, Verdouw C, Bogaardt M-J (2017) Big data in smart farming – a review.
    Agric Syst 153:69–80 Article   Google Scholar   Wolfert J, Sørensen CG, Goense
    D (2014) A Future Internet Collaboration Platform for Safe and Healthy Food from
    Farm to Fork, Global Conference (SRII), 2014 Annual SRII. IEEE, San Jose, pp 266–273
    Google Scholar   Zhen D, Wang T, Gu F, Ball AD (2013) Fault diagnosis of motor
    drives using stator current signal analysis based on dynamic time warping. Mech
    Syst Signal Process 34:191–202 Article   Google Scholar   Download references
    Acknowledgments This work was partially supported by the Research Program of Rural
    Development Administration (Project No. PJ01283009), and the Korea National Research
    Foundation (Project No. 2017R1D1A1B03028808) of Korea Grant funded by the Korean
    Government. Author information Authors and Affiliations Chonnam National University,
    Gwangju, South Korea Yuha Park, Myung Hwan Na & Wanhyun Cho Corresponding author
    Correspondence to Wanhyun Cho. Additional information Publisher’s note Springer
    Nature remains neutral with regard to jurisdictional claims in published maps
    and institutional affiliations. Rights and permissions Reprints and permissions
    About this article Cite this article Park, Y., Na, M.H. & Cho, W. Determination
    on environmental factors and growth factors affecting tomato yield using pattern
    recognition techniques. Multimed Tools Appl 78, 28815–28834 (2019). https://doi.org/10.1007/s11042-019-7212-5
    Download citation Received 22 November 2017 Revised 04 December 2018 Accepted
    13 January 2019 Published 29 January 2019 Issue Date October 2019 DOI https://doi.org/10.1007/s11042-019-7212-5
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Tomato production Smart farming Environmental factors Growth
    factors Pattern recognition techniques Graphic analysis method Dynamic time warping
    Multidimensional scaling Data-driven cultivation techniques Use our pre-submission
    checklist Avoid common mistakes on your manuscript. Sections Figures References
    Abstract Introduction Dataset and methods Experimental results and discussion
    Conclusion References Acknowledgments Author information Additional information
    Rights and permissions About this article Advertisement Discover content Journals
    A-Z Books A-Z Publish with us Publish your research Open access publishing Products
    and services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature'
  inline_citation: '>'
  journal: Multimedia tools and applications
  limitations: '>'
  pdf_link: null
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Determination on environmental factors and growth factors affecting tomato
    yield using pattern recognition techniques
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1145/2660859.2660915
  analysis: '>'
  authors:
  - Ketan Patil
  - Animikh Ghosh
  - Divya Das
  - Sunil Kumar Vuppala
  citation_count: 3
  full_citation: '>'
  full_text: '>

    This website uses cookies We occasionally run membership recruitment campaigns
    on social media channels and use cookies to track post-clicks. We also share information
    about your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Use the check boxes below to
    choose the types of cookies you consent to have stored on your device. Use necessary
    cookies only Allow selected cookies Allow all cookies Necessary Preferences Statistics
    Marketing Show details       skip to main content University of Nebraska Lincoln
    Browse About Sign in Register Journals Magazines Proceedings Books SIGs Conferences
    People Search ACM Digital Library Advanced Search Conference Proceedings Upcoming
    Events Authors Affiliations Award Winners HomeConferencesICONIAACProceedingsICONIAAC
    ''14IWCMSE: Integrated Water Consumption Monitoring Solution for Enterprises RESEARCH-ARTICLE
    SHARE ON IWCMSE: Integrated Water Consumption Monitoring Solution for Enterprises
    Authors: Ketan Patil , Animikh Ghosh , Divya Das , + 1 Authors Info & Claims ICONIAAC
    ''14: Proceedings of the 2014 International Conference on Interdisciplinary Advances
    in Applied ComputingOctober 2014Article No.: 10Pages 1–8https://doi.org/10.1145/2660859.2660915
    Published:10 October 2014Publication History 3 citation 183 Downloads eReaderPDF
    ICONIAAC ''14: Proceedings of the 2014 International Conference on Interdisciplinary
    Advances in Applied Computing IWCMSE: Integrated Water Consumption Monitoring
    Solution for Enterprises Pages 1–8 Previous Next ABSTRACT References Cited By
    Index Terms Recommendations Comments ABSTRACT Water is an essential resource for
    human life. Enterprises consume large amount of water and it is crucial for successful
    business operation. There is a constant drive to conserve water and improve water
    efficiency. Wireless sensor network (WSN) based water monitoring application acts
    as a decision support system and plays critical role in enterprises. Our proposed
    Integrated Water Consumption Monitoring Solution for enterprises (IWCMSE) is used
    to identify inefficiency in water usage and take better decisions to cut down
    on water wastage. The IWCMSE architecture, novel LP formulation to maximize recycled
    water usage and stochastic prediction model to forecast the water usage at a building
    level in an enterprise are described in the paper. We showcased three case studies
    based on real time data collection across our enterprise and the results show
    savings of up to 30% of water usage is achievable. References 4th Edition of the
    UN World Water Development Report. http://www.unesco.org/new/en/natural-sciences/environment/water/wwap/wwdr/wwdr4-2012/.
    Aquasense - Intelligent Water Management for your Utility, Sensus. http://sensus.com/web/usca/aquasense.
    CocaCola target of Water Neutrality by 2020. http://www.edie.net/news/4/Coca-Cola-on-track-to-become-water-neutral-by-2020/21795/.
    Show All References Cited By View all Du R, Santi P, Xiao M, Vasilakos A and Fischione
    C. The Sensable City: A Survey on the Deployment and Management for Smart City
    Monitoring. IEEE Communications Surveys & Tutorials. 10.1109/COMST.2018.2881008.
    21:2. (1533-1560). https://ieeexplore.ieee.org/document/8533352/ Abijaude J, Carvalho
    J, Sobreira P and Greve F. IoTAgua. Proceedings of the XIV Brazilian Symposium
    on Information Systems. (1-8). https://doi.org/10.1145/3229345.3229368 Kanellopoulos
    D, Sharma V, Panagiotakopoulos T and Kameas A. (2023). Networking Architectures
    and Protocols for IoT Applications in Smart Cities: Recent Developments and Perspectives.
    Electronics. 10.3390/electronics12112490. 12:11. (2490). https://www.mdpi.com/2079-9292/12/11/2490
    Index Terms IWCMSE: Integrated Water Consumption Monitoring Solution for Enterprises
    Applied computing Physical sciences and engineering Engineering Social and professional
    topics Professional topics Management of computing and information systems File
    systems management System management Recommendations DoubleDip: leveraging thermoelectric
    harvesting for low power monitoring of sporadic water use SenSys ''12: Proceedings
    of the 10th ACM Conference on Embedded Network Sensor Systems We present DoubleDip,
    a low power monitoring system for enabling non-intrusive water flow detection.
    DoubleDip taps into minute thermal gradients in pipes for both replenishing energy
    reserves and performing low power wakeup. One of the remaining issues ... Read
    More Real Time Wireless Monitoring and Control of Water Systems Using Zigbee 802.15.4
    CICN ''13: Proceedings of the 2013 5th International Conference on Computational
    Intelligence and Communication Networks In this paper we have shown how to monitor
    the water level of water systems such as water tanks, rivers, ground water table,
    and bore wells remotely. We have also shown that how to control the working of
    pump automatically and remotely. It can also be ... Read More Irrigation Measurement
    System for Dry Areas Based on WSN Agriculture requires a certain amount of water
    and the land has a maximum liquid holding capacity that should not be exceeded.
    Water pressure provides the kinematic energy used on irrigation systems to spray
    the water on the field. The amount of water ... Read More Comments 32 References
    View Table Of Contents Footer Categories Journals Magazines Books Proceedings
    SIGs Conferences Collections People About About ACM Digital Library ACM Digital
    Library Board Subscription Information Author Guidelines Using ACM Digital Library
    All Holdings within the ACM Digital Library ACM Computing Classification System
    Digital Library Accessibility Join Join ACM Join SIGs Subscribe to Publications
    Institutions and Libraries Connect Contact Facebook Twitter Linkedin Feedback
    Bug Report The ACM Digital Library is published by the Association for Computing
    Machinery. Copyright © 2024 ACM, Inc. Terms of Usage Privacy Policy Code of Ethics'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2014
  relevance_score1: 0
  relevance_score2: 0
  title: IWCMSE
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/978-3-662-57277-1_12
  analysis: '>'
  authors:
  - V. Bhanumathi
  - K. Kalaivanan
  citation_count: 5
  full_citation: '>'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Computational Intelligence in
    Sensor Networks pp 277–305Cite as Home Computational Intelligence in Sensor Networks
    Chapter Application Specific Sensor-Cloud: Architectural Model V. Bhanumathi &
    K. Kalaivanan  Chapter First Online: 23 May 2018 789 Accesses 5 Citations Part
    of the book series: Studies in Computational Intelligence ((SCI,volume 776)) Abstract
    In recent years, the sensor cloud infrastructure dawns a huge advancement in many
    real time applications. The major drawback of Wireless Sensor Network (WSN) is
    its limited processing capability, bandwidth scarcity, insufficient memory, etc.
    In reality, the sensors (EEG, ECG, and so on) continuously sense the highly sensitive
    data, and send to the medical server leading to numerous challenges. The integration
    of cloud computing and WSNs with internet enables to cover and provide a service
    to the entire world, and also to overcome the deficiency of the WSNs. This chapter
    gives a prelude on the integration of cloud computing with WSNs and discusses
    the functional architectures, design issues, benefits and the applications of
    the sensor cloud infrastructure. In addition, we also developed a general architectural
    model for precision agriculture application and farmers awareness using sensor
    cloud. Keywords Wireless sensor networks Cloud computing Virtualization Sensor-cloud
    Access provided by University of Nebraska-Lincoln. Download chapter PDF 12.1 Introduction
    to Wireless Sensor Networks The advent of Wireless Sensor Networks (WSNs) brings
    a new paradigm to the real embedded system that consist of a large number low
    cost and low power sensors. The most important task of the sensor node in the
    remote area is to sense the events such as temperature, vibration, radiation,
    pressure, humidity, and so on. The WSNs have great significance in numerous real
    time applications like forest fire detection, earth observation, environmental
    monitoring, healthcare, wildlife animal tracking, landslide detection, industrial
    monitoring, water quality monitoring, precision agriculture, and so on. The main
    advantage of the sensor node is self configuration, i.e., the sensor nodes itself
    can connect with neighbor nodes and formulates the communication between them
    by using its sensing, computing, processing, and wireless communication capability.
    Thus, we can establish the network anywhere and anytime that is man accessible
    area like indoor application, health care, etc., and also in man unattended areas
    like hazardous environment, forest, and so on. In such places, we can deploy sensor
    node by using aircraft or a robot, and constructs the network. The replacement
    and recharging of the sensor battery is impossible, where the node is deployed
    in the hostile environment and also human monitoring system is highly dangerous
    [1, 2]. The sensor nodes collect the physical event from the targeted sensing
    area which in turn communicate to the sink by direct hop or multihop. In direct
    hop, the sensor nodes directly communicate with the Base Station (BS) that consume
    more power for transmitting the data, since the energy consumption of the sensor
    node is directly associated with the data packets size and the transmission distance,
    thereby lessening the network lifetime. In multihop mode, the sensor node utilizes
    the intermediate nodes to forward the data packets towards the sink. Thus, it
    conserves the significant amount of battery energy than direct hop. Due to the
    tiny nature of the sensor node, it many constraints including battery energy,
    communication, memory, and computational capability [3]. Among them, the battery
    energy is an important consideration of network design. There are several protocols
    evolved over the last decade, which aims at prolonging the lifespan and enhancing
    the energy efficiency of the WSNs. The data routing, channel assessment, and localization
    are crucial tasks in sensor network design which stipulate the efficacy of the
    WSNs protocols. There are several channel accessing techniques such as CSMA-CA,
    TDMA, CDMA, FDMA, SDMA, and so forth and various MAC protocols like BMAC, SMAC,
    UMAC, etc., try to avoid the contention in MAC level and improves the performance
    of the networks [4,5,6]. Currently, numerous routing protocols are presented that
    aim at enhancing energy efficiency of the network. According to the data flow
    structure, the routing protocols can be categorized into : (i) location based
    routing (ii) flat routing, and (iii) cluster based routing. The flat routing protocols
    like FLOODING, RUMOR ROUTING, GOSSIPS, etc., are discussed in [7,8,9], and these
    protocols consume more energy and produce the high control overhead. The well-known
    clustering protocols including Low Energy Adaptive Clustering Hierarchy (LEACH)
    [10], Mobility Based Clustering (MBC) [11], Hybrid Energy Efficient Distributed
    (HEED) [12], Velocity Energy efficient and Link aware Cluster Tree (VELCT) [13],
    etc., are introduced in order to improve the scalability and energy efficiency
    of the networks. In clustering, the sensing area is divided into number of clusters
    and each cluster is governed by a Cluster Head (CH). This CH is used to perform
    the co-ordination within the cluster including assigning a timeslot to the member
    nodes, collecting the data from its member, and transmitting the data packets
    to the destination. Besides these, the CH performs the data aggregation which
    eliminates the redundant packets and conserves the battery energy significantly.
    The location based routing protocols like Reliable and Energy Efficient Protocol
    (REEP) [14], Energy efficient Beaconless Geographic Routing (EBGR) [15], etc.,
    in which each sensor node forwards the data depending on the location itself and
    it is directed to the neighbors to reach the destination. This routing greatly
    reduces the control overhead and energy consumption. Pros: There is no fixed network
    infrastructure. The sensor node made the decision autonomously and establishes
    the communication. As a result, it is highly suitable for large scale networks,
    and also enhances the fault tolerance and scalability of the networks. Network
    establishment cost is low. Cons: Redundant sensing in the same place leads to
    overhead and reduces the network performance. Mobile sensor nodes often change
    their position that cause link failure and make unstable network topology. This
    will lead to lessen the packet delivery ratio, and increase the packet retransmission
    and overhead. The sensing event without location information is meaningless for
    such application like fire detection, radiation detection, animal tracking, etc.
    The existing mechanism uses a GPS to track the location of the sensor. However,
    the GPS equipped devices consume high power and reduce the network lifespan. Besides,
    deploying the GPS in indoor applications evinces the error location information.
    Achieving the time synchronization among the sensor nodes is very complex in distributed
    decision mechanism. It is highly vulnerable to security threats. The WSNs suffer
    from several attacks, including wormhole attack, sink hole attack, selective forwarding
    attack, Hello flood attack, Sybil attack, Byzantine attack, and a collision attack.
    Lacks central coordinating system causes high overhead. 12.2 Why Cloud Computing?
    In a traditional Wireless sensor network, the user wants to sense a event from
    the particular target area. They deploy the sensor node manually or spread to
    man unattended area by using aircraft or monitoring by using robot equipped with
    sensors. The WSNs applications are single user centric, i.e, the WSNs is developed
    and maintained by the single user for fetching the sensor data. The user is restricted
    to utilize their sensor information to single application and does not allow the
    accessing of the data to another party. The sensor networks put onto the cloud
    infrastructures, which transparently share the resource (sensor data) among the
    multiple users. It allows the user to utilize the same sensor resources to the
    multiple applications and lessens the redundant data in the sensing, thereby increasing
    data reusability and reduces the cost of WSNs. Cloud computing is an emerging
    paradigm that provides flexible, reliable and cost effective solution in many
    application services through internet. It also offers massive storage, computational
    resources in an on-demand manner (i.e., It aims at providing IT resources service
    in an on-demand manner, at any time, and at anywhere.). In addition to this, the
    cloud storage provides highly reliable and scalable data sharing. And also it
    can do the outsourcing of the sensor data to store and process, and it can meet
    out the computational demands of the consumer, by paying for the service according
    to the usage. National Institute of Standards and Technology (NIST) [16] defined
    cloud computing as a model for enabling ubiquitous, convenient, on-demand network
    access to a shared pool of configurable computing resources that can be rapidly
    provisioned and released with minimal management effort or service provider interaction.
    The essential characteristic of cloud computing are [16]: Automated elasticity:
    The cloud service provider continuously observes the client infrastructure and
    scales it automatically based on the users demand, i.e., ability to scale up and
    down computing capacity based on the demands. On-demand services: The user can
    directly request the service provider to access and manage their services through
    the web browser interface without any human interaction. Resource pooling: The
    computing resources are available to the users on the multi-tenant environment
    and virtual resources generated and deleted dynamically based on the demand of
    the consumer. Measured services: The monitoring servers in the Virtual Machine
    (VM) automatically monitor, control, and record the utilization of the cloud resources
    by the user, according to the meter capability. Wide range network access: The
    users can utilize the standard interface protocols for accessing the resources
    and services which are available over the internet. This will enhance the network
    accessibility between the cloud service provider and user devices like smart phone,
    tablet, laptop, and so on. 12.2.1 Service Model Table 12.1 shows the general service
    models and its applications. It is noted that SaaS is a software application.
    PaaS makes an execution runtimes without direct access to the Operating System
    (OS). IaaS is mainly for Virtual Machines, servers, storage systems, and other
    hardware/OS. 12.2.1.1 Software as a Service (SaaS) The cloud providers deliver
    the software or application product to the consumer over the World Wide Web (WWW),
    that are accessible by various client systems. The service provider is responsible
    for managing and controlling the computing infrastructure such as OS, storage,
    networks, server, etc. The service provider can upgrade the software or release
    the new features, in contrast to the customary software [16]. Table 12.1 Service
    model and its application Full size table Pros: the multiple users or consumers
    share the same cloud infrastructure. Cons: constrained in user specific-configuration.
    12.2.1.2 Platform as a Service (PaaS) The service supplier provides the users,
    the service stacks and computing platforms including development tool, programming
    language, libraries, services, Web 2.0 application run time, and middleware. Thus,
    the consumers easily attain the sensor cloud infrastructure and related application
    tools. The service providers control and manage the underlying network. Depending
    on the application, the user can manage the deployment model and settings of the
    configuration [16]. Pros: it allows the development of applications quickly and
    simply with reduced design complexity. Cons: high security risk due to the absence
    of control over the virtual machine and data processing. 12.2.1.3 Infrastructure
    as a Service (IaaS) IaaS typically delivers a virtualized platform infrastructure
    over the internet. In IaaS, the service provider aids the consumer in provisioning
    the network, data processing, server, processing, storage, application development,
    backups, location, and resource computing tools. Hence, the consumers design,
    build, deploy, and run the arbitrary application that is operated in a virtualized
    infrastructure. In addition to that the consumers have a complete control to the
    data processing and everything over their virtual machine and need not be responsible
    for controlling and managing the underlying cloud computing environment. But,
    the host firewall may have a limited control to choose the network components
    [16]. Pros: greatly manages the security risk. Cons: consumer has the full responsibility
    in all aspect of virtual machine management and backups. 12.2.2 Deployment Model
    Deployment model can be done in four ways: (i) private cloud, (ii) community cloud
    (iii) public cloud, and (iv) hybrid cloud. 12.2.2.1 Private Cloud This model is
    solely owned and governed by the individual organization or third party auditing
    or both. This model shares its resources internally to the multiple consumers
    [16]. Pros: It provides a high level of security. Service providers can easily
    customize the software and other resources. Cons: It has a limited storage, server,
    and services, owing to constrain in hardware and software of service providers.
    Examples: VMWare, vCloud Director, OpenStack. 12.2.2.2 Community Cloud This cloud
    is established by the group of organization and forms the community. It distributes
    the common interests such as mission, application, services, security policy,
    etc., within the specific community. This cloud may be owned and governed by the
    organization within the community, or third party auditing [16]. Pros: making
    a better utilization of the self organization advances from the autonomous computing.
    Cons: limited amount of data storage and bandwidth shared among the customers.
    Examples: Googles Gov Cloud. 12.2.2.3 Public Cloud The cloud resources are distributed
    to many customers for open use. The public pay the amount to the service provider,
    according to the usage of the services and cloud resources. This model is owned
    and governed by the organization (business, government, education, or some combinations)
    [16]. Pros: It is easy to deploy and run and can be made available to the customer
    through the internet, hence the IT resources and services immediately available
    to the users. It is a pay as you go model, hence, there is no need for long term
    commitment or agreement with the service provider. Cons: High security risk (data
    privacy, integrity), because the client has no control on data processing and
    infrastructure. The resource and application customization is very complex or
    not possible. Examples: Sun cloud, Amazon AppEngine, Microsoft Azure, Google AppEngine,
    IBMs Blue Cloud. 12.2.2.4 Hybrid Cloud Hybrid cloud combines two or more different
    clouds that stay in distinct entities with identical infrastructure and capability
    [16]. Pros: it provides strong advance in the overall organizational agility.
    Cons: it may affect the enterprises identity and organizations security. Examples:
    open source - Nebula cloud computing project. 12.3 Introduction to Sensor Cloud
    The integration of the sensor networks, cloud computing and internet provides
    the plenty of sensor instances, IT resources, services over the internet and also
    enable these resources whenever and wherever the user wants to access. According
    to MicroStrains [17], a sensor cloud is a unique sensor data storage, visualization
    and remote management platform that leverages powerful cloud computing technologies
    to provide excellent data scalability, rapid visualization, and user programmable
    analysis. 12.3.1 Benefits of the Sensor Cloud The benefits of the sensor cloud
    infrastructure are summarized using the research article [17,18,19,20,21,22,23,24,25,26,27,28].
    Data Management: Accessing and storing of the sensor data is efficiently handled
    in sensor cloud that overcomes the issue of data gathering from WSNs. IT infrastructure:
    Sensor cloud architecture allows the multiple users, who can access the same set
    of information for various applications, since it shares and allocates their resources
    to the users in on demand manner as per the request. Scalable resource utilization:
    Sensor cloud provides a scalable services i.e., rapidly scale up or scale down
    the consumption of resources as per the requirement of the applications. Thus,
    the sensor information can be utilized by multiple services and users without
    any intercession. Dynamic Provisioning of Services: Accessing and storing of the
    sensor information anywhere and any time, if it is linked to the internet, thus
    gives an enhanced flexibility and scalability. Quick Response Time: The sensor
    cloud immediately responds to the users, as it enables the users to search for
    the large number of sensor data stored in cloud infrastructure easily and also
    makes a decision very quickly on real time application by using effective computational
    methods. Unlimited storage space: Provisioning of the unlimited storage memory
    on rent basis to the users reduce the memory deficiency in WSNs. Runtime Resource
    management: Sensor cloud automatically gives an alternative in case of faulty
    resources over the run time. This feature further extends their fault tolerance
    capability. Collaboration: Sensor cloud is the collaboration of different Wireless
    sensor network providers, hence multiple application information shared from the
    various administrative domain which enhances the utilization of resources and
    energy efficiency. Location independent: The user can access and utilize the resource
    as well as do some task irrespective of being a particular location. Thus, it
    has a high flexibility and is well suited for high mobility. Rapid Elasticity:
    Cloud gives an elastic platform for gathering, processing, storing, and sharing
    of huge amount of the data from various application domains. Flexibility in resource
    utilization: It allows the user to effectively utilize the shared pool of cloud
    resource in an on-demand manner like processors, memory, services and so on.,
    thus reducing the constrains of the sensor networks. Real time support: The key
    feature of the sensor cloud is real time support that makes a real time decision
    in multiple users and various application situations. Virtualization: The Virtualized
    platform of sensor provides an effective sharing of real time information among
    the various users. It also enables dynamic resource management, which results
    in efficient utilization of cloud resource. Cost effectiveness and minimal maintenance
    requirement: This platform dynamically shared their resource including storage,
    services, operating system, real time sensor information, etc., to the multiple
    users. Thus, the service providing organization can extend their services to a
    large number of users with reasonable pricing and also lessen the maintenance
    cost. Network lifetime: The sensor cloud gives an optimal duty scheduling of the
    deployed sensor nodes. Owing to this, the sensor consumes a reduced battery power,
    which in turn extends the lifetime. Re-configurability: The sensor cloud affords
    multiple services to multiple users, thus it facilitates the users which can able
    to select to switch application, and reconfigure the sensors based on the requirement
    of their demand. 12.3.2 Applications of Sensor Cloud Smart city: The sensor cloud
    infrastructure plays a key role in developing a smart city. The various organizations
    have been concerned with different level of collaboration to provide a smart city
    services such as water monitoring, e-toll, car parking, video surveillance, smart
    transportation, street light monitoring, etc., [18]. Physical activity monitoring:
    This application platform is developed for monitoring the physical activity such
    as lying down, sitting, stand still, walking, running, jumping, etc., by using
    wearable sensors (accelerometer sensor), SPINE Android App, and cloud computing
    infrastructure. This can enable to monitor the aged people or patient fall detection,
    and also determine if a person gets up after falling down [19]. Fire emergency
    evacuation: The deployment of the WSNs in a large building is used to detect the
    occurrence of fire. The standard fire safety system consists of the smoke sensor,
    temperature sensor, fire alarm, and fire fighting equipment which is connected
    to the cloud infrastructure. This system gives the necessary information such
    as fire location, status of egress route, health information to the fire fighter.
    This can be used to evacuate the person from the building and also track the health
    of the fire fighter or person. Thus it enhances the fire fighter safety, and efficacy
    of the tracking [20]. Battlefield surveillance: The battlefield surveillance system
    is developed to monitor the enemys missiles, weapons and aircrafts, in which the
    Mobile WSNs, that links with cloud computing using wireless communication technology
    like Zigbee, Bluetooth, Wi-Fi, 2G, 3G, 4G, and so forth. This Mobile WSN performs
    the parameter estimation for effectively pointing out the ememy targets [21].
    Epileptic seizure detection: An automatic epileptic seizure detection framework
    contains: (i) wearable EEG sensor placed on the different location of the brain.
    This is used to capture the electrical activity of the brain. (ii) the mobile
    with android app is used to send the gathered EEG signal to cloud infrastructure.
    The automated detection system in cloud finds any abnormality in the captured
    signal, immediately send the alert message to the user, and advised to take precautionary
    measures and defend itself [22, 23]. Precision agriculture: In irrigation management,
    the on field sensors such as moisture sensor, ambient temperature sensor, humidity
    sensor, and soil temperature sensor is deployed to monitor the crop field. The
    sensor owner provides this information to the cloud infrastructure on rental basis.
    The end user can access the irrigation management services and the meteorological
    weather report from the cloud by subscription. Thereby, the end user can monitor
    the crop field condition and manage the irrigation schedule. In addition, the
    UAV based crop disease monitoring information also shared in the cloud infrastructure
    which enhances the precision agriculture with low cost [24]. Smart transportation:
    The sensor cloud based transportation system provides a guideline to the drivers
    and publics by the way of GPS information, sharing the real time traffic and public
    transportation information. This information enables the drivers and publics to
    achieve an enhanced navigation such as to track status and current location of
    the vehicle, to avoid the collision, to provide the traffic free track to reach
    the destination and time of arrival, etc. The recent development of automated
    driving system (Dedicated short Range Communication) fully depends on the Wi-Fi,
    GPS, sensor networks, and cloud infrastructure which greatly enhance performance
    of the vehicular transportation [18]. Environmental monitoring: The environmental
    monitoring system uses different sensors such as sound, light, barometer, temperature,
    \(\text {CO}_{2}\), seismic, and so forth that provides a continuous monitoring
    of the causes of earthquake, tsunami, landslide, volcano explosion, etc. This
    information can be put onto the sensor cloud infrastructure and is used to predict
    before the occurrence of such a disaster and greatly saves the human being from
    the casualty and lives. Weather prediction: Weather forecasting station deploys
    the various types of sensor in order to collect the information such as relative
    humidity, barometric pressure, soil moisture, temperature, ambient light, wind
    speed and direction, solar radiation, etc., from a given location. Through the
    sensor cloud infrastructure, these sensor instances are concurrently used with
    other sensor instance, i.e., physical sensor data of the weather station are not
    only used to predict the weather changes, but also it is used by the farmers for
    scheduling the water irrigation. 12.3.3 General Architecture of Sensor Cloud The
    general architecture of the sensor cloud is shown in the following Fig. 12.1.
    12.3.3.1 Sensor Cloud Administrator or Service Provider Sensor cloud administrator
    or provider is responsible for preparing the resources of cloud computing services
    in order to develop a sensor cloud infrastructure. And also prepares the service
    catalog template that fulfills the requirement of the users. They also responsible
    for managing the IT resources, virtual sensor management, monitor, control, and
    settle the amount to the sensor owner, IT resource owner and billing and collecting
    the resource usage amount from the users [27, 28]. Fig. 12.1 General architecture
    of sensor cloud Full size image 12.3.3.2 Sensor Owner The sensor owner can freely
    register or unregister their Physical Sensor (PS) and its properties to the sensor
    cloud infrastructure. This can enable the sensor owner shares their type of sensor
    data and location to users. The sensor owner provides their sensor data to the
    service provider on rental basis. The sensor owner is only responsible for sensor
    network maintenance (sensor battery, hardware, purchase of sensor, etc.,) [29].
    12.3.3.3 End User The end user registers the sensor data for their services or
    applications through service catalog facility in the portal. The service provider
    prepares the new service template which meets the requirement of the users. Thus,
    the user can access and control the virtual sensor directly. The user paid the
    amount for the usage of the virtual sensor data. The sensor cloud providers stipulate
    their pricing of the services according the utilization of cloud storage (i.e.,
    amount of data stored, the amount of data in and out of the cloud storage, the
    number of http request used), Computational resources including virtual machine
    instance, CPU, RAM, I/O capacity and other IT resources [28, 29]. The followings
    are mostly used in pricing models [27]. On-demand - The service requester utilizes
    the sensor cloud services on the pay-as- you- go. The requester pays the amount
    based on the usage of the service instance. Prepaid - The service requester pays
    the fixed amount and reserves the services for a specific duration. Auctioned
    - The service provider allocates the computing capacity to the service requester
    by offering the prices at an action sale. The bid rate is regulated by supply
    and demand. This model offers a lower price than prepaid model. 12.3.4 Functional
    Architecture of Sensor Cloud As shown in Fig. 12.2, the each components of the
    functional block diagram of sensor cloud infrastructure are elaborately explained
    below. 12.3.4.1 Database and Repository The database storage contains the definition
    of the physical sensor, Virtual Sensor (VS), Virtual Sensor Group (VSG), and IT
    resources (Sensor Owner-ID, Location, Sensor-ID, type of the sensing data information
    like pressure, temperature, humidity, etc., VGS-ID, VS-ID, Virtual server-ID,
    User-ID, Resource server-ID, Virtual server-ID, host name, and specification,
    IP address). The repository storage contains the templates of the VS and the VSG.
    This template provides a library and its supporting file that defines the data
    mapping rules, as well as data source class name depending on the requirement
    of the user registration [29, 30]. 12.3.4.2 User Centric Layer The user centric
    layer is used to interconnect the users to the sensor cloud. The main components
    of the client centric layer are the user interface, session management, membership
    management, and user repository. The user interface allows user specify parameters
    including sensing event, area of interests, sensing duration, sensing duration,
    and so on. The session management is responsible for the creation, maintenance,
    and termination of the sessions between the user and middleware. The membership
    management gives a right to access the provisioned services only to the authorized
    user. The user repository has the detailed information of the users including
    the total duration of the service accessing, account ID and other details, payment
    history, billing information, data sent by WSNs, data usage, etc. [31]. Fig. 12.2
    Functional block diagram of sensor cloud Full size image 12.3.4.3 Sensor Centric
    Layer The sensor centric layer is responsible to act as an intermediate layer
    between the middleware layer and sensor layer. This layer enables the Sensor Networks
    (SN) to access the sensor cloud directly by using SN registration, SN maintenance
    and data component. The owner of the SN wants to provide their services (information)
    through sensor cloud, the owner need to register the details of their sensor networks.
    The sensor cloud verifies the registration information and makes the trust relationship
    with WSNs owner. Thus, it ensures the trust data communication between the SN
    owner and sensor cloud core. The SN maintenance layer ensures the quality services
    of the SN to the sensor cloud core. It provides an interoperability and coordination
    of the different sensor platforms. Also, it periodically checks their network
    performance and node activity, updates the current status of sensor nodes, and
    gives the time synchronization among the sensor nodes and networks. Thus, the
    sensor centric layer enhances reliable and trustful data communication between
    the WSNs and sensor cloud core. Since, it avoids the tampered and inaccurate sensor
    reading given to the cloud [31]. 12.3.4.4 Middleware Layer The middleware layer
    lies between the sensor centric and client centric layers, which is used to connect
    the client request with sensor data. It is a sensor cloud core which performs
    numerous functions including data flow management, configuration management, physical
    and virtual layer management, application performance management, provision management,
    resource management, life cycle management, and so on. 12.3.4.5 Workflow Management
    A work flow defines the sequence of steps to handle the various tasks, i.e., the
    task should be structured, executed, and tracked in a definite way. Hence, it
    reduces the run time, workload, delay, storage, etc. And also enhances the effective
    utilization of the resources [31]. 12.3.4.6 Data Analytics The cloud computing
    system uses a data mining process for analyzing the big data gathered from the
    physical sensor. This computing process is effectively done by using the mechanism
    such as computational intelligence, machine learning, statistical analysis, and
    database management. The data mining lets the anomaly detection, Association rule
    learning, correlation, clustering, classification, and Regression, which result
    in lessening the big data into the manageable data size, derive the data pattern.
    The key benefits of data analytics are speedy and better decision making in many
    real time application and cost reduction [32]. 12.3.4.7 Resource Management It
    provides the IT resource including networks, server, CPU, etc., and updates the
    definition of the VS and VSG service template in repository storage [33, 34].
    Fig. 12.3 Lifecycle management Full size image 12.3.4.8 Configuration Management
    The configuration management ensures the provision of flexibility, scalability,
    and other QoS of sensor cloud to the client. It lets the adding and removing of
    the client dynamically from the cloud services and also provides the flexible
    reconfiguration as the clients objectives change. It also affords the cloud services
    for scalable heterogeneous application and multi-tenants [35]. 12.3.4.9 Lifecycle
    Management The main duties of the lifecycle management and their work flow are
    demonstrated in Figs. 12.3 and 12.4. The service provider or cloud administrator
    prepares the service catalog that contains the current service specification including
    Operating System, available service application, sensor information details, hardware
    specification, network specification, location, and so on. This can let to create
    the service template and services instance, that meet the users requirement [30,
    36]. Fig. 12.4 The flow of lifecycle in sensor cloud Full size image The procedure
    for lifecycle flow is described below: (i) The end user enables the sensor cloud
    to log in to the portal on the web- browser. (ii) The end user selects the appropriate
    service template and IT resource from the catalog on the portal. The portal server
    directly displays these templates which are stored in the repository. (iii) Then,
    portal server sends the request to the provision server. (iv) After the registration
    of the user requirement, the provision sever reserve the IT resources, VS and
    VGS from the existing server or from the new virtual server by using a monitoring
    server. (v) The provision server collects the VS and VSG service template from
    the repository and generate the service instance. (vi) It also provisions the
    VSG on the chosen virtual server. (vii) Updates the new definition of the VSG.
    (viii) The service provider send the acknowledgement to the user for intimating
    the successful creation of services instance. (ix) Then, the user receives the
    sensor data from the VSG and also can control the VS and VSG directly. (x) The
    user unregisters from the services, once he completes. 12.3.4.10 Provision Management
    Provisional management is responsible for getting template of VS and VSG from
    the repository as the user request from the portal. This template is used to generate
    the VS (service instances) and its VSG and reserves the IT resources from the
    pool. The provision server updates the definition of the new VSG. This provisions
    the VSG in the virtual server. Once the service template is created successfully,
    then the service provider sends the acknowledgment to the user, then selecting
    the appropriate service instance to retrieve the data from the virtual sensor
    and control the VSG directly. And the user discharge from the services whenever
    useless. The monitoring server receives the information about the VS through an
    agent in the virtual server. The cloud administrator retrieves the monitoring
    information the web browser and can be used to inspect the performance of the
    server [29,30,31]. 12.3.4.11 Virtual Sensor Management A virtual sensor is an
    emulation of a physical sensor that gets its sensor data from the underlying physical
    sensors. The VS gives a customized view to the end users using distribution and
    location transparency. The VS encompasses a meta-data about the physical sensors
    and the end user. The virtual server creates the service instance, once it receives
    the request of the service instance from the provision server. After creating
    the instance, it groups the virtual sensor which is related to the concerned request
    of the service instance and updates the definition of the newly generated service
    instance [30, 31]. 12.3.4.12 Communication Layer The short range wireless technology
    is used to connect the sensor nodes to the BS. And also its specifications are
    summarized in Table 12.2. The recent advancement in the cellular network is 3G,
    4G, LTE, 5G, etc. which is relatively low cost and straightforward method to develop
    a Subscriber Identity Module (SIM) based Sensor cloud applications. Nowadays,
    these wireless cellular networks offer a wide range service with high speed. These
    carrier networks provide the sensor information and cloud services to the world
    wide. Table 12.2 Comparison of short range communication in WSNs Full size table
    12.3.5 Design Issues and Challenges The design issues and research challenges
    of the sensor cloud infrastructure are summarized from the research articles [17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37].
    Issue in shared technology: The sensor cloud infrastructure uses a virtualization
    mechanism that shares the same cloud resources among the multiple users. This
    data sharing mechanism enables the malicious user to access the information about
    the other users. Thus, it affects the reliability, and trustfulness of the network
    and overall performance of the cloud infrastructure. Hence, a rigid authentication
    mechanism and suitable firewall is required to solve this issue. Data analytic
    issue: The biggest issue of the cloud computing is data analytic and become more
    critical when handling the multimedia data, and sensor events from the various
    sensor networks. It is very complex for tracking data pattern from the big data.
    To overcome this issue, it needs sound methodology for analysis the big data and
    convert into manageable data. It can also allow the user and service providers
    to use the IT resources effectively. Cloud security issue: The features of cloud
    include the shared resource pool, multi tenancy, and virtualization that allow
    the user can access the same sensor instance from the different places. But, lacking
    of isolation between the virtual machines emerge the security issue in cloud.
    There are possible security attacks on the cloud such as Denial of Service DoS,
    data deletion attack, replay attack, pollution attack, Tag forgery attack, replace
    attack, data leakage attack. This will lead to the degradation of the network
    performance. By using well data backups, cryptography, and user authentication
    mechanism avoid the theft or loss of data, technical loss of control, and continuously
    provides their services effectively. Heterogeneity issues: The cloud infrastructures
    have different types of IT resources and sensor instance with different hardware
    and software capabilities (storage, processing, computation, OS, application).
    Thus, the designed cloud infrastructure will effectively tackle the heterogeneity
    issues and provide the scalable and flexible services to the users. The community
    cloud effectively handles the hardware and software compatibility issues related
    with multiple organizations that share their resources including security, compliance,
    OS, hardware, and so forth. Energy efficiency issues: The energy management is
    a very big challenge in cloud based data center. The monitoring metadata is used
    to predict the demand of the user, allocating resources and scheduling the active
    time of the server depends on the predicted demand level. Thus, it lessened the
    active server, which leads to minimize overall energy consumption. To enhance
    the power management of cloud server by using metadata remains an attractive ongoing
    research area. Service Level Agreement: The agreement between the communication
    parties (service providers or service provider and users) regarding the information
    of all the services, minimum service capabilities such as bandwidth, CPU, RAM,
    etc., and also the terms and conditions. Perhaps the service provider doesnt meet
    the requirement of users demand as per the agreement, which result in violation
    of the agreement and pay the penalty to the other parties. This issue still remains
    a great challenge in the cloud computing researchers to provide the satisfactory
    services to the end user. Scalability issue: The important task of the cloud computing
    is a collection of the several monitoring metrics of each virtual machine. Allocating
    the high resources and extending the size of the cloud depend on the number of
    users and their demands. The collection of monitoring metric from the virtual
    server is very crucial when the number of the cloud users increases and also depends
    on the size of the monitoring metrics and sampling frequency (bandwidth) of the
    VM. The researcher tries to develop the agent less monitoring system of VM, thereby
    reducing the overhead and bandwidth limitation. Interoperability issue: It is
    an important issue when the cloud users access the sensor cloud services through
    web interface. The web interface is not compatible with smart phone OS and application.
    But, most of the sensor cloud users access the cloud by using mobile devices or
    phone. Thus, it needs standard protocol for interfacing and provides a seamless
    service between the users and service providers. Data portability and integrity
    issue: In hybrid cloud, the service provider finds difficulty in integrating the
    data of the public off premises cloud that is stored in the internal server. Since
    the data may distribute over the private and public clouds that may cause the
    integration problem including: Security related issues. Failure to maintain transaction
    across the network. Trouble in managing of huge volume of data. Data quality control
    issues. Issues determining the origins of data. Absence of mechanism to identify
    changes in data. Pricing issues: There is no standard model for fixing the cost
    of cloud services and varies from one service provider to another. The service
    provider set the pricing based on the usage of the resources such as storage,
    CPU, OS, domain name, IP address, load balancing and so forth. The monitoring
    agent in the VM updates the data utilized by the users that also gives charging
    of resource utilization for cloud service providers. 12.4 An Example Architectural
    Model for Precision Agriculture Precision farming is defined as information and
    technology based farm management technique targets at inferring more precise decision
    in detecting crop condition automatically. It uses a remote sensing and satellite
    technology to monitor the variability of environmental, soil, and crop condition.
    In this model, the various service providers including private or government organization
    collaboratively share their resources such as weather condition, satellite information,
    Unmanned Ariel Vehicle (UAV) monitoring information, various WSNs information
    to the sensor cloud freely or rental basis through the internet, as shown in Fig.
    12.5. This information is available anytime in the cloud storage. This can enable
    the user accessing the IT resources and sensor depends on the demands of the users
    application and paying charge to service provider as per the usage resources.
    Some private sector or government sector uses this resources and analysis, consolidate
    the requirement of the farmers including water irrigation scheduling, warning
    message of crop diseases and pesticide recommendation, soil fertility level and
    fertilizer recommendation for the usage and level, giving a flood, cyclone, landslide,
    tsunami, and rainfall alert to the farmer by sending the SMS or through the smart
    phone App. The farmer get this service on rental basis of freely by registering
    and giving the necessary information about crop land location, type of the crop
    planted, total crop field, farmers name, phone number, address, email-id and so
    on to the concerned service provider. According the farmers registration, the
    service provider gives appropriate suggestions and solution to the farmers. In
    addition to that, the service providers allow the user updating their registration
    and service requirement at any time and anywhere through internet. As a result,
    the farmer improves their crop productivity and efficiently manages the water
    scarcity at low cost. Fig. 12.5 General architecture of sensor cloud for precision
    agriculture Full size image Calibration: It is sustained using predicted and measured
    values of remote sensing and satellite image information. Soil moisture prediction:
    At regular intervals, the determination of water contained in the crop field is
    performed using automated learning system over the measured and predicted value.
    Soil nutrients prediction: Real time measurement of nutrients in the soil is achieved
    using automated learning over the measured and predicted data. Crop disease prediction:
    The UAV image is used to identify the crop diseases. It can be used to classify
    the type of disease that infects the crop. Measurement: The sensor nodes are programmed
    to provide a current crop field data at regular interval to zone management office.
    The sensed data, satellite image data, and meteorological weather report data
    are collectively used for predicting the current need of the crop field. Estimation
    of water requirements: The automated system determines the amount of water to
    be supplied to the farmland or crop. Assessment of Fertilizer: The automated system
    is used to find the amount of fertilizer that is required to resolve the deficiency
    in soil fertility. Pesticide assessment: The automated system generates the recommendation
    for pesticide needs and disease specific pesticide based on the UAV image information.
    Update to the farmer: The zonal management controller is programmed to send Short
    Message Service (SMS) automatically to the farmers with current status of registered
    crop field. The recent advancement in satellite technology is very handy in agriculture.
    The satellite images provide necessary information about monsoon changes, weather
    or climate changes, cyclone, storm formation, finding a ground water level, etc.
    12.4.1 Nutrition Level Identification In recent years, the researchers in precision
    forming are looking to optimize the crop yield while reducing the fertilizer consumption.
    The soil sensor can be used to monitor the soil data continuously such as soil
    PH, humidity, salinity, electrical activity, etc., This real time soil data can
    lead to design an automation system in the agricultural field to improve the crop
    quality and productivity. The determination of NPK (i.e.,nitrogen, phosphorus,
    and potassium) in the soil is very essential for detecting the amount of soil
    nutrients. This can be used for giving a recommendation to the farmers about the
    needs of nutrients and site specific fertilization. The automated system has the
    advantage of eliminating the unwanted utilization of fertilizer. Thus, it can
    reduce the deterioration of soil and yield good quality crop foods. 12.4.2 Threatening
    Disease Identification (UAV) The UAV based early detection of diseases in crop
    play a vital role in the agricultural field to avoid the qualitative and quantitative
    losses faced by the farmers. The recent automatic technique is used to detect
    the crop diseases at earliest which are beneficial as it aware the farmers to
    take a precautionary measure to restrict the spreading of crop diseases, reduces
    the large work of monitoring in large farms. 12.4.3 Other Applications The recent
    developments in wireless communication such as low power VLSI and embedded design
    are incorporated with Micro Electro-Mechanical Systems (MEMS) technology for designing
    a low power, low cost, tiny smart sensor. The smart sensor node consists of four
    basic components include sensing unit for sensing the data from the target area,
    a processing and storage unit for managing the local data and storage, power supply
    unit for giving a power to the sensor, and a radio communication unit for data
    transmission. The WSNs are usually comprised of numerous low power tiny sensor
    nodes that work together to carry out the sensing and monitoring the events from
    the chosen inaccessible area and forward the sensed data to sink through wireless
    media. In recent decades, the WSNs play a major role in providing most promising
    solution in many challenging real time applications such as atomic radiation level
    monitoring and Geiger count detection in nuclear plant, battlefield surveillance
    monitoring, target tracking, patient health monitoring, tsunami detection, disaster
    surveillance and crisis management, detect the risk of frost in agriculture, hazardous
    chemical factory venues, wildlife animal tracking and monitoring etc., [1, 2].
    Node attributes: ID: uniquely identifier Type: hardware type (sensor or gateway
    or base station) Address: Network address Physical location: geo-location Region:
    Logical location such as survey number of land position Attached sensor: List
    of attached sensor. 12.5 Related Work Many researchers have developed models based
    on sensor network for agricultural applications. Some of them are detailed here.
    The software and hardware requirements for different agricultural applications
    are found out from the related works and are given in the following Table 12.3.
    Touati et al. [38] proposed a fuzzy logic based water irrigation system which
    incorporates with wireless data logging. This model contains a feedback fuzzy
    logic controller, Zigbee, GPRS, Database platform, and specific soil sensor. The
    fuzzy logic controller infers time and duration of water irrigation depending
    on the field parameters like solar radiation, water contained in the soil, ambient
    temperature. The local station collects the sensed data and then sends these data
    to the remote station by using the GPRS link. Xiao et al. [39] designed a Wireless
    integrated Frequency Domain Soil Sensor (WFDSS) application for paddy field. The
    FDSS can be used to monitor the soil moisture of the paddy field and to transmit
    the collected events to the sink with the help of Zigbee technology. Goumopoulos
    et al. [40] proposed a precision irrigation using an autonomous WSAN based system,
    which consists of soil specific sensors that can be used to gather a soil and
    environment information. These collected data send to the base station by using
    IEEE 802.15 and IEEE 802.11 coexistence. This model also utilizes the volatile
    sensor array to find the amount of fertilizer and pesticide is to be needed, which
    can be identified through detection of plant emitted volatile organic compounds.
    In addition, they calculate the specific threshold value of plant based parameter
    from logged datasets by analyzing and applying new rules in machine learning algorithms.
    Table 12.3 Application specific software and hardware requirements Full size table
    Kim et al. [41] developed a wireless lysimeter enabled with web linked wireless
    sensor networks afford real time online monitoring the drainage water flux and
    field condition. The sensor node transmits the sensed data to base station which
    in turn connect to the web server through internet. Park et al. [42] proposed
    a green house management system with wireless sensor networks which aim at collecting
    environmental parameters like humidity, \(\text {CO}_{2}\), CO, temperature, and
    so on. It also monitors the crop diseases and crop productivity by measuring the
    leaf electrical conductivity, and humidity. This proposed system deliberately
    evinces the environmental impact on the crop growth and farmer productivity. Lloret
    et al. [43] deployed the sensor nodes that can be used to capture the images from
    the crop field. This is done using image processing technique and neural network
    in order to identify any scarce status (symptoms) in the leaves. In this way,
    the deficiency of water, nutrients, pest, disease, etc., are found. If any symptoms
    on the leaves are detected, the sensor node immediately transmits the data packets
    to the sink by using IEEE 802.11g and gives an awareness to the farmer to act
    accordingly. Srbinovska et al. [44] presented WSNs, where sensor node sends the
    sensory environmental information like temperature, humidity, and illumination
    to the base station through the Zigbee communication module. This information
    can be used to continuously monitor and control the crop field environment, thereby
    reducing crop diseases and enhancing the quality of crop productivity. Garcia-Sanchez
    et al. [45] integrated the WSNs, 802.15.4 and internet in order to identify the
    status of the crop using video surveillance. This system measures the soil salinity,
    PH, temperature, and moisture. Lopez Riquelme et al. [46] utilized the four types
    of sensor motes including soil moisture, environmental, water level, and gateway
    motes, where each sensor node is interconnected through the Zigbee module. The
    soil moisture sensor provides information of soil temperature, salinity and moisture
    content. The environmental sensor is used for collecting a relative humidity and
    temperature of the environment, the water level motes measure the electrical conductivity
    and water temperature. The sensor node periodically sends the sensed data to the
    base station by using gateway motes. The Graphical User Interface (GUI) enables
    the user to read the data which visualize them graphically and also evinces the
    nodes location with the help of Google map. Gutierrez et al. [47] proposed a web
    application based automated water irrigation system to remotely monitor the soil
    temperature and moisture. The WIU transmits the time and date to WSU, once it
    is powered through Xbee. Then, WSU sends the moisture content, and soil temperature
    to the WIU. The WIU transmits the collected data to web server through GPRS. It
    permits the end user to visualize the data graphically by using graphical user
    interface and also turns on the irrigation pumps for a preferred duration. Ramane
    et al. [48] proposed a fiber optic sensor based soil nutrients detector which
    is to measure the amount of NPK nutrients in the soil. Fiber optic sensor works
    on the principle of calorimetric, i.e., absorption of color by the solution. It
    will also provide the awareness and recommendation to farmers about nutrient needs
    with site specific fertilization. The main drawback is to carry out the farmland
    soil manually to a laboratory for soil pretreatment and chemical analysis. Carvajal-Arango
    et al. [49] proposed a virtual prototype automated system for water irrigation.
    It uses sensory information such as relative humidity, temperature, moisture,
    and light intensity as the input parameters of the fuzzy logic model for deriving
    the water irrigation schedule. The performance of the virtual prototype model
    is analyzed and compared with real time implementation that show a 0.128 percentage
    of error between the model responses. Katyara et al. [50] deploys the TDR-3A sensor
    to the different location in the targeted sensing area in order to sense the soil
    temperature and humidity. The remote terminal unit gathers the sensed data from
    TDR-3A and transmits to the SCADA server through the gateway. The SCADA server
    analyzes these soil moisture data with reference value and make the decision to
    control the relay of solenoid valve, i.e., ON and OFF. Santos et al. [51] introduced
    a pesticide drift controlling by using WSNs in order to lessen the environmental
    contamination. The sensor networks provide essential information (humidity, temperature,
    and wind speed) to the crop spraying support and control system for measuring
    the environmental condition. It can be used to find the moving path of the spraying
    vehicle, to analyze the crop spraying quality by quantifying the deposition of
    pesticide over the crop leaf and also monitor the environment after and before
    the spraying. 12.6 Conclusion The chapter presented here detailed the research
    carried out on the sensor cloud infrastructures. Also, we explored the various
    research issues and design challenges of the sensor cloud architectures. A detailed
    information of layered architecture and functions of the sensor cloud is given
    and also its benefits and the real time applications are analyzed. A sensor cloud
    architectural model for the precision agriculture is proposed and it is detailed
    in this chapter. We are sure that this awareness model using sensor cloud will
    definitely help the farmers in bringing up their yield and also makes the field
    maintenance easy. The sensor based analysis related with agricultural applications
    are done and the application specific software and hardware requirements are found
    out. References Rashid, B., Rehmani, M.H.: Applications of wireless sensor networks
    for urban areas: a survey. J. Netw. Comput. Appl. 60, 192219 (2016) Article   Google
    Scholar   Rawat, P., Singh, K.D., Chaouchi, H., Bonnin, J.M.: Wireless sensor
    networks: a survey on recent developments and potential synergies. J. Supercomput.
    68, 148 (2014) Article   Google Scholar   Yetgin, H., Cheung, K.T.K., El-Hajjar,
    M., Hanzo, L.: Network-lifetime maximization of wireless sensor networks. IEEE
    Access 31, 2191–2226 (2015) Article   Google Scholar   Abo-Zahhad, M., Ahmed,
    S.M., Sabor, N., Shigenobu Sasaki, S.: Mobile sink based adaptive immune energy-efficient
    clustering protocol for improving the lifetime and stability period of wireless
    sensor networks. IEEE Sens. J. 13, 4576–4586 (2015) Article   Google Scholar   Huang,
    P., Xiao, L., Soltani, S., Mutka, M.W., Xi, N.: The evolution of MAC protocols
    in wireless sensor networks: a survey. IEEE Commun. Surv. Tutorials 13, 101–120
    (2013) Article   Google Scholar   Demirkol, I., Ersoy, C., Alagoz, F.: MAC protocols
    for wireless sensor networks: a survey. IEEE Commun. Mag. 44, 115–121 (2006) Article   Google
    Scholar   Lim, H., Kim, C.: Flooding in wireless Ad Hoc networks. Comput. Commun.
    24, 353–363 (2001) Article   Google Scholar   Modi, Z., Jardosh, S., Ranjan, P.:
    Optimized rumor routing algorithm for wireless sensor networks. In: 2009 Fifth
    IEEE Conference on Wireless Communication and Sensor Networks (WCSN), pp. 1–6
    (2009) Google Scholar   Yildiz, M.E., Scaglione, A., Aysal, T.C.: Computing along
    the routes via gossiping. In: Information Theory Workshop, ITW 2009, IEEE, pp.
    450–454 (2009) Google Scholar   Heinzelman, W.P., Chandrakasan, A.P., Balakrishnan,
    H.: An application-specific protocol architecture for wireless microsensor networks.
    IEEE Trans. Wireless Commun. 1, 660–670 (2002) Article   Google Scholar   Deng,
    S., Li, J., Shen, L.: Mobility-based clustering protocol for wireless sensor networks
    with mobile nodes. IET Wireless Sens. Syst. 1, 39–47 (2011) Article   Google Scholar   Younis,
    O., Fahmy, S.: HEED: a hybrid, energy-efficient, distributed clustering approach
    for Ad Hoc sensor networks. IEEE Trans. Mob. Comput. 3, 1471–1472 (2004) Article   Google
    Scholar   Velmani, R., Kaarthick, B.: An efficient cluster-tree based data collection
    scheme for large mobile wireless sensor networks. IEEE Sens. J. 15, 2377–2390
    (2015) Article   Google Scholar   Zhang, H., Shen, H.: Energy-efficient beaconless
    geographic routing in wireless sensor networks. IEEE Trans. Parallel Distrib.
    Syst. 21, 881–896 (2010) Article   Google Scholar   Zabin, F., Misra, S., Woungang,
    I., Rashvand, H.F., Ma, N.W., Ali, M.A.: REEP: data-centric, energy-efficient
    and reliable routing protocol for wireless sensor networks. IET Commun. 2, 995–1008
    (2008) Article   Google Scholar   Mell, P., Grance, T.: The NIST Definition of
    Cloud Computing. National Institute of Standards and Technology Special Publication
    800–145, 1–7 (2011) Google Scholar   Definition of Sensor Cloud http://www.sensorcloud.com/documentation
    Sheng, Z., Mahapatra, C., Zhu, C., Leung, V.C.M.: Recent advances in industrial
    wireless sensor networks toward efficient management in IoT. IEEE Access 3, 622–637
    (2015) Article   Google Scholar   Fortino, G., Gravinal, R., Russo, W.: Activity-aaService:
    Cloud-assisted, BSN-based system for physical activity monitoring. In: Proceedings
    of the 2015 IEEE 19th International Conference on Computer Supported Cooperative
    Work in Design (CSCWD), pp. 588–593 (2015) Google Scholar   Poy, H.M., Duffy,
    B.: A cloud-enabled building and fire emergency evacuation application. IEEE Cloud
    Comput. 1, 40–49 (2014) Article   Google Scholar   Wan, L., Han, G., Shu, L.,
    Feng, N., Zhu, C., Lloret, J.: Distributed parameter estimation for mobile wireless
    sensor network based on cloud computing in battlefield surveillance system. IEEE
    Access 3, 1729–1739 (2015) Article   Google Scholar   Sareen, S., Sood, S.K.,
    Gupta, S.K.: A cloud-based seizure alert system for epileptic patients that uses
    higher-order statistics. Comput. Sci. Eng. 18, 56–67 (2016) Article   Google Scholar   Sareen,
    S., Sood, S.K., Gupta, S.K.: An automatic prediction of epileptic seizures using
    cloud computing and wireless sensor networks. J. Med. Syst. 40, 226 (2016) Article   Google
    Scholar   Ojha, T., Misra, S., Raghuwanshi, N.S.: Sensing-cloud: leveraging the
    benefits for agricultural applications. Comput. Electron. Agric. 135, 96–107 (2017)
    Article   Google Scholar   Ferdoush, S., Li, X.: Wireless sensor network system
    design using Raspberry Pi and Arduino for environmental monitoring applications.
    In: 9th International Conference on Future Networks and Communications (FNC-2014),
    Procedia Computer Science, Vol. 34, pp. 103–110 (2014) Article   Google Scholar   http://meteorology.uonbi.ac.ke/sites/default/files/cbps/sps/meteorology/WEATHER.pdf
    Gorelik, E.: Cloud Computing Models. Massachusetts Institute of Technology, pp.
    1–81 (2013) Google Scholar   Alamri, A., Ansari, W.S., Hassan, M.M., Hossain,
    M.S., Alelaiwi, A., Hossain, M.A.: A survey on sensor-cloud: architecture, applications,
    and approaches. Int. J. Distrib. Sens. Netw. (2013) Google Scholar   Yuriyama,
    M., Kushida, T., Itakura, M.: A new model of accelerating service innovation with
    sensor-cloud infrastructure. In: SRII Global Conference (SRII), IEEE, pp. 308–314
    (2011) Google Scholar   Yuriyama, M., Kushida, T.: Sensor-cloud infrastructure
    - physical sensor management with virtualized sensors on cloud computing. In:
    13th International Conference on Network-Based Information Systems. IEEE (2010)
    Google Scholar   Madria, S., Kumar, V., Dalvi, R.: Sensor cloud: a cloud of virtual
    sensors. IEEE Softw. 31, 70–77 (2014) Article   Google Scholar   Maria, A.R.,
    Sever, P., Carlos, V.: Cloud computing for big data from biomedical sensors monitoring,
    storage and analyze. In: 2015 Conference Grid, Cloud and High Performance Computing
    in Science (ROLCG), IEEE, pp. 1–4 (2015) Google Scholar   Mustafa, S., Nazir,
    B., Hayat, A., Khan, A.R., Madani, S.A.: Resource management in cloud computing:
    taxonomy, prospects, and challenges. Comput. Electr. Eng. 47, 186–203 (2015) Article   Google
    Scholar   Aslam, S., Islam, S., Khan, A., Ahmed, M., Akhundzada, A., Khan, M.K.:
    Information collection centric techniques for cloud resource management: taxonomy,
    analysis and challenges. J. Netw. Comput. Appl. 100, 80–94 (2017) Article   Google
    Scholar   Schroeter, J., Mucha, P., Muth, M., Jugel, K., Lochau, M.: Dynamic configuration
    management of cloud-based applications. In: SPLC12 Proceedings of the 16th International
    Software Product Line Conference, ACM, Vol. 2, pp. 171–178 (2012) Google Scholar   Prahlada
    Rao, B.B., Saluja, P., Sharma, N., Mittal, A., Sharma, S.V.: Cloud computing for
    internet of things and sensing based applications. In: Sixth International Conference
    on Sensing Technology (ICST), pp. 374–380 (2012) Google Scholar   Singh, A., Chatterjee,
    K.: Cloud security issues and challenges: a survey. J. Netw. Comput. Appl. 79,
    88–115 (2017) Article   Google Scholar   Touati, F., Al-Hitmi, M., Benhmed, K.,
    Tabish, R.: A fuzzy logic based irrigation system enhanced with wireless data
    logging applied to the state of Qatar. Comput. Electron. Agric. 98, 233–241 (2013)
    Article   Google Scholar   Xiao, D., Feng, J., Wang, N., Luo, X., Hu, Y.: Integrated
    soil moisture and water depth sensor for paddy fields. Comput. Electron. Agric.
    98, 214–221 (2013) Article   Google Scholar   Goumopoulos, C., O’Flynn, B., Kameas,
    A.: Automated zone-specific irrigation with wireless sensor/actuator network and
    daptable decision support. Comput. Electron. Agric. 105, 20–33 (2014) Article   Google
    Scholar   Kim, Y., Jabro, J.D., Evans, R.G.: Wireless lysimeters for real-time
    online soil water monitoring. Irrig. Sci. 29, 423–430 (2011) Article   Google
    Scholar   Park, D.H., Kang, B.J., Cho, K.R., Shin, C.S., Cho, S.E., Park, J.W.,
    Yang, W.M.: A study on greenhouse automatic control system based on wireless sensor
    network. Wireless Pers. Commun. 56, 117–130 (2011) Article   Google Scholar   Lloret,
    J., Bosch, I., Sendra, S., Serrano, A.: A wireless sensor network for vineyard
    monitoring that uses image processing. Sensors 11, 6165–6196 (2011) Article   Google
    Scholar   Srbinovska, M., Gavrovski, C., Dimcev, V., Krkoleva, A., Borozan, V.:
    Environmental parameters monitoring in precision agriculture using wireless sensor
    networks. J. Clean. Prod. 88, 297–307 (2015) Article   Google Scholar   Garcia-Sanchez,
    A.J., Garcia-Sanchez, F., Garcia-Haro, J.: Wireless sensor network deployment
    for integrating video-surveillance and data-monitoring in precision agriculture
    over distributed crops. Comput. Electron. Agric. 75, 288–303 (2011) Article   Google
    Scholar   Lopez Riquelme, J.A., Soto, F., Suardiaz, J., Sanchez, P., Iborra, A.,
    Vera, J.A.: Wireless sensor networks for precision horticulture in Southern Spain.
    Comput. Electron. Agric. 68, 25–35 (2009) Article   Google Scholar   Gutierrez,
    J., Villa-Medina, J.F., Nieto-Garibay, A., Porta-Gandara, A.: Automated irrigation
    system using a wireless sensor network and GPRS module. IEEE Trans. Instrum. Meas.
    63, 166–176 (2014) Article   Google Scholar   Ramane, D.V., Patil, S.S., Shaligram,
    A.D.: Detection of NPK nutrients of soil using fiber optic sensor. In: International
    Journal of Research in Advent Technology, Special Issue National Conference ACGT
    2015 (2015) Google Scholar   Carvajal-Arango, R., Zuluaga-Holguin, D., Mejia-Gutierrez,
    R.: A systems-engineering approach for virtual/real analysis and validation of
    an automated greenhouse irrigation system. Int. J. Interact. Des. Manuf. 10, 355–367
    (2014) Article   Google Scholar   Katyara, S., Shah, M.A., Zardari, S., Chowdhry,
    B.S., Kumar, W.: WSN based smart control and remote field monitoring of Pakistan
    irrigation system using SCADA applications. Wireless Pers. Commun. 95, 491–504
    (2017) Article   Google Scholar   Santos, I.M., da Costa, F.G., Cugnasca, C.E.,
    Ueyama, J.: Computational simulation of wireless sensor networks for pesticide
    drift control. Precision Agric. 15, 90–303 (2014) Google Scholar   Download references
    Author information Authors and Affiliations Department of Electronics and Communication
    Engineering, Anna University Regional Campus, Coimbatore, 641046, Tamil Nadu,
    India V. Bhanumathi & K. Kalaivanan Corresponding author Correspondence to V.
    Bhanumathi . Editor information Editors and Affiliations Department of Information
    Technology, Silicon Institute of Technology, Bhubaneswar, India Bijan Bihari Mishra
    Department of Information and Communication, Fakir Mohan University, Balasore,
    Odisha, India Satchidanand Dehuri Department of Electrical Engineering, Indian
    Institute of Technology, New Delhi, India Bijaya Ketan Panigrahi Department of
    Computer Science and Engineering, Silicon Institute of Technology, Bhubaneswar,
    India Ajit Kumar Nayak School of Computer Engineering, KIIT University, Bhubaneswar,
    Odisha, India Bhabani Shankar Prasad Mishra School of Computer Engineering, KIIT
    University, Bhubaneswar, Odisha, India Himansu Das Rights and permissions Reprints
    and permissions Copyright information © 2019 Springer-Verlag GmbH Germany, part
    of Springer Nature About this chapter Cite this chapter Bhanumathi, V., Kalaivanan,
    K. (2019). Application Specific Sensor-Cloud: Architectural Model. In: Mishra,
    B., Dehuri, S., Panigrahi, B., Nayak, A., Mishra, B., Das, H. (eds) Computational
    Intelligence in Sensor Networks. Studies in Computational Intelligence, vol 776.
    Springer, Berlin, Heidelberg. https://doi.org/10.1007/978-3-662-57277-1_12 Download
    citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-662-57277-1_12 Published
    23 May 2018 Publisher Name Springer, Berlin, Heidelberg Print ISBN 978-3-662-57275-7
    Online ISBN 978-3-662-57277-1 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this chapter Anyone you share
    the following link with will be able to read this content: Get shareable link
    Provided by the Springer Nature SharedIt content-sharing initiative Publish with
    us Policies and ethics Download book PDF Download book EPUB Sections Figures References
    Abstract Introduction to Wireless Sensor Networks Why Cloud Computing? Introduction
    to Sensor Cloud An Example Architectural Model for Precision Agriculture Related
    Work Conclusion References Author information Editor information Rights and permissions
    Copyright information About this chapter Publish with us Discover content Journals
    A-Z Books A-Z Publish with us Publish your research Open access publishing Products
    and services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature'
  inline_citation: '>'
  journal: Studies in computational intelligence
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: 'Application Specific Sensor-Cloud: Architectural Model'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/electronics12112490
  analysis: '>'
  authors:
  - Dimitris Kanellopoulos
  - V. Sharma
  - Theodor Panagiotakopoulos
  - Achilles Kameas
  citation_count: 6
  full_citation: '>'
  full_text: ">\nCitation: Kanellopoulos, D.; Sharma,\nV.K.; Panagiotakopoulos, T.;\
    \ Kameas,\nA. Networking Architectures and\nProtocols for IoT Applications in\n\
    Smart Cities: Recent Developments\nand Perspectives. Electronics 2023, 12,\n2490.\
    \ https://doi.org/10.3390/\nelectronics12112490\nAcademic Editors: Marek Pagáˇc,\n\
    Chuan Pham, Van Dung Nguyen,\nHuynh Kha Tu, Huu Khoa Tran and\nTran Anh Khoa\n\
    Received: 28 April 2023\nRevised: 28 May 2023\nAccepted: 29 May 2023\nPublished:\
    \ 31 May 2023\nCopyright:\n© 2023 by the authors.\nLicensee MDPI, Basel, Switzerland.\n\
    This article is an open access article\ndistributed\nunder\nthe\nterms\nand\n\
    conditions of the Creative Commons\nAttribution (CC BY) license (https://\ncreativecommons.org/licenses/by/\n\
    4.0/).\nelectronics\nReview\nNetworking Architectures and Protocols for IoT Applications\
    \ in\nSmart Cities: Recent Developments and Perspectives\nDimitris Kanellopoulos\
    \ 1,*\n, Varun Kumar Sharma 2, Theodor Panagiotakopoulos 3,4,*\nand Achilles Kameas\
    \ 3\n1\nDepartment of Mathematics, University of Patras, 26500 Patras, Greece\n\
    2\nDepartment of Computer Science and Engineering, The LNM Institute of Information\
    \ Technology,\nJaipur 302031, India; varunksharma.102119.cse@gmail.com\n3\nSchool\
    \ of Science and Technology, Hellenic Open University, 26335 Patras, Greece; kameas@eap.gr\n\
    4\nSchool of Business, University of Nicosia, 2417 Nicosia, Cyprus\n*\nCorrespondence:\
    \ d_kan2006@yahoo.gr (D.K.); panagiotakopoulos@eap.gr (T.P.)\nAbstract: Numerous\
    \ municipalities employ the smart city model in large cities to improve the quality\n\
    of life of their residents, utilize local resources efﬁciently, and save operating\
    \ expenses. This model\nincorporates many heterogeneous technologies such as Cyber-Physical\
    \ Systems (CPS), Wireless\nSensor Networks (WSNs), and Cloud Computing (ClCom).\
    \ However, effective networking and\ncommunication protocols are required to provide\
    \ the essential harmonization and control of the many\nsystem mechanisms to achieve\
    \ these crucial goals. The networking requirements and characteristics\nof smart\
    \ city applications (SCAs) are identiﬁed in this study, as well as the networking\
    \ protocols\nthat can be utilized to serve the diverse data trafﬁc ﬂows that are\
    \ required between the dissimilar\nmechanisms. Additionally, we show examples\
    \ of the networking designs of a few smart city systems,\nsuch as smart transport,\
    \ smart building, smart home, smart grid, smart water, pipeline monitoring,\n\
    and control systems.\nKeywords: smart city; IoT applications; networking architectures;\
    \ Cyber-Physical Systems (CPS);\nWireless Sensor Networks (WSNs)\n1. Introduction\n\
    Nowadays, several municipalities implement the smart city model [1] to improve\n\
    the quality of life for their citizens and the efﬁcient use of city resources.\
    \ Intelligent\nservices can decrease operational costs and resource expenditure\
    \ in smart cities. They can\nenhance performance and operations in a wide variety\
    \ of smart city applications (SCAs)\nincluding transportation, healthcare, energy,\
    \ education, and many more. Smart services are\nprovided by various cutting-edge\
    \ technologies supporting the smart city model. Examples\nof these technologies\
    \ include the internet of things (IoT), Wireless Sensor Networks (WSNs),\nCyber-Physical\
    \ Systems (CPS), Cloud Computing (ClCom), fog computing (FoC), big data\nanalytics,\
    \ and robots.\nIoT is the core technology used in smart cities, bringing plentiful\
    \ human life beneﬁts [2].\nIoT enables the integration of physical objects/smart\
    \ things into urban environments\nwhere innovative services are offered to support\
    \ every activity at any time and from any\nlocation [2]. Things are monitored\
    \ by IoT applications that make direct decisions for their\nefﬁcient management.\
    \ Moreover, things state their conditions, such as battery status and\nfault reporting\
    \ for prognostic maintenance. WSNs offer real-time monitoring of the state\nof\
    \ the infrastructure and resources in a smart city [3]. Wireless sensor devices\
    \ can also\nobtain physical environment information such as temperature. In a\
    \ CPS, the computation,\nnetworking, and physical processes are put together to\
    \ control and monitor the physical\nenvironment of a smart city [4]. In smart\
    \ cities, CPSs are employed to offer practical\nconnections between the virtual\
    \ and physical worlds. Applications for smart cities can\nbe sustained by the\
    \ ClCom paradigm that provides a scalable and affordable platform\nElectronics\
    \ 2023, 12, 2490. https://doi.org/10.3390/electronics12112490\nhttps://www.mdpi.com/journal/electronics\n\
    Electronics 2023, 12, 2490\n2 of 63\nfor computation and IoT data storage [5].\
    \ FogC offers reduced latency, greater mobility,\nlocation awareness, streaming,\
    \ and real-time response for SCAs [6]. Smart cities have\ndispersed vast numbers\
    \ of sensors, and thus large-scale data processing requires a complex\ninfrastructure.\
    \ Robotics in the cloud can be an effective computing tool for IoT applications\n\
    that require a lot of data processing [7]. To improve the services offered by\
    \ smart cities,\nbig data analytics is employed to generate intelligent and optimal\
    \ temporary and lasting\ndecisions [8].\nThe abovementioned technologies are used\
    \ to implement numerous smart city ser-\nvices [9,10]. For instance, intelligent\
    \ transportation services are applied to improve route\nplanning and avoid jamming\
    \ in city streets. These services can enhance vehicular safety\nand make possible\
    \ self-driving cars. Furthermore, parking services and smart trafﬁc light\ncontrols\
    \ are provided. Smart energy services [10] (e.g., intelligent energy management\n\
    and energy consumption prediction) are used to sustain smart grids and smart buildings.\n\
    These services can also offer improved utilization of renewable energy. Additional\
    \ smart\nservices are engaged in real-time monitoring of bridges, tunnels, water\
    \ networks, train and\nsubway rails, and gas and oil pipelines. Structural health\
    \ monitoring is also feasible using\nsmart services [11]. Last but not least,\
    \ there are smart services that focus on monitoring the\nenvironment, public safety,\
    \ and security of citizens [12].\nAll these smart city services necessitate a\
    \ reliable networking infrastructure to efﬁ-\nciently exchange messages between\
    \ the modules of a smart city system implementing a\nparticular smart service.\
    \ In particular, smart city services need a variety of networking and\ncommunication\
    \ technologies for their completion because they are proposed for dissim-\nilar\
    \ scales. For example, smart services for smart buildings must be implemented\
    \ based\non Zigbee (IEEE 802.15.4) or Bluetooth (IEEE 802.15.1) network protocols.\
    \ On the other\nhand, smart services for the smart grid must be mainly implemented\
    \ using the WiMAX\n(IEEE 802.16) network protocol. From another viewpoint, smart\
    \ city services can exploit\ndissimilar network and communication models and solutions.\n\
    Until now, the networking and communication components of smart city systems have\n\
    received little research attention. To the best of our knowledge, a comprehensive\
    \ survey\nof network architectures and protocols for IoT applications in smart\
    \ cities does not exist\nand is the goal of this study. The communication and\
    \ networking issues involved in smart\ncity systems are examined in this study.\
    \ This paper considers networking technologies,\ntopologies, and communication\
    \ requirements for such systems. It also examines if current\nnetwork protocols\
    \ are appropriate for certain smart city services. This paper surveys recent\n\
    developments in networking architectures to support SCAs. As this is an active\
    \ area, this\npaper is important to support new research in this ﬁeld. The paper\
    \ contributes as follows:\n1.\nIt presents network requirements of the major SCAs\
    \ including intelligent transporta-\ntion, smart buildings, pipeline monitoring\
    \ and control, smart water networks, smart\ngrids, and manufacturing control and\
    \ monitoring.\n2.\nIt reviews networking architectures used for the above applications\
    \ focusing mainly\non the protocols’ suitability.\nThe remainder of this paper\
    \ is structured as follows: Section 2 describes SCAs;\nSection 3 presents network\
    \ requirements and protocols used for important SCAs;\nSections 4 and 5 analyze\
    \ protocols and network architectures for smart grids, smart build-\nings, smart\
    \ water and pipeline network monitoring, and smart transportation; Section 6\n\
    summarizes the paper, while Section 7 provides open research directions; lastly,\
    \ Section 8\nconcludes the paper. Figure 1 provides the layout of the survey.\n\
    Electronics 2023, 12, 2490\n3 of 63\nElectronics 2023, 12, x FOR PEER REVIEW \n\
    3 of 65 \n \n \n \nFigure 1. The layout of the survey paper. \nSystematic Literature\
    \ Review \nArticle Selection Method: We provide a Systematic Literature Review\
    \ (SLR) meth-\nodology [13] with particular notice to studies related to networking\
    \ architectures or \nprotocols for IoT applications in smart cities. The SLR was\
    \ employed to systematically \nstudy networking architectures and protocols for\
    \ IoT applications in smart cities. We \nproposed a research question to cope\
    \ with the key issues of networking architectures and \nprotocols for IoT applications\
    \ in smart cities. \nQuestion Formalization: Key issues and challenges in the\
    \ field were identified. Such \nissues were network architectures for IoT, network\
    \ protocols for IoT, IoT applications for \nsmart cities, and smart city applications.\
    \ This study answers the next research question: \nRQ: What is the emphasis of\
    \ networking architectures or protocols for IoT applica-\ntions in smart cities?\
    \ \nThis question determines the number of studies focusing on network architectures\
    \ \nand protocols for IoT applications for smart cities that have been published\
    \ to date to \nemphasize its significance in smart cities. \nArticle Selection\
    \ Process: The article selection process is performed in three stages: \n1. \n\
    Automated keyword-based search; \n2. \nSelection of the article based on the title,\
    \ abstract, and quality of the publication; \nFigure 1. The layout of the survey\
    \ paper.\nSystematic Literature Review\nArticle Selection Method:\nWe provide\
    \ a Systematic Literature Review (SLR)\nmethodology [13] with particular notice\
    \ to studies related to networking architectures\nor protocols for IoT applications\
    \ in smart cities. The SLR was employed to systematically\nstudy networking architectures\
    \ and protocols for IoT applications in smart cities. We\nproposed a research\
    \ question to cope with the key issues of networking architectures and\nprotocols\
    \ for IoT applications in smart cities.\nQuestion Formalization: Key issues and\
    \ challenges in the ﬁeld were identiﬁed. Such\nissues were network architectures\
    \ for IoT, network protocols for IoT, IoT applications for\nsmart cities, and\
    \ smart city applications. This study answers the next research question:\nRQ:\
    \ What is the emphasis of networking architectures or protocols for IoT applications\n\
    in smart cities?\nThis question determines the number of studies focusing on network\
    \ architectures and\nprotocols for IoT applications for smart cities that have\
    \ been published to date to emphasize\nits signiﬁcance in smart cities.\nArticle\
    \ Selection Process: The article selection process is performed in three stages:\n\
    1.\nAutomated keyword-based search;\n2.\nSelection of the article based on the\
    \ title, abstract, and quality of the publication;\n3.\nElimination of inappropriate\
    \ articles.\nElectronics 2023, 12, 2490\n4 of 63\nIn the ﬁrst stage, the search\
    \ process is automatically performed using searching on\npopular academic databases\
    \ such as IEEE explorer, ACM, Wiley, Springer, Science Direct,\nSAGE, and Google\
    \ Scholar. The following search string was deﬁned by adding other\nspellings of\
    \ the main elements to ﬁnd relevant articles. The search string was as follows:\n\
    (“IoT” OR “Internet of Things”) AND (“network architecture” OR “network pro-\n\
    tocol” AND “smart cities” OR “smart rural” OR “smart village” OR “smart trafﬁc”\
    \ OR\n“smart transportation” OR “smart street lights” OR “smart energy” OR “smart\
    \ grid” OR\n“smart buildings” OR “smart home” OR “smart residence” OR “home automation”\
    \ OR\n“smart water” or “smart waste management” OR “smart healthcare” OR “smart\
    \ rural”\nAND “Cloud Computing” OR “edge computing” OR “software-deﬁned networking”\
    \ OR\n“Artiﬁcial Intelligence”).\nWe found 264 articles from journals, conference\
    \ proceedings, books, and patents.\nThese articles were published between 2013\
    \ and 2023. In the article selection based on the\nquality of the publisher stage,\
    \ the search string was constrained by searching for conference\npapers and journal\
    \ articles of IEEE, ACM, Sage, Wiley, Science Direct, and Springer, in\norder\
    \ to guarantee that only high-quality publications and articles were selected\
    \ for the\nreview. Consequently, 240 articles were selected.\nIn the third stage\
    \ of eliminating the inappropriate articles, a Quality Assessment\nChecklist (QAC)\
    \ based on [13] was developed, wherein those articles emerging from the\ninitial\
    \ search were reﬁned. After reading the abstracts, we eliminated the unrelated\
    \ articles.\nThe entire body of the remaining papers was checked, and those which\
    \ were not related to\nour concerned ﬁeld were also crossed out. After eliminating\
    \ inappropriate articles, only\n226 studies were identiﬁed.\n2. Smart City Applications\n\
    This section discusses the main SCAs used in diverse domains. To understand what\n\
    type of assistance is needed by the networking infrastructures offered for SCAs,\
    \ their\nadvantages and design problems were addressed.\nIn the energy sector,\
    \ SCAs are being used to increase the reliability, efﬁciency, and\nsustainability\
    \ of electric energy generation and distribution in smart grids [14]. A smart\
    \ grid\nis a new power grid system that automatically collects and reacts to available\
    \ information\nabout supplier and consumer behavior. Smart grids use CPS to supply\
    \ self-monitoring and\nsuperior control mechanisms for power generation and consumer\
    \ demand, improving grid\nreliability and efﬁciency. CPS systems are also used\
    \ to manage the process of producing\nrenewable energy from wind turbines [15].\n\
    Certain applications are utilized in smart buildings to monitor and manage energy\n\
    consumption [16]. CPS controls the equipment in the buildings, including the Heating,\n\
    Ventilation, and Air-Conditioning (HVAC) systems; appliances; and lighting systems.\n\
    Different kinds of sensor nodes, which keep track of the current state of the\
    \ environment\nand energy consumption, are typically included in smart building\
    \ systems. A centralized\nmonitoring and control system receives observations\
    \ and measurements from these sensors.\nBased on reported observations, current\
    \ operational circumstances, and environmental\nfactors, the control system employs\
    \ intelligent algorithms to manage the sub-systems\nemployed in the buildings\
    \ to optimize energy consumption.\nIntelligent transportation is another SCA that\
    \ has attracted a lot of interest in the\ntransportation sector. Applications\
    \ related to vehicle safety are among the most crucial\ntypes of such applications.\
    \ Vehicles can be equipped with a variety of safety features,\nsuch as blind spot\
    \ monitoring, emergency braking, collision avoidance systems, and lane\nchange\
    \ warning signs. To improve driving safety, these applications offer full or semi-\n\
    automatic operations. Real-time and reliability support in detection and response\
    \ are these\napplications’ most crucial characteristics. Applications for enhancing\
    \ vehicle safety must\nbe dependable and able to operate in real-time in all aspects\
    \ such as threat observations,\ndecision making, communication, and actions. However,\
    \ the software cannot handle\nhigh levels of incorporation across all the relevant\
    \ devices and guarantee real-time and\nElectronics 2023, 12, 2490\n5 of 63\ntrustworthy\
    \ replies. Furthermore, self-driving vehicles are regarded as crucial SCAs [17].\n\
    They combine all the aforementioned capabilities with vision and monitoring equipment\n\
    to provide the vehicle the ability to traverse the roads using sensed data and\
    \ intelligent\nsoftware that evaluates and reacts to these data in real-time.\
    \ Intelligent trafﬁc light controls,\nwhich incorporate device monitoring across\
    \ numerous locations to precisely forecast trafﬁc\npatterns, are another application\
    \ of intelligent transportation. The authors of [18] present\nan example of intelligent\
    \ trafﬁc lights.\nWater networks are maintained using smart city technology to\
    \ increase their intelli-\ngence, efﬁciency, dependability, and sustainability.\
    \ CPS systems are integrated into water\nnetworks to add smart characteristics\
    \ to the processes of water distribution [19]. Offering\nearly warning systems\
    \ to identify problems in water networks is one of these duties. For\ninstance,\
    \ it is simple to identify leaks and pipe bursts. Quick, temporary ﬁxes can be\n\
    implemented to prevent water wastage and future network threats or damage [20].\n\
    WSN-based monitoring of greenhouses is another SCA. Such monitoring provides\n\
    well-organized control for appropriate soil, climate, lighting, and water level\
    \ in green-\nhouses [21]. Other smart city systems are deployed in the industry\
    \ to automate, control,\nmonitor, and improve manufacturing procedures [22,23].\
    \ Finally, smart-healthcare systems\nbased on edge computing [24] are proposed\
    \ to monitor and examine the physical health of\nusers [25].\nFigure 2 shows some\
    \ important applications including smart trafﬁc surveillance\nand management,\
    \ smart healthcare, weather and air quality monitoring, smart waste\nmanagement,\
    \ smart street lighting, smart emergency response system, and smart home.\n \n\
    observations, decision making, communication, and actions. However, the software\
    \ \ncannot handle high levels of incorporation across all the relevant devices\
    \ and guarantee \nreal-time and trustworthy replies. Furthermore, self-driving\
    \ vehicles are regarded as \ncrucial SCAs [17]. They combine all the aforementioned\
    \ capabilities with vision and \nmonitoring equipment to provide the vehicle the\
    \ ability to traverse the roads using \nsensed data and intelligent software that\
    \ evaluates and reacts to these data in real-time. \nIntelligent traffic light\
    \ controls, which incorporate device monitoring across numerous \nlocations to\
    \ precisely forecast traffic patterns, are another application of intelligent\
    \ \ntransportation. The authors of [18] present an example of intelligent traffic\
    \ lights. \nWater networks are maintained using smart city technology to increase\
    \ their intel-\nligence, efficiency, dependability, and sustainability. CPS systems\
    \ are integrated into \nwater networks to add smart characteristics to the processes\
    \ of water distribution [19]. \nOffering early warning systems to identify problems\
    \ in water networks is one of these \nduties. For instance, it is simple to identify\
    \ leaks and pipe bursts. Quick, temporary fixes \ncan be implemented to prevent\
    \ water wastage and future network threats or damage \n[20]. \nWSN-based monitoring\
    \ of greenhouses is another SCA. Such monitoring provides \nwell-organized control\
    \ for appropriate soil, climate, lighting, and water level in green-\nhouses [21].\
    \ Other smart city systems are deployed in the industry to automate, control,\
    \ \nmonitor, and improve manufacturing procedures [22,23]. Finally, smart-healthcare\
    \ sys-\ntems based on edge computing [24] are proposed to monitor and examine\
    \ the physical \nhealth of users [25]. \nFigure 2 shows some important applications\
    \ including smart traffic surveillance and \nmanagement, smart healthcare, weather\
    \ and air quality monitoring, smart waste man-\nagement, smart street lighting,\
    \ smart emergency response system, and smart home. \n \nFigure 2. Facilitating\
    \ networking and communication amongst SCAs.\nElectronics 2023, 12, 2490\n6 of\
    \ 63\nAnalysis of Smart City Applications/Systems\nThis subsection analyses the\
    \ SCAs shown in Figure 2.\nSmart Trafﬁc Surveillance Systems: These systems are\
    \ based on centralized pro-\ncesses and may fail due to networking problems. Thus,\
    \ to automate such an innova-\ntive system, centralized and distributed methods\
    \ must be used to maintain local servers.\nJavaid et al. [26] suggested a smart\
    \ trafﬁc management system using a mixture of central-\nized and decentralized\
    \ processes to optimize the ﬂow of vehicles on roads and an algorithm\nto manage\
    \ a variety of trafﬁc conditions efﬁciently. In the context of smart cities, effec-\n\
    tive trafﬁc management implies that a decision-making model identiﬁes and quantiﬁes\n\
    trafﬁc congestion as well as predicts trafﬁc patterns. Afrin and Yodo [27] offered\
    \ a theoreti-\ncal analysis that takes into account such effective trafﬁc management.\
    \ Notably, existing\ndecision-making models are primarily devoted to urban and\
    \ highway trafﬁc management,\nnot considering the closed campuses and collector\
    \ roads scenarios. Sarrab et al. [28] iden-\ntiﬁed this weakness and proposed\
    \ an IoT-based system model that collects, processes,\nand stores real-time trafﬁc\
    \ data for such an unusual scenario. In an IoT-based trafﬁc man-\nagement system,\
    \ various challenges emerge. These challenges include security issues,\nextremely\
    \ sophisticated networking equipment, network overhead, required adjustments,\n\
    and speciﬁc information ﬁelds in the protocol header and structure, as well as\
    \ higher costs.\nSmart Healthcare Systems: For real-time monitoring of health\
    \ parameters, these sys-\ntems are progressively being associated with and connected\
    \ via the Internet to numerous\ntypes of available smart wearable sensing and\
    \ computing devices. These systems face\nseveral problems [29] that must be resolved.\
    \ A security/privacy perspective, inter-realm au-\nthentication, interoperability\
    \ issues, device-to-device informal communication, and collec-\ntion and management\
    \ of medical data are among the issues on this list. Alromaihi et al. [30]\naddressed\
    \ issues related to cyber-security while using IoT for such applications. They\n\
    sought to examine secure techniques’ deployment and implementation from the perspec-\n\
    tive of preventing and reducing cyber-attacks on IoT devices. Some crucial surveys\
    \ and\nreviews [31,32] on smart healthcare applications tackle the problem of\
    \ integrating IoT\nsystems with any healthcare application particularly.\nWeather\
    \ and Air Quality Monitoring Systems: These systems use environmental\nmonitoring\
    \ stations, which are extremely pricey to acquire and maintain. For example,\n\
    these stations require engineers with specialized skill sets and data analysts.\
    \ Therefore, it is\nimpractical to deploy such monitoring stations densely. Instead,\
    \ they are often deployed\nsparsely, which creates the problem of limited spatial\
    \ resolutions for useful measurements.\nLately, cheap monitoring sensors have\
    \ evolved in the market, signiﬁcantly assisting in\nreﬁning the granularity of\
    \ monitoring [33]. Highlighting the same problem, the authors [33]\nemphasized\
    \ the drawbacks of these inexpensive sensors (particularly with air quality\n\
    monitoring sensors). For instance, these sensors frequently struggle with the\
    \ issue of\ncross-compassions in the presence of multiple ambient pollutants.\
    \ Moreover, these sensors\nare extremely susceptible to unexpected variations\
    \ in humidity, temperature, and wind\ndirection, and as a result, their accuracy\
    \ deteriorates with time. A recalibration routine\nmight be a way to maintain\
    \ and enhance such accuracy. However, because it would take\na lot more time and\
    \ work, this technique is highly improbable and would not work for\nlarge-scale\
    \ deployments. In a weather monitoring system, the monitoring is highly complex\n\
    and involves three steps [34]:\n(1)\nObserving: It can be performed by monitoring\
    \ satellite imagery, precipitation reports,\nsurface data, and gathering data\
    \ from other nearby forecasters.\n(2)\nForecasting: It can be performed by forecasters\
    \ as short-term and long-term forecasting.\nShort-term forecasting is carried\
    \ out by evaluating the current weather conditions\nand projecting them over the\
    \ next few hours using knowledge of the mechanics\nof the weather. Long-term forecasting,\
    \ however, is possible through weather (nu-\nmerical) modeling and the projection\
    \ of such modeling using computer simulations.\nTo produce these simulations for\
    \ future forecasting, these modeling techniques use\nenvironmental data from satellite\
    \ photography, weather balloons, and surface ob-\nElectronics 2023, 12, 2490\n\
    7 of 63\nservations. Following completion of the forecasting, the forecasters\
    \ translate the\nproduced simulated expected output into a perceptible format\
    \ for non-specialists so\nthat they can respond appropriately.\n(3)\nCommunicating:\
    \ Finally, they communicate such output or forecasted information to\nappropriate\
    \ authorities.\nDespite the fact that all of these computer models are used to\
    \ forecast the weather, the\nsuccess of each one is largely inﬂuenced by three\
    \ different elements: (a) the quantity of\nprecise data; (b) the length of time\
    \ needed to analyze that data; and (c) the complexity of\ndynamic atmospheric\
    \ weather events. A large part of collecting accurate data for a region\nis the\
    \ placement of weather stations. They may occasionally be stationed distant from\
    \ rural\nareas in a city area. Because of this, they are unable to gather enough\
    \ information for desert,\nsea, or even rural areas to supply the computer models\
    \ used to predict weather conditions\naccurately. Forecasters also use satellite\
    \ data to combat this issue. However, because\nof cloud cover and signiﬁcant changes\
    \ in the amount of water vapor in the atmosphere,\nsatellite data accuracy can\
    \ occasionally be unreliable. Moreover, the topographic image and\nmap information\
    \ or surface/land features change substantially in a shorter area. Hence,\nit\
    \ further impacts temperature and precipitation values signiﬁcantly. This further\
    \ makes\nthings harder for a computer model to predict accurately. Hence, there\
    \ is a need to re-\nevaluate and re-modify such models’ mathematical equations\
    \ so that they can predict the\nchanges more accurately.\nSmart Waste Management\
    \ Systems: Automated smart waste management is crucial for\nthe following reasons:\
    \ (1) due to a lack of waste disposal infrastructure; (2) thin or delicate\nwaste\
    \ collection methods being required; (3) lack of effective waste logistics management;\n\
    (4) insufﬁcient use of cutting-edge trash treatment and recycling technologies;\
    \ and (5) lack\nof workers and specialists with the necessary technical and non-technical\
    \ skills to handle\ngarbage disposal and the associated infrastructures. Smart\
    \ waste management schemes\ninclude various steps such as (1) waste collection;\
    \ (2) differentiation of waste as per their\nbiological and physical properties;\
    \ (3) storage; (4) transportation of waste into garbage\ndisposal infrastructures/treatment\
    \ plants; and (5) waste treatment and disposal. Sosunova\nand Porras [35] identiﬁed\
    \ issues and challenges while collecting and analyzing data from\nsmart deployed\
    \ sensors on garbage bins. Their study investigated some operational issues\n\
    such as the management of waste vehicles and urban infrastructure and smartly\
    \ managing\nwaste vehicle routes.\nSmart Street Lighting Systems: This system\
    \ is a network-oriented solution that uses\nstreetlights ﬁtted with speciﬁc actuators\
    \ and sensors, implying a wide range of facilities\nand connectivity interfaces\
    \ [36]. The street lighting application (described in [37]) has a\nmechanism that\
    \ gathers or monitors environmental data and then evaluates street lighting\n\
    with the use of smart wireless nodes (ﬁtted out with numerous forms of sensors\
    \ and\nactuators). These smart nodes are mounted atop the towers that hold the\
    \ streetlights, and\nthey are connected to the Internet by way of a gateway device.\
    \ Zanella et al. [37] insist\nthat their system could assist in gathering environmental\
    \ parameters such as humidity, air\ntemperature, and CO level. Moreover, the authors\
    \ stated that optimizing street lighting\nefﬁciency is a paramount concern that\
    \ must be addressed. This monitoring system makes\nit possible to maximize efﬁciency\
    \ since it allows for the adjustment of streetlamp intensity\nin response to the\
    \ time of day, the presence of people, and the weather. Although this\nsystem\
    \ is simple and built on the IoT concept, it will inevitably contain crucial concerns\
    \ that\nrequire particular attention, such as complicated networking solutions\
    \ and communication\namong heterogeneous devices. However, selecting the right\
    \ light lamp is critical for a\npower-efﬁcient lighting mechanism. Their selection\
    \ is based on how effective they are in\nterms of power usage and lifespan. The\
    \ existing metropolitan system relies on Metal Halide\n(MH) or High-Pressure Sodium\
    \ (HPS) bulbs. Unlike LEDs, these bulbs are frequently seen\nas being inefﬁcient\
    \ in terms of power consumption and requiring signiﬁcant maintenance,\nwhich adds\
    \ signiﬁcantly to the cost. In addition, the system should be designed following\n\
    the advised design standards (it must adhere to the current standard CEN/TR 13201)\
    \ [36].\nElectronics 2023, 12, 2490\n8 of 63\nCurrently, there are three kinds\
    \ of control systems for smart lighting systems in use:\ncentralized, decentralized,\
    \ and hybrid. Nevertheless, these systems are susceptible to a\nvariety of security\
    \ assaults. Moreover, not much effort has been made into this problem\nthus far.\n\
    Smart Emergency Response Systems: Such a system ensures the safety and security\
    \ of\nits residents. It can be utilized for crime detection and prevention, dealing\
    \ with natural\ncalamities and accidents, and law enforcement [38]. Data collection\
    \ is ﬁrst and foremost\nimportant for the designing portion of these applications.\
    \ Depending on the gathered\nfacts, the development of intelligence (which aids\
    \ in making important decisions) and the\nability to respond swiftly and quickly\
    \ are the issues that require special attention. When\nit comes to gathering data,\
    \ we can make use of CCTV cameras and sophisticated trafﬁc\nsensors. A developer\
    \ can create and put into action a crucial learning scheme that will\nconduct\
    \ predictive analysis and gather intelligence on top of the data gathered. Therefore,\n\
    this kind of predictive analysis has the potential to gather signiﬁcant information\
    \ that\nwill help the relevant authorities (e.g., the ﬁre safety department, the\
    \ police department,\nand law enforcement agencies) take the proper security and\
    \ preventive measures. The\nconcept of widespread surveillance has important beneﬁts\
    \ for security and safety. However,\nkeeping track of such vast amounts of data\
    \ also prompts a lot of worries and issues for\ndesigners and developers, including\
    \ storage; the effectiveness of learning algorithms; and,\nmost importantly, the\
    \ question of whether it is morally right or acceptable to keep track\nof each\
    \ individual (a privacy issue). In addition, a very important point is whether\
    \ this\nkind of widespread surveillance is feasible, especially for nations such\
    \ as China and India,\nwhere a city’s population can exceed that of a whole nation.\
    \ Further, Gharaibeh et al. [38]\nclaimed that combining information transmission\
    \ technologies with well-implemented\ndata analytics models is necessary for quick\
    \ and swift collaboration. To save as many lives\nas possible during natural disasters,\
    \ it is imperative to gather, assess, and communicate\nvital information to the\
    \ relevant authorities. As a result, there is currently a lot of work\nbeing done\
    \ to enhance the performance of information exchange systems. Although this\n\
    system is based on the IoT concept and is relatively simple, it faces important\
    \ problems\nthat need consideration, such as complex networking solutions and\
    \ information sharing\nacross heterogeneous devices on time (time-sensitive application).\n\
    Smart Residence/Home Automation: A smart home has highly developed systems\nsuch\
    \ as a control system for devices or objects (such as fans, lights, music systems,\
    \ TVs,\nand other smart appliances), automated door openers, smart appliances\
    \ that may send\nusers remote status updates, smart refrigerators, and washing\
    \ machines. A user can control\nthe majority of smart home appliances remotely\
    \ with two recently produced gadgets:\nGoogle Home and Amazon Echo. In a smart\
    \ home, the end-user demands a high-speed\ninternet connection, so they can access\
    \ networking sites that control the home with HD live\nstreaming services. In\
    \ contrast, a smart healthcare application needs safe connections to\ncomputing\
    \ servers in the cloud for managing sensitive private information. Hence, data\n\
    management systems must address a crucial issue, namely, the necessity to concentrate\n\
    on data distribution based on various end-user categories rather than just recommending\n\
    distinct data distribution among various end-user groups [38]. The concept of\
    \ smart home\nautomation raises serious concerns about security and privacy risks.\
    \ A smart home includes\nsecurity monitoring systems with motion sensors, wirelessly\
    \ opening smart door locks,\ntelevisions, phones, and other smart appliances that\
    \ are highly outﬁtted with cameras and\nmicrophones. Although these gadgets improve\
    \ the system, little research has been done on\ntheir privacy and security features.\
    \ If we conduct a thorough analysis of these gadgets, we\nwill discover that their\
    \ manufacturers offer either very few or no security features at all.\nIndeed,\
    \ Fernandes et al. [39] provided their eye-opening views after carefully examining\n\
    Samsung’s SmartThings framework (programming) and their SmartApps market. They\n\
    argued that more than 50%—exactly 55%—of these smart applications are already\
    \ more\nprivileged by default and as a result, do not need to access unrelated\
    \ applications. As a\nresult, hackers can use them with ease. Apart from this,\
    \ according to a published document\nElectronics 2023, 12, 2490\n9 of 63\nby WikiLeaks\
    \ [40], the Central Intelligence Agency (CIA) has all the tools to access, control,\n\
    and hack these smart home applications anywhere in the world. Furthermore, criminal\n\
    entities and hackers could seize control of smart personal devices, capture delicate\
    \ private\ninformation, and exploit that information immorally typically through\
    \ user tracking and\nproﬁling. Additionally, a hacker may break into one of these\
    \ smart applications, grab vital\ninformation, and then use it to launch any kind\
    \ of attack. For instance, based on motion\nsensors, security camera feeds, and\
    \ power usage patterns, a burglar can determine where\nand when to break into\
    \ the house. By locating the authentication credentials of authorized\nparties,\
    \ they can compromise smart door locks [41]. Better security-aware hardware and\n\
    software (as well as the related common standards) must be developed to safeguard\
    \ against\nall these attempts so that high-tech appliances, sensors, actuators,\
    \ etc., are impervious to\nsuch security and privacy attacks.\nSmart Grid Networks:\
    \ The functionality of the traditional electricity grid is unidirec-\ntional (i.e.,\
    \ electricity is transmitted from electricity-producing sources to end-customers).\n\
    Electricity has been moving from power plants to users in a single direction thanks\
    \ to\nthe deployment of electricity grids. The existing grid system operates in\
    \ an open-loop\nfashion since there are not any adequate communication infrastructures\
    \ in the distribution\nsector. Moreover, the main distribution center has little\
    \ or no real-time knowledge of the\nsystem’s operating conditions and dynamically\
    \ changing load. There are also several tech-\nnical, economic, and environmental\
    \ problems with this conventional approach. Therefore,\nthis conventional system\
    \ must become dependable, manageable, and scalable, as well as\nﬂexible, secure,\
    \ and interoperable [42].\nThe smart grid is the next invention of the Electric\
    \ Power System (EPS) that incor-\nporates quicker, more secure, and reliable communication\
    \ networks [43]. Smart grids\nsupplement the conventional electricity grid by\
    \ incorporating renewable energy sources\nsuch as biomass, solar energy, and wind\
    \ energy. These energy sources are much cleaner\nand more ecologically friendly\
    \ than non-renewable energy sources such as fossil fuels.\nHowever, it is important\
    \ to identify the most suitable communication technology for the\nsmart grid’s\
    \ successful implementation and deployment. The smart grid’s overall commu-\n\
    nication style is unique compared with conventional network communication patterns.\
    \ The\ncommunication network architecture of the smart grid must be able to handle\
    \ information\nexchange between sensors, actuators, smart electronic devices,\
    \ and numerous smart meters\nin such a particular environment with little to no\
    \ human intervention. This type of com-\nmunication, called Device-to-Device (D2D)\
    \ communication, is autonomous and may be\ninitiated in response to an event or\
    \ at regular intervals. Notably, depending on how these\nsmart grid applications\
    \ were built, their QoS requirements and characteristics differ greatly\nin terms\
    \ of delay, burst size, and packet arrival rate. For example, the latency requirement\n\
    of a smart meter event and a substation event are quite different [44]. In intelligent\
    \ grid\nnetworks, the monitoring, managing, and controlling functions inside the\
    \ same network\npresent the issues of ﬂexible QoS differentiation. Moreover, applications\
    \ based on the smart\ngrid can be developed and implemented using the current\
    \ wireless and wired networking\ninfrastructure and technologies. For some devices,\
    \ such as smart meters, designing and\nstandardizing acceptable smart grid-based\
    \ protocols is a critical matter [45]. Furthermore,\nthese smart grid-based networks\
    \ are too dependent on intelligent sensors, actuators, and\nother devices. This\
    \ makes them extremely vulnerable to attacks by malicious users. These\nsmart\
    \ grids could be taken over by malevolent users or hackers, who could then obtain\n\
    unauthorized access to many smart meters and alter crucial data. Moreover, as\
    \ the existing\nelectricity system is insufﬁcient for establishing smart grid\
    \ systems, high-level adjustments\nto current power infrastructure scenarios are\
    \ required. Subsequently, these smart systems\nrequire high installation costs\
    \ because the installation requires a large number of smart\nmeters, sensors,\
    \ and actuators for sensing and data collection [46]. The efﬁcient operation of\n\
    such a smart grid system also necessitates a dependable, consistent, and error-free\
    \ network\nchannel. Therefore, it will be challenging for developers of such intelligent\
    \ applications.\nElectronics 2023, 12, 2490\n10 of 63\nMany surveys [42–45,47]\
    \ reviewed communication frameworks for smart grids, smart-\ngrid-based networking\
    \ technologies, trafﬁc management, and the requirements of numer-\nous smart grid\
    \ applications. Further, Kansal and Bose [48] presented their insights on\ntransmission\
    \ grid applications regarding their latency and bandwidth requirements.\n3. Network\
    \ Requirements for SCAs\nThis section considers several communication requirements\
    \ including reliability, delay\ntolerance, bandwidth, power consumption, security,\
    \ network type, heterogeneous network\nsupport, and mobility support. It also\
    \ studies the aptness of different network protocols for\ndissimilar SCAs.\nSmart\
    \ city services and applications need robust and dependable communication\nsupport\
    \ as well as an effective networking infrastructure, which will permit competent\n\
    message-sharing procedures among the components of the smart city systems [49].\
    \ Every\nsmart city system has an intricate networking architecture made up of\
    \ various networking\ncomponents. Therefore, smart city systems are innately required\
    \ to have a variety of net-\nworking requirements. To access the far-off destination,\
    \ which may be clouds, the network\ntrafﬁc from a broad variety of deployed diverse\
    \ applications uses a common networking\narchitecture and resources. These resources\
    \ may consist of switches, routers, communica-\ntion connections (links), and\
    \ other forms of network middle-boxes. The idea of accessing\nfaraway clouds or\
    \ far-off destinations or remotely distributed apps consequently brings\nup problems\
    \ with high packet loss probability, signiﬁcant delay, and constrained network\n\
    bandwidth. In addition, security is a serious issue that must be considered when\
    \ develop-\ning, implementing, and deploying intelligent applications for smart\
    \ cities. Otherwise, users\nwould be reluctant to approve the use of such applications\
    \ in the absence of adequate secu-\nrity safeguards. Such intelligent applications\
    \ need a high-speed networking environment\nwhere the quick reaction may be managed\
    \ with the support of the ability of a fast-processing\nspeed. Furthermore, a\
    \ variety of apps can be implemented in the context of a smart city,\nbased on\
    \ their usefulness and relevance to the users. These applications, however, have\n\
    different networking requirements, particularly in terms of response and security\
    \ [50]. For\nexample, the networking requirements of smart emergency response\
    \ systems are quite\ndifferent compared to other applications such as smart healthcare\
    \ systems. Emergency\nresponse smart systems must be exceedingly secure and quick\
    \ to react [50]. In contrast,\nsmart-healthcare-based systems or apps do not necessarily\
    \ need to be especially dynamic.\n−\nNetwork Protocols: Monitoring applications\
    \ for smart cities often use a dense network\nof heterogeneous sensor nodes, including\
    \ ﬁxed sensor nodes, mobile sensor nodes,\nand crowd sensing nodes. Long-Term\
    \ Evolution (LTE) [51], LTE for Machines (LTE-M),\nextended coverage GSM IoT,\
    \ and ﬁfth-generation (5G) technologies [52] are intriguing\noptions to support\
    \ such heterogeneous networks. First, the bulk of crowd-sensing\nnodes (smartphones)\
    \ is already supported by LTE communications. Consequently, no\nfurther wireless\
    \ communication devices are required. To save energy, LTE and 5G can\nbe utilized\
    \ on the sink nodes (also known as cluster heads) to allow the data gathered\n\
    by the sink nodes to be transmitted to the monitoring center via base stations\
    \ (the\nbackbone network), as opposed to multihop relaying.\n−\nZigbee [53], WiFi,\
    \ and Bluetooth can still be used for the traditional stationary nodes\nto communicate\
    \ within clusters. This layout has the advantage of allowing the sensor\nnode\
    \ clusters to be separated from one another while maintaining network connectiv-\n\
    ity. Additionally, the moderate number of nodes in each cluster makes maintenance\n\
    simpler. In addition to supporting larger networks, LTE and 5G technologies also\
    \ make\npossible sensor nodes with faster data rates, improving the performance\
    \ of real-time\nmonitoring [54]. Applications for crowd sensing, for instance,\
    \ can accommodate video\nstreams taken by cameras on smartphones or moving vehicles.\
    \ The fast data rates\nprovided by LTE and 5G can potentially be advantageous\
    \ for the sink nodes or clusters.\nThe use of vibration data (accelerometer readings)\
    \ in structural health monitoring\napplications of bridges, tunnels, or towers\
    \ is fairly common. The cluster heads will be\nElectronics 2023, 12, 2490\n11\
    \ of 63\nable to send the vibration data in this situation in real time. In conclusion,\
    \ practically\nall applications for smart city monitoring that demand a high data\
    \ throughput and\nminimal delay may be satisﬁed by LTE and 5G. Additionally, there\
    \ are some new\nsensor node standards, such as IEEE 802.11ah [55], LoRaWAN [56],\
    \ and Narrowband-\nIoT (NB-IoT) [57]. These narrowband protocols offer numerous\
    \ advantages: greater\ncoverage, improved scalability, reduced energy usage, and\
    \ increased device longevity.\nResearchers have tested these standards in more\
    \ than a few applications, including\nstreet lighting, energy metering, and home\
    \ automation, even though some are still\nbeing discussed and revised. The new\
    \ narrowband communication standards enable\nthe sensor nodes to run more sustainably,\
    \ which is beneﬁcial for applications that\naim for long-term monitoring. In addition\
    \ to these protocols and standards, the FogC\narchitecture [58] aids in monitoring\
    \ smart cities. In such an architecture, the mobile\nusers (the potential crowd-sensing\
    \ providers) and the cloud are connected via fog\nservers. These fog servers are\
    \ WiFi access points or cellular base stations. Mobile users\nare more inclined\
    \ to participate in sensing since they may upload their crowd-sensing\nmeasurements\
    \ to the fog server in just one hop, signiﬁcantly decreasing the cost and\nenergy\
    \ usage compared to cellular networks. As a result, such an architecture can give\n\
    us better sensing coverage. Using the measurements from the mobile users and the\n\
    WSNs, the fog servers can perform some basic regional estimation based on the\
    \ FogC\narchitecture, such as the nearby trafﬁc conditions. The service latency\
    \ and response\ntime are then decreased because mobile users can access such estimates\
    \ directly from\nthe fog servers rather than from a remote cloud through a backbone\
    \ network. Lastly,\nusing the appropriate networking protocols for each SCA is\
    \ crucial to getting the\nbest possible trade-off between delay, energy use, and\
    \ cost. The networks may be\nhierarchical so that diverse roles and functions\
    \ can be assigned at various layers to\nincrease the networks’ dependability and\
    \ cost-effectiveness. As a result, certain nodes\nmay be able to transmit data\
    \ utilizing various protocols.\n−\nBandwidth requirements: Many video applications\
    \ in smart cities require high band-\nwidth [59]. In these applications, sensors\
    \ capture video from the physical environment.\nMoreover, video transmission is\
    \ more bandwidth-hungry than the conventional scalar\ndata trafﬁc in IoT. Examples\
    \ of these applications are intelligent multimedia surveil-\nlance systems for\
    \ home monitoring, multimedia-based industrial monitoring systems,\ntrafﬁc monitoring\
    \ systems for road safety, and remote multimedia-based monitoring\nof an environmental\
    \ system.\n−\nDelay Tolerance: Some SCAs, such as smart transportation, only tolerate\
    \ a small\namount of end-to-end delay. For example, to prevent imminent danger\
    \ to the ve-\nhicle or potentially fatal crashes, the data that are being relayed\
    \ must arrive within\nmicroseconds. Therefore, the control systems must react\
    \ in time. However, other\napplications have a higher tolerance for delays [49].\
    \ Such applications rely on data\nmonitoring and information gathering for upcoming\
    \ analysis.\n−\nPower Consumption: Another crucial need for applications is power\
    \ consumption.\nSmart grid systems and other applications with local high-energy\
    \ sources can tolerate\nprotocols with higher energy expenditure levels [45].\
    \ Other applications have medium\npower needs and require energy sources with\
    \ limited capacities. One example of such\nan application is intelligent transportation.\
    \ Other applications demand protocols with\nlow or very low energy consumption\
    \ characteristics since they have limited energy\nresources. Unmanned aerial vehicles\
    \ (UAVs), smart water networks, and pipeline\nmonitoring for gas and oil are a\
    \ few examples of such uses.\n−\nReliability: The majority of applications have\
    \ medium reliability requirements. A\ntypical example of such applications is\
    \ smart water networks. Some other applications\nhave high-reliability necessities\
    \ such as intelligent transportation and smart grids [49].\n−\nSecurity: The majority\
    \ of applications need medium to high security. Applications\nsuch as production\
    \ control and monitoring, for instance, need medium security, whilst\nElectronics\
    \ 2023, 12, 2490\n12 of 63\nothers, such as smart grids, need high security because\
    \ of the sensitivity of the data\nand the importance of the operations carried\
    \ out [50].\n−\nHeterogeneity of network protocols: The majority of smart city\
    \ systems use network-\ning protocols that link the system’s parts together. Intelligent\
    \ transportation and smart\nbuildings are two examples of such systems. These\
    \ protocols must coexist in such\nsituations without conﬂicting with one another.\
    \ To ensure seamless and effective\noperation, it is also necessary to correctly\
    \ map the control information in the head-\ners at the various networking stack\
    \ tiers used by the many heterogeneous protocols\nand networks.\n−\nWired/wireless\
    \ connectivity: The majority of SCAs that include wireless connectivity\nare UAVs\
    \ and monitoring of gas and oil pipelines. Others, including intelligent\ntransportation\
    \ and smart buildings, use wired and wireless connectivity [50]. In\nthese situations,\
    \ wired networking may be used for communication within a speciﬁc\nphysical system\
    \ (such as within a UAV), while wireless communication may be used\nto link the\
    \ physical system to other such systems that are comparable to it or to the\n\
    backbone and infrastructure networks.\n−\nMobility: Some systems, such as the\
    \ smart grid, pipeline monitoring for gas and oil,\nand smart water networks,\
    \ have low to medium mobility [50]. Other systems, such\nas UAVs and intelligent\
    \ transportation, are quite mobile. Medium- to high-mobility\nsmart city systems\
    \ can be connected if the networking protocols are reliable and\nadaptable to\
    \ node mobility without using up a large amount of bandwidth on control\nmessages\
    \ and related processing to react to changes in the network architecture.\nTable\
    \ 1 presents a qualitative comparison of the requirements of some SCAs. Each\n\
    SCA has its own transmission range and is sustained by a heterogeneous network\
    \ with\nlow, medium, or high trafﬁc rates and supporting high or low mobility\
    \ of devices. Each\nSCA is based on different protocols and requires different\
    \ bandwidth and latency tolerance.\nIn each SCA, the number of devices involved\
    \ differs.\nTable 1. Networking aspects and qualitative comparison of SCA requirements.\n\
    Smart City Ser-\nvices/Applications\nSeemingly Fitted\nNetwork Proto-\ncol/Technology/Standard\n\
    Transmission\nRange (Meters)\nBandwidth\nRequirement\n(Minimum)\nLatency\nTolerance\n\
    Number of\nDevices\nNetwork\nMobility\nSupport\nTrafﬁc Rate\nSmart Trafﬁc\nSurveillance\n\
    Cellular, IEEE 802.11,\nIEEE 802.16, IEEE\n802.15.4\n≈1000\nM\nM\n≈1000\nHeterogeneous\n\
    H\nL\nSmart\nHealthcare\nSystem\nCellular, IEEE 802.11,\nIEEE 802.16, IEEE\n802.15.4,\n\
    IEEE 802.15.6, IEEE\n802.15.4j\n≈1000\nM\nM\n≈1000\nHeterogeneous\nL\nL\nWeather\
    \ and Air\nQuality\nMonitoring\nSystem\nCellular, IEEE 802.11,\nIEEE 802.16, IEEE\n\
    802.15.4\n≈1000\nL/M\nM\n≈1000\nHeterogeneous\nL\nL\nSmart Waste\nManagement\n\
    IEEE 802.11, IEEE\n802.16,\nIEEE 802.15.4\n≈100\nL/M\nH\n≈1000\nHeterogeneous\n\
    L\nL\nSmart Street\nLighting System\nIEEE 802.16\nIEEE 802.15.4\n≈10\nM\nH\n≈100\n\
    Heterogeneous\nL\nL\nSmart\nEmergency\nResponse System\nCellular, IEEE 802.16,\n\
    IEEE 802.15.4\n≈1000\nH\nL\n≈1000\nHeterogeneous\nH\nH\nSmart\nResidence/\nHome\n\
    Automation\nIEEE 802.15.4, IEEE\n802.15.1\n≈100\nM/H\nL\n≈10\nHeterogeneous\n\
    L\nM/H\nSmart Grid\nNetworks\nCellular, IEEE 802.16\n≈100\nL\nM/H\n≈100\nHeterogeneous\n\
    L\nM/H\nIEEE 802.11: WiFi; IEEE 802.16: WiMAX; IEEE 802.15.1: Bluetooth; IEEE\
    \ 802.15.4: Zigbee; IEEE 802.15.4j: Medical\nBody Area Network (M-BAN); IEEE 802.15.6:\
    \ Body Area Network (BAN); Cellular: CDMA, GSM, UMTS; L: low;\nM: medium; H: high.\n\
    Electronics 2023, 12, 2490\n13 of 63\n3.1. Additional Challenges\n−\nInteroperability:\
    \ Smart city systems are built on several heterogeneous networking\nprotocols\
    \ that use various media access control (MAC) mechanisms at the physi-\ncal and\
    \ data link layers. For the underlying technologies to be integrated seam-\nlessly,\
    \ these protocols must be interoperable [60]. In digital home networks, the IEEE\n\
    1905.1 protocol [61], which was created to offer a convergent interface between\
    \ physi-\ncal/data link layers and the network layer, is aimed to perform this\
    \ function. Future\nresearch should focus on the creation of similar protocols\
    \ to increase the support\nsystem for smart city systems.\n−\nScalability: A smart\
    \ city platform must manage many devices that are connected to\nthe city’s infrastructure.\
    \ Large amounts of city-related data, which are continuously\nproduced and consumed\
    \ by devices and client applications, must be stored and\nprocessed. The platform\
    \ must simultaneously be able to handle hundreds of requests\nfrom users and services\
    \ that rely on it. Thus, the scalability requirements change\ndepending on the\
    \ features of the city as well as the installed applications and services.\nRecently,\
    \ Del Esponte et al. [62] suggested InterSCity, a microservices-based, open-\n\
    source smart city platform that facilitates the collaborative development of large-scale\n\
    systems, apps, and services for smart cities.\n−\nLoad Balancing: To maximize\
    \ the usage of resources, load balancing assigns appro-\npriate resources (i.e.,\
    \ network resources, storage capacity, computational resources,\nand energy resources)\
    \ to user tasks. A large-scale IoT network performs better and\navoids overload\
    \ thanks to an effective load-balancing strategy [63]. Response time,\ncost, throughput,\
    \ performance, and resource usage are all improved in terms of\nQoS parameters.\n\
    −\nThe Cloud/Edge/FogC Paradigms: Cloud, Edge, and FogC facilitate the creation\
    \ of\nsmart city prototypes. These computing paradigms efﬁciently aid in the gathering,\n\
    upkeep, and analysis of city data to pinpoint crucial city-related events that\
    \ demand\nadvanced processing and response [64]. Nonetheless, some IoT applications/systems\n\
    for smart cities have strict processing and delay constraints. These real-time\
    \ applica-\ntions present the greatest obstacles to cloud-based services. Consequently,\
    \ FogC and\nEdge Computing have emerged as viable computing paradigms for designing,\
    \ imple-\nmenting, deploying, and controlling such systems/applications. These\
    \ paradigms\nbring computing resources closer to the IoT/device plane so that\
    \ the primary computa-\ntion can be done locally [65,66]. Each computing paradigm\
    \ offers particular assistance\nbased on the requirements of the application at\
    \ hand. For example, to support a cloud-\nbased SCA, ClCom offers centralized\
    \ storage and processing capacity. For certain\nSCAs, ClCom can offer scalable\
    \ processing power and data storage [5]. The features of\nClCom (e.g., powerful\
    \ processing, massive and scalable data storage, and cutting-edge\nsoftware services)\
    \ can be used to provide various support services for a variety of\nSCAs. ClCom\
    \ can be the primary control and management platform for SCAs. The\ncity’s ClCom\
    \ services can be used to connect various sensors and actuators for SCAs\nto gather,\
    \ process, store, and manage sensor data for various SCAs. Vast volumes\nof data\
    \ are gathered across a smart city, which can eventually become big data. The\n\
    sophisticated platforms required for storing and analyzing this massive amount\
    \ of\ndata to improve operations and planning can be provided by Cloud Computing.\
    \ To\neffectively support SCAs, the communication between city sensors and actuators\
    \ and\nClCom may involve various communication requirements. The network architectures\n\
    used in the smart city should meet these requirements. Smart applications require\n\
    the integration of sensors, actuators, and the cloud, and they can only function\
    \ well\nwith a robust network that offers good communication services linking\
    \ both sides.\nThe fact that cloud services are either provided at a single central\
    \ location or across\nnumerous distributed platforms in various locations is another\
    \ problem that occurs\nwhen adopting ClCom for a smart city. For many cloud applications,\
    \ the distributed\nClCom strategy can offer greater quality and dependability\
    \ support [67]. However,\nElectronics 2023, 12, 2490\n14 of 63\nit is frequently\
    \ necessary to establish effective communication channels between the\ndistributed\
    \ ClCom facilities that are present in various locations. The dependability\n\
    and efﬁciency of the networks linking all components on both sides present another\n\
    problem when using the cloud. There are issues with delays, dropped packets, and\n\
    unstable connections when the Internet is involved. To consider these challenges,\n\
    the SCA architecture must be carefully studied, as must the planning and control\
    \ of\nnetwork resources and communication models. However, some elements cannot\
    \ be\navoided, such as transmission delays. Ksentini et al. [68] investigated\
    \ the QoS require-\nments of many IoT/cloud-enabled applications in a FogC environment\
    \ to recognize\nQoS metrics. The authors introduced a QoS management model (QoS-Fog)\
    \ that is\ninspired by the work of the OpenFog consortium on the reference architecture\
    \ [69] for\na FogC system.\n3.2. Features and Challenges of Smart City Networks\n\
    A smart city network has the following features [70]:\n1.\nLarge Densities: A\
    \ smart city network has a very large density as thousands of smart\ndevices are\
    \ distributed in the area of a city.\n2.\nAbnormal Trafﬁc Patterns: Cascading\
    \ or synchronization among smart devices produces\nextremely bursty or correlated\
    \ trafﬁc patterns. These trafﬁc patterns differ from\nthe regular social-generated\
    \ trafﬁc patterns on which most existing schemes and\ntechnology used in our society\
    \ are based.\n3.\nDisorganized Network Topology: Unlike the widely used wireless\
    \ connectivity features,\nsmart city networks often adhere to a mesh network topology.\
    \ The problem arises\nwhen smart devices communicate across unreliable wireless\
    \ channels, where packet\nlosses caused by wireless channel special properties\
    \ are extremely common and even-\ntually have an impact on the functioning of\
    \ the smart city system. Therefore, it appears\nvery improbable that a single\
    \ high-throughput backbone can be deployable soon.\n4.\nHeterogeneity: SCAs use\
    \ a variety of technologies. In terms of power consumption,\nlatency, throughput,\
    \ and communication ranges, each of these technologies operates\nat a unique trade-off\
    \ threshold. The involved dissimilar technologies must coexist on\na single platform.\n\
    5.\nCoexistence of heterogeneous technologies: Communication technologies used\
    \ in smart\ncities are distributed over the same radio space. At the same time,\
    \ independent radio\ninfrastructures are connected through a variety of wireless\
    \ channels. Under such\ncircumstances, the SCA must handle interference issues\
    \ with competence.\n6.\nSecurity and Privacy: SCAs are extremely vulnerable to\
    \ several risks from malevolent\nusers. The majority of specialized smart sensors,\
    \ actuators, and other intelligent\ndevices are developed by designers without\
    \ considering security measures. Such\napplications may be highly vulnerable due\
    \ to hostile actors’ ease of access to these\ncutting-edge technologies and potential\
    \ threats to people’s security and privacy.\nThe main challenges for smart city\
    \ networks are as follows [70]:\n•\nLack of Standardization Solutions: The IEEE\
    \ 802.15.1 Bluetooth technologies for Personal\nArea Networks (PANs) and the IEEE\
    \ 802.11 groups for wireless LANs adopt the\nconcept of single-hop ad-hoc networking.\
    \ These standards permit direct communi-\ncation between two devices that are\
    \ in the transmission range of each other. At the\nsame time, the multi-hop ad-hoc\
    \ networking paradigm enables the communication\nbetween any two devices which\
    \ are not necessarily in their transmission range [71]. A\nproblem that researchers\
    \ must consider is how these intricate heterogeneous sets of\ndevices (i.e., actuators,\
    \ sensors, and other smart devices) can communicate uniformly\nwithout any standardization.\
    \ Global distributors and manufacturers must propose\nand accept standardized\
    \ network solutions that enable communication between di-\nverse devices on homogeneous\
    \ communication entities. The IEEE 802.15.4 standard\nis the dominant solution\
    \ that presents a sophisticated version of the Physical Layer.\nThis standard\
    \ deals with the trade-off between data rate, communication range, and\nElectronics\
    \ 2023, 12, 2490\n15 of 63\npower consumption. Several revisions or amendments\
    \ (i.e., IEEE 802.15.4g and IEEE\n802.15.4e) aimed at the SCA have just been released.\
    \ The IEEE 802.15.4g amendment\nallows for a redesigned physical layer, allowing\
    \ data rates and communication ranges\ncompatible with neighborhood mesh (wide)\
    \ networks. Then, it is followed by another\ncutting-edge modiﬁcation, known as\
    \ IEEE 802.15.4e, which modiﬁes and enhances\nthe method used by devices to access\
    \ wireless channels while also using time-slotted\nchannel hopping mode. This\
    \ hopping mode further delivers low-power consumption\nand improved dependability.\
    \ From another viewpoint, many researchers customized\nappropriate upper-layer\
    \ protocols (i.e., the Internet Layer). They made the necessary\nmodiﬁcations\
    \ there to make smart applications compatible with conventional infras-\ntructure.\
    \ Since the network of low-power smart devices is conﬁned, the researchers\ndeveloped\
    \ numerous adjustments to the Internet protocols to make them easily adapt-\n\
    able. For example, the most notable IETF projects are RPL [72] and 6LoWPAN [73],\n\
    which greatly aid in creating and adapting smart city scenarios.\n•\nInterference\
    \ problem: Sophisticated technologies that are spread across the same radio\n\
    space and independent radio infrastructures are linked via a range of wireless\
    \ channels.\nBecause of this, the smart application must handle interference problems\
    \ in such\nsituations. To share unlicensed bands, numerous networks must cooperate\
    \ and be\ncompatible with one another.\n•\nVertical handover (soft): Multiple\
    \ radios are used by the rapidly expanding number of\nsmart devices being developed.\
    \ These devices should be able to recognize and use the\nbest interface that is\
    \ currently available while balancing power usage and throughput.\n•\nD2D Communications:\
    \ In the IoT context, there are numerous D2D communication de-\nmands. Unfortunately,\
    \ conventional network gateways cannot handle such generated\nmessages from heterogeneous\
    \ devices.\n•\nShort Communicating Messages: Internet-based protocols support\
    \ and recommend\nacceptable performance for longer data packet scenarios. However,\
    \ smart devices\ncommunicate with one another using short messages (since most\
    \ of them are tiny\nand operate over low-powered battery devices). To this end,\
    \ short communicating\nmessages will positively impact network congestion detection\
    \ and avoidance policies\nand promote in-band aggregation.\n•\nLocal Network Trafﬁc\
    \ Pattern: Smartphones and D2D-speciﬁc devices frequently use the\nsame network\
    \ infrastructure. However, most cellular data networks are exclusively\nplanned,\
    \ implemented, deployed, and managed for smartphone usage. Fitting trafﬁc\nfrom\
    \ these heterogeneous devices onto a single platform is now the main challenge\n\
    that cellular data network providers face. It is difﬁcult to integrate the trafﬁc\
    \ from these\ntwo types of heterogeneous devices into the same network infrastructure\
    \ due to several\nintrinsic factors and the speciﬁed features of this traditional\
    \ network. Additionally,\nD2D devices use a more signiﬁcant proportion of scarce\
    \ resources than smartphones,\nunnecessarily creating a problem of unfairness\
    \ in the system [74]. Therefore, we\nmust ﬁrst comprehend D2D trafﬁc patterns\
    \ and how they differ from trafﬁc patterns\ngenerated by smartphones. Understanding\
    \ trafﬁc patterns can provide insights into\nmanaging and allocating shared network\
    \ resources more effectively and guarantee\nthe highest level of service quality\
    \ for both types of devices.\n•\nSecurity mechanisms: Denial of Service (DoS)\
    \ attacks are a remarkable threat to the\nsecurity of smart city networks and\
    \ must be identiﬁed. Some statistical methods\nhave been proposed to solve this\
    \ problem. Such a statistical method is presented\nin [75] that is based on feature\
    \ distance maps that enhance the statistical analysis\nprocess. Another security\
    \ mechanism is authentication, a process of identifying\nusers and devices in\
    \ a network and granting access to authorized persons and non-\nmanipulated devices.\
    \ Authentication is one method to mitigate attacks on the IoT\nsystems such as\
    \ the reply attack, the Man-in-the-Middle attack, the impersonation\nattack, and\
    \ the Sybil attack [76]. To realize end-to-end security, the nodes must be\nencrypted.\
    \ However, due to the heterogeneity of the IoT systems, some nodes might\nElectronics\
    \ 2023, 12, 2490\n16 of 63\nbe able to embed general-purpose microprocessors for\
    \ this task. In addition, low\nresources and constrained devices can only embed\
    \ application-speciﬁc integrated\ncircuits. Therefore, conventional cryptographic\
    \ primitives are not suitable for low-\nresource smart devices due to their low\
    \ computation power, limited battery life, small\nsize, small memory, and limited\
    \ power supply. As a result, lightweight cryptography\nmay be an efﬁcient encryption\
    \ for these devices. Trust management is another security\nmechanism that detects\
    \ and eliminates malicious nodes and provides secure access\ncontrol. Automated\
    \ and dynamic trust calculations are needed to validate the trust\nvalues of the\
    \ participating nodes in an IoT network. The majority of trust management\nschemes\
    \ focus on detecting malicious nodes; only a few trust-based access control\n\
    methods have been proposed. In fact, with scalability and the large number of\
    \ smart\nthings storing sensitive data, there is an urgent need for automated,\
    \ transparent, and\neasy access control management so that different nodes/users\
    \ can be granted different\nlevels of access. From another perspective, Blockchain\
    \ technology can be used to\ncreate secure virtual zones where things can identify\
    \ and trust each other [77]. Self-\norganization Blockchain Structures (BCS) can\
    \ also be planned to set up the relationship\nbetween Blockchain and IoT, as suggested\
    \ in [78].\n•\nAnomaly Detection in Sensor Systems: The type of data that ﬂow\
    \ through the IoT system\ncan vary to a great extent, in terms of either format,\
    \ shape (in time and space), and\nsemantics. Therefore, the process of separating\
    \ normal from abnormal sensed data is\nextremely demanding. In the context of\
    \ IoT applications, sensors are the real source\nof big data, which suggests that\
    \ anomaly detection at the edge could be a powerful\ntool to address the inevitable\
    \ data communication bottlenecks. Anomaly detection is\nconcerned with identifying\
    \ data patterns that deviate remarkably from the expected\nbehavior. This is critical\
    \ in the process of ﬁnding out important information about\nthe IoT system’s functioning,\
    \ detecting abnormalities that are often rare or difﬁcult\nto model or, otherwise,\
    \ to predict [79]. A timely identiﬁcation of anomalies is vital to\npreventing\
    \ IoT system failure.\n•\nAdvanced Techniques in Smart City Networks: Artiﬁcial\
    \ intelligence (AI), machine learn-\ning (ML), and deep reinforcement learning\
    \ (DRL) play a key role in the evolution of the\nsmart city sectors [80]. These\
    \ techniques are now being developed as solutions for com-\npletely automated\
    \ IoT applications. Using these techniques, the optimal analysis of\nthe big data\
    \ is performed to reach an optimal decision. Utilizing DRL/ML approaches\ncan\
    \ improve security; decrease energy consumption; reduce latency; and increase\n\
    precision and accuracy in surveillance, energy management, air quality prediction,\n\
    person detection, trafﬁc management, etc. For example, an intelligent transportation\n\
    system is highly based on ML- and DRL-based techniques to realize self-driving\
    \ vehi-\ncles and guarantee the security of connected vehicles. DRL techniques\
    \ are also used to\nprecisely monitor and estimate the real-time trafﬁc ﬂow data\
    \ in an urban environment.\nIn SGs, big data analytics and thus the aforementioned\
    \ techniques can enhance the\nsafety of power grids, decision-making of power-sharing,\
    \ management, and power\ngrid performance. In particular, SGs are making effective\
    \ use of smart meter big data\nfor different applications such as load assessment\
    \ and prediction, baseline estimation,\ndemand response, load clustering, and\
    \ malicious data deception attacks. In health\nintelligence, extensive use of\
    \ AI, ML, and DRL techniques is implemented due to\nhigh-performance IoT devices,\
    \ Cloud Computing, and an increase in data rates. These\ntechniques can play a\
    \ vital role in disease diagnosis, cure prediction, social media ana-\nlytics\
    \ for a particular disease, and medical imaging [81]. In cyber-security, the role\
    \ of\nAI-, ML-, and DRL-based techniques is also outstanding. These techniques\
    \ can be used\nfrom an advanced security perspective of IoT to confront security\
    \ threats. Notably, the\naccuracy and precision of the aforementioned techniques\
    \ can be further enhanced by\nincreasing the amount of training data to strengthen\
    \ their learning capabilities and\nhence the automated decision efﬁciencies [82].\n\
    Electronics 2023, 12, 2490\n17 of 63\n4. Protocols Used for SCAs\nFigure 3 shows\
    \ a proposed taxonomy of networking protocols and architectures for\nSCAs. It\
    \ also shows the challenges in IoT communications via TCP/IP.\nElectronics 2023,\
    \ 12, x FOR PEER REVIEW \n18 of 65 \n \n \ncreate a system that enables effective\
    \ communication between several indoor and out-\ndoor devices. Nevertheless, the\
    \ real-time implementation of IEEE 802.11ah may need to \nbe improved by the absence\
    \ of an appropriate interference mechanism. \n \nFigure 3. A taxonomy of technologies\
    \ facilitating communication and networking for smart cities \nwith IoT-enabled\
    \ application protocols and suggested networking architectures and protocols.\
    \ \nIEEE 802.15.1 (Bluetooth), IEEE 802.15.4 (Zigbee), IEEE 802.11 a/b/g/n, Cellular\
    \ \n3G/4G/5G/LTE/LTE-A, and IEEE 802.16 (WiMAX) are only a few examples of standards\
    \ \nand protocols that should be evaluated for their applicability for various\
    \ SCAs. Smart \nhome automation systems, smart buildings, and smart garbage systems\
    \ require \nshort-range communication capability and can utilize protocols (e.g.,\
    \ Bluetooth and \nZigbee) from the WPAN group. These protocols are distinguished\
    \ by a lower bandwidth \nrequirement, minimal power usage, and a shorter-range\
    \ communication infrastructure \nenvironment. In contrast, LAN groups such as\
    \ WiFi can be used for SCAs that require \nlonger-range communication. Such applications\
    \ are smart transportation management \nsystems. \nThe protocols from WAN groups,\
    \ such as Cellular and WiMAX, can be adopted by \napplications that need wide-range\
    \ communication, such as smart emergency response \nsystems, weather and air quality\
    \ monitoring systems, and smart grid systems. These \nfeatures designed in terms\
    \ of standards or protocols have enough capability that allows \nFigure 3. A taxonomy\
    \ of technologies facilitating communication and networking for smart cities\n\
    with IoT-enabled application protocols and suggested networking architectures\
    \ and protocols.\nSCAs involve numerous smart things that operate on low-powered\
    \ battery devices [83].\nNew connectivity solutions are being investigated in\
    \ light of the following question:\ndo the currently available methods, tools,\
    \ and techniques—especially those for wireless\nnetworks—allow for the reliable\
    \ handling of such a large number of smart devices?\nYaqoob et al. [84] provided\
    \ details on current connectivity solutions based on WPAN\ntechnologies such as\
    \ ZigBee, WiFi, Bluetooth, and others that offer low-power D2D com-\nmunication.\
    \ In these technologies, the throughput performance, the number of con-\nnected\
    \ devices, transmission ranges, etc., are severely constrained. Other technologies\n\
    (e.g., WiMAX, LTE, and LTE-A) involve signiﬁcant power consumption and are only\n\
    partially applicable to such settings. IEEE and 3GPP adapt their technologies\
    \ and commu-\nnication strategies to the rapidly expanding IoT-based modern communication\
    \ perspective.\nIEEE 802.11 (WiFi) was initially designed to maintain higher throughput\
    \ performance\nfor fewer stations distributed over a shorter distance in an interior\
    \ context. Due to the\nlimitations of its initial design, this standard does not\
    \ support IoT applications. Hence,\nElectronics 2023, 12, 2490\n18 of 63\nto enable\
    \ IEEE 802.11 adaptive in such circumstances, the community (IEEE 802.11ah\nTask\
    \ Group (TGah)) developed a new power-efﬁcient protocol [55]. They aim to create\
    \ a\nsystem that enables effective communication between several indoor and outdoor\
    \ devices.\nNevertheless, the real-time implementation of IEEE 802.11ah may need\
    \ to be improved by\nthe absence of an appropriate interference mechanism.\nIEEE\
    \ 802.15.1 (Bluetooth), IEEE 802.15.4 (Zigbee), IEEE 802.11 a/b/g/n, Cellular\n\
    3G/4G/5G/LTE/LTE-A, and IEEE 802.16 (WiMAX) are only a few examples of standards\n\
    and protocols that should be evaluated for their applicability for various SCAs.\
    \ Smart\nhome automation systems, smart buildings, and smart garbage systems require\
    \ short-\nrange communication capability and can utilize protocols (e.g., Bluetooth\
    \ and Zigbee) from\nthe WPAN group. These protocols are distinguished by a lower\
    \ bandwidth requirement,\nminimal power usage, and a shorter-range communication\
    \ infrastructure environment.\nIn contrast, LAN groups such as WiFi can be used\
    \ for SCAs that require longer-range\ncommunication. Such applications are smart\
    \ transportation management systems.\nThe protocols from WAN groups, such as Cellular\
    \ and WiMAX, can be adopted by\napplications that need wide-range communication,\
    \ such as smart emergency response\nsystems, weather and air quality monitoring\
    \ systems, and smart grid systems. These\nfeatures designed in terms of standards\
    \ or protocols have enough capability that allows for\nboth synchronous and asynchronous\
    \ data connections. The best-effort trafﬁc (which can\neffectively tolerate latency)\
    \ allows the asynchronous data connections feature to be linked\nwith smart city\
    \ services or applications. Meanwhile, exploring synchronous data connec-\ntions\
    \ is possible for those services or applications that generate trafﬁc mandating\
    \ strict\nQoS standards such as low latency and high accessible network capacity\
    \ [49]. Since IEEE\n802.15.4 (Zigbee) is a short-range (low bit rate) communication\
    \ protocol that often suggests\nhigher ﬂexibility for small devices running on\
    \ low power, such a protocol can signiﬁcantly\nincrease network lifetime. Moreover,\
    \ such a protocol encourages and indicates support\nfor applications and services\
    \ with relatively relaxed latency and throughput conditions in\nWPANs. The authors\
    \ of [85] utilized a WSN based on IEEE 802.15.4 and proposed an intelli-\ngent\
    \ system for lighting applications. The authors highlighted the beneﬁts of using\
    \ wireless\nemulsions: uncomplicatedness in the implementation and deployment,\
    \ relatively easier in\nexpanding a network, and ﬂexibility in the system due\
    \ to the use of wireless technology,\nwhich supports the usage of heterogeneous\
    \ devices in the same implemented and deployed\nstructure. Furthermore, they emphasized\
    \ the advantages of employing the same intelligent\ninfrastructure for a variety\
    \ of services, leading to more effective management, monitoring,\nand cost-effectiveness.\
    \ For example, by including speciﬁc smart metering devices such as\nwater or gas\
    \ meters, the smart network or infrastructure (that was initially established\
    \ to\ntarget smart lighting applications) can also be used for smart metering\
    \ applications.\n5G has just supplanted 4G with advanced access schemes called\
    \ BDMA and FBMC\nmultiple access, which was ﬁrst launched in 2015. In the case\
    \ of BDMA multiple access, an\northogonal beam is frequently used, meaning that\
    \ resources can be distributed in parallel to\neach mobile base station by dividing\
    \ the antenna beam in accordance with the position of\nthe mobile stations to\
    \ enable multiple accesses to the base stations. Successively, this helps\nin\
    \ improving the capacity of 5G networks [86]. Speciﬁcally, the idea of moving\
    \ towards\n5G is based on current technology advancements and particularly on\
    \ unique customer\nneeds. Nonetheless, it is typically presumed that implemented\
    \ 5G cellular networks should\naddress noteworthy complications that are not successfully\
    \ addressed by 4G, i.e., enhanced\nnetwork capacity and data rate, lower End-to-End\
    \ (E2E) latency, reduced cost, and con-\nsistent user QoE provisioning. In addition,\
    \ massive and rapid growth in the number of\nhighly developed connected devices\
    \ leads to a sharp increase in network trafﬁc and a\nwidening range of applications\
    \ with unique dynamic requirements and features. Gupta\nand Jha [86] studied numerous\
    \ facilitators, such as choice or use of spectrum, massive\nMIMO, trafﬁc and power\
    \ management policies, ofﬂoading (local), and self-conﬁguring and\norganizing\
    \ networks, which can address these challenges effectively. Real-time managing\n\
    and supervising in smart city scenarios will be conceivable these days thanks\
    \ to 5G. 5G\nElectronics 2023, 12, 2490\n19 of 63\nultimately targets some networking\
    \ possibilities, i.e., ultra-Reliable and Low-Latency Com-\nmunications (uRLLC),\
    \ enhanced Mobile Broadband (eMBB), and massive Machine Type\nCommunications (mMTC).\
    \ In a smart city context, eMBB controls data transfer between a\nvariety of networked\
    \ user end devices, edge devices, or cloud servers. Conversely, mMTC\naims to\
    \ manage huge connected, complex devices, such as wearables, actuators, and sen-\n\
    sors, through dense urban deployment. Finally, uRLLC takes responsibility for\
    \ managing\nhighly time-critical communication such as vehicular communication,\
    \ base stations, and\nedge devices communication [87]. Although 5G has completely\
    \ brought about a new\nrevolution in the ﬁeld of networking, numerous unknown\
    \ challenges still are possible in\nthese cases of communication when 5G is deployed\
    \ in the context of smart cities. One major\nproblem is power-efﬁcient communication,\
    \ especially when communicating low-powered\nbattery devices such as sensors and\
    \ other smart, complex wearables. Additionally, when\ntwo distinct technologies\
    \ (4G/5G) work together, there might be a problem. Speciﬁc device-\nlevel compatibility\
    \ problems might always persist when communication infrastructures\nmigrate to\
    \ next-generation platforms. Moreover, a big question arises, namely, how to\n\
    handle the widespread use of gadgets, particularly those in isolated or difﬁcult-to-reach\n\
    places, as well as the potential high costs associated with building and maintaining\
    \ 5G\nnetworks.\nTable 2 compares protocols used for smart cities, while Table\
    \ 3 evaluates standards\nutilizing features and characteristics.\nTable 2. Comparison\
    \ of protocols used for smart cities. Adapted and extended from [49,84,88].\n\
    Communication\nTechnology/Standard 1\nPhysical Layer Speciﬁcations\nData Link\
    \ Layer\nSpeciﬁcations 4\nData Rate 5\nCoverage Area 6\nOperating Frequency\n\
    Bands 2\nData Modulation and\nReceiver Sensitivity 3\nZigBee/IEEE 802.15.4\n2.4\
    \ GHz, 868 MHz–915\nMHz (DSSS)\nData Modulation: 16-ary orthogonal modulation\n\
    (2.4 GHz) and BPSK with DE (868 MHz–915 MHz).\nReceiver Sensitivity:\n−85 dBm\
    \ (2.4 GHz PHY)\n−92 dBm (868/915 MHz PHY)\nCSMA-CA, TDD\n(optional)\n250 Kbps\n\
    (2.4 GHz),\n20 Kbps\n(868 MHz), and\n40 Kbps\n(915 MHz)\n30–50 m\nBluetooth/\n\
    IEEE 802.15.1\n2.4 GHz, 2400\nMHz–2483.5 MHz\n(FHSS/FSK)\nData Modulation:\nGFSK\
    \ and PSK (for higher data rates)—π/4 DQPSK\nand 8 DPSK\nReceiver Sensitivity:\n\
    −70 dBm to −82 dBm (usually depends on the type of\nPHY use), say, Bluetooth LE\
    \ 125K (Coded) PHY can\nachieve −103 dBm\nTDD, M&S, FH\n1 Mbps\n1–100 m\nWiFi/IEEE\
    \ 802.11\n(Legacy) (a/b/g/n)\nConventional: 2.4 GHz\na: 5 GHz (OFDM),\nb: 2.4\
    \ GHz (DSSS),\ng: 2.4 GHz (DSSS,\nOFDM),\nn: 5 GHz (DSSS,\nOFDM)\nData Modulation:\n\
    Conventional: DI, DSSS, and FHSS, a: OFDM\nb: HR-DSSS, g: OFDM, DSSS, and CCK\n\
    n: OFDM using MIMO and CB\nReceiver Sensitivity:\nLegacy: 1 Mbps: −80 dBm, 2 Mbps:\
    \ −75 dBm\nb: 2 Mbps: −80 dBm, 11 Mbps: −76 dBM\ng: 6–54 Mbps: −82 dBm to −65\
    \ dBm\nn: 1–54 Mbps: −80 dBm to −65 dBm\nCSMA-CA\nConventional:\n1–2 Mbps\na:\
    \ 6–54 Mbps\n(VMT)\nb: 1–11 Mbps\n(VMT)\ng: 6–54 Mbps\n(VMT)\nn: 1–54 Mbps\n(VMT)\n\
    1–100 m\nWiMAX/IEEE 802.16\n2.5 GHz, 3.5 GHz,\n5.8 GHz\n(MIMO-OFDM)\nData Modulation:\n\
    OFDM using MIMO, AMC, AAS\nReceiver Sensitivity:\nQPSK (1/2): −80 dBm, QPSK (3/4):\
    \ −78 dBm\n16 QAM (1/2): −73 dBm, 16 QAM (3/4): −71 dBm\n64 QAM (2/3): −66 dBm,\
    \ 64 QAM (3/4): −65 dBm\nTDD, FDD\n75 Mbps\n1–5 Km (NLoS),\n10–50 km (LoS)\nLoRaWAN/LoRA\n\
    Alliance\n867–869 MHz (Europe)\n865–867 MHz (India)\nData Modulation:\nLoRA (CSSM)\n\
    Receiver Sensitivity:\n−137 dBm (SF = 12, BW = 125 KHz, NF = 6)\nPure ALOHA\n\
    with DCLs or PSA\n(LBT)\n250 bps–50 Kbps\n(Europe)\nNS (India)\n2–5 km\n3G (WCDMA\n\
    Technology) (BIS)\n1.92–1.98 GHz,\n2.11–2.17 GHz\n(licensed)\nData Modulation:\n\
    AM/PSK using QAM\nReceiver Sensitivity:\n−102 dBm\nCDMA\n384 Kbps\n(deployed)–\n\
    2 Mbps\n1–10 km\nGPRS\n900–1800 MHz\nData Modulation:\nGMSK\nReceiver Sensitivity:\n\
    −159 dBm\nTDMA, FDMA,\nand FH\nUp to 170 Kbps\n1–10 km\nZ-Wave/Z-Wave\nAlliance\n\
    900 MHz\nData Modulation:\nFSK/BFSK (for 9.6 Kbps and 40 Kbps)\nGFSK (for 100\
    \ Kbps) with BT = 0.6\nReceiver Sensitivity:\n−104 dBm\nCSMA-CA\n9.6 Kbps–100\
    \ Kbps\n100 m\nElectronics 2023, 12, 2490\n20 of 63\nTable 2. Cont.\nCommunication\n\
    Technology/Standard 1\nPhysical Layer Speciﬁcations\nData Link Layer\nSpeciﬁcations\
    \ 4\nData Rate 5\nCoverage Area 6\nOperating Frequency\nBands 2\nData Modulation\
    \ and\nReceiver Sensitivity 3\nLTE/3GPP\n2.5 GHz, 5 GHz,\n10 GHz (OFDM CP for\n\
    downlink, SC-FDMA\nCP for uplink)\nData Modulation:\nAMC, QPKS, 16QAM\nReceiver\
    \ Sensitivity:\n−103 dBm (LTE/A signal—5 MHz BW, QPSK, CR = 1/3,\nSNR = −1 dB,\
    \ NF of LTE/A-based receiver chain = 5 dB)\n−90.7 dBm (LTE/A signal—5 MHz BW,\
    \ 16QAM,\nCR = 2/3, SNR = 11.3 dB, NF of LTE/A-based receiver\nchain = 5 dB)\n\
    TDD, FDD\n75 Mbps (UL)\n300 Mbps (DL)\n30 km\nLTE-A/3GPP\n2.5 GHz, 5 GHz,\n10\
    \ GHz, 15 GHz,\n20 GHz (OFDM CP for\ndownlink, SC-FDMA\nCP for uplink)\n500 Mbps\
    \ (UL)\n1 Gbps (DL)\n30 km\n5G (New Radio (NR)\nAir Interface) (Single\nUniﬁed,\
    \ 4G + World\nWide Wireless Web\n(WWWW))\nFor 5G mmWave\naccess, an extensive\n\
    spectrum of bands\nbetween 13 and 86 GHz\nhas been recommended\nC-band (3300–4200\
    \ and\n4400–5000 MHz)\nData Modulation:\nUFMC, F-OFDM, and FBMC\n5G New Radio\
    \ (NR) Uplink Receiver Sensitivity:\nPRef = TN + 10log10(BW) + NF+ IM + SNR\n\
    At room temperature, the TN in a 50 system is\n−174 dBm/Hz. For Wide Area BS,\
    \ Medium Range BS,\nor Local Area BS, the base station NF is 5 dB, 10 dB, or\n\
    13 dB, respectively. IM = 2 dB. The SNR value is that at\nwhich 95% of the maximum\
    \ throughput is achieved.\nPRef = TN + 10log10(BW) + NF+ IM + SNR = −93 db,\n\
    (For NF = 5 dB, BW = 100 MHz, SNR = −1)\nTDD, FDD\n10–50 Gbps\nDepends on\nchanging\
    \ cell\nradius (1 km to\nseveral km’s)\n1: LoRaWAN: Long-Range Wide Area Network,\
    \ 3GPP: Third-Generation Partnership Project, WCDMA: Wideband\nCode Division Multiple\
    \ Access, BIS: Broadband Internet Service, GPRS: General Packet Radio Services,\
    \ LTE: Long-\nTerm Evolution, LTE-A: LTE-Advanced, 3GPP: Third-Generation Partnership\
    \ Project. 2: DSSS: Direct-Sequence\nSpread Spectrum, FHSS/FSK: FHSS: Frequency\
    \ Hopping Spread Spectrum/Frequency Shift Keying, OFDM:\nOrthogonal Frequency-Division\
    \ Multiplexing, MIMO-OFDM: Multiple-Input/Multiple-Output-OFDM, OFDM\nCP: OFDM\
    \ with Cyclic Preﬁx, SC-FDMA CP: Single Carrier-Frequency Division Multiple Access\
    \ with Cyclic Preﬁx.\n3: BPSK with DE: Bi-Phase Shift Keying with Differential\
    \ Encoding, GFSK: Gaussian Frequency Shift Keying,\nPSK: Phase Shift Keying, π/4\
    \ DQPSK: π/4 Phase Differential Quaternary PSK, 8 DPSK: 8-Phase Differential\n\
    PSK, DI: Diffuse Infrared, DSSS: Direct-Sequence Spread Spectrum, FHSS: Frequency\
    \ Hopping Spread Spectrum,\nHR-DSSS: High Rate-DSSS, CCK: Complementary Code Keying,\
    \ MIMO: Multiple-Input/Multiple-Output, CB:\nChannel Bonding, AMC: Adaptive Modulation\
    \ Coding, AAS: Adaptive Antenna System, QPSK: Quadrature PSK,\nQAM: Quadrature\
    \ Amplitude Modulation, CSSM: Chirp Spread Spectrum Modulation, SF: Spreading\
    \ Factor, BW:\nBandWidth, NF: Noise Figure, AM/PSK: Amplitude-Modulation PSK,\
    \ GMSK: Gaussian Minimum Shift-Keying,\nBFSK/FSK: Binary-Frequency Shift Keying,\
    \ BT: Bandwidth-Time product, SNR: Signal-to-Noise Ratio, CR: Code\nRate. 4: CSMA-CA:\
    \ Carrier Sense Multiple Access-Collision Avoidance, TDD: Time division duplexing,\
    \ M&S:\nMaster and Slave, FH: Frequency Hopping, FDD: Frequency Division Duplexing,\
    \ DCLs: Duty-Cycle Limitations,\nPSA (LBT): Polite Spectrum Access (Listen Before\
    \ Talk), TDMA: Time Division Multiple Access, FDMA: Frequency\nDivision Multiple\
    \ Access. 5: VMT: Varying Modulation Types, NS: Not Speciﬁed, UL: UpLink, DL:\
    \ DownLink.\n6: LoS: Line of Sight, NLoS: Non-LoS.\nTable 3. Evaluation of standards\
    \ utilizing their features.\nCommunication\nTechnology/Standard 1\nFeatures 2\n\
    Topology 3\nNetwork Category 4\nLimitations\nZigBee/IEEE 802.15.4\nIt allows short-range\
    \ transmissions. It requires lesser\nbandwidth and minimal power usage. It clears\
    \ channel\nassessment (for the case of CSMA). Dynamic selection of\noperating\
    \ channels for coexistence. Packet strength signal for\neffective forwarding and\
    \ location. It is designed and suited for\nPAN-based applications.\nMesh\nWPAN\n\
    Low data rate and short\ncoverage.\nBluetooth/IEEE 802.15.1\nIt creates dynamic\
    \ (ad-hoc) connections using radio waves. It\npresents low-cost, robust, low-power\
    \ solutions for P2P\ncommunication. It allows for short-range transmissions. It\
    \ is\nmainly designed and suited for PAN-based applications. It\nsuggests support\
    \ for IoT devices, via BLE (version), and\nconserves power by continually maintaining\
    \ devices in sleep\nmode until they are connected. It helps with quick device\n\
    pairing and reconnections, which improves device availability\nand operational\
    \ efﬁcacy.\nP2P\nWPAN\nShort coverage and less\nsecure.\nElectronics 2023, 12,\
    \ 2490\n21 of 63\nTable 3. Cont.\nCommunication\nTechnology/Standard 1\nFeatures\
    \ 2\nTopology 3\nNetwork Category 4\nLimitations\nWiFi/IEEE 802.11\n(Legacy) (a/b/g/n)\n\
    General features:\nIt can aid both in an infrastructure-mode and an ad-hoc\nmanner.\
    \ These standards are quickly utilized in temporary\nand permanent LAN installations\
    \ and deployments because of\ntheir ﬂexibility and performance. It supports network\n\
    management service and asynchronous communication. It\nsuggests time-constrained\
    \ delivery services and support for\nbroadcast and multicast services. Moreover,\
    \ it offers support\nfor long-range communication.\nSpeciﬁc features:\nIEEE 802.11a—works\
    \ on the 5 GHz band, has a lesser\ninterference level than other devices but has\
    \ higher\npropagation losses compared to the 2.4 GHz band.\nIEEE 802.11b—works\
    \ on the 2.4 GHz band. There may be\ninterference issues with those devices, which,\
    \ too, operate on\nthe 2.4 GHz band. However, it offers a higher capacity and\n\
    reachability than the 5 GHz spectrum to get through\nobstructions. It can also\
    \ provide support for the ARS\nmethod [79], which allows an IEEE 802.11b device\
    \ to\ndynamically switch from its theoretical maximum data rate\n(11 Mbps) to\
    \ lower data rates such as 5.5 Mbps, 2 Mbps, or\neven 1 Mbps if interference rises.\n\
    IEEE 802.11g—faster operating speed and generally has better\nsignal range, being\
    \ not easily obstructed. The IEEE\n802.11g-based devices used OFDM to carry higher\
    \ data rates\nwhile providing robustness against multipath fading/effects.\nHowever,\
    \ additional modulation techniques (as shown in\nTable 2) are also used to preserve\
    \ and manage compatibility.\nIEEE 802.11n—offers superior performance to its other\
    \ peer\nstandards by suggesting modiﬁcations in MIMO, OFDM,\npower saving, antenna\
    \ technology, and wider channel\nbandwidth. The IEEE 802.11n-based access point\
    \ can operate\nin Legacy, Mixed, and Greenﬁeld modes [89]. This standard\neffectively\
    \ exploits MIMO to take complete beneﬁt of the\navailable data rate.\nStar\nLAN\n\
    Short coverage,\ncomparatively higher\nsignal attenuation, less\nreliable and\
    \ stable\ncompared to wired\nconnections.\nWiMAX/IEEE 802.16\nIt was introduced\
    \ initially to overcome the disadvantages of\nmobile networks and WLANs. It supports\
    \ high data\ntransmission rates while allowing more coverage than\nWLANs. It provides\
    \ numerous QoS scheduling mechanisms\nsupporting heterogeneous trafﬁc, such as\
    \ VoIP, voice data\n(trafﬁc), video data/streams, and Internet trafﬁc. Moreover,\
    \ it\nhas speciﬁc features such as high-speed Internet; a\nlong-distance communication\
    \ facility; and support for security,\nmobility, and scalability.\nP2MP, Mesh\n\
    MAN\nNot widespread and\noperationally expensive.\nLoRaWAN/LoRA\nAlliance\nIt\
    \ provides long-range transmissions and offers robustness\nfrom interferences.\
    \ The PHY layer of this standard or protocol\nmodulates the signal in the SUB-GHz\
    \ ISM band. This\nspeciﬁcation aims to provide low-power WANs with\ncapabilities\
    \ speciﬁcally required to facilitate low-cost mobile\nsecure bidirectional communication.\
    \ Additionally, it deﬁnes\nthe idea of geolocation, which can be quickly applied\
    \ to enable\nGPS-free tracking applications.\nIt utilizes minimum amounts of power,\
    \ and hence IoT-based\nsensors and actuators can operate for a long time.\nAdditionally,\
    \ it manages less bandwidth utilization, making it\ntheir default choice for IoT-based\
    \ deployments.\nThe overall architecture (i.e., star) is relatively straightforward\n\
    since a LoRaWAN-based GW can be designed to manage\nnumerous end devices or nodes.\
    \ It also offers secure\ncommunication between the end device or node and the\n\
    application server using the AES-128 encryption standard.\nStar\nWAN\nShort coverage.\n\
    3G (WCDMA\nTechnology) (BIS)\nThis MNwT was initially engineered and designed\
    \ to transmit\nand receive multimedia trafﬁc with variable and high bit rates.\n\
    This standard (having a comparable spectrum everywhere it is\nused) enables seamless\
    \ worldwide networking. It utilizes the\npacket switching concept for data communication\
    \ and circuit\n(or optional packet) switching technique for voice\ncommunication.\
    \ It allows global roaming across a similar type\nof network (wireless) called\
    \ a cellular network at 384 Kbps or\neven higher (up to several Mbps).\n-\nWAN\n\
    Spectrum licensed cost,\nhuge power\nconsumption, and\ninsufﬁcient bandwidth to\n\
    handle growing user\ndemands.\nGPRS\nAs an enhancement over GSM, GPRS adds several\
    \ nodes\ncalled GSNs to support end-to-end packet-switched services in\nthe system.\
    \ It operates by aggregating several separate data\nchannels by the concept of\
    \ packetization. Moreover, it is a\nlow-cost technology that suggests a packet-based\
    \ radio service.\nIt offers the capabilities such as a high transfer rate,\nvolume-based\
    \ billing, shorter access time, improved radio\nresource utilization, and simpliﬁed\
    \ access to packet data\nnetworks [90].\n-\nWAN\nLow data rate.\nElectronics 2023,\
    \ 12, 2490\n22 of 63\nTable 3. Cont.\nCommunication\nTechnology/Standard 1\nFeatures\
    \ 2\nTopology 3\nNetwork Category 4\nLimitations\nZ-Wave/Z-Wave\nAlliance\nIt\
    \ allows for operation in the low-frequency range, hence\noffering better performance.\
    \ It supports low-power mesh\nnetworks and employs BFSK modulation. The lower\
    \ frequency\nwith longer wavelength allows Z-Wave devices to establish\nmore reliable\
    \ and faster connections since these parameters\nassist these devices in easily\
    \ penetrating objects and walls.\nSix layers of backward compatibility provide\
    \ version\ninteroperability. The interoperability facility among\nZ-Wave-based\
    \ smart or conventional devices assists in\nblending several applications at once,\
    \ such as HA, SA, and LA.\nStar, cluster,\nmesh\nWPAN\nDifﬁculty in mobility\n\
    management. Fewer\nsecurity features.\nLTE/3GPP\nIt is a 3GPP interface (radio)\
    \ based on UMTS/HSPA and\nGSM/EDGE networking technologies. It suggests\nimprovements\
    \ in data rate and capacity by employing new\nand modiﬁed modulation schemes.\
    \ Moreover, it offers support\nfor FDM and TDM techniques. It adopts an IP-based\
    \ network\nmodel that promises a seamless handoff of voice and data to\ncell towers\
    \ using an older technology.\nStar\nWAN\nHigh operational costs\nbecause extra\
    \ antennas\nare used at network base\nstations to transmit data.\nLTE-A/3GPP\n\
    Through modifying and proposing novel PHY layer\nspeciﬁcations or implementations\
    \ and reforming the CN,\nLTE-A offers much-improved performance over UMTS/HSPA\n\
    MNwTs. It can speed up to 3 Gbps download and 1.5 Gbps\nupload. Additionally,\
    \ it has various antenna systems that\nsimplify switching between cell regions,\
    \ as well as\ncutting-edge transmission techniques that pack more data per\nsecond\
    \ into each hertz of the spectrum and improve\nthroughput performance at the level\
    \ of cell boundaries.\nSubsequently, it leads to superior performance in terms\
    \ of\nconsistent connection and capacity (network) [89,91,92].\nP2P\nWAN\nThe\
    \ installation of towers\nto improve signals while\na smart device is in\nmotion\
    \ may result in\nsigniﬁcant costs.\nDevice compatibility is a\nconcern because\
    \ older\nmodels of devices that\ndo not support 4G LTE\ncannot connect to LTE\n\
    networks.\n5G (New Radio (NR) Air\nInterface) (Single Uniﬁed,\n4G + World Wide\n\
    Wireless Web (WWWW))\nThis technology addresses signiﬁcant challenges: a massive\n\
    and quick increase in highly sophisticated connected devices\ncontributes to a\
    \ sharp escalation in network trafﬁc and an\nexpanding variety of applications\
    \ with distinct dynamic\ndemands and features.\nSince LTE user equipment is not\
    \ required to be able to operate\non an NR carrier, NR is designed to be optimized\
    \ for\nperformance without taking backward compatibility into\naccount. Moreover,\
    \ NR can support operations in licensed\nspectrum bands from below 1 GHz to 52.6\
    \ GHz with a\nspectrum expansion facility.\nIn the case of mmWave frequencies,\
    \ excellent capacity and\nhigh data rates are possible. This technology’s ultra-lean\n\
    design seeks to decrease interference and improve system\npower efﬁciency by effectively\
    \ reducing always-on\ntransmissions [93,94].\nThis technology utilizes sophisticated\
    \ access procedures such\nas Beam Division and FBMC Multiple Access to adapt 4G\
    \ to\n5G networks. Beam Division Multiple Access (BDMA)\nschemes’ central design\
    \ principle is concurrently serving\nnumerous mobile users. This technique typically\
    \ uses an\northogonal beam, which suggests that resources can be\nallocated in\
    \ parallel to each mobile base station by separating\nthe antenna beam in accordance\
    \ with the position of the\nmobile stations to enable numerous accesses to the\
    \ base\nstations. This subsequently assists in improving the capacity\nof 5G networks\
    \ [79].\nE2E Network\nSlicing\nWAN\nIn the case of the NLoS\nstate, the effectiveness\
    \ of\nthis technology needs to\nbe thoroughly examined,\nparticularly when it\
    \ runs\nat high frequencies\nbecause wireless\nchannels’ basic nature is\ninconsistent\
    \ when the\nfrequency changes to\nhigher values. Due to\nhigher frequencies’\n\
    extreme vulnerability to\ninterference from\nobstructions, this\ndisadvantage\
    \ exists.\nSubsequently, this\nhampers the throughput\nperformance of\nunderlying\
    \ deployed\nLayer-4 protocols such as\nTCP and MPTCP.\n1: LoRaWAN: Long-Range\
    \ Wide Area Network; 3GPP: Third-Generation Partnership Project; WCDMA: Wideband\n\
    Code Division Multiple Access; BIS: Broadband Internet Service; GPRS: General\
    \ Packet Radio Services; LTE:\nLong-Term Evolution; LTE-A: LTE-Advanced; 3GPP:\
    \ Third-Generation Partnership Project. 2: CSMA: Carrier\nSense Multiple Access;\
    \ PAN: Personal Area Networks; P2P: Point-to-Point; BLE: Bluetooth Low Energy;\
    \ LANs:\nLocal Area Networks; ARS: Adaptive Rate Selection; OFDM: Orthogonal Frequency\
    \ Division Multiplexing;\nMIMO: Multiple-Input/Multiple-Output; WLANs: Wireless\
    \ LANs; VoIP: Voice over Internet Protocol; PHY:\nPHYsical; ISM: Industrial, Scientiﬁc,\
    \ and Medical; WANs: Wide Area Networks; GPS: Global Positioning System;\nGW:\
    \ GateWay; AES: Advanced Encryption Standard; MNwT: Mobile Network Technology;\
    \ GSM: Global System\nfor Mobile communication; GSNs: GPRS Support Nodes; HA:\
    \ Home Automation; SA: Security Automation;\nLA: Lighting Automation; UMTS: Universal\
    \ Mobile Telecommunications System; HSPA: High-Speed Packet\nAccess; FDM: Frequency\
    \ Division Multiplexing; TDM: Time Division Multiplexing; CN: Core Network. 3:\
    \ P2P:\nPoint-to-Point; P2MP: Point-to-MultiPoint; E2E: End-to-End. 4: WPAN: Wireless\
    \ Personal Area Network; LAN:\nLocal Area Network; WAN: Wide Area Network; MAN:\
    \ Metropolitan Area Network.\nElectronics 2023, 12, 2490\n23 of 63\n4.1. IEEE\
    \ 802.11 Standards\nTable 4 presents IEEE 802.11 standards and their features.\n\
    Table 4. IEEE 802.11 standards and their enhancements/features.\nStandards (Year\
    \ Released)\nEnhancement(s)/Feature(s) *\nTarget\nIEEE 802.11 (1997) (Original)\n\
    The standard and its amendments serve as the foundation for\nwireless network\
    \ products bearing the WiFi brand. This signiﬁes\ntwo raw data rates of 1 and\
    \ 2 Mbps that must be transferred via\nDSSS and FHSS at 2.4 GHz in the ISM band.\n\
    Wireless Standard (basic)\nIEEE 802.11b (1999)\nThis standard is intended to operate\
    \ in the 2.4 GHz spectrum;\nhowever, the level of interference issues is higher\
    \ when this\nstandard-based device tries to interoperate with many other\ndevices/standards\
    \ operating on the same band. It can attain a\ntheoretical data rate of 11 Mbps.\
    \ Nevertheless, dynamic\nadaptations can be applied to the transfer rate subject\
    \ to the current\ninterference level and signal power to minimize the error rate\
    \ (ARS\nPolicy). Depending on the channel conditions, the raw data rates\ncan\
    \ be adapted to 5.5 Mbps, 2 Mbps, and 1 Mbps. Additionally, it\nprovides somewhat\
    \ simpler deployment processes (e.g., upgrading\nthe current chipsets) as it demonstrates\
    \ backward compatibility\nwith the original standard due to the use of CDMA and\
    \ DSSS (same\nas the original standard) [89]. The coverage indoor and outdoor\n\
    ranges are 115 feet and 460 feet, respectively.\nWiFi-1\nIEEE 802.11a (1999)\n\
    Designed to operate on the 5 GHz spectrum and to have the least\namount of interference\
    \ compared to other devices. Depending on\nthe needs, the raw data rates can be\
    \ changed to 48 Mbps, 36 Mbps,\n24 Mbps, 18 Mbps, 12 Mbps, 9 Mbps, and 6 Mbps.\
    \ However, it can\nreach a theoretical transfer rate of 54 Mbps. The coverage\
    \ indoor\nand outdoor ranges are 115 feet and 391 feet, respectively [89].\nWiFi-2\n\
    IEEE 802.11g (2003)\nAllows for device compatibility with devices that operate\
    \ and\nfollow IEEE 802.16b standards. It can also attain a theoretical\ntransfer\
    \ rate of 54 Mbps. In real-time situations, it can achieve a\npractical data rate\
    \ of 24 Mbps. Nonetheless, when IEEE\n802.11b-based devices are introduced into\
    \ IEEE 802.11g networks,\nor when these heterogeneous compliant devices interoperate,\
    \ the\nrate decreases drastically to accommodate IEEE 802.11b-based\ntransmission\
    \ speeds every time that the compliant device tries to\ncommunicate [89]. The\
    \ coverage indoor and outdoor ranges are\n148 feet and 296 feet, respectively.\n\
    WiFi-3\nIEEE 802.11e (2005)\nIt speciﬁes a set of QoS augmentations for WLAN applications\n\
    through extensive amendments to the MAC sub-layer. It addressed\nQoS requirements\
    \ by emphasizing two-channel access schemes:\n(1) the contention-based EDCA scheme\
    \ and (2) the contention-free\nHCCA scheme. This standard, via EDCA, provides\
    \ trafﬁc\nprioritization support based on QoS classes (similar to\ndifferentiated\
    \ services). Conversely, this standard suggests\nparameterized QoS (similar to\
    \ integrated services) via HCCA. It\nalso speciﬁes enhancement over the conventional\
    \ IEEE 802.11\npower saver method (APSD) and reduces the signaling load [95].\
    \ It\nis designed to operate at frequencies ranging from 2.4 to\n2.4835 GHz or\
    \ from 5.75 to 5.850 GHz. This standard also speciﬁes\nthat a high transmission\
    \ rate may not be sufﬁcient to meet the QoS\nrequirements imposed by real-time\
    \ audio, voice, video, and\nlive-streaming applications. Following that, the provisions\
    \ of trafﬁc\nprioritization at the MAC sub-layer were insisted upon.\nQoS improvements\n\
    Electronics 2023, 12, 2490\n24 of 63\nTable 4. Cont.\nStandards (Year Released)\n\
    Enhancement(s)/Feature(s) *\nTarget\nIEEE 802.11n (2009)\nThis standard was suggested\
    \ while keeping the increased speed\nrequirement in mind. Later, it was able to\
    \ boost the attainable\nspeeds of WiFi networks beyond what was possible with\
    \ 802.11g.\nAchieving such high performance required several new features,\nincluding\
    \ a modiﬁed OFDM scheme, power-saving mechanisms,\nantenna technology, MIMO, and\
    \ wider channel bandwidth.\nNonetheless, backward compatibility in the standard\
    \ has been\nsigniﬁcantly affected (reduced) under exceptional scenarios.\nWhenever\
    \ or not an old standard compliance-based device attempts\nto communicate with\
    \ an IEEE 802.11g-based device in an 802.11g\nnetwork, the network’s operation,\
    \ performance, and other\ncapabilities suffer signiﬁcantly. These standard-based\
    \ APs can\noperate in Legacy mode (choosing one standard amongst\n802.11a/b/g),\
    \ Mixed mode (choose (out of 802.11a/b/g/n) and\noperate on heterogeneous conditions),\
    \ and Greenﬁeld mode\n(operate with a single (common) 802.11n altogether) [89].\
    \ It can\nreach a theoretical transfer rate of 600 Mbps. The coverage indoor\n\
    and outdoor ranges are 230 feet and 821 feet, respectively.\nWiFi-4\nIEEE 802.11ac\
    \ (2013)\nThis standard (called initially VHT) was suggested while keeping\nincreased\
    \ speed requirements in mind (likewise with other\nstandards). This standard was\
    \ later able to increase the achievable\nspeeds (up to 1 Gbps (minimum) to 7 Gbps\
    \ (maximum)) of WiFi\nnetworks beyond what 802.11n was capable of. The standard\n\
    enables the transmission of HD videos, online interactive games,\nlive-streaming,\
    \ and other demanding applications. It operates\nusing MU-MIMO technology, which\
    \ enables a single AP and its\nantenna to send data concurrently to several devices.\
    \ As a result,\nthis helps to increase airtime efﬁciency so that every associated\n\
    client—regardless of the 802.11 types it operates on—ﬁnally\nreceives the amount\
    \ of airtime it is supposed to receive, depending\non the technology used.\nWiFi-5\n\
    IEEE 802.11ah (2017)\nDesigned to operate on unlicensed spectrum below 1 GHz,\
    \ it can\nprovide signiﬁcantly more transmission coverage than traditional\n802.11\
    \ standards, which typically operate on 2.4 and 5 GHz bands.\nThis standard can\
    \ be employed in those scenarios where accessible\nbandwidth is comparatively\
    \ narrow. It can normally apply with\nWiFi (outdoor) for performing CTO, large-scale\
    \ WSNs (i.e., smart\ngrid), and extended-range hotspots. Supporting a reasonably\
    \ large\ntransmission range/coverage property aids in managing large-scale\nnetworks\
    \ where the number of devices may be much greater than\nwhat the conventional\
    \ 802.11 standard can support. It advises that\nchanges to the PHY and MAC layers\
    \ be made to provide important\nimprovements including energy-saving capabilities,\
    \ support for\naccommodating a high number of devices, reliable media access\n\
    techniques, and throughput performance improvement by using\nsmall frame formats\
    \ [96].\nExtended coverage, low-power\nWLAN\nIEEE 802.11ax (2021)\nThis standard\
    \ was proposed with the consideration of higher speed\nrequirements. Later, this\
    \ standard increased WiFi network\nachievable speeds above what was made possible\
    \ by earlier\nstandards. Speciﬁcally, it can offer support for a 10 Gbps data\
    \ rate,\nconsistency, and low power consumption. It operates using\nMU-MIMO and\
    \ MU-OFDMA multi-user technologies, which\nenables a single AP and its antenna\
    \ to send data concurrently to\nseveral end devices. Although the 802.11ac standard\
    \ is where\nMU-MIMO technology was ﬁrst introduced, 802.11ax now allows\nfor groups\
    \ of up to eight clients. In addition, this standard also\nsuggests several improvements\
    \ in spatial reusing policies and\npower-saver schemes [97].\nWiFi-6\n* ARS: Adaptive\
    \ Rate Selection, CDMA: Code Division Multiple Access; DSSS: Direct Sequence Spread\
    \ Spectrum;\nEDCA: Enhanced Distributed Channel Access; HCCA: HCF-Controlled Channel\
    \ Access; APSD: Automatic\nPower Save Delivery; APs: Access Points; MU-MIMO: Multi-User,\
    \ Multiple Input, Multiple Output; VHT: Very\nHigh Throughput; CTO: Cellular Trafﬁc\
    \ Ofﬂoading; MU-OFDMA: Multi-User Orthogonal Frequency Division\nMultiple Access.\n\
    Electronics 2023, 12, 2490\n25 of 63\n4.2. IEEE 802.15.1\nThe IEEE 802.15.1 (WPAN\
    \ protocol) uses the 2.4 GHz spectrum and a master/slave\ntime division duplex\
    \ mechanism that operates smoothly in the 10 to 100 m range with a\n1 Mbps data\
    \ rate. This technology uses modest data rates for short-range services designed\n\
    to use less power. Recent implementations of this technology include Bluetooth\
    \ and\nBluetooth Low Energy (BLE), offering IP connectivity to aid the IoT [98].\
    \ The deployment\nof services offered for tracking and localization devices is\
    \ typically suggested by BLE-based\ndevices, which are recognized as BLE beacons.\
    \ These beacons produce a signal that other\ncompatible devices can pick up between\
    \ 50 and 70 m away. Using such a beacon promises\ngreater indoor localization\
    \ accuracy than other technologies such as WiFi or GPS. They can\nbe used for\
    \ a wide range of services targeted toward information dissemination, the launch\n\
    of points of sale, user tracking, etc., thanks to this capability. Additionally,\
    \ to provide\nspeciﬁc services of interest, it is frequently required to combine\
    \ the BLE technology with\nother technologies such as WiFi [99]. Originally, the\
    \ aim of BLE technology (Bluetooth\nClassic Radio (BCR)) was to provide a continuous\
    \ wireless connection, i.e., BlueTooth\nBasic Rate/Enhanced Data Rate (BT BR/EDR).\
    \ It became the perfect option for the IoT\nsince it permits connectivity and\
    \ audio-streaming applications using brief bursts of long-\ndistance radio, which\
    \ lowers the battery consumption of mobile devices (because they need\nnot be\
    \ connected all the time). Using the idea of dual-mode chipsets and the new BLE\n\
    speciﬁcation, smartphones or regular phones can be linked to other heterogeneous\
    \ devices\n(such as headphones) in BR/EDR mode. Otherwise, they can be connected\
    \ to wearables\nin LE mode. A low-power radio called BCR, or BT BR/EDR, intends\
    \ to broadcast data\nacross 79 channels in the 2.4 GHz unlicensed frequency range.\
    \ Wireless audio streaming is\nprimarily made possible through BCR, which has\
    \ evolved into the industry-standard radio\nprotocol for in-car entertainment\
    \ systems, wireless speakers, and headphones. BLE aims to\ntransmit data over\
    \ 40 channels in the 2.4 GHz unlicensed frequency range. To facilitate the\ndeployment\
    \ of dependable and large-scale device networks, BLE seeks to provide support\n\
    for a wide range of communication methods, typically P2P; broadcast; and, most\
    \ notably,\nmesh [100]. This unique Bluetooth feature can be used to create distribution\
    \ and locating\nmaps utilizing ﬁngerprint templates for indoor device and user\
    \ localization. Due to BLE’s\ngreater susceptibility to abrupt fading and substantial\
    \ changes in received signal strength,\nit has been proven that using BLE is more\
    \ efﬁcient than using WiFi-based solutions [99,101].\nHowever, Bluetooth technology\
    \ has a problem with increasing power usage, particularly\nwhen its BR/EDR mode\
    \ is used in an IoT context. This is because this mode allows the\nmaster nodes\
    \ to continuously poll the slave nodes, even when there is no data transmission.\n\
    The researchers [102,103] already brought up this issue, addressed it, and offered\
    \ a variety\nof scheduling techniques for polling the slave nodes. Moreover, the\
    \ BR/EDR mode reveals\na lack of scalability that further restricts the performance\
    \ of the system.\n4.3. LoRA\nThe LoRa protocol was primarily used for WAN applications\
    \ and operated as a low-\ndata-rate, low-power technology on the sub-1 GHz spectrum\
    \ that could go up to 10 km.\nLoRa communicates on three classes of bandwidth:\
    \ 125, 250, and 500 KHz. Even while\nthis technology can function at the largest\
    \ bandwidth class, which further improves data\nrate, it still causes issues with\
    \ high power consumption, a shorter communication range,\nand an increase in the\
    \ likelihood of interference because it is free to operate in a wider\nfrequency\
    \ spectrum. This method is founded on the idea of spread spectrum modulation\n\
    and a CSSM variant with a spreading factor ranging from 7 to 12. The transmission\
    \ range\nwill expand as the spreading factor’s value rises, but the power consumption\
    \ will rise\nas well. The CSSM utilizes complete allocated bandwidth, thereby\
    \ making it resilient to\nchannel noise and multi-path fading, but it does not\
    \ differentiate the noise in the channel\nsuch as DSSS. In contrast to the FSK\
    \ modulation approach, which normally identiﬁes\nsignals that are 8 to 10 dB above\
    \ the noise ﬂoor, the CSSM feature enables this technology\nto sense, perceive,\
    \ and capture signals that are 19.5 dB below the noise ﬂoor [103]. Its\nElectronics\
    \ 2023, 12, 2490\n26 of 63\narchitecture uses a star network topology and includes\
    \ gateways and end nodes. In this\ndesign, end nodes are referred to as slaves\
    \ and run on battery-powered devices with\nlimited power, but gateways are thought\
    \ of as powerful machines that gather data from\nslave nodes. Furthermore, LoRaWAN\
    \ is a communication layer that operates on top of\nLoRA. LoRaWAN incorporates\
    \ the basic LoRa criteria and suggests improved adaptability\nand suitability\
    \ for low-power applications. This layer/technology has advantages over\ncellular\
    \ technologies, which are expected to be battery hungry by the concept. In practice,\n\
    LoRaWAN improved network features and functionalities by addressing the concept\
    \ of\na specialized server (network) and speciﬁcally deﬁning numerous device types\
    \ to meet\nthe needs of each specialized application. Managed communication, packet\
    \ ﬁltering, and\npacket scheduling are all made possible using specialized network\
    \ servers. LoRaWAN\nhas also facilitated bi-directional-employing adaptive transmission\
    \ power and rate, which\naids in optimizing network performance in terms of power\
    \ consumption and throughput.\nThis technology can be employed for a wide range\
    \ of applications, such as smart health\nnursing [104], trafﬁc monitoring [105],\
    \ agriculture monitoring [106], localization [107],\nand smart grid applications\
    \ [108]. In particular, this technology is useful for non-latency-\nsensitive\
    \ applications and those that call for extensive deployments. Haxhibeqiri et al.\
    \ [109]\nand Adelantado et al. [110] emphasized that LoRaWAN is feasible for smart\
    \ metering,\ntracking, and localization-based applications. At the same time,\
    \ it is not so feasible for\nreal-time monitoring and video surveillance.\n4.4.\
    \ WiMAX\nWiMAX can handle high capacity, i.e., a potential peak data rate of 60\
    \ Mbps for an\nentire downlink operation and a rate of 28 Mbps for an entirely\
    \ uplink operation, based on\nthe original IEEE 802.16 air interface standard\
    \ (2004) [111] and the IEEE 802.16e amend-\nment [112]. It can be done using two\
    \ antennas with a channel bandwidth of 10 MHz.\nAdditionally, it may provide support\
    \ for multimedia services with different trafﬁc charac-\nteristics and wide area\
    \ mobility with changing QoS needs. Additionally, it offers a variety\nof QoS\
    \ scheduling options for accommodating heterogeneous trafﬁc, such as Internet\
    \ data\ntrafﬁc, VoIP (Voice over IP), classic audio trafﬁc, and voice and video\
    \ streams [113].\nTable 5 shows the speciﬁed WiMAX standards and their operational\
    \ parameters [114].\nThis standard provides a communication channel between geographically\
    \ separated de-\nvices. As a result, the maximum achievable covered distance ranges\
    \ between 30 km and\n100 km. However, this technology has some drawbacks, such\
    \ as high installation costs\nand the possibility of complications and irregularities\
    \ when dealing with high-deﬁnition\nmultimedia trafﬁc.\nWireless network trafﬁc\
    \ has recently increased extraordinarily due to the rapid pro-\nliferation of\
    \ smart handheld devices, sensors, and actuators. These devices, along with\n\
    smart controllers, mobile users, and other smart services-based specialized devices,\
    \ are\nthe most common use cases for W-LANs in dense network environments. In\
    \ such a dense\nnetwork environment, interference is a critical issue that must\
    \ be addressed if satisfactory\nperformance and, thus, proﬁcient spatial frequency\
    \ reuse is required. Subsequently, the\nstandards IEEE 802.11 were designed and\
    \ implemented to support these requirements.\nNumerous international organizations,\
    \ including IEEE and 3GPP, adopted and improved\ntheir technologies in response\
    \ to changing needs and the emerging IoT market. For instance,\nthe original IEEE\
    \ 802.11 (WiFi) standard was designed to support and provide superior\nthroughput\
    \ performance to a small number of stations located close to each other, and as\
    \ a\nresult, this technology was not particularly useful for IoT systems. As a\
    \ result, to address\nthe challenges and requirements of IoT, the IEEE 802.11ah\
    \ Task Group (TG) was formed by\nthe IEEE 802.11 MAN/LAN Standards Committee to\
    \ redesign and extend the applicability\nof WiFi standards to IoT scenarios. They\
    \ focused on the critical issue of power-aware\nefﬁcient schemes and protocols\
    \ to extend the functionality and applicability of 802.11-based\nnetworks while\
    \ dealing with a variety of small power-constrained smart outdoor and\nindoor\
    \ devices [55,97].\nElectronics 2023, 12, 2490\n27 of 63\nTable 5. WiMAX standards\
    \ and their operational parameters.\nSpeciﬁc\nStandards\nIEEE 802.16\n(2001) 1\n\
    IEEE 802.16a (2003) 2\nIEEE 802.16b 3\nIEEE 802.16c\n(2002) 4\nIEEE 802.16d\n\
    (2004) 5 (Fixed)\nIEEE 802.16e\n(2005) 6\nIEEE 802.16m\n(PAI) 7\nOperating\nFrequency\n\
    Band\n10–66 GHz (LS\nRF Bands)\n2–11 GHz (LS/ULS RF\nBands) (WMANs)\n5–6 GHz (ULS\n\
    RF Bands)\n10–66 GHz\n2–11 GHz\n(LS/ULS RF\nBands)\n2–6 GHz (LS RF\nBands)\n450–3600\
    \ MHz\n(LS/ULS RF\nBands)\nData Rate (max)\n32–134 Mbps\n(28 MHz)\n75 Mbps max,\
    \ 20 MHz\nchannelization\n75 Mbps\n70 Mbps (20\nMHz)\n75 Mbps\n90 Mbps\n100 Mbps\
    \ (MA)\nand 1 Gbps (FA)\nCoverage Area\n(Max)\n10–50 Km\n45 km\n45 Km\n50 km\n\
    45 km\n100 km\n100 km\nPropagation\nmodel (Channel\nCondition)\nLoS only\nNLoS\n\
    NLoS\nLoS\nLoS/NloS\nNLoS\nNLoS\nChannel\nBandwidth\n20, 25, and 28\nMHz\nSelectable\
    \ between 1.25\nand 20 MHz\n10, 20 MHz (5\nMHz is optional)\n28 MHz\nSelectable\
    \ between 1.5 MHz and 20\nMHz\n5–20 MHz/RF\ncarrier,\nCA-supported\nfeature to\
    \ assist\nin attaining BW\nup to 100 MHz.\nMobility\nSupport\nFixed\nFixed\nFixed\n\
    Fixed\nFixed/nomadic\nPortable/mobile\nversion of\nWiMAX\nPortable/mobile\nversion\
    \ of\nWiMAX.\nTopology\n(MAC\nArchitecture)\nP2MP and Mesh\nAssistance\nMore extended\n\
    coverage than\nWLANs while\nsustaining high\ntransmission\nrates\nVoIP\nLicensed\
    \ exempt\napplications.\nQoS support.\nCreating\nproﬁles\n(systems) for\n10–66\
    \ GHz will\nhelp with\ncompatibility\nrequirements\nfor LoS\nbroadband\nwireless\
    \ access.\nTechnological\nﬁxes and minor\nmodiﬁcations\nto 802.16a\nstandard.\
    \ The\nETSI\nHiperMAN\nstandard was\nmatched with\nthis standard to\nenable\n\
    worldwide\nadoption.\nMobility\n(60–120 km/hr)\nfacility to\nWiMAX. Better\nadaptability\n\
    and improved\nQoS support.\nMany\nadditional\nservice classes.\nIncreases\nmobility\
    \ (350\nkm/hr), and\nguarantees\nsuperior QoS\nservices.\nModulation\nTechniques\n\
    Employed\nQPSK, 16-QAM,\n64-QAM\nBPSK, QPSK, 16-QAM,\n64-QAM\nBPSK, QPSK,\n16-QAM,\n\
    64-QAM\nQPSK, 16-QAM,\n64-QAM\nOFDM,\nOFDMA, QPSK,\n16-QAM,\n64-QAM\nOFDM,\nOFDMA,\
    \ QPSK,\n16-QAM,\n64-QAM,\n256-QAM,\nS-OFDMA\nOFDM,\nOFDMA, QPSK,\n16-QAM,\n64-QAM,\n\
    256-QAM,\nS-OFDMA\nAccess\nScheme/Protocol\nRequest/Grant\nSalient Features\n\
    Overcomes the\ndisadvantages\nof mobile\nnetworks and\nWLANs.\nDesigned to operate\
    \ in\nthe LS and ULS RF\nbands ranging from 2 to\n11 GHz (to make it\noperable\
    \ in low\nfrequency ranges). As a\nresult, gives WiMAX\nimplementations more\n\
    ﬂexibility while\nmaintaining data rate\nand transmission range.\nIncreases the\n\
    amount of\nspectrum the\ntechnology may\nuse in the 5–6\nGHz RF channels\nand\
    \ provides\nQoS support.\nMore speciﬁcs\nabout this\ntechnology\nwere\nstandardized,\n\
    which promotes\ninteroperability\nby encouraging\nmore consistent\nimplementa-\n\
    tion.\nComprises\nminor\nenhancements\nand ﬁxes to\n802.16a\nstandard. This\n\
    extension also\nmakes system\nproﬁles for the\n802.16a device\ncompliance\ntesting.\n\
    Designed to\nstandardize\ncommunication\nbetween\ncarriers’ mobile\ndevices and\n\
    ﬁxed base\nstation, instead\nof between base\nstations and\nstatic receivers.\n\
    Designed to\nincrease the\nmobility facility\n(typically more\nthan IEEE\n802.16e).\n\
    Moreover,\nenables the use\nof numerous\nadvanced\nantenna\nconceptions i.e.,\n\
    beamforming\nand MIMO.\n1: LS: Licensed Spectrum, RF: Radio Frequency, LoS: Line\
    \ of Sight, QPSK: Quadrature Phase Shift Keying,\nQAM: Quadrature Amplitude Modulation.\
    \ 2: LS: Licensed Spectrum, ULS: UnLicensed Spectrum, RF: Radio\nFrequency, WMANs:\
    \ Wireless MANs, NLoS: Non-Line of Sight, VoIP: Voice over IP, BPSK: Binary Phase-Shift\n\
    Keying, QPSK: Quadrature Phase Shift Keying, QAM: Quadrature Amplitude Modulation.\
    \ 3: ULS: UnLicensed\nSpectrum, RF: Radio Frequency, NLoS: Non-Line of Sight,\
    \ BPSK: Binary Phase-Shift Keying, QPSK: Quadrature\nPhase Shift Keying, QAM:\
    \ Quadrature Amplitude Modulation. 4: LoS: Line of Sight, QPSK: Quadrature Phase\n\
    Shift Keying, QAM: Quadrature Amplitude Modulation. 5: LS: Licensed Spectrum,\
    \ ULS: UnLicensed Spectrum,\nRF: Radio Frequency, LoS: Line of Sight, NLoS: Non-Line\
    \ of Sight, OFDM: Orthogonal Frequency Division\nMultiplexing, OFDMA: Orthogonal\
    \ Frequency Division Multiple Access, QPSK: Quadrature Phase Shift Keying,\nQAM:\
    \ Quadrature Amplitude Modulation. 6: LS: Licensed Spectrum, RF: Radio Frequency,\
    \ NLoS: Non-Line of\nSight, P2MP: Point-to-MultiPoint, OFDM: Orthogonal Frequency\
    \ Division Multiplexing, OFDMA: Orthogonal\nFrequency Division Multiple Access,\
    \ QPSK: Quadrature Phase Shift Keying, QAM: Quadrature Amplitude\nModulation,\
    \ S-OFDMA: Scalable Orthogonal Frequency Division Multiple Access. 7: PAI: Progressed\
    \ Air\nInterface, LS: Licensed Spectrum, ULS: UnLicensed Spectrum, RF: Radio Frequency,\
    \ MA: Mobile Applications,\nFA: Fixed Applications, NLoS: Non-Line of Sight, CA:\
    \ Carrier Aggregation, BW: BandWidth, P2MP: Point-to-\nMultiPoint, Orthogonal\
    \ Frequency Division Multiplexing, OFDMA: Orthogonal Frequency Division Multiple\n\
    Access, QPSK: Quadrature Phase Shift Keying, QAM: Quadrature Amplitude Modulation\
    \ S-OFDMA: Scalable\nOrthogonal Frequency Division Multiple Access.\nElectronics\
    \ 2023, 12, 2490\n28 of 63\n4.5. Challenges in IoT Communication Using the TCP/IP\
    \ Protocol Suite\nIn IoT, smart sensing motes, devices, and actuators share unique\
    \ features such as\nconstrained memory, power, and processing capabilities; the\
    \ need for facilitating real-time\nrequirements of smart applications; extremely\
    \ vulnerable radio environments; and little to\nno human involvement after deployment\
    \ [115]. By enabling communication amongst these\ndevices utilizing low-power-cost\
    \ technologies, a new infrastructure for deployed smart\nservices has been formed.\
    \ Researchers [116] argued that the TCP/IP protocol suite might\nprovide a solution\
    \ and be ﬂexible enough for a variety of evolving IoT communication\nscenarios.\
    \ Unfortunately, there were additional challenges that network administrators,\n\
    designers, and researchers had to overcome. Researchers were searching for the\
    \ best way\nto install IPv6-based sensor motes that can effectively/minimally\
    \ use the system’s limited\nresources (i.e., power and bandwidth). Because of\
    \ such power constraints, researchers\nhighlighted the requirements of low-power\
    \ Layer-2 technologies (i.e., BLE, IEEE 802.15.4)\nand low-power WiFi usage. In\
    \ contrast with traditional Ethernet links, these technologies\noperate with smaller\
    \ maximum transmission unit (MTU) sizes and slower transmission\nspeeds. IoT network\
    \ protocol designers faced a problem in adapting to and determining\nthe ideal\
    \ MTU size. Another obstacle is that IoT networks often are based solely on wireless\n\
    networks and thus they can only communicate using wireless mesh technologies.\
    \ This\nvulnerability brings extra challenges in front of TCP/IP architecture:\n\
    (1)\nThe current IP addressing model cannot assist mesh communication (since it\
    \ relies on\na multi-link subnet prototype) at all.\n(2)\nIn mesh communication,\
    \ the multicasting and broadcasting communication methods are\nquite expensive,\
    \ power-demanding, and prohibitive as the network nodes are extremely\npower constrained.\
    \ Moreover, unicasting is the only remaining alternative method.\n(3)\nUnicasting\
    \ is power intensive in and of itself because it may take many hops while\nforwarding\
    \ and may wake up an excessive number of nodes that are asleep. Notably,\nidle\
    \ nodes and hops can modify the radio state’s operation mode to save power. Ad-\n\
    ditionally, a large amount of power is used and saved by a node during transmission,\n\
    reception, overhearing, idle, and sleeping phases [117]. However, to ensure successful\n\
    delivery, we cannot just alter the operational modes. Instead, it requires effective\n\
    coordination and intricate synchronization [117,118].\n(4)\nThere is a high requirement\
    \ for scalable routing/forwarding schemes for IP communi-\ncation to take place\
    \ over mesh architectural systems.\n(5)\nFor many IoT applications requiring data\
    \ prioritizing and customized control, original\nTCP-suited features such as those\
    \ operational on ﬁxed MSS sizes (such as MTU sizes)\nthat further lead to silly\
    \ window syndrome or in-order byte-stream delivery to ensure\ndependability, are\
    \ unsuitable [119]. Nonetheless, the IETF started deﬁning standard\nInternet protocols\
    \ such as RPL [120] for such specialized environments to minimize\nprotocol overheads\
    \ that impair the computing ability and memory management of\nthese specialized\
    \ resource-constrained devices.\nWiFi-based infrastructure networks enable backhauling\
    \ support, which helps estab-\nlish and sustain seamless connectivity among smart\
    \ IoT devices. In smart home wireless\nnetworks, this form of connectivity can\
    \ be provided through TCP connections. The TCP/IP\nprotocol suite supports dependable\
    \ data delivery and congestion control strategies to main-\ntain network throughput\
    \ performance via TCP at Layer-4. TCP is a protocol that has been\nregularly modiﬁed\
    \ and improved over the years to effectively transport large amounts of\nbyte-stream\
    \ in-ordered data via resilient P2P connections with comparatively lower latency\n\
    needs. IoT services deal with atypical communication patterns, for which TCP/IP\
    \ protocol\nsuite-based protocols, such as TCP, are unable to handle such patterns\
    \ adequately [119].\nThere are severe problems that TCP faces when it deals with\
    \ an IoT application:\n(1)\nTCP connection establishment and termination (three-way\
    \ handshaking) incur signiﬁ-\ncant overhead in the system as most communication\
    \ in an IoT application includes\nthe transmission of brief segments and relatively\
    \ little data.\nElectronics 2023, 12, 2490\n29 of 63\n(2)\nTCP functionality needs\
    \ resilient P2P connections. It is impossible to sustain these con-\nnections\
    \ in an IoT network environment because smart sensors and other connected\ndevices\
    \ switch their mode of radio state from active to sleep phase persistently [119].\n\
    (3)\nSome IoT applications might need broadcast and multicast communication patterns,\n\
    and enabling such patterns via TCP will result in substantial network overhead\
    \ in the\nentire IoT system and high-power consumption.\n(4)\nSome IoT services\
    \ have very granular delay requirements, and any extra delay in\nthe form of connection\
    \ establishment or MSS creation (waiting for data to ﬁll the\nentire MSS) is completely\
    \ unacceptable for their performance. Thus, TCP is unable to\nprovide much support\
    \ for these IoT services.\n(5)\nIoT applications that rely on wireless communication\
    \ scenarios must deal with crit-\nical wireless channel characteristics such as\
    \ channel error, interference, and wire-\nless interface properties that result\
    \ in buffer-induced, channel-induced, link-layer\ncontention-induced, and collision-induced\
    \ packet losses. When TCP operates in such\na setting, its stringent in-order\
    \ delivery requirements and retransmission policies\n(i.e., fast retransmission)\
    \ may occasionally result in very serious system problems\nsuch as Head-of-Line\
    \ (HoL) or Receiver Buffer Blocking, which ultimately results in\na reduction\
    \ in throughput, delay, and power consumption performance [121–124].\nFurthermore,\
    \ wireless MAC methods that use MAC-level retransmissions may fur-\nther impair\
    \ TCP’s performance, if Layer-2 retransmission latency exceeds the TCP\nRetransmission\
    \ Time Out timer.\nSome standards, such as BACnet/IP [125], were proposed to implement\
    \ Layer-4\nfunctionalities at the Application Layer (AppL) itself and proposed\
    \ to utilize UDP as an\nunderlying Layer-4 protocol. Managing packet losses should\
    \ depend on an application’s\nrequirements, which may vary from application to\
    \ application. However, TCP and its\nupdated variants rely on the concept of data\
    \ delivery deferment and try to perform retrans-\nmissions from an already created\
    \ copy in the sender buffer. However, this is not the only\napproach to dealing\
    \ with packet losses in the network. Another method is for AppL to\naccept packet\
    \ delivery that is not completely ﬂawless and proceed with its current opera-\n\
    tions. This feature will be helpful in real-time audio and video distribution.\
    \ Additionally,\nretransmission is an additional option. However, AppL should\
    \ handle this retransmission\nrather than an underlying Layer-4 protocol such\
    \ as TCP. In terms of buffering the lost data\nbits, doing so enables the source\
    \ application to reconstruct them. Furthermore, in situations\nwhere real-time\
    \ services are severely constrained, the transmitting application may transmit\n\
    fresh data instead of retransmitting lost data to “repair” the effects of the\
    \ initial loss [126].\nClark and Tennenhouse [126] concluded these concepts and\
    \ subsequently introduced the\nconcept of Application Level Framing (ALF). Implementing\
    \ Layer-4 facilities at AppL itself\nbrings the idea of employing ALF into the\
    \ system. Hence, utilizing the notion of ALF,\na network can recognize individual\
    \ Application Data Units (ADUs), and subsequently\ncan offer support for ﬂexible\
    \ Layer-4 facilities, i.e., employing adaptive retransmission\nprocedures for\
    \ diverse forms of ADUs and disseminating data more effectively by using\nin-network\
    \ caching. Unluckily, the TCP/IP protocol suite forbids applications from adding\n\
    any application semantics into network-level packet structure. Therefore, it fails\
    \ to provide\nsupport for the ALF scheme [119].\n4.6. Compound TCP for IoT\nCompound\
    \ TCP [127] was initially designed to offer support for improved channel\nutilization\
    \ and fairness performances. It will play a signiﬁcant role in home networks with\n\
    WiFi-assisted smart and standard devices [115,128].\nPokhrel and Williamson [115]\
    \ studied the effectiveness of a compound TCP over an\nIoT scenario involving\
    \ sensors and other devices (i.e., smartphones, laptops, PC, and home\nappliances).\
    \ They analyzed and evaluated the scenario improving the performance of con-\n\
    nections made using the examined TCP variant across infrastructure WiFi networks\
    \ in the\npresence of signiﬁcant buffer-overﬂow-induced losses and severely degraded\
    \ transmission\nElectronics 2023, 12, 2490\n30 of 63\nchannel circumstances. The\
    \ authors also addressed the varying bandwidth requirements\nfor all IoT devices\
    \ as well as ubiquitous connectivity, ranging from traditional bandwidth-\nhungry\
    \ Internet devices to low-power gadgets. The authors of [129] demonstrated a\n\
    thorough evaluation of the steady-state performance of TCP via WiFi-assisted classical\n\
    devices considering the situations of high-buffer-overﬂow-induced losses and signiﬁcantly\n\
    deteriorated transmission channel conditions. The authors of [115,129] suggested\
    \ models\nthat aided in capturing the dynamics of congestion and ﬂow control of\
    \ several concurrently\nrunning competitive long-lived compound TCP connections.\
    \ In evaluating and developing\nthese models, they considered MAC-level retransmissions,\
    \ link-layer contention, channel\nfailures, and collision. The authors of [130]\
    \ utilized a transient model suggesting a new\nqueue management scheme to capture\
    \ the interactions of short-lived TCP ﬂows (the most\nworkable ﬂows in IoT scenarios)\
    \ over conventional trafﬁc patterns over WiFi networks.\nHowever, the performance\
    \ of TCP in WiFi networks is constrained, especially when using\na single shared\
    \ Access Points (APs). As a result, TCP might not be able to scale well and\n\
    provide superior performance in wide-area Industry 4.0 networks, especially when\
    \ wireless\nchannels are often reused by several APs [131].\n4.7. Viewpoints of\
    \ Network Layer Routing for IoT Systems\nThe network architectures for IoT are\
    \ heterogeneous and include WiFi, WSNs, Wireless\nMesh Networks (WMNs), Vehicular\
    \ Networks, and Mobile Communication Networks\n(MCNs) (5G/LTE/4G/3G) [132]. Due\
    \ to the large-scale production of intelligent sensing\ndevices, survivability\
    \ and self-organization of deployed functional networks are essential. A\nWSN\
    \ is deployed for a variety of smart agricultural, environmental, domestic, and\
    \ military\napplications. It is an ad-hoc network with no infrastructure, in which\
    \ the sensor nodes\ncommunicate over multi-hop routing. WSNs run on battery-powered,\
    \ low-power sensors\ncapable of sensing, collecting, processing, aggregating,\
    \ and regulating communication.\nNumerous WSN-based platforms, including MICA2,\
    \ TelosB, and MICAz MOTE, have\nbeen suggested. Therefore, some standards were\
    \ introduced to enable interaction and\nother compatibilities among these numerous\
    \ heterogeneous platforms. For example, the\nIEEE802.15.4 (Zigbee) standard creates\
    \ the WSNs backbone as part of the IoT. WSNs provide\ncritical functionalities\
    \ for developing IoT systems, allowing Low-Powered battery-operated\nEnd Devices\
    \ (LPEDs) with very minimal resources to attach to the Internet. A WSN can be\n\
    considered a special form of LoWPAN consisting of several equipped sensor nodes.\
    \ Due\nto the lack of IP communication infrastructure, interoperability must be\
    \ obtained from the\nviewpoint of WSN and the Internet. To address the interoperability\
    \ issue, various works\nsuggested a standardized arrangement that could enable\
    \ the usage of IP over LoWPAN.\nThe IEEE 802.15.4 standard allows for the interoperability\
    \ for Low power and Lossy\nNetworks (LLNs). The design tenet of this standard\
    \ outlines the physical and data link\nlayers of the network and offers a low-cost\
    \ framework for network operations. To link\nLPEDs to the Internet, 6LoWPAN may\
    \ be used as an adaptation layer to enable sensors\nto implement an IP stack and\
    \ become approachable by other conventional devices over\nthe Internet. This adaptability\
    \ layer also supports end-to-end connectivity, which enables\na variety of applications\
    \ and permits these LPEDs to implement routing and forwarding\nalgorithms at the\
    \ Internet layer. However, the current network layer routing policies cannot\n\
    be supported when the number of nodes grows. Therefore, the RPL protocol [72]\
    \ considers\nthe LLN situation [133]. Most of the nodes in LLNs are resource-constrained,\
    \ and they are\nconnected by some lossy links that only support low data rates.\
    \ These links are thought\nto be extremely unstable and have poor performance\
    \ in terms of packet delivery rates. In\nsuch specialized networks, the trafﬁc\
    \ patterns are often P2MP and MultiPoint-2-MultiPoint\n(MP2MP) rather than just\
    \ P2P [72]. These networks contain hundreds of smart devices.\nThis makes the\
    \ implementation of routing policies more difﬁcult than ever. In addition,\nnumerous\
    \ existing traditional ad-hoc wireless network routing methods, such as DSR and\n\
    AODV, cannot manage these unique situations and unforeseen circumstances. Designing\n\
    and implementing routing in ad-hoc networking settings has been more difﬁcult\
    \ due to the\nElectronics 2023, 12, 2490\n31 of 63\nmobility aspect and the resource\
    \ limitations at wireless nodes. Their forwarding policies’\ndesign principles\
    \ emphasize QoS elements including bandwidth usage and end-to-end\nlatency [134,135].\
    \ The forwarding rules frequently created and applied for WSNs situations\ntake\
    \ into account the increase in the network lifetime by effectively utilizing the\
    \ node\nenergy [117,136]. As these ad-hoc networks were designed to operate and\
    \ maintain solely\ninside their operational infrastructure, this was very feasible.\
    \ However, the interoperability\nof these ad-hoc networks is a major problem when\
    \ such networks are integrated with\nIoT networks. The ad-hoc network integration\
    \ with IoT needs novel routing policies\nthat support scalability and assure QoS,\
    \ fairness, and connectivity between two nodes\n(both in APs and ad-hoc networks)\
    \ with the least amount of power consumption. The\nstandard classical forwarding\
    \ strategies were intended to ensure QoS between a pair of\ndevices/nodes. In\
    \ the case of an IoT environment, the routing procedures should suggest\nenough\
    \ fairness so that each node can sufﬁciently get enough chances to communicate\
    \ with\nnearby APs. For such specialized scenarios, hierarchical routing solutions\
    \ are followed\nto decrease data redundancy and ensure data aggregation. Researchers\
    \ have often raised\nconcerns about the disadvantaged forwarding rules, which\
    \ lead to the consumption of\nexcess energy in networks while taking into account\
    \ mobile and static ad-hoc network\nscenarios. It consequently increases the likelihood\
    \ of frequent network disconnections,\nroute failures, and even network partitioning,\
    \ all contributing to the system’s signiﬁcant\nMAC-level and routing-level overhead\
    \ problems [134,135]. Hence, bearing in mind the\nhigh-power consumption problem,\
    \ many researchers presented numerous smart routing\nparadigms [118,134,135,137].\
    \ Still, many of these suggested schemes failed to achieve the\ndesired QoS.\n\
    Cross-layer design-based recommendations for power consumption and congestion\n\
    control are well-suited design proposals for comprehending the changes in wireless\
    \ channel\nattributes. Therefore, signiﬁcant work has been done in these areas.\
    \ These designs provide\nsupport for dynamically accessing and evaluating extremely\
    \ variable channel parameters\nat lower layers (MAC and PHY) for the Internet/Routing\
    \ and Transport layers to further\noptimize forwarding and congestion window adaptations\
    \ decisions [121,134,135,138–140].\nThe Received Signal Strength Indicator (RSSI)\
    \ indicates how well a device can hear a\nsignal from an AP or router. A network\
    \ layer forwarding policy can effectively utilize the\nRSSI (accessible through\
    \ lower layers dynamically) to assess link quality. AODV and DSR\nare examples\
    \ of the traditional ad-hoc routing protocols used in various smart forwarding\n\
    systems designed for IoT scenarios. The AOMDV IoT [141] and MLB [142] routing\
    \ mecha-\nnisms were suggested for the IoT scenarios and talked about node and\
    \ link disjoint paths\nwhile discovering routes. However, the proposed schemes\
    \ do not shed light and discuss\nanything related to performance issues when there\
    \ is a signiﬁcant level of interference in\nthe network because of trafﬁc running\
    \ parallel onto multiple paths. The abovementioned\ntechniques do not always perform\
    \ well in terms of throughput and end-to-end delay.\nRecently, the scheme [140]\
    \ considered different critical factors such as interference level,\nlink-layer\
    \ contentions, routing load, MAC load, and other performance issues related to\n\
    wireless scenarios. The authors of [140] insisted that multipath load distribution\
    \ policies’\nefﬁciency depends on the distribution (physical) of routes. Nevertheless,\
    \ different possible\ndisjoint routes—those lacking any common nodes or links—might\
    \ be able to interfere\nwith one another due to the radio signals’ predicted broadcasting\
    \ behavior in wireless\ncommunication. Consequently, such separate disconnected\
    \ pathways could be utilized to\nenhance the performance of the network as a whole\
    \ [138,140].\nWhen employing an IoT-based system, the end sensor nodes depend\
    \ on WSN-based\nnetworking connectivity to deliver sensed and collected data from\
    \ smart things to sink\nnodes. These nodes are commonly known as IoT GateWay nodes\
    \ (IoT-GW). To balance\nenergy usage and gather crucial sensor data, numerous\
    \ such static and mobile IoT-GWs\ncan be deployed in the system. In the whole\
    \ system, numerous WSNs, gathering numerous\ntypes of critical data, are connected\
    \ to the Internet [142,143]. Originally, Zigbee speciﬁed\nthree forms of devices:\
    \ Zigbee Coordinator, Zigbee Router, and Zigbee End Device, and\nElectronics 2023,\
    \ 12, 2490\n32 of 63\nthree forms of network topologies: tree, star, and mesh.\
    \ Moreover, the Zigbee stack\nembraces AODV to create paths dynamically. In the\
    \ case of star network topology, the\nReduced and Fully Functional Devices (i.e.,\
    \ RFDs and FFDs) can communicate with the\nPAN central coordinator only. They\
    \ are not capable of communicating with one another.\nHere, the PAN coordinator\
    \ may be powered by mains, while the RFDs and FFDs run on\nlow-powered limited\
    \ battery devices. Moreover, in the case of the mesh network topology,\nany device\
    \ can communicate to within-range devices at a point of time. Moreover, this\n\
    topology contains a PAN coordinator, which can communicate with other RFDs and\
    \ FFDs.\nFurthermore, this networking topology offers support for the usage of\
    \ the integrated\nforwarding scheme united with hierarchical/tree and AODV routing\
    \ procedures. Lastly,\nthe tree (cluster) network topology is a subset form of\
    \ mesh networking topology, consisting\nof RFDs and FFDs (which may act as coordinators).\
    \ However, the FFD count could be\nmore than the RFD count in the network. RFDs\
    \ may attach to tree (cluster) network\ntopology as the end nodes in the system.\
    \ The coordinator FFDs can offer synchronization\nfunctionalities to other connected\
    \ coordinators and devices. However, there will be a single\nPAN coordinator amongst\
    \ these coordinators [144].\n4.8. IoT Application Protocols\nEach IoT application\
    \ is based on IoT application layer protocols for data transfer.\nThese protocols\
    \ can be the following:\n•\nRepresentational State Transfer Hypertext Transfer\
    \ Protocol (REST HTTP): HTTP [145] is\nthe primary client/server protocol that\
    \ adopts the request/response model. HTPP has\nbeen related to the REST architecture\
    \ [146] to ease the interaction between dissimilar\nentities over web-based services.\
    \ The mixture of HTTP and REST enables IoT devices\nto make their status readily\
    \ available in terms of the standardized CRUD (create, read,\nupdate, delete)\
    \ functions [147]. The CRUD functions are mapped to the POST, GET,\nPUT, and DELETE\
    \ techniques of HTTP, correspondingly. In this fashion, we can build\na REST model\
    \ for dissimilar IoT devices [148].\n•\nConstrained Application Protocol (CoAP)\
    \ [149]: It is a lightweight RESTful protocol lately\nstandardized by the Internet\
    \ Engineering Task Force (IETF). CoAP is used by IoT\ndevices for IP-based, HTTP-like\
    \ interactions. It uses UDP with acknowledgment mes-\nsages to set up reliable\
    \ communication based on a request/response interaction. It has\nreduced complexity,\
    \ and thus it is suitable for resource-constrained IoT applications\nand machine-to-machine\
    \ (M2M) communication.\n•\nMessage Queuing Telemetry Transport (MQTT) [150] is\
    \ established for IoT messaging.\nAccording to MQTT design principles, network\
    \ bandwidth and device resource re-\nquirements should be kept to a minimum while\
    \ also aiming to assure dependability\nand some level of delivery assurance. Since\
    \ June 2016, MQTT has been recognized by\nISO as a standard (ISO/IEC 20922). The\
    \ protocol continues to progress by formalizing\npopular capability options and\
    \ adding new functionalities. The most recent version,\nMQTT v5.0, was released\
    \ in 2018. MQTT operates according to a publish/subscribe\nparadigm. Clients connect\
    \ to a centralized broker when using MQTT.\n•\nOpen Platform Communications Uniﬁed\
    \ Architecture (OPC UA) [151]: This interoper-\nability standard is used for the\
    \ secure and reliable exchange of data in the industrial\nautomation domain and\
    \ other industries. It is platform independent and ensures\nthe seamless ﬂow of\
    \ information among IoT devices from multiple vendors. It sup-\nports two different\
    \ communication methods: the Client/Server method as well as\nPublish/Subscribe\
    \ (e.g., over UDP or MQTT) to mainly meet different industry re-\nquirements from\
    \ the production systems to edge and cloud scenarios. Today, the main\nIoT vendors\
    \ including IBM, AWS, Google Cloud, Microsoft, and SIEMENS leverage\nsecure, standardized\
    \ information exchange in edge-to-cloud applications based on\nOPC UA.\n•\nExtensible\
    \ Messaging and Presence Protocol (XMPP) [152]: This extensible protocol is\n\
    based on text messages that use XML (Extensible Mark-up Language), through which\n\
    Electronics 2023, 12, 2490\n33 of 63\nit can implement both request/response and\
    \ publish/subscribe methods by using\nsuitable extensions. XMPP exchanges instant\
    \ messages between clients, and this\nhappens in real-time using a push mechanism\
    \ to avoid increasing unnecessary network\nloads. XMPP also determines the state\
    \ of an XMPP entity as online, ofﬂine, busy, etc.\n•\nAdvanced Message Queuing\
    \ Protocol (AMQP) [153]: An open standard for passing\nbusiness messages between\
    \ applications or organizations using TCP. It connects sys-\ntems, feeds business\
    \ processes with the information they need, and reliably transmits\nonward the\
    \ instructions that achieve their goals using the point/point and pub-\nlish/subscribe\
    \ interaction modes. AMQP was designed to achieve the main goals of\nmessage orientation;\
    \ queuing; routing; security; reliability; and interoperability.\n•\nData Distribution\
    \ Service (DDS) [154]: DDS was developed by the Open Management\nGroup (OMG).\
    \ DDS is a real-time M2M protocol that enables dependable, high-\nperformance,\
    \ interoperable, scalable data exchanges using a publish–subscribe pattern.\n\
    DDS provides low-latency data connectivity, high reliability, and scalability\
    \ in publish–\nsubscribe and request/response patterns over TCP and UDP. The needs\
    \ of various\nIoT applications requiring real-time data exchange can be addressed\
    \ using DDS. Such\napplications are air trafﬁc control, transportation systems,\
    \ autonomous vehicles, and\nsmart grid management.\nLastly, Glaroudis et al. [155]\
    \ provided a comparison among IoT application protocols\nin terms of well-accepted\
    \ key performance indicators and discussed their suitability in the\nframework\
    \ of smart farming.\n5. Networking Architectures and Protocols\n5.1. Generic Architectures\n\
    Zanella et al. [37] provided an in-depth analysis of an urban IoT’s enabling technolo-\n\
    gies, protocols, and architecture. They also demonstrated the implementation of\
    \ an IoT\nisland as a proof-of-concept in the Italian City of Padova. In the IoT,\
    \ two methods provide\ndata access to objects/things. The ﬁrst involves deploying\
    \ multi-hop mesh networks with\nshort-range communication among network nodes\
    \ using unlicensed frequency. The second\ninvolves using licensed frequency band\
    \ long-range cellular technologies (e.g., 2G/GSM).\nCentenaro et al. [156] presented\
    \ a hopeful alternative solution (i.e., a new type of wire-\nless connectivity)\
    \ called Low-Power Wide Area Networks (LPWANs). LPWAN is based\non a star topology\
    \ characterized by low-rate, long-range transmission technologies in\nthe unlicensed\
    \ sub-GHz frequency bands. The authors considered LPWAN to provide\nconnectivity\
    \ in the IoT scenario for a characteristic SCA. Furthermore, they discussed\n\
    the advantages of LPWAN over well-known methods regarding effectiveness, efﬁciency,\n\
    and architectural design. Leccese et al. [157] created a Raspberry-Pi Card-controlled\
    \ SCA\nthat uses a ZigBee Sensor Network and WiMAX to provide completely controlled\
    \ street\nlighting. Sanchez et al. [158] described SmartSantander, an IoT experimental\
    \ research\nfacility that was deployed in Santander City, Spain. SmartSantander\
    \ supports testing\nproposed protocols, services, and conﬁgurations in a realistic\
    \ setting at an appropriate\nscale. Machine-to-machine (M2M) communication is\
    \ a signiﬁcant part of IoT. Vilajosana\nand Dohler [159] reviewed currently used\
    \ smart city M2M technologies (i.e., sensors, data\nloggers, wireless modems,\
    \ and gateway). They considered one of the most famous deploy-\nment use cases,\
    \ i.e., smart parking. In any IoT environment for smart cities, a huge amount\n\
    of M2M communication requests occur. Unfortunately, conventional network gateways\n\
    cannot face this challenge. Huang et al. [160] presented an admission control\
    \ model for\nM2M communications. Their model differentiates all M2M requests into\
    \ delay-sensitive\nand delay-tolerant. Then, it aggregates all delay-tolerant\
    \ requests by routing them into\none low-priority queue, aiming to reduce the\
    \ number of requests from various devices\nto the access point in the IoT for\
    \ smart cities. Silva et al. [161] developed the bottom-up\narchitecture after\
    \ analyzing a variety of existing architectures. This architecture has four\n\
    layers: sensing, transmission, data management, and application. Each layer integrates\n\
    security modules to protect sensitive data. The sensing layer, located at the\
    \ bottom of the\nElectronics 2023, 12, 2490\n34 of 63\narchitecture, collects\
    \ data from physical devices. The transmission layer is located above\nthe sensing\
    \ layer. Several communication technologies are used to transmit data from the\n\
    transmission layer to the (upper) data management layer. The data management layer\n\
    performs data fusion, data analysis, data processing, and data storing. It stores\
    \ valuable\ninformation that various applications use at the application layer\
    \ to provide services.\nThe majority of the above works mainly focus on a single\
    \ characteristic, such as quality\nof service [162].\nMarques et al. [163] proposed\
    \ a generic, multilevel IoT-based smart cities infrastructure\nmanagement architecture\
    \ that allows the integration of physical objects, communication\ninfrastructure,\
    \ cloud platform, and IoT-based services in a pervasive way. This architecture\n\
    (Figure 4) is generic and includes four layers: (1) Physical Objects, (2) Communication,\n\
    (3) Cloud Platform, and (4) Services.\nElectronics 2023, 12, x FOR PEER REVIEW\
    \ \n35 of 65 \n \ndata management layer. The data management layer performs data\
    \ fusion, data analysis, \ndata processing, and data storing. It stores valuable\
    \ information that various applications \nuse at the application layer to provide\
    \ services. \nThe majority of the above works mainly focus on a single characteristic,\
    \ such as \nquality of service [162]. \nMarques et al. [163] proposed a generic,\
    \ multilevel IoT-based smart cities infra-\nstructure management architecture\
    \ that allows the integration of physical objects, com-\nmunication infrastructure,\
    \ cloud platform, and IoT-based services in a pervasive way. \nThis architecture\
    \ (Figure 4) is generic and includes four layers: (1) Physical Objects, (2) \n\
    Communication, (3) Cloud Platform, and (4) Services. \n \nFigure 4. Architecture\
    \ design. Adapted from [163]. \n1. \nThe Physical Objects Layer enables IoT sensors\
    \ to collect data that will feed the smart \ncity architecture with information\
    \ used to offer services. After the sensors collect \ndata, a Communication Device\
    \ is used to collect sensor data. A communication de-\nvice can implement different\
    \ technologies (e.g., RFID, Bluetooth, and Zigbee). Sen-\nsor data are processed\
    \ by a NodeMCU, which communicates with a Local Pro-\nFigure 4. Architecture design.\
    \ Adapted from [163].\n1.\nThe Physical Objects Layer enables IoT sensors to collect\
    \ data that will feed the smart\ncity architecture with information used to offer\
    \ services. After the sensors collect data,\na Communication Device is used to\
    \ collect sensor data. A communication device can\nimplement different technologies\
    \ (e.g., RFID, Bluetooth, and Zigbee). Sensor data\nElectronics 2023, 12, 2490\n\
    35 of 63\nare processed by a NodeMCU, which communicates with a Local Processing\
    \ unit\nresponsible for gathering information used by the application providing\
    \ a service.\nThe local processing unit brings elements of edge computing, as\
    \ it pushes part of the\ncomputation to edge nodes instead of relying on concentrating\
    \ all the computation in\na centralized remote server.\n2.\nThe Communication\
    \ Layer: The architecture supports a variety of network access\ntechnologies.\
    \ The communication layer supports the implementation of various\nwireless technologies.\
    \ The local processing unit located at the Physical Objects Layer\ndeﬁnes the\
    \ technology to be used and relays data to the communication layer using\nthe\
    \ interface of a network access point.\n3.\nThe Cloud Platform Layer provides\
    \ three services: processing, database queries, and\ndata storage. In the context\
    \ of providing services for smart cities, each of these services\ncan be dynamically\
    \ allocated to satisfy the needs of various applications. Notably,\nonly some\
    \ applications and service types require a cloud platform to operate correctly.\n\
    This layer is offered as part of the infrastructure provided, and its implementation\n\
    is optional.\n4.\nThe Services Layer implements four groups, which are called\
    \ classes of services:\n(I) Surveillance, (II) Transportation and Logistics, (III)\
    \ Infrastructure, and (IV) Tech-\nnology. In each class, different kinds of applications\
    \ can be implemented to deal with\nthe challenges of smart cities.\nThis architecture\
    \ is a generic solution, so the underlying layers are designed to offer\nsupport\
    \ to the applications. Therefore, it can be adapted to the speciﬁc implementa-\n\
    tion of a given service. To this end, the authors adapted their architecture to\
    \ a waste\nmanagement scenario.\nAnother multi-level smart city architecture [164]\
    \ was built on semantic web technolo-\ngies, and its design is mostly used in\
    \ smart city wireless sensor network applications. Data\ncollection, data processing,\
    \ integration and reasoning, and device control and alerts make\nup its four layers.\
    \ Using ontology, a data model, at the network’s edge, Gheisari et al. [165]\n\
    suggested a novel architecture for IoT devices in the smart city that protects\
    \ privacy.\nSaadeh et al. [166] proposed a four-layer architecture for mobile\
    \ object authentication in the\ncontext of IoT smart cities. Their architecture\
    \ is based on the applicability of a proposed hier-\narchical elliptic curve identity-based\
    \ signature authentication protocol. Naranjo et al. [167]\npresented a Fog-based\
    \ smart city network architecture called FogC Architecture Network\n(FOCAN). To\
    \ reduce latency and increase the efﬁciency of services among things with\nvarious\
    \ capabilities, FOCAN is a multi-tier framework in which the applications operating\n\
    on things collaborate to compute, route, and interact with one another through\
    \ the smart\ncity environment. One of FOCAN’s primary beneﬁts is that the IoT\
    \ device can deliver\nservices effectively and with less energy consumption.\n\
    5.2. SDN-IoT Architectures\nSoftware-deﬁned networking (SDN) [168] is an approach\
    \ to enable ﬂexible and efﬁ-\ncient network conﬁguration to enhance a network.\
    \ SDN can provide many advantages\nfor conﬁguring city networks to support different\
    \ applications. For example, SDN can\nimprove the QoS of city networks against\
    \ link failures [169] and meet smart city latency de-\nmands [170]. While some\
    \ efforts are investigating this approach for supporting SCAs, there\nis room\
    \ for developing more advanced management and networking mechanisms in SDN\nfor\
    \ efﬁcient, reliable, and secure network conﬁgurations in smart cities. Jazaeri\
    \ et al. [171]\nconsidered the advantages of integrating edge computing, SDN,\
    \ and IoT technologies and\nreviewed different frameworks and platforms.\nLiu\
    \ et al. [172] proposed an architecture that decouples urban sensing applications\n\
    from the physical infrastructure. In their architecture, centralized controllers\
    \ manage\nphysical devices and offer APIs for data acquisition, transmission,\
    \ and processing services\nto develop urban sensing applications. Bi et al. [173]\
    \ proposed a scalable SDN-enabled\narchitecture that integrates a variety of smart\
    \ city components and provides reliable and\nElectronics 2023, 12, 2490\n36 of\
    \ 63\ntimely scheduling for big data transfer to support smart city services.\
    \ They also studied\nthe time-constrained big data transfer scheduling (TBTS)\
    \ problem under this architecture\nand proposed a heuristic with an intelligent\
    \ scheme that can maximize the throughput and\nschedule the multi-ﬂow transfer\
    \ dynamically.\nIoT systems collect and process data vulnerable to availability,\
    \ integrity, and privacy\nthreats. Nguyen et al. [174] proposed a collaborative\
    \ and intelligent-network-based in-\ntrusion detection system (NIDS) architecture,\
    \ namely, SeArch, for SDN-based cloud IoT\nnetworks. SeArch is a security architecture\
    \ in which an arrangement of three layers of IDS\nnodes, i.e., Edge-IDS, Fog-IDS,\
    \ and Cloud-IDS, is introduced with an effective collaboration\namong nodes.\n\
    Blockchain is an innovative solution for increasing data integrity and privacy\
    \ in smart\ncities [175]. Sharma and Park [176] proposed a novel hybrid network\
    \ architecture for the\nsmart city by exploiting the strength of emerging SDN\
    \ and Blockchain technologies. To\nachieve efﬁciency and address the current limitations,\
    \ their architecture is divided into\ncore and edge networks. By designing a hybrid\
    \ architecture, their architecture inherits\nthe strength of centralized and distributed\
    \ network architectures. “PrivySharing” [177]\nis a Blockchain-based innovative\
    \ framework for privacy-preserving and secure IoT data\nsharing in a smart city\
    \ environment. This framework protects data privacy by segmenting\nthe blockchain\
    \ network into different channels, consisting of a limited number of approved\n\
    businesses and handling a certain category of data, such as health, smart auto,\
    \ smart\nenergy, or ﬁnancial information. Additionally, smart contracts contain\
    \ access control rules\nthat regulate who has access to the users’ data within\
    \ a channel. In addition, private\ndata gathering and encryption are used to further\
    \ isolate and safeguard the data within\na channel.\nIslam et al. [178] designed\
    \ a decentralized and distributed architecture for the IoT\necosystem that addresses\
    \ the existing challenges through the use of the technologies\nBlockchain, SDN,\
    \ and Network Function Virtualization (NFV). This energy-aware architec-\nture\
    \ confronts the problems of scalability, ﬂexibility, complexity, monitoring, managing,\n\
    and collecting IoT data and defends against cyber threats.\n5.3. Architectures\
    \ for Smart Grid\nThe automated and intelligent management of the next-generation\
    \ electric power\nsystems determines their effectiveness and efﬁciency. Smart\
    \ Grid (SG) is the name given to\nthe next generation of electricity systems,\
    \ which are anticipated to offer various beneﬁts\nover the current systems in\
    \ terms of digitization, ﬂexibility, intelligence, resilience, sustain-\nability,\
    \ and customization [179]. Smart transmission infrastructures use new technologies\n\
    to improve power quality. Smart control centers monitor and communicate with electric\n\
    devices remotely in real time, while smart substations self-consciously coordinate\
    \ their local\ndevices. The dispatch of electricity to end-users is implemented\
    \ by using the electrical and\ncommunication infrastructures that connect the\
    \ transmission and customer domains. The\ndistribution domain includes distribution\
    \ feeders and transformers to supply electricity.\nIt interacts with much different\
    \ equipment, such as distributed energy resources (DERs),\nplug-in electric vehicles\
    \ (PEVs), automatic metering infrastructure (AMI), and sensors with\ncommunication\
    \ capability. The distribution domain is responsible for delivering electricity\n\
    to energy consumers, user demands, and energy availability. To provide quality\
    \ electricity,\nthe stability of this domain is monitored and controlled.\nTypical\
    \ applications [44] of the smart grid communications network are automatic\nmeter\
    \ reading, demand response, PEVs, substation automation, and DERs/microgrid.\n\
    DERs are tiny energy production and/or storage devices linked to the distribution\
    \ system.\nDistributed generation (DG), distributed storage (DS), or a combination\
    \ of renewable\nand non-renewable sources are all possible sources for DER. Solar\
    \ panels, wind turbines,\ncombustion turbines, fuel cells, battery storage systems,\
    \ etc., are a few examples of DER.\nAn electric power system with one or more\
    \ DER units and loads is referred to as a microgrid.\nElectronics 2023, 12, 2490\n\
    37 of 63\nThe communication infrastructure in the smart grid supports the capabilities\
    \ of the\nsmart grid and complies with performance standards. This infrastructure\
    \ connects a huge\nnumber of electric devices and manages complex device communications.\
    \ As a result, it is\nbuilt in a hierarchical architecture with interconnected\
    \ individual sub-networks, and each\nsub-network is responsible for separate geographical\
    \ regions. The extremely dispersed\nsmaller area networks that support the power\
    \ systems at various locations are connected by\nWANs, which act as the communication’s\
    \ backbone. When the control centers are located a\ngreat distance from the substations\
    \ or the end-users, the real-time measurements made at\nthe electric devices are\
    \ transported to the control centers through the WANs, and in the\nopposite direction,\
    \ the WANs carry out the instruction communications from the control\ncenters\
    \ to the electric devices.\nThe authors of [43] present a communication architecture\
    \ in an SG. This architecture\nincludes (1) an energy smart house with electric\
    \ appliances connected to the smart grid,\n(2) a residential complex with AMI,\
    \ (3) a residential subdivision installed with solar panels,\n(4) a PEV charging\
    \ station, (5) a power substation, and (6) power transmission lines. In this\n\
    architecture, the Internet and ISPs serve as the backbone in connecting the distributed\
    \ sub-\nnetworks. Demertzis et al. [180] presented and categorized the communication\
    \ network\nstandards that have been established for smart grids and should be\
    \ considered in planning\nand implementing new infrastructures. Such standards\
    \ are IEC 61850 for substation\nautomation. This standard is based on open architecture\
    \ and incorporates sampling\nand timing synchronization speciﬁcations based on\
    \ IEEE 1588 in LANs and WANs [181].\nNotably, IEEE 1588 is the standard for a\
    \ precision clock synchronization protocol for\nnetworked measurement and control\
    \ systems [182].\nDue to the widespread use of renewable energy resources (RERs)\
    \ throughout the\npower grid, it is anticipated that electric power distribution\
    \ networks in smart grids would\nundergo signiﬁcant changes to accommodate the\
    \ nature of non-radial power ﬂow. For the\nmost part, the low-voltage distribution\
    \ networks where RERs (such as solar cells) may be\nattached are not monitored\
    \ by the majority of the present supervisory control and data ac-\nquisition (SCADA)\
    \ systems for power grids. For the goal of active monitoring and control,\nAbdrabou\
    \ [183] presented a multi-hop wireless network with a cellular frequency-reuse\n\
    structure that may supply the communication infrastructure to dense low-voltage\
    \ distribu-\ntion networks. A position-based QoS-aware routing protocol was also\
    \ presented as a useful\nmethod for prioritizing data transfer across the newly\
    \ introduced network architecture.\nHetGrid [184] is a unique overlay network\
    \ design with a speciﬁc QoS routing method\nfor power distribution grid applications.\
    \ It delivers QoS assurances across the network\nwhile taking into account three\
    \ factors: bandwidth, latency, and dependability. The authors\ncreated two components\
    \ to accomplish this:\n•\nA multipath routing mechanism that compensates critical\
    \ applications for their high-\nreliability requirements by using end-to-end physically\
    \ disjoint paths, and\n•\nAltruistic resource allocation with the QoS routing\
    \ mechanism that targets communi-\ncation with QoS guarantees for applications\
    \ with strict QoS requirements.\nThe ﬁndings in [184] show that the HetGrid overlay\
    \ network architecture enables ex-\ntremely effective, trustworthy, and QoS-aware\
    \ communication in heterogeneous networks.\nThe major characteristics that set\
    \ SG apart from the standard electrical power grid are\nthe ability to execute\
    \ two-way communication, demand-side management, and real-time\npricing. The present\
    \ SG systems have interoperability problems because they need to\nbe protocol\
    \ independent. Therefore, global communication network management and\nmonitoring\
    \ approaches have been proposed using SDN [185]. Thanks to SDN, network\nadministrators\
    \ may more efﬁciently manage their networks by separating the control plane\n\
    from the data plane. SDN has advanced in SG due to its reliance on communication\n\
    networks. SDN implementation in SG systems has the potential to increase efﬁciency\n\
    and resilience. SDN can assist the SG in integrating several SG standards and\
    \ protocols\nby virtue of its programmability, protocol independence, and granularity\
    \ capabilities to\ncope with varied communication systems. Rehmani et al. [185]\
    \ presented SDN-based\nElectronics 2023, 12, 2490\n38 of 63\nSGC architectures,\
    \ along with case studies. They discussed routing schemes for SDN-\nbased SGC\
    \ and provided a detailed survey of security and privacy schemes applied to\n\
    SDN-based SGC.\nAlam et al. [186] provided a detailed survey on smart grid communication\
    \ networks in\nterms of communication network requirements, architecture, technologies,\
    \ and applications.\nThey proposed a Cognitive Radio (CR)-based Communication\
    \ Network for Smart Grid.\nCR is a software-deﬁned radio (SDR) platform that can\
    \ quickly reconﬁgure its operating\nparameters, such as modulation/demodulation,\
    \ compression algorithm, and error coding\ntechniques, according to changing circumstances\
    \ and requirements, through cognition. In\nsuch an SDR platform, radio transceivers\
    \ can switch functions and operations on demand\nonly. Molokomme et al. [187]\
    \ reviewed architectures that aim to accomplish the various\nand strict QoS requirements\
    \ in SG communication systems.\nWireless communication networks have been motivated\
    \ to harvest energy from\nambient environments and run energy-efﬁciently for economic\
    \ and ecological beneﬁts\nthrough improvements in the smart power grid and the\
    \ advocacy of “green communica-\ntions”. Hu et al. [188] examined recent developments\
    \ in energy harvesting, redistribution,\ntrade, and planning for future wireless\
    \ networks integrating with smart grids. The authors\nconsidered the optimization\
    \ of various energy-harvesting wireless systems as well as tradi-\ntional models\
    \ of renewable energy-harvesting technologies. Moreover, they discussed how\n\
    to distribute redundant (unused) energy generated by cellular networks, plan for\
    \ energy\nunder dynamic pricing when smart grids are in place, and engage in two-way\
    \ energy\ntrading using smart grids.\nFrom a different viewpoint, including IoT\
    \ devices and providing connectivity, au-\ntomation, and monitoring for such devices\
    \ enables SG systems to sustain multiple network\noperations during the generation,\
    \ distribution, transmission, and expenditure of energy.\nNumerous IoT-aided SG\
    \ systems have been proposed in the literature. The survey [189] on\nIoT-aided\
    \ SG systems considers the systems’ current architectures, uses, and prototypes.\n\
    5.4. Architectures for Smart Buildings\nThere are various building applications\
    \ such as heating, cooling, load control, air\nquality, ventilation, lighting,\
    \ water management, and cooking gas management. A smart\nbuilding incorporates\
    \ the major building systems on a common network and functionality\nto provide\
    \ operational efﬁciency, ﬁre safety, and security. A smart building architecture\n\
    (SBA) manages several real-time domains, including automated temperature regulation,\n\
    air cleaning, HVAC systems, and humidity control (i.e., indoor environment regulation\n\
    and monitoring); smart lighting and controlling home appliances (energy management);\
    \ a\nsmart ﬁre detection system; and other building operations. A typical smart\
    \ building [190]\nhas security cameras, lighting sensors, an indoor air quality\
    \ system, a ﬁre alarm system, a\nwater management system, and an energy management\
    \ system. Moreover, it can detect\nintrusion and supports HVAC services.\nDiverse\
    \ SBAs include complex operational systems, sensing, and communication\ntechnologies.\
    \ Such architectures have converged into an IP-based architecture. This con-\n\
    vergence is occurring rapidly with the increased usage of IP-based smart devices\
    \ driven\nthrough IoT concerning conventional building management and smart buildings.\
    \ Tradi-\ntionally, numerous building systems utilized varied forms of networking\
    \ protocols and\ncabling systems. This variety makes the whole system more complex\
    \ and highly infeasible\nfrom both a deployment and a system administration standpoint\
    \ [191]. SBAs entail making\nplans for and assisting with the inclusion of operational\
    \ technologies that improve the\napplication’s, service’s, or provision’s operational\
    \ steps while also boosting the well-being\nof its users. Researchers, policymakers,\
    \ and implementers should pay attention to several\ncrucial issues, such as reliable\
    \ communication/connection procedures, power-efﬁcient\nmeasures, competent security\
    \ measures, efﬁcient sensors and actuators, and data analyt-\nics procedures.\
    \ Amalgamating new systems and technologies with conventional (base)\ntechnologies\
    \ to accomplish the revelation of SBAs, includes, but is not limited to, WSN\n\
    Electronics 2023, 12, 2490\n39 of 63\ndeployment; advanced power-aware trafﬁc\
    \ engineering policies; cloud, edge, and fog com-\nputing paradigms; big data\
    \ engineering and analytics; and human–computer interaction\nprocedures [192].\
    \ The rapid development of ICT technologies has enhanced the connect-\nedness\
    \ of intelligent sensing, actuators, and communication devices to real-time physical\n\
    entities. Recently, smart sensing mechanisms, actuators, and data harvesting technology\n\
    have boosted the area of SBAs proposals. However, choosing the best ICT technologies\
    \ for\na particular smart building domain poses signiﬁcant difﬁculties, including\
    \ heterogeneity\nof IoT devices and applications, workable networking protocols\
    \ and architectures, power\nefﬁciency, and QoS/QoE provisioning [190,193]. One\
    \ solution is the SDN paradigm, which\nmanages the network more efﬁciently than\
    \ a customary one. SDN also assists network\nservices, including storage, routing,\
    \ dynamic bandwidth management, and QoS. Hence,\nthese simpliﬁcations offer a\
    \ creative environment through the implementation of proper\nsoftware tools for\
    \ smart buildings. Network architecture and its implementation for in-\ntelligent\
    \ infrastructure is based on IoT relationships (between IoT in home automation\n\
    and applications) and can be established using smart home Cloud Computing based\
    \ on\nSDN. Recently, Younus et al. [190] proposed an SDN architecture that improves\
    \ critical SB\nparameters such as bandwidth efﬁciency, energy efﬁciency, latency,\
    \ security, and reliability.\nSilva et al. [194] presented a Web of Things (WoT)\
    \ SBA that is integrated with the repre-\nsentational state transfer (RESTful)\
    \ application programming interface (API). The RESTful\nAPI employs HTTP requests\
    \ (e.g., GET, PUT, POST, and DELETE) to access and use WoT\ndata. Regarding network\
    \ performance and smart building power management, the authors\nshowed how their\
    \ recommendation for smart city architecture improved performance.\nSmart sensing\
    \ devices and actuators permit collecting, monitoring, controlling, or\nmodifying\
    \ vital building parameters so that users receive the best QoS/QoE possible. These\n\
    functionalities depend on sensor integration competence and their properties.\
    \ These sys-\ntems comprise signal conditioning circuits, implanted algorithms,\
    \ power, and transceiver\nmodules [195]. Researchers developed such system-based\
    \ SBAs for assessing and regulat-\ning air quality, smart lighting systems, ﬁre\
    \ detection systems, power management, and\nother basic building operations.\n\
    An indoor-air-quality-based SBA considers sensing and actuator-based systems for\n\
    monitoring and regulating air quality parameters. An indoor environmental observing\n\
    system was initially suggested in [196] that observes polluting gases, temperature,\
    \ and\nrelative humidity. Other kinds of such systems have been proposed in [197,198].\
    \ Con-\nsidering smart indoor lighting systems, numerous solutions have been proposed\
    \ in the\nliterature. In SBAs, light sensors manage and track the lighting system\
    \ to satisfy the users’\nneeds. The authors of [199] shed light on power consumption\
    \ reduction via energy-efﬁcient\nsmart lighting systems. Today’s smart building\
    \ employs low-power usage LED-based\nlight sources that last longer than Compact\
    \ Fluorescent Lamps (CFLs) [200]. In reality, the\ndevelopment of control technologies,\
    \ heterogeneous networks, and embedded systems\nhas made it promising to create\
    \ smart innovative lighting systems that can effectively\naddress the problem\
    \ of energy conservation. Researchers have recently begun testing by\nintegrating\
    \ different power-saving techniques in a single illumination system for improved\n\
    energy efﬁciency while enhancing lighting performance without sacriﬁcing user\
    \ satisfac-\ntion. According to the authors of [201], using several cheap detectors,\
    \ as opposed to a\nsingle expensive sensor, would result in improved performance\
    \ and higher power savings.\nConsidering the same motivation, various authors\
    \ [202–204] have suggested similar types\nof smart lighting systems for several\
    \ room types, such as classrooms and ofﬁces. In [205],\nthe authors provide a\
    \ deep and profound study concerning smart lighting systems focusing\non power\
    \ savings procedures and connectivity alternatives as well as the integration\
    \ of\nvisible light communication technology [206].\nRecently, researchers focused\
    \ on two main goals, namely, occupants’ work perfor-\nmance and thermal comfort,\
    \ to propose effective SBAs. Hence, many Occupant-Oriented\nTechnologies (OOT)\
    \ have been put forth by academics who want to maximize thermal\ncomfort while\
    \ conserving energy. OOT-based systems offer a practical way to lessen the\nElectronics\
    \ 2023, 12, 2490\n40 of 63\ndrawbacks of the automatic control used today. In\
    \ practice, thermal comfort analysis is\nbased on parallel objective and subjective\
    \ evaluation. The objective evaluation comprises\nmonitoring, assessing, and recording\
    \ the status of environmental parameters through dedi-\ncated sensors and instruments\
    \ following standardized guidelines. Subjective evaluation\ninvolves monitoring,\
    \ assessing, and recording thermal preference, thermal sensation, and\nthermal\
    \ environment acceptance. Further thermal comfort sensor results as the cumulative\n\
    method to both above-mentioned analysis can be found in [193].\nGreen building\
    \ refers to SBAs with an ambient intelligence system that adjusts to\npredetermined\
    \ circumstances in real-world situations. In this situation, the system makes\n\
    full use of embedded sensors in an environment that can gather data and subsequently\n\
    allow the system to act in accordance with that data. The ambient intelligence\
    \ concept aims\nto conserve natural resources with limited and efﬁcient use of\
    \ them to offer comfort to the\noccupants. Through unconventional energy sources,\
    \ it also meets some of the conventional\nenergy requirements [207]. Many aspects\
    \ of SBAs, such as security, monitoring, and\npower efﬁciency, are the subject\
    \ of extensive study. However, one of the most important\nfunctions of an SB system\
    \ is to control the interior climate, which is typically done by\nHVAC systems\
    \ [208]. The performance of HVAC systems in the instance of commercial\nbuildings\
    \ for frequency regulations has been demonstrated by the authors of [209] for\
    \ this\ncontext. Their demonstrated numerical experiments suggest that 15% of\
    \ rated fan energy\ncan be employed for regulation use while having a minor effect\
    \ on a building’s indoor\ntemperature. The method of computational control for\
    \ passive and active sources was\nused in another scheme [210]. The authors emphasized\
    \ the problem that the ambient and\nactive sources of lighting, heating, ventilation,\
    \ cooling, and shading are not synchronized\nin buildings. Such a computational\
    \ control scheme is also suitable for reducing daily power\nusage. Similarly,\
    \ numerous methods [211–213] considering HVAC systems have been\nproposed with\
    \ respect to frequency regulation, predictive control, and smart controller.\n\
    An IoT-assisted HVAC smart system tracks environmental situations. It also notiﬁes\n\
    when measurements exceed thresholds and provides data on energy usage and consump-\n\
    tion. In addition, it can autonomously turn equipment intermittently at programmed\n\
    times. As individuals spend more time indoors (at home, work, or in other enclosed\
    \ spaces)\nthan outdoors, the air quality inside buildings should be improved\
    \ along with that of the\nexternal surroundings. This is the task of indoor Air\
    \ Quality Monitoring Systems (AQMS).\nThe basic parts of an AQMS (Figure 5) are\
    \ a sensor array, a processing/display unit, a signal\nconditioning circuit, a\
    \ small amount of external memory, and a communication module\nthat is typically\
    \ wireless. A sensor array is a group of specialized micro-sensors that can\n\
    detect certain airborne concentrations of gases such as NOX, SOX, CO2, CO, and\
    \ O3, as\nwell as some essential environmental parameters such as humidity and\
    \ temperature. These\nsensors are connected to a GUI unit that shows the values\
    \ of the real-time indoor air quality\nparameters and an external memory used\
    \ to store real-time data [214]. When deploying\nsuch systems, various communication\
    \ (wireless) modules, including WiFi, ZigBee, and\nLoRAWAN technologies, are considered.\n\
    Electronics 2023, 12, 2490\n41 of 63\nElectronics 2023, 12, x FOR PEER REVIEW\
    \ \n42 of 65 \n \n \nFigure 5. Air Quality Monitoring Sensor System. Adapted from\
    \ [215,216]. \nFigure 6 shows an SBA architecture [217]. The system of this architecture\
    \ collects \nvital information about the various air quality parameters, including\
    \ CO2, CO, particles \n(Particulate Matter PM10 and PM2.5), and some other crucial\
    \ parameters such as hu-\nmidity and temperature. By using gas sensor boards and\
    \ wasp motes, the authors created \na method for collecting and monitoring the\
    \ indoor atmosphere. For monitoring CO2 and \nCO parameters, they also used TGS\
    \ 4161 and TGS 2442 gas sensors. These sensors usually \nwork using the resistive\
    \ heating principle. The TGS 2442 sensor has excellent sensitivity \nto fluctuations\
    \ in CO gas concentration. This sensor’s internal resistance, or “IR”, is in-\n\
    versely proportionate to the amount of CO present. As the CO content rises, the\
    \ IR falls. \nWhile TGS 4161 also offers low power consumption and suggests better\
    \ performance in \ndetecting changes in CO2 gas concentration, the TGS4161 is\
    \ ideally suited for indoor air \ncontrol applications as it can measure 350–10,000\
    \ ppm carbon dioxide. The authors used \nthe DustTrak DRX, a specialized aerosol\
    \ laser photometer that simultaneously measures \nmass and size fraction, for\
    \ PM1 and PM2.5 monitoring purposes. To define and create an \ninterface to the\
    \ deployed sensor for wireless transmission of gathered aerosol data, this \n\
    photometer is connected to a base station device via LAN. The authors also set\
    \ up ZB \n(ENs) at each location that was taken into consideration, which sent\
    \ updates on the air \nquality and aerosols at regular periods to BS (ZBC) that\
    \ had already been set up. \nThis system assesses the indoor air quality to assess\
    \ the current state of the indoor \nenvironment while simultaneously providing\
    \ real-time inputs for HVAC system man-\nagement. The authors also designed a\
    \ toolkit that analyzes real-time air quality data and \ndisplays them through\
    \ meaningful representations to service the SBAs. Likewise, Lozano et \nal. [216]\
    \ proposed another IAQMS technique that considers a star topological architecture\
    \ \n[217]. The ZB (ENs) in this technique is based on the XBee and XBee pro-version\
    \ modules. \nNevertheless, the suggested scheme [216] considers a single pollutant\
    \ only, i.e., suggest-\nFigure 5. Air Quality Monitoring Sensor System. Adapted\
    \ from [215,216].\nFigure 5 shows a typical sensor system for an indoor environment\
    \ for air quality monitoring.\nFigure 6 shows an SBA architecture [217]. The system\
    \ of this architecture collects\nvital information about the various air quality\
    \ parameters, including CO2, CO, particles\n(Particulate Matter PM10 and PM2.5),\
    \ and some other crucial parameters such as humidity\nand temperature. By using\
    \ gas sensor boards and wasp motes, the authors created a\nmethod for collecting\
    \ and monitoring the indoor atmosphere. For monitoring CO2 and\nCO parameters,\
    \ they also used TGS 4161 and TGS 2442 gas sensors. These sensors usually\nwork\
    \ using the resistive heating principle. The TGS 2442 sensor has excellent sensitivity\n\
    to ﬂuctuations in CO gas concentration. This sensor’s internal resistance, or\
    \ “IR”, is\ninversely proportionate to the amount of CO present. As the CO content\
    \ rises, the IR falls.\nWhile TGS 4161 also offers low power consumption and suggests\
    \ better performance in\ndetecting changes in CO2 gas concentration, the TGS4161\
    \ is ideally suited for indoor air\ncontrol applications as it can measure 350–10,000\
    \ ppm carbon dioxide. The authors used\nthe DustTrak DRX, a specialized aerosol\
    \ laser photometer that simultaneously measures\nmass and size fraction, for PM1\
    \ and PM2.5 monitoring purposes. To deﬁne and create an\ninterface to the deployed\
    \ sensor for wireless transmission of gathered aerosol data, this\nphotometer\
    \ is connected to a base station device via LAN. The authors also set up ZB (ENs)\n\
    at each location that was taken into consideration, which sent updates on the\
    \ air quality\nand aerosols at regular periods to BS (ZBC) that had already been\
    \ set up.\nThis system assesses the indoor air quality to assess the current state\
    \ of the indoor en-\nvironment while simultaneously providing real-time inputs\
    \ for HVAC system management.\nThe authors also designed a toolkit that analyzes\
    \ real-time air quality data and displays\nthem through meaningful representations\
    \ to service the SBAs. Likewise, Lozano et al. [216]\nproposed another IAQMS technique\
    \ that considers a star topological architecture [217].\nThe ZB (ENs) in this\
    \ technique is based on the XBee and XBee pro-version modules. Never-\ntheless,\
    \ the suggested scheme [216] considers a single pollutant only, i.e., suggesting\
    \ using\nElectronics 2023, 12, 2490\n42 of 63\na GAC sensor. Conversely, the authors\
    \ of [215] further claimed that they considered seven\npollutants in their proposed\
    \ implementation.\nElectronics 2023, 12, x FOR PEER REVIEW \n43 of 65 \n \n \n\
    ing using a GAC sensor. Conversely, the authors of [215] further claimed that\
    \ they con-\nsidered seven pollutants in their proposed implementation. \n \n\
    Figure 6. IAQMS architecture. Adapted from [217,218]. \nIoE for Smart Building:\
    \ To achieve optimal functionality and energy-efficient per-\nformance, Kim et\
    \ al. [218] offered an overview of the design and implementation of en-\nergy-related\
    \ SB technologies, including energy management systems, renewable energy \napplications,\
    \ and current advanced smart technologies. Undoubtedly, the electricity sec-\n\
    tor of smart cities is impacted by the Internet of Energy (IoE), which aims to\
    \ increase en-\nergy efficiency, prevent energy waste, and enhance environmental\
    \ conditions by inte-\ngrating IoT technologies into distributed energy systems.\
    \ Two examples of IoE technol-\nogy are intelligent sensor use and the incorporation\
    \ of renewable energy sources. As a \nresult, the IoE is becoming a tool for legal\
    \ science to support the goals of a smart city. \nMetallidou et al. [219] discussed\
    \ the factors that prompted the European Union to create \nregulations to make\
    \ it easier to transition current towns into smart cities, starting with \nexisting\
    \ structures. To achieve energy efficiency, the authors suggested a smart building\
    \ \ntemplate that uses IoT technology to manage the performance of all technical\
    \ systems. In \naddition, they suggested an automated remote-control technique\
    \ supported by a cloud \ninterface to enhance the certification of existing buildings\
    \ for energy performance. This \ntechnology reduces time-consuming processes and\
    \ stores the energy performance of each \nbuilding on a cloud platform to make\
    \ decisions and put measures in place. A review of \ncurrent tactics in the field\
    \ of active building energy management systems (BEMS) was \noffered by Mariano-Hernández\
    \ et al. [220]. The authors reviewed articles on several \nBEMS management techniques\
    \ for residential and non-residential buildings, including \nModel Predictive\
    \ Control (MPC), Demand Side Management (DSM), Optimization, and \nFault Detection\
    \ and Diagnostics (FDD). MPC predicts building response to control re-\nquests,\
    \ while DSM is an agreement of actions to improve the energy system on the user\
    \ \nFigure 6. IAQMS architecture. Adapted from [217,218].\nIoE for Smart Building:\
    \ To achieve optimal functionality and energy-efﬁcient per-\nformance, Kim et\
    \ al. [218] offered an overview of the design and implementation of\nenergy-related\
    \ SB technologies, including energy management systems, renewable en-\nergy applications,\
    \ and current advanced smart technologies. Undoubtedly, the electricity\nsector\
    \ of smart cities is impacted by the Internet of Energy (IoE), which aims to increase\n\
    energy efﬁciency, prevent energy waste, and enhance environmental conditions by\
    \ inte-\ngrating IoT technologies into distributed energy systems. Two examples\
    \ of IoE technology\nare intelligent sensor use and the incorporation of renewable\
    \ energy sources. As a re-\nsult, the IoE is becoming a tool for legal science\
    \ to support the goals of a smart city.\nMetallidou et al. [219] discussed the\
    \ factors that prompted the European Union to create\nregulations to make it easier\
    \ to transition current towns into smart cities, starting with\nexisting structures.\
    \ To achieve energy efﬁciency, the authors suggested a smart building\ntemplate\
    \ that uses IoT technology to manage the performance of all technical systems.\
    \ In\naddition, they suggested an automated remote-control technique supported\
    \ by a cloud\ninterface to enhance the certiﬁcation of existing buildings for\
    \ energy performance. This\ntechnology reduces time-consuming processes and stores\
    \ the energy performance of each\nbuilding on a cloud platform to make decisions\
    \ and put measures in place. A review of\ncurrent tactics in the ﬁeld of active\
    \ building energy management systems (BEMS) was\noffered by Mariano-Hernández\
    \ et al. [220]. The authors reviewed articles on several BEMS\nmanagement techniques\
    \ for residential and non-residential buildings, including Model\nPredictive Control\
    \ (MPC), Demand Side Management (DSM), Optimization, and Fault\nDetection and\
    \ Diagnostics (FDD). MPC predicts building response to control requests,\nwhile\
    \ DSM is an agreement of actions to improve the energy system on the user side.\
    \ FDD\nis an automatic procedure of detecting and separating ﬂaws in BEMS to protect\
    \ a system\nfrom additional harm. Moudgil et al. [221] examined cutting-edge academic\
    \ and industrial\nElectronics 2023, 12, 2490\n43 of 63\nresearch to discover signiﬁcant\
    \ technological solutions that improve the integration of IoT\nin building infrastructure\
    \ (BI). Their review also identiﬁes key technical and non-technical\nproblems\
    \ that must be resolved through extensive research for BI to fully incorporate\
    \ IoT.\nThe authors contend that IoT in BI is still not operationally capable.\
    \ IoT and BI stakeholders\nmust make a concerted effort to give modern BI access\
    \ to a generic IoT framework with\ncognitive intelligence and context-aware computing\
    \ capabilities.\n5.5. Smart Water and Pipeline Network Monitoring\nRetroﬁtting\
    \ the traditional water distribution system with smart devices has some\nbeneﬁts,\
    \ including lower utility costs, lower consumer bills, and less water loss [222,223].\n\
    For example, smart water sensors can keep an eye on the pressure online and alert\
    \ utilities\nto pressure changes or large pressure losses in the water network,\
    \ allowing them to remotely\nadjust the pressure to save energy consumption [224].\
    \ Automation can be used for both\noperational procedures and components that\
    \ provide functionality. For instance, when a\nwater problem occurs during operation\
    \ or with the element itself, the smart components\ninform the system center and\
    \ then take action to avert a crash. The water utility can also\ndetermine a sensor’s\
    \ requirement for maintenance or replacement thanks to the automatic\nself-veriﬁcation\
    \ mechanism [225].\nIn [226], the authors suggest an IoT-based smart water grid\
    \ architecture that includes\ntechnical systems, functions, and a hierarchy framework.\
    \ Moreover, this smart water\nsystem (SWS) also comprises smart sensing mechanisms,\
    \ simulation procedures, diag-\nnostic techniques, disposal, warning, and control\
    \ mechanisms. Although an SWS incor-\nporates ofﬂine performance, real-time performance\
    \ is deﬁned by online procedures such\nas online data monitoring, online data\
    \ assimilation, online modeling, online charting,\nand online results output.\
    \ An SWS must have real-time functionality to implement the\nnecessary smart features\
    \ [227]. Researchers put a lot of effort [228] into developing wa-\nter systems\
    \ that operate intelligently. Real-time modeling, real-time sampling, real-time\n\
    controlling, etc., which seek to reduce the lag between system input and system\
    \ output,\nshould be added to the smart performance of SWS. It was discovered\
    \ that using SCADA\nwould considerably increase the data transfer efﬁciency [229].\
    \ A smart water architec-\nture [230] often includes ﬁve layers: (1) the physical\
    \ layer; (2) the sensing and control layer;\n(3) the communication layer; (4)\
    \ the data management layer; and (5) the data fusion layer.\nWithin the framework\
    \ of the GST4Water project, the authors of [230] presented a system\nthat allows\
    \ for receiving consumption data sent by a generic smart meter installed in a\n\
    user’s house and transferring them to a cloud platform. The consumption data are\
    \ saved\nand processed to characterize leakage at the district meter area and\
    \ the individual user level.\nMeanwhile, the processed data are returned to the\
    \ Water Utility and can be used for billing.\nOn the other hand, they provide\
    \ regular feedback to the user, thus gaining full awareness\nof their consumption\
    \ behavior. Panagiotakopoulos et al. [231] presented an IoT framework\nbased on\
    \ FIWARE that aims to realize a highly ﬂexible standards-based open-source soft-\n\
    ware solution for developing SWSs. They designed an architecture consisting of\
    \ various\nFIWARE software components and two dashboard applications. Amaxilatis\
    \ et al. [232]\nconsidered numerous intelligent infrastructure solutions regarding\
    \ conventional water\nmetering systems, which effectively facilitate uninterrupted\
    \ bi-directional (whenever re-\nquired) data exchange between water ﬂow devices,\
    \ metering equipment, and end-users.\nThe authors’ ultimate objective is to design,\
    \ implement, and deploy more sophisticated\ninfrastructure offering improved performance\
    \ in bigger smart city infrastructure. To limit\nthe amount of data that needs\
    \ to be shared between the various system layers, their ap-\nproach makes use\
    \ of the FogC paradigm to develop the infrastructure for the smart water\ngrid\
    \ model.\nThe Information and Communications Technology (ICT) Solutions for the\
    \ Efﬁcient\nWater Resources Management project was funded by the European Commission\
    \ under the\nauspices of the Seventh Framework Program (FP7). The goal of the\
    \ Smart Water project is\nto examine the role of ICT in monitoring and effectively\
    \ managing urban water systems,\nElectronics 2023, 12, 2490\n44 of 63\nwith a\
    \ focus on the deployment of sensors, communication technologies, and related\n\
    decision support systems in utility providers’ water networks to address issues\
    \ such as\nleakage management, demand management, asset management, and so forth.\
    \ Kulkarni\nand Farnham [233] focused on the issues surrounding wireless connectivity,\
    \ proposed\na framework for assessing potential solutions based on the total cost\
    \ of ownership, and\nhighlighted lessons learned from two European utilities’\
    \ Smart Water case studies.\nPipelines are used to transport water, gases, and\
    \ oil. Since they are frequently under-\nground, the humid atmosphere easily erodes\
    \ them, which may result in leaks. In addition,\nwater in the pipelines may get\
    \ contaminated by infectious agents or substances that are\nmistakenly or purposely\
    \ introduced into the system. As a result, maintaining pipeline\nnetworks is crucial\
    \ for maintaining public health and protecting the environment. The sen-\nsor\
    \ node deployment profoundly impacts the sensing performance indicators for pipeline\n\
    network monitoring, including coverage area, coverage population, and detection\
    \ time.\nThe sensor nodes should typically be positioned near the pipeline network’s\
    \ junctions [234].\nGiven the design of the pipeline network, the optimal sensor\
    \ node deployment challenges\nare therefore formulated as integer optimization\
    \ problems, where the integer variables\nrepresent the maximum amount of sensor\
    \ nodes that must be placed at each junction. The\ndeployment difﬁculties for\
    \ pipeline network monitoring are typically challenging to solve\nbecause of the\
    \ integer decision variables.\nPipeline network ﬂows are not predictable. As a\
    \ result, depending on the ﬂow pattern,\nthe sensing performance of a deployed\
    \ sensor node may vary. As a result, the ﬂow pattern\nis taken into account in\
    \ [235], which formulates a mix-integer optimization problem to\ndecide how to\
    \ deploy sensor nodes to reduce the projected population at risk of malicious\n\
    contamination. The authors solved the ensuing mix-integer optimization using a\
    \ branch\nand bound technique. Even though a strategy such as this can identify\
    \ the ideal answer,\nthe time complexity is typically signiﬁcant. This means that\
    \ large pipeline networks cannot\nbe used with the method. Similarly, the study\
    \ in [236] considers the various demand\npatterns of water ﬂows through pipes.\
    \ The authors used a genetic-based method to ﬁnd the\nbest deployment locations\
    \ to increase coverage under various monitoring station demand\npatterns. The\
    \ global optimum of these heuristic algorithms could take a while to reach.\n\
    The performance of the algorithms may also be impacted by their parameter choices.\n\
    Consequently, we do not advise using it for massive pipeline networks.\nSingapore’s\
    \ WaterWise@SG program aims to identify pipeline leaks and anticipate\nburst incidents\
    \ [237,238]. PipeNet has also been put to the test in Boston to ﬁnd pipeline\n\
    leaks, where three tiers of nodes are employed to quantify pH levels and pressure.\
    \ To\nreduce water waste, a system named IWCMSE [239] has been designed to track\
    \ water\nconsumption for businesses. A Steamﬂood and Waterﬂood Tracking System\
    \ [240] has been\ncreated to ﬁnd irregularities in pipeline systems, such as leaks\
    \ and bottlenecks. With the\naid of all these technologies, the investigators\
    \ had the opportunity to evaluate the efﬁciency\nof the monitoring algorithms.\
    \ However, these technologies rely on ﬁxed sensors, and we\nstill need to put\
    \ innovative testbed models and systems built around crowd sensing and\nmobile\
    \ WSN into place.\n5.6. Architectures for Smart Transportation\nThe Internet-of-Vehicles\
    \ (IoV, also known as V2X) aims to reduce trafﬁc congestion\nand accidents. It\
    \ also enables information exchange involving the vehicle and all entities\nthat\
    \ may have an impact on it. Vehicle networking and vehicle intelligence are the\
    \ two\ntechnologies that underpin IoV implementation. The three components that\
    \ compose\nvehicle networking are the onboard information service, VANET, and\
    \ mobile network.\nVANET stands for vehicle-to-vehicle short-range communication.\
    \ Providing remote loca-\ntion, remote diagnostics, navigation, and other information\
    \ services is referred to as an\nonboard information service. Every car can be\
    \ utilized as a potent mobile terminal thanks\nto mobile networks. Vehicle intelligence\
    \ is the use of cutting-edge technologies, including\nartiﬁcial intelligence (AI),\
    \ big data analytics, deep learning (DL), and cognitive computing\nElectronics\
    \ 2023, 12, 2490\n45 of 63\n(CogC), to facilitate information sharing among people\
    \ and vehicles, as well as between\nvehicles and the environment, infrastructure,\
    \ or other vehicles.\nVehicular networks consist of data-gathering sensors and\
    \ inter-vehicle communica-\ntion systems. Such networks require an open and ﬂexible\
    \ layered architecture to handle\ncharacteristics such as interoperability, scalability,\
    \ dependability, and modularity. Recently,\nthe research community proposed efﬁcient\
    \ vehicle network architectures. For example,\nthe Universal IoV (UIoV) architecture\
    \ [241] includes seven layers. Offering services and\nchoosing messaging protocols\
    \ are tasks that fall within the application layer. Data prepro-\ncessing, big\
    \ data processing, and intelligent transmission are all tasks that the multimedia\n\
    and big data layer is in charge of. For IoV systems, the cloud service layer’s\
    \ ClCom and\ncloud virtualization technologies offer hardware computing platforms,\
    \ infrastructure, and\nsoftware services. In the UIoV architecture, the communication\
    \ layer and the intra–inter\ndevices layer are merged to accomplish the connectivity\
    \ of many heterogeneous objects\nand networks. Notably, there is no intra–inter\
    \ devices layer in classical architecture. The\nUIoV system’s physical objects\
    \ layer gathers and transmits all the data to the intra–inter\ndevices layer for\
    \ additional processing. In the IoV, both vehicles and non-vehicle items are\n\
    identiﬁed using the Identiﬁcation Layer.\nLiu et al. [242] suggested another IoV\
    \ network architecture to increase the ﬂexibility of\napplication management while\
    \ enhancing the scalability and dependability of information\nservices. This architecture\
    \ has four layers in total, the data layer of which has a variety\nof nodes with\
    \ various wireless communication interfaces. Because the topology of IoV\nis frequently\
    \ changed, an immense quantity of data are frequently produced and trans-\nmitted\
    \ at the data layer. To safeguard the accurate semantics of the underlying resources,\n\
    the virtualization layer splits a few nodes into fog nodes and the network, computation,\n\
    communication, and storage resources in IoV. To execute applications such as road\
    \ safety\nmanagement and data sensing, the control layer’s SDN controller is responsible\
    \ for schedul-\ning the abstraction resources of the virtualization layer and\
    \ interacting with the application\nlayer. A difﬁcult topic in network architecture\
    \ design is dealing with diverse networks.\nInteroperability, scalability, dependability,\
    \ and adaptability are some of its network features.\nThe design seeks to increase\
    \ layer separation and network architecture’s total number of\nlayers. In addition\
    \ to being a service-oriented design, the IoV architecture should facilitate\n\
    the connectivity of cars with heterogeneous networks and other communication devices.\n\
    By introducing the CogC paradigm into autonomous driving systems, the learning\
    \ ability\nof autonomous vehicles can be effectively improved. Utilizing both\
    \ physical and network\ndata space, the Cognitive Internet of Vehicles (CIoV)\
    \ paradigm [243] improves network\nsecurity and transportation safety. CIoV enables\
    \ IoV to bear more accurate perceptive\nability through cognition in the intra-vehicle\
    \ network (driver, passengers, smart devices,\netc.), inter-vehicle network (adjacent\
    \ intelligent vehicles), and beyond-vehicle network\n(road environment, cellular\
    \ network, edge nodes, remote cloud, etc.). The CIoV architecture\nincludes a\
    \ cognitive data engine that can conduct cognition of user tasks by the use of\n\
    data collected, e.g., driving behavior model analysis, emotion analysis, and road\
    \ condition\ninvestigation. Five layers are present in the network architecture\
    \ of CIoV. The gathering\nand preprocessing of big data from several sources are\
    \ done by the sensing layer. As\nopposed to the previous communication layer (of\
    \ other architectures), the architecture’s\ncommunication layer uses a cloud/edge\
    \ hybrid structure to accommodate various applica-\ntion schedules. The data cognition\
    \ engine at the cognition layer processes and interprets\nheterogeneous data streams\
    \ (machine learning (ML), DL, data mining, etc.) using a variety\nof cognitive\
    \ analysis approaches. The control layer’s resource awareness engine is in\ncharge\
    \ of allocating and scheduling network resources with the aid of technologies\
    \ such\nas NFV, SDN, network slicing, and self-organized networking (SON). There\
    \ are primar-\nily two categories in the application layer (i.e., usual application\
    \ services and intelligent\ntransportation applications).\nEfﬁcient message authentication\
    \ and integrity are required to guarantee vehicle pri-\nvacy and safeguard vehicular\
    \ communications. To protect V2V and V2I communications\nElectronics 2023, 12,\
    \ 2490\n46 of 63\nin the context of the VANET against a broad range of cyber threats,\
    \ Karim [244] provided\na cryptography-based routing solution. This solution includes\
    \ a data encryption and de-\ncryption mechanism based on attributes and identity\
    \ that has the lowest computational\noverhead while keeping the optimum level\
    \ of security. Contreras-Castillo et al. [245]\nsuggested a seven-layer network\
    \ architecture. The user interface layer, which controls infor-\nmation exchange\
    \ between the user and the vehicle, is the top layer. Utilizing roadside units\n\
    (RSUs) and onboard sensors, the data collecting layer gathers data. The pre-processing\n\
    and ﬁltering layer eliminates the unnecessary information from the gathered data\
    \ before\nsending the remaining information to the communication layer for transmission.\
    \ Making\nchoices and managing network service providers are the responsibilities\
    \ of control and\nmanagement. Large volumes of data must be processed by the processing\
    \ layer to create\nthe pertinent data needed for various applications. To stop\
    \ assaults, the security layer\ndirectly manages each of the layers above. A unique\
    \ network architecture with enhanced\nthroughput, reduced latency, higher security,\
    \ and widespread connectivity was recently\nproposed by Ji et al. [246]. This\
    \ architecture consists of four layers:\n1.\nSecurity authentication layer: The\
    \ RSUs on the road may monitor trafﬁc environment\ndata in real-time after setting\
    \ several sensors, surveillance footage, and radar. This\nlayer determines the\
    \ legality of the car and RSU that are requesting to join the network.\nPerhaps\
    \ an illegal vehicle or an RSU that has been installed unlawfully will attempt\n\
    to steal or alter the information of a real vehicle.\n2.\nData acquisition layer:\
    \ This layer collects and categorizes many types of data from\nvarious networks.\
    \ To ensure that the data can be sent to the edge layer securely, it\ndigitizes\
    \ the data.\n3.\nEdge layer: Edge devices produce several data streams. As a result,\
    \ processing and\nanalyzing data in one go using ClCom will result in signiﬁcant\
    \ delays. As a result, we\nmust process data more closely related to the data\
    \ source. The edge node, a physical\ndevice situated closest to the data source,\
    \ is used by the edge layer to carry out basic\nprocessing and analysis on the\
    \ acquired local data. It releases data analysis ﬁndings\nfor nearby trafﬁc incidents\
    \ and current road conditions in real-time, then creates a\nlocal decision-making\
    \ plan, carrying out various ClCom jobs and boosting the cloud\ndata center’s\
    \ computing power.\n4.\nCloud Platform Layer: The cloud data center analyses the\
    \ information it has collected\nabout global trafﬁc in this tier, develops a plan,\
    \ and rationally distributes trafﬁc\nresources. This layer, having the ability\
    \ to implement connection management, data\nmanagement, aided autonomous driving,\
    \ intelligent navigation, path planning, and\ninformation security, is the “smart\
    \ brain” of the IoV.\nA blockchain-based vehicle network architecture (Block-VN)\
    \ for the smart city was\npresented in [247]. Building innovative distributed\
    \ transport management systems is made\npossible by the robust and secure Block-VN\
    \ architecture. The authors considered how the\nnetwork of vehicles evolves with\
    \ paradigms focused on networking and vehicular informa-\ntion. To handle real-time\
    \ transportation data, Jan et al. [248] created a model for assessing\ntransportation\
    \ data using Spark and Hadoop. This model/system is separated into four\nlayers:\
    \ data collection and acquisition, network, data processing, and application.\
    \ Each\nlayer is built to process and manage data in a structured manner. On the\
    \ data processing\nlayer, Hadoop and Spark are used to test the data. By utilizing\
    \ the suggested event and\ndecision mechanism based on Named Data Networking [249],\
    \ the data are made available\nto a smart community member. The suggested approach\
    \ was examined using transporta-\ntion datasets from some reliable sources. The\
    \ outcomes demonstrate data processing and\nreal-time distribution to citizens\
    \ in the shortest amount of time. Spark with the Hadoop\nenvironment produces\
    \ ﬁndings that are quite accurate. From another viewpoint, Social\nIoV (SIoV)\
    \ are a breed of socially aware ephemeral networks [250], where vehicular nodes\n\
    share/exchange information with different entities and are thus forth comparable\
    \ with\ntraditional social networks. Kerrache et al. [251] proposed a trust-aware\
    \ communication\nElectronics 2023, 12, 2490\n47 of 63\narchitecture for social\
    \ IoV (TACASHI), which offers a trust-aware social in-vehicle and\ninter-vehicle\
    \ communication architecture for SIoVs.\n5.7. Architectures for Smart Rural Areas/Smart\
    \ Villages\nThe smart village paradigm digitizes various aspects of rural activities\
    \ using IoT\ntechnologies. In the countryside, a variety of activities are carried\
    \ out, including smart\nagriculture, waste management, irrigation management,\
    \ livestock management, smart\nenergy, smart healthcare, and smart education.\
    \ A smart village or smart rural area can\nenable real-time data analytics and\
    \ automate decision-making for local villagers regard-\ning healthcare, agriculture,\
    \ environment, transportation, and energy. It differs from a\nsmart city as there\
    \ are key differences (e.g., low cost, infrastructure, and sustainability)\nbetween\
    \ urban and rural environments [252]. To realize the smart village goal, The Euro-\n\
    pean Commission (2017) [253] launched an action plan, in which it proposed to\
    \ interfere\nICTs in villages. Cambra-Fierro and Pérez [254] addressed the meaning\
    \ of “smart” in\nrural contexts as well as its link with sustainability. The European\
    \ Commission-funded\nSmart Rural 21 initiative [255], which has the ultimate goal\
    \ of encouraging and motivat-\ning communities to create and execute smart village\
    \ methods and tactics throughout\nEurope as a tool for rural development, serving\
    \ as the authors’ primary source. IEEE\nSmart Village [256] also supports the\
    \ world’s energy-impoverished communities by pro-\nviding a complete solution\
    \ combining renewable energy, community-based education, and\nentrepreneurial\
    \ opportunities.\nMalik et al. [257] discussed the implementation details of smart\
    \ villages with different\ntechnologies. They concluded that digitization is only\
    \ possible if a reliable and robust net-\nwork and communication infrastructure\
    \ are installed in the village environment. Shrestha\nand Drozdenko [258] proposed\
    \ a Smart Rural framework to mitigate the effects of climate\nchange using IoT\
    \ and the Cloud, building a prototype on the Louisiana Tech University\ncampus.\
    \ Their framework is an energy-efﬁcient monitoring system for observing the envi-\n\
    ronmental conditions that affect agricultural production and human health. It\
    \ consists of\nthe following subsystems: Wireless Sensor Nodes, Fog Server, Cloud\
    \ Services, and a Web\nDashboard. The dashboard converts raw sensor data into\
    \ meaningful information from\nwhich public ofﬁcials and residents can adapt to\
    \ or frustrate the effects of climate change.\nMonzon Baeza and Alvarez Marban\
    \ [259] proposed a ﬂexible and scalable Smart Rural\nsystem for gathering and\
    \ processing IoT data from remote rural areas with no traditional\ncommunication\
    \ coverage as a handicap. The authors offered an architecture structured in\n\
    separate segments using IoT, 5G, Cloud, and High-Altitude Platform Station (HAPS).\
    \ Their\nproposal is applied to the rural environment to thus cover all the needs\
    \ of the system in the\ncollection of IoT data from these remote rural areas,\
    \ its coverage by space vehicles, and its\nprocessing and storage through 5G terrestrial\
    \ networks and cloud services. Their proposal\nincludes the deployment of IoT\
    \ sensors and the development of Amazon Web Services.\nConversely, the part of\
    \ the space segment, considered by HAPS, has been simulated for\ndifferent space\
    \ channels. This method provides a complete and automated smart rural\nsystem\
    \ that allows access to these IoT data from remote rural areas through the Internet.\
    \ To\nprovide secure services close to end-devices, Aljuhani et al. [260] explored\
    \ the integration\nof a Distributed Fog Computing (DFC) network architecture with\
    \ IoT in improving security\nand privacy solutions for villagers and consumer\
    \ electronic (CE) devices. As a case study,\nthe authors designed and evaluated\
    \ the performance of an Intrusion Detection System (IDS)\nin a DFC-based smart\
    \ village environment. Moreover, they discussed open security issues\nand challenges\
    \ regarding Fog-to-Things enabled smart villages. Rohan et al. [261] proposed\n\
    a collaborative edge-computing architecture considering the resource constraints\
    \ in a smart\nvillage. The authors illustrated the concept of collaborative edge\
    \ computing as applicable\nto reduce cost and better manage the existing infrastructural\
    \ facilities. Collaboration occurs\nbetween the multiple IoT edge devices (e.g.,\
    \ the edge data centers or edge routers) for data\nprocessing and storage. For\
    \ example, in times of high computational load demand, one\nvillage’s edge devices\
    \ can collaborate with another village’s edge devices.\nElectronics 2023, 12,\
    \ 2490\n48 of 63\n6. Summary\n•\nVarious SCAs have different network requirements\
    \ such as bandwidth, delay toler-\nance, power consumption, reliability, wireless\
    \ connectivity, mobility, security, and\nprivacy. Therefore, they need different\
    \ protocols at the OSI-RM layers. The network\narchitectures for IoT are heterogeneous\
    \ and include various network technologies such\nas WiFi, WSNs, Mesh Wireless\
    \ Networks (WMNs), Vehicular Networks, and Mobile\nCommunication Networks (MCNs)\
    \ (5G/LTE/4G/3G). The standards adopted in these\narchitectures must allow interoperability,\
    \ while cross-layer design-based recommen-\ndations for power consumption and\
    \ congestion control are well-suited proposals.\n•\nState-of-the-art generic network\
    \ architectures for smart cities adopt the SDN paradigm\nand are based on FogC\
    \ to reduce latency and increase the efficiency of provided services.\n•\nFog\
    \ and ClCom will be used in smart grid communication system architecture in the\n\
    future to fulﬁll QoS needs. Such architecture will additionally feature communication\n\
    methods that can lessen QoS issues like latency, security, and spectrum efﬁciency.\
    \ The\nCR technology will be an indispensable part of this architecture as this\
    \ technology can\nquickly reconﬁgure the operating parameters of the SG communication\
    \ system to the\nchanging requirements through cognition.\n•\nBy extracting usable\
    \ data from both the physical and network data space, it is possible\nto increase\
    \ network security and transportation safety in IoVs. Future IoV architectures\n\
    will become cognitive. These architectures will include cognitive data engines\
    \ that\nwill conduct cognition of user tasks by the use of data collected, e.g.,\
    \ driving behavior\nmodel analysis, emotion analysis, and road condition investigation.\n\
    •\nThe networking performance of SDN is better than the customary networking of\
    \ smart\nbuildings (SB). However, as Younus et al. [190] state, it also has been\
    \ facing some\nchallenges such as network management in terms of maintenance,\
    \ east–west interface,\nsouthbound interface, trafﬁc management, energy, ML-based\
    \ SDN networking for SB,\nand the network resources issue of SB SDN-based networking.\n\
    7. Open Research Issues\n−Network slicing management is required: IoT services\
    \ such as smart transportation and\nsmart energy have diversiﬁed requirements.\
    \ To accommodate diverse IoT services, the\nnetwork slicing paradigm is suggested\
    \ because it enables multiple independent logical\nnetworks running on the same\
    \ physical network infrastructure. Wu et al. [9] presented\nan architecture for\
    \ intelligent network slicing management for the Industrial IoT (IIoT)\nfocusing\
    \ on three IIoT services (smart transportation, smart energy, and smart factory).\
    \ The\nauthors also provided a comprehensive survey on intelligent network slicing\
    \ management\nin this ﬁeld.\n−NFV Implementation in the SDN-IoT Environment: The\
    \ ETSI Industry Speciﬁcation\nGroup proposed NFV to virtualize the network functions\
    \ that were before performed\nby some proprietary dedicated. NFV allows for the\
    \ ﬂexible provisioning of software-\nbased network functionalities on top of an\
    \ appropriately shared physical infrastructure by\nseparating the network functions\
    \ from the underlying hardware appliances [262]. Utilizing\ninexpensive commodity\
    \ servers, it solves the issue of operating costs associated with\nadministering\
    \ and controlling this closed and proprietary equipment. When SDN is\nused in\
    \ conjunction with NFV (the software-deﬁned NFV architecture), it can overcome\n\
    the difﬁculties associated with intelligent service orchestration and dynamic\
    \ resource\nmanagement [263]. SDN can dynamically establish a virtual service\
    \ environment through\nNFV. As a result, the need for specialized hardware and\
    \ labor-intensive effort to fulﬁll\na new service request is avoided. In conjunction\
    \ with the use of SDN, NFV also allows\nreal-time and dynamic function provisioning\
    \ along with ﬂexible trafﬁc forwarding. The\nSDN-IoT network may be improved and\
    \ secured with NVF. It enables the software-based\ndeployment of network devices\
    \ as virtualized components. Throughput is increased\nbecause of NFV integration\
    \ in the SDN-IoT network, which enhances network performance.\nTo this end, Sinh\
    \ et al. [264] proposed a practical model for hosting IoT services and building\n\
    Electronics 2023, 12, 2490\n49 of 63\nSDN controller applications to show that\
    \ SDN/NFV can effectively apply to IoT services.\nRecently, Mukherjee et al. [265]\
    \ proposed an SDN-based distributed IoT network with NFV\nimplementation for smart\
    \ cities.\n−Cognitive IoT network architecture for smart cities: CR technology\
    \ can address the\nbandwidth needs of IoT applications [266]. IoT devices can\
    \ be enabled with cognitive\nfunctionalities, including spectrum sensing, dynamic\
    \ spectrum accessing, circumstantial\nperceiving, and self-learning. Many SCAs\
    \ and services can be based on CR technology\nbecause it can do dynamic sensing\
    \ and cognition of the surrounding environment. For\nexample, in smart grid applications,\
    \ cognitive IoT can achieve the objective of enabling\nusers to know their energy\
    \ consumption at any time and anywhere [267]. In smart home ap-\nplications, cognitive-radio-equipped\
    \ sensors can handle potential heterogeneous network\ninterference [268]. At the\
    \ same time, cognitive IoT can help with smoother real-time moni-\ntoring over\
    \ longer distances in the healthcare industry without worrying about spectrum\n\
    availability [269]. The complete utilization of cognitive radio technology in\
    \ IoT demands\nextensive research in spectrum optimization, standardization, hardware\
    \ design, privacy\nprotection, heterogeneous network fusion, scalability and ﬂexibility\
    \ problems, etc. [270].\nFor this reason, many CIoT-based smart city network architectures\
    \ must be proposed to\nsolve such problems. In this regard, Park et al. [271]\
    \ suggested a CIoT-based smart city\nnetwork architecture that outlines how data\
    \ collected from SCAs may be analyzed using\nthe CogC paradigm and manage the\
    \ scalability and ﬂexibility challenges.\n−Challenges in IoT communication through\
    \ TCP/IP suite: Unfortunately, many Access\nPoints (APs) can utilize identical\
    \ WiFi channels in overlapping regions, leading to interfer-\nence problems that\
    \ can signiﬁcantly impair TCP performance over WiFi [272]. Now, many\nAPs can\
    \ provide support for wireless access to numerous users in a WiFi network with\n\
    the DownLink multi-user MIMO (DL MU-MIMO) functionality. DL MU-MIMO is a PHY\n\
    layer technology (included with IEEE 802.11ac standard [273]) that increases the\
    \ capacity\nof WLANs by simultaneously broadcasting data streams to several stations.\
    \ As a result, it\nis possible to achieve greater data rates that are equal to\
    \ the number of antennas on APs.\nThus, several stations are served at once. Pokhrel\
    \ and Singh [131] stressed the employment\nof CR and Federated Learning (FL) methods\
    \ with many APs to improve the Compound\nTCP’s performance in wide-area Industry\
    \ 4.0 WiFi networks. An FL method can accelerate\nthe learning processes of the\
    \ transport protocols such as Compound TCP. In FL, training\ndata are dispersed\
    \ across a large number of clients, each having unreliable and compar-\natively\
    \ slow network connections, with the aim of developing a high-quality centralized\n\
    model. The authors of [131] insisted on using these specialized strategies to\
    \ coordinate\nnumerous APs with regard to losses caused by unique wireless channel\
    \ characteristics and\nWiFi downloading and uploading dynamics. Through the use\
    \ of FL and CR approaches in\ndual AP settings, it is now possible to improve\
    \ the Layer-4 performances of TCP versions.\nAnother study [274] assumed TCP Cubic\
    \ [275] as the Layer-4 protocol and considered the\nFL approach for IoVs. The\
    \ authors of [276] developed a framework for exploiting the FL\ntechnique, which\
    \ enhances the efﬁciency and privacy protection for the case of IoVs.\n−Digital\
    \ Twins for Smart Processes: A virtual depiction of resources, personnel, proce-\n\
    dures, systems, devices, and locations is referred to as a digital twin. Digital\
    \ twin technology\ncan be used to duplicate a variety of objects, including humans,\
    \ IoT devices, aircraft en-\ngines, and vehicles. A digital twin of the original\
    \ vehicle is created, for instance, when\nan automobile business creates a virtual\
    \ representation or digital duplicate (copy) of a car\nmodel. If a manufacturer\
    \ creates a virtual representation of its manufacturing process, the\nreplicated\
    \ process is a digital twin of the physical process. A digital twin is a proﬁle\
    \ of\nthe actual process or physical object’s past and present state. In this\
    \ virtual graphic, the\ndynamics and features of an IoT device’s life and operation\
    \ are depicted. The digital twin\ncan offer the location, state, and/or status\
    \ of physical assets in real-time due to continual\nlearning and advancements.\
    \ This fusion of the real and digital worlds enables organizations\nto monitor\
    \ systems, set strategies, and anticipate problems before they occur. Digital\
    \ twins\nare created using digital twin technology, which integrates network infrastructure\
    \ graphs,\nElectronics 2023, 12, 2490\n50 of 63\nAI, software analytics, and the\
    \ IoT. Through digital twins, the idea of the smart city is\ndemonstrated. This\
    \ technology can efﬁciently administer the city, from urban planning to\nthe optimization\
    \ of land use. Digital twins make it possible to simulate plans before putting\n\
    them into action in the real world, revealing issues before they materialize.\
    \ If a digital twin\nis in place, government organizations can only fully assess\
    \ what might be achieved with\nthe data to better citizens’ lives, offer economic\
    \ opportunity, and establish a more cohesive\ncommunity. Although the idea is\
    \ currently novel, it is expected to catch on in the next few\nyears [277].\n\
    −The 6G Network for Futuristic Smart Cities: A futuristic smart city is a dense\
    \ and\nAI-centric city because massive device connectivity with vast data trafﬁc\
    \ is estimated in\nthe future. In such cities, the concept of IoT will be converted\
    \ to the concept of Internet of\nEverything (IoE). Networks of futuristic smart\
    \ cities should have a huge bandwidth, low\nlatency, and AI integration. Such\
    \ networks should also provide ubiquity, high QoS, and\non-demand content for\
    \ thousands of interconnected devices. The 6G network [278] is the\nproblem-solving\
    \ network of futuristic cities, with huge bandwidth and low latency. It is\nunder\
    \ development for wireless communications technologies supporting cellular data\n\
    networks. Like its predecessors, 6G networks will probably be broadband cellular\
    \ networks,\nin which the service area is divided into small geographical areas\
    \ (cells). It is expected that\n6G will be supported by existing 5G infrastructures\
    \ such as SDN, NFV, and network slicing,\ntogether with new infrastructure. The\
    \ network requirements of 6G are as follows [278]:\n(1) ultra-fast data rates\
    \ as high as 1 Tbps; (2) ultra-low latency of less than 1 ms; (3) increased\n\
    mobility and coverage; (4) ﬂexible and efﬁcient connection of trillion level objects;\
    \ (5) peak\nspectral efﬁciency of 60 b/s/Hz; (6) very high system reliability;\
    \ and (7) improved network\nsecurity [279]. However, the main problem of 6G is\
    \ that transmitting at a higher frequency\nspectrum is prone to high path loss,\
    \ making the distance for transmission limited [280].\nThe expected 6G of the\
    \ radio access network is based on terahertz (THz) waves with the\ncapability\
    \ of carrying up to one terabit per second (Tbps). THz waves have the capability\
    \ of\ncarrying a large amount of data, but these waves have numerous drawbacks,\
    \ such as short-\nrange and atmospheric attenuation. Hence, these drawbacks can\
    \ introduce complications\nand hinder the performance of the 6G network. Therefore,\
    \ such complications of THz waves\nmust be considered, and efﬁcient AI-centric\
    \ multilayer physical network architectures of 6G\nmust be proposed for futuristic\
    \ smart cities. Farooq et al. [280] considered the expectations\nfrom a network\
    \ of futuristic smart cities and the problems of THz waves and proposed\na conceptual\
    \ terrestrial network (TN) architecture for 6G. The nested Bee Hive [280] is a\n\
    scalable multilayer architecture designed to meet the needs of futuristic smart\
    \ cities. It\nprovides an on-ground cloud network that helps smart devices to\
    \ run AI applications\npartially on their own and the rest on the cloud. Furthermore,\
    \ the distributed and edge\ncomputing-oriented infrastructure of Bee Hive provides\
    \ security and reduces trafﬁc load on\nthe upper layer of the network. Undoubtedly,\
    \ pervasive AI is the main enabling technology\nin 6G, while some forms of AI\
    \ are realized as part of 5G. Many successful examples of\nusing AI on wireless\
    \ communications have been proposed, from physical layer designs\n(e.g., channel\
    \ estimation and precoding), to network resource allocation (e.g., trafﬁc control\n\
    and cache storage management), to security and authentication, to dynamic cell\
    \ and\ntopology formation and management, to fault prediction and detection, etc.\
    \ However,\nDL-based solutions require high computational complexity, which might\
    \ not ﬁt in current\nmobile phones [281]. Apart from the complexity, Artiﬁcial\
    \ Neural Network (ANN)-based\nRL algorithms must be carefully designed to decrease\
    \ the computational resources required\non these devices [282]. Quantum communication\
    \ [283] offers a promising approach to\navoiding the challenge of limited computational\
    \ resources and energy efﬁciency. Applying\nArtiﬁcial Neural Networks in IoT also\
    \ comes with the trade-off challenge between accuracy\nand computational/energy\
    \ requirements [282]. Tariq et al. [284] studied some of the above\nissues and\
    \ envisioned 6G to facilitate futuristic smart cities with pervasive autonomous\n\
    systems. Apart from pervasive AI, Imoize et al. [285] discussed other important\
    \ enabling\ntechnologies of 6G and their challenges. These enabling technologies\
    \ are as follows:\nElectronics 2023, 12, 2490\n51 of 63\n•\nReconﬁgurable Intelligent\
    \ Surfaces (RISs) [286] that reﬂect signals and help in places\nwhere maintaining\
    \ Line of Sight (LoS) is difﬁcult. RISs will be mainly deployed on\ndoors, windows,\
    \ and buildings.\n•\nCell-Free Massive MIMO: The massive MIMO technology is introduced\
    \ in 5G with\na more dense network of access points (APs), and this is further\
    \ developed in 6G\nto include a network with no cells (cell-free) [287]. Cell-Free\
    \ Massive MIMO im-\nproves spectral efﬁciency in communication networks, but there\
    \ are some health risks\nassociated with such a dense network of APs.\n•\nCubeSat\
    \ communication or the Internet of Space Things [288]. A CubeSat (or U-class\n\
    spacecraft) is a miniaturized spacecraft with sizes that are multiples of U, up\
    \ to 6U,\nand U being 10 × 10 × 10 cm cubic units.\n•\nUAVs/satellite communication.\n\
    •\nTerahertz communication and Optical Wireless Technology [289].\n•\nBlockchain\
    \ technology [290] and quantum communication [283].\nThe development of futuristic\
    \ smart cities keeps up with the development of energy-\nefﬁcient 6G communication.\
    \ Kamruzzaman [291] presented the key trends in the IoT for\nenergy-efﬁcient 6G\
    \ wireless communication in smart cities. He argues that the application\nof IoT\
    \ devices to 6G in smart cities will provide a 100 Gbps data rate, <0.1 ms latency\
    \ rate,\nup to 1000 km/h mobility rate, 100 bps/Hz spectral efﬁciency, and 1000\
    \ GHz frequency.\nThis will resolve the issues of energy inefﬁciency and other\
    \ concerns in conventional\ncommunication networks. Moreover, the use of energy-efﬁcient\
    \ 6G in smart cities via IoT\ndevices probably will solve various problems that\
    \ are encountered by existing smart city\nsystems. In futuristic smart cities,\
    \ residents will use the innovative 6G brain–computer\ninterface (BCI) technology\
    \ [292] for a multi-sense experience. BCI is based on the signals\nand information\
    \ that monitor and control machines using sensible wearable headsets and\ndevices.\
    \ It uses human consciousness more than external sources for better interaction.\n\
    As humans have ﬁve senses (sight, hearing, touch, smell, and taste), BCI comprises\
    \ ﬁve\ndatasets, comprising features of human senses that are used for human interaction\
    \ with the\nmachine [292].\n8. Conclusions\nUtilizing resources efficiently, reducing\
    \ operating expenses, and enhancing city\ndwellers’ quality of life are the objectives\
    \ of the smart city paradigm. This goal is ob-\ntained by combining various technologies\
    \ including IoT, WSNs, CPS, ClCom, FoC, big\ndata analytics, and robots. For this\
    \ model, the effective networking and communication\nbetween the many components\
    \ required to enable various SCAs are crucial for achieving its\nobjectives. The\
    \ ever-increasing need for networking leads to many elastic and manageable\nplatforms\
    \ for various SCAs including smart grid, smart buildings, smart home, smart water,\n\
    and smart transportation systems. The networking needs of the key SCAs were examined\n\
    in this research, and the appropriate protocols that can be applied at different\
    \ system\nlevels have been identiﬁed. Additionally, we provided examples of networking\
    \ protocols\nand smart grid, intelligent building, smart residence, and smart\
    \ transportation system\narchitectures. We concentrated on key criteria for a\
    \ variety of networking designs, such as\nenergy savings, routing, security, dependability,\
    \ mobility, and support for heterogeneous\nnetworks. In addition, we presented\
    \ open research issues.\nThis survey can assist researchers to recognize research\
    \ gaps/problems working in the\nnetworking architectures for smart cities, and\
    \ it provides an overview of available protocols\nand architectures for SCAs.\n\
    Author Contributions: Conceptualization, D.K.; methodology, D.K. and V.K.S.; analysis\
    \ and investi-\ngation, D.K. and V.K.S.; draft preparation, D.K., V.K.S. and T.P.;\
    \ supervision, A.K. All authors have\nread and agreed to the published version\
    \ of the manuscript.\nElectronics 2023, 12, 2490\n52 of 63\nFunding: This research\
    \ work was supported by the research project CRISIS, “Competences for Resilient\n\
    Smart Cities’ Staff” (Project No.: 2021-1-EL01-KA220-HED-000032257, Erasmus+ KA2—Partnerships\
    \ for\nCooperation).\nData Availability Statement: Not applicable.\nConﬂicts of\
    \ Interest: The authors declare no conﬂict of interest.\nAbbreviations\nThe following\
    \ abbreviations are used in this manuscript:\nAMI\nAutomatic Metering Infrastructure\n\
    AMQP\nAdvanced Message Queuing Protocol\nAODV\nAd-Hoc On-Demand Distance Vector\n\
    API\nApplication Programming Interface\nAQMS\nIndoor Air Quality Monitoring System\n\
    BLE\nBluetooth Low Energy\nClCom\nCloud Computing\nCoAP\nConstrained Application\
    \ Protocol\nCPS\nCyber-Physical System\nCR\nCognitive Radio\nDDS\nData Distribution\
    \ Service\nDERs\nDistributed Energy Resources\nDL\nDeep Learning\nD2D\nDevice-to-Device\
    \ communication\nEPS\nElectric Power System\nETSI\nEuropean Telecommunications\
    \ Standards Institute\nFoC\nFog Computing\nHTTP\nHypertext Transfer Protocol\n\
    HVAC\nHeating, Ventilating, and Air-Conditioning\nIEEE\nInstitute of Electrical\
    \ and Electronics Engineers\nIETF\nInternet Engineering Task Force\nIoT\nInternet\
    \ of Things\nIoV\nInternet of Vehicles\nIPv6\nInternet Protocol version 6\nISP\n\
    Internet Service Provider\nLAN\nLocal Area Network\nLoRA\nLong Range (a spread\
    \ spectrum modulation technique)\nLPWAN\nLow-Power Wide Area Network\nLTE\nLong-Term\
    \ Evolution\nMAC\nMedium Access Control\nMLB\nMultipath Load-Balancing (routing)\n\
    MQTT\nMessage Queuing Telemetry Transport\nM2M\nMachine-to-Machine\nNFV\nNetwork\
    \ Function Virtualization\nOSI-RM\nOpen Systems Interconnection−Reference Model\n\
    PAN\nPersonal Area Network\nPEVs\nPlug-in Electric Vehicles\nPHY\nPhysical layer\n\
    QoE\nQuality of Experience\nQoS\nQuality of Service\nREST\nRepresentational State\
    \ Transfer protocol\nRFID\nRadio-Frequency Identiﬁcation\nRPL\nRouting Protocol\
    \ for Low-Power and Lossy Networks\nSBA\nSmart Building Architecture\nSCA\nSmart\
    \ City Application\nSCADA\nSupervisory Control and Data Acquisition (system)\n\
    SDN\nSoftware Deﬁned Networking\nSG\nSmart Grid\nElectronics 2023, 12, 2490\n\
    53 of 63\nSWS\nSmart Water System\nTCP\nTransmission Control Protocol\nUAV\nUnmanned\
    \ Aerial Vehicle\nUDP\nUser Datagram Protocol\nVANET\nVehicular Ad-hoc Network\n\
    WAN\nWide Area Network\nWSN\nWireless Sensor Network\nXML\nExtensible Mark-up\
    \ Language\nXMPP\nExtensible Messaging and Presence Protocol\n5G\nFifth Generation\n\
    6G\nSixth Generation\n6LoWPAN\nIPv6 over Low-Power Wireless Personal Area Network\n\
    References\n1.\nAchmad, K.A.; Nugroho, L.E.; Djunaedi, A. Smart city model: A\
    \ literature review. In Proceedings of the 2018 10th International\nConference\
    \ on Information Technology and Electrical Engineering (ICITEE), Bali, Indonesia,\
    \ 24–26 July 2018; pp. 488–493.\n[CrossRef]\n2.\nAl-Fuqaha, A.; Guizani, M.; Mohammadi,\
    \ M.; Aledhari, M.; Ayyash, M. Internet of things: A survey on enabling technologies,\n\
    protocols, and applications. IEEE Commun. Surv. Tutor. 2015, 17, 2347–2376. [CrossRef]\n\
    3.\nKhalifeh, A.; Darabkh, K.A.; Khasawneh, A.M.; Alqaisieh, I.; Salameh, M.;\
    \ AlAbdala, A.; Alrubaye, S.; Alassaf, A.; Al-HajAli, S.;\nAl-Wardat, R.; et al.\
    \ Wireless sensor n etworks for smart cities: Network design, implementation and\
    \ performance evaluation.\nElectronics 2021, 10, 218. [CrossRef]\n4.\nPuliaﬁto,\
    \ A.; Tricomi, G.; Zafeiropoulos, A.; Papavassiliou, S. Smart cities of the future\
    \ as cyber physical systems: Challenges and\nenabling technologies. Sensors 2021,\
    \ 21, 3349. [CrossRef] [PubMed]\n5.\nAlam, T. Cloud-based IoT applications and\
    \ their roles in smart cities. Smart Cities 2021, 4, 1196–1219. [CrossRef]\n6.\n\
    Hu, P.; Dhelim, S.; Ning, H.; Qiu, T. Survey on fog computing: Architecture, key\
    \ technologies, applications and open issues.\nJ. Netw. Comput. Appl. 2017, 98,\
    \ 27–42. [CrossRef]\n7.\nBeigi, N.K.; Partov, B.; Farokhi, S. Real-time cloud\
    \ robotics in practical smart city applications. In Proceedings of the 2017 IEEE\n\
    28th Annual International Symposium on Personal, Indoor, and Mobile Radio Communications\
    \ (PIMRC), Montreal, QC, Canada,\n8–13 October 2017; pp. 1–5. [CrossRef]\n8.\n\
    Osman, A.M.S. A novel big data analytics framework for smart cities. Future Gener.\
    \ Comput. Syst. 2019, 91, 620–633. [CrossRef]\n9.\nWu, Y.; Dai, H.N.; Wang, H.;\
    \ Xiong, Z.; Guo, S. A survey of intelligent network slicing management for industrial\
    \ IoT: Integrated\napproaches for smart transportation, smart energy, and smart\
    \ factory. IEEE Commun. Surv. Tutor. 2022, 24, 1175–1211. [CrossRef]\n10.\nMarinakis,\
    \ V.; Doukas, H.; Tsapelas, J.; Mouzakitis, S.; Sicilia, Á.; Madrazo, L.; Sgouridis,\
    \ S. From big data to smart energy services:\nAn application for intelligent energy\
    \ management. Future Gener. Comput. Syst. 2020, 110, 572–586. [CrossRef]\n11.\n\
    Sony, S.; Laventure, S.; Sadhu, A. A literature review of next-generation smart\
    \ sensing technology in structural health monitoring.\nStruct. Control Health\
    \ Monit. 2019, 26, e2321. [CrossRef]\n12.\nLacinák, M.; Ristvej, J. Smart city,\
    \ safety and security. Procedia Eng. 2017, 192, 522–527. [CrossRef]\n13.\nKitchenham,\
    \ B. Procedures for Performing Systematic Reviews; Technical Report TR/SE-0401;\
    \ Keele University: Keele, UK, 2004.\nAvailable online: https://www.inf.ufsc.br/~aldo.vw/kitchenham.pdf\
    \ (accessed on 10 February 2023).\n14.\nButt, O.M.; Zulqarnain, M.; Butt, T.M.\
    \ Recent advancement in smart grid technology: Future prospects in the electrical\
    \ power\nnetwork. Ain Shams Eng. J. 2021, 12, 687–695. [CrossRef]\n15.\nJha, A.V.;\
    \ Appasani, B.; Ghazali, A.N.; Pattanayak, P.; Gurjar, D.S.; Kabalci, E.; Mohanta,\
    \ D.K. Smart grid cyber-physical systems:\nCommunication technologies, standards\
    \ and challenges. Wirel. Netw. 2021, 27, 2595–2613. [CrossRef]\n16.\nSchmidt,\
    \ M.; Åhlund, C. Smart buildings as Cyber-Physical Systems: Data-driven predictive\
    \ control strategies for energy\nefﬁciency. Renew. Sustain. Energy Rev. 2018,\
    \ 90, 742–756. [CrossRef]\n17.\nYurtsever, E.; Lambert, J.; Carballo, A.; Takeda,\
    \ K. A survey of autonomous driving: Common practices and emerging technologies.\n\
    IEEE Access 2020, 8, 58443–58469. [CrossRef]\n18.\nMao, T.; Mihăită, A.S.; Chen,\
    \ F.; Vu, H.L. Boosted genetic algorithm using machine learning for trafﬁc control\
    \ optimization. IEEE\nTrans. Intell. Transp. Syst. 2022, 23, 7112–7141. [CrossRef]\n\
    19.\nWang, Z.; Song, H.; Watkins, D.W.; Ong, K.G.; Xue, P.; Yang, Q.; Shi, X.\
    \ Cyber-physical systems for water sustainability: Challenges\nand opportunities.\
    \ IEEE Commun. Mag. 2015, 53, 216–222. [CrossRef]\n20.\nJan, F.; Min-Allah, N.;\
    \ Dü¸stegör, D. IoT based smart water quality monitoring: Recent techniques, trends\
    \ and challenges for\ndomestic applications. Water 2021, 13, 1729. [CrossRef]\n\
    21.\nKochhar, A.; Kumar, N. Wireless sensor networks for greenhouses: An end-to-end\
    \ review.\nComput.\nElectron.\nAgric.\n2019, 163, 104877. [CrossRef]\n22.\nCheng,\
    \ L.; Wang, T.; Hong, X.; Wang, Z.; Wang, J.; Liu, J. A study on the architecture\
    \ of manufacturing internet of things. Int. J.\nModel. Identif. Control 2015,\
    \ 23, 8–23. [CrossRef]\nElectronics 2023, 12, 2490\n54 of 63\n23.\nDafﬂon, B.;\
    \ Moalla, N.; Ouzrout, Y. The challenges, approaches, and used techniques of CPS\
    \ for manufacturing in Industry 4.0: A\nliterature review. Int. J. Adv. Manuf.\
    \ Technol. 2021, 113, 2395–2412. [CrossRef]\n24.\nSatyanarayanan, M. The emergence\
    \ of edge computing. Computer 2017, 50, 30–39. [CrossRef]\n25.\nChen, M.; Li,\
    \ W.; Hao, Y.; Qian, Y.; Humar, I. Edge cognitive computing based smart healthcare\
    \ system. Future Gener. Comput.\nSyst. 2018, 86, 403–411. [CrossRef]\n26.\nJavaid,\
    \ S.; Suﬁan, A.; Pervaiz, S.; Tanveer, M. Smart trafﬁc management system using\
    \ Internet of Things. In Proceedings of the\n2018 20th International Conference\
    \ on Advanced Communication Technology (ICACT), Chuncheon, Republic of Korea,\
    \ 11–14\nFebruary 2018; pp. 393–398. [CrossRef]\n27.\nAfrin, T.; Yodo, N. A survey\
    \ of road trafﬁc congestion measures towards a sustainable and resilient transportation\
    \ system.\nSustainability 2020, 12, 4660. [CrossRef]\n28.\nSarrab, M.; Pulparambil,\
    \ S.; Awadalla, M. Development of an IoT based real-time trafﬁc monitoring system\
    \ for city governance.\nGlob. Transit. 2020, 2, 230–245. [CrossRef]\n29.\nZeadally,\
    \ S.; Siddiqui, F.; Baig, Z.; Ibrahim, A. Smart healthcare: Challenges and potential\
    \ solutions using internet of things (IoT)\nand big data analytics. PSU Res. Rev.\
    \ 2020, 4, 149–168. [CrossRef]\n30.\nAlromaihi, S.; Elmedany, W.; Balakrishna,\
    \ C. Cyber security challenges of deploying IoT in smart cities for healthcare\
    \ applications.\nIn Proceedings of the 6th International Conference on Future\
    \ Internet of Things and Cloud Workshops (FiCloudW), Barcelona,\nSpain, 6–8 August\
    \ 2018; pp. 140–145. [CrossRef]\n31.\nBaker, S.B.; Xiang, W.; Atkinson, I. Internet\
    \ of things for smart healthcare: Technologies, challenges, and opportunities.\
    \ IEEE\nAccess 2017, 5, 26521–26544. [CrossRef]\n32.\nQadri, Y.A.; Nauman, A.;\
    \ Zikria, Y.B.; Vasilakos, A.V.; Kim, S.W. The future of healthcare internet of\
    \ things: A survey of emerging\ntechnologies. IEEE Commun. Surv. Tutor. 2020,\
    \ 22, 1121–1167. [CrossRef]\n33.\nConcas, F.; Mineraud, J.; Lagerspetz, E.; Varjonen,\
    \ S.; Liu, X.; Puolamäki, K.; Nurmi, P.; Tarkoma, S. Low-cost outdoor air quality\n\
    monitoring and sensor calibration: A survey and critical analysis. ACM Trans.\
    \ Sens. Netw. 2021, 17, 1–44. [CrossRef]\n34.\nBloomer, M. The Challenges and\
    \ Complexities of Weather Forecasting. Available online: https://www.weather.gov/car/\n\
    weatherforecasting (accessed on 10 January 2023).\n35.\nSosunova, I.; Porras,\
    \ J. IoT-enabled smart waste management systems for smart cities: A systematic\
    \ review. IEEE Access 2022, 10,\n73326–73363. [CrossRef]\n36.\nOmar, A.; AlMaeeni,\
    \ S.; Attia, H.; Takruri, M.; Altunaiji, A.; Sanduleanu, M.; Shubair, R.; Ashhab,\
    \ M.S.; Al Ali, M.; Al Hebsi, G.\nSmart city: Recent advances in intelligent street\
    \ lighting systems based on IoT. J. Sens. 2022, 2022, 5249187. [CrossRef]\n37.\n\
    Zanella, A.; Bui, N.; Castellani, A.; Vangelista, L.; Zorzi, M. Internet of things\
    \ for smart cities. IEEE Internet Things J. 2014, 1, 22–32.\n[CrossRef]\n38.\n\
    Gharaibeh, A.; Salahuddin, M.A.; Hussini, S.J.; Khreishah, A.; Khalil, I.; Guizani,\
    \ M.; Al-Fuqaha, A. Smart cities: A survey on data\nmanagement, security, and\
    \ enabling technologies. IEEE Commun. Surv. Tutor. 2017, 19, 2456–2501. [CrossRef]\n\
    39.\nFernandes, E.; Jung, J.; Prakash, A. Security analysis of emerging smart\
    \ home applications. In Proceedings of the 2016 IEEE\nSymposium on Security and\
    \ Privacy, San Jose, CA, USA, 22–26 May 2016; pp. 636–654. [CrossRef]\n40.\nVault7-Home.\
    \ Available online: https://wikileaks.org/ciav7p1/index.html (accessed on 10 January\
    \ 2023).\n41.\nEl-Hajj, M.; Fadlallah, A.; Chamoun, M.; Serhrouchni, A. A survey\
    \ of internet of things (IoT) authentication schemes. Sensors\n2019, 19, 1141.\
    \ [CrossRef] [PubMed]\n42.\nBari, A.; Jiang, J.; Saad, W.; Jaekel, A. Challenges\
    \ in the smart grid applications: An overview. Int. J. Distrib. Sens. Netw.\n\
    2014, 10, 974682. [CrossRef]\n43.\nWang, W.; Xu, Y.; Khanna, M. A survey on the\
    \ communication architectures in smart grid. Comput. Netw. 2011, 55, 3604–3629.\n\
    [CrossRef]\n44.\nKhan, R.H.; Khan, J.Y. A comprehensive review of the application\
    \ characteristics and trafﬁc requirements of a smart grid\ncommunications network.\
    \ Comput. Netw. 2013, 57, 825–845. [CrossRef]\n45.\nKuzlu, M.; Pipattanasomporn,\
    \ M.; Rahman, S. Communication network requirements for major smart grid applications\
    \ in HAN,\nNAN and WAN. Comput. Netw. 2014, 67, 74–88. [CrossRef]\n46.\nAbdullah,\
    \ A.A.; Hassan, T.M. Smart grid (SG) properties and challenges: An overview. Discov.\
    \ Energy 2022, 2, 8. [CrossRef]\n47.\nGao, J.; Xiao, Y.; Liu, J.; Liang, W.; Chen,\
    \ C.P. A survey of communication/networking in smart grids. Future Gener. Comput.\
    \ Syst.\n2012, 28, 391–404. [CrossRef]\n48.\nKansal, P.; Bose, A. Bandwidth and\
    \ latency requirements for smart transmission grid applications. IEEE Trans. Smart\
    \ Grid 2012, 3,\n1344–1352. [CrossRef]\n49.\nJawhar, I.; Mohamed, N.; Al-Jaroodi,\
    \ J. Networking architectures and protocols for smart city systems. J. Internet\
    \ Serv. Appl. 2018,\n9, 26. [CrossRef]\n50.\nShoaib, N.; Shamsi, J.A. Understanding\
    \ network requirements for smart city applications: Challenges and solutions.\
    \ IT Prof. 2019,\n21, 33–40. [CrossRef]\n51.\nSesia, S.; Touﬁk, I.; Baker, M.\
    \ LTE-the UMTS Long Term Evolution: From Theory to Practice; John Wiley & Sons:\
    \ Hoboken, NJ,\nUSA, 2011.\n52.\nChin, W.H.; Fan, Z.; Haines, R. Emerging technologies\
    \ and research challenges for 5G wireless networks. IEEE Wirel. Commun.\n2014,\
    \ 21, 106–112. [CrossRef]\nElectronics 2023, 12, 2490\n55 of 63\n53.\nRamya, C.M.;\
    \ Shanmugaraj, M.; Prabakaran, R. Study on ZigBee technology. In Proceedings of\
    \ the 3rd International Conference\non Electronics Computer Technology, Kanyakumari,\
    \ India, 8–10 April 2011; Volume 6, pp. 297–301. [CrossRef]\n54.\nAtat, R.; Liu,\
    \ L.; Chen, H.; Wu, J.; Li, H.; Yi, Y. Enabling cyber-physical communication in\
    \ 5G cellular networks: Challenges,\nspatial spectrum sensing, and cyber-security.\
    \ IET Cyber-Phys. Syst. Theory Appl. 2017, 2, 49–54. [CrossRef]\n55.\nKhorov,\
    \ E.; Lyakhov, A.; Krotov, A.; Guschin, A. A survey on IEEE 802.11ah: An enabling\
    \ networking technology for smart cities.\nComput. Commun. 2015, 58, 53–69. [CrossRef]\n\
    56.\nKim, D.Y.; Jung, M. Data transmission and network architecture in long range\
    \ low power sensor networks for IoT. Wirel. Pers.\nCommun. 2017, 93, 119–129.\
    \ [CrossRef]\n57.\nRatasuk, R.; Vejlgaard, B.; Mangalvedhe, N.; Ghosh, A. NB-IoT\
    \ system for M2M communication. In Proceedings of the 2016 IEEE\nWireless Communications\
    \ and Networking Conference, Doha, Qatar, 3–6 April 2016; pp. 1–5. [CrossRef]\n\
    58.\nPerera, C.; Qin, Y.; Estrella, J.C.; Reiff-Marganiec, S.; Vasilakos, A.V.\
    \ Fog computing for sustainable smart cities: A survey. ACM\nComput. Surv. 2017,\
    \ 50, 1–43. [CrossRef]\n59.\nAlvi, S.A.; Afzal, B.; Shah, G.A.; Atzori, L.; Mahmood,\
    \ W. Internet of multimedia things: Vision and challenges. Ad Hoc Netw.\n2015,\
    \ 33, 87–111. [CrossRef]\n60.\nAvelar, E.; Marques, L.; dos Passos, D.; Macedo,\
    \ R.; Dias, K.; Nogueira, M. Interoperability issues on heterogeneous wireless\n\
    communication for smart cities. Comput. Commun. 2015, 58, 4–15. [CrossRef]\n61.\n\
    Cohen, E.G.; Ho, D.; Mohanty, B.P.; Rajkotia, P.R.; Berger, L.T.; Schwager, A.;\
    \ Schneider, D.M. IEEE 1905.1: Convergent digital\nhome networking. In MIMO Power\
    \ Line Communications: Narrow and Broadband Standards, EMC, and Advanced Processing;\
    \ CRC:\nBoca Raton, FL, USA, 2014.\n62.\nDel Esposte, A.D.M.; Santana, E.F.; Kanashiro,\
    \ L.; Costa, F.M.; Braghetto, K.R.; Lago, N.; Kon, F. Design and evaluation of\
    \ a\nscalable smart city software platform with large-scale simulations. Future\
    \ Gener. Comput. Syst. 2019, 93, 427–441. [CrossRef]\n63.\nKanellopoulos, D.;\
    \ Sharma, V.K. Dynamic load balancing techniques in the IoT: A review. Symmetry\
    \ 2022, 14, 2554. [CrossRef]\n64.\nLiu, Q.; Gu, J.; Yang, J.; Li, Y.; Sha, D.;\
    \ Xu, M.; Shams, I.; Yu, M.; Yang, C. Cloud, edge, and mobile computing for smart\n\
    cities. In Urban Informatics; The Urban Book Series; Shi, W., Goodchild, M.F.,\
    \ Batty, M., Kwan, M.P., Zhang, A., Eds.; Springer:\nSingapore, 2021. [CrossRef]\n\
    65.\nda Silva, T.P.; Batista, T.; Lopes, F.; Neto, A.R.; Delicato, F.C.; Pires,\
    \ P.F.; da Rocha, A.R. Fog computing platforms for smart city\napplications-A\
    \ survey. ACM Trans. Internet Technol. 2022, 22, 1–32. [CrossRef]\n66.\nMouradian,\
    \ C.; Naboulsi, D.; Yangui, S.; Glitho, R.H.; Morrow, M.J.; Polakos, P.A. A comprehensive\
    \ survey on fog computing:\nState-of-the-art and research challenges. IEEE Commun.\
    \ Surv. Tutor. 2017, 20, 416–464. [CrossRef]\n67.\nCoady, Y.; Hohlfeld, O.; Kempf,\
    \ J.; McGeer, R.; Schmid, S. Distributed cloud computing: Applications, status\
    \ quo, and challenges.\nACM SIGCOMM Comput. Commun. Rev. 2015, 45, 38–43. [CrossRef]\n\
    68.\nKsentini, A.; Jebalia, M.; Tabbane, S. IoT/cloud-enabled smart services:\
    \ A review on QoS requirements in fog environment and a\nproposed approach based\
    \ on priority classiﬁcation technique. Int. J. Commun. Syst. 2021, 34, e4269.\
    \ [CrossRef]\n69.\nOpenFog Consortium Architecture Working Group. OpenFog Reference\
    \ Architecture for Fog Computing. 2017. Available online:\nhttps://www.iiconsortium.org/pdf/OpenFog_Reference_Architecture_2_09_17.pdf\
    \ (accessed on 10 January 2023).\n70.\nTheoleyre, F.; Watteyne, T.; Bianchi, G.;\
    \ Tuna, G.; Gungor, V.C.; Pang, A.C. Networking and communications for smart cities\n\
    special issue editorial. Comput. Commun. 2015, 58, 1–3. [CrossRef]\n71.\nConti,\
    \ M.; Giordano, S. Mobile ad hoc networking: Milestones, challenges, and new research\
    \ directions. IEEE Commun. Mag.\n2014, 52, 85–96. [CrossRef]\n72.\nWinter, T.;\
    \ Thubert, P.; Brandt, A.; Hui, J.; Kelsey, R.; Levis, P.; Pister, K.; Struik,\
    \ R.; Vasseur, J.P.; Alexander, R. RPL: IPv6 Routing\nProtocol for Low-Power and\
    \ Lossy Networks. RFC 6550. 2012. Available online: https://www.rfc-editor.org/rfc/rfc6550.html\n\
    (accessed on 1 February 2023).\n73.\nKushalnagar, N.; Montenegro, G.; Schumacher,\
    \ C. IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs):\nOverview,\
    \ Assumptions, Problem Statement, and Goals. RFC 4919. 2007. Available online:\
    \ https://www.rfc-editor.org/rfc/rfc4\n919 (accessed on 1 February 2023).\n74.\n\
    Soltanmohammadi, E.; Ghavami, K.; Naraghi-Pour, M. A survey of trafﬁc issues in\
    \ machine-to-machine communications over\nLTE. IEEE Internet Things J. 2016, 3,\
    \ 865–884. [CrossRef]\n75.\nVelliangiri, S.; NG, B.A.; Baik, N.K. Detection of\
    \ DoS attacks in smart city networks with feature distance maps: A statistical\n\
    approach. IEEE Internet Things J. 2023; Early Access. [CrossRef]\n76.\nHassan,\
    \ W.H. Current research on Internet of Things (IoT) security: A survey. Comput.\
    \ Netw. 2019, 148, 283–294. [CrossRef]\n77.\nHammi, M.T.; Hammi, B.; Bellot, P.;\
    \ Serhrouchni, A. Bubbles of Trust: A decentralized blockchain-based authentication\
    \ system\nfor IoT. Comput. Secur. 2018, 78, 126–142. [CrossRef]\n78.\nQu, C.;\
    \ Tao, M.; Zhang, J.; Hong, X.; Yuan, R. Blockchain based credibility veriﬁcation\
    \ method for IoT entities. Secur. Commun.\nNetw. 2018, 2018, 7817614. [CrossRef]\n\
    79.\nErhan, L.; Ndubuaku, M.; Di Mauro, M.; Song, W.; Chen, M.; Fortino, G.; Bagdasar,\
    \ O.; Liotta, A. Smart anomaly detection in\nsensor systems: A multi-perspective\
    \ review. Inf. Fusion 2021, 67, 64–79. [CrossRef]\n80.\nUllah, Z.; Al-Turjman,\
    \ F.; Mostarda, L.; Gagliardi, R. Applications of artiﬁcial intelligence and machine\
    \ learning in smart cities.\nComp. Commun. 2020, 154, 313–323. [CrossRef]\nElectronics\
    \ 2023, 12, 2490\n56 of 63\n81.\nAhmed, S.T.; Kumar, V.; Kim, J. AITel: eHealth\
    \ Augmented Intelligence based Telemedicine Resource Recommendation Frame-\nwork\
    \ for IoT devices in Smart cities. IEEE Internet Things J. 2023; Early Access.\
    \ [CrossRef]\n82.\nHeidari, A.; Navimipour, N.J.; Unal, M. Applications of ML/DL\
    \ in the management of smart cities and societies based on new\ntrends in information\
    \ technologies: A systematic literature review. Sustain. Cities Soc. 2022, 85,\
    \ 104089. [CrossRef]\n83.\nSyed, A.S.; Sierra-Sosa, D.; Kumar, A.; Elmaghraby,\
    \ A. IoT in smart cities: A survey of technologies, practices and challenges.\n\
    Smart Cities 2021, 4, 429–475. [CrossRef]\n84.\nYaqoob, I.; Hashem, I.A.T.; Mehmood,\
    \ Y.; Gani, A.; Mokhtar, S.; Guizani, S. Enabling communication technologies for\
    \ smart cities.\nIEEE Commun. Mag. 2017, 55, 112–120. [CrossRef]\n85.\nFernandes,\
    \ R.F.; Fonseca, C.C.; Brandão, D.; Ferrari, P.; Flammini, A.; Vezzoli, A. Flexible\
    \ Wireless Sensor Network for smart\nlighting applications. In Proceedings of\
    \ the 2014 IEEE International Instrumentation and Measurement Technology Conference\n\
    (I2MTC) Proceedings, Montevideo, Uruguay, 12–15 May 2014; pp. 434–439. [CrossRef]\n\
    86.\nGupta, A.; Jha, R.K. A survey of 5G network: Architecture and emerging technologies.\
    \ IEEE Access 2015, 3, 1206–1232. [CrossRef]\n87.\nYang, C.; Liang, P.; Fu, L.;\
    \ Cui, G.; Huang, F.; Teng, F.; Bangash, Y.A. Using 5G in smart cities: A systematic\
    \ mapping study. Intell.\nSyst. Appl. 2022, 14, 200065. [CrossRef]\n88.\nGungor,\
    \ V.C.; Sahin, D.; Kocak, T.; Ergut, S.; Buccella, C.; Cecati, C.; Hancke, G.P.\
    \ Smart grid technologies: Communication\ntechnologies and standards. IEEE Trans.\
    \ Ind. Inform. 2011, 7, 529–539. [CrossRef]\n89.\nGarcía-García, L.; Jiménez,\
    \ J.M.; Abdullah, M.T.A.; Lloret, J. Wireless technologies for IoT in smart cities.\
    \ Netw. Protoc. Algorithms\n2018, 10, 23–64. [CrossRef]\n90.\nBettstetter, C.;\
    \ Vogel, H.J.; Eberspacher, J. GSM phase 2+ general packet radio service GPRS:\
    \ Architecture, protocols, and air\ninterface. IEEE Commun. Surv. 1999, 2, 2–14.\
    \ [CrossRef]\n91.\nDahlman, E.; Parkvall, S.; Skold, J. 4G: LTE/LTE-Advanced for\
    \ Mobile Broadband; Academic Press: New York, NY, USA, 2013.\n92.\nJung, W.; Kwon,\
    \ Y. Differences between LTE and 3G service customers: Business and policy implications.\
    \ Telemat. Inform. 2015,\n32, 667–680. [CrossRef]\n93.\nRinaldi, F.; Raschella,\
    \ A.; Pizzi, S. 5G NR system design: A concise survey of key features and capabilities.\
    \ Wirel. Netw. 2021, 27,\n5173–5188. [CrossRef]\n94.\nZaidi, A.A.; Baldemair,\
    \ R.; Tullberg, H.; Bjorkegren, H.; Sundstrom, L.; Medbo, J.; Kilinc, C.; Da Silva,\
    \ I. Waveform and numerology\nto support 5G services and requirements. IEEE Commun.\
    \ Magaz. 2016, 54, 90–98. [CrossRef]\n95.\nPerez-Costa, X.; Camps-Mur, D. IEEE\
    \ 802.11 E QoS and power saving features overview and analysis of combined performance.\n\
    IEEE Wirel. Commun. 2010, 17, 88–96. [CrossRef]\n96.\nSun, W.; Choi, M.; Choi,\
    \ S. IEEE 802.11ah: A long range 802.11 WLAN at sub 1 GHz. J. ICT Stand. 2013,\
    \ 1, 83–108. [CrossRef]\n97.\nMozaffariahrar, E.; Theoleyre, F.; Menth, M. A survey\
    \ of Wi-Fi 6: Technologies, advances, and challenges. Future Internet 2022,\n\
    14, 293. [CrossRef]\n98.\nKhajenasiri, I.; Estebsari, A.; Verhelst, M.; Gielen,\
    \ G. A review on Internet of Things solutions for intelligent energy control in\n\
    buildings for smart city applications. Energy Procedia 2017, 111, 770–779. [CrossRef]\n\
    99.\nCerruela García, G.; Luque Ruiz, I.; Gómez-Nieto, M.Á. State of the art,\
    \ trends and future of bluetooth low energy, near ﬁeld\ncommunication and visible\
    \ light communication in the development of smart cities. Sensors 2016, 16, 1968.\
    \ [CrossRef]\n100. Bluetooth®Wireless Technology. Available online: https://www.bluetooth.com/learn-about-bluetooth/tech-overview/\
    \ (ac-\ncessed on 22 January 2023).\n101. Faragher, R.; Harle, R. Location ﬁngerprinting\
    \ with bluetooth low energy beacons. IEEE JSAC 2015, 33, 2418–2428. [CrossRef]\n\
    102. Miorandi, D.; Zanella, A.; Pierobon, G. Performance evaluation of Bluetooth\
    \ polling schemes: An analytical approach. Mob. Netw.\nAppl. 2004, 9, 6372. [CrossRef]\n\
    103. Nikoukar, A.; Raza, S.; Poole, A.; Güne¸s, M.; Dezfouli, B. Low-power wireless\
    \ for the internet of things: Standards and applications.\nIEEE Access 2018, 6,\
    \ 67893–67926. [CrossRef]\n104. Catherwood, P.A.; Steele, D.; Little, M.; Mccomb,\
    \ S.; McLaughlin, J. A community-based IoT personalized wireless healthcare\n\
    solution trial. IEEE J. Transl. Eng. Health Med. 2018, 6, 1–13. [CrossRef]\n105.\
    \ Sharma, V.; You, I.; Pau, G.; Collotta, M.; Lim, J.D.; Kim, J.N. LoRaWAN-based\
    \ energy-efﬁcient surveillance by drones for\nintelligent transportation systems.\
    \ Energies 2018, 11, 573. [CrossRef]\n106. Jawad, H.M.; Nordin, R.; Gharghan,\
    \ S.K.; Jawad, A.M.; Ismail, M. Energy-efﬁcient wireless sensor networks for precision\n\
    agriculture: A review. Sensors 2017, 17, 1781. [CrossRef] [PubMed]\n107. Podevijn,\
    \ N.; Plets, D.; Trogh, J.; Martens, L.; Suanet, P.; Hendrikse, K.; Joseph, W.\
    \ TDoA-based outdoor positioning with tracking\nalgorithm in a public LoRa network.\
    \ Wirel. Commun. Mob. Comput. 2018, 2018, 1864209. [CrossRef]\n108. de Castro\
    \ Tomé, M.; Nardelli, P.H.; Alves, H. Long-range low-power wireless networks and\
    \ sampling strategies in electricity\nmetering. IEEE Trans. Ind. Electron. 2018,\
    \ 66, 1629–1637. [CrossRef]\n109. Haxhibeqiri, J.; De Poorter, E.; Moerman, I.;\
    \ Hoebeke, J. A survey of LoRaWAN for IoT: From technology to application. Sensors\n\
    2018, 18, 3995. [CrossRef]\n110. Adelantado, F.; Vilajosana, X.; Tuset-Peiro,\
    \ P.; Martinez, B.; Melia-Segui, J.; Watteyne, T. Understanding the limits of\
    \ LoRaWAN.\nIEEE Commun. Mag. 2017, 55, 34–40. [CrossRef]\n111. IEEE Std. 802.16-2004;\
    \ IEEE Standard for Local and Metropolitan Area Networks. Part 16: Air Interface\
    \ for Fixed Broadband\nWireless Access Systems. IEEE: Piscataway, NJ, USA, 2004.\n\
    Electronics 2023, 12, 2490\n57 of 63\n112. IEEE Std. 802.16e-2005; IEEE Standard\
    \ for Local and Metropolitan Area Networks. Part 16: Air Interface for Fixed Broadband\n\
    Wireless Access Systems. IEEE: Piscataway, NJ, USA, 2006.\n113. Vu, H.L.; Chan,\
    \ S.; Andrew, L.L. Performance analysis of best-effort service in saturated IEEE\
    \ 802.16 networks. IEEE Trans. Veh.\nTechnol. 2009, 59, 460–472. [CrossRef]\n\
    114. Pareit, D.; Lannoo, B.; Moerman, I.; Demeester, P. The history of WiMAX:\
    \ A complete survey of the evolution in certiﬁcation and\nstandardization for\
    \ IEEE 802.16 and WiMAX. IEEE Commun. Surv. Tutor. 2011, 14, 1183–1211. [CrossRef]\n\
    115. Pokhrel, S.R.; Williamson, C. Modeling compound TCP over WiFi for IoT. IEEE/ACM\
    \ Trans. Netw. 2018, 26, 864–878. [CrossRef]\n116. Sheng, Z.; Yang, S.; Yu, Y.;\
    \ Vasilakos, A.V.; McCann, J.A.; Leung, K.K. A survey on the IETF protocol suite\
    \ for the internet of\nthings: Standards, challenges, and opportunities. IEEE\
    \ Wirel. Commun. 2013, 20, 91–98. [CrossRef]\n117. Sharma, V.K.; Shukla, S.S.P.;\
    \ Singh, V. A tailored Q-Learning for routing in wireless sensor networks. In\
    \ Proceedings of the 2012\n2nd IEEE International Conference on Parallel, Distributed\
    \ and Grid Computing, Solan, India, 6–8 December 2012; pp. 663–668.\n118. Kanellopoulos,\
    \ D.; Sharma, V.K. Survey on power-aware optimization solutions for MANETs. Electronics\
    \ 2020, 9, 1129. [CrossRef]\n119. Shang, W.; Yu, Y.; Droms, R.; Zhang, L. Challenges\
    \ in IoT Networking via TCP/IP Architecture. NDN Technical Report NDN-0038.\n\
    2016. Available online: http://named-data.net/techreports.html (accessed on 1\
    \ February 2023).\n120. Iova, O.; Picco, P.; Istomin, T.; Kiraly, C. RPL: The\
    \ routing standard for the internet of things... or is it? IEEE Commun. Mag. 2016,\n\
    54, 16–22. [CrossRef]\n121. Sharma, V.K.; Kumar, M. Adaptive congestion control\
    \ scheme in mobile ad-hoc networks. Peer-Peer Netw. Appl. 2017, 10, 633–657.\n\
    [CrossRef]\n122. Sharma, V.K.; Verma, L.P.; Kumar, M. CL-ADSP: Cross-Layer adaptive\
    \ data scheduling policy in mobile ad-hoc networks. Future\nGener. Comput. Syst.\
    \ 2019, 97, 530–563. [CrossRef]\n123. Verma, L.P.; Sharma, V.K.; Kumar, M.; Kanellopoulos,\
    \ D.; Mahanti, A. DB-CMT: A new concurrent Multi-path Stream Control\nTransport\
    \ Protocol. J. Netw. Syst. Manag. 2022, 30, 67. [CrossRef]\n124. Verma, L.P.;\
    \ Sharma, V.K.; Kumar, M.; Mahanti, A. An adaptive multi-path data transfer approach\
    \ for MP-TCP. Wirel. Netw. 2022,\n28, 2185–2212. [CrossRef]\n125. ANSI/ASHRAE\
    \ Standard 135-2004; BACnet: A Data Communication Protocol for Building Automation\
    \ and Control Networks,\nStandard 135-2004. American Society of Heating Refrigeration,\
    \ and Air-Conditioning Engineers Inc.: Atlanta, GA, USA, 2004.\n126. Clark, D.D.;\
    \ Tennenhouse, D.L. Architectural considerations for a new generation of protocols.\
    \ ACM SIGCOMM Comput. Commun.\nRev. 1990, 20, 200–208. [CrossRef]\n127. Tan, K.;\
    \ Song, J.; Zhang, Q.; Sridharan, M. A compound TCP approach for high-speed and\
    \ long distance networks. In Proceedings\nof the IEEE INFOCOM 2006. 25TH IEEE\
    \ International Conference on Computer Communications, Barcelona, Spain, 23–29\n\
    April 2006. [CrossRef]\n128. Verma, L.P.; Sharma, V.K.; Kumar, M.; Kanellopoulos,\
    \ D. A novel delay-based adaptive congestion control TCP variant. Comput.\nElectr.\
    \ Eng. 2022, 101, 108076. [CrossRef]\n129. Pokhrel, S.R.; Panda, M.; Vu, H.L.;\
    \ Mandjes, M. TCP performance over Wi-Fi: Joint impact of buffer and channel losses.\
    \ IEEE\nTrans. Mob. Comput. 2015, 15, 1279–1291. [CrossRef]\n130. Pokhrel, S.R.;\
    \ Vu, H.L.; Cricenti, A.L. Adaptive admission control for IoT applications in\
    \ home WiFi networks. IEEE Trans. Mob.\nComput. 2019, 19, 2731–2742. [CrossRef]\n\
    131. Pokhrel, S.R.; Singh, S. Compound TCP performance for industry 4.0 WiFi:\
    \ A cognitive federated learning approach. IEEE Trans.\nInd. Inform. 2020, 17,\
    \ 2143–2151. [CrossRef]\n132. Qiu, T.; Chen, N.; Li, K.; Atiquzzaman, M.; Zhao,\
    \ W. How can heterogeneous internet of things build our future: A survey. IEEE\n\
    Commun. Surv. Tutor. 2018, 20, 2011–2027. [CrossRef]\n133. Kharrufa, H.; Al-Kashoash,\
    \ H.A.; Kemp, A.H. RPL-based routing protocols in IoT applications: A review.\
    \ IEEE Sens. J. 2019, 19,\n5952–5967. [CrossRef]\n134. Sharma, V.K.; Verma, L.P.;\
    \ Kumar, M. A fuzzy-based adaptive energy efﬁcient load distribution scheme in\
    \ ad-hoc networks. Int. J.\nIntell. Syst. Appl. 2018, 12, 72. [CrossRef]\n135.\
    \ Sharma, V.K.; Kumar, M. Adaptive energy efﬁcient load distribution using fuzzy\
    \ approach. Adhoc Sens. Wirel. Netw. 2017, 39,\n123–166.\n136. Reina, D.G.; Toral,\
    \ S.L.; Barrero, F.; Bessis, N.; Asimakopoulou, E. The role of ad hoc networks\
    \ in the internet of things: A case\nscenario for smart environments. In Internet\
    \ of Things and Inter-Cooperative Computational Technologies for Collective Intelligence;\n\
    Springer: Berlin/Heidelberg, Germany, 2013; pp. 89–113. [CrossRef]\n137. Vazifehdan,\
    \ J.; Prasad, R.V.; Niemegeers, I. Energy-efﬁcient reliable routing considering\
    \ residual energy in wireless ad hoc\nnetworks. IEEE Trans. Mob. Comput. 2013,\
    \ 13, 434–447. [CrossRef]\n138. Sharma, V.K.; Kumar, M. Adaptive load distribution\
    \ approach based on congestion control scheme in ad-hoc networks. Int. J.\nElectron.\
    \ 2019, 106, 48–68. [CrossRef]\n139. Papandriopoulos, J.; Dey, S.; Evans, J. Optimal\
    \ and distributed protocols for cross-layer design of physical and transport layers\
    \ in\nMANETs. IEEE/ACM Trans. Netw. 2008, 16, 1392–1405. [CrossRef]\n140. Sharma,\
    \ V.K.; Verma, L.P.; Kumar, M.; Naha, R.K.; Mahanti, A. A-CAFDSP: An adaptive-congestion\
    \ aware Fibonacci sequence\nbased data scheduling policy. Comput. Commun. 2020,\
    \ 158, 141–165. [CrossRef]\nElectronics 2023, 12, 2490\n58 of 63\n141. Tian, Y.;\
    \ Hou, R. An improved AOMDV routing protocol for internet of things. In Proceedings\
    \ of the 2010 International Conference\non Computational Intelligence and Software\
    \ Engineering, Wuhan, China, 10–12 December 2010; pp. 1–4. [CrossRef]\n142. Tseng,\
    \ C.H. Multipath load balancing routing for Internet of things. J. Sens. 2016,\
    \ 2016, 4250746. [CrossRef]\n143. Pan, M.S.; Tseng, Y.C. ZigBee and their applications.\
    \ In Sensor Networks and Conﬁguration: Fundamentals, Standards, Platforms, and\n\
    Applications; Springer: Berlin/Heidelberg, Germany, 2007; pp. 349–368.\n144. Sun,\
    \ J.; Wang, Z.; Wang, H.; Zhang, X. Research on routing protocols based on ZigBee\
    \ network. In Proceedings of the Third\nInternational Conference on Intelligent\
    \ Information Hiding and Multimedia Signal Processing (IIH-MSP 2007), Kaohsiung,\n\
    Taiwan, 26–28 November 2007; Volume 1, pp. 639–642. [CrossRef]\n145. Fielding,\
    \ R.; Gettys, J.; Mogul, J.; Frystyk, H.; Masinter, L.; Leach, P.; Lee, B. Hypertext\
    \ Transfer Protocol—HTTP/1.1. 1999.\nAvailable online: https://www.w3.org/Protocols/rfc2616/rfc2616.html\
    \ (accessed on 2 February 2023).\n146. Webber, J.; Parastatidis, S.; Robinson,\
    \ I. REST in Practice: Hypermedia and Systems Architecture; O’Reilly Media, Inc.:\
    \ Sebastopol,\nCA, USA, 2010.\n147. Dizdarevic, J.; Caprio, F.; Jukan, A.; Masip-Bruin,\
    \ X. A survey of communication protocols for Internet-of-Things and related\n\
    challenges of fog and cloud computing integration. ACM Comput. Surv. 2019, 51,\
    \ 1–29. [CrossRef]\n148. Babovic, Z.B.; Protic, J.; Milutinovic, V. Web performance\
    \ evaluation for Internet of Things applications. IEEE Access 2016, 4,\n6974–6992.\
    \ [CrossRef]\n149. Bormann, C.; Castellani, A.P.; Shelby, Z. CoAP: An application\
    \ protocol for billions of tiny internet nodes. IEEE Internet Comput.\n2012, 16,\
    \ 62–67. [CrossRef]\n150. OASIS. Message Queuing Telemetry Transport. Available\
    \ online: http://mqtt.org (accessed on 10 February 2023).\n151. OPC Foundation.\
    \ OPC Uniﬁed Architecture Speciﬁcation. 2023. Available online: https://opcfoundation.org\
    \ (accessed on 10\nFebruary 2023).\n152. XMPP Standards Foundation. Extensible\
    \ Messaging and Presence Protocol. 2021. Available online: https://xmpp.org (accessed\n\
    on 10 February 2023).\n153. OASIS. OASIS Advanced Message Queuing Protocol (AMQP)\
    \ Version 1.0—OASIS Standard; OASIS: Burlington, MA, USA, 2012.\n154. Pardo-Castellote,\
    \ G.; Innovations, R.T.; Chairman, D.D.S. OMG Data Distribution Service: Real-time\
    \ publish/subscribe becomes\na standard. RTC Mag. 2005, 14, 1–3. Available online:\
    \ https://www.rti.com/hubfs/docs/reprint_rti.pdf (accessed on 10 February\n2023).\n\
    155. Glaroudis, D.; Iossiﬁdes, A.; Chatzimisios, P. Survey, comparison and research\
    \ challenges of IoT application protocols for smart\nfarming. Comput. Netw. 2020,\
    \ 168, 107037. [CrossRef]\n156. Centenaro, M.; Vangelista, L.; Zanella, A.; Zorzi,\
    \ M. Long-range communications in unlicensed bands: The rising stars in the IoT\n\
    and smart city scenarios. IEEE Wirel. Commun. 2016, 23, 60–67. [CrossRef]\n157.\
    \ Leccese, F.; Cagnetti, M.; Trinca, D. A smart city application: A fully controlled\
    \ street lighting isle based on Raspberry-Pi card, a\nZigBee sensor network and\
    \ WiMAX. Sensors 2014, 14, 24408–24424. [CrossRef]\n158. Sanchez, L.; Muñoz, L.;\
    \ Galache, J.A.; Sotres, P.; Santana, J.R.; Gutierrez, V.; Ramdhany, R.; Gluhak,\
    \ A.; Krco, S.;\nTheodoridis, E.; et al. SmartSantander: IoT experimentation over\
    \ a smart city testbed. Comput. Netw. 2014, 61, 217–238.\n[CrossRef]\n159. Vilajosana,\
    \ I.; Dohler, M. Machine-to-Machine (M2M) communications for smart cities. Mach.-Mach.\
    \ (M2M) Commun. 2015,\n355–373. [CrossRef]\n160. Huang, J.; Xing, C.C.; Shin,\
    \ S.Y.; Hou, F.; Hsu, C.H. Optimizing M2M communications and quality of services\
    \ in the IoT for\nsustainable smart cities. IEEE Trans. Sustain. Comput. 2017,\
    \ 3, 4–15. [CrossRef]\n161. Silva, B.N.; Khan, M.; Han, K. Towards sustainable\
    \ smart cities: A review of trends, architectures, components, and open\nchallenges\
    \ in smart cities. Sustain. Cities Soc. 2018, 38, 697–713. [CrossRef]\n162. Jin,\
    \ J.; Gubbi, J.; Luo, T.; Palaniswami, M. Network architecture and QoS issues\
    \ in the internet of things for a smart city. In\nProceedings of the 2012 International\
    \ Symposium on Communications and Information Technologies (ISCIT), Gold Coast,\n\
    Australia, 2–5 October 2012; pp. 956–961. [CrossRef]\n163. Marques, P.; Manfroi,\
    \ D.; Deitos, E.; Cegoni, J.; Castilhos, R.; Rochol, J.; Pignaton, E.; Kunst,\
    \ R. An IoT-based smart cities\ninfrastructure architecture applied to a waste\
    \ management scenario. Ad Hoc Netw. 2019, 87, 200–208. [CrossRef]\n164. Gaur,\
    \ A.; Scotney, B.; Parr, G.; McClean, S. Smart city architecture and its applications\
    \ based on IoT. Procedia Comput. Sci 2015, 52,\n1089–1094. [CrossRef]\n165. Gheisari,\
    \ M.; Pham, Q.V.; Alazab, M.; Zhang, X.; Fernández-Campusano, C.; Srivastava,\
    \ G. ECA: An edge computing architecture\nfor privacy-preserving in IoT-based\
    \ smart city. IEEE Access 2019, 7, 155779–155786. [CrossRef]\n166. Saadeh, M.;\
    \ Sleit, A.; Sabri, K.E.; Almobaideen, W. Hierarchical architecture and protocol\
    \ for mobile object authentication in the\ncontext of IoT smart cities. J. Netw.\
    \ Comput. Appl. 2018, 121, 1–19. [CrossRef]\n167. Naranjo, P.G.V.; Pooranian,\
    \ Z.; Shojafar, M.; Conti, M.; Buyya, R. FOCAN: A Fog-supported smart city network\
    \ architecture for\nmanagement of applications in the Internet of Everything environments.\
    \ J. Parallel Distrib. Comput. 2019, 132, 274–283. [CrossRef]\n168. Ortiz, S.\
    \ Software-Deﬁned Networking: On the verge of a breakthrough? Computer 2013, 46,\
    \ 10–12. [CrossRef]\n169. AlZoman, R.; Alenazi, M.J. Exploiting SDN to improve\
    \ QoS of smart city networks against link failures. In Proceedings of the\nSeventh\
    \ International Conference on Software Deﬁned Systems (SDS), Paris, France, 20–23\
    \ April 2020; pp. 100–106. [CrossRef]\nElectronics 2023, 12, 2490\n59 of 63\n\
    170. Holik, F. Meeting smart city latency demands with SDN. In Intelligent Information\
    \ and Database Systems: Recent Developments.\nACIIDS 2019. Studies in Computational\
    \ Intelligence; Huk, M., Maleszka, M., Szczerbicki, E., Eds.; Springer: Cham,\
    \ Switzerland,\nVolume 830. [CrossRef]\n171. Jazaeri, S.S.; Jabbehdari, S.; Asghari,\
    \ P.; Haj Seyyed Javadi, H. Edge computing in SDN-IoT networks: A systematic review\
    \ of\nissues, challenges and solutions. Clust. Comput. 2021, 24, 3187–3228. [CrossRef]\n\
    172. Liu, J.; Li, Y.; Chen, M.; Dong, W.; Jin, D. Software-deﬁned internet of\
    \ things for smart urban sensing. IEEE Commun. Mag. 2015,\n53, 55–63. [CrossRef]\n\
    173. Bi, Y.; Lin, C.; Zhou, H.; Yang, P.; Shen, X.; Zhao, H. Time-constrained\
    \ big data transfer for SDN-enabled smart city. IEEE Commun.\nMag. 2017, 55, 44–50.\
    \ [CrossRef]\n174. Nguyen, T.G.; Phan, T.V.; Nguyen, B.T.; So-In, C.; Baig, Z.A.;\
    \ Sanguanpong, S. Search: A collaborative and intelligent NIDs\narchitecture for\
    \ SDN-based cloud IoT networks. IEEE Access 2019, 7, 107678–107694. [CrossRef]\n\
    175. Bhushan, B.; Khamparia, A.; Sagayam, K.M.; Sharma, S.K.; Ahad, M.A.; Debnath,\
    \ N.C. Blockchain for smart cities: A review of\narchitectures, integration trends\
    \ and future research directions. Sustain. Cities Soc. 2020, 61, 102360. [CrossRef]\n\
    176. Sharma, P.K.; Park, J.H. Blockchain based hybrid network architecture for\
    \ the smart city. Future Gener. Comput. Syst. 2018, 86,\n650–655. [CrossRef]\n\
    177. Makhdoom, I.; Zhou, I.; Abolhasan, M.; Lipman, J.; Ni, W. PrivySharing: A\
    \ blockchain-based framework for privacy-preserving\nand secure data sharing in\
    \ smart cities. Comput. Secur. 2020, 88, 101653. [CrossRef]\n178. Islam, M.J.;\
    \ Rahman, A.; Kabir, S.; Karim, M.R.; Acharjee, U.K.; Nasir, M.K.; Band, S.S.;\
    \ Sookhak, M.; Wu, S. Blockchain-SDN-based\nenergy-aware and distributed secure\
    \ architecture for IoT in smart cities. IEEE Internet Things J. 2021, 9, 3850–3864.\
    \ [CrossRef]\n179. Tuballa, M.L.; Abundo, M.L. A review of the development of\
    \ Smart Grid technologies. Renew. Sustain. Energy Rev. 2016, 59,\n710–725. [CrossRef]\n\
    180. Demertzis, K.; Tsiknas, K.; Taketzis, D.; Skoutas, D.N.; Skianis, C.; Iliadis,\
    \ L.; Zoiros, K.E. Communication network standards for\nsmart grid infrastructures.\
    \ Network 2021, 1, 132–145. [CrossRef]\n181. Bosisio, A.; Berizzi, A.; Morotti,\
    \ A.; Pegoiani, A.; Greco, B.; Iannarelli, G. IEC 61850-based smart automation\
    \ system logic to\nimprove reliability indices in distribution networks. In Proceedings\
    \ of the 2019 IEEE 8th International Conference on Advanced\nPower System Automation\
    \ and Protection (APAP), Florence, Italy, 18–20 October 2019; pp. 1219–1222.\n\
    182. Girela-López, F.; López-Jiménez, J.; Jiménez-López, M.; Rodríguez, R.; Ros,\
    \ E.; Díaz, J. IEEE 1588 high accuracy default proﬁle:\nApplications and challenges.\
    \ IEEE Access 2020, 8, 45211–45220. [CrossRef]\n183. Abdrabou, A. A wireless communication\
    \ architecture for smart grid distribution networks. IEEE Syst. J. 2014, 10, 251–261.\n\
    [CrossRef]\n184. Demir, K.; Germanus, D.; Suri, N. Robust QoS-aware communication\
    \ in the smart distribution grid. Peer-Peer Netw. Appl. 2017,\n10, 193–207. [CrossRef]\n\
    185. Rehmani, M.H.; Davy, A.; Jennings, B.; Assi, C. Software deﬁned networks-based\
    \ smart grid communication: A comprehensive\nsurvey. IEEE Commun. Surv. Tutor.\
    \ 2019, 21, 2637–2670. [CrossRef]\n186. Alam, S.; Sohail, M.F.; Ghauri, S.A.;\
    \ Qureshi, I.M.; Aqdas, N. Cognitive radio based smart grid communication network.\
    \ Renew.\nSustain. Energy Rev. 2017, 72, 535–548. [CrossRef]\n187. Molokomme,\
    \ D.N.; Chabalala, C.S.; Bokoro, P.N. A review of cognitive radio smart grid communication\
    \ infrastructure systems.\nEnergies 2020, 13, 3245. [CrossRef]\n188. Hu, S.; Chen,\
    \ X.; Ni, W.; Wang, X.; Hossain, E. Modeling and analysis of energy harvesting\
    \ and smart grid-powered wireless\ncommunication networks: A contemporary survey.\
    \ IEEE Trans. Green Commun. Netw. 2020, 4, 461–496. [CrossRef]\n189. Saleem, Y.;\
    \ Crespi, N.; Rehmani, M.H.; Copeland, R. Internet of things-aided smart grid:\
    \ Technologies, architectures, applications,\nprototypes, and future research\
    \ directions. IEEE Access 2019, 7, 62962–63003. [CrossRef]\n190. Younus, M.U.;\
    \ ul Islam, S.; Ali, I.; Khan, S.; Khan, M.K. A survey on software deﬁned networking\
    \ enabled smart buildings:\nArchitecture, challenges and use cases. J. Netw. Comput.\
    \ Appl. 2019, 137, 62–77. [CrossRef]\n191. Minoli, D.; Sohraby, K.; Occhiogrosso,\
    \ B. IoT considerations, requirements, and architectures for smart buildings—Energy\n\
    optimization and next-generation building management systems. IEEE Internet Things\
    \ J. 2017, 4, 269–283. [CrossRef]\n192. Jia, M.; Komeily, A.; Wang, Y.; Srinivasan,\
    \ R.S. Adopting Internet of Things for the development of smart buildings: A review\
    \ of\nenabling technologies and applications. Autom. Constr. 2019, 101, 111–126.\
    \ [CrossRef]\n193. Kumar, A.; Singh, A.; Kumar, A.; Singh, M.K.; Mahanta, P.;\
    \ Mukhopadhyay, S.C. Sensing technologies for monitoring intelligent\nbuildings:\
    \ A review. IEEE Sens. J. 2018, 18, 4847–4860. [CrossRef]\n194. Silva, B.N.; Khan,\
    \ M.; Han, K. Integration of Big Data analytics embedded smart city architecture\
    \ with RESTful web of things for\nefﬁcient service provision and energy management.\
    \ Future Gener. Comput. Syst. 2020, 107, 975–987. [CrossRef]\n195. Kumar, A.;\
    \ Srivastava, V.; Singh, M.K.; Hancke, G.P. Current status of the IEEE 1451 standard-based\
    \ sensor applications. IEEE\nSens. J. 2014, 15, 2505–2513. [CrossRef]\n196. Kumar,\
    \ A.; Hancke, G.P. Energy efﬁcient environment monitoring system based on the\
    \ IEEE 802.15. 4 standard for low cost\nrequirements. IEEE Sens. J. 2014, 14,\
    \ 2557–2566. [CrossRef]\n197. du Plessis, R.; Kumar, A.; Hancke, G.P.; Silva,\
    \ B.J. A wireless system for indoor air quality monitoring. In Proceedings of\n\
    the IECON 2016—42nd Annual Conference of the IEEE Industrial Electronics Society,\
    \ Florence, Italy, 23–26 October 2016;\npp. 5409–5414.\nElectronics 2023, 12,\
    \ 2490\n60 of 63\n198. Kularatna, N.; Sudantha, B.H. An environmental air pollution\
    \ monitoring system based on the IEEE 1451 standard for low cost\nrequirements.\
    \ IEEE Sens. J. 2008, 8, 415–422. [CrossRef]\n199. Gagliardi, G.; Lupia, M.; Cario,\
    \ G.; Tedesco, F.; Cicchello Gaccio, F.; Lo Scudo, F.; Casavola, A. Advanced adaptive\
    \ street lighting\nsystems for smart cities. Smart Cities 2020, 3, 1495–1512.\
    \ [CrossRef]\n200. Warmerdam, K.; Pandharipande, A. Location data analytics in\
    \ wireless lighting systems. IEEE Sens. J. 2015, 16, 2683–2690.\n[CrossRef]\n\
    201. Tiller, D.K.; Guo, X.; Henze, G.P.; Waters, C.E. Validating the application\
    \ of occupancy sensor networks for lighting control. Light.\nRes. Technol. 2010,\
    \ 42, 399–414. [CrossRef]\n202. Byun, J.; Hong, I.; Lee, B.; Park, S. Intelligent\
    \ household LED lighting system considering energy efﬁciency and user satisfaction.\n\
    IEEE Trans. Consum. Electron. 2013, 59, 70–76. [CrossRef]\n203. Higuera, J.; Hertog,\
    \ W.; Perálvarez, M.; Polo, J.; Carreras, J. Smart lighting system ISO/IEC/IEEE\
    \ 21451 compatible. IEEE Sens. J.\n2015, 15, 2595–2602. [CrossRef]\n204. Tan,\
    \ Y.K.; Huynh, T.P.; Wang, Z. Smart personal sensor network control for energy\
    \ saving in DC grid powered LED lighting\nsystem. IEEE Trans. Smart Grid 2012,\
    \ 4, 669–676. [CrossRef]\n205. Chew, I.; Karunatilaka, D.; Tan, C.P.; Kalavally,\
    \ V. Smart lighting: The way forward? Reviewing the past to shape the future.\n\
    Energy Build. 2017, 149, 180–191. [CrossRef]\n206. Füchtenhans, M.; Grosse, E.H.;\
    \ Glock, C.H. Smart lighting systems: State-of-the-art and potential applications\
    \ in warehouse order\npicking. Int. J. Prod. Res. 2021, 59, 3817–3839. [CrossRef]\n\
    207. Kumar, A.; Hancke, G.P. An energy-efﬁcient smart comfort sensing system based\
    \ on the IEEE 1451 standard for green buildings.\nIEEE Sens. J. 2014, 14, 4245–4252.\
    \ [CrossRef]\n208. Kavalionak, H.; Carlini, E. An HVAC regulation architecture\
    \ for smart building based on weather forecast. In Proceedings of the\nEconomics\
    \ of Grids, Clouds, Systems, and Services: 15th International Conference, GECON\
    \ 2018, Pisa, Italy, 18–20 September\n2018; Proceedings 15. Springer International\
    \ Publishing: Berlin/Heidelberg, Germany, 2019; pp. 92–103.\n209. Hao, H.; Lin,\
    \ Y.; Kowli, A.S.; Barooah, P.; Meyn, S. Ancillary service to the grid through\
    \ control of fans in commercial building\nHVAC systems. IEEE Trans. Smart Grid\
    \ 2014, 5, 2066–2074. [CrossRef]\n210. Sun, B.; Luh, P.B.; Jia, Q.S.; Jiang, Z.;\
    \ Wang, F.; Song, C. Building energy management: Integrated control of active\
    \ and passive\nheating, cooling, lighting, shading, and ventilation systems. IEEE\
    \ Trans. Autom. Sci. Eng. 2012, 10, 588–602. [CrossRef]\n211. Lin, Y.; Barooah,\
    \ P.; Meyn, S.; Middelkoop, T. Experimental evaluation of frequency regulation\
    \ from commercial building HVAC\nsystems. IEEE Trans. Smart Grid 2015, 6, 776–783.\
    \ [CrossRef]\n212. Ma, Y.; Matuško, J.; Borrelli, F. Stochastic model predictive\
    \ control for building HVAC systems: Complexity and conservatism.\nIEEE Trans.\
    \ Control Syst. Technol. 2014, 23, 101–116. [CrossRef]\n213. Javed, A.; Larijani,\
    \ H.; Ahmadinia, A.; Emmanuel, R.; Mannion, M.; Gibson, D. Design and implementation\
    \ of a cloud enabled\nrandom neural network-based decentralized smart controller\
    \ with intelligent sensor nodes for HVAC. IEEE Internet Things J.\n2016, 4, 393–403.\
    \ [CrossRef]\n214. Kumar, A.; Kumar, A.; Singh, A. Energy efﬁcient and low cost\
    \ air quality sensor for smart buildings. In Proceedings of the\n2017 3rd International\
    \ Conference on Computational Intelligence & Communication Technology (CICT),\
    \ Ghaziabad, India, 9–10\nFebruary 2017; pp. 1–4.\n215. Kim, J.Y.; Chu, C.H.;\
    \ Shin, S.M. ISSAQ: An integrated sensing systems for real-time indoor air quality\
    \ monitoring. IEEE Sens. J.\n2014, 14, 4230–4244. [CrossRef]\n216. Lozano, J.;\
    \ Suárez, J.I.; Arroyo, P.; Ordiales, J.M.; Alvarez, F. Wireless sensor network\
    \ for indoor air quality monitoring. Chem.\nEng. Trans. 2012, 30, 231–235.\n217.\
    \ Bhattacharya, S.; Sridevi, S.; Pitchiah, R. Indoor air quality monitoring using\
    \ wireless sensor network. In Proceedings of the 2012\nSixth International Conference\
    \ on Sensing Technology (ICST), Kolkata, India, 18–21 December 2012; pp. 422–427.\n\
    218. Kim, D.; Yoon, Y.; Lee, J.; Mago, P.J.; Lee, K.; Cho, H. Design and implementation\
    \ of smart buildings: A review of current research\ntrend. Energies 2022, 15,\
    \ 4278. [CrossRef]\n219. Metallidou, C.K.; Psannis, K.E.; Egyptiadou, E.A. Energy\
    \ efﬁciency in smart buildings: IoT approaches. IEEE Access 2020, 8,\n63679–63699.\
    \ [CrossRef]\n220. Mariano-Hernández, D.; Hernández-Callejo, L.; Zorita-Lamadrid,\
    \ A.; Duque-Pérez, O.; García, F.S. A review of strategies for\nbuilding energy\
    \ management system: Model predictive control, demand side management, optimization,\
    \ and fault detect &\ndiagnosis. J. Build. Eng. 2021, 33, 101692. [CrossRef]\n\
    221. Moudgil, V.; Hewage, K.; Hussain, S.A.; Sadiq, R. Integration of IoT in building\
    \ energy infrastructure: A critical review on\nchallenges and solutions. Renew.\
    \ Sustain. Energy Rev. 2023, 174, 113121. [CrossRef]\n222. The Smart Water Networks\
    \ Forum What Is a Smart Water Network? Available online: https://swan-forum.com/smart-water-\n\
    network/ (accessed on 1 October 2022).\n223. Nguyen, K.A.; Stewart, R.A.; Zhang,\
    \ H.; Sahin, O.; Siriwardene, N. Re-engineering traditional urban water management\
    \ practices\nwith smart metering and informatics. Environ. Model. Softw. 2018,\
    \ 101, 256–267. [CrossRef]\n224. Chen, Y.; Han, D. Water quality monitoring in\
    \ smart city: A pilot project. Autom. Constr. 2018, 89, 307–316. [CrossRef]\n\
    225. Kamienski, C.; Soininen, J.P.; Taumberger, M.; Dantas, R.; Toscano, A.; Cinotti,\
    \ T.S.; Maia, R.F.; Neto, A.T. Smart water management\nplatform: IoT-based precision\
    \ irrigation for agriculture. Sensors 2019, 19, 276. [CrossRef]\nElectronics 2023,\
    \ 12, 2490\n61 of 63\n226. Ye, Y.; Liang, L.; Zhao, H.; Jiang, Y. The System Architecture\
    \ of Smart Water Grid for Water Security. Procedia Eng. 2016, 154,\n361–368. [CrossRef]\n\
    227. Alvisi, S.; Casellato, F.; Franchini, M.; Govoni, M.; Luciani, C.; Poltronieri,\
    \ F.; Riberto, G.; Stefanelli, C.; Tortonesi, M. Wireless\nmiddleware solutions\
    \ for smart water metering. Sensors 2019, 19, 1853. [CrossRef] [PubMed]\n228.\
    \ Li, J.; Yang, X.; Sitzenfrei, R. Rethinking the framework of smart water system:\
    \ A review. Water 2020, 12, 412. [CrossRef]\n229. Dong, X.; Lin, H.; Tan, R.;\
    \ Iyer, R.K.; Kalbarczyk, Z. Software-Deﬁned Networking for Smart Grid Resilience:\
    \ Opportunities and\nChallenges. In Proceedings of the CPSS 2015—1st ACM Workshop\
    \ on Cyber-Physical System Security, Part of ASIACCS 2015,\nDenver, CO, USA, 16\
    \ October 2015; pp. 61–68. [CrossRef]\n230. Luciani, C.; Casellato, F.; Alvisi,\
    \ S.; Franchini, M. From Water Consumption Smart Metering to Leakage Characterization\
    \ at\nDistrict and User Level: The GST4Water Project. Proceedings 2018, 2, 675.\
    \ [CrossRef]\n231. Panagiotakopoulos, T.; Vlachos, D.P.; Bakalakos, T.V.; Kanavos,\
    \ A.; Kameas, A. A FIWARE-based IoT framework for smart\nwater distribution management.\
    \ In Proceedings of the 12th International Conference on Information, Intelligence,\
    \ Systems &\nApplications (IISA), Chania Crete, Greece, 12–14 July 2021; pp. 1–6.\
    \ [CrossRef]\n232. Amaxilatis, D.; Chatzigiannakis, I.; Tselios, C.; Tsironis,\
    \ N.; Niakas, N.; Papadogeorgos, S. A smart water metering deployment\nbased on\
    \ the fog computing paradigm. Appl. Sci. 2020, 10, 1965. [CrossRef]\n233. Kulkarni,\
    \ P.; Farnham, T. Smart city wireless connectivity considerations and cost analysis:\
    \ Lessons learnt from smart water case\nstudies. IEEE Access 2016, 4, 660–672.\
    \ [CrossRef]\n234. Watson, J.P.; Greenberg, H.J.; Hart, W.E. A multiple-objective\
    \ analysis of sensor placement optimization in water networks. In\nCritical Transitions\
    \ in Water and Environmental Resources Management; American Society of Civil Engineers:\
    \ Reston, VA, USA, 2004;\npp. 1–10.\n235. Berry, J.W.; Fleischer, L.; Hart, W.E.;\
    \ Phillips, C.A.; Watson, J.P. Sensor placement in municipal water networks. J.\
    \ Water Resour.\nPlan. Manag. 2005, 131, 237–243. [CrossRef]\n236. Liu, S.; Liu,\
    \ W.; Chen, J.; Wang, Q. Optimal locations of monitoring stations in water distribution\
    \ systems under multiple demand\npatterns: A ﬂaw of demand coverage method and\
    \ modiﬁcation. Front. Environ. Sci. Eng. 2012, 6, 204–212. [CrossRef]\n237. Whittle,\
    \ A.J.; Girod, L.; Preis, A.; Allen, M.; Lim, H.B.; Iqbal, M.; Srirangarajan,\
    \ S.; Fu, C.; Wong, K.J.; Goldsmith, D. WATER-\nWISE@SG: A testbed for continuous\
    \ monitoring of the water distribution system in Singapore. In Water Distribution\
    \ Systems\nAnalysis; American Society of Civil Engineers: Reston, VA, USA, 2010;\
    \ pp. 1362–1378.\n238. Whittle, A.; Allen, M.; Preis, A.; Iqbal, M. Sensor networks\
    \ for monitoring and control of water distribution systems. In\nProceedings of\
    \ the 6th International Conference on Structural Health Monitoring of Intelligent\
    \ Infrastructure, Hong Kong, China,\n9–11 December 2013; pp. 9–11.\n239. Patil,\
    \ K.; Ghosh, A.; Das, D.; Vuppala, S.K. IWCMSE: Integrated water consumption monitoring\
    \ solution for enterprises. In\nProceedings of the ACM International Conference\
    \ on Interdisciplinary Advances in Applied Computing, Amritapuri, India,\n10–14\
    \ October 2014; pp. 1–8. [CrossRef]\n240. Yoon, S.; Ye, W.; Heidemann, J.; Littleﬁeld,\
    \ B.; Shahabi, C. SWATS: Wireless sensor networks for steamﬂood and waterﬂood\n\
    pipeline monitoring. IEEE Netw. 2011, 25, 50–56. [CrossRef]\n241. Ang, L.M.; Seng,\
    \ K.P.; Ijemaru, G.K.; Zungeru, A.M. Deployment of IoV for smart cities: Applications,\
    \ architecture, and challenges.\nIEEE Access 2018, 7, 6473–6492. [CrossRef]\n\
    242. Liu, K.; Xu, X.; Chen, M.; Liu, B.; Wu, L.; Lee, V.C. A hierarchical architecture\
    \ for the future internet of vehicles. IEEE Commun.\nMag. 2019, 57, 41–47. [CrossRef]\n\
    243. Chen, M.; Tian, Y.; Fortino, G.; Zhang, J.; Humar, I. Cognitive internet\
    \ of vehicles. Comput. Commun. 2018, 120, 58–70. [CrossRef]\n244. Karim, A. Development\
    \ of secure Internet of Vehicle Things (IoVT) for smart transportation system.\
    \ Comput. Electr. Eng. 2022,\n102, 108101. [CrossRef]\n245. Contreras-Castillo,\
    \ J.; Zeadally, S.; Guerrero-Ibañez, J.A. Internet of vehicles: Architecture,\
    \ protocols, and security. IEEE Internet\nThings J. 2017, 5, 3701–3709. [CrossRef]\n\
    246. Ji, B.; Zhang, X.; Mumtaz, S.; Han, C.; Li, C.; Wen, H.; Wang, D. Survey\
    \ on the internet of vehicles: Network architectures and\napplications. IEEE Commun.\
    \ Stand. Mag. 2020, 4, 34–41. [CrossRef]\n247. Sharma, P.K.; Moon, S.Y.; Park,\
    \ J.H. Block-VN: A distributed blockchain based vehicular network architecture\
    \ in smart city. J. Inf.\nProcess. Syst. 2017, 13, 184–195. [CrossRef]\n248. Jan,\
    \ B.; Farman, H.; Khan, M.; Talha, M.; Din, I.U. Designing a smart transportation\
    \ system: An internet of things and big data\napproach. IEEE Wirel. Commun. 2019,\
    \ 26, 73–79. [CrossRef]\n249. Saxena, D.; Raychoudhury, V.; Suri, N.; Becker,\
    \ C.; Cao, J. Named Data Networking: A survey. Comput. Sci. Rev. 2016, 19, 15–55.\n\
    [CrossRef]\n250. Kaiwartya, O.; Abdullah, A.H.; Cao, Y.; Altameem, A.; Prasad,\
    \ M.; Lin, C.T.; Liu, X. Internet of vehicles: Motivation, layered\narchitecture,\
    \ network model, challenges, and future aspects. IEEE Access 2016, 4, 5356–5373.\
    \ [CrossRef]\n251. Kerrache, C.A.; Lagraa, N.; Hussain, R.; Ahmed, S.H.; Benslimane,\
    \ A.; Calafate, C.T.; Cano, J.-C.; Vegni, A.M. TACASHI:\nTrust-aware communication\
    \ architecture for social internet of vehicles. IEEE Internet Things J. 2019,\
    \ 6, 5870–5877. [CrossRef]\n252. Anastasiou, E.; Manika, S.; Ragazou, K.; Katsios,\
    \ I. Territorial and human geography challenges: How can Smart villages support\n\
    rural development and population inclusion? Soc. Sci. 2021, 10, 193. [CrossRef]\n\
    253. Komorowski, Ł.; Stanny, M. Smart villages: Where can they happen? Land 2020,\
    \ 9, 151.\nElectronics 2023, 12, 2490\n62 of 63\n254. Cambra-Fierro, J.J.; Pérez,\
    \ L. (Re) thinking smart in rural contexts: A multi-country study. Growth Chang.\
    \ 2022, 53, 868–889.\n[CrossRef]\n255. European Network for Rural Development,\
    \ Smart Villages. Available online: https://enrd.ec.europa.eu/smart-and-competitive-\n\
    rural-areas/smart-villages_en (accessed on 10 June 2022).\n256. IEEE Smart Village.\
    \ Available online: http://ieee-smart-village.org/ (accessed on 10 June 2022).\n\
    257. Malik, P.K.; Singh, R.; Gehlot, A.; Akram, S.V.; Das, P.K. Village 4.0: Digitalization\
    \ of village with smart internet of things\ntechnologies. Comput. Ind. Eng. 2022,\
    \ 165, 107938. [CrossRef]\n258. Shrestha, S.; Drozdenko, B. Smart Rural Framework\
    \ using IoT devices and Cloud computing. In Proceedings of the 2019 IEEE\nGreen\
    \ Technologies Conference (GreenTech), Lafayette, LA, USA, 3–6 April 2019. [CrossRef]\n\
    259. Monzon Baeza, V.; Alvarez Marban, M. High Altitude Platform Stations Aided\
    \ Cloud-Computing Solution for Rural-Environment\nIoT Applications. Comput. Netw.\
    \ Commun. 2022, 1, 85–98.\n260. Aljuhani, A.; Kumar, P.; Kumar, R.; Jolfaei, A.;\
    \ Islam, A.N. Fog intelligence for secure smart villages: Architecture, and future\n\
    challenges. IEEE Consum. Electron. Mag. 2022, 8, 1–9. [CrossRef]\n261. Rohan,\
    \ R.; Pal, D.; Watanapa, B.; Funilkul, S. Emerging Paradigm of IoT Enabled Smart\
    \ Villages. In Proceedings of the 2022 IEEE\nInternational Conference on Consumer\
    \ Electronics (ICCE), Las Vegas, NV, USA, 7–9 January 2022.\n262. Han, B.; Gopalakrishnan,\
    \ V.; Ji, L.; Lee, S. Network function virtualization: Challenges and opportunities\
    \ for innovations. IEEE\nCommun. Mag. 2015, 53, 90–97. [CrossRef]\n263. Li, Y.;\
    \ Chen, M. Software-deﬁned network function virtualization: A survey. IEEE Access\
    \ 2015, 3, 2542–2553. [CrossRef]\n264. Sinh, D.; Le, L.V.; Lin, B.S.P.; Tung,\
    \ L.P. SDN/NFV—A new approach of deploying network infrastructure for IoT. In\
    \ Proceedings\nof the 2018 27th Wireless and Optical Communication Conference\
    \ (WOCC), Hualien, Taiwan, 30 April–1 May 2018; pp. 1–5.\n265. Mukherjee, B.K.;\
    \ Pappu, S.I.; Islam, M.; Acharjee, U.K. An SDN based distributed IoT network\
    \ with NFV implementation for\nsmart cities. In Proceedings of the International\
    \ Conference on Cyber Security and Computer Science, Dhaka, Bangladesh, 15–16\n\
    February 2020; Springer: Cham, Switzerland; pp. 539–552. [CrossRef]\n266. Khan,\
    \ A.A.; Rehmani, M.H.; Rachedi, A. Cognitive-radio-based Internet of Things: Applications,\
    \ architectures, spectrum related\nfunctionalities, and future research directions.\
    \ IEEE Wirel. Commun. 2017, 24, 17–25. [CrossRef]\n267. Pranaya, Y.C.; Himarish,\
    \ M.N.; Baig, M.N.; Ahmed, M.R. Cognitive architecture based smart grids for smart\
    \ cities. In Proceedings\nof the 3rd International Conference on Power Generation\
    \ Systems and Renewable Energy Technologies (PGSRET 2017), Johor\nBahru, Malaysia,\
    \ 4–6 April 2017; pp. 44–49. [CrossRef]\n268. Gai, K.; Xu, K.; Lu, Z.; Qiu, M.;\
    \ Zhu, L. Fusion of cognitive wireless networks and edge computing. IEEE Wirel.\
    \ Commun. 2019, 26,\n69–75. [CrossRef]\n269. Scrugli, M.A.; Loi, D.; Raffo, L.;\
    \ Meloni, P. A runtime-adaptive cognitive IoT node for healthcare monitoring.\
    \ In Proceedings of the\n16th ACM International Conference on Computing Frontiers\
    \ 2019, Alghero, Italy, 30 April–2 May 2019; pp. 350–357. [CrossRef]\n270. Li,\
    \ F.; Lam, K.Y.; Li, X.; Sheng, Z.; Hua, J.; Wang, L. Advances and emerging challenges\
    \ in cognitive internet-of-things. IEEE Trans.\nInd. Inform. 2019, 16, 5489–5496.\
    \ [CrossRef]\n271. Park, J.H.; Salim, M.M.; Jo, J.H.; Sicato, J.C.S.; Rathore,\
    \ S.; Park, J.H. CIoT-Net: A scalable cognitive IoT based smart city network\n\
    architecture. Hum.-Cent. Comput. Inf. Sci. 2019, 9, 29. [CrossRef]\n272. Nayak,\
    \ P.; Garetto, M.; Knightly, E.W. Multi-user downlink with single-user uplink\
    \ can starve TCP. In Proceedings of the IEEE\nINFOCOM 2017, Atlanta, GA, USA,\
    \ 1–4 May 2017; pp. 1–9. [CrossRef]\n273. Bejarano, O.; Knightly, E.W.; Park,\
    \ M. IEEE 802.11 ac: From channelization to multi-user MIMO. IEEE Commun. Mag.\
    \ 2013, 51,\n84–90. [CrossRef]\n274. Pokhrel, S.R.; Choi, J. Improving TCP performance\
    \ over WiFi for internet of vehicles: A federated learning approach. IEEE Trans.\n\
    Veh. Technol. 2020, 69, 6798–6802. [CrossRef]\n275. Rhee, I.; Xu, L.; Ha, S.;\
    \ Zimmermann, A.; Eggert, L.; Scheffenegger, R. CUBIC for Fast Long-Distance Networks\
    \ (No. Rfc8312).\n2018. Available online: https://www.rfc-editor.org/rfc/rfc8312\
    \ (accessed on 1 February 2023).\n276. Shahraki, A.; Taherkordi, A.; Haugen, Ø.;\
    \ Eliassen, F. A survey and future directions on clustering: From WSNs to IoT\
    \ and\nmodern networking paradigms. IEEE Trans. Netw. Serv. Manag. 2020, 18, 2242–2274.\
    \ [CrossRef]\n277. Mylonas, G.; Kalogeras, A.; Kalogeras, G.; Anagnostopoulos,\
    \ C.; Alexakos, C.; Munoz, L. Digital twins from smart manufacturing\nto smart\
    \ cities: A survey. IEEE Access 2021, 9, 143222–143249. [CrossRef]\n278. Akhtar,\
    \ M.W.; Hassan, S.A.; Ghaffar, R.; Jung, H.; Garg, S.; Hossain, M.S. The shift\
    \ to 6G communications: Vision and requirements.\nHum. Cent. Comput. Inf. Sci.\
    \ 2020, 10, 53. [CrossRef]\n279. Nguyen, V.L.; Lin, P.C.; Cheng, B.C.; Hwang,\
    \ R.H.; Lin, Y.D. Security and privacy for 6G: A survey on prospective technologies\n\
    and challenges. IEEE Commun. Surv. Tutor. 2021, 23, 2384–2428. [CrossRef]\n280.\
    \ Farooq, M.S.; Nadir, R.M.; Rustam, F.; Hur, S.; Park, Y.; Ashraf, I. Nested\
    \ Bee Hive: A conceptual multilayer architecture for 6G in\nfuturistic sustainable\
    \ smart cities. Sensors 2022, 22, 5950. [CrossRef] [PubMed]\n281. Huang, H.; Guo,\
    \ S.; Gui, G.; Yang, Z.; Zhang, J.; Sari, H.; Adachi, F. Deep learning for physical-layer\
    \ 5G wireless techniques:\nOpportunities, challenges and solutions. IEEE Wirel.\
    \ Commun. 2020, 27, 214–222. [CrossRef]\n282. Chen, M.; Challita, U.; Saad, W.;\
    \ Yin, C.; Debbah, M. Artiﬁcial Neural Networks-Based Machine Learning for Wireless\
    \ Networks:\nA Tutorial. IEEE Commun. Surv. Tutor. 2019, 21, 3039–3071. [CrossRef]\n\
    283. Manzalini, A. Quantum Communications in Future Networks and Services. Quantum\
    \ Rep. 2020, 2, 221–232. [CrossRef]\nElectronics 2023, 12, 2490\n63 of 63\n284.\
    \ Tariq, F.; Khandaker, M.R.A.; Wong, K.K.; Imran, M.A.; Bennis, M.; Debbah, M.\
    \ A speculative study on 6G. IEEE Wirel. Commun.\n2020, 27, 118–125. [CrossRef]\n\
    285. Imoize, A.L.; Adedeji, O.; Tandiya, N.; Shetty, S. 6G enabled smart infrastructure\
    \ for sustainable society: Opportunities, challenges,\nand research roadmap. Sensors\
    \ 2021, 21, 1709. [CrossRef] [PubMed]\n286. Basar, E.; Di Renzo, M.; De Rosny,\
    \ J.; Debbah, M.; Alouini, M.-S.; Zhang, R. Wireless communications through Reconﬁgurable\n\
    Intelligent Surfaces. IEEE Access 2019, 7, 116753–116773. [CrossRef]\n287. Hu,\
    \ S.; Rusek, F.; Edfors, O. Beyond Massive MIMO: The potential of data transmission\
    \ with large intelligent surfaces. IEEE Trans.\nSignal Process. 2018, 66, 2746–2758.\
    \ [CrossRef]\n288. Akyildiz, I.F.; Kak, I.A. The Internet of Space Things/Cubesats.\
    \ IEEE Netw. 2019, 33, 212–218. [CrossRef]\n289. Akyildiz, I.F.; Jornet, J.M.;\
    \ Han, C. Terahertz band: Next frontier for wireless communications. Phys. Commun.\
    \ 2014, 12, 16–32.\n[CrossRef]\n290. Kumari, A.; Gupta, R.; Tanwar, S. Amalgamation\
    \ of blockchain and IoT for smart cities underlying 6G communication:\nA comprehensive\
    \ review. Comput. Commun. 2021, 172, 102–118. [CrossRef]\n291. Kamruzzaman, M.M.\
    \ Key technologies, applications and trends of internet of things for energy-efﬁcient\
    \ 6G wireless communica-\ntion in smart cities. Energies 2022, 15, 5608. [CrossRef]\n\
    292. Kohli, V.; Tripathi, U.; Chamola, V.; Rout, B.K.; Kanhere, S.S. A review\
    \ on Virtual Reality and Augmented Reality use-cases of\nBrain Computer Interface\
    \ based applications for smart cities. Microprocess. Microsyst. 2022, 88, 104392.\
    \ [CrossRef]\nDisclaimer/Publisher’s Note: The statements, opinions and data contained\
    \ in all publications are solely those of the individual\nauthor(s) and contributor(s)\
    \ and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility\
    \ for any injury to\npeople or property resulting from any ideas, methods, instructions\
    \ or products referred to in the content.\n"
  inline_citation: '>'
  journal: Electronics (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2079-9292/12/11/2490/pdf?version=1685597834
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Networking Architectures and Protocols for IoT Applications in Smart Cities:
    Recent Developments and Perspectives'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agronomy13092302
  analysis: '>'
  authors:
  - Shweta Pokhariyal
  - N. R. Patel
  - Ajit Govind
  citation_count: 2
  full_citation: '>'
  full_text: ">\nCitation: Pokhariyal, S.; Patel, N.R.;\nGovind, A. Machine Learning-Driven\n\
    Remote Sensing Applications for\nAgriculture in India—A Systematic\nReview. Agronomy\
    \ 2023, 13, 2302.\nhttps://doi.org/10.3390/\nagronomy13092302\nAcademic Editor:\
    \ Gniewko Niedbała\nReceived: 17 July 2023\nRevised: 4 August 2023\nAccepted:\
    \ 7 August 2023\nPublished: 31 August 2023\nCopyright:\n© 2023 by the authors.\n\
    Licensee MDPI, Basel, Switzerland.\nThis article is an open access article\ndistributed\n\
    under\nthe\nterms\nand\nconditions of the Creative Commons\nAttribution (CC BY)\
    \ license (https://\ncreativecommons.org/licenses/by/\n4.0/).\nagronomy\nReview\n\
    Machine Learning-Driven Remote Sensing Applications for\nAgriculture in India—A\
    \ Systematic Review\nShweta Pokhariyal 1,2,*\n, N. R. Patel 1\nand Ajit Govind\
    \ 3,*\n1\nAgriculture & Soils Department, Indian Institute of Remote Sensing,\
    \ Dehradun 248001, India\n2\nDepartment of Agrometeorology, Govind Ballabh Pant\
    \ University of Agriculture & Technology,\nPantnagar 263153, India\n3\nInternational\
    \ Center for Agricultural Research in the Dry Areas (ICARDA), 2 Port Said, Victoria\
    \ Sq,\nIsmail El-Shaaer Building, Maadi, Cairo 11728, Egypt\n*\nCorrespondence:\
    \ shwetapokhariyal9@gmail.com (S.P.); a.govind@cgiar.org (A.G.)\nAbstract: In\
    \ India, agriculture serves as the backbone of the economy, and is a primary source\
    \ of\nemployment. Despite the setbacks caused by the COVID-19 pandemic, the agriculture\
    \ and allied\nsectors in India exhibited resilience, registered a growth of 3.4%\
    \ during 2020–2121, even as the overall\neconomic growth declined by 7.2% during\
    \ the same period. The improvement of the agriculture\nsector holds paramount\
    \ importance in sustaining the increasing population and safeguarding food\nsecurity.\
    \ Consequently, researchers worldwide have been concentrating on digitally transforming\n\
    agriculture by leveraging advanced technologies to establish smart, sustainable,\
    \ and lucrative farming\nsystems. The advancement in remote sensing (RS) and machine\
    \ learning (ML) has proven beneﬁcial\nfor farmers and policymakers in minimizing\
    \ crop losses and optimizing resource utilization through\nvaluable crop insights.\
    \ In this paper, we present a comprehensive review of studies dedicated to\nthe\
    \ application of RS and ML in addressing agriculture-related challenges in India.\
    \ We conducted\na systematic literature review following the Preferred Reporting\
    \ Items for Systematic Reviews and\nMeta-Analysis (PRISMA) guidelines and evaluated\
    \ research articles published from 2015 to 2022.\nThe objective of this study\
    \ is to shed light on the application of both RS and ML technique across\nkey\
    \ agricultural domains, encompassing “crop management”, “soil management”, and\
    \ “water\nmanagement, ultimately leading to their improvement. This study primarily\
    \ focuses on assessing\nthe current status of using intelligent geospatial data\
    \ analytics in Indian agriculture. Majority of\nthe studies were carried out in\
    \ the crop management category, where the deployment of various\nRS sensors led\
    \ yielded substantial improvements in agricultural monitoring. The integration\
    \ of\nremote sensing technology and machine learning techniques can enable an\
    \ intelligent approach to\nagricultural monitoring, thereby providing valuable\
    \ recommendations and insights for effective\nagricultural management.\nKeywords:\
    \ remote sensing; machine learning; India; agriculture; crop management; soil\
    \ management;\nwater management\n1. Introduction\nThe United Nations Food and\
    \ Agricultural Organization (FAO) has projected that\nthe world’s population will\
    \ reach 9 billion by 2050, boosting agricultural demand by\n50 percent compared\
    \ with 2013 [1]. Moreover, the situation is aggravated by the negative\nimpact\
    \ of climate change, which contributes to an increase in extreme weather events\n\
    causing disastrous impact on worldwide agriculture and more commonly to food security\n\
    of developing nations [2,3]. In addition, the COVID-19 pandemic in 2019 created\
    \ more\nuncertainties in the agricultural system and risks to global food security.\
    \ Therefore, food\nproduction systems shall be governed by sustainable management\
    \ of agricultural lands\nin order to reduce or end the negative impacts of climate\
    \ change on agriculture, land\ndegradation, water and energy resources, and biodiversity\
    \ [4].\nAgronomy 2023, 13, 2302. https://doi.org/10.3390/agronomy13092302\nhttps://www.mdpi.com/journal/agronomy\n\
    Agronomy 2023, 13, 2302\n2 of 30\nAgriculture, along with its allied sectors,\
    \ is the largest source of livelihood in India.\nApproximately 80% of the population\
    \ depend on agriculture or its by-products as the\nprimary means of employment.\
    \ Considering the rapid growth of the population, it is\nimperative for government\
    \ policymakers to promote smart farming to make agriculture\nsustainable and proﬁtable.\
    \ Thus, it is essential to accelerate the integration innovative\ntechnologies\
    \ to enhance the agricultural sector, especially in developing countries like\n\
    India [5].\nTraditionally in India, crop estimation and health status was monitored\
    \ through crop\ncutting and manual observations. Based on this, farmers apply\
    \ pesticides, herbicides,\nfertilizer, and irrigation to their farms for enhancing\
    \ crop production. However, this\nprocess is both time consuming and resource\
    \ intensive, leading to an increased input costs\nin agriculture. In light of\
    \ overcoming this pressing issue, there is an urgent need for real-\ntime crop\
    \ growth monitoring across diverse locations and under varying environmental\n\
    conditions. Real-time crop monitoring not only saves time and improves management\n\
    techniques, but it also enables managers to effectively respond to extreme climatic\
    \ events\nand minimize their impact on the global food system [6].\nRemote sensing\
    \ (RS) is an essential tool for meeting the aforementioned needs, as it\noffers\
    \ a non-destructive method for acquiring information across local to global scales.\
    \ It\nhas proven to be a powerful tool to obtain signiﬁcant volumes of crop data\
    \ in a short time\nand generating valuable information for crop managers [7].\
    \ RS allows for the characteri-\nzation of spatiotemporal variability within a\
    \ given area. In recent times, our capacity to\nobtain remote sensing data has\
    \ undergone remarkable advancements, ushering into an\nera that characterized\
    \ by the proliferation of large datasets—commonly referred to as “big\ndata”.\
    \ Big data not only encompasses the voluminous data but also challenges arising\n\
    from its rapid generation, diversity, reliability and inherent value, often encapsulated\n\
    as 5Vs. The conventional processing techniques are incapable of meeting the constantly\n\
    growing demands in the era of smart agriculture. To that end, the machine learning\
    \ (ML)\nhas emerged as a powerful technique for efﬁciently extracting information\
    \ from diverse\ninformation sources.\nNumerous comprehensive reviews focus on\
    \ the use of ML algorithms for agriculture\nmanagement at the global level [8–11].\
    \ Chlingaryan et al. (2018) reviewed the use of ML\nalgorithms for crop yield\
    \ and nitrogen status prediction [8]. Liakos et al. included a few\ncontributions\
    \ from RS tools at the global level [9]. Furthermore, Jha et al. analyzed the\n\
    automation techniques applied to agriculture systems [10]. The work of Diaz-Gonzalez\n\
    et al. (2022) included both ML and RS techniques but only to review the studies\
    \ focused on\nsoil quality assessment at the global level. All the above-mentioned\
    \ reviews were focused\non research studies executed at the global level [11].\n\
    Therefore, this review aims to discuss RS and ML applications in solving problems\n\
    related to agriculture in India. Usage of advanced technology in Indian agriculture\
    \ also\ngain momentum at the policy level. The Committee on Doubling Farmer’s\
    \ Income (DFI)\nformulated the National e-Governance Plan in Agriculture (NeGPA),\
    \ which is focused\non agriculture management through advanced technology viz.\
    \ remote sensing, machine\nlearning, artiﬁcial intelligence, robotics, drones,\
    \ the Internet of Things (IoT), sensors, data\nanalytics, cloud computing, and\
    \ blockchain (https://pib.gov.in/PressReleasePage.aspx?\nPRID=1697526 (18 July\
    \ 2023). In the present study, we want to highlight the RS satellites\nand ML\
    \ techniques used in the agricultural domain. We also summarize the challenges\n\
    and future scope of linking ML technology to RS data for Indian agriculture based\
    \ on the\nsearched articles. Consequently, this study can serve as an extensive\
    \ foundation for future\nresearch. In this regard, we conducted a systematic literature\
    \ review (SLR) by applying a\nPreferred Reporting Items for Systematic Reviews\
    \ and Meta-Analysis (PRISMA) protocol.\nWe selected 54 articles that dealt with\
    \ the use of ML and RS data in agriculture in India. The\nstructure of the paper\
    \ is as follows: Section 1 is the introduction; Section 2 deals with the\ntheoretical\
    \ background of AI/ML techniques/algorithms, RS applications in agriculture,\n\
    and leveraging ML techniques on RS data for agricultural applications; Section\
    \ 3 contains\nAgronomy 2023, 13, 2302\n3 of 30\nthe methodology used to collect\
    \ the relevant papers for the study; Section 4 explains the\nﬁndings obtained\
    \ from the analysis of the selected research articles; and Section 5 discusses\n\
    and concludes the implications of the study.\n2. Background\nIn this section,\
    \ we explain the basic concepts of ML and RS. Furthermore, we explain\nthe role\
    \ of ML and RS in solving agricultural problems in separate sections.\n2.1. Machine\
    \ Learning\nMachine learning (ML) is a sub-branch of AI and part of data science\
    \ that principally\nfocuses on learning systems and algorithm theory, performance,\
    \ and properties. It is an\nan intelligent tool which has strong bearing on AI,\
    \ statistics, engineering, mathematics,\ninformation theory, cognitive science,\
    \ and many other scientiﬁc and technological disci-\nplines [12]. In general,\
    \ the goal of ML is to optimize the performance of a task using past\nexperiences.\
    \ ML can establish efﬁcient relationships between data inputs based on the\npast\
    \ experiences and can effectively analyze large volume of data [13]. It involves\
    \ the\nprocess of creating mathematical models on sample data sets called “training\
    \ datasets” to\nmake decisions and predictions [14]. The algorithm or model ﬁrst\
    \ trained and then classi-\nﬁed/predicted with a ML technique. The validity of\
    \ the ML model is general tested using\nthe “testing dataset”, which is further\
    \ used to improve the model and perform accurate\nclassiﬁcation/prediction (Figure\
    \ 1).\nAgronomy 2023, 13, x FOR PEER REVIEW \n3 of 27 \n \n \nplications in agriculture,\
    \ and leveraging ML techniques on RS data for agricultural appli-\ncations; Section\
    \ 3 contains the methodology used to collect the relevant papers for the \nstudy;\
    \ Section 4 explains the findings obtained from the analysis of the selected research\
    \ \narticles; and Sections 5 discusses and concludes the implications of the study.\
    \ \n2. Background \nIn this section, we explain the basic concepts of ML and RS.\
    \ Furthermore, we explain \nthe role of ML and RS in solving agricultural problems\
    \ in separate sections. \n2.1. Machine Learning \nMachine learning (ML) is a sub-branch\
    \ of AI and part of data science that principally \nfocuses on learning systems\
    \ and algorithm theory, performance, and properties. It is an \nan intelligent\
    \ tool which has strong bearing on AI, statistics, engineering, mathematics, \n\
    information theory, cognitive science, and many other scientific and technological\
    \ disci-\nplines [12]. In general, the goal of ML is to optimize the performance\
    \ of a task using past \nexperiences. ML can establish efficient relationships\
    \ between data inputs based on the \npast experiences and can effectively analyze\
    \ large volume of data [13]. It involves the pro-\ncess of creating mathematical\
    \ models on sample data sets called “training datasets” to \nmake decisions and\
    \ predictions [14]. The algorithm or model first trained and then classi-\nfied/predicted\
    \ with a ML technique. The validity of the ML model is general tested using \n\
    the “testing dataset”, which is further used to improve the model and perform\
    \ accurate \nclassification/prediction. (Figure 1). \n \nFigure 1. General architecture\
    \ of the ML model. \nThe ML algorithm is classified into three main techniques\
    \ depending on the nature \nof the feedback available for a learning system, which\
    \ are unsupervised learning (UL), \nsupervised learning (SL), and reinforced learning\
    \ (RL) [9] (Table 1). \nTable 1. Different ML techniques [15]. \nTechniques \n\
    Unsupervised Learning \nSupervised Learning \nReinforcement Learning \nUsed for\
    \ \nClustering \nDimensionality reduction \nClassification \nRegression \nEstimation\
    \ \nReal-time decision-making \nFigure 1. General architecture of the ML model.\n\
    The ML algorithm is classiﬁed into three main techniques depending on the nature\n\
    of the feedback available for a learning system, which are unsupervised learning\
    \ (UL),\nsupervised learning (SL), and reinforced learning (RL) [9] (Table 1).\n\
    Table 1. Different ML techniques.\nTechniques\nUnsupervised\nLearning\nSupervised\
    \ Learning\nReinforcement\nLearning\nUsed for\nClustering\nDimensionality\nreduction\n\
    Classiﬁcation\nRegression\nEstimation\nReal-time\ndecision-making\nAgronomy 2023,\
    \ 13, 2302\n4 of 30\nTable 1. Cont.\nTechniques\nUnsupervised\nLearning\nSupervised\
    \ Learning\nReinforcement\nLearning\nAlgorithms\nk-means\nX-means\nAnomaly detection\n\
    Principal component\nanalysis\nIndependent\ncomponent analysis\nGaussian mixture\n\
    models\nBayesian networks\nSupport vector\nmachine\nRandom forest\nDecision tree\n\
    Neural networks\nHidden Markov\nmodel\nNaïve Bayes\nQ-learning\nMarkov decision\n\
    process\nUL and SL are mainly focused on data analysis, whereas RL is mainly focused\
    \ on\nsolving the decision-making problems. Table 2 presents a comparison between\
    \ different ML\ntechniques according to the deﬁnitions provided by Liakos et al.\
    \ [9]. Due to the numerous\nabbreviations used in the relative scientiﬁc works,\
    \ Table 3 list the abbreviations referenced\nin this study.\nTable 2. Types of\
    \ ML models used in this review.\nML Models\nDescription\nTypes Used in This Review\n\
    Regression\nA supervised learning model that aims to predict an\noutput variable\
    \ according to the known input\nvariables.\nPLSR\nInstance-based models\nMemory-based\
    \ models that learn by comparing new\nexamples with instances in the training\
    \ database.\nk-NN\nBayesian models\nThese models belong to the supervised learning\n\
    category and can be used to solve both regression\nand classiﬁcation problems.\n\
    NB\nDecision tree\nThis is the type of supervised learning category used\nto categorize\
    \ or make predictions based on how a\nprevious set of questions was answered.\n\
    DT, CART\nEnsemble learning\nEnsemble learning (EL) models aim at improving the\n\
    predictive performance of a given statistical learning\nor model ﬁtting technique\
    \ by constructing a linear\ncombination of simpler base learners.\nRF, GBR, XGB\n\
    Support vector machines (SVM)\nSVM is a supervised learning method that looks\
    \ at\ndata and sorts them into one of two categories. An\nSVM outputs a map of\
    \ the sorted data with the\nmargins between the two as far apart as possible.\n\
    SVM, SVR, O-SVM, SVM-RBF,\nKPA-based SVM\nNeural networks\nA neural network is\
    \ a series of algorithms that\nendeavors to recognize underlying relationships\
    \ in a\nset of data through a process that mimics the way\nthe human brain operates.\n\
    ANN, CNN, RNN-LSTM, RNN-GRU,\nDFNN, FFBPNN\nTable 3. List of ML-based abbreviations\
    \ used in the study along with their full forms.\nAbbreviation\nFull Form\nk-NN\n\
    k-nearest neighborhood classiﬁer\nLDA\nLinear discriminant analysis\nSVM\nSupport\
    \ vector machine\nMLC\nMaximum likelihood classiﬁer\nAgronomy 2023, 13, 2302\n\
    5 of 30\nTable 3. Cont.\nAbbreviation\nFull Form\nANN\nArtiﬁcial neural network\n\
    OB\nObject based\nSAM\nSpectral angle mapper\nRF/RFR\nRandom forest/random forest\
    \ regressor\nCNN\nConvolution neural network\nRNN\nRecurrent neural network\n\
    LSTM\nLong short-term memory\nGRU\nGraded recurrent unit\nO-SVM\nOptimized SVM\n\
    CART\nClassiﬁcation and regression trees\nDT\nDecision tree\nSC\nSupervised classiﬁcation\n\
    USC\nUnsupervised classiﬁcation\nHCSC\nHigh-conﬁdence sugarcane classiﬁcation\n\
    RR\nRidge regression\nFFBPNN\nFeed-forward back-propagating neural network\nNB\n\
    Naïve Bayes\nGBR\nGradient-boosting regression\nSGB\nStochastic gradient boosting\n\
    XGB\nExtreme gradient boosting\nsDFNN\nDeep feed-forward network\nDRF\nDistributed\
    \ random forest\nPLSR\nPartial least square regressions\nMLR\nMultiple linear\
    \ regression\nSMLR\nSparse multinomial logistic regression\nSVR-RBF\nSupport vector\
    \ regression—radial basis function\nKPA\nKernel principal component analysis\n\
    GBM/GBR\nGradient-boosting machine/gradient-boosting regressor\nTo evaluate the\
    \ performance of ML algorithms, statistical metrics are utilized [13].\n2.2. Performance\
    \ Metrics Commonly Used in Reviewed Studies\nIn this section, we provide a brief\
    \ description of the performance metrics commonly\nused in the reviewed papers.\
    \ These metrics are crucial in evaluating ML algorithms, as they\noffer a standardized\
    \ way to measure their performance. The performance metrics used in\nthe reviewed\
    \ studies for regression problems are root mean square error (RMSE), coefﬁcient\n\
    of determination (R2), mean absolute percentage error (MAPE), and mean squared\
    \ error\n(MSE). The equation of the abovementioned metrics are as follows [13,15,16]:\n\
    R2 = [n ∑ (YA × YP) − ∑ (YA) ∑ (YP)]/[ (n ∑ YA2 − (∑ YA)2) (n ∑ YP2 − (∑ YP)2)]0.5\n\
    RMSE = (1/n ∑ (YA − YP)2)0.5\nAgronomy 2023, 13, 2302\n6 of 30\nMAPE = 1/n ∑ |(YA\
    \ − YP)/YA|\nMSE = 1/n ∑ (YA − YP)2\nwhere n is the sample size, YA is the actual/observed\
    \ value, and YP is the predicted value.\nIn classiﬁcation problems, to evaluate\
    \ the model error, a confusion matrix is the most\ncommonly used measure. Let\
    \ us consider a binary crop classiﬁcation example where we\nwant to classify crops\
    \ as “maize” and “wheat” (Table 4).\nTable 4. Representative illustration of a\
    \ binary confusion matrix.\nActual\nPredicted\nMaize\nWheat\nMaize\nTN\nFP\nWheat\n\
    FN\nTP\nTrue positive (TP): wheat correctly predicted as wheat, true negative\
    \ (TN): maize\ncorrectly predicted as maize, false positive (FP): maize incorrectly\
    \ predicted as wheat, and\nfalse negative (FN): wheat incorrectly predicted as\
    \ maize. The aforementioned values\nderived from Table 5 can be implemented to\
    \ estimate the performance metrics typically\nobserved in classiﬁcation problems\
    \ [17].\nTable 5. Summary of the performance metrics used in the reviewed studies,\
    \ typically for classiﬁca-\ntion problems.\nMetrics\nFormula\nFocus\nOverall accuracy\
    \ (OA)\n(TP + TN)/(TP + TN +FP + FN)\nEffectiveness of a classiﬁer technique\n\
    Precision (PRC)\nTP/(TP + FP)\nMeasures accuracy of positive predictions made\
    \ by a model,\naiming to minimize false positives\nRecall/Sensitivity (REC)\n\
    TP/(TP + FN)\nMeasures effectiveness of a classiﬁer model to identify\npositive\
    \ predictions, aiming to minimize false negatives\nF1 score\n2 × ((REC × PRC)/(REC\
    \ + PRC))\nCombination of sensitivity and precision in a single metric\nML has\
    \ been used effectively to solve different agriculture problems in crop man-\n\
    agement comprised of yield monitoring, crop identiﬁcation, disease detection,\
    \ and crop\nprotection from animal intrusion; in water management; in soil management;\
    \ and in\ndrought monitoring [9,13,18].\n2.3. Remote Sensing and Its Application\
    \ in Agriculture\nRemote sensing involves acquiring information about an object,\
    \ area, and phenomenon\nfrom a distance using instruments and sensors mounted\
    \ on a platform such as a satellite, air-\ncraft, or unmanned aerial vehicle (UAV).\
    \ The sensor measures the electromagnetic radiation\nemitted or reﬂected by the\
    \ object/area under interest. The quality of information retrieved\nusing remote\
    \ sensing technology depends on the speciﬁc features of the sensor/instrument,\n\
    which deﬁne the spatial resolution, spectral resolution, signal-to-noise ratio,\
    \ and revisit\nfrequency of the platform [19].\nThe use of RS in agriculture dates\
    \ back to 1972, when the ﬁrst successful launch of\nLandSat Multispectral Scanner\
    \ System (MSS) satellite occurred. Bauer and Cipra classiﬁed\nMidwestern US agricultural\
    \ landscapes into corn and soyabean ﬁelds using a LandSat MSS\ndataset [20]. RS\
    \ is a non-destructive method of data acquisition, making it an inevitable\ntool\
    \ to meet multiple goals in agriculture, such as monitoring crop production to\
    \ feed\na growing population, choosing economically viable activities, and reducing\
    \ negative\nAgronomy 2023, 13, 2302\n7 of 30\nenvironmental impacts such as contributing\
    \ to climate mitigation and minimizing resource\ndepletion [19]. RS technologies\
    \ serve as a diagnostic tool that can act as an early warning\nsystem, allowing\
    \ the agricultural community to counter potential problems before they can\nnegatively\
    \ impact crop productivity.\nAccording to the Index DataBase (IDB), there are\
    \ a total of 519 indexes used particularly\nfor RS application in agriculture\
    \ [21]. The most widely used VI is the Normalized Difference\nVegetation Index\
    \ (NDVI), which analyzes a near infrared (NIR) band centered at 850 nm\nand a\
    \ red band centered at 680 nm [22]. Table 6 shows the RS-derived variables that\
    \ are\nidentiﬁed in this review.\nTable 6. List of the RS-derived variables used\
    \ in the review.\nAbbreviation\nMeaning\nLISS\nLinear imaging self-scanning\n\
    NDVI\nNormalized Difference Vegetation Index\nGNDVI\nGreen Normalized Difference\
    \ Vegetation Index\nSAVI\nSoil Optimized Vegetation Index\nDVI\nDifference Vegetation\
    \ Index\nRVI\nRatio Vegetation Index\nNDMI\nNormalized Difference Moisture Index\n\
    NDWI\nNormalized Difference Water Index\nLSWI\nLand Surface Water Index\nGCI\n\
    Green Chlorophyll Index\nNG\nNormalized green\nNN\nNormalized near infrared\n\
    NR\nNormalized red\nBI\nBrightness Index\nSI\nSaturation Index\nHI\nHue Index\n\
    SI\nSalinity Index\nCI\nColoration Index\nDSI\nDesertiﬁcation Soil Index\nRI\n\
    Redness Index\nEDI\nEvaporative Drought Index\nVCI\nVegetation Condition Index\n\
    TCI\nTemperature Condition Index\nVHI\nVegetation Health Index\nSMDI\nSoil Moisture\
    \ Deﬁcit Index\nPCI\nPrecipitation Condition Index\nPAI\nPrecipitation Anomaly\
    \ Index\nSPI\nStandardized Precipitation Index\nSPEI\nStandardized Precipitation\
    \ Evapotranspiration Index\nWBI\nWater Band Index\nMSI\nMoisture Stress Index\n\
    hNDVI\nHyperspectral Normalized Difference Vegetation Index\nNDII\nNormalized\
    \ Difference Infrared Index\nAgronomy 2023, 13, 2302\n8 of 30\nTable 6. Cont.\n\
    Abbreviation\nMeaning\nMDWI\nMaximum Difference Water Index\nRI\nRatio Index\n\
    SRWI\nSimple Ratio Water Index\nSR\nSimple Ratio\nWI\nWater Index\nNWI\nNormalized\
    \ Water Index\nfWBI\nFloating Water Band Index\nHH\nHorizontal transmit and horizontal\
    \ receive\nVV\nVertical transmit and vertical receive\nHV\nHorizontal transmit\
    \ and vertical receive\nLST\nLand surface temperature\nVARI\nVisual Atmospheric\
    \ Resistance Index\nARVI\nAtmospherically Resistant Vegetation Index\nEVI\nEnhanced\
    \ Vegetation Index\nGCVI\nGreen Chlorophyll Vegetation Index\nIPD\nIndian pine\
    \ data\n2.4. Leveraging Machine Learning Techniques on Remote Sensing for Agricultural\
    \ Applications\nAgricultural monitoring using RS is a wide area of research that\
    \ has been thoroughly\nexplored from multiple perspectives, based on RS platforms\
    \ (satellites, UAV, aircrafts), on\nspeciﬁc applications (yield prediction, irrigation,\
    \ crop stress detection and management,\nweed detection, irrigation management,\
    \ etc.), and diverse climatic and location contexts\n(ranging from ﬁeld scale\
    \ to global scale, on wetlands or drylands). India has achieved\nnotable success\
    \ in utilizing RS technology for agriculture applications in crop acreage\nestimation,\
    \ yield prediction, crop identiﬁcation and mapping, crop stress evaluation, and\n\
    crop protection with a strong expansion on national expansion. There has been\
    \ a signiﬁcant\nincrease in published literature related to RS applications in\
    \ agriculture in India, indicating\nthat the RS for agriculture has reached a\
    \ certain level of knowledge in the country. (Figure 2).\nThis also reﬂects the\
    \ substantial progress made in RS technology, including high-resolution\nsatellite\
    \ dataset (e.g., Sentinel) and the deployment of cloud computing and ML technology.\n\
    The RS research community is currently facing the era of “big data”, where the\
    \ utiliza-\ntion of ML and deep learning (DL) algorithms is growing for agricultural\
    \ applications [23]\nthrough: (i) establishing complex relationships to retrieve\
    \ RS variables from RS data [24,25]\nand (ii) solving complex classiﬁcation/prediction\
    \ problems. ML technology has been in\nroutine use for the analysis of RS data\
    \ for some time. One of the applications is classiﬁcation\nwith RS data (LANDSAT),\
    \ often using an RF and an SVM technique. The utilization of\nML technology for\
    \ the effective prediction and classiﬁcation from RS imagery has been\nreviewed\
    \ previously and focused on SVM, NN, DT, RF, and k-NN [26,27]. Advanced ML\nalgorithms\
    \ such as SVM [26], RF [28], Gaussian processes, and neural networks [29,30]\n\
    have been widely utilized to retrieve agricultural variables from RS data. These\
    \ approaches\nallow the complex relationship between variables to be statistically\
    \ characterized and per-\nmits real-time computations, which is of strong interest\
    \ for agricultural applications. Most\nphenotypic studies concerned with multispectral\
    \ cameras use ML algorithms to develop\nthe relationship between vegetation indices\
    \ and crop traits such as leaf area index (LAI),\nnitrogen content, and chlorophyll\
    \ content [31]. ML techniques are also an efﬁcient way to\nmerge datasets of different\
    \ natures, such as integrating in-situ data (soil data, farming man-\nagement\
    \ practice data from ﬁeld surveys, weather variables) with datasets from various\
    \ RS\nAgronomy 2023, 13, 2302\n9 of 30\nsources [32]. These technological advancements\
    \ will deﬁnitely allow the long-lasting goals\nfor RS applications in agriculture\
    \ to be met.\nAgronomy 2023, 13, x FOR PEER REVIEW \n8 of 27 \n \n \nFigure 2.\
    \ Google Scholar search results. Number of publications, including the keywords:\
    \ remote \nsensing, agriculture, and India from 2010 to 2021. \nThe RS research\
    \ community is currently facing the era of “big data”, where the utili-\nzation\
    \ of ML and deep learning (DL) algorithms is growing for agricultural applications\
    \ \n[23] through: (i) establishing complex relationships to retrieve RS variables\
    \ from RS data \n[24,25] and (ii) solving complex classification/prediction problems.\
    \ ML technology has \nbeen in routine use for the analysis of RS data for some\
    \ time. One of the applications is \nclassification with RS data (LANDSAT), often\
    \ using an RF and an SVM technique. The \nutilization of ML technology for the\
    \ effective prediction and classification from RS im-\nagery has been reviewed\
    \ previously and focused on SVM, NN, DT, RF, and k-NN [26,27]. \nAdvanced ML algorithms\
    \ such as SVM [26], RF [28], Gaussian processes, and neural net-\nworks [29,30]\
    \ have been widely utilized to retrieve agricultural variables from RS data. \n\
    These approaches allow the complex relationship between variables to be statistically\
    \ \ncharacterized and permits real-time computations, which is of strong interest\
    \ for agricul-\ntural applications. Most phenotypic studies concerned with multispectral\
    \ cameras use ML \nalgorithms to develop the relationship between vegetation indices\
    \ and crop traits such as \nleaf area index (LAI), nitrogen content, and chlorophyll\
    \ content [31]. ML techniques are \nalso an efficient way to merge datasets of\
    \ different natures, such as integrating in-situ data \n(soil data, farming management\
    \ practice data from field surveys, weather variables) with \ndatasets from various\
    \ RS sources [32]. These technological advancements will definitely \nallow the\
    \ long-lasting goals for RS applications in agriculture to be met. \n3. Methodology\
    \ \nSystematic Literature Review \nIn this review article, we conducted a systematic\
    \ literature review (SLR) using the \nPreferred Reporting Items for Systematic\
    \ Reviews and Meta-Analysis (PRISMA) method. \nOur aim was to identify studies\
    \ related to the application of ML with remote sensing for \nagriculture management.\
    \ The PRISMA method includes 4 stages, namely, identification, \nscreening, eligibility,\
    \ and inclusion [33]. This review article stems mainly from three re-\nsearch\
    \ questions: (1) Which agricultural-related issues are solved by linking ML tech-\n\
    Figure 2. Google Scholar search results. Number of publications, including the\
    \ keywords: remote\nsensing, agriculture, and India from 2010 to 2021.\n3. Methodology\n\
    Systematic Literature Review\nIn this review article, we conducted a systematic\
    \ literature review (SLR) using the\nPreferred Reporting Items for Systematic\
    \ Reviews and Meta-Analysis (PRISMA) method.\nOur aim was to identify studies\
    \ related to the application of ML with remote sensing for\nagriculture management.\
    \ The PRISMA method includes 4 stages, namely, identiﬁcation,\nscreening, eligibility,\
    \ and inclusion [33]. This review article stems mainly from three re-\nsearch\
    \ questions: (1) Which agricultural-related issues are solved by linking ML techniques\n\
    and RS datasets, particularly in India? (2) What are the principal ML algorithms\
    \ and RS\ndatasets used to analyze the data? (3) What is the progress and future\
    \ scope of ML and RS\nto manage agriculture in India? We searched for relevant\
    \ studies in seven databases, includ-\ning Web of Science, IEEE, MDPI, Springer,\
    \ Scopus, and Google Scholar for the literature\nsearch, with keywords namely,\
    \ “machine learning”, “remote sensing”, and “agriculture”,\nin conjunction with\
    \ “crop yield estimation”, “crop classiﬁcation”, “disease prediction”,\n“water\
    \ management”, “drought monitoring”, and “soil management”. We looked for these\n\
    keywords in the article title, abstract, and keywords. Moreover, we considered\
    \ research\narticles and conferences in English only from India published from\
    \ 2015 to 2022. Thus,\nnon-English studies, review articles, preprints, chapters,\
    \ and master’s and doctoral dis-\nsertations/theses were excluded. Overall, we\
    \ identiﬁed 54 relevant papers and selected\nthem based on the PRISMA guidelines,\
    \ as shown through the ﬂowchart in Figure 3. We\nalso considered the exclusive\
    \ criteria similar to recent review studies such as [13,18] during\nthe selection\
    \ process.\nAgronomy 2023, 13, 2302\n10 of 30\n \nlooked for these keywords in\
    \ the article title, abstract, and keywords. Moreover, we con-\nsidered research\
    \ articles and conferences in English only from India published from 2015 \nto\
    \ 2022. Thus, non-English studies, review articles, preprints, chapters, and master’s\
    \ and \ndoctoral dissertations/theses were excluded. Overall, we identified 54\
    \ relevant papers and \nselected them based on the PRISMA guidelines, as shown\
    \ through the flowchart in Figure \n3. We also considered the exclusive criteria\
    \ similar to recent review studies such as [13,18] \nduring the selection process.\
    \ \n \nFigure 3. Flowchart of the methodology of the present systematic review\
    \ based on the PRISMA \nguidelines. \n4. Results \nThe selected studies were classified\
    \ into three primary categories, namely, crop man-\nagement, water management,\
    \ and soil management. The studies under the crop manage-\nment category further\
    \ divided into four sub-categories, namely, crop classification, yield \nprediction,\
    \ disease/pest detection, and weed detection. The articles presented here cover\
    \ \nthe period from 2015 to 2022. \n4.1. Crop Management \n4.1.1. Crop Classification\
    \ \nCrop classification is one of the most important agricultural applications\
    \ of RS. The \nknowledge of the crop type present in the field is important for\
    \ devising and implement-\ning agricultural policies [34], consequently leading\
    \ to efficient crop management and ensur-\ning food security [35]. It is worth\
    \ noting that RS not only enables crop discrimination but \nalso allows for the\
    \ determination of the crop’s development stage. Accurate monitoring of \nheterogeneous\
    \ agricultural plots is complex, but it is the foremost step towards monitoring\
    \ \nFigure 3. Flowchart of the methodology of the present systematic review based\
    \ on the PRISMA\nguidelines.\n4. Results\nThe selected studies were classiﬁed\
    \ into three primary categories, namely, crop man-\nagement, water management,\
    \ and soil management. The studies under the crop manage-\nment category further\
    \ divided into four sub-categories, namely, crop classiﬁcation, yield\nprediction,\
    \ disease/pest detection, and weed detection. The articles presented here cover\n\
    the period from 2015 to 2022.\n4.1. Crop Management\n4.1.1. Crop Classiﬁcation\n\
    Crop classiﬁcation is one of the most important agricultural applications of RS.\
    \ The\nknowledge of the crop type present in the ﬁeld is important for devising\
    \ and implementing\nagricultural policies [34], consequently leading to efﬁcient\
    \ crop management and ensuring\nfood security [35]. It is worth noting that RS\
    \ not only enables crop discrimination but also\nallows for the determination\
    \ of the crop’s development stage. Accurate monitoring of\nheterogeneous agricultural\
    \ plots is complex, but it is the foremost step towards monitoring\nsmallholder\
    \ cultivators’ farms. This is even more pertinent in Indian agriculture since\
    \ small\nand marginal farmers together cultivate about 86% of all operational\
    \ landholdings in the\ncountry [36], and subsequently improving their economic\
    \ status can further help to meet the\nSustainable Development Goals [37]. RS\
    \ techniques have improved the effectiveness of crop\nclassiﬁcation at various\
    \ scales using optical (Landsat series, Sentinel 2 series, ResourceSat-2\nseries),\
    \ microwave (Sentinel 1, RADARSAT), and hyperspectral data (Hyperion) [38,39].\n\
    Indian agriculture heavily relies on monsoons, and the Kharif (rainy) season,\
    \ occurring\nfrom June to September, is crucial for crops such as rice, maize,\
    \ cotton, and pulses. During\ncloudy weather, optical datasets are unavailable.\
    \ Therefore, microwave data have been\ninstrumental in overcoming the inherent\
    \ limitation of optical data.\nAgronomy 2023, 13, 2302\n11 of 30\nOut of the total\
    \ studies included in the sub-category of crop classiﬁcation (Table 7),\nmaximum\
    \ studies were based on optical dataset [40–50], while six studies [51–56] utilized\n\
    the capability of both optical and microwave remote sensing to classify crops,\
    \ particularly\nduring Kharif season. Refs. [57–60] used Sentinel 1 and RADARSAT\
    \ data for crop classi-\nﬁcation. Ranjan and Parida demonstrated the overall accuracy\
    \ of LULC classes (forest,\npaddy, and other) from Sentinel-1A and Sentinel-2B\
    \ with an overall accuracy of 90 and 91%,\nrespectively. Nevertheless, the optical\
    \ data were more appropriate for LULC classiﬁcation\nusing RF, but Sentinel 1\
    \ A data were more useful for capturing paddy crops [52]. Only two\nstudies were\
    \ conducted using hyperspectral remote sensing [61,62]. Hyperspectral remote\n\
    sensing data offer distinct advantages over multispectral data in identifying\
    \ and discrimi-\nnating target features or objects. The narrowband information\
    \ acquisition in hyperspectral\ndata provides detailed and comprehensive information\
    \ about any object [63].\nRemote sensing (RS) provides vast amounts of information\
    \ collected globally by vari-\nous satellite sensors. The availability of open-access\
    \ datasets and rapid sensor technology\nadvancements has expanded RS-based studies\
    \ [64,65]. The challenge has shifted from a\nlack of information to the difﬁculty\
    \ of analyzing this large volume of data, often referred to\nas “big data” [66].\
    \ Big data is characterized by its volume, variety, velocity, veracity and\nvalue\
    \ [67]. Machine learning has emerged as a powerful tool to analyze big data and\
    \ deliver\nmore accurate predictive information. One such tool is Google Earth\
    \ Engine (GEE), which\nenables spectral and spatial analyses on batches of imagery.\
    \ GEE supports advanced image\nprocessing and machine learning algorithms through\
    \ a library of application programming\ninterfaces (APIs) and development environments\
    \ compatible with JavaScript or Python [68].\nGumma et al., in 2020 and 2022 [49,50],\
    \ effectively used GEE’s computing capabilities along\nwith the random forest\
    \ (RF) technique to map crop products such as irrigation and rainfed\ncrop maps,\
    \ cropping intensity maps, and crop type maps for South Asia, including India,\n\
    Nepal, Bangladesh, Pakistan, and Sri Lanka. The overall accuracy of each product\
    \ was\nfound to be above 70%.\nTable 7. Crop classiﬁcation using RS and ML techniques\
    \ in India.\nCrop/Season/\nFeatures\nInput\nFunctionality\nAlgorithm\nResult\n\
    Reference\nRabi season\nSatellite: Sentinel-2\nClassify rabi\nseason crop in\n\
    IARI, New Delhi\nRF, SVM and\nCART\nBest model: RF\nOA: 93.3%\n[40]\nPaddy, sugarcane,\n\
    jasmine, turmeric,\nbanana, lemon\nSatellite: Sentinel-2\nCrop classiﬁcation\n\
    using Sentinel-2 in\nGuntur region of\nAndhra Pradesh\nSVM, RF, CNN,\nRNN-LSTM,\n\
    RNN-GRU\nBest model: SVM\nF1 score = 0.99\nestimated crop\nareas have 95.9%\n\
    agreement with\nthe ground\nsurveyed crop area\n[41]\nwheat, corn,\nlinseed, lentil,\n\
    mustard, barley,\nand other crops\nResourcesat-2: LISS IV\nsensor data\nCrop classiﬁcation\n\
    in Varanasi, Uttar\nPradesh\nSVM, ANN, SAM\nBest model:\nSVM\nOA = 93.45%\n[42]\n\
    Cotton, gram\nSatellite: IRS P6\nRESOURCESAT-2\nLISS-IV sensor data\nCrop\ndiscrimination\
    \ in\nMaharashtra\nSVM, O-SVM\nOnly 2%\nimprovement in\naccuracy was\nachieved\
    \ with an\noptimization of\nSVM.\n[43]\nAgronomy 2023, 13, 2302\n12 of 30\nTable\
    \ 7. Cont.\nCrop/Season/\nFeatures\nInput\nFunctionality\nAlgorithm\nResult\n\
    Reference\nSugarcane\nCrowdsourced data:\nPlantix (point)\nSatellite data: Sentinel-2\n\
    (10 m), SRTM (90 m),\nMODIS-IGBP (250 m),\nMODIS-water mask\n(250 m), Copernicus\n\
    Global Land Service\n(100 m), Google Static\nMap (0.3 m), Airbus\n(1.5 m)\nDistrict-level\
    \ statistics\non sugarcane area\nprovided by Indian\nGovernment\nSugarcane\nclassiﬁcation\
    \ in\nMaharashtra,\nCentral India\nSC: 1DCNN\nUSC: k-means\nHCSC: SC + USC\nBest\
    \ model:\n1DCNN\nOA: 77%\nF1 score: 0.77 = 5\n[44]\nRice, betelvine,\nvegetables\
    \ and\nothers\nRS variable: NDVI\nSatellite: Sentinel-2\nCrop type\nestimation\
    \ in\nTamluk\nsub-division of\nWest Bengal\nk-NN, RF\nBest model: RF\nOA: 97.22%\n\
    [45]\nEarly wheat, mid\nwheat, late wheat,\nDesi gram, hybrid\ngram, garlic,\n\
    potato, fallow land\nRS variable:\nBand 2—Band 12\nSatellite: Sentinel-2\nCrop\
    \ classiﬁcation\nin Lakoda Gram\nPanchayat, Ujjain,\nMadhya Pradesh\nRF, NB\n\
    Best model: RF\nKappa coefﬁcient:\n0.93\n[46]\nWheat\nRS variable: Band 2,\nBand\
    \ 3, Band 4, Band 8\nSatellite: Sentinel 2A\nWheat mapping in\nMaharajganj, Uttar\n\
    Pradesh, India\nRF, SVM\nBest model: RF\nKappa coefﬁcient:\n0.84\n[47]\nWheat,\
    \ sugarcane,\nfodder\nRS variable: NIR,\nRegEdge-1, RedEdge-2,\nRedEdge-3\nSatellite:\
    \ Sentinel-2A\nMapping major\ncrop types in\nRoorkee,\nUttarakhand\nRF, SVM, SGB,\n\
    XGB, AdaBoost\nBest model: XGB\nOA: 86.91%\n[48]\nCropland and non-\ncropland\n\
    RS variable: Band\n2–Band 7, Band 10,\nNDVI, NDWI, EVI\nSatellite: Landsat-8\n\
    Cropland mapping\nin South Asia\n(India, Nepal,\nBangladesh,\nPakistan, Sri\n\
    Lanka)\nRF\nOA: 88.7%\n[49]\nCrop mapping\nRS variable: Band\n2–Band 7, Band 10\n\
    (Landsat-8), NDVI, EVI,\nNDWI\nSatellite: Landsat-8 (for\nmapping of irrigated\n\
    and rainfed cropland\nareas), MODIS (for crop\ntype and cropping\nintensity mapping)\n\
    Mapping of\n-\nirrigated and\nrainfed\ncropland\nareas\n-\nCrop types\nCropping\
    \ intensity\nin South Asia\nRF\nOverall accuracy\n-\nIrrigated and\nrainfed crop\n\
    map: 79.8%\n-\nCropping\nIntensity\nmap: 85.3%\nCrop type map:\n63–98%\n[50]\n\
    Sugarcane\nSatellite: Sentinel 1 and\nSentinel 2\nClassify plant and\nratoon sugarcane\n\
    type in Uttar\nPradesh\nSVM and RF\nBest model: RF\nOA: 90.75%\n[51]\nAgronomy\
    \ 2023, 13, 2302\n13 of 30\nTable 7. Cont.\nCrop/Season/\nFeatures\nInput\nFunctionality\n\
    Algorithm\nResult\nReference\nRice\nSatellite: Sentinel 1A\nand Sentinel 2B\n\
    Paddy acreage\nmapping using\nSentinel-based\noptical and SAR\ndata in Jharkhand\n\
    RF\nOA\nSentinel 2B: 91%\nSentinel 1A: 90%\n[52]\nKharif season\n(major crop:\
    \ rice,\ncotton)\nRS variable: VV, VH,\nratio, Diff, GCVI\nSatellite: Sentinel-1,\n\
    Sentinel-2\nCrowdsourced data:\nPlantix\nCrop type\nmapping in\nAndhra Pradesh\n\
    and Telangana\nRF, 1D CNN, and\n3D CNN\nBest model: 1D\nCNN\nOA = 74%\n[53]\n\
    Kharif season (rice,\nmaize,\nﬁngermillet)\nRS variable: VV, VH,\nNIR, SWIR\n\
    Satellite: Sentinel-1,\nSentinel-2\nCrop classiﬁcation\nin Mandar, Ratu\nand Kanke\
    \ block of\nJharkhand\nRF\nOA: 83.87%\n[54]\nSoyabean\nRS variable: VH, NDVI\n\
    Satellite: Sentinel 1,\nSentinel 2\nSoyabean mapping\nin Latur district of\nMaharashtra\n\
    Object based (OB):\nRF, XGB, SVM\nBest model:\nOB-XGB\nKappa coefﬁcient:\n0.82\n\
    [55]\nWheat, mussor,\npotato, mustard,\ngram, fallowland\nRS variable: Band\n\
    2-Band 7, NDVI, VV, VH,\nSatellite: ALOS DEM,\nLandsat-8, MODIS\nNDVI, RISAT,\n\
    Sentinel-1A\nCrop\ndiscrimination in\nMathura district of\nUttar Pradesh\nRF,\
    \ GBM\nBest model: RF\nOA: 93.1%\n[56]\nRice, soyabean,\nmaize, pigeonpea\nSatellite:\
    \ Sentinel 1 and\nRADARSAT-2\nClassify Kharif\ncrop in Madhya\nPradesh\nSVM, RF,\
    \ MLC,\nSAM\nBest model: SVM\nOA: 79.7%\n[57]\nRice, sugarcane,\ncotton, banana,\n\
    fallow, mixed\nﬁelds\nSatellite data: HH,\nVV, HV\nSatellite: RADARSAT-2\nCrop\
    \ classiﬁcation\nin Andhra Pradesh\nSVM, KPA-based\nSVM\nBest model:\nKPA-based\
    \ SVM\nOA = 89%\n[58]\nPearlmillet\nRS variable: Volume\nscattering, Double\n\
    Bounce, entropy,\nalpha angle\nSatellite: Sentinel-1.\nRADARSAT-2\nPearlmillet\n\
    discrimination in\nAgra, Uttar\nPradesh\nDT, SVM, RF\nBest model: RF\nOA: 89.1%\n\
    [59]\nMaize\nRS variable: HH, HV,\nVH, VV, volume\nscattering, double\nbounce,\
    \ entropy,\nalpha angle\nSatellite: Sentinel-1,\nRADARSAT-2\nMaize crop\nmapping\
    \ in Nashik\ndistrict,\nMaharashtra\nDT, SVM, RF\nBest model: DT\nOA: 84%\n[60]\n\
    Tea\nASD FieldSpec 3\nSpectroradiometer\nClassify tea\nvarieties in\nMunnar, Kerala\n\
    k-NN, LDA, SVM\nSix out of nine tea\nplant varieties\ncould be\ndiscriminated\
    \ with\naccuracies between\n75% and 80%.\n[61]\nAgronomy 2023, 13, 2302\n14 of\
    \ 30\nTable 7. Cont.\nCrop/Season/\nFeatures\nInput\nFunctionality\nAlgorithm\n\
    Result\nReference\nSugarcane, cotton,\nmulberry\nSatellite: IPD-AVIRIS,\nEO-1\
    \ Hyperion\nCrop identiﬁcation\nin Maharashtra\nfrom hyperspectral\nremote sensing\n\
    images\nCNN\nIPD: 97.58%\naccuracy,\nEO-1 Hyperion:\n79.43% accuracy\n[62]\n4.1.2.\
    \ Yield Prediction\nYield prediction is of high importance for yield mapping and\
    \ crop management to\nincrease the quality and productivity, and subsequently\
    \ matching crop supply with demand.\nFurther, crop yield prediction plays a crucial\
    \ role in maintaining food security. It is of utmost\nimportance in a developing\
    \ country like India, where growing population, heterogeneous\nagricultural ﬁelds,\
    \ and poor management practices impose a range of uncertainties on the\nyield\
    \ prediction and hence on crop management. The studies evaluated under the yield\n\
    prediction sub-category are tabulated in Table 8.\nTable 8. Yield prediction using\
    \ RS and ML techniques in India.\nCrop\nInput\nFunctionality\nAlgorithm\nScale\n\
    Result\nReference\nRice\nRS variable: NDVI\nSatellite: Sentinel 1A and\nSentinel\
    \ 2B\nRice yield\nprediction in\nSahibganj district of\nJharkhand\nRF\nRegional\n\
    Rice yield was\npredicted as 1.60\nmetric tons/hectare\n[52]\nSugarcane\nInputs\n\
    (a)\nRS variable: NDVI\n(b)\nMeteorological:\ntemperature, dew point\ntemperature,\
    \ soil\ntemperature, soil\nmoisture, precipitation,\nrelative humidity,\nsunshine\
    \ duration,\nevapotranspiration\nSatellite: LANDSAT 8\nSugarcane crop\nyield forecasting\
    \ in\nKarnataka\nSVR, LR, NB, DT,\nSVR-RBF\nRegional\nBest model:\nSVR-RBF\nOA\
    \ = 83.49%\n[69]\nRice\nRS variable: NDVI\nMeteorological data: RF,\nTemperature,\
    \ SR, RH\nSatellite: LANDSAT 8\nKharif rice\nproduction in\nPurulia and\nBankura\
    \ districts of\nWest Bengal\nANN, RF\nRegional\nPurulia–Bankura\ndistrict combined\n\
    ANN models with\nBoruta feature\nselection and\nrandom forest\nvariable importance\n\
    ranged from\n0.651 to 0.663.\n[70]\nWheat\nInputs\n(a)\nRS variable: NDVI,\nNIRv,\
    \ NDWI\n(b)\nMeteorological variable:\nTmin, Tmax, Tmean, RF,\nVPD, SWdown,\n\
    day length\nSatellite: MODIS\nWheat yield\nprediction in India\nCNN, RF, RR\n\
    IGP\nBest model: CNN\nwith NSE of 0.868\n[71]\nSugarcane\nRS variable: RVI, NDVI,\
    \ SAVI,\nOSAVI, DVI, GCI, EVI, ARVI,\nVARI, NDMI, NDWI, NN, NG\nSatellite: LANDSAT-8\n\
    Sugarcane yield\nprediction in\nUttarakhand\nSVR, CART,\nk-NN, RF\nRegional\n\
    Best model: RF\nwith R2 = 0.94 and\nRMSE = 1.51 t/ha\n[72]\nSugarcane\nRS variable:\
    \ NDVI, WSI, APAR,\nCWSI (NDVI/Ts)\nSatellite: LANDSAT 8\nField scale\nSugarcane\
    \ yield\nestimation in\nAndhra Pradesh\nANN\nField\nEstimated\nsugarcane yield\n\
    with 95% accuracy\n[73]\nAgronomy 2023, 13, 2302\n15 of 30\nTable 8. Cont.\nCrop\n\
    Input\nFunctionality\nAlgorithm\nScale\nResult\nReference\nCotton\nInputs\n(a)\n\
    RS variable: NDVI\n(b)\nMeteorological: RF\nSatellite: MODIS\nCotton yield\nprediction\
    \ in\nMaharashtra\nRF\nRegional\nSeptember month:\nR2 = 0.69\n[74]\nRice\nInputs\n\
    (a)\nRS variable: MODIS-LAI\n(b)\nObserved yields from\n2003–2017 were obtained\n\
    from the Directorate of\nEconomics and Statistics\n(DES), the mandated\norganization\
    \ under the\nMinistry of Agriculture\n(MoA) for collecting and\nreporting agricultural\n\
    production data in India.\nSatellite: MODIS\nYield estimation in\n18 Indian states\n\
    GBR\nRegional\nValidation for the\nyears 2016 and 2017,\nproved successful\nwith\
    \ R2 = 0.84 and\nR2 = 0.77\n[75]\nSugarcane\nRS variable: NDVI, EVI, LAI,\nFPAR,\
    \ ET, PET, LE, GPP, RF\nSatellite: MODIS, CHIRPS\nSugarcane yield\nforecasting\
    \ in Uttar\nPradesh\nRF, SVR, GBR,\nXGB\nRegional\nBest model: GBR\nR2 = 0.66\n\
    RMSE = 7.15 t/ha\n[76]\nThe analysis of the selected articles indicated that the\
    \ studies differ with scale (ranging\nfrom ﬁeld level to country level), ML algorithm\
    \ (SVR, ANN, k-NN, GBR), platform (Sentinel,\nMODIS, LANDSAT), and crop (rice,\
    \ wheat, sugarcane, arhar/tur). LANDSAT-8 satellite\ndata with 30-meter resolution\
    \ were effectively utilized for regional yield forecasting [69–73],\nfollowed\
    \ by the images retrieved from MODIS [74–76]. Wolanin et al. conducted wheat\n\
    yield prediction in the Indo Gangetic Plains. The authors utilized CNN, RF and\
    \ RR, and\nML algorithms to predict wheat yield and found CNN to be the best model\
    \ for wheat\nyield prediction, with an NSE of 0.868 [71]. Coarse-to-medium spatial\
    \ resolution systems\nlike MODIS and Landsat struggle to accurately estimate crop\
    \ production, as they cannot\ndistinguish small individual ﬁelds, resulting in\
    \ mixed pixels inﬂuenced by other landscape\ncomponents. However, the operational\
    \ deployment of the Sentinel-2 satellite systems (2A\nin 2015 and 2B in 2017)\
    \ offers key spectral wavelengths at 10–20 m resolution, a short\nrevisit period,\
    \ and open-access data, enabling more frequent high-resolution observations\n\
    of agricultural ﬁelds. This advancement opens new possibilities for satellite-based\
    \ crop\nproduction estimation in Indian smallholder systems. High resolution optical\
    \ (Sentinel 2)\nand microwave (Sentinel 1) dataset was effectively utilized for\
    \ rice yield prediction in\nJharkhand [52]. Kurupavathi et al. estimated ﬁeld-scale\
    \ yield using medium resolution\nLandsat 8 satellite data with 95% accuracy [73].\n\
    4.1.3. Disease and Pest Detection\nPlant diseases and pests pose signiﬁcant threats\
    \ to global vegetation [77]. Precisely\nlocating and assessing the extent and\
    \ severity of these occurrences is crucial for guiding\nplant protection measures.\
    \ Remote sensing serves as a “radiodiagnosis” approach, offering\nnon-contact\
    \ and continuous monitoring of diseases and pests efﬁciently [78]. The early\n\
    studies and applications of this technique date back to the 1980s, and Nilsson\
    \ [79] demon-\nstrated various applications of remote sensing and image analysis\
    \ in plant pathology. As\ncomputer science and sensing technology rapidly advance,\
    \ a wide spectrum of remote\nsensing data is now employed for detecting diseases\
    \ and pests.\nIn the work of Patil et al. [80], the authors utilized SVM, RF,\
    \ and ANN algorithms\nfor detection of blight in potato. Selvaraj et al. [81]\
    \ presented a method for identifying\nﬁve major banana diseases, such as Xanthomonas\
    \ wilt of banana (BXW), Fusarium wilt of\nbanana (FWB), black sigatoka (BS), yellow\
    \ sigatoka (YS), and banana bunchy top disease\n(BBTV), along with the banana\
    \ corm weevil (BCW) pest class using CNN architecture.\nThe two studies in Table\
    \ 9 [82,83] are dedicated to the detection and classiﬁcation of\ndiseased and\
    \ healthy rice crops. Ramesh and Vydeki used KNN and ANN algorithms to\ndiscriminate\
    \ crops affected by rice blast from the healthy rice crop [82]. Shrivastava and\n\
    Agronomy 2023, 13, 2302\n16 of 30\nPradhan aimed at the accurate detection of\
    \ a range rice plant diseases, such as bacterial leaf\nblight, rice blast, and\
    \ seath blight from the healthy rice crop based on digital imagery and\nSVM algorithm\
    \ [83]. In the literature by Chauhan et al. [84], maize diseases were detected\n\
    based on digital imagery and SVM, DT, NB, KNN, and RF algorithms. Singh et al.\
    \ utilized\nthe capability of both thermal and visual images to quantify the severity\
    \ of stripe rust in\nwheat crop using SVM and ANN techniques. The performance\
    \ of SVM was found to be\nbetter in comparison to ANN [85].\nTable 9. Disease\
    \ prediction using RS and ML techniques in India.\nCrop\nInput\nFunctionality\n\
    Algorithm\nResult\nReference\nPotato\n892 potato leaf images\nPotato blight disease\n\
    detection, Dharwad,\nKarnataka\nSVM, RF, ANN\nBest model:\nANN\nOverall\naccuracy:\
    \ 92%\n[80]\nBanana\n18,000 ﬁeld images of\nbanana, collected by banana\nexperts,\
    \ from Bioversity\nInternational (Africa) and\nTamil Nadu Agricultural\nUniversity\
    \ (TNAU,\nSouthern India)\nImages collected from\nvarious sources like\ncellphones,\
    \ tablets and a\nstandard RGB camera\nIdentiﬁcation of 5 major\nbanana diseases\
    \ such as,\nXanthomonas wilt of\nbanana (BXW), Fusarium\nwilt of banana (FWB),\n\
    black sigatoka (BS), yellow\nsigatoka (YS), and banana\nbunchy top disease\n(BBTV),\
    \ along with the\nbanana corm weevil\n(BCW) pest class\nCNN\nAccuracy:\n70–99%\n\
    [81]\nRice\nImage captured using\ndigital camera\nRice blast disease\ndetection\
    \ in Tamil Nadu\nk-NN, ANN\nBest model:\nANN\nAccuracy: 99%\n[82]\nRice\n619 images\
    \ captured using\ndigital camera\nRice plant disease\n(bacterial leaf blight,\
    \ rice\nblast, seath blight) and\nhealthy leaf classiﬁcation\nin Raipur, Chattisgarh\n\
    SVM\nAccuracy:\n94.65%\n[83]\nMaize\n3823 photographs and labels\nfor four categories\
    \ of\ndiseases such as common\nrust, gray hair, leaf damage\nto the north, and\
    \ health with\n1192 images, 513 images,\n956 images, and\n1162 images, respectively.\n\
    Detection of maize disease\nSVM, DT, NB,\nk-NN, RF\nBest model: RF\nAccuracy:\n\
    80.68%\n[84]\nWheat\nImages captured using\nthermal camera\nEstimation of stripe\
    \ rust\nseverity\nSVM, ANN\nBest model:\nSVM\nAccuracy: 98%\nR2: 85%\n[85]\n4.1.4.\
    \ Weed Detection\nWeed detection in crop ﬁelds and its management poses another\
    \ signiﬁcant issue\nin agriculture. Weeds are the most signiﬁcant threat to crop\
    \ production, as they induce\ncompetition for nutrients, water, and sunlight,\
    \ which are ascertained to the target crop.\nWeed detection is of high importance\
    \ to sustainable agriculture, as weeds are difﬁcult to\ndetect and discriminate\
    \ from the crops. In this regard, RS sensors in conjunction with\nML algorithms\
    \ can lead to the accurate detection of weeds with low cost and without\nany negative\
    \ impact on the environment. Shorewala et al. estimated weed density and\ndistribution\
    \ using a CNN model with an overall accuracy of 82.13% [86] (Table 10).\nAgronomy\
    \ 2023, 13, 2302\n17 of 30\nTable 10. Weed detection using RS and ML techniques\
    \ in India.\nProperties\nObserved Attributes\nFunctionality\nML Algorithm\nResult\n\
    Reference\nWeed density\nRGB (red green blue)\nimage\nWeed density and\ndistribution\
    \ estimation\nCNN\nAccuracy: 82.13%\nRecall: 0.99\n[86]\n4.2. Water Management\n\
    Water is a prime contributing factor to the amount and quality of the developed\
    \ yields.\nCrop water stress hinders the crop physiological processes. Water management\
    \ plays a\nsigniﬁcant role in agronomical, hydrological, and climatological balance.\
    \ It is particularly\nimportant in those areas where irrigation is a key component\
    \ to attaining the desired crop\nquality and crop yield. Also, for irrigation\
    \ management and scheduling, one should know\nthe quantity and timings of the\
    \ water supply, which can be determined with a proper\nspatial evolution of plant\
    \ water stress [87].\nThis section is based on the detection of two water-based\
    \ properties that can severely\naffect the growth and development of the crop:\
    \ (i) drought and (ii) water stress. The\nﬁrst three studies in Table 11 [88–90]\
    \ deal with drought prediction using satellite-derived\nvariables and different\
    \ ML algorithms. Dhyani et al. and Singh et al. utilized CNN and\nANN models for\
    \ drought detection in Karnataka and Maharashtra, respectively [88,89]. In\nthe\
    \ literature by Prodhan et al., a comparison between ML (GBM, RF)- and DL (DFNN)-\n\
    based models has been made [90]. The aim of the study was to detect drought in\
    \ South\nAsia using different satellite-derived variables from different satellite\
    \ products and ML/DL\nalgorithms. The authors evaluated better performance of\
    \ DFNN for drought detection over\nSouth Asia. The last three studies in Table\
    \ 9 were based on the evaluation of water stress in\nrice crop [91,92] and maize\
    \ crop [93] using hyperspectral remote sensing and UAV based\nimagery, respectively.\n\
    Table 11. Water management using RS and ML techniques in India.\nProperties\n\
    Observed Attributes\nFunctionality\nML Algorithm\nResult\nReference\nDrought\n\
    RS variable: NDVI,\nSMI\nSatellite: LANDSAT-8\nDrought prediction\nin northern\n\
    Karnataka\nCNN\nOA: 96%\n[88]\nDrought\nRS variable: NDVI,\nLST, SMI, TCI, VCI,\
    \ RF,\nsoil moisture\nSatellite: TRMM,\nAMSR-E, MODIS,\nDrought prediction\nin\
    \ Sangli,\nMaharashtra\nANN\nOA: 92%\n[89]\nDrought\nRS variable:\nPredictor variable:\n\
    NDVI, RF, SPEI, PCI,\nPAI, EDI, VCI, VHI,\nTHI,\nResponse variable:\nSMDI\nSatellite:\
    \ MODIS,\nMERIS and\nSPOT-Vegetation,\nGLDAS-NOAA,\nCHIRPS,\nAVHRR-GIMMS\nDrought\
    \ prediction\nDFNN, GBR, DRF\nBest model: DFNN\nSMDI had high\ncorrelation coefﬁcient\n\
    R2 ranges from\n0.57~0.90, 0.52~0.94,\nand 0.49~0.82 during\nthe start of the\
    \ season\n(SOS), length of the\nseason (LOS), and end\nof the season (EOS),\n\
    respectively\n[90]\nAgronomy 2023, 13, 2302\n18 of 30\nTable 11. Cont.\nProperties\n\
    Observed Attributes\nFunctionality\nML Algorithm\nResult\nReference\nWater stress\n\
    RS variable: WBI, MSI,\nNDWI, hNDVI, NDII,\nMDWI, RI, SRWI\nPlatform: ASD Field\n\
    Spec 3\nSpectroradiometer\nWater deﬁcit stress\nmonitoring in rice\ncrop in IARI,\
    \ New\nDelhi\nPLSR-MLR,\nPLSR-ANN, SVR,\nRF, PLSR, ANN\nBest model:\nPLSR-MLR\n\
    R2 = 0.98 and 0.97 for\ncalibration and\nvalidation,\nrespectively\n[91]\nWater\
    \ stress\nRS variables: SR,\nNDVI, WI, MDWI,\nNWI, fWBI, 1650/2220\nnm ratio,\
    \ RSI, NDSI\nVisible-near infrared\nspectroscopy\nWater deﬁcit stress\nmonitoring\
    \ in rice\nin IARI, New Delhi\nPLSR, SMLR, GPR,\nSVR, and RF\nBest model: PLSR\n\
    R2 = 0.943\n[92]\nWater stress\nUAV-based remote\nsensing\nWater stressed\nareas\
    \ in maize crop\nin Hyderabad,\nTelangana\nCNN\nOA: 95% on train data\nand 93%\
    \ on test data\nPrecision: 0.9370\nF1 score: 0.9403\n[93]\n4.3. Soil Management\n\
    Soil is a heterogeneous natural resource, entailing intricate mechanisms that\
    \ pose\nchallenges in comprehension. Soil properties plays a pivotal role in deciphering\
    \ ecosystem\ndynamics and their impact on agriculture. Thus, accurate estimation\
    \ of the soil conditions\nholds the potential for reﬁned soil management and consequently\
    \ enhanced agricultural\npractices. Nonetheless, gauging soil properties typically\
    \ involves a resource-intensive\nand time-consuming process, prompting the pursuit\
    \ of a cost-effective and dependable\nsolution. This can be realized by leveraging\
    \ readily available Remote Sensing (RS) datasets\nin conjunction with Machine\
    \ Learning (ML) techniques.\nThis speciﬁc category encompasses the application\
    \ of RS in tandem with ML algo-\nrithms to predict agricultural soil properties,\
    \ encompassing aspects like soil nutrients, soil\nsalinity, and soil moisture\
    \ content. The ﬁrst three studies (referenced as [94–96] in Table 12)\ndelve into\
    \ estimating soil nutrients such as nitrogen, phosphorus, potassium (NPK), and\n\
    soil organic carbon (SOC). For instance, Tiwari et al. harnessed hyperspectral\
    \ remote\nsensing (Hyperion) in tandem with ANN technique to map soil organic\
    \ carbon content [94].\nIn contrast, Kaur et al. integrated optical remote sensing\
    \ (Sentinel-2, LANDSAT-8), terrain,\nand climatic data, employing RFR, SVR, and\
    \ GBR techniques to estimate NPK and SOC\nin the Pune and Ahmednagar districts\
    \ of Maharashtra [95]. Kalambakattu et al., on the\nother hand, leveraged Landsat\
    \ 8 and CartoDEM datasets to map soil organic carbon and\navailable nitrogen in\
    \ Himachal Pradesh’s hilly terrain [96]. The assessment and mapping\nof soil moisture\
    \ play a pivotal role in determining irrigation needs in agriculture [97].\nBackscattering\
    \ measurements of microwaves from Synthetic Aperture Radar (SAR) sensors\nhave\
    \ demonstrated promise in effectively monitoring moisture content. Given Sentinel-1’s\n\
    (C-band) high temporal sampling and operational setup, it has signiﬁcantly contributed\
    \ to\nsoil moisture monitoring. References [98,99] employed Sentinel 1 data in\
    \ combination with\nvarious ML techniques to map soil moisture across diverse\
    \ regions in India. In contrast,\nDas et al. exclusively utilized optical remote\
    \ sensing datasets (Sentinel 2 and Landsat 8),\nemploying a fusion of ensemble\
    \ models (RF, Cubist, and GBM) to enhance soil moisture\nmapping accuracy [100].\
    \ Rani et al. introduced an innovative technique for estimating\nsalt-affected\
    \ soils, employing the Random Forest (RF) algorithm with NDVI data from\nMODIS,\
    \ reﬂectance data from LANDSAT-8, and elevation data from ALOS [101]. Similarly,\n\
    Kalambakattu et al. [102] and Vibhute et al. [103] harnessed the potential of\
    \ the Hyperion\ndataset and Support Vector Machine (SVM) algorithm to map soil\
    \ salinity severity and\nsoil types, respectively. The digital soil maps can help\
    \ farmers and decision makers in\nutilizing precision information for farm-scale\
    \ decision making leading to increased pro-\nAgronomy 2023, 13, 2302\n19 of 30\n\
    ductivity through optimal nutrient use and ecosystem sustainability, ultimately\
    \ securing\nfood supplies. A unique methodology was developed by Kumarapermual\
    \ et al. [104], to\nmap three soil attributes and three soil taxonomical units\
    \ using suite of 6 ML algorithms\nand 39 environmental covariates derived from\
    \ RS dataset. The contribution of climate and\ntopography was found substantial\
    \ in digital soil mapping.\nTable 12. Soil management using RS and ML techniques\
    \ in India.\nSoil Properties\nObserved\nAttributes\nFunctionality\nML Algorithm\n\
    Result\nReference\nSoil nutrient\nSatellite:\nEO1-Hyperion\n(400–2500 nm)\nhyperspectral\
    \ image\ndataset, ﬁeld\nspectroscopy\nSoil organic carbon\ncontent mapping\nANN\n\
    ANN predictive\nmodeling technique\nwith combination of\nhyperspectral\nperformed\
    \ well and\ncarried out a good\nresult for all three\ndatasets, images, and\n\
    ﬁeld and lab scales,\nwith almost similar\nvalues of performance\nstatistics:\
    \ R2 0.93, 0.92,\nand 0.95, respectively\n[94]\nSoil nutrients\nInput: (1) Satellite:\n\
    Colouration Index,\nBrightness Index,\nHue Index, and\nRedness Index\n(2) Terrain:\
    \ Terrain\nwetness index,\nStream Power Index\nand slope\nSatellite used:\nLANDSAT-8,\n\
    CartoDEM (30 m)\nDigital mapping of\nsoil nutrients (soil\norganic carbon and\n\
    available nitrogen)\nin Mandi district of\nHimachal Pradesh\nANN\nFor SOC\nR2:\
    \ 0.83 and MSE: 0.05\nFor available nitrogen\nR2: 0.62 and MSE:\n0.0006\n[95]\n\
    Soil nutrients\nInput: (1) Satellite:\nBI, SI, HI, CI, RI,\nNDVI\n(2) Terrain\
    \ &\nclimatic: elevation,\nalope, Aspect, RF,\nﬂay, radiation, silt,\nsand, ﬂow\
    \ direction\nSatellite used:\nLANDSAT-8,\nSentinel-2 (April to\nMay 2016)\nPrediction\
    \ of soil\nnutrients (NPK\nand OC) in 2\ndistricts of\nMaharashtra\nMLR, RFR,\
    \ SVR,\nGBR\nBest model: RFR\nwith lowest MAPE in\nrange of 0.125–0.362\n[96]\n\
    Soil moisture\nVariables used: VV,\nVH\nSatellite: Sentinel-1\nSoil moisture\n\
    retrieval under\ndifferent crop\ntypes (wheat, corn\nand barley) in\nVaranasi\
    \ district of\nUttar Pradesh\nRFR, SVR, ANN\nThe soil moisture\nretrieval performance\n\
    achieved by RFR and\nSVR was good in\ncomparison to the\nANN\n[98]\nAgronomy 2023,\
    \ 13, 2302\n20 of 30\nTable 12. Cont.\nSoil Properties\nObserved\nAttributes\n\
    Functionality\nML Algorithm\nResult\nReference\nSoil moisture\nVariables used:\
    \ VV,\nVH\nSatellite: Sentinel-1\nC band SAR data\nEstimation of soil\nmoisture\
    \ content\nin Midnapore,\nWest Bengal\nSVM, k-NN, RF,\nBest model: RF\nR2 = 0.87\
    \ and 0.93\nduring modeling and\nvalidation,\nrespectively; RMSE:\n~0.03)\n[99]\n\
    Soil moisture\nVariables used:\nbackscatter\ncoefﬁcient, NIR,\nSWIR, NDWI,\nmodiﬁed\
    \ NDWI,\nLST\nSatellite: Sentinel-1,\nLandsat-8\nDigital soil\nmoisture mapping\n\
    in agricultural\nfarm of Indian\nAgricultural\nResearch Institute,\nDelhi\nCubist,\
    \ RF, GBM,\nStacking (RF +\nGBM + Cubist)\nBest model: Stacking\nRMSE: 5.03%\n\
    [100]\nSoil salinity\nSatellite data:\n(a)\nMODIS NDVI\n(b)\nLANDSAT 8:\nReﬂectance\n\
    data\n(c)\nALOS: DEM\nIdentiﬁcation of\nsalt-affected soils\nin Unnao, Uttar\n\
    Pradesh\nRF\nRF identiﬁed\n41,224.95 hac\nsalt-affected area,\nwhich is 99.34%\
    \ of the\nlegacy data\n[101]\nSoil salinity\nVariables used: DSI,\nSI, SAVI, NDWI\n\
    Satellite data:\nHyperion\nSoil salinity\nseverity mapping\nin Mathura district\n\
    of Uttar Pradesh\nSVM\nOverall accuracy:\n78.13%\n[102]\nSoil type\nHyperion\n\
    Soil type\nclassiﬁcation\n(brown sandy soil,\nblack sandy soil,\nblack clay soil,\
    \ red\nsandy soil, gray\nclay soil) in\nAurangabad\ndistrict of\nMaharashtra\n\
    SVM\nOA: 71.18%\n[103]\nSoil quality and\nquantity\nVariables used: 39\ncovariates\
    \ listed\nunder climate, relief,\norganisms and\nparent material\nSatellite data:\n\
    Landsat-8, SRTM,\nWorldClim 2.1\nQualitative and\nquantitive digital\nsoil mapping\
    \ in\nTamil Nadu\nQuantitative soil\ntraits: pH, OC,\nCEC\nQualitative soil\n\
    traits: Order,\nsuborder and great\ngroup\nMLR, k-NN, RF,\nSVM, SVR, NB,\nCubist\n\
    Best model: RF\nFor quantitative traits\n(RMSE):\n-\npH: 0.75\n-\nOC: 0.26\n-\n\
    CEC: 8.84\nFor qualitative traits\n(OA):\n-\nOrder: 67%\n-\nSuborder: 65%\n-\n\
    Great group:\n65%\n[104]\nFarmers traditionally base their irrigation decisions\
    \ on experience. Now, advanced\ntechnologies allow them to predict crop water\
    \ needs based on weather and soil forecasts,\nleading to more informed choices.\
    \ The integration of IoT and wireless sensor network\ntechnologies for smart agriculture\
    \ application through remote sensing has provided valu-\nable insights into weather,\
    \ soil, and crop conditions throughout the growing season. The\nplatforms lacking\
    \ ML or mathematical based models are less effective. ML proves to be\nAgronomy\
    \ 2023, 13, 2302\n21 of 30\na powerful tool, emulating human-like capabilities\
    \ and exhibiting an inherent commit-\nment to enhancing machine intelligence [105,106].\
    \ It effectively addresses complex issues\nin irrigation systems, handling multivariable,\
    \ non-linear, and time-varying factors [107].\nTherefore, by leveraging massive\
    \ spatial and temporal data stored in cloud or edge-based\nservers, smart decisions\
    \ on irrigation management can be made using various ML-based\nmodels.\n5. Conclusions\n\
    A total number of 54 studies were included in this review article. The collection\
    \ of\nchosen articles exhibited considerable diversity. Among the 54 studies,\
    \ 9 were published\nas conference papers and the remaining in scientiﬁc journals.\
    \ Speciﬁcally, the GeoCarto\nJournal featured 7 of the selected research articles,\
    \ whereas Journal of Indian Society of\nRemote Sensing hosted 6 articles. Journals\
    \ such as International Archive of Photogrammetry,\nRemote Sensing as well as\
    \ Spatial Information Science, each hosted 5 articles. Journals that\nfeatured\
    \ 3 articles apiece include Remote Sensing Applications: Society & Environment\
    \ and\nInternational Journal of Remote Sensing” and Remote Sensing. Additionally,\
    \ 2 articles each\nwere contributed to journals like International Journal of\
    \ Engineering Research & Technology,\nInternational Journal for Innovative Engineering\
    \ & Management Research, Remote Sensing of\nEnvironment, and GIScience & Remote\
    \ Sensing. The remaining articles were published across\na range of journals,\
    \ including Spatial Information Research, Arabian Journal of Geoscience,\nPlant\
    \ Methods, Journal of Earth System Science, Advances in Remote Sensing, Environmental\n\
    Research Letters, Agricultural Water Management, Spectrochimica Acta, International\
    \ Journal\nof Advanced Remote Sensing & GIS, Environmental Earth Science, Land\
    \ and Catena. Delving\ninto the content, a notable 38 articles concentrated on\
    \ the integration of Machine Learning\n(ML) and Remote Sensing (RS) technology\
    \ for crop management. In contrast, 6 articles\nrevolved around water management,\
    \ while 10 articles centered on soil management. This\ndistribution is elucidated\
    \ further in Figure 4, which visually delineates the selected studies’\nallocation\
    \ according to the application of RS and ML technology within distinct agricultural\n\
    domains.\nAgronomy 2023, 13, x FOR PEER REVIEW \n18 of 27 \n \nSensing (RS) technology\
    \ for crop management. In contrast, 6 articles revolved around water \nmanagement,\
    \ while 10 articles centered on soil management. This distribution is elucidated\
    \ \nfurther in Figure 4, which visually delineates the selected studies’ allocation\
    \ according to \nthe application of RS and ML technology within distinct agricultural\
    \ domains. \n \nFigure 4. Pie chart showing classification of the reviewed studies\
    \ in different agriculture domains. \nThe abbreviations in the rectangle form\
    \ represents the following: CM = crop management, WM = \nwater management, SM\
    \ = soil management; CC = crop classification, YP = yield prediction, DD = \n\
    disease detection, WD = weed detection, DP = drought prediction, WS = water stress\
    \ prediction. \nWithin the category of crop management, most of the studies were\
    \ ascribed to crop \nclassification, followed by crop yield prediction, disease\
    \ detection, and weed identifica-\ntion. Under the soil management category, three\
    \ studies each were allocated to soil nutri-\nent prediction and soil moisture\
    \ mapping. Concurrently, two studies centered on deline-\ni\nil\nli i\ni\nd\n\
    i\nl\nd f\nd\nl\nifi\ni\nf\nil\nI\nh\nFigure 4. Pie chart showing classiﬁcation\
    \ of the reviewed studies in different agriculture domains. The\nabbreviations\
    \ in the rectangle form represents the following: CM = crop management, WM = water\n\
    management, SM = soil management; CC = crop classiﬁcation, YP = yield prediction,\
    \ DD = disease\ndetection, WD = weed detection, DP = drought prediction, WS =\
    \ water stress prediction.\nAgronomy 2023, 13, 2302\n22 of 30\nWithin the category\
    \ of crop management, most of the studies were ascribed to crop\nclassiﬁcation,\
    \ followed by crop yield prediction, disease detection, and weed identiﬁcation.\n\
    Under the soil management category, three studies each were allocated to soil\
    \ nutrient\nprediction and soil moisture mapping. Concurrently, two studies centered\
    \ on delineating\nsoil salinity severity, and a single study focused on classiﬁcation\
    \ of soil types. In the water\nmanagement category, three studies were conducted\
    \ to predict drought in different regions\nof India and three studies were carried\
    \ out to predict the water stress in different crops\n(rice and maize) using a\
    \ spectroradiometer and UAV remote sensing technology.\nThroughout these studies,\
    \ remote sensing technology was used in various forms,\nencompassing optical,\
    \ microwave, hyperspectral remote sensing, and digital images. Based\non the analysis\
    \ of selected studies, a total of 27 studies exclusively based on optical remote\n\
    sensing, whereas 6 studies harnessed the combined prowess of both microwave and\n\
    optical data. On the other hand, 5 studies were exclusively based on microwave\
    \ datasets.\nMoreover, among the available research, four studies aligned with\
    \ hyperspectral and\nspectroscopy datasets, while digital imagery emerged as the\
    \ sole avenue in predicting\ncrop diseases. These multifarious remote sensing\
    \ techniques are visually encapsulated in\nFigure 5, delineating their application\
    \ across the diverse categories and sub-categories used\nin the study.\nThe investigation\
    \ revealed the application of seven prominent categories of Machine\nLearning\
    \ (ML) models across the selected studies, as detailed in Table 2 and depicted\n\
    in Figure 6. Notably, variations within ensemble models (EMs)—such as RF, GBR,\
    \ and\nXGB—featured prominently, encompassing a total of 31 instances. This prevalence\
    \ was\nfollowed by the utilization of support vector models (SVMs), accounting\
    \ for 28 occurrences,\nand neural networks (NNs) with 23 instances. EMs and SVM-based\
    \ ML techniques were\nsubstantially utilized across the domains of crop classiﬁcation,\
    \ crop yield prediction, and\nsoil management. On the other hand, NNs demonstrated\
    \ exceptional effectiveness in\nidentifying and classifying crop diseases, emerging\
    \ as a prominent tool across all the\nscrutinized studies. Hence, the analysis\
    \ underscores the predominant role of EMs in the\nspheres of crop, soil, and water\
    \ management.\nAgronomy 2023, 13, x FOR PEER REVIEW \n19 of 27 \n \nand soil management.\
    \ On the other hand, NNs demonstrated exceptional effectiveness in \nidentifying\
    \ and classifying crop diseases, emerging as a prominent tool across all the scru-\n\
    tinized studies. Hence, the analysis underscores the predominant role of EMs in\
    \ the \nspheres of crop, soil, and water management. \n \nFigure 5. Usage of remote\
    \ sensing technology within each sub-category. \nThe preference for EMs like RF\
    \ over NNs is frequently influenced by practical con-\nsiderations concerning\
    \ data availability, computational resources, model complexity, in-\nterpretability,\
    \ and ease of implementation. These factors collectively position the RF \nmodel\
    \ as a versatile and pragmatic selection for diverse applications. \nFigure 5.\
    \ Usage of remote sensing technology within each sub-category.\nAgronomy 2023,\
    \ 13, 2302\n23 of 30\nThe preference for EMs like RF over NNs is frequently inﬂuenced\
    \ by practical con-\nsiderations concerning data availability, computational resources,\
    \ model complexity, inter-\npretability, and ease of implementation. These factors\
    \ collectively position the RF model as\na versatile and pragmatic selection for\
    \ diverse applications.\n \n \nFigure 5. Usage of remote sensing technology within\
    \ each sub-category. \nThe preference for EMs like RF over NNs is frequently influenced\
    \ by practical con-\nsiderations concerning data availability, computational resources,\
    \ model complexity, in-\nterpretability, and ease of implementation. These factors\
    \ collectively position the RF \nmodel as a versatile and pragmatic selection\
    \ for diverse applications. \n \nFigure 6. Number of machine learning algorithms\
    \ used in each category and sub-category. \nFigure 6. Number of machine learning\
    \ algorithms used in each category and sub-category.\nLeveraging machine learning\
    \ on remote sensing data has widened the scope of evolv-\ning farm management\
    \ systems into the real artiﬁcial intelligence systems. It can further\nprovide\
    \ a wide arena of smart decision-making with the ultimate aim of improving the\
    \ qual-\nity and production of agriculture. Further, the increasing availability\
    \ of various RS-based\nplatforms imaging at varied scales along with a range of\
    \ ML algorithms has the poten-\ntial to boost even more research and development\
    \ towards smarter, sustainable farming,\npreserving natural resources and protecting\
    \ ecosystems.\n5.1. Progress in Synergy of RS and ML Technologies in India\nThis\
    \ subsection aims to assess the advancements of RS and ML technology in agri-\n\
    cultural management within India. To achieve this, the studies were initially\
    \ categorized\nbased on the geographical regions where the research was conducted.\
    \ These research\nendeavors spanned across diverse regions of India, encompassing\
    \ approximately 60%\nof the nation’s total land area (as illustrated in Figure\
    \ 7). A discerning observation of\nthe ﬁgure underscores that a majority of studies\
    \ were undertaken in Uttar Pradesh (10),\nMaharashtra (9), Andhra Pradesh (4),\
    \ Karnataka (4), West Bengal (3), Tamil Nadu (2),\nJharkhand (2). Furthermore,\
    \ a single study was conducted in each of the following states:\nUttarakhand,\
    \ Chhattisgarh, Telangana, Haryana, Kerala, Madhya Pradesh, and Himachal\nPradesh.\
    \ Notably, one study [72] estimated rice yield across 18 states in India, while\
    \ another\npair of studies [59,60] harnessed the prowess of cloud computing to\
    \ classify crops based\non irrigation type, crop category, and cultivation intensity\
    \ across South Asia. Curiously,\nthere is a dearth of studies from northeastern\
    \ and Himalayan states, with the exceptions of\nUttarakhand and Himachal Pradesh.\
    \ This disparity in study distribution can be attributed\nto the varying levels\
    \ of technological advancement in different states, coupled with the\navailability\
    \ of suitable agricultural areas for study purposes.\nThe distribution of selected\
    \ studies was further assessed on an annual basis, as il-\nlustrated in Figure\
    \ 8. The trajectory of research from India concerning the conﬂuence of\nRS and\
    \ ML technologies exhibited substantial variability. As discernible from Figure\
    \ 8,\nthere was no consistent upsurge in studies spanning the years 2015 to 2019.\
    \ Conversely,\nin 2019, there was a marked surge in the number of selected studies,\
    \ constituting a sub-\nAgronomy 2023, 13, 2302\n24 of 30\nstantial increase of\
    \ 20.37%. The culmination of this trend, reaching its peak at 27.78%, was\nobserved\
    \ during the year 2022. The increasing number of published studies distinctly\n\
    highlights the achievement of a particular degree of proﬁciency and competence\
    \ in RS and\nML technologies within India. The widespread adoption of these advanced\
    \ methodologies\nbodes positively for the achievement of long-standing goals connected\
    \ to sustainable and\neconomically feasible agricultural practices across the\
    \ nation.\n \ng\ng\np\ng\ndeavors spanned across diverse regions of India, encompassing\
    \ approximately 60% of the \nnation’s total land area (as illustrated in Figure\
    \ 7). A discerning observation of the figure \nunderscores that a majority of\
    \ studies were undertaken in Uttar Pradesh (10), Maharash-\ntra (9), Andhra Pradesh\
    \ (4), Karnataka (4), West Bengal (3), Tamil Nadu (2), Jharkhand (2). \nFurthermore,\
    \ a single study was conducted in each of the following states: Uttarakhand, \n\
    Chhattisgarh, Telangana, Haryana, Kerala, Madhya Pradesh, and Himachal Pradesh.\
    \ No-\ntably, one study [72] estimated rice yield across 18 states in India, while\
    \ another pair of \nstudies [57,58] harnessed the prowess of cloud computing to\
    \ classify crops based on irri-\ngation type, crop category, and cultivation intensity\
    \ across South Asia. Curiously, there is \na dearth of studies from northeastern\
    \ and Himalayan states, with the exceptions of Utta-\nrakhand and Himachal Pradesh.\
    \ This disparity in study distribution can be attributed to \nthe varying levels\
    \ of technological advancement in different states, coupled with the avail-\n\
    ability of suitable agricultural areas for study purposes.  \n \nFigure 7. Geographical\
    \ distribution of the selected articles from each state to the research field,\
    \ fo-\ncusing on remote sensing and machine learning applications in agriculture.\
    \ \nFigure 7. Geographical distribution of the selected articles from each state\
    \ to the research ﬁeld,\nfocusing on remote sensing and machine learning applications\
    \ in agriculture.\nAgronomy 2023, 13, x FOR PEER REVIEW \n21 of 27 \n \nThe distribution\
    \ of selected studies was further assessed on an annual basis, as illus-\ntrated\
    \ in Figure 8. The trajectory of research from India concerning the confluence\
    \ of RS \nand ML technologies exhibited substantial variability. As discernible\
    \ from Figure 8, there \nwas no consistent upsurge in studies spanning the years\
    \ 2015 to 2019. Conversely, in 2019, \nthere was a marked surge in the number\
    \ of selected studies, constituting a substantial \nincrease of 20.37%. The culmination\
    \ of this trend, reaching its peak at 27.78%, was ob-\nserved during the year\
    \ 2022. The increasing number of published studies distinctly high-\nlights the\
    \ achievement of a particular degree of proficiency and competence in RS and ML\
    \ \ntechnologies within India. The widespread adoption of these advanced methodologies\
    \ \nbodes positively for the achievement of long-standing goals connected to sustainable\
    \ and \neconomically feasible agricultural practices across the nation. \n \n\
    Figure 8. Bar chart representing the percentage of the selected articles from\
    \ the year 2015 to 2022. \n5.2. Digital Transformation: Pathway to Prosperity\
    \ \nRemote sensing provides robust, efficient, and reliable monitoring of agriculture.\
    \ \nHowever, limited attention has been paid to how to adapt it for precision\
    \ agriculture (PA) \napplications. PA applications require information at a much\
    \ finer scale; there is a signifi-\ncant challenge to adopting methodologies across\
    \ different scales. One exciting solution is \nFigure 8. Bar chart representing\
    \ the percentage of the selected articles from the year 2015 to 2022.\nAgronomy\
    \ 2023, 13, 2302\n25 of 30\n5.2. Digital Transformation: Pathway to Prosperity\n\
    Remote sensing provides robust, efﬁcient, and reliable monitoring of agriculture.\n\
    However, limited attention has been paid to how to adapt it for precision agriculture\n\
    (PA) applications. PA applications require information at a much ﬁner scale; there\
    \ is\na signiﬁcant challenge to adopting methodologies across different scales.\
    \ One exciting\nsolution is to leverage high-resolution UAV technology to ﬁne\
    \ tune the satellite-derived\nvariables in relation to the target crop. Machine\
    \ learning (ML) technology provides a\nunique opportunity for the development\
    \ of accurate and large-scale prediction [108]. ML\nalgorithms with big data can\
    \ solve extremely complex problems that cannot be solved\nvia simple mathematical\
    \ models [108]. One can use the crop phenotypic information\nextracted from the\
    \ UAV technology to derive accurate satellite-based crop information at\nlarger\
    \ scales.\nSimultaneously, there have been signiﬁcant advances in crop growth\
    \ modelling using\nmechanistic models [109–113]. These models predict the crop\
    \ evolution from sowing to\nharvest by utilizing the weather, soil, and crop management\
    \ information and simulating\ncrop phenology, photosynthesis, dynamics of temperature\
    \ and soil moisture, gas exchange\nbetween the crop canopy and atmosphere, biomass,\
    \ and crop yield. Crop growth models\nare difﬁcult to parameterize for large-scale\
    \ applications, as the variability in terms of\nvarieties, soil types, and crop\
    \ management practices can vary hugely. In this regard, the\nassimilation of remotely\
    \ sensed crop data with a crop simulation model is a promising\napproach. ML technology\
    \ has emerged as a promising complimentary tool to the commonly\nused crop simulation\
    \ modelling. Although current ML technology is deterministic, crop\nsimulation\
    \ models are also capable of handling non-experienced scenarios [108]. Machine\n\
    learning could combine the beneﬁts of remote sensing and crop simulation modelling\
    \ to\nmake reliable crop-based predictions. Figure 9 demonstrates the integration\
    \ of remote\nsensing, machine learning, and crop simulation modelling for agricultural\
    \ applications.\nAgronomy 2023, 13, x FOR PEER REVIEW \n22 of 27 \n \nof remotely\
    \ sensed crop data with a crop simulation model is a promising approach. ML \n\
    technology has emerged as a promising complimentary tool to the commonly used\
    \ crop \nsimulation modelling. Although current ML technology is deterministic,\
    \ crop simulation \nmodels are also capable of handling non-experienced scenarios\
    \ [108]. Machine learning \ncould combine the benefits of remote sensing and crop\
    \ simulation modelling to make relia-\nble crop-based predictions. Figure 9 demonstrates\
    \ the integration of remote sensing, ma-\nchine learning, and crop simulation\
    \ modelling for agricultural applications. \n \nFigure 9. Digital transformation\
    \ in agriculture representing integration of remotely sensed data, \ncrop simulation,\
    \ and machine learning. Figure modified from Jung et al. [108]. \n5.3. Limitations\
    \ and Way Forward \nThe agriculture sector in India has yet to fully embrace advanced\
    \ technologies. How-\never, given the challenges posed by fast-degrading land,\
    \ water scarcity, and climate \nchange, it has become imperative to adopt modern\
    \ technologies to ensure rational and \nefficient agriculture management. Although\
    \ RS and ML techniques offer many ad-\nvantages, they also have limitations. For\
    \ instance, limited availability of RS data on cloudy \ndays, especially the optical\
    \ data, and the difficulty in real-time monitoring of crops. Ad-\nditionally,\
    \ the usage of UAV is not very prominent in India yet. \nWith regards to the ML\
    \ technique, the high cost of cognitive solutions in the farming \nmarket is a\
    \ barrier, making it essential to provide more affordable options for wider adop-\n\
    tion. An open-source platform could make these solutions accessible and increase\
    \ under-\nstanding among farmers. To manage today’s data accumulation and leverage\
    \ technological \nadvancements, farms need decision support systems (DSSs) tailored\
    \ to their specific culti-\nvation systems. DSSs with advanced algorithms can\
    \ process vast amounts of data and pa-\nrameters that would be impossible for\
    \ farmers to handle manually However the high in-\nFigure 9. Digital transformation\
    \ in agriculture representing integration of remotely sensed data, crop\nsimulation,\
    \ and machine learning. Figure modiﬁed from Jung et al. [108].\n5.3. Limitations\
    \ and Way Forward\nThe agriculture sector in India has yet to fully embrace advanced\
    \ technologies. How-\never, given the challenges posed by fast-degrading land,\
    \ water scarcity, and climate change,\nit has become imperative to adopt modern\
    \ technologies to ensure rational and efﬁcient\nagriculture management. Although\
    \ RS and ML techniques offer many advantages, they\nalso have limitations. For\
    \ instance, limited availability of RS data on cloudy days, especially\nthe optical\
    \ data, and the difﬁculty in real-time monitoring of crops. Additionally, the\
    \ usage\nof UAV is not very prominent in India yet.\nWith regards to the ML technique,\
    \ the high cost of cognitive solutions in the farm-\ning market is a barrier,\
    \ making it essential to provide more affordable options for wider\nAgronomy 2023,\
    \ 13, 2302\n26 of 30\nadoption. An open-source platform could make these solutions\
    \ accessible and increase\nunderstanding among farmers. To manage today’s data\
    \ accumulation and leverage tech-\nnological advancements, farms need decision\
    \ support systems (DSSs) tailored to their\nspeciﬁc cultivation systems. DSSs\
    \ with advanced algorithms can process vast amounts of\ndata and parameters that\
    \ would be impossible for farmers to handle manually. However,\nthe high infrastructure\
    \ investment costs frequently prevent farmers from adopting these\ntechnologies.\n\
    This study highlights the current scenario of remote sensing and machine learning\n\
    technology in the agriculture domain in India. It is imperative to smartly manage\
    \ Indian\nagriculture to sustain a huge percentage of the Indian population. In\
    \ this regard, leveraging\nadvanced technologies seems to constitute one of our\
    \ best hopes to meet the emerging\nchallenges. The availability of huge datasets,\
    \ along with advanced technologies, can in\nthe future lead to smart farming by\
    \ adopting the decision support systems in relation to\ndiverse cultivation systems\
    \ in India. The integration of sensors, automatic data recording,\nML technology,\
    \ satellite datasets, UAV datasets, and decision support systems will provide\n\
    a framework to increase crop production and improve crop quality. ML and RS will\n\
    deﬁnitely provide a holistic framework for establishing sustainable agriculture.\
    \ In this\nregard, it is anticipated that the present systematic review will constitute\
    \ a beneﬁcial guide\nto governmental policymakers, researchers, developers, and\
    \ farmers. Consequently, this\nstudy adds considerable knowledge to the existing\
    \ literature in the form of a comprehensive\nanalysis of advances of ML and RS\
    \ in Indian agriculture, with a holistic overview.\nAuthor Contributions: Conceptualization,\
    \ N.R.P., S.P.; Methodology, S.P., N.R.P.; Data curation,\nS.P., N.R.P.; Visualization\
    \ & Writing—Original Draft, S.P., Writing—Review and editing, S.P., N.R.P.,\n\
    A.G.; supervision, N.R.P., A.G. All authors have read and agreed to the published\
    \ version of the\nmanuscript.\nFunding: This research received no external funding.\n\
    Data Availability Statement: The authors conﬁrm that the data supporting the ﬁndings\
    \ of this study\narea available within the article.\nConﬂicts of Interest: The\
    \ authors declare no conﬂict of interest.\nReferences\n1.\nFood and Agriculture\
    \ Organization. The Future of Food and Agriculture, Trends and Challenges; FAO:\
    \ Rome, Italy, 2017; Volume 4,\nISBN 9789251095515.\n2.\nFedoroff, N.V.; Battisti,\
    \ D.S.; Beachy, R.N.; Cooper, P.J.M.; Fischhoff, D.A.; Hodges, C.N.; Knauf, V.C.;\
    \ Lobell, D.; Mazur, B.J.;\nMolden, D.; et al. Radically Rethinking Agriculture\
    \ for the 21st Century. Science 2010, 327, 833–834. [CrossRef] [PubMed]\n3.\n\
    Food and Agriculture Organization. Impact of Disasters and Crises on Agriculture\
    \ and Food Security; FAO: Rome, Italy, 2018;\nISBN 9789251340714.\n4.\nGomiero,\
    \ T.; Pimentel, D.; Paoletti, M.G. Environmental Impact of Different Agricultural\
    \ Management Practices: Conventional vs.\nOrganic Agriculture. Crit. Rev. Plant\
    \ Sci. 2011, 30, 95–124. [CrossRef]\n5.\nGonzález-Orozco, C.E.; Porcel, M.; Velásquez,\
    \ D.F.A.; Orduz-Rodríguez, J.O. Extreme climate variability weakens a major tropical\n\
    agricultural hub. Ecol. Indic. 2020, 111, 106015. [CrossRef]\n6.\nWheeler, T.;\
    \ Von Braun, J. Climate Change Impacts on Global Food Security. Science 2013,\
    \ 341, 508–513. [CrossRef]\n7.\nKasampalis, D.A.; Alexandridis, T.K.; Deva, C.;\
    \ Challinor, A.; Moshou, D.; Zalidis, G. Contribution of Remote Sensing on Crop\n\
    Models: A Review. J. Imaging 2018, 4, 52. [CrossRef]\n8.\nChlingaryan, A.; Sukkarieh,\
    \ S.; Whelan, B. Machine learning approaches for crop yield prediction and nitrogen\
    \ status estimation\nin precision agriculture: A review. Comput. Electron. Agric.\
    \ 2018, 151, 61–69.\n9.\nLiakos, K.G.; Busato, P.; Moshou, D.; Pearson, S.; Bochtis,\
    \ D. Machine learning in agriculture: A review. Sensors 2018, 18, 2674.\n[CrossRef]\n\
    10.\nJha, K.; Doshi, A.; Patel, P.; Shah, M. A comprehensive review on automation\
    \ in agriculture using artiﬁcial intelligence. Artif.\nIntell. Agric. 2019, 2,\
    \ 1–12. [CrossRef]\n11.\nDiaz-Gonzalez, F.A.; Vuelvas, J.; Correa, C.A.; Vallejo,\
    \ V.E.; Patino, D. Machine learning and remote sensing techniques applied to\n\
    estimate soil indicators – Review. Ecol. Indic. 2022, 135, 108517. [CrossRef]\n\
    12.\nCherkassky, V.; Mulier, F.M. Learning from Data: Concepts, Theory, and Methods;\
    \ John Wiley & Sons: Hoboken, NJ, USA, 2007;\nISBN 9780470140512.\nAgronomy 2023,\
    \ 13, 2302\n27 of 30\n13.\nBenos, L.; Tagarakis, A.C.; Dolias, G.; Berruto, R.;\
    \ Kateris, D.; Bochtis, D. Machine Learning in Agriculture: A Comprehensive\n\
    Updated Review. Sensors 2021, 21, 3758. [CrossRef]\n14.\nBal, F.; Kayaalp, F.\
    \ Review of machine learning and deep learning models in agriculture. Int. Adv.\
    \ Res. Eng. J. 2021, 5, 309–323.\n[CrossRef]\n15.\nAli, M.; Deo, R.C.; Downs,\
    \ N.J.; Maraseni, T. Multi-stage committee based extreme learning machine model\
    \ incorporating the\ninﬂuence of climate parameters and seasonality on drought\
    \ forecasting. Comput. Electron. Agric. 2018, 152, 149–165. [CrossRef]\n16.\n\
    Torres, A.F.; Walker, W.R.; McKee, M. Forecasting daily potential evapotranspiration\
    \ using machine learning and limited climatic\ndata. Agric. Water Manag. 2011,\
    \ 98, 553–562. [CrossRef]\n17.\nAnagnostis, A.; Papageorgiou, E.; Bochtis, D.\
    \ Application of Artiﬁcial Neural Networks for Natural Gas Consumption Forecasting.\n\
    Sustainability 2020, 12, 6409. [CrossRef]\n18.\nCravero, A.; Pardo, S.; Sepúlveda,\
    \ S.; Muñoz, L. Challenges to Use Machine Learning in Agricultural Big Data: A\
    \ Systematic\nLiterature Review. Agronomy 2022, 12, 748. [CrossRef]\n19.\nWeiss,\
    \ M.; Jacob, F.; Duveiller, G. Remote sensing for agricultural applications: A\
    \ meta-review. Remote Sens. Environ. 2020,\n236, 111402. [CrossRef]\n20.\nBauer,\
    \ M.E.; Cipra, J.E. Identiﬁcation of Agricultural Crops by Computer Processing\
    \ of ERTS MSS Data; Technical Report for Purdue\nUniversity: West Lafayette, IN,\
    \ USA, 1973.\n21.\nHenrich, V.; Krauss, G.; Götze, C.; Sandow, C. Index DataBase.\
    \ 2011. Available online: https://www.indexdatabase.de/ (accessed\non 12 October\
    \ 2022).\n22.\nRouse, J.W., Jr.; Haas, R.H.; Schell, J.A.; Deering, D.W. Monitoring\
    \ the Vernal Advancement and Retrogradation (Green Wave\nEffect) of Natural. Vegetation.\
    \ Patent No. NASA-CR-132982, 1 November 1974.\n23.\nLary, D.J.; Alavi, A.H.; Gandomi,\
    \ A.H.; Walker, A.L. Machine learning in geosciences and remote sensing. Geosci.\
    \ Front. 2016, 7,\n3–10. [CrossRef]\n24.\nAli, I.; Greifeneder, F.; Stamenkovic,\
    \ J.; Neumann, M.; Notarnicola, C. Review of Machine Learning Approaches for Biomass\
    \ and\nSoil Moisture Retrievals from Remote Sensing Data. Remote Sens. 2015, 7,\
    \ 16398–16421. [CrossRef]\n25.\nVerrelst, J.; Malenovský, Z.; Van der Tol, C.;\
    \ Camps-Valls, G.; Gastellu-Etchegorry, J.-P.; Lewis, P.; North, P.; Moreno, J.\
    \ Quantifying\nvegetation biophysical variables from imaging spectroscopy data:\
    \ A review on retrieval methods. Surv. Geophys. 2019, 40,\n589–629.\n26.\nMountrakis,\
    \ G.; Im, J.; Ogole, C. Support vector machines in remote sensing: A review. ISPRS\
    \ J. Photogramm. Remote Sens. 2011,\n66, 247–259. [CrossRef]\n27.\nBelgiu, M.;\
    \ Drăgu¸t, L. Random forest in remote sensing: A review of applications and future\
    \ directions. ISPRS J. Photogramm.\nRemote Sens. 2016, 114, 24–31. [CrossRef]\n\
    28.\nZhu, X.; Liu, D. Improving forest aboveground biomass estimation using seasonal\
    \ Landsat NDVI time-series. ISPRS J. Photogramm.\nRemote Sens. 2015, 102, 222–231.\
    \ [CrossRef]\n29.\nCamacho, F.; Baret, F.; Weiss, M.; Li, W.; Fuster, B.; Lacaze,\
    \ R.; Ganguli, S. Comparison of Physically Based and Empirical Methods\nfor Retrieval\
    \ of LAI and FAPAR over Speciﬁc and Generic Crops Using Landsat8 Data. In Proceedings\
    \ of the 5th International\nSymposium on Recent Advances in Quantitative Remote\
    \ Sensing, Torrent, Spain, 18–22 September 2017. [CrossRef]\n30.\nYuan, H.; Yang,\
    \ G.; Li, C.; Wang, Y.; Liu, J.; Yu, H.; Feng, H.; Xu, B.; Zhao, X.; Yang, X.\
    \ Retrieving Soybean Leaf Area Index from\nUnmanned Aerial Vehicle Hyperspectral\
    \ Remote Sensing: Analysis of RF, ANN, and SVM Regression Models. Remote Sens.\
    \ 2017,\n9, 309. [CrossRef]\n31.\nAraus, J.L.; Cairns, J.E. Field high-throughput\
    \ phenotyping: The new crop breeding frontier. Trends Plant Sci. 2014, 19, 52–61.\n\
    [CrossRef] [PubMed]\n32.\nDebolini, M.; Schoorl, J.M.; Temme, A.; Galli, M.; Bonari,\
    \ E. Changes in Agricultural Land Use Affecting Future Soil Redistribution\nPatterns:\
    \ A Case Study in Southern Tuscany (Italy). Land Degrad. Dev. 2015, 26, 574–586.\
    \ [CrossRef]\n33.\nMoher, D.; Liberati, A.; Tetzlaff, J.; Altman, D.G.; The PRISMA\
    \ Group. Preferred reporting items for systematic reviews and\nmeta-analyses:\
    \ The PRISMA statement. Ann. Intern. Med. 2009, 151, 264–269. [CrossRef]\n34.\n\
    Schmedtmann, J.; Campagnolo, M.L. Reliable Crop Identiﬁcation with Satellite Imagery\
    \ in the Context of Common Agriculture\nPolicy Subsidy Control. Remote Sens. 2015,\
    \ 7, 9325–9346. [CrossRef]\n35.\nVan Tricht, K.; Gobin, A.; Gilliams, S.; Piccard,\
    \ I. Synergistic Use of Radar Sentinel-1 and Optical Sentinel-2 Imagery for Crop\n\
    Mapping: A Case Study for Belgium. Remote Sens. 2018, 10, 1642. [CrossRef]\n36.\n\
    Ministry of Agriculture. Agriculture Census (2015–2016): All India Report on Number\
    \ and Area of Operational Holdings.\nAgriculture Census Division, Department of\
    \ Agriculture, Co-Operation & Farmers Welfare, Ministry of Agriculture and Farmers\n\
    Welfare, Government of India, 2019. Available online: https://agcensus.nic.in/document/agcen1516/ac_1516_report_ﬁnal-2202\n\
    21.pdf (accessed on 12 October 2022).\n37.\nAbraham, M.; Pingali, P. Transforming\
    \ Smallholder Agriculture to Achieve the SDGs. In The Role of Smallholder Farms\
    \ in Food and\nNutrition Security; Springer: Cham, Switzerland, 2020; pp. 173–209.\n\
    38.\nWan, S.; Lei, T.C.; Chou, T.Y. An enhanced supervised spatial decision support\
    \ system of image classiﬁcation: Consideration on\nthe ancillary information of\
    \ paddy rice area. Int. J. Geogr. Inf. Sci. 2010, 24, 623–642. [CrossRef]\n39.\n\
    You, X.; Meng, J.; Zhang, M.; Dong, T. Remote Sensing Based Detection of Crop\
    \ Phenology for Agricultural Zones in China Using\na New Threshold Method. Remote\
    \ Sens. 2013, 5, 3190–3211. [CrossRef]\nAgronomy 2023, 13, 2302\n28 of 30\n40.\n\
    Neetu; Ray, S.S. Exploring machine learning classiﬁcation algorithms for crop\
    \ classiﬁcation using Sentinel 2 data. ISPRS Int. Arch.\nPhotogramm. Remote Sens.\
    \ Spat. Inf. Sci. 2019, 42, 573–578. [CrossRef]\n41.\nKoppaka, R.; Moh, T.-S.\
    \ Machine Learning in Indian Crop Classiﬁcation of Temporal Multi-Spectral Satellite\
    \ Image. In Proceedings\nof the 2020 14th International Conference on Ubiquitous\
    \ Information Management and Communication (IMCOM), Taichung,\nTaiwan, 3–5 January\
    \ 2020; IEEE: Piscataway, NJ, USA, 2020; pp. 1–8. [CrossRef]\n42.\nKumar, P.;\
    \ Gupta, D.K.; Mishra, V.N.; Prasad, R. Comparison of support vector machine,\
    \ artiﬁcial neural network, and spectral\nangle mapper algorithms for crop classiﬁcation\
    \ using LISS IV data. Int. J. Remote Sens. 2015, 36, 1604–1617. [CrossRef]\n43.\n\
    Khobragade, A.; Athawale, P.; Raguwanshi, M. Optimization of Statistical Learning\
    \ Algorithm for Crop Discrimination Using\nRemote Sensing Data. In Proceedings\
    \ of the 2015 IEEE International Advance Computing Conference (IACC), Banglore,\
    \ India,\n12–13 June 2015; IEEE: Piscataway, NJ, USA, 2015; pp. 570–574. [CrossRef]\n\
    44.\nLee, J.Y.; Wang, S.; Figueroa, A.J.; Strey, R.; Lobell, D.B.; Naylor, R.L.;\
    \ Gorelick, S.M.; Lee, J.Y.; Wang, S.; Figueroa, A.J.; et al.\nMapping Sugarcane\
    \ in Central India with Smartphone Crowdsourcing. Remote Sens. 2022, 14, 703.\
    \ [CrossRef]\n45.\nHudait, M.; Patel, P.P. Crop-type mapping and acreage estimation\
    \ in smallholding plots using Sentinel-2 images and machine\nlearning algorithms:\
    \ Some comparisons. Egypt. J. Remote Sens. Space Sci. 2022, 25, 147–156. [CrossRef]\n\
    46.\nPandey, V.; Choudhary, K.K.; Murthy, C.S.; Poddar, M.K. Improved In-Season\
    \ Crop Classiﬁcation Performance Using Ensemble\nLearning Technique: A Case Study\
    \ of Lekoda Insurance Unit, Ujjain, Madhya Pradesh. ISPRS Int. Arch. Photogramm.\
    \ Remote Sens.\nSpat. Inf. Sci. 2019, 42, 477–481. [CrossRef]\n47.\nMeraj, G.;\
    \ Kanga, S.; Ambadkar, A.; Kumar, P.; Singh, S.K.; Farooq, M.; Johnson, B.A.;\
    \ Rai, A.; Sahu, N. Assessing the Yield\nof Wheat Using Satellite Remote Sensing-Based\
    \ Machine Learning Algorithms and Simulation Modeling. Remote Sens. 2022,\n14,\
    \ 3005. [CrossRef]\n48.\nSaini, R.; Ghosh, S.K. Crop classiﬁcation in a heterogeneous\
    \ agricultural environment using ensemble classiﬁers and single-date\nSentinel-2A\
    \ imagery. Geocarto Int. 2021, 36, 2141–2159. [CrossRef]\n49.\nGumma, M.K.; Thenkabail,\
    \ P.S.; Teluguntla, P.G.; Oliphant, A.; Xiong, J.; Giri, C.; Pyla, V.; Dixit,\
    \ S.; Whitbread, A.M. Agricultural\ncropland extent and areas of South Asia derived\
    \ using Landsat satellite 30-m time-series big-data using random forest machine\n\
    learning algorithms on the Google Earth Engine cloud. GIScience Remote Sens. 2020,\
    \ 57, 302–322. [CrossRef]\n50.\nGumma, M.K.; Thenkabail, P.S.; Panjala, P.; Teluguntla,\
    \ P.; Yamano, T.; Mohammed, I. Multiple agricultural cropland products of\nSouth\
    \ Asia developed using Landsat-8 30 m and MODIS 250 m data using machine learning\
    \ on the Google Earth Engine (GEE)\ncloud and spectral matching techniques (SMTs)\
    \ in support of food and water security. GIScience Remote Sens. 2022, 59, 1048–1077.\n\
    [CrossRef]\n51.\nNihar, A.; Patel, N.R.; Pokhariyal, S.; Danodia, A. Sugarcane\
    \ Crop Type Discrimination and Area Mapping at Field Scale Using\nSentinel Images\
    \ and Machine Learning Methods. J. Indian Soc. Remote Sens. 2022, 50, 217–225.\
    \ [CrossRef]\n52.\nRanjan, A.K.; Parida, B.R. Paddy acreage mapping and yield\
    \ prediction using sentinel-based optical and SAR data in Sahibganj\ndistrict,\
    \ Jharkhand (India). Spat. Inf. Res. 2019, 27, 399–410. [CrossRef]\n53.\nWang,\
    \ S.; Di Tommaso, S.; Faulkner, J.; Friedel, T.; Kennepohl, A.; Strey, R.; Lobell,\
    \ D.B.; Wang, S.; Di Tommaso, S.; Faulkner, J.;\net al. Mapping Crop Types in\
    \ Southeast India with Smartphone Crowdsourcing and Deep Learning. Remote Sens.\
    \ 2020, 12, 2957.\n[CrossRef]\n54.\nVerma, A.; Kumar, A.; Lal, K. Kharif crop\
    \ characterization using combination of SAR and MSI Optical Sentinel Satellite\
    \ datasets.\nJ. Earth Syst. Sci. 2019, 128, 230. [CrossRef]\n55.\nKumari, M.;\
    \ Pandey, V.; Choudhary, K.K.; Murthy, C.S. Object-based machine learning approach\
    \ for soybean mapping using\ntemporal sentinel-1/sentinel-2 data. Geocarto Int.\
    \ 2022, 37, 6848–6866. [CrossRef]\n56.\nShukla, G.; Garg, R.D.; Srivastava, H.S.;\
    \ Garg, P.K. Performance analysis of different predictive models for crop classiﬁcation\n\
    across an aridic to ustic area of Indian states. Geocarto Int. 2018, 33, 240–259.\
    \ [CrossRef]\n57.\nMeshram, P.; Ray, S.S. Field-Level Crop Classiﬁcation Using\
    \ an Optimal Dataset of Multi-temporal Sentinel-1 and Polarimetric\nRADARSAT-2\
    \ SAR Data with Machine Learning Algorithms. J. Indian Soc. Remote Sens. 2021,\
    \ 49, 2945–2958. [CrossRef]\n58.\nMandal, D.; Kumar, V.; Rao, Y.S. An assessment\
    \ of temporal RADARSAT-2 SAR data for crop classiﬁcation using KPCA based\nsupport\
    \ vector machine. Geocarto Int. 2022, 37, 1547–1559. [CrossRef]\n59.\nRamathilagam,\
    \ A.B.; Haldar, D. Evaluation of different machine learning algorithms for pearl\
    \ millet discrimination using\nmulti-sensor SAR data. Geocarto Int. 2022, 37,\
    \ 5116–5132. [CrossRef]\n60.\nElango, S.; Haldar, D.; Danodia, A. Discrimination\
    \ of maize crop in a mixed Kharif crop scenario with synergism of multipara-\n\
    metric SAR and optical data. Geocarto Int. 2022, 37(18), 5307–5326. [CrossRef]\n\
    61.\nNidamanuri, R.R. Hyperspectral discrimination of tea plant varieties using\
    \ machine learning, and spectral matching methods.\nRemote Sens. Appl. Soc. Environ.\
    \ 2020, 19, 100350. [CrossRef]\n62.\nBhosle, K.; Musande, V. Evaluation of Deep\
    \ Learning CNN Model for Land Use Land Cover Classiﬁcation and Crop Identiﬁcation\n\
    Using Hyperspectral Remote Sensing Images. J. Indian Soc. Remote Sens. 2019, 47,\
    \ 1949–1958. [CrossRef]\n63.\nSingh, P.; Pandey, P.C.; Petropoulos, G.P.; Pavlides,\
    \ A.; Srivastava, P.K.; Koutsias, N.; Deng, K.A.K.; Bao, Y. Hyperspectral\nRemote\
    \ Sensing in Precision Agriculture: Present Status, Challenges, and Future Trends.\
    \ In Hyperspectral Remote Sensing; Elsevier:\nAmsterdam, The Netherlands, 2020;\
    \ pp. 121–146.\n64.\nLin, F.-C.; Chung, L.-K.; Wang, C.-J.; Ku, W.-Y.; Chou, T.-Y.\
    \ Storage and processing of massive remote sensing images using a\nnovel cloud\
    \ computing platform. GIScience Remote Sens. 2013, 50, 322–336. [CrossRef]\nAgronomy\
    \ 2023, 13, 2302\n29 of 30\n65.\nPérez-Cutillas, P.; Pérez-Navarro, A.; Conesa-García,\
    \ C.; Zema, D.A.; Amado-Álvarez, J.P. What is going on within google earth\nengine?\
    \ A systematic review and meta-analysis. Remote Sens. Appl. Soc. Environ. 2023,\
    \ 29. [CrossRef]\n66.\nLi, S.; Dragicevic, S.; Castro, F.A.; Sester, M.; Winter,\
    \ S.; Çöltekin, A.; Pettit, C.; Jiang, B.; Haworth, J.; Stein, A.; et al. Geospatial\
    \ big\ndata handling theory and methods: A review and research challenges. ISPRS\
    \ J. Photogramm. Remote Sens. 2016, 115, 119–133.\n[CrossRef]\n67.\nLaney, D.\
    \ 3D Data management: Controlling data volume, velocity and variety. Meta Group.\
    \ Lakshen Guma AbDulkhader 2001,\n1–4.\n68.\nTamiminia, H.; Salehi, B.; Mahdianpari,\
    \ M.; Quackenbush, L.; Adeli, S.; Brisco, B. Google Earth Engine for geo-big data\n\
    applications: A meta-analysis and systematic review. ISPRS J. Photogramm. Remote\
    \ Sens. 2020, 164, 152–170. [CrossRef]\n69.\nMedar, R.A.; Rajpurohit, V.S.; Ambekar,\
    \ A.M. Sugarcane Crop Yield Forecasting Model Using Supervised Machine Learning.\
    \ Int.\nJ. Intell. Syst. Appl. 2019, 11, 11–20. [CrossRef]\n70.\nChandra, A.;\
    \ Mitra, P.; Dubey, S.K.; Ray, S.S. Machine learning approach for kharif rice\
    \ yield prediction integrating multi-temporal\nvegetation indices and weather\
    \ and non-weather variables. ISPRS Int. Arch. Photogramm. Remote Sens. Spat. Inf.\
    \ Sci. 2019, 42,\n187–194. [CrossRef]\n71.\nWolanin, A.; Mateo-García, G.; Camps-Valls,\
    \ G.; Gómez-Chova, L.; Meroni, M.; Duveiller, G.; Liangzhi, Y.; Guanter, L. Estimating\n\
    and understanding crop yields with explainable deep learning in the Indian Wheat\
    \ Belt. Environ. Res. Lett. 2020, 15, 024019.\n[CrossRef]\n72.\nSingla, S.K.;\
    \ Garg, R.D.; Dubey, O.P. Ensemble Machine Learning Methods to Estimate the Sugarcane\
    \ Yield Based on Remote\nSensing Information. Rev. d’Intelligence Artif. 2020,\
    \ 34, 731–743. [CrossRef]\n73.\nKrupavathi, K.; Raghubabu, M.; Mani, A.; Parasad,\
    \ P.R.K.; Edukondalu, L. Field-Scale Estimation and Comparison of the\nSugarcane\
    \ Yield from Remote Sensing Data: A Machine Learning Approach. J. Indian Soc.\
    \ Remote Sens. 2021, 50, 299–312.\n[CrossRef]\n74.\nPrasad, N.R.; Patel, N.R.;\
    \ Danodia, A. Crop yield prediction in cotton for regional level using random\
    \ forest approach. Spat. Inf.\nRes. 2021, 29, 195–206. [CrossRef]\n75.\nArumugam,\
    \ P.; Chemura, A.; Schauberger, B.; Gornott, C. Remote Sensing Based Yield Estimation\
    \ of Rice (Oryza Sativa L.) Using\nGradient Boosted Regression in India. Remote\
    \ Sens. 2021, 13, 2379. [CrossRef]\n76.\nNihar, A.; Patel, N.R.; Danodia, A. Machine-Learning-Based\
    \ Regional Yield Forecasting for Sugarcane Crop in Uttar Pradesh,\nIndia. J. Indian\
    \ Soc. Remote Sens. 2022, 50, 1519–1530. [CrossRef]\n77.\nOerke, E.C. Crop losses\
    \ to pests. J. Agric. Sci. 2006, 144, 31–43. [CrossRef]\n78.\nZhang, J.; Huang,\
    \ Y.; Pu, R.; Gonzalez-Moreno, P.; Yuan, L.; Wu, K.; Huang, W. Monitoring plant\
    \ diseases and pests through\nremote sensing technology: A review. Comput. Electron.\
    \ Agric. 2019, 165, 104943. [CrossRef]\n79.\nNilsson, H. Remote Sensing and Image\
    \ Analysis in Plant Pathology. Annu. Rev. Phytopathol. 1995, 33, 489–528. [CrossRef]\n\
    80.\nPatil, P.; Yaligar, N.; Meena, S. Comparison of Performance of Classiﬁers—SVM,\
    \ RF and ANN in Potato Blight Disease Detection\nUsing Leaf Images. In Proceedings\
    \ of the 2017 IEEE International Conference on Computational Intelligence and\
    \ Computing\nResearch (ICCIC), Coimbatore, India, 14–16 December 2017; IEEE: Piscataway,\
    \ NJ, USA, 2017; pp. 1–5. [CrossRef]\n81.\nSelvaraj, M.G.; Vergara, A.; Ruiz,\
    \ H.; Safari, N.; Elayabalan, S.; Ocimati, W.; Blomme, G. AI-powered banana diseases\
    \ and pest\ndetection. Plant Methods 2019, 15, 92. [CrossRef]\n82.\nRamesh, S.;\
    \ Vydeki, D. Application of machine learning in detection of blast disease in\
    \ South Indian rice crops. J. Phytol. 2019, 11,\n31–37. [CrossRef]\n83.\nShrivastava,\
    \ V.K.; Pradhan, M.K.; Minz, S.; Thakur, M.P. Rice Plant Disease Classiﬁcation\
    \ Using Transfer Learning of Deep\nConvolutional Neural Network. Int. Arch. Photogramm.\
    \ Remote Sens. Spat. Inf. Sci. 2019, 42, W6. [CrossRef]\n84.\nChauhan, M.D. Detection\
    \ of maize disease using random forest classiﬁcation algorithm. Turk. J. Comput.\
    \ Math. Educ. 2021, 12,\n715–720.\n85.\nSingh; Krishnan, P.; Singh, V.K.; Banerjee,\
    \ K. Application of thermal and visible imaging to estimate stripe rust disease\
    \ severity in\nwheat using supervised image classiﬁcation methods. Ecol. Inform.\
    \ 2022, 71, 101774. [CrossRef]\n86.\nShorewala, S.; Ashfaque, A.; Sidharth, R.;\
    \ Verma, U. Weed Density and Distribution Estimation for Precision Agriculture\
    \ Using\nSemi-Supervised Learning. IEEE Access 2021, 9, 27971–27986. [CrossRef]\n\
    87.\nVirnodkar, S.S.; Pachghare, V.K.; Patil, V.C.; Jha, S.K. Remote sensing and\
    \ machine learning for crop water stress determination in\nvarious crops: A critical\
    \ review. Precis. Agric. 2020, 21, 1121–1155. [CrossRef]\n88.\nDhyani, Y.; Pandya,\
    \ R.J. Deep Learning Oriented Satellite Remote Sensing for Drought and Prediction\
    \ in Agriculture. In\nProceedings of the 2021 IEEE 18th India Council International\
    \ Conference (INDICON), Guwahati, India, 19–21 December 2021;\nIEEE: Piscataway,\
    \ NJ, USA, 2021; pp. 1–5. [CrossRef]\n89.\nSingh, T.P.; Nandimath, P.; Kumbhar,\
    \ V.; Das, S.; Barne, P. Drought risk assessment and prediction using artiﬁcial\
    \ intelligence over\nthe southern Maharashtra state of India. Model. Earth Syst.\
    \ Environ. 2020, 7, 2005–2013. [CrossRef]\n90.\nProdhan, F.A.; Zhang, J.; Yao,\
    \ F.; Shi, L.; Pangali Sharma, T.P.; Zhang, D.; Cao, D.; Zheng, M.; Ahmed, N.;\
    \ Mohana, H.P. Deep\nlearning for monitoring agricultural drought in South Asia\
    \ using remote sensing data. Remote Sens. 2021, 13, 1715. [CrossRef]\n91.\nKrishna,\
    \ G.; Sahoo, R.N.; Singh, P.; Bajpai, V.; Patra, H.; Kumar, S.; Dandapani, R.;\
    \ Gupta, V.K.; Viswanathan, C.; Ahmad, T.;\net al. Comparison of various modelling\
    \ approaches for water deﬁcit stress monitoring in rice crop through hyperspectral\
    \ remote\nsensing. Agric. Water Manag. 2018, 213, 231–244. [CrossRef]\nAgronomy\
    \ 2023, 13, 2302\n30 of 30\n92.\nDas, B.; Sahoo, R.N.; Pargal, S.; Krishna, G.;\
    \ Verma, R.; Viswanathan, C.; Sehgal, V.K.; Gupta, V.K. Evaluation of different\n\
    water absorption bands, indices and multivariate models for water-deﬁcit stress\
    \ monitoring in rice using visible-near infrared\nspectroscopy. Spectrochim. Acta\
    \ Part A Mol. Biomol. Spectrosc. 2021, 247, 119104. [CrossRef]\n93.\nKumar, A.;\
    \ Sadashivan, S.; Nampally, T.; Rajalakshmi, P.; Guo, W.; Naik, B.; Marathi, B.;\
    \ Desai, U. Identiﬁcation of Water-Stressed\nArea in Maize Crop Using Uav Based\
    \ Remote Sensing. In Proceedings of the 2020 IEEE India Geoscience and Remote\
    \ Sensing\nSymposium (InGARSS), Ahmedabad, India, 1–4 December 2020; IEEE: Piscataway,\
    \ NJ, USA, 2020; pp. 146–149. [CrossRef]\n94.\nTiwari, S.K.; Saha, S.K.; Kumar,\
    \ S. Prediction Modeling and Mapping of Soil Carbon Content Using Artiﬁcial Neural\
    \ Network,\nHyperspectral Satellite Data and Field Spectroscopy. Adv. Remote Sens.\
    \ 2015, 4, 63–72. [CrossRef]\n95.\nKalambukattu, J.G.; Kumar, S.; Raj, R.A. Digital\
    \ soil mapping in a Himalayan watershed using remote sensing and terrain\nparameters\
    \ employing artiﬁcial neural network model. Environ. Earth Sci. 2018, 77, 203.\
    \ [CrossRef]\n96.\nKaur, G.; Das, K.; Hazra, J. Soil Nutrients Prediction Using\
    \ Remote Sensing Data in Western India: An Evaluation of Machine\nLearning Models.\
    \ In Proceedings of the IGARSS 2020-2020 IEEE International Geoscience and Remote\
    \ Sensing Symposium,\nWaikoloa, HI, USA, 26 September–2 October 2020; IEEE: Piscataway,\
    \ NJ, USA, 2020; pp. 4677–4680. [CrossRef]\n97.\nAlexakis, D.D.; Mexis, F.-D.K.;\
    \ Vozinaki, A.-E.K.; Daliakopoulos, I.N.; Tsanis, I.K. Soil Moisture Content Estimation\
    \ Based on\nSentinel-1 and Auxiliary Earth Observation Products. A Hydrological\
    \ Approach. Sensors 2017, 17, 1455. [CrossRef]\n98.\nKumar, P.; Prasad, R.; Choudhary,\
    \ A.; Gupta, D.K.; Mishra, V.N.; Vishwakarma, A.K.; Srivastava, P.K. Comprehensive\
    \ evaluation\nof soil moisture retrieval models under different crop cover types\
    \ using C-band synthetic aperture radar data. Geocarto Int. 2019,\n34, 1022–1041.\
    \ [CrossRef]\n99.\nDatta, S.; Das, P.; Dutta, D.; Giri, R.K. Estimation of Surface\
    \ Moisture Content using Sentinel-1 C-band SAR Data Through\nMachine Learning\
    \ Models. J. Indian Soc. Remote Sens. 2021, 49, 887–896. [CrossRef]\n100. Das,\
    \ B.; Rathore, P.; Roy, D.; Chakraborty, D.; Jatav, R.S.; Sethi, D.; Kumar, P.\
    \ Comparison of bagging, boosting and stacking\nalgorithms for surface soil moisture\
    \ mapping using optical-thermal-microwave remote sensing synergies. Catena 2022,\
    \ 217.\n[CrossRef]\n101. Kalambukattu, J.G.; Kumar, S. Hyperspectral remote sensing\
    \ in characterizing soil salinity severity using SVM technique-a case\nstudy of\
    \ alluvial plains. Int. J. Adv. Remote Sens. GIS 2015, 4, 1344–1360.\n102. Rani,\
    \ A.; Kumar, N.; Sinha, N.K.; Kumar, J. Identiﬁcation of salt-affected soils using\
    \ remote sensing data through random forest\ntechnique: A case study from India.\
    \ Arab. J. Geosci. 2022, 15, 1–16. [CrossRef]\n103. Vibhute, A.D.; Kale, K.V.;\
    \ Dhumal, R.K.; Mehrotra, S.C. Soil Type Classiﬁcation and Mapping Using Hyperspectral\
    \ Remote\nSensing Data. In Proceedings of the 2015 International Conference on\
    \ Man and Machine Interfacing (MAMI), Bhubaneswar, India,\n17–19 December 2015;\
    \ IEEE: Piscataway, NJ, USA, 2015; pp. 1–4. [CrossRef]\n104. Kumaraperumal, R.;\
    \ Pazhanivelan, S.; Geethalakshmi, V.; Nivas Raj, M.; Muthumanickam, D.; Kaliaperumal,\
    \ R.; Tarun Kshatriya,\nT.V. Comparison of Machine Learning-Based Prediction of\
    \ Qualitative and Quantitative Digital Soil-Mapping Approaches for\nEastern Districts\
    \ of Tamil Nadu, India. Land 2022, 11, 2279. [CrossRef]\n105. Fuentes, S.; Tongson,\
    \ E. Advances and requirements for machine learning and artiﬁcial intelligence\
    \ applications in viticulture.\nWine Vitic. J. 2018, 33, 47–52.\n106. Mekonnen,\
    \ Y.; Namuduri, S.; Burton, L.; Sarwat, A.; Bhansali, S. Review—Machine Learning\
    \ Techniques in Wireless Sensor\nNetwork Based Precision Agriculture. J. Electrochem.\
    \ Soc. 2019, 167, 037522. [CrossRef]\n107. Abioye, E.A.; Hensel, O.; Esau, T.J.;\
    \ Elijah, O.; Abidin, M.S.Z.; Ayobami, A.S.; Yerima, O.; Nasirahmadi, A. Precision\
    \ Irrigation\nManagement Using Machine Learning and Digital Farming Solutions.\
    \ Agriengineering 2022, 4, 70–103. [CrossRef]\n108. Jung, J.; Maeda, M.; Chang,\
    \ A.; Bhandari, M.; Ashapure, A.; Landivar-Bowles, J. The potential of remote\
    \ sensing and artiﬁcial\nintelligence as tools to improve the resilience of agriculture\
    \ production systems. Curr. Opin. Biotechnol. 2021, 70, 15–22. [CrossRef]\n[PubMed]\n\
    109. Halevy, A.; Norvig, P.; Pereira, F. The Unreasonable Effectiveness of Data.\
    \ IEEE Intell. Syst. 2009, 24, 8–12. [CrossRef]\n110. van Diepen, C.A.; Wolf,\
    \ J.; van Keulen, H.; Rappoldt, C. WOFOST: A simulation model of crop production.\
    \ Soil Use Manag. 1989,\n5, 16–24. [CrossRef]\n111. Jones, J.W.; Hoogenboom, G.;\
    \ Porter, C.H.; Boote, K.J.; Batchelor, W.D.; Hunt, L.A.; Wilkens, P.W.; Singh,\
    \ U.; Gijsman, A.J.; Ritchie,\nJ.T. The DSSAT cropping system model. Eur. J. Agron.\
    \ 2003, 18, 235–265. [CrossRef]\n112. Challinor, A.; Wheeler, T.; Craufurd, P.;\
    \ Slingo, J.; Grimes, D. Design and optimisation of a large-area process-based\
    \ model for\nannual crops. Agric. For. Meteorol. 2004, 124, 99–120. [CrossRef]\n\
    113. Holzworth, D.P.; Snow, V.; Janssen, S.; Athanasiadis, I.N.; Donatelli, M.;\
    \ Hoogenboom, G.; White, J.W.; Thorburn, P. Agricultural\nproduction systems modelling\
    \ and software: Current status and future prospects. Environ. Model. Softw. 2015,\
    \ 72, 276–286.\n[CrossRef]\nDisclaimer/Publisher’s Note: The statements, opinions\
    \ and data contained in all publications are solely those of the individual\n\
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or\
    \ the editor(s) disclaim responsibility for any injury to\npeople or property\
    \ resulting from any ideas, methods, instructions or products referred to in the\
    \ content.\n"
  inline_citation: '>'
  journal: Agronomy
  limitations: '>'
  pdf_link: https://www.mdpi.com/2073-4395/13/9/2302/pdf?version=1693480917
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Machine Learning-Driven Remote Sensing Applications for Agriculture in India—A
    Systematic Review
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.20944/preprints202307.1162.v1
  analysis: '>'
  authors:
  - Natalia M. Matsveichuk
  - Yuri N. Sotskov
  citation_count: 1
  full_citation: '>'
  full_text: '>

    This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details             Deny Allow selection
    Allow all Instructions for Authors Awards About FAQ Submit Log in/Register preprints.org
    > biology and life sciences > agricultural science and agronomy > doi: 10.20944/preprints202307.1162.v1
    Preprint Review Version 1 Preserved in Portico This version is not peer-reviewed
    Digital Technologies, Internet of Things and Cloud Computations Used in Agriculture:
    Surveys and Literature in Russian Natalia M. Matsveichuk and Yuri N. Sotskov *
    Version 1 : Received: 17 July 2023 / Approved: 17 July 2023 / Online: 18 July
    2023 (13:51:22 CEST) How to cite: Matsveichuk, N.M.; Sotskov, Y.N. Digital Technologies,
    Internet of Things and Cloud Computations Used in Agriculture: Surveys and Literature
    in Russian. Preprints 2023, 2023071162. https://doi.org/10.20944/preprints202307.1162.v1
    Abstract Development of agriculture in Russia and Belarus is based on the practical
    implementation of "smart" systems in agriculture based on the use of modern wireless,
    intelligent technologies and Internet of Things. This review presents research
    articles (mainly, in Russian) published in the period of 2013 – 2022 on the use
    of cloud technologies and Internet of Things for the development of agriculture
    in Russia and Belarus. An analysis of the use of cloud technologies and Internet
    of Things in the modern world is given on the basis of research articles and reviews
    published in English in the period of 2017 – 2022. The main directions of digitalization
    of modern agriculture are listed. The uses of cloud technologies and Internet
    of Things in agriculture are described along with promising directions for further
    research and applications. Keywords modern agriculture; smart farming; cloud computing;
    internet of things; survey Subject Biology and Life Sciences, Agricultural Science
    and Agronomy Copyright: This is an open access article distributed under the Creative
    Commons Attribution License which permits unrestricted use, distribution, and
    reproduction in any medium, provided the original work is properly cited. Download
    PDF Comments (0) We encourage comments and feedback from a broad range of readers.
    See criteria for comments and our Diversity statement. Leave a public comment
    Send a private comment to the author(s) * All users must log in before leaving
    a comment Related Articles Peer-review Articles Smart Farming Techniques for Climate
    Change Adaptation in Cyprus George Adamides et al. Atmosphere, 2020 Smart Agriculture
    and Rural Revitalization and Development Based on the Internet of Things under
    the Background of Big Data Xi Ma Sustainability, 2023 IoT Sensing Platform as
    a Driver for Digital Farming in Rural Africa Antonio Oliveira-Jr et al. Sensors,
    2020 Precision Agriculture Design Method Using a Distributed Computing Architecture
    on Internet of Things Context Francisco Ferrández-Pastor et al. Sensors, 2018
    Exploring the Adoption of Precision Agriculture for Irrigation in the Context
    of Agriculture 4.0: The Key Role of Internet of Things Sergio Monteleone et al.
    Sensors, 2020 Irriman Platform: Enhancing Farming Sustainability through Cloud
    Computing Techniques for Irrigation Management Manuel Forcén-Muñoz et al. Sensors,
    2021 Applying Adaptive Security Techniques for Risk Analysis of Internet of Things
    (IoT)-Based Smart Agriculture Abdur Riaz et al. Sustainability, 2022 A Cloud-Based
    IoT Platform for Precision Control of Soilless Greenhouse Cultivation Alaa Sagheer
    et al. Sensors, 2020 A Review on Security of Smart Farming and Precision Agriculture:
    Security Aspects, Attacks, Threats and Countermeasures Abbas Yazdinejad et al.
    Applied Sciences, 2021 LoRaFarM: A LoRaWAN-Based Smart Farming Modular IoT Architecture
    Gaia Codeluppi et al. Sensors, 2020 Views 97 Downloads 216 Comments 0 Get PDF
    Cite Share 0 Bookmark BibSonomy Mendeley Reddit Delicious Alerts Notify me about
    updates to this article or when a peer-reviewed version is published. Preprints.org
    is a free preprint server subsidized by MDPI in Basel, Switzerland. Contact us
    RSS MDPI Initiatives SciProfiles Sciforum Encyclopedia MDPI Books Scilit Proceedings
    JAMS Important links How it Works Advisory Board FAQ Friendly Journals Instructions
    for Authors About Statistics Subscribe Choose the area that interest you and we
    will send you notifications of new preprints at your preferred frequency. Subscribe
    © 2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Privacy Policy
    Terms of Use  Feedback'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Digital Technologies, Internet of Things and Cloud Computations Used in
    Agriculture: Surveys and Literature in Russian'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.48175/ijarsct-12088
  analysis: '>'
  authors:
  - Mayur Rajaram Salokhe
  citation_count: 0
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Journal of Advanced Research in Science, Communication and
    Technology
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Machine Learning: Applications in Agriculture (Crop Yield Prediction, Diease
    and Pest Detection)'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.17762/turcomat.v11i3.13604
  analysis: '>'
  authors:
  - Amit Kumar Mishra
  citation_count: 0
  full_citation: '>'
  full_text: ">\nTurkish Journal of Computer and Mathematics Education  \nVol.11 No.03\
    \ (2020), 2067-2075 \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604 \n \n\
    \ \n2067 \n \n \n \nResearch Article  \nInternet of Things (IoT) Networks: Architecture,\
    \ Applications, and Future \nDirections \n \nAmit Kumar Mishra \n Department of\
    \ Comp. Sc. & Info. Tech., Graphic Era Hill University, Dehradun, Uttarakhand,\
    \ India 248002, \n \nAbstract: The Internet of Things (IoT) networks, including\
    \ their design, applications, future directions, difficulties, and \nconstraints,\
    \ are thoroughly discussed in this research study. The explanation of IoT networks'\
    \ design, covering definitions \nand components, as well as centralized and decentralized\
    \ networks, follows an overview of IoT networks' significance. The \napplications\
    \ of IoT networks are examined in the next part, along with specific use examples\
    \ from the fields of healthcare, \nmanufacturing, transportation, and smart cities.\
    \ The following section of the article examines new developments in IoT \nnetworks,\
    \ including edge computing, 5G networks, AI, and blockchain technology. The difficulties\
    \ and constraints of IoT \nnetworks, such as security and privacy issues, interoperability\
    \ and compatibility problems, scalability, and network \ncongestion, are also\
    \ examined. The final section of the study summarizes the main ideas and research\
    \ conclusions, \nhighlighting the significance of IoT networks in our increasingly\
    \ linked society. \nKeywords: Security, privacy, interoperability, compatibility,\
    \ scalability, network congestion, edge computing, 5G networks. \n \nI. \nIntroduction\
    \ \n\"Things\" that are part of the \"Internet of Things\" (IoT) are equipped\
    \ with sensors, software, and network \nconnectivity, giving them the ability\
    \ to gather and share data with one another and with other devices. The \nongoing\
    \ digital transformation is taking place in many different domains, including\
    \ medical, industry, \ntransportation, and urban planning[1]. Connected devices\
    \ and their networks are important to this \ntransformation. This response will\
    \ concentrate on the architecture, applications, and future directions of \npotential\
    \ development of IoT networks.The term \"Internet of Things\" (IoT) describes\
    \ a network of actual \nphysical objects that are linked to the internet and are\
    \ capable of exchanging data and information with one \nanother. These items,\
    \ often known as \"smart devices,\" have sensors, software, and network connectivity\
    \ that \nenable data collection and transmission[2]. Healthcare, industry, transportation,\
    \ and smart cities are just a few of \nthe sectors being transformed by IoT networks.IoT\
    \ networks are becoming more and more significant as \nbusinesses all over the\
    \ world continue to utilize this technology to increase operational effectiveness,\
    \ cut costs, \nand improve customer experience[3]. Over the coming years, the\
    \ global IoT industry is anticipated to expand \nrapidly, increasing in size to\
    \ an estimated $1.5 trillion by 2030.This study paper's main goal is to give a\
    \ \nthorough review of IoT networks, covering its design, uses, and prospects.\
    \ Also, this study will emphasize the \ndrawbacks and restrictions of IoT networks\
    \ as well as how they may affect future studies. The reader will have a \nbetter\
    \ knowledge of the potential of IoT network. \nTurkish Journal of Computer and\
    \ Mathematics Education  \nVol.11 No.03 (2020), 2067-2075 \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604\
    \ \n \n \n2068 \n \n \n \nResearch Article  \n \nFigure.1 IoT Network \nII. \n\
    Review of Literature \nThe Internet of Things (IoT) , is an enabling technologies,\
    \ and potential uses. The authors highlight the obstacles \nand prospects in this\
    \ field while discussing the many components of the IoT, such as sensors, communication\
    \ \nnetworks, and data processing systems.The benefits and drawbacks of the IoT\
    \ are explored in this study, along \nwith concerns about privacy, security, and\
    \ standardization. The authors in [4], present an overview of the several \nIoT\
    \ technologies and talk about why it's important for them to work together.The\
    \ vision, architectural aspects, \nand future directions of the IoT are all discussed\
    \ in this article. The authors in [5]present an overview of the \nsupporting technologies,\
    \ including sensors, wireless networks, and cloud computing, and examine the different\
    \ \nIoT applications, such as healthcare, smart homes, and transportation.This\
    \ study examines all aspects of the IoT, \nfrom its definition and structure to\
    \ its potential uses. The writers highlight the challenges and potential in the\
    \ \nfield of IoT and cover its many subjects and developments, such as data analytics,\
    \ security, and standards.The \nauthors in [6], we'll look at the parallels and\
    \ differences between WSNs and the Internet of Things. The authors \ngive a rundown\
    \ of the technologies—sensors, wireless networks, and data processing systems—that\
    \ make \nWSNs and the Internet of Things possible, and then describe their many\
    \ uses in fields like medicine, smart \nhomes, and agriculture.The authors in\
    \ [7], we'll look at how effective resource management is essential to the \n\
    growth of cloud-based vehicle networks. The authors offer a resource management\
    \ paradigm for vehicular \nnetworks in the cloud and then analyze the many issues\
    \ and potential solutions that arise in this setting.The \nauthors in [8]Big data\
    \ analytics and the Internet of Things are discussed in this article and how they\
    \ can be used \nto build smart and connected neighborhoods. The authors in [9]provide\
    \ an in-depth analysis of the potential and \nthreats associated with the Internet\
    \ of Things (IoT) in smart cities. \nReference \nYear \nFocus \nMethodology \n\
    Key Findings \n[8]   \n2019 \nGeneral overview \nLiterature \nreview \nHighlights\
    \ the architecture, applications, and security \nconcerns of IoT. \n[9]   \n2018\
    \ \nHealthcare \napplications \nLiterature \nreview \nShows the potential benefits\
    \ of IoT in healthcare, \nincluding remote monitoring and improved patient \n\
    Turkish Journal of Computer and Mathematics Education  \nVol.11 No.03 (2020),\
    \ 2067-2075 \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604 \n \n \n2069\
    \ \n \n \n \nResearch Article  \noutcomes. \n[10]   \n2019 \nManufacturing \n\
    applications \nLiterature \nreview \nDiscusses \nthe \nvarious \napplications\
    \ \nof \nIoT \nin \nmanufacturing, including predictive maintenance and \nsupply\
    \ chain optimization. \n[11]   \n2019 \nTransportation \napplications \nLiterature\
    \ \nreview \nExplores the potential benefits of IoT in transportation, \nincluding\
    \ traffic management and vehicle monitoring. \n[12]   \n2018 \nSmart \ncity \n\
    applications \nLiterature \nreview \nDiscusses the various applications of IoT\
    \ in smart \ncities, including energy management and waste \nreduction. \n[13]\
    \   \n2019 \nGeneral overview \nLiterature \nreview \nProvides \na \ncomprehensive\
    \ \noverview \nof \nIoT \napplications, challenges, and future directions. \n\
    [14]   \n2019 \nIoT security \nLiterature \nreview \nHighlights the key security\
    \ challenges of IoT and \nsuggests potential solutions. \n[15]   \n2018 \nGeneral\
    \ overview \nLiterature \nreview \nProvides an overview of IoT technologies, security,\
    \ and \nprivacy concerns. \n[16]   \n2018 \nGeneral overview \nLiterature \nreview\
    \ \nDiscusses the enabling technologies, challenges, and \nopen research issues\
    \ of IoT. \n[17]   \n2018 \nGeneral overview \nLiterature \nreview \nProvides\
    \ a comprehensive overview of IoT architecture, \ntechnology, applications, security,\
    \ and future trends. \n[18]   \n2018 \nIoT and big data \nLiterature \nreview\
    \ \nExplores the potential benefits of combining IoT and \nbig data analytics.\
    \ \n[19]   \n2018 \nAgriculture \napplications \nLiterature \nreview \nDiscusses\
    \ the various applications of IoT in agriculture, \nincluding crop monitoring\
    \ and irrigation management. \n[20]   \n2018 \nEnergy management \napplications\
    \ \nLiterature \nreview \nExplores the potential benefits of IoT in energy \n\
    management, \nincluding \ndemand \nresponse \nand \nrenewable energy integration.\
    \ \n[21]   \n2018 \nSmart \ngrid \napplications \nLiterature \nreview \nDiscusses\
    \ the various applications of IoT in smart grids, \nincluding grid monitoring\
    \ and fault detection. \n[22]   \n2018 \nHealthcare \napplications \nLiterature\
    \ \nreview \nExplores the potential benefits of combining IoT and \ncloud computing\
    \ \nTable 1. Comparative Study of Various Techniques used for IoT System \n \n\
    III. \nArchitecture of IoT Networks \nIoT networks are made up of a variety of\
    \ parts that cooperate to make it possible to gather, process, and transmit \n\
    data. An IoT network's essential elements include: \nA. Definition and components\
    \ of IoT networks \ni. \nDevices: These are actual physical things with processors,\
    \ sensors, and network connectivity. Smart \nhousehold appliances, wearable fitness\
    \ trackers, commercial machinery, and environmental sensors are \na few examples\
    \ of IoT gadgets. \nii. \nSensors: Sensors are used to collect data from the physical\
    \ environment, such as temperature, \nhumidity, pressure, or position. A wide\
    \ range of sensors, such as accelerometers, gyroscopes, \nmicrophones, and cameras,\
    \ can be used by IoT networks. \niii. \nActuators: These parts are used to change\
    \ the environment in response to information gathered by \nsensors. For instance,\
    \ an IoT network may employ actuators to modify a room's temperature or turn on\
    \ \nand off lighting. \niv. \nNetwork Connectivity: IoT devices need to be connected\
    \ to a network to transmit data. Many network \ntechnologies, such as Wi-Fi, cellular\
    \ networks, and Bluetooth, can be used to do this. \nTurkish Journal of Computer\
    \ and Mathematics Education  \nVol.11 No.03 (2020), 2067-2075 \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604\
    \ \n \n \n2070 \n \n \n \nResearch Article  \nv. \nData processing is necessary\
    \ in order to make use of the data that IoT devices collect. This can be \ndone\
    \ on the device itself, on a nearby edge device, or on the cloud. Data analysis,\
    \ aggregation, and \nfiltering are all examples of processing. \nvi. \nStorage:IoT\
    \ networks may store, process, and analyse data using cloud services. These can\
    \ include \nservices for data storage, data analytics, and machine learning. \n\
    vii. \nApplications: Software applications can be used by IoT networks to let\
    \ users interact with and manage \nthe network. These can include mobile or web\
    \ tools that let consumers access and keep tabs on data \ncoming from their Internet\
    \ of Things (IoT) devices. \nviii. \nSecurity: IoT networks need to be secure\
    \ to avoid unauthorized access or modification of data. These \nmay include threat\
    \ detection technologies, access controls, and encryption. \nThese components\
    \ work together to enable IoT networks to collect, process, and send data from\
    \ the real world. \nIoT networks can offer a number of advantages by fusing these\
    \ elements, including increased operational \neffectiveness, lower costs, and\
    \ better user experiences. \nB. Four layers of IoT network architecture \nIoT\
    \ networks can be further divided into blocks or modules, each of which serves\
    \ a particular function. \nDepending on the particular use case of the IoT network,\
    \ these blocks can be organized in a variety of ways. \nSome of the typical building\
    \ blocks or modules for IoT network topologies include the following:All physical\
    \ \ncomponents of the IoT network, such as sensors, actuators, and gateways, are\
    \ included in the device layer. These \ngadgets gather information and talk to\
    \ other gadgets in the network.All network elements that permit \ncommunication\
    \ between devices, such as Wi-Fi routers, gateways, and switches, are included\
    \ in the network \nlayer. The network layer also comprises protocols and technologies,\
    \ such Bluetooth, Zigbee, and LoRa, that \nallow devices to connect with one another.\
    \ \ni. \nCloud Layer: This layer consists of cloud-based services that give the\
    \ IoT network access to storage, \ncompute, and analytics. These services can\
    \ be used to store data, handle data processing and analysis, \nand give end users\
    \ insights. \nii. \nApplication Layer: This layer consists of computer programs\
    \ that give end users access to the \ninformation gathered by the Internet of\
    \ Things network. These programs can be used to display data, \nstart processes,\
    \ and provide notifications. \niii. \nSecurity Layer:The security procedures in\
    \ this layer assure the availability, confidentiality, and \nintegrity of the\
    \ data gathered by the IoT network. Threat detection, access limits, and encryption\
    \ are \nexamples of security measures. \niv. \nDevice Layer:Device management,\
    \ network monitoring, and firmware updates are just a few of the \ntools and services\
    \ that help network administrators manage the IoT network. \nIoT networks can\
    \ be designed in a variety of ways depending on the network's needs and the individual\
    \ use \ncase. IoT networks often depend on a combination of physical objects,\
    \ network elements, cloud-based services, \nsoftware applications, security methods,\
    \ and management tools to operate, regardless of the architecture. \nC. Centralized\
    \ and decentralized networks \ni. \nCentralized Networks: All data gathered by\
    \ IoT devices is transmitted to a central server for \nprocessing and storage\
    \ in a centralized IoT network design. On-site or in the cloud are both viable\
    \ \nlocations for this server. The server is responsible for processing and analyzing\
    \ data, and may also \nserve as a gateway to other systems. As all the data is\
    \ in one place, centralized networks can be simpler \nto manage and maintain.\
    \ Yet, centralized networks may be less scalable and more subject to single \n\
    points of failure. \nii. \nDecentralized Networks: With a decentralized IoT network\
    \ architecture, data processing and storage \nis distributed among different devices\
    \ and systems. For instance, instead of being routed to a \ncentralized server,\
    \ data gathered by IoT devices may be processed and analyzed on the edge, in a\
    \ \nnearby gateway or device. While there are several nodes that can handle data\
    \ processing and storage, \nTurkish Journal of Computer and Mathematics Education\
    \  \nVol.11 No.03 (2020), 2067-2075 \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604\
    \ \n \n \n2071 \n \n \n \nResearch Article  \ndecentralized networks can be more\
    \ scalable and resilient than centralized networks. Decentralized \nnetworks,\
    \ on the other hand, can be trickier to run and maintain because data is dispersed\
    \ throughout \nnumerous hardware and software platforms. \nNetwork topologies\
    \ that are centralized or decentralized each have benefits and drawbacks of their\
    \ own. The \nnetwork's size, the amount of data being collected, whether real-time\
    \ processing is needed, and the required \nlevel of security all play a role in\
    \ the architecture choice. To attain the appropriate level of scalability, \n\
    robustness, and security, certain IoT networks may employ a hybrid architecture,\
    \ which mixes centralized and \ndecentralized features. \nIV. \nApplications of\
    \ IoT Networks \nIoT networks are used in a wide range of fields and businesses,\
    \ including manufacturing, transportation, \nhealthcare, and smart cities. Below\
    \ is a summary of some of the major IoT network-using industries: \ni. \nHealthcare:\
    \ By enabling remote patient monitoring, streamlining hospital operations, and\
    \ giving real-\ntime patient data, IoT networks can improve patient outcomes and\
    \ lower expenses. IoT devices, for \ninstance, can be used to track patients with\
    \ long-term diseases like diabetes or heart disease and notify \nmedical professionals\
    \ of any changes in their state. \nii. \nManufacturing: By providing real-time\
    \ monitoring of production processes and equipment, IoT \nnetworks can assist\
    \ increase operational efficiency and decrease downtime. IoT sensors, for instance,\
    \ \ncan be used to monitor machine performance and anticipate maintenance requirements\
    \ prior to a \nbreakdown. \niii. \nTransportation: IoT networks can aid in enhancing\
    \ user experience, reducing congestion, and \nimproving safety in the transportation\
    \ sector. IoT sensors, for instance, can be used to track traffic \npatterns and\
    \ modify traffic lights to improve flow. \nIoT networks have the potential to\
    \ enhance urban environments' sustainability, safety, and livability. IoT sensors,\
    \ \nfor instance, can be used to monitor air quality, control energy use, and\
    \ improve waste management. \nA. Examples of specific use cases \nThe following\
    \ are some particular use cases for IoT networks: \na) Smart Homes: IoT devices\
    \ can be utilised to build energy-efficient, safe, and simple to maintain smart\
    \ \nhouses. For instance, IoT-enabled security systems can send out real-time\
    \ notifications if there is any \nunexpected activity in the home, while IoT-enabled\
    \ thermostats can automatically adjust the \ntemperature based on user preferences\
    \ and occupancy. \nb) Asset tracking: IoT networks can be used to track assets\
    \ like inventory, equipment, and vehicles in real \ntime. For example, IoT sensors\
    \ can be used to monitor the location and condition of products in transit, \n\
    enabling organizations to optimize their supply chain operations. \nc) Environmental\
    \ Monitoring: IoT networks can be used to keep an eye on things like weather patterns,\
    \ \nwater quality, and air quality. IoT sensors, for instance, can be used to\
    \ forecast weather patterns or \nidentify pollution levels in streams to assist\
    \ stop natural disasters. \nd) Agriculture: Agricultural operations including\
    \ irrigation, fertilizer, and pest control can be monitored \nand optimized via\
    \ IoT networks. IoT sensors, for instance, can be used to enhance crop development\
    \ \nand output by monitoring soil moisture levels and adjusting irrigation systems.\
    \ \n \nV. \nIV. Future Directions of IoT Networks \nA. Emerging trends in IoT\
    \ networks \nDigital twins are virtual reproductions of actual systems or gadgets.\
    \ They can be used to imitate the behavior of \nsystems in the real world because\
    \ they are developed using sensor data. Design, testing, and maintenance of IoT\
    \ \nsystems and devices can be made better with the use of digital twins. \nTurkish\
    \ Journal of Computer and Mathematics Education  \nVol.11 No.03 (2020), 2067-2075\
    \ \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604 \n \n \n2072 \n \n \n \n\
    Research Article  \ni. \nFog Computing: A decentralized computing architecture\
    \ known as fog computing puts processing \npower closer to Internet of Things\
    \ (IoT) devices. Although though it uses a more distributed \nmethodology, it\
    \ is comparable to edge computing. For real-time IoT applications, data processing\
    \ speed \nand latency reduction are essential, and fog computing can help. \n\
    ii. \nHybrid Cloud: A hybrid cloud is an infrastructure that combines public and\
    \ private clouds. IoT \nnetworks may balance their needs for affordability, scalability,\
    \ and security with the aid of hybrid \nclouds. For instance, private cloud infrastructure\
    \ can be used to store sensitive data whereas public \ncloud infrastructure can\
    \ be used to store less sensitive data. \niii. \nHuman-Machine Interfaces (HMIs):\
    \ HMIs allow users to communicate with IoT systems and devices. \nHMIs come in\
    \ tactile, aural, and visual forms. These could aid in enhancing IoT networks'\
    \ usability and \naccessibility. \niv. \nPredictive Maintenance: In order to forecast\
    \ when maintenance is necessary before equipment fails, \npredictive maintenance\
    \ uses data from IoT sensors. Reduced downtime, increased dependability, and \n\
    lower maintenance costs can all be a result of predictive maintenance. \nv. \n\
    Smart Energy: To maximize energy efficiency and minimize waste, smart energy utilises\
    \ IoT networks. \nIoT sensors, for instance, can be used to track energy use in\
    \ buildings and modify heating or lighting \nbased on occupancy levels. \nvi.\
    \ \nVoice Recognition: Voice-activated instructions and IoT device control are\
    \ made possible by speech \nrecognition technologies. Speech recognition can help\
    \ make IoT networks more convenient and \naccessible. \n \nB. Edge computing and\
    \ 5G networks \nThe adoption of edge computing and 5G networks is one of the most\
    \ important trends in IoT networks. Instead \nof transmitting data to a central\
    \ server for processing, edge computing uses devices at the network's edge to\
    \ \nprocess data. Many IoT applications depend on low latency and quick reaction\
    \ times, which can be achieved \nwith this method. Contrarily, 5G networks provide\
    \ greater bandwidth and lower latency than earlier wireless \nnetwork generations,\
    \ making them ideal for Internet of Things (IoT) applications. \nC. Artificial\
    \ Intelligence and Machine Learning \nThe growing application of machine learning\
    \ (ML) and artificial intelligence (AI) technology in IoT networks is \nanother\
    \ trend. IoT devices can benefit from AI and ML to improve decision-making and\
    \ automate processes like \nanomaly detection and predictive maintenance. Costs\
    \ can be cut, productivity can be increased, and the user \nexperience can be\
    \ improved. \nD. Blockchain technology \nIn IoT networks, blockchain technology\
    \ is another new development. Blockchain is a distributed ledger \ntechnology\
    \ that makes transactions safe, open, and impenetrable. Blockchain can be utilized\
    \ in IoT networks to \nbuild secure, decentralized systems that are impervious\
    \ to hackers or tampering. Blockchain technology, for \ninstance, can be applied\
    \ to develop a safe and open supply chain management system that can monitor the\
    \ flow \nof commodities from manufacture to delivery.IoT networks have a promising\
    \ future, filled with both exciting \nprospects and difficult obstacles. To ensure\
    \ that IoT networks can reach their full potential as the technology \ndevelops,\
    \ it will be crucial to solve challenges like privacy, security, and interoperability.\
    \ \nVI. \nChallenges & Limitations of IoT Network \nIoT networks provide many\
    \ benefits, but they also present a number of obstacles and constraints that need\
    \ to be \novercome. We will look at a few of these difficulties and their potential\
    \ effects in this section. \nA. Privacy and Security Issues \nTurkish Journal\
    \ of Computer and Mathematics Education  \nVol.11 No.03 (2020), 2067-2075 \nDOI:\
    \ https://doi.org/10.17762/turcomat.v11i3.13604 \n \n \n2073 \n \n \n \nResearch\
    \ Article  \nSecurity and privacy issues are one of the biggest problems facing\
    \ IoT networks. Given that there are billions of \ninternet-connected gadgets,\
    \ the possibility of cyberattacks and data breaches is a major worry. IoT devices\
    \ \nsometimes have poor security safeguards, which leaves them open to hacking\
    \ and other online dangers. \nFurthermore, IoT devices frequently gather and send\
    \ sensitive data, such private health information, \nnecessitating strong privacy\
    \ measures. \nB. Problems with Interoperability and Compatibility \nInteroperability\
    \ and compatibility problems are another difficulty facing IoT networks. IoT systems\
    \ and devices \nare frequently created by several manufacturers and may employ\
    \ various communication protocols or standards. \nAs a result, integrating equipment\
    \ from many manufacturers and developing a cohesive system may be difficult. \n\
    Additionally, the demand for interoperability and compatibility will only increase\
    \ as IoT networks develop. \nC. Congestion in the Network and Scalability \nScalability\
    \ and network congestion are additional issues that IoT networks must deal with.\
    \ The need for \nbandwidth and other network resources increases along with the\
    \ number of devices connected to the network. \nThis may cause network congestion,\
    \ which may have an effect on how well IoT applications work. Scaling the \nnetwork\
    \ infrastructure to meet the rising demand might be difficult as the number of\
    \ IoT devices keeps \nincreasing. \nD. Battery Life and Power Use \nFor IoT networks,\
    \ power consumption and battery life are major obstacles. Many Internet of Things\
    \ (IoT) \ndevices run on batteries and can be found in far-off or challenging-to-reach\
    \ places. This makes it difficult to \nchange batteries or recharge devices, which\
    \ may affect the network's overall dependability and performance. In \naddition,\
    \ power consumption will become a more pressing issue as the number of IoT devices\
    \ increases.IoT \nnetworks provide many advantages, but there are also a number\
    \ of problems and restrictions that need to be \nworked around. IoT networks may\
    \ realize their full potential by creating strong security and privacy measures,\
    \ \naddressing interoperability and compatibility challenges, managing network\
    \ congestion, and minimizing power \nusage. \nVII. \nConclusion \nWe have covered\
    \ the architecture, applications, and anticipated future developments of IoT networks\
    \ in this \npaper. We have looked at an IoT network's four-tiered architecture\
    \ and all of its components, such as sensors, \ngateways, cloud platforms, and\
    \ apps. We have also discussed the various applications of IoT networks in a \n\
    variety of fields, including healthcare, industry, transportation, and even smart\
    \ cities.We have also looked into \nthe most recent advancements in the Internet\
    \ of Things (IoT), such as edge computing, 5G networks, AI, and \nblockchain.\
    \ The usefulness and value of IoT networks may rise as a result of these tendencies.IoT\
    \ networks \nprovide a lot of advantages, but they also have some disadvantages\
    \ that need to be dealt with. This includes \nproblems with energy use, battery\
    \ life, interoperability, scalability, security, and privacy. It also includes\
    \ \nproblems with network congestion.To fully realize the potential of IoT networks,\
    \ future research should focus \non fixing these problems and overcoming these\
    \ limitations. Managing network congestion, optimizing energy \nuse, creating\
    \ robust security and privacy measures, and resolving interoperability and compatibility\
    \ issues are a \nfew of them.IoT networks, which have the potential to revolutionize\
    \ numerous industries and raise people's \nliving standards everywhere, represent\
    \ a significant advancement in technology. With further research and \ndevelopment,\
    \ IoT networks will without a doubt play a significant role in determining the\
    \ direction of \ntechnology and society. \nReferences \n[1] Al-Fuqaha, A., Guizani,\
    \ M., Mohammadi, M., Aledhari, M., & Ayyash, M. (2015). Internet of Things: A\
    \ \nsurvey on enabling technologies, protocols, and applications. IEEE Communications\
    \ Surveys & Tutorials, \n17(4), 2347-2376. \nTurkish Journal of Computer and Mathematics\
    \ Education  \nVol.11 No.03 (2020), 2067-2075 \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604\
    \ \n \n \n2074 \n \n \n \nResearch Article  \n[2] Gubbi, J., Buyya, R., Marusic,\
    \ S., & Palaniswami, M. (2013). Internet of Things (IoT): A vision, \narchitectural\
    \ elements, and future directions. Future Generation Computer Systems, 29(7),\
    \ 1645-1660. \n[3] Shi, W., Cao, J., Zhang, Q., Li, Y., & Xu, L. (2011). Edge\
    \ computing: Vision and challenges. IEEE Internet \nof Things Journal, 3(5), 637-646.\
    \ \n[4] Atzori, L., Iera, A., & Morabito, G. (2010). The internet of things: A\
    \ survey. Computer Networks, 54(15), \n2787-2805. \n[5] Wang, S., Zhang, Y., &\
    \ Zhang, Y. (2019). Fog computing: Platform and applications. Journal of Network\
    \ \nand Computer Applications, 123, 1-18. \n[6] Ray, P. P. (2016). Internet of\
    \ things for smart agriculture: Technologies, practices and future direction.\
    \ \nJournal of Ambient Intelligence and Humanized Computing, 7(6), 783-798. \n\
    [7] Amin, R., & Islam, M. R. (2018). Internet of Things (IoT) based wearable technology\
    \ for health \nmonitoring: A review of critical issues and challenges. IEEE Sensors\
    \ Journal, 18(21), 8550-8563. \n[8] Botta, A., de Donato, W., Persico, V., & Pescapé,\
    \ A. (2016). Integration of cloud computing and Internet of \nThings: A survey.\
    \ Future Generation Computer Systems, 56, 684-700. \n[9] He, W., Yan, G., & Da\
    \ Xu, L. (2014). Developing vehicular data clouds for connected vehicles. IEEE\
    \ \nTransactions on Emerging Topics in Computing, 2(1), 23-32. \n[10] Hossain,\
    \ M. S., Muhammad, G., & Alamri, A. (2019). Blockchain-based secure Internet of\
    \ Things: \nChallenges and solutions. IEEE Internet of Things Journal, 6(5), 8294-8310.\
    \ \n[11] Li, M., Lu, R., Li, W., & Lin, X. (2018). Secure data sharing in cloud-based\
    \ Internet of Things via \nattribute-based encryption. IEEE Transactions on Information\
    \ Forensics and Security, 13(7), 1755-1767. \n[12] Mao, Y., You, I., & Zhang,\
    \ J. (2012). A survey on security of Internet of Things. International Journal\
    \ of \nCommunication Systems, 25(9), 1101-1111. \n[13] Mohanty, S. P., Prasad,\
    \ N. R., & Saraju Mohanty, M. (2018). Internet of Things and big data analytics:\
    \ \nFoundations, challenges, and future directions. Journal of Parallel and Distributed\
    \ Computing, 129, 1-24. \n[14] Al-Fuqaha, A., Guizani, M., Mohammadi, M., Aledhari,\
    \ M., & Ayyash, M. (2015). Internet of things: A \nsurvey on enabling technologies,\
    \ protocols, and applications. IEEE Communications Surveys & Tutorials, \n17(4),\
    \ 2347-2376. \n[15] Atzori, L., Iera, A., & Morabito, G. (2010). The Internet\
    \ of things: A survey. Computer networks, 54(15), \n2787-2805. \n[16] Chen, M.,\
    \ Ma, Y., Song, J., Lai, C. F., & Hu, B. (2018). Blockchain-based secure firmware\
    \ update for \nembedded devices in an Internet of Things environment. IEEE Transactions\
    \ on Industrial Informatics, \n14(8), 3690-3700. \n[17] Gubbi, J., Buyya, R.,\
    \ Marusic, S., & Palaniswami, M. (2013). Internet of Things (IoT): A vision, \n\
    architectural elements, and future directions. Future generation computer systems,\
    \ 29(7), 1645-1660. \n[18] Li, Y., & Lu, R. (2018). Blockchain and Internet of\
    \ Things (IoT): A survey. IEEE Internet of Things \nJournal, 5(5), 4419-4434.\
    \ \n[19] Liu, X., Chen, Y., Chen, X., Hu, F., & Zhang, W. (2019). An efficient\
    \ access control scheme for the Internet \nof Things based on blockchain technology.\
    \ IEEE Access, 7, 55880-55890. \n[20] Mahmud, R., Hu, J., & Miao, Y. (2018). Blockchain-based\
    \ decentralized trust management in vehicular \nnetworks. IEEE Transactions on\
    \ Vehicular Technology, 67(8), 6745-6758. \n[21] Moosavi, S. R., & Gholami, M.\
    \ (2019). A comprehensive review on the Internet of Things (IoT) security \nthreats\
    \ and countermeasures. Journal of Ambient Intelligence and Humanized Computing,\
    \ 10(5), 1663-\n1678. \n[22] Ning, H., Zou, W., Wei, Z., & Zhang, L. (2019). An\
    \ energy-efficient and scalable edge computing \narchitecture for internet of\
    \ things applications. IEEE Transactions on Industrial Informatics, 15(6), 3502-\n\
    3512. \n[23] Peng, T., Li, Z., Li, J., Wang, X., & Wang, Y. (2019). Big data analytics\
    \ in smart healthcare: A review. \nJournal of biomedical informatics, 92, 103139.\
    \ \n[24] Qu, W., Zhuang, Y., Chen, M., & Wang, H. (2019). Secure and privacy-preserving\
    \ data aggregation for \ninternet of things: A survey. IEEE Internet of Things\
    \ Journal, 6(4), 6506-6523. \nTurkish Journal of Computer and Mathematics Education\
    \  \nVol.11 No.03 (2020), 2067-2075 \nDOI: https://doi.org/10.17762/turcomat.v11i3.13604\
    \ \n \n \n2075 \n \n \n \nResearch Article  \n[25] Rahmani, A. M., Thanigaivelan,\
    \ N. K., Gia, T. N., Granados, J., Negash, B., & Adel, M. (2019). Smart \nhomes\
    \ for elderly healthcare—Recent advances and research challenges. Journal of Ambient\
    \ Intelligence \nand Humanized Computing, 10(12), 4515-4536. \n[26] Rawat, P.,\
    \ Singh, A., Chaouchi, H., & Bonnin, J. M. (2014). Wireless sensor networks: A\
    \ survey on recent \ndevelopments and potential synergies. The Journal of Supercomputing,\
    \ 68(1), 1-48. \n[27] Shafagh, H., Hithnawi, A., & Duquennoy, S. (2017). Poster:\
    \ Towards a blockchain-based security \nframework for the Internet of Things.\
    \ In Proceedings of the 2017 ACM International Conference on \nEmbedded Networked\
    \ Sensor Systems (pp. 437-438). \n[28] Wang, L., Torkamani, M., Al-Fuqaha, A.,\
    \ & Sattar, F. (2018). From machine-to-machine communications \ntowards cyber-physical\
    \ systems. IEEE Access, 6, 42381-42398. \n \n"
  inline_citation: '>'
  journal: Türk bilgisayar ve matematik eğitimi dergisi
  limitations: '>'
  pdf_link: https://turcomat.org/index.php/turkbilmat/article/download/13604/9756
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Things (IoT) Networks: Architecture, Applications, and Future
    Directions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.58257/ijprems31210
  analysis: '>'
  authors: []
  citation_count: 0
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Journal of Progressive Research in Engineering Management
    and Science
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: IMPLEMENT SMART FARM WITH IOT TECHNOLOGY
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.5120/20815-3180
  analysis: '>'
  authors:
  - Sonal Chawla
  - Manju Manju
  - Sugandha Singh
  citation_count: 0
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International journal of computer applications
  limitations: '>'
  pdf_link: null
  publication_year: 2015
  relevance_score1: 0
  relevance_score2: 0
  title: 'Computational Intelligence Techniques for Wireless Sensor Network: Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icce53296.2022.9730380
  analysis: '>'
  authors:
  - Dũng Trung Võ
  - Chenguang Liu
  - McClain Nelson
  - Bill Mandel
  - Shin Young Hyun
  - M Degrees
  - Dong-Wook Kim
  - Byung-Nam Kim
  - Wan-Chi Siu
  - Liwen Wang
  - Xuefei Yang
  - Zhisong Liu
  - Hong Kong
  - Daniel T.S. Pak
  - Kong Lun
  - Jordan Mcentyre
  - Billy Kihei
  - Sriramakrishnan Govindarajan
  - Gregory Shurtz
  - D. Steiss
  - Jonathan Bergsagel
  - Jason Jones
  - Kohei Omachi
  - Hiroshi Yamamoto
  - Bhagawat Baanav
  - Yedla Ravi
  - Rafiul Kabir
  - Neha Mishra
  - Srivalli Boddupalli
  - Kenya Sugimoto
  - Arief Dharmawan Abadi
  - Yanlei Gu
  - Igor Goncharenko
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy IEEE.org IEEE Xplore IEEE
    SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse
    My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out
    All Books Conferences Courses Journals & Magazines Standards Authors Citations
    ADVANCED SEARCH Conferences >2022 IEEE International Confe... Technical Program
    Publisher: IEEE Cite This PDF 233 Full Text Views Abstract Metrics Abstract: Provides
    a schedule of conference events and a listing of which papers were presented in
    each session. Published in: 2022 IEEE International Conference on Consumer Electronics
    (ICCE) Date of Conference: 07-09 January 2022 Date Added to IEEE Xplore: 15 March
    2022 ISBN Information: ISSN Information: DOI: 10.1109/ICCE53296.2022.9730380 Publisher:
    IEEE Conference Location: Las Vegas, NV, USA Metrics More Like This Discovering
    effective technical trading rules with genetic programming: towards robustly outperforming
    buy-and-hold 2009 World Congress on Nature & Biologically Inspired Computing (NaBIC)
    Published: 2009 Technical and Sentiment Analysis in Financial Forecasting with
    Genetic Programming 2022 IEEE Symposium on Computational Intelligence for Financial
    Engineering and Economics (CIFEr) Published: 2022 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: 2022 IEEE International Conference on Consumer Electronics (ICCE)
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/9730107/9730121/09730380.pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: Technical Program
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.18297/etd/4029
  analysis: '>'
  authors:
  - Muhammad Zaigham Abbas Shah Syed
  citation_count: 0
  full_citation: '>'
  full_text: ">\nUniversity of Louisville \nUniversity of Louisville \nThinkIR: The\
    \ University of Louisville's Institutional Repository \nThinkIR: The University\
    \ of Louisville's Institutional Repository \nElectronic Theses and Dissertations\
    \ \n12-2022 \nIoT in smart communities, technologies and applications. \nIoT in\
    \ smart communities, technologies and applications. \nMuhammad Zaigham Abbas Shah\
    \ Syed \nUniversity of Louisville \nFollow this and additional works at: https://ir.library.louisville.edu/etd\
    \ \n Part of the Other Computer Engineering Commons \nRecommended Citation \n\
    Recommended Citation \nSyed, Muhammad Zaigham Abbas Shah, \"IoT in smart communities,\
    \ technologies and applications.\" \n(2022). Electronic Theses and Dissertations.\
    \ Paper 4029. \nhttps://doi.org/10.18297/etd/4029 \nThis Doctoral Dissertation\
    \ is brought to you for free and open access by ThinkIR: The University of Louisville's\
    \ \nInstitutional Repository. It has been accepted for inclusion in Electronic\
    \ Theses and Dissertations by an authorized \nadministrator of ThinkIR: The University\
    \ of Louisville's Institutional Repository. This title appears here courtesy of\
    \ \nthe author, who has retained all other copyrights. For more information, please\
    \ contact thinkir@louisville.edu. \nIOT IN SMART COMMUNITIES, TECHNOLOGIES AND\
    \ APPLICATIONS\nBy\nMuhammad Zaigham Abbas Shah Syed\nB.Eng., M.Sc.\nA Dissertation\n\
    Submitted to the Faculty of the\nJ.B. Speed School of Engineering of the University\
    \ of\nLouisville\nin Partial Fulfillment of the Requirements\nfor the Degree of\n\
    Doctor of Philosophy\nin Computer Science and Engineering\nDepartment of Computer\
    \ Science and Engineering\nUniversity of Louisville\nLouisville, Kentucky\nDecember\
    \ 2022\nCopyright 2022 by Muhammad Zaigham Abbas Shah Syed\nAll rights reserved\n\
    IOT IN SMART COMMUNITIES, TECHNOLOGIES AND APPLICATIONS\nBy\nMuhammad Zaigham\
    \ Abbas Shah Syed\nB.Eng., M.Sc.\nDissertation approved on\nNovember 8, 2022\n\
    by the following dissertation Committee:\nDissertation Director\nDr. Adel S. Elmaghraby\n\
    Dr. Daniel Sierrasosa\nDr. Anup Kumar\nDr. Ibrahim Imam\nDr. Monica Gentili\n\
    \    ii\nDEDICATION\nTo my late grandmother, Shireen Shah who always championed\
    \ the im-\nportance of education and personal values. She has had the biggest\
    \ impact\non the person that I have become.\nTo my parents, who worked hard to\
    \ provide us with the best opportunities\nthat can be provided to any child.\n\
    iii\nACKNOWLEDGMENTS\nI would like to thank my supervisor, Dr. Adel Elmaghraby\
    \ for his sup-\nport and guidance throughout the course of my research work here\
    \ at the\nUniversity of Louisville. Without his support and trust I would not\
    \ have\nbeen able to succeed in this endeavor.\nI would also like to thank Dr.\
    \ Anup Kumar and Dr. Daniel Sierra-Sosa\nfor their support in conducting my research\
    \ and providing feedback on\nour experiments which helped improve the quality\
    \ of the work.\nI would like to thank all my friends, both in the United States\
    \ and else-\nwhere who have been a tremendous support to me during my time in\n\
    Louisville. They were like a family away from home.\nFinally, I would like to\
    \ say thanks to my family, who have supported me\nthroughout think and thin. First\
    \ and foremost my parents, my mother\nNaheed and father Sher Muhammad. They through\
    \ their hard work and\ndetermination left no stone unturned to provide us with\
    \ the best upbring-\ning anyone can provide to their children. My wife Farwa,\
    \ who has always\nbeen a pillar of support for me. My siblings, Zafi, Shehram\
    \ and Fiza who\nhave been the best brothers and sister anyone can ask for. My\
    \ sisters in\nlaw, Madiha and Hina and my lovely niece Maryam, who is a cause\
    \ of\nmuch joy in our life.\niv\nABSTRACT\nIOT IN SMART COMMUNITIES, TECHNOLOGIES\
    \ AND APPLICATIONS\nMuhammad Zaigham Abbas Shah, Syed\nNovember 8, 2022\nInternet\
    \ of Things is a system that integrates different devices and technologies,\n\
    removing the necessity of human intervention. This enables the capacity of having\n\
    smart (or smarter) cities around the world. By hosting different technologies\
    \ and al-\nlowing interactions between them, the internet of things has spearheaded\
    \ the develop-\nment of smart city systems for sustainable living, increased comfort\
    \ and productivity\nfor citizens. The Internet of Things (IoT) for Smart Cities\
    \ has many different domains\nand draws upon various underlying systems for its\
    \ operation, in this work, we provide\na holistic coverage of the Internet of\
    \ Things in Smart Cities by discussing the fun-\ndamental components that make\
    \ up the IoT Smart City landscape, the technologies\nthat enable these domains\
    \ to exist, the most prevalent practices and techniques which\nare used in these\
    \ domains as well as the challenges that deployment of IoT systems for\nsmart\
    \ cities encounter and which need to be addressed for ubiquitous use of smart\
    \ city\napplications. It also presents a coverage of optimization methods and\
    \ applications\nfrom a smart city perspective enabled by the Internet of Things.\
    \ Towards this end,\na mapping is provided for the most encountered applications\
    \ of computational opti-\nmization within IoT smart cities for five popular optimization\
    \ methods, ant colony\noptimization, genetic algorithm, particle swarm optimization,\
    \ artificial bee colony op-\ntimization and differential evolution. For each application\
    \ identified, the algorithms\nused, objectives considered, the nature of the formulation\
    \ and constraints taken in\nv\nto account have been specified and discussed. Lastly,\
    \ the data setup used by each\ncovered work is also mentioned and directions for\
    \ future work have been identified.\nWithin the smart health domain of IoT smart\
    \ cities, human activity recognition\nhas been a key study topic in the development\
    \ of cyber physical systems and as-\nsisted living applications. In particular,\
    \ inertial sensor based systems have become\nincreasingly popular because they\
    \ do not restrict users’ movement and are also rel-\natively simple to implement\
    \ compared to other approaches. Fall detection is one of\nthe most important tasks\
    \ in human activity recognition. With an increasingly aging\nworld population\
    \ and an inclination by the elderly to live alone, the need to incor-\nporate\
    \ dependable fall detection schemes in smart devices such as phones, watches\n\
    has gained momentum. Therefore, differentiating between falls and activities of\
    \ daily\nliving (ADLs) has been the focus of researchers in recent years with\
    \ very good results.\nHowever, one aspect within fall detection that has not been\
    \ investigated much is di-\nrection and severity aware fall detection. Since a\
    \ fall detection system aims to detect\nfalls in people and notify medical personnel,\
    \ it could be of added value to health pro-\nfessionals tending to a patient suffering\
    \ from a fall to know the nature of the accident.\nIn this regard, as a case study\
    \ for smart health, four different experiments have been\nconducted for the task\
    \ of fall detection with direction and severity consideration on\ntwo publicly\
    \ available datasets. These four experiments not only tackle the problem\non an\
    \ increasingly complicated level (the first one considers a fall only scenario\
    \ and\nthe other two a combined activity of daily living and fall scenario) but\
    \ also present\nmethodologies which outperform the state of the art techniques\
    \ as discussed. Lastly,\nfuture recommendation have also been provided for researchers.\n\
    vi\nTABLE OF CONTENTS\nMotivation . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n1\nAims . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n2\nOrganization\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n2\nIOT SMART CITIES\n. . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nSmart\
    \ City Components . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5\n2.4\n\
    Smart Health . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.5\nSmart\
    \ Home . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.6\nSmart\
    \ Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.7\nSmart\
    \ Infrastructure . . . . . . . . . . . . . . . . . . . . . . .\n7\n2.8\nSmart\
    \ Transport\n. . . . . . . . . . . . . . . . . . . . . . . . .\n7\nInternet of\
    \ Things for Smart Cities . . . . . . . . . . . . . . . . . . . . . .\n7\n3.1\n\
    IoT Architectures for Smart cities . . . . . . . . . . . . . . . .\n8\n3.1.1\n\
    Cloud Computing Model . . . . . . . . . . . . . . . .\n9\n3.1.2\nFog Computing\
    \ Model . . . . . . . . . . . . . . . . .\n9\n3.1.3\nEdge Computing Model . .\
    \ . . . . . . . . . . . . . .\n10\n3.2\nIoT Challenges for smart Cities . . .\
    \ . . . . . . . . . . . . . .\n11\n3.2.1\nSecurity and Privacy . . . . . . . .\
    \ . . . . . . . . . .\n12\n3.2.2\nSmart Sensors . . . . . . . . . . . . . . .\
    \ . . . . . . .\n13\n3.2.3\nNetworking . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n13\n3.2.4\nBig Data Analytics . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3\nSensing Technologies . . . . . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3.1\nAmbient Sensors . . . . . . . . . . . . . . . . . . . .\n15\n3.3.2\n\
    Bio-Sensors . . . . . . . . . . . . . . . . . . . . . . .\n15\nvii\nDedication\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    iii\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\niv\nAbstract . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\nv\nList of Tables . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\nxi\nList of Figures\n. . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nxiii\nINTRODUCTION\
    \ AND DISSERTATION OVERVIEW\n. . . . . . . . . . . .\n1\n3.3.3\nChemical\n. .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n16\n3.3.4\nElectric Sensors . .\
    \ . . . . . . . . . . . . . . . . . . .\n16\n3.3.5\nHydraulic . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n16\n3.3.6\nIdentification . . . . . . . . .\
    \ . . . . . . . . . . . . .\n17\n3.3.7\nMotion Sensors . . . . . . . . . . . .\
    \ . . . . . . . . .\n17\n3.3.8\nPresence . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n17\n3.3.9\nOther Sensors . . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4\nNetworking Technologies . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4.1\nNetwork Topologies\n. . . . . . . . . . . . . . . . . .\n\
    18\n3.4.2\nNetwork Architectures . . . . . . . . . . . . . . . . .\n19\n3.4.3\n\
    Network Protocols . . . . . . . . . . . . . . . . . . .\n20\n3.5\nSecurity and\
    \ Privacy in Smart City IoT . . . . . . . . . . . . .\n23\n3.5.1\nApplication\
    \ Software Layers\n. . . . . . . . . . . . .\n24\n3.5.2\nNetwork Layer\n. . .\
    \ . . . . . . . . . . . . . . . . . .\n25\n3.5.3\nPerception Layer . . . . . .\
    \ . . . . . . . . . . . . . .\n27\n3.5.4\nSystem Wide Issues\n. . . . . . . .\
    \ . . . . . . . . . .\n27\nSWOT Analysis . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n28\n4.1\nStrengths\n. . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n29\n4.2\nWeaknesses\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n30\n4.3\nOpportunities . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .\n30\n4.4\nThreats\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n30\nConclusions . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n31\nAI IN IOT SMART CITIES .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nBig Data\
    \ Algorithms/Artificial Intelligence . . . . . . . . . . . . . . . . . .\n32\n\
    2.1\nMachine Learning . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    2.2\nDeep Learning . . . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    AI Applications for Smart Cities\n. . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n34\n3.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n36\n3.4\nSmart Health . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n38\n3.5\nSmart Homes . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n40\n3.6\nSmart Industry . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n41\n3.7\nSmart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\n3.8\nSmart Transport\n. . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\nConclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .\n46\nOPTIMIZATION IN IOT SMART CITIES\n. . . . . . . . . . .\
    \ . . . . . . . .\n49\nIntroduction . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n49\nOptimization and Heuristics in IoT Smart Cities\
    \ . . . . . . . . . . . . . . .\n49\nMeheuristic Algorithms . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n50\n3.1\nAnt Colony Optimization\n\
    . . . . . . . . . . . . . . . . . . . .\n50\n3.2\nGenetic Algorithm\n. . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n50\nviii\n3.3\nParticle Swarm Optimization\n\
    . . . . . . . . . . . . . . . . . .\n51\n3.4\nDifferential Evolution . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n52\n3.5\nArtificial Bee Colony . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n52\nOptimization Applications in Smart\
    \ Cities . . . . . . . . . . . . . . . . . .\n53\n4.1\nSmart Agriculture . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n53\n4.2\nSmart City Services .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n55\n4.3\nSmart Grid\n. . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n57\n4.4\nSmart Health . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n60\n4.5\nSmart Homes . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n64\n4.6\nSmart Industry . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n66\n4.7\nSmart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n69\n4.8\nSmart Transportation\n\
    . . . . . . . . . . . . . . . . . . . . . .\n71\nConclusion . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n73\nCASE STUDY - SMART\
    \ HEALTH . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIoT for\
    \ Fall Detection\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    76\n2.1\nChallenges/Requirements of a FDS . . . . . . . . . . . . . . .\n77\n\
    2.1.1\nNon-intrusiveness . . . . . . . . . . . . . . . . . . . .\n77\n2.1.2\n\
    Low Latency\n. . . . . . . . . . . . . . . . . . . . . .\n77\n2.1.3\nLow power\
    \ consumption . . . . . . . . . . . . . . . .\n77\n2.1.4\nAllow mobility\n. .\
    \ . . . . . . . . . . . . . . . . . . .\n77\n2.1.5\nDifferentiate between Falls\
    \ and Activities\n. . . . . .\n77\n2.1.6\nNotify caregivers . . . . . . . . .\
    \ . . . . . . . . . . .\n78\n2.1.7\nTrack history . . . . . . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2\nTypes of Fall Detection Systems . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2.1\nAmbient Sensor based systems\n. . . . . . . . .\
    \ . . .\n78\n2.2.2\nVision based systems . . . . . . . . . . . . . . . . . .\n\
    79\n2.2.3\nWearable Sensor based systems . . . . . . . . . . . .\n79\n2.3\nTypes\
    \ of Wearable FDS\n. . . . . . . . . . . . . . . . . . . . .\n80\n2.3.1\nThreshold\
    \ based systems . . . . . . . . . . . . . . . .\n80\n2.3.2\nMachine/Deep Learning\
    \ based systems . . . . . . . .\n80\n2.4\nSensors used in Wearable FDS . . . .\
    \ . . . . . . . . . . . . . .\n80\n2.4.1\nAccelerometers . . . . . . . . . . .\
    \ . . . . . . . . . .\n81\n2.4.2\nGryroscope . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n81\n2.4.3\nMagnetometer\n. . . . . . . . . . . . . . . . . . .\
    \ . .\n81\n2.4.4\nVarious Medical Sensors . . . . . . . . . . . . . . . .\n81\n\
    2.5\nDesign considerations for Wearable FDS\n. . . . . . . . . . . .\n81\n2.5.1\n\
    Sampling frequency . . . . . . . . . . . . . . . . . . .\n82\n2.5.2\nWindowing\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n82\n2.5.3\nFeature Extraction\
    \ . . . . . . . . . . . . . . . . . . .\n82\n2.6\nLiterature Review . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n82\n2.7\nFall detection Datasets .\
    \ . . . . . . . . . . . . . . . . . . . . .\n89\n2.7.1\nSisFall Dataset . . .\
    \ . . . . . . . . . . . . . . . . . .\n89\n2.7.2\nK-Fall Dataset\n. . . . . .\
    \ . . . . . . . . . . . . . . .\n90\nix\n2.8\nExperiments . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n90\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration 91\n2.8.2\nFall Detection with Severity and Direction\
    \ along with\nADL consideration using Wavelet Pooling and K-NN\n101\n2.8.3\nFall\
    \ Detection with Severity and Direction along with\nADL consideration using CNN-XGBoost\
    \ . . . . . . .\n111\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-\n\
    attention network . . . . . . . . . . . . . . . . . . . .\n119\nConclusion . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n125\nCONCLUSION\
    \ AND FUTURE WORK . . . . . . . . . . . . . . . . . . . . .\n128\nConclusion .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n128\n\
    Contribution\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n128\nFuture Work\n. . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n129\nREFERENCES . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .\n131\nAppendix A: Sample Plots for different fall categories\
    \ . . . . . . . . . . . . . .\n174\nAppendix B: Acronyms\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n180\nCurriculum Vita. . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . 183\nx\nLIST OF TABLES\n\
    1\nComparison of Cloud, Fog and Edge Computing Models\n. . . . . . . . .\n11\n\
    2\nSmart City IoT Challenges and Mitigation . . . . . . . . . . . . . . . . .\n\
    15\n3\nSensing Technologies for IoT Smart Cities by Smart City Component . .\n\
    18\n4\nComparison of Network Technologies for IoT Smart Cities\n. . . . . . .\
    \ .\n22\n5\nSecurity and Privacy issue for IoT Smart Cities . . . . . . . . .\
    \ . . . . .\n28\n6\nSWOT Analysis for IoT in Smart Cities\n. . . . . . . . . .\
    \ . . . . . . . .\n29\n7\nAI use for Smart Agriculture . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\n35\n8\nAI use for Smart city Services . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n37\n9\nAI use for Smart Energy . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n38\n10\nAI use for Smart Health\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n39\n11\nAI use for Smart\
    \ Homes . . . . . . . . . . . . . . . . . . . . . . . . . . .\n42\n12\nAI use\
    \ for Smart Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n44\n\
    13\nAI use for Smart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n45\n14\nAI use for Smart Transport\n. . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n46\n15\nAI applications for IoT Smart Cities\n. . . . . . . .\
    \ . . . . . . . . . . . .\n48\n16\nOptimization in Smart Agriculture\n. . . .\
    \ . . . . . . . . . . . . . . . . .\n56\n17\nData setup used for Smart Agriculture\
    \ Optimization\n. . . . . . . . . . .\n56\n18\nOptimization in Smart City Services\n\
    . . . . . . . . . . . . . . . . . . . .\n58\n19\nData setup used for Smart City\
    \ Services Optimization\n. . . . . . . . . .\n58\n20\nOptimization in Smart Grid\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .\n61\n21\nData setup used for\
    \ Smart Grid . . . . . . . . . . . . . . . . . . . . . . .\n62\n22\nOptimization\
    \ in Smart Health . . . . . . . . . . . . . . . . . . . . . . . .\n63\n23\nData\
    \ setup used for Smart Health . . . . . . . . . . . . . . . . . . . . . .\n64\n\
    24\nOptimization in Smart Homes . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n67\n25\nData setup used for Smart Homes . . . . . . . . . . . . . . . . .\
    \ . . . . .\n67\n26\nOptimization in Smart Industry . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n68\n27\nData setup for Smart Industry . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n70\n28\nOptimization in Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . .\n71\n29\nData types for Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . .\n71\n30\nOptimization in Smart Transportation\n\
    . . . . . . . . . . . . . . . . . . .\n74\n31\nData types for Smart Transportation\
    \ . . . . . . . . . . . . . . . . . . . .\n75\n32\nADL and Falls present in the\
    \ SisFall dataset. . . . . . . . . . . . . . . . .\n90\n33\nADL and Falls present\
    \ in the K-Fall dataset. . . . . . . . . . . . . . . . .\n91\n34\nLabeling used\
    \ for Fall only classification for the SisFall Dataset\n. . . . .\n92\n35\nFeatures\
    \ computed for each fall segment\n. . . . . . . . . . . . . . . . . .\n94\n36\n\
    Fall F1-scores (Fall direction only)\n. . . . . . . . . . . . . . . . . . . .\
    \ .\n99\n37\nFall F1-scores (Fall severity and direction) . . . . . . . . . .\
    \ . . . . . . .\n100\n38\nBest Results: Fall direction\n. . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n100\n39\nBest Results: Fall direction and Severity\
    \ . . . . . . . . . . . . . . . . . .\n101\nxi\n40\nADL Labels used for SisFall\
    \ Recordings. . . . . . . . . . . . . . . . . . .\n102\n41\nPerformance for different\
    \ observation window sizes. . . . . . . . . . . . .\n109\n42\nPerformance for\
    \ different sensing modalities. . . . . . . . . . . . . . . . .\n110\n43\nBest\
    \ Results (Obs. Window : 3 sec, Sensing Modality: Acc. + Gyro.) . .\n110\n44\n\
    One ADL vs. Individual Falls. . . . . . . . . . . . . . . . . . . . . . . . .\n\
    116\n45\nIndividual ADLs vs. Individual Falls. . . . . . . . . . . . . . . . .\
    \ . . . .\n116\n46\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n118\n47\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n119\n48\nLabeling for K-Fall Dataset\n. . . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n120\n49\nResults for SisFall: One ADL vs. Individual Falls\
    \ . . . . . . . . . . . . .\n122\n50\nResults for K-Fall: One ADL vs. Individual\
    \ Falls\n. . . . . . . . . . . . .\n122\n51\nResults for SisFall: Individual ADLs\
    \ vs. Individual Falls\n. . . . . . . . .\n123\n53\nComparison with State of the\
    \ art (Individual ADLs vs. Individual Falls.)\n125\n54\nComparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\n126\n55\nResults for the\
    \ four Experiments for the SisFall dataset (F1-Score[%]) . .\n126\nxii\nLIST OF\
    \ FIGURES\n1\nSmart City Components . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n5\n2\nIoT Architecture\n. . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .\n8\n3\nChallenges for IoT in Smart Cities. . . . . . .\
    \ . . . . . . . . . . . . . . .\n12\n4\nSensing Technologies for IoT Smart Cities.\
    \ . . . . . . . . . . . . . . . . .\n16\n5\nNetwork Technologies for IoT Smart\
    \ Cities.\n. . . . . . . . . . . . . . . .\n23\n6\nModified CERT Attack Taxonomy\
    \ for Smart Cities. . . . . . . . . . . . .\n24\n7\nAI for IoT Smart Cities. .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . .\n47\n8\nOptimization applications\
    \ in Smart Agriculture. . . . . . . . . . . . . . .\n54\n9\nOptimization applications\
    \ in Smart City Services. . . . . . . . . . . . . .\n57\n10\nOptimization applications\
    \ in Smart Grid. . . . . . . . . . . . . . . . . . .\n59\n11\nOptimization applications\
    \ in Smart Health.\n. . . . . . . . . . . . . . . .\n62\n12\nOptimization applications\
    \ in Smart Homes.\n. . . . . . . . . . . . . . . .\n64\n13\nOptimization applications\
    \ in Smart Industry. . . . . . . . . . . . . . . . .\n69\n14\nOptimization applications\
    \ in Smart Infrastructure.\n. . . . . . . . . . . .\n70\n15\nOptimization applications\
    \ in Smart Transportation . . . . . . . . . . . .\n72\n16\nOptimization applications\
    \ in IoT based Smart Cities. . . . . . . . . . . .\n75\n17\nFall Detection with\
    \ Direction and Severity. . . . . . . . . . . . . . . . . .\n93\n18\nHierarchical\
    \ classification scheme for ADL and Fall detection.\n. . . . . .\n103\n19\nSample\
    \ Wavelet (Mexican Hat). . . . . . . . . . . . . . . . . . . . . . . .\n104\n\
    20\nHaar Wavelet. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n105\n21\nExample: 4-2-1 1-D Spatial Pyramid Pooling. . . . . . . . .\
    \ . . . . . . .\n106\n22\nAverage F1-scores for each activity for the four classifiers.\n\
    . . . . . . . .\n108\n23\nCNN-XGBoost based classification scheme for ADL and\
    \ Fall detection. .\n112\n24\nIllustration of data augmentation. (X component\
    \ of Accelerometer, Lat-\neral Fall) . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n113\n25\nCNN Network for feature extraction and\
    \ XGBoost classification stage.\n.\n114\n26\nNetwork performance for different\
    \ fall directions.\n. . . . . . . . . . . . .\n117\n27\nNetwork performance for\
    \ different fall directions.\n. . . . . . . . . . . . .\n118\n28\nConvLSTM-attention\
    \ Network.\n. . . . . . . . . . . . . . . . . . . . . . .\n121\n29\nFall detection\
    \ performance for both experiments.\n. . . . . . . . . . . . .\n124\n30\nFall\
    \ severity performance.\n. . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    124\n31\nFall direction performance. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\n125\n1\nAccelerometer and Gyroscope measurements: Forward Hard Fall\
    \ . . . . .\n174\n2\nAccelerometer and Gyroscope measurements: Forward Soft Fall\n\
    . . . . .\n175\n3\nAccelerometer and Gyroscope measurements: Backward Hard Fall\
    \ . . . .\n176\n4\nAccelerometer and Gyroscope measurements:f Backward Soft Fall\
    \ . . . .\n177\n5\nAccelerometer and Gyroscope measurements: Lateral Hard Fall\n\
    . . . . .\n178\n6\nAcclerometer and Gyroscope measurements: Lateral Soft Fall\n\
    . . . . . .\n179\nxiii\nCHAPTER I\nINTRODUCTION AND DISSERTATION OVERVIEW\n1\n\
    Motivation\nThe world is experiencing a bulging world population and increasing\
    \ urbanization\nwhich is set to grow by more than 10% in the next 30 years [1]\
    \ resulting in a total\nof 70% living in cities by 2050. Countries around the\
    \ world are looking at equipping\ntheir cities to deal with the influx of people\
    \ and the stress it will bring to current\ncity systems [2]. This is to be performed\
    \ keeping in view the UN Sustainable De-\nvelopment Goals 2030 [3]. In this regard,\
    \ Smart Cities have come out as a major\ninitiative by various governments in\
    \ making cities more navigable and welcoming to\nthe expected population increase\
    \ and providing city dwellers a better living experi-\nence, as is evidenced by\
    \ the multiple projects ongoing on both the public and private\nlevel [4, 5, 6,\
    \ 7]. The Internet of Things (IoT) has been the prime enabler of smart\ncities\
    \ as it has provided the means in terms of sensors, architectures, storage and\n\
    other technologies to instrument cities. It allows stakeholders to gather data,\
    \ pro-\ncess it and then make decisions based on the analyses performed. There\
    \ are various\ndomains within smart cities, these include Smart Agriculture, Smart\
    \ City Services,\nSmart Grid, Smart Health, Smart Homes, Smart Industry, Smart\
    \ Infrastructure and\nSmart Transportation.With improvement of Artificial intelligence\
    \ (AI) capabilities\nin the last decade, there have been different applications\
    \ of machine learning (ML)\nand deep learning (DL) algorithms within each of these\
    \ domains providing for better\ndecision making and improvement of services. Apart\
    \ from various supervised and un-\nsupervised learning applications, several tasks\
    \ within different components of smart\ncities can be formulated into optimization\
    \ problems and/or require heuristics to be\nincorporated in some form. However,\
    \ in both such tasks, there is a dearth of an\noverall coverage of Smart City\
    \ IoT based ML/DL and combinatorial optimization\nproblems. Such a coverage would\
    \ be very beneficial to researchers starting in the\nfield and has been presented\
    \ herein.\nOne of the major applications of the IoT Smart Cities is for health\
    \ purposes.\nMany countries around the world, especially in the developed world\
    \ are facing an\naging population. With the retirement of the ’baby boomer’ generation,\
    \ countries\naround the world are facing a big question over caring for their\
    \ elderly population.\nOne of the major issues that elderly people face today\
    \ are falls [8]. In the US, falls\naccount for a majority of the deaths caused\
    \ by injury in population aged 65 and\nabove [9] and a fall related injury occurs\
    \ every 19 minutes [10]. As indicated in [11],\nfalls have been associated with\
    \ estimated medical costs ranging from $31.5 billion for\n2013 to $49.5 billion\
    \ for 2017. Moreover, Floerence et al. [12] notes that in 2018,\nfalls contributed\
    \ to 8% of Medicaid expenses in the US for older adults, consequently\n1\nfalls\
    \ have huge health as well as financial ramifications for people and governments.\n\
    Determining when a person has experienced a fall is therefore an important task\
    \ in\nthe healthcare of people, more so in the old age population who tend to\
    \ increasingly\nlive alone and are at increased risk of suffering from falls.\
    \ Apart from just detecting\nif a fall has occurred or not, the direction of a\
    \ fall is an important consideration\nas well. Bourke et al. [13] notes that even\
    \ though 60% of falls occurring in older\nadults are forward falls, falls occurring\
    \ sideways may result in fracture and thus\nare important to determine. Quick\
    \ dispatch of healthcare providers can result in\ntimely treatment of fall related\
    \ injuries, thereby reducing the overall impact to life\nand wealth. Additional\
    \ information about the fall could benefit the medical dispatch\nteam to help\
    \ decide emergency procedures which could be matched up with patient\nhistory\
    \ of potentially being injury prone in a certain part of the body. In light of\
    \ this\nall, the development of fall detection systems has been of keen interest\
    \ to researchers\nin the domain of human activity recognition, tele-medicine and\
    \ smart health.\n2\nAims\nCiting the importance of IoT usage in communities, the\
    \ aims of this dissertation are\nas follows:\n1. To provide a wholistic coverage\
    \ of IoT based Smart City system design consid-\nering important aspects such\
    \ as sensors, technologies used, IoT architectures,\nthe use of machine/deep learning\
    \ methods and optimization schemes as well as\nthe challenges.\n2. Considering\
    \ the case study of smart health and specifically fall detection, de-\nvelop methodologies\
    \ for detection of falls considering fall direction and severity.\n3\nOrganization\n\
    This dissertation is organized in to six chapters.\nChapter II presents a coverage\n\
    of the IoT for Smart Cities in terms of the technologies used, its architectures\
    \ and\nalso the challenges towards IoT usage in Smart Cities. Chapter III discusses\
    \ the the\napplications of machine and deep learning algorithms. This chapter\
    \ provides a com-\nprehensive discussion on IoT usage in Smart Cities by considering\
    \ the different types\nof systems devised for each application as well. Chapter\
    \ IV discusses the applications\nof optimization algorithms in IoT based smart\
    \ cities for five popular algorithms. It\nthus provides a coverage of optimization\
    \ applications under the IoT smart city um-\nbrella. Chapter V presents work on\
    \ a chosen case study of smart health based on\nIoT. The considered task is fall\
    \ detection with direction and severity consideration.\nFour experiments have\
    \ been performed in this regard considering three scenarios, one\nconsidering\
    \ falls only with direction and severity and two others considering falls and\n\
    activity of daily living (ADL) as a combined problem. The designed methodologies\n\
    have shown to outperform the state of the art as has been discussed in the chapter.\n\
    The conclusion and future work opportunities are discussed in chapter VI.\n2\n\
    CHAPTER II\nIOT SMART CITIES\n1\nIntroduction\nThis chapter provides an overeview\
    \ of the use of IoT in Smart Cities and discuss\nhow it facilitates such initiatives.\
    \ It starts by laying out the structure of Internet\nof Things in a Smart City\
    \ context, discussing its various applications, components\nand architectures\
    \ while also discussing the technologies used at the different levels of\nthe\
    \ IoT architecture. Lastly, a discussion of the technical challenges that exist\
    \ in the\ndeployment of IoT in the Smart City domain is provided along with identification\
    \ of\npotential solutions to those challenges followed by future directions.\n\
    It is hard to define a Smart City, in fact, cities claim to be ‘smart’ based on\
    \ a\nvariety of criteria, for e.g. implementing novel e-governance schemes, creating\
    \ so-\ncial learning ventures and community engagement programs, focusing on sustainable\n\
    living as well as the more typical application of Information and Communication\n\
    Technologies for innovation [14]. In this work, Smart Cities are defined to be\
    \ the ap-\nplication of various information and communication technologies (ICT)\
    \ with the aim\nof creating a better living experience for a city’s population.\
    \ This encompasses use\nof these technologies in all the domains discussed previously,\
    \ including governance,\ntransport, housing, business, sustainable living, social\
    \ learning, community engage-\nment, providing opportunities and more. In an ideal\
    \ sense, the idea of a smart city\ntranscends the typically set boundaries of\
    \ a traditional city’s administrative and so-\ncial structure by allowing interaction\
    \ between the two, thereby enabling it to operate\nin a more cohesive and engaged\
    \ manner. Smart cities offer several advantages (in\nterms of value) compared\
    \ to a traditional city ecosystem:\n1. Climate goal achievement: Smart cities\
    \ are at the forefront of pioneering tech-\nnologies to help enable countries\
    \ meet climate goals. Smart city focuses on\nsmart energy management, smart transportation\
    \ systems and city administra-\ntion which aim to reduce the carbon footprint\
    \ of cities and enable development\nand use of new technologies for cleaner living.\n\
    2. Money value: Smart City ventures will be a market of USD 1 Trillion by 2025\n\
    [15], this provides a huge monetary incentive for not only governments but\nprivate\
    \ companies to actively contribute to the development of technologies\nsupporting\
    \ smart city development.\n3. Societal impact: The centerpiece of the smart city\
    \ project is to improve the qual-\nity of life of a city’s inhabitants and help\
    \ develop an inclusive society wherein\nevery opinion is catered for and equal\
    \ opportunity is provided. Information and\n3\nCommunication Technologies in the\
    \ smart city context are a fundamental com-\nponent to the provision of public\
    \ services by facilitating interactions of citizens\nwith the city environment\
    \ and making life easier.\n2\nSmart City Components\nA smart city is made up of\
    \ several components which are illustrated in Figure 1.\nSmart city applications\
    \ typically have four aspects associated with them, the first is\nthe collection\
    \ of data, the next is its transmission/reception, third is the storage and\n\
    fourth is analysis. The collection of data is application dependent and has been\
    \ a real\ndriver for sensor development in the various domains. The second part\
    \ is the exchange\nof data, this involves data transmission from the data collection\
    \ units towards the\ncloud for storage and analysis.\nThis task has been achieved\
    \ in several manners,\nmany smart city ventures have city-wide Wi-Fi networks,\
    \ 4G and 5G technologies are\nbeing used, as well as various types of local networks\
    \ which can convey data either\non a local level or a global level. The third\
    \ stage is storage in the cloud, different\nstorage schemes are used to arrange\
    \ and organize data so as to make it usable for\nthe fourth stage which is data\
    \ analysis. Data Analysis refers to the extraction of\npatterns and inferences\
    \ from the gathered data to guide decision making. In some\nsituations, simple\
    \ analysis such as basic decision making and aggregating would work\ntoo. For\
    \ more complex decision making, the availability of the cloud allows not only\n\
    for heterogeneous data gathering/storage and processing but also analysis through\n\
    the use of statistical methods as well as machine and deep Learning algorithms\
    \ in\nreal-time [16].\n2.1\nSmart Agriculture\nFood security is one of the most\
    \ important parts of the United Nations Sustainable\nDevelopment goals for 2030.\
    \ With an increasing world population, worsening climate\nchange causing erratic\
    \ weather in food centers of the world, the race to ensure that\nfood production\
    \ is made sustainable and that dwindling resources such as water are\nutilized\
    \ efficiently has been a high priority for countries around the world. Smart\n\
    agriculture is the use of sensors embedded into plants and fields to measure various\n\
    parameters to help in decision making and prevent/diseases, pests etc [17]. A\
    \ part\nof the smart agriculture paradigm is precision agriculture, which involves\
    \ sensors\nbeing placed in plants to provide targeted measurements and therefore\
    \ allow for\ntargeted care mechanisms to be deployed. Precision agriculture will\
    \ be necessary\nfor food security in the future [18] and therefore is an essential\
    \ part of the fight for\nsustainable food production. The major applications of\
    \ AI in IoT for agriculture are\ncrop monitoring/disease detection and data driven\
    \ crop care and decision making.\n2.2\nSmart City Services\nSmart city services\
    \ encompass the activities that sustain a city’s population, these\ninvolve municipal\
    \ tasks such as supply of water, waste management, environmental\n4\nSmart \n\
    Energy\nSmart \nTransportation\nSmart \nAgriculture\nSmart \nInfrastructure\n\
    Smart  \nCity Services\nSmart Health\nSmart Homes\nSmart  Industry\nFigure 1.\
    \ Smart City Components\ncontrol and monitoring etc. Sensors for water quality\
    \ can be deployed to continually\nprovide an update about the quality of water\
    \ being used in the city and detect leaks\n[19]. One popular component of smart\
    \ city initiatives is the management of waste,\nand it has been the part of many\
    \ of the smart city initiatives mentioned earlier, from\nchutes in Barcelona to\
    \ having bins equipped with sensors and connected to the cloud\nso as to not only\
    \ inform the relevant authorities of the need to empty them but also\nusing AI\
    \ to determine the best route to reduce cost [20]. Sensors can also be used to\n\
    monitor the environmental conditions in a city to determine pollution levels [21]\
    \ and\nguiding citizens to the next free parking space to save fuel costs [22].\n\
    2.3\nSmart Energy\nTypical electrical systems have one-way energy flow from a\
    \ main generator source,\nusually a hydroelectric or fossil fuel based power plant.\
    \ Power generation is controlled\nvia feedback from the substations, however,\
    \ since there is no information feedback\nfrom the consumer end, the power generation\
    \ scheme used with these systems requires\nthat the power being produced by these\
    \ sources outstrips the demand by a large\namount to ensure continuous supply\
    \ of power. The process of detecting faults and\nperforming corrective actions\
    \ in such systems is also a time taking process. Moreover,\nwith renewable energy\
    \ technologies becoming cheaper, the consumer of today not\nonly has a supply\
    \ from the main utility but also performs their own generation.\nSmart Grids is\
    \ the use of ICT to make the current and newly installed grids more\nobservable,\
    \ allow for distributed energy generation, both at the consumer end as well\n\
    as the utility end and introduce self-healing capabilities in to the grid. One\
    \ aspect\n5\nof smart grids is that real time power data is transmitted to utilities\
    \ at different\npoints on the grid throughout the supply lines till the customer.\
    \ Since smart grids\nprovide real-time data about consumer usage, it allows for\
    \ better management of\npower generation using prediction models developed through\
    \ acquired consumption\ndata, integrating different energy sources as well as\
    \ self-healing [23] of the network\nto ensure an uninterrupted supply.\n2.4\n\
    Smart Health\nSmart Health refers to the use of ICT to improve health care availability\
    \ and quality.\nWith an increasing population and rising costs of healthcare,\
    \ this area has been of\nintense focus of researchers as well as healthcare providers.\
    \ Current health systems\nare over burdened and therefore cannot cater to the\
    \ increasing demand from the pop-\nulace. In this regard, smart health aims to\
    \ ensure that healthcare be available to as\nmany people as possible through telemedicine\
    \ services [24] and improved diagnosis\nassistance to doctors utilizing AI [25].\
    \ With the ubiquitousness of mobile phones\nand health trackers [26] that can\
    \ capture real-time data about peoples health (ECGs,\ntemperature, body oxygen\
    \ saturation and other biosensors) while also recording daily\nactivity and detecting\
    \ abnormal movements using inertial sensors, it has become pos-\nsible to leverage\
    \ cloud capabilities for processing this data to make better healthcare\ndecisions.\
    \ Thus reducing the overall costs as well as burden on healthcare facilities.\n\
    2.5\nSmart Home\nOne major component of Smart Cities is the Smart Home since it\
    \ is central to the\nlife of the city’s inhabitants. Smart Homes involve the use\
    \ of sensing units installed\nthroughout a person’s home that provide information\
    \ about the home as well as\nits occupants. These sensors might include user activity\
    \ monitors such as ambient\nsensors, motion trackers and power/energy consumption.\n\
    2.6\nSmart Industry\nIndustries around the world are busy in a continuous pursuance\
    \ of being more ef-\nficient and increasing productivity while reducing cost.\
    \ The industry 4.0 paradigm\nentails the vision of a connected factory where all\
    \ its intermediary functionaries are\nseamlessly integrated, working in tandem\
    \ with each other. This is made possible be-\ncause of the internet of things\
    \ [27]. The use of IoT in manufacturing and production\nprocesses, cyber physical\
    \ systems integrating workers and machines has led to several\nbenefits to the\
    \ industry such as faster and better innovation, optimization of manu-\nfacturing\
    \ schemes (resources and processes), better quality of products and enhanced\n\
    safety for factory workers. However, smart industries come with several challenges\n\
    for IoT usage, working with a set of heterogeneous devices and machines has its\
    \ own\nchallenges and requires cyber physical systems to have flexibility in configuration,\
    \ con-\nnectivity and quick implementation for use in IoT applications for Smart\
    \ Industry\n[28]. Artificial Intelligence has gone hand in hand with IoT to spur\
    \ the development\nand deployment of industry 4.0 services. With sensors being\
    \ embedded in machines\n6\nand other processes in the factory, data from these\
    \ sources provide an opportunity for\nusing AI techniques to increase automation,\
    \ perform business intelligence operations\nand more. In fact, researchers have\
    \ suggested frameworks for integrating AI within\nIoT for Smart Industry [28,\
    \ 29, 30]. The major applications of AI in the industry are\npredictive maintenance,\
    \ monitoring/fault detection (machine health) and production\nmanagement.\n2.7\n\
    Smart Infrastructure\nThe infrastructure of a city is paramount to its living\
    \ quality, city governments need\nto construct new bridges, roads and buildings\
    \ for the use of its inhabitants and also\nperform maintenance for uninterrupted\
    \ usage. Smart infrastructure helps cities in\nensuring their infrastructure is\
    \ in shape and usable by utilizing sensors for measuring\nbuilding/bridge structural\
    \ state for structural health monitoring using accelerome-\nters [31] and smart\
    \ materials [32]. Data collected through these sensors allows for\npredictive\
    \ maintenance of these essential units to maintain normal operation of the\ncity.\n\
    2.8\nSmart Transport\nMany urban centers suffer from traffic problems, this includes\
    \ congestion, pollution,\nscheduling and cost reduction issues for public transport.\
    \ The rapid development\nand implementation of new Information and Communication\
    \ Technologies, Vehicle-\nInfrastructure-Pedestrian communication has become commonplace.\
    \ Whether it be\nVehicle to Vehicle (V2V), Vehicle to Infrastructure (V2I), Vehicle\
    \ to Pedestrian (V2P)\nor Pedestrian to Infrastructure (P2I), such technologies\
    \ have made the design of smart\ntransportation systems possible. With cars having\
    \ a GPS device and the common-\nality of cellphones with every driver, many approaches\
    \ use GPS data to track driver\nbehavior and traffic patterns [33]. This real-time\
    \ data is already used for route map-\nping in applications such as Waze and Google\
    \ Maps and used for trip scheduling in\npublic transport. Parking systems equipped\
    \ with sensors can also guide drivers to\nthe nearest free parking spot.\n3\n\
    Internet of Things for Smart Cities\nAt the heart of the smart city initiatives\
    \ is the internet of things, it is the enabling\ntechnology that has allowed for\
    \ the pervasive digitization that gives rise to the con-\ncept of smart cities.\
    \ The internet of things refers to the ubiquitous connection of\ndevices to the\
    \ internet, allowing them to send information to the cloud and poten-\ntially\
    \ get directions for performing actions. IoT involves the collection of data and\n\
    performing data analytics operations to extract information in order to support\
    \ de-\ncision and policy making. It is estimated that by 2025 more than 75 billion\
    \ devices\nwill be connected to the internet [34], spearheading even more application\
    \ develop-\nment. Within the smart city context, IoT allows for sensors to collect\
    \ and send data\n7\nabout the city’s state to a central cloud, which is then mined\
    \ or processed for pattern\nextraction and decision-making purposes.\n3.1\nIoT\
    \ Architectures for Smart cities\nThe Internet of Things unifies the operations\
    \ of data sensing, transmission/recep-\ntion, processing and storage through the\
    \ use cloud services. Based on technology, a\ngeneric IoT architecture consists\
    \ of five layers where successive layers operate on the\ninformation from the\
    \ previous layer as shown in Figure 2. It also shows the three\ndifferent architectures\
    \ that exist for IoT systems.\nCloud Computing\nEdge computing\nFog Computing\n\
    Business layer\nActuators\nMobile Elements\nSensors\nNetwork Technologies\nNetwork\
    \ Topologies\nAPIs, Databases, Security\nApplications\nData Analytics (Machine\
    \ Learning, Optimization, Deep Learning)\nApplications \nLayer\nMiddleware \n\
    Layer\nNetwork Layer\nSensing Layer\nFigure 2. IoT Architecture\nThe Sensing layer,\
    \ also called the Perception layer consists of sensors that can\nget information\
    \ about physical quantities of interest in any application as well as\nactuators\
    \ which can act upon physical objects, such as Radio Frequency IDentification\n\
    (RFID) readers for reading RFID tags and other such devices. The data read by\
    \ the\nsensing layer is passed onward to the Middleware layer using the networking\
    \ layer\nthrough wireless network technologies such as Wi-Fi, cellular internet,\
    \ Zigbee and\nBluetooth etc.\nThe Middleware layer provides a generic interface\
    \ for the sensing\nlayer hardware and the Application layer which uses the data\
    \ through various API’s\nand database management services to provide users with\
    \ services. The Business layer\nis attached to the application layer and is used\
    \ to develop strategies and formulate\npolicies that help manage the complete\
    \ system.\nIn terms of architectures, typically, IoT architectures are categorized\
    \ based on\nthe type of operation responsibilities allocated to parts of the IoT\
    \ system, this cat-\negorization is based mainly on processing of data responsibilities.\
    \ There are three\narchitectures of IoT systems with respect to the stage of the\
    \ IoT framework where\nprocessing of data can be carried out and these are Cloud,\
    \ Fog and Edge Models.\nTable 1 lists the traits of each of three layers of the\
    \ IoT system. It is important to\n8\nmention that the three IoT architectures\
    \ discussed here are not mutually exclusive,\ninstead the aim of this hierarchy\
    \ is to complement the higher layer by providing it only\nuseful information which\
    \ makes the system more productive and dependable. For any\nIoT system designer,\
    \ the aim is to establish a balance between the capabilities of the\nthree layers\
    \ keeping in view system costs and requirements.\n3.1.1\nCloud Computing Model\n\
    This was the first proposed architecture for IoT systems and is based on the premise\n\
    that processing of data from the various components in the IoT system should take\n\
    place in the cloud. Cloud computing allows for the remote accessing of uninterrupted\n\
    shared resources (computing, storage and services) over the network. It should\
    \ be\nable to dynamically allocate these resources without human intervention,\
    \ schedule\nor pool as necessary and be able to be accessed from a variety of\
    \ different platforms\n[35]. The cloud can provide both hardware as well as software\
    \ services for smart city\napplications. It has the advantage that it provides\
    \ a central management platform\nfrom which to observe, control the IoT system\
    \ as well as to disseminate command\nactions based on the received data. Moreover,\
    \ this centralization also allows for cloud\nsystems to have sufficiently large\
    \ computing and storage capacities thereby allowing\nthem to perform complex tasks\
    \ of data mining, pattern extraction and making infer-\nences from sensor data\
    \ in smart cities to make use of it in the best manner possible.\nHowever, there\
    \ are a few disadvantages with using the cloud computing model for\nthe IoT. First,\
    \ transmitting all gathered data to the cloud increases network traffic,\neven\
    \ though this may not be true for applications in which measurements are not\n\
    very frequent, but in other cases, this could increase network costs. Moreover,\
    \ data\ntransmission overheads may increase due to the large amount of data that\
    \ needs to\nbe transmitted by the many sensors existing in the smart city scenario.\
    \ Another\ndisadvantage that the cloud computing model suffers from is data latency,\
    \ since the\nsensing units exist at the sensing layer and the decision making/data\
    \ processing takes\nplace in the cloud, this gives rise to data latency in the\
    \ transmission of sensing infor-\nmation, especially when many devices start sending\
    \ data at the same time. Network\nreliability can be an issue when using this\
    \ model, with the large volume of data traffic\non the network, it might not be\
    \ possible to enforce robust data transmission schemes\nas IoT systems get bigger.\n\
    3.1.2\nFog Computing Model\nSince most of the information produced with in IoT\
    \ takes place towards the sensing\nend of the IoT system, also called the edge,\
    \ Fog Computing was proposed in [36]\nto overcome some of the problems of the\
    \ cloud computing model for the IoT. Fog\ncomputing provides a more diverse distribution\
    \ of responsibilities than are dictated\nby the cloud computing architecture by\
    \ moving some of the processing to devices\non the local network.\nTypically,\
    \ Fog computing refers to data processing that is\ncarried out by routers and\
    \ other network devices within in the Network layer in the\nIoT. Since network\
    \ devices nowadays increasingly offer better computational capabil-\n9\nities,\
    \ one can leverage them to perform rudimentary operations on data. Operations\n\
    such as aggregation and collection of sensor data, simple processing operations\
    \ and\ndecision-making can be performed to reduce the amount of information flow\
    \ towards\nthe higher cloud layer. Questions that need to be answered for the\
    \ decision-making\nprocess include but are not limited to for e.g., does the decision\
    \ require the use of\naveraging for one quantity and instantaneous values of the\
    \ other? Is it possible to\nextrapolate data received for one quantity and use\
    \ the currently measured value for\nanother one? Based on the previous data for\
    \ a given period, can one provide higher\nlayers with decision options rather\
    \ than just data, thereby providing better quality\ninformation to the cloud layer\
    \ thus resulting in better utilization of cloud resources.\nFog layers can localize\
    \ decision making since they have access to the local state of a\ngiven region\
    \ [37]. This would be helpful in implementing distributed decision mak-\ning mechanisms\
    \ which might be necessary in some applications. Moreover, they also\nallow for\
    \ local networks to be established using non-internet technologies such as Zig-\n\
    bee, Bluetooth, RFID etc where sensors and other end devices transmit data to\
    \ the\nFog node (also referred to as access points in such systems) which is connected\
    \ to the\ncloud.\nFog computing results in reduced costs for deployment of IoT\
    \ systems, increases ro-\nbustness as latency, data overhead and errors in transmission\
    \ are reduced. This also\nimproves the efficiency of the applications as quicker\
    \ decisions can be made on the\nreceived data, which is important in critical\
    \ decision-making situations. Moreover,\nFog devices have the capability to not\
    \ only receive data from similar devices at the\nedge but also collect it from\
    \ many different types of devices. This capability to mea-\nsure different parameters\
    \ in the edge environment enable for an application neutral\nIoT system architecture\
    \ to be developed.\nData sent upward by the Fog layer in the IoT hierarchy would\
    \ be used to gain insights\nin to system behavior and to guide new rules of system\
    \ operation, this will typically\nbe carried out in the cloud. Devices in the\
    \ Fog layer may be provided decision making\nguidance from the higher cloud layer\
    \ to ensure smooth system operation. However,\na balance needs to be struck as\
    \ to the division of responsibilities between the cloud\nand the fog layer keeping\
    \ in view the costs involved.\n3.1.3\nEdge Computing Model\nThe purpose of Fog\
    \ Computing was to push some of the decision making towards\nthe edge of the network.\
    \ In recent years, with increasingly capable devices being\ndeveloped that are\
    \ attached to ‘edge’ nodes, simple decision making, and processing\nof data has\
    \ been increasingly moved on to these devices so as to reduce network\nand device\
    \ costs even further at the fog level and make for even deeper distributed\ndecision-making\
    \ schemes. Edge computing refers to data processing that is done at\nthe ”thing”\
    \ level, i.e. by sensors and other devices in the IoT system [38]. Another\nconcept\
    \ about Edge computing as discussed in [39] defines the Edge computing layer\n\
    as an intermediary layer between the Fog and the ‘things’ (sensors) rather than\
    \ edge\nnodes. The difference between them in this case is the Edge computing\
    \ nodes act\nas aggregation and decision-making units on a smaller scale compared\
    \ to fog devices\n10\nwhich act to provide seamless connectivity and data integrity\
    \ throughout the IoT\nnetwork. The aim of the Fog and the Edge computing paradigms\
    \ is to decentralize\nthe IoT system for purposes of reducing cost, increasing\
    \ scalability and increasing\nrobustness.\nTable 1. Comparison of Cloud, Fog and\
    \ Edge Computing Models\nCloud\nComputing\nModel\nFog Computing Model\nEdge Computing\
    \ Model\nContextual awareness on a\nglobal level encompassing all\naspects of\
    \ the application\nThe Fog layer has contextual aware-\nness of the local sensing\
    \ scenario\nEdge devices typically only\nhave\ninformation\nabout\ntheir own status.\
    \ Exchange\nstrategy possible but limited\nto local neighborhood\nFarthest away\
    \ from the edge\nand therefore decision mak-\ning can be slow and latency\nis\
    \ high\nBeing the closest unit to the edge,\nthe Fog layer can respond much\n\
    more quickly to the data being sent\nfrom sensors and other devices, as it\ncan\
    \ aggregate the information sent\nQuickest\ndecision\nmaking\npossible; however,\
    \ decisions\nwill be based on local states\nUtilizes heterogeneous data\nfrom\
    \ a variety of sensing de-\nvices\nUtilizes heterogeneous data,\nbut\nwithin a\
    \ small region\nUsually do not have access\nto different types of data\nHigh network\
    \ cost\nMedium network cost as data flow\nis reduced\nLeast network cost\nPotential\
    \ privacy risk as raw\ndata might be sent to the\nCloud\nIncreased\nprivacy\n\
    compared\nto\nCloud computing\nEven\ngreater\nprivacy\nen-\nforcement possible\
    \ than Fog\ncomputing model\nLeast\nrobust\nas\ndecision\nmaking is centralized\n\
    More robust than Cloud computing\nmodel\nMost robust as distributed\ndecision\
    \ making takes place\nBest capabilities in terms of\nresources\nLesser capable\
    \ than Cloud devices\nLeast capable\nScalability is low\nScalability is better\
    \ than Cloud\nScalability is highest\n3.2\nIoT Challenges for smart Cities\nThe\
    \ Internet of Things promises the digitization of all aspects of our lives. For\
    \ smart\ncities, this digitization process entails the proliferation of sensing\
    \ nodes in every\ndomain of a city’s operation mechanism. With an application\
    \ scope this broad, the\ncreation and subsequent deployment of IoT systems in\
    \ smart cities carry enormous\nchallenges that need to be considered. In this\
    \ section, a discussion is provided of\nthe challenges that IoT system designers\
    \ face when making deployments in smart\ncity applications.\nThe focus in this\
    \ work is on the technological challenges that\npertain to IoT use in smart cities\
    \ and has also been the focus of researchers. Figure 3\nshows the different challenges\
    \ which Smart City IoT system deployment encounters,\nnamely Security and Privacy,\
    \ Smart Sensors, Networking and Big Data Analytics. A\nsummary of the discussion\
    \ in this section is presented in Table 2.\n11\nSmart City\nChallenges\nSmart\
    \ \nSensors\nNetworking\nIntelligent \nData \nAnalytics\nSecurity and \nPrivacy\n\
    Interoperab\nility\nReliability\nRobustness\nPower\nMemory\nHeterogen\nous data\n\
    Scalability\nLow Power\nMobility\nRouting\nEncryption \nData \nLeakage\nAccess\
    \ \nControl\nNetwork \nAttacks\nFigure 3. Challenges for IoT in Smart Cities.\n\
    3.2.1\nSecurity and Privacy\nSecurity, along with Privacy is the primary concern\
    \ in smart cities.\nSmart cities\ninvolve having essential city infrastructures\
    \ online, any aberration in the operation\nof the city’s services will bring inconvenience\
    \ to its citizens and put human lives and\nproperty at risk. Therefore, security\
    \ is a big concern in smart cities. In today’s age\nwhere cybercrime and warfare\
    \ have become a tactic in world politics, smart cities\nare at an ever-greater\
    \ risk of being the target of such malicious attacks. Encryption\nof data transmitted\
    \ over the network is necessary in this scenario. For smart city\nprojects to\
    \ be successful, they require the trust and participation of citizens. The\nproliferation\
    \ of sensors in smart cities, which continuously collect data about the\nactivity\
    \ of people may expose the daily activities of citizens to unwanted parties.\n\
    Moreover, companies and corporations on the IoT network may use citizen data\n\
    without their approval for things like targeted advertising and may perform acts\
    \ such\nas eavesdropping etc. Solutions to this will require processes that anonymize\
    \ data\ncollection while retaining the integrity of the context of the measured\
    \ task so that\napt decision making is possible. Security and Privacy has been\
    \ covered in detail in a\nlater section.\n12\n3.2.2\nSmart Sensors\nSmart sensors\
    \ are the hardware components that gather data in smart cities. These\ndevices\
    \ are manufactured by a host of different vendors that adhere to different sens-\n\
    ing mechanisms, standards of measurement, data formats and connectivity proto-\n\
    cols. Smart city deployment will require all these devices to exchange data, perform\n\
    scheduling of tasks between them and be able to aggregate data together for mak-\n\
    ing inferences. A solution to this issue is to develop and use open protocols\
    \ and\ndata formats that will enable manufacturers to create equipment that can\
    \ communi-\ncate between each other, further spurring IoT system deployment. Another\
    \ solution\ncould be the development of ‘standard’ access point nodes for IoT\
    \ systems that can\ncommunicate to devices using several different communication\
    \ protocols and are able\nto decode the information received. Some manufacturers\
    \ have, in fact, made their\nproducts compatible with other protocols as mentioned\
    \ in [40].\nAnother challenge for smart sensors is reliability and robustness.\
    \ Reliability and\nrobustness refer to the dependability and correctness of the\
    \ IoT system. IoT is the\nbackbone of future smart cities and being imperative\
    \ to their operation, the IoT\nsystem needs to provide a smooth experience to\
    \ its users. This requires that service\nrequests from users of the application\
    \ receive an accurate and timely response. The\nquality of service needs to be\
    \ ensured for every citizen in the smart city. Systems\nthat deliver critical\
    \ utilities such as transport, electricity etc. should be decentralized.\nThe\
    \ distributed connection points will allow for robustness and increase reliability.\n\
    One such example is self-healing in Smart Grids [23].\nMany current networking\
    \ protocols are developed for infrastructure networked\ndevices which have access\
    \ to continuous power, however, sensors in smart cities will\nbe mobile in many\
    \ scenarios and thus be battery powered. Moreover, they will need\nto measure,\
    \ transfer and in some cases save data they have collected. This requires\nthe\
    \ development of not only low power, low overhead data transmission schemes\n\
    but also development of new memory and storage technologies as well as low power\n\
    devices that extend battery life as much as possible. Storing this large amount\
    \ of\ndata would require development of compression algorithms which will be employed\n\
    and database schemes that will need to be developed in the future as smart cities\n\
    and IoT are scaled up. Solutions for power issues necessitate the development\
    \ of new\nbattery technologies and perhaps the incorporation of energy harvesting\
    \ mechanisms\nin such devices to make long lasting service provision possible.\n\
    3.2.3\nNetworking\nThe IoT depends on the capability of sensing and other devices\
    \ to be able to send\nand receive information to each other and the Cloud. With\
    \ new smart city appli-\ncations coming up, providing networking to these devices\
    \ to remain connected is a\nbig challenge. Current networking methods are not\
    \ optimized to providing network-\ning services for smart city components. Many\
    \ devices in smart cities have mobility\nand data throughput requirements which\
    \ need to be met to provide an acceptable\nquality of service. Different approaches\
    \ have been suggested in terms of defining ac-\n13\ncess points, local networks\
    \ etc. to solve this problem. Another aspect of networking\nwould be working on\
    \ efficient and dynamic routing protocols that can serve IoT re-\nquirements capable\
    \ of working with stationary as well as devices in motion, which\nmany current\
    \ protocols do not offer sufficiently [41].\n3.2.4\nBig Data Analytics\nIoT connected\
    \ devices generated 13.6 Zetta Bytes of data in 2018 and this is expected\nto\
    \ grow to 79.4 Zetta Bytes till 2025 [34]. To make use of this data and continuously\n\
    improve the services that are delivered in smart cities, new data analytics algorithms\n\
    need to be developed. With the myriad of the different parameters that are measured\n\
    in smart cities, these algorithms need to be applicable to data of varying nature\
    \ (both\nstructured and unstructured), better data fusion techniques need to be\
    \ developed as\nwell so as to combine them in meaningful ways and be able to extract\
    \ inferences and\nrecognize patterns. Deep learning has been of interest in this\
    \ area as it can lever-\nage on this large amount of data to provide better results\
    \ for different applications.\nAnother important consideration would be to ensure\
    \ that the developed algorithms\nare scalable in that they have enough generality\
    \ and can be used through out the\nintended application. For, e.g., for the purposes\
    \ of activity recognition, the authors\nin [42] found that a CNN trained for activity\
    \ recognition on one dataset failed to\nperform well on others or in [43] where\
    \ the deep learning network performs poorly\nwhen the color of tomatoes is different\
    \ from what it was trained on. Concept drift is\nanother issue of concern as with\
    \ the continuous acquisition of data, the properties of\ndata may change over\
    \ time. Techniques such as incremental learning may be useful\nin this respect.\
    \ Explainability is another important factor for Smart City analytics\nto be widely\
    \ acceptable, specially in the area of smart health. There have been some\napproaches\
    \ suggested towards this end, in [44] a hybrid deep learning classifier and\n\
    semantic web technologies based solution is demonstrated for the application of\
    \ flood\nmonitoring. In [45], the authors present an explainable deep learning\
    \ based health-\ncare system at the Edge for COVID-19 care based on a distributed\
    \ learning paradigm\nwith promising results. However, more work needs to be performed\
    \ to incorporate\nexplainability techniques such as distillation, visualization,\
    \ and intrinsic methods into\nMachine and Deep Learning based smart city applications\
    \ in order to increase smart\ncity application proliferation.\n3.3\nSensing Technologies\n\
    Sensing is at the heart of smart city technologies. Sensors provide the knowledge\
    \ and\ndata from which smart city innovations are created. With the vastly different\
    \ nature\nof Smart City projects and its various components, there are numerous\
    \ sensors which\nare used as part of these initiatives. The authors in [58] have\
    \ provided a framework\nfor the comparison of IoT sensors and have listed sensors\
    \ they found in use for the\nInternet of Things. We use their work to direct our\
    \ survey of the sensing technologies\nused in smart cities. Sensors within IoT\
    \ can be divided in to several groups, these are\nambient, motion, electric, biosensors,\
    \ identification, presence, hydraulic and chemical\n14\nTable 2. Smart City IoT\
    \ Challenges and Mitigation\nChallenge\nMitigation/research direction\nReferences\n\
    Security and Pri-\nvacy\nEncryption\n[46][47][48][49][50][51][52]\nNew authentication\
    \ mechanisms\n[53][54][55]\nNew standards to anonymize data\nPrevent data leakage\n\
    Smart Sensors\nInteroperability: Open Standards\n[46][47][48][52][53][54][55]\n\
    Reliability and Robustness: Decen-\ntralized and distributed architec-\ntures\
    \ and decision making\n[56]\nPower and Memory:\nEnergy har-\nvesting, Low power\
    \ sensors, New\ndatabase storage systems\nNetworking\nLow\npower\nnetworks,\n\
    Network\nschemes that ensure fluent mobility\nand routing\n[41][52]\nBig data\
    \ analytics\nNew algorithms which work with\ndifferent\nnatured\ndata,\nDevelop\n\
    scalable and explainable AI\n[47][52][57]\nsensors as shown in Figure 4.\nSensors\
    \ are the key component in smart city IoT\nsystems which provide the interaction\
    \ between the smart city system and the city’s\ninhabitants and allow for new\
    \ services to be developed. One thing to note is that\nmany of the sensors find\
    \ applications in multiple areas as discussed. Furthermore,\nany given application\
    \ will require measuring different physical quantities and will\nrequire the use\
    \ of many different types of sensors. For, e.g., ambient, motion, electric,\n\
    identification, position, chemical and hydraulic sensors have been found to be\
    \ used in\nsmart homes. As noted in the challenges, working with different sensors\
    \ which might\nhave different output data types is a task that needs to be dealt\
    \ with when working\nwith multiple types of sensors. Table 3 presents a summary\
    \ of the sensors used in\neach smart city component.\n3.3.1\nAmbient Sensors\n\
    Ambient sensors include sensors used to measure physical quantities indicating\
    \ to\nenvironmental conditions such as temperature, humidity, light intensity\
    \ and pressure.\nAmbient sensors are used in a variety of smart city applications\
    \ including smart homes\nwhere they are used to regulate the comfort level, they\
    \ are also used for smart city\nservices.\n3.3.2\nBio-Sensors\nBio-sensors are\
    \ used for measuring health parameters of living things. Bio-sensors in\nsmart\
    \ cities are used for monitoring patients for healthcare purposes. Such sensors\
    \ in-\nclude ElectroEncepheloGram (EEG), ElectroMyoGram (EMG), ElectroCardioGram\n\
    15\nAmbient\nPresence\nMotion\nOther \nsensors\nIdentification\nElectric\nHydraulic\n\
    Smart City Services\nSmart Homes\nSmart Transport\nSmart Agriculture\nSmart City\
    \ Services\nSmart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart\
    \ Infrastructure\nSmart Transport\nSmart Health\nSmart Homes\nSmart Industry\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Homes\nSmart Industry\n\
    Smart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Agriculture\n\
    Smart City Services\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nBiosensors\nSmart City Services\nSmart Homes\nSmart Transport\n\
    Smart Sensors\nChemical\nSmart Agriculture\nSmart City Services \nSmart Homes\n\
    Smart Transport\nFigure 4. Sensing Technologies for IoT Smart Cities.\n(ECG),\
    \ skin resistance, heart beat, breath sensors, pulse oximetry, blood pressure\n\
    and more.\n3.3.3\nChemical\nChemical sensors are used to measure chemical properties\
    \ of materials, this includes\ngas sensors which can measure/detect carbon monoxide\
    \ (CO), carbon dioxide (CO2)\nand other gases for air quality monitoring, sensors\
    \ for detecting smoke, pH and other\nsensors for water quality monitoring etc.\n\
    3.3.4\nElectric Sensors\nElectric sensors allow for the measurement of electrical\
    \ power and are widely used in\nsmart grids and smart homes to monitor the power\
    \ consumption of consumers/ap-\npliances. Types include current transformers and\
    \ voltage sensors to measure current\nand voltage, respectively.\n3.3.5\nHydraulic\n\
    Hydraulic sensors refer to sensors used for liquid measurements such as level,\
    \ flow,\nleak detection. These are used for measurement of liquid levels in tanks\
    \ [59].\n16\n3.3.6\nIdentification\nIdentification sensors refer to RFID tags\
    \ and Near Field Communication (NFC) de-\nvices. These sensors are used in applications\
    \ involving payments, data exchange in\nthe domain of smart transportation and\
    \ smart city services.\n3.3.7\nMotion Sensors\nMotion sensors refer to sensors\
    \ that can be used for the detection of motion. Sensors\nfor motion sensing involve\
    \ inertial sensors such as accelerometers and gyroscopes.\nThese sensors are used\
    \ in smart health applications such as activity tracking as well\nas applications\
    \ like vibration sensing in smart homes and industry.\n3.3.8\nPresence\nPresence\
    \ sensors indicate to the presence of a humans or objects. Passive InfraRed\n\
    (PIR) sensors are very popular and are used to detect human motion, reed switches\n\
    can be used on windows and doors for security purposes, inductive loop sensors\
    \ which\nuse electromagnetic induction can be used to detect presence in transport\
    \ systems.\nUltrasonic sensors are also used to determine the distance of objects.\n\
    Capacitive\nsensors are also included in this type, these may be used to determine\
    \ position.\n3.3.9\nOther Sensors\nVarious smart city applications make use of\
    \ different sensing modalities such as audio\nor visual information or other signal\
    \ measurement devices, for, e.g., bluetooth and\nWi-Fi signal strength. Since\
    \ the sensors for these modalities capture raw information\nabout signals (visual,\
    \ sound or signal strength etc.), the gathered data is typically\nprocessed further\
    \ before it indicates to the target variable being measured.\n3.4\nNetworking\
    \ Technologies\nThe internet of things in smart cities depends on the aggregation\
    \ of data measured by\nindividual sensing units placed throughout the smart city\
    \ environment. Systems that\ncan use these measurements individually have long\
    \ existed and provided automation\nfor small projects. However, the ‘smart’ in\
    \ smart city comes from the collective usage\nof the data from these individual\
    \ sensing units to perform complex decisions while\ndelivering services to citizens.\
    \ The collective use of this data enables its analysis over\na wider scope compared\
    \ to individual levels so as to determine long term patterns\nand provide meaningful\
    \ insights to support services. The number of such IoT devices\ncurrently present\
    \ in the world [34] are multiple times that of the world population.\nTo enable\
    \ these devices to exchange data, wireless technologies need to be used as\nphysical\
    \ connections would, for one, be too costly (where ever they can be used),\nsecond,\
    \ would not satisfy the mobility requirements that are typical of many smart\n\
    city applications. The internet has provided connectivity to computers, smartphones\n\
    and other electronic devices around the world with each other, allowing for instant\n\
    17\nTable 3. Sensing Technologies for IoT Smart Cities by Smart City Component\n\
    Smart City Com-\nponent\nSensor Type\nReferences\nSmart Agriculture\nAmbient,\
    \ Chemical, Hydraulic, Other sen-\nsors\nSmart City Services\nAmbient, Chemical,\
    \ Hydraulic, Presence,\nOther sensors,\n[60][61][62]\nSmart Energy\nAmbient, Electric,\
    \ Motion\n[63][64]\nSmart Health\nBiosensors, Identification, Motion, Other\n\
    sensors\n[65][66][67]\nSmart Home\nAmbient, Chemical, Electric, Hydraulic,\nIdentification,\n\
    Motion,\nPresence,\nOther\nsensors,\n[63][68]\nSmart Industry\nAmbient, Biosensors,\
    \ Electric, Hydraulic,\nIdentification., Motion, Other sensors\nSmart Infrastructure\n\
    Ambient, Motion, Electric, Other sensors,\n[60]\nSmart\nTransporta-\ntion\nAmbient,\
    \ Chemical, Identification, Mo-\ntion, Presence, Other sensors\n[69][70][71]\n\
    transfer of information between them. However, for IoT the internet may not neces-\n\
    sarily be the only communication method [72] as many applications do not possess\n\
    edge devices that can connect to the internet. An application may consist of a\
    \ local\nnetwork of sensing units which can exchange data between them and rely\
    \ on a multi-\nhop communication protocol to send data to a central node, hub\
    \ or gateway. The\ngateway might be fixed and would be connected to the internet,\
    \ thereby relaying any\nmonitored data to the cloud for further processing or\
    \ use. It might also be possible\nthat devices within an application may use many\
    \ different protocols with the central\nnode having the capability to communicate\
    \ with all of them, a common case for such\narchitectures is the smart home where\
    \ manufacturers produce devices using propriety\nor incompatible protocols for\
    \ which a hub may be used, an example of such a system\nwas provided in [73] and\
    \ several hubs are commercially available. In this section, we\ndiscuss the network\
    \ types, topologies and protocols used in the Internet of Things for\nSmart City\
    \ applications as illustrated in Figure 5. We later provide a comparison of\n\
    these protocols in Table 4.\n3.4.1\nNetwork Topologies\nThere are three IoT network\
    \ topologies, point to point, star and mesh [74]. The first\ntype of topology\
    \ is the point to point topology where devices are connected to each\nother sequentially\
    \ in a point to point manner. Point to point networks introduce\ndata hops for\
    \ packets that need to be sent to other nodes as data needs to go through\neach\
    \ node in the path of the two nodes wanting to exchange data. Point to point\n\
    networks are not very popular in IoT systems as it ranks low on fault resiliency\
    \ and\nwill breakdown if there is a fault in any of the intermediate nodes. In\
    \ Star topology,\n18\nall units in a network are connected to a central node or\
    \ gateway and cannot send data\nto each other directly. In order to perform an\
    \ exchange of data among themselves, the\ndevices need to send it through the\
    \ central node. Star topology networks, with their\ncentral node structure provide\
    \ a natural aggregation scheme for data collection within\nthe internet of things,\
    \ however, large networks consisting of many devices, which can\nbe the case in\
    \ most smart city applications, may result in high latency and possible\nbottlenecks\
    \ in high information throughput scenarios. Star topology has been used in\nvarious\
    \ applications including disaster management [75] and environmental sensing\n\
    [76]. The last type of network topology that is used in IoT is the Mesh network\n\
    topology, mesh networks allow all individual devices to communicate between them.\n\
    By enabling communication between the nodes in a network, mesh topology offers\n\
    a larger range as data transmitted towards a certain node can make multiple hops\n\
    through the network, this also increases the networks resilience as alternate\
    \ paths\ncould be used if packet delivery fails due to any node becoming faulty.\
    \ In fact, such\ntopologies have been used in smart homes [77] as well as in smart\
    \ grids [78]. There are\nother topologies which have not been mentioned, for,\
    \ e.g., tree (which has multiple\nstar networks connected in a point by point\
    \ fashion).\n3.4.2\nNetwork Architectures\nNetwork Architecture refers to the\
    \ structure of the network used for a given appli-\ncation. As discussed earlier,\
    \ the ‘things’ in IoT may not necessarily be connected\nthrough the internet,\
    \ in fact a distributed connectivity structure may be imple-\nmented with only\
    \ one unit in the network being capable of sending data to the\ncloud depending\
    \ on the requirement. Work in [72] mentions three types of network\narchitectures\
    \ that are used for smart cities based on IoT. These are Home Area\nNetworks (HANs),\
    \ Wide Area Networks (WANs) and Field/Neighborhood Area Net-\nworks (FANs/NANs).\
    \ Home Area Networks are short range networks and are usually\nused to transmit\
    \ information to a central node which is responsible for data collection\nbefore\
    \ it is sent to the cloud. Communication within the network is performed using\n\
    some low power communication protocol such as Zigbee, Bluetooth, Wi-Fi etc. HANs\n\
    are very popular in smart homes where they are used to gather power consumption\n\
    and times of operation data from a multitude of appliances which are then sent\
    \ to\na smart meter as part of a smart grid [79]. The second type of network architecture\n\
    is Field Area Networks (FANs), sometimes also called Neighborhood Area Networks\n\
    (NANs). Field Area Networks have a larger communication range than HANs and\n\
    are used to provide connection between a customer (for, e.g., in a smart grid)\
    \ to the\nutility company. Wide Area Networks are used for network structures\
    \ that require\ncommunication over large distances. These networks are not as\
    \ dense as HANs or\nFANs and utilize technologies such as cellular services, wired\
    \ connections such as fiber\noptics as well as a class of low power protocols\
    \ designed for WANs themselves [80].\nWANs are used in a variety of smart city\
    \ applications including Smart Grids where\nthey are used to connect multiple\
    \ substations together or exchanging data between\nthe customer and the substation\
    \ [81].\n19\n3.4.3\nNetwork Protocols\nThe type of network to use depends on the\
    \ requirements of the application. It is\nimperative that the communication protocol\
    \ used in a smart city application meet\nthe desirable quality of service (QoS).\
    \ Several protocols have been used in the internet\nof things for smart cities\
    \ [48, 82, 83, 84], herein, we discuss the traits of the most\npopular wireless\
    \ networking protocols used in smart cities.\n3.4.3.1\nRFID\nRadio Frequency Identification\
    \ (RFID) utilizes radio frequencies\nto transmit and receive data. RFID communication\
    \ consists of two types of devices,\none device is the Reader and the other is\
    \ called the Tag. The Reader is usually\npowered and once a tag comes in the vicinity\
    \ of the reader, an exchange of information\ntakes place after authorization as\
    \ the tag harvests the energy from the reader. Such\ntags are called passive tags,\
    \ there are also active tags which are do not depend on the\nreader for their\
    \ power. Depending on the standard, RFID can operate on different\nfrequencies\
    \ in the radio frequency spectrum between 125 KHz to 928 MHz and can\nbe used\
    \ over short ranges. They are used in applications such as smart transport\n(toll\
    \ tax collection, parking), smart health and more.\n3.4.3.2\nNear Field Communication\n\
    Near Field Communication (NFC) is very\nsimilar to RFID, however, the structure\
    \ of NFC communication doesn’t consist of\ntags and readers. Unlike RFID, both\
    \ devices which want to communicate using NFC\nneed to be powered and data tranmission/reception\
    \ can take place in both directions\nunlike RFIDs. This enables the use of NFC\
    \ to control and configure devices unlike the\nRFID which cannot be used for measurement\
    \ or control tasks. NFC utilizes similar\nfrequencies to RFID but is used for\
    \ very short distances. NFC devices are popular\nfor applications involving payment\
    \ using smart phones and are also used in smart\nhomes.\n3.4.3.3\nBluetooth\n\
    Bluetooth is a low energy protocol popular in IoT applica-\ntions as it can support\
    \ an unlimited number of nodes [82]. The protocol is designed\nfor short range,\
    \ low bandwidth communication in an arrangement where devices can\neasily exit\
    \ or enter the network. Bluetooth natively supports the star topology as it\n\
    has a master device at the center of the communication mechanism. It operates\
    \ in\nthe 2.4 GHz ISM band and can have maximum data rates of 2 Mbps. Bluetooth\
    \ has\nbeen widely used in smart home due to it providing a direct connection\
    \ interface to\nsmart phones without the need for any intermediary hub device.\n\
    3.4.3.4\nZ-Wave\nZ-Wave or Zensys wave is a low power protocol developed to\n\
    be used in home automation applications. It is a low speed protocol with a short\n\
    range, operating in the frequencies of 868 MHz and 900 MHz. It operates in a master\n\
    slave fashion where a master can have multiple slave devices which can respond\
    \ to\ncommands from the master node. Therefore this is well suited for applications\
    \ where\na central control element is present and needs to gather data from multiple\
    \ sensing\nunits such as smart homes and smart healthcare systems.\n20\n3.4.3.5\n\
    Li-Fi\nLi-Fi (Light Fidelity) uses visible light instead of radio frequency\n\
    (RF) to exchange data. The advantage with using Li-Fi over RF communication is\n\
    that it can utilize already present lighting systems which also results in conservation\n\
    of power [85]. It offers very high speeds of data transfer for short distances\
    \ and has\nbeen used in parking systems.\n3.4.3.6\nWi-Fi\nWi-Fi (Wireless Fidelity)\
    \ operates using wireless frequencies in the\n2.4 GHz and 5 GHz bands to provide\
    \ high speed internet connectivity in a limited\ndistance. Wi-Fi is popular in\
    \ many smart city applications as it provides ready to\nuse interface to smart\
    \ phones, computers and other wearable gadgets.\n3.4.3.7\nZigbee\nThe ZigBee protocol\
    \ was developed as a low power low cost pro-\ntocol for wireless sensor networks\
    \ (WSNs) and has evolved to be used in the Internet\nof Things. The ZigBee protocol\
    \ operates in the 868 MHz/915 MHz/2.4 GHz band\nand offers moderate data transfer\
    \ speeds with distances similar to Wi-Fi in a multi-\nhop data transfer scheme.\
    \ Zigbee radios are low cost devices and therefore it is a\npopular protocol used\
    \ by many manufacturers of smart home, smart healthcare de-\nvices. A ZigBee network\
    \ will have three devices, one called the coordinator which\nis the controller\
    \ of the network, the router which is responsible for moving data to\nother devices\
    \ and the ZigBee end device (sensors and actuators).\n3.4.3.8\nWi-SUN\nThe Wireless\
    \ Smart Utility Network (Wi-SUN) is a network\napproved by Institute of Electrical\
    \ and Electronic Engineers (IEEE) and is used in\nfield area networks for utility\
    \ metering, automation of distribution for utilities such\nas electricity, gas\
    \ etc. and also for demand response systems for utility-based appli-\ncations.\
    \ It supports IPv6 addressing and can be used in star or mesh configuration\n\
    where it also allows for multi-hop communication [86].\n3.4.3.9\nCellular\nCellular\
    \ technologies refers to 3G, 4G and 5G communications.\nAlong with Bluetooth and\
    \ Zigbee, they are the most popular IoT enabling technolo-\ngies. Cellular communication\
    \ provides high data rate and supports more content rich\napplications compared\
    \ to the other protocols. With the long range they provide, they\nare preferred\
    \ for a variety of applications where power is not an issue. Depending on\nthe\
    \ technology, cellular bands range from 600 MHz to 80 GHz with very high data\n\
    rates.\n3.4.3.10\nLoRaWAN\nLoRaWAN stands for Long Range Wide Area Network (Lo-\n\
    RaWAN) and it is a Low Power Wide Area Network (LPWAN) that consists of several\n\
    gateways and multiple end devices with the gateways connected to a back-end net-\n\
    work server. The back-end server provides connection to the cloud. End devices\
    \ do\nnot have a fixed association with a specific gateway and may send data to\
    \ multiple\ngateways when it needs to transfer data to the cloud.\n21\n3.4.3.11\n\
    6LoWPAN\n6LoWPAN which is short for IPv6 over Low Power Net-\nworks was created\
    \ by the Internet Engineering Task Force (IETF) specifically for\ninternet of\
    \ things applications with the aim of making it possible for providing in-\nternet\
    \ connectivity to small devices. It is an IP based network and leverages IPv6\n\
    communication. This is a short-range network operating in Industrial, Scientific\
    \ and\nMedical (ISM) bands.\n3.4.3.12\nSigFox\nSigFox is a proprietary standard\
    \ developed by SigFox Inc., France.\nIt uses unlicensed bands to perform ultra-narrowband\
    \ bidirectional communication\nwith low speeds [87]. SigFox has a similar architecture\
    \ to LoRaWAN and like Lo-\nRaWAN and 6LoWPAN, SigFox is a popular LPWAN in the\
    \ IoT domain offering\nsufficiently large distances of communication of up to\
    \ 50 km. SigFox finds applica-\ntions in security in buildings, smart lighting\
    \ and environmental monitoring.\n3.4.3.13\nNB-IoT\nNB-IoT (Narrow Band IoT) is\
    \ a type of LPWAN which oper-\nates on Global System for Mobile Communications\
    \ (GSM) and Long-Term Evolution\n(LTE) bands. In fact, it can operate using the\
    \ same hardware with a software up-\ngrade as it is considered a bare bones version\
    \ of LTE. It allows for connecting up to\n100,000 devices per cell.\nTable 4.\
    \ Comparison of Network Technologies for IoT Smart Cities\nArchitecture\nTechnology\n\
    Frequency/Medium Data rate\nRange\nTopology\nHome\nArea\nNet-\nworks (HANs)\n\
    NFC\n125\nKHz,\n13.56\nMHz/860 MHz\n106 Kbps, 212\nKbps or 424\nKbps\n10 cm\n\
    Point to Point\nRFID\n125\nKHz,\n13.56\nMHz/902-928 MHz\n4 Mbps [82]\n3 - 10 m\n\
    Point to Point\nLi-Fi\nLED Light\n1 – 3.5 Gbps\n[85]\n10 m\nPoint\nto\npoint,\n\
    Star,\nMesh\nBluetooth\n2.4 GHz\nUp to 2 Mbps\n240 m\nStar\nZ-wave\n868 MHz/900\
    \ MHz\n40-100 Kbps\n30 – 100 m\nMesh\nZigbee\n868\nMHz/915\nMHz/2.4 GHz\n250 Kbps\n\
    Up to 100 m\nMesh,\nStar,\nTree\nWi-Fi\n2.4 GHz/5 GHz\n54 Mb/s, 6.75\nGb/s\n140\
    \ m , 100 m\nTree\n6LOWPAN\n[82]\n868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n250\nKbps\n\
    10 - 100 m\nMesh, Star\nField/Neighborhood\nArea\nNetworks\n(FANs/NANs)\nWi-SUN\n\
    868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n300\nKbps\nUp to 4 Km\nStar, Mesh\nWide\nArea\n\
    Net-\nworks (WANs)\nNB-IOT\nLicensed LTE bands\n200 Kbps\n1 - 10 Km\nTree\nLoRaWAN\n\
    433\nMHz/868\nMHz/915 MHz\n50 Kbps\n5 - 20 Km\nStar\nof\nStar\n(nested star)\n\
    Sigfox\n433\nMHz/868\nMHz/915 MHz\n100 bps\n10 – 50 Km\nOne hop star\n3G\n1.8\
    \ – 2.5 GHz\n2 Mbps\n-\nTree\n4G\n600 – 5.925 GHz\nup to 1 Gbps\n-\nTree\n5G\n\
    600 - 80 GHz\nUp to 20 Gbps\n-\nTree\n22\nHome Area \nNetworks (HANs)\nNFC\nRFID\n\
    Li-Fi\nBluetooth\nZ-Wave\nZigbee\nWi-Fi\n6LoWPAN\nField/ Neighborhood \nArea Networks\
    \ \n(FANs/NANs)\nWi-SUN\nWide Area Networks \n(WAN)\nNB-IoT\nLoRaWAN\nSigFox\n\
    Cellular\ndistance\n1 Km\n10 Km\n100 Km\nFigure 5. Network Technologies for IoT\
    \ Smart Cities.\n3.5\nSecurity and Privacy in Smart City IoT\nSmart Cities involve\
    \ the transmission of sensing data, control information through\nthe internet\
    \ as well as local networks. Moreover, several components in smart cities\ntend\
    \ to critical aspects of a citys operation and are highly intertwined with the\
    \ social\nand private life of its citizens. Consequently, security and privacy\
    \ in Smart Cities\nis of great importance and has been of high interest to researchers\
    \ [51, 88, 89, 90,\n91, 92]. The topic of Security of IoT has been covered in\
    \ [93] who deliberate upon\nthe challenges faced in the different architectures\
    \ of the IoT and present issues and\nsolutions. We cover security for IoT in smart\
    \ cities so as to highlight issues that are\npertinent to in the Smart City context\
    \ and to complete our discussion on this topic.\nSmart Cities are enabled by collecting\
    \ data through sensors within a city as well\nas its populace, process it and\
    \ then mine it to provide a better quality of life to the\npeople living. These\
    \ sensors can provide an estimate about the internal state of a\ncity’s components\
    \ such as transportation, power system, building condition/state,\nhuman mobility\
    \ and more. All of this data is sent to the cloud where it is processed\nand mined.\
    \ However, there are several issues that pertain to how these data are\nsent and\
    \ used and raises questions about integrity, protection and the confidentiality\n\
    23\nAttackers\nHackers\nSpies\nTerrorists\nCorporate \nRaiders\nProfessional \n\
    Criminals\nVandals\nVoyeurs\nTool\nPhysical \nAttack\nInformation \nExchange\n\
    User \nCommand\nScript or \nProgram\nAutonomous \nAgent\nToolkit\nDistributed\
    \ \nTool\nData Tap\nVulnerability\nDesign\nImplementation\nConfiguration\nAction\n\
    Probe\nScan\nFlood\nAuthenticate\nBypass\nSpoof\nRead\nCopy\nSteal\nModify\nDelete\n\
    Target\nAccount\nProcess\nData\nComponent\nComputer\nNetwork\nInternetwork\nUnauthorized\
    \ \nResult\nIncreased \nAccess\nDisclosure of \nInformation\nCorruption of \n\
    Information\nDenial of \nService\nTheft of \nResources\nObjectives\nChallenge,\
    \ \nStatus, Thrill\nPolitical Gain\nFinancial Gain\nDamage\nGovernments\nBusiness\n\
    Consumers\nTransport \nSystems\nUtilities\nCity \nAdministration\nSocial Panic\
    \ / \nUnrest\nBusiness Trust \nManipulation\nFigure 6. Modified CERT Attack Taxonomy\
    \ for Smart Cities.\nof this process. In fact, this concern is not unwarranted\
    \ for, in 2015 an attack on\nthe Ukranian power grid which left 225,000 people\
    \ without power [94] opened the\nworlds eyes to the very real threat posed by\
    \ cyber attackers. Data gathered in Smart\nCity applications can be used to perform\
    \ many undesired acts, GPS devices that are\npresent in every phone and most vehicles\
    \ are susceptible to providing information\nabout a persons location, habits as\
    \ well as lead to privacy issues as discussed in [91],\npower consumption and\
    \ ambient sensor data from a building may indicate to occu-\npancy [95] and even\
    \ indicate to the individual identities [96]. This information may\nbe used by\
    \ bad actors to carry out unlawful acts causing risk to life and property.\nTo\
    \ secure the Internet of Things for Smart Cities, typical security schemes might\
    \ not\nbe as effective in many cases and new methods will need to be developed\
    \ to cope\nwith the security and privacy issues in IoT for Smart Cities. In order\
    \ to provide a\nstandardized framework and terminology for discussing security\
    \ attacks, we adapt the\nstandard attack incident taxonomy [97] suggested by the\
    \ Computer Emergency Re-\nsponse Team (CERT) which was established by Defense\
    \ Advanced Research Projects\nAgency (DARPA) for use towards IoT for Smart Cities.\
    \ This is shown in Figure 6.\nThere are different types of security and privacy\
    \ issues in IoT in Smart Cities,\nthey exist on each of the three levels of the\
    \ IoT architecture, application software\nlayers, network layer and the perception\
    \ layer along with some system wide issues, a\ndiscussion is provided for each\
    \ of them. Furthermore, Table 5 provides a summary\nof the security and privacy\
    \ issues in IoT for Smart Cities and the counter measures\nthat one can take to\
    \ mitigate them.\n3.5.1\nApplication Software Layers\nApplication software layers\
    \ are comprised of the Middleware, Application and Busi-\nness Layers. Security\
    \ and privacy in the application software layers tend to issues\nrelating to storage\
    \ of data and its usage. These are data visibility, access and injec-\ntion.\n\
    24\n3.5.1.1\nData Visibility/Identification\nOnce data is gathered, it is sent\
    \ to the\ncloud where it is stored and mined to make inferences. Since the cloud\
    \ would be used\nby multiple entities with different standards of security protocols\
    \ and practices, it is\nextremely important that data stored in the cloud is encrypted\
    \ so as not to allow its\nexposure to unwanted entities. Any data stored in plain\
    \ form would be a risk to not\nonly user privacy but also company rapport.\n3.5.1.2\n\
    Data access/Secondary Use\nAccess control is also a major issue in\nsmart city\
    \ data. Most Smart City applications rely on the usage of data from different\n\
    applications to provide smart services, thus resulting in the gathered data to\
    \ be used\nby many different enterprises. To allow this to take place smoothly\
    \ while preserving\nprivacy, suitable access control schemes will need to be devised\
    \ to allow for responsible\naccess to users of this data. A well-defined hierarchy\
    \ of data users will need to be\ndeveloped and implemented to limit access only\
    \ to intended authorized personnel.\nInformation flow control should also be employed\
    \ that can track data flow as access\nto it is made and to detect any violation\
    \ of access or usage rules. Moreover, data\nmashups that will occur in the cloud\
    \ where multiple entities merge their data to\nwork on some common goal, should\
    \ be carried out with proper oversight.\nData\nanonymization may also be required\
    \ in such a scenario where specific values may be\nconverted in to a range perhaps\
    \ ( e.g., using k-anonymity [90]) and unwanted data be\ndeleted as necessary.\
    \ Blockchain has been suggested to be used for access control as\nwell as access\
    \ tracking of users in IoT applications where each user access to a service\n\
    or an application ends up as a transaction to form the applications IoT trail\
    \ [98].\n3.5.1.3\nData Injection/Data Integrity\nData injection refers to the\
    \ injection\nof false information or modification information about a user in\
    \ the system after\ngaining access. Since data is typically stored in databases,\
    \ SQL injection involves\nan attacker inserting queries to modify data or make\
    \ false data insertions into the\ndatabase. This can have far reaching consequences\
    \ for smart city applications such\nas patient record manipulation as well as\
    \ manipulation or deletion of government\nrecords. SQL injection prevention schemes\
    \ involve the validation of data before using\nit [99] such as positive pattern\
    \ matching. It also involves limiting database access\nbased on the user requirements\
    \ and performing penetration testing.\n3.5.2\nNetwork Layer\nLike other networks,\
    \ the IoT in Smart Cities are also susceptible to network attacks\nsuch as Denial\
    \ of service, Eavesdropping, Man in the middle attack, Side Channel\nand spoofing\
    \ attacks [100]. We discuss these attacks and discuss remedial actions\nthat should\
    \ be taken to prevent them.\n3.5.2.1\nMan in the Middle Attack\nMan in the middle\
    \ (MITM) attack refers\nto the interception of data on the network by faking the\
    \ identity of a network node\nor device. This is carried out by appearing as the\
    \ intended recipient to the sender\n25\nand the original sender to the recipient\
    \ by unauthorized actors. To prevent this,\nthe exchange of data between two entities\
    \ should employ cryptographic protocols\nwhich can ensure secure communication.\
    \ Many public networks do not make use of\nencryption when exchanging data, this\
    \ endangers user data and can give access to\nunwanted persons to user information\
    \ [90]. Policies need to be devised to allow for\nsuitable data communication\
    \ standards for such networks while keeping the user as\nwell as commercial interests\
    \ in mind.\n3.5.2.2\nEavesdropping/Sniffing Attack\nEavesdropping refers to the\
    \ listening\nof data on the network. In eavesdropping an unauthorized entity joins\
    \ the network\nand can listen to the data that is being exchanged between the\
    \ devices on the network.\nTo avoid this, strategies include the use of authenticate\
    \ always protocols which initiate\nauthentication steps whenever devices need\
    \ to communicate with each other. This will\nensure that no unwanted users are\
    \ allowed access to network traffic to prevent such\nattacks. Moreover, industry\
    \ standard security protocols such as the Transport Layer\nSecurity (TLS), Wi-Fi\
    \ Protected Access 2 (WPA2) should be used for authenticating\nremote access.\
    \ Furthermore, remote sessions should have time-outs implemented to\nensure that\
    \ mistakes are not made by forgetful employees.\n3.5.2.3\nSide Channel Attack\n\
    Side Channel Attacks refer to the extraction\nof information by observing operation\
    \ characteristics of the implemented computer\nalgorithms or systems such as power\
    \ consumed, time taken, traffic analysis, fault\nanalysis, acoustic analysis [101].\
    \ Side Channel attacks don’t give nonpermitted parties\naccess to the data within\
    \ the network but may allow them to determine important\ninformation about the\
    \ system, such as the protocol used, or allow them to drop\npackets so as to degrade\
    \ performance of the network. One solution to counter network\ntraffic side channels\
    \ attacks is to saturate network bandwidth to prevent patterns\nfrom being observed.\
    \ Another popular method of preventing side channel attacks is\nto make use of\
    \ masking [102].\n3.5.2.4\nDenial of Service Attack\nDenial of Service (DOS) or\
    \ Distributed DOS\n(DDOS) attacks involve an entity getting access to the network\
    \ and using legitimate\nnodes within it to flood the target with unnecessary requests\
    \ to consume network\nbandwidth and degrade quality of service. With a smart city\
    \ depending on sensors\nto provide it with a ‘view’ of the city, DOS attacks can\
    \ make the smart city system\nblind which can lead to loss of property and life.\
    \ Countermeasures for DOS attacks\ninvolve anomaly detection by monitoring of\
    \ network data to check for any irregular\nbehavior. Artificial Intelligence has\
    \ found applications in this area as noted by [103],\nfor, e.g., it has been used\
    \ to identify abnormal data in smart grids [104] as well as\ndetecting attacks\
    \ [105, 106].\n3.5.2.5\nSpoofing Attack\nIn a spoofing attack, an attacker adds\
    \ itself to the\nnetwork by appearing to be a legitimate device on the network,\
    \ thereby allowing\nthem to send irregular or abnormal data to upset normal operation\
    \ of a smart city\n26\nsystem. Due to the varying nature and types of IoT devices\
    \ having different levels of\nbuilt-in security, spoofing is a particularly dangerous\
    \ attack for IoT systems. Methods\nto prevent spoofing are the use of cryptography,\
    \ hybrid encryption [107] as well as the\nuse of blockchain [108] to validate\
    \ data exchange and as well as authenticate devices.\n3.5.3\nPerception Layer\n\
    Perception layers attacks refer to physical attacks on an IoT based smart city\
    \ system.\nThis requires the physical presence of an attacker near the sensing\
    \ elements in an IoT\nsystem. We cover these attacks to provide a holistic assessment\
    \ of the security and\nprivacy issues in IoT Smart Cities. Tempering and Radio\
    \ Interference (jamming)\nare attacks which can affect the performance of smart\
    \ city systems. Tempering may\noccur during the development or the manufacturing\
    \ process while jamming can take\nplace due to a generation of radio frequencies\
    \ which interfere with the frequencies\nused by devices on the network to exchange\
    \ data. To circumvent this, policies may\nbe incorporated into software which\
    \ alert businesses and other Smart City partners\nto missing or abnormal data\
    \ from sensing devices.\n3.5.4\nSystem Wide Issues\n3.5.4.1\nData Leakage\nData\
    \ leakage refers to the unintentional conveyance of\ninformation about subjects\
    \ in smart cities. The many data sources in smart cities\nmay contain information\
    \ related to a user’s identity, health, quality of life etc. Smart\nCity application\
    \ managers use this data to improve their services and provide a bet-\nter user\
    \ experience, however, it is possible that this data might be shared with third\n\
    party entities. It is therefore necessary to anonymize data before such assignments\n\
    are taken. Data leakage can also take place when devices within a network perform\n\
    discovery tasks and may provide personal information to rogue nodes in the network.\n\
    In Smart Grids, power consumption data should be anonymized by considering the\n\
    data on a neighborhood level rather than on the individual level, moreover, systems\n\
    could be installed in homes using batteries to modify the demand response signal.\n\
    Data aggregation is an important tool in preserving individual privacy and preventing\n\
    data leakage. Moreover, data should be encrypted when sending it over the network\n\
    so that any unauthorized access is avoided. Another strategy would be to use data\n\
    minimization. Typically, sensors used in smart cities will gather data of less\
    \ ‘interest’\nin addition to data of interest. For, e.g., navigation systems many\
    \ times record loca-\ntion information even when not in use or video applications\
    \ such as facial recognition\nsystems typically record other activities apart\
    \ from being activated whenever a face is\nobserved in the video. This extra information\
    \ increases the risk of data leakage. Data\nminimization can be employed in such\
    \ cases to limit the data that is being gathered\non the user.\n3.5.4.2\nTrustworthiness\n\
    Apart from the technical steps that need to be taken\nto provide a secure usage\
    \ experience of smart city applications and to encourage its\nuse, it is important\
    \ that smart city users be provided clear policy guidelines to how\n27\nTable\
    \ 5. Security and Privacy issue for IoT Smart Cities\nLayer\nIssue\nCountermeasure\n\
    Application\nSoftware\nLayers\nData\nvisibility/Identifica-\ntion\n- Use of encryption\
    \ to store data\n(Middleware,\nApplica-\ntion and Business)\nData access/Secondary\
    \ use\n- Access control schemes based on user hi-\nerarchy\n- Data anonymization\
    \ be employed\n- Use of blockchain for tracking user access\nData\ninjection/Data\n\
    in-\ntegrity\n- Use of data validation before usage\n- Limiting data access\n\
    - Query parameterization\n- Penetration testing\nNetwork Layer\nMan in the middle\
    \ attack\n- Use of cryptographic protocols for data\nexchanges\n- Encrypting data\
    \ on public networks\nEavesdropping/Sniffing\nat-\ntack\n- Use always authenticate\
    \ protocols\n- Remote access should use industry ac-\ncepted protocols such as\
    \ TLS, WPA2\n- Timeouts for remote sessions\nSide channel attacks\n- Bandwidth\
    \ saturation\n- Masking to prevent similar operational\npatterns\nDenial of Service\n\
    - Check irregular data requests (AI has\nbeen shown to be of use here)\nSpoofing\
    \ attacks\n- Use of cryptography\n- Use of hybrid encryption\n- Use blockchain\
    \ to validate data exchange\nas well as authenticate devices\nPerception Layer\n\
    Tempering and Jamming\n- Software policies for missing data\nSystem Wide\nData\
    \ leakage\n- Data anonymization\n- Data minimization\n- Data aggregation\nTrustworthiness\n\
    - Provide clear policy guidelines to users\n- Flexible policy development in consulta-\n\
    tion with users\ncompanies providing them these services will manage their data.\
    \ Transparency in this\nregard will help increase user trust and the feedback\
    \ will enable companies to develop\nbetter data privacy mechanisms. Another way\
    \ trust could be developed would be for\nthe companies to provide customers who\
    \ are vary of data collection, certain options\nin policies where they could choose\
    \ which parts of the data collection are acceptable\nto them and which aren’t.\n\
    4\nSWOT Analysis\nTo complete this discussion, we perform a Strength Weaknesses\
    \ Opportunities Threat\n(SWOT) analysis on the use of IoT for Smart Cities that\
    \ discusses the strengths that\nIoT offers for Smart cities, the weaknesses in\
    \ the current implementation scenario,\nthe opportunities which exist for future\
    \ work in this area as well as the threats that\nIoT application to smart cities\
    \ faces, a summary of our discussion has been given in\n28\nTable 6. SWOT Analysis\
    \ for IoT in Smart Cities\nPositive\nNegative\nStrengths\nWeaknesses\nInternal\n\
    - Sustainable living\n- Lack of data control policies\n- Improved quality of life\n\
    - Laws need to be developed\n- Efficient city operations\n- Interoperability of\
    \ networks\n- Well suited for big data algorithms\n- Incompatible sensor standards\n\
    - Scalability of applications\n- Myriad of different application\nframeworks\n\
    - Real-time/fast response due to distributed IoT\nstructure\n- Reduced costs\n\
    - Robustness\n- Enable heterogenous system connectivity\nOpportunities\nThreats\n\
    External\n- Development of new sensor technologies.\n-\nTrustworthiness\nissues\n\
    among\nusers\n- Development of low power and higher speed com-\nmunication schemes\n\
    - Network attacks\n- Development of Encryption techniques for stor-\nage and data\
    \ exchange\n- Data theft\n- Development of Data processing for privacy\npreservation\
    \ techniques\n- Data leakage\n- Development of new city services\n- Development\
    \ of scalable, explainable AI\nTable 6.\n4.1\nStrengths\nIoT smart city strengths\
    \ are the fact that they provide an improved quality of life for\na city’s population\
    \ along with reduction of costs in terms of operation and also enable\ncities\
    \ to be sustainable. IoT enables sensors and devices to be deployed throughout\
    \ a\ncity to give an overview of the state of the city’s main functions such as\
    \ transportation\nsystems, electric, water and gas distribution as well as crime\
    \ monitoring to name\na few. This real time information helps city administration,\
    \ businesses and other\nstakeholders to provide better services to people, increase\
    \ the effectiveness of those\nservices and reduce the cost through efficient operation.\n\
    On the technical side, IoT data has made possible to use data analytics to gauge\n\
    various aspects of the multitude of services which are being provided in the city\
    \ as\nwell as to determine interactions between them and utilize that information\
    \ for better\ndecision making to make life easier for citizens. Furthermore, the\
    \ distributed nature\nof IoT systems and the flexible architectures which enable\
    \ fluidity through movement\nof sensing units is easily scalable thereby requiring\
    \ little additional cost to upgrade\nand expand currently deployed systems. Moreover,\
    \ this distributed architecture also\nmakes such systems very robust to faults\
    \ thereby increasing reliability of deployments\nand offering self-healing in\
    \ applications such as electricity systems.\n29\n4.2\nWeaknesses\nIoT in Smart\
    \ cities do suffer from some weaknesses in terms of technology, for, e.g.,\nthe\
    \ current deployment scenario has a myriad of different technologies relating\
    \ to\nnetworks, hardware platforms and software frameworks which do not often\
    \ work to-\ngether very well as discussed. Different standards’ bodies such as\
    \ the IETF, European\nTelecommunications Standards Institute (ETSI), IEEE and\
    \ other organizations have\nbeen contributing with standards for communication,\
    \ network discovery, identifica-\ntion, management of devices etc. However, the\
    \ sheer number of ‘standards’ with\nmany of them not being compatible with each\
    \ other has not fully solved the inter-\noperability problem and this can cause\
    \ hurdles for expansion of IoT systems without\na significant overhaul of system\
    \ components. Another problem currently facing IoT\nsystems is the lack of data\
    \ policies and legislation. The concern here is that data\npolicies are not mature\
    \ enough to regulate how data is handled in IoT systems, as\nhas been discussed\
    \ previously. This is a major problem given the growing issue with\nuser data\
    \ privacy in a connected world.\n4.3\nOpportunities\nIoT in Smart cities presents\
    \ many opportunities to researchers and businesses alike\nin lieu of mitigating\
    \ the weaknesses and also in the provision of new city services.\nThe data gathered\
    \ by the sensors in IoT systems has the potential to provide a\nholistic overview\
    \ of the city’s state allowing for the use of big data algorithms to\ndevelop\
    \ new applications and services. For researchers in the data analytics domain,\n\
    this heterogenous data provides a wonderful opportunity for the development of\
    \ new\ndata science algorithms for service delivery. There is a large monetary\
    \ value towards\nthe development and usage of computationally cheap encryption\
    \ techniques, efficient\ndata storage methods and networking technologies to make\
    \ IoT deployment easier\nand cheaper.\nDevelopment of new sensor technologies\
    \ is another opportunity for\nresearchers in IoT for smart cities.\nThe development\
    \ of newer, efficient, low-cost\nsensors would aid to the creation of IoT services\
    \ and enable even wider usage.\n4.4\nThreats\nWith a connected system, there are\
    \ several threats that come with IoTs for Smart\nCities involving trust issues\
    \ among users, privacy concerns due to network attacks,\npotential data theft\
    \ etc. Privacy and security are the most important concerns of\nIoT applications,\
    \ with such a personalized interaction mechanism between people\nand devices as\
    \ is the case of smart cities, the risks for privacy breaches, data theft\nand\
    \ leakages are high and this is a constant concern for service users as well as\n\
    providers. Numerous attacks on Smart City systems have exposed the vulnerability\n\
    of this technology to cyber attacks and also demonstrated the consequences that\
    \ it\nhas on the population. Traditional security procedures and methods such\
    \ as access\nauthentication, routing and networking might not be enough or possible\
    \ in many IoT\ndeployments due to IoT devices typically not having sufficient\
    \ computing capabilities,\n30\nthis has exacerbated the privacy and security concerns\
    \ for IoT stakeholders. This can\nalso feed to a lack of trust by customers to\
    \ participate in smart city applications.\n5\nConclusions\nThis chapter presented\
    \ a broad coverage of the Internet of Things in Smart Cities.\nProviding a detailed\
    \ discussion of Smart Cities and its different domains, IoT was\npresented as\
    \ a vital enabler of smart city services and the various smart city architec-\n\
    tures and the challenges that are faced in the deployment of smart city applications\n\
    were deliberated upon. This was followed by a review of the sensing and networking\n\
    technologies used for such applications Finally, the security and privacy issues\
    \ faced\nby IoT based Smart Cities were discussed and a SWOT analysis is provided.\n\
    31\nCHAPTER III\nAI IN IOT SMART CITIES\n1\nIntroduction\nThis chapter provides\
    \ insight into different ways in which AI has been applied in\nthe IoT for Smart\
    \ Cities using the application of clustering, regression, classification\netc.\
    \ In addition, various applications, solutions and data used for implementing\
    \ the\noverall framework of Smart Cities are discussed in detail. along with the\
    \ types of\ndeployment used by these proposed approaches.\n2\nBig Data Algorithms/Artificial\
    \ Intelligence\nThe various sensors that make up the internet of things in a smart\
    \ city relay in-\nformation about the city’s state to the cloud. However, measuring\
    \ raw data is not\nenough, to utilize this data and to make the city ‘smart’,\
    \ data analysis is key. Data\nanalysis in smart cities has four layers, the first\
    \ is Data Acquisition, which deals with\nthe collection and storage of data, this\
    \ is followed by the Preprocessing layer which\nperforms operations (such as imputing\
    \ missing values, scaling, removing erroneous\ndata points etc.) on the data to\
    \ ensure that data is of suitable quality to be used for\nthe data analytics stage.\
    \ The data analytics stage involves the application of data\nscience techniques\
    \ on the data to extract patterns and insights which would be used\nfor policy\
    \ making, planning and other actions in the Service layer. In this section, we\n\
    focus our attention on the third stage of the data analysis process, i.e., data\
    \ analytics.\nData analytics in the Smart City based on the IoT involves the use\
    \ of Deep Learning\nand Machine Learning on the gathered data. The discussion\
    \ in this chapter considers\nthe following aspects of the use of AI (ML/DL) in\
    \ the IoT for smart cities:\n1. The type of application: This refers to the aim\
    \ of the application.\n2. Algorithm/Network: This refers to the algorithm being\
    \ used to perform the\ntask and can be any of the ML/DL algorithms covered.\n\
    3. System Architecture: System architecture refers to the IoT architecture pro-\n\
    posed for the covered work. This can be Cloud, Fog or Edge.\n4. Task: This refers\
    \ to the type of machine learning task being performed. This can\nbe classification,\
    \ clustering or regression. In this category, a brief description is\nalso presented\
    \ about what quantities/outcomes are being worked with.\n32\n5. Data Type: This\
    \ refers to the type of data being used. Data can be of two\ntypes, heterogeneous\
    \ or homogeneous. Heterogeneous refers to the use of data\nof different modalities\
    \ whereas homogenous refers to a single modality being\nused. The aim of providing\
    \ this information is to capture the complexity of the\ndata involved in an application.\n\
    2.1\nMachine Learning\nMachine learning (ML) has been a crucial element of smart\
    \ city application develop-\nment [109], helping in prediction (classification),\
    \ estimation (regression) and cluster-\ning tasks. Machine learning refers to\
    \ the set of approaches through which computers\ncan be used to learn from empirical\
    \ data [110] and has been used in smart cities\nin various applications. Since\
    \ there has been a lot of work in this area using ML\nalgorithms, we focus on\
    \ work in the last few years. It was found that most commonly\nused ML algorithms\
    \ have been the Support Vector Machine (SVM), Random Forests\n(RF), Decision Tree\
    \ (DT), Naive Bayes (NB), K-Means, K-Nearest Neighbor (K-NN)\nand Logistic Regression\
    \ (LR).\n2.2\nDeep Learning\nDeep learning is the use of successive layers of\
    \ Artificial Neural Networks (ANNs) to\nlearn patterns. The idea is that successive\
    \ non-linear layers of interconnected artificial\nneurons can be used to learn\
    \ patterns in data that simple machine learning algorithms\nmight not be able\
    \ to do. Deep learning architectures can process noisy data to provide\noutput\
    \ for classification and prediction tasks. This makes them very useful in the\n\
    Smart City environment where the IoT enables the collection of heterogeneous sensor\n\
    data which can be of varying nature. Data derived from sensors can be processed\
    \ to\nextract features or can be fed directly to deep learning algorithms which\
    \ can perform\nboth feature extraction as well as classification/prediction. Deep\
    \ Learning methods\nsuch as Recurrent Neural Networks (RNN)(Long Short-Term Machines\
    \ (LSTM) and\nGated Recurrent Units (GRU)), Convolutional Neural Networks (CNN),\
    \ Deep Neural\nNetworks (DNN) and Stacked Autoencoder Networks (SAE) were the\
    \ preferred deep\nlearning methodologies used for smart city applications and\
    \ our discussion revolves\naround the utilization of these methods.\n3\nAI Applications\
    \ for Smart Cities\nIn this section, the applications for of AI in smart cities\
    \ have been discussed, we also\nmention the kind of deployment as well as the\
    \ nature of data utilized to achieve their\ntask.\n3.1\nSmart Agriculture\nThe\
    \ major applications of AI in IoT for agriculture are crop monitoring/disease\
    \ de-\ntection and data driven crop care and decision making. Considering the\
    \ scarcity of\n33\nwater, the authors in [111, 112, 113] develop irrigation systems\
    \ which monitor and\ncontrol the amount of water being used for crops, all structured\
    \ around a cloud com-\nputing system. This problem has been devised both as a\
    \ classification as well as a\nregression problem as in [114], who develop a closed\
    \ loop water irrigation system using\nsupport vector regression and K-Means clustering.\
    \ The authors in [115, 116] propose\ncloud based greenhouse monitoring systems\
    \ using images and a host of physical pa-\nrameters from plants such as temperature,\
    \ humidity and light using several machine\nand deep learning methods. Plant disease\
    \ detection is also an important task within\nsmart agriculture and has been worked\
    \ on by the authors in [117, 118, 119, 120] who\npresent schemes for disease detection\
    \ for various crops including tomatoes and pota-\ntoes. The proliferation of sensing\
    \ systems in agricultural fields has also provided an\navenue for data driven\
    \ decision making and planning for farmers. This involves pre-\ndicting various\
    \ physical parameters which can affect crop growth like solar radiance\n[121]\
    \ and temperature, humidity, windspeed [122, 123, 124, 125, 126] to help in deci-\n\
    sion making in terms of plant care but also classification systems for recommending\n\
    crops to be sown [127, 128]. It is important to note that all of these implementations\n\
    are cloud based.\nThere have been some suggested methodologies for bringing fog\
    \ processing for AI\nin smart agriculture, for, e.g., in [129] a deep learning\
    \ entrusted to fog nodes (DLEFN)\nalgorithm is described to support efficient\
    \ use of resources and reduce cloud resource\nusage. However, as noted in [130],\
    \ who use an edge system for temperature prediction\nusing an LSTM, edge device\
    \ performance still lacks that of similar cloud systems but\nthe inclusion of\
    \ DL capable hardware does provide opportunities for further innova-\ntions. Previous\
    \ work by the same author [131], where they aimed to monitor crops\nfor frost\
    \ signs and trigger anti-frost measures, compared edge and cloud computing\nsystems\
    \ for outlier detection and determined that cloud implementations to provide\n\
    much better performance. However, they do note the potential for edge systems\
    \ to\nprovide highly responsive data analytics in smart agriculture. More applications\
    \ can\nbe envisaged for AI deployment in smart agriculture, for, e.g., monitoring\
    \ of crop\ngrowth, selection of the fertilizer and the timeline for it to be used\
    \ as well as targeted\napplication, pest detection and intelligent pesticide spraying\
    \ so as to reduce harm to\nthe environment, environmental monitoring to track\
    \ the effects of climate change and\nmore. Some of these applications have potential\
    \ to be deployed as edge computing\nsystems. A summary of the use of IoT based\
    \ AI in Smart Agriculture is presented in\nTable 7.\n3.2\nSmart City Services\n\
    A popular component of smart city initiatives is the management of waste and involves\n\
    having bins equipped with sensors and connected to the cloud to not only inform\
    \ the\nrelevant authorities of the need to empty them but also using AI to determine\
    \ the\nbest route to reduce fuel consumption. The use of IoT systems for waste\
    \ management\nhas been observed in the works of [133] who utilize IoT systems\
    \ to help reduce energy\nwastage in waste collection by municipalities. Hussain\
    \ et al. [134] develop a waste\nmanagement system that not only determines if\
    \ bins are full and need collecting\n34\nTable 7. AI use for Smart Agriculture\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nCrop\nMonitoring\n\
    /Plant care (Irriga-\ntion)\nLR [111]\nCloud\nClassification\n-\nDifferent\nstates\
    \ of crop [less water\netc])\nHeterogeneous\n(Temperature,\nSoil\nmoisture, Air\
    \ quality,\nSunlight etc)\nDT [113]\nCNN [112]\nClassification\n-\nDifferent\n\
    conditions of plants and soil\n[dry etc])\nHomogeneous\n(Im-\nages)\nSVR + K-Means\
    \ [114]\nRegression\n-\nPredicting\namount of moisture in soil\nHeterogeneous\n\
    (Soil moisture,\nSoil\ntemperature,\nAir\ntemperature,\nUltra-\nviolet\n(UV)\n\
    light\nradiation,\nRelative\nhumidity,\nWeather\nforecast data)\nCrop\nMonitoring\n\
    /Plant\ncare\n(Mon-\nitoring\nand\ndisease\ndetection)\nSVM [115]\nCloud\nRegression\n\
    -\nForecasting\ntemperature\nHeterogeneous (Tem-\nperature,\nHumidity,\nLight,\
    \ Soil moisture)\nSVM [118]\nRegression\n-\nDaily\ncrop\ngrowth\n(indirectly\n\
    from\nmeasured data)\nSVM [117]\nClassification\n–\nDifferent\ncrop conditions\n\
    Heterogeneous\n(Im-\nages, Gas)\nSVM + K-Means + CNN\n[116]\nClassification\n\
    -\nDifferent\nstages of tomato growth\nHomogeneous\n(Im-\nages)\nSVM [119]\nClassification\
    \ - Recognizing\nand detecting disease\nCNN [120]\nEdge\nData driven crop care\n\
    and decision making\n(Predicting\nphysical\nparameters)\nCNN + RNN(GRU) [122]\n\
    Cloud\nRegression - Prediction of\nTemperature, Humidity and\nWind speed\nHeterogeneous\
    \ (Tem-\nperature,\nHumidity,\nWind\nspeed,\nLoca-\ntion\nof\nmonitoring\nstation,\
    \ Time, Rain-\nfall, Solar radiation)\nRFC[126]\nRNN (LSTM) [123]\nDNN [125]\n\
    RNN (GRU) [124]\nDNN [121]\nRegression - Prediction of\nsolar radiance\nRNN (LSTM)\
    \ [132]\nEdge /Cloud\nRegression\n-\nTemperature\nforecasting\nData driven crop\
    \ care\nand decision making\n(Crop\nrecommenda-\ntion)\nDT [127]\nCloud\nClassification\n\
    -\nDifferent\ncrops\nHomogeneous (Tem-\nperature)\nDT [128]\nClassification -\
    \ Soil fertility\nand type, Regression - Pre-\ndiction of soil toxicity\nHeterogeneous\n\
    (Soil\nmoisture,\nTemper-\nature,\nHumidity,\nPH,\nSoil\nnutrient\ncontent/fertility)\n\
    35\n(using data from various sensors placed in the bin) but also predicts the\
    \ air quality\naround it using RNNs. The sensing modalities in each of these applications\
    \ is pretty\nsimilar in that they indicate to whether a waste bin is full or not\
    \ which is then\nused for route planning. Considering the requirements of such\
    \ a system, in terms\nof implementation, all of these systems are cloud based.\
    \ Sewer monitoring has been\nperformed in [135] in a cloud based system, they\
    \ use sewer water level and rain gauge\ndata along with a RNN to perform sewer\
    \ overflow monitoring. The RNN is used to\npredict sewer overflow ahead in time.\
    \ Water quality has monitoring has been the focus\nof [136, 137, 138] where the\
    \ authors use multiple sensors measuring pH value, chloride,\nnitrate content\
    \ and hardness of water to determine whether it is fit for drinking or\nnot. In\
    \ [139], Liu et al. use data from water monitoring stations along the Yangtze\n\
    river to predict water quality. Like the classification-based systems, they use\
    \ multiple\nchemical measurements from the water such as oxygen, pH, turbidity\
    \ etc. Apart from\nair quality, smart city monitoring systems are an important\
    \ application within the\nsmart city services domain. This includes urban noise,\
    \ which has been the focus of\nresearchers in [140, 141] as well as other more\
    \ comprehensive monitoring systems as\nproposed in [142, 143]. All these systems\
    \ are cloud based and use a combination\nof sensors for sound and/or image data\
    \ for performing noise monitoring/detection\nand various smart city dashboard\
    \ applications. In Table 8, we summarize the type\nof deployments, applications\
    \ task and data for smart city services applications. It\nis noted that most of\
    \ the applications relating to city services such as air quality\nmonitoring and\
    \ prediction, sewer monitoring, waste collection have been proposed as\ncloud\
    \ systems as data needs to be collected from nodes at various points in a city.\n\
    It is envisaged that due to the nature of the applications, many smart city services\n\
    would still rely on cloud or fog architectures as the decision-making taking place\
    \ in\nsuch situations isn’t possible on only a local level. It is also observed\
    \ that most of the\napplications required data from multiple sensors and therefore\
    \ utilized heterogeneous\ndata to carry out the task at hand.\n3.3\nSmart Energy\n\
    Load/energy consumption forecasting is an essential task for monitoring and control\n\
    of electrical power supply in the electricity grid and ensure appropriate demand\
    \ side\nmanagement. It has been performed by the authors of [148] who use data\
    \ collected\nfrom consumers in a smart grid to determine load for up to 24 h in\
    \ advance. They treat\nthis as primarily a clustering problem where they form\
    \ clusters of similar load profiles\nand then use distance functions to determine\
    \ energy consumption for the future. The\nauthors in [149] also use a cloud based\
    \ clustering approach, using historical power\ndata, they use K-Means clustering\
    \ to determine the closest historical records and then\ncombine them to predict\
    \ energy consumption 24 h in advance. The load forecasting\nproblem has been dealt\
    \ as a regression by [150] using a SVM and by [151] through an\nRNN using electricity\
    \ power data. A regression approach is also followed by [152, 153]\nwho use electricity\
    \ consumption in addition to environmental data for load forecasting\nusing deep\
    \ learning methods (DNN and a combination of Autoencoders and RNNs\n(GRU)). Edge\
    \ based systems have been suggested by the authors of [154, 155, 156]\n36\nTable\
    \ 8. AI use for Smart city Services\nApplication\nNetwork\nSystem\nAr-\nchitecture\n\
    Task\nData type\nAir quality\nK-NN [144]\nCloud\nClassification - Differentiate\n\
    between different air quality\nlevels\nHeterogenous\n(Gas,\nLight, Temperature,\n\
    Humidity, Pressure,\nRFC[145]\nWind\nspeed,\nWeather\ninfor-\nmation, Images,\n\
    RFC[146]\nTraffic\nflow\ndata,\nVisibility,\ninforma-\ntion about\nRNN (LSTM)\
    \ [147]\nRegression - Prediction of\nair quality levels\ntypes\nof\nbuildings\n\
    etc)\nWater quality moni-\ntoring\nNB [136]\nCloud\nClassification - Determine\
    \ if\nwater is fit to drink or not\nHeterogeneous\n(Chlorides, Nitrates,\nTotal\n\
    dissolved\nsolids,\nSVM [137]\npH\nand\nHardness,\nand\nother\nchemical\nproperties)\n\
    DNN [138]\nRNN (LSTM) [139]\nRegression - Prediction of\nwater quality\nSewer\
    \ Overflow Mon-\nitoring\nRNN (GRU,LSTM) [135]\nCloud\nRegression - Prediction\
    \ of\nwhen\nHeterogeneous (Wa-\nter level sensor data\n(ultrasonic)\nover\ndrain\
    \ holes as well as\nrain gauges)\nWaste management\nRNN (LSTM) for prediction\n\
    of air quality [134] , K-NN\nfor detection of waste bin be-\ning full\nCloud\n\
    Regression - Prediction of\nair pollutant levels, Classifi-\ncation - Bin full\
    \ or not\nHeterogeneous\n(Odor, Weight, Level\nsensing using\nRFC[133]\nClassification\
    \ - Empty bin or\nnot\nultrasonic\nsensor,\nGas\nsensor\nfor\nair\nquality, Vibration)\n\
    Urban noise monitor-\ning\nCNN [140]\nCloud\nClassification\n-\nDifferent\ntypes\
    \ of sounds\nHomogeneous\n(Sound)\nRNN (LSTM) [141]\nRegression – Prediction of\n\
    noise levels\nManagement\nof\nSmart City\nCNN [143]\nCloud\nApplication\n–\nDashboard\n\
    (object identification etc)\nHeterogeneous (Var-\nious sensors, Urban\nvideo\n\
    and\nsound\ndata)\nCNN [142]\nfor load forecasting for household consumers, [156]\
    \ use federated learning to train a\nRNN. In addition to load forecasting, smart\
    \ grid management/monitoring is also a\nnecessary application in this domain.\
    \ The authors in [157] use decision trees in a cloud\nbased system to classify\
    \ between different faults in a smart grid. In [158], the authors\nuse power consumption\
    \ data from consumers in China to determine electricity theft\nin a cloud based\
    \ system. They use wide and deep convolutional neural networks to\ncapture the\
    \ periodic and nonperiodic components from electricity consumption data\nand show\
    \ their network to be suitable for electricity theft detection. The authors in\n\
    [159] present a framework for edge computing based monitoring of the smart grid.\n\
    Edge computing in the smart grid has several advantages as it reduces delay and\
    \ also\nit is secure in terms of data privacy. A summary of the use of IoT based\
    \ AI in Smart\nEnergy is provided in Table 9.\n37\nTable 9. AI use for Smart Energy\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nEnergy/Load\n\
    con-\nsumption forecasting\nK-Means [148]\nCloud\nClustering - Determine clus-\n\
    ters of similar power con-\nsumption\nHomogeneous (Elec-\ntric power)\nK-NN [149]\n\
    Regression - Predict con-\nsumption\nof\nelectricity\nahead of time\nSVM [150]\n\
    RNN (LSTM) [151]\nDNN [152]\nHeterogeneous (Elec-\ntric\npower,\nTem-\nperature,\n\
    Humidity,\nTime, Holiday\nSAE + RNN (GRU) [153]\nCNN [155]\nEdge\nRNN (GRU) [154]\n\
    Homogeneous (Elec-\ntric power)\nRNN (LSTM) [156]\nSmart\nGrid\nline\nevent\n\
    classification\n(fault etc.)\nDT [157]\nCloud\nClassification\n-\nDifferent\n\
    powerline events\nHomogeneous (Elec-\ntric power)\nElectricity theft de-\ntection\n\
    CNN [158]\nCloud\nClassification - Theft detec-\ntion for abnormal patterns\n\
    of consumption\nHomogeneous (Elec-\ntric power)\n3.4\nSmart Health\nThere are\
    \ two major applications of IoT with AI in health, these are activity recog-\n\
    nition/fall detection and disease diagnosis/health monitoring, a summary of the\
    \ IoT\nbased AI systems used in Smart Health is presented in Table 10. Activity\
    \ recog-\nnition involves the use of movement sensors such as accelerometers,\
    \ gyroscopes and\nmagnetometers with the aim to help provide the user with feedback\
    \ on their health.\nThis can be in terms of them having enough physical exercise\
    \ or not, used for sports\ntherapy, fall detection and for monitoring of different\
    \ diseases such as Parkinson’s or\nother motor degenerative ailments. The most\
    \ popular sensor for activity recognition\nare inertial sensors which have been\
    \ used by [160, 161] in a cloud based setting using\nvarious deep and machine\
    \ learning algorithms. In [162], Castro et al. include vital\nsign data in addition\
    \ to movement information for human activity recognition in a\ncloud environment,\
    \ they utilize the DT as their classifier. In [163],, the authors pro-\npose an\
    \ edge-based system to perform activity recognition for people by recording\n\
    their movements using the accelerometer and gyroscope present on the phone. They\n\
    use a SVM as their classifier and differentiate between six different activities\
    \ of daily\nliving. Fall detection has been performed by [164, 165] in a fog and\
    \ edge environment,\nrespectively, using an accelerometer, Santos et al. [164]\
    \ use a CNN while Yacchirema\net al. [165] useRFCwith both approaches showing\
    \ promising results.\nEquipped with the power of AI in IoT, Smart Health systems\
    \ facilitate the provi-\nsion of telehealth services as well as real time monitoring\
    \ of patients, giving doctors\nand patients feedback on their health.\nHealth\
    \ monitoring systems and real time\ndisease diagnosis have been one of the most\
    \ important applications of IoT technol-\nogy. The authors in [166, 167, 168,\
    \ 169, 170, 171, 172, 173, 174, 175, 176] develop\ncloud based health monitoring\
    \ systems for detecting various types of diseases, such\n38\nas heart (stroke\
    \ [167], irregular sound [169], irregular rhythm [171, 173]), epilep-\ntic seizures\
    \ [172], Parkinson seizure [176] and multiple disease diagnosis systems\n[174,\
    \ 175]. In [174, 175], the authors formulate the problem of disease diagnosis\
    \ as\na classification problem and utilize medical data such as ECGs, EEG, heart\
    \ rate,\nblood pressure, blood sugar, heart sound, blood glucose, liver health\
    \ along with var-\nious machine and deep learning methods to achieve this task.\
    \ Fog and edge based\nhealth monitoring/disease diagnosis systems have also been\
    \ suggested by a number\nof researchers. The authors in [177] present a fog based\
    \ system using a deep neural\nnetwork to detect heart disease from a patients\
    \ vital signs (blood oxygen, heart rate,\nrespiration rate, EEG, ECG, EMG, blood\
    \ pressure, glucose) and activity data. In\n[178], Devarajan & Ravi work on a\
    \ fog computing based Parkinson detection system\nusing a persons speech. Moreover,\
    \ an edge computing system is presented in [179]\nwhich utilizes EEG signals to\
    \ determine seizures in patients.\nTable 10. AI use for Smart Health\nApplication\n\
    Network\nSystem\nArchi-\ntecture\nTask\nData type\nHuman\nactivity\nrecognition/Fall\n\
    de-\ntection\nDT [162]\nCloud\nClassification - Different activities,\nfall /non\
    \ falls\nHeterogeneous (Acceleration, Heart\nrate,\nPosture,\nECG, Respiration\n\
    rate)\nRFC[160]\nHomogeneous (Accelerometer)\nCNN [161]\nRNN\n(LSTM)\n[180]\n\
    Fog Edge\nHeterogeneous (Accelerometer, Gy-\nroscope, Magnetometer)\nCNN [164]\n\
    Fog\nRFC[165]\nEdge\nHeterogeneous (Accelerometer and\nGyroscope)\nSVM [163]\n\
    Patient health moni-\ntoring\nDT [166]\nCloud\nClassification\n-\nRecommendation\n\
    about diet etc\nHeterogeneous (Heart rate, Sleep,\nCalories burned, Weight, Physical\n\
    activity time, Water, Exercise etc)\nSVM [169]\nClassification - Different emotions\n\
    Heterogeneous (Speech and Image)\nRNN(LSTM)\n[181]\nHeterogeneous (ECG, BVP, GSR,\n\
    SKT, EMG)\nCNN\n+\nSAE [172]\nClassification - Abnormal/normal\nheart sounds\n\
    Homogeneous (EEG)\nRFC[168]\nClassification - Epileptic Seizure de-\ntection\n\
    Homogeneous (Heart sounds)\nSVM [171]\nClassification - ECG arrhythmias\nHomogeneous\
    \ (ECG)\nDisease diagnosis\nDT [173]\nCloud\nClassification - Different heart\
    \ dis-\neases\nHeterogeneous (Heart health infor-\nmation, Patient records and\
    \ other\nhealth sensors)\nK-Means\n[174]\nClassification - Kidney, Heart and\n\
    Liver disease\nHeterogeneous (Heart and Kidney\nhealth data)\nRFC[175]\nClassification\
    \ - Detection of various\ndiseases\nHeterogeneous\n(Diabetes,\nHeart,\nLiver,\
    \ Dermatology etc data)\nDNN [177]\nFog\nClassification - Presence of heart\n\
    disease or not\nHeterogeneous\n(Blood\noxygen,\nHeart rate, Respiration rate,\
    \ EEG,\nECG, EMG, Blood Pressure, Glu-\ncose and Activity data)\nParkinson detection/\n\
    RFC[167]\nCloud\nClassification - Parkinson detec-\ntion/stroke has happened/seizure\n\
    detection\nHeterogeneous\n(Blood\npressure,\nSugar, Pulse rate)\nSeizure monitoring\n\
    SVM [176]\nHomogeneous (Speech)\nK-NN\n[178]\nFog\nNB [179]\nEdge\nHomogeneous\
    \ (EEG)\n39\n3.5\nSmart Homes\nAmbient assisted living is a huge component of\
    \ Smart Homes.\nThis is especially\nneeded for the elderly and is typically achieved\
    \ by the use of ambient sensors, Wi-Fi\nand radio frequency systems in smart homes.\
    \ In this work, we include all monitoring\nmethods that depend on sensors placed\
    \ in the home/within the smart home domain.\nIn [182], Pirzada et al. use a network\
    \ of reed switches connected to the cloud to\nmonitor the activities of elderly\
    \ people as a clustering problem. They use the K-\nNN algorithm to determine anomalies\
    \ in the daily activities which can then be used\nto send medical or other help\
    \ requests to assist people. A similar setup for activity\nrecognition for ambient\
    \ assisted living has been presented in [183, 184, 185] where they\nuse data from\
    \ a number of different sensors including motion, presence, water float,\ntemperature\
    \ etc to determine various activities being performed in a home. In [186],\na\
    \ cloud based assisted living system for the deaf has been developed that performs\n\
    haptic conversions for sounds detected in a home. An array of sensors are used\
    \ to\nmonitor environmental sound and the authors use RNNs for detecting the sound\n\
    event before its passed on to the haptic vibration producer. Another task within\n\
    in monitoring is localization of people, this part of smart homes is also applicable\n\
    to smart infrastructure in that such systems are used in smart buildings as well.\n\
    Applications of localization include security, i.e., detecting unauthorized presence\n\
    and people monitoring in general (for, e.g., locating elderly people in homes)\
    \ etc.\nThe authors in [187] perform localization using a grid of Wi-Fi units\
    \ that measure\nsignal strength to determine peoples locations indoors for buildings.\
    \ They formulate\nthis both as a classification problem as well as a regression\
    \ problem. The classification\nproblem being formulated as coded locations (for,\
    \ e.g., a given room no) while the\nregression case estimating the location of\
    \ the user in a coordinate grid. Their system is\ncloud based and they use a deep\
    \ neural network to perform this task and have found\nsuitably good results. Occupancy\
    \ detection has been performed by the authors of\n[188] making use of various\
    \ ambient measurements (temperature, humidity, pressure\netc.) and passing them\
    \ to a cloud before using a deep neural network to classify\nbetween the various\
    \ number of people present in an indoor environment. In [189],\nZimmermann et\
    \ al. also make use of ambient sensors for the occupancy problem and\nuse a na¨ıve\
    \ bayes learner to determine both the presence of occupants as well as their\n\
    number.\nHome automation is another application that the IoT finds application\n\
    within the Smart Home domain. The integration of AI has helped develop smart\n\
    home automation systems that aim to reduce energy consumption in homes as well\n\
    as maintain user privacy, security. Chowdhry et al. [190] use a combination of\
    \ visual\ndata and motion sensing to perform home automation for security using\
    \ a SVM.\nAn interesting use of AI in home automation is presented in [191] who\
    \ develop a\ncloud based home automation system, they take measurements from various\
    \ ambient\nsensors and control appliances and use a Na¨ıve Bayes classifier to\
    \ determine which\ntechnician to call whenever sensor measurements appear aberrated.\
    \ The problem of\nintelligent consumption of energy has been considered by [192]\
    \ who develop an energy\ndisaggregation system on the appliance level in smart\
    \ homes using stacked denoising\nautoencoders. They achieve this using power data\
    \ for individual appliances as well\n40\nas the total power consumed in the home\
    \ and send it to a local cloud. Data is then\ndisaggregated for various appliances\
    \ to provide feedback to the user.\nMore work\nproviding energy intelligence to\
    \ consumers has been performed by [193, 194, 195].\nKonstantakopoulos et al. [195]\
    \ pose this as a regression problem, they propose a\ncloud-based system utilizing\
    \ both ambient sensor data (lighting, temperature etc)\nand appliance power data\
    \ to forecast resource usage for consumers using a RNN.\nThey show a reduction\
    \ in energy consumption for their users using this information.\nEventhough applications\
    \ covered in smart homes have been cloud based systems,\nthere have been recent\
    \ proposals for frameworks that combine edge and cloud pro-\ncessing as in [196]\
    \ who discuss a hierarchical control system for smart homes through\na edge microgrid\
    \ and a cloud power grid. Due to the nature of smart homes in that\nthe sensing\
    \ scheme is present within a finite space (within the home), edge and fog\ncomputing\
    \ based systems are expected to be increasingly incorporated smart home\napplications.\
    \ A summary of the use of IoT based AI in Smart Homes is presented in\nTable 11.\n\
    3.6\nSmart Industry\nOne of the major applications of AI in the IoT powered smart\
    \ industry is towards\nfault detection in products and anomaly detection in industrial\
    \ processes. This has\nseen the use of both Machine Learning (SVM [197, 198],RFC[199,\
    \ 200]) as well as\nDeep Learning (DNN [201, 202, 203], CNN [204]) methods using\
    \ a cloud computing\nstructure to perform anomaly detection/product inspection\
    \ and monitoring using a\nvariety of heterogeneous and homogenous data sources\
    \ such as inertial sensors for ma-\nchines, images for products and processes\
    \ and other process specific variables. Other\napproaches suggested in [205, 206]\
    \ propose a fog computing method along with edge\ncomputing systems suggested\
    \ in [207, 208]. An edge computing system for anomaly\ndetection is presented\
    \ in [209] where edge devices collaboratively train a deep anomaly\ndetection\
    \ model. Production management is another application that has found usage\nof\
    \ AI in IoT based smart Industry. For, e.g., the authors in [210, 211, 212, 213,\
    \ 214]\nuse cloud based data driven systems along with machine and deep learning\
    \ algorithms\nto help with task dispatching, performance analysis as well as worker\
    \ activity recog-\nnition utilizing a variety of sensing modalities. The work\
    \ of [213, 214] are especially\ninteresting as they aim is to not only perform\
    \ production management but also pro-\npose data for various health related analysis\
    \ to create a safer working environment\non the factory floor. A fog system for\
    \ production management has been presented in\n[215] who use activity data to\
    \ determine resource allocation locations to contribute\nto management of a production\
    \ operation. Furthermore, product inspection, which\nis a common application of\
    \ instrumentation systems in a factory, has been performed\nby [216, 217] who\
    \ utilize images and sensor data in a cloud based system to monitor\nproduct quality.\n\
    A factory has a multitude of machines and equipment working round the clock\n\
    manufacturing goods. Maintenance is an important aspect of this operation where\n\
    regular checks are performed on the equipment to ensure that no breakdown occurs\n\
    during the production process, which might result in monetary loss or loss of\
    \ life.\n41\nTable 11. AI use for Smart Homes\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nAmbient Assisted liv-\ning (Activity recogni-\n\
    tion/Fall detection)\nK-NN [182]\nCloud\nClustering - Detect abnor-\nmal clusters\n\
    Homogeneous (Reed switches)\nRNN (LSTM)\n[185]\nClassification - Different ac-\n\
    tivities\nHeterogeneous\n(Human\nmotion,\nWater float, Reed switches, Tem-\nperature,\n\
    Pressure,\nLuminance,\nGas and other environmental sen-\nsors in a home)\nRNN\
    \ (LSTM)\n[183]\nSAE [184]\nRNN\n(GRU)\n[186]\nClassification\n-\nDifferent\n\
    sounds\nHomogeneous\n(Sound\nrecordings\nfrom rooms in a house)\nAmbient\nAssisted\n\
    living\n(Localization\nand Occupancy de-\ntection)\nDNN [187]\nCloud\nClassification\n\
    and\nRegres-\nsion - Localization estima-\ntion\nHomogeneous\n(Wi-Fi\nsignal\n\
    strength and identifiers)\nNB [189]\nClassification - Presence of\npeople or not,\
    \ Regression-\nNumber of occupants\nHeterogeneous\n(Volatile\norganic\ncompounds,\n\
    CO,\nTemperature,\nHumidity)\nDNN [188]\nClassification\n-\nDifferent\nnumber\
    \ of people present\nHeterogeneous (Temperature, Lu-\nminance, Humidity, Pressure,\
    \ CO2,\nMotion, Magnetometer, Gyroscope,\nAccelerometer, Sound, Door and\nwindow\
    \ open/close status)\nEnergy management\n(Automation, Power\nconsumption\nprofil-\n\
    ing)\nSVM [190]\nCloud\nClassification - Intrusion de-\ntection\nHeterogeneous\
    \ (Images + Sound)\nSAE [192]\nRegression - Disaggregation\nof appliance power\
    \ data\nHomogeneous\n(Appliance\npower\nconsumption)\nRNN\n(LSTM)[195]\nRegression\
    \ – Forecasting oc-\ncupant resource usage\nHeterogeneous\n(Appliance\npower\n\
    consumption,\nLuminance,\nVibra-\ntion, Temperature, Humidity, Ac-\ncelerometer\
    \ [fan])\nSAE\nfor\ndisaggre-\ngation\nand\nRNN(LSTM)\nfor forecasting\n[194]\n\
    Classification - Energy dis-\naggregation,\nRegression\n-\nLoad forecasting\n\
    Heterogeneous\n(Temperature,\nLuminance,\nHumidity,\nProximity\nswitches, Ultraviolet\
    \ light sensors,\nPower consumption)\nNB [193]\nClassification\n-\nDetermine\n\
    appliances that are on\nHomogeneous\n(Appliance\npower\nconsumption)\nHowever,\
    \ with the data gathered by various sensors on these machines, it is often\nmore\
    \ beneficial to take an active approach rather than a passive one by using this\n\
    data for predictive maintenance purposes. Predictive maintenance utilizes data\
    \ from\nthe daily operation of machines in an industry to optimize the manufacturing\
    \ op-\neration [218] and is one of the main uses for AI in the industry. In [219,\
    \ 220], the\nauthors suggest a predictive maintenance scheme using SVMs utilizing\
    \ data from ac-\ncelerometers measuring vibration in a crane motor and data from\
    \ various sources in\na semiconductor manufacturing process, respectively, both\
    \ work in a cloud environ-\nment as evidenced from the architecture. Prediction\
    \ of failure can also be a regression\noperation, as was demonstrated by [221]\
    \ who use RNNs to predict future values of\na physical parameters of a pump using\
    \ a number of heterogeneous sensors used to\nmonitor it. As with the other two\
    \ systems, this system also had a cloud architecture.\nThe authors in [170] also\
    \ present a regression based health prognosis system for the\nindustry using a\
    \ CNN on machine data (Images, stress, temperature, vibration, po-\n42\nsition\
    \ and electromagnetic signal measurements). The use of IoT based AI in Smart\n\
    Industry has been presented in Table 12.\n3.7\nSmart Infrastructure\nAn application\
    \ within smart infrastructures also involves monitoring of civil structures\n\
    for structural health. The authors in [222] take a clustering approach to perform\n\
    health monitoring of a bridge using vibration data in a cloud setting.\nThey use\n\
    clustering to determine clusters of abnormal behavior in accelerometer measurements\n\
    from a bridge. In [223, 224, 225], accelerometer signals have been used where\
    \ as [226]\nhave used piezo electric transducers for performing structural health\
    \ monitoring of\nbridges formulated as a classification problem between different\
    \ damaged states of\na bridge. The prime sensing modality for monitoring has been\
    \ measuring vibration\nusing accelerometers, however, other sensors such as fiber\
    \ optic gratings can also be\nused to measure stress.\nThe second avenue for AI\
    \ applications in IoT for smart infrastructure is the use\nof IoT devices for\
    \ building environment control and energy management as well com-\nfort aware\
    \ control. This involves the prediction of building energy usage based on\nenvironmental\
    \ data (such as temperature, humidity) and electrical power data. The\nauthors\
    \ in [227] and [228] use electric power data and heat flow information in a\n\
    building to predict the energy requirements in the future so as to better manage\
    \ en-\nergy consumption. Ambience control of a museum has been performed in [229]\
    \ where\nthe authors use deep learning algorithms to predict the CO2 and humidity\
    \ levels\nfor the care of exhibits. Comfort aware energy management has been performed\
    \ in\n[230] where the authors use a CNN to regulate thermal comfort in a building\
    \ using\nvarious physical quantities. It can be noted that all of these mentioned\
    \ systems have\nbeen deployed in the cloud, this is due to the nature of the application.\
    \ However,\nthere have been efforts for developing fog/edge systems for smart\
    \ infrastructure. The\nauthors in [231] describe a framework for deploying edge\
    \ and fog computing services\nin smart buildings and demonstrate their systems\
    \ effectiveness for the case of energy\nmanagement. Table 13 summarizes the use\
    \ of IoT based AI in Smart Infrastructure.\n3.8\nSmart Transport\nMajor smart\
    \ transportation applications involve smart parking and transportation\nmanagement.\
    \ Smart parking aims to solve the problem of helping users finding park-\ning\
    \ spots in order to save time as well as reduce gas emissions and is therefore\
    \ a much-\nresearched topic for AI deployment towards smart transportation. Solutions\
    \ to this\nproblem have been formulated both as a regression problem as well as\
    \ a classification\none, both utilizing imaging and/or other occupancy sensing\
    \ modalities. Regression\nsolutions [232, 233, 234] are typically used to predict\
    \ a parking lots occupancy levels\nin the future whereas classification systems\
    \ [235, 236, 237] involve guiding drivers ac-\ncording to the shortest distance\
    \ as well as used for user localization purposes within\nsuch lots. In addition\
    \ to cloud based approaches, edge computing systems for smart\nparking have also\
    \ been devised as suggested in [238, 239] who deploy CNNs on edge\n43\nTable 12.\
    \ AI use for Smart Industry\nApplication\nNetwork\nSystem\nAr-\nchitecture\nTask\n\
    Data type\nFault\nand\nanomaly\ndetection\nDNN [203]\nCloud\nClassification -\
    \ Different classes of abnor-\nmality labels\nHeterogeneous (Mul-\ntiple sensor\
    \ and con-\ntrols [button states\netc] information)\nDNN [202]\nClassification\
    \ - Different damage stages of\na 3D printer\nHeterogeneous\n(Accelerometer, Gy-\n\
    roscope)\nRFC[199]\nClassification - Normal and abnormal op-\neration in wind\
    \ turbines\nHomogeneous\n(Ac-\ncelerometer)\nSVM [197]\nClassification\n-\nDifferent\n\
    wind\nturbine\nhealth conditions\nSVM [198]\nClassification - Normal and mixed\
    \ cement\nHomogeneous\n(Im-\nages)\nRFC[200]\nClassification - Different fault\
    \ types in steel\nmanufacturing\nHeterogeneous\n(Various\nsensors,\ndimensional\n\
    mea-\nsurements)\nDNN [201]\nClassification - Normal and arcing\nHomogeneous\n\
    (Cur-\nrent)\nCNN [204]\nClassification - Defected product or not\nHomogeneous\n\
    (Im-\nages)\nCNN [205]\nFog\nClassification - Different types of defects\nHomogeneous\n\
    (Im-\nages)\nCNN [206]\nSVM [207]\nEdge\nClassification - Abnormal and normal\
    \ pres-\nsure\nHomogeneous\n(Wa-\nter pressure)\nCNN\n+\nLSTM [209]\nClassification\
    \ - Abnormal and normal time\npower patterns\nHomogeneous (Elec-\ntrical power)\n\
    RNN (LSTM)\n[208]\nClassification - Faulty and normal state of\na machine\nHomogeneous\n\
    (Ac-\ncelerometer)\nProduction manage-\nment\nSVM [210]\nCloud\nRegression - Prediction\
    \ of the slotted coef-\nficient in a hydraulic press\nHeterogeneous (Var-\nious\n\
    measurements\nfrom\na\nhydraulic\npress)\nConvLSTM +\nSAE [211]\nRegression -\
    \ Forecasting machine speed to\nmake production more efficient\nHomogeneous (Speed\n\
    of machine [rotary])\nDNN [214]\nRegression - Bottle neck prediction in time\n\
    Heterogeneous\n(RFID,\nmovement\nsensors)\nCNN [212]\nClassification - Different\
    \ activities in an as-\nsembling factory\nHeterogeneous\n(IMU, EMG)\nSVM [213]\n\
    Classification - Different activities in a\nmeat processing plant evaluate worker\
    \ per-\nformance\nHeterogeneous\n(Accelerometer, Gy-\nroscope)\nRFC[217]\nClassification\
    \ - Bad or good product qual-\nity\nHeterogeneous (Var-\nious sensors from a\n\
    production floor in a\nfactory)\nCNN [216]\nClassification - Prediction of temperature,\n\
    Carbon content in steel\nHomogeneous (Spec-\ntrogram Images)\nRFC[215]\nFog\n\
    Classification - Determine Room ID, used\nfor system disruption\nHeterogeneous\n\
    (Ac-\ntivity\ndata,\nLoca-\ntion)\nPredictive\nmainte-\nnance\nCNN [170]\nCloud\n\
    Regression - Predict health index for ma-\nchines\nHeterogeneous\n(Im-\nages,\n\
    Temperature,\nVibration,\nPosition,\nElectromagnetic\nsignal measurements,\nStrain\
    \ gauge)\nSVM [219]\nClassification - Abnormal or normal vibra-\ntion data (from\
    \ electric motor in a crane)\nHomogeneous\n(Ac-\ncelerometer)\nRFC+\nSVM\n[220]\n\
    Classification - Failure prediction\nHeterogeneous (Mul-\ntiple\nsensors\nfrom\n\
    SECOM dataset)\nRNN (LSTM)\n[221]\nRegression - Predicting data from sensors\n\
    Heterogeneous\n(Different\nsensors\n[Pressure,\nTempera-\nture, Vibration etc])\n\
    44\nTable 13. AI use for Smart Infrastructure\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nStructural\nhealth\nmonitoring\nK-Means [222]\n\
    Cloud\nClustering – Look for abnor-\nmality of building state\nHomogeneous\n(Ac-\n\
    celerometers)\nK-NN [226]\nClassification\n–\nDifferent\ndamage states\nHomogeneous\
    \ (Piezo\nelectric sensors)\nDNN [223]\nHomogeneous\n(Ac-\ncelerometer)\nCNN +\
    \ RNN (LSTM) [225]\nSVM [224]\nEnergy and Environ-\nment management\nSVM [227]\n\
    Cloud\nRegression\n-\nForecasting\nelectrical power usage\nHeterogeneous\n(Power\
    \ and environ-\nmental data)\nSAE [228]\nRegression -Energy predic-\ntions for\
    \ buildings\nHomogeneous (Heat\nflow data in build-\nings)\nRNN (GRU, LSTM) [229]\n\
    Regression -Prediction of en-\nvironmental variables (CO2,\nHumidity etc)\nHeterogeneous\
    \ (envi-\nronmental data such\nas\nCO2,\nHumidity,\nAir velocity)\nCNN [230]\n\
    Regression - Comfort level\ndevices for occupancy detection and user localization,\
    \ respectively. Another applica-\ntion of AI IoT for smart transportation involves\
    \ determining traffic flow as well as\nprediction of traffic flow for traffic\
    \ light control and other management tasks such as\naccident detection. In this\
    \ regard, video cameras are popular for detection of vehicle\ndensity on roads\
    \ for traffic congestion determination. However, with most cars having\na GPS\
    \ device and the commonality of cellphones with every driver, many approaches\n\
    use the data from the GPS along with weather and generic traffic flow information\n\
    to determine traffic prediction. The nature of traffic flow prediction using sensing\n\
    modalities such as GPS require systems to be operated as cloud-based systems as\n\
    is the case in [240, 241, 242, 243]. Of these, Wangyang et al. [242] and Xiao\
    \ et al.\n[243] use deep learning based sequential modeling approaches to predict\
    \ traffic flow\nahead of time where as Aung & Naing [240] and Yunxiang Liu & Wu\
    \ [241] solve this\nthrough a classification formulation. A traffic management\
    \ system for public buses\nhas been proposed in [33, 244] where GPS data is used\
    \ to predict bus arrival times\nfor public transportation systems. Accident detection\
    \ has been performed using car\nposition and velocity information in a Vehicular\
    \ Adhoc NETworks (VANET) envi-\nronment by the authors of [245]. They do this\
    \ through a cloud based system that\ncan use this information to predict whether\
    \ an accident has occurred or not. Apart\nfrom typical sensing modalities, with\
    \ smart phones and user participation in social\nmedia, smart transportation systems\
    \ are expected to increasingly include more sens-\ning modalities [246] fused\
    \ together for use in decision making for traffic management\npurposes. Mukherji\
    \ et al. [247] use Wi-Fi signals to determine commuter traffic a\nsubway station.\
    \ They do this by using the measured signal strength of the Wi-Fi\nsignals along\
    \ with a Random Forest classifier in a cloud-based setting. Their system\nis able\
    \ to determine if a person is on the train or on the platform which can be used\n\
    to help with planning train times and routes. A summary of IoT based AI for Smart\n\
    Transport has been given in Table 14.\n45\nTable 14. AI use for Smart Transport\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nSmart\nParking\n\
    (Parking\noccupancy\ndetection/Rout-\ning/Location predic-\ntion)\nK-NN [237]\n\
    Cloud\nClassification - Presence of a\nvehicle\nHomogeneous\n(Im-\nages)\nK-Means\
    \ [232]\nRegression - Future occu-\npancy prediction\nHeterogeneous\n(Oc-\ncupancy,\n\
    Location,\nTime)\nRNN (LSTM) [234]\nLR [233]\nHomogeneous (RFID\ndata from cars)\n\
    DNN+ CNN [235]\nClassification - Different po-\nsitions based on beacons in-\n\
    stalled\nHomogeneous (Radio\nfrequency\nsignal\nstrength)\nDT [236]\nClassification\
    \ - Recommen-\ndation of parking lot based\non distance\nHeterogeneous\n(Parking\n\
    informa-\ntion, Time)\nCNN [238]\nEdge\nClassification - Detection of\nempty parking\
    \ space\nHeterogeneous\n(LI-\nDAR, Images)\nCNN [239]\nClassification\n–\nDifferent\n\
    user locations localization\nHomogeneous (Blue-\ntooth received signal\nstrength)\n\
    Transport\nman-\nagement\n(Public\ntransport\nmanage-\nment)\nK-Means [33]\nCloud\n\
    Regression – Transport de-\nlay prediction\nHeterogeneous (GPS,\nTicket\ninformation,\n\
    Time,\nArrival,\nDe-\nparture\ninformation\netc )\nK-Means [244]\nRegression –\
    \ Arrival time\nprediction\nRFC[247]\nClassification\n–\nLocaliza-\ntion, as on\
    \ platform or train\nHomogeneous (Wi-Fi\nsignal parameters)\nTransport\nmanage-\n\
    ment (Traffic flow)\nNB [240]\nCloud\nClassification\n-\nDifferent\ntraffic states\n\
    Homogeneous\n(GPS\ndata, current and his-\ntorical)\nRFC[241]\nHeterogeneous\n\
    (Weather,\nRoad\ndata)\nRNN (LSTM) [243]\nRegression - Traffic flow pre-\ndiction\n\
    Homogeneous (Traf-\nfic flow data[vehicle\nspeed count etc])\nRNN (LSTM) [248]\n\
    SAE + RNN (LSTM) [242]\nTransport\nman-\nagement\n(Traffic\nAccident detection)\n\
    RFC [245]\nClassification - Accident or\nnot\nHomogeneous\n(Ve-\nlocity, Position)\n\
    4\nConclusion\nThis chapter provided a coverage of the usage of AI in terms of\
    \ machine and deep\nlearning for applications within smart cities. For each of\
    \ the applications discussed\nfor the various components, the type of deployment\
    \ based on the technologies and\narchitectures discussed in the previous chapter\
    \ were identified. Figure 7 provides a\nsummary of the AI discussion in this section.\
    \ Moreover, a tabular version is provided\nin Table 15 for this section. It highlights\
    \ the applications in which each AI domain\nfinds use in for smart city components.\n\
    46\nAI for IoT Smart \nCities\nMachine Learning\nDeep Learning\nSupport \nVector\
    \ \nMachines \nDecision \nTrees\nK-Nearest \nNeighbor\nRandom \nForests\nLogistic\
    \ \nRegression\nNaïve Bayes\nK-Means\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Health\nSmart Industry\nSmart Transport\n\
    Smart Agriculture\nSmart Transport\nSmart Agriculture\nSmart Energy\nSmart Health\n\
    Smart Infrastructure\nSmart Transport\nRecurrent Neural \nNetworks (RNN, \nLSTM,\
    \ GRU)\nStacked Auto \nEncoders\nConvolutional \nNeural \nNetworks\nDeep Neural\
    \ \nNetworks\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\nSmart Energy\n\
    Smart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\nSmart Industry\n\
    Smart Infrastructure\nSmart Transport\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Health\nSmart Homes\nSmart Transport\nSmart\
    \ Agriculture\nSmart Energy\nSmart Health\nSmart Transport\nFigure 7. AI for IoT\
    \ Smart Cities.\n47\nTable 15. AI applications for IoT Smart Cities\nSmart\nCity\n\
    Component\nMachine Learning\nDeep Learning\nObservations\nSmart Agricul-\nture\n\
    - Crop Monitoring /Plant care\n(Irrigation)\n- Crop Monitoring /Plant care\n(Irrigation)\n\
    - Crop Monitoring /Plant care\n(Monitoring and disease detec-\ntion)\n- Crop Monitoring\
    \ /Plant care\n(Monitoring and disease detec-\ntion)\n- Data driven crop care\
    \ and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven crop\
    \ care and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven\
    \ crop care and de-\ncision making (Crop recommen-\ndation)\nSmart\nCity\nServices\n\
    - Air quality\n- Air quality\n- Water quality monitoring\n- Water quality monitoring\n\
    - Waste management\n- Waste management\n- Sewer Overflow Monitoring\n- Urban noise\
    \ monitoring\nSmart Energy\n-\nEnergy/Load\nconsumption\nforecasting\n-\nEnergy/Load\n\
    consumption\nforecasting\n- Smart Grid line event classifi-\ncation\n- Electricity\
    \ theft detection\nSmart Health\n- Human activity recognition/-\nFall detection\n\
    - Human activity recognition/-\nFall detection\n- Patient Health Monitoring\n\
    - Patient Health Monitoring\n- Disease diagnosis\n- Disease diagnosis\n- Parkinson\
    \ detection/Seizure\nmonitoring\n- Parkinson detection/Seizure\nmonitoring\nSmart\
    \ Homes\n- Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n\
    - Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n- Ambient\
    \ Assisted living (Lo-\ncalization and Occupancy de-\ntection)\n- Ambient Assisted\
    \ living (Lo-\ncalization and Occupancy de-\ntection)\n-\nEnergy\nmanagement\n\
    (Au-\ntomation, Power consumption\nprofiling)\n-\nEnergy\nmanagement\n(Au-\ntomation,\
    \ Power consumption\nprofiling)\nSmart\nIndus-\ntry\n- Fault and anomaly detection\n\
    - Fault and anomaly detection\n- Production management\n- Production management\n\
    Smart\nInfras-\ntructure\n- Structural health monitoring\n- Structural health\
    \ monitoring\n- Energy and Environment man-\nagement\n- Energy and Environment\
    \ man-\nagement\nSmart\nTrans-\nport\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Transport management (Pub-\nlic transport management)\n- Transport\
    \ management (Traf-\nfic flow)\n- Transport management (Traf-\nfic flow)\n- Transport\
    \ management (Traf-\nfic Accident detection)\nFor\napplications\nsuch\nas\nSmart\n\
    Agriculture,\nSmart\nEnergy,\nSmart\nHealth,\nSmart Industry and Smart\nTransport,\n\
    Deep\nLearn-\ning\nas\nwell\nas\nMachine\nLearning\nalgorithms\nhave\nbeen deployed\
    \ in Edge/Fog\nconfigurations.\nThe most popular machine\nlearning algorithms\
    \ were the\nSVM and RFC.\nThe\nmost\npopular\nDeep\nLearning\nalgorithms\nwere\n\
    RNNs and CNNs.\n48\nCHAPTER IV\nOPTIMIZATION IN IOT SMART CITIES\n1\nIntroduction\n\
    This chapter presents a coverage of combinatorial optimization in IoT based smart\n\
    cities by deliberating on the most popular applications of optimization algorithms\n\
    and providing an insight to how those problems are formulated and worked upon.\
    \ It\nprovides a mapped overview of the optimization landscape in the smart city\
    \ domain\nwhile considering the IoT. Through this mapping, the common optimization\
    \ problems\nacross the various components of the IoT enabled smart city have been\
    \ identified. For\neach problem discussed, the objective function used, the nature\
    \ of the objective as\nwell as the constraints considered have also been elaborated\
    \ on.\n2\nOptimization and Heuristics in IoT Smart Cities\nAs has been observed\
    \ by [249], combinatorial optimization problems in the real-world\nare known to\
    \ be difficult to formulate and generally are hard to solve. Moreover,\nchoosing\
    \ the right algorithm is also a tedious task as each comes with a different\n\
    set of characterizations. This is very applicable to the IoT bases smart city\
    \ where\napplications in each component caters to a different environment and\
    \ aspect of the\ncity’s operation and therefore requires intricate design of the\
    \ problem. This chapter\ntakes guidance from the work of [249]. They note that\
    \ the most popular algorithms for\nuse in combinatorial optimization problems\
    \ are the Ant Colony Optimization (ACO),\nGenetic Algorithm (GA), Particle Swarm\
    \ Optimization (PSO), Differential Evolution\n(DE) and Artificial Bee Colony (ABC).\
    \ Moreover, following from their discussion, six\nfactors are considered for each\
    \ application identified. These are:\n1. The type of application: This refers\
    \ to the problem being optimized within the\nsmart city domain.\n2. Data Setup:\
    \ For each application, we mention the data setup used. While doing\nso, we aim\
    \ to capture the various ways in which researchers have sourced data\nfor their\
    \ proposed method.\n3. Single-Parallel problems: Another thing to note in smart\
    \ city optimization\nproblems is whether a problem has been considered as a single\
    \ problem or\nmultiple sub-problems/parallel.\n4. Objective direction, function\
    \ and number of objectives: Maximization or mini-\nmization, lowest fitness function\
    \ value desirable or higher fitness function value\n49\nis desirable.\nSince we\
    \ list the objectives, we also covere the number of ob-\njectives inherently.\
    \ Single objective, where a single fitness is optimized for its\nbest value or\
    \ multi-objective where multiple objective functions need to be con-\nsidered\
    \ at the same time. The latter is a complex process as some objectives\nmay have\
    \ conflicts and thus requires the need to perform trade-offs with what’s\nacceptable.\n\
    5. Constraints: Constraints are a set of restrictions or prerequisites that may\n\
    sometimes be necessary to determine if a solution is considered valid or not.\n\
    Soft constraints are desirable but not necessary whereas hard constraints are\n\
    mandatory to be met. Constraints are put on the fitness function according to\n\
    application being considered. Covering this aspect is particularly important as\n\
    constraints are determined by the application being worked on.\n3\nMeheuristic\
    \ Algorithms\nMetaheuristic algorithms are widely used to solve combinatorial\
    \ optimziation prob-\nlems in the real-world [249]. The aim of these algorithms\
    \ is to determine the minima\nor maxima of an objective function which translates\
    \ an optimization objective in to\none or more mathematical equations. Five algorithms\
    \ have been considered in this\nchapter, these are the Ant Colony Algorithm, Genetic\
    \ Algorithm, Particle Swarm Op-\ntimization Algorithm, Differential Evolution\
    \ and Artificial Bee Colony. As mentioned\nearlier, these have been chosen as\
    \ these were the most commonly used optimzation\nalgorithms identified by [249].\
    \ In this section, we provide a brief intuitive description\nfor each of them.\n\
    3.1\nAnt Colony Optimization\nAnt colony optimization is derived from the behavior\
    \ of ants searching for food\n[250]. It was observed that during this process,\
    \ each ant deposits a chemical called\npheromone on the path which it takes towards\
    \ the food. The more the ants take a\ngiven path, the more the pheromone is deposited\
    \ on it. Subsequent ants that want\nto go towards the food use the amount of pheromone\
    \ on a given path or sub-path\nto decide which path to take so as to determine\
    \ the optimal route to the food. In\nthe artificial ant colony optimization algorithm,\
    \ the points on the path that form the\nsub-paths are encoded on a graph where\
    \ each ant can only visit a given vertex (travel\non the same sub-path) once.\
    \ Each iteration starts with a number of artificial ants,\nan ant would choose\
    \ the next vertex to visit based on the level of pheromone on the\npossible sub-paths\
    \ available to it as well as whether that path has been used before.\nAt the end\
    \ of each iteration, the pheromone levels are updated so as to prioritize the\n\
    use of the most used path for ants in the next iteration.\n3.2\nGenetic Algorithm\n\
    A genetic algorithm [251] is based on evolutionary science. The idea behind the\
    \ ge-\nnetic algorithm is that starting from a given population set of organisms,\
    \ subsequent\n50\nreproduction will result in fitter organisms being produced\
    \ given that the organisms\nchosen for reproduction have some level of fitness.\
    \ To solve an optimization prob-\nlem, a genetic algorithm begins with a given\
    \ population size of strings also called\na chromosome. Each ‘chromosome’ consists\
    \ of a ‘gene’ which may represent points\nin the population. The sequence in which\
    \ the genes are present would represent a\nsolution to the problem. For e.g. for\
    \ a route scheduling problem, this may be the\ncoordinates of the stops. The ‘goodness’\
    \ of a chromosome is determined by a fitness\nfunction that quantifies how appropriate\
    \ a given chromosome is as a solution for the\nproblem. Choosing the right fitness\
    \ function is an important consideration in genetic\nalgorithms as it needs to\
    \ gauge the kind of optimization that is to be performed.\nThe optimization process\
    \ starts with an initial population of a given size. Once a fit-\nness function\
    \ has been defined, in each iteration, two or more chromosomes (parents)\nare\
    \ taken at random from the population and one or more offsprings are generated.\n\
    The random selection takes the selected parents fitness function value in to account,\n\
    however, its necessary that not all parents chosen are the fittest of the population\
    \ as\notherwise, diversity will be compromised, and the algorithm may get stuck\
    \ in a local\nminimum. The method by which these offspring are generated is called\
    \ the Crossover\nfunction and the number of parents mated to form offsprings from\
    \ them depends\non the crossover rate. The Crossover function defines the way\
    \ the genes within the\nchromosomes are exchanged. Usually, the crossover rate\
    \ has a high value. Moreover,\ndepending on some mutation rate, a given fraction\
    \ of all offsprings are mutated. Mu-\ntation depends on the mutation function\
    \ used and involves members of the offspring\nbeing swapped in some manner. When\
    \ one iteration of the offspring creation from\nthe parents in the entire population\
    \ is completed, the offsprings replace members of\nthe original population (typically\
    \ the weakest) and one generation of the GA is said\nto be completed. In order\
    \ to converge to a sufficiently good result, GA’s need to run\nfor many generations.\n\
    3.3\nParticle Swarm Optimization\nParticle Swarm Optimization is modeled on the\
    \ social behavior of animals rather than\nthe evolutionary biological behavior\
    \ on which Genetic Algorithms are based. PSO\n[252] is particularly based on the\
    \ behavior of a flock of birds searching for food. Each\nbird in the flock searches\
    \ for food and can communicate with other birds in the flock\nas soon as it finds\
    \ food or a good direction for it. Therefore, each bird has two food\n‘directions’\
    \ that it needs to consider, first is on an individual level which is called\n\
    the personal best and the second is on the flock level which is the global best.\
    \ Using\nthese two values the bird will proceed towards that path and will inform\
    \ other birds\nin the flock too. The idea here is that after enough time and with\
    \ all the individuals\nworking together, the swarm will find the place with the\
    \ highest concentration of\nfood. In terms of using PSO for optimization tasks,\
    \ individual birds are equivalent\nto a solution as in a GA and each is considered\
    \ as a point or a particle, collectively\nthey make up the swarm. This swarm population\
    \ may be initialized randomly or\nbased on some domain knowledge about the problem.\
    \ The highest concentration of\nfood represents the optimal solution for the whole\
    \ swarm where as a good direction\n51\nrepresents the local optimal solution for\
    \ each case. The aim here, like birds in a flock\nis to determine the global optimal\
    \ solution using information from each individual\nparticle. Each particle has\
    \ three aspects to it, its position, its velocity and a value of\nits current\
    \ position’s ’goodness’. This ’goodness’ as in the GA is defined by a fitness\n\
    function. Like birds, each particle has a personal best fitness value and is also\
    \ aware\nof the global best fitness value. For any particle, the new direction\
    \ of movement is\ndecided by a combination of the personal best and the global\
    \ best as well as the\nparticle’s intention to maintain its current movement.\
    \ Furthermore, several different\ntopologies can be utilized, and a neighborhood\
    \ can also be set for each particle to\nconvey positions when limiting the global\
    \ best parameter to the local best scheme\nrather than the whole swarm. The algorithm\
    \ may be stopped till the best solution is\nreached or no more improvement is\
    \ observed.\n3.4\nDifferential Evolution\nDifferential evolution [253] is a stochastic\
    \ evolutionary algorithm which is used for\noptimization problems for continuous\
    \ functions. The DE algorithm does not expect\ngradient information and thus it\
    \ doesn’t need to be differentiable. Like other evolu-\ntionary algorithms, a\
    \ solution is searched for in the design space by maintaining a\nset of individual\
    \ candidate solutions. In each iteration, the solutions with the best\nfitness\
    \ are combined together and retained for the next iteration. The aim is to im-\n\
    prove upon the fitness value and this process is repeated until a pre-decided\
    \ condition\nfor termination of this process is satisfied. Differential Evolution\
    \ is very similar to\nGenetic Algorithms in that both are evolutionary in nature,\
    \ however, the difference\nis that the DE uses real numbers in the chromosome\
    \ and also that the mutation oper-\nation consists of the difference between two\
    \ or more chromosomes of the population\nwith the possible addition of some type\
    \ of noise to create a new individual. Like\nGA, DE also suffer from getting stuck\
    \ in local minima. The DE algorithm also has\nthree control parameters, the population\
    \ size, the mutation factor and the crossover\nprobability.\n3.5\nArtificial Bee\
    \ Colony\nArticle Bee Colony [254] is a swarm intelligence algorithm based on\
    \ the behavior of\nbees. Within bees, there are different social classes who work\
    \ together to complete\ntasks such as harvesting pollen and nesting through the\
    \ use of smell, ’swing dance’\nand other methods. Bee colonies consist of three\
    \ types of bees, queen, male and\nthe worker bees which work on activities such\
    \ as searching for food, gathering and\nstorage of honey.\nAfter gathering honey,\
    \ the worker bee comes to the nest and\ninforms other bees about the location\
    \ of the honey source site through a dance. The\nABC algorithm simulates the behavior\
    \ of bees by considering three elements, the\nfood source, employed bees and unemployed\
    \ bees. The food source is represented as\nrevenue considering its distance and\
    \ quality, the higher the revenue, the better is the\nvalue. In computational\
    \ optimization terms, the food source is a potential solution\nto the objective\
    \ formulation of the considered problem and the quality or value of\n52\nthe food\
    \ source represents the fitness value of that particular solution. At the start,\n\
    all bees are used as scouts, searching for food sources. When a food source is\
    \ found,\nfor a high value food source, bees who find those food sources become\
    \ hire bees and\ncollect the food source. If the food source is of intermediate\
    \ value, the bees become\nfollow bees and if the food source value becomes low,\
    \ the bees become scout bees to\nlook for better food sources. Hire bees, the\
    \ bees with a food source location having\na high value, lead the follow bees\
    \ to develop solutions in their neighborhood in order\nto come up with more solutions.\
    \ A subset of the highest-ranking solutions are then\nconsidered before this process\
    \ is repeated again until the end conditions are met.\n4\nOptimization Applications\
    \ in Smart Cities\nSeveral tasks in smart city operations require the use of metheuristics\
    \ to be solved,\nthe aim being to optimize the resources present in the city.\
    \ This section presents\nthe different uses of optimization techniques for IoT\
    \ enabled Smart Cities.\nThis\ntask is performed for all eight components, Smart\
    \ Agriculture, Smart City Services,\nSmart Grid, Smart Health, Smart Homes, Smart\
    \ Homes, Smart Industry, Smart\nInfrastructure and Smart Transportation.\n4.1\n\
    Smart Agriculture\nSmart Agriculture involves the use of digital technologies\
    \ such as sensors and in-\ntelligent systems to improve agricultural productivity.\
    \ The sustenance of agriculture\ndepends on water, and it is central to the agricultural\
    \ production of food items around\nthe world. However, water is becoming an ever-scarce\
    \ resource due to the increasing\ndemand caused by human population growth, increased\
    \ economic activity by indus-\ntries and also due to climate change. It therefore\
    \ is necessary to utilize this precious\nresource wisely so as make use of it\
    \ in the best manner possible.\nOne approach\ntowards ensuring that water and\
    \ land is used appropriately is by introducing irriga-\ntion management schemes\
    \ such as irrigation scheduling and water allocation in the\nfarming process.\
    \ A summary of the optimization problems, objectives, constraints in\nsmart agriculture\
    \ and the use of IoT is illustrated in Figure 8.\nMeasurements in water irrigation\
    \ systems are typically performed by sensors\nplaced at different points in the\
    \ canals and rivers to determine water flow, volume and\nspeed. This information\
    \ regarding water movement can be combined with economic\ninformation such as\
    \ yeild, crop profit to optimize water distribution. Irrigation man-\nagement\
    \ through scheduling has been performed by the authors of [255, 256, 257, 258]\n\
    to maximize net return on crop profits, water use efficiency and to minimize leakage\n\
    losses. In [259] Fuqiang et al. aim to optimize water delivery through canals\
    \ while\nalso performing scheduling. They do this using a genetic algorithm and\
    \ work with\ntwo objectives, minimizing the difference between the time of water\
    \ delivery and wa-\nter demand and the fluctuation in water discharge of the main\
    \ canal. Their model\nwas applied to a district in China.\nThe authors in [260,\
    \ 261] work on optimal allocation of water. Of these, Ikudayisi\net al. [260]\
    \ use the differential evolution algorithm to minimize the water allocated to\n\
    53\nSmart Agriculture \nIrrigaƟon\nWater\nScheduling \nIrrigaƟon\nWater\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon\nand Water\nControl \nObjectives: Minimize\nwater\nusage/deviation/leakage\n\
    Maximize benefits\nConstraints: Land area\navailable, water limits\nObjectives:Minimize\n\
    leakage \nMaximize net return,\nwater usage \nConstraints: Water\nlimits, capacity\
    \ of\nirrigation system, flow\ncapacity, discharge\nlimits, time limits\nObjectives:\
    \ Minimize\nenergy cost \nConstraints: Limited\nenergy available, water\nvolume\
    \ minimums\nIoT Usage: Sensors provide information about water flow, amount of\
    \ water and more\nConstraints: Water\nlimits, capacity of\nirrigation system,\
    \ flow\ncapacity, discharge\nlimits, time limits\nFigure 8. Optimization applications\
    \ in Smart Agriculture.\nfarms in South Africa while maximizing the benefits in\
    \ terms of job creation, ensuring\nfood security and the yield of crops.\nWu et\
    \ al.\n[261] approach this as problem\nof reducing deviation between different\
    \ channels and minimizing water seepage to\nensure a more consistent supply to\
    \ all water channels. An approach presented by\nOcampo et al. [262] tackles this\
    \ problem not as a task of allocation directly but\nconsiders the scenario of\
    \ providing sufficient water to a smart farm while controlling\ntwo water pumps.\
    \ The objective function is formulated to minimize the energy cost\nof the water\
    \ pumps while maintaining sufficient supply of water to the plants on the\nfarms.\
    \ Constraints considered for such applications include the limited quantities\
    \ of\nwater being worked with, the time for which the water was available and\
    \ the area\nof land which was to be considered. Another allocation based scheme\
    \ is presented\nby Zhuo et al. [263] who use a genetic algorithm for an irrigation\
    \ system based on\na reservoir and two pumping stations. Their aim is to ensure\
    \ that there is no water\n54\nshortage. The objective function used by them is\
    \ the minimization of the annual sum\nof squared water shortage. Other work in\
    \ [264] also minimizes use of groundwater\nand increase benefit to the regional\
    \ water supply through reduction of water deficits\nin the Dujiangyan region of\
    \ China.\nA precision agriculture scheme is presented by Roy et al.\n[265] who\
    \ combine\nan IoT system consisting of sensors on plants using a GA based rainfall\
    \ predictor.\nCombining predicted rainfall information along with the sensed moisture\
    \ level in\nthe crops, they control plant watering. Lin et al. [266] propose a\
    \ framework for the\nmanagement of fertigation and irrigation in precision agriculture.\
    \ They perform short\nterm management and long-term management. Soil and crop\
    \ growth data is gathered\nfrom IoT based sensor systems. Long term planning refers\
    \ to the allocation of water\nand fertilizer resources to crops in terms of quantity\
    \ so as to meet demands whereas\nshort term refers to when and how to use them.\
    \ They use a genetic algorithm for long\nterm planning considering the allocation\
    \ of water and fertilizer for crops to maintain\npH value and electrical conductivity.\
    \ This information has been presented in Table\n16 while a summary of the identified\
    \ data sources used by each considered work has\nbeen provided in Table 17.\n\
    4.2\nSmart City Services\nAccording to the world bank, the amount of annual solid\
    \ waste generated is set to be\n3.40 billion tons [268] in 2050. Managing this\
    \ waste and its collection in an efficient\nmanner is imperative for health and\
    \ climate reaons. The most common application\ntowards smart city services optimization\
    \ is waste management as illustrated in Figure\n9 which summarizes the objectives,\
    \ constraints and the use of IoT.\nSmart waste collection systems include sensors\
    \ attached to trash cans which can\ninform the municipal authority about the status\
    \ of the garbage amount present in\nthem.\nOnce the trash cans are close to being\
    \ full, it is the responsibility of the\nmunicipal corporation to perform garbage\
    \ collection in an efficient manner. In this\nrespect, data provided by the sensors\
    \ on garbage cans can be used to determine\nan optimized route for garbage collection\
    \ to construct the Vehicle Routing Problem\n(VRP) in the Smart City Services domain.\
    \ As such, this problem has been performed\nkeeping in view various goals. The\
    \ minimization of the route distance taken by a\ngarbage tuck has been performed\
    \ by the authors in [269, 270, 271, 272, 273]. The\naim in this case is to determine\
    \ a route for garbage collection vehicles that minimizes\nthe total distance traveled\
    \ by the them. Zhang et al. [273] consider multi-vehicle\nallocation while considering\
    \ the single objective of minimizing route distance. Wei\net al. [274] use the\
    \ Artificial Bee Colony algorithm to determine garbage collection\nroutes resulting\
    \ in the minimum emission of CO2. Another optimization objective\nin route optimization\
    \ for waste management has been the minimization of the total\ntravel time, such\
    \ a target is described by the authors of [275, 276, 277, 278] who aim\nto reduce\
    \ travel time while considering emptying of waste bins. Another optimization\n\
    consideration in route optimization for waste management is to reduce cost. This\
    \ has\nbeen carried out by Tirkolaee et al. [279] who formulate a multi-objective\
    \ function of\ntravel cost and total useage cost of vehicles and determine the\
    \ route with the minimum\n55\nTable 16. Optimization in Smart Agriculture\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nIrrigation Management\
    \ (Ir-\nrigation Water Scheduling)\nACO [255]\nSingle\nMaximizing net return on\
    \ crop\nConstraint on water avail-\nability\nPSO [256]\nCapacity of irrigation\
    \ sys-\ntem\nWater\nsavings\nshould\nbe\nmore than deficiency\nGA [259]\nSingle\n\
    Minimize water fluctuations and\ndifference between the time of wa-\nter demand\
    \ and need\nFinite canal capacity\nMaximum rotation time lim-\nitation\nGA [257]\n\
    Parallel\nMaximize yield, global and local\nwater use efficiencies\nConstraint\
    \ on irrigation in-\nterval\nMinimum and max irriga-\ntion amount\nGA [258]\n\
    Parallel\nMinimize leakage loss both individ-\nually and overall\nFlow\ncapacity\n\
    limited\nby\nmaximum\nIrrigation time constraint\nNet discharge constraint\nTotal\
    \ flow rate should be\nsum of individual flowrates\nIrrigation Management (Ir-\n\
    rigation Water Allocation)\nDE [260]\nSingle\nMinimize irrigation water allocated\n\
    and maximizes net benefits\nConstraint on the land area\navailable\nMinimum and\
    \ max planting\nareas for crops\nLimited water available for\nthe farm\nPSO [261]\n\
    Parallel\nMinimize deviation in the different\nchannels, water seepage in the\
    \ dis-\ntribution channels\nTime\nWater quantity constraints\nGA [264]\nParallel\n\
    Maximize benefit to regional wa-\nter supply, minimize water deficit\ngroundwater\
    \ exploitation in regions\nWater supply quantity con-\nstraints for annual water,\n\
    ground water\nIrrigation Management (En-\nergy Optimization)\nGA [262]\nParallel\n\
    Minimize energy cost while main-\ntaining water supply for plants\nLimited energy\
    \ available\nWater volume maintained in\nstorage tank, fish pond\nGA [263]\nSingle\n\
    Minimize sum of squared water\nshortage\nAnnual water availability in\nreservoir\n\
    Water rights of replenish-\nment pumping station\nWater rights of the irrigation\n\
    pumping station\nOperational rule constraints\nIrrigation\nManagement\n(Water\
    \ Control)\nGA [267]\nSingle\nMaximize yield\nMinimum\nand\nmaximum\nwater depth\
    \ limits\nMin and max soil moisture\nIrrigation\nand\nFertilizer\nManagement\n\
    GA [266]\nSingle\nMaximize economic profits and en-\nvironmental benefits\nLimits\
    \ on the demand of wa-\nter for each crop\nTotal water does not exceed\navailable\n\
    Total fertilizer doesn’t ex-\nceed availability\nWater allocation should be\n\
    positive\nTable 17. Data setup used for Smart Agriculture Optimization\nData Type\n\
    Papers\nSelf-collected / Presented\n[256, 258, 259, 262, 267, 266]\nGovernment\
    \ and private agencies\n[260, 256, 255, 267, 259, 257, 258, 261]\n56\nSmart City\
    \ Services \nWaste Management\nRoute OpƟmizaƟon \nObjectives: Minimize\ndistance,\
    \ CO2\nemissions, travel time\nConstraints: Road\nnetwork fixed, location\nserved\
    \ by one truck,\ncontinuous routes,\ndeadline to finish jobs,\ncapacity limited\n\
    IoT usage: Sensors for\ntrash fill level and\nweight detection\nFigure 9. Optimization\
    \ applications in Smart City Services.\ncosts using the ACO. Constraints considered\
    \ in such applications are related to a\nfixed road network which depends on the\
    \ locality for which the optimization is being\nperformed, the continuity in the\
    \ determined route as well as fulfillment of capacity\nrestrictions. The useage\
    \ of optimization algorithms in smart city services is provided\nin Table 18 and\
    \ the data sources used are provided in Table 19.\n4.3\nSmart Grid\nThe electricity\
    \ grid has been a major beneficiary of smart city technologies. The in-\ncreasing\
    \ demand for energy by consumers along with the environmental impact that\nfossil\
    \ fuel-based energy production has on the planet has forced utility companies\n\
    to introduce renewable energy sources within the electricity distribution system\
    \ and\nmake their energy production and distribution systems more efficient through\
    \ plan-\nning and design improvements. Optimization algorithms find applications\
    \ within the\nsmart grid domain in terms of power management and planning.\nA\
    \ summary of\n57\nTable 18. Optimization in Smart City Services\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nWaste\nManagement\n\
    Route Optimization\nACO [269]\nSingle\nMinimization of distance\nRoad Network\
    \ is fixed\nGA [270, 271,\n273]\nEach dumpster served by\none truck only\nTrucks\
    \ leave depot to go to\nlandfill\nPSO [272]\nRoutes are continuous\nABC [274]\n\
    Single\nMinimize Co2 emissions\nCapacity constraint for bins\nas well as trucks\n\
    ACO [275]\nSingle\nMinimize total travel time\nTrucks leave a depot empty\nGA\
    \ [276, 277]\nBins needs to be fully emp-\ntied by trucks\nVehicle start depot\
    \ and end\nat landfill\nPSO [278]\nDemand should not exceed\ncapacity\nACO [279]\n\
    Single\nMinimize travel cost and to-\ntal usage cost of vehicles\nSubtour elimination\n\
    Jobs should finish within a\ngiven deadline\nTable 19. Data setup used for Smart\
    \ City Services Optimization\nData Type\nPapers\nSelf-collected / Presented/ Generated\n\
    [269, 270, 271, 275, 279, 277, 273]\nGovernment Agency\n[276, 278]\nDataset\n\
    Capacitated VRP datasets [280] by [272], Capacitated VRP Instances [281] by [274]\n\
    the applications, objectives, constraints and IoT usage for optimization algorithms\
    \ in\nSmart Grids has been illustrated in Figure 10.\nAn increasing population\
    \ has led to an increasing demand for electricity around\nthe world. This burdening\
    \ of the electricity grid has led to measures for increasing\nthe performance\
    \ of the electricity distribution system by reducing loss, prevent over-\nload\
    \ and reduce cost. The authors in [282, 283, 284, 285, 286, 287, 288] work on\n\
    the improvement of grid performance by minimizing cost and reducing power losses.\n\
    Power loss minimization is specifically targeted by [282, 286, 284]. Of these,\
    \ Ettappan\net al. [282] aim for the reduction of power losses, voltage deviation\
    \ and increasing\nvoltage stability. Atteya et al. [286] also address this problem\
    \ by considering net-\nwork redistribution to minimize losses in the grid whereas\
    \ Sakr et al. [284] focuses\non minimizing transfer losses in the smart grid to\
    \ accomplish this task. Nguyen and\nMohammadi [285] attempt the reduction of power\
    \ losses and line congestion by deter-\nmining the location of thyristor controlled\
    \ series compensator devices. The problem\nis formulated as a multi-objective\
    \ problem aiming to minimize loadability of the lines,\nactive power loss and\
    \ the reactance of the transmission line. A cost reduction-based\napproach to\
    \ improve grid performance is followed by Das et al. [283] who aim to\nreduce\
    \ cost of maintaining electrical stability and also the cost of management of\
    \ the\ndistribution network. They do this by considering changing the location\
    \ of energy\nstorage systems within the grid. Kanwar et al. [287] take maximizing\
    \ profits and\n58\nSmart Grid \nPower Management \nImproved Grid\nPerformance\
    \ \nDistributed\nEnergy\nResource\nManagement \nPlanning \nExpansion of\nDistribuƟon\n\
    Network \nObjectives: Minimize power\nloss, voltage deviation,\nreactance, average\n\
    loadability, cost \nMaximize profit  \nConstraints: Power flow\nrestrictions,\
    \ location\nlimitations, operational\nlimitations. capacity limits,\nload balances,\
    \ power limits,\ntopology restrictions\nObjectives: Minimize cost,\nemissions\
    \ \nConstraints: Power limits\n(generation and\ndistribution), battery\ncharge/discharge\
    \ limits,\nload schedule restrictions,\ncapacity limits\nObjectives: Minimize\n\
    expansion cost, number of\nunits, power losses\nConstraints: Power flow\nrestrictions,\
    \ generation\nlimits, infrastructure limits\nIoT Usage: Loads and other devices\
    \ in the power network can be swithced on and off as needed. Phase\nmeasurement\
    \ units for e.g., provide capability to obtain measurements in the smart grid\n\
    Figure 10. Optimization applications in Smart Grid.\nminimization of power losses\
    \ while considering sizing of a distributed energy resource\ngeneration system.\n\
    Distributed energy resource (DER) management is another area where optimiza-\n\
    tion algorithms are used in Smart Grids. The management of distributed energy\n\
    sources within smart grids is dependent on the interconnectivity provided by IoT\n\
    in the smart grid system.\nSmart meters within the smart grid provide real-time\n\
    information relating to power consumption which can be used for controlling DER\n\
    electricity. Moreover, IoT devices allow for switching loads and generation sources\
    \ as\nrequired. This assists in creating a virtual power plant to aggregate all\
    \ energy sources\nin a DER scenario. With global warming and a changing climate,\
    \ utilities around\nthe world are increasingly incorporating various renewable\
    \ energy sources within their\ngrid which often times are an economically convenient\
    \ option as well. However, many\n59\nof these sources such as wind and solar (photo\
    \ voltaic [PV]) do not offer a consistent\nsupply of power throughout the day.\
    \ In this regard, systems such as batteries as\nwell as conventional generation\
    \ plants need to be used together along with renewable\nenergy sources. For utility\
    \ companies, it is necessary to optimize power production\nso that the maximum\
    \ amount of energy is utilized from these renewable sources so\nas to reduce cost\
    \ to the user while also maintaining the quality of service. The au-\nthors in\
    \ [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302] provide\n\
    a management scheme for DERs to minimize cost. In this regard, the authors in\n\
    [292, 293, 294, 297, 289, 290, 300, 301, 302] all formulate the problem of distributed\n\
    energy resource management as a single objective problem where the cost incurred\
    \ is\nminimized. On the other hand, the authors in [298, 295, 291] and [299] formulate\
    \ this\nas a multi-objective problem. Azaza and Wallin [299] not only target reduction\
    \ of\nelectricity production cost but also maximize reliability of the system\
    \ while reducing\nthe environmental impact of the distribution system. It is interesting\
    \ to note that the\nimprovement of system reliability is formulated as a minimization\
    \ problem as well.\nSimilarly, Das et, al. [291] consider the reduction of both\
    \ the total cost as well as\nthe environmental cost of the system. Their considered\
    \ scenario also consists of a\nPV, Wind Turbine and battery. The constraints considered\
    \ were constraints regard-\ning power flow, limitations on power and voltage values,\
    \ power balance constraint\nand power generation constraints on the renewable\
    \ energy sources. In [289, 302], a\nDER management system is developed for a microgrid\
    \ which consists of a controllable\ncollection of energy storage and generation\
    \ sources powered by IoT devices.\nPlanning in distribution networks has been\
    \ considered by the work of [303] and\n[304]. Mahdavi et al. [303] work on expanding\
    \ transmission lines utilizing the artificial\nbee colony algorithm to minimize\
    \ cost of network expansion, power losses in load\nand generation. On the other\
    \ hand, Maji and Acharjee [304] aim to determine the\nminimum number of Phase\
    \ Measurement Units (PMUs) to make the distribution\nnetwork observable. The constraints\
    \ used were power flow and balance of power as\nwell as limits on the number of\
    \ transmission lines available. The internet of things also\nfinds usefulness\
    \ in terms of the use of Phase Measurement Units that provide voltage\nand current\
    \ measurement capabilities within smart grids to perform maintenance and\nmonitoring\
    \ operations. A summary of this discussion has been provided in Table 20\nand\
    \ the data setups used by the covered research work is presented in Table 21.\n\
    4.4\nSmart Health\nSmart health refers to the use of technology to provide better\
    \ healthcare to patients.\nThis can be in the form of developing tools for better\
    \ diagnosis of diseases or the use\nof algorithms for better planning and healthcare\
    \ delivery. The deployment of timely\nemergency vehicles to a person in need is\
    \ imperative towards providing healthcare\nservices to people. Two applications\
    \ of optimization problems within Smart Health\nare emergency vehicle routing\
    \ and their allocation and relocation as shown in Figure\n11. It also summarizes\
    \ the objectives uses, constraints considered and role of IoT.\nLate arrival of\
    \ ambulances and other emergency vehicles to people in need may\nresult in irreversible\
    \ damage to life and property. Studies have shown that delayed\n60\nTable 20.\
    \ Optimization in Smart Grid\nApplication\nAlgorithm\nSingle/\nParallel\nproblems\n\
    Objectives\nConstraints\nPower\nManagement\n(Improve Grid Per-\nformance)\nABC\
    \ [282]\nSingle\nMinimize active power loss,\nvolage deviation and voltage\nstability\
    \ index (L-index)\nPower flow constraints\nGA [284]\nRestriction on power source\
    \ instal-\nlations and other components re-\nlated to power structure\nPSO\n[286,\
    \ 288]\nSingle\nMinimize power loss\nGeneration and other component\noperations\
    \ within limits\nGA [285]\nSingle\nMinimize average percent-\nage\nof\nloadability\n\
    of\nthe\nlines, active power loss, re-\nactance of transmission line\nLimitation\
    \ on values of bus voltage\nTransmission line capacity, genera-\ntor active and\
    \ reactive power.\nABC [283]\nSingle\nMinimize cost for maintain-\ning thermal\
    \ and voltage sta-\nbility and lower asset man-\nagement of distribution net-\n\
    works\nActive and reactive power must be\nbalanced\nLimits on voltage and load\
    \ maxi-\nmum\nESS max charging and discharging\nconstraints\nPSO [287]\nParallel\n\
    Maximize annual profit by\nreducing charges for annual\nenergy losses, peak power\n\
    loses etc\nConstraint on the node voltage\n(soft)\nMinimize power loss for the\n\
    network reconfiguration\nPower injected by DER and SG\nwithin limit\nPower generated\
    \ at a given node\nhas a limit\nFor reconfiguration:\nRadial topology,\nNode voltages\
    \ has a max hard con-\nstraint\nPower\nManagement\n(Distributed Energy\nResource\n\
    Manage-\nment)\nABC\n[292, 293, 294]\nSingle\nMinimize total cost\nPower\ngeneration\n\
    by\nrenewables\nwithin limits\nDE [295, 297,\n296]\nBattery charge and discharge\
    \ limits\nand system reliability\nGA [289, 290]\nPower balance constraint (gener-\n\
    ated equal to consumed)\nPSO\n[300, 301, 302]\nSpecific loads are interruptible\n\
    Constraints on the efficiencies of the\nsources\nDE [298]\nSingle\nMinimize cost\
    \ and emission\nABC [305]\nSingle\nMinimize cost and power im-\nported from outside\
    \ micro-\ngrid\nPower flow constraints for the DER\nGA [291]\nSingle\nMinimization\
    \ of cost of en-\nergy and life cycle emissions\n(CO2 and energy stored in\nbatteries\
    \ or converted by re-\nnewable sources during pro-\ncess of satisfying load re-\n\
    quirements)\nConstraints on battery capacity\nSystem reliability constraint\n\
    Energy produced equal or greater\nsthan required\nPSO [299]\nSingle\nMinimize\n\
    reliability\ncost,\ncost of electricity production\nand operation environmen-\n\
    tal impact ()using renewable\nfactor)\nExpansion of distri-\nbution network\n\
    ABC [303]\nSingle\nMinimize cost of network ex-\npansion, active losses and\n\
    loss of load and generation\nPower flow and active power bal-\nanced\nPower generation\
    \ limits\nNumber of transmission line limits\nPSO [304]\nSingle\nMinimize number\
    \ of PMUs\nSG Network should be observable\n61\nTable 21. Data setup used for\
    \ Smart Grid\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n25 Bus\
    \ network s[295, 297, 298, 291, 299, 300, 301, 302] [305]\nGovernment Agency/\
    \ other research work\n[292, 293, 294, 290, 299, 303]\nDataset/ Standard Network\n\
    IEEE 14 Bus [284, 304]\nIEEE 30 Bus [282, 284, 285]\nIEEE 33 Bus [286, 283, 287,\
    \ 296]\nIEEE 37 Bus [289]\nIEEE 57 Bus [282, 284, 304]\nIEEE 69 Bus [287]\n119\
    \ Node system of [306, 288]\nSmart Health \nEmergency\nVehicle\nAllocaƟon and\n\
    RelocaƟon \nEmergency\nVehicle RouƟng \nObjectives: Minimize time,\ncost\nConstraints:\
    \ Traffic balance,\ntraffic flow restrictions,\nvehicle speed and number\nlimits,\
    \ location of\nemergency vehicle\nObjectives: Minimize time,\nvehicle density\
    \ \nConstraints: Road connection\nrestrictions, time limits \nIoT Usage: Real\
    \ time location services, real time traffic\ninformation, vehicle to vehicle and\
    \ vehicle to infrastructure\ncommunication can also provide better navigation\
    \ and monitoring\nservices\nFigure 11. Optimization applications in Smart Health.\n\
    ambulance dispatch increases mortality [307], moreover, economically speaking,\
    \ a\none-minute delay in response time for cardiac patients found that the mortality\
    \ in-\ncreases by 1% and adds annual costs of USD 7 billion in healthcare expenditure\n\
    [308]. Keeping this in mind ambulance deployment and location determination have\n\
    been of considerable interest in the area of optimization for smart health. These\n\
    two problems are specific cases of the Vehicle Routing Problem [309] and Maximum\n\
    coverage problem [310] sometimes called the Ambulance Routing Problem [311] and\n\
    Ambulance Location Problem [312]. The authors in [313] work on the optimal allo-\n\
    62\ncation determination based on fixed sites and a finite number of ambulances\
    \ while\nminimizing lateness of ambulance arrival using the Ant Colony Optimization.\
    \ Later\non, in their work in [314], they do a comparison with using GAs and find\
    \ that GAs\nprovide better performance. Kochetov and Shamray [315] attempt localization\
    \ of\nambulance fleet at base stations with the aim to minimize the average waiting\
    \ time\nfor arrival of ambulances. An interesting approach to this problem is\
    \ presented in\nYan et al. [316] who work on this problem from a scheduling perspective\
    \ where they\ncontrol scheduling of emergency vehicles to reduce the total cost\
    \ in terms of money\nand time using a Genetic Algorithm. Another approach for\
    \ sequencing vehicles to\nensure emergency vehicles reach their destination in\
    \ time is presented by Lu et al.\n[317] who aim to prioritize emergency vehicle\
    \ thoroughfare on traffic intersections.\nThey do this by minimizing the entrance\
    \ time of the vehicle by manipulating vehicle\norder. Constraints used for these\
    \ problems include constraints on the speed of the\nambulances, the flow of vehicles\
    \ on the road, specific road connections present as well\nas time constraints.\
    \ The internet of things serves a pivotal role in enabling the allo-\ncation and\
    \ routing of emergency vehicles. The connectivity provided by IoT through\nvehicle-to-vehicle\
    \ communication as well as vehicle to infrastructure communication\nfacilitates\
    \ providing a real-time indication of the vehicle’s location as well as the con-\n\
    dition of traffic in a given area. This information can then be used to determine\
    \ an\noptimal route for emergency vehicles as well as for their optimal deployment\
    \ to serve\npeople in need. Information about optimization methods for smart health\
    \ has been\npresented in Table 22 and the data setups used in these approaches\
    \ in Table 23.\nTable 22. Optimization in Smart Health\nApplication\nAlgorithm\n\
    Single/\nParallel\nproblems\nObjectives\nConstraints\nEmergency\nVehicle\nAllocation\
    \ and Relo-\ncation\nACO [313]\nSingle\nMinimize lateness\nAmbulance\nfrom\nnearest\n\
    hospital\nis\ndispatched\nGA [314]\nSpeed of ambulance\nTotal number of am-\n\
    bulance limits\nGA [315]\nSingle\nMinimize\naverage\nwaiting\ntime of ambulances\n\
    Balance\nconstraints\non exit and entry vol-\numes\nFlow\nconservation\nconstraints\n\
    GA [316]\nSingle\nMinimize\ntotal\ncost\nin\nmoney and time\nEmergency\nVehicle\n\
    Routing\nPSO [318]\nSingle\nMinimize travel time, road\nlength traveled, density\
    \ of\nvehicles on the road\nRoad connections are\nspecific\nGA [317]\nSingle\n\
    Minimize the entrance time\nof\nemergency\nvehicle\nby\nchanging the order of\
    \ vehi-\ncles going through intersec-\ntions\nConstraint\non\nthe\ndifference\n\
    between\narrival times of cur-\nrent\nand\nprevious\nvehicles and on the\nentrance\
    \ time of the\nvehicle\n63\nTable 23. Data setup used for Smart Health\nData Type\n\
    Papers\nSelf-collected/ Presented/ Generated\n[313, 314, 315, 316, 318, 317]\n\
    Government Agency/ other research work\n[314, 315, 316]\n4.5\nSmart Homes\nHome\
    \ energy management has been the prime application of optimization in smart\n\
    homes, a summary of the objectives, constraints and the use of IoT has been shown\n\
    in Figure 12.\nSmart Homes \nHome Energy Management \nAppliance\nScheduling \n\
    Objectives: Minimize\ncost, time, peak to\naverage power ratio,\ndiscomfort \n\
    Constraints: Capacity\nlimits, flow, one level\nper location\nIoT usage: Sensors\
    \ for providing power consumption data and other environmental\nreadings such\
    \ as temperature etc for comfort determination in homes, smart meters\nprovide\
    \ interconnectivity betwen homes\nFigure 12. Optimization applications in Smart\
    \ Homes.\n64\nHome energy management refers to the development of demand side\
    \ manage-\nment schemes that aim to reduce the electricity cost billed to a customer\
    \ or maintain\ncomfort for the user. One way this is performed is by appropriate\
    \ appliance schedul-\ning. The idea here is to schedule the usage of appliances\
    \ in such a way that the\nmost power-hungry devices are turned on during off peak\
    \ hours when electricity costs\nmight be lower. The combination of the Smart Grid\
    \ and Smart Homes facilitates the\ndevelopment of optimization schemes that not\
    \ only benefit the customer (in terms\nof reduced electricity costs and maintaining\
    \ comfort) but also be useful for the util-\nities in ensuring that load profiles\
    \ (though minimizing the peak to average ratio)\nare more consistent thereby allowing\
    \ better planning of the power generation mix\nused by them. The authors of [319]\
    \ perform appliance scheduling for the purpose of\nminimizing electricity cost\
    \ and the waiting time for appliance usage. Interestingly,\nthey incorporate comfort\
    \ maintenance by adding it as a constraint. A similar ap-\nproach has been followed\
    \ by Bui et al [320] and Makhadmeh et al. [321] who aim to\nminimize the cost\
    \ of electricity usage with a constraint for maintenance of comfort.\nMakhadmeh\
    \ et al. [321] also include the reduction of waiting time rate for appliances\n\
    by the user and the reduction of the peak to average ratio of the power consumed\
    \ as\nconstraints. The authors in [322, 323, 324, 325] perform appliance scheduling\
    \ while\nconsidering electricity cost and peak to average ratio which need to\
    \ be minimized.\nAll of the authors present a multi-objective function for this\
    \ purpose combining the\nobjectives of minimizing the cost and the peak to average\
    \ power ratio. Azimi et al.\n[326] combine the problem of reducing cost and power\
    \ together as a single objective\nby considering the minimization of the ratio\
    \ of operating cost and load factor in a\nbattery supported system. The works\
    \ of [327, 328, 329, 330, 331] also consider user\ncomfort as part of the objective.\
    \ In [327], Essiet and Wang form a multi-objective\nminimization problem of electricity\
    \ cost, peak to average ratio for power and discom-\nfort of users in a smart\
    \ home supported by a renewable energy system consisting of a\nbattery and PV\
    \ system. In Chanra et al. [332], the authors aim to reduce electricity\ncost\
    \ by appliance scheduling in such a manner so as to make as much use of onsite\n\
    energy units as possible so as to reduce usage of utility provided electricity.\
    \ The\nenergy units they consider are a diesel generator, renewables and battery.\
    \ Another\napproach that aims to reduce cost of consumed electricity is presented\
    \ by Faia et\nal. [333] who formulate it as a problem of minimizing the energy\
    \ bill and the cost\nassociated with curtailment of power in a system with a battery\
    \ and a photovoltaic\nsystem. Work in [334, 330, 335, 336] also perform appliance\
    \ scheduling to reduce\ncost of electricity. Appliance scheduling for smart homes\
    \ has also been performed by\nFatima et al. [323] and Abid et al. [322] considering\
    \ a microgrid for homes where\ninstead of optimizing data from single homes, the\
    \ authors used data from connected\nsmart meters to determine an optimized control\
    \ scheme for appliances across the grid.\nThe constraints used for optimization\
    \ in smart homes are on the comfort needing to\nbe maintained, constraints on\
    \ the powerflow, time of operation, the maximum power\nthat is present or used\
    \ and which appliances are switchable appliances. Appliance\nscheduling is based\
    \ on smart meters as well as individual control and monitoring of\nappliances\
    \ using IoT systems. IoT devices enable the microgrid which is used to\ngather\
    \ data as well as control the switching on and off of sources from the houses\n\
    65\nelectricty supply. The information gathered from these IoT units can be processed\n\
    to optimize energy consumption patterns to reduce cost to the customer as well\
    \ as\nincrease comfort. The use of the considered optimization schemes for smart\
    \ homes\nhas been presented in Table 24 with the data setups presented in Table\
    \ 25.\n4.6\nSmart Industry\nOne of the biggest enablers of the Industry 4.0 concept\
    \ has been the use of AI tech-\nniques to improve the efficiency of the manufacturing\
    \ and production process. This\nhas led to the development of cyber physical systems\
    \ aiming to assist in activity recog-\nnition [339], machine health prediction\
    \ [340] and production management in terms of\nbottleneck prediction [341]. Apart\
    \ from conventional AI applications of anomaly de-\ntection, classification and\
    \ regression, computational optimization also finds numerous\napplications as\
    \ it fits well with the objective of efficient and streamlined manufac-\nturing.\
    \ The major applications for the use of computational optimization have been\n\
    in the area of routing and location for logistics and are variations of the vehicle\n\
    routing problem and are typically represented as Multidepot Vehicle Routing Prob-\n\
    lem (MVRP), Vehicle Routing Problem Pick-up and Delivery with Time Windows\n(VRPPDTW)\
    \ or Large-scale Dynamic Vehicle Routing Problem (LSDVRP). Figure\n13 summarizes\
    \ the objectives utilized, constraints and the role of IoT in optimization\nfor\
    \ Smart Industry.\nThe authors in [342] and [343] use the ABC and the GA respectively\
    \ to determine\nthe best location of service sites for logistic operations. Both\
    \ these approaches use\nmulti-objective formulations aiming to reduce cost of\
    \ operations, transportation as\nwell as the establishment of the centers. The\
    \ authors in Su et al. [344] use ACO,\nAlinaghia et al. [345] PSO and Utama et\
    \ al. [346] use ABC to address the problem\nof determining the best route for\
    \ logistics operations.\nThe routing and coverage\nproblem for logistics involves\
    \ determining the best route for either a single or multiple\nvehicles at a depot\
    \ which have to visit every customer. The works of [344, 345, 346]\nfocus on reducing\
    \ the cost incurred in the routing for vehicles in logistics as a single\nobjective\
    \ formulation. On the other hand, the authors of [347, 348] and [349] all\nwork\
    \ on the minimization of distance as their objective in determining the optimal\n\
    route for delivery vehicles trying to serve multiple locations.\nMounia and Bachir\n\
    [348] address routing in logistics as a multi-objective problem where they not\
    \ only\naim to minimize the distance traveled by the vehicles but also aim to\
    \ reduce CO2\nemissions and the number of vehicles used. A time based optimization\
    \ approach is\npresented by the authors of [350] and [351] with [350] also factoring\
    \ in reduction of fuel\nconsumption in their objective function formulation. Constraints\
    \ used for the routing\nand location determination problem are related to time,\
    \ capacity constraints for the\nvehicles, each customer being served only once,\
    \ constraints related to the route. The\ndetermination of the location and the\
    \ route for vehicles is dependent on real time\ninformation concerning the traffic\
    \ in the area as well as the loads to be collected from\neach site in addition\
    \ to other information which can be provided by IoT units. The\nusage of optimization\
    \ algorithms for smart industry has been presented in Table 26\nwith data setups\
    \ presented in Table 27.\n66\nTable 24. Optimization in Smart Homes\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nHome Energy Man-\n\
    agement\nACO [319]\nSingle\nMinimize cost and waiting\ntime\nComfort needs to\
    \ be main-\ntained\nACO [322]\nParallel\nMinimize cost and peak to\naverage ratio\n\
    Power flow constraints\nACO [323]\nSingle\nMinimize cost and peak to\naverage\
    \ ratio\nMaximum energy capacity\nconstraint\nDE [324]\nDevice counted that can\
    \ be\nshifted is positive\nPSO [325]\nNumber of devices shifted at\nany time should\
    \ not be more\nthan the available number of\ncontrollable devices\nGA [337]\n\
    Single\nMinimize peak to average\nratio for load shaping\nLoad shaping, redistribution\n\
    of load in a flexible manner\nGA [326]\nSingle\nMinimize ratio of operating\n\
    cost and load factor\nCharging and discharging of\nbatteries\nComplete load transfer\
    \ and\nload clipping limits\nDE [327]\nSingle\nMinimize\nelectricity\ncost,\n\
    peak\nto\naverage\nratio\nof\npower and discomfort mini-\nmization of users\n\
    Constraints on PV supply\nlimits\nACO [328]\nState of charge and rate of\ndischarge\
    \ of battery\nDE [329]\nSingle\nMinimize\nelectricity\ncost\nand discomfort\n\
    Time of operation within\nspecified limits\nPSO [331]\nTemperature,\nair\nquality,\n\
    illumination\nand\nenergy\nshould be within maximum\nlimits\nGA [330, 338,\n305]\n\
    Parallel\nA given appliance must be\non for specified times of the\nday\nPower\
    \ limits to be followed\nABC [320]\nSingle\nMinimize cost of electricity\nAppliances\
    \ for comfort have\nfixed times\nDE [332, 334]\nSome appliances cannot be\ndelayed\n\
    GA [335]\nPower balance constraints\nPSO\n[321, 336]\nSurplus\nsolar\npower\n\
    sold\nback to distribution system\nMaintain zero net energy in\nbuilding\nTime\
    \ constraints\nLoad safety factor\nLoad phases of appliances\nfulfill energy requirements\n\
    Comfort needs to be main-\ntained\nPeak to average power ratio\nbalancing\nPSO\
    \ [333]\nSingle\nMinimize\nenergy\nbill\nand\ncost associated with KWH\ncurtailment\n\
    Power\nvalues\nwithin\nlim-\nits, battery charge and dis-\ncharge limits\nTable\
    \ 25. Data setup used for Smart Homes\nData Type\nPapers\nSelf-collected/ Presented/\
    \ Generated\n[322, 319, 323, 324, 325, 326, 327, 329, 305, 338, 330, 320, 334,\
    \ 335, 321, 336]\nGovernment Agency/ other research work\n[322, 323, 337, 327,\
    \ 338, 331, 332, 321, 333]\n67\nTable 26. Optimization in Smart Industry\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nLocation determina-\n\
    tion for sites\nABC [342]\nSingle\nMinimize\ntransportation\nand hub establishment\
    \ cost\nSingle allocation for each de-\nmand node\nA given number of hubs are\n\
    established\nCovering radius constraint\nTime reliability constraint\nGA [343]\n\
    Parallel\nMinimize distribution cost\nand maximize profit\nLoad capacity meets\
    \ needs\nof customers\nA delivery vehicle can only\nbe delivered when it receives\n\
    a task\nCapacity constraints\nRouting for Logistics\nABC [348]\nParallel\nMinimize\
    \ distance travelled,\nCO2 emissions, number of\nvehicles used\nEvery customer\
    \ visited only\nonce\nEvery vehicle visiting a loca-\ntion must leave it too\n\
    Ensure route continuity\nDemands of any route must\nnot exceed capacity\nEdges\
    \ satisfying time win-\ndow constraint are allowed.\nABC [349]\nSingle\nMinimize\
    \ total transporta-\ntion distance\nEach customer served only\nonce\nGA[347]\n\
    Route should start and end\nat the same depot\nServed demand of each vehi-\ncle\
    \ does not exceed capacity\nlimit\nACO [344]\nSingle\nMinimizing total cost\n\
    Each customer served only\nonce\nPSO[345]\nDispatched\nvehicles\nnot\nmore than\
    \ available\nABC [346]\nVehicle routes don’t contain\ndisconnected routes\nCustomer\
    \ demand shouldn’t\nbe larger than vehicle capac-\nity\nABC [351]\nSingle\nMinimize\
    \ travelling time\nVehicle load constraint\nSubtours not allowed\nSpeed, time\
    \ and distance\nMaximum number of vehi-\ncles on a route\nEach customer served\
    \ by one\nvehicle\nVehicle number max limit\nPSO [350]\nParallel\nMinimize fuel\
    \ consumption\nand travel time\nEach customer serviced by\nonly one vehicle\n\
    Continuity in route\nVehicle\nload\nconservation\nbetween nodes,\nFirst\nin\n\
    first\nout\nproper\nwhen traveling time is com-\nputed\nTime taken for customers\
    \ as\nstated,\nMaximum time for servicing\nVehicle capacity constraint\nDepot\
    \ is the first and final\ndestination of each vehicle\n68\nSmart Industry \nLocaƟon\
    \ DeterminaƟon of sites \nRouƟng for LogisƟcs \nObjectives: Minimize\ntransportation,\n\
    establishment and\ndistribution cost, Maximize\nprofit\nConstraints: Number of\n\
    sites need to be met,\ndistance coverage for\nlocations, time limits,\ncapacity,\
    \ demands need to\nbe met\nObjectives: Minimize\ndistance travelled, CO2\nemissions,\
    \ number of\nvehicles, time, fuel, cost\nConstraints: Customer\nserved only once,\
    \ route is\ncontinuous, demand limits,\nvehicle count limits,\nvehicle load limits,\
    \ speed,\ntime and distance limits,\ntime limits\nIoT Usage: Sensing units provide\
    \ information relating to the loads to be\ncollected as well as traffic and other\
    \ information\nFigure 13. Optimization applications in Smart Industry.\n4.7\n\
    Smart Infrastructure\nWithin the infrastructure domain, the most common optimization\
    \ problem is the\narea of health monitoring of structures. Structural Health Monitoring\
    \ (SHM) is a\nnecessary application within the smart infrastructure domain as\
    \ it makes for safe\nusage of different structures of public use.\nThese structures\
    \ can be buildings as\nwell as transport structures such as bridges, tunnels.\
    \ Structural health monitoring\ntypically involves the use of sensors attached\
    \ to a structure at several points that can\ngauge some type of physical variable\
    \ (vibration, strain, acceleration, temperature,\ntilt etc) from the structure.\n\
    Data gathered from these connected sensors is then\nused to determine if any structural\
    \ damage has taken place or not.\nWithin the\ndomain of SHM, optimization algorithms\
    \ find application towards the Optimal Sensor\n69\nTable 27. Data setup for Smart\
    \ Industry\nData Type\nPapers\nSelf-collected / Presented/ Generated\n[342, 343,\
    \ 347, 351]\nGovernment Agency/ other research work\n[348, 349, 344, 346, 351]\n\
    Dataset/ Standard Network\nTest instances in [352] used by [345] and [350]\nPlacement\
    \ (OSP) Problem as illustrated in Figure 14. Figure 14 summarizes the\nobjectives\
    \ used, constraint and the use of IoT.\nSmart Infrastructure \nOpƟmal Sensor Placement\
    \ \nObjectives: Minimize error,\nredundancy \nMaximize sensor coverage,\nconnectivity,\
    \ relaibility\nConstraints: Sensor placement\nlocations limitations, number of\n\
    sensors limited\nIoT usage: The placement of sensors\nespecially is performed\
    \ using IoT\nwhere connected sensors povide the\ndata using which optimization\
    \ is\nperformed\nFigure 14. Optimization applications in Smart Infrastructure.\n\
    For the optimal sensor placement problem, the aim is to determine the best num-\n\
    ber and placement of sensors over a structure so as to reduce the number of sensors\n\
    used as well as improve the measurement process, both these aims result in increased\n\
    reliability of the SHM system as well as potentially lower the cost of the system\n\
    too. The authors in [353, 354, 355, 356, 357] work on the placement of sensors\
    \ for\nstructural health monitoring focusing on improving the effectiveness of\
    \ the deployed\nsystem. In this regard, [353] and [356] use the genetic algorithm\
    \ to solve a multi-\nobjective problem aiming to minimize the measurement error\
    \ and cost. Yang et al.\nin [355] formulate OSP as single objective minimization\
    \ where they aim to reduce\nthe ratio of sensor placement performance to the redundancy\
    \ of information resulting\nfrom each tested placement. Another approach that\
    \ works on the error is presented\nby [354] who use the Particle Swarm Optimization\
    \ to maximize the reconstruction\n70\nTable 28. Optimization in Smart Infrastructure\n\
    Application\nAlgorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\n\
    Sensor placement\nGA [353]\nSingle\nMinimize measurement er-\nror and measurement\
    \ cost\nPSO [354]\nSingle\nMaximize\nreconstruction\naccuracy\nand\nrobustness\n\
    of\ntransfer\nrelationship\nbetween\ndeformation\ndis-\nplacement and surface\
    \ strain\n(formulated as a minimiza-\ntion\nproblem\nfor\nnegated\naccuracy and\
    \ robustness)\nSensor\nplacements\nwithin\npredefined range and angles\nGA [355]\n\
    Single\nMinimize the ratio of sen-\nsor placement performance\nto redundancy information\n\
    Sensor placement is permit-\nted on chosen location\nGA [356]\nSingle\nMinimize\
    \ the MAE between\nthe system and the esti-\nmated response (global er-\nror)\
    \ and minimize the maxi-\nmum difference between the\nsystem and its estimated\
    \ re-\nsponse (local error)\nSensor locations are from a\nset of predefined locations\n\
    DE [357]\nSingle\nMaximize quality of cover-\nage,\nlifetime,\nconnectivity\n\
    uniformity of sensor nodes\nand cluster heads and relia-\nbility\nConstraint on\
    \ the number\nof cluster heads associated\nwith each sensor node and\ncluster\
    \ head\nGA [358]\nSingle\nMinimize cross correlation of\nthe sensing network\n\
    Sensor placement is permit-\nted on chosen location\nTable 29. Data types for\
    \ Smart Infrastructure\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n\
    [353, 354, 355, 356, 358, 358, 359, 360]\naccuracy and robust transfer relationship\
    \ between the deformation and surface strain\nwith different sensor placements.\
    \ It must be noted that the objective function is for-\nmulated as minimization\
    \ of negated accuracy and negated robustness measurement.\nOptimized structural\
    \ health monitoring for aircraft monitoring has been targeted\nin [358]. In their\
    \ setup consisting of vibration sensors, the authors optimize sensor\nplacement\
    \ by minimizing the cross correlation of the vibration waves in the sensing\n\
    network. The most common constraint for sensor placement is restrictions on the\n\
    places where sensors can be placed. This information has been provided in Table\
    \ 28\nand the data setups are presented in 29.\n4.8\nSmart Transportation\nOne\
    \ of the most popular optimization applications within smart cities are within\
    \ the\nsmart transport domain. These include parking system routing, traffic signal\
    \ control\nand scheduling. A summary of the applications, their objectives, constraints\
    \ and the\nrole of IoT is illustrated in Figure 15.\n71\nSmart TransportaƟon \n\
    Traﬃc Signal\nControl \nTraﬃc RouƟng \nParking System\nRouƟng \nRoad Traﬃc\nRouƟng\
    \ \nObjectives: Minimize\ntime delay\nConstraints: Traffic\nvolume constraint,\
    \ traffic\nflow constraint, duration\nof traffic light phases \nIoT usage: For\
    \ parking, IoT nodes indicate to free parking spots from which data is\ngathered\
    \ and sent to the cloud. Connected vehicles are also another source of IoT data\n\
    used for navigation purposes along with data from cellphones. \nObjectives: Minimize\n\
    travel distance, traffic\ncongestion\nConstraints: Roadmap\nto be followed is\
    \ fixed,\nroad connections fixed \nObjectives: Minimize\ntravel time, delay,\n\
    emissions, traffic flow\nConstraints: Road\nconnections are fixed,\nnumber of\
    \ routes are\nfixed \nFigure 15. Optimization applications in Smart Transportation\n\
    Smart transport systems consist of sensors along roads and traffic intersections\n\
    to measure relevant parameters while also providing communication services between\n\
    vehicles and infrastructure. This allows for measurement of the current state\
    \ of roads\nin terms of traffic congestion and usage thereby allowing for the\
    \ use of optimization\ntechniques to improve trip experiences for users and make\
    \ the transportation system\nmore efficient. The authors in [361, 362, 363, 364,\
    \ 365] work on the minimization\nof time (wait and travel) in traffic signal control.\
    \ The aim of such systems is to\nreduce traffic build up on signal intersections.\
    \ Of these, the work in [361, 362] and\n[363] use the artificial bee colony and\
    \ the genetic algorithm respectively for a single\nobjective function of minimizing\
    \ delay time. An interesting approach for this problem\nis presented by Li et\
    \ al. [365] who use a multi objective formulation targeting the\nminimization\
    \ of the average travel time both overall and individually for all vehiclesl.\n\
    Another multi-objective approach in traffic signal control is presented by Chen\
    \ and\nYuan [366] who form a mixed problem of minimizing vehicle emissions and\
    \ travel\ntime together. Korkmaz [367] work on the estimation of delays in traffic\
    \ signals using\na genetic algorithm, they use it to minimize the difference between\
    \ the estimated\n72\nand simulated values.\nTang et al.\n[364] carry out distributed\
    \ optimization in a\nfog and cloud hierarchy.\nFirst, fog nodes optimize phase\
    \ timings within a single\ncycle and if the number of vehicles exceeds a threshold,\
    \ the results are sent to the\ncentral controller to further optimize over different\
    \ cycles so that a traffic jam is\navoided or alleviated. Zhang et al. [368] attempt\
    \ traffic signal optimization using\nmulti objective optimization functions of\
    \ reducing time delay and increasing traffic\ncapacity.\nConstraints used for\
    \ traffic signal control are timing constraints on the\nphase durations, flow\
    \ rate of vehicles and on the travel time.\nTraffic routing is also another important\
    \ aspect in smart transportation. This\ntypically involves the determination of\
    \ the best route to the destination keeping in\nview various criteria such as\
    \ reduction of distance, time, cost etc.\nThe problem\nof traffic routing is addressed\
    \ by the works of [369, 370, 371, 372, 373, 374, 375,\n376, 377, 378, 379]. The\
    \ authors in [369] and [370] use the ant colony optimization\nand genetic algorithm\
    \ to minimize the travel distance in parking system routing.\nThey aim to minimize\
    \ distance traveled by a driver looking to find a free parking\nspot, using the\
    \ algorithm, an optimized route is determined for the parking spot.\nIn, [371,\
    \ 373] and [372] the ant colony optimization algorithm is used to determine\n\
    the best route in a generic traffic scenario where cars can communicate with road\n\
    side units in a VANET architecture. Routing for public transport is performed\
    \ by\n[380] and [375] in a connected vehicle scenario aiming to minimize travel\
    \ time. An\neconomic objective approach to traffic routing is taken by the authors\
    \ of [376, 378]\nand [379] who minimize the total cost of the trip.\nMao [379]\
    \ also include traffic\ncongestion and travel time as well in their computation.\
    \ Hassoune et al. [381] work\non a parking guidance using the ant colony optimization\
    \ algorithm to reduce traffic\ncongestion and minimize distance. Constraints for\
    \ traffic routing are related to the\nroad network allowing travel in specific\
    \ directions, signaling and travel time. Within\nsmart transportation, IoT nodes\
    \ are used to determine occupied parking spaces and\nthis data is used for routing\
    \ applications in parking. Traffic routing is based on vehicle\nto vehicle and\
    \ vehicle to infrastructure communication provided by VANETs within\nthe IoT framework.\
    \ These systems enable cars to exchange data with each other and\nalso with fixed\
    \ infrastructure on the roads. This discussion is also presented in Table\n30\
    \ and the data setups for the covered work are presented in Table 31.\n5\nConclusion\n\
    This chapter provides coverage of the application of five popular computational\
    \ algo-\nrithms in the IoT enabled Smart City. It provides a mapping of the various\
    \ applica-\ntions to the specific smart city domain as well as highlights the\
    \ different formulations\nof the objective function used to solve the considered\
    \ problem. This coverage is pro-\nvided in terms of the number of objectives as\
    \ well as whether the problem was solved\nas a single objective, in a hierarchical\
    \ manner or otherwise. It also highlights the con-\nstraints used by the researchers\
    \ in solving the problem which is an important aspect\nas constraints are governed\
    \ by the application at hand. An overview of the mapping\nof various smart city\
    \ optimization applications derived from this work is provided in\nFigure 16.\n\
    73\nTable 30. Optimization in Smart Transportation\nApplication\nAlgorithm\nSingle/\n\
    Parallel\nproblems\nObjectives\nConstraints\nTraffic signal control\nABC [380]\n\
    Single\nMinimize travel time\nInterval of feasible green\ntime length values\n\
    ABC [374]\nInterval of feasible offset\ntime length values\nConstraints\non\n\
    cycle\nlengths\nABC\n[361, 362]\nSingle\nMinimize time delay\nOnly one active\
    \ stage\nGA [363, 364]\nFlow dynamic constraint\nGA [365]\nParallel\nMinimize\n\
    time\ndelay\nand\nalso achieve traffic network\nequilibrium\nLink volume constraint\n\
    Constraints on duration\nof green/red phases\nOffset phase duration\nMinimize\
    \ average travel\ntime.\nRelationship\nbetween\nroute\nand\nlink\nflows\nneed\
    \ to be maintained\nas defined\nGA [366]\nSingle\nMinimize vehicle emissions\n\
    and travel time for vehicles\nSum of green time of\neach phase is equal to to-\n\
    tal available green time\nGreen time is set by a\nlower bound\nGA [368]\nParallel\n\
    Minimize delay, and exhaust\nemission and maximize traf-\nfic capacity (formulated\
    \ as\nminimization problem)\nCycle length of signals\nhas minimum and max-\nimum\
    \ limits\nTraffic\nRouting\n(Parking System)\nACO [369]\nParallel\nMinimize\n\
    distance\nwith\nbend straightening and turn\nreduction\nBend straightening and\n\
    turn reduction\nACO [381]\nParallel\nReduce\ntraffic\nflow\nand\nshortest\ndistance\n\
    towards\nparking\nGA [370]\nSingle\nMinimize distance\nSpecific prefixed routes\n\
    possible for free parking\nTraffic\nRouting\n(Road Traffic)\nACO\n[371, 373]\n\
    Single\nMinimize distance, minimize\ncongestion\nFollow roadmap\nACO [372]\nSingle\n\
    Maximize flow\nACO [375]\nSingle\nMinimize travel time\nConstraint on relation-\n\
    ship between green time\nlengths cycle length, off-\nset on the network calcu-\n\
    lation\nGA [377]\nInterval of feasible green\ntime length values\nInterval of\
    \ feasible offset\ntime length values\nSpecific road segments\nConnected\nconstraints\n\
    on the values of time\ntaken for vehicles\nDE [376]\nSingle\nMinimize travelling\
    \ cost and\nrental cost\nEach bus has one em-\nployee\nEmployees\ncan\nbe\nas-\n\
    signed when stop is avail-\nable\nBus stop assigned when\nbus is in use\nConstraint\
    \ on distance of\nbus stop from employee\nhome and more\nDE [378]\nSingle\nMinimize\
    \ total cost\nRoad\nnetwork\nconnec-\ntions followed\nSolutions contains cor-\n\
    rect number of routes\nACO [379]\nSingle\nMinimize\ntransit\ntime,\ntravel distance,\n\
    road con-\ngestion and traffic expenses\nVariable\nvalue\ncon-\nstraints\n74\n\
    Table 31. Data types for Smart Transportation\nData Type\nPapers\nSelf-collected\
    \ / Presented/ Generated\n[374, 362, 361, 363, 364, 365, 366, 368, 369, 381, 370,\
    \ 371, 373, 372, 380, 377]\nGovernmentAgency/ other research work\n[361, 365,\
    \ 366, 370, 374, 375, 377, 376, 378, 363]\nSmart\nAgriculture \nIrrigaƟon Water\n\
    Scheduling \nSmart Homes \nHome Energy\nManagement \nSmart City\nServices \nWaste\n\
    Management\nRoute\nOpƟmizaƟon \nSmart Industry \nSmart Grid \nPower\nManagement\
    \ \nPlanning \nSmart\nInfrastructure \nOpƟmal Sensor\nPlacement \nSmart Health\
    \ \nEmergency\nVehicle\nAllocaƟon and\nRelocaƟon \nEmergency\nVehicle RouƟng \n\
    Smart Transport \nTraﬃc Signal\nControl \nTraﬃc RouƟng \nOpƟmizaƟon in Smart CiƟes\
    \ \nRouƟng and\nLocaƟon\nDeterminaƟon\nfor LogisƟcs \nIrrigaƟon Water\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon and\nWater Control \nFigure 16. Optimization applications\
    \ in IoT based Smart Cities.\n75\nCHAPTER V\nCASE STUDY - SMART HEALTH\n1\nIntroduction\n\
    As discussed earlier, IoT finds usage in many different Smart City domains, both\
    \ for\nuse in classification/regression tasks as well as for optimization applications.\
    \ One\nof the most important applications of IoT within Smart Cities is within\
    \ the Smart\nHealth domain wherein IoT devices enable the monitoring of patients\
    \ for different\ndiseases such as heart disease etc. While there are a multitude\
    \ of IoT within Smart\nHealth, in order to develop algorithms on IoT sensor data,\
    \ the case of ambient assisted\nliving was chosen, in particular, this work considers\
    \ the case of fall detection.\n2\nIoT for Fall Detection\nThe United Nations estimates\
    \ that the number of old people (aged 60 and above) will\nbe 2.1 billion by 2050\
    \ and 3.1 billion by 2100 [382] leading to an increased old age\npopulation. With\
    \ people above 65 years suffering the greatest number of fatal falls\namong adults\
    \ aged 60 and over [383] healthcare costs related to fall related injuries\nrun\
    \ in to billions of dollars. These falls can result in injuries of moderate to\
    \ severe\nnature in the people experiencing the falls and may lead to decreased\
    \ mobility [384],\nespecially for the elderly [385]. Furthermore, following the\
    \ initial fall, the likelihood\nof experiencing additional falls increases [386]\
    \ and can lead to mental stress in the\nform of post-fall syndrome [387].\nThe\
    \ Internet of Things has spearheaded the development of cyber-physical systems\n\
    that facilitate the recognition of activities/events being performed by people\
    \ in their\ndaily life. One aspect of this application scenario is fall detection.\
    \ Falls can occur\ndue to a variety of reasons [388] and Fall Detection Systems\
    \ (FDS) are used for\npeople with different of health related ailments such as\
    \ in Parkinsons disease [389],\nepilepsy [390], arthritis, people suffering from\
    \ cardiovascular diseases and various\nneuro-degenerative diseases [391]. In any\
    \ scenario, it is pertinent that when a person\nundergoes a fall, they be provided\
    \ care as quickly as possible. Providing timely care\nafter a fall may improve\
    \ post-fall life quality of a patient. Fall detection Systems can\nplay a vital\
    \ role in contributing to the provision of timely care [389, 392] by alerting\n\
    healthcare professionals. As noted by [393] fall detection systems are necessary\
    \ for\nold people with cognitive impairments who may not be able to get up after\
    \ a fall for\nlong durations of time which may result in pressure sores and other\
    \ complications\nand due to vulnerability to injuries when experiencing a fall,\
    \ it may sometimes result\nin death [394].\n76\nA fall is an unintended and sudden\
    \ change of posture resulting in one resting on\nthe ground or some other lower\
    \ level elevation. The aim of a FDS is to monitor the\nmovement of a person and\
    \ determine when a fall has taken place with the aim to\nalert healthcare personnel\
    \ or other caregivers. Over the years different methodologies\nhave been suggested\
    \ to address this problem, however, before discussing the different\nmethods utilize\
    \ for fall detection purposes, it is important to mention what researchers\nenumerate\
    \ to be the traits of a ’good’ FDS [395].\n2.1\nChallenges/Requirements of a FDS\n\
    The following are the typical typical traits/requirements of a good fall detection\n\
    system.\n2.1.1\nNon-intrusiveness\nAn important requirement in fall detection\
    \ systems is to be non-intrusive. Any FDS\nshould not be an impediment in the\
    \ execution of daily activities of a person as it may\nrestrict movement or inconvenience\
    \ their lifestyle.\n2.1.2\nLow Latency\nAn FDS needs to be able to detect a fall\
    \ with low latency. Latency refers to the time\nduration between the occurring\
    \ of a fall and its detection. FDS need to detect falls\nas quickly as possible\
    \ to ensure that caregivers can be notified right away so that apt\ncare is provided\
    \ to the person. Low latency depends on not only the algorithm being\nused to\
    \ detect falls but also parameters like network speed and reliability. Sensor\
    \ data\ntransmission to the main system might also be included in this calculation\
    \ depending\non the FDS proposed.\n2.1.3\nLow power consumption\nPower consumption\
    \ is an important issue in FDS, especially for ones which are battery\npowered.\
    \ Many FDS are expected to be used by elderly people who might not be\nas regular\
    \ in charging the FDS, therefore FDS should consume as little power as\npossible.\n\
    2.1.4\nAllow mobility\nA FDS should not hamper mobility as it might be preventive\
    \ in adoption of a FDS\ntoo. FDS which require people to remain infront of a camera\
    \ at a certain viewpoint\netc can be difficult to deploy and use.\n2.1.5\nDifferentiate\
    \ between Falls and Activities\nA FDS should have low false positives and false\
    \ negatives. In other words it should\nbe able to confidently detect falls and\
    \ be able to differentiate them from activities of\n77\ndaily living such as walking,\
    \ sitting, jumping, running etc. Any false alarms will result\nin wastage of valuable\
    \ healthcare resources, on the contrary, any false negatives might\ncause the\
    \ patient/person having undergone the fall to not get appropriate medical\ncare\
    \ in time and lead to potential death or trauma.\n2.1.6\nNotify caregivers\nA\
    \ complete fall detection solution should have some mechanism of informing care-\n\
    givers whenever a fall is detected. Typically this is carried out in terms of\
    \ email,\nnotifications via some system or messages. Moreover, this process should\
    \ be quick so\nas to ensure the dispatch of any needed help as quickly as possible.\n\
    2.1.7\nTrack history\nA complete fall detection solution should be able to provide\
    \ the history about a\npatient in terms of falls that a person may have suffered\
    \ from as this will help monitor\nthe patients health and determine likelihood\
    \ to suffer from falls in the future. FDS\nmay sometimes also look at other biological\
    \ parameters during falls so as to help\ninvestigate the causes of falls using\
    \ the conditions prevalent at that time. Biological\nparameters that could be\
    \ measured include heart rate, perhaps an ECG or others as\ndeemed necessary based\
    \ on a patients history.\n2.2\nTypes of Fall Detection Systems\nFall detection\
    \ systems can be categorized in to three types based on the sensing\nmechanisms\
    \ used and their placement. These are Ambient Sensor based systems,\nVisual based\
    \ systems and Wearable Sensor based systems.\n2.2.1\nAmbient Sensor based systems\n\
    Ambient sensor based systems are also sometimes referred to as environmental sensor\n\
    based systems since these types of FDS rely on the use of a number of wirelessly\n\
    connected ambient sensors placed in a given area for the detection of falls. These\n\
    FDS make use of various sensors including Passive InfraRed (PIR) Sensors [396],\n\
    Acoustic sensors such as microphones, thermal sensors as well as sensors measuring\n\
    Wi-Fi signal strength etc. For e.g., the authors in [397] develop a fall detection\
    \ system\nbased on two PIR sensors and a vibration sensor to detect vibrations\
    \ on the floor\nwhen a person falls down. Using the PIR sensor to detect a persons\
    \ motion. feature\nextraction is performed on vibration measurements and an SVM\
    \ classifier is used to\ndetermine whether a fall has taken place or not. Another\
    \ approach presented in [398]\nutilize sounds in a home to determine falls in\
    \ the elderly. They do this by extracting\nfeatures in sound signals and like\
    \ [397] use a Support Vector Machine classifier to\ndetermine falls. The authors\
    \ in [399] make use of Wi-Fi channel state information\nfor fall detection. They\
    \ achieve this by feature extraction in the frequency domain\nfollowed by an SVM\
    \ classifier.\n78\nAmbient fall detection systems offer the advantage of not requiring\
    \ people to wear\nanything on their bodies and are thus nonrestrictive in that\
    \ sense. However, such\nsystems are prone to suffer high false positives due to\
    \ the large number of external\nfactors such as other heat emitting devices, multiple\
    \ people moving around at the\nsame time etc. Another issue that comes with ambient\
    \ fall detection systems is that\ndeployment could be cumbersome to cover a large\
    \ space, therefore they are typically\ndeployable in small places such as a home\
    \ or a small building but are very difficult\nto use outdoors due to the nature\
    \ of the setting as well as the possible sources of\nexternal interference.\n\
    2.2.2\nVision based systems\nVision based systems rely on the processing of video\
    \ frames or other visual infor-\nmation such as depth and thermal images or their\
    \ combination [400] to detect falls.\nTypically, the recorded data is sent to\
    \ a server or central computer which provides\nprocessing capabilities. Moreover,\
    \ recently, with the use of deep learning algorithms,\nsuch systems have found\
    \ to provide improved performance. For e.g. [401] use Convo-\nlution Neural Networks\
    \ on velocity information in video frames. Another approach\nthat uses CNNs is\
    \ given in [402] who model human motion from video frames using\nCNNs and then\
    \ use a logistic regression classifier to determine falls. Other approaches\n\
    with CNNs include the works in [403] and [404], both of which achieve very high\
    \ de-\ntection accuracy. Another DL network which has been useful in fall detection\
    \ systems\nbased on cameras is Long Short Term Machine, a recent example of that\
    \ is the use of\na CNN + LSTM combination on 360 degree video recordings of an\
    \ indoor facility to\ndetermine falls. The LSTM allows for capturing the changing\
    \ characteristics between\nvideo frames to provide fall recognition.\nEventhough\
    \ vision based FDS have been able to provide improved fall detection\nperformance\
    \ recently, like ambient sensor based systems, these systems suffer from\nsome\
    \ drawbacks. They are affected negatively in terms of performance and deploya-\n\
    bility from external factors such as occlusion, restricted mobility of the people\
    \ being\nmonitored, typically usable in environments over a small area, have high\
    \ computa-\ntional costs and are expensive. One other issue with vision based\
    \ systems is privacy,\nvision systems which use normal cameras pose risk of violation\
    \ to the privacy of peo-\nple being captured on video. The question of privacy\
    \ can be circumvented by the\nuse of depth cameras for e.g. a kinect [405, 406]\
    \ or using heatmaps using infrared\ncameras/sensors [407].\n2.2.3\nWearable Sensor\
    \ based systems\nWearable fall detection systems involve the use of a device attached\
    \ to the subject.\nThe wearable device monitors user activity by means of sensors\
    \ and can determine\nwhen a fall has occurred. Information about the fall is then\
    \ conveyed to a doctor or\nother medical professionals. Various types of sensors\
    \ can be used in these systems\nincluding inertial measurement sensors such as\
    \ accelerometers, gyroscopes, magne-\ntometers [408] or health sensors such as\
    \ ECGs, oxygen level and pulse rate sensors\n79\nas well. The devices that contain\
    \ these sensors can be worn on the hand, wrist, arm,\nchest, waist, legs, thigh\
    \ or even put inside shoes and are usually battery powered.\nWearable fall detection\
    \ systems have the advantage that they do not restrict move-\nment of the person\
    \ using them and consume less power than the other two approaches,\nhowever, a\
    \ disadvantage to this is the need to ’carry’ the device all the time. Another\n\
    disadvantage is the need to charge the device regularly which might be difficult\
    \ to do\nfor older people, a way this has been addressed in some approaches is\
    \ to make use of\nenergy harvesting [409].\n2.3\nTypes of Wearable FDS\nThere\
    \ are two types of wearable systems in use for fall detection purposes.\n2.3.1\n\
    Threshold based systems\nThe first of type of wearable FDS are threshold-based\
    \ fall detection systems where\nauthors have used various thresholding techniques\
    \ on sensor values measuring motion,\nparticularly the accelerometer. The major\
    \ advantage of threshold based fall detection\nsystems is their relative low computational\
    \ cost and use of sensor fusion techniques\nto improve fall detection accuracy\
    \ , however, the big disadvantage of such systems is\nthat threshold based systems\
    \ do not generalize well across subjects since people may\nhave different gaits,\
    \ this is especially true for people of different ages. As a result,\nthreshold\
    \ based FDS may suffer from having many false positives as well as false\nnegatives\
    \ since the FDS needs to differentiate between activities of daily living and\n\
    falls, which many times may appear to be fairly similar to each other in terms\
    \ of\nsensor readings.\n2.3.2\nMachine/Deep Learning based systems\nSince threshold-based\
    \ systems are rigid in terms of their usage, ML/DL methods\nprovide a flexible\
    \ method for fall detection. ML/DL algorithms can learn complex\npatterns from\
    \ sensor data which indicate to a fall while monitoring a persons activities\n\
    and therefore are useful in fall detection systems. As opposed to threshold based\n\
    systems, their generalizing capability allows them to be used across subjects.\n\
    A\ntypical ML framework for fall detection will involve data acquisition, prepossessing,\n\
    feature extraction and then usage of a suitable ML algorithm to make the inference\n\
    for a fall or no fall. A deep learning framework based FDS might have a similar\n\
    methodology, but depending on the DL algorithm used, feature extraction might\
    \ be\nomitted.\n2.4\nSensors used in Wearable FDS\nAs mentioned before, the sensors\
    \ used in wearable FDS are accelerometers, gyroscope,\nmagnetometer, ECG, Pulse\
    \ Rate and oxygen saturation levels. In this section, we will\ndiscuss briefly\
    \ the role of these sensors in wearable FDS and parameters of interest\nwhen using\
    \ them in FDS.\n80\n2.4.1\nAccelerometers\nAccelerometers, together with gyroscopes\
    \ are the most widely used sensors in wear-\nable FDS. One reason for this is\
    \ that both these sensors are typically present in\nsmartphones, which have been\
    \ used to either collect data for and/or deploy fall de-\ntection systems. An\
    \ accelerometer provides a measure of absolute acceleration and\nare used to detect\
    \ vibrations, force in a variety of applications involving monitoring\nof machines,\
    \ planes, civil architectures and more. In an FDS, an accelerometer is\nable to\
    \ capture the movement patterns of individuals which can be used to determine\n\
    falls.\n2.4.2\nGryroscope\nGyroscopes are used to measure tilt/orientation.\n\
    Gyroscopes find applications in\nvarious areas where orientation measurement is\
    \ required, for e.g. in airplanes and\nsubmarines where they are used in stabilization\
    \ systems, smartphones and game re-\nmotes for interactive gameplay, among other\
    \ things. Since orientation is an important\ncharacteristic of a fall, gyroscopes\
    \ are one of the most widely used sensors in FDS\nalong with acceleratorometers.\n\
    2.4.3\nMagnetometer\nA magnetometer is a device that measures the direction and\
    \ strength of magnetism\nrelative to the earths magnetic north. In addition to\
    \ other applications, magnetome-\nters are used in aircrafts for direction referencing.\
    \ These sensors are not very popular\nin FDS but have been proposed in some approaches\
    \ [410, 411] to be used for fall\ndetection in addition to accelerometers and/or\
    \ gyroscopes.\n2.4.4\nVarious Medical Sensors\nWearable fall detection systems\
    \ may also incorporate different types of medical sen-\nsors such as ElectroCardioGraphs,\
    \ ElectroMyoGraphs, Pulse Rate or Oxygen Level\nmeasurement in the FDS solution.\
    \ Even though there have been some approaches\nwhich have used medical sensors\
    \ exclusively for fall detection (such as EMG[412]),\nhowever, like magnetometers,\
    \ these sensors are usually used along with accelerome-\nters and/or gyroscopes.\
    \ Adding these sensors to fall detection systems has the added\nadvantage of assessing\
    \ falls from a health standpoint too as this information can be\nused to determine\
    \ risk of falls [413].\n2.5\nDesign considerations for Wearable FDS\nWearable\
    \ fall detection systems utilize sensor measurements to ascertain the occur-\n\
    rence of a fall. Since wearable FDS units are always attached to a persons body,\
    \ they\ncontinuously provide measurements of a persons movements and activities.\
    \ In order\nto use these measurements in a FDS, there are some design considerations\
    \ involved.\nWe discuss them in this section.\n81\n2.5.1\nSampling frequency\n\
    The sampling frequency dictates the number of sensor measurements recorded per\n\
    second. The sampling frequency used in an FDS should be high enough to capture\n\
    fall motion but not too high so as to increase data processing, storage requirements\n\
    as well as allow for energy efficient operation. In fact, depending on the position\n\
    of the sensors, significant reductions can be made in the sampling frequency used\n\
    for sensors with little or no change in performance as demonstrated by [414].\
    \ Such\nreductions could result in low power consumption by the wearable module\
    \ thereby\nenabling longevity of operation.\n2.5.2\nWindowing\nSince wearable\
    \ fall detection systems provide a continuous stream of sensor data, the\ndata\
    \ needs to be windowed for fall detection to be performed. Windowing refers to\
    \ the\nextraction of a subset of the sensor data stream in a sliding manner or\
    \ otherwise and\nis typically specified in terms of time duration for its size.\
    \ It is typical for wearable\nFDS designers to test different window sizes for\
    \ their fall detection algorithms. The\nsize of the window used would dictate\
    \ memory and computational requirements of\nthe unit used for deploying the FDS\
    \ system. Another important factor in windowing\nsensor signals is whether overlapping\
    \ is used during the windowing process or not.\nThis might be important to allow\
    \ for smooth transitions between different windows.\n2.5.3\nFeature Extraction\n\
    Feature extraction is the process of determining quantities from data which charac-\n\
    terizes it for a desired task appropriately. Feature extraction not only aims\
    \ to capture\nimportant aspects of the data being worked on but also to present\
    \ its content in a\nreduced size, thereby, making use of the data easier. Feature\
    \ extraction is a typ-\nical step of the a signal processing and machine learning\
    \ workflow and follows the\nwindowing step. There are different types of features\
    \ which have been computed\nfor fall detection applications, common feature computations\
    \ include the determina-\ntion of time domain features, frequency domain features,\
    \ statistical features etc. or\nsome combination from sensor data in FDS. Feature\
    \ extraction is followed by either a\nthresholding algorithm to sensor values\
    \ or a machine/deep learning model. For deep\nlearning, there have been some end\
    \ to end deep learning approaches which skip the\nstep of manual feature extraction.\
    \ In such approaches, deep learning networks such\nas CNN may be used to extract\
    \ features followed by other networks such as LSTM\nto determine falls, an example\
    \ is proposed in [415].\n2.6\nLiterature Review\nAs discussed previously, wearable\
    \ fall detection systems present several advantages\nwhen used for fall detection\
    \ purposes such as non-intrusiveness, ease of mobility, small\nsize of deployment,\
    \ low cost and that many implementations are typically standalone\nsystems. This\
    \ added with the fact that sensors and other components which are used\n82\nin\
    \ such systems have been becoming cheaper and cheaper to produce has resulted\
    \ in\na lot of interest in the development of wearable FDS by researchers and\
    \ technologists\nalike. Therefore, wearable FDS methodologies have gained considerable\
    \ interest in\nfall detection research. We discuss some of the popular methodologies\
    \ proposed in\nthis regard.\nThe authors in Mrozek et al. [416] present a complete\
    \ design of a wearable fall\ndetection system for an Internet of Things scenario.\
    \ They conduct two experiments\nwith their system, in one experiment, data is\
    \ collected from a gyroscope and an\naccelerometer and sent to the cloud for fall\
    \ detection (as a web service) while in\nthe second experiment, fall detection\
    \ is performed on the edge node (smart phone).\nThrough their experiments they\
    \ conclude that performing fall detection on the edge\nnode results in less network\
    \ traffic and storage requirements for the cloud. Algo-\nrithmically speaking,\
    \ they extract 3 second overlapping windows from measurements\nof both sensors,\
    \ perform feature extraction and pass it on to a boosted decision tree\nclassifier\
    \ for determining whether a fall has taken place or not. Moreover, the boosted\n\
    decision tree classifier was trained using the SisFall [417] dataset. Another\
    \ IoT based\nsystem is proposed by Marquez et al. [418] who develop a fall detection\
    \ system for\nIoT on the edge. They first gather data from an accelerometer and\
    \ a gyroscope placed\non the waist of multiple subjects and train a support vector\
    \ machine classifier on a\ncombination of raw sensor values and its standard deviation.\
    \ They are able to deploy\ntheir system successfully and achieve satisfactory\
    \ results. Moreover, feature selection\nis also performed before the classification\
    \ stage. A fog based fall detection model has\nbeen proposed by Sarabia-J’acome\
    \ et al. [419] who utilize a Long Short Term Memory\nRecurrent Neural Network\
    \ in their method. Edge nodes collect Inertial Measurement\nUnit (IMU) measurements\
    \ and relay them to a fog node which processes the data to\ndetermine if a fall\
    \ has taken place or not. One motivation for them to develop RNN\nmodels over\
    \ a Convolutional Neural Network one is the requirement of less param-\neters\
    \ and thus less computational requirements. Their final model consists of a 1D\n\
    CNN layer followed by two LSTM layers and a fully connected layer for classification\n\
    and is trained using raw data (window of 15s) from the SisFall dataset.\nZurbuchen\
    \ et al. in [420] provide a comparison of various machine learning al-\ngorithms\
    \ for fall detection while using data from the SisFall dataset. They perform\n\
    experiments using Decision Trees, Random Forest Classifier, Gradient Boosting\
    \ tree,\nK-Nearest Neighbor and Support Vector Machines. Segments of 10 seconds\
    \ are ex-\ntracted from the trials in the SisFall dataset and various time and\
    \ frequency domain\nfeatures are computed for those segments. These are then passed\
    \ on to the classifiers.\nThrough their experiments, they find that Random Forest\
    \ and Gradient Boosting\ntrees perform the best among the considered methods.\
    \ Another comparison of var-\nious ML algorithms is provided by Chelli and P¨atzold\
    \ in [421] who compare the\nperformance of a number of machine learning algorithms\
    \ on two datasets, the Cogent\nLabs dataset [422] and the one provided in [423].\
    \ The algorithms they consider are\nan artificial neural network, K-NN, an ensemble\
    \ bagged tree (EBT) and Quadratic\nSupport Vector Machine (QSVM). They compute\
    \ several time and frequency domain\nfeatures from accelerometer and gyroscope\
    \ signals and pass them on to the classi-\nfiers. Their best performing classifiers\
    \ were QSVM and EBT. Kerdjidj et al. in [424]\n83\nuse compressive sensing to\
    \ explore the use of different modalities for fall detection\npurposes. The performance\
    \ of accelerometer only and an accelerometer - gyroscope\nsensor combination in\
    \ a fall detection scenario is compared. A Shimmer device [425]\nis used to capture\
    \ data from 17 volunteers asked to perform activities of daily living\nas well\
    \ as fall like movements. They first extract segments of length 2.56 seconds\n\
    from their recordings before performing feature extraction and passing it on to\
    \ four\ndifferent machine learning classifiers, K-Nearest Neighbor, Support Vector\
    \ Machines,\nDecision Trees and an Ensemble Classifier (EC). They conduct two\
    \ such experiments,\none with compressive sensing and the other without. Their\
    \ results indicate that the\nEC classifier and SVM perform the best with the help\
    \ of compressive sensing included\nin the pipeline. A ’transfer learning’ approach\
    \ towards fall detection is provided by\nFanez et al. in [426] and they test it\
    \ on the UMAFall [427] dataset and the FallOVI\ndataset (created by them). Using\
    \ a finite state machine which captures windows\nof accelerometer measurements\
    \ based on peak values, the authors convert the win-\ndowed segments into string\
    \ representations using symbolic aggregate approximation\n(SAX) [428]. During\
    \ training each user performs normal ADLs and falls for a short\nperiod of time.\
    \ Peak values are determined from sensor measurements and used to\ncreate bag\
    \ of words using SAX. After this, normal operation of the system starts\nand information\
    \ retrieval (term frequency - inverse term frequency) values are used\nto determine\
    \ what label to give to new SAX words derived from sensor values. If a\ndetermined\
    \ word is not similar (using Manhattan distance) to any word in the bag of\nwords\
    \ (K-NN clustering is used to group similar words), a fall event is suggested\
    \ to\nhave occurred. ’Transfer learning’ involves the use of clusters formed by\
    \ other users\n(performing activities only) as the starting point of the training.\
    \ Their experiment\ncompared an SVM classifier with their information retrieval\
    \ based scheme. They are\nable to detect falls all the time with the UMAfall dataset\
    \ but have a high number\nof false positives for the FallOVI dataset. An noticeable\
    \ aspect of this approach is\nthe use of clustering and ’feature extraction’ as\
    \ strings. In Giuffrida et al. [429]\nthe authors use data from the SisFall dataset\
    \ and an SVM classifier to differentiate\nbetween falls and no-fall samples. They\
    \ extract slices (of 1 second) from the SisFall\ntrials and label each slice as\
    \ containing a fall or not. A number of features were then\ncomputed for each\
    \ slice before feature selection was performed and an SVM classifier\nwas trained\
    \ to determine the output class.\nDeep Learning methods have also been widely\
    \ used for fall detection purposes.\nCasilari et al. in [430] explore the contribution\
    \ of the gyroscope sensor for use in\ncombined accelerometer-gyroscope based fall\
    \ detection systems.\nTo do this, they\nmake use of measurements from the SisFall\
    \ dataset, extract observation windows of\n5 seconds around peaks of accelerometer\
    \ sensor signal values over a trace and pass\nthem on to a Convolutional Neural\
    \ Network with four convolutional layers, three\nmax pooling layers followed by\
    \ one fully connected layer for classification. Training is\nperformed in two\
    \ different sets of experiments, one including gyroscope data and the\nother without\
    \ it. They note that the results they get while using only accelerometer\nsignal\
    \ measurements are better than that when using data from both sensors. A\nCNN\
    \ is used for fall detection purposes by Santos et al. in [431] from accelerometer\n\
    measurements. Their network consists of six convolutional layers, two max pooling\n\
    84\nlayers in between followed by a fully connected layer for classification.\n\
    They use\ndata from the URFD dataset [432] and the Smart Watch and Notch datset\
    \ [433] in\ntheir experiments. They note that their model performs best when they\
    \ use data\naugmentation for both the datasets. However, this was achieved by\
    \ two different\nvariants of the same model. This highlights the point of a single\
    \ model not necessarily\nperforming well on all datasets. Another interesting\
    \ aspect of their work is the use of\nthe Mathews Correlation Coefficient to evaluate\
    \ performance of their algorithms. A\nmodified AlexNet [434] has been used in\
    \ [435] by Alarifi et. al. They collect tri-axial\ndata from inertial measurement\
    \ sensors consisting of accelerometer, gyroscope and\nmagnetometer at six different\
    \ positions on a subjects body. A total of 16 activities of\ndaily living and\
    \ 20 falls were recorded by them. Feature extraction is then performed\nin terms\
    \ of various statistical measurements as well as frequency analysis. This is\n\
    followed by principal component analysis and then passed on to the classification\n\
    stage consisting of an optimized AlexNet ConvNet. Waheed et. al. in [436] develop\n\
    a FDS using a Bi-Directional Long Short-Term Memory (Bi-LSTM) network. They\n\
    consider the binary case of fall and no fall and perform experiments using the\
    \ SisFall\ndataset as well as the UP-Fall dataset [437]. Their network consists\
    \ of eight layers\nin total. Two Bi-LSTM layers and two fully connected layers\
    \ with dropouts being\nused for regularization. Training is performed with creating\
    \ missing values in the\ndata to introduce noise tolerancy.\nCasiliri et al.\n\
    in [438] provide a performance\ncomparison for a CNN network on multiple public\
    \ fall detection datasets. The aim\nof their work is to test the cross-application\
    \ of a similar CNN network trained on\ndifferent datasets. They set their experiments\
    \ up by training a four layer CNN on\neach dataset separately for fall detection\
    \ on 14 datasets (using similar positions of\nsensor placement) on windows of\
    \ 5 seconds for accelerometer signals. Their results\nindicate a very good performance\
    \ of the network for the SisFall dataset, however, it\ndoesn’t perform very well\
    \ for most of the other datasets, in some cases, performing\nless than random\
    \ chance, which is quite surprising. Their experiments do however,\nhighlight\
    \ an issue with the well accepted notion that an algorithm developed on some\n\
    benchmark dataset will necessarily work similarly well with other datasets.\n\
    The\nauthors suggest that the erratic performance of their method could be due\
    \ to the\ndifference in the nature of the data in terms of sampling frequency\
    \ used, range of\nthe sensor and the varying type of movements. Another cross-dataset\
    \ approach for\nfall detection has been proposed in [439] where the authors use\
    \ a combination of a\nCNN and Long Short Term Memory network to extract features\
    \ followed by a K-\nNearest Neighbor classifer to detect falls as well as identify\
    \ the subjects within four\nfall datasets, DFNAPAS [440], SisFall, UniMiB-SHAR\
    \ [441] and ASLH [442]. The\nnetwork is trained using the DFNAPAS dataset, before\
    \ training the network however,\ndata augmentation is carried out for the fall\
    \ class. Their best results are achieved\nfor a value of K = 3 and they achieve\
    \ good results for all experiments. They observe\nthat using a deep learning architecture\
    \ for feature extraction purposes along with a\nmachine learning classifier performs\
    \ better than a using a fully connected layer at the\nclassification stage.\n\
    Post fall intelligence is an important research area in the field of fall detection\n\
    as it can be useful in determining various post fall injuries [443] and serve\
    \ as an\n85\nintelligence parameter [444] for doctors. Jung et al. in [445] also\
    \ target detection\nof pre-impact falls for wearable airbag deployment. Their\
    \ method involves the ap-\nplication of a threshold on determined features from\
    \ accelerometer and gyroscope\nmeasurement measurements. The thresholds are then\
    \ applied to a dataset collected\nby them and also on the SisFall dataset. The\
    \ threshold is determined by performing\na grid search on the extracted features\
    \ from their dataset to maximize specificity and\nsensitivity. They do note that\
    \ some activties like sitting down quickly on a chair or a\nmattress triggered\
    \ false positives. Moreover, when applied to SisFall, their methods\nperformance\
    \ is not as high as achieved by methods based on ML/DL. Koo et. al.\n[446] present\
    \ experiments for post fall detection from a combination of self collected\ndata\
    \ and the SisFall dataset. They conduct tests using sliding windows as well as\
    \ dis-\ncrete windows from these signals and compute statistical features from\
    \ them. After\nfeature extraction, two different classifiers, the artificial neural\
    \ network and support\nvector machine are tested with the computed features as\
    \ well as raw sensor values.\nThey find that both ANN and SVM are suitable for\
    \ use in post fall detection sce-\nnarios. Another approach looking at the different\
    \ phases of a fall has been presented\nin [447] where Hsieh et. al. use accelerometer\
    \ sensor data to differentiate between\nfive phases of a fall, pre-fall, free-fall,\
    \ impact, resting and recovery and the initial\nand end static phases. To do this,\
    \ they compute various time domain and statistical\nfeatures and test five classifiers,\
    \ SVM, K-Nearest Neighbors, Naive Bayes, Decision\nTrees and Adaptive Boosting\
    \ (AdaBoost). For their experimental setup, the best\nresults were achieved using\
    \ the K-NN classifier. In Musci et al. [448], the authors\npropose a RNN based\
    \ method to differentiate between falls, pre-impact falls (state\nwhere a person\
    \ is in a dangerous state of transition which may result in a falls) and\nnormal\
    \ activities. Their motivation for including preimpact falls is to enable timely\n\
    deployment of a fall protection system. First, they label data from the SisFall\
    \ dataset\nto form three classes. They then extract windows of duration 1.28 seconds\
    \ with an\noverlap of 50% from the sensor signals and pass them on to their network\
    \ which\nconsists of two fully connected layers and two-layer LSTM layers. Moreover,\
    \ due to\nan imbalanced training set, they define a new balancing loss function.\
    \ Their method\nresults in fall detection good results for the three classes considered.\
    \ A CNN-LSTM\napproach has been proposed in [449] by Yu et al. for detection of\
    \ pre-impact fall and\nfalls in the SisFall dataset. They provide a comparison\
    \ of standalone CNN, LSTM\nand a combined CNN-LSTM architecture for this task\
    \ and also implement them on\na Jetson Nano. They define a pre-impact fall as\
    \ the time interval where a subject\ntransitions from a controlled state to a\
    \ state which may lead to a fall. First, they\nlabel data in the SisFall dataset\
    \ as described in [448] to form a three class problem.\nThey achieved their best\
    \ results for their CNN+LSTM model having four CNN layers\nfollowed by two LSTM\
    \ layers and a fully connected layer for classification. Their ap-\nproach highlights\
    \ the combined capability of CNN-LSTM for feature extraction. An\naspect of fall\
    \ intelligence is direction, in [450] Lee et al. use the velocity vector from\n\
    the acceleration sensor in a smartphone for fall detection with direction and\
    \ then\nlater on in [451], they use the standard deviation of the accemerometer\
    \ and gyro-\nscope sensor measurements from a smart phone to determine falls and\
    \ fall direction.\nThey perform a small experiment and are able to differentiate\
    \ between left, right,\n86\nfront and backward falls. More work on fall detection\
    \ with direction was performed\nby the authors in [452] who use an accelerometer\
    \ and gyroscope combination along\nwith a kalman filter for tilt estimation. Fall\
    \ detection is then performed using an\nSVM classifier. Falls with direction detection\
    \ has been attempted in [453, 454] by\nthe same authors. They collect accelerometer\
    \ data from various subjects and extract\nthree features from the recordings for\
    \ each axis, the mean, standard deviation and\nprincipal components (using Principal\
    \ Component Analysis). These are then passed\non to a SVM classifier to differentiate\
    \ between a forward, backward, left and right\nfall and ADLs.\nWhile direction\
    \ aware fall detection is an important determination in terms of post\nfall intelligence,\
    \ fall detection with severity is necessary since it could help provide\nindications\
    \ to falls with immediate recovery or otherwise, as falls without immediate\n\
    recovery would be more detrimental to health than a fall with immediate recovery\
    \ as\nhas been suggested in [455]. In [456] the authors attempt to classify between\
    \ different\nfalls (direction: forward, backward, right, left and intensity: hard,\
    \ soft [fall on knees\nfirst, then on floor]) and five different ADLs using accelerometer\
    \ data. They collected\ndata for their experiments using a triaxial accelerometer\
    \ mounted on the chest. Fea-\nture extraction consists of first concatenating\
    \ acceleration values in each axis and\nthen using a Debauchies-2 level-3 wavelet\
    \ which are then sent to the classification\nstage. In the classification stage\
    \ five different classifiers, an ANN, a Radial Basis\nFunction (RBF) Network,\
    \ Probabilistic Principal Component Analysis (PPCA) and\nLinear Discriminant Analysis\
    \ (LDA) are used through a voting machine to determine\nfalls. A voting machine\
    \ (VM) involves multiple classifiers giving a vote towards any of\nthe multiple\
    \ classes and the sum of the vote is compared against a vote threshold to\ndetermine\
    \ the event that has taken place. In their work, the authors train individual\n\
    VMs for all the activity and fall types in their dataset by structuring them all\
    \ in par-\nallel and adding a comparator function at the end of the pipeline.\
    \ Moreover, a K-NN\nmulticlass classifier also feeds in to the comparator and\
    \ is trained while training of\nthe other classifier, it is provided the true\
    \ value of the activity being input to the\nclassification stage. The authors\
    \ show that their dataset works very well. A valuable\ninsight about their work\
    \ is the ensembling mechanism the authors have employed to\ndetermine fall directions.\
    \ In [457], Hussain et al. propose a fall detection system that\ncan first determine\
    \ falls and then the type of fall using data from the SisFall dataset.\nThey accomplish\
    \ this in a hierarchical setup where their system first considers fall\ndetection\
    \ as a binary problem, whether a fall has taken place or not, and if a fall\n\
    has been detected, it classifies between the various falls in the dataset. Their\
    \ system\nis designed to work with 10 second non-overlapping windows of accelerometer\
    \ and\ngyroscope signals. Data from each record is first low pass filtered before\
    \ two different\ntypes of feature sets, consisting of various time domain and\
    \ statistical features, are\ncomputed on the data. This is then followed by the\
    \ machine learning stage where\nthree different classifiers are tested, K-NN,\
    \ SVM and RFC. In the fall detection stage,\nstatistical features are computed\
    \ from ADL and fall signals and sent to the three clas-\nsifiers for the preliminary\
    \ binary classification. After a fall has been determined to\nhave happened, numerous\
    \ other statistical and time domain features are then com-\nputed on the data\
    \ before being sent to the next stage to determine the type of fall\n87\nactivity\
    \ taking place. In their experiments, the authors find that K-NN is most effec-\n\
    tive in differentiating between falls and ADLs where as RFC performs the best\
    \ when\nthe different fall activities need to be determined. This work highlights\
    \ the usefulness\nof a hierarchical approach towards non-binary fall detection.\
    \ One proposed method\nto perform combined activity recognition and fall detection\
    \ has been presented in\n[458]. In this, Li et. al. use multi-modal sensor fusion\
    \ and a Bi-LSTM classification\nnetwork to differentiate between five activities\
    \ of daily living and a fall. The sensors\nthey use are an inertial sensor placed\
    \ on the wrist, waist and ankle as well as a radar\nsensor. After pre-processing\
    \ both the inertial measurement and radar signals, various\nstatistical and moment\
    \ computations were performed to be used as features. These\nwere passed on to\
    \ the multilayer Bi-LSTM network after feature selection to deter-\nmine the output\
    \ class. One thing to note is that both both [458] and [421] consider\nfall as\
    \ a single category rather than considering falls as a detailed problem (direction\n\
    and/or severity) in itself. More recent work by We et al. [459] also considers\
    \ ac-\ntivity recognition and fall detection together. They use inertial measurement\
    \ sensor\ndata from two datasets, the MobiAct dataset [460] and the SmartFall\
    \ dataset [433].\nThe MobiAct dataset contains data from four falls and nine activities\
    \ of daily living\nwhereas the SmartFall dataset has non-fall and fall recordings.\
    \ In their experimenta-\ntion, they compare the performance of different machine\
    \ learning models and several\ndeep learning models, including a CNN, LSTM, CNN-LSTM\
    \ combination and Gated\nRecurrent Units. The machine learning models are trained\
    \ by computing time and\nfrequency domain features whereas the deep learning models\
    \ are trained using raw\nsensor data. They find that the GRU designed by them\
    \ consisting of two GRU units\nfollowed by a softmax classification layer is the\
    \ best performing model. Another deep\nlearning approach utilizing sequential\
    \ modeling for a fall detection system that also\nconsiders ADLs has been presented\
    \ by Seng¨ul et al. [461]. They collect their own\ndata for two types of falls\
    \ and four activities of daily living. After data augmentation\non the minority\
    \ classes, they use a Bi-LSTM for classification. Le et al. [462] propose\na non-binary\
    \ fall detection scheme utilizing a collection of time, frequency frequency\n\
    domain features in addition to the three Hjorth parameters of activity, mobility\
    \ and\ncomplexity. They use data from two datasets, the MobiAct dataset and the\
    \ UP-Fall\ndataset. They are able to achieve good results on both datasets using\
    \ all three feature\ntypes with a random forest classifier.\nThe use of attention\
    \ based models has also been finding increasing usage in fall\ndetection research.\
    \ Yhdego [463] use an attention model to perform binary fall de-\ntection. The\
    \ fall dataset is collected by them and after windowing, the authors use\ntime2vec\
    \ positional encoding on the data. Their network consists of three attention\n\
    blocks each consisting of multiheaded self attention followed by normalization\
    \ and a\nfully connected network. After the attention blocks follow two fully\
    \ connected layers.\nThey find that their network incorporating attention performs\
    \ well in differentiating\nbetween fall and non-fall samples. Another interesting\
    \ approach using attention is\npresented by Liu et al. [464]. Inorder to apply\
    \ attention on both temporal (step wise)\nand spatial (channel wise) aspects of\
    \ the signals, a gated scheme is suggested. A fully\nconnected layer is used to\
    \ determine the embeddings before positional information is\nadded to the data.\
    \ Positional encoding is only used for stepwise attention as channel\n88\nwise\
    \ positions are not useful. Self attention is performed in the step-wise part\
    \ of the\nnetwork and is carried out for the individual channels in a pairwise\
    \ fashion across all\ntime steps while the channel wise attention is performed\
    \ across the different channels\nacross all time-steps. The outputs of these two\
    \ units are combined through a fully\nconnected network which weighs them before\
    \ concatenation and classification.\n2.7\nFall detection Datasets\nThere are several\
    \ datasets published for use in algorithm development for fall detec-\ntion as\
    \ has been noted in [438]. Of these, for this case study, we choose two datasets,\n\
    these are the SisFall and the K-Fall dataset. The SisFall [417] dataset is chosen\
    \ as\nit contains recordings of elderly people which are most at risk from injury\
    \ due to\nfalls and therefore should provide a good representation of activities\
    \ of the elderly. It\nshould be noted that its one of the most used dataset for\
    \ fall detection purposes [438].\nThe other dataset used is the K-Fall [465] dataset.\
    \ It was released on the pattern of\nthe SisFall dataset and includes more activities\
    \ compared to SisFall. A summary of\nthe datasets is presented in the next section.\n\
    2.7.1\nSisFall Dataset\nThe SisFall dataset consists of accelerometer and gyroscope\
    \ recordings of 19 types of\nactivities of daily living and falls. Two accelerometers\
    \ and one gyroscope were placed\non the waist and used for making the measurements.\
    \ This location was chosen so as\nto ensure that all body movements while performing\
    \ the activities/falls were captured\nby the sensory system. Furthermore, the\
    \ data recordings involved 23 young people\nbetween the ages of 19-30 years old\
    \ and 15 elderly people between the ages of 60-75\nyears. The dataset contains\
    \ annotated sensor measurements of each of these ADLs\nand falls recorded as well\
    \ as video recordings of sample experiments. There are four\nmain types of falls\
    \ present, six of them are forward falls , three backward falls, four\nlateral\
    \ falls and two vertical falls. The types of falls performed were directed through\n\
    a survey taken from elderly people living independently as well as the ones living\n\
    in retirement homes and include scenarios of slipping and tripping. Moreover,\
    \ they\nare preceded by various types of ADLs being performed to make the recordings\
    \ as\nclose to a real world scenario as possible. The ADLs recorded were approved\
    \ by\nmedical personnel and were chosen so as to be similar to falls. The ADLs\
    \ include\nhigh mobility activities such as walking up/down stairs, jogging as\
    \ well as activities\nwhich can be confused with falls such as quickly sitting\
    \ in a chair, bending at the\nknee and stumble while walking etc. In total, there\
    \ were 2706 ADL recordings and\n1798 fall recordings. The SisFall data is utilized\
    \ in this study as it has been the\nthe dataset of choice for several previous\
    \ research approaches addressing the subject\nof fall detection [466, 467, 468,\
    \ 436, 469] and also because the volunteer makeup\nconsists of both men and women,\
    \ young adults and the elderly. The ADLs and Falls\nin the SisFall dataset have\
    \ been presented in Table 32 with a brief description of the\nactivities and falls\
    \ provided as well.\n89\nTable 32. ADL and Falls present in the SisFall dataset.\n\
    Activity/\nFall Code\nBrief Description\nD01\nWalking slowly\nD02\nWalking quickly\n\
    D03\nJogging slowly\nD04\nJogging quickly\nD05\nWalking upstairs and downstairs\
    \ slowly\nD06\nWalking upstairs and downstairs quickly\nD07\nSlowly sit in a half\
    \ height chair, wait a moment, and up slowly\nD08\nQuickly sit in a half height\
    \ chair, wait a moment, and up quickly\nD09\nSlowly sit in a low height chair,\
    \ wait a moment, and up slowly\nD10\nQuickly sit in a low height chair, wait a\
    \ moment, and up quickly\nD11\nSitting a moment, trying to get up, and collapse\
    \ into a chair\nD12\nSitting a moment, lying slowly, wait a moment, and sit again\n\
    D13\nSitting a moment, lying quickly, wait a moment, and sit again\nD14\nBeing\
    \ on one’s back change to lateral position, wait a moment, and change to\none’s\
    \ back\nD15\nStanding, slowly bending at knees, and getting up\nD16\nStanding,\
    \ slowly bending without bending knees, and getting up\nD17\nStanding, get into\
    \ a car, remain seated and get out of the car\nD18\nStumble while walking\nD19\n\
    Gently jump without falling (trying to reach a high object)\nF01\nFall forward\
    \ while walking caused by a slip\nF02\nFall backward while walking caused by a\
    \ slip\nF03\nLateral fall while walking caused by a slip\nF04\nFall forward while\
    \ walking caused by a trip\nF05\nFall forward while jogging caused by a trip\n\
    F06\nVertical fall while walking caused by fainting\nF07\nFall while walking,\
    \ with use of hands in a table to dampen fall, caused by\nfainting\nF08\nFall\
    \ forward when trying to get up\nF09\nLateral fall when trying to get up\nF10\n\
    Fall forward when trying to sit down\nF11\nFall backward when trying to sit down\n\
    F12\nLateral fall when trying to sit down\nF13\nFall forward while sitting, caused\
    \ by fainting or falling asleep\nF14\nFall backward while sitting, caused by fainting\
    \ or falling asleep\nF15\nLateral fall while sitting, caused by fainting or falling\
    \ asleep\n2.7.2\nK-Fall Dataset\nThe K-Fall dataset has been developed based on\
    \ the SisFall dataset and contains 15\nfall types and 21 ADLs. The falls in K-Fall\
    \ are the same as those in SisFall. However,\nin the case of ADLs, they remove\
    \ the activity of sitting in and getting out of a car\nand combine some of the\
    \ activities while adding static activities of sitting on a chair,\nsitting on\
    \ a sofa and lying down.\nA total of 2729 ADL recordings and 2346 fall\nrecordings\
    \ are present in the dataset. This dataset is included in the study to test\n\
    cross-dataset fall detection. The details of the K-Fall dataset are presented\
    \ in Table\n33.\n2.8\nExperiments\nThis section discusses the experiments conducted\
    \ for the purposes of fall detection.\nFour experiments have been performed in\
    \ this regard, first considering fall data only\n90\nTable 33. ADL and Falls present\
    \ in the K-Fall dataset.\nActivity/\nFall Code\nBrief Description\nD01\nStand\
    \ for 30 seconds\nD02\nStand, slowly bend the back with or without bending at\
    \ knees, tie shoe lace,\nand get up\nD03\nPick up an object from the floor\nD04\n\
    Gently jump (try to reach an object)\nD05\nStand, sit to the ground, wait a moment,\
    \ and get up with normal speed\nD06\nWalk normally with turn (4m)\nD07\nWalk quickly\
    \ with turn (4m)\nD08\nJog normally with turn (4m)\nD09\nJog quickly with turn\
    \ (4m)\nD10\nStumble while walking\nD11\nSit on a chair for 30 seconds\nD12\n\
    Sit on the sofa (back is inclined to the support) for 30 seconds\nD13\nSit down\
    \ to a chair normally, and get up from a chair normally\nD14\nSit down to a chair\
    \ quickly, and get up from a chair quickly\nD15\nSit a moment, trying to get up,\
    \ and collapse into a chair\nD16\nStand, sit on the sofa (back is inclined to\
    \ the support), and get up normally\nD17\nLie on the bed for 30 seconds\nD18\n\
    Sit a moment, lie down to the bed normally, and get up normally\nD19\nSit a moment,\
    \ lie down to the bed quickly, and get up quickly\nD20\nWalk upstairs and downstairs\
    \ normally (5 steps)\nD21\nWalk upstairs and downstairs quickly (5 steps)\nF01\n\
    Forward fall when trying to sit down\nF02\nBackward fall when trying to sit down\n\
    F03\nLateral fall when trying to sit down\nF04\nForward fall when trying to get\
    \ up\nF05\nLateral fall when trying to get up\nF06\nForward fall while sitting,\
    \ caused by fainting\nF07\nLateral fall while sitting, caused by fainting\nF08\n\
    Backward fall while sitting, caused by fainting\nF09\nVertical (forward) fall\
    \ while walking caused by fainting\nF10\nFall while walking, use of hands to dampen\
    \ fall, caused by fainting\nF11\nForward fall while walking caused by a trip\n\
    F12\nForward fall while jogging caused by a trip\nF13\nForward fall while walking\
    \ caused by a slip\nF14\nLateral fall while walking caused by a slip\nF15\nBackward\
    \ fall while walking caused by a slip\nand aiming to determine falls with direction\
    \ and severity. The second, third and\nfour experiments involved the inclusion\
    \ of activities of daily living classification in\naddition to the fall classes\
    \ considered in the first experiment. Moreover, experiment\nfour presents results\
    \ for a cross-dataset fall detection scenario.\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration\nThis section describes the work on fall detection\
    \ considering severity and direction\nwhile only considering sensor data for falls.\
    \ The experiment has been performed as\ntwo tasks, one for determining falls considering\
    \ direction only and the other while\nconsidering both direction as well as severity.\n\
    2.8.1.1\nData Labeling\nTo perform fall detection that is direction and severity\
    \ aware, we only considered fall\n91\ndata from the SisFall dataset. As can be\
    \ seen from Table 32, most of the falls in\nthe dataset have been labelled as\
    \ either being in the forward, backward or lateral\ndirection.\nHowever, two of\
    \ the falls (F06 and F07) are not labeled in terms of\ndirection. For the considerations\
    \ of this research work, these were assigned the labels\nof Forward and Lateral\
    \ respectively using the videos of sample trials provided by the\ndataset authors.\n\
    Concerning fall severity, while the original labels from the dataset contained\
    \ in-\nformation for most falls for direction, the approach followed by Gibson\
    \ et al. [456]\nwas used to determine the severity of falls. According to the\
    \ practice followed by\nthem, all falls where in some support was used to soften\
    \ the impact of the fall were\nconsidered as soft falls whereas all falls where\
    \ the subject fell directly were classified\nas hard falls. This resulted in six\
    \ classes for fall types with hard and soft for ima-\npact and forward, backward\
    \ and lateral for direction. These are Forward Soft Falls\n(FSF), Forward Hard\
    \ Falls (FHF), Backward Soft Falls (BSF), Backward Hard Falls\n(BHF), Lateral\
    \ Soft Falls (LSF) and Lateral Hard Falls (LHF). These labels have\nbeen summarized\
    \ in Table 34.\nTable 34. Labeling used for Fall only classification for the SisFall\
    \ Dataset\nExperiment Name\nFall\nCode\nAssigned Fall Name\nAssigned Fall Label\n\
    Direction\nF01\nForward Fall\nFF\nF02\nBackward Fall\nBF\nF03\nLateral Fall\n\
    LF\nF04\nForward Fall\nFF\nF05\nForward Fall\nFF\nF06\nForward Fall\nFF\nF07\n\
    Lateral Fall\nLF\nF08\nForward Fall\nFF\nF09\nLateral Fall\nLF\nF10\nForward Fall\n\
    FF\nF11\nBackward Fall\nBF\nF12\nLateral Fall\nLF\nF13\nForward Fall\nFF\nF14\n\
    Backward Fall\nBF\nF15\nLateral Fall\nLF\nDirection + Severity\nF01\nForward Hard\
    \ Fall\nFHF\nF02\nBackward Hard Fall\nBHF\nF03\nLateral Hard Fall\nLHF\nF04\n\
    Forward Hard Fall\nFHF\nF05\nForward Hard Fall\nFHF\nF06\nForward Soft Fall\n\
    FSF\nF07\nLateral Soft Fall\nLSF\nF08\nForward Soft Fall\nFSF\nF09\nLateral Soft\
    \ Fall\nLSF\nF10\nForward Soft Fall\nFSF\nF11\nBackward Soft Fall\nBSF\nF12\n\
    Lateral Soft Fall\nLSF\nF13\nForward Soft Fall\nFSF\nF14\nBackward Soft Fall\n\
    BSF\nF15\nLateral Soft Fall\nLSF\n92\nWindowing\nTime and Frequency\nDomain Feature\n\
    Computation\nRF-RFE Feature\nSelection\nFeature\nExtraction and\nFeature Selection\n\
    Classification\nData\nPreprocessing\nPeak SMV Detection\nOutput Class \n(FF, BF,\
    \ LF) \n(FHF, FSF, BHF, BSF, LHF, LSF)\nIMU Recording (Falls) \n(FF, BF, LF) \n\
    (FHF, FSF, BHF, BSF, LHF, LSF)\nSVM Classifier\nFigure 17. Fall Detection with\
    \ Direction and Severity.\n2.8.1.2\nMethodology\nThe methodology used for this\
    \ experiment follows a typ-\nical machine learning pipeline as shown in Figure\
    \ 17. First, we pre-process the data\nwhich involves extraction of sensor segments\
    \ representing falls. This is followed by\nfeature extraction that aims to extract\
    \ useful representations from the accelerometer\nand gyroscope sensor data. Lastly,\
    \ feature selection is carried out where we aim to\nreduce the number of features\
    \ used in the last stage that is classification.\nData Pre-processing\nRecordings\
    \ in the SisFall dataset vary in length between 12 and 100 seconds. The\ntrial\
    \ recordings for falls in the SisFall dataset consist of subjects performing various\n\
    activities before experiencing the fall. For a sound feature extraction process,\
    \ we\nextract equal duration segments of sensor readings from these trials that\
    \ represent\nthe fall taking place along with some part of the pre-fall activity\
    \ being performed.\nTo do this, for each record we first calculate the acceleration\
    \ magnitude (also called\nthe Signal Magnitude Vector (SMV) ) [430] for all sensor\
    \ value samples within a trial\nrecording. The SMV can be calculated as given\
    \ in Eq.1.\nSMVj =\nq\f\fAxj\n\f\f2 +\n\f\fAyj\n\f\f2 +\n\f\fAzj\n\f\f2\n(1)\n\
    93\nwhere SMVj represents the SMV value for a sample j in a given trial. The SMV\n\
    is calculated for all samples and the sample location for the SMV peak value is\n\
    determined within the trial. This is then used as the midpoint for extracting\
    \ a 2.5\nsecond segment from the trial. A segment length of 2.5 seconds was chosen\
    \ as it was\nvisually found to capture all the falls as well as some part of the\
    \ pre-fall activity being\nperformed. Using this scheme, segments were extracted\
    \ for all the fall trials in the\ndataset.\nThere are a total of 1798 fall samples\
    \ in the dataset, after the labeling used, there\nwere a total of 838 samples\
    \ for the forward fall category, 360 samples for the backward\nfall category and\
    \ 600 samples for the lateral fall category. Sample waveforms for the\nthree directions\
    \ of falls and three severity levels have been shown in Appendix A.\nFeature Extraction\n\
    Feature extraction is used to convert inputs in to more useful representations.\
    \ In\nthis experiment, we take cue from the work of [420, 470] who use various\
    \ time and\nfrequency domain features successfully for fall detection and recognition\
    \ of activities\nof daily living. Table 35 lists the features computed for each\
    \ extracted segment. Each\nof these features have been computed for every axis\
    \ of the considered accelerometer\nand gyroscope sensor measurements.\nTable 35.\
    \ Features computed for each fall segment\nDomain\nFeatures Computed\nTime\n25th\
    \ Percentile\n75th Percentile\nDelta\nInterquartile range\nKurtosis\nMean\nMedian\n\
    Maximum\nMinimum\nSkewness\nStandard Deviation\nVariance\nFrequency\nPower Spectral\
    \ Entropy\nPower Spectral Density Mean\nPower Spectral Density Median\nPower Spectral\
    \ Density RMS\nPercentiles (25th Percentile, 75th Percentile) and Interquartile\
    \ Range\nFor a set of numerical values X ordered in arranged ascending order,\
    \ the ith percentile\nis defined as the number n below which i percent of the\
    \ total numbers of X fall below\nit. Therefore, the 25th Percentile (also called\
    \ the First Quartile) is the number in X\nbelow which exactly 25% of the values\
    \ fall. Similarly, 75th Percentile (also called\nthe Third Quartile) is the number\
    \ in X below which exactly 75% of the values fall.\nAnother important quantity\
    \ concerning percentiles is the Interquartile Range (IQ\n94\nRange), also called\
    \ the Midspread. The IQ Range is the difference between the 75th\nPercentiles\
    \ and the 25th Percentiles.\nDelta\nThe Delta represents the difference between\
    \ the minimum and maximum\nvalue of a set of numeric values X.\nKurtosis\nIt’s\
    \ a metric for how much a distribution’s tails diverge from that of\na normal\
    \ distribution. A large Kurtosis values indicates to larger extremity of the\n\
    divergences which can be thought of as outliers. The Kurtosis for a set of numerical\n\
    values X can be calculated as given in Eq. 2.\nKurtosis(X) =\n1\nNσ4\nN\nX\ni=1\n\
    (xi − µ)4\n(2)\nMean\nFor a set of values X, the arithmetic mean or the average\
    \ returns the\ncenter value of X. Mathematically it is given in Eq. 3.\nMean(X)\
    \ =\nPN\ni=1 xi\nN\n(3)\nMedian\nFor a set of values X, the median indicates to\
    \ the central tendency of\nX. It divides a set of values in to two equal parts.\
    \ For a set X of size N arranged in\nascending order, the median can be calculated\
    \ as in Eq. 4.\nMedian(X) = X[N + 1\n2\n]\n(4)\nMaximum\nFor a set of values X,\
    \ the maximum value represents the largest\nvalue in the set X.\nMinimum\nFor\
    \ a set of values X, the minimum value represents the smallest\nvalue in the set\
    \ X.\nSkewness\nThe Skewness measures the lack of symmetry in the probability\
    \ dis-\ntribution of data around its mean. It is calculated as in Eq. 5.\nSkewness(X)\
    \ =\n1\nNσ3\nN\nX\ni=1\n(xi − µ)3\n(5)\nStandard Deviation and Variance\nThe Standard\
    \ Deviation measures the\nvariation of a set of numerical values around its mean.\
    \ For a set of numerical values\nX, the standard deviation can be calculated as\
    \ in Eq. 6.\n95\nStd(X) =\nsPN\ni=1(xi − µ)2\nN\n(6)\nwhere µ is the Mean of X.\
    \ The Variance of X is the square of the Standard\nDeviation.\nPower Spectral\
    \ Density\nThe Power Spectral Density (PSD) is an indication\nto the power content\
    \ of a signal with respect to its frequency. It therefore helps to\nunderstand\
    \ the distribution of power in the signal for the different frequencies that\n\
    comprise it. The PSD has been computed using the Welch method [471]. Once the\n\
    PSD has been computed, the mean, median and Root Mean Squared (RMS) values\nof\
    \ the PSD are computed.\nPower Spectral Entropy\nThe Power Spectral Entropy (PSE)\
    \ is a measure of\nthe entropy in the power spectrum of a signal and indicates\
    \ to the complexity present\ntherein. It is computed as an entropy calculation\
    \ on the normalized PSD estimate.\nSimilar to the PSD computation, the Welch method\
    \ was used to estimate the PSD\nbefore PSE calculations were performed.\nThe aforementioned\
    \ quantities were computed for all windowed samples of the fall\nrecordings. In\
    \ total, this resulted in 96 features being computed for each segment.\nBefore\
    \ these features are passed on to the next stage, normalization was performed\n\
    feature wise for each sensor.\nFeature Selection\nFeature selection is an important\
    \ step in the machine learning pipeline. It not only\nhelps to reduce the feature\
    \ set size used in an application which helps computationally\nbut may also result\
    \ in performance improvement as observed by [472]. Feature se-\nlection is performed\
    \ using Random Forest Recursive Feature Elimination (RF-RFE)\n[473] which involves\
    \ determining the importance of features by eliminating features\niteratively\
    \ and looking at classifier performance. It starts by developing a model us-\n\
    ing all the available features within the dataset, in every iteration, the feature\
    \ that\nhas the ’least importance/contribution’ is discarded and a new model is\
    \ fitted with\nthe remaining features. This process is carried out until a pre-decided\
    \ number of\nfeatures remain. Since in this work, our goal is to reduce the number\
    \ of features\nfrom the original count, we perform manual tests by establishing\
    \ a baseline for the\nperformance of our models. The baseline is formed by using\
    \ all features for each\nof our classification tasks and using the highest weighted\
    \ F1-score achieved as the\nperformance goal cut-off for the reduction of features.\
    \ This step will ensure that we\natleast get the same performance as the original\
    \ feature set.\nClassification\nClassification refers to the usage of a classification\
    \ algorithm, also called a classifier\n96\nto determine the output ’label’ or\
    \ category given a set of input values called features.\nIn the current setting,\
    \ the classification problem is a supervised one wherein the\nclassifier is provided\
    \ inputs and their corresponding output labels which allow it\nto learn the relationship\
    \ between the input and the output.\nOnce this mapping\nhas been sufficiently\
    \ learned (a process called training) the trained classifier can\nbe provided\
    \ unlabeled inputs for it to predict an output label value or class. The\nefficacy\
    \ of the classifier in predicting the correct output is measured through various\n\
    metrics such as accuracy, precision, recall, F1-score etc. This experiment consists\
    \ of\ntwo classification experiments being performed, one is the direction only\
    \ experiment\nwhere the classifiers used are trained to distinguish between the\
    \ three direction of falls\ngiven the input feature set and another experiment\
    \ where the classifiers are trained\nto determine fall directions and severity\
    \ together.\nFour different classifiers were tested to perform these tasks, these\
    \ are the Random\nForest Classifier, Support Vector Machines, Decision Trees and\
    \ Extreme Gradient\nBoost (XGBoost). All of the classifiers were trained using\
    \ five fold cross validation\nwith a stratified split and a parameter search being\
    \ performed for tuning purposes.\nSupport Vector Machines\nSupport Vector Machine\
    \ is a supervised learning\nalgorithm that, in its simplest form tries to fit\
    \ a line in between data samples of two\ndifferent classes to separate them. The\
    \ criteria used by the SVM to fit this line is\nthe maximization of the distance\
    \ between the line and the (data) points closest to it.\nThis concept of using\
    \ a line to separate two dimensional data can be extended to two\ndimensional\
    \ planes being used for separating three-dimensional data and hyperplanes\nfor\
    \ higher dimensional data. SVMs are quite flexible in that they can not only be\
    \ used\nto work with linearly separable data but also with data that is not linearly\
    \ separable.\nThis is achieved using Kernel functions which map the nonlinearly\
    \ distributed data\nin to a higher dimensional space to make it linearly separable\
    \ (as much as possible).\nThere are several kernel functions available to be used\
    \ for this purpose such as the\nhyperbolic tangent, radial basis, sigmoid, polynomial\
    \ etc. Optimizing the SVM re-\nquires the tuning of the cost parameter C, a small\
    \ value of C indicates an underfit\nwhereas a very large value of C indicates\
    \ an overfit.\nEven though, the current experiment considers using SVMs for a\
    \ classification\ntaks, it should also be mentioned that SVM’s are not limited\
    \ to application towards\nclassification problems and they have also been used\
    \ for regression applications too.\nDecision Tree\nDecision Trees are one of the\
    \ most widely used classification\nalgorithms due to their interpretability. The\
    \ aim of the algorithm is to come up with\nas simple a solution as possible while\
    \ successively dividing the data in to simpler and\nsimpler classification tasks\
    \ based on the values of the features. For a classification\nproblem, given a\
    \ set of input features of the training set, decision trees use the values\nof\
    \ the features to divide or split the dataset in to more simpler sub problems.\
    \ The\naim being to get the largest information gain when choosing the feature/s\
    \ for the\nsplit. Each split point in a decision tree is called a node and each\
    \ split is called a\nbranch. Branches from a given node represent all the possible\
    \ outcomes from that\n97\nnode and may contain subsequent decision nodes as well\
    \ which are called child nodes.\nEach branch ends at a node called the leaf node\
    \ where data points are assigned a\nclass label.\nDepending on the number of input\
    \ features and the output classes, decision trees\ncan be built to classify the\
    \ dataset in a ’complete’ manner due to its iterative parti-\ntioning scheme.\
    \ However, this is undesirable since that would lead to overfitting of the\nmodel\
    \ and also because such trees would lead to a complicated model, which is not\n\
    desirable since that would impact interpretability. The process of removing branches\n\
    and replacing them by leaf nodes is called pruning. Pruning aims to increase the\n\
    models generalizations capabilities and increase robustness. Two paramters which\n\
    are used for this purpose are tree depth limits the number of child nodes present\
    \ in\nevery branch and the number of features used at each split.\nRandom Forest\
    \ Classifier\nRandom forest is a bagging approach towards de-\ncision trees where\
    \ instead of deciding on where to split for each node, for each tree\na random\
    \ subset of features is used and the feature/threshold to split the data is\n\
    determined within that subset of features to separate the data in the best manner\n\
    possible. This process is repeated multiple times which results in various trees\
    \ pro-\nducing possibly different predictions. The predictions from each tree\
    \ are combined\nto form an ensemble either through majority voting or by averaging.\
    \ The imple-\nmentation of Random Forests used in this work uses the averaging\
    \ approach. There\nare several parameters that are important in the tuning of\
    \ Random Forests are the\nnumber of trees created before the averaging process\
    \ starts, the number of levels in\neach tree and more.\nExtreme Gradient Boost\n\
    Extreme Gradient Boost is another ensemble based\ntree algorithm, however compared\
    \ to the RFC, XGBoost uses boosting instead of\nbagging. In boosting, the input\
    \ samples are uniformly weighted and first a ’weak’\nlearner (classifier) is created\
    \ for a given task that doesnt perform well but is sufficient\nin the sense that\
    \ it is better than random guessing. In subsequent iterations of the\nlearner,\
    \ input samples which werent classified correctly by the learner are reweighted\n\
    by assigning larger weights to them while the weights for correctly classified\
    \ inputs\nis reduced. This step is repeated for a number of times with different\
    \ weak learners\nbeing trained.\nThe decision of the weak learners are combined\
    \ through majority\nvoting to determine the output class. Parameters used to tune\
    \ XGBoost are the\nmaximum depth allowed in each tree, the weight settings etc.\n\
    2.8.1.3\nResults\nAs mentioned previously, two separate experiments were conducted,\
    \ first was to dif-\nferentiate between fall directions only and the other to\
    \ differentiate between fall\ndirection as well as severity. The results from\
    \ those experiments are presented here.\nThe metrics considered for judging model\
    \ quality is the F1-score. The F1-score is the\nharmonic mean of the precision\
    \ and recall and is given as in Eq. 7.\n98\nF1 Score = 2 ∗ (Precision ∗ Recall)\n\
    Precision + Recall\n(7)\nwhere Precision is the ratio of the True positive samples\
    \ divided by the sum of the\nTrue positive and False positive samples as given\
    \ in Eq. 8. It is also called positive\npredictive value as it indicates to the\
    \ capability of the classifier to identify correctly\nthe samples of a given class.\n\
    Precision =\nTrue Positive\nTrue Positive + False Positive\n(8)\nand recall indicates\
    \ to the models capability to identify the samples of a given\nclass over the\
    \ whole dataset. It is also called the sensitivity and is the ratio of the\nTrue\
    \ positives to the sum of the True positives and False Negatives as shown in Eq.\n\
    9.\nRecall =\nTrue Positive\nTrue Positive + False Negative\n(9)\nWe report on\
    \ the F1-scores for each class when discussing classification perfor-\nmance and\
    \ deciding on the best classifier. Moreover, for the best classifier identified\n\
    the precision and recall have also been provided.\nFall direction\nIn this experiment,\
    \ fall segments labeled for direction only were used as input to the\nclassifiers.\
    \ To establish a baseline to be used as a reference in the feature selection\n\
    process, all computed features (96 in total) were passed to the four classifiers.\
    \ The\nbest performing model was found to be the SVM with a weighted F1-score\
    \ of 90.4%.\nFeature selection was then performed keeping in view baseline performance\
    \ of the\nSVM classifier so as to retain or improve this performance baseline\
    \ when choosing a\ngiven number of ’top’ features. Following this rule, feature\
    \ selection resulted in 90\nfeatures. The results are given in Table 36. It can\
    \ be observed from the table that\nthe SVM has outperformed the other algorithms\
    \ in detecting forward and lateral falls\nwhereas it achieves a slightly lower\
    \ F1-score for the backward fall class. Overall the\nSVM has shown to be better\
    \ at discriminating falls with direction.\nTable 36. Fall F1-scores (Fall direction\
    \ only)\nFall\nClassifier (F1-score %)\nSVM\nDT\nRFC\nXGBoost\nBF\n96.05\n92.22\n\
    96.59\n96.63\nFF\n92.67\n83.60\n90.10\n89.49\nLF\n88.67\n71.78\n85.63\n84.35\n\
    Average\n92.46\n82.53\n90.77\n90.15\n99\nFall direction and severity\nIn this\
    \ experiment, fall segments from the dataset were labeled for direction and\n\
    severity based on the labeling shown in Table 34 and passed to each of the classifiers\n\
    after feature selection. Like before, to establish a baseline, all computed features\
    \ (96\nin total) were passed to the four classifiers. The best weighted F1-score\
    \ of 78.44% was\nachieved by the SVM classifier. We used this value as the baseline\
    \ we aim to achieve\nafter feature selection. With this condition the number of\
    \ features were reduced to\n93. The performance achieved for each of the four\
    \ tested classifers is summarized in\nTable 37. It can be observed that the SVM\
    \ is the best performing classifier for all fall\ntypes bar FHF where the random\
    \ forest classifer achieves a slightly higher F1-score.\nThe highest F1-score\
    \ overall is achieved for the class BSF where as the lowest has\nbeen achieved\
    \ for LHF. When looking at fall direction, falls in the forward direction\ncan\
    \ be seen to be the hardest to identify followed by lateral falls. No such pattern\n\
    can be noted for soft/hard falls.\nTable 37. Fall F1-scores (Fall severity and\
    \ direction)\nFall\nClassifier (F1 Score %)\n[]\nSVM\nDT\nRFC\nXGBoost\nBHF\n\
    87.27\n50.00\n69.39\n66.67\nBSF\n95.08\n77.88\n88.33\n85.47\nFHF\n72.43\n54.02\n\
    75.56\n67.04\nFSF\n73.25\n50.60\n67.57\n58.93\nLHF\n66.67\n29.85\n35.90\n50.00\n\
    LSF\n84.65\n62.24\n75.17\n75.69\nAverage\n79.89\n54.10\n68.65\n67.30\n2.8.1.4\n\
    Discussion\nTo summarize the results from both experiments, we present the individual\
    \ F1-\nscores, Precision and Recall for the best performing classifier in each\
    \ case. These\nhave been presented in Table 38 and Table 39.\nTable 38. Best Results:\
    \ Fall direction\nFall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBF\n94.44\n97.70\n\
    96.05\nFF\n93.33\n92.02\n92.67\nLF\n88.67\n88.67\n88.67\nAverage\n92.16\n92.80\n\
    92.46\nIn both cases the best performing classifier was the SVM. This is inline\
    \ with\nthe findings of other research work as found from the literature review\
    \ [424, 429].\nA surprising outcome during this work was the unsatisfactory performance\
    \ of tree\nbased algorithms contrary to [420], we attribute this to the difference\
    \ in the data\nsegmentation scheme and also the fact that we follow different\
    \ labelling for the data\n100\nTable 39. Best Results: Fall direction and Severity\n\
    Fall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBHF\n80.00\n96.00\n87.27\nBSF\n\
    96.67\n93.55\n95.08\nFHF\n74.44\n70.53\n72.43\nFSF\n74.17\n72.36\n73.25\nLHF\n\
    60.00\n75.00\n66.67\nLSF\n85.00\n84.30\n84.65\nAverage\n78.38\n81.96\n79.89\n\
    in terms of a direction and severity aware system. Moreover, the final weighted\
    \ F1-\nscores for the fall direction experiment was 92% and for the fall direction\
    \ and severity\nwas 79.53% which resulted in an improvement of just above 1% in\
    \ both cases with a\nsmall reduction in the number of features utilized, 90 and\
    \ 93 respectively compared to\n96 in the original feature set. Commenting on the\
    \ direction, the hardest to predict fall\nwas in the lateral direction and the\
    \ classifier incorrectly predicted forward falls and\nlateral falls in both the\
    \ scenarios tested. This highlights the difficulty in capturing\nthe difference\
    \ between these two fall directions using the features considered.\n2.8.2\nFall\
    \ Detection with Severity and Direction along with ADL consid-\neration using\
    \ Wavelet Pooling and K-NN\nThis section provides a framework for a fall and activity\
    \ recognition system. It aims\nto determine an appropriate sensor modality to\
    \ use and the window size to be used\nfor the task. The framework does this as\
    \ a problem of differentiating between various\nactivities of daily living as\
    \ well as various types of falls with regard to fall datection\nbeing direction\
    \ and severity aware. To do this, data from the SisFall dataset is used\nand after\
    \ suitable pre-processing and feature extraction, machine learning algorithms\n\
    are utilized to differentiate between different activities of daily living and\
    \ falls\n2.8.2.1\nData Labeling\nSince we aim to perform activity recognition\
    \ and fall detection with direction and\nseverity, the ADL labeling of the original\
    \ dataset has been modified. This labeling\nhas been shown in Table 40. As can\
    \ be observed from Table 40, the activities Walking\n(W), Jogging (J), Sitting\
    \ (S) and Standing (SB) have been considered for this work\nwhich are typical\
    \ activities in ADL detection problems. Each of these labels includes\ndata from\
    \ multiple original activities, for e.g. activities with original labels of walking\n\
    upstairs and downstairs, walking slowly and walking quickly have been considered\
    \ as\nwalking in this work. A similar scheme has been used for the other three\
    \ activity\nlabels as well. Some of the activities such as being on one’s back\
    \ change to lateral\nposition, wait a moment, and change to one’s back (D14),\
    \ getting in and out of the\ncar (D17), stumble while walking (D18), and gently\
    \ jumping without falling while\ntrying to reach a high object (D19) have not\
    \ been considered. The reason for this\nis that they have very few samples to\
    \ be considered as standalone activities (only\none type of sub-activity and also\
    \ because most of these are not considered in typical\n101\nADL detection scenarios).\
    \ For falls, the labeling same as that for the direction and\nseverity experiment\
    \ has been retained.\nTable 40. ADL Labels used for SisFall Recordings.\nActivity\
    \ Code\nAssigned Activity Name\nAssigned Activity Label\nD01\nWalking\nW\nD02\n\
    Walking\nW\nD03\nJogging\nJ\nD04\nJogging\nJ\nD05\nWalking\nW\nD06\nWalking\n\
    W\nD07\nSit\nS\nD08\nSit\nS\nD09\nSit\nS\nD10\nSit\nS\nD11\nSit\nS\nD12\nSit\n\
    S\nD13\nSit\nS\nD14\n-\n-\nD15\nStanding\nSB\nD16\nStanding\nSB\nD17\n-\n-\nD18\n\
    -\n-\nD19\n-\n-\n2.8.2.2\nMethodology\nFigure 18 shows the methodology for this\
    \ work with individual parts being elab-\norated upon in the proceeding subsections.\
    \ As can be seen, the first stage consists of\ndata preprocessing, followed by\
    \ feature extraction and then evaluation or classifica-\ntion.\nData Preprocessing\n\
    Data preprocessing for this experiment was performed in a similar manner to section\n\
    2.8.1 for most recordings. The SMV was computed for the complete recording and\n\
    windowed segments of a fixed duration were extracted.\nWindowed segments are\n\
    extracted in this manner from all considered activities in the SisFall dataset\
    \ except\nthe activities of D01, D02, D03 and D04 which consist of a single trial\
    \ per subject of\nduration 100s. In such cases, continuous windowed segments of\
    \ duration n seconds\nare extracted from the recordings. It is also pertinent\
    \ to mention here that since\nboth accelerometers are placed at the same position,\
    \ we only consider one of the\naccelerometers along with the gyroscope readings\
    \ present in the recorded trials. To\ndetermine the value of n as well as the\
    \ appropriate sensor modality to use for the\nfinal system, experiments were performed\
    \ on the developed framework and the results\nhave been discussed in subsequent\
    \ sections.\nFeature extraction\nIn this experiment, feature extraction consists\
    \ of two steps. The first is the use of\n102\nWindowing\nWavelet Coefficient\n\
    Extraction\nSpatial Pyramid\nPooling\nKNN Classifier ADL\nvs Fall \n(W J, S, SB,\
    \ Fall)\nKNN Classifier\nSeverity \n(HF, SF)\nKNN Classifier\nDirection \n(F,\
    \ B, L)\nFeature\nExtraction\nHierarchical\nClassification\nData\npreprocessing\n\
    Peak SMV detection\nFall ?\nOutput Class \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF,\
    \ LSF)\nDetermination of Fall type (Voting)\nYes\nNo\nIMU Recording (Falls and\
    \ Activities) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFigure 18. Hierarchical\
    \ classification scheme for ADL and Fall detection.\nwavelets [474] for performing\
    \ wavelet decomposition and then performing pooling,\nthe inspiration for this\
    \ type of feature extraction came from the work of [475].\n103\nWavelet Decomposition\n\
    Wavelets can be used for a variety of applications\nsuch as spectral analysis\
    \ where they are used to analye a signal in the time-frequency\ndomain, denoising,\
    \ compression and signal enhancement. A wavelet is a function of\nfinite duration\
    \ and has an average value of zero, an example of a mexican hat wavelet\nis shown\
    \ in Figure. 19. The width of the wavelet is called its scale and it is analogous\n\
    to frequency in an inverse manner. A large value of the scale (wider window) allows\n\
    for capturing of low frequency components of the signal whereas a small scale\
    \ value\ncaptures low frequency components.\n0\n20\n40\n60\n80\n100\n0.2\n0.1\n\
    0.0\n0.1\n0.2\n0.3\n0.4\nAmplitude\nMexican Hat Wavelet\nFigure 19. Sample Wavelet\
    \ (Mexican Hat).\nWavelets are convolved with an input signal to produce two sets\
    \ of coefficients.\nThese are called the detail and approximation coefficients.\
    \ The detail component\nrepresents the high frequency component captured by the\
    \ wavelet whereas the ap-\nproximation component represents the low frequency\
    \ part. Since the wavelet has\nonly been convolved once with the signal, these\
    \ coefficients are said to be level 1\ncoefficients. At each level, resulting\
    \ coefficients are downsampled by half to result in\na lower resolution signal.\
    \ Subsequent approximation components can be convolved\nwith the wavelet to result\
    \ in approximation and detail components for the next level\nthus forming what\
    \ is called a wavelet decomposition tree.\nTo perform wavelet decomposition, in\
    \ this experiment, we make use of the Haar\nwavelet [476] shown in Figure. 20.\
    \ Level 4 haar wavelets were computed for each of\nthe extracted segments of the\
    \ signals.\nSpatial Pooling\nThe results from the decomposition provide a large\
    \ number\nof features which would pose a problem for use in the proceeding classification\
    \ stage.\nIn order to reduce the feature dimension size, Spatial Pyramid Pooling\
    \ [477] was\nused. Spatial Pyramid Pooling is an adaptive pooling method which\
    \ was developed\nto address the issue of fluctuating input sizes in CNNs for image-based\
    \ applications,\nand it entails converting varying-size convolutional feature\
    \ maps into fixed-length\nsummarizations. These summarizations, having uniform\
    \ length can then be passed\non to the fully connected parts of the CNN where\
    \ a fixed length input is necessary.\n104\n1.0\n0.5\n0.0\n0.5\n1.0\n1.5\n2.0\n\
    1.00\n0.75\n0.50\n0.25\n0.00\n0.25\n0.50\n0.75\n1.00\nAmplitude\nHaar Wavelet\n\
    Figure 20. Haar Wavelet.\nGiven a pooling size pxp, adaptive pooling works by\
    \ dividing the input in to pxp pieces\nwhile computing the size of each piece\
    \ automatically and performing any necessary\npadding. Once these pieces are created,\
    \ a pooling operation is typically performed\n(max pooling or average pooling\
    \ for e.g.) on each of these pieces to summarize the\ninput into an output of\
    \ fixed size pxp. This results in a fixed output length for any\nsize of the input.\
    \ In this experiment, 4-2-1 1D Spatial Pyramid pooling was used\non the detail\
    \ and approximation coefficients of the wavelet decomposition of activity\nand\
    \ fall data. This process has been shown in Figure 21. Each coefficient set was\n\
    divided in to four and two parts and then max pooling was used to determine the\n\
    maximum value in these divided parts and the coefficient set as a whole.\nThese\n\
    maximum values were then concatenated together to form the seven valued output\n\
    from that coefficient set. Furthermore, the results for each coefficient set within\
    \ each\naxis were also concatenated to form the feature vector for a sensor axis\
    \ measurement.\nThis operation was performed for each axis of accelerometer and\
    \ groscope sensor\ndata with the final feature vector of 210 values consisting\
    \ of the concatenations of\nthe individual vectors for each axis. It is hypothesized\
    \ that this way local as well as\nglobal information at each level of the wavelet\
    \ coefficients can be captured. For the\nwavelet decomposition, tests were performed\
    \ with level values of 2, 3, 4, 5 and 7 and\nit was determined that level-4 produced\
    \ the best results.\nClassification\nA hierarchical classification approach is\
    \ employed to discriminate between the vari-\nous activities and falls considered\
    \ from the SisFall dataset. Hierarchical classification\ninvolves the division\
    \ of a complex taxonomic classification problem in to a set of\nsubsets that are\
    \ potentially easier to differentiate as the task becomes more localized.\nHierarchical\
    \ classifiers have been used in multiple different applications [478] where\n\
    they have been found to improve upon the performance of many flat classification\n\
    schemes. The classification framework used in this work combines hierarchical\
    \ clas-\nsification with a vote based system. The classification problem is divided\
    \ into three\nparts, each with its own classifier to indicate to the subclass\
    \ of the output. The clas-\n105\nMaxpooling Size = 4\nMaxpooling Size = 2\nMaxpooling\
    \ Size = 1\nMaxpooled Coefficients - 4\nMaxpooled Coefficients - 2\nMaxpooled\
    \ Coefficients - 1\nConcatenated cofficients for maxpooled wavelet coefficients\n\
    c1\nc2\nc3\nc4\nc5\nc6\nc7\nc8\nc9\nc10\nc11\nc12\nn Wavelet coefficients ( n\
    \ = 12 e.g.)\nMax (c1, c2, c3)\nMax (c4, c5, c6)\nMax (c7, c8, c9)\nMax (c10,\
    \ c11, c12)\nMax (c1, c2, c3, c4, c5, c6)\nMax (c7, c8, c9, c10, c11, c12)\nMax\
    \ (c1, c2, c3, c4, c5, c6,c7, c8, c9, c10, c11, c12)\nFigure 21. Example: 4-2-1\
    \ 1-D Spatial Pyramid Pooling.\nsifier in part one consists of differentiating\
    \ whether a given recording is a fall or one\nof the four considered ADLs. In\
    \ order to train this stage, the activities of Standing,\nWalking, Sitting and\
    \ Jogging along with all falls combined in to one class are passed\nto the classifier.\
    \ This dilutes the original ten-class problems in to a five-class sub\nproblem.\
    \ The output of this stage is the determination of whether a given recording\n\
    is either one of the four ADLs (Standing, Walking, Sitting or Jogging) or a fall.\
    \ If a\nrecording has been detected to be a fall, it is sent to the second and\
    \ third stages.\nThe second and third stages work in parallel on samples detected\
    \ as falls from\n106\nthe first stage in the form of a voting machine. These two\
    \ stages vote individually\non the direction and severity of the detected fall\
    \ samples. In order to train them,\nfall samples were relabeled to represent direction\
    \ and severity only and are fed to the\nclassifiers. For the direction, the classification\
    \ problem is formulated as a three-class\nproblem of determining fall directions\
    \ as being Forward, Backward or Lateral. For\nthe severity classifier, the classification\
    \ problem is formulated as a two-class problem\nof a fall being either Soft or\
    \ Hard. After a signal has passed through all necessary\nstages, the outputs of\
    \ the individual stages are combined to indicate to the activity\nor type of fall\
    \ being fed at the input.\nFour classifiers were tested for each part of the hierarchical\
    \ scheme, the classifiers\nconsidered were K-Nearest Neighbors, Support Vector\
    \ Machines, Random Forests\nand eXtreme Gradient Boosting. Parameter tuning was\
    \ performed using gradient\nsearch for each classifier over a range of values\
    \ for each parameter.\nK-Nearest Neighbor\nCompared to the SVM which attempts\
    \ to create a deci-\nsion boundary between classes on a global level, the K-NN\
    \ algorithm operates locally.\nStarting from a data point, the 1 Nearest Neigbhor\
    \ algorithm will assign each new\nsample the class of its neighbor. However, using\
    \ a single neighborhood point to assign\nnew classes may lead to erroneous classes\
    \ being assigned. Therefore, typically mul-\ntiple neighboring points are used\
    \ to determine the label for a given point. In K-NN,\n’K’ represents the number\
    \ of points used in the neighborhood to assign labels to data\nsamples. Each considered\
    \ sample is assigned the majority label within a neighbor-\nhood of K points around\
    \ it. In this manner, the K-NN algorithm is successively able\nto create a decision\
    \ boundary separating the data in to the different output classes.\n2.8.2.3\n\
    Results\nThree experiments were performed in this section. The first was to choose\
    \ the best\nclassifier to use, once that was determined. experiments were conducted\
    \ to determine\nthe observation window size and different combination of sensor\
    \ modalities. We used\nthe weighted F1-score as our training metric due to the\
    \ imbalance in the samples\nof the different classes in the data. Moreover, for\
    \ evaluation purposes, we report on\nthe individual F1-scores for each output\
    \ class and provide discussions as necessary.\nFurthermore, for the best performing\
    \ results, the Precision and Recall and Specificity\nwere also specified. Specificity\
    \ can be calculated as given in Eq. 10. It is also called\nthe True Negative Rate\
    \ and indicates to a classifiers capability to correctly detect\nsamples which\
    \ don’t belong to a given class. These metrics have been computed on\na one versus\
    \ all basis.\nSpecificity =\nTrue Negative\nTrue Negative + False Positive\n(10)\n\
    The data after the feature extraction stage was split in to a train/test partition\n\
    based on a 75/25 ratio with a parameter grid being searched through to obtain\n\
    107\ntuning parameters for maximizing the weighted F1-score while using five-fold\
    \ cross\nvalidation.\nClassifier Selection\nThis test was conducted to determine\
    \ the best classifier to use for the proceeding\nexperiments of observation window\
    \ selection and sensor modality selection. Here,\nexperiments were performed for\
    \ the considered window durations for each activity\nand the classifier which\
    \ provided the best performance overall was chosen. The mean\nF1-scores for each\
    \ output class for each classifier are shown in Figure 22. It can be\nobserved\
    \ that in general K-NN and SVM perform better compared to the ensemble\nmodels,\
    \ the RFC and XGBoost. However, since the K-NN slightly outperforms the\nSVM in\
    \ eight of the ten considered classes, we choose K-NN as the classifier for this\n\
    framework.\nBHF\nBSF\nFHF\nFSF\nJ\nLHF\nLSF\nS\nSB\nW\n0\n20\n40\n60\n80\n100\n\
    F1 Score (%)\nAverage F1 Scores for each activity\nKNN\nSVM\nRFC\nXGB\nFigure\
    \ 22. Average F1-scores for each activity for the four classifiers.\nObservation\
    \ Window Duration\nAn important consideration in working with activity recognition\
    \ systems is to de-\ntermine the appropriate observation window size for the analysis\
    \ of sensor signals\nto accomplish the ADL recognition/fall detection task. The\
    \ size of the observation\nwindow is important as a smaller observation window\
    \ increases the response time of\nthe activity recognition/fall detection system\
    \ and it can also impact the time taken\nin the computation of features. In order\
    \ to find the best observation window size,\nwe perform experiments using five\
    \ values, 2, 3, 4, 5 and 6 seconds. The classification\nresults in terms of the\
    \ F1-score are presented in Table 41. For each case, samples\nof duration equal\
    \ to half of the observation window were extracted around the peak\nvalue of the\
    \ SMV. From the table, it can be observed that an observation window\n108\nof\
    \ size 3 seconds produces the best results for six out of the ten output classes.\
    \ It\nonly produces poorer results for the classes BHF, BSF and S, SB where window\
    \ sizes\nof 2 seconds, 6 seconds and 4 seconds respectively perform better than\
    \ the 3 second\nwindowing case. Upon further investigation of this phenomenon\
    \ using the result of\nother classifiers, it was observed that the activities\
    \ of (BHF and BHF) were best rec-\nognized by all the classifiers with a window\
    \ size of 2 seconds (for the case of K-NN,\nthere is a small difference between\
    \ the 2 second and 6 second case), for the other two\nactivities of S and SB too\
    \ the F1-score was obtained for the 4 second duration (for\nthe activity S, the\
    \ difference in performance over windows larger than 4 seconds is\nvery small).\
    \ This could be attributed to the feature aggregation process in the max\npooling\
    \ operation in the different spatial segments.\nTable 41. Performance for different\
    \ observation window sizes.\nActivity/Fall\nObservation Window Size (F1-score\
    \ [%])\n2 sec\n3 sec\n4 sec\n5 sec\n6 sec\nBHF\n86.79\n83.02\n79.25\n83.64\n85.19\n\
    BSF\n92.17\n90.76\n89.08\n90.76\n93.22\nFHF\n78.53\n80.47\n78.32\n79.21\n78.83\n\
    FSF\n73.39\n77.18\n72.5\n76.83\n76.79\nLHF\n52.83\n67.8\n62.75\n59.26\n58.62\n\
    LSF\n79.69\n82.73\n77.57\n81.46\n79.41\nJ\n97.53\n98.27\n98.08\n98.00\n98.16\n\
    S\n95.27\n96.20\n97.60\n95.84\n95.93\nSB\n87.29\n85.71\n91.98\n90.61\n91.71\n\
    W\n98.08\n98.46\n98.12\n98.35\n98.16\nAverage\n84.16\n86.68\n84.52\n85.40\n85.60\n\
    Sensor Modality\nThe second experiment in designing the proposed system is the\
    \ determination of\nthe best sensor modality to use.\nUsing a single sensor would\
    \ result in less data,\nfaster processing and reduced hardware costs compared\
    \ to the multisensor approach\ncombining accelerometer and gyroscope. To do this,\
    \ the classification framework was\ntested with 3 second windowed segments of\
    \ the combined acceleromter and gyroscope\ndata as well as data of the accelerometer\
    \ and gyroscope sensors individually. The\nresults of this experiment are presented\
    \ in Table 42. It can be observed that using\na combination of both accelerometer\
    \ and gyroscope data together produces the best\nresults for eight of the ten\
    \ output classes. An accelerometer-only system produces\nbetter results for the\
    \ detection of activity SB and the fall FHF. The outcome of this\nexperiment agrees\
    \ with previous work for fall detection by Waheed et. al. [436] on\nthe SisFall\
    \ dataset.\n2.8.2.4\nDiscussion\nTable 43 reports on the best results obtained\
    \ for the proposed classification frame-\nwork. These results were achieved by\
    \ using windowed segments of 3 seconds and\n109\nTable 42. Performance for different\
    \ sensing modalities.\nActivity/Fall\nSensing Modality (F1-score [%])\nAccelerometer\
    \ + Gyroscope\nAccelerometer\nGyroscope\nBHF\n83.02\n67.92\n82.14\nBSF\n90.76\n\
    85.48\n78.18\nFHF\n80.47\n83.33\n71.17\nFSF\n77.18\n73.21\n63.96\nJ\n98.27\n97.79\n\
    95.59\nLHF\n67.80\n54.55\n55.56\nLSF\n82.73\n76.34\n73.21\nS\n96.20\n95.61\n91.17\n\
    SB\n85.71\n86.21\n76.09\nW\n98.46\n98.24\n96.30\nAverage\n86.06\n81.87\n78.33\n\
    combined data from the accelerometer and the gyroscope with a weighted F1-score\n\
    of 94.67% on the test set.\nTable 43. Best Results (Obs. Window : 3 sec, Sensing\
    \ Modality: Acc. + Gyro.)\nActivity/Fall\nPrecision (%)\nSensitivity/Recall (%)\n\
    Specificity (%)\nF1-Score (%)\nBHF\n95.65\n73.33\n99.96\n83.02\nBSF\n91.53\n90.00\n\
    99.80\n90.76\nFHF\n86.08\n75.56\n99.57\n80.47\nFSF\n76.86\n77.50\n98.88\n77.18\n\
    LHF\n68.97\n66.67\n99.65\n67.80\nLSF\n79.85\n85.83\n98.96\n82.73\nJ\n97.87\n98.68\n\
    99.36\n98.27\nS\n95.00\n97.44\n99.31\n96.20\nSB\n93.75\n78.95\n99.80\n85.71\n\
    W\n97.95\n98.97\n98.36\n98.46\nAverage\n88.35\n84.29\n99.37\n86.06\nFrom Table\
    \ 43, the best recognized ADLs are W and J whereas the best rec-\nognized fall\
    \ is BSF. The worst performing class in ADLs is SB whereas the worst\nperforming\
    \ fall is LHF. Upon further inspection of the cause of the bad performance\nwith\
    \ LHF, looking at the confusion matrix, it was observed that LHF was most\ncommonly\
    \ confused with FSF which resulted in a reduction of the classification per-\n\
    formance for this class. On the other hand, in the case of FSF (the second worse\n\
    performing class), looking at the confusion matrix, it was observed that FSF was\n\
    confused with LSF and FHF. Furthermore, the specificity values indicate that there\n\
    has been very little mis-identification for each of the classes. When talking\
    \ about\nthe activity S, it was observed that samples from this activity were\
    \ confused with\nthe activity W which resulted in the sub-par performance of the\
    \ classifier for its\nrecognition.\n110\n2.8.3\nFall Detection with Severity and\
    \ Direction along with ADL consid-\neration using CNN-XGBoost\nThis section presents\
    \ a scheme for performing fall detection considering fall direction\nand severity\
    \ as well as activity recognition. Inertial sensor data taken from the SisFall\n\
    dataset is used to develop the methodology. Data pre-processing is first carried\
    \ out\nin terms of windowing and relabeling. Then, data augmentation is carried\
    \ out for\nclasses which do not have a sufficient number of samples. Lastly, feature\
    \ extraction is\nperformed along with classification. This work considers fall\
    \ and activity recognition\nas a holistic problem, in that different types of\
    \ falls and activities are considered\nthereby producing a more ’complete’ recognition\
    \ system for use in cyber-physical\nsystems. Moreover, towards this end, a CNN-XGBoost\
    \ combination is proposed.\n2.8.3.1\nMethodology\nThe proposed scheme follows\
    \ a typical deep learning so-\nlution framework. First, inertial sensor data from\
    \ the IMU sensors contained within\nthe SisFall dataset is pre-processed to extract\
    \ windowed segments, then data aug-\nmentation is performed for minority classes,\
    \ followed by feature extraction and then\nclassification. This has been illustrated\
    \ in Figure 23 and a discussion is provided for\neach of the steps in the proceeding\
    \ sections.\nData Pre-processing\nBefore the IMU sensor recordings can be used\
    \ for ADL and fall detection, raw sensor\nmeasurements need to be suitably processed.\
    \ In this experiment, data pre-processing\nconsists of two steps, the first is\
    \ the extraction of uniform sized windows as was\nperformed in the previous section\
    \ from the IMU recordings and the next is data\naugmentation. Since windowing\
    \ of the signals has already been discussed previously,\nonly data augmentation\
    \ is discussed here.\nData Augmentation\nThe use of deep learning methods require\
    \ a suitable\namount of data to be present for them to learn the data pattern\
    \ sufficiently well. Un-\nfortunately, due to the nature of the problem considered,\
    \ the relabeled data from the\nSisFall dataset contains a reduced amount of data\
    \ for some of the classes, especially\nfall classes and also for the ADL of Standing.\
    \ In order to alleviate this shortcom-\ning, data augmentation was employed to\
    \ increase the number of samples from these\nclasses. Three augmentations were\
    \ performed for each of the extracted recordings\nfor the classes SB, FHF, FSF,\
    \ BHF, BSF, LHFand LSF. These were the addition of\nnoise, scaling and resampling\
    \ after inerpolation [439]. For augmentation with noise,\nwhite gaussian noise\
    \ was added to the extracted windows of the considered classes.\nThe noise was\
    \ generated using a standard deviation equal to 0.01. The addition of\nthe noise\
    \ simulates measurement noise during recording which might be encountered\nwhen\
    \ IMU based fall detection systems are employed. For scale based augmentation,\n\
    the original extracted window was multiplied by a random number from the uniform\n\
    distribution between 0.8 and 1.2 thereby scaling it between 80% and 120% of its\
    \ orig-\ninal form. By doing so, changes in amplitude over the same type of activity/fall\
    \ are\nincorporated. This could indicate to a change in fixation (loosening etc)\
    \ of the sensing\n111\nPeak SMV Detection\nWindowing\nCNN\nXGBoost Classifier\n\
    Data Augmentation\nData Processing\nIMU Recording (Falls and Activities) \n(ADL,\
    \ FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\n\
    Output Class \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF,\
    \ BSF, LHF, LSF)\nFeature Extraction\nClassification\nFigure 23. CNN-XGBoost based\
    \ classification scheme for ADL and Fall detection.\nunit to a subject or their\
    \ different physique and subsequent fall intensity response.\nLastly, in order\
    \ to incorporate sampling inconsistencies, the windows are first upsam-\npled\
    \ and then downsampled. This was done by a scale of ten. With this strategy,\n\
    each from original window were produced three additional samples. An illustration\n\
    for the results of the augmentation process for an X-axis accelerometer measurement\n\
    for a lateral fall has been shown in Figure 24.\nFeature extraction\nThe aim of\
    \ feature extraction for a classification problem is to produce a representa-\n\
    tion of the input that can be better used to indicate to the output class. In\
    \ this regard,\nresearch in the area of fall detection with inertial sensors has\
    \ made use of different\ntypes of hand crafted features such as statistical, time\
    \ and frequency domain as well\nas wavelet transforms [479, 480, 481, 482]. Convolutional\
    \ Neural Networks (CNNs\nor Covnets) are a set of neural networks developed following\
    \ the visual cortex within\nthe brain [483]. CNNs perform operations on inputs\
    \ by introducing convolutions of\n112\nFigure 24.\nIllustration of data augmentation.\n\
    (X component of Accelerometer,\nLateral Fall)\nseveral filters with learnable\
    \ weights to gauge the importance of each datapoint in\nthe input. These layers\
    \ containing the filters and to which the input is provided are\ncalled convolutional\
    \ layers. Through these learnable weights, CNNs are able to cap-\nture temporal\
    \ and spatial dependencies of the input. Moreover, using the same filters\nfor\
    \ different inputs reduces the number of parameters as the weights are reused.\
    \ This\nallows CNNs to develop a deeper understanding of the provided input compared\
    \ to\ntypical multilayer perceptron models. CNNs have revolutionized the field\
    \ of computer\nvision where they have been used for a variety of tasks such as\
    \ classification, object\ndetection, segmentation and object counting [484, 485]\
    \ and they have also successfully\nbeen used for applications within the speech\
    \ and other time series signal application\ndomain [486, 487, 488]. In this experiment,\
    \ rather than using hand crafted features\n113\nas in the previous experiments,\
    \ a CNN has been used to perform feature extraction\nin order to take advantage\
    \ of the spatial and temporal dependency capturing capa-\nbilities of CNNs. CNNs\
    \ are usually comprised of several convolutional (Conv) layers.\nWithin a multilayer\
    \ CNN, the earlier Conv layers capture low level features from the\ninput with\
    \ more complex features being computed by the successive layers. Also,\nCNNs may\
    \ employ pooling layers between convolutional layers so as to reduce the\nsize\
    \ of the input passed on to successive layers and therefore reduce computation.\n\
    The proposed network along with the XGBoost classification stage is illustrated\
    \ in\nFigure 25.\nConv\n64 filters (3x1)\nConv\n64 filters (3x1)\nConv\n64 filters\
    \ (3x1)\nConv\n64 filters (3x1)\nAvg Pooling\nAvg Pooling\nAvg Pooling\nFlatten\n\
    XGB classification\nStage\nFigure 25. CNN Network for feature extraction and XGBoost\
    \ classification stage.\nAs seen from the figure, the network consists of four\
    \ Conv layers of 64 filters\neach.\nThese layers have filters of size 3x1 and\
    \ are used to extract features from\nraw inertial sensor measurements. Each Conv\
    \ layer is followed by a Relu activation\nfunction which applies a non-linearity\
    \ to the output of the Conv layers. To condense\nthe output of the first three\
    \ Conv layers, a pooling layer is utilized. Instead of max\npooling, average pooling\
    \ is used in this network. Max pooling picks out the largest\nvalue of the patch\
    \ of data being observed currently, in contrast, average pooling uses\nthe average\
    \ of the data being observed. Average pooling has been successfully used in\n\
    114\nplace of max pooling in a variety of scenarios [489, 490]. Normalization\
    \ is performed\nusing a batch normalization layer for each Conv layer. The output\
    \ of the last Conv\nlayer are feature maps derived from the input raw inertial\
    \ sensor measurements from\nboth the accelerometer and the gyroscope.\nClassification\n\
    Classification is carried out by using a eXtreme Gradient Boosting (XGBoost) clas-\n\
    sifier. The output from the CNN is first flattened and then provided as an input\
    \ to\nthe XGBoost stage. The parameters of the XGBoost classifier are tuned through\
    \ a\nparameter search over a range of values. We make use of an XGBoost classifier\
    \ due\nto its suitability for a large dimensional input which results from the\
    \ flattened CNN\noutput.\n2.8.3.2\nResults\nIn order to use the proposed CNN for\
    \ feature extraction, it must first be trained\naccordingly. In order to train\
    \ the network, a fully connected layer with a softmax\noutput was added as the\
    \ final stage to serve as the intermediate temporary output\ndeterminant stage.\
    \ The windowed data from the SisFall dataset was divided in to\nthree sets, train,\
    \ validation and test in a stratified manner. A learning rate of 0.01\nwas used\
    \ for the network with a batch size of 20 and the stochastic gradient descent\n\
    was used as the optimizer. Moreover, the metric chosen was the average of the\
    \ recall\nscores of all classes together, also called as the unweighted average\
    \ recall (UAR).\nThe recall is considered as one wants the system correctly classify\
    \ as many positive\nsamples for every class as possible. The final network was\
    \ determined using early\nstopping. The unweighted average recall (UAR) can be\
    \ computed as,\nUAR =\nk\nX\nn=0\n\x10\nTPn\nTPn+FNn\n\x11\nk\n(11)\nwhere k stands\
    \ for number of classes and TPn stands for the number of True\nPositive samples\
    \ in the nth class and FNn stands for number False Negative samples\nin the nth\
    \ class. Therefore, the average of the individual recall scores from all classes\n\
    was aimed to be maximized.\nData from the training set was provided to the CNN\
    \ network after performing data\naugmentation on the minority classes, during\
    \ training, the validation set was used\nto observe performance of the network\
    \ and determine the best performing instance.\nOnce training was finished, the\
    \ last fully connected classification layer was removed\nand replaced by an XGBoost\
    \ classification stage. To train the XGBoost stage, the\nweights of the final\
    \ best performing CNN model were loaded in to CNN layers of\nthe network and input\
    \ samples were then passed through them as before. Using the\noutput of the CNN\
    \ stage as an input for the XGBoost, a search was then carried\nout to determine\
    \ the optimal parameter values. After training of the XGBoost stage,\nthe completely\
    \ trained CNN-XGBoost model was tested using the test set.\nTwo\n115\nsets of\
    \ tests were performed, one while considering all ADLs as a single class versus\n\
    individual falls and the other considering common individual ADLs and individual\n\
    falls.\nOne ADL vs Individual Falls\nIn this experiment, all ADLs present in the\
    \ SisFall dataset were combined in to one\nclass to build a generic ADL versus\
    \ fall system. The results are presented in Table 44.\nIt can be observed from\
    \ the table that the ADL class has been detected with perfect\nrecall score. Among\
    \ the falls, the worst performance was observed for LHF with the\nbest performance\
    \ for FHF.\nTable 44. One ADL vs. Individual Falls.\nActivity/ Fall\nPrecision\n\
    (%)\nSensitivity/\nRecall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n91.67\n\
    100\n95.65\nBSF\n100\n95.83\n100\n97.87\nFHF\n85.37\n97.22\n99.41\n90.91\nFSF\n\
    92.86\n81.25\n99.71\n86.67\nLHF\n72.73\n66.67\n99.70\n69.57\nLSF\n89.58\n89.58\n\
    99.50\n89.58\nADL\n99.54\n100\n97.78\n99.77\nAverage\n91.44\n88.89\n99.44\n90.02\n\
    Individual ADLs vs Individual Falls\nThe results of the experiment have been shown\
    \ in Table 45.\nTable 45. Individual ADLs vs. Individual Falls.\nActivity/Fall\n\
    Precision (%)\nSensitivity/Recall (%)\nSpecificity (%)\nF1-Score (%)\nBHF\n100\n\
    75.00\n100\n85.71\nBSF\n95.83\n95.83\n99.90\n95.83\nFHF\n76.19\n88.89\n99.01\n\
    82.05\nFSF\n90.24\n77.08\n99.60\n83.15\nLSF\n86.79\n95.83\n99.30\n91.09\nLHF\n\
    75.00\n75.00\n99.71\n75.00\nJ\n96.71\n96.71\n99.01\n96.71\nS\n96.77\n96.77\n99.57\n\
    96.77\nSB\n91.18\n83.78\n99.70\n87.32\nW\n97.21\n97.63\n97.77\n97.42\nAverage\n\
    90.59\n88.25\n99.36\n89.11\nAn average recall of 88.25% was observed for the experiment.\
    \ From Table 45,\nwhen looking at the recall achieved for the individual activities,\
    \ it can be observed\nthat the best recognized activities are W and J with each\
    \ achieving a recall of around\n97%. The worst performance in terms of ADLs was\
    \ achieved for the activity SB for\nwhich a recall of 83.78% was attained. Considering\
    \ the case of falls, out of the six\nfalls, the worst recall score of 75% was\
    \ achieved for BHF and LHF whereas the best\nrecall score was of 95.83% was achieved\
    \ for BSF and LSF. The fall class FSF was also\n116\nnot identified well, achieving\
    \ a recall score of 77.08%. Furthermore, as observed from\nthe table, a high value\
    \ of specificity was obtained for all ADLs and falls indicating\nto correct determination\
    \ of negative samples for each class as well. Investigating the\nperformance of\
    \ the network from the confusion matrix, it was observed that the worst\nperforming\
    \ activity SB was equally confused as S and W, this can be attributed to\nthe\
    \ fact that the SB activity includes slight bending which could lead to confusion\
    \ for\nthe classifier. For the worst performing falls, it was observed that BHF\
    \ was confused\nwith LHF and LSF whereas LHF was confused with FHF and FSF. The\
    \ confusion\nbetween the falls is apparent from plots shown in Appendix A where\
    \ BHF has very\nsimilar accelerometer signal values to these classes.\n2.8.3.3\n\
    Discussion\nInorder to better understand the performance of the network for the\
    \ various fall\ndetection types from Tables 44 and 45, the performance of the\
    \ network for fall severity\nhas been illustrated in Figure 26. It can be observed\
    \ that soft falls are better detected\ncompared to hard falls with UARs for the\
    \ individual ADL and fall experiment being\n79.63% for hard falls and that for\
    \ soft falls is 89.58%. For the one ADL and individual\nfall experiment, the difference\
    \ is less stark, being 85.18% for hard falls and 88.88%\nfor soft falls.\n60\n\
    65\n70\n75\n80\n85\n90\n95\n100\nInd ADLs/Ind Falls\nOne ADL/Ind Falls\nPerformance\
    \ for Fall Severity\nHard Falls\nSoft Falls\nFigure 26. Network performance for\
    \ different fall directions.\nFigure 27 illustrates the performance of the network\
    \ in fall detection for the three\ndirections considered for both experiments,\
    \ regardless of severity. It can be observed\nthat falls in backward and lateral\
    \ directions are determined with equal effectiveness,\nan average recall score\
    \ (UAR) of 85.42% was achieved for both cases where as for\nthe forward direction,\
    \ the UAR was 82.99%. As can be seen, there is a only a small\ndifference (3.43%)\
    \ between the achieved UARs.\n117\n60\n65\n70\n75\n80\n85\n90\n95\n100\nOne ADL/Ind\
    \ Falls\nInd ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\n\
    Backward Falls\nLateral Falls\nFigure 27. Network performance for different fall\
    \ directions.\nIn order to further test the performance of the developed CNN-XGBoost\
    \ scheme,\ntests were performed with the CNN network architecture presented in\
    \ [430].\nWe\nchoose the technique of [430] as the authors provide very good results\
    \ for fall detection\nusing the SisFall dataset using a deep learning model. The\
    \ results for the performance\nof the considered technique in comparison to the\
    \ method presented in this experiment\nis shown Table 46 and 47. The Recall scores\
    \ have been presented. It can be observed\nthat the proposed method outperforms\
    \ the work of Casilari et. al. for all classes\nexcept LHF. Moreover, there is\
    \ a large difference in the average recall achieved.\nTable 46. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n66.67\n91.67\nBSF\n64.58\n95.83\n\
    FHF\n95.83\n97.22\nFSF\n75\n81.25\nLHF\n77.78\n66.67\nLSF\n87.5\n89.58\nADL\n\
    99.31\n100\nAverage\n80.95\n88.89\nThe mean recall score achieved is 85.69% for\
    \ [430] for the individual ADLs vs\nIndividual Fall experiment compared to more\
    \ than 88% for the proposed scheme.\nIt can be observed from Table 47 that the\
    \ proposed CNN-XGBoost combination\noutperforms the work of Casilari et al. [430]\
    \ in seven out of the ten output classes\nfor recall while achieving a similar\
    \ performance for the classes of BHF, LHFand S.\n118\nTable 47. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n75.00\n75.00\nBSF\n87.50\n95.83\n\
    FHF\n80.56\n88.89\nFSF\n72.92\n77.08\nLHF\n75.00\n75.00\nLSF\n93.75\n95.83\nJ\n\
    96.30\n96.71\nS\n96.77\n96.77\nSB\n81.08\n83.78\nW\n95.04\n97.63\nAverage\n85.39\n\
    88.25\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-attention\n\
    network\nThis section presents a discussion on fall detection with severity and\
    \ direction along\nwith ADL recognition on the SisFall and the K-Fall datasets.\
    \ Two experiments were\nconducted in this regard, one with all ADLs as one class\
    \ versus the six fall types\nconsidered and another for individual ADLs and falls.\n\
    2.8.4.1\nData Labeling\nSince this experiment also uses the K-Fall dataset, the\
    \ labeling scheme for K-Fall\nis shown in Table 48. The labeling for the SisFall\
    \ dataset was retained the same\nfor the individual ADL and fall experiment.\n\
    However, for the one ADL and fall\nexperiment, all activities were labeled as\
    \ a single class ADL.\n2.8.4.2\nMethodology\nThe methodology consists of the two\
    \ steps of data preprocessing and classifi-\ncation. Data preprocessing has been\
    \ performed in the same manner as in section\n2.8.3.1. Therefore, this section\
    \ focuses on the ConvLSTM network used. The net-\nwork used in this work is illustrated\
    \ in Figure 28. It consists of four layers, the first\nof these is the ConvLSTM\
    \ layer. The ConvLSTM layer combines the properties of\nsequential learning associated\
    \ with LSTMs with the feature extraction capabilities\nof convolutional neural\
    \ networks and they have found successful use in the human\nactivity recognition/fall\
    \ detection domain [491, 492]. By replacing the simple matrix\nmultiplication\
    \ within LSTM cells by a convolutional operation, the ConvLSTM can\ncapture spatio-temporal\
    \ dependencies as opposed to the temporal only qualities of-\nfered by LSTMs.\
    \ Such spatial information is useful for the problem of fall detection\nwhere\
    \ not only the sequence contained within the recordings is important but also\n\
    the spatial information is also important to determine things like direction for\
    \ e.g.\nThe ConvLSTM layer is followed by a Self-Attention layer to incorporate\
    \ attention\n119\nTable 48. Labeling for K-Fall Dataset\nActivity Code\nAssigned\
    \ Label\nFall code\nAssigned Label\nD01\nADL/-\nF01\nFSF\nD02\nADL/SB\nF02\nBSF\n\
    D03\nADL/SB\nF03\nLSF\nD04\nADL/-\nF04\nFSF\nD05\nADL/S\nF05\nLSF\nD06\nADL/W\n\
    F06\nFSF\nD07\nADL/W\nF07\nLSF\nD08\nADL/J\nF08\nBSF\nD09\nADL/J\nF09\nFSF\nD10\n\
    ADL/-\nF10\nLSF\nD11\nADL/-\nF11\nFHF\nD12\nADL/-\nF12\nFHF\nD13\nADL/S\nF13\n\
    FHF\nD14\nADL/S\nF14\nLHF\nD15\nADL/S\nF15\nBHF\nD16\nADL/S\n-\n-\nD17\n-/ADL\n\
    -\n-\nD18\nADL/S\n-\n-\nD19\nADL/S\n-\n-\nD20\nADL/W\n-\n-\nD21\nADL/-\n-\n-\n\
    mechanism. Through the attention layer, important parts in the signal which can\n\
    help to determine the output class correctly are identified. For the current work,\
    \ a\nglobal attention mechanism which looks at the complete sequence is used.\
    \ After the\nattention layer follow two fully connected layers, one with a relu\
    \ activation function\nand the other with a softmax function to determine the\
    \ output class.\n2.8.4.3\nResults\nTwo experiments were performed in total on\
    \ the two datasets considered. The\nexperiments consisted of a fall vs ADL scenario\
    \ and another scenario in which ADLs\nwere conisdered individually to provide\
    \ a combined fall and ADL recognition system.\nThe results for each of the experiments\
    \ have been presented in this section. The\nnetwork was trained using an Adam\
    \ optimizer for 40 epochs with early stopping\nbeing used to retain the best performing\
    \ model before running it on the test set.\nAlso, during training, the network\
    \ was tasked to maximize the average recall of all\nclasses combined to ensure\
    \ that positive samples of each class were prioritized for\ncorrect detection,\
    \ however, in addition to recall, the precision, specificity and F1-\nscore have\
    \ also been reported in the results presented for the sake of completeness.\n\
    One ADL vs Individual Falls\nIn this experiment, all the ADLs were considered\
    \ a single class while the categories for\nfalls were retained as per individual\
    \ directions and severity levels. Table 49 presents\nthe results for this experiment\
    \ with the SisFall dataset for which an average recall of\n90.02% was achieved.\
    \ It can be observed that the network is able to determine ADLs\nvery well achieving\
    \ a recall of 99.93%. Considering falls, the class LHF is the worst\n120\nConvLSTM\n\
    16 filters (3x1)\nSelf Attention\nFully connected\n(Relu)\nPeak SMV Detection\n\
    Windowing\nFully connected\n(Softmax) Classifier\nData Augmentation\nData Processing\n\
    IMU Recording (Falls and Activities) \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n\
    (W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nOutput Class \n(ADL, FHF, FSF, BHF,\
    \ BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFeature Extraction\n\
    Classification\nFigure 28. ConvLSTM-attention Network.\n121\nperforming fall which\
    \ has been detected with a recall of only 68.42%. It was observed\nthat falls\
    \ from LHF were confused with forward falls and LSF. The best performing\nfall\
    \ is FHF with a recall of 98.28%.\nTable 49. Results for SisFall: One ADL vs.\
    \ Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\nRecall (%)\n\
    Specificity\n(%)\nF1-score\n(%)\nBHF\n100\n94.74\n100\n97.30\nBSF\n94.74\n94.74\n\
    99.88\n94.74\nFHF\n83.82\n98.28\n99.36\n90.48\nFSF\n94.20\n84.42\n99.76\n89.04\n\
    LHF\n81.25\n68.42\n99.83\n74.29\nLSF\n89.61\n89.61\n99.53\n89.61\nADL\n99.8\n\
    99.93\n98.96\n99.87\nAverage\n91.92\n90.02\n99.62\n90.76\nTable 50. Results for\
    \ K-Fall: One ADL vs. Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n92.00\n100\n95.83\nBSF\n\
    98.00\n96.08\n99.90\n97.03\nFHF\n82.93\n91.89\n98.63\n87.18\nFSF\n93.41\n85.00\n\
    99.4\n89.01\nLHF\n78.57\n88.00\n99.44\n83.02\nLSF\n96.97\n96.00\n99.70\n96.48\n\
    ADL\n99.45\n99.72\n98.93\n99.59\nAverage\n92.76\n92.67\n99.43\n92.59\nTable 50\
    \ presents the results for the K-Fall dataset when all ADLs are combined in\n\
    to one class. It can be observed that like the case for the SisFall dataset, the\
    \ ADLs in\nthis case have been detected very well, resulting in a recall of 99.72%.\
    \ Considering the\nperformance of falls, the best performing fall classes were\
    \ BSF and LSF for which a\nrecall of 96% was achieved. The worst performing fall\
    \ class in this case was FSF with\na recall of 85%.\nIndividual ADL vs Individual\
    \ Falls\nIn this experiment, individual ADLs were considered as separate classes\
    \ in addition\nto the six fall classes mentioned before. This exercise was carried\
    \ out to assess the\ndesigned systems performance as a combined ADL recognition\
    \ and fall detection\nsystem. The result for the SisFall dataset are presented\
    \ in Table 51. The average\nrecall achieved for this experiment using the SisFall\
    \ dataset is 91.49%.\nConsidering fall performance, it can be observed from Table\
    \ 51 that the class\nBSF is the best recognized fall, having a recall of 94.74%\
    \ with the fall LHF being\nthe worst recognized one with a recall of 73.68%. The\
    \ best recognized ADL is the\nclass W with a near perfect recall of 99.06%. The\
    \ worst recognized ADL is S with\n96.98% which is not a large difference compared\
    \ to the performance for falls. Table\n?? presents the results of the network\
    \ for the K-Fall dataset for this experiment. It\n122\nTable 51. Results for SisFall:\
    \ Individual ADLs vs. Individual Falls\nActivity/\nFall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n89.47\n89.47\n99.88\n89.47\n\
    BSF\n100\n94.74\n100\n97.30\nFHF\n86.89\n92.98\n99.51\n89.83\nFSF\n94.37\n87.01\n\
    99.75\n90.54\nLHF\n70.00\n73.68\n99.64\n71.79\nLSF\n88.89\n93.51\n99.44\n91.14\n\
    J\n98.44\n97.42\n99.53\n97.93\nS\n97.97\n96.98\n99.73\n97.47\nSB\n94.74\n90.00\n\
    99.81\n92.31\nW\n98.00\n99.06\n98.39\n98.53\nAverage\n91.88\n91.49\n99.57\n91.63\n\
    can be observed that in this case, the best performance for the fall categories\
    \ is both\nfor BSF and LSF\neach of which have a recall of 98%. The worst performing\
    \ fall is\nthe class BHF , it was observed that samples from this class were confused\
    \ with the\nclass BSF. For the case of ADLs, the best performing ADL for the K-Fall\
    \ dataset is\nSB with a recall of 97.5% with the worst being the class J.\n2.8.4.4\n\
    Discussion\nWhen comparing the performance of ADLs and falls overall for both\
    \ experiments,\nit can be observed that ADL recognition performance was much better\
    \ than the\nperformance for fall detection. For both experiments conducted, when\
    \ comparing the\nperformance of the network across datasets, the network performs\
    \ better on the K-Fall\ndataset compared to the SisFall dataset. This could be\
    \ attributed to the difference\nin the volunteer make up of the participants as\
    \ K-Fall mostly had young people\nvolunteering to perform falls whereas SisFall\
    \ contains a wide variety of age groups\nand gender make up in its volunteers.\
    \ To gather further insights in to the performance\nof the network in terms of\
    \ fall detection for the two experiments conducted across both\ndatasets, Figure\
    \ 29 illustrates the networks performance for falls for both datasets\nand experiments.\
    \ An average recall of 88.37% was achieved for the SisFall dataset\nand 91.49%\
    \ for the K-Fall dataset for the one ADL vs individual falls experiment\nand 88.57%\
    \ and 91.33% respectively for the individual ADL and individual falls\nexperiment.\
    \ It can be observed that the classes LSF, FHF and BSF were recognized\nvery well,\
    \ each achieving a recall of nearly 90% or higher. The class FHF was also\ndetected\
    \ sufficiently well, achieving an average recall of more than 86% across all\n\
    experiments. For SisFall, the least performing class was LHF and for K-Fall it\
    \ was\nBHF.\nFigure 30 investigates the performance of the network when considering\
    \ different\nfall severity levels for all the experiments. It can be observed\
    \ that soft falls have\nbeen consistently better recognized compared to hard falls.\
    \ This difference is largest\n(6%) when individual ADLs are considered as separate\
    \ classes for both datasets. For\nthe experiment where ADLs are grouped in to\
    \ a single class, there is only a slight\n123\n60\n65\n70\n75\n80\n85\n90\n95\n\
    100\nBHF\nBSF\nFHF\nFSF\nLHF\nLSF\nFall Results: Both Experiments\nSisFall One\
    \ ADL/Individual Falls\nSisFall Individual ADLs/Individual Falls\nKfall One ADL/Individual\
    \ Falls\nKfall Individual ADLs/Individual Falls\nFigure 29. Fall detection performance\
    \ for both experiments.\ndifference observed between the fall severity levels\
    \ for the K-Fall dataset whereas for\nSisFall, there is still a significant difference\
    \ of more than 5% between the detection\nof soft and hard falls.\nSisFall\nKfall\n\
    60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall One ADL/Ind Falls\nKFall One ADL/Ind\
    \ Falls\nSisFall Ind ADLs/Ind Falls\nKFall Ind ADLs/Ind Falls\nPerformance for\
    \ Fall Severity\nHard Falls\nSoft Falls\nFigure 30. Fall severity performance.\n\
    In Figure 31, the results from the experiments for fall direction have been illus-\n\
    trated. In this case, the performance of the network for tests using SisFall yield\
    \ best\nresults for falls in the backward direction with falls in the lateral\
    \ directions being\nrecognized the worst. In contrast, for the K-Fall dataset,\
    \ falls in the lateral direc-\n124\n60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall\
    \ One ADL/Ind Falls\nKfall One ADL/Ind Falls\nSisFall Ind ADLs/Ind Falls\nKfall\
    \ Ind ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\nBackward\
    \ Falls\nLateral Falls\nFigure 31. Fall direction performance.\ntion have been\
    \ detected quite well, followed by backfward falls and forward falls. In\norder\
    \ to gauge the performance of the network, the work of We et al. [459] was\nused\
    \ as a comparison as they also utilize sequential modeling in their work and cater\n\
    to non-binary fall detection as well. Table 53 and 54 presents the results for\
    \ both\nexperiments with the cases where the work of Wu et al. outperforms the\
    \ presented\nmethod highlighted. It can be observed that the presented method\
    \ outperforms the\nmethod of [459] sufficiently well. Another thing to note is\
    \ that as observed with the\nresults presented, a similar pattern of variation\
    \ was observed for both data sets with\nrespect to the two experiments in that\
    \ a degradation was observed for experiments\nfor K-Fall whereas an improvement\
    \ was observed for SisFall.\nTable 53. Comparison with State of the art (Individual\
    \ ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall (%)\n[]\nWork\
    \ of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n63.16\n94.74\n92.00\n\
    92.00\nBSF\n86.84\n94.74\n96.08\n96.08\nFHF\n77.59\n98.28\n83.78\n91.89\nFSF\n\
    76.62\n84.42\n90.00\n85.00\nLHF\n68.42\n68.42\n64.00\n88.00\nLSF\n77.92\n89.61\n\
    93.00\n96.00\nADL\n98.78\n99.93\n99.58\n99.72\nAverage\n78.48\n90.02\n88.35\n\
    92.67\n3\nConclusion\nFall detection is an important task in the field of ambient\
    \ assisted living. Towards this\nend, four experiments were performed in this\
    \ chapter. In the first experiemt, a fall\n125\nTable 54. Comparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n58.33\n\
    89.47\n76.00\n76.00\nBSF\n87.50\n94.74\n100\n98.04\nFHF\n83.33\n92.98\n91.89\n\
    95.95\nFSF\n81.25\n87.01\n89.00\n88.00\nLHF\n41.67\n73.68\n64.00\n92.00\nLSF\n\
    81.25\n93.51\n95.00\n98.00\nJ\n98.77\n97.42\n55.45\n87.13\nS\n88.71\n96.98\n81.17\n\
    90.91\nSB\n83.78\n90.00\n87.50\n97.50\nW\n96.12\n99.06\n87.30\n95.24\nAverage\n\
    80.07\n91.48\n82.74\n91.88\nTable 55. Results for the four Experiments for the\
    \ SisFall dataset (F1-Score[%])\nActivity/Fall\nExp. 1\nExp. 2\nExp. 3 (One ADL)\n\
    Exp. 3 (Ind ADLs)\nExp. 4 (One ADL)\nExp. 4 (Ind ADLs)\nBHF\n87.27\n83.02\n95.65\n\
    85.71\n97.30\n89.47\nBSF\n95.08\n90.76\n97.87\n82.05\n94.74\n97.30\nFHF\n72.43\n\
    80.47\n90.91\n75.00\n90.48\n89.83\nFSF\n73.25\n77.18\n86.67\n95.83\n89.04\n90.54\n\
    LHF\n66.67\n67.80\n69.57\n83.15\n74.29\n71.79\nLSF\n84.65\n82.73\n89.58\n91.09\n\
    89.61\n91.14\nJ\n-\n98.27\n96.71\n-\n97.93\nS\n-\n96.20\n96.77\n-\n97.47\nSB\n\
    -\n85.71\n87.32\n-\n92.31\nW\n-\n98.46\n97.42\n-\n98.53\nADL\n-\n-\n99.77\n-\n\
    99.93\n-\nOverall Average\n-\n86.06\n90.02\n89.11\n90.76\n91.63\nFall Average\n\
    79.89\n80.32\n88.38\n85.47\n89.24\n88.34\nADL Average\n-\n94.66\n99.77\n94.55\n\
    99.87\n96.56\nonly detection system that considers the direction as well as the\
    \ severity of falls was\npresented. Inertial measurement sensor data from a publicly\
    \ available dataset was\nused to carry out this task. Following a typical machine\
    \ learning pipeline, the data\nwas first preprocessed by extracting equal duration\
    \ segments from the accelerometer\nand gyroscope sensor signals based on the acceleration\
    \ magnitude. This is followed\nby the computation of various time and frequency\
    \ domain features for each of these\nsegments. The next step is feature selection\
    \ and classification which is performed by\nusing four different machine learning\
    \ algorithms popular in fall detection systems.\nFirst, a baseline performance\
    \ is established and then feature reduction is performed\naiming to maintain or\
    \ improve algorithm performance by elimination of redundant\nfeatures. It was\
    \ observed that the weighted F1-score improved slightly (by just over\n1%) for\
    \ both experiments.\nThe other three experiments considered activity of daily\
    \ living and fall detection\nsimultaneously. For the second experiment, utilizing\
    \ inertial sensor data, a hierarchi-\ncal classification framework using wavelets\
    \ and adaptive pooling was presented. To\nachieve this, inertial sensor recordings\
    \ (accelerometer and gyroscope) from the Sis-\nFall dataset were utilized and\
    \ windowed segments were extracted from each recording.\nFollowing this, a level-4\
    \ haar wavelet was used to extract wavelet coefficients from\nthese windowed segments\
    \ and then 4-2-1 1-D Spatial Pyramid pooling was used to\n126\nsummarize the output\
    \ of the wavelet feature coefficients at each approximation and\ndetail level\
    \ before the max pooled coefficients were concatenated to form the final\nfeature\
    \ vector. A hierarchical classification scheme was then used consisting of three\n\
    classification stages, one for determining individual ADLs versus a generic fall\
    \ and the\nsecond and third for fall direction and severity respectively with\
    \ both voting together\nto determine the severity and direction of a fall. Towards\
    \ this end, experiments were\nconducted to determine the most appropriate size\
    \ of the observation window as well as\nsensing modality used. It was found that\
    \ for the proposed setup, a window duration\nof 3 seconds produced the best results\
    \ while using data from both the accelerometer\nand gyroscope. In the third experiment,\
    \ Inertial Measurement Unit (accelerometer\nand gyroscope) data from the SisFall\
    \ dataset is first windowed into non-overlapping\nsegments of duration 3 seconds.\
    \ After suitable data augmentation for the minority\nclasses, the windowed segments\
    \ are passed to a Convolutional Neural Network for\nfeature extraction. The CNN\
    \ is trained to maximize the unweighted average recall\nfor the validation partition.\
    \ Once the CNN is trained, an XGBoost last stage is used\nfor classification.\
    \ Experiments conducted on the test set achieve an unweighted aver-\nage recall\
    \ of 88% for both the one ADL versus individual falls and individual ADLs\nversus\
    \ fall experiments. In comparison with other techniques used for this task, the\n\
    proposed scheme produces sufficiently better results, thereby demonstrating the\
    \ effi-\ncacy of the proposed method. Lastly, a ConvLSTM network with attention\
    \ has been\nused for detection of falls considering fall direction and severity.\
    \ Using data from the\nSisFall and the K-Fall datasets, two experiments were conducted\
    \ on inertial sensor\ndata. The first considered falls versus ADLs and the other\
    \ combined ADL recognition\nand fall detection. Results for both experiments achieved\
    \ an average recall of more\nthan 90%. The results from the cross-dataset performance\
    \ indicate to the robustness\nof the designed methodology.\nTable 55 presents\
    \ the F-1 scores for the four experiments considering fall detection\nwith direction\
    \ and severity for the SisFall dataset. For experiment 1, only the fall\ndetection\
    \ with direction and severity part has been reported. A progression can be\nobserved\
    \ in the detection of falls wherein an increase of nearly 8.5% in the average\n\
    F1-score was achieved.\n127\nCHAPTER VI\nCONCLUSION AND FUTURE WORK\n1\nConclusion\n\
    This dissertation provided a coverage of the use of Internet of Things towards\
    \ the\ndevelopment of smart communities. While doing so, the main applications\
    \ of ML/DL\nalgorithms as well as optimization algorithms were discussed and mapped.\
    \ Further-\nemore, other technological components of the IoT such as sensing,\
    \ communication,\nsecurity and privacy were also talked about. Lastly, considering\
    \ the case of smart\nhealth, specifically fall detection, experimentation and\
    \ analysis was conducted and\nthe results presented.\nIn this regard, the usage\
    \ of inertial sensor data has been very popular as they do\nnot restrict a users\
    \ movement and are also easy to deploy compared to other methods.\nFour approaches\
    \ that considered fall detection with direction and severity were pre-\nsented.\
    \ In this regard, four experiments were conducted, first was the development\n\
    of a fall only detection system whereas the other three were for a combined ADL\
    \ and\nfall system. For the other three experiments, a hierarchical and two deep\
    \ learning\nbased approaches were tested. The designed methodologies were compared\
    \ to the\nstate of the art and were found to outperform them.\n2\nContribution\n\
    The Internet of Things has spearheaded tremendous change in society by allowing\
    \ for\ncapturing measurements in different facets of our daily lives. With such\
    \ a fundamental\nimpact being made, it is pertinent that researchers commit to\
    \ analyzing the current\npenetration that IoT possesses in city operation and\
    \ also providing impetuses for\nnew and novel application development. This work\
    \ aims to address these needs by\ndiscussing the use and role of the internet\
    \ of things in smart communities.\nThe\ncontribution of the work are as follows:\n\
    1. Provide a coverage of the IoT based smart city ecosystem in terms of the tech-\n\
    nologies utilized. Discussion has been provided about the sensors, communi-\n\
    cation technologies as well as the IoT architectures that enable IoT smart city\n\
    development. Finally a review of the security and privacy issues was also dis-\n\
    cussed.\n2. Present a study of the uses of ML and DL methods for different applications\
    \ of\nsmart cities in an IoT context. To this end, the type of architecture employed\n\
    and the data source type were also covered.\n128\n3. The use of optimization algorithms\
    \ in IoT smart cities has been provided. To\nthe best of our knowledge, this is\
    \ the first comprehensive review of optimization\nalgorithms in IoT Smart Cities.\n\
    4. Considering the case of smart health, methodologies have been devised for the\n\
    novel case of fall detection with direction and severity detection. In this respect,\n\
    the performance time, frequency domain and statistical features on inertial\n\
    sensor data has been analyzed and presented.\n5. A combined activity of daily\
    \ living and fall detection framework with fall di-\nrection and severity consideration\
    \ has been discussed.\nFour approaches in\nthis regard have been presented, one\
    \ utilizing time-frequency information us-\ning wavelets along with a hierarchical\
    \ classification scheme, third a Convolu-\ntional Neural Network-eXtreme Gradient\
    \ Boost combination and the last being\na ConvLSTM has been proposed. The proposed\
    \ approaches has been shown to\noutperform the state of the art in the field.\n\
    3\nFuture Work\nThe IoT is revolutionizing development of smart city applications.\
    \ There are several\nopportunities. Some of these are listed below:\n• IoT Systems\
    \ for Smart Cities\n– A major research area is in the security and privacy of\
    \ IoT in smart cities in\nterms of encryption techniques, authentication protocols,\
    \ data anonymiza-\ntion techniques and other methods to prevent unvalidated access\
    \ to the IoT\nnetwork. As mentioned before technologies such as blockchain could\
    \ help\nintroduce access tracking and control, secure device discovery, prevention\n\
    of spoofing, data loss while ensuring that end to end encryption is also\nused.\n\
    – Of the data transfer standards developed till now for IoT, many are not\ncompatible\
    \ with each other. Work needs to be carried out in this regard to\nenable intercommunication\
    \ of sensor nodes using different protocols while\nutilizing low power, which\
    \ is imperative for sensor nodes in the network.\n– Another area to work on, is\
    \ the development of efficient storage techniques\nand low power hardware which\
    \ can reduce operational costs. From a de-\nployment perspective, decentralized\
    \ systems have been proposed as the\nbest solutions to increase reliability of\
    \ the application. Techniques such as\nfederated learning allow for decentralized\
    \ DL system deployments.\n• AI/Combinatorial Optimization in IoT Smart Cities\n\
    – The development of data fusion techniques that can make the use of het-\nerogeneous\
    \ data sources easier, intelligent data reduction/feature selection\nmethods to\
    \ ensure that redundant or ’uninteresting’ data is not part of the\n129\nAI development\
    \ pipeline. This will help in a quicker turnaround time as\nwell as improved performance\
    \ of deployments. Current methods need to be\nused as well as new ones be researched\
    \ for making ML and DL algorithms\nmore explainable to suit the various applications\
    \ in a smart city.\n– Hybrid and novel optimization methodologies (for e.g. graywolf\
    \ optimiza-\ntion [493]) which combine characteristics of multiple heuristic schemes\n\
    could potentially outperform singular methodologies.\nThere have been\nseveral\
    \ works which combine multiple optimization techniques.\n– Reinforcement learning\
    \ (RL) has the potential to provide solutions to com-\nbinatorial optimization\
    \ problems as covered in [494]. The idea is to use\nmachine learning and reinforcement\
    \ learning to get rid of human created\nheurists which may lead to optimizations\
    \ towards local optimums. Agents\ncan be trained to search for these heuristics\
    \ to automate the process.\n• Smart Health: Fall detection\n– The addition of\
    \ additional sensor modalities apart from intertial sensor\nmeasurements might\
    \ help improve performance for the worst detected\nclasses from the experiments\
    \ conducted. Various authors have incorpo-\nrated medical or pressure sensors\
    \ in their fall detection systems.\nData\nfrom these sensors can be used together\
    \ as an input to a deep learning\nnetwork. This additional information gathered\
    \ for subjects while under-\ngoing a fall could also describe valuable health\
    \ parameters that can be used\nfor diagnosis or early detection of ailments which\
    \ might be the underlying\ncause of falls.\n– Another work opportunity in the\
    \ data science domain would be the as-\nsessment of this problem considering a\
    \ data centric approach, where, in\ncontrast to a model centric approach where\
    \ the focus is on developing the\nbest model, data centric focuses on working\
    \ with data to improve applica-\ntion performance using systematic procedures\
    \ for labeling, augmentation\netc. Such systematic procedures and qualitative\
    \ data analysis would aid\nin cross-dataset algorithm deployment as well.\n130\n\
    REFERENCES\n[1]\nWorldometers, “World population forecast - worldometers,” (2019).\n\
    [2]\nH. Ahvenniemi, A. Huovila, I. Pinto-Sepp¨a, and M. Airaksinen, “What\nare\
    \ the differences between sustainable and smart cities?” Cities 60, 234–\n245\
    \ (2017).\n[3]\nUnited Nations, “About the Sustainable Development Goals - United\
    \ Na-\ntions Sustainable Development,” .\n[4]\nP. Cardullo and R. Kitchin, “Being\
    \ a ‘citizen’ in the smart city: up and\ndown the scaffold of smart citizen participation\
    \ in dublin, ireland,” Geo-\nJournal 84, 1–13 (2019).\n[5]\nJ. Desdemoustier,\
    \ N. Crutzen, and R. Giffinger, “Municipalities’ under-\nstanding of the smart\
    \ city concept: An exploratory analysis in belgium,”\nTechnological Forecasting\
    \ and Social Change 142, 129–141 (2019).\n[6]\nM. S. Khan, M. Woo, K. Nam, and\
    \ P. K. Chathoth, “Smart city and\nsmart tourism: A case of dubai,” Sustainability\
    \ (Switzerland) 9 (2017).\n[7]\nD. Wu, N. Jiang, W. Du, K. Tang, and X. Cao, “Particle\
    \ swarm optimiza-\ntion with moving particles on scale-free networks,” IEEE Transactions\
    \ on\nNetwork Science and Engineering 7, 497–506 (2018).\n[8]\nM. L. Finlayson\
    \ and E. W. Peterson, “Falls, aging, and disability,” Phys-\nical Medicine and\
    \ Rehabilitation Clinics 21, 357–373 (2010).\n[9]\nB. M. Kistler, J. Khubchandani,\
    \ G. Jakubowicz, K. Wilund, and J. Sos-\nnoff, “Peer reviewed: Falls and fall-related\
    \ injuries among us adults aged\n65 or older with chronic kidney disease,” Preventing\
    \ chronic disease 15\n(2018).\n[10]\nL. Bolton, “Preventing fall injury.” Wounds:\
    \ a compendium of clinical\nresearch and practice 31, 269–271 (2019).\n[11]\n\
    Y. K. Haddad, G. Bergen, and C. Florence, “Estimating the economic\nburden related\
    \ to older adult falls by state,” Journal of public health\nmanagement and practice:\
    \ JPHMP 25, E17 (2019).\n[12]\nC. S. Florence, G. Bergen, A. Atherly, E. Burns,\
    \ J. Stevens, and C. Drake,\n“Medical costs of fatal and nonfatal falls in older\
    \ adults,” Journal of the\nAmerican Geriatrics Society 66, 693–698 (2018).\n[13]\n\
    A. Bourke, J. O’brien, and G. Lyons, “Evaluation of a threshold-based tri-\naxial\
    \ accelerometer fall detection algorithm,” Gait & posture 26, 194–199\n(2007).\n\
    131\n[14]\nR. G. Hollands, “Will the real smart city please stand up? intelligent,\n\
    progressive or entrepreneurial?” City 12, 303–320 (2008).\n[15]\nL. G. Anthopoulos\
    \ and C. G. Reddick, “Understanding electronic gov-\nernment research and smart\
    \ city: A framework and empirical evidence,”\nInformation Polity 21, 99–117 (2016).\n\
    [16]\nZ. Khan, A. Anjum, K. Soomro, and M. A. Tahir, “Towards cloud based\nbig\
    \ data analytics for smart future cities,” Journal of Cloud Computing\n4 (2015).\n\
    [17]\nA. Koubaa, A. Aldawood, B. Saeed, A. Hadid, M. Ahmed, A. Saad,\nH. Alkhouja,\
    \ A. Ammar, and M. Alkanhal, “Smart palm: An iot frame-\nwork for red palm weevil\
    \ early detection,” Agronomy 10, 1–21 (2020). No\nML or dL used.\n[18]\nM. O’Grady,\
    \ D. Langton, and G. O’Hare, “Edge computing: A tractable\nmodel for smart agriculture?”\n\
    Artificial Intelligence in Agriculture 3,\n42–51 (2019).\n[19]\nI. Rojek and J.\
    \ Studzinski, “Detection and localization of water leaks in\nwater nets supported\
    \ by an ict system with artificial intelligence methods\nas away forward for smart\
    \ cities,” Sustainability (Switzerland) 11 (2019).\n[20]\nK. Pardini, J. J. Rodrigues,\
    \ S. A. Kozlov, N. Kumar, and V. Furtado, “Iot-\nbased solid waste management\
    \ solutions: A survey,” Journal of Sensor and\nActuator Networks 8 (2019).\n[21]\n\
    J. Dutta, C. Chowdhury, S. Roy, A. I. Middya, and F. Gazi, “Towards\nsmart city:\
    \ Sensing air quality in city based on opportunistic crowd-\nsensing,” ACM International\
    \ Conference Proceeding Series (2017).\n[22]\nF. Al-Turjman and A. Malekloo, “Smart\
    \ parking in iot-enabled cities: A\nsurvey,” Sustainable Cities and Society 49\
    \ (2019).\n[23]\nE. Shirazi and S. Jadid, “Autonomous self-healing in smart distribution\n\
    grids using multi agent systems,” IEEE Transactions on Industrial Infor-\nmatics\
    \ 3203, 1–11 (2018).\n[24]\nR. V. Andre˜ao, M. Athayde, J. Boudy, P. Aguilar,\
    \ I. de Araujo, and\nR. Andrade, “Raspcare: A telemedicine platform for the treatment\
    \ and\nmonitoring of patients with chronic diseases,” in “Assistive Technologies\n\
    in Smart Cities,” (IntechOpen London, UK, 2018).\n[25]\nP. A. Keane and E. J.\
    \ Topol, “With an eye to ai and autonomous diag-\nnosis,” npj Digital Medicine\
    \ 1, 10–12 (2018).\n[26]\nG. Trencher and A. Karvonen, “Stretching “smart”: advancing\
    \ health\nand well-being through the smart city agenda,” Local Environment 24,\n\
    610–627 (2019).\n132\n[27]\nB. R. Haverkort and A. Zimmermann, “Smart industry:\
    \ How ict will\nchange the game!” IEEE Internet Computing 21, 8–10 (2017).\n[28]\n\
    F. Tao, J. Cheng, and Q. Qi, “Iihub: An industrial internet-of-things\nhub toward\
    \ smart manufacturing based on cyber-physical system,” IEEE\nTransactions on Industrial\
    \ Informatics 14, 2271–2280 (2018).\n[29]\nP. Trakadas, P. Simoens, P. Gkonis,\
    \ L. Sarakis, A. Angelopoulos, A. P.\nRamallo-Gonz´alez, A. Skarmeta, C. Trochoutsos,\
    \ D. Calvo, T. Pariente,\nK. Chintamani, I. Fernandez, A. A. Irigaray, J. X. Parreira,\
    \ P. Petrali,\nN. Leligou, and P. Karkazis, “An artificial intelligence-based\
    \ collaboration\napproach in industrial iot manufacturing: Key concepts, architectural\n\
    extensions and potential applications,” Sensors (Switzerland) 20, 1–20\n(2020).\
    \ Ni as this is about architecture of AI in to Smart industry.\n[30]\nJ. Wan,\
    \ J. Yang, Z. Wang, and Q. Hua, “Artificial intelligence for cloud-\nassisted\
    \ smart factory,” IEEE Access 6, 55419–55430 (2018).\n[31]\nY. Huang, Z. Dang,\
    \ Y. Choi, J. Andrade, and A. Bar-ilan, “High-precision\nsmart system on accelerometers\
    \ and inclinometers for structural health\nmonitoring: development and applications,”\
    \ in “2018 12th France-Japan\nand 10th Europe-Asia Congress on Mechatronics,”\
    \ (IEEE, 2018), pp. 52–\n57.\n[32]\nS. G. Farag, “Application of smart structural\
    \ system for smart sustainable\ncities,” in “2019 4th MEC International Conference\
    \ on Big Data and\nSmart City (ICBDSC),” (2019), pp. 1–5.\n[33]\nY. Wang, S. Ram,\
    \ F. Currim, E. Dantas, and L. A. Sab´oia, “A big data\napproach for smart transportation\
    \ management on bus network,” IEEE\n2nd International Smart Cities Conference:\
    \ Improving the Citizens Qual-\nity of Life, ISC2 2016 - Proceedings pp. 0–5 (2016).\n\
    [34]\nA. Lele, “Internet of things (iot),” Smart Innovation, Systems and Tech-\n\
    nologies 132, 187–195 (2019).\n[35]\nP. Mell and T. Grance, “The nist-national\
    \ institute of standars and\ntechnology- definition of cloud computing,” NIST\
    \ Special Publication 800-\n145 p. 7 (2011).\n[36]\nJ. B.-M. Numhauser, “Fog computing\
    \ introduction to a new cloud evolu-\ntion,” University of Alcal´a (2012).\n[37]\n\
    M. Aazam, S. Zeadally, and K. A. Harras, “Fog computing architecture,\nevaluation,\
    \ and future research directions,” IEEE Communications Mag-\nazine 56, 46–52 (2018).\n\
    [38]\nH. El-Sayed, S. Sankar, M. Prasad, D. Puthal, A. Gupta, M. Mohanty,\nand\
    \ C. T. Lin, “Edge of things: The big picture on the integration of\nedge, iot\
    \ and the cloud in a distributed computing environment,” IEEE\nAccess 6, 1706–1717\
    \ (2017).\n133\n[39]\nA. Yousefpour, C. Fung, T. Nguyen, K. Kadiyala, F. Jalali,\
    \ A. Niakan-\nlahiji, J. Kong, and J. P. Jue, “All one needs to know about fog\
    \ computing\nand related edge computing paradigms: A complete survey,” Journal\
    \ of\nSystems Architecture 98, 289–330 (2019).\n[40]\nB. L. R. Stojkoska and K.\
    \ V. Trivodaliev, “A review of internet of things\nfor smart home: Challenges\
    \ and solutions,” Journal of Cleaner Production\n140, 1454–1464 (2017). The authors\
    \ perform a literature reiew of the\narchitectures available for IoT in the Smart\
    \ home. After doing so, they\nprovide an architecture of their own which has been\
    \ derived from the other\narchitectures discussed. ¡br/¿¡br/¿*They provide a good\
    \ description of the\ntypes of appliances.\n[41]\nA. Saini and A. Malik, “Routing\
    \ in internet of things: A survey,” Com-\nmunication and Computing Systems - Proceedings\
    \ of the International\nConference on Communication and Computing Systems, ICCCS\
    \ 2016 I,\n855–860 (2017).\n[42]\nE. Casilari, J. A. Santoyo-Ram´on, and J. M.\
    \ Cano-Garc´ıa, “On the hetero-\ngeneity of existing repositories of movements\
    \ intended for the evaluation\nof fall detection systems,” Journal of Healthcare\
    \ Engineering 2020 (2020).\nThe authors in EC20 analyse various datasets which\
    \ contain accelerom-\neter signal measurements for people performing fall activities.\
    \ Within\nthis:¡br/¿¡br/¿Table 1 lists the datasets considered¡br/¿Table 2 illustrates\n\
    the characteristics of the collected data (duration etc) and the partici-\npants¡br/¿Table\
    \ 3 discusses the sampling rate and other properties of the\ndata ¡br/¿¡br/¿The\
    \ analysis involves extracting sliding time windows of\n0.5 seconds from the signals\
    \ and calculate the window with the maximum\ndifference of acceleration as described\
    \ in ref [60] to determine the win-\ndow where the fall has taken place. Once\
    \ this is done, they calculate 12\nstatistical features from the data.\n[43]\n\
    M. Rahnemoonfar and C. Sheppard, “Deep count : Fruit counting based\non deep simulated\
    \ learning,” Sensors 17, 1–12 (2017).\n[44]\nD. Thakker, B. K. Mishra, A. Abdullatif,\
    \ and S. Mazumdar, “Explainable\nartificial intelligence for developing smart\
    \ cities solutions,” Smart Cities\n3, 1353–1382 (2020).\n[45]\nA. Rahman, M. S.\
    \ Hossain, N. A. Alrajeh, and N. Guizani, “B5g and\nexplainable deep learning\
    \ assisted healthcare vertical at the edge : Covid-\n19 perspective,” IEEE Network\
    \ 34, 98–105 (2020).\n[46]\nM. Janssen, S. Luthra, S. Mangla, N. P. Rana, and\
    \ Y. K. Dwivedi, “Chal-\nlenges for adopting and implementing iot in smart cities,”\
    \ Internet Re-\nsearch ahead-of-p (2019).\n[47]\nR. S´anchez-Corcuera, A. Nu˜nez-Marcos,\
    \ J. Sesma-Solance, A. Bilbao-\nJayo, R. Mulero, U. Zulaika, G. Azkune, and A.\
    \ Almeida, “Smart cities\n134\nsurvey: Technologies, application domains and challenges\
    \ for the cities\nof the future,” International Journal of Distributed Sensor\
    \ Networks 15\n(2019).\n[48]\nB. N. Silva, M. Khan, and K. Han, “Towards sustainable\
    \ smart cities: A\nreview of trends, architectures, components, and open challenges\
    \ in smart\ncities,” Sustainable Cities and Society 38, 697–713 (2018).\n[49]\n\
    W. Ejaz and A. Anpalagan, “Internet of things for smart cities: overview\nand\
    \ key challenges,” Internet of Things for Smart Cities pp. 1–15 (2019).\n[50]\n\
    G. Marques, N. Garcia, and N. Pombo, “A survey on iot: architectures,\nelements,\
    \ applications, qos, platforms and security concepts,” in “Ad-\nvances in Mobile\
    \ cloud computing and big data in the 5G era,” (Springer,\n2017), pp. 115–130.\n\
    [51]\nK. Zhang, J. Ni, K. Yang, X. Liang, J. Ren, and X. S. Shen, “Security\n\
    and privacy in smart city applications: Challenges and solutions,” IEEE\nCommunications\
    \ Magazine 55, 122–129 (2017).\n[52]\nY. Mehmood, F. Ahmad, I. Yaqoob, A. Adnane,\
    \ M. Imran, and\nS. Guizani, “Internet-of-things-based smart cities: Recent advances\
    \ and\nchallenges,” IEEE Communications Magazine 55, 16–24 (2017).\n[53]\nW. Rong,\
    \ Z. Xiong, D. Cooper, C. Li, and H. Sheng, “Smart city archi-\ntecture: A technology\
    \ guide for implementation and design challenges,”\nChina Communications 11, 56–69\
    \ (2014).\n[54]\nE. Ahmed, I. Yaqoob, A. Gani, M. Imran, and M. Guizani, “Internet-of-\n\
    things-based smart environments: State of the art, taxonomy, and open\nresearch\
    \ challenges,” IEEE Wireless Communications 23, 10–16 (2016).\n[55]\nS. Chen,\
    \ H. Xu, D. Liu, B. Hu, and H. Wang, “A vision of iot: Ap-\nplications, challenges,\
    \ and opportunities with china perspective,” IEEE\nInternet of Things Journal\
    \ 1, 349–359 (2014).\n[56]\nB. Ahlgren, M. Hidell, and E. C. Ngai, “Internet of\
    \ things for smart\ncities: Interoperability and open data,” IEEE Internet Computing\
    \ 20,\n52–56 (2016).\n[57]\nI. Lee and K. Lee, “The internet of things (iot):\
    \ Applications, investments,\nand challenges for enterprises,” Business Horizons\
    \ 58, 431–440 (2015).\n[58]\nC. M. Morais, D. Sadok, and J. Kelner, “An iot sensor\
    \ and scenario\nsurvey for data researchers,” Journal of the Brazilian Computer\
    \ Society\n25 (2019).\n[59]\nA. Sharma and M. Sinha, “A differential evolution-based\
    \ routing algo-\nrithm for multi-path environment in mobile ad hoc network,” Interna-\n\
    tional Journal of Hybrid Intelligence 1, 23–40 (2019).\n135\n[60]\nG. P. Hancke,\
    \ B. de Carvalho de Silva, and G. P. Hancke, The role of\nadvanced sensing in\
    \ smart cities, vol. 13 (Multidisciplinary Digital Pub-\nlishing Institute, 2013).\n\
    [61]\nM. Penza, D. Suriano, M. G. Villani, L. Spinelle, and M. Gerboles, “To-\n\
    wards air quality indices in smart cities by calibrated low-cost sensors\napplied\
    \ to networks,” Proceedings of IEEE Sensors 2014-Decem, 2012–\n2017 (2014).\n\
    [62]\nF. Folianto, Y. S. Low, and W. L. Yeow, “Smartbin: Smart waste man-\nagement\
    \ system,” 2015 IEEE 10th International Conference on Intelligent\nSensors, Sensor\
    \ Networks and Information Processing, ISSNIP 2015 pp.\n1–2 (2015).\n[63]\nG.\
    \ Bedi, G. K. Venayagamoorthy, R. Singh, R. R. Brooks, and K. C.\nWang, “Review\
    \ of internet of things (iot) in electric power and energy\nsystems,” IEEE Internet\
    \ of Things Journal 5, 847–870 (2018).\n[64]\nE. Y. Song, G. J. Fitzpatrick, and\
    \ K. B. Lee, “Smart sensors and standard-\nbased interoperability in smart grids,”\
    \ IEEE Sensors Journal 17, 7723–\n7730 (2017).\n[65]\nA. A. Abdellatif, A. Mohamed,\
    \ C. F. Chiasserini, M. Tlili, and A. Erbad,\n“Edge computing for smart health:\
    \ Context-aware approaches, opportu-\nnities, and challenges,” IEEE Network 33,\
    \ 196–203 (2019).\n[66]\nK. Fan, S. Zhu, K. Zhang, H. Li, and Y. Yang, “A lightweight\
    \ authen-\ntication scheme for cloud-based rfid healthcare systems,” IEEE Network\n\
    33, 44–49 (2019).\n[67]\nA. Prati, C. Shan, and K. I. Wang, “Sensors, vision and\
    \ networks: From\nvideo surveillance to activity recognition and health monitoring,”\
    \ Journal\nof Ambient Intelligence and Smart Environments 11, 5–22 (2019).\n[68]\n\
    D. Ding, R. A. Cooper, P. F. Pasquina, and L. Fici-Pasquina, “Sensor\ntechnology\
    \ for smart homes,” Maturitas 69, 131–136 (2011).\n[69]\nB. Jan, H. Farman, M.\
    \ Khan, M. Talha, and I. U. Din, “Designing a smart\ntransportation system: An\
    \ internet of things and big data approach,”\nIEEE Wireless Communications 26,\
    \ 73–79 (2019).\n[70]\nJ. Guerrero-Ib´a˜nez, S. Zeadally, and J. Contreras-Castillo,\
    \ “Sensor tech-\nnologies for intelligent transportation systems,” Sensors (Switzerland)\
    \ 18,\n1–24 (2018).\n[71]\nA. Gharaibeh, M. A. Salahuddin, S. J. Hussini, A. Khreishah,\
    \ I. Khalil,\nM. Guizani, and A. Al-Fuqaha, “Smart cities: A survey on data manage-\n\
    ment, security, and enabling technologies,” IEEE Communications Sur-\nveys and\
    \ Tutorials 19, 2456–2501 (2017).\n136\n[72]\nS. Talari, M. Shafie-Khah, P. Siano,\
    \ V. Loia, A. Tommasetti, and J. P.\nCatal˜ao, “A review of smart cities based\
    \ on the internet of things con-\ncept,” Energies 10, 1–23 (2017).\n[73]\nD. M.\
    \ Park, S. K. Kim, and Y. S. Seo, “S-mote: Smart home framework\nfor common household\
    \ appliances in iot network,” Journal of Information\nProcessing Systems 15, 449–456\
    \ (2019).\n[74]\nI. Yaqoob, E. Ahmed, I. A. T. Hashem, A. I. A. Ahmed, A. Gani,\
    \ M. Im-\nran, and M. Guizani, “Internet of things architecture: Recent advances,\n\
    taxonomy, requirements, and open challenges,” IEEE wireless communi-\ncations\
    \ 24, 10–16 (2017).\n[75]\nP. Sakhardande, S. Hanagal, and S. Kulkarni, “Design\
    \ of disaster man-\nagement system using iot based interconnected network with\
    \ smart city\nmonitoring,” 2016 International Conference on Internet of Things\
    \ and\nApplications, IOTA 2016 pp. 185–190 (2016).\n[76]\nL. Kang, S. Poslad,\
    \ W. Wang, X. Li, Y. Zhang, and C. Wang, “A public\ntransport bus as a flexible\
    \ mobile smart environment sensing platform for\niot,” Proceedings - 12th International\
    \ Conference on Intelligent Environ-\nments, IE 2016 pp. 1–8 (2016).\n[77]\nT.\
    \ Adiono, M. Y. Fathany, R. V. W. Putra, K. Afifah, M. H. Santri-\naji, B. L.\
    \ Lawu, and S. Fuada, “Live demonstration: Minds - meshed\nand internet networked\
    \ devices system for smart home: Track selection:\nEmbedded systems,” 2016 IEEE\
    \ Asia Pacific Conference on Circuits and\nSystems, APCCAS 2016 pp. 736–737 (2017).\n\
    [78]\nA. Ghosh and N. Chakraborty, “Design of smart grid in an university\ncampus\
    \ using zigbee mesh networks,” 1st IEEE International Conference\non Power Electronics,\
    \ Intelligent Control and Energy Systems, ICPEICES\n2016 pp. 1–6 (2017).\n[79]\n\
    Y. Yan, Y. Qian, and H. Sharif, “A secure data aggregation and dispatch\nscheme\
    \ for home area networks in smart grid,” GLOBECOM - IEEE\nGlobal Telecommunications\
    \ Conference pp. 1–6 (2011).\n[80]\nU. Raza, P. Kulkarni, and M. Sooriyabandara,\
    \ “Low power wide area\nnetworks: An overview,” IEEE Communications Surveys and\
    \ Tutorials\n19, 855–873 (2017).\n[81]\nM. Kuzlu and M. Pipattanasomporn, “Assessment\
    \ of communication\ntechnologies and network requirements for different smart\
    \ grid applica-\ntions,” 2013 IEEE PES Innovative Smart Grid Technologies Conference,\n\
    ISGT 2013 pp. 1–6 (2013).\n[82]\nS. Al-Sarawi, M. Anbar, K. Alieyan, and M. Alzubaidi,\
    \ “Internet of things\n(iot) communication protocols: Review,” ICIT 2017 - 8th\
    \ International\nConference on Information Technology, Proceedings pp. 685–690\
    \ (2017).\n137\n[83]\nK. Mekki, E. Bajic, F. Chaxel, and F. Meyer, “A comparative\
    \ study of\nlpwan technologies for large-scale iot deployment,” ICT Express 5,\
    \ 1–7\n(2019).\n[84]\nS. S. I. Samuel, “A review of connectivity challenges in\
    \ iot-smart home,”\n2016 3rd MEC International Conference on Big Data and Smart\
    \ City,\nICBDSC 2016 pp. 364–367 (2016).\n[85]\nP. Kuppusamy, S. Muthuraj, and\
    \ S. Gopinath, “Survey and challenges\nof li-fi with comparison of wi-fi,” Proceedings\
    \ of the 2016 IEEE Inter-\nnational Conference on Wireless Communications, Signal\
    \ Processing and\nNetworking, WiSPNET 2016 pp. 896–899 (2016).\n[86]\nB.-S. A.\
    \ Heile and M. H. T. P. C (Futurewei) Liu, B(Huawei Technolo-\ngies) Zhang, “Wi-sun\
    \ fan overview,” (2017).\n[87]\nB. Hammi, R. Khatoun, S. Zeadally, A. Fayad, and\
    \ L. Khoukhi, “Iot\ntechnologies for smart cities,” IET Networks 7, 1–13 (2018).\n\
    [88]\nZ. A. Baig, P. Szewczyk, C. Valli, P. Rabadia, P. Hannay, M. Cherny-\nshev,\
    \ M. Johnstone, P. Kerai, A. Ibrahim, K. Sansurooah, N. Syed, and\nM. Peacock,\
    \ “Future challenges for smart cities: Cyber-security and dig-\nital forensics,”\
    \ Digital Investigation 22, 3–13 (2017).\n[89]\nT. Braun, B. C. Fung, F. Iqbal,\
    \ and B. Shah, “Security and privacy\nchallenges in smart cities,” Sustainable\
    \ Cities and Society 39, 499–507\n(2018).\n[90]\nD. Eckhoff and I. Wagner, “Privacy\
    \ in the smart city - applications, tech-\nnologies, challenges, and solutions,”\
    \ IEEE Communications Surveys and\nTutorials 20, 489–516 (2018).\n[91]\nA. S.\
    \ Elmaghraby and M. M. Losavio, “Cyber security challenges in smart\ncities: Safety,\
    \ security and privacy,” Journal of Advanced Research 5,\n491–497 (2014).\n[92]\n\
    D. POPESCUL and L. D. RADU, “Data security in smart cities: Chal-\nlenges and\
    \ solutions,” Informatica Economica 20, 29–38 (2016).\n[93]\nV. Hassija, V. Chamola,\
    \ V. Saxena, D. Jain, P. Goyal, and B. Sikdar, “A\nsurvey on iot security: Application\
    \ areas, security threats, and solution\narchitectures,” IEEE Access 7, 82721–82743\
    \ (2019).\n[94]\nD. E. Whitehead, K. Owens, D. Gammel, and J. Smith, “Ukraine\
    \ cyber-\ninduced power outage: Analysis and practical mitigation strategies,”\
    \ 70th\nAnnual Conference for Protective Relay Engineers, CPRE 2017 (2017).\n\
    [95]\nI. B. A. Ang, F. D. Salim, and M. Hamilton, “Human occupancy recogni-\n\
    tion with multivariate ambient sensors,” 2016 IEEE International Confer-\nence\
    \ on Pervasive Computing and Communication Workshops, PerCom\nWorkshops 2016 pp.\
    \ 1–6 (2016).\n138\n[96]\nL. Yang, K. Ting, and M. B. Srivastava, “Inferring occupancy\
    \ from oppor-\ntunistically available sensor data,” 2014 IEEE International Conference\n\
    on Pervasive Computing and Communications, PerCom 2014 pp. 60–68\n(2014).\n[97]\n\
    J. D. Howard and T. A. Longstaff, “A common language for computer\nsecurity incidents,”\
    \ Sandia National Laboratories (1998).\n[98]\nR. Agrawal, P. Verma, R. Sonanis,\
    \ U. Goel, A. De, S. A. Kondaveeti, and\nS. Shekhar, “Continuous security in iot\
    \ using blockchain,” ICASSP, IEEE\nInternational Conference on Acoustics, Speech\
    \ and Signal Processing -\nProceedings 2018-April, 6423–6427 (2018).\n[99]\nS.\
    \ Rizvi, J. P. Iii, A. Kurtz, and M. Rizvi, “Securing the internet of things\n\
    ( iot ): A security taxonomy for iot,” in “2018 17th IEEE International\nConference\
    \ On Trust, Security And Privacy In Computing And Commu-\nnications/ 12th IEEE\
    \ International Conference On Big Data Science And\nEngineering (TrustCom/BigDataSE),”\
    \ (IEEE, 2018), pp. 163–168.\n[100] A. Aldairi and L. Tawalbeh, “Cyber security\
    \ attacks on smart cities and\nassociated mobile technologies,” Procedia Computer\
    \ Science 109, 1086–\n1091 (2017).\n[101] M. Ali, N. Abrishamchi, A. H. Abdullah,\
    \ A. D. Cheok, and K. S.\nBielawski, “Side channel attacks on smart home systems\
    \ :\nA short\noverview,” in “IECON 2017 - 43rd Annual Conference of the IEEE In-\n\
    dustrial Electronics Society,” (2017), pp. 8144–8149.\n[102] J. Choi and Y. Kim,\
    \ “An improved lea block encryption algorithm to pre-\nvent side-channel attack\
    \ in the iot system,” in “2016 Asia-Pacific Signal\nand Information Processing\
    \ Association Annual Summit and Conference\n(APSIPA),” (Asia Pacific Signal and\
    \ Information Processing Association,\n2016), pp. 1–4.\n[103] M. A. Al-Garadi,\
    \ A. Mohamed, A. K. Al-Ali, X. Du, I. Ali, and\nM. Guizani, “A survey of machine\
    \ and deep learning methods for internet\nof things (iot) security,” IEEE Communications\
    \ Surveys & Tutorials 22,\n1646–1685 (2020).\n[104] X. Ouyang and Z. Ma, “Using\
    \ lstm networks to identify false data of smart\nterminals in the smart grid,”\
    \ Proceedings of the International Conference\non Parallel and Distributed Systems\
    \ - ICPADS 2017-Decem, 765–768\n(2018).\n[105] A. Diro and N. Chilamkurti, “Leveraging\
    \ lstm networks for attack detec-\ntion in fog-to-things communications,” IEEE\
    \ Communications Magazine\n56, 124–130 (2018).\n[106] N. Balakrishnan, A. Rajendran,\
    \ D. Pelusi, and V. Ponnusamy, “Deep\nbelief network enhanced intrusion detection\
    \ system to prevent security\nbreach in the internet of things,” Internet of Things\
    \ p. 100112 (2019).\n139\n[107] R. Khatoun and S. Zeadally, “Cybersecurity and\
    \ privacy solutions in\nsmart cities,” IEEE Communications Magazine 55, 51–59\
    \ (2017).\n[108] H. F. Atlam, A. Alenezi, M. O. Alassafi, and G. B. Wills, “Blockchain\n\
    with internet of things : Benefits , challenges , and future directions,” I.J.\n\
    Intelligent Systems and Applications 10, 40–48 (2018).\n[109] J. T. de Souza,\
    \ A. C. de Francisco, C. M. Piekarski, and G. F. do Prado,\n“Data mining and machine\
    \ learning to promote smart cities: A systematic\nreview from 2000 to 2018,” Sustainability\
    \ (Switzerland) 11 (2019).\n[110] Z. Rayan, M. Alfonse, and A. B. M. Salem, “Machine\
    \ learning approaches\nin smart health,” Procedia Computer Science 154, 361–368\
    \ (2018).\n[111] R. Varghese and S. Sharma, “Affordable smart farming using iot\
    \ and\nmachine learning,” Proceedings of the 2nd International Conference on\n\
    Intelligent Computing and Control Systems, ICICCS 2018 pp. 645–650\n(2019).\n\
    [112] S. AlZu’bi, B. Hawashin, M. Mujahed, Y. Jararweh, and B. B. Gupta,\n“An\
    \ efficient employment of internet of multimedia things in smart and\nfuture agriculture,”\
    \ Multimedia Tools and Applications 78, 29581–29605\n(2019).\n[113] K. S. P. Reddy,\
    \ Y. M. Roopa, L. N. K. Rajeev, and N. S. Nandan, “Iot\nbased smart agriculture\
    \ using machine learning,” Proceedings of the 2nd\nInternational Conference on\
    \ Inventive Research in Computing Applica-\ntions, ICIRCA 2020 pp. 130–134 (2020).\n\
    [114] A. Goap, D. Sharma, A. K. Shukla, and C. R. Krishna, “An iot based\nsmart\
    \ irrigation management system using machine learning and open\nsource technologies,”\
    \ Computers and Electronics in Agriculture 155, 41–\n49 (2018).\n[115] S. Rodr´ıguez,\
    \ T. Gualotu˜na, and C. Grilo, “A system for the monitor-\ning and predicting\
    \ of data in precision a agriculture system for the and\npredicting of wireless\
    \ data in precision in a monitoring rose greenhouse\nbased on sensor agriculture\
    \ in a rose greenhouse based on wireless sensor\nnetworks ne,” Procedia Computer\
    \ Science 121, 306–313 (2017).\n[116] N. Kitpo, Y. Kugai, M. Inoue, T. Yokemura,\
    \ and S. Satomura, “Internet\nof things for greenhouse monitoring system using\
    \ deep learning and bot\nnotification services,” 2019 IEEE International Conference\
    \ on Consumer\nElectronics, ICCE 2019 (2019).\n[117] A. K. Saha, J. Saha, R. Ray,\
    \ S. Sircar, S. Dutta, S. P. Chattopadhyay, and\nH. N. Saha, “Iot-based drone\
    \ for improvement of crop quality in agricul-\ntural field,” in “2018 IEEE 8th\
    \ Annual Computing and Communication\nWorkshop and Conference (CCWC),” (IEEE,\
    \ 2018), pp. 612–615.\n140\n[118] A. A. Araby, M. M. Abd Elhameed, N. M. Magdy,\
    \ N. Abdelaal, Y. T.\nAbd Allah, M. S. Darweesh, M. A. Fahim, H. Mostafa et al.,\
    \ “Smart iot\nmonitoring system for agriculture with predictive analysis,” in\
    \ “2019 8th\nInternational Conference on Modern Circuits and Systems Technologies\n\
    (MOCAST),” (IEEE, 2019), pp. 1–4.\n[119] S. A. Nandhini and R. H. S. Radha, “Web\
    \ enabled plant disease detec-\ntion system for agricultural applications using\
    \ wmsn,” Wireless Personal\nCommunications 102, 725–740 (2018).\n[120] L. Ale,\
    \ A. Sheta, L. Li, Y. Wang, and N. Zhang, “Deep learning based\nplant disease\
    \ detection for smart agriculture,” 2019 IEEE Globecom\nWorkshops, GC Wkshps 2019\
    \ - Proceedings pp. 1–6 (2019).\n[121] F. Balducci, D. Impedovo, and G. Pirlo,\
    \ “Machine learning applications\non agricultural datasets for smart farm enhancement,”\
    \ Machines 6 (2018).\n[122] X.-B. Jin, N.-X. Yang, X.-Y. Wang, Y.-T. Bai, T.-L.\
    \ Su, and J.-L. Kong,\n“Hybrid deep learning predictor for smart agriculture sensing\
    \ based on\nempirical mode decomposition and gated recurrent unit group model,”\n\
    Sensors 20, 1334 (2020).\n[123] S. A. M. Varman, A. R. Baskaran, S. Aravindh,\
    \ and E. Prabhu, “Deep\nlearning and iot for smart agriculture using wsn,” 2017\
    \ IEEE International\nConference on Computational Intelligence and Computing Research,\
    \ IC-\nCIC 2017 pp. 0–5 (2018).\n[124] X. bo Jin, X. hong Yu, X. yi Wang, Y. ting\
    \ Bai, and T. li Su, “Deep\nlearning predictor for sustainable precision agriculture\
    \ based on internet\nof things system,” Sustainability 12, 1433 (2020).\n[125]\
    \ K. Aliev, M. M. Jawaid, S. Narejo, E. Pasero, and A. Pulatov, “Inter-\nnet of\
    \ plants application for smart agriculture,” International Journal of\nAdvanced\
    \ Computer Science and Applications 9, 421–429 (2018).\n[126] A. L. Diedrichs,\
    \ F. Bromberg, D. Dujovne, K. Brun-laguna, T. Watteyne,\nand S. Member, “Prediction\
    \ of frost events using machine learning and iot\nsensing devices,” IEEE Internet\
    \ of Things Journal 5, 4589–4597 (2018).\n[127] R.\nReshma,\nV.\nSathiyavathi,\n\
    T.\nSindhu,\nK.\nSelvakumar,\nand\nL. SaiRamesh, “Iot based classification techniques\
    \ for soil content analysis\nand crop yield prediction,” in “2020 Fourth International\
    \ Conference on\nI-SMAC (IoT in Social, Mobile, Analytics and Cloud)(I-SMAC),”\
    \ (IEEE,\n2020), pp. 156–160.\n[128] M. Pawar and G. Chillarge, “Soil toxicity\
    \ prediction and recommendation\nsystem using data mining in precision agriculture,”\
    \ in “2018 3rd interna-\ntional conference for convergence in technology (I2CT),”\
    \ (IEEE, 2018),\npp. 1–5.\n141\n[129] K. Lee, B. N. Silva, and K. Han, “Deep learning\
    \ entrusted to fog\nnodes (dlefn) based smart agriculture,” Applied Sciences (Switzerland)\n\
    10 (2020).\n[130] M. A. Guill´en, A. Llanes, B. Imbern´on, R. Mart´ınez, E. Andr´es,\
    \ B. Cre-\nspo, and J. Carlos, “Performance evaluation of edge - computing platforms\n\
    for the prediction of low temperatures in agriculture using deep learning,”\n\
    The Journal of Supercomputing 77, 818–840 (2021).\n[131] M. A. Guill´en-navarro,\
    \ R. Mart´ınez-espa˜na, and J. M. Cecilia, “A high-\nperformance iot solution\
    \ to reduce frost damages in stone fruits,” Con-\ncurrency and Computation: Practice\
    \ and Experience 33, e5299 (2019).\n[132] M. A. Guill´en, A. Llanes, B. Imbern´on,\
    \ R. Mart´ınez-Espa˜na, A. Bueno-\nCrespo, J. C. Cano, and J. M. Cecilia, “Performance\
    \ evaluation of edge-\ncomputing platforms for the prediction of low temperatures\
    \ in agriculture\nusing deep learning,” (2020).\n[133] D. Rutqvist, D. Kleyko,\
    \ and F. Blomstedt, “An automated machine learn-\ning approach for smart waste\
    \ management systems,” IEEE Transactions\non Industrial Informatics PP, 1–1 (2019).\n\
    [134] A. Hussain, U. Draz, T. Ali, S. Tariq, M. Irfan, A. Glowacz, J. Alfonso,\n\
    A. Daviu, S. Yasin, and S. Rahman, “Waste management and prediction\nof air pollutants\
    \ using iot and machine learning approach,” Energies 13,\n3930 (2020).\n[135]\
    \ D. Zhang, G. Lindholm, and H. Ratnaweera, “Use long short-term mem-\nory to\
    \ enhance Internet of Things for combined sewer overflow monitor-\ning,” Journal\
    \ of Hydrology 556, 409–418 (2018).\n[136] P. Varalakshmi, S. Vandhana, and S.\
    \ Vishali, “Prediction of water quality\nusing naive bayesian algorithm,” 2016\
    \ 8th International Conference on\nAdvanced Computing, ICoAC 2016 pp. 224–229\
    \ (2017).\n[137] D. Jalal, “Toward a Smart Real Time Monitoring System for Drinking\n\
    Water Based on Machine Learning,” 2019 International Conference on\nSoftware,\
    \ Telecommunications and Computer Networks (SoftCOM) pp.\n1–5 (2019).\n[138] T.\
    \ Bin, M. M. Alam, N. Absar, K. Andersson, and M. Shahadat, “Iot\nbased real-time\
    \ river water quality monitoring system,” Procedia Com-\nputer Science 155, 161–168\
    \ (2019).\n[139] P. Liu, J. Wang, A. K. Sangaiah, Y. Xie, and X. Yin, “Analysis\
    \ and\nprediction of water quality using lstm deep neural networks in iot envi-\n\
    ronment,” Sustainability 11, 2058 (2019).\n[140] Z. Tariq, S. K. Shah, and Y.\
    \ Lee, “Smart 311 request system with au-\ntomatic noise detection for safe neighborhood,”\
    \ 2018 IEEE International\nSmart Cities Conference, ISC2 2018 pp. 1–8 (2019).\n\
    142\n[141] J. Zhang, S. I. Levitan, and J. Hirschberg, “Multimodal deception detec-\n\
    tion using automatically extracted acoustic, visual, and lexical features.”\n\
    in “INTERSPEECH,” (2020), pp. 359–363.\n[142] Y. Santur, E. Karak¨ose, M. Karak¨ose,\
    \ and E. Akın, “Deep learning based\nartificial manager for smart city,” in “5th\
    \ International Conference on\nAdvanced Technology & Sciences,” (2017), pp. 197–201.\n\
    [143] S. Sanaei, B. Majidi, and E. Akhtarkavan, “Deep multisensor dashboard\n\
    for composition layer of web of things in the smart city,” 9th International\n\
    Symposium on Telecommunication: With Emphasis on Information and\nCommunication\
    \ Technology, IST 2018 pp. 211–215 (2019).\n[144] P. D. Rosero-Montalvo, J. A.\
    \ Caraguay-Procel, E. D. Jaramillo, J. M.\nMichilena-Calderon, A. C. Umaquinga-Criollo,\
    \ M. Mediavilla-Valverde,\nM. A. Ruiz, L. A. Beltran, and D. H. Peluffo-Ord´onez,\
    \ “Air quality moni-\ntoring intelligent system using machine learning techniques,”\
    \ Proceedings\n- 3rd International Conference on Information Systems and Computer\
    \ Sci-\nence, INCISCOS 2018 2018-Decem, 75–80 (2018).\n[145] C. Feng, W. Wang,\
    \ Y. Tian, X. Que, and X. Gong, “Estimate air quality\nbased on mobile crowd sensing\
    \ and big data,” 18th IEEE International\nSymposium on A World of Wireless, Mobile\
    \ and Multimedia Networks,\nWoWMoM 2017 - Conference (2017).\n[146] R. Yu, Y.\
    \ Yang, L. Yang, G. Han, and O. A. Move, “RAQ–A random for-\nest approach for\
    \ predicting air quality in urban sensing systems,” Sensors\n(Switzerland) 16\
    \ (2016).\n[147] I. K¨ok, M. U. S¸im¸sek, and S. ¨Ozdemir, “A deep learning model\
    \ for air\nquality prediction in smart cities,” Proceedings - 2017 IEEE International\n\
    Conference on Big Data, Big Data 2017 2018-Janua, 1983–1990 (2017).\n[148] A.\
    \ Al-Wakeel, J. Wu, and N. Jenkins, “K -means based load estimation\nof domestic\
    \ smart meter measurements,” Applied Energy 194, 333–342\n(2017).\n[149] O. Valgaev,\
    \ F. Kupzog, and H. Schmeck, “Building power demand fore-\ncasting using k-nearest\
    \ neighbours model - practical application in smart\ncity demo aspern project,”\
    \ CIRED - Open Access Proceedings Journal\n2017, 1601–1604 (2017).\n[150] P. Vrablecov´a,\
    \ A. B. Ezzeddine, V. Rozinajov´a, S. ˇS´arik, and A. K. Sanga-\niah, “Smart grid\
    \ load forecasting using online support vector regression,”\nComputers and Electrical\
    \ Engineering 65, 102–117 (2018).\n[151] W. Kong, Z. Y. Dong, Y. Jia, D. J. Hill,\
    \ Y. Xu, and Y. Zhang, “Short-\nterm residential load forecasting based on lstm\
    \ recurrent neural network,”\nIEEE Transactions on Smart Grid 10, 841–851 (2019).\n\
    143\n[152] S. Hosein and P. Hosein, “Load forecasting using deep neural networks,”\n\
    2017 IEEE Power and Energy Society Innovative Smart Grid Technologies\nConference,\
    \ ISGT 2017 (2017).\n[153] K. Ke, S. Hongbin, Z. Chengkang, and C. Brown, “Short-term\
    \ electrical\nload forecasting method based on stacked auto-encoding and gru neural\n\
    network,” Evolutionary Intelligence 12, 385–394 (2019).\n[154] T. Han, K. Muhammad,\
    \ T. Hussain, J. Lloret, and S. W. Baik, “An\nefficient deep learning framework\
    \ for intelligent energy management in\niot networks,” IEEE Internet of Things\
    \ Journal (2020).\n[155] X. Liu, Z. Xiao, R. Zhu, J. Wang, L. Liu, and M. Ma,\
    \ “Edge sensing data-\nimaging conversion scheme of load forecasting in smart\
    \ grid,” Sustainable\nCities and Society p. 102363 (2020).\n[156] A. Ta¨ık and\
    \ S. Cherkaoui, “Electrical load forecasting using edge com-\nputing and federated\
    \ learning,” in “ICC 2020-2020 IEEE International\nConference on Communications\
    \ (ICC),” (IEEE, 2020), pp. 1–6.\n[157] D. Nguyen, R. Barella, S. A. Wallace,\
    \ X. Zhao, and X. Liang, “Smart\ngrid line event classification using supervised\
    \ learning over pmu data\nstreams,” 2015 6th International Green and Sustainable\
    \ Computing Con-\nference (2016).\n[158] Z. Zheng, Y. Yang, X. Niu, H. N. Dai,\
    \ and Y. Zhou, “Wide and deep\nconvolutional neural networks for electricity-theft\
    \ detection to secure\nsmart grids,” IEEE Transactions on Industrial Informatics\
    \ 14, 1606–1615\n(2018).\n[159] Y. Huang, Y. Lu, F. Wang, X. Fan, J. Liu, and\
    \ V. C. Leung, “An edge\ncomputing framework for real-time monitoring in smart\
    \ grid,” Proceed-\nings - 2018 IEEE International Conference on Industrial Internet,\
    \ ICII\n2018 pp. 99–108 (2018).\n[160] S. Batool, N. A. Saqib, and M. A. Khan,\
    \ “Internet of things data analytics\nfor user authentication and activity recognition,”\
    \ 2017 2nd International\nConference on Fog and Mobile Edge Computing, FMEC 2017\
    \ pp. 183–187\n(2017).\n[161] H. Zhang, Z. Xiao, J. Wang, F. Li, and E. Szczerbicki,\
    \ “A novel iot-\nperceptive human activity recognition ( har ) approach using\
    \ multihead\nconvolutional attention,” IEEE Internet of Things Journal 7, 1072–1080\n\
    (2020).\n[162] D. Castro, “Wearable-based human activity recognition using an\
    \ iot ap-\nproach,” Journal of Sensor and Actuator Networks 6, 28 (2017).\n[163]\
    \ D. N. Tran and D. D. Phan, “Human activities recognition in android\nsmartphone\
    \ using support vector machine,” in “Proceedings - Inter-\nnational Conference\
    \ on Intelligent Systems, Modelling and Simulation,\nISMS,” , vol. 0 (IEEE, 2016),\
    \ vol. 0, pp. 64–68.\n144\n[164] G. L. Santos,\nP. T. Endo,\nK. Henrique,\nand\
    \ D. C. Monteiro,\n“Accelerometer-based human fall detection using,” Sensors 19,\
    \ 1–12\n(2019).\n[165] D. Yacchirema, “Fall detection system for elderly people\
    \ using iot and en-\nsemble machine learning algorithm,” Personal and Ubiquitous\
    \ Computing\n23, 801–817 (2019).\n[166] I.\nMachorro-Cano,\nG.\nAlor-Hern´andez,\n\
    M.\nA.\nParedes-Valverde,\nU. Ramos-Deonati, J. L. S´anchez-Cervantes, and L.\
    \ Rodr´ıguez-Mazahua,\n“Pisiot: A machine learning and iot-based smart health\
    \ platform for over-\nweight and obesity control,” Applied Sciences (Switzerland)\
    \ 9 (2019).\n[167] R. Ani, S. Krishna, N. Anju, A. M. Sona, and O. S. Deepa, “Iot\
    \ based pa-\ntient monitoring and diagnostic prediction tool using ensemble classifier,”\n\
    2017 International Conference on Advances in Computing, Communica-\ntions and\
    \ Informatics, ICACCI 2017 2017-Janua, 1588–1593 (2017).\n[168] A. Ukil and U.\
    \ K. Roy, “Smart cardiac health management in iot through\nheart sound signal\
    \ analytics and robust noise filtering,” IEEE Interna-\ntional Symposium on Personal,\
    \ Indoor and Mobile Radio Communica-\ntions, PIMRC 2017-Octob, 1–5 (2018).\n[169]\
    \ A. Alamri, “Monitoring system for patients using multimedia for smart\nhealthcare,”\
    \ IEEE Access 6, 23271–23276 (2018).\n[170] Y. Qu, X. Ming, S. Qiu, M. Zheng,\
    \ and Z. Hou, “An integrative framework\nfor online prognostic and health management\
    \ using internet of things and\nconvolutional neural network,” Sensors (Switzerland)\
    \ 19 (2019).\n[171] M. S. Hossain and G. Muhammad, “Cloud-assisted industrial\
    \ internet\nof things (iiot) - enabled framework for health monitoring,” Computer\n\
    Networks 101, 192–202 (2016).\n[172] M. Alhussein, G. Muhammad, M. S. Hossain,\
    \ and S. U. Amin, “Cognitive\niot-cloud integration for smart healthcare: Case\
    \ study for epileptic seizure\ndetection and monitoring,” Mobile Networks and\
    \ Applications 23, 1624–\n1635 (2018).\n[173] M. Ganesan and N. Sivakumar, “Iot\
    \ based heart disease prediction and di-\nagnosis model for healthcare using machine\
    \ learning models,” 2019 IEEE\nInternational Conference on System, Computation,\
    \ Automation and Net-\nworking, ICSCAN 2019 pp. 1–5 (2019).\n[174] S. Mohapatra,\
    \ P. K. Patra, S. Mohanty, and B. Pati, “Smart health care\nsystem using data\
    \ mining,” Proceedings - 2018 International Conference\non Information Technology,\
    \ ICIT 2018 pp. 44–49 (2018).\n[175] P. Kaur, R. Kumar, and M. Kumar, “A healthcare\
    \ monitoring system\nusing random forest and internet of things (iot),” Multimedia\
    \ Tools and\n145\nApplications 78, 19905–19916 (2019). Ni, its one of those random\
    \ papers\nwhere they take data and run algorithms on them.\n[176] M. Alhussein,\
    \ “Monitoring parkinson’s disease in smart cities,” IEEE Ac-\ncess 5, 19835–19841\
    \ (2017).\n[177] S. Tuli, N. Basumatary, S. S. Gill, M. Kahani, R. C. Arya, G.\
    \ S. Wan-\nder, and R. Buyya, “Healthfog: An ensemble deep learning based smart\n\
    healthcare system for automatic diagnosis of heart diseases in integrated\niot\
    \ and fog computing environments,” Future Generation Computer Sys-\ntems 104,\
    \ 187–200 (2020).\n[178] M. Devarajan and L. Ravi, “Intelligent cyber-physical\
    \ system for an ef-\nficient detection of parkinson disease using fog computing,”\
    \ Multimedia\nTools and Applications 78, 32695–32719 (2019).\n[179] M. A. Sayeed,\
    \ S. P. Mohanty, E. Kougianos, V. P. Yanambaka, and H. Za-\nveri, “A robust and\
    \ fast seizure detector for iot edge,” Proceedings - 2018\nIEEE 4th International\
    \ Symposium on Smart Electronic Systems, iSES\n2018 pp. 156–160 (2018).\n[180]\
    \ J. P. Queralta, T. N. Gia, H. Tenhunen, and T. Westerlund, “Edge-ai in\nlora-based\
    \ health monitoring: Fall detection system with fog computing\nand lstm recurrent\
    \ neural networks,” in “2019 42nd international confer-\nence on telecommunications\
    \ and signal processing (TSP),” (IEEE, 2019),\npp. 601–604.\n[181] M. Awais, M.\
    \ Raza, N. Singh, K. Bashir, U. Manzoor, S. ul Islam, and J. J.\nRodrigues, “Lstm\
    \ based emotion detection using physiological signals:\nIot framework for healthcare\
    \ and distance learning in covid-19,” IEEE\nInternet of Things Journal (2020).\n\
    [182] P. Pirzada, N. White, and A. Wilde, “Sensors in smart homes for indepen-\n\
    dent living of the elderly,” 5th International Multi-Topic ICT Conference:\nTechnologies\
    \ For Future Generations, IMTIC 2018 - Proceedings pp. 1–8\n(2018).\n[183] J.\
    \ Park, K. Jang, and S. B. Yang, “Deep neural networks for activity\nrecognition\
    \ with multi-sensor data in a smart home,” IEEE World Forum\non Internet of Things,\
    \ WF-IoT 2018 - Proceedings 2018-Janua, 155–160\n(2018).\n[184] A. Wang, G. Chen,\
    \ C. Shang, M. Zhang, and L. Liu, “Human activity\nrecognition in a smart home\
    \ environment with stacked denoising autoen-\ncoders,” in “International Conference\
    \ on Web-Age Information Manage-\nment,” (Springer, 2016), pp. 29–40.\n[185] D.\
    \ Singh, E. Merdivan, I. Psychoula, J. Kropf, S. Hanke, M. Geist,\nand A. Holzinger,\
    \ “Human activity recognition using recurrent neural\n146\nnetworks,” Lecture\
    \ Notes in Computer Science (including subseries Lec-\nture Notes in Artificial\
    \ Intelligence and Lecture Notes in Bioinformatics)\n10410 LNCS, 267–274 (2017).\n\
    [186] G. Y. Kim, S. S. Shin, J. Y. Kim, and H. G. Kim, “Haptic Conversion\nUsing\
    \ Detected Sound Event in Home Monitoring System for the Hard-\nof-Hearing,” HAVE\
    \ 2018 - IEEE International Symposium on Haptic,\nAudio-Visual Environments and\
    \ Games, Proceedings pp. 17–22 (2018).\n[187] A. B. Adege, H. P. Lin, G. B. Tarekegn,\
    \ and S. S. Jeng, “Applying deep\nneural network (dnn) for robust indoor localization\
    \ in multi-building en-\nvironment,” Applied Sciences (Switzerland) 8, 1–14 (2018).\n\
    [188] R. Adeogun, I. Rodriguez, M. Razzaghpour, G. Berardinelli, P. H. Chris-\n\
    tensen, and P. E. Mogensen, “Indoor occupancy detection and estimation\nusing\
    \ machine learning and measurements from an iot lora-based mon-\nitoring system,”\
    \ in “2019 Global IoT Summit (GIoTS),” (IEEE, 2019),\npp. 1–5.\n[189] L. Zimmermann,\
    \ R. Weigel, and G. Fischer, “Fusion of nonintrusive en-\nvironmental sensors\
    \ for occupancy detection in smart homes,” IEEE In-\nternet of Things Journal\
    \ 5, 2343–2352 (2018).\n[190] D. Chowdhry, R. Paranjape, and P. Laforge, “Smart\
    \ home automation\nsystem for intrusion detection,” 2015 IEEE 14th Canadian Workshop\
    \ on\nInformation Theory, CWIT 2015 pp. 75–78 (2015).\n[191] V. H. Bhide and S.\
    \ Wagh, “I-learning iot: An intelligent self learning\nsystem for home automation\
    \ using iot,” 2015 International Conference\non Communication and Signal Processing,\
    \ ICCSP 2015 pp. 1763–1767\n(2015).\n[192] F. C. C. Garcia, C. M. C. Creayla,\
    \ and E. Q. B. Macabebe, “Develop-\nment of an intelligent system for smart home\
    \ energy disaggregation using\nstacked denoising autoencoders,” Procedia Computer\
    \ Science 105, 248–\n255 (2017).\n[193] C. C. Yang, C. S. Soh, and V. V. Yap,\
    \ “A non-intrusive appliance load\nmonitoring for efficient energy consumption\
    \ based on naive bayes classi-\nfier,” Sustainable Computing: Informatics and\
    \ Systems 14, 34–42 (2017).\n[194] D. Popa, F. Pop, C. Serbanescu, and A. Castiglione,\
    \ “Deep learning model\nfor home automation and energy reduction in a smart home\
    \ environment\nplatform,” Neural Computing and Applications 31, 1317–1337 (2019).\n\
    [195] I. C. Konstantakopoulos, A. R. Barkan, S. He, T. Veeravalli, H. Liu,\nand\
    \ C. Spanos, “A deep learning and gamification approach to improving\nhuman-building\
    \ interaction and energy efficiency in smart infrastructure,”\nApplied Energy\
    \ 237, 810–821 (2019).\n147\n[196] H. Albataineh, M. Nijim, and D. Bollampall,\
    \ “The design of a novel smart\nhome control system using smart grid based on\
    \ edge and cloud comput-\ning,” in “2020 IEEE 8th International Conference on\
    \ Smart Energy Grid\nEngineering (SEGE),” (IEEE, 2020), pp. 88–91.\n[197] P. H.\
    \ F. Sousa, N. M. M. Nascimento, J. S. Almeida, P. P. R. Filho,\nand V. H. C.\
    \ Albuquerque, “Intelligent incipient fault detection in wind\nturbines based\
    \ on industrial iot environment,” Journal of Artificial Intel-\nligence and Systems\
    \ 1, 1–19 (2019).\n[198] M. Salhaoui, A. Guerrero-Gonz´alez, M. Arioua, F. J.\
    \ Ortiz, A. E.\nOualkadi, and C. L. Torregrosa, “Smart industrial iot monitoring\
    \ and\ncontrol system based on uav and cloud computing applied to a concrete\n\
    plant,” Sensors (Switzerland) 19 (2019).\n[199] M. A. Ferreira, L. F. F. D. Souza,\
    \ F. H. S. D. Silva, E. F. Ohata, J. S.\nAlmeida, and P. P. Filho, “Intelligent\
    \ industrial iot system for detection\nof short-circuit failure in windings of\
    \ wind turbines,” Proceedings of the\nInternational Joint Conference on Neural\
    \ Networks (2020).\n[200] T. Nkonyana, Y. Sun, B. Twala, and E. Dogo, “Performance\
    \ evaluation of\ndata mining techniques in steel manufacturing industry,” Procedia\
    \ Man-\nufacturing 35, 623–628 (2019).\n[201] J. E. Siegel, S. Pratt, Y. Sun,\
    \ and S. E. Sarma, “Real-time deep neural\nnetworks for internet-enabled arc-fault\
    \ detection,” Engineering Applica-\ntions of Artificial Intelligence 74, 35–42\
    \ (2018).\n[202] J. Windau and L. Itti, “Inertial machine monitoring system for\
    \ auto-\nmated failure detection,” Proceedings - IEEE International Conference\n\
    on Robotics and Automation pp. 93–98 (2018).\n[203] A. N. Sokolov, I. A. Pyatnitsky,\
    \ and S. K. Alabugin, “Research of Classical\nMachine Learning Methods and Deep\
    \ Learning Models Effectiveness in\nDetecting Anomalies of Industrial Control\
    \ System,” Proceedings - 2018\nGlobal Smart Industry Conference, GloSIC 2018 (2018).\n\
    [204] D. C. Huang, C. F. Lin, C. Y. Chen, and J. R. Sze, “The internet tech-\n\
    nology for defect detection system with deep learning method in smart\nfactory,”\
    \ 2018 4th International Conference on Information Management,\nICIM 2018 pp.\
    \ 98–102 (2018).\n[205] L. Li, K. Ota, and M. Dong, “Deep learning for smart industry:\
    \ Efficient\nmanufacture inspection system with fog computing,” IEEE Transactions\n\
    on Industrial Informatics 14, 4665–4673 (2018).\n[206] S. Y. Lin, Y. Du, P. C.\
    \ Ko, T. J. Wu, P. T. Ho, V. Sivakumar, and\nR. subbareddy, “Fog computing based\
    \ hybrid deep learning framework in\neffective inspection system for smart manufacturing,”\
    \ Computer Commu-\nnications 160, 636–642 (2020).\n148\n[207] M. S. S. Garmaroodi,\
    \ F. Farivar, M. S. Haghighi, M. A. Shoorehdeli, and\nA. Jolfaei, “Detection of\
    \ anomalies in industrial iot systems by data min-\ning: Study of christ osmotron\
    \ water purification system,” IEEE Internet\nof Things Journal 4662, 1–1 (2020).\n\
    [208] D. Park, S. Kim, Y. An, and J. Y. Jung, “Lired: A light-weight real-time\n\
    fault detection system for edge computing using lstm recurrent neural\nnetworks,”\
    \ Sensors (Switzerland) 18 (2018).\n[209] Y. Liu, N. Kumar, Z. Xiong, W. Y. B.\
    \ Lim, J. Kang, and D. Niyato,\n“Communication-efficient federated learning for\
    \ anomaly detection in in-\ndustrial internet of things,” in “GLOBECOM,” , vol.\
    \ 2020 (2020), vol.\n2020, pp. 1–6.\n[210] H. Zheng, Y. Feng, Y. Gao, and J. Tan,\
    \ “A robust predicted performance\nanalysis approach for data-driven product development\
    \ in the industrial\ninternet of things,” Sensors (Switzerland) 18 (2018).\n[211]\
    \ A. Essien and C. Giannetti, “A deep learning model for smart manu-\nfacturing\
    \ using convolutional lstm neural network autoencoders,” IEEE\nTransactions on\
    \ Industrial Informatics 16, 6069–6078 (2020).\n[212] W. Tao, Z.-H. Lai, M. C.\
    \ Leu, and Z. Yin, “Worker activity recognition\nin smart manufacturing using\
    \ imu and semg signals with convolutional\nneural networks,” Procedia Manufacturing\
    \ 26, 1159–1166 (2018).\n[213] A. R. M. Forkan, F. Montori, D. Georgakopoulos,\
    \ P. P. Jayaraman,\nA. Yavari, and A. Morshed, “An industrial iot solution for\
    \ evaluating\nworkers’ performance via activity recognition,” in “2019 IEEE 39th\
    \ In-\nternational Conference on Distributed Computing Systems (ICDCS),”\n(IEEE,\
    \ 2019), pp. 1393–1403.\n[214] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J.\
    \ Jiang, “A proactive task\ndispatching method based on future bottleneck prediction\
    \ for the smart\nfactory,” International Journal of Computer Integrated Manufacturing\n\
    32, 278–293 (2019). Not included as it is a hybrid.\n[215] B. Brik, B. Bettayeb,\
    \ M. Sahnoun, and F. Duval, “Towards predicting\nsystem disruption in industry\
    \ 4.0: Machine learning-based approach,”\nProcedia Computer Science 151, 667–674\
    \ (2019).\n[216] Y. Han, C. J. Zhang, L. Wang, and Y. C. Zhang, “Industrial IoT\
    \ for Intel-\nligent Steelmaking with Converter Mouth Flame Spectrum Information\n\
    Processed by Deep Learning,” IEEE Transactions on Industrial Informat-\nics 16,\
    \ 2640–2650 (2020).\n[217] J. Wang, Y. Wang, and M. Yu, “A multi-period ambulance\
    \ location and\nallocation problem in the disaster,” Journal of Combinatorial\
    \ Optimiza-\ntion 9, 1–24 (2020). This paper presents a survey about fall detection\n\
    technologies and discusses how sensor fusion is one of the most popular\ntrends,\
    \ both in terms of data as well as algorithm.\n149\n[218] L. Spendla, M. Kebisek,\
    \ P. Tanuska, and L. Hrcka, “Concept of predictive\nmaintenance of production\
    \ systems in accordance with industry 4.0,” in\n“2017 IEEE 15th International\
    \ Symposium on Applied Machine Intelli-\ngence and Informatics (SAMI),” (IEEE,\
    \ 2017), pp. 405–410.\n[219] S. Hwang, J. Jeong, and Y. Kang, “Svm-rbm based predictive\
    \ main-\ntenance scheme for iot-enabled smart factory,” 2018 13th International\n\
    Conference on Digital Information Management, ICDIM 2018 pp. 162–\n167 (2018).\n\
    [220] E.-J. K. J.-H. Kwon, “Failure prediction model using iterative feature\n\
    selection for industrial internet of things,” Symmetry pp. 1–15 (2019).\n[221]\
    \ W. Zhang, W. Guo, X. Liu, Y. Liu, J. Zhou, B. Li, Q. Lu, and S. Yang,\n“Lstm-based\
    \ analysis of industrial iot equipment,” IEEE Access 6, 23551–\n23560 (2018).\n\
    [222] A. Diez, N. L. D. Khoa, M. M. Alamdari, Y. Wang, F. Chen, and P. Run-\n\
    cie, “A clustering approach for structural health monitoring on bridges,”\nJournal\
    \ of Civil Structural Health Monitoring 6, 429–445 (2016).\n[223] J. Guo, X. Xie,\
    \ and R. Bie, “Structural health monitoring by using a\nsparse coding-based deep\
    \ learning algorithm with wireless sensor net-\nworks,” Personal and ubiquitous\
    \ computing 18, 1977–1987 (2014).\n[224] G. Gui, H. Pan, Z. Lin, Y. Li, and Z.\
    \ Yuan, “Data-driven support vector\nmachine with optimization techniques for\
    \ structural health monitoring\nand damage detection,” KSCE Journal of Civil Engineering\
    \ 21, 523–534\n(2017).\n[225] H. V. Dang, H. Tran-ngoc, T. V. Nguyen, G. D. Roeck,\
    \ H. X. Nguyen,\nand S. Member, “Data-driven structural health monitoring using\
    \ feature\nfusion and hybrid deep learning,” IEEE Transactions on Automation Sci-\n\
    ence and Engineering pp. 1–17 (2020).\n[226] J. Vitola, F. Pozo, D. A. Tibaduiza,\
    \ and M. Anaya, “A sensor data fusion\nsystem based on k-nearest neighbor pattern\
    \ classification for structural\nhealth monitoring applications,” Sensors (Switzerland)\
    \ 17 (2017).\n[227] J. Yu, M. Kim, H. C. Bang, S. H. Bae, and S. J. Kim, “IoT\
    \ as a ap-\nplications: cloud-based building management systems for the internet\
    \ of\nthings,” Multimedia Tools and Applications 75, 14583–14596 (2016).\n[228]\
    \ S. Singaravel, P. Geyer, and J. Suykens, “Deep neural network archi-\ntectures\
    \ for component-based machine learning model in building energy\npredictions,”\
    \ Digital Proceedings of the 24th EG-ICE International Work-\nshop on Intelligent\
    \ Computing in Engineering 2017 pp. 260–268 (2017).\n[229] N. A. Eltresy, O. M.\
    \ Dardeer, A. Al-Habal, E. Elhariri, A. H. Hassan,\nA. Khattab, D. N. Elsheakh,\
    \ S. A. Taie, H. Mostafa, H. A. Elsadek, and\n150\nE. A. Abdallah, “Rf energy\
    \ harvesting iot system for museum ambience\ncontrol with deep learning,” Sensors\
    \ (Switzerland) 19 (2019).\n[230] W. Hu, Y. Wen, K. Guan, G. Jin, and K. J. Tseng,\
    \ “itcm : Toward\nlearning-based thermal comfort modeling via pervasive sensing\
    \ for smart\nbuildings,” IEEE Internet of Things Journal 5, 4164–4177 (2018).\n\
    [231] H. Mora and A. Jimeno-morenilla, “Deployment of iot edge and fog com-\n\
    puting technologies to develop smart building services,” Sustainability 10,\n\
    1–23 (2018).\n[232] D. H. Stolfi, E. Alba, and X. Yao, “Predicting car park occupancy\
    \ rates\nin smart cities,” Lecture Notes in Computer Science (including subseries\n\
    Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformat-\nics)\
    \ 10268 LNCS, 107–117 (2017).\n[233] R. K. Lenka, R. K. Barik, N. K. Das, K. Agarwal,\
    \ D. Mohanty, and\nS. Vipsita, “Psps: An iot based predictive smart parking system,”\
    \ 2017\n4th IEEE Uttar Pradesh Section International Conference on Electrical,\n\
    Computer and Electronics, UPCON 2017 2018-Janua, 311–317 (2017).\n[234] G. Ali,\
    \ T. Ali, M. Irfan, U. Draz, M. Sohail, A. Glowacz, M. Sulowicz,\nR. Mielnik,\
    \ Z. B. Faheem, and C. Martis, “Iot based smart parking system\nusing deep long\
    \ short memory network,” Electronics 9, 1696 (2020).\n[235] T. Ebuchi and H. Yamamoto,\
    \ “Vehicle/pedestrian localization system\nusing multiple radio beacons and machine\
    \ learning for smart parking,” in\n“2019 International Conference on Artificial\
    \ Intelligence in Information\nand Communication (ICAIIC),” (IEEE, 2019), pp.\
    \ 086–091.\n[236] F. M. Awan, Y. Saleem, R. Minerva, and N. Crespi, “A comparative\n\
    analysis of machine / deep learning models for parking space availability\nprediction,”\
    \ Sensors 20, 322 (2020).\n[237] X. Sevillano, E. M`armol, and V. Fernandez-Arguedas,\
    \ “Towards smart\ntraffic management systems:\nVacant on-street parking spot detection\n\
    based on video analytics,” FUSION 2014 - 17th International Conference\non Information\
    \ Fusion (2014).\n[238] H. Bura, N. Lin, N. Kumar, S. Malekar, S. Nagaraj, and\
    \ K. Liu, “An\nedge based smart parking solution using camera networks and deep\
    \ learn-\ning,” in “2018 IEEE International Conference on Cognitive Computing\n\
    (ICCC),” (IEEE, 2018), pp. 17–24.\n[239] C. Lee, S. Park, T. Yang, and S.-H. Lee,\
    \ “Smart parking with fine-grained\nlocalization and user status sensing based\
    \ on edge computing,” in “2019\nIEEE 90th Vehicular Technology Conference (VTC2019-Fall),”\
    \ (IEEE,\n2019), pp. 1–5.\n[240] S. S. Aung and T. T. Naing, “Na¨ıve bayes classifier\
    \ based traffic prediction\nsystem on cloud infrastructure,” Proceedings - International\
    \ Conference\n151\non Intelligent Systems, Modelling and Simulation, ISMS 2015-Octob,\n\
    193–198 (2015).\n[241] Y. Liu and H. Wu, “Prediction of road traffic congestion\
    \ based on random\nforest,” Proceedings - 2017 10th International Symposium on\
    \ Computa-\ntional Intelligence and Design, ISCID 2017 2, 361–364 (2018).\n[242]\
    \ W. Wei, H. Wu, and H. Ma, “An autoencoder and lstm-based traffic flow\nprediction\
    \ method,” Sensors 19, 1–16 (2019).\n[243] Y. Xiao, “Hybrid lstm neural network\
    \ for short-term traffic flow predic-\ntion,” Information 10, 105 (2019).\n[244]\
    \ F. Sun, Y. Pan, J. White, and A. Dubey, “Real-Time and Predictive An-\nalytics\
    \ for Smart Public Transportation Decision Support System,” 2016\nIEEE International\
    \ Conference on Smart Computing, SMARTCOMP\n2016 pp. 1–8 (2016).\n[245] N. Dogru\
    \ and A. Subasi, “Traffic accident detection using random forest\nclassifier,”\
    \ 2018 15th Learning and Technology Conference, L and T 2018\npp. 40–45 (2018).\n\
    [246] D. Nallaperuma, R. Nawaratne, T. Bandaragoda, A. Adikari, and\nS. Nguyen,\
    \ “Online incremental machine learning platform for big data-\ndriven smart traffic\
    \ management,” IEEE Transactions on Intelligent\nTransportation Systems 20, 4679–4690\
    \ (2019).\n[247] A. Mukherji, V. Raghuram, S. Pandey, H. Tran, and N. Bulusu,\
    \ “Com-\nmuterscanner: Towards smart indoor positioning systems in urban trans-\n\
    portation,” 2019 11th International Conference on Communication Sys-\ntems and\
    \ Networks, COMSNETS 2019 2061, 619–624 (2019).\n[248] S. Majumdar, M. M. Subhani,\
    \ B. Roullier, A. Anjum, and R. Zhu, “Con-\ngestion prediction for smart sustainable\
    \ cities using iot and machine learn-\ning approaches,” Sustainable Cities and\
    \ Society 64, 102500 (2021).\n[249] F. Peres and M. Castelli, “Combinatorial optimization\
    \ problems and\nmetaheuristics: Review, challenges, design, and development,”\
    \ Applied\nSciences 11, 6449 (2021).\n[250] M. Dorigo and K. Socha, “Ant colony\
    \ optimization,” Handbook of Ap-\nproximation Algorithms and Metaheuristics pp.\
    \ 26–1–26–14 (2007).\n[251] D. Whitley, “A genetic algorithm tutorial,” Statistics\
    \ and computing 4,\n65–85 (1994).\n[252] J. Kennedy and R. Eberhart, “Particle\
    \ swarm optimization,” in “Pro-\nceedings of ICNN’95-international conference\
    \ on neural networks,” , vol. 4\n(IEEE, 1995), vol. 4, pp. 1942–1948.\n[253] V.\
    \ Feoktistov, Differential evolution (Springer, 2006).\n152\n[254] D. Karaboga,\
    \ “Artificial bee colony algorithm,” scholarpedia 5, 6915\n(2010).\n[255] D. C.\
    \ H. Nguyen, J. C. Ascough II, H. R. Maier, G. C. Dandy, and A. A.\nAndales, “Optimization\
    \ of irrigation scheduling using ant colony algo-\nrithms and an advanced cropping\
    \ system model,” Environmental mod-\nelling & software 97, 32–45 (2017).\n[256]\
    \ B. Saeidian, M. S. Mesgari, B. Pradhan, and A. M. Alamri, “Irrigation\nwater\
    \ allocation at farm level based on temporal cultivation-related data\nusing meta-heuristic\
    \ optimisation algorithms,” Water 11, 2611 (2019).\n[257] D. Guo, J. E. Olesen,\
    \ K. Manevski, and X. Ma, “Optimizing irrigation\nschedule in a large agricultural\
    \ region under different hydrologic scenar-\nios,” Agricultural Water Management\
    \ 245, 106575 (2021).\n[258] S. Guo, F. Zhang, C. Zhang, C. An, S. Wang, and P.\
    \ Guo, “A multi-\nobjective hierarchical model for irrigation scheduling in the\
    \ complex canal\nsystem,” Sustainability 11, 24 (2019).\n[259] F. Zhang, C. He,\
    \ F. Yaqiong, X. Hao, and S. Kang, “Canal delivery and\nirrigation scheduling\
    \ optimization based on crop water demand,” Agri-\ncultural Water Management 260,\
    \ 107245 (2022).\n[260] A. Ikudayisi, J. Adeyemo, J. Odiyo, and A. Enitan, “Optimum\
    \ irriga-\ntion water allocation and crop distribution using combined pareto multi-\n\
    objective differential evolution,” Cogent Engineering 5, 1535749 (2018).\n[261]\
    \ J. Wu, R. Huang, T. Fang, and Y. Han, “Multi-objective model of irriga-\ntion\
    \ water distribution based on particle swarm optimization,” in “IOP\nConference\
    \ Series: Earth and Environmental Science,” , vol. 344 (IOP\nPublishing, 2019),\
    \ vol. 344, p. 012087.\n[262] A. L. P. De Ocampo and E. P. Dadios, “Energy cost\
    \ optimization in\nirrigation system of smart farm by using genetic algorithm,”\
    \ in “2017IEEE\n9th International Conference on Humanoid, Nanotechnology, Information\n\
    Technology, Communication and Control, Environment and Management\n(HNICEM),”\
    \ (IEEE, 2017), pp. 1–7.\n[263] L. Zhuo, J. Cheng, and Z. Gong, “Optimal water\
    \ allocation method based\non the genetic algorithm for a system of a reservoir\
    \ and two pumping\nstations,” Water Supply 22, 849–859 (2022).\n[264] R. Li, Y.\
    \ Chang, and Z. Wang, “Study of optimal allocation of water\nresources in dujiangyan\
    \ irrigation district of china based on an improved\ngenetic algorithm,” Water\
    \ Supply 21, 2989–2999 (2021).\n[265] S. K. Roy and D. De, “Genetic algorithm\
    \ based internet of precision agri-\ncultural things (iopat) for agriculture 4.0,”\
    \ Internet of Things p. 100201\n(2020).\n153\n[266] N. Lin, X. Wang, Y. Zhang,\
    \ X. Hu, and J. Ruan, “Fertigation manage-\nment for sustainable precision agriculture\
    \ based on internet of things,”\nJournal of Cleaner Production 277, 124119 (2020).\n\
    [267] C. Arif, B. I. Setiawan, M. Mizoguchi, and B. D. A. Nugroho, “Genetic\n\
    algorithms optimization for water management in irrigated paddy fields,”\nin “IOP\
    \ Conference Series: Earth and Environmental Science,” , vol. 335\n(IOP Publishing,\
    \ 2019), vol. 335, p. 012002.\n[268] WorldBank, “Solid waste management,” (2019).\n\
    [269] S. Sharmin and S. T. Al-Amin, “A cloud-based dynamic waste manage-\nment\
    \ system for smart cities,” Proceedings of the 7th Annual Symposium\non Computing\
    \ for Development, ACM DEV-7 2016 (2016).\n[270] R. Fujdiak, P. Masek, P. Mlynek,\
    \ J. Misurec, and E. Olshannikova, “Us-\ning genetic algorithm for advanced municipal\
    \ waste collection in smart\ncity,” 2016 10th International Symposium on Communication\
    \ Systems,\nNetworks and Digital Signal Processing, CSNDSP 2016 pp. 1–6 (2016).\n\
    [271] R. Assaf and Y. Saleh, “Vehicle-routing optimization for municipal solid\n\
    waste collection using genetic algorithm: the case of southern nablus city,”\n\
    Civil and environmental engineering reports (2017).\n[272] M. A. Hannan, M. S.\
    \ H. Lipu, M. Akhtar, R. A. Begum, M. A. A. Mamum,\nA. Hussain, M. S. Mia, and\
    \ H. Basri, “Solid waste collection optimization\nobjectives, constraints, modeling\
    \ approaches, and their challenges toward\nachieving sustainable development goals,”\
    \ Journal of cleaner production\np. 123557 (2020).\n[273] Y. Zhang, X. Luo, X.\
    \ Han, Y. Lu, J. Wei, and C. Yu, “Optimization of\nurban waste transportation\
    \ route based on genetic algorithm,” Security\nand Communication Networks 2022,\
    \ 1–10 (2022).\n[274] Q. Wei, Z. Guo, H. C. Lau, and Z. He, “An artificial bee\
    \ colony-based\nhybrid approach for waste collection problem with midway disposal\
    \ pat-\ntern,” Applied Soft Computing 76, 629–637 (2019).\n[275] S. P. Raflesia\
    \ and A. K. Pamosoaji, “A novel ant colony optimization\nalgorithm for waste collection\
    \ problem,” in “2019 4th International Con-\nference on Information Technology,\
    \ Information Systems and Electrical\nEngineering (ICITISEE),” (IEEE, 2019), pp.\
    \ 413–416.\n[276] M. Yazdani, K. Kabirifar, B. E. Frimpong, M. Shariati, M. Mirmozaffari,\n\
    and A. Boskabadi, “Improving construction and demolition waste collec-\ntion service\
    \ in an urban area using a simheuristic approach: A case study\nin sydney, australia,”\
    \ Journal of Cleaner Production 280, 124138 (2021).\n[277] S. Idwan, I. Mahmood,\
    \ J. A. Zubairi, and I. Matar, “Optimal management\nof solid waste in smart cities\
    \ using internet of things,” Wireless Personal\nCommunications 110, 485–501 (2020).\n\
    154\n[278] U. M. Faizal, R. Jayachitra, P. Vijayakumar, and M. Rajasekar, “Opti-\n\
    mization of inbound vehicle routes in the collection of bio-medical wastes,”\n\
    Materials Today: Proceedings 45, 692–699 (2021).\n[279] E. B. Tirkolaee, M. Alinaghian,\
    \ A. A. R. Hosseinabadi, M. B. Sasi, and\nA. K. Sangaiah, “An improved ant colony\
    \ optimization for the multi-trip\ncapacitated arc routing problem,” Computers\
    \ and Electrical Engineering\n77, 457–470 (2019).\n[280] “Branch and cut for vehicle\
    \ routing,” .\n[281] “Capacitated vrp instances — vehicle routing problem,” .\n\
    [282] M. Ettappan, V. Vimala, S. Ramesh, and V. T. Kesavan, “Optimal reac-\ntive\
    \ power dispatch for real power loss minimization and voltage stability\nenhancement\
    \ using artificial bee colony algorithm,” Microprocessors and\nMicrosystems 76,\
    \ 103085 (2020).\n[283] C. K. Das, O. Bass, G. Kothapalli, T. S. Mahmoud, and\
    \ D. Habibi,\n“Optimal placement of distributed energy storage systems in distribution\n\
    networks using artificial bee colony algorithm,” Applied energy 232, 212–\n228\
    \ (2018).\n[284] W. S. Sakr, R. A. El-Sehiemy, and A. M. Azmy, “Adaptive differential\n\
    evolution algorithm for efficient reactive power management,” Applied\nSoft Computing\
    \ 53, 336–351 (2017).\n[285] T. T. Nguyen and F. Mohammadi, “Optimal placement\
    \ of tcsc for conges-\ntion management and power loss reduction using multi-objective\
    \ genetic\nalgorithm,” Sustainability 12, 2813 (2020).\n[286] I. I. Atteya, H.\
    \ A. Ashour, N. Fahmi, and D. Strickland, “Distribution net-\nwork reconfiguration\
    \ in smart grid system using modified particle swarm\noptimization,” 2016 IEEE\
    \ International Conference on Renewable Energy\nResearch and Applications, ICRERA\
    \ 2016 5, 305–313 (2016).\n[287] N. Kanwar, N. Gupta, K. R. Niazi, A. Swarnkar,\
    \ and R. C. Bansal, “Si-\nmultaneous allocation of distributed energy resource\
    \ using improved par-\nticle swarm optimization,” Applied Energy 185, 1684–1693\
    \ (2017).\n[288] K. Utkarsh, A. Trivedi, D. Srinivasan, and T. Reindl, “A consensus-\n\
    based distributed computational intelligence technique for real-time opti-\nmal\
    \ control in smart distribution grids,” IEEE Transactions on Emerging\nTopics\
    \ in Computational Intelligence 1, 51–60 (2016).\n[289] A. Askarzadeh, “A memory-based\
    \ genetic algorithm for optimization of\npower generation in a microgrid,” IEEE\
    \ transactions on sustainable en-\nergy 9, 1081–1089 (2017).\n[290] O. H. Mohammed,\
    \ Y. Amirat, and M. Benbouzid, “Economical evaluation\nand optimal energy management\
    \ of a stand-alone hybrid energy system\nhandling in genetic algorithm strategies,”\
    \ Electronics 7, 233 (2018).\n155\n[291] B. K. Das, R. Hassan, M. S. H. K. Tushar,\
    \ F. Zaman, M. Hasan, and\nP. Das, “Techno-economic and environmental assessment\
    \ of a hybrid re-\nnewable energy system using multi-objective genetic algorithm:\
    \ A case\nstudy for remote island in bangladesh,” Energy Conversion and Manage-\n\
    ment 230, 113823 (2021).\n[292] D. K. Geleta and M. S. Manshahia, “Artificial\
    \ bee colony-based optimiza-\ntion of hybrid wind and solar renewable energy system,”\
    \ Research Anthol-\nogy on Clean Energy Management and Solutions pp. 819–842 (2021).\n\
    [293] M. M. Moghaddam, M. Marzband, and F. Azarinejadian, “Optimal en-\nergy management\
    \ for a home microgrid based on multi-period artifi-\ncial bee colony,” in “2017\
    \ Iranian Conference on Electrical Engineering\n(ICEE),” (IEEE, 2017), pp. 1446–1451.\n\
    [294] H. U. R. Habib, S. Wang, A. Waqar, B. S. Farhan, K. M. Kotb, and Y.-S.\n\
    Kim, “Combined heat and power units sizing and energy cost optimization\nof a\
    \ residential building by using an artificial bee colony algorithm,” IEEE\nAccess\
    \ 8, 218289–218303 (2020).\n[295] F. Lezama, J. Soares, R. Faia, T. Pinto, and\
    \ Z. Vale, “A new hybrid-\nadaptive differential evolution for a smart grid application\
    \ under uncer-\ntainty,” in “2018 IEEE Congress on Evolutionary Computation (CEC),”\n\
    (IEEE, 2018), pp. 1–8.\n[296] F. Lezama, L. E. Sucar, E. M. de Cote, J. Soares,\
    \ and Z. Vale, “Differential\nevolution strategies for large-scale energy resource\
    \ management in smart\ngrids,” in “Proceedings of the Genetic and Evolutionary\
    \ Computation\nConference Companion,” (2017), pp. 1279–1286.\n[297] V. Palakonda,\
    \ N. H. Awad, R. Mallipeddi, M. Z. Ali, K. C. Veluvolu,\nand P. N. Suganthan,\
    \ “Differential evolution with stochastic selection\nfor uncertain environments:\
    \ A smart grid application,” in “2018 IEEE\nCongress on Evolutionary Computation\
    \ (CEC),” (IEEE, 2018), pp. 1–7.\n[298] S. Mandal and K. K. Mandal, “Optimal energy\
    \ management of micro-\ngrids under environmental constraints using chaos enhanced\
    \ differential\nevolution,” Renewable Energy Focus 34, 129–141 (2020).\n[299]\
    \ M. Azaza and F. Wallin, “Multi objective particle swarm optimization of\nhybrid\
    \ micro-grid system: A case study in sweden,” Energy 123, 108–118\n(2017).\n[300]\
    \ H. A. Gabbar, M. R. Abdussami, and M. I. Adham, “Optimal planning\nof nuclear-renewable\
    \ micro-hybrid energy system by particle swarm opti-\nmization,” IEEE Access 8,\
    \ 181049–181073 (2020).\n[301] B. A. Bhayo, H. H. Al-Kayiem, S. I. U. Gilani,\
    \ and F. B. Ismail, “Power\nmanagement optimization of hybrid solar photovoltaic-battery\
    \ integrated\nwith pumped-hydro-storage system for standalone electricity generation,”\n\
    Energy Conversion and Management 215, 112942 (2020).\n156\n[302] L. F. Grisales-Nore˜na,\
    \ O. D. Montoya, and C. A. Ramos-Paja, “An en-\nergy management system for optimal\
    \ operation of bss in dc distributed\ngeneration environments based on a parallel\
    \ pso algorithm,” Journal of\nEnergy Storage 29, 101488 (2020).\n[303] M. Mahdavi,\
    \ A. Kimiyaghalam, H. H. Alhelou, M. Javadi, J. P. S. Catal˜ao,\nand A. Ashouri,\
    \ “Transmission expansion planning considering power\nlosses, expansion of substations\
    \ and uncertainty in fuel price using discrete\nartificial bee colony algorithm,”\
    \ IEEE Access (2021).\n[304] T. K. Maji and P. Acharjee, “Multiple solutions of\
    \ optimal pmu placement\nusing exponential binary pso algorithm for smart grid\
    \ applications,” IEEE\nTransactions on Industry Applications 53, 2550–2559 (2017).\n\
    [305] M. B. Rasheed and M. D. R-Moreno, “Minimizing pricing policies based\non\
    \ user load profiles and residential demand responses in smart grids,”\nApplied\
    \ Energy 310, 118492 (2022).\n[306] D. Zhang, Z. Fu, and L. Zhang, “An improved\
    \ ts algorithm for loss-\nminimum reconfiguration in large-scale distribution\
    \ systems,” Electric\nPower Systems Research 77, 685–694 (2007).\n[307] J. P.\
    \ Pell, J. M. Sirel, A. K. Marsden, I. Ford, and S. M. Cobbe, “Effect of\nreducing\
    \ ambulance response times on deaths from out of hospital cardiac\narrest: cohort\
    \ study,” Bmj 322, 1385–1388 (2001).\n[308] RapidSOS, “Outcomes: Quantifying the\
    \ impact of emergency response\ntime - rapidsos,” (2015).\n[309] P. Toth and D.\
    \ Vigo, The vehicle routing problem (SIAM, 2002).\n[310] A. A. Ageev and M. I.\
    \ Sviridenko, “Approximation algorithms for maxi-\nmum coverage and max cut with\
    \ given sizes of parts,” in “International\nConference on Integer Programming\
    \ and Combinatorial Optimization,”\n(Springer, 1999), pp. 17–30.\n[311] E. Mouhcine,\
    \ Y. Karouani, K. Mansouri, and Y. Mohamed, “Toward a\ndistributed strategy for\
    \ emergency ambulance routing problem,” in “2018\n4th International Conference\
    \ on Optimization and Applications (ICOA),”\n(IEEE, 2018), pp. 1–4.\n[312] L.\
    \ Brotcorne, G. Laporte, and F. Semet, “Ambulance location and relo-\ncation models,”\
    \ European journal of operational research 147, 451–463\n(2003).\n[313] M. Benabdouallah,\
    \ C. Bojji, and O. E. Yaakoubi, “Deployment and re-\ndeployment of ambulances\
    \ using a heuristic method and an ant colony\noptimization - case study,” Proceedings\
    \ - 2016 3rd International Confer-\nence on Systems of Collaboration, SysCo 2016\
    \ pp. 1–4 (2017).\n157\n[314] M. Benabdouallah and C. Bojji, “Comparison between\
    \ ga and aco for\nemergency coverage problem in a smart healthcare environment,”\
    \ in “Pro-\nceedings of the 2017 International Conference on Smart Digital Environ-\n\
    ment,” (2017), pp. 48–55.\n[315] Y. A. Kochetov and N. B. Shamray, “Optimization\
    \ of the ambulance fleet\nlocation and relocation,” Journal of Applied and Industrial\
    \ Mathematics\n15, 234–252 (2021).\n[316] Y. Yan, Y. Kong, and Z. Fu, “Dynamic\
    \ resource scheduling in emergency\nenvironment,” Journal of Information Hiding\
    \ and Privacy Protection 1,\n143 (2019).\n[317] Q. Lu and K.-D. Kim, “A genetic\
    \ algorithm approach for expedited cross-\ning of emergency vehicles in connected\
    \ and autonomous intersection traf-\nfic,” Journal of Advanced Transportation\
    \ 2017 (2017).\n[318] H. M. Amer, H. A. Al-Kashoash, A. Kemp, L. Mihaylova, and\
    \ M. May-\nfield, “Coalition game for emergency vehicles re-routing in smart cities,”\n\
    Proceedings of the IEEE Sensor Array and Multichannel Signal Process-\ning Workshop\
    \ 2018-July, 306–310 (2018).\n[319] B. N. Silva and K. Han, “Mutation operator\
    \ integrated ant colony opti-\nmization based domestic appliance scheduling for\
    \ lucrative demand side\nmanagement,” Future generation computer systems 100,\
    \ 557–568 (2019).\n[320] K. N. Bui, I. E. Agbehadji, R. Millham, D. Camacho, and\
    \ J. J. Jung,\n“Distributed artificial bee colony approach for connected appliances\
    \ in\nsmart home energy management system,” Expert Systems 37, e12521\n(2020).\n\
    [321] S. N. Makhadmeh, A. T. Khader, M. A. Al-Betar, S. Naim, Z. A. A.\nAlyasseri,\
    \ and A. K. Abasi, “Particle swarm optimization algorithm for\npower scheduling\
    \ problem using smart battery,” 2019 IEEE Jordan In-\nternational Joint Conference\
    \ on Electrical Engineering and Information\nTechnology, JEEIT 2019 - Proceedings\
    \ pp. 672–677 (2019).\n[322] S. Abid, A. Zafar, R. Khalid, S. Javaid, U. Qasim,\
    \ Z. A. Khan, and\nN. Javaid, “Managing energy in smart homes using binary particle\
    \ swarm\noptimization,” in “Conference on Complex, Intelligent, and Software In-\n\
    tensive Systems,” (Springer, 2017), pp. 189–196.\n[323] I. Fatima, A. Khalid,\
    \ S. Zahoor, A. Yasmeen, S. Arif, U. Zafar, and\nN. Javaid, “Home energy management\
    \ system using ant colony optimiza-\ntion technique in microgrid,” in “International\
    \ Conference on Broadband\nand Wireless Computing, Communication and Applications,”\
    \ (Springer,\n2017), pp. 267–279. Use ACO for appliance scheduling in a microgrid.\n\
    [324] N. U. Rehman, N. Javaid, and Z. A. Khan, “An enhanced differential\nevolution\
    \ based energy management system for smart grids,” in “2017\n158\n31st International\
    \ Conference on Advanced Information Networking and\nApplications Workshops (WAINA),”\
    \ (IEEE, 2017), pp. 132–137.\n[325] I. Gupta, G. N. Anandini, and M. Gupta, “An\
    \ hour wise device scheduling\napproach for demand side management in smart grid\
    \ using particle swarm\noptimization,” 2016 National Power Systems Conference,\
    \ NPSC 2016 pp.\n1–6 (2017).\n[326] M. A. Nasab, M. Zand, M. Eskandari, P. Sanjeevikumar,\
    \ and P. Siano,\n“Optimal planning of electrical appliance of residential units\
    \ in a smart\nhome network using cloud services,” Smart Cities 4, 1173–1195 (2021).\n\
    [327] I. O. Essiet, Y. Sun, and Z. Wang, “Optimized energy consumption model\n\
    for smart home using improved differential evolution algorithm,” Energy\n172,\
    \ 354–365 (2019).\n[328] I. Ullah and D. Kim, “An improved optimization function\
    \ for maximiz-\ning user comfort with minimum energy consumption in smart homes,”\n\
    Energies 10 (2017).\n[329] R. Reghukumar, S. Sambhu, and V. R. Pandi, “Multi-objective\
    \ optimiza-\ntion for efficient home energy management system using differential\
    \ evo-\nlution algorithm,” in “2018 3rd IEEE International Conference on Recent\n\
    Trends in Electronics, Information & Communication Technology (RTE-\nICT),” (IEEE,\
    \ 2018), pp. 1157–1162.\n[330] T. Pamulapati, R. Mallipeddi, and M. Lee, “Multi-objective\
    \ home appli-\nance scheduling with implicit and interactive user satisfaction\
    \ modelling,”\nApplied Energy 267, 114690 (2020).\n[331] A. R. Jordehi, “Binary\
    \ particle swarm optimisation with quadratic trans-\nfer function: A new binary\
    \ optimisation algorithm for optimal schedul-\ning of appliances in smart homes,”\
    \ Applied Soft Computing 78, 465–480\n(2019).\n[332] P. Chandra, A. Das, C. Das,\
    \ A. Naskar, B. Ganguly, and S. Paul, “Dif-\nferential evolution algorithm based\
    \ energy management of residential mi-\ncrogrid under appliance scheduling dsm,”\
    \ in “2020 IEEE VLSI DEVICE\nCIRCUIT AND SYSTEM (VLSI DCS),” (IEEE, 2020), pp.\
    \ 50–55.\n[333] R. Faia, P. Faria, Z. Vale, and J. Spinola, “Demand response optimiza-\n\
    tion using particle swarm algorithm considering optimum battery energy\nstorage\
    \ schedule in a residential house,” Energies 12, 1645 (2019).\n[334] D. Madathil,\
    \ V. R. Pandi, K. Ilango, and M. G. Nair, “Differential evo-\nlution based energy\
    \ management system for zero net energy building,” in\n“2017 International Conference\
    \ on Technological Advancements in Power\nand Energy (TAP Energy),” (IEEE, 2017),\
    \ pp. 1–5.\n159\n[335] H. Swalehe and B. Marungsri, “Intelligent algorithm for\
    \ optimal load\nmanagement in smart home appliance scheduling in distribution\
    \ sys-\ntem,” in “2018 International Electrical Engineering Congress (iEECON),”\n\
    (IEEE, 2018), pp. 1–4.\n[336] J.-C. Chang and T.-H. Wu, “Demand side management\
    \ of power for\ntime-of-use pricing based on particle swarm optimization,” in\
    \ “2020 3rd\nIEEE International Conference on Knowledge Innovation and Invention\n\
    (ICKII),” (IEEE, 2020), pp. 317–320.\n[337] C. Bharathi, D. Rekha, and V. Vijayakumar,\
    \ “Genetic algorithm based\ndemand side management for smart grid,” Wireless Personal\
    \ Communi-\ncations 93, 481–502 (2017).\n[338] Z. Chen, Y. Chen, R. He, J. Liu,\
    \ M. Gao, and L. Zhang, “Multi-objective\nresidential load scheduling approach\
    \ for demand response in smart grid,”\nSustainable Cities and Society 76, 103530\
    \ (2022).\n[339] W. Tao, Z. H. Lai, M. C. Leu, and Z. Yin, “Worker activity recognition\n\
    in smart manufacturing using imu and semg signals with convolutional\nneural networks,”\
    \ Procedia Manufacturing 26, 1159–1166 (2018).\n[340] R. Zhao, R. Yan, Z. Chen,\
    \ K. Mao, P. Wang, and R. X. Gao, “Deep\nlearning and its applications to machine\
    \ health monitoring,” Mechanical\nSystems and Signal Processing 115, 213–237 (2019).\n\
    [341] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J. Jiang, “A proactive task\n\
    dispatching method based on future bottleneck prediction for the smart\nfactory,”\
    \ International Journal of Computer Integrated Manufacturing\n32, 278–293 (2019).\n\
    [342] M. Sadeghi, R. Tavakkoli-Moghaddam, and R. Babazadeh, “An efficient\nartificial\
    \ bee colony algorithm for a p-hub covering location problem with\ntravel time\
    \ reliability.” International Journal of Industrial Engineering 25\n(2018).\n\
    [343] K. Guo, “Research on location selection model of distribution network\n\
    with constrained line constraints based on genetic algorithm,” Neural\nComputing\
    \ and Applications 32, 1679–1689 (2020).\n[344] Y. Su, J. Liu, X. Xiang, and X.\
    \ Zhang, “A responsive ant colony optimiza-\ntion for large-scale dynamic vehicle\
    \ routing problems via pheromone di-\nversity enhancement,” Complex and Intelligent\
    \ Systems pp. 1–16 (2021).\n[345] M. Alinaghian, M. Ghazanfari, N. Norouzi, and\
    \ H. Nouralizadeh, “A\nnovel model for the time dependent competitive vehicle\
    \ routing problem:\nModified random topology particle swarm optimization,” Networks\
    \ and\nSpatial Economics 17, 1185–1211 (2017).\n[346] D. M. Utama, T. A. Fitria,\
    \ and A. K. Garside, “Artificial bee colony\nalgorithm for solving green vehicle\
    \ routing problems with time windows,”\n160\nin “Journal of Physics: Conference\
    \ Series,” , vol. 1933 (IOP Publishing,\n2021), vol. 1933, p. 012043.\n[347] M.\
    \ Ibrahim, F. Nurhakiki, D. Utama, and A. Rizaki, “Optimised genetic\nalgorithm\
    \ crossover and mutation stage for vehicle routing problem pick-\nup and delivery\
    \ with time windows,” in “IOP Conference Series: Materials\nScience and Engineering,”\
    \ , vol. 1071 (IOP Publishing, 2021), vol. 1071,\np. 012025.\n[348] D. A. Mounia\
    \ and D. Bachir, “A hybrid discrete artificial bee colony for\nthe green pickup\
    \ and delivery problem with time windows,” Informatica\n44 (2020).\n[349] Z. Gu,\
    \ Y. Zhu, Y. Wang, X. Du, M. Guizani, and Z. Tian, “Applying\nartificial bee colony\
    \ algorithm to the multidepot vehicle routing problem,”\nSoftware: Practice and\
    \ Experience (2020).\n[350] N. Norouzi, M. Sadegh-Amalnick, and R. Tavakkoli-Moghaddam,\
    \ “Modi-\nfied particle swarm optimization in a time-dependent vehicle routing\
    \ prob-\nlem: minimizing fuel consumption,” Optimization Letters 11, 121–134\n\
    (2017).\n[351] K. K. H. Ng, C. K. M. Lee, S. Z. Zhang, K. Wu, and W. Ho, “A multiple\n\
    colonies artificial bee colony algorithm for a capacitated vehicle routing\nproblem\
    \ and re-routing strategies under time-dependent traffic conges-\ntion,” Computers\
    \ and Industrial Engineering 109, 151–168 (2017).\n[352] M. M. Solomon, “Algorithms\
    \ for the vehicle routing and scheduling prob-\nlems with time window constraints,”\
    \ Operations research 35, 254–265\n(1987).\n[353] Y. Huang, S. A. Ludwig, and\
    \ F. Deng, “Sensor optimization using a ge-\nnetic algorithm for structural health\
    \ monitoring in harsh environments,”\nJournal of Civil Structural Health Monitoring\
    \ 6, 509–519 (2016).\n[354] F. Zhao, H. Bao, S. Xue, and Q. Xu, “Multi-objective\
    \ particle swarm\noptimization of sensor distribution scheme with consideration\
    \ of the ac-\ncuracy and the robustness for deformation reconstruction,” Sensors\
    \ 19,\n1306 (2019).\n[355] C. Yang, K. Liang, X. Zhang, and X. Geng, “Sensor placement\
    \ algorithm\nfor structural health monitoring with redundancy elimination model\
    \ based\non sub-clustering strategy,” Mechanical Systems and Signal Processing\n\
    124, 369–387 (2019).\n[356] A. Downey, C. Hu, and S. Laflamme, “Optimal sensor\
    \ placement within\na hybrid dense sensor network using an adaptive genetic algorithm\
    \ with\nlearning gene pool,” Structural Health Monitoring 17, 450–460 (2018).\n\
    161\n[357] B. Cao, X. Kang, J. Zhao, P. Yang, Z. Lv, and X. Liu, “Differential\n\
    evolution-based 3-d directional wireless sensor network deployment opti-\nmization,”\
    \ IEEE Internet of Things Journal 5, 3594–3605 (2018).\n[358] R. Marks, A. Clarke,\
    \ C. A. Featherston, and R. Pullin, “Optimization of\nacousto-ultrasonic sensor\
    \ networks using genetic algorithms based on ex-\nperimental and numerical data\
    \ sets,” International Journal of Distributed\nSensor Networks 13, 1550147717743702\
    \ (2017).\n[359] H. Liu, X. He, and Y. Jiao, “Damage identification algorithm\
    \ of hinged\njoints for simply supported slab bridges based on modified hinge\
    \ plate\nmethod and artificial bee colony algorithms,” Algorithms 11, 198 (2018).\n\
    [360] H. Tran-Ngoc, S. Khatir, G. D. Roeck, T. Bui-Tien, L. Nguyen-Ngoc, and\n\
    M. A. Wahab, “Model updating for nam o bridge using particle swarm\noptimization\
    \ algorithm and genetic algorithm,” Sensors 18, 4131 (2018).\n[361] K. Gao, Y.\
    \ Zhang, A. Sadollah, and R. Su, “Improved artificial bee colony\nalgorithm for\
    \ solving urban traffic light scheduling problem,” in “2017\nIEEE Congress on\
    \ Evolutionary Computation (CEC),” (IEEE, 2017), pp.\n395–402.\n[362] R. F. Adebiyi,\
    \ K. A. Abubilal, M. B. Mu’azu, and B. H. Adebiyi, “Devel-\nopment and simulation\
    \ of adaptive traffic light controller using artificial\nbee colony algorithm,”\
    \ International Journal of Intelligent Systems and\nApplications 10, 68–74 (2018).\n\
    [363] T. Mao, A.-S. Mihaita, and C. Cai, “Traffic signal control optimization\n\
    under severe incident conditions using genetic algorithm,” arXiv preprint\narXiv:1906.05356\
    \ (2019).\n[364] C. Tang, S. Xia, C. Zhu, and X. Wei, “Phase timing optimization\
    \ for\nsmart traffic control based on fog computing,” IEEE Access 7, 84217–\n\
    84228 (2019).\n[365] Z. Li, M. Shahidehpour, S. Bahramirad, and A. Khodaei, “Optimizing\n\
    traffic signal settings in smart cities,” IEEE Transactions on Smart Grid\n8,\
    \ 2382–2393 (2017).\n[366] X. Chen and Z. Yuan, “Environmentally friendly traffic\
    \ control strategy-\na case study in xi’an city,” Journal of Cleaner Production\
    \ 249, 119397\n(2020).\n[367] E. Korkmaz and A. P. AKG¨UNG¨OR, “Delay estimation\
    \ models for sig-\nnalized intersections using differential evolution algorithm,”\
    \ Journal of\nEngineering Research 5 (2017).\n[368] X. Zhang, X. Fan, S. Yu, A.\
    \ Shan, S. Fan, Y. Xiao, and F. Dang, “Inter-\nsection signal timing optimization:\
    \ A multi-objective evolutionary algo-\nrithm,” Sustainability 2022, Vol. 14,\
    \ Page 1506 14, 1506 (2022).\n162\n[369] M. Wang, H. Dong, X. Li, L. Song, and\
    \ D. Pang, “A novel parking sys-\ntem designed for smart cities,” Proceedings\
    \ - 2017 Chinese Automation\nCongress, CAC 2017 2017-Janua, 3429–3434 (2017).\n\
    [370] I. Aydin, M. Karakose, and E. Karakose, “A navigation and reservation\n\
    based smart parking platform using genetic optimization for smart cities,”\nICSG\
    \ 2017 - 5th International Istanbul Smart Grids and Cities Congress\nand Fair\
    \ pp. 120–124 (2017).\n[371] F. Ferdous and M. S. Mahmud, “Intelligent traffic\
    \ monitoring system us-\ning vanet infrastructure and ant colony optimization,”\
    \ 2016 5th Interna-\ntional Conference on Informatics, Electronics and Vision,\
    \ ICIEV 2016 pp.\n356–360 (2016). The authors in FF16 use ACO in a smart transportation\n\
    system to efficient route vehicles using VANETS.\n[372] F. Pompei, “Ant colony\
    \ optimisation and geolocation technologies for the\ntransportation assignment\
    \ problem,” Proceedings - International Com-\nputer Software and Applications\
    \ Conference 2, 749–753 (2017). The au-\nthors in FP17 use ACO for planning of\
    \ public transport routes for Rome\nusing Phone data from transit users.\n[373]\
    \ A. Rehman, M. M. Rathore, A. Paul, F. Saeed, and R. W. Ahmad, “Ve-\nhicular\
    \ traffic optimisation and even distribution using ant colony in smart\ncity environment,”\
    \ IET Intelligent Transport Systems 12, 594–601 (2018).\n[374] A. Jovanovi´c and\
    \ D. Teodorovi´c, “Fixed-time traffic control at super-\nstreet intersections\
    \ by bee colony optimization,” Transportation Research\nRecord p. 03611981211058104\
    \ (2021).\n[375] T.-H. Nguyen and J. J. Jung, “Ant colony optimization-based traffic\
    \ rout-\ning with intersection negotiation for connected vehicles,” Applied Soft\n\
    Computing 112, 107828 (2021).\n[376] R. Pitakaso, K. Sethanan, and N. Srijaroon,\
    \ “Modified differential evolu-\ntion algorithms for multi-vehicle allocation\
    \ and route optimization for em-\nployee transportation,” Engineering Optimization\
    \ 52, 1225–1243 (2020).\n[377] Y. Yi, K. Choi, and Y. J. Lee, “Optimal limited-stop\
    \ bus routes selec-\ntion using a genetic algorithm and smart card data,” Journal\
    \ of Public\nTransportation 19, 178–198 (2016).\n[378] A. T. Buba and L. S. Lee,\
    \ “Differential evolution with improved sub-\nroute reversal repair mechanism\
    \ for multiobjective urban transit routing\nproblem,” Numerical Algebra, Control\
    \ and Optimization 8, 351 (2018).\n[379] X. Mao, “Study on ant colony optimization\
    \ algorithm for “one-day tour”\ntraffic line,” Cluster Computing 22, 3673–3680\
    \ (2019).\n[380] A. Jovanovi´c, M. Nikoli´c, and D. Teodorovi´c, “Area-wide urban\
    \ traffic\ncontrol: A bee colony optimization approach,” Transportation Research\n\
    Part C: Emerging Technologies 77, 329–350 (2017).\n163\n[381] K. Hassoune, W.\
    \ Dachry, F. Moutaouakkil, and H. Medromi, “Dynamic\nparking guidance architecture\
    \ using ant colony optimization and multi-\nagent systems,” Journal of Advances\
    \ in Information Technology 11, 58–63\n(2020).\n[382] U. Nations, “World population\
    \ prospects: the 2017 revision, key findings\nand advance tables,” Department\
    \ of Economics and Social Affairs PD,\neditor. New York: United Nations (2017).\n\
    [383] WHO, “Falls : Key facts,” (2018).\n[384] R. Afable,\nB. Averbeck,\nK. Holmen,\n\
    R. Dziedzicki,\nA. Nichols,\nJ. Schlegelmilch, and D. Caruso, “When i’m 64: How\
    \ boomers will change\nhealth care,” (2007).\n[385] M. K. James, M. C. Victor,\
    \ S. M. Saghir, and P. A. Gentile, “Characteri-\nzation of fall patients: Does\
    \ age matter?” Journal of Safety Research 64,\n83–92 (2018).\n[386] J. A. Stevens,\
    \ M. F. Ballesteros, K. A. Mack, R. A. Rudd, E. DeCaro, and\nG. Adler, “Gender\
    \ differences in seeking care for falls in the aged medicare\npopulation,” American\
    \ journal of preventive medicine 43, 59–62 (2012).\n[387] J. Morisod and M. Coutaz,\
    \ “Post-fall syndrome: how to recognize and\ntreat it?” Revue M´edicale Suisse\
    \ 3, 2531–2 (2007).\n[388] K. Chaccour, R. Darazi, A. H. El Hassani, and E. Andres,\
    \ “From fall de-\ntection to fall prevention: A generic classification of fall-related\
    \ systems,”\nIEEE Sensors Journal 17, 812–822 (2016).\n[389] A. L. S. D. Lima,\
    \ L. J. W. Evers, T. Hahn, L. Bataille, J. L. Hamilton,\nM. A. Little, Y. Okuma,\
    \ B. R. Bloem, and M. J. Faber, “Freezing of\ngait and fall detection in parkinson’s\
    \ disease using wearable sensors: a\nsystematic review,” Journal of neurology\
    \ 264, 1642–1654 (2017).\n[390] E. E. Geertsema, G. H. Visser, M. A. Viergever,\
    \ and S. N. Kalitzin,\n“Automated remote fall detection using impact features\
    \ from video and\naudio,” Journal of biomechanics 88, 25–32 (2019).\n[391] P.\
    \ Tsinganos and A. Skodras, “A smartphone-based fall detection system\nfor the\
    \ elderly,” in “Proceedings of the 10th International Symposium on\nImage and\
    \ Signal Processing and Analysis,” (IEEE, 2017), pp. 53–58.\n[392] N. El Halabi,\
    \ R. A. Z. Daou, R. Achkar, A. Hayek, and J. B¨orcs¨ok,\n“Monitoring system for\
    \ prediction and detection of epilepsy seizure,” in\n“2019 Fourth International\
    \ Conference on Advances in Computational\nTools for Engineering Applications\
    \ (ACTEA),” (IEEE, 2019), pp. 1–7.\n[393] J. Fleming and C. Brayne, “Inability\
    \ to get up after falling, subsequent\ntime on floor, and summoning help: prospective\
    \ cohort study in people\nover 90,” Bmj 337 (2008).\n164\n[394] K. Ozcan, A. K.\
    \ Mahabalagiri, M. Casares, and S. Velipasalar, “Auto-\nmatic fall detection and\
    \ activity classification by a wearable embedded\nsmart camera,” IEEE journal\
    \ on emerging and selected topics in circuits\nand systems 3, 125–136 (2013).\n\
    [395] A. Ramachandran and A. Karuppiah, “A survey on recent advances in\nwearable\
    \ fall detection systems,” BioMed research international 2020\n(2020).\n[396]\
    \ Q. Guan, C. Li, X. Guo, and B. Shen, “Infrared signal based elderly fall\ndetection\
    \ for in-home monitoring,” in “2017 9th International Confer-\nence on Intelligent\
    \ Human-Machine Systems and Cybernetics (IHMSC),”\n, vol. 1 (IEEE, 2017), vol.\
    \ 1, pp. 373–376.\n[397] A. Yazar, F. Erden, and A. E. Cetin, “Multi-sensor ambient\
    \ assisted\nliving system for fall detection,” in “Proceedings of the IEEE International\n\
    Conference on Acoustics, Speech, and Signal Processing (ICASSP’14),”\n(2014),\
    \ pp. 1–3.\n[398] S. M. Adnan, A. Irtaza, S. Aziz, M. O. Ullah, A. Javed, and\
    \ M. T. Mah-\nmood, “Fall detection through acoustic local ternary patterns,”\
    \ Applied\nAcoustics 140, 296–300 (2018).\n[399] S. Palipana, D. Rojas, P. Agrawal,\
    \ and D. Pesch, “Falldefi: Ubiquitous\nfall detection using commodity wi-fi devices,”\
    \ Proceedings of the ACM\non Interactive, Mobile, Wearable and Ubiquitous Technologies\
    \ 1, 1–25\n(2018).\n[400] I. Halima, J.-M. Lafert´e, G. Cormier, A.-J. Foug`ere,\
    \ and J.-L. Dillenseger,\n“Depth and thermal information fusion for head tracking\
    \ using particle\nfilter in a fall detection context,” Integrated Computer-Aided\
    \ Engineering\npp. 1–14 (2020).\n[401] Q. Han, H. Zhao, W. Min, H. Cui, X. Zhou,\
    \ K. Zuo, and R. Liu, “A\ntwo-stream approach to fall detection with mobilevgg,”\
    \ IEEE Access 8,\n17556–17566 (2020).\n[402] J. Zhang, C. Wu, and Y. Wang, “Human\
    \ fall detection based on body\nposture spatio-temporal evolution,” Sensors 20,\
    \ 946 (2020).\n[403] R. Gupta, P. Anand, S. Chaudhury, B. Lall, and S. Singh,\
    \ “Compressive\nsensing based privacy for fall detection,” arXiv preprint arXiv:2001.03463\n\
    (2020).\n[404] R. Espinosa, H. Ponce, S. Guti´errez, L. Mart´ınez-Villase˜nor,\
    \ J. Brieva,\nand E. Moya-Albor, “Application of convolutional neural networks\
    \ for fall\ndetection using multiple cameras,” in “Challenges and Trends in Multi-\n\
    modal Fall Detection for Healthcare,” (Springer, 2020), pp. 97–120.\n[405] M.\
    \ T. Pourazad, A. Shojaei-Hashemi, P. Nasiopoulos, M. Azimi, M. Mak,\nJ. Grace,\
    \ D. Jung, and T. Bains, “A non-intrusive deep learning based fall\n165\ndetection\
    \ scheme using video cameras,” in “2020 International Conference\non Information\
    \ Networking (ICOIN),” (IEEE, 2020), pp. 443–446.\n[406] Y. Nizam and M. M. A.\
    \ Jamil, “A novel approach for human fall detection\nand fall risk assessment,”\
    \ in “Challenges and Trends in Multimodal Fall\nDetection for Healthcare,” (Springer,\
    \ 2020), pp. 237–259.\n[407] Z. Liu, M. Yang, Y. Yuan, and K. Y. Kan, “Fall detection\
    \ and person-\nnel tracking system using infrared array sensors,” IEEE Sensors\
    \ Journal\n(2020).\n[408] A. Singh, S. U. Rehman, S. Yongchareon, and P. H. J.\
    \ Chong, “Sensor\ntechnologies for fall detection systems: A review,” IEEE Sensors\
    \ Journal\n20, 6889–6919 (2020).\n[409] M. Hubl, O. Pohl, V. Noack, P. Hahlweg,\
    \ C. Ehm, M. Derleh, T. Wei-\nland, E. Schick, H. M¨uller, D. Hampicke et al.,\
    \ “Embedding of wear-\nable electronics into smart sensor insole,” in “2016 IEEE\
    \ 18th Electronics\nPackaging Technology Conference (EPTC),” (IEEE, 2016), pp.\
    \ 597–601.\n[410] T. Shi, X. Sun, Z. Xia, L. Chen, and J. Liu, “Fall detection\
    \ algorithm\nbased on triaxial accelerometer and magnetometer.” Engineering Letters\n\
    24 (2016).\n[411] S. Hwang, M. Ryu, Y. Yang, and N. Lee, “Fall detection with\
    \ three-axis\naccelerometer and magnetometer in a smartphone,” in “Proceedings\
    \ of\nthe International Conference on Computer Science and Technology, Jeju,\n\
    Korea,” (2012), pp. 25–27.\n[412] X. Xi, M. Tang, S. M. Miran, and Z. Luo, “Evaluation\
    \ of feature extrac-\ntion and recognition for activity monitoring and fall detection\
    \ based on\nwearable semg sensors,” Sensors 17, 1229 (2017).\n[413] P. Melillo,\
    \ R. Castaldo, G. Sannino, A. Orrico, G. De Pietro, and L. Pec-\nchia, “Wearable\
    \ technology and ecg processing for fall risk assessment,\nprevention and detection,”\
    \ in “2015 37th Annual International Confer-\nence of the IEEE Engineering in\
    \ Medicine and Biology Society (EMBC),”\n(IEEE, 2015), pp. 7740–7743.\n[414] K.-C.\
    \ Liu, C.-Y. Hsieh, S. J.-P. Hsu, and C.-T. Chan, “Impact of sampling\nrate on\
    \ wearable-based fall detection systems based on machine learning\nmodels,” IEEE\
    \ Sensors Journal 18, 9882–9890 (2018).\n[415] J. Xu, Z. He, and Y. Zhang, “Cnn-lstm\
    \ combined network for iot enabled\nfall detection applications,” in “Journal\
    \ of Physics: Conference Series,” ,\nvol. 1267 (IOP Publishing, 2019), vol. 1267,\
    \ p. 012044.\n[416] D. Mrozek, A. Koczur, and B. Ma lysiak-Mrozek, “Fall detection\
    \ in older\nadults with mobile iot devices and machine learning in the cloud and\
    \ on\nthe edge,” Information Sciences (2020).\n166\n[417] A. Sucerquia, J. D.\
    \ L´opez, and J. F. Vargas-Bonilla, “Sisfall: A fall and\nmovement dataset,” Sensors\
    \ 17, 198 (2017).\n[418] L. M´arquez-Ordaz and H. Ponce, “Implementation of a\
    \ svm on an embed-\nded system: A case study on fall detection,” in “Mexican International\n\
    Conference on Artificial Intelligence,” (Springer, 2020), pp. 76–87.\n[419] D.\
    \ Sarabia-J´acome, R. Usach, C. Palau, and M. Esteve, “Highly-efficient\nfog-based\
    \ deep learning aal fall detection system,” Internet of Things p.\n100185 (2020).\n\
    [420] N. Zurbuchen, P. Bruegger, and A. Wilde, “A comparison of machine\nlearning\
    \ algorithms for fall detection using wearable sensors,” in “2020 In-\nternational\
    \ Conference on Artificial Intelligence in Information and Com-\nmunication (ICAIIC),”\
    \ (IEEE, 2020), pp. 427–431.\n[421] A. Chelli and M. P¨atzold, “A machine learning\
    \ approach for fall detec-\ntion and daily living activity recognition,” IEEE\
    \ Access 7, 38670–38687\n(2019).\n[422] O. Ojetola, E. Gaura, and J. Brusey, “Data\
    \ set for fall events and daily\nactivities from inertial sensors,” in “Proceedings\
    \ of the 6th ACM multi-\nmedia systems conference,” (2015), pp. 243–248.\n[423]\
    \ D. Anguita, A. Ghio, L. Oneto, X. Parra, and J. L. Reyes-Ortiz, “A public\n\
    domain dataset for human activity recognition using smartphones.” in\n“Esann,”\
    \ , vol. 3 (2013), vol. 3, p. 3.\n[424] O. Kerdjidj, N. Ramzan, K. Ghanem, A.\
    \ Amira, and F. Chouireb, “Fall\ndetection and human activity classification using\
    \ wearable sensors and\ncompressed sensing,” Journal of Ambient Intelligence and\
    \ Humanized\nComputing 11, 349–361 (2020).\n[425] A. Burns, B. R. Greene, M. J.\
    \ McGrath, T. J. O’Shea, B. Kuris, S. M.\nAyer, F. Stroiescu, and V. Cionca, “Shimmer™–a\
    \ wireless sensor platform\nfor noninvasive biomedical research,” IEEE Sensors\
    \ Journal 10, 1527–\n1534 (2010).\n[426] M. Fa˜nez, J. R. Villar, E. de la Cal,\
    \ J. Sedano, and V. M. Gonz´alez,\n“Transfer learning and information retrieval\
    \ applied to fall detection,”\nExpert Systems 37, e12522 (2020).\n[427] E. Casilari,\
    \ J. A. Santoyo-Ram´on, and J. M. Cano-Garc´ıa, “Analysis of\na smartphone-based\
    \ architecture with multiple mobility sensors for fall\ndetection,” PLoS one 11,\
    \ e0168069 (2016).\n[428] J. Lin, E. Keogh, S. Lonardi, and B. Chiu, “A symbolic\
    \ representation of\ntime series, with implications for streaming algorithms,”\
    \ in “Proceedings\nof the 8th ACM SIGMOD workshop on Research issues in data mining\n\
    and knowledge discovery,” (2003), pp. 2–11.\n167\n[429] D. Giuffrida, G. Benetti,\
    \ D. D. Martini, and T. Facchinetti, “Fall detec-\ntion with supervised machine\
    \ learning using wearable sensors,” in “2019\nIEEE 17th International Conference\
    \ on Industrial Informatics (INDIN),”\n, vol. 1 (IEEE, 2019), vol. 1, pp. 253–259.\n\
    [430] E. Casilari, M. ´Alvarez-Marco, and F. Garc´ıa-Lagos, “A study of the use\n\
    of gyroscope measurements in wearable fall detection systems,” Symmetry\n12, 649\
    \ (2020).\n[431] G. L. Santos, P. T. Endo, K. H. d. C. Monteiro, E. d. S. Rocha,\
    \ I. Silva,\nand T. Lynn, “Accelerometer-based human fall detection using convolu-\n\
    tional neural networks,” Sensors 19, 1644 (2019).\n[432] B. Kwolek and M. Kepski,\
    \ “Human fall detection on embedded platform\nusing depth maps and wireless accelerometer,”\
    \ Computer methods and\nprograms in biomedicine 117, 489–501 (2014).\n[433] T.\
    \ R. Mauldin, M. E. Canby, V. Metsis, A. H. Ngu, and C. C. Rivera,\n“Smartfall:\
    \ A smartwatch-based fall detection system using deep learn-\ning,” Sensors 18,\
    \ 3363 (2018).\n[434] K. Simonyan and A. Zisserman, “Very deep convolutional networks\
    \ for\nlarge-scale image recognition,” arXiv preprint arXiv:1409.1556 (2014).\n\
    [435] A. Alarifi and A. Alwadain, “Killer heuristic optimized convolution neural\n\
    network-based fall detection with wearable iot sensor devices,” Measure-\nment\
    \ 167, 108258 (2021).\n[436] M. Waheed, H. Afzal, and K. Mehmood, “Nt-fds—a noise\
    \ tolerant fall\ndetection system using deep learning on wearable devices,” Sensors\
    \ 21,\n2006 (2021).\n[437] L. Mart´ınez-Villase˜nor, H. Ponce, J. Brieva, E. Moya-Albor,\
    \ J. N´u˜nez-\nMart´ınez, and C. Pe˜nafort-Asturiano, “Up-fall detection dataset:\
    \ A mul-\ntimodal approach,” Sensors 19, 1988 (2019).\n[438] E. Casilari, R. Lora-Rivera,\
    \ and F. Garc´ıa-Lagos, “A study on the appli-\ncation of convolutional neural\
    \ networks to fall detection evaluated with\nmultiple public datasets,” Sensors\
    \ 20, 1466 (2020).\n[439] R. Delgado-Escano, F. M. Castro, J. R. C´ozar, M. J.\
    \ Mar´ın-Jim´enez,\nN. Guil, and E. Casilari, “A cross-dataset deep learning-based\
    \ classifier\nfor people fall detection and identification,” Computer methods\
    \ and pro-\ngrams in biomedicine 184, 105265 (2020).\n[440] C. Medrano, R. Igual,\
    \ I. Plaza, and M. Castro, “Detecting falls as novelties\nin acceleration patterns\
    \ acquired with smartphones,” PloS one 9, e94811\n(2014).\n[441] D. Micucci, M.\
    \ Mobilio, and P. Napoletano, “Unimib shar: A dataset for\nhuman activity recognition\
    \ using acceleration data from smartphones,”\nApplied Sciences 7, 1101 (2017).\n\
    168\n[442] A. T. ¨Ozdemir, “An analysis on sensor locations of the human body\
    \ for\nwearable fall detection devices: Principles and practice,” Sensors 16,\
    \ 1161\n(2016).\n[443] M. Tolkiehn, L. Atallah, B. Lo, and G.-Z. Yang, “Direction\
    \ sensitive\nfall detection using a triaxial accelerometer and a barometric pressure\n\
    sensor,” in “2011 Annual international conference of the IEEE engineering\nin\
    \ medicine and biology society,” (IEEE, 2011), pp. 369–372.\n[444] B. Watanapa,\
    \ O. Patsadu, P. Dajpratham, and C. Nukoolkit, “Post-fall\nintelligence supporting\
    \ fall severity diagnosis using kinect sensor,” Ap-\nplied Computational Intelligence\
    \ and Soft Computing 2018 (2018).\n[445] H. Jung, B. Koo, J. Kim, T. Kim, Y. Nam,\
    \ and Y. Kim, “Enhanced\nalgorithm for the detection of preimpact fall for wearable\
    \ airbags,” Sensors\n20, 1277 (2020).\n[446] B. Koo, J. Kim, Y. Nam, and Y. Kim,\
    \ “The performance of post-fall de-\ntection using the cross-dataset: Feature\
    \ vectors, classifiers and processing\nconditions,” Sensors 21, 4638 (2021).\n\
    [447] C.-Y. Hsieh, H.-Y. Huang, K.-C. Liu, C.-P. Liu, C.-T. Chan, and S. J.-P.\n\
    Hsu, “Multiphase identification algorithm for fall recording systems using\na\
    \ single wearable inertial sensor,” Sensors 21, 3302 (2021).\n[448] M. Musci,\
    \ D. De Martini, N. Blago, T. Facchinetti, and M. Piastra,\n“Online fall detection\
    \ using recurrent neural networks,” arXiv preprint\narXiv:1804.04976 (2018).\n\
    [449] X. Yu, H. Qiu, and S. Xiong, “A novel hybrid deep neural network to pre-\n\
    dict pre-impact fall for older people based on wearable inertial sensors,”\nFrontiers\
    \ in bioengineering and biotechnology 8 (2020).\n[450] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Detection of fall direction using\na velocity vector in the android\
    \ smartphone environment,” Journal of\nthe Korea Institute of Information and\
    \ Communication Engineering 19,\n336–342 (2015).\n[451] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Fall direction detection using the\ncomponents of acceleration\
    \ vector and orientation sensor on the smart-\nphone environment,” Journal of\
    \ Korea Multimedia Society 18, 565–574\n(2015).\n[452] J. K. Lee, “Determination\
    \ of fall direction before impact using support\nvector machine,” Journal of Sensor\
    \ Science and Technology 24, 47–53\n(2015).\n[453] S. F. Hossain, M. Z. Islam,\
    \ and M. L. Ali, “Real time direction-sensitive\nfall detection system using accelerometer\
    \ and learning classifier,” in\n“2017 4th International Conference on Advances\
    \ in Electrical Engineering\n(ICAEE),” (IEEE, 2017), pp. 99–104.\n169\n[454] F.\
    \ Hossain, M. L. Ali, M. Z. Islam, and H. Mustafa, “A direction-sensitive\nfall\
    \ detection system using single 3d accelerometer and learning classifier,”\nin\
    \ “2016 International Conference on Medical Engineering, Health Infor-\nmatics\
    \ and Technology (MediTec),” (IEEE, 2016), pp. 1–6.\n[455] L. Palmerini, J. Klenk,\
    \ C. Becker, and L. Chiari, “Accelerometer-based\nfall detection using machine\
    \ learning: Training and testing on real-world\nfalls,” Sensors 20, 6479 (2020).\n\
    [456] R. M. Gibson, A. Amira, N. Ramzan, P. C. de-la Higuera, and Z. Pervez,\n\
    “Multiple comparator classifier framework for accelerometer-based fall de-\ntection\
    \ and diagnostic,” Applied Soft Computing 39, 94–103 (2016).\n[457] F. Hussain,\
    \ F. Hussain, M. Ehatisham-ul Haq, and M. A. Azam,\n“Activity-aware fall detection\
    \ and recognition based on wearable sensors,”\nIEEE Sensors Journal 19, 4528–4536\
    \ (2019).\n[458] H. Li, A. Shrestha, H. Heidari, J. Le Kernec, and F. Fioranelli,\
    \ “Bi-lstm\nnetwork for multimodal continuous human activity recognition and fall\n\
    detection,” IEEE Sensors Journal 20, 1191–1201 (2019).\n[459] X. Wu, Y. Zheng,\
    \ C.-H. Chu, L. Cheng, and J. Kim, “Applying deep\nlearning technology for automatic\
    \ fall detection using mobile sensors,”\nBiomedical Signal Processing and Control\
    \ 72, 103355 (2022).\n[460] G. Vavoulas, C. Chatzaki, T. Malliotakis, M. Pediaditis,\
    \ and M. Tsik-\nnakis, “The mobiact dataset: Recognition of activities of daily\
    \ living using\nsmartphones.” in “ICT4AgeingWell,” (2016), pp. 143–151.\n[461]\
    \ G.\nS¸eng¨ul,\nM.\nKarakaya,\nS.\nMisra,\nO.\nO.\nAbayomi-Alli,\nand\nR. Damaˇseviˇcius,\
    \ “Deep learning based fall detection using smartwatches\nfor healthcare applications,”\
    \ Biomedical Signal Processing and Control\n71, 103242 (2022).\n[462] H.-L. Le,\
    \ D.-N. Nguyen, T.-H. Nguyen, and H.-N. Nguyen, “A novel fea-\nture set extraction\
    \ based on accelerometer sensor data for improving the\nfall detection system,”\
    \ Electronics 11, 1030 (2022).\n[463] H. Yhdego, J. Li, C. Paolini, and M. Audette,\
    \ “Wearable sensor gait\nanalysis of fall detection using attention network,”\
    \ in “2021 IEEE Inter-\nnational Conference on Bioinformatics and Biomedicine\
    \ (BIBM),” (IEEE,\n2021), pp. 3137–3141.\n[464] M. Liu, S. Ren, S. Ma, J. Jiao,\
    \ Y. Chen, Z. Wang, and W. Song, “Gated\ntransformer networks for multivariate\
    \ time series classification,” arXiv\npreprint arXiv:2103.14438 (2021).\n[465]\
    \ X. Yu, J. Jang, and S. Xiong, “A large-scale open motion dataset (kfall)\nand\
    \ benchmark algorithms for detecting pre-impact fall of the elderly\nusing wearable\
    \ inertial sensors,” Frontiers in Aging Neuroscience p. 399\n(2021).\n170\n[466]\
    \ J. A. Santoyo-Ram´on, E. Casilari, and J. M. Cano-Garc´ıa, “A study of\none-class\
    \ classification algorithms for wearable fall sensors,” Biosensors\n11 (2021).\n\
    [467] N. Zurbuchen, A. Wilde, and P. Bruegger, “A machine learning multi-\nclass\
    \ approach for fall detection systems based on wearable sensors with\na study\
    \ on sampling rates selection,” Sensors 21, 938 (2021).\n[468] M. Musci, D. De\
    \ Martini, N. Blago, T. Facchinetti, and M. Piastra, “On-\nline fall detection\
    \ using recurrent neural networks on smart wearable de-\nvices,” IEEE Transactions\
    \ on Emerging Topics in Computing 9, 1276–\n1289 (2020).\n[469] E. Boutellaa,\
    \ K. Ghanem, H. Tayakout, O. Kerdjidj, F. Harizi, and\nS. Bourennane, “A tensor\
    \ approach for activity recognition and fall de-\ntection using wearable inertial\
    \ sensors,” in “2020 First International Con-\nference of Smart Systems and Emerging\
    \ Technologies (SMARTTECH),”\n(IEEE, 2020), pp. 203–207.\n[470] S. Rosati, G.\
    \ Balestra, and M. Knaflitz, “Comparison of different sets of\nfeatures for human\
    \ activity recognition by wearable sensors,” Sensors 18,\n4189 (2018).\n[471]\
    \ J. O. Smith, Mathematics of the discrete Fourier transform (DFT): with\naudio\
    \ applications (Julius Smith, 2007).\n[472] M. A. O’Reilly, W. Johnston, C. Buckley,\
    \ D. Whelan, and B. Caulfield,\n“The influence of feature selection methods on\
    \ exercise classification with\ninertial measurement units,” in “2017 IEEE 14th\
    \ International Conference\non Wearable and Implantable Body Sensor Networks (BSN),”\
    \ (IEEE,\n2017), pp. 193–196.\n[473] A. Liaw, M. Wiener et al., “Classification\
    \ and regression by randomfor-\nest,” R news 2, 18–22 (2002).\n[474] O. Rioul\
    \ and M. Vetterli, “Wavelets and signal processing,” IEEE signal\nprocessing magazine\
    \ 8, 14–38 (1991).\n[475] M. G. Abdu-Aguye and W. Gomaa, “Competitive feature\
    \ extraction for\nactivity recognition based on wavelet transforms and adaptive\
    \ pooling,”\nin “2019 International Joint Conference on Neural Networks (IJCNN),”\n\
    (IEEE, 2019), pp. 1–8.\n[476] ¨U. Lepik and H. Hein, “Haar wavelets,” in “Haar\
    \ Wavelets,” (Springer,\n2014), pp. 7–20.\n[477] K. He, X. Zhang, S. Ren, and\
    \ J. Sun, “Spatial pyramid pooling in deep\nconvolutional networks for visual\
    \ recognition,” IEEE transactions on pat-\ntern analysis and machine intelligence\
    \ 37, 1904–1916 (2015).\n171\n[478] C. N. Silla and A. A. Freitas, “A survey of\
    \ hierarchical classification across\ndifferent application domains,” Data Mining\
    \ and Knowledge Discovery\n22, 31–72 (2011).\n[479] S. B. Khojasteh, J. R. Villar,\
    \ C. Chira, V. M. Gonz´alez, and E. De la\nCal, “Improving fall detection using\
    \ an on-wrist wearable accelerometer,”\nSensors 18, 1350 (2018).\n[480] Q. T.\
    \ Huynh and B. Q. Tran, “Time-frequency analysis of daily activities\nfor fall\
    \ detection,” Signals 2, 1–12 (2021).\n[481] J. Wang, X. Zhang, Q. Gao, X. Ma,\
    \ X. Feng, and H. Wang, “Device-free si-\nmultaneous wireless localization and\
    \ activity recognition with wavelet fea-\nture,” IEEE Transactions on Vehicular\
    \ Technology 66, 1659–1669 (2016).\n[482] C. Ellouzi and M. Trkov, “Fast trip\
    \ detection using continuous wavelet\ntransform,” in “Proceedings of the Poster,\
    \ Dynamic Walking Conference,”\n(2021).\n[483] J. Gu, Z. Wang, J. Kuen, L. Ma,\
    \ A. Shahroudy, B. Shuai, T. Liu, X. Wang,\nG. Wang, J. Cai et al., “Recent advances\
    \ in convolutional neural net-\nworks,” Pattern Recognition 77, 354–377 (2018).\n\
    [484] D. Bhatt, C. Patel, H. Talsania, J. Patel, R. Vaghela, S. Pandya, K. Modi,\n\
    and H. Ghayvat, “Cnn variants for computer vision: History, architecture,\napplication,\
    \ challenges and future scope,” Electronics 10, 2470 (2021).\n[485] S. P. Singh,\
    \ L. Wang, S. Gupta, H. Goli, P. Padmanabhan, and B. Guly´as,\n“3d deep learning\
    \ on medical images: a review,” Sensors 20, 5097 (2020).\n[486] S. Latif, R. Rana,\
    \ S. Khalifa, R. Jurdak, J. Qadir, and B. W. Schuller,\n“Survey of deep representation\
    \ learning for speech emotion recognition,”\nIEEE Transactions on Affective Computing\
    \ (2021).\n[487] F. G. Pratic`o, R. Fedele, V. Naumov, and T. Sauer, “Detection\
    \ and mon-\nitoring of bottom-up cracks in road pavement using a machine-learning\n\
    approach,” Algorithms 13, 81 (2020).\n[488] K. Saho, S. Hayashi, M. Tsuyama, L.\
    \ Meng, and M. Masugi, “Machine\nlearning-based classification of human behaviors\
    \ and falls in restroom via\ndual doppler radar measurements,” Sensors 22, 1721\
    \ (2022).\n[489] J. Kakarla, B. V. Isunuri, K. S. Doppalapudi, and K. S. R. Byla-\n\
    pudi, “Three-class classification of brain magnetic resonance images using\naverage-pooling\
    \ convolutional neural network,” International Journal of\nImaging Systems and\
    \ Technology 31, 1731–1740 (2021).\n[490] J. Yang, F. Xie, H. Fan, Z. Jiang, and\
    \ J. Liu, “Classification for der-\nmoscopy images using convolutional neural\
    \ networks based on region av-\nerage pooling,” IEEE Access 6, 65130–65138 (2018).\n\
    172\n[491] M. H. Mohd Noor, S. Y. Tan, and M. N. Ab Wahab, “Deep temporal\nconv-lstm\
    \ for activity recognition,” Neural Processing Letters pp. 1–23\n(2022).\n[492]\
    \ M. I. Amara, A. Akkouche, E. Boutellaa, and H. Tayakout, “A smart-\nphone application\
    \ for fall detection using accelerometer and convlstm\nnetwork,” in “2020 2nd\
    \ International Workshop on Human-Centric Smart\nEnvironments for Health and Well-being\
    \ (IHSH),” (IEEE, 2021), pp. 92–\n96.\n[493] J. Du, Z. Zhang, M. Li, J. Guo, and\
    \ K. Zhu, “Optimal scheduling of\nintegrated energy system based on improved grey\
    \ wolf optimization algo-\nrithm,” Scientific Reports 12, 1–19 (2022).\n[494]\
    \ N. Mazyavkina, S. Sviridov, S. Ivanov, and E. Burnaev, “Reinforcement\nlearning\
    \ for combinatorial optimization: A survey,” Computers & Oper-\nations Research\
    \ 134, 105400 (2021).\n173\nAppendix A: Sample Plots for different fall categories\n\
    Sample plots of the windowed accelerometer and gyroscope measurements of\ndifferent\
    \ fall types.\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n\
    500\n0\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n-10,000\n\
    -8000\n-6000\n-4000\n-2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n-10,000\n-8000\n-6000\n-4000\n-2000\n0\n2000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n1200\n1000\n800\n\
    600\n400\n200\n0\n200\n400\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n2000\n0\n2000\n4000\n6000\n8000\nAmplitude\nGyro Z\nForward Hard Fall\n\
    Figure 1. Accelerometer and Gyroscope measurements: Forward Hard Fall\n174\n0\n\
    100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n0\nAmplitude\n\
    Acc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n\
    500\n1000\n1500\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    200\n100\n0\n100\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n4000\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n400\n300\n200\n100\n0\nAmplitude\nAcc Z\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro Z\nForward Soft Fall\nFigure 2. Accelerometer and Gyroscope measurements:\
    \ Forward Soft Fall\n175\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n2000\n0\n2000\n4000\n6000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n2000\n1500\n1000\n500\n0\n500\nAmplitude\nAcc Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro\
    \ Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n200\n0\n200\n400\n600\n800\n\
    Amplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n500\n0\n500\n\
    1000\n1500\nAmplitude\nGyro Z\nBackward Hard Fall\nFigure 3. Accelerometer and\
    \ Gyroscope measurements: Backward Hard Fall\n176\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n600\n500\n400\n300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n\
    0\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\n600\nAmplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n300\n200\n100\n0\n100\n200\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\n800\n1000\nAmplitude\nGyro\
    \ Z\nBackward Soft Fall\nFigure 4. Accelerometer and Gyroscope measurements:f\
    \ Backward Soft Fall\n177\n0\n100\n200\n300\n400\n500\n600\nSample no\n1750\n\
    1500\n1250\n1000\n750\n500\n250\n0\n250\nAmplitude\nAcc X\n0\n100\n200\n300\n\
    400\n500\n600\nSample no\n6000\n4000\n2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n\
    0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n250\n200\n150\n\
    100\n50\n0\n50\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    1000\n0\n1000\n2000\n3000\n4000\n5000\n6000\n7000\nAmplitude\nGyro Z\nLateral\
    \ Hard Fall\nFigure 5. Accelerometer and Gyroscope measurements: Lateral Hard\
    \ Fall\n178\n0\n100\n200\n300\n400\n500\n600\nSample no\n700\n600\n500\n400\n\
    300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro X\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n1500\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n150\n100\n50\n\
    0\n50\n100\n150\n200\n250\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n1000\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro Z\n\
    Lateral Soft Fall \nFigure 6. Acclerometer and Gyroscope measurements: Lateral\
    \ Soft Fall\n179\nAppendix B: Acronyms\nABC - Artificial Bee Colony\nACO - Ant\
    \ Colony Optimization\nAdaBoost - Adaptive Boosting\nADL - Activity of Daily Living\n\
    AI - Artificial intelligence\nANN - Artificial Neural Networks\nBi-LSTM - Bi-Directional\
    \ Long Short-Term Memory\nCERT - Computer Emergency Response Team\nCNN - Convolutional\
    \ Neural Networks\nCO - Carbon Monoxide\nCO2 - Carbon Dioxide\nDARPA - Defense\
    \ Advanced Research Projects Agency\nDDOS - Distributed Denial of Service\nDE\
    \ - Differential Evolution\nDER - Distributed energy resource\nDOS - Denial of\
    \ Service\nDL – Deep Learning\nDLEFN - Deep Learning Entrusted to Fog Nodes\n\
    DNN - Deep Neural Networks\nDT - Decision Tree\nEBT - Ensemble Bagged Tree\nEC\
    \ - Ensemble Classifier\nECG - ElectroCardioGram\nEEG - ElectroEncepheloGram\n\
    EMG – ElectroMyoGram\nETSI - European Telecommunications Standards Institute\n\
    FANs - Field Area Networks\nFDS - Fall Detection System\nFN - False Negative\n\
    GA - Genetic Algorithm\nGRU - Gated Recurrent Units\nGSM - Global System for Mobile\
    \ Communications\nHANs - Home Area Networks\nICT - information and communication\
    \ technologies\nIEEE - Institute of Electrical and Electronic Engineers\nIETF\
    \ - Internet Engineering Task Force\nIQ Range - Interquartile Range\nIMU – Inertial\
    \ Measurement Unit\n180\nIoT - Internet of Things\nISM - Industrial, Scientific\
    \ and Medical\nK-NN - K-Nearest Neighbor\nLDA - Linear Discriminant Analysis\n\
    Li-Fi - Light Fidelity\nLoRaWAN - Long Range Wide Area Network\nLPWAN - Low Power\
    \ Wide Area Network\nLR - Logistic Regression\nLSDVRP - Large-scale Dynamic Vehicle\
    \ Routing Problem\nLSTM - Long Short-Term Machine\nLTE - Long-Term Evolution\n\
    MITM - Man in the Middle\nML - Machine Learning\nMVRP - Multidepot Vehicle Routing\
    \ Problem\nNANs - Neighborhood Area Networks\nNB - Naive Bayes\nNB-IoT - Narrow\
    \ Band IoT\nNFC - Near Field Communication\nOSP - Optimal Sensor Placement\nPCA\
    \ - Principal Component Analysis\nPIR - Passive InfraRed\nPMU - Phase Measurement\
    \ Units\nPSD - Power Spectral Density\nPSE - Power Spectral Entropy\nPSO - Particle\
    \ Swarm Optimization\nPPCA - Probabilistic Principal Component Analysis\nPV -\
    \ photo voltaic\nP2I - Pedestrian to Infrastructure\nQSVM - Quadratic Support\
    \ Vector Machine\nRBF - Radial Basis Function\nRF – Radio Frequency\nRFC - Random\
    \ Forest Classifier\nRFID - Radio Frequency Identification\nRF-RFE - Random Forest\
    \ Recursive Feature Elimination\nRMS - Root Mean Squared\nRNN - Recurrent Neural\
    \ Networks\nSAE - Stacked Autoencoder Networks\nSAX - Symbolic Aggregate Approximation\n\
    SHM - Structural Health Monitoring\nSMV - Signal Magnitude Vector\nSWOT - Strength\
    \ Weaknesses Opportunities Threat\nSVM - Support Vector Machine\nTLS - Transport\
    \ Layer Security\nTP - True Positive\nVANET - Vehicular Adhoc NETworks\n181\n\
    VM - Voting machine\nVRP - Vehicle Routing Problem\nVRPPDTW - Vehicle Routing\
    \ Problem Pick-up and Delivery with Time Win-\ndows\nV2V - Vehicle to Vehicle\n\
    V2I - Vehicle to Infrastructure\nV2P - Vehicle to Pedestrian\nWANs - Wide Area\
    \ Networks\nWi-Fi - Wireless Fidelity\nWi-SUN - Wireless Smart Utility Network\n\
    WPA2 - Wi-Fi Protected Access 2\nWSNs - wireless sensor networks\nXGBoost - Extreme\
    \ Gradient Boost\nZ-Wave - Zensys Wave\n182\nCURRICULUM VITA\nNAME:\nMuhammmad\
    \ Zaigham Abbas Shah Syed\nADDRESS:\nComputer Science and Engineering Department\n\
    J.B Speed School of Engineering\nUniversity of Louisville\nLouisville, KY 40292\n\
    United States of America.\n2022\nUniversity of Louisville, Louisville, KY, USA.\n\
    M.Sc. in Electronic and Electrical Engineering, Novem-\nber 2013\nUniversity of\
    \ Strathclyde, Glasgow, United King-\ndom\nB.Eng in Electronics Engineering, March\
    \ 2010\nMehran University of Engineering and Technol-\nogy, Jamshoro, Pakistan\n\
    WORK\nEX-\nPERIENCE:\nGraduate Assistant, Innovative Technologies Lab,\nUniversity\
    \ of Louisville, KY, USA, 2022\n183\nPh.D., Computer Science & Engineering, December\n\
    EDUCATION:\nPUBLICATIONS:\nJOURNAL\n1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup\
    \ Kumar, and Adel Elmaghraby.\nIoT in smart cities: a survey of technologies,\
    \ practices and challenges. Smart Cities,\nvol. 4, no. 2, pp. 429–475, 2021\n\
    2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nMaking\
    \ Cities Smarter—Optimization Problems for the IoT Enabled Smart City\nDevelopment:\
    \ A Mapping of Applications, Objectives, Constraints.Sensors, vol. 22,\nno. 12,\
    \ p. 4380, 2022\n3. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel\
    \ Elmaghraby. A\nhierarchical approach to activity recognition and fall detection\
    \ using wavelets and\nadaptive pooling.Sensors, vol. 21, no. 19, p. 6653, 2021\n\
    4. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby. A\ndeep\
    \ convolutional neural network-XGB for direction and severity aware fall detec-\n\
    tion and activity recognition.Sensors, vol. 22, no. 7, p. 2547, 2022\nCONFERENCE\n\
    1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nCross\
    \ dataset non-binary fall detection using a ConvLSTM-attention network. (ac-\n\
    cepted at IEEE GlobeCOM 2022).\n2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar,\
    \ and Adel Elmaghraby.\nDetermining Fall direction and severity using SVMs.2020\
    \ IEEE International Sym-\nposium on Signal Processing and Information Technology\
    \ (ISSPIT),2020, pp. 1–7.\n184\n"
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://ir.library.louisville.edu/cgi/viewcontent.cgi?article=5278&context=etd
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: IoT in smart communities, technologies and applications.
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.31223/x5594k
  analysis: '>'
  authors:
  - Talat Satilmsioglu
  - Yusuf Sermet
  - İbrahim Demir
  citation_count: 0
  full_citation: '>'
  full_text: ">\nBlockchain Applications and Opportunities for Water Resources and\
    \ Hydrology: A \nSystematic Review \n \nTalat Kemal Satilmisoglu1, Yusuf Sermet2,\
    \ Ibrahim Demir2,3,4 \n \n1 Earth System Science, Middle East Technical University,\
    \ Ankara, Turkey \n2 IIHR – Hydroscience & Engineering, University of Iowa, Iowa\
    \ City, IA, USA \n3 Civil and Environmental Engineering, University of Iowa, Iowa\
    \ City, IA, USA \n4 Electrical and Computer Engineering, University of Iowa, Iowa\
    \ City, IA, USA \n \nAbstract \nAlthough blockchain technology was first applied\
    \ for peer-to-peer financial transactions, it has \nbeen used for the digitalization\
    \ of physical asset management and data management processes in \nmany areas in\
    \ the industry and academia, including the water domain. Its potential as an immutable\
    \ \ndata storage system and smart contract integration has provided a plethora\
    \ of use cases and utility \nin the domain of hydrology and water resources. In\
    \ this article, a comprehensive systematic \nliterature review on blockchain applications,\
    \ opportunities and challenges for the water sector is \nconducted. The study\
    \ provides the examination of academic publications, technical reports, \nwhitepapers,\
    \ hackathon projects, non-academic content and evaluation of the published year,\
    \ \nfocused hydrology sub-domain, utilized blockchain networks, tools, and development\
    \ level of \napplication of reviewed content. The current status of blockchain\
    \ technology in the hydrology \nliterature, potential application areas in the\
    \ water sector, research gaps, and challenges are \ndiscussed from different perspectives,\
    \ and future study areas are recommended.  \n \nKeywords: blockchain, distributed\
    \ ledger, smart contract, hydrology, water resources \n \n \n \n \n \n \n \n \n\
    \ \nThis manuscript is an EarthArXiv preprint and has been submitted for possible\
    \ publication in a \npeer-reviewed journal. Subsequent versions of this manuscript\
    \ may have slightly different content. \nPlease feel free to contact the corresponding\
    \ author for feedback. \n \n \n \n1. Introduction \nThe life of modern societies\
    \ in the 21st century depends on the compatibility of artificial and natural \n\
    complex systems such as the hydrological cycle and urban water systems (Beck et\
    \ al., 2010), \nnatural energy sources and renewable energy systems, climate extremes\
    \ and disaster mitigation \n(Ewing and Demir, 2021), and the agricultural supply\
    \ chain and resilient infrastructures (Alabbad \net al., 2021). More compatible\
    \ natural and artificial system integration is possible by making more \nmeasurements\
    \ about natural systems, obtaining more data (Muste et al., 2017), and using these\
    \ \ndata for the development of artificial systems (Omatu et al., 2015) and digital\
    \ twin environments \n(Sermet and Demir, 2020). This need has increased the importance\
    \ of reliable data and accelerated \ndata processing technology (Hu and Demir,\
    \ 2021). As a result of the rapidly developing \ninformation and communication\
    \ technology approaches in the last two decades, digital \ntransformation has\
    \ accelerated in nearly all sectors (Knell, 2021). Societies' perspectives on\
    \ issues \nsuch as planning, production, and implementation have evolved in parallel\
    \ (Savic, 2021). \nHydrology and water resources domain followed the same trend\
    \ with developments in \nhydroinformatics (Demir et al., 2022). The most notable\
    \ developments can be listed as novel \napplications of deep learning in image\
    \ synthesis and communication (Gautam et al., 2022; Sermet \nand Demir, 2021),\
    \ large scale modeling and analysis on client-side systems (Ewing et al., 2022;\
    \ \nLi et al., 2022), virtual and augmented reality for hydrological education\
    \ and modeling purposes \n(Sermet and Demir, 2022), and novel programming libraries\
    \ and data standards (Ramirez et al., \n2022; Xiang and Demir, 2022). As a natural\
    \ outcome of this rapid digital transformation, the water \nsector has started\
    \ to generate, process, and store more data (Haltas et al., 2021). However, this\
    \ \nprocess has necessitated the reliability, security, and standardization of\
    \ hydrological data because \nreliable data is essential for more accurate hydrological\
    \ forecasts. Similarly, data standardization \nand security are crucial for water\
    \ systems stakeholder engagement in a secure and trustworthy way \n(Voogd et al.,\
    \ 2022). Addressing trust-related concerns has accelerated with the realization\
    \ of the \npotential of blockchain technology. \nBlockchain technology is an advanced\
    \ database mechanism that allows transparent \ninformation sharing within a network\
    \ (Nakamoto, 2008). A blockchain database stores data in \nblocks linked together\
    \ on a chain. The data is chronologically consistent, as it cannot be deleted\
    \ or \nchanged in the chain without consensus on the network. As a result, blockchain\
    \ technology can be \nused to create an immutable ledger to track orders, payments,\
    \ accounts, and other transactions. \nThere are built-in mechanisms in the system\
    \ that prevent unauthorized transaction entries and \ncreate consistency in the\
    \ common viewing of these transactions.  \nBlockchain is a newly emerging technology\
    \ that has been adopted by various sectors in \ninnovative ways and is the subject\
    \ of research and development activities for the last decade. \nBlockchain-based\
    \ energy companies can create a trading platform for the sale of electricity \n\
    between individuals, or homeowners with solar panels can use a similar platform\
    \ to sell excess \nsolar electricity to their neighbors. This process is largely\
    \ automated as smart meters generate \ntransactions, the blockchain records them.\
    \ Likewise, traditional financial systems such as banks \nand stock exchanges\
    \ can use blockchain services to manage online payments, accounts, and stock \n\
    market trading. Also, companies in the media and entertainment industries can\
    \ use blockchain \ntechnology to manage copyrighted data. Similarly, retail companies\
    \ can use the blockchain to track \nmovements of good between suppliers and buyers\
    \ (Akinbi et al., 2022; Hu et al., 2022; Jing et al., \n2021; Li et al., 2022a).\
    \ Blockchain technology has the potential to expand a long-term vision in \nwater\
    \ resource management and has the undeniable promise of decentralized water systems\
    \ as \nwater becomes a sensitive issue around the world. \nAlthough there are\
    \ systematic reviews about the applications of blockchain technology in \nenergy\
    \ markets (Gad et al., 2022), food supply chain (Castellini et al., 2022), the\
    \ health sector \n(Merlo et al., 2023), and the effects of blockchain on business\
    \ in general, there is no comprehensive \nliterature review study on applications\
    \ of the blockchain technology in water resources and \nhydrology. \nThis paper\
    \ presents a systematic review and analysis of hydrological applications within\
    \ the \nscope of blockchain-based technologies. The literature review, which includes\
    \ journal papers, \nconference papers, technical websites, technical project documents,\
    \ and hackathon projects, was \nconducted in detail. Each study is classified\
    \ and evaluated according to the area of hydrology it \nfocuses on, its purpose,\
    \ the level of development of the blockchain application, and the technical \n\
    details it uses when applying blockchain technology. The study aims to explore\
    \ real-time and \npotential application areas of blockchain technology in hydrology\
    \ and water resources \nmanagement. At the same time, it aims to create technical\
    \ guidance on blockchain for all water \nsector stakeholders, examine how blockchain\
    \ technology will provide efficiency and benefits for \nwater resources management,\
    \ and draw the attention of hydroinformatics professionals to new \ngeneration\
    \ data storage and processing algorithms. \n \n1.1. Background on Blockchain Technology\
    \ \nStoring data in distributed ledgers, deciding which data to store with a consensus\
    \ algorithm, \ndefining preconditions with a smart contract, and being able to\
    \ track the recorded data \ntransparently, have been discussed theoretically in\
    \ financial applications since the 1990s, due to \nthe disadvantages of traditional\
    \ data storage systems and the need for reliable third parties in \nfinancial\
    \ transactions (Szabo, 1998). As mentioned before, Bitcoin was the first real-time\
    \ \napplication to record financial transaction data. Although the words \"block\"\
    \ and \"chain\" are always \nmentioned as separate terms in the original bitcoin\
    \ whitepaper, the name of the technology was \nshaped to \"blockchain\" after\
    \ a while (Nakamoto, 2008). The second milestone of blockchain \ntechnology and\
    \ first example of the application of recording transaction data to a database\
    \ only if \nboth parties meet a certain prerequisite, was announced with the Ethereum\
    \ whitepaper (Buterin, \n2014) where the predetermined conditions are called smart\
    \ contracts or chain code.  \nThere are four main types of decentralized or distributed\
    \ networks in the blockchain. Public \nblockchain networks are permissionless\
    \ networks that allow anyone to join. All members of the \nblockchain have equal\
    \ rights to read, edit, and verify the blockchain. Public blockchain networks\
    \ \nare mainly used for trading and mining cryptocurrencies such as Bitcoin, Ethereum,\
    \ and Litecoin \n(Wang et al., 2022). Private blockchains are controlled by a\
    \ single entity. This authority decides \nwho can become a member and what rights\
    \ the members have in the network. Private blockchains \nare only partially decentralized\
    \ because they contain access restrictions. Hybrid blockchains \ncombine some\
    \ features of both private and public networks. Companies can set up private,\
    \ \npermission-based systems as well as a common system. Thus, they control access\
    \ to certain data \nstored on the blockchain while keeping the rest of the data\
    \ public. They use smart contracts to \nallow members of the partner system to\
    \ check whether private transactions have been completed. \nFor example, hybrid\
    \ blockchains can allow shared access to digital currency, while keeping bank-\n\
    owned currency private. Consortium blockchain networks are managed by a group\
    \ of \norganizations. Pre-selected organizations share responsibility for maintaining\
    \ the continuity of the \nblockchain and determining data access rights. Consortium\
    \ blockchain networks are generally \npreferred in sectors where many organizations\
    \ have a common goal and can benefit from \nresponsibility sharing (Arooj et al.,\
    \ 2022).  \nThe blockchain protocol refers to different types of blockchain platforms\
    \ that can be used for \napplication development purposes. Each blockchain protocol\
    \ adapts fundamental blockchain \nprinciples to suit specific industries or applications.\
    \ The most famous blockchain protocols are \nHyperledger, Ethereum, Corda, and\
    \ Quorum. Hyperledger Fabric is an open-source project with a \nset of tools and\
    \ libraries. In that way, it is possible to customize blockchain applications.\
    \ \nHyperledger Fabric is a modular, general-purpose framework that offers unique\
    \ identity \nmanagement and access control features. Due to these features, it\
    \ is suitable for various usage areas \nsuch as tracking and monitoring of supply\
    \ chains, trade finance, loyalty and reward programs, and \nreconciliation of\
    \ financial assets (Hang and Kim, 2021). Ethereum is a decentralized blockchain\
    \ \nplatform that is useful to build public blockchain applications (Estevam et\
    \ al., 2021). Corda is an \nopen-source blockchain project designed for business.\
    \ Quorum is an open-source blockchain \nprotocol derived from Ethereum. It was\
    \ specifically designed for use in a private blockchain \nnetwork where all nodes\
    \ are owned by only one member or in a consortium blockchain network \nwhere multiple\
    \ members each own a portion of the network (Singh et al., 2022). \nIn summary,\
    \ the main features of blockchain technology that make a difference are described\
    \ \nas follows: Decentralization in blockchain involves the transfer of control\
    \ and decision-making \npowers from a central legal entity (i.e., an individual,\
    \ organization, or group) to a distributed \nnetwork. Decentralized blockchain\
    \ networks use the principle of transparency to reduce the need \nfor trust between\
    \ participants. These networks discourage participants from exercising authority\
    \ \nor control over one another, which reduces the functionality of the network.\
    \ Another main feature \nis immutability, which means that data cannot be changed\
    \ or tampered with once it is stored in the \nblockchain. If a log contains an\
    \ error, you need to add a new transaction to reverse the error, and \nboth transactions\
    \ will be visible on the network. Finally, the consensus mechanism is prominent\
    \ \naspect of a blockchain system, which sets the rules for the consent of the\
    \ participants regarding \nthe recording of transactions. New transactions may\
    \ be recorded only after the majority of the \nparticipants in the network have\
    \ approved them.  \nThe blockchain architecture, on the other hand, includes several\
    \ technical components, which \nare listed as follows: (a) the distributed ledger\
    \ is the shared database used to record transactions in \nthe blockchain network;\
    \ (b) smart contracts are programs that are automatically executed and \nstored\
    \ in the blockchain system when predetermined conditions are met. They run \"\
    if-then\" checks \nso that transactions can be completed safely; and (c) public\
    \ key encryption is a security feature \nthat uniquely identifies participants\
    \ in the blockchain network. This mechanism generates two sets \nof keys for network\
    \ members. One of the keys is a public key that everyone on the network uses \n\
    together. The other key is a private key that is unique to each member. Private\
    \ and public keys \nwork together to unlock the data in the ledger (Figure 1).\
    \ The first generation of blockchain is \nbitcoin and cryptocurrencies; the second\
    \ generation blockchain is smart contracts or chain code; \nand the third generation,\
    \ or future, of blockchain will continue to evolve and grow as companies \ndiscover\
    \ and implement new application areas. The ongoing blockchain revolution continues\
    \ to \noffer limitless potential. \nLike many other industries, the initial ideas\
    \ for the implementation of blockchain in hydrology \nand water resources management\
    \ are mainly focused on the advantages of storing data most \nreliably. Water-related\
    \ data reliability has a key role in water management in all dimensions. Since\
    \ \nwater is a multidimensional natural resource, water resources can be managed\
    \ most effectively by \noptimizing the interests of stakeholders with many different\
    \ priorities. In addition to having \ndifferent priorities regarding the quantity\
    \ and quality of water, there is a social dimension for the \nwater as well. Reliable\
    \ data about shared water resources is essential for the establishment of trust.\
    \ \n(Pahl-Wostl, 2015; Stern and Coleman, 2015). The straightforward guarantee\
    \ of socio-\nhydrological trust and data reliability is made possible by a simply\
    \ distributed digital architecture \nbuilt on blockchain and smart contracts.\
    \  \n \n \nFigure 1. Illustration of basic blockchain architecture \n \nUncertainty\
    \ in multi-stakeholder hydrological systems can be reduced with the assistance\
    \ of \nimmutably recorded data. Likewise, blockchain technology is very suitable\
    \ for applications in the \nfinance of water. Application areas may be the water\
    \ market, where water rights are exchanged, \nor any investment in water management\
    \ and donations to improve water infrastructure or sanitation \nin developing\
    \ countries. In short, it provides the most transparent follow-up of all financial\
    \ \ntransactions in terms of investors or market stakeholders (Wheeler et al.,\
    \ 2014). Similarly, when \nthere is a necessity for the traceability of water,\
    \ blockchain may provide effective solutions. Water-\nrelated traceability will\
    \ be critical for agricultural water management (Yildirim and Demir, 2022), \n\
    water quality and control (Demir et al., 2009), urban water systems, and the water\
    \ footprint of a \nspecial product. \n \n2. Research Methodology \nA systematic\
    \ literature review on blockchain applications in hydrology and water resources\
    \ was \nperformed for this study (Bramer et al., 2018). The literature review\
    \ was initially divided into two \nareas including academic and non-academic use\
    \ cases. The academic literature review includes \njournal and conference papers,\
    \ book chapters, and technical reports. The non-academic literature \nreview includes\
    \ whitepapers, web documents, reports of official institutions, and hackathon\
    \ \nprojects. \nGoogle Scholar, Scopus, Web of Science, Crossref, Open Alex, Jisc\
    \ Library Hub, and the \nLibrary of Congress were used as academic databases,\
    \ and 25 different keyword combinations \nwere used as a systematic search approach\
    \ (Table A1 in Appendix). After the initial search, the \nresults published before\
    \ 2008 (before the Bitcoin whitepaper) in the database search results were \n\
    eliminated. Later on, results that are indexed in more than one database were\
    \ ultimately removed, \nso that no duplicates remained. There were 5,330 articles\
    \ as a result of the research from these \nstages. These papers were examined\
    \ according to their titles, abstracts, and the content of the paper, \nand classified\
    \ according to their scope of the application. Especially the collections of conference\
    \ \nproceedings with a wide scope were caught by keyword combinations, although\
    \ they did not \ncontain any useful content on blockchain and hydrology. Moreover,\
    \ results containing only one or \ntwo sentences about “blockchain and water”\
    \ were also excluded from the review. It was expected \nthat there would be at\
    \ least a few paragraphs or a section that included useful comments or analysis\
    \ \non the subject matter. \nFor the review of non-academic use cases, hackathon\
    \ projects were retrieved following the \nsame search approach described above,\
    \ using the public projects repository of Devpost (Wang et \nal., 2018). The web\
    \ pages that detail technological content and official reports with digital \n\
    transformation content were manually examined, and a non-academic content list\
    \ that falls under \nthe subject of this study was prepared. Finally, 103 academic\
    \ and 57 non-academic pieces of \ncontent were found directly relevant, and subjected\
    \ to a detailed review. Tables for a detailed \nreview are given as an appendix.\
    \ \nFor the reviewed academic content, several variables and categorization parameters\
    \ were \nselected to evaluate the current maturation process of blockchain technology\
    \ for hydrological \napplications as follows: \nPublication Type: Indicates where\
    \ and in what format academic content is published including \njournal paper,\
    \ conference paper, book, book chapter, thesis, and technical report.  \nFocus\
    \ Area: Classification of reviewed studies based on their focus on the sub-field\
    \ of hydrology \nand water resources. Although most studies focus on more than\
    \ one area, as a result of detailed \nanalysis, it was assumed that the study\
    \ was primarily focused on a single subject area. These \nsubject areas are classified\
    \ as follows: urban water management, water quality management, \nwater economics,\
    \ water governance, agricultural water management, water and sustainable \ndevelopment\
    \ goals (SDG) \nPurpose: Indicates the main use cases the study or product is\
    \ designed to address. \nDevelopment Level of Blockchain Application: Indicates\
    \ the degree to which the blockchain \ntechnology was used in the study. \nExplore:\
    \ Studies highlight the potential of blockchain applications in water resources\
    \ \nmanagement and hydrology and evaluate research and application gaps. Studies\
    \ classified in \nthis field are just for exploration and do not include blockchain\
    \ parameters. Therefore, these \nstudies were not examined for the following fields.\
    \  \nConceptual: Studies that propose a digital system architecture without a\
    \ tested application or \ncode list. \nSimulation: Studies in which a system is\
    \ designed, coded, and tested mostly in virtual machines \nbut not converted into\
    \ a real-world application. \nDecentralized Application (DApp): Studies in which\
    \ the system created can be used with a \nmobile or web-based application by designing\
    \ a special interface. The current activity of the \napplication created in the\
    \ studies or whether it is currently at the service of the users has not \nbeen\
    \ examined. \nPilot Project: Studies where any stage of the project is tested\
    \ with real-time data. \nBlockchain Type: It is a classification made according\
    \ to which type of blockchain infrastructure \nthe study proposes or uses. Since\
    \ the studies are divided into blockchain types at a very general \nlevel, they\
    \ are categorized as Public, Private, and Hybrid Blockchain, which contains the\
    \ \nfeatures of both types to a certain extent. \nBlockchain Technology: It is\
    \ a categorization made according to which blockchain technology \nprovider the\
    \ study proposes to use or uses. Studies were classified as Ethereum, Hyperledger,\
    \ \nand Other as a result of the review. \nSmart Contract/Chain Code Enabled:\
    \ A Boolean field specifying if the study includes a smart \ncontract or chain\
    \ code.  \nReproducibility: It determines if the blockchain application of the\
    \ study could be reproduced by \nusing the information provided. The classification\
    \ is carried out according to sharing level of \ndata and codebase as \"Yes\"\
    , \"No”, and \"Partly\".  \nCybersecurity Test: Evaluation of studies according\
    \ to whether they were subjected to cyber \nsecurity tests or not. \nOn-Chain\
    \ Data: Blockchain-based stored data is specified.  \nOff-Chain Data: Data stored\
    \ in the standard database are specified. \nConsensus Algorithm: Evaluation of\
    \ the consensus algorithm used by the blockchain \ninfrastructure used in the\
    \ study.  \nFeasibility Analysis: Provides a feasibility analysis for the blockchain-based\
    \ system components \ninvolved in the studies. \n \n3. Results \n3.1. Summary\
    \ of Findings \nThis section presents and examines graphical summaries of the\
    \ reviewed papers and non-academic \ncontent. The summarized graphical demonstration\
    \ includes the distribution of papers and non-\nacademic content by year and publication\
    \ type. Moreover, graphs about reviewed papers provide \ntechnical details about\
    \ blockchain use cases such as the application in the sub-field of hydrology,\
    \ \nthe development level of a blockchain application, the type of blockchain,\
    \ and the blockchain \nnetwork. \nA table showing the summarized information of\
    \ 103 papers and 57 non-academic content is \nincluded in the appendix (Table\
    \ A2 and A3). Considering the distribution of papers by years, an \napproximately\
    \ linear increase is observed. This trend can be explained by the increase in\
    \ the \napplication areas of blockchain technology and the increase in the exploration\
    \ and adoption of \nmodern technologies in hydrological processes. The number\
    \ of papers in 2022 seems not to have \nexceeded the previous two years yet. Considering\
    \ that the papers reviewed cover the period before \nOctober 15, 2022, this number\
    \ may support the continuing linear increase. In addition, sharp \nfluctuations\
    \ in cryptocurrency exchanges may have limited the applications of blockchain\
    \ \ntechnology in different areas. Non-academic content production appears to\
    \ follow a steady \nuptrend, with the exception of a drastic dive in 2020. (Figure\
    \ 2). \n \n \nFigure 2. Distribution of academic and non-academic content by years\
    \ \n \nReviewed papers are classified as \"journal papers,\" \"conference papers,\"\
    \ \"book chapters,\" \n\"books,\" \"theses,\" \"working papers,\" and \"technical\
    \ reports\". If outputs from different phases of \nthe same project were presented\
    \ at different conferences, both conference papers were considered. \nContents\
    \ published as technical reports were evaluated as academic content if the publisher\
    \ was a \ngovernmental entity, or as non-academic content if it was published\
    \ by a non-governmental \n2\n7\n17\n25\n30\n22\n5\n11\n13\n8\n9\n11\n0\n5\n10\n\
    15\n20\n25\n30\n35\n2017\n2018\n2019\n2020\n2021\n2022\n(October)\nNumber of Content\n\
    Years\nAcademic\nNon-academic\norganization for the purpose of informing the public.\
    \ While there is a dominance of journal and \nconference papers in the reviewed\
    \ papers, the number of postgraduate theses can be considered \nvery low. The\
    \ reason for this can be interpreted as the immature level of integration between\
    \ the \nacademic blockchain ecosystem and the hydroinformatics community, and\
    \ as a result, the \ndifficulty of finding a suitable use case to support a thesis\
    \ contribution as well as advisors \nexperienced in this interdisciplinary area.\
    \ Reviewed non-academic content is divided into three \npublication types including\
    \ web documents, whitepapers, and hackathon projects (Figure 3). \nProjects that\
    \ published whitepaper emphasize the potential applications instead of providing\
    \ real-\ntime hydrological application. Hackathon projects are the output of hackathon\
    \ events that directly \nfocus on hydrological processes. \n \n \nFigure 3. Distribution\
    \ of academic and non-academic content by publication type \n \nAnother classification\
    \ of reviewed papers is carried out according to their major contribution \nto\
    \ sub-fields of hydrology. Although most papers focused on more than one sub-field,\
    \ they were \ncategorized in the hydrology sub-field that was considered to be\
    \ the most focused area (Figure 4). \nWater Governance: These papers generally\
    \ anticipate using blockchain as a database and focus \non solving administrative\
    \ problems and building trust among stakeholders. Papers providing a \nliterature\
    \ review are also categorized here. \nWater Quality Management: These papers focus\
    \ on problems related to water quality, such as \nmonitoring, analysis, wastewater\
    \ management, and a more transparent demonstration of water \nquality standards\
    \ being met. \nWater Economics: These papers focus on approaches to water markets\
    \ at different scales for \nwater trading, water rights, water claims, and water\
    \ economy applications. \nAgricultural Water Management: These papers focus on\
    \ agriculture-related water problems \nsuch as irrigation and agricultural water\
    \ quality.  \n49\n32\n10\n6\n3\n2\n1\n24\n19\n14\n0\n10\n20\n30\n40\n50\n60\n\
    Journal\nPaper\nConference\nPaper\nHackathon\nProject\nWeb\nDocument\nWhitepaper\n\
    Book\nChapter\nTechnical\nReport\nThesis\nWorking\nPaper\nBook\nNumber of Content\n\
    Academic\nNon-academic\nUrban Water Management: These papers focus on urban water\
    \ applications such as drinking \nwater and stormwater systems. \nWater SDG: These\
    \ papers focus on blockchain applications in hydrology and their contribution\
    \ \nto achieving Sustainable Development Goals. \n \n \nFigure 4. Distribution\
    \ of academic content by sub-field of hydrology \n \n \nFigure 5. Distribution\
    \ of academic content by development level of blockchain application \n \n29\n\
    21\n19\n16\n15\n3\n0\n5\n10\n15\n20\n25\n30\n35\nWater\nGovernance\nWater\nEconomics\n\
    Agricultural\nWater\nManagement\nWater Quality\nManagement\nUrban Water\nManagement\n\
    Water SDG\nNumber of Content\nSub-field of Hydrology\n36\n32\n27\n4\n4\n0\n5\n\
    10\n15\n20\n25\n30\n35\n40\nExplore\nConceptual\nSimulation\nDapp\nPilot Project\n\
    Number of Content\nDevelopment Level\nWater Economics is ranked second because\
    \ decentralized finance applications are the first \napplication of blockchain\
    \ technology in many other areas, and there is more knowledge on this \nsubject.\
    \ The distribution of the development level of blockchain applications shows that\
    \ the \nhydrology applications are still in the maturation stage (Figure 5). It\
    \ is noteworthy that few studies \ninclude an application as an end product or\
    \ a pilot project with a real-world active use case. The \nnumber of studies in\
    \ the Water SDG category would have been greater if other studies had been \n\
    focused on their potential contribution to sustainable development goals. \n \n\
    \ \nFigure 6. Distribution of academic content by blockchain type \n \n \nFigure\
    \ 7. Distribution of academic content by blockchain network \n36\n29\n19\n12\n\
    7\n0\n5\n10\n15\n20\n25\n30\n35\n40\nN/A\nNot Available\nPrivate\nPublic\nHybrid\n\
    Number of Content\nBlockchain Type\n36\n33\n20\n12\n2\n0\n5\n10\n15\n20\n25\n\
    30\n35\n40\n45\nN/A\nNot Available\nEthereum\nHyperledger\nOther (Corda,\nBanQu)\n\
    Number of Content\nBlockchain Network\nThe \"N/A\" column in Figure 6 and Figure\
    \ 7; represents the same articles as the \"Explore\" \ncolumn, which does not\
    \ suggest an architecture or system but simply explores potential \napplications\
    \ of blockchain technology. Therefore, a blockchain type or a blockchain network\
    \ is \nout of the question, as the study only explores potential applications.\
    \ If a system or architecture is \nsuggested but no blockchain network or blockchain\
    \ type is specified in the paper, it is categorized \nas \"Not Available.\" The\
    \ reason why private blockchains are preferred more may be that the water-\nrelated\
    \ data in the use case is not intended to be shared transparently even if the\
    \ identities are \ncryptographically secure because most of the papers contain\
    \ conceptual and simulation studies. \nMoreover, fluctuating cryptocurrency markets\
    \ may be creating concerns about transaction fees to \nbe paid on public blockchains.\
    \ Ethereum and Hyperledger dominate the field of hydrology as well \nas other\
    \ application fields due to smart contract and private blockchain compatibility.\
    \ Other private \nblockchains represented in the review were Corda and BanQu.\
    \ \n \n3.2. Analysis of Academic Content  \nIn this section, the reviewed academic\
    \ content is briefly summarized. These summaries highlight \nthe papers' approach\
    \ to blockchain and hydrology integration. \n \n3.2.1. Water Governance \nThe\
    \ common consensus is that trust is a critical enabler in water governance. Reliable\
    \ data and \ncoordination are essential to establishing and maintaining the trust\
    \ layer. Blockchain provides an \nimmutable database to store water-related data\
    \ securely. This key feature of blockchain technology \nprovides a straightforward\
    \ framework for water governance stakeholder coordination. Moreover, \nsmart contracts\
    \ can contribute to sustainable water governance by codifying environmental and\
    \ \neconomic conditions. Sobrinho et al. (2019) describe how blockchain technology\
    \ can help to \nenhance financial transparency and trust while also helping to\
    \ improve water governance. Such an \nenhancement might be made possible, for\
    \ example, by the development of cryptocurrencies and \nthe use of smart contracts\
    \ to encourage actions aimed at water resource conservation. Sriyono \n(2020)\
    \ investigates the potential of blockchain technology to aid in the efficient\
    \ management of \nwater resources and offers a framework and architecture for\
    \ blockchain and water management. \nThe paper also discusses a potential blockchain-based\
    \ solution for the water quality problems in \nPuerto Rico. Scozzari et al. (2021)\
    \ examine how IoT, AI, and blockchain are used to digitally \ntransform smart\
    \ water networks and blockchain-enabled water rights trading.  \nDogo et al. (2019)\
    \ examine the effects of combining blockchain technologies with intelligent \n\
    water management and assert that blockchain has the potential to revolutionize\
    \ water and \nsanitation governance to achieve SDG 6 as envisioned by the United\
    \ Nations in 2035, through \ncreative, effective, and scalable solutions, based\
    \ on these two technologies in African cities. Poonia \net al. (2021) examine\
    \ the spatiotemporal distribution of several drought types, separately and \n\
    simultaneously, in India. A blockchain-based framework is suggested to enhance\
    \ the current \ndrought risk-management system to make it easier for those who\
    \ have died from drought to receive \nhelp and aid as soon as possible. Linjing\
    \ et al. (2020) explain the benefits and standout \ncharacteristics of blockchain-enabled\
    \ IoT applications and contrast them with centralized, more \nestablished IoT-based\
    \ smart water systems. Hangan et al. (2022) examine the potential \napplications\
    \ of big data and blockchain in the field of water resources and argue that blockchain\
    \ \ncan act as a link between a locally used solution and a global infrastructure\
    \ that is accessible \nglobally and is controlled by a coalition of international\
    \ organizations using consensus \nmechanisms.  \nIyer and Giri (2020) evaluate\
    \ water-related issues that may be solved by blockchain, which \nwill be important\
    \ in the area of ethical pricing and highlight data transparency as data is exchanged\
    \ \nacross networks for water reuse. Wu et al. (2022) thoroughly examine the properties\
    \ of blockchain \ntechnology, as well as the scenarios and applications that blockchain\
    \ has in the field of protecting \nwater resources, including the storage of data\
    \ about water bodies, cross-sectoral collaboration, and \nincreased public involvement\
    \ level. According to Ragghianti (2021), blockchain allows for the \nintegration\
    \ of watershed monitoring and direct management of water usage for all system\
    \ users, \nmaintaining flexibility and guaranteeing all socio-environmental constraints\
    \ that apply in that \nbasin. Xia et al. (2022) consider a distributed and decentralized\
    \ water data management system for \nthe whole supply, consumption, and discharge\
    \ processes. The system includes two conceptual \nhybrid blockchain-based application\
    \ scenarios: permits for water abstraction and water quality \ntracking. Singh\
    \ and Goel (2020) examine how blockchain might be used to notify authorities of\
    \ \nany emergency flood events.  \nYasuno et al. (2020) integrate upstream monitoring,\
    \ dam inflow prediction, a smart contract \nenabled blockchain framework to reimagine\
    \ the dam watershed as a smart dam and organize the \ntechnologies for flood prediction.\
    \ Study aims to facilitate real-time coordination among \nstakeholders and real-time\
    \ broadcast of disaster prevention information. Lin and Wang (2021) \nclaim that\
    \ SPOF and DDOS attacks have the potential to exploit the authentication and key\
    \ \nagreement in intelligent water conservation systems, thus suggesting a blockchain-based\
    \ \nauthentication key agreement system for smart water devices. The selected\
    \ network for blockchain \nis Ethereum, and to participate in the Ethereum network,\
    \ smart devices serve as light nodes. The \nlight node does not engage in mining\
    \ and merely downloads a small bit of the blockchain network. \nIt is appropriate\
    \ for conditions where there are more smart devices. The consensus algorithm for\
    \ \nthe blockchain system is Practical Byzantine Fault Tolerance (PBFT).  \nAsgari\
    \ and Nemati (2022) investigate the literature based on the three primary Distributed\
    \ \nLedger Technology (DLT) application areas of Smart Water Systems, Water Quality\
    \ Monitoring, \nand Storm Water Management. Additionally, they address the legislative,\
    \ social, administrative, \nand practical difficulties which can be an obstacle\
    \ to the use of blockchain technology. Stankovic \net al. (2020) provide an overview\
    \ of possible blockchain-enabled applications in water and \nsanitation services\
    \ for Latin America and the Caribbean. Li et al. (2021) provide a peer-to-peer\
    \ \nblockchain system based on data to forecast water consumption. There are four\
    \ layers in the \nframework: i) the storage layer; ii) the network layer; iii)\
    \ the smart contract layer; and iv) the \napplication layer. \nZhang et al. (2020)\
    \ establish a platform with four decentralized participants, such as \ngovernment\
    \ agencies, water conservation private sector actors, the general public, and\
    \ third-party \nmaintenance. The study also provides the design of “dual chain”\
    \ smart contracts that are \"alliance \nchain and private chain.\" Additionally,\
    \ the many possibilities of blockchain-enabled platform \napplications for smart\
    \ water conservation are examined. Next, a novel development route \nincluding\
    \ consensus mechanisms, smart contracts, asymmetric encryption, and information\
    \ source \ntracing is suggested using the water rights trading market as an example.\
    \ Chinese Smart Water \nConservancy Platform Data is the main on-chain data in\
    \ the proposed system. Youssef et al. (2019) \nsuggest an unmanned aerial vehicle\
    \ (UAV), cloud-based solution for dam site monitoring. The \nUAVs periodically\
    \ provide meteorological data, water quality and level information, and the \n\
    condition of dam structures.  Blockchain, which offers identification, a database\
    \ system, and \ntraceability of the UAV cloud's data transmission, ensures a distributed\
    \ and long-term security \nsolution. The effectiveness of the solution is simulated\
    \ by assessing the data delivery delay ratio.  \nMajia (2021) creates a blockchain-based\
    \ system that maintains the privacy of operational \nhydropower plant data. The\
    \ proposed system stores the homomorphic encrypted operational data \non chain.\
    \ Sukrutha et al. (2021) establish a unique blockchain architecture with double\
    \ hashing as \na data storage system that is more secure for groundwater management\
    \ data. The water level and \nwater quality data of aquifers are stored off-chain,\
    \ but the hash of the same data is stored on-chain. \nThe simulation is carried\
    \ out, and the transactional cost is examined. Simulation results show that \n\
    storing the hash of data is cost-effective. Mohammadi et al. (2022) create a hypothetical\
    \ \nblockchain-based system to securely exchange data gathered in real-time from\
    \ a variety of sensors \nfor monitoring and controlling water consumption. The\
    \ proposed consensus algorithm is proof of \nwork, and smart water meter data\
    \ is supposed to be directly stored on-chain.  \nDramski et al. (2019) describe\
    \ a system for gathering environmental data from meteorological \nsensors and\
    \ then storing it in a blockchain application. The application is powered by a\
    \ private \nHyperledger blockchain network and a sensor prototype developed on\
    \ a Raspberry Pi. Tiwari et \nal. (2020) suggest a public Ethereum-based blockchain\
    \ system designed to preserve water \nconsumption that satisfies the supply-demand\
    \ processes of all customers in a peer-to-peer network. \nVernekar (2020) outlines\
    \ a fully decentralized, blockchain-based approach for managing water \nsupply\
    \ that uses IoT devices to collect data along the configuration and add it to\
    \ the Ethereum \npublic blockchain.  \nSapra et al. (2021) provide a methodology\
    \ for creating an intelligent water management system \nthat determines and calculates\
    \ a consumer's water use within a certain area and also detects leaks \nin the\
    \ plumbing system. A private blockchain network is designed based on Ethereum,\
    \ and water \nquality, pressure, and location data for components of the water\
    \ distribution system are stored on \nthe block. The California Blockchain Working\
    \ Group (2020) investigates the potential for \nblockchain-based technology to\
    \ assist in the development of a more effective framework that \nbuilds on the\
    \ momentum of recent California water-related data initiatives. There are two\
    \ pilot \nproject-level studies in this category in the reviewed literature. Mughal\
    \ et al. (2022) conduct a pilot \nproject emphasizing blockchain-enabled solutions\
    \ for enhancing Pakistan's data-intensive \ndecision-support systems. The consistency,\
    \ immutability, and dependability of streamflow time \nseries data were maintained\
    \ using a private blockchain that was built on the Hyperledger Fabric \nplatform.\
    \ The model evaluated the use of Hyperledger fabric, employing the distributed\
    \ \nautonomous administrative authority of Pakistan's irrigation network. In addition\
    \ to collecting \nsensor data for streamflow prediction, the nodes also maintain\
    \ permanent data storage on the \nstreamflow record and aggregate and approve\
    \ compliance with the distribution system via \nchaincode (smart contracts). The\
    \ proof of authority protocol allows the designated nodes with \nauthorization\
    \ to create new blocks of streamflow data monitoring irrigation networks, thus\
    \ \nmaintaining the chain's overall security.  \nAnother pilot project is carried\
    \ out by Coli et al. (2021). The pilot project in Peru aims to \ndemonstrate the\
    \ viability of integrating blockchain technology into the microfinance industry\
    \ for \nwater and sanitation to increase the effectiveness of the current microfinance\
    \ model and support \nthe inclusion of unbanked people in the financial system.\
    \ Pilot study also allows for more discovery \nthrough first-hand experiences\
    \ with local microfinance organizations and borrowers. The private \nblockchain\
    \ network of BanQu is preferred for the project, and a feasibility analysis is\
    \ conducted \nto show operationally cost-effective scenarios as a result of blockchain\
    \ implementation. \n \n3.2.2. Water Economics  \nWater economics is the consideration\
    \ of the economic value of water as a natural resource and the \nadded value it\
    \ creates in the areas where it is used within the framework of microeconomic\
    \ \ntheories. The focus of these theories is to maintain the quality and quantity\
    \ of water under \neconomic and financial constraints and to make water-related\
    \ investment, cost and water markets \nefficient. The water economics has been\
    \ a substantial area of research for exploring blockchain \napplications due to\
    \ its intrinsic need for and obvious utility of adopting trustworthy data and\
    \ \ncurrency sharing mechanisms. Bhaduri et al. (2021) investigate the opportunities\
    \ for potential \nwater market implementation in Los Angeles, USA, and Bengaluru,\
    \ India. Poberezhna (2018) \nexplores how blockchain-based tools could assist\
    \ the water sector's businesses and governing \nbodies in gaining access to real-time\
    \ data about market shares, consumption trends, consumer bill \nmanagement, and\
    \ other possibilities. Ikeda and Liffiton (2019) introduce two possible use cases\
    \ \nfor blockchain-based water management: i) blockchain-based water and sanitation\
    \ subsidies, and \nii) using blockchain tools to manage water pricing and consumption.\
    \  \nBou Abdo and Zeadally (2020) create a commercially and economically viable\
    \ peer-to-peer \ntrading platform for water and energy that supports rainwater\
    \ gathering and trade of the captured \nwater. The rainwater harvested data is\
    \ directly stored on-chain. Thomason et al. (2018) examine \nthe relationship\
    \ between blockchain technology and climate finance as both relate to the problem\
    \ \nof water scarcity in poor nations and propose blockchain-based water trading\
    \ applications as a \npotential solution. Zhao et al. (2019) underline the significance\
    \ of creating a peer-to-peer trading \nnetwork with blockchain capabilities that\
    \ would enable more irrigators to take part in the platform \nthat secures and\
    \ transparently allocates water, increasing the total efficiency of water resources.\
    \ \nZecchini (2019) investigates the potential application scenarios for blockchain-enabled\
    \ water \nquality credit systems. Grigoras et al. (2018) introduce blockchain\
    \ and smart contracts integrated \ninto a theoretical water rights trading platform.\
    \ Angara and Saripalle (2022) review the virtual \nwater literature systematically\
    \ and provide a conceptual virtual water currency and blockchain-\nenabled virtual\
    \ water trade system. Sivaramakrishnan (2020) proposes a blockchain-enabled \n\
    architecture for water trading platforms between agricultural stakeholders. The\
    \ Ethereum public \nnetwork is preferred to perform regulatory requirements as\
    \ smart contracts. Belliera et al. (2019) \ncreate a flood insurance system powered\
    \ by blockchain.  \nVannucci et al. (2021) extend this study and aim to contribute\
    \ to the analysis and management \nof flood events from an economic and financial\
    \ perspective from a public administration \nviewpoint. The study also entends\
    \ the unique and robust blockchain-based insurance systems. \nZhang (2022) provides\
    \ a design of a conceptual blockchain-based supply chain financial system \nmodel\
    \ for water resources businesses, and a model to analyze the financial condition\
    \ of seven \nwater businesses for their potential blockchain-based digital transformation\
    \ in China. Their \nconceptual blockchain-based architecture is designed to store\
    \ the financial supply chain of water \nresources data directly. Miller (2021)\
    \ and Ramsey et al. (2020) describe and evaluate the \napplication of blockchain\
    \ capabilities to the water rights trading ecosystem and design a variety of \n\
    services that leverage blockchain features and business value. Pee et al. (2018)\
    \ and Alcarria et al. \n(2018) examine the potential for a simple peer-to-peer\
    \ water market based on smart contracts with \nwater trading data stored on the\
    \ Ethereum private network. Liu and Shang (2022) propose hybrid \nblockchain approach\
    \ for trading water rights and Li et al. (2022b) use chain code to enable \ntransactional\
    \ water rights data storage in a private Hyperledger Fabric network for the same\
    \ \npurpose. \nThis category contains one study at the DApp level and one study\
    \ at the pilot project level. \nAbu-Amara et al. (2022) develop a blockchain-based\
    \ application to manage the supply of water \nand energy transactions. The application\
    \ records water and energy use data on a private \nHyperledger network and allows\
    \ consumers to view and pay bills online. CRCNA (2020) provides \na pilot project\
    \ with Civic Ledger, an Australian start-up, in Mareeba-Dimbulah Water Supply\
    \ \nScheme (MDWSS), Northern Australia. Water Ledger, which is Civic Ledger's\
    \ water trading \nplatform built on Ethereum, is customized to the MDWSS business\
    \ and operational standards to \nexamine how blockchain technology can minimize\
    \ trading costs, boost the effectiveness of trade \nprocesses, and raise water\
    \ market transparency. The pilot project highlights that blockchain-\nenabled\
    \ systems have the potential to codify regulatory rules, reduce transaction costs,\
    \ and avoid \nasymmetric information about actual water prices. The main challenge\
    \ for the next phases of the \nproject is that the existing water market and the\
    \ water delivery infrastructure are not interoperable. \n \n3.2.3.  Water Quality\
    \ Management \nWater quality management is the entire process of monitoring the\
    \ water quality from the source to \nthe user, taking measures to protect the\
    \ water quality, and treating the water if necessary. In this \nwhole process,\
    \ reliable data and real-time monitoring are vital for the detection of possible\
    \ \ncontamination and the efficiency of the treatment process. Kassou et al. (2020)\
    \ propose a \nblockchain-enabled conceptual system design to control and track\
    \ medical wastewater \ninfrastructure. Damania et al. (2019) consider the blockchain\
    \ as a next-generation data storage \nsystem and discuss potential integration\
    \ in terms of water quality management. Ortiz (2018) points \nout the capabilities\
    \ of blockchain applications to improve public awareness and governmental \naccountability\
    \ about water quality at all scales in Puerto Rico. Yan et al. (2019) present\
    \ a \nconceptual blockchain-enabled environmental monitoring system architecture\
    \ that data analysis, \nstakeholder authentication and water quality data are\
    \ synchronized. Wan et al. 2020) deliver an \nAI-supported management system for\
    \ wastewater treatment facilities and investigate blockchain \nas a data storage\
    \ system.  \nHakak et al. (2020) conceptualize a blockchain-enabled smart contract-supported\
    \ industrial \nwastewater management system. Quist-Aphetsi and Blankson (2019)\
    \ explores the cryptographic \nfeatures of Secure Hash Function 256, which is\
    \ the most popular hash function in blockchain \napplications, and examine a potential\
    \ hybrid data logging system that store cryptographically the \nquality of water\
    \ delivered to consumers from the water treatment plant. Kaur and Oza (2020) \n\
    document the Ethereum Request for Comment Standards 20 (ERC20) from a smart city\
    \ \nperspective that Ethereum-based tokens must comply with. The paper simulates\
    \ the Water \nReprocessing Coins (WRC) to create a business environment where\
    \ everyone has an equal chance \nof obtaining credits based on recycled wastewater\
    \ to remove inequalities between different-scale \nenterprises. Iyer et al. (2019)\
    \ propose a private blockchain network based on Hyperledger to \nmaximize the\
    \ effectiveness of wastewater recycling systems for industries. The study's simulation\
    \ \nprocess includes anomaly detection algorithms to apply chaincode rules for\
    \ possible penalties to \nindustries attempting to tamper with water quality sensors.\
    \  \nLin et al. (2020) simulate an integrated system based on IoT and blockchain\
    \ that is structured \nas a directed acyclic graph and uses geographic information\
    \ system tools for source tracking of \nriver water quality problems. Berman et\
    \ al. (2020) provide an implementation of a blockchain-\nenabled framework for\
    \ sample identification and logging together with small autonomous boats \nthat\
    \ can navigate to measure chemical water quality parameters automatically. Niya\
    \ et al. (2018) \npropose an IoT-enabled LoRa-based system for monitoring water\
    \ pollution that is completely \ndecentralized by storing and retrieving data\
    \ from IoT sensors on the Ethereum blockchain network. \nCrawford et al. (2021)\
    \ create an R3 Corda-based DLT system for oil and gas underground injection \n\
    control (UIC) operations to maintain the water quality of freshwater aquifers.\
    \ Gudmundsson and \nHougaard (2021) create a model that explicitly demonstrates\
    \ the influence of water quality on \nproduction profits and offer a plan for\
    \ distributing the profits of the best possible pollution \nabatement. In order\
    \ to automate negotiations, the paper offers a decentralized solution using smart\
    \ \ncontracts. \nThe DApp level categorized in this section is conducted by Alharbi\
    \ et al. (2021). Initially, the \nstudy focuses on measuring the water quality\
    \ parameters in industrial tanks and looking for any \nviolations using IoT (Internet\
    \ of Things). Afterward, Hyperledger's private application is used to \nenforce\
    \ the necessary penalties on the violating industrial facility and sustain the\
    \ accuracy, \ndependability, and transparency of the records of violations. The\
    \ technology will be able to \nmeasure the quality of the water in real time and\
    \ enable the immediate identification of any \nviolation to apply the appropriate\
    \ penalties. The administration can access the decentralized web \napplication\
    \ to track the status of water measures for registered industrial facilities and\
    \ evaluate the \ndata linked to water violations with easy-to-read illustrations.\
    \ Shi et al. (2019) present a cutting-\nedge IoT solution that uses a Hyperledger\
    \ private network to preserve healthy drinking water \nconsumption in schools.\
    \ It is mentioned that 39 schools have already implemented the project in \nHangzhou's\
    \ Shangcheng District, China. The project reduces the workload of health professionals\
    \ \nand encourages the transformation from conventional site-based inspection\
    \ to automated remote \nmonitoring. \n \n3.2.4.  Agricultural Water Management\
    \ \nAgricultural water management aims to provide the optimum amount and quality\
    \ of water for \nagricultural products by considering the continuity of ecosystem\
    \ services. This optimization is \npossible by prioritizing data security related\
    \ to agricultural water management processes, Dong \nand Fu (2021), Liu et al.\
    \ (2020) and Kumar et al. (2021) examine possible applications for \nblockchain-based\
    \ digital solutions in the agricultural industry and assess the transformation\
    \ \nprocess of traditional agriculture to blockchain-based digitalized smart agriculture\
    \ systems. Liu et \nal. (2021) and Ferrag et al. (2020) provide a systematic review\
    \ of information communication \ntechnologies (ICT) and blockchain-enabled agricultural\
    \ applications.  \nDragulinescu et al. (2021) propose a blockchain-enabled conceptual\
    \ system to maximize smart \nirrigation by storing the water quality, air quality,\
    \ and weather data on chain. Dragulinescu et al. \n(2021) extend the conceptualized\
    \ framework and perform simulation studies to store and monitor \nsome physical\
    \ and chemical water quality parameters for irrigation networks, such as temperature,\
    \ \ndissolved oxygen, pH, and turbidity. Chang et al. (2021) offer a conceptual\
    \ Ethereum-based \nirrigation system that stores agricultural supply and demand\
    \ data on-chain. Krishna et al. (2021) \nprovide a smart agricultural system architecture\
    \ that stores soil moisture and temperature on \nblockchain to protect agricultural\
    \ data security. Sakthi and DafniRose (2022) propose a \nHyperledger private network\
    \ to provide data transparency and reliability for agricultural \nstakeholders\
    \ to encourage them to reduce pesticide and fertilizer-based water and soil pollution.\
    \ \nLin et al. (2017) discuss the potential blockchain applications and propose\
    \ an architecture based \non ICT and hybrid Ethereum network integration.  \n\
    RajaRajeswari et al. (2022) provide a blockchain-enabled conceptualized framework\
    \ for smart \ngardening as a component of the smart city concept. Munir et al.\
    \ (2019) and Ting et al. (2022) \npropose a smart irrigation system that uses\
    \ fuzzy logic-based algorithms for decision-support \nprocesses and blockchain\
    \ for data reliability. Zeng et al. (2021) simulate a system for managing \nand\
    \ coordinating the usage of high-quality seeds and water resources between communities;\
    \ an \neffective tracking system for seed quality and a smart irrigation management\
    \ system are designed \nusing IoT and blockchain integration. Giaffreda et al.\
    \ (2019), Bordel et al. (2019) and Pincheira et \nal. (2021) provide Ethereum-based\
    \ agricultural water management systems which include private, \nhybrid, and public\
    \ networks respectively. These three studies provide a system that encourages\
    \ \nand rewards ethical behavior in agriculture activities for specific multi-stakeholder\
    \ ecosystems. \nThe main aim of these studies is to create more sustainable and\
    \ environmentally friendly irrigation \nwater consumption system. \nEnescu et\
    \ al. (2020) describe a DApp that is centered on bringing together small farming\
    \ \ncommunities for effective solar panel-based agricultural management. The DApp\
    \ is suggested for \nmanaging both energy and water. The system uses the Ethereum\
    \ public network and smart \ncontracts, which enable customers to trade energy\
    \ and water. ERC20 is implemented for \ntransactions, and two cryptocurrencies\
    \ are introduced including SIST (Small Irrigation System \nToken) and Solar Coin.\
    \  \n \n3.2.5.  Urban Water Management \nUrban water management aims to perform\
    \ urban water services in an integrated manner. The main \nelements of urban water\
    \ management are water supply, drainage and treatment facilities. The \naccountability\
    \ of the urban water authority can become more sustainable within the framework\
    \ of \nblockchain. Alnahari and Ariaratnam (2022), Lukić et al. (2022), Makani\
    \ et al. (2022), Kim et al. \n(2022) and Kumar et al. (2022) investigate the possible\
    \ blockchain application for smart cities. It \nis summarized that blockchain\
    \ has the potential to enhance water security and accountability \nthrough the\
    \ distribution of transparent, secure ledger accounts. In addition, water quantity\
    \ and \nquality can be tracked for whole water supply and demand processes including\
    \ storage, \ntransmission, treatment, and consumption. Public awareness and trust\
    \ layer between citizens are \nthe main contributions of blockchain and smart\
    \ city integration.  \nMahmoud et al., (2019) examine the viability of combining\
    \ Blockchain with intelligent water \nnetworks through case studies. Additionally,\
    \ identity anonymity methods that could be integrated \nwith the system and the\
    \ customer's data are explored, and a distributed ledger and blockchain-\nbased\
    \ data aggregation mechanism for the smart meters are suggested. They extend this\
    \ study and \ndesign a MATLAB toolbox that can simulate blockchain-enabled water\
    \ distribution systems. \nDifferent algorithms for consensus mechanisms in blockchain\
    \ are compared according to their \nmining time and giving the user the option\
    \ to select the desired one (Mahmoud et al. 2021). Lalle \net al. (2020) present\
    \ the use of blockchain technology with the machine learning algorithm k-\nmeans\
    \ to preserve user privacy. Users are grouped into clusters, and every cluster\
    \ has a \npermissioned blockchain to store the data of its members.  \nZecchini\
    \ et al. (2020) introduce particular fields in their description, and they describe\
    \ the use \nof Solidity design patterns applied to urban water management scenarios\
    \ to provide blockchain \ndevelopers with greater assistance in making important\
    \ decisions to create effective decentralized \napplications. Sundaresan et al.\
    \ (2021) propose a blockchain-enabled system that stores the \nquantitative and\
    \ qualitative data of water distribution systems. Thakur et al. (2021) provide\
    \ an \nincentive-based architecture for smart water distribution and saving that\
    \ combines blockchain \ntechnology with edge computing. In the framework, houses\
    \ are designed as nodes of the Ethereum-\nbased network. The computation operates\
    \ at the network's edge and offers a quick water-saving \nincentive system. Arsene\
    \ et al. (2020) and Pahontu et al. (2020) are similar studies that provide a \n\
    water supply system integrated with Hyperledger to manage customer demand more\
    \ effectively. \nRottondi and Verticale (2017) propose a public blockchain-enabled\
    \ smart water metering \narchitecture and a serious gaming platform to incentivize\
    \ sustainable urban water consumption. \nPredescu et al. (2021) develop a system\
    \ at the application level that provides a serious gaming \napproach for urban\
    \ water management from the standpoint of mobile crowd sensing. Each \ncrowdsensing\
    \ task includes a chaincode-based incentive mechanism, and the trust layer of\
    \ the \nsystem is secured by Hyperledger Fabric.  \n \n3.2.6.  Water and SDGs\
    \ \nSDG-6 aims at sustainable water and sanitation services for all. Mora et al.\
    \ (2021) outline the key \nsustainability concerns that cryptocurrency and blockchain\
    \ technologies are addressing in terms \nof SDG-6 Clean Water and Sanitation.\
    \ Le Sève et al. (2018) and Parmentola et al. (2021) provide \na literature review\
    \ about the potential of blockchain for improvements in environmental \nsustainability.\
    \ Mattila et al. (2022) investigate the potential of blockchain-enabled data storage\
    \ \nsystems for their contribution to reaching SDG targets such as climate change,\
    \ biodiversity loss, \nand water scarcity. \n \n3.3. Analysis of Non-Academic\
    \ Content  \nIn this section, the reviewed non-academic content is briefly summarized.\
    \ Web documents \ngenerally focus on the potential of blockchain for hydrological\
    \ applications and underline the \nbeneficial outputs. The most emphasized issue\
    \ is that the blockchain-based storage of hydrological \ndata creates a layer\
    \ of trust between the stakeholders who depend on the quantity and quality of\
    \ \nthe same water resource. Another issue is the advantages of blockchain-based\
    \ digitalization of \ntraditional water markets, which are currently traded, such\
    \ as accountability, easier access to \ninstant market information, and low transaction\
    \ fees.  \nWater Services Regulation Authority, a non-ministerial government department\
    \ of the UK, \npublished a report about customer data reliability and recommended\
    \ blockchain to UK water \ncompanies in 2017 (Ofwat, 2017). A digital asset platform\
    \ BANKEX introduces a pilot initiative \ncalled “water coin” that aims to generate\
    \ direct investments for clean water provision safely by \ncutting out any intermediaries\
    \ or other parties that could taint the process in Kenya (Bankex, 2018). \nFujitsu\
    \ launches a new blockchain water trading system that enables the safe use of\
    \ botanical \nwater. The botanical water harvesting process is the transformation\
    \ of food waste into drinking \nwater. Companies that want to use botanical water\
    \ can purchase it from a suitable refinery by using \na blockchain-enabled mechanism\
    \ provided by Fujitsu (Fujitsu, 2021). \nThe aims of the projects that publish\
    \ whitepapers or hackathon projects focus on to provide \nblockchain-based storage\
    \ of data on water distribution systems, detection, management, and \nprevention\
    \ of water pollution sources; ensure more reliable traceability of water-related\
    \ \ninvestments; create wastewater management layers for both treatment and environmental\
    \ \ndischarge processes; create micro water trading system for smart cities; and\
    \ create more \naccountable water supply-chain processes.  \n4. Discussion \n\
    Blockchain-enabled hydrological applications are unique to each use case and difficult\
    \ to \nstandardize but the literature has agreed on four fundamental benefits\
    \ of blockchain-based \nhydrological applications, which are described below.\
    \ \nWater Trust: Since the blockchain has a decentralized structure, none of the\
    \ stakeholders are \ndirectly the owners of the system. In addition, it is certain,\
    \ thanks to smart contracts, that \nhydrological and administrative rules are\
    \ followed by all parties. This creates a trust layer \nbetween parties that depend\
    \ on the same water source, even if they are not aware of each other. \nWater\
    \ Data Security: In the blockchain, the data is distributed among the nodes that\
    \ support the \nsystem in a completely distributed manner. This makes the system\
    \ safe from traditional \ncyberattacks and power outages. Since the data is stored\
    \ cryptographically, even if the data is \ncaptured in some way, it cannot be\
    \ disclosed unless the user wants it. It provides data security \nfor natural\
    \ and legal persons. \nImmutable Water Transaction Ledgers: Data recorded in distributed\
    \ ledgers cannot be deleted. It \nprovides a single and common database for stakeholders.\
    \ \nWater Accountability: Transactional data records on the blockchain are publicly\
    \ available for \nanyone to view and verify. There is no need for a third-party\
    \ verification system or trusted data \nprovider to verify the data. \nTheoretically,\
    \ the potential benefits of blockchain-based hydrological applications are \n\
    discussed in detail, but real-time simulation and application stage studies are\
    \ scarce in the \nliterature. Moreover, there is no blockchain-based hydrological\
    \ application where the \nenvironmental, economic, and regulatory rules are coded\
    \ as smart contracts and real-time data is \nprocessed. Although 34% of academic\
    \ content includes simulation, application, or a pilot project, \nthe data shared\
    \ about the process is very limited. The simulation results are mostly graphical\
    \ \nrepresentation for the measured water quantity and quality. This can be explained\
    \ by the \nfluctuations in cryptocurrency exchanges affecting trust in blockchain\
    \ technology and prolonging \nthe maturation process of blockchain technology.\
    \ Blockchain technologies are currently immature \nfor large scale operational\
    \ and regulatory applications and difficult to justify for long-term \ninvestment\
    \ and commitment. \nAnother notable point in the review is that a detailed smart\
    \ contract-oriented feasibility, or \noptimization study on blockchain transaction\
    \ fees related to the simulation, application, and pilot \nproject-level studies\
    \ is very limited. The efficient design of codes in the rules determined by smart\
    \ \ncontracts has a great impact on transaction fees and can make the whole system\
    \ feasible. Moreover, \nwhile the data recorded on the blockchain is immutable,\
    \ coding the smart contract is critical. A \nvulnerability in smart contract codes\
    \ could lead to incorrect recording or manipulation of data \n(Nelaturu et al.,\
    \ 2021). A smart contract can only be as smart as the developer who codes it.\
    \  \nAnother important issue is the blockchain oracle problem. Blockchains are\
    \ isolated from \nphysical systems, so they need blockchain oracles that enable\
    \ data exchange with physical systems \n(Lo et al. 2020). IoTs that send water-related\
    \ data to the blockchain must send reliable data. \nOtherwise, the blockchain\
    \ system will store incorrect data even if the smart contract is coded \nperfectly.\
    \ In the literature, there is a lack of blockchain oracle research focused on\
    \ flowmeters and \nwater quality sensors that record water-related data and send\
    \ it to the blockchain system. Although \nthe use of Ethereum and Hyperledger\
    \ dominates the literature, due to the block structures that \nallow smart contract\
    \ design, their hydrological advantages and disadvantages against each other \n\
    are not evaluated in the literature. Similarly, the hydrological evaluation of\
    \ the advantages of \nprivate and public blockchain applications against each\
    \ other is not included in the literature. \n \n5. Recommendations for Future\
    \ Work \nExtensive research and case studies is needed with a real-time application\
    \ focus to directly observe \nand evaluate the theoretical benefits of the blockchain\
    \ technology. Research involving more real-\ntime applications will encourage\
    \ more water authorities to test the blockchain-based performance \nof their existing\
    \ systems. It is necessary to analyze the economic and financial feasibility of\
    \ the \nblockchain-based digital transformation, which includes the optimization\
    \ of the blockchain system \nitself and the digital connection with the physical\
    \ water systems. In addition, hydrology-focused \nsmart contract optimization\
    \ and blockchain oracle framework development research are essential. \nGeneralized\
    \ architectures and blockchain systems that can serve as a plug-and-play technology\
    \ to \nmany use cases and organizations are essential for realizing the potential\
    \ in hydrological \napplications such as water rights trading or urban water supply-chain.\
    \ Water authorities or \ncompanies may want to enjoy the benefits of blockchain\
    \ applications without needing to learn the \ncryptographic background. \nPrivate\
    \ and public blockchain-enabled networks have advantages and disadvantages for\
    \ a \nwater system, but there is no study in the literature focusing on this comparison.\
    \ While public \nblockchain networks provide greater accountability, there are\
    \ higher transaction fees. This issue \nshould be discussed in particular within\
    \ applications of water systems. Similarly, different \nconsensus algorithms provide\
    \ different features, however, there is a lack of hydrology-focused \ncomparison\
    \ studies about the issue.  \nTransboundary water systems management is one of\
    \ the most important areas of hydrology \nwhere stakeholders have a problem of\
    \ trust, reliable data are needed, and a common water \nmanagement approach should\
    \ be adopted (Albrecht and Gerlak, 2022). Transboundary water \nsystems are an\
    \ important field of study with great potential, considering the theoretical benefits\
    \ of \nblockchain such as accountability, transparency, and immutability. Virtual\
    \ water trade and water \nfootprint, which are other sub-branches of hydrology,\
    \ also have the potential to be digitalized with \na blockchain-oriented perspective.\
    \ The international trade of products brings with it the \ninternational flow\
    \ of virtual water (Delpasand et al., 2023). The supply chains of products can\
    \ be \nmanaged on a blockchain basis by adding water footprint and virtual water\
    \ trade data. \nThe last point to be underlined about blockchain-based applications\
    \ is the Non-Fungible \nTokens (NFT). An NFT is a type of cryptocurrency; however,\
    \ in this definition, the money in \nquestion can be any asset that has value\
    \ (Flick, 2022). Assets that can be considered NFTs include \nany piece of art,\
    \ video, tweet, a website, images, and stories that are created on social media.\
    \ NFTs \ncannot be exchanged for another identical token, as NFTs are unique and\
    \ no two are alike. This \nproperty is called \"non-fungibility,\" that is, \"\
    unchangeable.\" Public blockchains provide these \ntokens with provable rarity,\
    \ while smart contracts ensure that they are non-reproducible and \nunique. In\
    \ water resources management, any product's water footprint certificate or water\
    \ quality \ncredits can be stored as NFTs. Similarly, any investment, water-related\
    \ bill, or tax payment can be \nstored as NFTs with the limits drawn by the smart\
    \ contract, making it immutable who pays when \nand how much. \n \n6. Conclusions\
    \ \nThis paper provides a systematic literature review of applications to address\
    \ hydrological \nchallenges using blockchain technology. A total of 104 academic\
    \ publications and 37 non-\nacademic studies dealing with hydrology and water\
    \ resources were analyzed in detail. During the \nperiod of analysis covered,\
    \ between 2017 and October 15, 2022, it was observed that the number \nof publications\
    \ for blockchain-based hydrological applications has increased linearly since\
    \ 2017, \nwith an observable drop in 2020, only to continue following an uptrend.\
    \ This study evaluates the \npotential for existing application areas to be enhanced\
    \ with a more sophisticated use of blockchain \ntechnology as well as the realization\
    \ of potential new hydrological applications. \nDetailed review results demonstrate\
    \ that the blockchain-enabled hydrological applications \nhave not reached maturity.\
    \ However, there is a gap in research on hydrological applications and \nthe implementation\
    \ of water resources management projects that process and use real-time data.\
    \ \nWith more research and development to address the identified gaps, blockchain\
    \ technology holds \ngreat potential and may provide sustainable utility in the\
    \ field of hydroinformatics. \n \n7. References \nAbu-Amara, F., Alrammal, M.,\
    \ Al Hammadi, H., Alhameli, S., Mohamed, I., Alaydaroos, M. \nand Alnuaimi, Z.,\
    \ (2022). A blockchain solution for water and electricity management. \nMaterials\
    \ Today: Proceedings [online]. [Viewed 21 November 2022]. Available from: doi:\
    \ \n10.1016/j.matpr.2022.05.106 \nAkinbi, A., MacDermott, Á. and Ismael, A. M.,\
    \ (2022). A systematic literature review of \nblockchain-based Internet of Things\
    \ (IoT) forensic investigation process models. Forensic \nScience International:\
    \ Digital Investigation [online]. 42, 301470. [Viewed 21 November \n2022]. Available\
    \ from: doi: 10.1016/j.fsidi.2022.301470 \nAlabbad, Y., Mount, J., Campbell, A.M.\
    \ and Demir, I., (2021). Assessment of transportation \nsystem disruption and\
    \ accessibility to critical amenities during flooding: Iowa case study. \nScience\
    \ of the total environment, 793, p.148476. \nAlbrecht, T. R. and Gerlak, A. K.,\
    \ (2022). Beyond the basin: water security in transboundary \nenvironments. Water\
    \ Security[online]. 17, 100124. [Viewed 29 November 2022]. Available \nfrom: doi:\
    \ 10.1016/j.wasec.2022.100124 \nAlcarria, R., Bordel, B., Robles, T., Martín,\
    \ D. and Manso-Callejo, M.-Á., (2018). A blockchain-\nbased authorization system\
    \ for trustworthy resource monitoring and trading in smart \ncommunities. Sensors\
    \ [online]. 18(10), 3561. [Viewed 21 November 2022]. Available from: \ndoi: 10.3390/s18103561\
    \ \nAlharbi, N., Althagafi, A., Alshomrani, O., Almotiry, A. and Alhazmi, S.,\
    \ (2021). A blockchain \nbased secure iot solution for water quality management.\
    \ In: 2021 international congress of \nadvanced technology and engineering (ICOTEN),\
    \ 4–5 July 2021, Taiz, Yemen [online]. \nIEEE. [Viewed 22 November 2022]. Available\
    \ from: doi: \n10.1109/icoten52080.2021.9493474 \nAlnahari, M. S. and Ariaratnam,\
    \ S. T., (2022). The application of blockchain technology to smart \ncity infrastructure.\
    \ Smart Cities [online]. 5(3), 979–993. [Viewed 21 November 2022]. \nAvailable\
    \ from: doi: 10.3390/smartcities5030049 \nAngara, J. S. V. and Saripalle, R. S.,\
    \ (2022). Towards a virtual water currency for industrial \nproducts using blockchain\
    \ technology. Water Policy [online]. [Viewed 21 November 2022]. \nAvailable from:\
    \ doi: 10.2166/wp.2022.285 \nAquaBit, (2022). AquaBit whitepaper [online]. Available\
    \ from: \nhttp://aquabit.io/pdf/aquabit_whitepaper_v1.22.pdf \nAqua Coin, (2019).\
    \ Devpost. Available from: https://devpost.com/software/aquacoin \nArooj, A.,\
    \ Farooq, M. S. and Umer, T., (2022). Unfolding the blockchain era: timeline,\
    \ \nevolution, types and real-world applications. Journal of Network and Computer\
    \ Applications \n[online]. 103511. [Viewed 21 November 2022]. Available from:\
    \ doi: \n10.1016/j.jnca.2022.103511 \nArsene, D., Pahontu, B., Predescu, A., Mocanu,\
    \ M. and Lupu, C., (2020). A Hyperledger \nintegration for audit-enhanced decision\
    \ support in a smart water distribution system. In: 2020 \nIEEE 16th international\
    \ conference on intelligent computer communication and processing \n(ICCP), 3–5\
    \ September 2020, Cluj-Napoca, Romania [online]. IEEE. [Viewed 22 November \n\
    2022]. Available from: doi: 10.1109/iccp51029.2020.9266216 \nArup, (2019). Blockchain\
    \ and the built environment [online]. Available from: \nhttps://www.arup.com/-/media/arup/files/publications/b/blockchain-and-the-built-\n\
    environment.pdf \nAsgari, M. and Nemati, M., (2022). Application of distributed\
    \ ledger platforms in smart water \nsystems—a literature review. Frontiers in\
    \ Water [online]. 4. [Viewed 21 November 2022]. \nAvailable from: doi: 10.3389/frwa.2022.848686\
    \ \nAtreides, (2022). A blockchain-based approach to water resource management\
    \ [online]. \nAvailable from: https://atreideswater.com \nBaarish, (2018). Devpost.\
    \ Available from: https://devpost.com/software/baarish \nBaikalikal, (2017). Baikalikal\
    \ - blockchain technology for the extraction and distribution of \nbaikal drinking\
    \ water. [online]. Available from: https://github.com/baikalikaICO/baikalika \n\
    Bankex, (2018). First blockchain-based public access clean water system in kenya\
    \ [online]. \n[Viewed 22 November 2022]. Available from: https://blog.bankex.org/first-blockchain-\n\
    based-public-access-clean-water-system-in-kenya-454637af1d6d \nBarbeler, D., (2019).\
    \ Blockchain technology provides a new way of valuing water [online]. \nAustralian\
    \ Water Association Homepage | AWA. [Viewed 22 November 2022]. Available \nfrom:\
    \ https://www.awa.asn.au/resources/latest-news/technology/innovation/blockchain-\n\
    technology-provides-a-new-way-of-valuing-water \nBeck, M.B., Jiang, F., Shi, F.,\
    \ Walker, R.V., Osidele, O.O., Lin, Z., Demir, I. and Hall, J.W., \n(2010), March.\
    \ Re-engineering cities as forces for good in the environment. In Proceedings\
    \ \nof the Institution of Civil Engineers-Engineering Sustainability (Vol. 163,\
    \ No. 1, pp. 31-46). \nThomas Telford Ltd. \nBelliera, A., Galeotti, M., Pagano,\
    \ A. J., Rabitti, G., Romagnoli, F. and Vannucci, E., (no date). \nFlood risk\
    \ insurance: the blockchain approach to a bayesian adaptive design of the contract.\
    \ \nIn: Colloquium 2019 \"innovating actuarial research on financial risk and\
    \ ERM, 21 May \n2019, Florence, Italy [online]. Riga Technical University. Available\
    \ from: \nhttps://ortus.rtu.lv/science/en/publications/31935 \nBerman, I., Zereik,\
    \ E., Kapitonov, A., Bonsignorio, F., Khassanov, A., Oripova, A., Lonshakov, \n\
    S. and Bulatov, V., (2020). Trustable environmental monitoring by means of sensors\
    \ \nnetworks on swarming autonomous marine vessels and distributed ledger technology.\
    \ \nFrontiers in Robotics and AI [online]. 7. [Viewed 22 November 2022]. Available\
    \ from: doi: \n10.3389/frobt.2020.00070 \nBhaduri, A., Dionisio Pérez-Blanco,\
    \ C., Rey, D., Iftekhar, S., Kaushik, A., Escriva-Bou, A., \nCalatrava, J., Adamson,\
    \ D., Palomo-Hierro, S., Jones, K., Asbjornsen, H., Altamirano, M. A., \nLopez-Gunn,\
    \ E., Polyakov, M., Motlagh, M. and Bekchanov, M., (2021). Economics of \nwater\
    \ security. In: Handbook of water resources management: discourses, concepts and\
    \ \nexamples [online]. Cham: Springer International Publishing. pp. 273–327. [Viewed\
    \ 21 \nNovember 2022]. Available from: doi: 10.1007/978-3-030-60147-8_10 \nBlock-Garden,\
    \ (2022). Devpost. Available from: https://devpost.com/software/block-garden \n\
    Blockchain in california: a roadmap [online], (2020). California Government Operation\
    \ Agency. \nAvailable from: https://www.govops.ca.gov/wp-content/uploads/sites/11/2020/07/BWG-\n\
    Final-Report-2020-July1.pdf \nBlock-Squid, (2020). Block-Squid - Managing waste\
    \ water with blockchain [online]. Available \nfrom: https://github.com/sedhha/blocksquid/blob/master/README.md\
    \ \nBluechain, (2019). Bluechain for bytom - A smart-contract based system for\
    \ industrial water & \nwaste resource management. powered by the BYTOM blockchain.\
    \ [online]. Available from: \nhttps://github.com/d-sfounis/Bluechain \nBordel,\
    \ B., Martin, D., Alcarria, R. and Robles, T., (2019). A blockchain-based water\
    \ control \nsystem for the automatic management of irrigation communities. In:\
    \ 2019 IEEE international \nconference on consumer electronics (ICCE), 11–13 January\
    \ 2019, Las Vegas, NV, USA \n[online]. IEEE. [Viewed 22 November 2022]. Available\
    \ from: doi: \n10.1109/icce.2019.8661940 \nBou Abdo, J. and Zeadally, S., (2020).\
    \ Multi-utility framework: blockchain exchange platform \nfor sustainable development.\
    \ International Journal of Pervasive Computing and \nCommunications [online].\
    \ ahead-of-print(ahead-of-print). [Viewed 21 November 2022]. \nAvailable from:\
    \ doi: 10.1108/ijpcc-06-2020-0059 \nBramer, W. M., De Jonge, G. B., Rethlefsen,\
    \ M. L., Mast, F. and Kleijnen, J., (2018). A \nsystematic approach to searching:\
    \ an efficient and complete method to develop literature \nsearches. Journal of\
    \ the Medical Library Association [online]. 106(4). [Viewed 21 November \n2022].\
    \ Available from: doi: 10.5195/jmla.2018.283 \nButerin, V., (2014). Ethereum:\
    \ a next-generation smart contract and decentralized application \nplatform [online].\
    \ Home | ethereum.org. [Viewed 21 November 2022]. Available from: \nhttps://ethereum.org/669c9e2e2027310b6b3cdce6e1c52962/Ethereum_Whitepaper_-\n\
    _Buterin_2014.pdf \nCastellini, G., Lucini, L., Rocchetti, G., Lorenzo, J. M.\
    \ and Graffigna, G., (2022). Determinants \nof consumer acceptance of new technologies\
    \ used to trace and certify sustainable food \nproducts: a mini-review on blockchain\
    \ technology. Current Opinion in Environmental \nScience & Health [online]. 100403.\
    \ [Viewed 21 November 2022]. Available from: doi: \n10.1016/j.coesh.2022.100403\
    \ \nChang, Y., Xu, J. and Ghafoor, K. Z., (2021). An IOT and blockchain approach\
    \ for the smart \nwater management system in agriculture. Scalable Computing:\
    \ Practice and Experience \n[online]. 22(2). [Viewed 22 November 2022]. Available\
    \ from: doi: \n10.12694/scpe.v22i2.1869 \nClimeter , (2017). Devpost. Available\
    \ from: https://devpost.com/software/climater \nColi, P., Pflueger, C., Campbell,\
    \ T. and Garcia, L. J., (2021). Blockchain uses for microfinance \ninstitutions\
    \ in the water and sanitation sector: pilot study [online]. Edited by Mauro Nalesso\
    \ \nand Keisuke Sasaki. Inter-American Development Bank. [Viewed 21 November 2022].\
    \ \nAvailable from: doi: 10.18235/0003273 \nCrawford, J., Folsom, A., Vo, V.,\
    \ Tante, A. D., Yu, J. P. and Lei, C., (2021). California oilfield \nunderground\
    \ aquifer injection monitoring by blockchain technology. In: 2021 4th IEEE \n\
    international conference on industrial cyber-physical systems (ICPS), 10–12 May\
    \ 2021, \nVictoria, BC, Canada [online]. IEEE. [Viewed 22 November 2022]. Available\
    \ from: doi: \n10.1109/icps49255.2021.9468188 \nCrcna, (2020). Improving water\
    \ markets and trading through new digital technologies [online]. \nThe Cooperative\
    \ Research Centre for Developing Northern Australia. Available from: \nhttps://crcna.com.au/research/projects/improving-water-markets-and-trading-through-new-\n\
    digital-technologies \nCryptoWater, (2022). CryptoWater - Water on blockchain\
    \ [online]. CryptoWater.si – Water on \nblockchain. [Viewed 22 November 2022].\
    \ Available from: https://www.cryptowater.si/ \nDamania, R., Desbureaux, S., Rodella,\
    \ A.-S., Russ, J. and Zaveri, E., (2019). Quality unknown: \nthe invisible water\
    \ crisis[online]. Washington, DC: World Bank. [Viewed 22 November \n2022]. Available\
    \ from: doi: 10.1596/978-1-4648-1459-4 \nDecentralized-Rain-Water-Harvesting,\
    \ (2020). Decentralized-Rain-Water-Harvesting hackathon \nproject [online]. Available\
    \ from: https://github.com/sidrakshe28/Decentralized-Rain-Water-\nHarvesting \n\
    Delpasand, M., Bozorg-Haddad, O., Goharian, E. and Loáiciga, H. A., (2023). Virtual\
    \ water \ntrade: economic development and independence through optimal allocation.\
    \ Agricultural \nWater Management[online]. 275, 108022. [Viewed 29 November 2022].\
    \ Available from: doi: \n10.1016/j.agwat.2022.108022 \nDemir, I., Sermet, Y.,\
    \ & Rink, K. (2022). Next generation visualization and communication \nsystems\
    \ for earth science using immersive reality and serious gaming. Frontiers in Earth\
    \ \nScience, 10, 1101538. \nDemir, I., Jiang, F., Walker, R. V., Parker, A. K.,\
    \ & Beck, M. B. (2009, October). Information \nsystems and social legitimacy scientific\
    \ visualization of water quality. In 2009 IEEE \nInternational Conference on Systems,\
    \ Man and Cybernetics (pp. 1067-1072). IEEE. \nDogo, E. M., Salami, A. F., Nwulu,\
    \ N. I. and Aigbavboa, C. O., (2019). Blockchain and internet \nof things-based\
    \ technologies for intelligent water management system. In: Artificial \nintelligence\
    \ in iot [online]. Cham: Springer International Publishing. pp. 129–150. [Viewed\
    \ \n21 November 2022]. Available from: doi: 10.1007/978-3-030-04110-6_7 \nDong,\
    \ N. and Fu, J., (2021). Development path of smart agriculture based on blockchain.\
    \ In: \n2021 IEEE asia-pacific conference on image processing, electronics and\
    \ computers (IPEC), \n14–16 April 2021, Dalian, China [online]. IEEE. [Viewed\
    \ 22 November 2022]. Available \nfrom: doi: 10.1109/ipec51340.2021.9421125 \n\
    Dragulinescu, A.-M., Balaceanu, C., Osiac, F. E., Roscaneanu, R., Chedea, V. S.,\
    \ Suciu, G., \nPaun, M. C. and Bucuci, S., (2021). IoT-based smart water management\
    \ systems. In: 2021 \nIEEE 27th international symposium for design and technology\
    \ in electronic packaging \n(SIITME), 27–30 October 2021, Timisoara, Romania [online].\
    \ IEEE. [Viewed 22 November \n2022]. Available from: doi: 10.1109/siitme53254.2021.9663611\
    \ \nDragulinescu, A.-M., Constantin, F., Orza, O., Bosoc, S., Streche, R., Negoita,\
    \ A., Osiac, F., \nBalaceanu, C. and Suciu, G., (2021). Smart watering system\
    \ security technologies using \nblockchain. In: 2021 13th international conference\
    \ on electronics, computers and artificial \nintelligence (ECAI), 1–3 July 2021,\
    \ Pitesti, Romania [online]. IEEE. [Viewed 22 November \n2022]. Available from:\
    \ doi: 10.1109/ecai52376.2021.9515114 \nDramski, M., Seeber, C., Krivorotova,\
    \ E., Thomas, J., Ganis, M. R., Leider, A. and Tappert, C. \nC., (2019). Managing\
    \ weather data with environmental blockchain network. In: 3 May 2019, \nNew York,\
    \ USA [online]. Pleasantville, NY: Pace University. Available from: \nhttp://csis.pace.edu/~ctappert/srd2019/d4.pdf\
    \ \nEnescu, F. M., Bizon, N., Onu, A., Răboacă, M. S., Thounthong, P., Mazare,\
    \ A. G. and Șerban, \nG., (2020). Implementing blockchain technology in irrigation\
    \ systems that integrate \nphotovoltaic energy generation systems. Sustainability\
    \ [online]. 12(4), 1540. [Viewed 22 \nNovember 2022]. Available from: doi: 10.3390/su12041540\
    \ \nEnvChain: An Initiative to Avoid Environmental Crisis, (2022). Devpost. Available\
    \ from:  \n      https://devpost.com/software/envchain-an-initiative-to-avoid-environmental-crisis\
    \ \nEnvironmentConnect (2022). Devpost. from: https://devpost.com/software/environmentconnect-\n\
    tjvfdo \nEstevam, G., Palma, L. M., Silva, L. R., Martina, J. E. and Vigil, M.,\
    \ (2021). Accurate and \ndecentralized timestamping using smart contracts on the\
    \ Ethereum blockchain. Information \nProcessing & Management [online]. 58(3),\
    \ 102471. [Viewed 21 November 2022]. Available \nfrom: doi: 10.1016/j.ipm.2020.102471\
    \ \nEwing, G., & Demir, I. (2021). An ethical decision-making framework with serious\
    \ gaming: a \nsmart water case study on flooding. Journal of Hydroinformatics,\
    \ 23(3), 466-482. \nEwing, G., Mantilla, R., Krajewski, W., & Demir, I. (2022).\
    \ Interactive hydrological modelling \nand simulation on client-side web systems:\
    \ an educational case study. Journal of \nHydroinformatics, 24(6), 1194-1206.\
    \ \nFerrag, M. A., Shu, L., Yang, X., Derhab, A. and Maglaras, L., (2020). Security\
    \ and privacy for \ngreen iot-based agriculture: review, blockchain solutions,\
    \ and challenges. IEEE Access \n[online]. 8, 32031–32053. [Viewed 22 November\
    \ 2022]. Available from: doi: \n10.1109/access.2020.2973178 \nFlick, D. C., (2022).\
    \ A Critical Professional Ethical Analysis of Non-Fungible Tokens \n(NFTs). Journal\
    \ of Responsible Technology[online]. 100054. [Viewed 21 December 2022]. \nAvailable\
    \ from: doi: 10.1016/j.jrt.2022.100054 \nFlood Chain, (2019). Devpost. Available\
    \ from: https://devpost.com/software/flood-chain-mg7rdi \nFujitsu, (2021). Fujitsu’s\
    \ blockchain solution applied to new water trading platform to tackle \nglobal\
    \ water shortages [online]. Fujitsu Global. [Viewed 22 November 2022]. Available\
    \ \nfrom: https://www.fujitsu.com/global/about/resources/news/press-releases/2021/1118-\n\
    01.html \nGad, A. G., Mosa, D. T., Abualigah, L. and Abohany, A. A., (2022). Emerging\
    \ trends in \nblockchain technology and applications: a review and outlook. Journal\
    \ of King Saud \nUniversity - Computer and Information Sciences [online]. [Viewed\
    \ 21 November 2022]. \nAvailable from: doi: 10.1016/j.jksuci.2022.03.007 \nGalarza,\
    \ R., (2022). Blockchain: verifying, validating and standardizing water purity\
    \ [online]. \n[Viewed 22 November 2022]. Available from: https://www.watertechonline.com/water-\n\
    reuse/article/14274926/blockchain-verifying-validating-and-standardizing-water-purity\
    \ \nGautam A, Sit M and Demir I (2022) Realistic River Image Synthesis Using Deep\
    \ Generative \nAdversarial Networks. Front. Water 4:784441. doi: 10.3389/frwa.2022.784441\
    \ \nGenesis Research & Technology Group, (2022). Genesis research & technology\
    \ group \nwhitepaper [online]. Available from: http://watertoken.io/assets/images/white-\n\
    paper.pdf?pdf=Whitepaper \nGiaffreda, R., Antonelli, F. and Spada, P., (2019).\
    \ Promoting sustainable agricultural practices \nthrough incentives. In: 2019\
    \ IEEE international workshop on metrology for agriculture and \nforestry (metroagrifor),\
    \ 24–26 October 2019, Portici, Italy [online]. IEEE. [Viewed 22 \nNovember 2022].\
    \ Available from: doi: 10.1109/metroagrifor.2019.8909281 \nGiampietro, P. G.,\
    \ (2020). Tengo - blockchain technology platform with a direct positive impact\
    \ \non the environment. [online]. Available from: https://tengocoin.net/docs/Tengo-Research-\n\
    Foundation-Whitepaper-Draft05.pdf \nGrigoras, G., Bizon, N., Enescu, F. M., Lopez\
    \ Guede, J. M., Salado, G. F., Brennan, R., \nO'Driscoll, C., Dinka, M. O. and\
    \ Alalm, M. G., (2018). ICT based smart management \nsolution to realize water\
    \ and energy savings through energy efficiency measures in water \ndistribution\
    \ systems. In: 2018 10th international conference on electronics, computers and\
    \ \nartificial intelligence (ECAI), 28–30 June 2018, Iasi, Romania [online]. IEEE.\
    \ [Viewed 21 \nNovember 2022]. Available from: doi: 10.1109/ecai.2018.8679012\
    \ \nGsi, (2022). Gsi: the blockchain solution to the problem of water pollution\
    \ [online]. [Viewed 22 \nNovember 2022]. Available from: https://www.gsi.finance/gsi-the-blockchain-solution-to-\n\
    the-problem-of-water-pollution/ \nGudmundsson, J. and Hougaard, J. L., (2021).\
    \ River pollution abatement: decentralized solutions \nand smart contracts. University\
    \ of Copenhagen, Department of Food and Resource \nEconomics (IFRO) [online].\
    \ 2021/07. Available from: \nhttps://www.econstor.eu/bitstream/10419/244335/1/ifro-wp2021-07update.pdf\
    \ \nH2O Chain (2019). Devpost. Available from: https://devpost.com/software/h2o-chain\
    \ \nH2o Securities, (2022). H2o - the water network utility token [online]. Available\
    \ from: \nhttps://h2o-securities.com/assets/docs/H2OSecuritiesWhitePaper.pdf \n\
    Hakak, S., Khan, W. Z., Gilkar, G. A., Haider, N., Imran, M. and Alkatheiri, M.\
    \ S., (2020). \nIndustrial wastewater management using blockchain technology:\
    \ architecture, requirements, \nand future directions. IEEE Internet of Things\
    \ Magazine[online]. 3(2), 38–43. [Viewed 26 \nNovember 2022]. Available from:\
    \ doi: 10.1109/iotm.0001.1900092 \nHaltas, I., Yildirim, E., Oztas, F., & Demir,\
    \ I. (2021). A comprehensive flood event specification \nand inventory: 1930–2020\
    \ Turkey case study. International Journal of Disaster Risk \nReduction, 56, 102086.\
    \ \nHang, L. and Kim, D.-H., (2021). Optimal blockchain network construction methodology\
    \ based \non analysis of configurable components for enhancing Hyperledger Fabric\
    \ performance. \nBlockchain: Research and Applications[online]. 2(1), 100009.\
    \ [Viewed 21 November 2022]. \nAvailable from: doi: 10.1016/j.bcra.2021.100009\
    \ \nHangan, A., Chiru, C.-G., Arsene, D., Czako, Z., Lisman, D. F., Mocanu, M.,\
    \ Pahontu, B., \nPredescu, A. and Sebestyen, G., (2022). Advanced techniques for\
    \ monitoring and \nmanagement of urban water infrastructures—an overview. Water\
    \ [online]. 14(14), 2174. \n[Viewed 21 November 2022]. Available from: doi: 10.3390/w14142174\
    \ \nHow to Save, (2021). Devpost. Available from: https://devpost.com/software/how-to-save-\
    \ \nwater-online \nHu, A., & Demir, I. (2021). Real-time flood mapping on client-side\
    \ web systems using hand \nmodel. Hydrology, 8(2), 65. \nHu, S., Huang, S. and\
    \ Qin, X., (2022). Exploring blockchain-supported authentication based on \nonline\
    \ and offline business in organic agricultural supply chain. Computers & Industrial\
    \ \nEngineering [online]. 108738. [Viewed 21 November 2022]. Available from: doi:\
    \ \n10.1016/j.cie.2022.108738 \nHydroBlock, (2018). HydroBlock: Water management\
    \ supply chain DApp [online]. Available \nfrom: https://github.com/arnabuchiha/HydroBlock\
    \ \nHydrochain, (2020). A Blockchain and IOT based system to decentralize the\
    \ conventional water \nconsumption analysis and billing process [online]. https://github.com/UltimateRoman/Hydro-\n\
    chain. Available from: https://github.com/UltimateRoman/Hydro-chain \nHydro-chain,\
    \ (2021). Hydro-chain - Decentralizing Water Bills to enhance transparency and\
    \ \nensure credible, seamless payments, using IOT and Blockchain [online]. Available\
    \ from: \nhttps://github.com/UltimateRoman/Hydro-chain \nHypervine, (2022). Hypervine\
    \ [online]. https://hypervine.io. [Viewed 22 November 2022]. \nAvailable from:\
    \ https://hypervine.io/ \nIkeda, J. and Liffiton, K., (2019). Fintech for the\
    \ water sector advancing financial inclusion for \nmore equitable access to water\
    \ [online]. Washington: International Bank for Reconstruction \nand Development\
    \ / The World Bank. Available from: \nhttps://openknowledge.worldbank.org/bitstream/handle/10986/31417/W18055.pdf?sequence\n\
    =4&amp;isAllowed=y \nIyer, L. S. and Giri, S. V., (2020). Harnessing technology\
    \ for mitigating water woes in the city of \nBengaluru. Journal of Physics: Conference\
    \ Series [online]. 1427, 012004. [Viewed 21 \nNovember 2022]. Available from:\
    \ doi: 10.1088/1742-6596/1427/1/012004 \nIyer, S., Thakur, S., Dixit, M., Katkam,\
    \ R., Agrawal, A. and Kazi, F., (2019). Blockchain and \nanomaly detection based\
    \ monitoring system for enforcing wastewater reuse. In: 2019 10th \ninternational\
    \ conference on computing, communication and networking technologies \n(ICCCNT),\
    \ 6–8 July 2019, Kanpur, India [online]. IEEE. [Viewed 22 November 2022]. \nAvailable\
    \ from: doi: 10.1109/icccnt45670.2019.8944586 \nJing, N., Liu, Q. and Sugumaran,\
    \ V., (2021). A blockchain-based code copyright management \nsystem. Information\
    \ Processing & Management [online]. 58(3), 102518. [Viewed 21 \nNovember 2022].\
    \ Available from: doi: 10.1016/j.ipm.2021.102518 \nKassou, M., Bourekkadi, S.,\
    \ Khoulji, S., Slimani, K., Chikri, H. and Kerkeb, M. L., (2020). \nBlockchain-based\
    \ medical and water waste management conception. In: The international \nconference\
    \ on innovation, modern applied science & environmental studies (ICIES2020), 25\
    \ \nDecember 2020, Kenitra, Moroccco [online]. Kenitra: Ibn Tofail University.\
    \ Available from: \nhttps://www.e3s-\nconferences.org/articles/e3sconf/abs/2021/10/e3sconf_icies2020_00070/e3sconf_icies2020_\n\
    00070.html \nKaur, E. and Oza, A., (2020). Blockchain-based multi-organization\
    \ taxonomy for smart cities. \nSN Applied Sciences[online]. 2(3). [Viewed 22 November\
    \ 2022]. Available from: doi: \n10.1007/s42452-020-2187-4 \nKaushik, A. K., (2019).\
    \ The promise of public interest technology: in india and the united states \n\
    [online]. New America. [Viewed 22 November 2022]. Available from: \nhttps://www.newamerica.org/fellows/reports/anthology-working-papers-new-americas-us-\n\
    india-fellows/the-development-of-smart-water-markets-using-blockchain-technology-aditya-\n\
    k-kaushik/ \nKhatri, Y., (2019). Colorado lawmakers eye blockchain tech for water\
    \ rights management \n[online]. CoinDesk: Bitcoin, Ethereum, Crypto News and Price\
    \ Data. [Viewed 22 November \n2022]. Available from: https://www.coindesk.com/markets/2019/03/07/colorado-lawmakers-\n\
    eye-blockchain-tech-for-water-rights-management/ \nKim, S., Zhang, A., Liao, R.,\
    \ Zheng, W., Hu, Z. and Sun, Z., (2022). Sampling blockchain-\nenabled smart city\
    \ applications among South Korea, the United States and China. Journal of \nSmart\
    \ Cities and Society [online]. 1(1), 53–70. [Viewed 21 November 2022]. Available\
    \ \nfrom: doi: 10.3233/scs-210120 \nKnell, M., (2021). The digital revolution\
    \ and digitalized network society. Review of \nEvolutionary Political Economy[online].\
    \ 2(1), 9–25. [Viewed 18 December 2022]. Available \nfrom: doi: 10.1007/s43253-021-00037-4\
    \ \nKojo, (2022). Kojo blockchain project [online]. Available from: \nhttps://github.com/wowtvds/kojo-blockchain-project\
    \ \nKrishna, K. M., Borole, Y. D., Rout, S., Negi, P., Deivakani, M. and Dilip,\
    \ R., (2021). Inclusion \nof cloud, blockchain and iot based technologies in agriculture\
    \ sector. In: 2021 9th \ninternational conference on cyber and IT service management\
    \ (CITSM), 22–23 September \n2021, Bengkulu, Indonesia [online]. IEEE. [Viewed\
    \ 22 November 2022]. Available from: \ndoi: 10.1109/citsm52892.2021.9588894 \n\
    Kumar, V., Jain, V., Sharma, B., Chatterjee, J. M. and Shrestha, R., eds., (2022).\
    \ Smart city \ninfrastructure: the blockchain perspective [online]. Wiley. [Viewed\
    \ 21 November 2022]. \nAvailable from: doi: 10.1002/9781119785569 \nLalle, Y.,\
    \ Fourati, L. C., Fourati, M. and Barraca, J. P., (2020). A privacy-protection\
    \ scheme for \nsmart water grid based on blockchain and machine learning. In:\
    \ 2020 12th international \nsymposium on communication systems, networks and digital\
    \ signal processing (CSNDSP), \n20–22 July 2020, Porto, Portugal [online]. IEEE.\
    \ [Viewed 22 November 2022]. Available \nfrom: doi: 10.1109/csndsp49049.2020.9249549\
    \ \nLe Sève, M. D., Mason, N. and Nassiry, D., (2018). Delivering blockchain’s\
    \ potential for \nenvironmental sustainability[online]. London: ODI. Available\
    \ from: \nhttps://cdn.odi.org/media/documents/12439.pdf \nLi, H., Chen, X., Guo,\
    \ Z., Xu, J., Shen, Y. and Gao, X., (2021). Data-driven peer-to-peer \nblockchain\
    \ framework for water consumption management. Peer-to-Peer Networking and \nApplications\
    \ [online]. 14(5), 2887–2900. [Viewed 21 November 2022]. Available from: doi:\
    \ \n10.1007/s12083-021-01121-6 \nLi, Z., Mount, J., & Demir, I. (2022a). Accounting\
    \ for uncertainty in real-time flood inundation \nmapping using HAND model: Iowa\
    \ case study. Natural Hazards, 112(1), 977-1004. \nLi, Q., Ma, M., Shi, T. and\
    \ Zhu, C., (2022b). Green investment in a sustainable supply chain: the \nrole\
    \ of blockchain and fairness. Transportation Research Part E: Logistics and Transportation\
    \ \nReview [online]. 167, 102908. [Viewed 21 November 2022]. Available from: doi:\
    \ \n10.1016/j.tre.2022.102908 \nLi, Y., Xie, J., Yang, J., Ren, J. and Zhai, N.,\
    \ (2022c). Application of blockchain technology in \nwater rights trading in the\
    \ irrigation area under the internet-of-things environment. Security \nand Communication\
    \ Networks [online]. 2022, 1–12. [Viewed 21 November 2022]. Available \nfrom:\
    \ doi: 10.1155/2022/8700730 \nLin, L. and Wang, B., (2021). Research on authentication\
    \ and key negotiation based on smart \nwater environment. In: 2021 IEEE 2nd international\
    \ conference on information technology, \nbig data and artificial intelligence\
    \ (ICIBA), 17–19 December 2021, Chongqing, China \n[online]. IEEE. [Viewed 21\
    \ November 2022]. Available from: doi: \n10.1109/iciba52610.2021.9688062 \nLin,\
    \ Y.-P., Mukhtar, H., Huang, K.-T., Petway, J. R., Lin, C.-M., Chou, C.-F. and\
    \ Liao, S.-W., \n(2020). Real-Time identification of irrigation water pollution\
    \ sources and pathways with a \nwireless sensor network and blockchain framework.\
    \ Sensors [online]. 20(13), 3634. [Viewed \n22 November 2022]. Available from:\
    \ doi: 10.3390/s20133634 \nLin, Y.-P., Petway, J., Anthony, J., Mukhtar, H., Liao,\
    \ S.-W., Chou, C.-F. and Ho, Y.-F., (2017). \nBlockchain: the evolutionary next\
    \ step for ICT e-agriculture. Environments [online]. 4(3), \n50. [Viewed 22 November\
    \ 2022]. Available from: doi: 10.3390/environments4030050 \nLinjing, W., Xinyue,\
    \ L. and Shihu, S., (2020). Blockchain application of iot for water industry \n\
    and its security. In: Security and trust issues in internet of things [online].\
    \ First edition. | Boca \nRaton : CRC Press, 2021.: CRC Press. pp. 301–328. [Viewed\
    \ 21 November 2022]. Available \nfrom: doi: 10.1201/9781003121664-14 \nLiu, W.,\
    \ Shao, X.-F., Wu, C.-H. and Qiao, P., (2021). A systematic literature review\
    \ on \napplications of information and communication technologies and blockchain\
    \ technologies for \nprecision agriculture development. Journal of Cleaner Production\
    \ [online]. 298, 126763. \n[Viewed 22 November 2022]. Available from: doi: 10.1016/j.jclepro.2021.126763\
    \ \nLiu, Y., Ma, X., Shu, L., Hancke, G. P. and Abu-Mahfouz, A. M., (2020). From\
    \ industry 4.0 to \nagriculture 4.0: current status, enabling technologies, and\
    \ research challenges. IEEE \nTransactions on Industrial Informatics [online].\
    \ 1. [Viewed 22 November 2022]. Available \nfrom: doi: 10.1109/tii.2020.3003910\
    \ \nLiu, Y. and Shang, C., (2022). Application of blockchain technology in agricultural\
    \ water rights \ntrade management. Sustainability [online]. 14(12), 7017. [Viewed\
    \ 21 November 2022]. \nAvailable from: doi: 10.3390/su14127017 \nLo, S. K., Xu,\
    \ X., Staples, M. and Yao, L., (2020). Reliability analysis for blockchain oracles.\
    \ \nComputers & Electrical Engineering[online]. 83, 106582. [Viewed 29 November\
    \ 2022]. \nAvailable from: doi: 10.1016/j.compeleceng.2020.106582 \nLukić, I.,\
    \ Miličević, K., Köhler, M. and Vinko, D., (2022). Possible blockchain solutions\
    \ \naccording to a smart city digitalization strategy. Applied Sciences [online].\
    \ 12(11), 5552. \n[Viewed 21 November 2022]. Available from: doi: 10.3390/app12115552\
    \ \nM, S. K., V, M., J, P., M, P. and Jothikumar, R., (2021). Applying blockchain\
    \ in agriculture: a \nstudy on blockchain technology, benefits, and challenges.\
    \ In: Deep learning and edge \ncomputing solutions for high performance computing[online].\
    \ Cham: Springer International \nPublishing. pp. 167–181. [Viewed 22 November\
    \ 2022]. Available from: doi: 10.1007/978-3-\n030-60265-9_11 \nMahmoud, H. H.,\
    \ Wu, W. and Wang, Y., (2019). Secure data aggregation mechanism for water \n\
    distribution system using blockchain. In: 2019 25th international conference on\
    \ automation \nand computing (ICAC), 5–7 September 2019, Lancaster, United Kingdom\
    \ [online]. IEEE. \n[Viewed 21 November 2022]. Available from: doi: 10.23919/iconac.2019.8895146\
    \ \nMahmoud, H. H., Wu, W. and Wang, Y., (2021). WDSchain: a toolbox for enhancing\
    \ the \nsecurity using blockchain technology in water distribution system. Water\
    \ [online]. 13(14), \n1944. [Viewed 22 November 2022]. Available from: doi: 10.3390/w13141944\
    \ \nMajia, L., (2021). Innovative research of blockchain technology in the field\
    \ of computer \nmonitoring of hydropower station. In: 2021 second international\
    \ conference on electronics \nand sustainable communication systems (ICESC), 4–6\
    \ August 2021, Coimbatore, India \n[online]. IEEE. [Viewed 21 November 2022].\
    \ Available from: doi: \n10.1109/icesc51422.2021.9532832 \nMakani, S., Pittala,\
    \ R., Alsayed, E., Aloqaily, M. and Jararweh, Y., (2022). A survey of \nblockchain\
    \ applications in sustainable and smart cities. Cluster Computing [online]. [Viewed\
    \ \n21 November 2022]. Available from: doi: 10.1007/s10586-022-03625-z \nMattila,\
    \ V., Dwivedi, P., Gauri, P. and Ahbab, M., (2022). Blockchain for environmentally\
    \ \nsustainable economies: case study on 5irechain. International Journal of Social\
    \ Sciences and \nManagement Review [online]. 05(02), 50–62. [Viewed 22 November\
    \ 2022]. Available from: \ndoi: 10.37602/ijssmr.2022.5204 \nMaximizeWasteWaterRecovery,\
    \ (2019). Devpost. Available \n      from: https://devpost.com/software/maximizewastewaterrecovery\
    \ \nMerlo, V., Pio, G., Giusto, F. and Bilancia, M., (2022). On the exploitation\
    \ of the blockchain \ntechnology in the healthcare sector: a systematic review.\
    \ Expert Systems with Applications \n[online]. 118897. [Viewed 21 November 2022].\
    \ Available from: doi: \n10.1016/j.eswa.2022.118897 \nMiller, B., (2021). Application\
    \ of blockchain capabilities to the management of water rights and \nwater markets.\
    \ Victoria: Information Systems Water and Catchment Group Department of \nEnvironment\
    \ Land Water and Planning Victoria, Australia. \nMohammadi, F., Sanjari, M. and\
    \ Saif, M., (2022). A real-time blockchain-based multifunctional \nintegrated\
    \ smart metering system. In: 2022 IEEE kansas power and energy conference \n(KPEC),\
    \ 25–26 April 2022, Manhattan, KS, USA [online]. IEEE. [Viewed 21 November \n\
    2022]. Available from: doi: 10.1109/kpec54747.2022.9814719 \nMora, H., Mendoza-Tello,\
    \ J. C., Varela-Guzmán, E. G. and Szymanski, J., (2021). Blockchain \ntechnologies\
    \ to address smart city and society challenges. Computers in Human Behavior \n\
    [online]. 122, 106854. [Viewed 22 November 2022]. Available from: doi: \n10.1016/j.chb.2021.106854\
    \ \nMounce, S. R., (2020). Data science trends and opportunities for smart water\
    \ utilities. In: The \nhandbook of environmental chemistry [online]. Cham: Springer\
    \ International Publishing. pp. \n1–26. [Viewed 21 November 2022]. Available from:\
    \ doi: 10.1007/698_2020_482 \nMughal, M. H., Shaikh, Z. A., Ali, K., Ali, S. and\
    \ Hassan, S., (2022). IPFS and Blockchain based \nReliability and availability\
    \ improvement for integrated Rivers’ streamflow data. IEEE \nAccess [online].\
    \ 1. [Viewed 21 November 2022]. Available from: doi: \n10.1109/access.2022.3178728\
    \ \nMunir, M. S., Bajwa, I. S. and Cheema, S. M., (2019). An intelligent and secure\
    \ smart watering \nsystem using fuzzy logic and blockchain. Computers & Electrical\
    \ Engineering[online]. 77, \n109–119. [Viewed 27 November 2022]. Available from:\
    \ doi: \n10.1016/j.compeleceng.2019.05.006 \nMuste, M., Lyn, D. A., Admiraal,\
    \ D., Ettema, R., Nikora, V., & García, M. H. (Eds.). (2017). \nExperimental Hydraulics:\
    \ Methods, Instrumentation, Data Processing and Management: \nVolume I: Fundamentals\
    \ and Methods. CRC Press. \nMy Water Chain - Waste Water Management System [online],\
    \ (2020). Devpost. Available  \n      from: https://devpost.com/software/my-water-chain-waste-water-management-system\
    \ \nNakamoto, S., (2008). Bitcoin: a peer-to-peer electronic cash system [online].\
    \ [Viewed 21 \nNovember 2022]. Available from: https://bitcoin.org/bitcoin.pdf\
    \ \nNelaturu, K., Beillahi, S. M., Long, F. and Veneris, A., (2021). Smart contracts\
    \ refinement for \ngas optimization. In: 2021 3rd conference on blockchain research\
    \ & applications for \ninnovative networks and services (BRAINS), 27–30 September\
    \ 2021, Paris, France[online]. \nIEEE. [Viewed 29 November 2022]. Available from:\
    \ doi: \n10.1109/brains52497.2021.9569819 \nNiya, S. R., Jha, S. S., Bocek, T.\
    \ and Stiller, B., (2018). Design and implementation of an \nautomated and decentralized\
    \ pollution monitoring system with blockchains, smart contracts, \nand LoRaWAN.\
    \ In: NOMS 2018 - 2018 IEEE/IFIP network operations and management \nsymposium,\
    \ 23–27 April 2018, Taipei, Taiwan [online]. IEEE. [Viewed 22 November 2022].\
    \ \nAvailable from: doi: 10.1109/noms.2018.8406329 \nOfwat, (2017). Unlocking\
    \ the value in customer data: a report for water companies in england \nand wales\
    \ [online]. Available from: https://www.ofwat.gov.uk/wp-\ncontent/uploads/2017/06/Unlocking-the-value-in-customer-data-5.pdf\
    \ \nOmatu, S., Malluhi, Q. M., Gonzalez, S. R., Bocewicz, G., Bucciarelli, E.,\
    \ Giulioni, G. and \nIqba, F., eds., (2015). Distributed computing and artificial\
    \ intelligence, 12th international \nconference[online]. Cham: Springer International\
    \ Publishing. [Viewed 18 December 2022]. \nAvailable from: doi: 10.1007/978-3-319-19638-1\
    \ \nOriginClear, (2022). OriginClear [online]. OriginClear - The Clean Water Innovation\
    \ Hub™. \n[Viewed 22 November 2022]. Available from: https://www.originclear.com\
    \ \nOrtiz, Y. P., (2018). How blockchain technology could improve the quality\
    \ of drinking water in \npuerto rico. SSRN[online]. Available from: \nhttps://papers.ssrn.com/sol3/papers.cfm?abstract_id=3266166\
    \ \nPahl-Wostl, C., (2015). Water governance in the face of global change [online].\
    \ Cham: Springer \nInternational Publishing. [Viewed 21 November 2022]. Available\
    \ from: doi: 10.1007/978-3-\n319-21855-7 \nPahontu, B., Arsene, D., Predescu,\
    \ A. and Mocanu, M., (2020). Application and challenges of \nBlockchain technology\
    \ for real-time operation in a water distribution system. In: 2020 24th \ninternational\
    \ conference on system theory, control and computing (ICSTCC), 8–10 October \n\
    2020, Sinaia, Romania [online]. IEEE. [Viewed 22 November 2022]. Available from:\
    \ doi: \n10.1109/icstcc50638.2020.9259732 \nPaiva Sobrinho, R., Garcia, J. R.,\
    \ Maia, A. G. and Romeiro, A. R., (2019). Inovação na \ngovernança da água. Revista\
    \ Brasileira de Inovação [online]. 18(1), 157–176. [Viewed 21 \nNovember 2022].\
    \ Available from: doi: 10.20396/rbi.v18i1.8654757 \nParmentola, A., Petrillo,\
    \ A., Tutore, I. and De Felice, F., (2021). Is blockchain able to enhance \nenvironmental\
    \ sustainability? A systematic review and research agenda from the perspective\
    \ \nof Sustainable Development Goals (SDGs). Business Strategy and the Environment\
    \ [online]. \n[Viewed 22 November 2022]. Available from: doi: 10.1002/bse.2882\
    \ \nPee, S. J., Nans, J. H. and Jans, J. W., (2018). A simple blockchain-based\
    \ peer-to-peer water \ntrading system leveraging smart contracts. In: Proceedings\
    \ on the international conference on \ninternet computing (ICOMP), 7 June 2018,\
    \ Georgia, USA [online]. Available from: \nhttps://www.proquest.com/docview/2139488800/fulltext/A79F2817F47446AFPQ/1?accounti\n\
    d=196244 \nPincheira, M., Vecchio, M., Giaffreda, R. and Kanhere, S. S., (2021).\
    \ Cost-effective IoT devices \nas trustworthy data sources for a blockchain-based\
    \ water management system in precision \nagriculture. Computers and Electronics\
    \ in Agriculture [online]. 180, 105889. [Viewed 22 \nNovember 2022]. Available\
    \ from: doi: 10.1016/j.compag.2020.105889 \nPipeline-System, (2021). Pipline-Sytem\
    \ - water pipeline distribution where the data is stored on a \ndecentralized\
    \ blockchain. [online]. Available from: https://github.com/Fredpwol/Pipline-\n\
    Sytem \nPoberezhna, A., (2018). Addressing water sustainability with blockchain\
    \ technology and green \nfinance. In: Transforming climate finance and green investment\
    \ with blockchains [online]. \nElsevier. pp. 189–196. [Viewed 21 November 2022].\
    \ Available from: doi: 10.1016/b978-0-\n12-814447-3.00014-8 \nPoonia, V., Goyal,\
    \ M. K., Gupta, B. B., Gupta, A. K., Jha, S. and Das, J., (2021). Drought \noccurrence\
    \ in Different River Basins of India and blockchain technology based framework\
    \ \nfor disaster management. Journal of Cleaner Production[online]. 312, 127737.\
    \ [Viewed 21 \nNovember 2022]. Available from: doi: 10.1016/j.jclepro.2021.127737\
    \ \nPredescu, A., Arsene, D., Pahonțu, B., Mocanu, M. and Chiru, C., (2021). A\
    \ serious gaming \napproach for crowdsensing in urban water infrastructure with\
    \ blockchain support. Applied \nSciences [online]. 11(4), 1449. [Viewed 21 November\
    \ 2022]. Available from: doi: \n10.3390/app11041449 \nQuist-Aphetsi, K. and Blankson,\
    \ H., (2019). A hybrid data logging system using cryptographic \nhash blocks based\
    \ on SHA-256 and MD5 for water treatment plant and distribution line. In: \n2019\
    \ international conference on cyber security and internet of things (icsiot),\
    \ 29–31 May \n2019, Accra, Ghana [online]. IEEE. [Viewed 22 November 2022]. Available\
    \ from: doi: \n10.1109/icsiot47925.2019.00009 \nRagghianti, V. T., (2021). Tecnologia\
    \ Blockchain: instrumento de gestão dos recursos hídricos \nem Santa Catarina.\
    \ UNIVERSIDADE FEDERAL DE SANTA CATARINA. Available from: \nhttps://repositorio.ufsc.br/handle/123456789/224449\
    \ \nRajaRajeswari, T. S., Chinnasamy, P., Pushparani, K., Thulasichitra, N., Rani,\
    \ N. S. and \nSivaprakasam, T., (2022). IoT based smart gardening for smart cities\
    \ using blockchain \ntechnology. In: 2022 international conference on computer\
    \ communication and informatics \n(ICCCI), 25–27 January 2022, Coimbatore, India\
    \ [online]. IEEE. [Viewed 22 November \n2022]. Available from: doi: 10.1109/iccci54379.2022.9741024\
    \ \nRamirez, C. E., Sermet, Y., Molkenthin, F., & Demir, I. (2022). HydroLang:\
    \ An open-source \nweb-based programming framework for hydrological sciences.\
    \ Environmental Modelling & \nSoftware, 157, 105525. \nRamsey, E., Pesantez, J.,\
    \ Fasaee, M. A. K., DiCarlo, M., Monroe, J. and Berglund, E. Z., (2020). \nA smart\
    \ water grid for micro-trading rainwater: hydraulic feasibility analysis. Water\
    \ [online]. \n12(11), 3075. [Viewed 22 November 2022]. Available from: doi: 10.3390/w12113075\
    \ \nRegen Network, (2021). Regen network whitepaper [online]. Available from:\
    \ \nhttps://holbrook.no/share/papers/regen_whitepaper.pdf \nRottondi, C. and Verticale,\
    \ G., (2017). A privacy-friendly gaming framework in smart electricity \nand water\
    \ grids. IEEE Access [online]. 5, 14221–14233. [Viewed 22 November 2022]. \nAvailable\
    \ from: doi: 10.1109/access.2017.2727552 \nRussell, O., (2018). Blockchain And\
    \ Water: Everything You Need To Know. | HackerNoon \n[online]. HackerNoon - read,\
    \ write and learn about any technology. [Viewed 22 November \n2022]. Available\
    \ from: https://hackernoon.com/blockchain-and-water-everything-you-need-\nto-know-b7e753108715\
    \ \nSakthi, U. and DafniRose, J., (2022). Blockchain-Enabled smart agricultural\
    \ knowledge \ndiscovery system using edge computing. Procedia Computer Science\
    \ [online]. 202, 73–82. \n[Viewed 22 November 2022]. Available from: doi: 10.1016/j.procs.2022.04.011\
    \ \nSapra, P., Kalra, V. and Sejwal, S., (2021). Blockchain and iot for auto leak\
    \ unearthing. In: \nLecture notes on data engineering and communications technologies\
    \ [online]. Singapore: \nSpringer Singapore. pp. 381–390. [Viewed 22 November\
    \ 2022]. Available from: doi: \n10.1007/978-981-16-3961-6_32 \nSavić, D., (2021).\
    \ Digital water developments and lessons learned from automation in the car \n\
    and aircraft industries. Engineering [online]. [Viewed 21 November 2022]. Available\
    \ from: \ndoi: 10.1016/j.eng.2021.05.013 \nSermet, Y., & Demir, I. (2020). Virtual\
    \ and augmented reality applications for environmental \nscience education and\
    \ training. In New Perspectives on Virtual and Augmented Reality (pp. \n261-275).\
    \ Routledge. \nSermet, Y., & Demir, I. (2021). A Semantic Web Framework for Automated\
    \ Smart Assistants: A \nCase Study for Public Health. Big Data and Cognitive Computing,\
    \ 5(4), 57. \nSermet, Y., & Demir, I. (2022). GeospatialVR: A web-based virtual\
    \ reality framework for \ncollaborative environmental simulations. Computers &\
    \ geosciences, 159, 105010. \nShi, Z., Liang, J., Pan, J. and Chen, J., (2019).\
    \ How iot and blockchain protect direct-drinking \nwater in schools. IEEE Internet\
    \ of Things Magazine [online]. 2(4), 2–4. [Viewed 22 \nNovember 2022]. Available\
    \ from: doi: 10.1109/miot.2019.8982735 \nSingh, A., Kumar, G., Saha, R., Conti,\
    \ M., Alazab, M. and Thomas, R., (2022). A survey and \ntaxonomy of consensus\
    \ protocols for blockchains. Journal of Systems Architecture [online]. \n102503.\
    \ [Viewed 21 November 2022]. Available from: doi: 10.1016/j.sysarc.2022.102503\
    \ \nSingh, M. and Goel, S., (2020). Development of 5G enabled IoT framework for\
    \ flood disaster \nmonitoring using Blockchain Technology. Solid State Technology\
    \ [online]. 63(5). Available \nfrom: http://www.solidstatetechnology.us/index.php/JSST/article/view/4314\
    \ \nSivaramakrishnan, V., (2020). Peer to peer energy and water trading in the\
    \ wheatbelt: a \nsustainable move towards achieving energy and water independence\
    \ for farm communities. \nMaster Thesis, Murdoch University. Available from: \n\
    https://researchrepository.murdoch.edu.au/id/eprint/61269/1/Sivaramakrishnan2020.pdf\
    \ \nSmart contract for decentralized water management system using blockchain\
    \ technology, (2020). \nInternational Journal of Innovative Technology and Exploring\
    \ Engineering [online]. 9(5), \n2046–2050. [Viewed 21 November 2022]. Available\
    \ from: doi: \n10.35940/ijitee.e3202.039520 \nSriyono, E., (2020). Digitizing\
    \ water management: toward the innovative use of blockchain \ntechnologies to\
    \ address sustainability. Cogent Engineering [online]. 7(1), 1769366. [Viewed\
    \ \n21 November 2022]. Available from: doi: 10.1080/23311916.2020.1769366 \nStankovic,\
    \ M., Hasanbeigi, A. and Neftenov, N., (2020). Use of 4IR technologies in water\
    \ and \nsanitation in latin america and the caribbean [online]. Edited by Marcello\
    \ Basani, Anamaría \nNúñez and Raphaëlle Ortiz. Inter-American Development Bank.\
    \ [Viewed 21 November \n2022]. Available from: doi: 10.18235/0002343 \nStatecraft\
    \ Tech, (2019). Applying blockchain technology to control flooding [online]. Medium.\
    \ \n[Viewed 22 November 2022]. Available from: https://medium.com/ktrade/applying-\n\
    blockchain-technology-to-control-flooding-e5fe12e2f8cc \nStern, M. J. and Coleman,\
    \ K. J., (2014). The multidimensionality of trust: applications in \ncollaborative\
    \ natural resource management. Society & Natural Resources [online]. 28(2), \n\
    117–132. [Viewed 21 November 2022]. Available from: doi: \n10.1080/08941920.2014.945062\
    \ \nStinson, C., (2018). How blockchain, AI and other emerging technologies could\
    \ end water \ninsecurity | Greenbiz [online].GreenBiz. [Viewed 22 November 2022].\
    \ Available from: \nhttps://www.greenbiz.com/article/how-blockchain-ai-and-other-emerging-technologies-\n\
    could-end-water-insecurity \nSukrutha L. T., V., Mohanty, S. P., Kougianos, E.\
    \ and Ray, C., (2021). G-DaM: a blockchain \nbased distributed robust framework\
    \ for ground water data management. In: 2021 IEEE \ninternational symposium on\
    \ smart electronic systems (ises), 18–22 December 2021, Jaipur, \nIndia [online].\
    \ IEEE. [Viewed 21 November 2022]. Available from: doi: \n10.1109/ises52644.2021.00066\
    \ \nSundaresan, S., Suresh Kumar, K., Ananth Kumar, T., Ashok, V. and Golden Julie,\
    \ E., (2021). \nBlockchain architecture for intelligent water management system\
    \ in smart cities. In: \nBlockchain for smart cities [online]. Elsevier. pp. 57–80.\
    \ [Viewed 22 November 2022]. \nAvailable from: doi: 10.1016/b978-0-12-824446-3.00006-5\
    \ \nSzabo, N., (1998). There is no universal security architecture [online]. Phonetic\
    \ Sciences, \nAmsterdam. [Viewed 21 November 2022]. Available from: \nhttps://www.fon.hum.uva.nl/rob/Courses/InformationInSpeech/CDROM/Literature/LOTwint\n\
    erschool2006/szabo.best.vwh.net/universal.html \nThakur, T., Mehra, A., Hassija,\
    \ V., Chamola, V., Srinivas, R., Gupta, K. K. and Singh, A. P., \n(2021). Smart\
    \ water conservation through a machine learning and blockchain-enabled \ndecentralized\
    \ edge computing network. Applied Soft Computing [online]. 106, 107274. \n[Viewed\
    \ 22 November 2022]. Available from: doi: 10.1016/j.asoc.2021.107274 \nThomason,\
    \ J., Ahmad, M., Bronder, P., Hoyt, E., Pocock, S., Bouteloupe, J., Donaghy, K.,\
    \ \nHuysman, D., Willenberg, T., Joakim, B., Joseph, L., Martin, D. and Shrier,\
    \ D., (2018). \nBlockchain—Powering and empowering the poor in developing countries.\
    \ In: Transforming \nclimate finance and green investment with blockchains [online].\
    \ Elsevier. pp. 137–152. \n[Viewed 21 November 2022]. Available from: doi: 10.1016/b978-0-12-814447-3.00010-0\
    \ \nTing, L., Khan, M., Sharma, A. and Ansari, M. D., (2022). A secure framework\
    \ for IoT-based \nsmart climate agriculture system: toward blockchain and edge\
    \ computing. Journal of \nIntelligent Systems [online]. 31(1), 221–236. [Viewed\
    \ 22 November 2022]. Available from: \ndoi: 10.1515/jisys-2022-0012 \nTrashTag,\
    \ (2021). TrashTag - Blockchain job to clean up environment and protect water\
    \ supplies \n[online]. Available from: https://github.com/adrian-blockchain/Trash-Tag-decentralized-\n\
    application \nTreelion, (2022). Treelion whitepaper [online]. https://www.allcryptowhitepapers.com/treelion-\n\
    whitepaper/. Available from: https://www.allcryptowhitepapers.com/treelion-whitepaper/\
    \ \nVannucci, E., Pagano, A. J. and Romagnoli, F., (2021). Climate change management:\
    \ a \nresilience strategy for flood risk using Blockchain tools. Decisions in\
    \ Economics and Finance \n[online]. 44(1), 177–190. [Viewed 21 November 2022].\
    \ Available from: doi: \n10.1007/s10203-020-00315-6 \nVernekar, A. G., (2020).\
    \ Blockchain based water management system. International Research \nJournal of\
    \ Engineering and Technology. 07(05). \nVoogd, R., Rudberg, P. M., de Vries, J.\
    \ R., Beunen, R., Espiritu, A. A., Methner, N., Larsen, R. \nK., Fedreheim, G.\
    \ E., Goes, S. and Kruger, E., (2022). “A systematic review on the role of \n\
    trust in the water governance literature”. Water Research X [online]. 100147.\
    \ [Viewed 21 \nNovember 2022]. Available from: doi: 10.1016/j.wroa.2022.100147\
    \ \nVottun, (2022). VOTTUNSustainability [online]. Vottun - The Wordpress of Web3.\
    \ [Viewed 22 \nNovember 2022]. Available from: https://vottun.com/solutions/vottunsustainability/\
    \ \nWan, K., Guo, Z., Wang, J., Zeng, W., Gao, X., Shen, Y. and Yu, K., (2020).\
    \ Deep learning-\nbased management for wastewater treatment plants under blockchain\
    \ environment. In: 2020 \nIEEE/CIC international conference on communications\
    \ in china (ICCC workshops), 9–11 \nAugust 2020, Chongqing, China [online]. IEEE.\
    \ [Viewed 22 November 2022]. Available \nfrom: doi: 10.1109/icccworkshops49972.2020.9209927\
    \ \nWang, J. K., Roy, S. K., Barry, M., Chang, R. T., & Bhatt, A. S. (2018). Institutionalizing\
    \ \nhealthcare hackathons to promote diversity in collaboration in medicine. BMC\
    \ medical \neducation, 18(1), 1-9. \nWang, X., Ni, W., Zha, X., Yu, G., Liu, R.\
    \ P., Georgalas, N. and Reeves, A., (2021). Capacity \nanalysis of public blockchain.\
    \ Computer Communications [online]. 177, 112–124. [Viewed \n21 November 2022].\
    \ Available from: doi: 10.1016/j.comcom.2021.06.019 \nWaterCoin - Environmental\
    \ Sensor Data Sharing, (2018). Devpost. Available  \n      from: https://devpost.com/software/watercoin\
    \ \nWater Consortium, (2020). Experimental consortium framework which explores\
    \ the possibility \nof self-organising governments and mutable contracts to automate\
    \ intergovernmental \ncommunication [online]. Available from: https://github.com/daganherceg/waterconsortium\
    \ \nWater Guardians, (2018). Devpost. Available from: https://devpost.com/software/water-\n\
    guardians \nWater Monitor, (2022). Devpost. Available from: https://devpost.com/software/polymonitor\
    \ \nWater Monitor Plus, (2022). Devpost. Available from: https://devpost.com/software/water-\n\
    monitor-plus \nWater Reuse Booster, (2020). Water Reuse Booster - An end-to-end\
    \ solution (decentralized \nfunding for decentralized water) [online]. Available\
    \ from: \nhttps://github.com/josiaharkson/water-reuse-booster \nWater Wizard,\
    \ (2020). WRC hackathon organised by world bank group : water [online]. \nAvailable\
    \ from: https://github.com/Sharma-Hrishabh/WRC-Hackathon-\nApp/blob/master/README.md\
    \ \nWeatherChainXM, (2021). Devpost. Available \nfrom: https://devpost.com/software/weatherchainxm\
    \ \nWeisbord, E., (2018). Demystifying blockchain for water professionals: part\
    \ 1 [online]. \nInternational Water Association. [Viewed 22 November 2022]. Available\
    \ from: https://iwa-\nnetwork.org/demystifying-blockchain-for-water-professionals-part-1/\
    \ \nWheeler, S., Loch, A., Zuo, A. and Bjornlund, H., (2014). Reviewing the adoption\
    \ and impact of \nwater markets in the Murray–Darling Basin, Australia. Journal\
    \ of Hydrology [online]. 518, \n28–41. [Viewed 21 November 2022]. Available from:\
    \ doi: 10.1016/j.jhydrol.2013.09.019 \nWu, G., Li, E. and Wang, M., (2022). Application\
    \ and prospect analysis of blockchain \ntechnology in water resources protection.\
    \ In: 2022 international conference on blockchain \ntechnology and information\
    \ security (ICBCTIS), 15–17 July 2022, Huaihua City, China \n[online]. IEEE. [Viewed\
    \ 21 November 2022]. Available from: doi: \n10.1109/icbctis55569.2022.00049 \n\
    WyoFlow, (2018). Devpost. Available from: https://devpost.com/software/wyoflow\
    \ \nXia, W., Chen, X. and Song, C., (2022). A framework of blockchain technology\
    \ in intelligent \nwater management. Frontiers in Environmental Science [online].\
    \ 10. [Viewed 21 November \n2022]. Available from: doi: 10.3389/fenvs.2022.909606\
    \ \nXiang, Z., & Demir, I. (2022). Flood Markup Language–A standards-based exchange\
    \ language \nfor flood risk communication. Environmental Modelling & Software,\
    \ 152, 105397. \nYan, J., Zhang, F., Ma, J., An, X., Li, Y. and Huang, Y., (2019).\
    \ Environmental monitoring \nsystem based on blockchain. In: ICCSE'19: the 4th\
    \ international conference on crowd science \nand engineering, Jinan China [online].\
    \ New York, NY, USA: ACM. [Viewed 22 November \n2022]. Available from: doi: 10.1145/3371238.3371245\
    \ \nYasuno, T., Ishii, A., Amakata, M. and Fujii, J., (2020). Smart dam: upstream\
    \ sensing, hydro-\nblockchain, and flood feature extractions for dam inflow prediction.\
    \ In: Advances in \nintelligent systems and computing [online]. Cham: Springer\
    \ International Publishing. pp. \n139–158. [Viewed 21 November 2022]. Available\
    \ from: doi: 10.1007/978-3-030-39445-\n5_12 \nYildirim, E., & Demir, I. (2022).\
    \ Agricultural flood vulnerability assessment and risk \nquantification in Iowa.\
    \ Science of The Total Environment, 826, 154165. \nYoussef, S. B. H., Rekhis,\
    \ S. and Boudriga, N., (2019). A blockchain based secure iot solution \nfor the\
    \ dam surveillance. In: 2019 IEEE wireless communications and networking conference\
    \ \n(WCNC), 15–18 April 2019, Marrakesh, Morocco[online]. IEEE. [Viewed 21 November\
    \ \n2022]. Available from: doi: 10.1109/wcnc.2019.8885479 \nZecchini, M., (2019).\
    \ Data collection, storage and processing for water monitoring based on iot \n\
    and blockchain technologies. Master Thesis, University of Rome. Available from:\
    \ \nhttp://ichatz.me/thesis/msc-uniroma/2019-zecchini.pdf \nZecchini, M., Bracciali,\
    \ A., Chatzigiannakis, I. and Vitaletti, A., (2020). On refining design \npatterns\
    \ for smart contracts. In: Euro-Par 2019: parallel processing workshops [online].\
    \ \nCham: Springer International Publishing. pp. 228–239. [Viewed 22 November\
    \ 2022]. \nAvailable from: doi: 10.1007/978-3-030-48340-1_18 \nZeng, H., Dhiman,\
    \ G., Sharma, A., Sharma, A. and Tselykh, A., (2021). An IoT and Blockchain \n\
    ‐based approach for the smart water management system in agriculture. Expert Systems\
    \ \n[online]. [Viewed 22 November 2022]. Available from: doi: 10.1111/exsy.12892\
    \ \nZhang, R., (2022). Research on financial development of water resources enterprises\
    \ based on \nblockchain technology. Mobile Information Systems [online]. 2022,\
    \ 1–9. [Viewed 21 \nNovember 2022]. Available from: doi: 10.1155/2022/3289301\
    \ \nZhang, Y., Luo, W. and Yu, F., (2020). Construction of chinese smart water\
    \ conservancy \nplatform based on the blockchain: technology integration and innovation\
    \ application. \nSustainability [online]. 12(20), 8306. [Viewed 21 November 2022].\
    \ Available from: doi: \n10.3390/su12208306 \nZhao, G., Liu, S., Lopez, C., Lu,\
    \ H., Elgueta, S., Chen, H. and Boshkoska, B. M., (2019). \nBlockchain technology\
    \ in agri-food value chain management: a synthesis of applications, \nchallenges\
    \ and future research directions. Computers in Industry [online]. 109, 83–99.\
    \ \n[Viewed 21 November 2022]. Available from: doi: 10.1016/j.compind.2019.04.002\
    \ \n \n \n \n8. Appendix \n \nTable A1. List of Academic Database and Keyword\
    \ Combination \nDatabase \nKeywords \nYears \nResults \nGoogle Scholar \n\"blockchain\"\
    \ and \"water\" \nAll times 39,000 \nSince 2018 19,200 \nSince 2019 18,500 \n\
    Since 2020 17,500 \nSince 2021 16,900 \nSince 2022 \n7,220 \n\"blockchain\" and\
    \ \"water management\" \nAll times \n4,230 \n\"blockchain\" and \"water rights\"\
    \ \nAll times \n186 \n\"blockchain\" and \"water trading\" \nAll times \n99 \n\
    \"blockchain\" and \"water quality\" \nAll times \n3,120 \n\"blockchain\" and\
    \ \"water market\" \nAll times \n93 \n\"blockchain\" and \"urban water management\"\
    \ \nAll times \n171 \n\"blockchain\" and \"transboundary water\" \nAll times \n\
    76 \n\"blockchain\" and \"wastewater management\" \nAll times \n92 \n\"blockchain\"\
    \ and \"water finance\" \nAll times \n25 \n\"blockchain\" and \"water economics\"\
    \ \nAll times \n25 \n\"blockchain\" and \"virtual water\" \nAll times \n121 \n\
    allintitle: \"blockchain\" and \"water\" \nAll times \n61 \n\"distributed ledger\"\
    \ and \"water management\" \nAll times \n538 \n\"distributed ledger\" and \"water\
    \ resources management\" \nAll times \n50 \n\"blockchain\" and \"water resources\
    \ management\" \nAll times \n484 \n\"blockchain\" and \"industrial water\" \n\
    All times \n110 \n\"blockchain\" and \"basin management\" \nAll times \n97 \n\"\
    smart contract\" and \"blockchain\" and \"water management\" All times \n351 \n\
    \"smart contract\" and \"blockchain\" and \"water quality\" \nAll times \n298\
    \ \n\"smart contract\" and \"blockchain\" and \"water rights\" \nAll times \n\
    42 \n\"smart contract\" and \"blockchain\" and \"water trading\" \nAll times \n\
    51 \n\"smart contract\" and \"blockchain\" and \"urban water\" \nAll times \n\
    52 \n\"smart contract\" and \"blockchain\" and \"flood management\" All times\
    \ \n26 \n\"blockchain\" and \"water distribution systems\" \nAll times \n709 \n\
    Scopus \n\"blockchain\" and \"water\" \nAll times \n257 \n\"blockchain\" and \"\
    water management\" \nAll times \n34 \n\"blockchain\" and \"water rights\" \nAll\
    \ times \n13 \n\"blockchain\" and \"water trading\" \nAll times \n26 \n\"blockchain\"\
    \ and \"water quality\" \nAll times \n30 \n\"blockchain\" and \"water market\"\
    \ \nAll times \n1 \n\"blockchain\" and \"urban water management\" \nAll times\
    \ \n2 \n\"blockchain\" and \"transboundary water\" \nAll times \n- \n\"blockchain\"\
    \ and \"waste water management\" \nAll times \n1 \n\"blockchain\" and \"water\
    \ finance\" \nAll times \n1 \n\"blockchain\" and \"water economics\" \nAll times\
    \ \n- \n\"blockchain\" and \"virtual water\" \nAll times \n3 \nallintitle: \"\
    blockchain\" and \"water\" \nAll times \n33 \n\"distributed ledger\" and \"water\
    \ management\" \nAll times \n5 \n\"distributed ledger\" and \"water resources\
    \ management\" \nAll times \n2 \n\"blockchain\" and \"water resources management\"\
    \ \nAll times \n8 \n\"blockchain\" and \"industrial water\" \nAll times \n1 \n\
    \"blockchain\" and \"basin management\" \nAll times \n- \n\"smart contract\" and\
    \ \"blockchain\" and \"water management\" All times \n7 \n\"smart contract\" and\
    \ \"blockchain\" and \"water quality\" \nAll times \n1 \n\"smart contract\" and\
    \ \"blockchain\" and \"water rights\" \nAll times \n2 \n\"smart contract\" and\
    \ \"blockchain\" and \"water trading\" \nAll times \n1 \n\"smart contract\" and\
    \ \"blockchain\" and \"urban water\" \nAll times \n1 \n\"smart contract\" and\
    \ \"blockchain\" and \"flood management\" All times \n5 \nWeb of Science \n\"\
    blockchain\" and \"water management\" \nAll times \n118 \nCrossref \n\"blockchain\"\
    \ and \"water management\" \nAll times \n1000 \nOpen Alex \n\"blockchain\" and\
    \ \"water\" \nAll times \n3 \nJisc Library Hub \n\"blockchain\" and \"water management\"\
    \ \nAll times \n101 \nLibrary of Congress \"blockchain\" and \"water management\"\
    \ \nAll times \n3 \n \nTable A2. List of Reviewed Academic Content \nAuthors \n\
    Source \nType \nFocus Area \nDevelopment \nLevel \nBlockchain \nType \nBlockchain\
    \ \nTechnology \nSmart \nContract / \nChain Code \nA B Belliera, 2019 \nJournal\
    \ \nPaper \nWater Economics \nExplore \n- \n- \n- \nA Bhaduri et al., \n2021 \n\
    Book \nChapter \nWater Economics \nConceptual \nNot \nAvailable \nNot Available\
    \ Yes \nA G Vernekar, 2020 Journal \nPaper \nWater Governance Conceptual \nNot\
    \ \nAvailable \nEthereum \nYes \nA Hangan et al., \n2022 \nJournal \nPaper \n\
    Water Governance Explore \n- \n- \n- \nA M Dragulinescu \net al., 2021 \nConference\
    \ \nPaper \nAgricultural Water \nManagement \nSimulation \nNot \nAvailable \n\
    Hyperledger \nNo \nA M Drăgulinescu \net al., 2021 \nConference \nPaper \nAgricultural\
    \ Water \nManagement \nConceptual \nNot \nAvailable \nNot Available No \nA Parmentola\
    \ et al., \n2021 \nJournal \nPaper \nWater - SDG \nExplore \n- \n- \n- \nA Poberezhna,\
    \ 2018 Book \nChapter \nWater Economics \nExplore \n- \n- \n- \nA Predescu et\
    \ al., \n2021 \nJournal \nPaper \nUrban Water \nManagement \nDApp \nPrivate \n\
    Hyperledger \nYes \nA Scozzaret al., \n2021 \nBook \nChapter \nWater Governance\
    \ Explore \n- \n- \n- \nB Bordel et al., 2019 Conference \nPaper \nAgricultural\
    \ Water \nManagement \nSimulation \nHybrid \nEthereum \nYes \nB Miller, 2021 \n\
    Technical \nReport \nWater Economics \nConceptual \nNot \nAvailable \nNot Available\
    \ Yes \nB Pahonțu et al., \n2020 \nConference \nPaper \nUrban Water \nManagement\
    \ \nSimulation \nPrivate \nHyperledger \nYes \nC Rottondi, G \nVerticale, 2017\
    \ \nJournal \nPaper \nUrban Water \nManagement \nSimulation \nPublic \nNot Available\
    \ No \nCalifornia \nBlockchain Working \nGroup, 2020 \nTechnical \nReport \nWater\
    \ Governance Explore \n- \n- \n- \nCRCNA, Civic \nLedger, 2020 \nTechnical \n\
    Report \nWater Economics \nPilot Project \nPublic \nEthereum \nYes \nD Arsene\
    \ et al., \n2020 \nConference \nPaper \nUrban Water \nManagement \nSimulation\
    \ \nPrivate \nHyperledger \nYes \nE Kaur, A Oza, \n2020 \nJournal \nPaper \nWater\
    \ Quality \nManagement \nSimulation \nPrivate \nEthereum \nYes \nE M Dogo et al.,\
    \ \n2019 \nBook \nChapter \nWater Governance Explore \n- \n- \n- \nE Ramsey et\
    \ al., \n2020 \nJournal \nPaper \nWater Economics \nExplore \n- \n- \n- \nE Sriyono,\
    \ 2020 \nJournal \nPaper \nWater Governance Conceptual \nNot \nAvailable \nNot\
    \ Available No \nE Vannucci et al., \n2021 \nJournal \nPaper \nWater Economics\
    \ \nExplore \n- \n- \n- \nF Abu-Amara et al., \n2022 \nJournal \nPaper \nWater\
    \ Economics \nDApp \nPrivate \nHyperledger \nYes \nF M Enescu et al., \n2020 \n\
    Journal \nPaper \nAgricultural Water \nManagement \nDApp \nPublic \nEthereum \n\
    Yes \nF Mohammadi et al., \n2022 \nConference \nPaper \nWater Governance Conceptual\
    \ \nNot \nAvailable \nNot Available Yes \nG Grigoras et al., \n2018 \nConference\
    \ \nPaper \nWater Economics \nConceptual \nNot \nAvailable \nNot Available Yes\
    \ \nG Wu et al., 2022  \nConference \nPaper \nWater Governance Explore \n- \n\
    - \n- \nG Zhao et al., 2019 Journal \nPaper \nWater Economics \nExplore \n- \n\
    - \n- \nH H Mahmoud et \nal., 2019 \nConference \nPaper \nUrban Water \nManagement\
    \ \nConceptual \nNot \nAvailable \nNot Available No \nH H Mahmoud et \nal., 2021\
    \ \nJournal \nPaper \nUrban Water \nManagement \nSimulation \nNot \nAvailable\
    \ \nNot Available No \nH Li et al., 2021 \nJournal \nPaper \nWater Governance\
    \ Conceptual \nNot \nAvailable \nNot Available Yes \nH Mora et al., 2021 Journal\
    \ \nPaper \nWater - SDG \nExplore \n- \n- \n- \nH Zeng et al., 2021  \nJournal\
    \ \nPaper \nAgricultural Water \nManagement \nSimulation \nNot \nAvailable \n\
    Not Available No \nI Lukić et al., 2022 Journal \nPaper \nUrban Water \nManagement\
    \ \nExplore \n- \n- \n- \nJ B Abdo, S \nZeadally, 2020 \nJournal \nPaper \nWater\
    \ Economics \nConceptual \nNot \nAvailable \nNot Available Yes \nJ Crawford et\
    \ al., \n2021 \nConference \nPaper \nWater Quality \nManagement \nSimulation \n\
    - \nOther (Corda) Yes \nJ Gudmundsson, J L \nHougaard, 2021 \nTechnical \nReport\
    \ \nWater Quality \nManagement \nConceptual \nNot \nAvailable \nNot Available\
    \ Yes \nJ Ikeda, K Liffiton, \n2019 \nTechnical \nReport \nWater Economics \n\
    Explore \n- \n- \n- \nJ S V Angara, R S \nSaripalle, 2022 \nJournal \nPaper \n\
    Water Economics \nConceptual \nPublic \nNot Available Yes \nJ Thomason et al.,\
    \ \n2018 \nBook \nChapter \nWater Economics \nExplore \n- \n- \n- \nJ Yan et al.,\
    \ 2019 \nJournal \nPaper \nWater Quality \nManagement \nConceptual \nNot \nAvailable\
    \ \nNot Available No \nJ Yan et al., 2020 \nJournal \nPaper \nWater Quality \n\
    Management \nSimulation \n- \nEthereum \nYes \nK M Krishna et al., \n2021 \nConference\
    \ \nPaper \nAgricultural Water \nManagement \nConceptual \nNot \nAvailable \n\
    Not Available No \nK Quist-Aphetsi, H \nBlankson, 2019 \nConference \nPaper \n\
    Water Quality \nManagement \nExplore \n- \n- \n- \nK Wan et al., 2020 \nJournal\
    \ \nPaper \nWater Quality \nManagement \nExplore \n- \n- \n- \nL Lin et al., 2021\
    \ \nConference \nPaper \nWater Governance Conceptual \nPublic \nEthereum \nYes\
    \ \nL Majia, 2021 \nConference \nPaper \nWater Governance Simulation \nNot \n\
    Available \nNot Available No \nL S Iyer et al., 2020 Conference \nPaper \nWater\
    \ Governance Explore \n- \n- \n- \nL Ting et al., 2022 \nJournal \nPaper \nAgricultural\
    \ Water \nManagement \nConceptual \nNot \nAvailable \nNot Available No \nM A Ferrag\
    \ et al., \n2020 \nJournal \nPaper \nAgricultural Water \nManagement \nExplore\
    \ \n- \n- \n- \nM Asgari et al., \n2022 \nJournal \nPaper \nWater Governance Explore\
    \ \n- \n- \n- \nM Dramski et al., \n2019 \nConference \nPaper \nWater Governance\
    \ Simulation \nPrivate \nHyperledger \nNo \nM H Mughal et al., \n2022 \nJournal\
    \ \nPaper \nWater Governance Pilot Project \nPrivate \nHyperledger \nYes \nM Kassou\
    \ et al., \n2021 \nConference \nPaper \nWater Quality \nManagement \nConceptual\
    \ \nNot \nAvailable \nNot Available Yes \nM Pincheira et al., \n2021 \nJournal\
    \ \nPaper \nAgricultural Water \nManagement \nSimulation \nPublic \nEthereum \n\
    Yes \nM S Alnahari, S T \nAriaratnam, 2022 \nJournal \nPaper \nUrban Water \n\
    Management \nExplore \n- \n- \n- \nM S Kumar e al., \n2021 \nBook \nChapter \n\
    Agricultural Water \nManagement \nExplore \n- \n- \n- \nM S Munir et al., \n2019\
    \ \nJournal \nPaper \nAgricultural Water \nManagement \nConceptual \nNot \nAvailable\
    \ \nNot Available No \nM Singh et al., 2020 Journal \nPaper \nWater Governance\
    \ Explore \n- \n- \n- \nM Stankovic et al., \n2020 \nTechnical \nReport \nWater\
    \ Governance Explore \n- \n- \n- \nM Zecchini et al., \n2019 \nJournal \nPaper\
    \ \nUrban Water \nManagement \nConceptual \nPublic \nEthereum \nYes \nM Zecchini,\
    \ 2019 \nThesis \nWater Economics \nExplore \n- \n- \n- \nN Alharbi et al., \n\
    2021 \nConference \nPaper \nWater Quality \nManagement \nDApp \nPrivate \nHyperledger\
    \ \nYes \nN Dong, J Fu, 2021 Conference \nPaper \nAgricultural Water \nManagement\
    \ \nExplore \n- \n- \n- \nP Coli et al., 2021 \nTechnical \nReport \nWater Governance\
    \ Pilot Project \n \nEthereum \nYes \nP Sapra et al., 2022 Book \nChapter \nWater\
    \ Governance Simulation \nPrivate \nEthereum \nYes \nR Alcarria et al., \n2018\
    \ \nJournal \nPaper \nWater Economics \nSimulation \nPrivate \nEthereum \nYes\
    \ \nR Damania e al., \n2019 \nBook \nWater Quality \nManagement \nExplore \n-\
    \ \n- \n- \nR Giaffreda, 2019 \nConference \nPaper \nAgricultural Water \nManagement\
    \ \nExperimental Private \nEthereum \nYes \nR P Sobrinho et al., \n2022 \nJournal\
    \ \nPaper \nWater Governance Explore \n- \n- \n- \nR Zhang, 2022 \nJournal \n\
    Paper \nWater Economics \nConceptual \nNot \nAvailable \nNot Available No \nS\
    \ B H Youssef et \nal., 2019 \nConference \nPaper \nWater Governance Simulation\
    \ \nHybrid \nNot Available No \nS Hakak et al., 2020  Journal \nPaper \nWater\
    \ Quality \nManagement \nConceptual \nNot \nAvailable \nNot Available Yes \nS\
    \ Iyer et al., 2019  \nConference \nPaper \nWater Quality \nManagement \nSimulation\
    \ \nPrivate \nHyperledger \nYes \nS J Pee et al., 2018 Conference \nPaper \nWater\
    \ Economics \nSimulation \nPrivate \nEthereum \nYes \nS Kim et al., 2022 \nJournal\
    \ \nPaper \nUrban Water \nManagement \nExplore \n- \n- \n- \nS Makani et al.,\
    \ \n2022 \nJournal \nPaper \nUrban Water \nManagement \nExplore \n- \n- \n- \n\
    S R Niya et al., 2018 Conference \nPaper \nWater Quality \nManagement \nSimulation\
    \ \nPublic \nEthereum \nYes \nS Sundaresan et al., \n2021 \nBook \nChapter \n\
    Urban Water \nManagement \nSimulation \nNot \nAvailable \nNot Available No \n\
    S Tiwari et al., 2020 Journal \nPaper \nWater Governance Simulation \nPublic \n\
    Ethereum \nYes \nT S RajaRajeswari \net al., 2022 \nConference \nPaper \nAgricultural\
    \ Water \nManagement \nConceptual \nHybrid \nNot Available No \nT Thakur et al.,\
    \ \n2021 \nJournal \nPaper \nUrban Water \nManagement \nSimulation \nPublic \n\
    Ethereum \nYes \nT Yasuno et al., \n2020 \nConference \nPaper \nWater Governance\
    \ Conceptual \nNot \nAvailable \nNot Available No \nU Sakthi, J \nDafniRose, 2022\
    \ \nJournal \nPaper \nAgricultural Water \nManagement \nConceptual \nPrivate \n\
    Hyperledger \nYes \nV Kumar et al., \n2022 \nBook \nChapter \nUrban Water \nManagement\
    \ \nExplore \n- \n- \n- \nV Mattila et al., \n2022 \nJournal \nPaper \nWater -\
    \ SDG \nExplore \n- \n- \n- \nV Poonia et a., 2021 Journal \nPaper \nWater Governance\
    \ Conceptual \nNot \nAvailable \nNot Available No \nV \nSivaramakrishnan, \n2020\
    \ \nThesis \nWater Economics \nSimulation \nPublic \nEthereum \nYes \nV Sukrutha\
    \ et al., \n2021 \nConference \nPaper \nWater Governance Simulation \nPublic \n\
    Ethereum \nYes \nV T Ragghianti, \n2021 \nOther \nWater Governance Conceptual\
    \ \nNot \nAvailable \nNot Available No \nW Linjing et al., \n2020 \nBook \nChapter\
    \ \nWater Governance Explore \nNot \nAvailable \nNot Available No \nW Liu et al.,\
    \ 2021 \nJournal \nPaper \nAgricultural Water \nManagement \nExplore \n- \n- \n\
    - \nW Xia., 2022 \nJournal \nPaper \nWater Governance Conceptual \nHybrid \nNot\
    \ Available Yes \nY Chang et al., 2021 Journal \nPaper \nAgricultural Water \n\
    Management \nConceptual \nNot \nAvailable \nEthereum \nYes \nY Lalle et al., 2020\
    \  \nConference \nPaper \nUrban Water \nManagement \nConceptual \nPrivate \nNot\
    \ Available No \nY Li et al., 2022 \nJournal \nPaper \nWater Economics \nSimulation\
    \ \nPrivate \nHyperledger \nYes \nY Liu, C Shang, \n2022 \nJournal \nPaper \n\
    Water Economics \nConceptual \nHybrid \n- \nYes \nY P Lin et a., 2020 Journal\
    \ \nPaper \nWater Quality \nManagement \nSimulation \nNot \nAvailable \nNot Available\
    \ Yes \nY P Lin et al., 2017 Journal \nPaper \nAgricultural Water \nManagement\
    \ \nConceptual \nHybrid \nEthereum \nYes \nY P Ortiz, 2018 \nWorking \nPaper \n\
    Water Quality \nManagement \nExplore \n- \n- \n- \nY Zhang e al., 2020 Journal\
    \ \nPaper \nWater Governance Conceptual \nHybrid \nNot Available Yes \nYe Liu\
    \ et al., 2020  \nJournal \nPaper \nAgricultural Water \nManagement \nExplore\
    \ \n- \n- \n- \nZ Shi et al., 2019 \nJournal \nPaper \nWater Quality \nManagement\
    \ \nPilot Project \nPrivate \nHyperledger \nYes \n \nTable A3. List of Reviewed\
    \ Non-academic Content \nAuthors & Organization & Project \nPublication Type \n\
    Year \nAqua Coin \nHackathon Project \n2019 \nBaarish \nHackathon Project \n2018\
    \ \nBasin Logix \nHackathon Project \n2020 \nBlock Garden \nHackathon Project\
    \ \n2022 \nClimeter \nHackathon Project \n2017 \nDecentralized Rainwater Harvesting\
    \ \nHackathon Project \n2020 \nEnvChain \nHackathon Project \n2022 \nEnvironment\
    \ Connect \nHackathon Project \n2022 \nETH Water Dam \nHackathon Project \n2019\
    \ \nFlood Chain \nHackathon Project \n2019 \nH2O Chain \nHackathon Project \n\
    2019 \nHow to Save \nHackathon Project \n2021 \nHydroBlock \nHackathon Project\
    \ \n2018 \nMaximizeWasteWaterRecovery \nHackathon Project \n2019 \nMy Water Chain\
    \ \nHackathon Project \n2020 \nWastewater Reuse \nHackathon Project \n2019 \n\
    Water Coin - Env. Sensor Data Sharing \nHackathon Project \n2018 \nWater Coin\
    \ - WRC Trading \nHackathon Project \n2019 \nWater Guardians \nHackathon Project\
    \ \n2018 \nWater Monitor Plus \nHackathon Project \n2022 \nWater Reuse Booster\
    \ \nHackathon Project \n2020 \nWaterWizard \nHackathon Project \n2020 \nWeatherChainXM\
    \ \nHackathon Project \n2021 \nWyo Flow \nHackathon Project \n2018 \nAditya K.\
    \ Kaushik \nWeb Document \n2019 \nARUP \nWeb Document \n2019 \nAtreides \nWeb\
    \ Document \n2021 \nBANKEX \nWeb Document \n2018 \nC Stinson \nWeb Document \n\
    2018 \nCrypto Water  \nWeb Document \n2017 \nDavid Barbeler \nWeb Document \n\
    2019 \nE Weisbord \nWeb Document \n2018 \nFujitsu \nWeb Document \n2021 \nGSI\
    \ \nWeb Document \n2022 \nHypervine \nWeb Document \n2022 \nO Russell \nWeb Document\
    \ \n2018 \nODI \nWeb Document \n2018 \nOFWAT \nWeb Document \n2017 \nOrigin Clear\
    \ \nWeb Document \n2022 \nRobert Galarza \nWeb Document \n2022 \nStatecraft Tech\
    \ \nWeb Document \n2019 \nVottun \nWeb Document \n2022 \nY Khatri \nWeb Document\
    \ \n2019 \nAquaBit \nWhitepaper \n2018 \nBaikalika \nWhitepaper \n2017 \nBlock-Squid\
    \ \nWhitepaper \n2020 \nBluechain \nWhitepaper \n2019 \nG Booman et al. \nWhitepaper\
    \ \n2021 \nGenesis Research & Technology Group \nWhitepaper \n2017 \nh20 \nWhitepaper\
    \ \n2022 \nHydroChain \nWhitepaper \n2021 \nKojo  \nWhitepaper \n2022 \nPG Giampietro\
    \ \nWhitepaper \n2020 \nPipeline System \nWhitepaper \n2021 \nTrashTag \nWhitepaper\
    \ \n2021 \nTreelion \nWhitepaper \n2021 \nWater Consortium \nWhitepaper \n2020\
    \ \n \n \n"
  inline_citation: '>'
  journal: EarthArXiv (California Digital Library)
  limitations: '>'
  pdf_link: https://eartharxiv.org/repository/object/4869/download/9673/
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Blockchain Applications and Opportunities for Water Resources and Hydrology:
    A Systematic Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icuas.2019.8797932
  analysis: '>'
  authors:
  - Randal W. Beard
  - Pascual Campoy
  - Ben Chen
  - YangQuan Chen
  - Rogelio Lozano
  - James R. Morrison
  - Paul Oh
  - C.A. Rabbath
  - Matthew J. Rutherford
  - Roberto Sabatini
  - Salah Sukkarieh
  - George Vachtsevanos
  - Kimon P. Valavanis
  - Youmin Zhang
  - Icuas Steering
  - Committee Tor
  - Agnar Johansen
  - Fulvia Quagliotti
  - Anı́bal Ollero
  - Nikos C. Tsourveloudis
  - Kimon P. Valavanis
  - Antonios Tsourdos
  - Mário Sarcinelli-Filho
  - Rajnikant Sharma
  - Kostas Kanistras
  - Han‐Lim Choi
  - Andrea Monteriù
  - Justin R. Martin
  - Jonathan Kretz
  - Dina Fragkedaki
  - Pradeep Kumar Misra
  - Rafic M. Ajaj
  - Fernando Alarcón
  - Kostas Alexis
  - Florian Andert
  - D Azimov
  - Ivan Bernal
  - Stjepan Bogdan
  - Alice Brandão
  - Tony Brown
  - Joana Caetano
  - Laura Carrillo
  - Pablo R. Castillo
  - Han Chen
  - Abbas Chamseddine
  - J. Chudoba
  - Laurent Ciarletta
  - J. A. Cobano
  - Julián Colorado
  - Calvin Coopmans
  - Hernán Cortés
  - Cristina Cuerno
  - Ju Chen
  - Guido de Croon
  - R Czyba
  - A Dolgikh
  - Hongwei Duan
  - Sébastien Durand
  - Harris L. Edge
  - Giancarmine Fasano
  - Armando E. Fraire
  - Marianne Geiser
  - L Gonzalez
  - Isaac Kaminer
  - J. Keller
  - Y Kim
  - Zdzisław Kowalczuk
  - K. Kyriakopoulos
  - Alejandro Lara
  - Nicolas Larrieu
  - D Lee
  - Dan Lin
  - Stefano Longhi
  - Gang Lü
  - Jian Luo
  - A. Mancini
  - Carmen Martı́nez
  - I Maza
  - D Melita
  - Miguel A. Olivares-Méndez
  - Luís Merino
  - A Monteriu
  - Milton Mueller
  - M Nahon
  - Hassan Noura
  - Daniel J. Nolan
  - U Ozdemir
  - Zhigang Peng
  - Jing Qi
  - Yue Qu
  - Sivakumar Rathinam
  - Hugo Romero
  - J Martin-Sanchez
  - S Park
  - Sergio Salazar
  - Srikanth Saripalli
  - M. Saska
  - Runqi Chai
  - Hakkı Erhan Sevil
  - M Shaqura
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Loading [MathJax]/extensions/MathMenu.js
    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2019 International Conference...
    ICUAS 2019 Final Program Publisher: IEEE Cite This PDF 108 Full Text Views Abstract
    Metrics Abstract: Provides a schedule of conference events and a listing of which
    papers were presented in each session. Published in: 2019 International Conference
    on Unmanned Aircraft Systems (ICUAS) Date of Conference: 11-14 June 2019 Date
    Added to IEEE Xplore: 15 August 2019 ISBN Information: ISSN Information: DOI:
    10.1109/ICUAS.2019.8797932 Publisher: IEEE Conference Location: Atlanta, GA, USA
    Metrics More Like This Flexible Final-Time Stochastic Differential Dynamic Programming
    for Autonomous Vehicle Trajectory Optimization IEEE Transactions on Aerospace
    and Electronic Systems Published: 2023 EEEIC / I&CPS Europe 2019 Final Program
    2019 IEEE International Conference on Environment and Electrical Engineering and
    2019 IEEE Industrial and Commercial Power Systems Europe (EEEIC / I&CPS Europe)
    Published: 2019 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/8787852/8797706/08797932.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: ICUAS 2019 Final Program
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
