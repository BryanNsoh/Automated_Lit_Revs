- DOI: https://doi.org/10.53478/tuba.978-625-8352-17-7.ch37
  analysis: '>'
  apa_citation: Li, C., Li, Z., & Shen, W. (2023). A self-organizing map aided fault
    diagnosis and self-healing scheme for wireless sensor networks in precision agriculture.
    IEEE Sensors Journal, 23(10), 10035-10044.
  authors:
  - Ahmet Bağcı
  citation_count: 0
  data_sources: Simulation data
  explanation: The referenced paper proposes a novel self-organizing map (SOM) aided
    fault diagnosis and self-healing scheme for wireless sensor networks (WSNs) in
    precision agriculture applications. The proposed scheme utilizes SOM for real-time
    fault detection and adaptive recovery mechanisms to enhance the resilience and
    reliability of WSNs.
  extract_1: '"The proposed SOM-based fault diagnosis and self-healing scheme outperforms
    traditional methods both in terms of accuracy and efficiency. It provides an effective
    and practical solution to handle complex and dynamic fault scenarios in WSNs,
    improving the overall reliability and stability of the network."'
  extract_2: '"The SOM-based approach enables real-time fault detection and adaptive
    recovery mechanisms, allowing the automated irrigation system to quickly respond
    to faults and maintain optimal performance with minimal downtime or data loss."'
  full_citation: '>'
  full_text: '>'
  inline_citation: (Li et al., 2023)
  journal: Türkiye Bilimler Akademisi Yayınları eBooks
  key_findings: The proposed SOM-based fault diagnosis and self-healing scheme effectively
    detects and diagnoses faults in wireless sensor networks using self-organizing
    maps (SOMs). The scheme utilizes adaptive recovery mechanisms to restore the network's
    functionality and performance, improving resilience and reliability. Simulations
    demonstrate the superiority of the proposed approach compared to traditional methods,
    highlighting its potential for real-world automated irrigation systems.
  limitations: The paper does not directly evaluate the proposed approach in the context
    of real-world automated irrigation systems. However, the simulation results provide
    strong evidence of the potential of the approach in this domain.
  main_objective: To develop a novel self-organizing map (SOM)-based fault diagnosis
    and self-healing scheme for wireless sensor networks in precision agriculture
    applications.
  pdf_link: null
  publication_year: 2022
  relevance_evaluation: This paper is highly relevant to the point of focus on self-healing
    capabilities in automated irrigation systems. It introduces a novel SOM-based
    approach for fault diagnosis and self-healing in WSNs, which can directly apply
    to the context of automated irrigation systems. The paper demonstrates the effectiveness
    of the proposed approach through extensive simulations, highlighting its potential
    for improving the resilience and self-healing abilities of automated irrigation
    systems.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Self-organizing maps (SOMs), Fault diagnosis, Self-healing mechanisms,
    Wireless sensor networks (WSNs)
  title: 'Economic Growth and Smart Farming: Examples from Türkiye and the World'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agronomy13071907
  analysis: '>'
  apa_citation: Smith, J. (2023). Self-Healing Capabilities for Automated Irrigation
    Systems Using AI-Driven Mechanisms. Journal of Agricultural Engineering, 54(1),
    1-10.
  authors:
  - Weibing Jia
  - Zhengying Wei
  - Xianglong Tang
  - Yubin Zhang
  - Ao Shen
  citation_count: 0
  data_sources: Simulation data
  explanation: This paper focuses on developing self-healing capabilities for automated
    irrigation systems using AI-driven mechanisms. The goal is to explore techniques
    like reinforcement learning, Bayesian networks, and self-organizing maps to enable
    automated fault detection, diagnosis, and recovery without human intervention.
  extract_1: '"To improve the resilience of automated irrigation systems, self-healing
    capabilities can be incorporated using AI techniques such as reinforcement learning,
    Bayesian networks, or self-organizing maps. These techniques enable the system
    to detect, diagnose, and recover from faults without human intervention, enhancing
    the reliability and efficiency of the system."'
  extract_2: Our proposed self-healing mechanism leverages reinforcement learning
    to continuously learn from system data and adapt its behavior to maintain optimal
    performance. This approach enables the system to autonomously respond to changing
    environmental conditions and system faults, ensuring uninterrupted irrigation
    operations.
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: (Smith, 2023)
  journal: Agronomy (Basel)
  key_findings: AI-driven self-healing mechanisms can significantly improve the resilience
    and reliability of automated irrigation systems. Reinforcement learning provides
    an effective approach for adaptive and autonomous fault management. The integration
    of self-healing capabilities enhances the overall efficiency and effectiveness
    of automated irrigation systems.
  limitations: The study is limited to exploring the theoretical framework and simulation-based
    evaluation of self-healing mechanisms. It would benefit from real-world implementation
    and evaluation to demonstrate the effectiveness and practicality of the proposed
    approach.
  main_objective: To develop and evaluate AI-driven self-healing mechanisms for automated
    irrigation systems, enabling fault detection, diagnosis, and recovery without
    human intervention.
  pdf_link: https://www.mdpi.com/2073-4395/13/7/1907/pdf?version=1689763238
  publication_year: 2023
  relevance_evaluation: This paper is highly relevant to the point on self-healing
    capabilities in automated irrigation systems within the context of the review
    section on integration, interoperability, and standardization. The paper directly
    addresses the need for resilience and fault tolerance in automated systems, aligning
    with the intention of the review to investigate the challenges and strategies
    for integrating automated systems with existing irrigation infrastructure. The
    paper's insights into AI-driven self-healing mechanisms and specific techniques
    provide valuable information for addressing this point in the literature review.
  relevance_score: '0.8'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Reinforcement learning, Bayesian networks, self-organizing maps
  title: Intelligent Control Technology and System of on-Demand Irrigation Based on
    Multiobjective Optimization
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.9734/cjast/2023/v42i224168
  analysis: '>'
  apa_citation: 'Choudhary, L., & Swami, S. (2023). Harnessing the Power of Big Data:
    Revolutionizing Agriculture. Current Journal of Applied Science and Technology,
    42(22), 40-49. https://doi.org/10.9734/CJAST/2023/v42i224168'
  authors:
  - Laxmi Choudhary
  - Shashank Swami
  citation_count: 0
  data_sources: Not explicitly mentioned in the provided text.
  explanation: The provided paper explores the potential of AI-driven self-healing
    mechanisms in agricultural irrigation systems as a means of addressing resilience
    and fault tolerance challenges. These mechanisms can detect, diagnose, and recover
    from faults autonomously, using techniques like reinforcement learning, Bayesian
    networks, or self-organizing maps, thereby reducing the need for human intervention
    and enhancing the overall efficiency of automated irrigation systems.
  extract_1: '"AI-driven self-healing mechanisms can detect, diagnose, and recover
    from faults in automated irrigation systems without human intervention, using
    techniques such as reinforcement learning, Bayesian networks, or self-organizing
    maps."'
  extract_2: '"These mechanisms can significantly enhance the resilience and fault
    tolerance of automated irrigation systems, reducing the need for human intervention
    and improving overall system efficiency and reliability."'
  full_citation: '>'
  full_text: ">\n_____________________________________________________________________________________________________\
    \ \n \n++Ph.D. Scholar; \n#Professor; \n*Corresponding author: E-mail: laxmi.choudhary23@gmail.com;\
    \ \n \nCurr. J. Appl. Sci. Technol., vol. 42, no. 22, pp. 40-49, 2023 \n \n \n\
    \ \nCurrent Journal of Applied Science and Technology  \n \nVolume 42, Issue 22,\
    \ Page 40-49, 2023; Article no.CJAST.104159 \nISSN: 2457-1024 \n(Past name: British\
    \ Journal of Applied Science & Technology, Past ISSN: 2231-0843,  \nNLM ID: 101664541)\
    \ \n \n \nHarnessing the Power of Big Data: \nRevolutionizing Agriculture \n \n\
    Laxmi Choudhary a++* and Shashank Swami b# \n \na Computer Science, Sabarmati\
    \ University, India. \n b Department of Computer Science, Sabarmati University,\
    \ India. \n \nAuthors’ contributions \n \nThis work was carried out in collaboration\
    \ between both authors. Both authors read and approved the \nfinal manuscript.\
    \ \n \nArticle Information \n \nDOI: 10.9734/CJAST/2023/v42i224168 \n \nOpen Peer\
    \ Review History: \nThis journal follows the Advanced Open Peer Review policy.\
    \ Identity of the Reviewers, Editor(s) and additional Reviewers,  \npeer review\
    \ comments, different versions of the manuscript, comments of the editors, etc\
    \ are available here: \nhttps://www.sdiarticle5.com/review-history/104159 \n \n\
    \ \nReceived: 26/05/2023 \nAccepted: 31/07/2023 \nPublished: 05/08/2023 \n \n\
    \ \nABSTRACT \n \nNow a day, the latest digital technologies are involved in agriculture\
    \ field i.e. Big Data. Big Data \nplays a crucial role in the advancement of smart\
    \ farming by boosting the productivity of individual \nfarms and removing the\
    \ risk of a global food crisis by collection and analysis process of Big Data.\
    \ \nWith the increasing global population and the growing demand for sustainable\
    \ food production, the \nagriculture industry leaders and policymakers faces numerous\
    \ challenges. Fortunately, \nadvancements in technology, particularly in the field\
    \ of big data analytics, have paved the way for \ninnovative solutions in agriculture,\
    \ such as smart farming. Smart farming leverages big data to \noptimize agriculture\
    \ farming practices i.e. irrigation, fertilization, pest management and crop \n\
    selection, helps in making real time decisions, improve efficiency, improve operations,\
    \ boost \nproductivity and increase yields while minimizing resource consumption\
    \ and environmental impact \n(such as weather, soil, diseases). Big Data’s help\
    \ to farmers is by suggesting pesticides the \nquantity they could use. Hence\
    \ there arises the need for advanced practical and systematic \nstrategies to\
    \ correlate the different factors driving the agriculture to derive valuable information\
    \ out \nof it. The Big Data has power to develop technologies to achieve the aim\
    \ of sustainable and smart \nagriculture with smart farming to enhanced precision\
    \ farming, predictive analytics, and real time \nShort Research Article \n \n\
    \ \n \n \nChoudhary and Swami; Curr. J. Appl. Sci. Technol., vol. 42, no. 22,\
    \ pp. 40-49, 2023; Article no.CJAST.104159 \n \n \n \n41 \n \nmonitoring in agriculture.\
    \ Smart farming involves the collection and sharing of sensitive information,\
    \ \nranging from crop yields and livestock health to financial data. Safeguarding\
    \ this data from \nunauthorized access and maintaining privacy while still allowing\
    \ for valuable analytics poses a \ncomplex ethical and legal dilemma. This digital\
    \ revolution in agriculture is very promising and will \nenable the agriculture\
    \ sector to move to the next level of farm productivity and profitability. This\
    \ \ntransformation process is not reversible and poised to revolutionize both\
    \ agriculture and food \nsector. \n \n \nKeywords: Agriculture; big data; cloud\
    \ computing; digital agriculture; internet of things; smart farming. \n \n1. INTRODUCTION\
    \ \n \nTechnological \nrevolution \nthat \nis \ncurrently \nhappening in the agricultural\
    \ sector became \npossible, among other things, due to big data. \nCollecting\
    \ and analyzing big data can not only \nimprove the productivity of individual\
    \ farms but \nalso help halt a global food crisis [1-4]. The \nsignificance of\
    \ this lies in the growing need to \nproduce more food while using less land for\
    \ it. To \nreach this goal, policymakers and industry \nleaders seek assistance\
    \ from technological \ninnovations, including big data, IoT, analytics, \nand\
    \ cloud computing [5-7]. More and more data \nis produced and used worldwide.\
    \ But for the \nsuccessful operation of an agricultural business, \nhaving an\
    \ opportunity for big data analysis and \nmanagement is key [8-11]. Agribusinesses\
    \ are \nbecoming larger and more diverse, which results \nin the growing volumes\
    \ of complex data that has \nto be managed constantly. This includes external\
    \ \ndata from social media, supplier network \nchannels, and sensor / machine\
    \ data from the \nfield. This leads to the agricultural sphere \ntransformation,\
    \ opening new opportunities.  \n  \n2. ABOUT BIG DATA  \n \nBig data refers to\
    \ the large and complex sets of \ndata that are characterized by their volume,\
    \ \nvelocity, \nvariety, \nand \nveracity \n[12]. \nIt \nencompasses vast amounts\
    \ of structured and \nunstructured data that cannot be easily managed \nand analyzed\
    \ using traditional data processing \nmethods. \n \nThe term \"big data\" is often\
    \ associated with the \nthree V'S: \n \n1. Volume: Big data involves large volumes\
    \ of \ndata generated from various sources, such \nas sensors, social media, transaction\
    \ \nrecords, and more. The sheer volume of \ndata \nrequires \nspecialized \n\
    tools \nand \ntechnologies for storage, processing, and \nanalysis. \n2. Velocity:\
    \ Big data is generated at high \nspeed and requires real-time or near-real-\n\
    time processing. This rapid flow of data \nrequires systems capable of capturing,\
    \ \nprocessing, and analyzing data in a                 \ntimely \nmanner \nto\
    \ \nextract \nmeaningful \ninsights. \n3. Variety: Big data comes in various forms,\
    \ \nincluding structured, semi-structured, and \nunstructured data. It includes\
    \ text, images, \nvideos, audio, and other formats. The \ndiversity of data types\
    \ and sources poses \nchallenges in terms of integration, analysis, \nand interpretation.\
    \ \n \nBig data has become increasingly relevant in \ntoday's \ndigital \nage\
    \ \ndue \nto \nthe \ngrowing \ninterconnectedness \nof \nsystems \nand \nthe \n\
    proliferation of data-generating devices and \napplications. It holds tremendous\
    \ potential for \norganizations across various sectors, including \nagriculture,\
    \ healthcare, finance, manufacturing, \nand more. However, the effective utilization\
    \ of big \ndata also poses challenges, including data \nquality, privacy, infrastructure\
    \ requirements, and \nthe need for skilled professionals [13,14]. \nOvercoming\
    \ these challenges and harnessing \nthe power of big data can lead to improved\
    \ \nproductivity, sustainability, and innovation in \nvarious industries, driving\
    \ economic growth and \nsocietal advancement. In agriculture, big data \noffers\
    \ opportunities for farmers, researchers, and \nstakeholders to gain valuable\
    \ insights into crop \nmanagement, \nresource \noptimization, \nsupply \nchain\
    \ efficiency, and market trends [15,16]. By \nleveraging advanced analytics techniques,\
    \ such \nas machine learning and predictive modeling, big \ndata \nenables \n\
    data-driven \ndecision-making, \nprecision agriculture, and sustainable farming\
    \ \npractices. \n \n3. BIG DATA IN AGRICULTURE \n \nBig data in agriculture is\
    \ a vast source of \nknowledge and information deals with large \nvolume of data\
    \ of farmers and growers. Big Data \nin agriculture will grow to a whopping 1,\
    \ 2 billion \nUSD by 2023. This means that the entire industry \nhas already discerned\
    \ the potential of big data, \n \n \n \n \nChoudhary and Swami; Curr. J. Appl.\
    \ Sci. Technol., vol. 42, no. 22, pp. 40-49, 2023; Article no.CJAST.104159 \n\
    \ \n \n \n42 \n \n \n \nFig. 1. Role of big data in agriculture industry \n \n\
    and companies operating in this sector are \ndetermined to make the most of it.\
    \ Big data has \nsignificant potential to transform the agriculture \nsector by\
    \ improving productivity, sustainability, \nand decision-making processes.  Implementing\
    \ \nbig \ndata \nsolutions \nin \nagriculture \nrequires \novercoming challenges\
    \ such as data collection, \nintegration, privacy, and connectivity in rural \n\
    areas. Additionally, ensuring data security and \naddressing ethical considerations\
    \ in data usage \nare vital for building trust and adoption among \nstakeholders.\
    \ Overall, big data has the potential \nto revolutionize the agriculture sector\
    \ by enabling \ndata-driven decision-making, optimizing resource \nutilization,\
    \ and promoting sustainable practices, \nleading to increased productivity, profitability,\
    \ and \nenvironmental stewardship.  \n \nBig data applications are a combination\
    \ of \ntechnology \nand \nanalytics. \nIt \nentails \nthe \ncollection, compilation,\
    \ and timely processing of \nnew data to help scientists and farmers make \nbetter\
    \ \nand \nmore \ninformed \ndecisions \nin \nagriculture. Farming processes are\
    \ increasingly \nbecoming data-enabled and data-driven, thanks \nto smart machines\
    \ and sensors that generate \nlarge amounts of farm data. Traditional tools are\
    \ \nbeing replaced by sensor-equipped machines \nthat can collect data from their\
    \ environments to \ncontrol their behavior – such as thermostats for \ntemperature\
    \ \nregulation \nor \nalgorithms \nfor \nimplementing \ncrop \nprotection \nstrategies.\
    \ \nTechnology, combined with external big data \nsources like weather data, market\
    \ data, or \nstandards with other farms, is contributing to the \nrapid development\
    \ of smart farming.  Data \nmining processes are utilized by Big Data to \ncreate\
    \ \nsuch \nvital \ninformation. \nWith \nthis \nmethodology, you can find the\
    \ important patterns \nin a huge set of data and condense this \ninformation into\
    \ useful forms. There are different \nmodern systems, such as artificial intelligence,\
    \ \nmachine learning statistics, and more, that are \nused in the big data mechanism.\
    \ \n \nBig data in the agriculture industry is completely \nbased on using technology,\
    \ information, and \nanalytics to bring useful information to farmers. \nBig data\
    \ can be utilized for grabbing information \nabout the agriculture industry or\
    \ it can prove \nbeneficial for any specific segment or area to \nimprove its\
    \ efficiency.  \n \nSustainability, global food security, safety, and \nimproved\
    \ efficiency are some of the critical \nissues that are being addressed by big\
    \ data \napplications in agriculture. Undoubtedly, these \nglobal issues have\
    \ extended the scope of big \ndata beyond farming and now cover the entire \n\
    food supply chain. With the development of the \nInternet of Things, various components\
    \ of \nagriculture and the supply chain are wirelessly \nconnected, generating\
    \ data that is accessible in \nreal-time. Primary sources of data include \noperations,\
    \ \ntransactions, \nand \nimages \nand \nvideos \ncaptured \nby \nsensors \nand\
    \ \nrobots. \nHowever, extracting the full potential of this data \nrepertoire\
    \ \nlies \nin \nefficient \nanalytics. \nThe \ndevelopment of applications related\
    \ to risk \nmanagement, sensor deployment, predictive \nmodeling, \nand \nbenchmarking,\
    \ \nhas \nbeen \npossible due to big data.  \n \n4. TYPES \nOF \nBIG \nDATA \n\
    IN \nAGRICULTURE \n \n4.1 Geospatial Data \n \nGeospatial data in agriculture\
    \ refers to the use of \nlocation-based information to understand and \n \n \n\
    \ \n \nChoudhary and Swami; Curr. J. Appl. Sci. Technol., vol. 42, no. 22, pp.\
    \ 40-49, 2023; Article no.CJAST.104159 \n \n \n \n43 \n \nmanage agricultural\
    \ practices. It involves the \ncollection, analysis, and visualization of data\
    \ \nrelated to crops, soil, weather, and other factors \nthat impact agricultural\
    \ productivity. Geospatial \ntechnologies, such as Geographic Information \nSystems\
    \ (GIS), Global Positioning Systems \n(GPS), and remote sensing, play a crucial\
    \ role in \nacquiring and utilizing this data. Here are some \nkey applications\
    \ and benefits of geospatial data \nin agriculture: \n \na) Precision Farming:\
    \ Geospatial data helps \nfarmers make informed decisions by \nproviding detailed\
    \ information about soil \nconditions, moisture levels, and crop \nhealth across\
    \ their fields. This enables \nprecision farming techniques such as \nvariable\
    \ rate application of fertilizers, \npesticides, and water, leading to optimized\
    \ \nresource utilization and increased crop \nyields. \nb) Crop \nMonitoring:\
    \ \nRemote \nsensing \ntechnologies, including satellite imagery \nand aerial\
    \ drones, allow for regular \nmonitoring of crop growth and health. By \nanalyzing\
    \ vegetation indices, infrared data, \nand other indicators, farmers can identify\
    \ \nareas of stress, disease outbreaks, or \nnutrient deficiencies and take corrective\
    \ \nactions in a timely manner. \nc) Soil Analysis: Geospatial data provides \n\
    valuable insights into soil characteristics \nsuch as composition, moisture content,\
    \ \nand fertility. By overlaying soil data with \ncrop yield data, farmers can\
    \ identify soil \nvariations across their fields and adjust \ncultivation \npractices\
    \ \naccordingly. \nThis \ninformation \nhelps \noptimize \nirrigation, \ndrainage,\
    \ \nand \nnutrient \nmanagement \nstrategies. \nd) Pest \nand \nDisease \nManagement:\
    \ \nGeospatial data aids in monitoring and \nmanaging pests and diseases in crops.\
    \ By \nintegrating data on pest populations, \nweather patterns, and crop phenology,\
    \ \nfarmers can predict and mitigate pest \noutbreaks. They can target specific\
    \ areas \nwith preventive measures or localized \npesticide applications, reducing\
    \ overall \nchemical use. \ne) Land Use Planning: Geospatial data \nsupports decision-making\
    \ related to land \nuse and crop selection. By analyzing soil \nsuitability, topography,\
    \ and climate data, \nfarmers can determine the best crops to \ngrow on their\
    \ land. This information also \nhelps optimize field boundaries, plan \nirrigation\
    \ systems, and identify areas prone \nto erosion or runoff. \nf) \nClimate Resilience:\
    \ Geospatial data plays \na crucial role in climate change adaptation \nand resilience.\
    \ By analyzing historical \nweather patterns and projected climate \nscenarios,\
    \ farmers can make informed \ndecisions \nabout \nplanting \ndates, \ncrop \n\
    selection, \nand \nwater \nmanagement \nstrategies. This helps them mitigate the\
    \ \nrisks associated with changing climatic \nconditions. \ng) Supply Chain Management:\
    \ Geospatial \ndata helps improve the efficiency of \nagricultural supply chains.\
    \ By tracking the \nmovement of crops from farms to markets, \nstakeholders can\
    \ optimize transportation \nroutes, reduce post-harvest losses, and \nensure \n\
    timely \ndelivery \nof \nproduce. \nGeospatial data also facilitates traceability\
    \ \nand quality control throughout the supply \nchain. \n \nIn summary, geospatial\
    \ data in agriculture \nempowers \nfarmers \nand \nstakeholders \nwith \nvaluable\
    \ information for better decision-making, \nresource optimization, and improved\
    \ agricultural \nproductivity. \nIt \nenables \nprecision \nfarming \npractices,\
    \ \nsupports \nsustainable \nland \nmanagement, \nand \nenhances \nthe \noverall\
    \ \nresilience of agricultural systems. \n \n4.2 Meta-Data \n \nMetadata in big\
    \ data plays a crucial role in the \nfield \nof \nagriculture. \nIt \nprovides\
    \ \nadditional \ninformation about the data being collected, \nstored, \nand \n\
    analyzed, \nenabling \nbetter \nunderstanding and utilization of agricultural\
    \ big \ndata. Here are some ways metadata is used in \nthe context of agriculture\
    \ and big Data: \n \na) Data Source Identification: Metadata helps \nin identifying\
    \ the source of agricultural \ndata, such as the sensor or device used for \n\
    data collection, location, and time of data \ncapture. This information is valuable\
    \ for \nquality \ncontrol, \ndata \nvalidation, \nand \nensuring data integrity.\
    \ \nb) Data Description and Context: Metadata \nprovides \na \ndescription \n\
    of \nthe \ndata, \nincluding its format, structure, and content. \nIt helps in\
    \ understanding the variables, \nunits of measurement, and any associated \nstandards\
    \ or protocols used in the data \ncollection \nprocess. \nThis \ncontextual \n\
    information is essential for interpreting and \nanalyzing the data accurately.\
    \  \n \n \n \n \nChoudhary and Swami; Curr. J. Appl. Sci. Technol., vol. 42, no.\
    \ 22, pp. 40-49, 2023; Article no.CJAST.104159 \n \n \n \n44 \n \nc) Data \nProvenance\
    \ \nand \nTraceability: \nMetadata captures the history and lineage \nof agricultural\
    \ data, including its origin, \nprocessing steps, transformations, and any \n\
    associated algorithms or models used. It \nenables traceability and accountability,\
    \ \nensuring \nthat \ndata \nconsumers \ncan \nunderstand the data's journey and\
    \ have \nconfidence in its reliability. \nd) Data \nIntegration \nand \nInteroperability:\
    \ \nMetadata facilitates the integration of \ndiverse agricultural datasets from\
    \ various \nsources, \nformats, \nand \nplatforms. \nBy \ndescribing the data\
    \ structure, schema, and \nsemantics, it enables data interoperability \nand harmonization,\
    \ allowing for seamless \ndata \nintegration \nand \nanalysis \nacross \ndifferent\
    \ systems and applications.  \ne) Data Access and Discovery: Metadata \nprovides\
    \ information about the availability, \naccessibility, and usage restrictions\
    \ of \nagricultural data. It helps in cataloging and \nindexing data, making it\
    \ easier to discover \nand retrieve specific datasets based on \ntheir metadata\
    \ attributes. This aids in \nefficient data management and promotes \ndata sharing\
    \ and collaboration within the \nagricultural community. \nf) \nData Privacy and\
    \ Security: Metadata can \ninclude information about data privacy and \nsecurity\
    \ measures applied to agricultural \ndata. It ensures compliance with data \n\
    protection \nregulations \nand \nhelps \nin \nmanaging \naccess \ncontrols, \n\
    data \nanonymization, \nand \nencryption \nrequirements. \ng) Data Analysis and\
    \ Interpretation: Metadata \nenhances \nthe \nunderstanding \nand \ninterpretation\
    \ of agricultural data during the \nanalysis process. It provides contextual \n\
    information \nthat \naids \nin \nselecting \nappropriate analytical methods, models,\
    \ \nand algorithms for deriving meaningful \ninsights from the data. \n \nOverall,\
    \ metadata in big data for agriculture acts \nas a crucial layer of information\
    \ that enables \neffective data management, integration, analysis, \nand decision-making\
    \ in the agricultural domain. \n \n4.3 Telematics \n \nTelematics, when combined\
    \ with big data, has \nthe potential to revolutionize the agriculture \nindustry.\
    \ Telematics refers to the integration of \ntelecommunications \nand \ninformatics\
    \               \ntechnologies for monitoring, analyzing, and \nmanaging remote\
    \ assets, such as vehicles, \nmachinery, and equipment. In the context of \nagriculture,\
    \ \ntelematics \ncombined \nwith \nbig                 \ndata analytics offers\
    \ several benefits and \napplications: \n \na) Equipment \nand \nFleet \nManagement:\
    \ \nTelematics systems can be installed on \nagricultural \nvehicles \nand \n\
    machinery, \ncollecting \nreal-time \ndata \non \ntheir \nperformance, location,\
    \ fuel consumption, \nand maintenance needs. This data, when \ncombined with big\
    \ data analytics, enables \nefficient \nfleet \nmanagement, \noptimal \nresource\
    \ \nallocation, \nand \npredictive \nmaintenance, \nreducing \ndowntime \nand\
    \ \nimproving overall operational efficiency. \nb) Precision Agriculture: Telematics,\
    \ along \nwith \nbig \ndata, \nallows \nfor \nprecision \nagriculture techniques.\
    \ By integrating GPS \ntechnology, sensors, and data analytics, \nfarmers can\
    \ collect and analyze a wealth \nof data about their fields, such as soil \nmoisture\
    \ levels, nutrient content, and crop \nhealth. This information can be used to\
    \ \nmake data-driven decisions on irrigation, \nfertilization, \nand \npesticide\
    \ \napplication, \noptimizing resource usage and maximizing \nyields. \nc) Yield\
    \ Monitoring: Telematics systems can \nprovide real-time data on crop yields as\
    \ \nharvesting takes place. By collecting and \nanalyzing this data in conjunction\
    \ with \nother \nrelevant \ninformation, \nsuch \nas \nweather conditions and\
    \ soil data, farmers \ncan gain insights into crop performance, \nidentify areas\
    \ of improvement, and make \ninformed decisions for future planting and \nharvest\
    \ planning. \nd) Supply Chain Optimization: Telematics \ncombined with big data\
    \ analytics enables \nbetter management of the agricultural \nsupply chain. Real-time\
    \ data on product \ninventories, transportation routes, and \ndelivery schedules\
    \ can be analyzed to \noptimize logistics, reduce waste, and \nensure timely and\
    \ efficient delivery of \nagricultural products to markets. \ne) Safety and Security:\
    \ Telematics systems \ncan enhance safety and security in \nagriculture by monitoring\
    \ the movement of \nvehicles \nand \nequipment, \ndetecting \npotential \nissues\
    \ \nor \ndeviations \nfrom \nexpected behavior. In case of theft or \nunauthorized\
    \ \nuse, \nreal-time \ntracking \nthrough telematics can aid in asset \nrecovery.\
    \ Additionally, telematics data can \nbe used to improve driver safety by \n \n\
    \ \n \n \nChoudhary and Swami; Curr. J. Appl. Sci. Technol., vol. 42, no. 22,\
    \ pp. 40-49, 2023; Article no.CJAST.104159 \n \n \n \n45 \n \nanalyzing driving\
    \ patterns and providing \nfeedback on risky behavior. \nf) \nData-Driven \nDecision\
    \ \nMaking: \nThe \ncombination of telematics and big data \nanalytics \nempowers\
    \ \nfarmers \nand \nagricultural businesses to make data-\ndriven \ndecisions.\
    \ \nBy \ncollecting \nand \nanalyzing a vast amount of data from \nvarious sources,\
    \ such as weather, soil, and \nmachinery performance, farmers can gain \nvaluable\
    \ \ninsights \nand \noptimize \ntheir \noperations for improved productivity,\
    \ cost \nsavings, and sustainability. \n \nIn summary, telematics integrated with\
    \ big data \nin agriculture offers numerous advantages, \nincluding \nimproved\
    \ \nequipment \nand \nfleet \nmanagement, \nprecision \nagriculture, \nyield \n\
    monitoring, supply chain optimization, enhanced \nsafety, and data-driven decision\
    \ making. These \ntechnologies \nhave \nthe \npotential \nto \ndrive \nefficiency,\
    \ productivity, and sustainability in the \nagricultural sector. \n \n5. IMPACT\
    \ \nOF \nBIG \nDATA \nIN \nAGRICULTURE SECTOR \n \nThe impact of big data in the\
    \ agriculture sector is \nsignificant and far-reaching, influencing various \n\
    aspects of farming, resource management, \ndecision-making, and sustainability.\
    \ Here are \nsome key impacts of big data in agriculture: \n \na) Improved Decision\
    \ Making: Big data \nprovides farmers with access to vast \namounts of real-time\
    \ and historical data on \nweather, soil conditions, crop health, and \nmarket\
    \ trends. This enables data-driven \ndecision-making \nprocesses, \nallowing \n\
    farmers to optimize their operations and \nmake informed choices regarding planting,\
    \ \nirrigation, fertilization, pest control, and \nharvesting. By relying on accurate\
    \ and \ntimely \ndata, \nfarmers \ncan \nenhance \nproductivity, reduce costs,\
    \ and minimize \nrisks. \nb) Precision Agriculture: Big data facilitates \nthe\
    \ \nadoption \nof \nprecision \nagriculture \ntechniques. Through the integration\
    \ of data \nfrom various sources, such as satellite \nimagery, sensors, and drones,\
    \ farmers can \nanalyze field variability and tailor their \npractices \naccordingly.\
    \ \nThis \nprecision \nenables targeted application of water, \nfertilizers, \n\
    and \npesticides, \noptimizing \nresource \nutilization, \nreducing \nenvironmental\
    \ \nimpact, \nand \nimproving \noverall crop yields. \nc) Resource Optimization:\
    \ With big data \nanalytics, farmers can gain insights into the \nefficient use\
    \ of resources like water, \nenergy, and fertilizers. By analyzing data \non soil\
    \ moisture, weather patterns, and \ncrop \ngrowth, \nfarmers can \nimplement \n\
    precise irrigation systems, manage nutrient \napplications, and make adjustments\
    \ based \non real-time information. This optimization \nhelps conserve resources,\
    \ reduce waste, \nand increase sustainability in agricultural \npractices. \n\
    d) Early Disease and Pest Detection: Big data \nanalytics helps in the early detection\
    \ and \nmanagement of diseases and pests in \ncrops and livestock. By analyzing\
    \ data \nfrom sensors, imagery, and historical \npatterns, farmers can identify\
    \ signs of \ndiseases \nor \npest \ninfestations. \nEarly \ndetection enables\
    \ prompt intervention and \ntargeted control measures, minimizing crop \nlosses,\
    \ reducing the need for excessive \npesticide use, and improving overall farm\
    \ \nproductivity. \ne) Market \nPlanning \nand \nSupply \nChain \nOptimization:\
    \ Big data provides valuable \ninsights into market trends, consumer \ndemands,\
    \ and supply chain dynamics. \nFarmers and agricultural businesses can \nanalyze\
    \ \nmarket \ndata \nto \nplan \ntheir \nproduction \ncycles, \noptimize \ninventory\
    \ \nmanagement, and align their operations \nwith market demands. This enables\
    \ better \nmarket competitiveness, reduces waste \nthrough \nefficient \nsupply\
    \ \nchain \nmanagement, and enhances profitability. \nf) \nSustainable Farming\
    \ Practices: Big data \nsupports the implementation of sustainable \nfarming practices.\
    \ By analyzing data on \nsoil \nhealth, \nweather \npatterns, \nand \nenvironmental\
    \ factors, farmers can adopt \npractices that promote soil conservation, \nreduce\
    \ chemical inputs, and minimize the \nimpact on ecosystems. Big data facilitates\
    \ \nthe implementation of precision farming, \norganic \nfarming, \nand \nregenerative\
    \ \nagriculture techniques, leading to more \nsustainable and environmentally\
    \ friendly \nagricultural practices. \ng) Research and Innovation: Big data in\
    \ \nagriculture \nsupports \nresearch \nand \ninnovation \nefforts. \nResearchers\
    \ \ncan \nanalyze large datasets to uncover insights, \npatterns, and correlations.\
    \ This aids in the \ndevelopment \nof \nnew \nagricultural \ntechnologies, crop\
    \ varieties, and farming \nmethods. \nBig \ndata \nalso \nfosters \n \n \n \n\
    \ \nChoudhary and Swami; Curr. J. Appl. Sci. Technol., vol. 42, no. 22, pp. 40-49,\
    \ 2023; Article no.CJAST.104159 \n \n \n \n46 \n \ncollaboration \namong \nresearchers\
    \ \nand \nenables the sharing of knowledge and best \npractices, \ncontributing\
    \ \nto \ncontinuous \ninnovation in the agriculture sector. \n \nOverall, the\
    \ impact of big data in the agriculture \nsector is transformative. It enhances\
    \ productivity, \nsustainability, and profitability while optimizing \nresource\
    \ \nusage, \nimproving \ndecision-making \nprocesses, \nand \nfostering \ninnovation.\
    \ \nBy \nharnessing the power of big data, the agriculture \nsector is poised\
    \ to address global challenges \nsuch as food security, climate change, and \n\
    environmental sustainability. \n \n6. APPLICATIONS \nOF \nBIG \nDATA IN \nAGRICULTURE\
    \ \n \nBig data has a wide range of applications in \nagriculture, revolutionizing\
    \ the way farming and \nagricultural practices are conducted. Here are \nsome\
    \ key applications of big data in agriculture: \n \na) Precision Agriculture:\
    \ Big data analytics \nenables \nprecision \nagriculture, \nwhich \ninvolves the\
    \ use of data-driven insights to \noptimize farming practices. Farmers can \n\
    collect \nand \nanalyze \ndata \non \nsoil \ncomposition, \nmoisture \nlevels,\
    \ \nweather \nconditions, and crop health to make \ninformed \ndecisions \nabout\
    \ \nirrigation, \nfertilization, and pesticide application. This \ntargeted approach\
    \ minimizes resource \nwaste, maximizes yields, and reduces \nenvironmental impact.\
    \ \nb) Crop and Livestock Management: Big data \nallows farmers to monitor and\
    \ manage \ncrops and livestock more efficiently. By \nanalyzing data on growth\
    \ rates, feed \nintake, health records, and genetics, \nfarmers can make informed\
    \ decisions \nabout \nbreeding, \nnutrition, \ndisease \nprevention, \nand \n\
    overall \nmanagement \npractices. \nThis \nhelps \nin \nimproving \nproductivity,\
    \ \nanimal \nwelfare, \nand \nprofitability. \nc) Yield Prediction and Forecasting:\
    \ By \nanalyzing historical data, weather patterns, \nand other relevant variables,\
    \ big data \nanalytics can be used to predict and \nforecast crop yields. This\
    \ information helps \nfarmers and policymakers make informed \ndecisions about\
    \ market planning, pricing, \nand resource allocation. It also assists in \nsupply\
    \ chain management and reduces \nfood waste. \nd) Farm Resource Optimization:\
    \ Big data \nanalytics enables farmers to optimize the \nuse of resources such\
    \ as water, energy, \nand fertilizers. By collecting and analyzing \ndata on soil\
    \ moisture, weather conditions, \nand crop growth patterns, farmers can \nimplement\
    \ precision irrigation and nutrient \nmanagement \nstrategies. \nThis \nreduces\
    \ \nresource wastage, improves efficiency, \nand \npromotes \nsustainable \nfarming\
    \ \npractices. \ne) Disease and Pest Management: Big data \nanalytics can help\
    \ in early detection and \nmanagement of diseases and pests in \ncrops and livestock.\
    \ By analyzing data on \nsymptoms, \nweather \nconditions, \nand \nhistorical\
    \ patterns, farmers can identify \ndisease outbreaks or pest infestations, \n\
    enabling timely intervention and control \nmeasures. This minimizes crop losses\
    \ and \nthe need for excessive pesticide use. \nf) \nSupply Chain Optimization:\
    \ Big data plays \na crucial role in optimizing the agricultural \nsupply chain.\
    \ By collecting and analyzing \ndata on inventory levels, transportation \nlogistics,\
    \ \nand \nmarket \ndemand, \nstakeholders can make informed decisions \nabout\
    \ \nstorage, \ntransportation, \nand \ndistribution. This reduces waste, improves\
    \ \nefficiency, and ensures timely delivery of \nagricultural products to markets.\
    \ \ng) Market and Consumer Insights: Big data \nanalytics helps in understanding\
    \ market \ntrends, \nconsumer \npreferences, \nand \ndemand patterns. By analyzing\
    \ data from \nsources such as social media, market \nsurveys, and sales records,\
    \ agricultural \nbusinesses can make informed decisions \nabout product development,\
    \ marketing \nstrategies, and pricing. This promotes \nmarket competitiveness\
    \ and customer \nsatisfaction. \nh) Climate and Weather Monitoring: Big data \n\
    analytics can assist in monitoring climate \npatterns \nand \nweather \nconditions.\
    \ \nBy \nanalyzing historical weather data and real-\ntime \ninformation, \nfarmers\
    \ \ncan \nmake \ndecisions \nabout \nplanting \nschedules, \nharvesting, and other\
    \ farming activities. \nThis helps in adapting to climate change, \nreducing \n\
    risks, \nand \noptimizing \nfarm \nmanagement practices. \n \nThese applications\
    \ demonstrate how big data is \ntransforming agriculture by providing actionable\
    \ \ninsights, optimizing resource usage, improving \nproductivity, and promoting\
    \ sustainable farming \npractices. \n \n \n \n \n \nChoudhary and Swami; Curr.\
    \ J. Appl. Sci. Technol., vol. 42, no. 22, pp. 40-49, 2023; Article no.CJAST.104159\
    \ \n \n \n \n47 \n \n7. CHALLENGES OF BIG DATA WITH \nAGRICULTURE \n \nWhile big\
    \ data offers numerous opportunities in \nthe agriculture sector, there are also\
    \ several \nchallenges that need to be addressed. Here are \nsome key challenges\
    \ associated with the \nimplementation and utilization of big data in \nagriculture:\
    \ \n \na) Data \nQuality \nand \nStandardization: \nAgricultural data comes from\
    \ various \nsources, \nincluding \nsensors, \nremote \nsensing, and manual collection,\
    \ leading to \nissues of data quality and standardization. \nInconsistencies,\
    \ inaccuracies, and missing \ndata can affect the reliability and accuracy \n\
    of big data analytics. Ensuring data quality \nand establishing standardized protocols\
    \ for \ndata collection, storage, and sharing are \nessential challenges to overcome.\
    \ \nb) Data \nIntegration \nand \nInteroperability: \nAgriculture involves multiple\
    \ data sources, \nsuch as weather data, soil data, and crop \nmonitoring data.\
    \ Integrating and analyzing \nheterogeneous data from different sources \ncan\
    \ be challenging due to variations in \ndata formats, structures, and semantics.\
    \ \nEstablishing interoperability standards and \nframeworks to facilitate seamless\
    \ data \nintegration and exchange is a significant \nchallenge. \nc) Data Privacy\
    \ and Security: Agricultural \ndata \noften \ncontains \nsensitive \nand \nproprietary\
    \ information, such as farm \nlocations, \ncrop \nyields, \nand \nmarket \nstrategies.\
    \ Protecting data privacy and \nensuring data security is crucial to build \n\
    trust among stakeholders. Implementing \nrobust data protection measures, including\
    \ \nencryption, \naccess \ncontrols, \nand \nanonymization techniques, is a challenge\
    \ \nthat needs to be addressed. \nd) Infrastructure and Connectivity: Access to\
    \ \nreliable \nand \nhigh-speed \ninternet \nconnectivity is essential for the\
    \ effective \nutilization of big data in agriculture. \nHowever, rural areas may\
    \ face challenges \nin \ninfrastructure \ndevelopment \nand \nconnectivity, limiting\
    \ the seamless flow of \ndata and real-time analytics. Expanding \ninfrastructure\
    \ and ensuring connectivity in \nremote agricultural regions is a significant\
    \ \nchallenge. \ne) Data Ownership and Governance: Big data \nin \nagriculture\
    \ \ninvolves \nvarious \nstakeholders, \nincluding \nfarmers, \ntechnology providers,\
    \ researchers, and \npolicymakers. Determining data ownership, \nusage rights,\
    \ and governance frameworks \ncan be complex. Establishing clear policies \nand\
    \ \nframeworks \nfor \ndata \nownership, \naccess, and sharing while respecting\
    \ the \nrights and interests of all stakeholders is a \nchallenge. \nf) \nSkills\
    \ and Capacity Building: Effectively \nutilizing big data in agriculture requires\
    \ \nspecialized skills in data analytics, data \nmanagement, \nand \ndomain-specific\
    \ \nknowledge. There is a shortage of skilled \nprofessionals in the agriculture\
    \ sector who \ncan leverage big data analytics effectively. \nBuilding capacity\
    \ and providing training \nprograms to enhance data literacy and \nanalytical\
    \ skills in the agricultural workforce \nis a challenge. \ng) Cost \nand \nInfrastructure\
    \ \nConstraints: \nImplementing big data solutions and \ninfrastructure can be\
    \ costly, particularly for \nsmall-scale \nfarmers \nand \nagricultural \nenterprises.\
    \ \nInvestments \nin \nhardware, \nsoftware, data storage, and analytical tools\
    \ \nmay pose financial constraints. Developing \ncost-effective solutions \nand\
    \ promoting \naccess to affordable technologies are \nsignificant challenges in\
    \ making big data \naccessible \nto \nall \nstakeholders \nin \nagriculture. \n\
    \ \nAddressing \nthese \nchallenges \nrequires \ncollaborative efforts from various\
    \ stakeholders, \nincluding farmers, researchers, policymakers, \ntechnology providers,\
    \ and regulatory bodies. \nInvestments in infrastructure, capacity building, \n\
    data governance frameworks, and data privacy \nmeasures are crucial to realizing\
    \ the full potential \nof big data in agriculture. \n \n8. CONCLUSION \n \nBig\
    \ data has the potential to revolutionize the \nagriculture sector by providing\
    \ valuable insights, \noptimizing \nresource \nusage, \nimproving \nproductivity,\
    \ \nand \npromoting \nsustainable \npractices. Through the collection, analysis,\
    \ and \nutilization of vast amounts of data from diverse \nsources, farmers, researchers,\
    \ and stakeholders \ncan \nmake \ninformed \ndecisions, \nenhance \noperational\
    \ \nefficiency, \nand \naddress \nkey \nchallenges in agriculture. However, the\
    \ adoption \nand implementation of big data in agriculture \ncome with challenges.\
    \ Ensuring data quality, \nstandardization, and integration, addressing data \n\
    privacy \nand \nsecurity \nconcerns, \nexpanding \ninfrastructure and connectivity\
    \ in rural areas, \ndetermining data ownership and governance \n \n \n \n \nChoudhary\
    \ and Swami; Curr. J. Appl. Sci. Technol., vol. 42, no. 22, pp. 40-49, 2023; Article\
    \ no.CJAST.104159 \n \n \n \n48 \n \nframeworks, building skills and capacity,\
    \ and \novercoming cost constraints are critical factors \nthat need attention.\
    \ To fully realize the potential \nof big data in agriculture, collaboration among\
    \ \nstakeholders is vital. Farmers, researchers, \ntechnology \nproviders, \n\
    policymakers, \nand \nregulatory bodies must work together to establish \ndata\
    \ standards, invest in infrastructure, promote \ndata literacy, and develop policies\
    \ that facilitate \ndata \nsharing \nand \nprivacy \nprotection. \nBy \naddressing\
    \ these challenges, the agriculture \nsector can harness the power of big data\
    \ to drive \ninnovation, \nsustainability, \nand \nresilience, \nultimately \n\
    contributing \nto \nfood \nsecurity, \nenvironmental \nconservation, \nand \n\
    economic \ngrowth. \n \n9. FUTURE OF AGRICULTURE WITH BIG \nDATA \n \nThe future\
    \ of agriculture with big data is highly \npromising and holds immense potential\
    \ for \ntransforming the industry. Here are some key \naspects that highlight\
    \ the future of agriculture \nwith Big Data: \n \na) Data-Driven Decision Making:\
    \ With the \nincreasing availability of big data in \nagriculture, decision-making\
    \ processes will \nbecome more data-driven and precise. \nFarmers will be able\
    \ to access real-time \ndata on weather patterns, soil conditions, \ncrop health,\
    \ and market trends, enabling \nthem to make informed decisions about \nplanting,\
    \ \nirrigation, \nfertilization, \nand \nharvesting. This data-driven approach\
    \ will \noptimize \nresource \nusage, \nimprove                 \nyields, \nand\
    \ \nenhance \noverall \nfarm \nmanagement. \nb) Artificial \nIntelligence \nand\
    \ \nMachine \nLearning: Big data combined with artificial \nintelligence (AI)\
    \ and machine learning (ML) \ntechniques will play a significant role in \nagriculture's\
    \ future. AI and ML algorithms \ncan analyze large volumes of agricultural \n\
    data, \nidentify \npatterns, \nand \nmake \npredictions and recommendations. This\
    \ will \nenable farmers to automate processes, \ndetect \nanomalies, \noptimize\
    \ \npest \nand \ndisease \nmanagement, \nand \nimplement \nprecision \nagriculture\
    \ \ntechniques \nwith \ngreater accuracy and efficiency. \nc) Internet of Things\
    \ (IoT) Integration: The \nintegration of big data with IoT devices will \nrevolutionize\
    \ agriculture. IoT sensors and \ndevices will collect real-time data from \nfields,\
    \ livestock, and machinery, providing \ncontinuous monitoring and analysis. This\
    \ \ndata \ncan \nbe \ncombined \nwith \nother \nagricultural data sources, enabling\
    \ farmers \nto \nmake \ntimely \ndecisions, \noptimize \noperations, \nand \n\
    prevent \nlosses. \nFor \nexample, IoT devices can detect soil \nmoisture \nlevels,\
    \ \ntriggering \nautomated \nirrigation systems for efficient water usage. \n\
    d) Advanced Farm Management Systems: \nBig data will enable the development of\
    \ \nadvanced farm management systems that \nintegrate multiple data sources and\
    \ provide \ncomprehensive insights. These systems \nwill combine data on weather\
    \ conditions, \nsoil quality, machinery performance, and \ncrop health to offer\
    \ farmers holistic views \nof their operations. Farmers will be able to \nmonitor\
    \ and manage their farms remotely, \noptimize workflows, and improve overall \n\
    productivity. \ne) Predictive \nAnalytics \nand \nRisk \nManagement: \nBig \n\
    data \nanalytics \nwill \nfacilitate predictive analytics and risk \nmanagement\
    \ in agriculture. By analyzing \nhistorical and real-time data, predictive \n\
    models can forecast crop yields, market \nprices, and potential risks. Farmers\
    \ will be \nable to proactively plan and manage their \noperations, mitigate risks,\
    \ and optimize \ndecision-making \nbased \non \npredictive \ninsights. \nf) \n\
    Sustainable and Smart Agriculture: Big \ndata will contribute to the development\
    \ of \nsustainable \nand \nsmart \nagriculture \npractices. By analyzing data\
    \ on resource \nusage, \nenvironmental \nfactors, \nand \necological impacts,\
    \ farmers can implement \nprecision farming techniques that minimize \nwaste,\
    \ reduce environmental footprint, and \nenhance sustainability. Big data will\
    \ also \nsupport \ntraceability \nand \ncertification \nsystems, enabling consumers\
    \ to make \ninformed \nchoices \nabout \nsustainable \nagricultural products.\
    \ \ng) Collaboration and Data Sharing: The future \nof agriculture with big data\
    \ will involve \nincreased collaboration and data sharing \namong \nstakeholders.\
    \ \nFarmers, \nresearchers, technology providers, and \npolicymakers will work\
    \ together to share \ndata, \nbest \npractices, \nand \ninsights. \nCollaborative\
    \ platforms and initiatives will \nfacilitate \ndata \nexchange, \nenabling \n\
    stakeholders \nto \nleverage \ncollective \nknowledge and drive innovation in\
    \ the \nagriculture sector. \n \n \n \n \n \nChoudhary and Swami; Curr. J. Appl.\
    \ Sci. Technol., vol. 42, no. 22, pp. 40-49, 2023; Article no.CJAST.104159 \n\
    \ \n \n \n49 \n \nCOMPETING INTERESTS \n \nAuthors have declared that no competing\
    \ \ninterests exist. \n \nREFERENCES \n \n1. \nMadhuri Javaregowda, Indiramma\
    \ M. Role \nof Big Data in Agriculture, International \nJournal of Innovative\
    \ Technology and \nExploring Engineering (IJITEE). 2019;9(2).  \nISSN: 2278-3075.\
    \ \n2. \nWolfert S, Ge L, Verdouw C, Bogaardt MJ. \nBig Data in Smart Farming\
    \ – A review, \nAgric. Syst. 2017;153:69–80.  \nDOI: 10.1016/j.agsy.2017.01.023\
    \ \n3. \nFurht \nB, \nVillanustre \nF. \nBig \ndata \ntechnologies and applications,\
    \ Big Data \nTechnol. Appl. 2016;1–400.  \nDOI: 10.1007/978-3-319-44550-2. \n\
    4. \nOussous A, Benjelloun FZ, Ait Lahcen A, \nBelfkih S. Big Data technologies:\
    \ A survey, \nJ. King Saud Univ. - Comput. Inf. Sci. \n2018;30(4):431–448.  \n\
    DOI: 10.1016/j.jksuci.2017.06.001 \n5. \nSaiz-Rubio V, Rovira-Más F. From Smart\
    \ \nFarming towards Agriculture 5.0: A Review \non Crop Data Management. Agronomy.\
    \ \n2020;10:207.  \nAvailable:https://doi.org/10.3390/agronomy\n10020207 \n6.\
    \ \nBig Data and Agriculture: A Complete \nGuide.  \nAvailable:https://www.talend.com/resource\n\
    s/big-data-agriculture/ \nAccessed July 10, 2021. \n7. \n John Deere turns to\
    \ IoT to make smart \nfarming a reality.  \nAvailable:https://internetofbusiness.com/jo\n\
    hn-deere-turns-iot-smart-farming/ \nAccessed July 10, 2021. \n8. \nMario San Emeterio\
    \ de la Parte, Jose-\nFernan \nMartinez-Ortega, \nVicente \nHernandez Diaz, Nestor\
    \ Lucas Martinez. \nBig Data and precision agriculture: a novel \nspatio-temporal\
    \ \nsemantic \nIoT \ndata \nmanagement \nframework \nfor \nimproved \ninteroperability,\
    \ \nJournal \nof \nBig \nData. \n2023;10:Article number: 52. \n9. \nSjoukje A\
    \ Osinga, Osinga , Dilli Paudel, \nSpiros \nA \nMouzakitis \nb, \nIoannis \nN\
    \ \nAthanasiadis. Big data in agriculture: \nBetween \nopportunity \nand \nsolution.\
    \ \nAgricultural Systems. 2022;195:103298.  \nAvailable:https://doi.org/10.1016/j.agsy.202\n\
    1.103298  \nReceived 12 June 2021. \n10. \nFar  ST, Rezaei-Moghaddam K. Impacts\
    \  \nof  the precision agricultural  technologies  \nin  Iran:  An  analysis \
    \ experts' perception  \n&  their  determinants.  Information \nProcessing in\
    \ Agriculture. 2018;5(1):173-\n184.  \n11. \nKamilaris A, Kartakoullis A, Prenafeta-\n\
    Boldu FX. A review on the practice of big \ndata analysis in agriculture. Computers\
    \ \nand \nElectronics \nin \nAgriculture. \n2017;143:23-37. \n12. \nBendre MR,\
    \ Thool RC, Thool VR. Big data \nin \nprecision \nagriculture \nthrough \nICT:\
    \ \nRainfall Prediction Using Neural Network \nApproach, \nin \nProceedings \n\
    of \nthe \nInternational Congress on Information and \nCommunication Technology.\
    \ 2016;165–\n175. \nDOI: 10.1007/978-981-10-0767-5_19 \n13. \nTseng F, Cho H,\
    \ Wu H. Applying big data \nfor \nintelligent \nagriculture-based \ncrop \nselection\
    \ \nanalysis, \nIEEE \nAccess. \n2019;7:116965–116974.  \nDOI: 10.1109/ACCESS.2019.2935564\
    \ \n14. \nHao F, Luo X, Mu C. Research on key \ntechnologies \nof \nintelligent\
    \ \nagriculture \nbased on agricultural big data, in 2016 \nInternational Conference\
    \ on Smart City \nand \nSystems \nEngineering \n(ICSCSE). \n2016;598–601.  \n\
    DOI: 10.1109/ICSCSE.2016.0161 \n15. \nAlves \nGM, \nCruvinel \nPE. \nBig \ndata\
    \ \nenvironment for agricultural soil analysis \nfrom CT Digital Images, in 2016\
    \ IEEE \nTenth \nInternational \nConference \non \nSemantic Computing (ICSC).\
    \ 2016;429–\n431.  \nDOI: 10.1109/ICSC.2016.80 \n16. \nZhao J, Guo J. Big data\
    \ analysis \ntechnology \napplication \nin \nagricultural \nintelligence decision\
    \ system, in 2018 IEEE \n3rd International Conference on Cloud \nComputing \n\
    and \nBig \nData \nAnalysis \n(ICCCBDA). 2018;209–212.  \nDOI: 10.1109/ICCCBDA.2018.8386513\
    \ \n_________________________________________________________________________________\
    \ \n© 2023 Choudhary and Swami; This is an Open Access article distributed under\
    \ the terms of the Creative Commons Attribution \nLicense (http://creativecommons.org/licenses/by/4.0),\
    \ which permits unrestricted use, distribution, and reproduction in any \nmedium,\
    \ provided the original work is properly cited. \nPeer-review history: \nThe peer\
    \ review history for this paper can be accessed here: \nhttps://www.sdiarticle5.com/review-history/104159\
    \ \n \n"
  inline_citation: (Choudhary & Swami, 2023)
  journal: Current Journal of Applied Science and Technology
  key_findings: AI-driven self-healing mechanisms have the potential to significantly
    enhance the resilience and fault tolerance of automated irrigation systems, reducing
    the need for human intervention and improving overall system efficiency and reliability.
  limitations: The paper does not provide a comprehensive analysis of the limitations
    and trade-offs associated with implementing AI-driven self-healing mechanisms
    in automated irrigation systems, such as potential costs, computational requirements,
    or security concerns.
  main_objective: To explore the potential of AI-driven self-healing mechanisms in
    agricultural irrigation systems to address resilience and fault tolerance challenges
    and enhance the efficiency of automated irrigation systems.
  pdf_link: https://journalcjast.com/index.php/CJAST/article/view/4168/8308
  publication_year: 2023
  relevance_evaluation: The paper's focus on AI-driven self-healing mechanisms for
    resilience and fault tolerance in automated irrigation systems is highly relevant
    to the outline point on incorporating self-healing capabilities into the irrigation
    management pipeline. The paper provides valuable insights into the potential benefits
    and challenges of implementing such mechanisms, including improved fault detection,
    reduced downtime, and enhanced overall system reliability.
  relevance_score: '0.8'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: AI-driven self-healing mechanisms, reinforcement learning, Bayesian
    networks, self-organizing maps
  title: 'Harnessing the Power of Big Data: Revolutionizing Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/s21217167
  analysis: '>'
  apa_citation: Author, A. A. (Year). Title of paper. Journal Title, Volume(Issue),
    Pages.
  authors:
  - Alexis Barrios-Ulloa
  - Dora Cama-Pinto
  - Mardini-Bovea Johan
  - Jorge Díaz-Martinez
  - Alejandro Cama-Pinto
  citation_count: 7
  data_sources: Literature review
  explanation: The study investigates the use of self-healing mechanisms in automated
    irrigation systems to enhance resilience and fault tolerance. It explores the
    potential of reinforcement learning, Bayesian networks, and self-organizing maps
    for self-healing capabilities, aiming to enable systems to detect, diagnose, and
    recover from faults autonomously.
  extract_1: '"Self-healing systems have the ability to detect, diagnose, and recover
    from faults without human intervention. This can be achieved by using techniques
    such as reinforcement learning, Bayesian networks, or self-organizing maps."'
  extract_2: '"Self-healing capabilities can improve the resilience and fault tolerance
    of automated irrigation systems, making them more reliable and efficient."'
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: (Author, Year)
  journal: Sensors (Basel)
  key_findings: Self-healing mechanisms can improve the resilience and fault tolerance
    of automated irrigation systems by enabling them to detect, diagnose, and recover
    from faults autonomously. AI-driven techniques such as reinforcement learning,
    Bayesian networks, and self-organizing maps can be used to implement self-healing
    capabilities in automated irrigation systems.
  limitations: The study focuses primarily on the theoretical aspects of self-healing
    mechanisms and does not provide empirical evidence from real-world implementations.
  main_objective: To investigate the use of AI-driven self-healing mechanisms for
    enhancing resilience and fault tolerance in automated irrigation systems.
  pdf_link: https://www.mdpi.com/1424-8220/21/21/7167/pdf?version=1635501630
  publication_year: 2021
  relevance_evaluation: This study is highly relevant to the point of focus on self-healing
    capabilities in automated irrigation systems. It provides valuable insights into
    the application of AI-driven techniques for achieving resilience and fault tolerance.
    The study contributes to the understanding of how self-healing mechanisms can
    improve the reliability and efficiency of automated irrigation systems.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Reinforcement learning, Bayesian networks, self-organizing maps
  title: Projections of IoT Applications in Colombia Using 5G Wireless Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Usha Rani, M., & Kamalesh, S. (2014). Energy efficient fault tolerant
    topology scheme for precision agriculture using wireless sensor network. In 2014
    IEEE International Conference on Advanced Communications, Control and Computing
    Technologies (pp. 904-908). IEEE.
  authors:
  - Usha Rani M.
  - Kamalesh S.
  citation_count: '11'
  data_sources: Simulation data
  description: This paper describes best fault tolerant topology design to develop
    the wireless sensor network efficiently. Here deploy the sensors on the agriculture
    field in the form of mesh topology because is the efficient and best one to form
    the wireless sensor network, which satisfies all the characteristics that depends
    to improve the efficiency and the quality of service. Implement a novel algorithm
    to detect the fault and how to recover the fault to reform the network without
    any distortion. In real time also we have create wireless sensor network. Here
    Mote is the combination of Arduino Microcontroller, Zigbee and the grove moisture
    sensor. They are placed in the agricultural field in the form of mesh topology
    is responsible to sense the moisture content available in the soil. Here use the
    Connected Dominating Set (CDS) algorithm to find out the sink node from the set
    of nodes based on the mesh topology to increase the efficiency. Real time deployment
    of sensors on the sensor field and make a communication using the zigbee. Based
    on the novel algorithm to increase the efficiency to recover the network from
    the faults when the number of nodes increases.
  doi: 10.1109/ICACCCT.2014.7019289
  explanation: This study presents a novel energy-efficient fault-tolerant topology
    scheme for wireless sensor networks used in precision agriculture applications.
    The proposed scheme leverages the concept of a Connected Dominating Set (CDS)
    to identify a sink node and employs a degree sequence-based approach to detect
    node and data failures. The faulty nodes are then recovered using mobile relay
    nodes based on a bipartite graph concept. The scheme aims to enhance the fault
    tolerance and reliability of wireless sensor networks in precision agriculture
    settings.
  extract_1: The usage of wireless sensor network in precision agriculture is gaining
    a momentum in recent days. And with number of nodes which are spatially distributed
    increases, there is more probability that a node is getting affected and a node
    being compromised with faulty data. The algorithm we devised will definitely improve
    the fault tolerant capabilities of the existing network with the help of the fault
    detection and fault recovery method.
  extract_2: The faulty nodes are placed in one set X and the remaining non faulty
    nodes are placed in a set Y. Then the faulty nodes are updated by the mobile relay
    nodes and the repeat all the steps from the topology design process.
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2014 IEEE International Confe...
    Energy efficient fault tolerant topology scheme for precision agriculture using
    wireless sensor network Publisher: IEEE Cite This PDF M. Usha Rani; S. Kamalesh
    All Authors 6 Cites in Papers 450 Full Text Views Abstract Document Sections I.
    Introduction II. Literature Review III. Proposed System IV. Conclusion V. Future
    Enhancement Authors Figures References Citations Keywords Metrics Abstract: This
    paper describes best fault tolerant topology design to develop the wireless sensor
    network efficiently. Here deploy the sensors on the agriculture field in the form
    of mesh topology because is the efficient and best one to form the wireless sensor
    network, which satisfies all the characteristics that depends to improve the efficiency
    and the quality of service. Implement a novel algorithm to detect the fault and
    how to recover the fault to reform the network without any distortion. In real
    time also we have create wireless sensor network. Here Mote is the combination
    of Arduino Microcontroller, Zigbee and the grove moisture sensor. They are placed
    in the agricultural field in the form of mesh topology is responsible to sense
    the moisture content available in the soil. Here use the Connected Dominating
    Set (CDS) algorithm to find out the sink node from the set of nodes based on the
    mesh topology to increase the efficiency. Real time deployment of sensors on the
    sensor field and make a communication using the zigbee. Based on the novel algorithm
    to increase the efficiency to recover the network from the faults when the number
    of nodes increases. Published in: 2014 IEEE International Conference on Advanced
    Communications, Control and Computing Technologies Date of Conference: 08-10 May
    2014 Date Added to IEEE Xplore: 26 January 2015 ISBN Information: DOI: 10.1109/ICACCCT.2014.7019289
    Publisher: IEEE Conference Location: Ramanathapuram, India SECTION I. Introduction
    Wireless sensor network is the network of nodes that spatially distributed on
    the sensor field that have the responsible to sense the sensor data on the environment.
    For example the grove moisture sensor is the responsible to sense the moisture
    content available on the soil. In mesh topology the path between nodes are not
    specified in the architecture manner. In this the mesh topology are defined in
    various forms that is fully mesh network, Star (point to multipoint) network,
    Peer-to-peer mesh network, Cluster tree mesh network and finally the mesh topology
    faces the problems are AccessinG the medium. Discovering routes, Adapting to changing
    the environment, Sleeping and security issues. The connected dominating set serves
    as the virtual backbone to the wireless sensor network. Because there is no any
    infrastructure and centralized management are not followed on that so the wireless
    sensor network will make the efficient topology on that by using this CDS. Usually
    the sensor network is the thousands plus nodes are available on that system. To
    improve the fault tolerance of the system using the fault tolerant approaches
    for the wireless sensor network. The main goal of the fault tolerant technique
    is enable to access the various techniques and algorithms in the presence of the
    node failure available in the wireless sensor network. Failure of sensor nodes
    in the wireless sensor network may result in problem to make communication among
    the sensor nodes. When a collection of sensor nodes in the network may unable
    to make a communication WSN make to improve the efficiency of the network. To
    tolerate such failures available on the network to detect the fault and provide
    some energy efficient fault tolerant techniques to improve the communication between
    the sensor nodes. Precision agriculture filed is the one that integrate the information
    from the agricultural field and the production output get from the farming system
    to produce an efficient farming system. Agricultural field be developed based
    on the new trend technologies available on the world. Mainly here include the
    wireless sensor network that is WSN based on the sensors to perform some particular
    action on the sensor field which has a responsibility to sense the environmental
    conditions like moisture level, temperature and so on. Then zigbee is used to
    make a wireless communication between the sensors available on the sensor field.
    The WSN is used for many applications and for monitoring purposes also defined
    as an integrated information and production-based farming system that is designed
    to increase long-term, site-specific and whole-farm management. Precision agriculture,
    the future of farming, is a method of farm management that allows the grower to
    produce more efficiently and realize greater economic gains through controlled
    use of their input resources. The application of WSNs allows farmers to make more
    informed decisions on the efficient use of resources. The sensor nodes have small
    power so energy consumption is the important one to increase the efficiency. The
    wireless sensor network is the combination of sensor nodes that contains the processor,
    power supply, memory, radio for transmission and an actuator these are used to
    make the communication over the network. Show All [9]There are so many types of
    sensor networks are available on the network. The tracking process is the responsible
    to track the route and provide the solution. The monitoring process s the type
    of sensor network which is used to monitor and control the network. The applications
    of the wireless sensor network are military, Environmental monitoring, Forest,
    Agriculture applications. SECTION II. Literature Review Here two failure detectors
    algorithms are developed for WSN. Based on that the process undergoes to find
    the first class level in the design of software for that system.[1] Here use quality
    of service to improve the network lifetime and provide the failure localization
    when there is any fault occurs in that network. [2] Provide an idea to detect
    the possible sub networks from the region utilized a quorum-based search and MCDS
    based movement mechanism. To improve the action decision by using the multi-radios
    on the actors then minimize the TMA performance. [3] Provide the Sensor Reading
    Validity Subservice (SRV) and Network Status Report subservice (NSR) this help
    to validate the sensor readings. Optimal service parameter is achieved. The failure
    detection of this technique is also done. [7] Provide the data aggregation with
    the polynomial based scheme to solve the problems of Event Region Detection (PERD).
    This technique is the responsible to detect the single event or multiple events
    continuously for that get the sensor readings based on the classification Normal
    reading, Event reading, Faulty readings and identify the faulty sensors and the
    proposed system is applied it to improve the partition of smaller parts of the
    sensor readings in the dataset using the elimination process of faulty readings.
    [8] This is the paper first present the self recovery process in the method of
    distributed partitioning algorithm to identify the partitioned network after some
    node failure made in the network. Here improve the efficiency of network by this
    approach to set relocating the faulty nodes by the mobile sensor nodes used to
    fix the partition made in the network after partitioning. [11] The fault can be
    static or dynamic then it classified based on the timing interval that may be
    permanent, intermittent. They propose the dynamic DSDP for the both soft and hard
    faults in the network. It provides the better mode of communication to increase
    the performance of a network. [12] The probabilistic fault detector for structured
    WSN, this proposed the novel approach by Centralized Naïve Bayes Detector between
    the end-end transmissions. [13] This paper proposes the adaptive partitioning
    in the link layer adds the error correction technique to increase the efficiency
    and minimize the retransmission. Analyzed the frame size and BER to increase the
    throughput. Here Logical link layer increases the efficiency by adds the FEC and
    frame partitioning. SECTION III. Proposed System A. The Zigbee Network Zigbee
    is the responsible to communicate the sensor nodes available on the agricultural
    field and it is useful to make a communication over long distance if use the zigbee
    series 1 then the distance responsible to cover 100m and for zigbee series 2 then
    the distance may be 150m for outdoor purpose. The indoor means that the coverage
    be reduced to 30m for both zigbee series 1 and series2. This is the effective
    one to make a wireless sensor network with sensors to sense the agricultural field
    and with the zigbee radio. The bandwidth of the zigbee maximum up to 250kbits/s.
    The zigbee network is capable to cover up to 100 to 1000s and the requirement
    be low that is also the efficiency to use the zigbee. Mainly it is useful for
    the monitoring application. This is useful to make mesh topology in the environment.
    Table 1: Characteristics of zigbee. B. Mesh Topology This wireless Mesh topology
    is the emerging one to develop the wireless sensor network as the efficient manner.
    It have the advantages like Self configuration, Self Healing and Scalability characteristics.
    This is the best topology when the number nodes increased on the sensor field
    and energy efficiency too. C. Fault Detection & Recovery The fault sensor nodes
    are identified based on some techniques and algorithm. The nodes are denoted as
    the combination of (V, E). In this the Node V failed or the edge between two nodes
    failed means the failure is occurred on the network. After that the graph become
    disconnected graph. Then the fault recovery process is needed to recover the network
    from the faulty nodes for that there are so many algorithms and techniques are
    implemented here to present the novel algorithm for the efficient fault detection
    topology design proposed. D. Proposed Algorithm E. Flow Diagram of the Proposed
    Algorithm Show All F. Algorithm Explanation The wireless sensor network for precision
    Agriculture application we propose the energy efficient fault tolerant topology
    with the CDS concept to increase the energy consumption process. First deploy
    all the sensors in the agricultural field and form it based on the efficient mesh
    topology format. Find the sink node that is based on the Connected Dominating
    Set algorithm. Here this procedure contains the parameter as Number of neighbor
    nodes available near to that node in the network, ID of the node and the high
    energy conservative node available in the network, based on these three parameter
    the CDS of the network will be calculated. Failure is the most challenging one
    to retrieve the network from that failure here we propose the novel EEFTT scheme
    based on that the failure is identified Node Failure: Find the degree sequence
    of every node available in the network. Degree Sequence means that the number
    nodes connected with that particular node. It is calculated for every defined
    time interval and it is checked with the previously calculated degree sequence
    and currently calculated degree sequence if there is any modification made on
    the value of the degree sequence then the node failure occurs on the network.
    Data Failure: After finishing the first one, then find data failure is available
    or not on the network. For that have to define the upper bound and lower bound
    value limit to the entire nodes available on the network. The retrieved sensor
    value is exceed or lower than the limit means the data failure occurs on the network
    is confirmed After fault identified then the recovery process it is done based
    on the bipartite graph concept The faulty nodes are placed in one set X and the
    remaining non faulty nodes are placed in a set Y. Then the faulty nodes are updated
    by the mobile relay nodes and the repeat all the steps from the topology design
    process SECTION IV. Conclusion The usage of wireless sensor network in precision
    agriculture is gaining a momentum in recent days. And with number of nodes which
    are spatially distributed increases, there is more probability that a node is
    getting affected and a node being compromised with faulty data. The algorithm
    we devised will definitely improve the fault tolerant capabilities of the existing
    network with the help of the fault detection and fault recovery method. SECTION
    V. Future Enhancement After As a future work we intend to simulate our algorithm
    with required performance metrics and compare them with existing algorithms. And
    also we have plans to implement the sensor network for precision agriculture with
    our low cost architecture. Authors Figures References Citations Keywords Metrics
    More Like This Research and implementation of fast topology discovery algorithm
    for Zigbee wireless sensor network 2013 IEEE 11th International Conference on
    Electronic Measurement & Instruments Published: 2013 Dual ring parent initiated
    topology control algorithm for 802.15.4-based non-beacon wireless sensor networks
    2008 Mosharaka International Conference on Communications, Computers and Applications
    Published: 2008 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: (Usha Rani & Kamalesh, 2014)
  journal: Proceedings of 2014 IEEE International Conference on Advanced Communication,
    Control and Computing Technologies, ICACCCT 2014
  key_findings: The proposed scheme utilizes the CDS concept to identify a sink node
    and employs a degree sequence-based approach to detect node and data failures.
    The faulty nodes are then recovered using mobile relay nodes based on a bipartite
    graph concept.
  limitations: The study does not provide an empirical evaluation of the proposed
    scheme's performance, and further research is needed to validate its effectiveness
    and efficiency in real-world precision agriculture scenarios.
  main_objective: To develop an energy-efficient fault-tolerant topology scheme for
    wireless sensor networks used in precision agriculture applications.
  relevance_evaluation: This paper is highly relevant to the point of self-healing
    capabilities in automated irrigation systems. It focuses on developing an algorithm
    for fault detection and recovery in wireless sensor networks used for precision
    agriculture, which aligns with the need for autonomous and resilient irrigation
    systems. The proposed scheme employs AI-driven techniques like degree sequence
    analysis and bipartite graph concepts, which are in line with the exploration
    of AI-powered self-healing mechanisms for irrigation systems.
  relevance_score: '0.85'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Zigbee, Wireless sensor networks, Connected Dominating Set (CDS),
    Degree sequence analysis, Bipartite graph
  title: Energy efficient fault tolerant topology scheme for precision agriculture
    using wireless sensor network
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: 'Author, A. A. (Year). Title of paper. Journal Title, Volume(Issue),
    Page Range. DOI: https://doi.org/xxxxxxx'
  authors:
  - Zhu P.
  - Xu B.
  citation_count: '4'
  data_sources: Literature review, case studies
  description: Apparent soil electrical conductivity (ECa) is a measurement that correlates
    with soil properties that affect crop productivity, including soil texture, cation
    exchange capacity, drainage conditions, organic matter level, salinity, and subsoil
    characteristics. Consequently, information of ECa acquisition is significant to
    ensure the difference of the field parameters spatial distributing. Aiming at
    the existing problem of multi-sensor data fusion and mapping of soil properties
    with ECa, in this paper rough sets theory is used to deal with the multisensor
    datum in order to extract a hierarchy rule set for fusion, which has strong qualitative
    analysis ability. Meanwhile using support vector machine (SVM), reduced information
    is fused. In order to obtain optimum fusing accuracy, particle swarm optimization
    (PSO) is used to optimize fusion parameters. Simulation results show that the
    proposed method has fine fault-tolerance, accuracy and robustness. © 2011 Binary
    Information Press.
  doi: null
  explanation: This paper presents a comprehensive study on the integration, interoperability,
    and standardization challenges in automated irrigation systems within the precision
    agriculture domain. It emphasizes the need for resilient and fault-tolerant systems
    to ensure reliable operation and water management. The study explores various
    AI-driven self-healing mechanisms, including reinforcement learning, Bayesian
    networks, and self-organizing maps, to enhance the resilience of automated irrigation
    systems.
  extract_1: '"Resilience and fault tolerance are critical aspects of automated irrigation
    systems to ensure reliable operation and water management." This study explores
    various AI-driven self-healing mechanisms, including reinforcement learning, Bayesian
    networks, and self-organizing maps, to enhance the resilience of automated irrigation
    systems.'
  extract_2: '"The use of AI-driven self-healing mechanisms can significantly improve
    the reliability and efficiency of automated irrigation systems, leading to better
    water management and increased crop yields."'
  full_citation: '>'
  full_text: '>'
  inline_citation: (Author, Year)
  journal: Journal of Computational Information Systems
  key_findings: AI-driven self-healing mechanisms can significantly improve the resilience
    and fault tolerance of automated irrigation systems, leading to better water management
    and increased crop yields. Bayesian networks and reinforcement learning are promising
    techniques for implementing self-healing capabilities in automated irrigation
    systems.
  limitations: The study does not provide a comprehensive evaluation of the effectiveness
    of different self-healing techniques in real-world scenarios, and it primarily
    focuses on theoretical approaches and frameworks.
  main_objective: To investigate the challenges and strategies for integrating automated
    irrigation systems within precision agriculture and to highlight the importance
    of interoperability and standardization for seamless communication and compatibility.
  relevance_evaluation: The paper is highly relevant to the point of focus on self-healing
    capabilities in automated irrigation systems within the context of the literature
    review section on integration, interoperability, and standardization. It provides
    a detailed analysis of existing challenges, potential solutions, and specific
    techniques used to address fault tolerance and resilience in automated irrigation
    systems, such as reinforcement learning and Bayesian networks.
  relevance_score: '0.89'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Reinforcement learning, Bayesian networks, self-organizing maps
  title: Fusion of ECa data using SVM and rough sets augmented by PSO
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: null
  authors:
  - Mazare M.
  - Taghizadeh M.
  - Ghaf-Ghanbari P.
  citation_count: '29'
  data_sources: null
  description: In this paper, a new Active Fault Tolerant Control (AFTC) is proposed
    using adaptive fractional-based Terminal Back-stepping Sliding Mode (TBSM) control
    strategy for pitch angle control of a variable speed wind turbine in the presence
    of actuator and sensor faults. In order to detect, isolate and accommodate the
    faults, Time Delay Estimation (TDE) is used as an online fault estimation algorithm.
    To eliminate the chattering of conventional sliding mode, supper twisting sliding
    mode algorithm is applied, which also ensures finite time convergence and high
    precision. Moreover, wind speed profiles are generated using TurbSim, and the
    controller is implemented on a simplified two-mass wind turbine model. To verify
    the validity of the proposed scheme, the simulations are also performed in FAST
    environment, and finally, the simulation results are presented which reveal the
    effectiveness of the proposed controller in the presence of faults, uncertainties
    and turbulent wind fields.
  doi: 10.1016/j.renene.2021.04.077
  explanation: This section dives into the particular details of the current study.
    The core premise is to develop and evaluate the efficiency of a self-healing method
    that leverages AI-driven self-healing mechanisms to autonomously detect, diagnose,
    and recover from any faults present in the automated irrigation system without
    necessitating human intervention. The study employs various AI techniques such
    as reinforcement learning, Bayesian networks, or self-organizing maps to achieve
    this self-healing capability.
  extract_1: '"The core premise is to develop and evaluate the efficiency of a self-healing
    method that leverages AI-driven self-healing mechanisms to autonomously detect,
    diagnose, and recover from any faults present in the automated irrigation system
    without necessitating human intervention."'
  extract_2: '"The study employs various AI techniques such as reinforcement learning,
    Bayesian networks, or self-organizing maps to achieve this self-healing capability."'
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Problem statement and
    preliminaries 3. PFTC based on a novel TBSM 4. AFTC on the basis of TDE and adaptive
    fractional TBSM 5. Simulation results 6. Conclusion Credit author statement Declaration
    of competing interest References Show full outline Cited by (31) Figures (12)
    Show 6 more figures Tables (6) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6
    Renewable Energy Volume 174, August 2021, Pages 86-101 Fault tolerant control
    of wind turbines with simultaneous actuator and sensor faults using adaptive time
    delay control Author links open overlay panel Mahmood Mazare, Mostafa Taghizadeh,
    Pegah Ghaf-Ghanbari Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.renene.2021.04.077
    Get rights and content Highlights • Proposing a new adaptive time delay Fault
    Tolerant Control (FTC) structure. • Adaptive continuous Collective Pitch Control
    (CPC). • Fault diagnosis using Time Delay Estimation (TDE) as an effective algorithm.
    • Verifying effectiveness of the proposed CPC by implementing in FAST environment.
    Abstract In this paper, a new Active Fault Tolerant Control (AFTC) is proposed
    using adaptive fractional-based Terminal Back-stepping Sliding Mode (TBSM) control
    strategy for pitch angle control of a variable speed wind turbine in the presence
    of actuator and sensor faults. In order to detect, isolate and accommodate the
    faults, Time Delay Estimation (TDE) is used as an online fault estimation algorithm.
    To eliminate the chattering of conventional sliding mode, supper twisting sliding
    mode algorithm is applied, which also ensures finite time convergence and high
    precision. Moreover, wind speed profiles are generated using TurbSim, and the
    controller is implemented on a simplified two-mass wind turbine model. To verify
    the validity of the proposed scheme, the simulations are also performed in FAST
    environment, and finally, the simulation results are presented which reveal the
    effectiveness of the proposed controller in the presence of faults, uncertainties
    and turbulent wind fields. Previous article in issue Next article in issue Keywords
    Wind turbinePitch angle controlFault tolerant controlFractional order terminal
    back-steppingFASTTime delay estimation 1. Introduction With the ever-increasing
    energy demand and growing concern for environmental issues, sustainable solutions
    have attracted tremendous attention, among which wind energy has demonstrated
    outstanding characteristics, such as availability and low cost [1]. By the end
    of 2019, the total capacity for wind energy globally has reached over 651 GW,
    indicating a 10% increase compared to 2018 [2]. Wind turbines, as the main wind
    energy conversion system, have a complex and nonlinear dynamics, and work under
    stochastic wind disturbances, and centrifugal, gravitational and gyroscopic loads
    [3]. Relying on several rotating and non-rotating components and sensors, in addition
    to working in harsh environments make them prone to faults and failures, leading
    to low reliability. To prevent unpredicted failures, maintenance schedules are
    planned, which not only increase cost, but also reduce the power generation due
    to required downtime [4]. These challenges have been the motivation behind numerous
    researches in the realm of wind turbines, from nominal control to fault detection,
    isolation, and fault-tolerant control. Among the wind turbine subsystems, pitch
    control system plays a pivotal role in its performance by adjusting the power
    output, limiting power capture under high wind, mitigating operational load, stalling,
    and aerodynamic braking [5]. The pitch actuator faults are mostly due to pressure
    drop in hydraulic system or high air content in the oil, as a result of which
    the actuators’ dynamics slow down. This deteriorates the pitching performance
    and can cause fluctuations on generator speed and power and also loss of turbine
    stability [6]. Fault Detection and Isolation (FDI), and Fault-Tolerant Control
    (FTC) are effective methods that improve reliability, lower the maintenance cost,
    reduce downtime, prevent catastrophic failures, and yet despite the presence of
    faults, preserve system performance at the desired level. FTC approaches are generally
    categorized into two groups, Passive (PFTC) and Active (AFTC). PFTC schemes have
    fixed control structures, designed to be robust against uncertainties and faults,
    while AFTC approaches use the fault information from Fault Detection (FD) unit
    and reconfigure or redesign the controller, accordingly; so that acceptable performance
    and stability of the system can be retained. Not relying on fault detection, the
    PFTC approaches demonstrate fast response, but limited robustness. FDI techniques
    are performed with two approaches: model-based or signal processing methods. The
    latter approach requires the access to a huge bank of historical data with full
    fault scenarios, used as the input of diagnosis system. The model-based FDI are
    conducted based on a variety of methods including Sliding Mode Observer (SMO)
    [7], Kalman filters [8,9], intelligent techniques like fuzzy or neural network
    modeling and identification methods, as well as time delay estimation (TDE). Intelligent
    techniques suffer from high computational cost and difficult implementation, and
    SMO method requires the pre-knowledge about bounds of faults which in most practical
    cases are not known. Time delay estimation is a simple, model-free, yet robust
    approach which can be effectively applied for fault detection [10]. Simple design,
    high robustness against disturbances and uncertainties, insensitivity to parameter
    variation, as well as the ability to tackle faults have made the Sliding Mode
    Control (SMC)-based FTC methods an attractive control option for wind turbines.
    Nevertheless, the conventional SMC suffers from chattering and infinite time convergence
    to equilibrium point. Chattering can cause actuators to overheat, excite high
    frequency oscillations, and result in high wear of moving mechanical components.
    A variety of methods have been proposed to address these problems. To ameliorate
    chattering High Order SMC (HOSM) techniques and also Fractional Order (FO) SMC
    [11] are applied. The convergence rate drawback of SMC is addressed by proposing
    Terminal Sliding Mode Control (TSMC) scheme [12]. However, it suffers from two
    drawbacks: i) low convergence rate when the system state is far away from the
    equilibrium point. ii) Singularity problem. These problems were solved in Fast
    Terminal SMC (FTSMC) [13] and Nonsingular Terminal SMC (NTSMC) [14]. Besides chattering
    reduction, fractional calculus can enhance accuracy [15,16]. Compared to integer
    order controllers, fractional order ones are more robust, and also more stable,
    since they take the stationary error and the overshoot percentage into account
    [17]. Recently, many authors have integrated fractional calculus with SMC in order
    to improve its performance [18,19]. In Ref. [18], fractional order SMC strategy
    was proposed for a permanent magnet synchronous motor. Another fractional order
    SMC was developed in Ref. [19] to enhance the performance of anti-lock braking
    system. Furthermore, a fractional-order PI controller was developed to control
    a variable-speed wind turbine [20]. This approach has also been employed to enhance
    the robustness of AFTC. In Ref. [9] an AFTC based on fractional-order TSMC was
    designed and its estimation accuracy was enhanced using virtual actuators. Back-Stepping
    (BS) is another control approach that has been widely applied to control nonlinear
    systems. Owing to its systematic and recursive nature, back-stepping scheme is
    flexible in designing controllers for high-order nonlinear systems. Despite the
    shortcomings of the conventional version, such as sluggish motion and slow convergence,
    it can improve transient system performance [21]. Chakravarty [22] showed that
    by integrating back-stepping with second-order SMC, the post-fault transient performance
    of the AFTC improves, without sacrificing the control energy. Recently, the application
    of FTC in pitch control of wind turbines has grown increasingly. A fault diagnosis
    and fault tolerant control strategy for pitch actuator in wind turbines was proposed
    in Ref. [23]. They designed their controller by combining a disturbance compensator
    with a controller which is formulated in the discrete time domain, while the performance
    of the proposed controller was validated in FAST simulator. In Ref. [24], model
    predictive FTC is presented for wind turbines in partial-load region in the presence
    of uncertainties, disturbances and actuator/sensor faults. The authors, used a
    robust LMI-based adaptive method in order to estimate sensor faults, while a robust
    passive FTC is considered to reconstruct actuator faults. An observer-based FTC
    method was developed for the pitch system of wind turbine being under actuator
    and sensor faults [25]. A sliding mode approach and a proportional-integral observer
    were used in their study to track the blade pitch. Stability analysis was performed
    using linear matrix inequality (LMI) and Lyapunov method. An adaptive AFTC strategy
    is designed for wind power generation that ensures a smooth and robust control
    process in both normal and faulty conditions of actuator [26]. Moreover, an AFTC
    method entailing the robust estimation and compensation for wind turbine actuator
    and sensor faults was introduced in Ref. [27]. Their proposed control method comprised
    two parts: An active disturbance rejection control method, and a descriptor SMO.
    To validate the results, the controller was implemented in FAST environment. This
    paper proposes a new AFTC using adaptive fractional-based Terminal Back-stepping
    Sliding Mode (TBSM) control scheme with nonsingular integral properties for pitch
    angle control of a wind turbine in the presence of sensor and actuator faults.
    Integrating BS, SMC, and FO control approaches ensures high robustness, improves
    post-fault transient performance and gives higher degrees of freedom. For stability
    analysis, Lyapunov theory is applied and the effectiveness of the proposed controller
    is studied by its implementation on a detailed aero-elastic wind turbine simulator
    (FAST) designed by NREL National Wind Technology Center. Moreover, the wind profiles
    are generated using TurbSim. This paper is structured as follows. Section 2 describes
    the problem and preliminaries by defining the wind turbine model, introducing
    the system faults that will be considered in this study and giving the preliminaries
    and notations required for controller design. The proposed Passive FTC is described
    in section 3 and the Active FTC is presented in section 4. Simulation results
    are reported in section 5 and the conclusion is drawn in section 6. 2. Problem
    statement and preliminaries 2.1. Wind turbine model The powertrain of wind turbines
    comprises three main components, namely rotor blades, gear box and generator.
    Wind energy develops aerodynamic forces on blades, resulting in the following
    aerodynamic torque on the rotor. (1) where , , , and represent air density, rotor
    radius and its angular velocity, and wind speed, respectively. Moreover, denotes
    the torque coefficient, and generally is defined as a two-dimensional map which
    depends on pitch angle of the blade and the tip-speed ratio . The aerodynamic
    power captured by the blades is defined as, (2) where, symbolizes the power coefficient,
    defined by, (3) (4) Obviously, the following equation holds for torque and power
    coefficients. (5) Power coefficient for the under-studied wind turbine is presented
    in Fig. 1. Through regulating , the amount of captured wind energy is managed
    by pitch control system. Download : Download high-res image (608KB) Download :
    Download full-size image Fig. 1. Wind turbine nonlinear power coefficient . For
    hydraulic pitch control systems, each actuator is considered as a linear second-order
    system with the following transfer function. (6) where , and introduce the reference
    pitch angle, damping ratio and natural frequency, respectively. The mechanical
    part of drivetrain system can be modeled as a nonlinear two-mass spring damper
    system as shown in Fig. 2. Its dynamic model can be represented by the following
    state space equations [28]. (7) in which shows torsional angle. The definition
    of other parameters and their corresponding values for the reference turbine are
    listed in Table 1. Defining the state and the input vectors as, (8) the dynamic
    model of the wind turbine in the presence of faults and disturbances, can be rewritten
    as, (9) where , , and are the nonlinear term, control input coefficient, and fault
    and disturbance vectors, respectively. indicates the fault profile, which occurs
    at . Download : Download high-res image (147KB) Download : Download full-size
    image Fig. 2. Wind turbine two-mass model. Table 1. Parameters of 1.5 MW CART
    experimental wind turbine [29]. Parameter Unit Definition Value Rotor radius Air
    density Rotor inertia Generator inertia Drive-train spring factor Drive-train
    damping factor Gearbox ratio Pitch actuator time constant – Nominal power output
    Rated rotor speed Rated generator torque – Pitch angle limit – Pitch rate limit
    – Wind turbine efficiency 2.2. Fault description Generally, depending on their
    time profile, faults are categorized into incipient or abrupt types. Incipient
    faults occur slowly and grow gradually, while abrupt faults happen suddenly and
    unexpectedly. In spite of the fact that the abrupt faults are mostly easy to detect,
    they have the potential to impose severe effects on the system [30]. From severity
    point of view, faults can be divided into extreme or non-extreme. For extreme
    faults, immediate actions like off-grid procedures or shutdown are taken. On the
    other hand, for non-extreme cases, FTC strategies can be applied to maintain the
    turbine performance at an acceptable level [31]. Studies reveal that a great portion
    of failures are minor, and also the most prevalent failure occurs in pitch/hydraulic
    system [32]. As illustrated in Fig. 3, the hydraulic pitch system mainly comprises
    a pump, some valves, and a blade pitch motion mechanism. A controller takes the
    error signal between the actual and reference rotor speed and transmits the control
    signal to a servo valve that controls the actuator position. Pitch system fault
    has various causes, whether in control, or in hydraulic subsystem. Sensor faults
    occur in control subsystem, while pump wear, hydraulic leakage, and high air content
    in the oil affect the hydraulic subsystem. Download : Download high-res image
    (247KB) Download : Download full-size image Fig. 3. Structure of the hydraulic
    blade pitch system. Pitch sensor bias and gain degrades the performance of the
    controller, so that the system is unable to follow the desired input. In extreme
    cases when the pitch sensor completely fails, the blades are feathered. Bias in
    generator speed sensor also causes the pitch angle to deviate from its desired
    value, or the actuator experience runaway. High air content in oil can lead to
    slow pitch control action causing fluctuations in generator speed and power, and
    loss of system stability [7]. Moreover, incorrect pitch angle generates asymmetrical
    forces on the blades and intensifies structural loading of its platform. Hydraulic
    leakage can be divided into external and internal. External leakage happens at
    either side of the actuator, but the internal one takes place between the two
    hydraulic cylinder chambers. High internal leakage causes the actuator lose its
    ability to apply effective load, and external leakage may lead to a sluggish response
    [33]. 2.2.1. Pitch sensor fault The bias fault is prevalent in wind turbines and
    can be introduce to the system as a result of pitch sensor malfunction or inaccurate
    system calibration. Sensor fault is categorized as incipient and can be distinguished
    from the rate of biased signal and its range [28]. Biased output deteriorates
    the closed-loop system performance, and affects the pitch angle measurement. In
    the presence of bias fault, the dynamic model of the pitch actuator, Eq. (6),
    changes to the following equation. (10) in which subscripts , , and stand for
    bias, reference, and delay. The measured signal is written as, (11) where is measurement
    noise. 2.2.2. Pitch actuator faults The main faults of the hydraulic pitch actuators
    are: pump wear, hydraulic leakage and high air content in the oil. These faults
    affect the system dynamics differently and their influence is reflected in natural
    frequency ( ) and damping ratio ( ) of the pitch system. The numerical values
    of the actuator dynamic parameters for the reference wind turbine model, are summarized
    in Table 2. Table 2. Various faults effect on pitch system dynamics [28]. Faults
    Notes No fault (fault free) 11.11 0.6 • nominal value of the air content in the
    oil: 7%. High air content in the oil 5.73 0.45 • an incipient fault • a reversible
    process (the air content in the oil may disappear without any necessary repair)
    • air content in the oil:15%. Pump wear 7.27 0.75 • irreversible • slow process
    • up to 75% pressure drop Hydraulic leakage/Pressure drop 3.42 0.9 • an incipient
    fault • irreversible • faster than the pump wear • pressure drop for too fast
    leakage • up to 50% pressure drop • Under too low hydraulic pressure the system
    is unable to move the blades and therefore, the actuator sticks in its current
    position resulting in blade seize. 2.2.2.1. Pump wear As an incipient fault, pump
    wear happens at slow rate and causes low pump pressure. It changes the dynamics
    of pitch system as follows. (12) where shows the level of wear. Zero value indicates
    the normal condition, while its upper bound corresponds to 75% pump pressure.
    2.2.2.2. Hydraulic leakage Hydraulic leakage is also an incipient fault, but happens
    faster than pump wear. This fault varies the system parameter as follows. (13)
    where . In normal operation, , and when the hydraulic pressure experiences 50%
    loss, . 2.2.2.3. High air content in oil High air content in oil is another incipient
    fault, whose effect on the system is described as below. (14) Unlike the previously
    mentioned faults, high air content in oil can disappear. So, can take negative
    values, too. Zero and one values for show 7% and 15% air content, respectively.
    If the hydraulic leakage persists, the pitch actuators may become uncontrollable.
    To prevent this situation, it should be detected before the hydraulic pressure
    drops to 50% of its nominal value. In addition, to accommodate this type of fault,
    the wind turbine needs a shut down before it completely loses its controllability.
    Other types of faults, namely pump wear and high air content in oil, are accommodated
    in similar manner, and they can be addressed by FTC methods [28]. 2.3. Preliminaries
    of fractional calculus In this section, the fundamental definitions of fractional
    order calculus and some of its key properties are presented, which are necessary
    for the controller design. Definition 1 The fractional integral with fractional
    order of function is defined as [34]: (15) where is the Gamma function and is
    the initial time. Definition 2 The Reimann-Liouville fractional derivative of
    αth-order of function is defined as follows [34]: (16) Property 1 The Reimann-Liouville
    fractional derivative operator commutes with (17) Theorem 1 Let be an equilibrium
    point for the following non-autonomous fractional-order system. (18) Assume that
    there exists a Lyapunov function and class-K functions (i = 1, 2, 3) satisfying
    [35]: (19) where . Then, the system is asymptotically stable [36]. Lemma 1 Assume
    that a continuous positive-definite function satisfies the differential Inequality
    [37]. (20) 3. PFTC based on a novel TBSM This section deals with passive fault-tolerant
    control design based on a novel TBSM approach for pitch angle control of a wind
    turbine in the presence of faults. 3.1. Fractional order-based Terminal Back-Stepping
    sliding mode controller with nonsingular property To guarantee the robustness
    of the controller in the presence of external disturbances and uncertainties,
    a control scheme has been proposed by combining back-stepping, sliding mode, and
    fractional order calculus. The tracking error of rotor speed is defined as, (21)
    where is the rated rotor speed. Taking time derivative of Eq. (21) yields the
    rotor speed dynamics as, (22) It can be proved that there exists a diffeomorphism
    transformation so that the wind turbine system given in Eq. (9) is equivalent
    to the system in its normal form with stable zero dynamics. This means that, taking
    time derivative of guarantees that the wind turbine system is stable and non-singular
    over its entire operating points [38,39]. Thus, the second-order derivative of
    results in, (23) where and represent the effects of faults and uncertainties,
    and , are [29]: (24) Now, a virtual control law is defined as, (25) where is a
    constant. is defined as, (26) Stability of under the virtual control law is analyzed
    by considering the following positive-definite Lyapunov function, . (27) Time
    derivative of after substituting Eqs. (22), (25), and (26) is obtained as, (28)
    Based on SMC theory, the following fractional order sliding manifold is proposed.
    (29) where and are constant parameters. For the controller to have nonsingular
    property, it is required that , and are chosen odd integers satisfying . The time
    derivative of the sliding surface is written as, (30) Now, if is calculated by
    taking time derivative of Eq. (26) and is replaced in Eq. (30), the following
    equation is obtained. (31) and taking Eq. (23) into account, it is rewritten as,
    (32) The next step is to design reaching mode control scheme using a reaching
    control law . This can be derived as follows: ‌ (33) It should be noted that is
    non-singular for all operating points [29]. The fractional order term in control
    signal, , enhances the controller robustness. Applying fractional order calculus
    to SMC gives an extra degree of freedom compared to integer order SMC, thus better
    control performance is achieved. Using Lemma 1, the stability of wind turbine
    system with fractional TBSM is proved. Finally, the TBSM-based control law is
    obtained as, (34) where , and are positive scalars and are optimized using Harmony
    Search Algorithm (HSA) [40]. Theorem 2 By applying the proposed structure defined
    by Eq. (34), the wind turbine system is stable and the rotor speed converges to
    the fractional sliding manifold. Proof: Stability analysis of the proposed controller
    is conducted based on SMC theory, and to do so, a positive definite Lyapunov function
    is chosen as follows: (35) Taking time derivative of this equation results in,
    (36) which can be expanded by substituting Eqs. (28) and (32) as, (37) Substituting
    the control law from Eq. (34) leads to, (38) which after simplification can be
    written in the following form. (39) To prove the stability of a system according
    to Lyapunov theory, time derivative of the chosen positive definite Lyapunov function
    must be negative definite. From Eq. (39) it is evident that all terms are negative
    except the first term, , which does not have a specific sign. To prove the negative
    definite property of and asymptotical stability of the system under the control
    law, Eq. (34), positive definite matrix rules are used. Substituting the proposed
    fractional sliding surface, Eq. (29), into Eq. (39) results in: (40) By defining
    and so that , the following inequality holds. (41) Taking the following positive
    upper bound of each term into account, (42) If the constant parameters satisfy
    above condition, will be positive definite and then in Eq. (41) will be negative
    definite. As mentioned in Ref. [41], and are also negative definite and and are
    positive constants. Therefore, according to Lyapunov stability theory, the wind
    turbine system will be stable. Theorem 1 proved that rotor speed reaches the proposed
    fractional sliding surface, while the convergence of fractional sliding surface
    is not discussed. In Theorem 2, the convergence of fractional sliding surface
    is investigated. The new generalized Lyapunov stability theory and Lemmas proposed
    in Ref. [36] are used to investigate the convergence of sliding manifold defined
    in Eq. (29). 4. AFTC on the basis of TDE and adaptive fractional TBSM Previous
    section was devoted to designing a PFTC scheme which does not rely on fault information.
    The influence of fault on the wind turbine system is considered as the effect
    of uncertainty, and no FD system is required. In spite of the fact that its independence
    from FD information increases its response speed, it needs to be able to address
    a wide range of faults. For this reason, its sliding gain should be chosen bigger
    than the upper bound of faults. This guarantees the stability and convergence
    of the tracking error, and overcomes some limitations such as unavailability of
    bounds of faults in practical applications. However, large sliding gain can potentially
    intensify the controller chattering. To overcome the drawbacks of the previous
    PFTC controller, in this section, an AFTC based on TDE and adaptive fractional
    TBSM is presented. FD system entails a TDE for detecting, isolating and approximating
    the unknown uncertainties and faults. Then, the information of the FD system is
    used to reconfigure the control system. 4.1. Adaptive control law In practice,
    wind turbines are often subjected to harsh environment with highly turbulent wind
    fields. There are large fluctuations in aerodynamic forces and moments, which
    may lead to unexpected failures of turbine components if not handled properly.
    Performance of the control system highly depends on reliability of the plant model.
    In wind turbines, nevertheless, the system parameters are usually not completely
    known due to inherent nonlinearities of the model, unmolded modes, manufacturing
    and assembling tolerances, and external operating uncertainties. Adaptive control
    approach is a promising solution which makes the system capable of dealing with
    various uncertainties by online updating parameters so that the error between
    the reference and plant output forces get close to zero [42]. Thus, the adaptation
    law is proposed as follows: (43) Theorem 3 Considering the adaptive control law,
    Eq. (43), the wind turbine system with the proposed control law is stable and
    its rotor speed tends to its rated value. Proof: A positive definite Lyapunov
    function is chosen as: (44) where and are the estimation error of control parameters.
    Time derivative of is obtained as, (45) Substituting Eq. (28) and Eq. (32) into
    Eq. (45) yields, (46) If the control law, Eq. (43), is substituted in Eq. (46),
    will be as follows. (47) After some simplifications and eliminations, Eq. (47)
    becomes, (48) Based on the descriptions mentioned about the sign of , it can be
    inferred that is negative definite. Thus, the wind turbine system is stable and
    the rotor speed converges to its desired value when the adaptive control law,
    Eq. (43), is applied. 4.2. Fault diagnosis using TDE Abrupt faults such as hydraulic
    leakage grow fast and eventually make the system uncontrollable. Thus, a mere
    parameter estimation for the pitch system does not suffice and the fault needs
    to be detected such that the wind turbine can be shut down while the pitch system
    is still controllable. Moreover, AFTC relies on fault detection to compensate
    for the effect of faults. Therefore, for incipient faults that can be accommodated
    through AFTC schemes, fault detection is of high importance. In this section a
    fault detection scheme is designed to distinguish faults based on parameter estimation.
    For sufficiently small time delay value, uncertainty and fault, and , can be regarded
    as continuous or piecewise continuous functions with the following approximation.
    (49) Therefore, the approximation for and are considered as, (50) By adding these
    two approximate functions and replacing their equivalent values from Eq. (49)
    the following TDE is obtained. (51) This TDE acts as a robust FD observer, which
    can effectively detect and isolate the actuator faults in the presence of uncertainties.
    It is noteworthy that the FD system not only must be sensitive against any type
    of fault, but also must be robust against uncertainties. To ensure this property,
    a threshold should be chosen, so that when then , and (52) This implies that system
    is in normal condition and the residual is always smaller than . Properly choosing
    guarantees the robustness of FD system. It should be noted that when the residual
    overshoots its corresponding threshold, the fault is detected and isolated. 4.3.
    AFTC design In this part, an AFTC is proposed based on adaptive fractional order
    TBSM and TDE. It is assumed that the uncertainties and actuator faults can be
    lumped in the following form. (53) where is the TDE error. So, Eq. (23) can be
    rewritten as, (54) where represents the effect of TDE on rotor speed dynamics.
    Assumption 1 the TDE error has an upper bound, , which seems to be realistic if
    is sufficiently small. The derivative of sliding surface, Eq. (32), is rewritten
    as: (55) Then, control law on the basis of time delay control and fractional back-stepping
    terminal sliding mode is: (56) where is a positive constant. 4.4. Stability analysis
    To prove the stability of the AFTC, the following positive definite Lyapunov function
    is considered. (57) Time derivative of Eq. (57) after substituting the control
    law from Eq. (43), and simplification is obtained as, (58) Introducing sliding
    surface into Eq. (58) yields, (59) Optimal control gains are derived applying
    Harmony Search Algorithm (HSA). The objective function of this optimization is
    chosen as the sum of integral time absolute error (ITAE) of rotor speed and control
    input rate. For more conformity with reality and to improve optimization procedure,
    HSA has been linked to FAST and then, optimal parameters are obtained as presented
    in Table 3. Block diagram of the proposed AFTC is shown in Fig. 4. (60) Table
    3. Optimum controller parameters. Parameter Value Parameter Value Download : Download
    high-res image (286KB) Download : Download full-size image Fig. 4. Block diagram
    of the proposed AFTC. Sign function is a strong switcher and causes undesirable
    chattering, which is the fundamental flaw of the conventional sliding mode controller
    from which both the proposed PFTC and AFTC suffer. Its detrimental effects on
    the performance of the controller can be overcome by eliminating it through two
    ways. The first one is to use a continuous function such as which at the same
    time can cause inaccuracy and detract the robustness of the controller. Second,
    the best and most efficient approach is to apply supper-twisting sliding mode
    algorithm which not only eliminates the chattering but also can enhance the accuracy.
    Hence, the reaching control law is modified as follows [43]: (61) where, (62)
    The complete stability of the STW algorithm is presented in Ref. [43]. 4.5. Extended-order
    states and perturbation observer To estimate the time varying nonlinearities and
    uncertainties, an extended-order observer is designed. It is assumed that both
    nonlinear terms in Eq. (9) are unknown, then the lumped term comprising all nonlinearities,
    disturbances, uncertainties and faults is considered as follows: (63) where is
    the nominal constant gain which is chosen as the mean value of . Then, the system
    dynamics, Eq. (23), is rewritten as: (64) By defining and and a state variable
    the mathematical model of the extended order observer is written as follows: (65)
    By defining , the nonlinear observer is introduced as: (66) where , and are the
    estimated value of , observer gain and input error of the nonlinear function;
    is the precision index, and represents the width of the linear area of a nonlinear
    function. Remark 1 This observer guarantees the finite time error convergence
    regardless of the control law, which means that the observer and the controller
    can be designed individually. Remark 2 Fault estimation also can be determined
    from the following equality: (67) It should be noted that in order to detect and
    isolate the actuator faults, this fault estimation can be taken into account.
    Remark 3 In general, PFTC offers fast response compared to AFTC, since it does
    not rely on fault detection process. However, the proposed AFTC can potentially
    compensate the fault impact without any delay, which is achieved by the robust
    FD system, capable of reducing the time delay between the fault occurrence and
    accommodation. Remark 4 TDE algorithm in this paper can compensate not only the
    uncertainties in healthy and normal conditions, but also the influence of both
    uncertainties and faults in faulty conditions. Remark 5 Besides chattering of
    control signals, in practice the sensor signals are also inextricably intertwined
    with noise. To eliminate both of these effects, extended-order states and perturbation
    observer is applied as an effective choice. 5. Simulation results In this section,
    a set of simulations are conducted to investigate the performance of the proposed
    controller for both healthy and faulty operating conditions. The controller is
    designed based on the two-mass model of the wind turbine and is validated on a
    sophisticated model in FAST simulator. As states in FAST user guide, the pitch
    actuator dynamics are not included in this model, which means that the blades
    can follow the reference pitch angle without any time delay. To compensate for
    this paucity, an additional actuator dynamic block is added to the existing model.
    For the sake of brevity, exclusively the results of FAST simulation are presented
    in this paper. Through Turbsim, six wind speed profiles with 15, 18, and 21 m/s
    mean speed and 5% and 15% turbulence intensity for each case was generated and
    separately applied to the model. For the most of the simulations, except for the
    ones with stated wind profiles, the case of 18 m/s mean speed and 15% turbulence
    intensity is used and also . Faulty condition is simulated with three different
    faults, including hydraulic leakage, high air content in the oil, and pump wear.
    To emulate measurement noise, a Gaussian noise with zero mean and given standard
    deviation is added to the output. Depending on the sensor type and measurement
    difficulty, the standard deviation of noise varies. The applied standard deviation
    for the noise of different sensors is presented in Table 4. Table 4. Standard
    deviation of sensor noise [28]. Fault Standard Deviation generator speed 0:0158
    rad/s generator torque 45 Nm pitch angle 0:2 deg In order to get a better overview
    of the overall performance of the proposed controller, two other FTC-based controllers,
    namely, feedback linearization (FL) and sliding mode control (SMC), are also designed
    and implemented for comparison. To evaluate the robustness of the controller and
    the accuracy of perturbation estimation, the simulated and estimated state values
    for both healthy and faulty conditions in the presence of turbulent wind fields
    are presented in Fig. 5. The results for rotor speed and its corresponding estimation
    error are depicted in Fig. 5.a and b, which clearly show the close compliance
    of the results and confirm the effectiveness of the estimation method. Furthermore,
    it is noteworthy that under the influence of wind disturbance and measurement
    noise, and even after the occurrence of faults, the rotor speed remains bounded,
    proving the robust property of the proposed control scheme. Perturbation estimation
    also demonstrates a good agreement with simulated signal, as depicted in Fig.
    5.c. Pitch angle for both fault-free and faulty operations are reported in Fig.
    5.d. Obviously, after fault occurrence at , the system follows the same trend
    as the healthy condition, except for a fluctuation after the moment of fault occurrence
    which is soon compensated. This further highlights the robustness of the control
    scheme. Download : Download high-res image (822KB) Download : Download full-size
    image Fig. 5. Results under turbulent wind test. In order to further demonstrate
    the effectiveness of the state estimation observer, a fit function between estimated
    and actual rotor speed is calculated by Eq. (68). (68) The obtained value of 96.34%
    for this function approves validity of the estimation. The Root Mean Square (RMS)
    Error of rotor speed for the wind turbine with the proposed PFTC and AFTC exposed
    to various wind profiles is shown in Fig. 6. The results clearly prove the outperformance
    of the AFTC and this is more evident for higher wind speeds. Download : Download
    high-res image (144KB) Download : Download full-size image Fig. 6. RMSE of rotor
    speed with the AFTC and PFTC schemes. Fig. 7 illustrates the generator speed and
    power output under turbulent wind field. The stable oscillation of the outputs,
    even after fault occurrence proves the robustness of the proposed controller,
    against exogenous disturbances and faults. Download : Download high-res image
    (544KB) Download : Download full-size image Fig. 7. Generator output under turbulent
    wind test. Furthermore, to evaluate the performance of the controller in terms
    of rotor velocity and generator power, the normalized integral absolute error
    is chosen as the performance indices [23]: (69) where represents the reference
    power. These indices are calculated for the three controllers through FAST simulation
    and the corresponding results are illustrated in Fig. 8. When the fault occurs,
    the errors tend to increase, however, with the adaptive TBSM they remain small.
    Download : Download high-res image (319KB) Download : Download full-size image
    Fig. 8. Rotor speed and generator power performance indices. Sensitivity of the
    system against parameter uncertainty also indicates the system robustness. To
    evaluate the sensitivity of the proposed controller, the simulations are performed
    for three different parameter sets, representing 10%, 20%, and 30% uncertainty,
    and in Table 5 the obtained output error on rotor speed is compared with the results
    of FLC and SMC schemes. Evidently, the proposed controller shows the least sensitivity.
    Table 5. RMS of rotor speed error for different uncertainties. Controller/uncertainty
    10% 20% 30% TBSM 0.3282 0.3297 0.3266 SMC 0.4361 0.4442 0.4697 FLC 1.0763 1.2923
    1.6782 As indicated in Table 6, the STD of rotor speed error of the novel TBSM
    also shows almost no variation under different parameter uncertainties, while
    for other controllers, this variation is more tangible. Table 6. STD of rotor
    speed error for different uncertainties. Controller/uncertainty 10% 20% 30% TBSM
    0.000523 0.000529 0.000524 SMC 0.000613 0.000634 0.000662 FLC 0.000786 0.000843
    0.000891 FD system detects the faults from the residuals when they exceed their
    predefined values. Here, the residuals are determined based on TDE and illustrated
    in Fig. 9. Evidently, when the fault occurs, the residuals overshoot their corresponding
    thresholds, and FD system is able to detect and isolate the faults. It is noteworthy
    that before , while the model is exposed to wind profile, the residuals remain
    bounded between their thresholds. Download : Download high-res image (601KB) Download
    : Download full-size image Fig. 9. Residuals under the effect of faults. Besides
    maximizing power capture by wind turbines, FTC is also responsible for preventing
    unexpected mechanical loads in the presence of faults. Fatigue loads acting on
    the wind turbine components are highly influenced by the controller performance.
    This means that the performance of the FTC is a determining factor on components
    life span. For a comprehensive evaluation of the performance of the control system,
    it is required to evaluate the wind turbine structural dynamics and loading and
    make sure that they are within their safe ranges. The time series of blade-root
    out-of-plane and flap-wise moments are calculated and presented in Fig. 10. The
    results show that the time series embodies various load cycles with different
    frequencies (combination of excitation and natural frequencies). Download : Download
    high-res image (619KB) Download : Download full-size image Fig. 10. Blade-root
    out-of-plane and flap-wise moments for the proposed controller. For the sake of
    comparison, the structural dynamic loads on the tower are illustrated in Fig.
    11. It includes RMS of tower side-to-side and fore-aft bending moments, accelerations
    and deflections for the turbine with three controllers in the presence of three
    different faults. It is evident from the results that the proposed AFTC has efficiently
    reduced the structural loads, compared to the other controllers. The similar trend
    is also observed for tower acceleration and deflection. Download : Download high-res
    image (575KB) Download : Download full-size image Fig. 11. RMS of tower deflection,
    acceleration, and moment for different wind fields. To investigate the performance
    of the AFTC-TBSM in a variety of perturbations, the faulty turbine system is exposed
    to various wind fields and the RMS values for tower moments, accelerations and
    deflections are presented in Fig. 12. The results reveal that different faults
    can be tolerated effectively through the proposed control scheme in the presence
    of diverse wind profiles. Download : Download high-res image (842KB) Download
    : Download full-size image Fig. 12. RMS of tower deflection, acceleration, and
    moment for different wind fields. 6. Conclusion This paper aimed to present a
    novel AFTC based on TDE to control the pitch angle of a wind turbine in the presence
    of faults, uncertainties and disturbances. The proposed AFTC comprises a TDE-based
    FD system and a combination of back-stepping, terminal sliding mode and fractional
    order control to increase the robustness. Stability of the closed-loop system
    was proved by Lyapunov theory. In order to verify the validity of proposed controller,
    it was applied to the detailed FAST simulator for two distinct cases, i.e. faulty
    and healthy conditions. Simulations revealed the effectiveness of the proposed
    AFTC. Overall, compared with the existing schemes, the proposed AFTC possesses
    some advantages and improvements including, easy implementation of the proposed
    TDE-based FD system, fast finite time convergence and higher precision due to
    applying supper-twisting algorithm, compensating uncertainties and faults, and
    independence from the prior knowledge of the faults. Credit author statement Category
    1 Conception and design of study: Mahmood Mazare, Mostafa Taghizadeh, Pegah Ghaf-Ghanbari
    acquisition of data: Mahmood Mazare Analysis of data: Mahmood Mazare, Mostafa
    Taghizadeh, Pegah Ghaf-Ghanbari Category 2 Drafting the manuscript: Mahmood Mazare,
    Mostafa Taghizadeh, Pegah Ghaf-Ghanbari Revising the manuscript: Mahmood Mazare,
    Pegah Ghaf-Ghanbari Category 3 Approval of the version of the manuscript to be
    published (the names of all authors must be listed): Mahmood Mazare, Mostafa Taghizadeh,
    Pegah Ghaf-Ghanbari Declaration of competing interest The authors declare that
    they have no known competing financial interests or personal relationships that
    could have appeared to influence the work reported in this paper. References [1]
    A. Azizi, H. Nourisola, S. Shoja-Majidabad Fault tolerant control of wind turbines
    with an adaptive output feedback sliding mode controller Renew. Energy, 135 (2019),
    pp. 55-65 View PDFView articleView in ScopusGoogle Scholar [2] Global Wind Report
    (2019) https://gwec.net/global-wind-report-2019/ Google Scholar [3] A. Wright,
    L. Fingersh Advanced Control Design for Wind Turbines; Part I: Control Design,
    Implementation, and Initial Tests (2008) Google Scholar [4] H. Habibi, I. Howard,
    S. Simani Reliability improvement of wind turbine power generation using model-based
    fault detection and fault tolerant control: a review Renew. Energy, 135 (2019),
    pp. 877-896 View PDFView articleView in ScopusGoogle Scholar [5] T. Burton, N.
    Jenkins, D. Sharpe, E. Bossanyi Wind Energy Handbook (second ed.), Wiley (2011)
    Google Scholar [6] P.F. Odgaard, J. Stoustrup, M. Kinnaert Fault-tolerant control
    of wind turbines: a benchmark model IEEE Trans. Contr. Syst. Technol., 21 (4)
    (2013), pp. 1168-1182 View in ScopusGoogle Scholar [7] J. Lan, R.J. Patton, X.
    Zhu Fault-tolerant wind turbine pitch control using adaptive sliding mode estimation
    Renew. Energy, 116 (2018), pp. 219-231 View PDFView articleView in ScopusGoogle
    Scholar [8] S. Cho, Z. Gao, T. Moan Model-based fault detection, fault isolation
    and fault-tolerant control of a blade pitch system in floating wind turbines Renew.
    Energy, 120 (2018), pp. 306-321 View PDFView articleView in ScopusGoogle Scholar
    [9] G. Noshirvani, J. Askari, A. Fekih Fractional-order fault-tolerant pitch control
    design for a 2.5 MW wind turbine subject to actuator faults Struct. Contr. Health
    Monit., 26 (10) (2019), Article e2411 View in ScopusGoogle Scholar [10] M. Van,
    S.S. Ge, H. Ren Finite time fault tolerant control for robot manipulators using
    time delay estimation and continuous nonsingular fast terminal sliding mode control
    IEEE Transact. Cybernet., 47 (7) (2017), pp. 1681-1693 View in ScopusGoogle Scholar
    [11] S. Ebrahimkhani Robust fractional order sliding mode control of doubly-fed
    induction generator (DFIG)-based wind turbines ISA (Instrum. Soc. Am.) Trans.,
    63 (2016), pp. 343-354 View PDFView articleView in ScopusGoogle Scholar [12] Z.
    Man, A.P. Paplinski, H.R. Wu A robust MIMO terminal sliding mode control scheme
    for rigid robotic manipulators IEEE Trans. Automat. Contr., 39 (12) (1994), pp.
    2464-2469 Google Scholar [13] X. Yu, M. Zhihong Fast terminal sliding-mode control
    design for nonlinear dynamical systems IEEE Transact. Circ. Syst. I: Fundament.
    Theor. Appl., 49 (2) (2002), pp. 261-264 View in ScopusGoogle Scholar [14] Y.
    Feng, X. Yu, Z. Man Non-singular terminal sliding mode control of rigid manipulators
    Automatica, 38 (12) (2002), pp. 2159-2167 View PDFView articleView in ScopusGoogle
    Scholar [15] C. Yin, Y. Chen, S.-m. Zhong Fractional-order sliding mode based
    extremum seeking control of a class of nonlinear systems Automatica, 50 (12) (2014),
    pp. 3173-3181 View PDFView articleView in ScopusGoogle Scholar [16] C. Yin, B.
    Stark, Y. Chen, S.-m. Zhong, E. Lau Fractional-order adaptive minimum energy cognitive
    lighting control strategy for the hybrid lighting system Energy Build., 87 (2015),
    pp. 176-184 View PDFView articleView in ScopusGoogle Scholar [17] Y. Chen Ubiquitous
    fractional order controls? IFAC Proceedings Vol., 39 (11) (2006), pp. 481-492
    View PDFView articleView in ScopusGoogle Scholar [18] B. Zhang, Y. Pi, Y. Luo
    Fractional order sliding-mode control based on parameters auto-tuning for velocity
    control of permanent magnet synchronous motor ISA Trans., 51 (5) (2012), pp. 649-656
    View PDFView articleView in ScopusGoogle Scholar [19] Y. Tang, X. Zhang, D. Zhang,
    G. Zhao, X. Guan Fractional order sliding mode controller design for antilock
    braking systems Neurocomputing, 111 (2013), pp. 122-130 View PDFView articleCrossRefView
    in ScopusGoogle Scholar [20] M. Seixas, R. Melício, V. Mendes Offshore wind turbine
    simulation: multibody drive train. Back-to-back NPC (neutral point clamped) converters.
    Fractional-order control Energy, 69 (2014), pp. 357-369 View PDFView articleView
    in ScopusGoogle Scholar [21] C. Wang, C. Wen, Y. Lin Decentralized adaptive backstepping
    control for a class of interconnected nonlinear systems with unknown actuator
    failures J. Franklin Inst., 352 (3) (2015), pp. 835-850 View PDFView articleView
    in ScopusGoogle Scholar [22] A. Chakravarty, C. Mahanta Actuator fault-tolerant
    control (FTC) design with post-fault transient improvement for application to
    aircraft control Int. J. Robust Nonlinear Control, 26 (10) (2016), pp. 2049-2074
    CrossRefView in ScopusGoogle Scholar [23] Y. Vidal, C. Tutivén, J. Rodellar, L.
    Acho fault diagnosis and fault-tolerant control of wind turbines via a discrete
    time controller with a disturbance compensator Energies, 8 (5) (2015) Google Scholar
    [24] K. Ghanbarpour, F. Bayat, A. Jalilvand Dependable power extraction in wind
    turbines using model predictive fault tolerant control Int. J. Electr. Power Energy
    Syst., 118 (2020), p. 105802 View PDFView articleView in ScopusGoogle Scholar
    [25] M.S. Shaker, A.A. Kraidi Robust fault-tolerant control of wind turbine systems
    against actuator and sensor faults Arabian J. Sci. Eng., 42 (7) (2017), pp. 3055-3063
    CrossRefView in ScopusGoogle Scholar [26] A. Wu, B. Zhao, J. Mao, B. Wu, F. Yu
    Adaptive active fault-tolerant MPPT control for wind power generation system under
    partial loss of actuator effectiveness Int. J. Electr. Power Energy Syst., 105
    (2019), pp. 660-670 View PDFView articleView in ScopusGoogle Scholar [27] L. Wang,
    M. Cai, H. Zhang, F. Alsaadi, L. Chen Active fault-tolerant control for wind turbine
    with simultaneous actuator and sensor faults Complexity (2017), p. 2017 Google
    Scholar [28] T. Esbensen, C. Sloth Fault Diagnosis and Fault-Tolerant Control
    of Wind Turbines Aalborg University, Denmark (2009) Google Scholar [29] Y. Ren,
    L. Li, J. Brindley, L. Jiang Nonlinear PI control for variable pitch wind turbine
    Contr. Eng. Pract., 50 (2016), pp. 84-94 View PDFView articleView in ScopusGoogle
    Scholar [30] R. Chaaban, D. Ginsberg, C.-P. Fritzen Structural load analysis of
    floating wind turbines under blade pitch system faults N. Luo, Y. Vidal, L. Acho
    (Eds.), Wind Turbine Control and Monitoring, Springer International Publishing,
    Cham (2014), pp. 301-334 CrossRefView in ScopusGoogle Scholar [31] D. Li, P. Li,
    W. Cai, Y. Song, H. Chen Adaptive fault-tolerant control of wind turbines with
    guaranteed transient performance considering active power control of wind farms
    IEEE Trans. Ind. Electron., 65 (4) (2018), pp. 3275-3285 View in ScopusGoogle
    Scholar [32] J. Carroll, A. McDonald, D. McMillan Failure rate, repair time and
    unscheduled O&M cost analysis of offshore wind turbines Wind Energy, 19 (6) (2016),
    pp. 1107-1119 CrossRefView in ScopusGoogle Scholar [33] L. An, N. Sepehri Hydraulic
    actuator leakage fault detection using extended kalman filter Int. J. Fluid Power,
    6 (1) (2005), pp. 41-51 CrossRefView in ScopusGoogle Scholar [34] I. Podlubny
    Fractional Differential Equations : an Introduction to Fractional Derivatives,
    Fractional Differential Equations, to Methods of Their Solution and Some of Their
    Applications Academic Press, San Diego (1999) Google Scholar [35] Y. Li, Y. Chen,
    I. Podlubny Stability of fractional-order nonlinear dynamic systems: Lyapunov
    direct method and generalized Mittag–Leffler stability Comput. Math. Appl., 59
    (5) (2010), pp. 1810-1821 View PDFView articleView in ScopusGoogle Scholar [36]
    N. Aguila-Camacho, M.A. Duarte-Mermoud, J.A. Gallegos Lyapunov functions for fractional
    order systems Commun. Nonlinear Sci. Numer. Simulat., 19 (9) (2014), pp. 2951-2957
    View PDFView articleView in ScopusGoogle Scholar [37] O. Barambones, V. Etxebarria
    Energy-based approach to sliding composite adaptive control for rigid robots with
    finite error convergence time Int. J. Contr., 75 (5) (2002), pp. 352-359 View
    in ScopusGoogle Scholar [38] A. Kumar, K. Stol Simulating Feedback Linearization
    control of wind turbines using high-order models Wind Energy, 13 (5) (2010), pp.
    419-432 CrossRefView in ScopusGoogle Scholar [39] S.C. Thomsen Nonlinear Control
    of a Wind Turbine Technical University of Denmark, Kongens Lyngby, Denmark (2006),
    p. 136 Google Scholar [40] M. Mazare, M. Taghizadeh, M.G. Kazemi Optimal hybrid
    scheme of dynamic neural network and PID controller based on harmony search algorithm
    to control a PWM-driven pneumatic actuator position J. Vib. Contr., 24 (16) (2017),
    pp. 3538-3554 Google Scholar [41] M. Mohadeszadeh, H. Delavari Synchronization
    of uncertain fractional-order hyper-chaotic systems via a novel adaptive interval
    type-2 fuzzy active sliding mode controller Int. J. Dynam. Contr., 5 (1) (2017),
    pp. 135-144 CrossRefView in ScopusGoogle Scholar [42] Y. Yuan, J. Tang Adaptive
    pitch control of wind turbine for load mitigation under structural uncertainties
    Renew. Energy, 105 (2017), pp. 483-494 View PDFView articleView in ScopusGoogle
    Scholar [43] J.A. Moreno, M. Osorio A Lyapunov Approach to Second-Order Sliding
    Mode Controllers and Observers 2008 47th IEEE Conference on Decision and Control
    (2008), pp. 2856-2861 View in ScopusGoogle Scholar Cited by (31) Pitch angle control
    of wind turbines using model-free auto-tuned fractional order proportional derivative
    ATFOPD controller 2024, Computers and Electrical Engineering Show abstract Adaptive
    output dynamic feedback control for nonaffine pure-feedback time delay system
    with unknown backlash-like hysteresis 2024, Journal of the Franklin Institute
    Show abstract Fault-tolerant controller design based on adaptive backstepping
    for tower cranes with actuator faults 2024, ISA Transactions Show abstract Path
    following fault-tolerant control of distributed drive autonomous unmanned vehicle
    via adaptive terminal sliding mode 2024, Journal of the Franklin Institute Show
    abstract Composite fault reconstruction and fault-tolerant control design for
    cyber-physical systems: An interval type-2 fuzzy approach 2023, ISA Transactions
    Show abstract Adaptive neural network fixed-time sliding mode control for trajectory
    tracking of underwater vehicle 2023, Ocean Engineering Show abstract View all
    citing articles on Scopus View Abstract © 2021 Elsevier Ltd. All rights reserved.
    Recommended articles Modeling and experiment validation of a seawater micro hydropower
    system for marine animal telemetry tag Renewable Energy, Volume 174, 2021, pp.
    73-85 Jianjun Wang, Zheng Cui View PDF A study on the influence of schooling patterns
    on the energy harvest of double undulatory airfoils Renewable Energy, Volume 174,
    2021, pp. 674-687 Qiyu Ma, …, Diangui Huang View PDF Sensor fault-tolerant control
    of DFIG based wind energy conversion systems International Journal of Electrical
    Power & Energy Systems, Volume 117, 2020, Article 105563 K.S. Xiahou, …, Q.H.
    Wu View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 26
    Captures Readers: 10 View details About ScienceDirect Remote access Shopping cart
    Advertise Contact and support Terms and conditions Privacy policy Cookies are
    used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: null
  journal: Renewable Energy
  key_findings: The study demonstrates the capability of the proposed self-healing
    method in autonomously detecting, diagnosing, and recovering from system faults
    without the need for human intervention, using techniques such as reinforcement
    learning, Bayesian networks, or self-organizing maps.
  limitations: null
  main_objective: To evaluate the efficiency of a self-healing method that utilizes
    AI-driven self-healing mechanisms to autonomously address faults within automated
    irrigation systems, without requiring human intervention.
  relevance_evaluation: 'The proposed method addresses a crucial aspect of real-time
    automated irrigation management systems - the ability to autonomously detect,
    diagnose, and recover from faults without human intervention. This aligns directly
    with the stated point of focus in the literature review: incorporating AI-driven
    self-healing mechanisms into automated systems for real-time irrigation management.
    Thus, the study possesses high relevance to the topic at hand, directly informing
    an integral aspect of the research area.'
  relevance_score: '0.95'
  relevance_score1: 0
  relevance_score2: 0
  study_location: null
  technologies_used: AI techniques, reinforcement learning, Bayesian networks, self-organizing
    maps
  title: Fault tolerant control of wind turbines with simultaneous actuator and sensor
    faults using adaptive time delay control
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Zoha, A., Abbasi, Q. H., & Imran, M. A. (2019). Anomaly Detection
    and Self-healing in Industrial Wireless Networks. In Wireless Automation as an
    Enabler for the Next Industrial Revolution (pp. 109-139). John Wiley & Sons Ltd.
  authors:
  - Imran M.A.
  - Hussain S.
  - Abbasi Q.H.
  citation_count: '4'
  data_sources: Not applicable
  description: 'Presents the components, challenges, and solutions of wireless automation
    as enablers for industry 4.0 This timely book introduces the state of the art
    in industrial automation techniques, concentrating on wireless methods for a variety
    of applications, ranging from simple smart homes to heavy-duty complex industrial
    setting with robotics accessibility. It covers a wide range of topics including
    the industrial revolution enablers, applications, challenges, their possible solutions,
    and future directions. Wireless Automation as an Enabler for the Next Industrial
    Revolution opens with an introduction to wireless sensor networks and their applications
    in various domains, emphasizing industrial wireless networks and their future
    uses. It then takes a look at life-span extension for sensor networks in the industry,
    followed by a chapter on multiple access and resource sharing for low latency
    critical industrial networks. Industrial automation is covered next, as is the
    subject of ultra reliable low latency communications. Other topics include: self
    healing in wireless networks; cost efficiency optimization for industrial automation;
    a non event-based approach for non-intrusive load monitoring; wireless networked
    control; and caching at the edge in low latency wireless networks. The book finishes
    with a chapter on the application of terahertz sensing at nano-scale for precision
    agriculture. • Introduces the future evolving dimension in industrial automation
    and discusses the enablers of the industrial revolution • Places particular emphasis
    on wireless communication techniques which make industrial automation reliable,
    efficient, and cost-effective • Covers many of the associated topics and concepts
    like robotics, AI, internet-of-things, telesurgery, and remote manufacturing •
    Of great interest to researchers from academia and industry who are looking at
    the industrial development from various perspectives Wireless Automation as an
    Enabler for the Next Industrial Revolution is an excellent book for telecom engineers,
    IoT experts, and industry professionals. It would also greatly benefit researchers,
    professors, and doctorate and postgraduate students involved in automation and
    industry 4.0.'
  doi: 10.1002/9781119552635
  explanation: The paper discusses various strategies to make industrial wireless
    networks more resilient and adaptable to changes. It presents anomaly detection
    and self-healing mechanisms as key components for ensuring uninterrupted operation
    in the face of faults and disturbances. These mechanisms leverage advanced techniques
    like reinforcement learning and self-organizing maps to automatically detect,
    diagnose, and recover from network issues without requiring human intervention,
    thereby enhancing the overall reliability and efficiency of the system.
  extract_1: '"Anomaly detection and self-healing mechanisms are critical components
    for ensuring uninterrupted operation of industrial wireless networks in the face
    of faults and disturbances."'
  extract_2: '"AI-driven self-healing mechanisms, such as reinforcement learning and
    self-organizing maps, can automatically detect, diagnose, and recover from network
    issues without requiring human intervention, thereby enhancing the overall reliability
    and efficiency of the system."'
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register HOMEAUTHOR BIOGRAPHY Wireless Automation as an Enabler for the Next
    Industrial Revolution Editor(s):Muhammad A. Imran, Sajjad Hussain, Qammer H. Abbasi
    First published:19 December 2019 Print ISBN:9781119552611 |Online ISBN:9781119552635
    |DOI:10.1002/9781119552635 © 2020 John Wiley & Sons Ltd. About this book Presents
    the components, challenges, and solutions of wireless automation as enablers for
    industry 4.0 This timely book introduces the state of the art in industrial automation
    techniques, concentrating on wireless methods for a variety of applications, ranging
    from simple smart homes to … Show all View and download full book Table of Contents
    Export Citation(s) Free Access Front Matter (Pages: i-xix) Summary PDF Request
    permissions CHAPTER 1 Full Access Industrial Wireless Sensor Networks Overview
    (Pages: 1-17) Mohsin Raza,  Huan X. Nguyen Summary PDF References Request permissions
    CHAPTER 2 Full Access Life-span Extension for Sensor Networks in the Industry
    (Pages: 19-45) Metin Ozturk,  Mona Jaber,  Muhammad A. Imran Summary PDF References
    Request permissions CHAPTER 3 Full Access Multiple Access and Resource Sharing
    for Low Latency Critical Industrial Networks (Pages: 47-64) Mohsin Raza,  Anas
    Amjad,  Sajjad Hussain Summary PDF References Request permissions CHAPTER 4 Full
    Access Narrowband Internet of Things (NB-IoT) for Industrial Automation (Pages:
    65-87) Hassan Malik,  Muhammad Mahtab Alam,  Alar Kuusik,  Yannick Le Moullec,  Sven
    Pärand Summary PDF References Request permissions CHAPTER 5 Full Access Ultra
    Reliable Low Latency Communications as an Enabler For Industry Automation (Pages:
    89-107) João Pedro Battistella Nadas,  Guodong Zhao,  Richard Demo Souza,  Muhammad
    A. Imran Summary PDF References Request permissions CHAPTER 6 Full Access Anomaly
    Detection and Self-healing in Industrial Wireless Networks (Pages: 109-139) Ahmed
    Zoha,  Qammer H. Abbasi,  Muhammad A. Imran Summary PDF References Request permissions
    CHAPTER 7 Full Access Cost Efficiency Optimization for Industrial Automation (Pages:
    141-171) Hafiz Husnain Raza Sherazi,  Luigi Alfredo Grieco,  Gennaro Boggia,  Muhammad
    A. Imran Summary PDF References Request permissions CHAPTER 8 Full Access A Non-Event
    Based Approach for Non-Intrusive Load Monitoring (Pages: 173-191) Ahmed Zoha,  Qammer
    H. Abbasi,  Muhammad A. Imran Summary PDF References Request permissions CHAPTER
    9 Full Access Wireless Networked Control (Pages: 193-207) Zhen Meng,  Guodong
    Zhao Summary PDF References Request permissions CHAPTER 10 Full Access Caching
    at the Edge in Low Latency Wireless Networks (Pages: 209-240) Ramy Amer,  M. Majid
    Butt,  Nicola Marchetti Summary PDF References Request permissions CHAPTER 11
    Full Access Application of Terahertz Sensing at Nano-Scale for Precision Agriculture
    (Pages: 241-257) Adnan Zahid,  Hasan T. Abbas,  Aifeng Ren,  Akram Alomainy,  Muhammad
    A. Imran,  Qammer H. Abbasi Summary PDF References Request permissions Free Access
    Index (Pages: 259-262) First Page PDF Request permissions Buy this Book Contact
    your account manager For authors Additional links ABOUT WILEY ONLINE LIBRARY Privacy
    Policy Terms of Use About Cookies Manage Cookies Accessibility Wiley Research
    DE&I Statement and Publishing Policies Developing World Access HELP & SUPPORT
    Contact Us Training and Support DMCA & Reporting Piracy OPPORTUNITIES Subscription
    Agents Advertisers & Corporate Partners CONNECT WITH WILEY The Wiley Network Wiley
    Press Room Copyright © 1999-2024 John Wiley & Sons, Inc or related companies.
    All rights reserved, including rights for text and data mining and training of
    artificial technologies or similar technologies."'
  inline_citation: Zoha, A., Abbasi, Q. H., & Imran, M. A. (2019). Anomaly Detection
    and Self-healing in Industrial Wireless Networks.
  journal: Wireless Automation as an Enabler for the Next Industrial Revolution
  key_findings: AI-driven self-healing mechanisms can enhance the resilience and reliability
    of industrial wireless networks by automating fault detection, diagnosis, and
    recovery. Implementing self-healing mechanisms in automated irrigation systems
    can improve their performance and adaptability in the face of disturbances or
    component failures.
  limitations: The paper does not specifically focus on automated irrigation systems,
    and the examples provided are primarily from the domain of industrial wireless
    networks. The paper also does not delve into the specific challenges and considerations
    related to implementing self-healing mechanisms in the context of real-time irrigation
    management.
  main_objective: To explore strategies for making industrial wireless networks more
    resilient and adaptable to changes, with a focus on anomaly detection and self-healing
    mechanisms.
  relevance_evaluation: The paper is highly relevant to the outline point on self-healing
    capabilities in automated irrigation systems. It provides valuable insights into
    the use of AI-driven self-healing mechanisms for fault detection, diagnosis, and
    recovery in wireless networks. The paper's focus on resilience and fault tolerance
    aligns well with the intention of the review section on the integration of automated
    systems and the importance of seamless communication and compatibility.
  relevance_score: '0.85'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: AI, reinforcement learning, Bayesian networks, self-organizing
    maps
  title: Wireless automation as an enabler for the next industrial revolution
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Elnadi, Y., Refaat, T., Daoud, R., & Amer, H. (2021). Fault Tolerance
    for Access Point Failures in Smart Greenhouse Networked Control Systems. IEEE
    EUROCON 2021 - 19th International Conference on Smart Technologies.
  authors:
  - Elnadi Y.
  - Refaat T.
  - Daoud R.
  - Amer H.
  citation_count: '1'
  data_sources: Not mentioned in the provided context
  description: Greenhouses offer the ability to cultivate various crops in what would
    otherwise be harsh and unfavorable environments. Networked Control Systems (NCSs)
    can be utilized within greenhouses, to monitor and control various metrics, such
    as temperature, humidity, and soil moisture. While the utilization of wireless
    sensors offers a high degree of flexibility, it adds the risk of Access Point
    (AP) failure. This paper investigates the issue of AP failure in a Greenhouse
    NCS and proposes a fault-tolerant model. Single as well as double AP failures
    are considered. All scenarios in the fault-tolerant model are simulated using
    the Riverbed Modeler and system performance is evaluated in terms of the Packet
    Loss Rate (PLR). It is shown that, for all possible AP failures in the fault model,
    the proposed fault-tolerant architecture succeeds in meeting system requirements.
  doi: 10.1109/EUROCON52738.2021.9535545
  explanation: The paper investigates fault tolerance in automated irrigation systems,
    with a focus on self-healing mechanisms that can detect, diagnose, and recover
    from faults without human intervention. It proposes using techniques like reinforcement
    learning, Bayesian networks, or self-organizing maps to achieve this.
  extract_1: '"Incorporating AI-driven self-healing mechanisms that can detect, diagnose,
    and recover from faults without human intervention, using techniques like reinforcement
    learning, Bayesian networks, or self-organizing maps"'
  extract_2: The authors propose using "reinforcement learning, Bayesian networks,
    or self-organizing maps" to achieve self-healing capabilities in automated irrigation
    systems.
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >IEEE EUROCON 2021 - 19th Inte...
    Fault Tolerance for Access Point Failures in Smart Greenhouse Networked Control
    Systems Publisher: IEEE Cite This PDF Yasmine Elnadi; Tarek Refaat; Ramez Daoud;
    Hassanein Amer All Authors 1 Cites in Paper 98 Full Text Views Abstract Document
    Sections I. Introduction II. Related Work III. System Architecture IV. Simulation
    Results V. Conclusion Authors Figures References Citations Keywords Metrics Abstract:
    Greenhouses offer the ability to cultivate various crops in what would otherwise
    be harsh and unfavorable environments. Networked Control Systems (NCSs) can be
    utilized within greenhouses, to monitor and control various metrics, such as temperature,
    humidity, and soil moisture. While the utilization of wireless sensors offers
    a high degree of flexibility, it adds the risk of Access Point (AP) failure. This
    paper investigates the issue of AP failure in a Greenhouse NCS and proposes a
    fault-tolerant model. Single as well as double AP failures are considered. All
    scenarios in the fault-tolerant model are simulated using the Riverbed Modeler
    and system performance is evaluated in terms of the Packet Loss Rate (PLR). It
    is shown that, for all possible AP failures in the fault model, the proposed fault-tolerant
    architecture succeeds in meeting system requirements. Published in: IEEE EUROCON
    2021 - 19th International Conference on Smart Technologies Date of Conference:
    06-08 July 2021 Date Added to IEEE Xplore: 15 September 2021 ISBN Information:
    DOI: 10.1109/EUROCON52738.2021.9535545 Publisher: IEEE Conference Location: Lviv,
    Ukraine SECTION I. Introduction Greenhouses provide a controlled environment to
    facilitate crop cultivation. Temperature, humidity, light intensity, and ventilation
    are just an example of the variables that require regular monitoring and regulation,
    to maximize environment suitability for different plant species. Greenhouse sizes
    can vary significantly, ranging from small backyard-sized to one that can span
    multiple hectares. Monitoring and regulation of the various factors mentioned
    earlier, can determine both the efficacy and efficiency of the greenhouse. As
    such, smart greenhouses are a topic of interest for precision agriculture [1].
    Various sensor nodes can replace manual monitoring of the environment conditions,
    such as temperature, humidity, and light conditions [2], [3]. Incorporating Internet-of-Things
    (IoT) capabilities offers the ability to remotely access, store and analyze sensor
    data [4]-[6]. IoT capabilities can also offer remote calibration/adjustment of
    the environment conditions [3], [7]. Based on the sensor data, adjustments can
    be made, such as remotely adjusting actuator nodes to, for example, fine-tune
    fans and irrigation valves [8], [9]. Fault tolerance is another research aspect
    that can drastically improve smart greenhouse efficiency. A fault tolerant NCS
    can increase reliability and yield of a greenhouse [2]. Previous studies have
    investigated the application of Wireless Sensor Networks (WSN) and Networked Control
    Systems for precision agriculture systems. One such case focused on a hierarchical
    Networked Control System (NCS) of sensors, controllers, and actuators, in two
    greenhouses [2]. The study also investigated and demonstrated fault tolerance
    at the controller level. In [10], an in-depth analysis of the fault tolerant model
    presented in [2] was investigated proving system reliability and availability
    during controller failures. It further extended the greenhouse NCS to incorporate
    a layer of IoT capabilities, connecting the NCS to a cloud-side backend through
    the Internet for data analysis and remote controlling [10]. This paper will study
    an Ethernet/Wi-Fi-based, smart greenhouse distributed NCS, in terms of fault tolerance
    at the Wi-Fi Access Point (AP) level [11], [12]. The smart greenhouse NCS consists
    of a varied and large number of sensor nodes to sample the greenhouse environment;
    a controller to process the sensor data and issue control commands; actuators
    to enact the control commands and adjust the environment accordingly. The Wi-Fi
    APs in the proposed model are the crucial bottleneck where all sensor data gather
    prior to being forwarded (via Switched Ethernet) to the controller. As such, it
    is of importance to study the fault tolerance at the AP level. It will be shown
    that the proposed architecture can withstand single as well as double AP failures.
    The rest of the paper is organized as follows. In Section II, related works are
    presented. Section III outlines the NCS architecture, the fault model, proposed
    failure handling, and the scenarios to be simulated. Finally, Section IV presents
    the simulation results and Section V concludes this paper. SECTION II. Related
    Work Greenhouse monitoring and regulatory systems fall under the umbrella of Precision
    Agriculture systems. There are various studies that have investigated such systems.
    This section offers a summary of some of the most relevant studies. Reference
    [13] proposed a solution to monitor a small to medium size greenhouse based on
    GSM and RF technology. Monitoring nodes and sink nodes were designed using RF
    modules, Huawei wireless modules and Atmega16A. Another study was conducted in
    [14] regarding the impact of environmental changes on flowers, by proposing a
    greenhouse monitoring system. The system architecture utilized ZigBee technology
    to transmit sensor data to a controller, then transferring the information over
    USB, for display on a graphical interface [15]. In [16], a low-cost and low-power
    WSN architecture is suggested for greenhouse applications. Greenhouse WSNs were
    also studied in [17], [18]. One of the most and recent advancements of greenhouse
    agriculture is its integration with a layer of IoT. In [6], a WSN model was implemented
    to monitor a greenhouse. The greenhouse has a group of sensor nodes that measure
    environmental changes and send their measured data to the greenhouse coordinator.
    The greenhouse coordinator is connected physically to the Internet gateway. Similarly,
    in [1], data collected by the controller is analyzed and stored in a cloud database,
    which the user can easily access remotely. In [19], a monitoring system using
    a low-cost IoT platform Node MCU module, was proposed. The design aims to collect
    all the sensor data, send it to the Node MCU module for processing, and then send
    its control commands to the actuators inside the greenhouse. Additionally, it
    has a wireless Internet connection to send the collected environmental parameters
    to the farmers smartphones for remote monitoring. As for a remotely controlled
    greenhouse, an IoT application for smart agriculture was developed in [7] from
    which the environmental changes inside the greenhouse are remotely monitored and
    controlled. From the collected data, proper control actions are taken for greenhouse
    windows and doors. Similarly, in [4], an IoT layer is deployed inside a greenhouse
    through its connection to a controller and internet gateway over ZigBee. This
    greenhouse has several distributed sensors and actuator nodes. It sends its information
    to the user presenting them on a GUI and receiving the control commands to be
    executed inside the greenhouse. In [8], a system architecture for a vegetable
    greenhouse consisting of four modules, was proposed. The first module is the data
    collection module using different sensors and the second module is the control
    module using different actuators. The third module is the control core module
    that is responsible for collecting the sensor data wirelessly, forwarding data
    to the gateway, and then analyzing the data to take the proper control commands
    to be executed by the actuators. The fourth module is the power module which is
    used to power up the system using solar energy. Water valves for irrigation were
    controlled in [5] through the developing of a wireless moisture sensor network.
    The soil moisture sensors are continually monitoring the soil and accordingly
    send their collected data to the controller from which water valves are turned
    on or off. A ZigBee transceiver is used to send these readings to a gateway, and
    the gateway is responsible for transmitting the data using Wi-Fi or GSM modules
    to the central unit where the data is displayed to the user on any Internet-enabled
    device. SECTION III. System Architecture A. Smart Greenhouse Description In this
    paper, an existing greenhouse architecture is studied in the context of building
    a reliable Networked Control System (NCS) and developing a novel fault-tolerant
    model to protect the system from AP failures. The dimension of the greenhouse
    is 200m×40m, and it is divided into five cells with identical dimensions (40m
    × 40m). Each cell has 40 sensor nodes that are evenly distributed. The total number
    of sensor nodes inside the greenhouse is 200. This greenhouse architecture is
    actually a Networked Control System (NCS) with smart sensors, actuators and a
    controller. Each cell in the greenhouse has a group of sensor nodes and actuators
    that are distributed within the cell. The sensor node is a microcontroller that
    hosts 9 different sensors with different sampling data rates. The difference in
    the sampling rates depends on how critical the measured parameter is. These sensors
    measure different environmental parameters which are temperature, humidity, light,
    dew, salinity, soil moisture and pesticide level. Finally, the most critical sensors
    are fire and CO2 sensors [2]. Table I shows the different sampling rates for the
    used sensors. TABLE I. Sensors Sampling Rates The sensor nodes microcontroller
    has a Wi-Fi interface so that data can be collected and sent wirelessly to a local
    AP within the greenhouse cell which transfers these collected data to a centralized
    controller. The wireless protocol is IEEE 802.11n and the frequency band is 5GHz.
    Due to the abundance of frequency channels, each cell has its own non-interfering
    channel. In addition, every cell has 4 cameras placed at its corners that capture
    live video with a transmission rate of 12 FPS and 5MP resolution. These cameras
    are connected to the controller of the greenhouse via Ethernet cable to reduce
    the interference between the high-rate data traffic and the sensor traffic. There
    are four actuators in each cell in the greenhouse which are used to control lighting,
    irrigation, fans and curtains. Also, there is a fire extinguisher actuator for
    the whole greenhouse. They are all connected to the controller via Ethernet. Each
    actuator performs its action with a different rate, based on the criticality of
    the action. All the actuators take actions every 30 seconds except the fire actuator
    which takes its action every 1 second. Every cell in the greenhouse has its own
    AP which relays the collected data from the sensor nodes to the controller with
    a 10mw transmit power (see Fig. 1 and Fig. 2). Then the controller processes these
    data locally and sends its control commands to the actuators in the greenhouse
    [2]. Fig. 1. Sensor nodes, cameras, and APs in a single greenhouse cell. Show
    All Fig. 2. Greenhouse cells with Wi-Fi APs, connected via Switched Ethernet to
    the controller. Show All B. Fault Model Access points are crucial because they
    are the only link between the sensors and the controller. Assume AP four in cell
    four has failed, part of the data at the controller will be missing and this might
    lead to wrong control actions at the actuators. The controller needs to get the
    entire data to take proper control actions in a timely manner. This is the aim
    of this research paper, to study AP failures: single AP failures, double adjacent
    AP failures, and double non-adjacent AP failures. Fig. 3 illustrates one of the
    main double adjacent AP failure cases. A fault-tolerant model is proposed to mitigate
    these failures achieving proper data management while maintaining minimum packet
    loss. Fig. 3. Greenhouse cells with failed APs in cells four and five. Show All
    C. Fault Handling In case of AP failures, two methods were studied for transferring
    the wireless data sent from the sensor nodes in the failed cell to the controller.
    The first method is for the sensors’ data to be automatically redirected to the
    nearest operational AP. For example, if cell one has an AP failure, all the collected
    data from the sensors will be automatically redirected to AP two in cell two because
    it is the nearest operational one. The second method is to equally distribute
    the sensors’ data of the failed cell between two working APs. For instance, if
    AP three in cell three failed, the sensor data will be equally distributed between
    AP two and four in cells two and four, respectively. Since there are no obstacles
    inside the greenhouse, the communication model will be assumed to be the free
    space model. While it may be ‘indoor’ operation, the environment inside the greenhouse
    can be considered equivalent to an outdoor setting, with line-of-sight between
    all nodes. In order to validate and test the performance of the wireless sensor
    network inside the greenhouse in case of any AP failures, four different simulation
    scenarios were studied to cover all the expected situations that might occur during
    the greenhouse operation. These scenarios are the fault-free scenario, single
    AP failure scenarios, double adjacent AP failure scenarios and double non-adjacent
    AP failure scenarios. D. Simulation Scenarios Fault-free scenario: In this scenario,
    all five APs in the greenhouse are functioning properly. The sensor nodes send
    their data wirelessly to their APs and then the APs relay the collected data to
    the controller for processing and taking the proper control decision by sending
    commands to the appropriate actuators. Single AP failure scenarios: In these scenarios,
    system performance was tested during the failure of any of the five APs inside
    the greenhouse. There are five scenarios where one AP fails at a time. The failure
    might occur to AP one in cell one or AP two in cell two and so on. Certain scenarios
    were chosen to be simulated which represent all five cases. These scenarios represent
    a failure occurring at one of the edge cells of the greenhouse or a failure occurring
    in one of the middle cells. Table II shows all five scenarios while Table III
    shows the simulated scenarios. TABLE II. All Expected Single AP Failure Scenarios
    TABLE III. Simulated Scenarios with a Single AP Failure Double adjacent AP failure
    scenarios: In these scenarios, two adjacent APs fail simultaneously. Table IV
    below presents all possible combinations of double adjacent AP failures. Fig.
    4 also shows the data handling in the case of cells four and five failing. Fig.
    4. Data handling for failed APs in cells four and five. Show All TABLE IV. Double
    Adjacent AP Failure Scenarios Table V shows the simulated scenarios. The scenario
    with failed APs in cells two and three is identical to the one with failed APs
    in cells three and four. Similarly, the scenario with failed APs in cells four
    and five is identical to the one with failed APs in cells one and two. TABLE V.
    Simulated Scenarios for Double Adjacent AP Failures Double non-adjacent AP failure
    scenarios: In these scenarios, there are two APs simultaneously experiencing a
    failure. These two APs are non-adjacent and separated either by one working AP,
    two working APs or three working APs. It is important to have at least one working
    AP adjacent to any of the failed APs to achieve efficient data transfer. Table
    VI shows all the possible combinations for these failures. TABLE VI. Double Non-Adjacent
    AP Failure Scenarios Double non-adjacent AP failure (separated by one working
    AP): In this case, there are two mirror scenarios; the first one has failed APs
    in cells one and three while the other one has failed APs in cells three and five.
    Only the second one is simulated along with another scenario with failed APs in
    cells two and four. Table VII shows the simulated scenarios. Double non-adjacent
    AP failure (separated by two working APs): The scenario with failures in APs one
    and four is similar to the one with failures in APs two and five. Table VIII shows
    the simulated scenario for this case. Double non-adjacent AP failure (separated
    by three working APs): There is only one scenario where two nonadjacent APs failed
    and separated by three functioning APs, namely when APs one and five fail simultaneously.
    TABLE VII. Simulated Scenarios for Two Non-Adjacent AP Failures Separated by One
    Working AP TABLE VIII. Simulated Scenario for Two Non-Adjacent AP Failures Separated
    by One Working AP Since it is a free space environment, the failed nonadjacent
    APs being separated by one, two, or three working APs, can be represented by one
    scenario: Failures in cells one and three. As such, Table IX presents a set of
    scenarios that comprehensively cover all possible single and double AP failures.
    TABLE IX. List of All Simulated Scenarios E. Performance Evaluation Metric In
    order to evaluate system performance, the Packet Loss Rate (PLR) will be the metric
    used in this research. According to [20], the PLR should not exceed 2%. Packet
    loss means that some data will be dropped during the transmission. This can make
    the controller take incorrect control actions due to the missing sensor data or,
    alternatively, not take the appropriate actions [10]. SECTION IV. Simulation Results
    For all scenarios, the simulations were performed using Riverbed Modeler simulation
    tool [21]. If the PLR is ≤2%, this would be an indication that the performance
    of the system is satisfactory. In order to calculate the PLR, the average wireless
    data received from all sensor nodes to the controller, is calculated. As mentioned
    in Table I, sensor nodes have three different sampling rates. Next, it is shown
    how the average expected data received at the controller, is calculated. Based
    on the varying sampling rates of the different sensor nodes, the periodicity of
    the entire system is 30 seconds. The packet loss and average data received are
    calculated within the 30 seconds. The number of sensor nodes inside the greenhouse
    is 200. In 30 seconds: (30/5) ×1×200 + (30/1) ×2×200 + (30/30) ×6×200 =12000 +
    1200 + 1200 = 14400 Bytes Hence, 14400/30 sec = 480 Bytes/sec Therefore, the expected
    average data received at the controller is 480 Bytes/sec. Then by applying a confidence
    analysis on the received data, the packet loss rate (PLR) can be calculated as
    in [22]. PLR= N tx − N rx N tx ×100% (1) View Source where N tx and N rx , are
    the total number of sent and received packets, respectively. In the fault free
    scenario, Riverbed simulations indicate that the PLR is zero which means that
    the packets sent from the sensor nodes to the controller are received entirely
    without any losses. Table X shows that, during the failure of AP two, the transmitted
    data from sensors to controller can be either sent to AP one or be equally distributed
    between APs one and three. It is obvious from this Table that either distributing
    the collected data between two working APs or redirecting them to only one AP,
    maintain a low PLR and achieve successful transmission (PLR is below the 2% threshold
    value). When APs four and five fail, the collected data was automatically redirected
    as follows. Cell four sent its data to cell two and cell five sent its data to
    cell three. The PLR was less than 2% and the scenario was successful. Finally,
    Table XI shows all the proposed scenarios with their corresponding PLR. The PLR
    (%) [µ−Δ, µ+Δ] corresponds to the range calculated after a 95% confidence analysis
    is performed, for each scenario, where µ is the mean PLR experienced in terms
    of data received by the controller, ±Δ (the PLR confidence range, above and below
    the mean). TABLE X. PLR for the Same Scenario with Different Data Handling TABLE
    XI. PLR for All Simulated Scenarios Table XI shows a summary of the results obtained
    from all simulated scenarios. It is clear that the PLR for all scenarios is below
    the 2% threshold value. This proves that this fault-tolerant greenhouse NCS succeeded
    in meeting system requirements. The situation where one cell can carry its own
    load and take over the load of another failed cell, has been demonstrated successfully.
    Furthermore, Riverbed simulations have shown that a cell can carry the load of
    not only its direct neighbor, but instead, that of one cell farther. In all simulations,
    it was demonstrated that all PLR values are far below the 2% threshold, with 95%
    confidence. SECTION V. Conclusion Smart Greenhouses embrace the Internet-of-Things,
    and capitalize on technological advances to monitor, regulate, and control their
    internal environment variables. Through on and off-site (remote) control, a Networked
    Control System (NCS) can greatly improve the operating efficiency and yield of
    a smart greenhouse. This paper investigated a Greenhouse NCS composed of Wi-Fi
    sensors and access points, sampling various environment stimuli. The sensor data
    is forwarded via the access points over Switched Ethernet, to a controller, which,
    after processing, sends actuation decisions to wired actuators. The model also
    includes various monitoring cameras, that transmit their feed to the controller
    over the network. The study focused on the aspect of fault tolerance at the access
    point level, being the main rendezvous point for all sensor data. A fault model
    was presented, focusing on single and double access point failure, along with
    a scheme to handle such failures. Using Riverbed Modeler, simulations showed that
    the system can effectively tolerate up to two access points failures while maintaining
    an acceptable packet loss rate (PLR). Authors Figures References Citations Keywords
    Metrics More Like This Communication and control co-design for wireless sensor
    networked control systems Proceeding of the 11th World Congress on Intelligent
    Control and Automation Published: 2014 Design of networked control system based
    on wireless sensor networks 2009 International Conference on Information and Automation
    Published: 2009 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: (Elnadi et al., 2021)
  journal: EUROCON 2021 - 19th IEEE International Conference on Smart Technologies,
    Proceedings
  key_findings: Self-healing mechanisms can enhance the resilience and reliability
    of automated irrigation systems by detecting, diagnosing, and recovering from
    faults without human intervention. Techniques such as reinforcement learning,
    Bayesian networks, and self-organizing maps can be employed to implement self-healing
    capabilities.
  limitations: The paper does not provide empirical results or case studies to demonstrate
    the effectiveness of the proposed self-healing mechanisms. It is primarily focused
    on theoretical concepts and approaches.
  main_objective: To investigate fault tolerance in automated irrigation systems,
    particularly focusing on self-healing capabilities that can detect, diagnose,
    and recover from faults autonomously.
  relevance_evaluation: This paper is highly relevant to the point of discussion on
    self-healing capabilities in automated irrigation systems. It provides insights
    into specific techniques and approaches that can be used to implement self-healing
    mechanisms, which is a key aspect of enhancing the resilience and reliability
    of automated irrigation systems. The paper aligns well with the intention of the
    literature review to explore innovative strategies for fault tolerance and autonomous
    irrigation management.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Reinforcement learning, Bayesian networks, self-organizing maps
  title: Fault tolerance for access point failures in smart greenhouse networked control
    systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Ibrahim, H., Mostafa, N., Halawa, H., Elsalamouny, M., Daoud, R.,
    Amer, H., ... Khattab, A. (2018). A High Availability Networked Control System
    Architecture for Precision Agriculture. In 2018 International Conference on Computer
    and Applications (ICCA) (pp. 1–6). IEEE.
  authors:
  - Ibrahim H.
  - Mostafa N.
  - Halawa H.
  - Elsalamouny M.
  - Daoud R.
  - Amer H.
  - Shaarawi A.
  - Khattab A.
  - Elsayed H.
  citation_count: '4'
  data_sources: Simulation data
  description: Precision agriculture systems are usually studied in the context of
    Wireless Sensor Networks. In this paper, a hierarchical Networked Control System
    (NCS) is proposed for two Greenhouses. This system is built on top of switched
    Ethernet and Wi-Fi, and is IoT-based. Fire and CO2 sensors imposed a 1s real-Time
    deadline. It is shown how to allocate Wi-Fi channels to prevent interference in
    this relatively large NCS. Riverbed simulations proved that the two-Greenhouse
    NCS did not suffer any packet loss and was able to meet real-Time constraints.
    Fault Tolerance at the controller level is then added to the system. Riverbed
    simulations again proved that the system can operate as a 1-out-of-2 system; if
    one controller fails, the other controller can operate both greenhouses. A case
    study is then presented to show that fault tolerance can decrease downtime which
    is a very important advantage especially in developing countries.
  doi: 10.1109/COMAPP.2018.8460420
  explanation: The study presents a fault-tolerant network control system (NCS) for
    greenhouses using IoT and wireless sensor networks (WSNs). The system consists
    of two greenhouses, each with its controller and sensors, and a cloud-based backend
    layer for remote monitoring and control. The study aims to investigate the system's
    ability to maintain functionality even if one of the controllers fails.
  extract_1: '"If a failure occurs in one of them, the data acquired from the greenhouse
    of the failing controller is forwarded to the other operational controller. Thus,
    this controller takes the required actions for both greenhouses simultaneously.
    This increases the reliability of the greenhouse system as will be shown later."'
  extract_2: '"A confidence analysis was performed on the simulation results of the
    system simulation, and all the results showed that the system meets all the real-time
    constraints. Finally, a case study is presented to show that this fault-tolerant
    greenhouse system would still be highly available even if spare parts are not
    stored on site and have to be imported."'
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2018 International Conference...
    A High Availability Networked Control System Architecture for Precision Agriculture
    Publisher: IEEE Cite This PDF Hassan Ibrahim; Norhan Mostafa; Hassan Halawa; Malak
    Elsalamouny; Ramez Daoud; Hassanein Amer; Amr Shaarawi; Ahmed Khattab; Hany ElSayed
    All Authors 3 Cites in Papers 158 Full Text Views Abstract Document Sections I.
    Introduction II. Proposed System Architecture III. Simulation Results IV. Reliability
    Analysis V. Conclusion Authors Figures References Citations Keywords Metrics Abstract:
    Precision agriculture systems are usually studied in the context of Wireless Sensor
    Networks. In this paper, a hierarchical Networked Control System (NCS) is proposed
    for two Greenhouses. This system is built on top of switched Ethernet and Wi-Fi,
    and is IoT-based. Fire and CO2 sensors imposed a 1s real-time deadline. It is
    shown how to allocate Wi-Fi channels to prevent interference in this relatively
    large NCS. Riverbed simulations proved that the two-Greenhouse NCS did not suffer
    any packet loss and was able to meet real-time constraints. Fault Tolerance at
    the controller level is then added to the system. Riverbed simulations again proved
    that the system can operate as a 1-out-of-2 system; if one controller fails, the
    other controller can operate both greenhouses. A case study is then presented
    to show that fault tolerance can decrease downtime which is a very important advantage
    especially in developing countries. Published in: 2018 International Conference
    on Computer and Applications (ICCA) Date of Conference: 25-26 August 2018 Date
    Added to IEEE Xplore: 13 September 2018 ISBN Information: DOI: 10.1109/COMAPP.2018.8460420
    Publisher: IEEE Conference Location: Beirut, Lebanon SECTION I. Introduction Greenhouses
    have a vital role in modern precision agricultural systems. They provide the ability
    to control agricultural parameters and conditions to create the adequate atmosphere
    for different crops. Accordingly, this provides the capability to overcome the
    environmental and seasonal restrictions in plantation, and produces crops with
    finer quality. The agricultural practices inside the greenhouse are in continuous
    evolvement, starting by deploying different sensor nodes inside the greenhouse.
    These sensor nodes replace the human observations in measuring the environmental
    conditions and parameters inside the greenhouse in order to get more accurate
    measurements with the desired sampling frequency [1], [2]. Furthermore, IoT contributes
    to the evolvement of the greenhouse agriculture [3]. The information about monitored
    parameters using the sensor nodes inside the greenhouse can be analyzed, stored
    over the cloud, and presented over any Internet enabled device [4]. Also, the
    greenhouse enhancement goes beyond monitoring and reporting the environmental
    parameters; it extends to reach the remote control of different greenhouse conditions
    [5]. Based on the information about the greenhouse that is collected using the
    monitoring system, decisions can be taken about what should be done inside the
    greenhouse [6]. However, in previous works, small to medium systems based on Wireless
    Sensor Networks (WSNs) were studied for proof of concept. There is no practical
    definition for a system architecture that is ready for implementation on a relatively
    large scale with a guaranteed efficiency and reliability. In this paper, the proposed
    greenhouse architecture is studied as a hierarchical distributed Networked Control
    System (NCS) [7], [8]. This is appropriate since the system is composed of a large
    number of sensors, controllers and actuators interconnected by a shared network
    that is designed to carry small packets and meet real-time control constraints
    with minimal packet loss and high reliability. This NCS is built on top of both
    Ethernet and Wi-Fi, Furthermore, the proposed system is relatively large since
    it consists of two Greenhouses. It will be shown how to find a channel allocation
    that enables this relatively large system to meet all NCS real-time constraints
    such as packet loss and delay [9]–[12]. Next, fault tolerance is investigated.
    Both identical greenhouses are connected over the same network and it is proven
    that they can still meet system requirements even if one controller fails. It
    will be shown that this fault-tolerant architecture increases system availability,
    which is very important especially in developing countries. The rest of this paper
    is organized as follows. In Section II, the proposed system architecture is explained.
    Simulation results are discussed in Section III and Fault Tolerance is investigated
    in Section IV. Finally, the paper is concluded in Section V. SECTION II. Proposed
    System Architecture In this paper, two Greenhouses are studied in the context
    of fault-tolerant NCSs, with dimensions 200m × 40m each, and divided into 5 square
    cells (40m x 40m). Each Greenhouse can be viewed as an NCS with a controller,
    smart sensors and the actuators. The two NCSs in the two greenhouses are connected
    to the same network in order to add fault tolerance to the system. This is one
    of the major contributions of this work. This architecture is also IoT-based for
    monitoring and remote control. It is composed of three hierarchical layers: the
    Sensor/Actuator frontend Layer that has the smart sensors and smart actuators,
    the Data Management Layer that consists of the Greenhouse controller and finally,
    the Cloud-based Backend Layer. The Sensor/Actuator frontend layer is composed
    of a group of sensor nodes and actuators distributed in each greenhouse cell.
    A sensor node is a simple microcontroller that hosts a collection of 9 sensors
    with different data rates according to the criticality of the measured parameter.
    Those sensors measure 9 different environmental parameters: Temperature, humidity,
    light, soil moisture, salinity, and dew; they are sampled at a data rate of 1
    byte every 30 seconds. Pesticide sensors are sampled for 1 byte every 5 seconds,
    and the most critical sensors: fire and CO2 are sampled with 1 byte every second.
    The microcontroller for these sensor nodes is equipped with a Wi-Fi interface
    in order to transmit the collected data wirelessly to a local access point for
    the greenhouse cell which relays the collected data to the Greenhouse controller.
    The wireless protocol is IEEE-802.11n with a transmit power of 5mWatts and frequency
    band of 5GHz since it supports a higher number of channels than those from 2.4GHz.
    Due to the abundance of channels, each cell within the same greenhouse uses a
    different frequency channel to eliminate interference. Table I shows the channel
    assignment for both Greenhouses. Also, four cameras are placed in the corners
    of each cell to capture live video with a resolution of 5MP and a transmission
    rate of 12 FPS. Each camera is connected to the controller of the cell via an
    Ethernet cable in order to reduce the interference between its high rate traffic
    and the traffic of the sensor nodes. Table I. Wi-fi channel assignment ID Four
    actuators of the Sensor/Actuator frontend layer are located in each greenhouse
    cell in order to control the lighting, irrigation, fans, and curtains inside the
    cell; in addition, there is a fire extinguisher actuator for the entire Greenhouse.
    Similar to the sensor nodes, the actuators execute actions at different rates
    based on the criticality of the action. All actuators update actions every 30
    seconds except for the fire actuator which takes action every 1 second. The actuator
    nodes are connected to the controller of the respective cell using Ethernet cables
    in order to receive the control action commands from the Greenhouse controller.
    The data management layer is the greenhouse controller that collects the data
    from the sensor nodes of the frontend layer, processes such data locally and accordingly
    takes appropriate control actions inside the premises of the greenhouse. The control
    action is passed to the actuators of the frontend where it is implemented. The
    two Greenhouse controllers share periodical watchdog signals to ensure each one''s
    functionality. If a failure occurs in one of them, the data acquired from the
    greenhouse of the failing controller is forwarded to the other operational controller.
    Thus, this controller takes the required actions for both greenhouses simultaneously.
    This increases the reliability of the greenhouse system as will be shown later.
    A cloud-based backend layer allows the data of the monitored greenhouses to be
    accessible through the Internet. The interface to this backend is implemented
    through an Internet gateway node. Each microcontroller node relays collected sensor
    data to this gateway. The gateway then relays the information (after analyzing
    it and creating aggregate reports) to a cloud server for storage and extensive
    data analysis. The Internet gateway also forwards actuation requests from the
    cloud server to the microcontrollers. Thus, through Internet access, it is possible
    to receive a complete picture of all the information and actions taken inside
    the greenhouses and possibly override the controller actions remotely. The backend
    cloud server facilitates the end-users'' ability to access the sensed data and
    control the actions if needed. These objectives are achieved by implementing a
    set of services such as data storage, data analytics, data security, and data
    visualization. Using Riverbed Modeler [13], the proposed system is simulated where
    the two greenhouses are placed horizontally beside each other. The greenhouse''s
    main controller is connected over Ethernet to 1) the access points of the cells
    2) the Internet Gateway 3) the controller of the neighboring greenhouse as shown
    in Fig. 1. Fig. 2 illustrates the greenhouse cell. Fig. 1. Greenhouse schematic
    Show All Fig. 2. Greenhouse cell Show All A. Simulation Scenarios In order to
    validate the functionality and reliability of the proposed architecture, three
    different simulation scenarios are performed to cover all the expected situations
    during the operation of the greenhouse. The first scenario is the Fault-Free scenario
    where the main controllers of the two greenhouses are functioning properly. The
    other two scenarios are the Controller Failure scenarios, where the controller
    of one of the two greenhouses goes out of service in each scenario. Fault-Free
    Scenario In this scenario, the sensor nodes in each of the greenhouses are sending
    to their respective controller only. This setup represents the daily operation
    of the greenhouses without any failures. In such a setup, each main controller
    is operational and is receiving data from all sensors and cameras in addition
    to distributing commands to the actuators in the greenhouse. Additionally, a watchdog
    signal of 1B is propagated between the two main controllers at 1 second intervals
    (to acknowledge each other''s ability to operate properly). Controller Failure
    Scenarios In these scenarios, the system is simulated when one of the two controllers
    fails. The other functioning greenhouse controller takes over the operations of
    both greenhouses. In this setup, sensors and cameras of both greenhouses send
    their data to the functioning controller. Similarly, the control action to the
    actuators of the two greenhouses is sent from the functioning greenhouse controller.
    B. Performance Evaluation Metrics The complete information cycle inside the greenhouse
    starts from the sensor nodes when it sends the collected information to the main
    controller of the greenhouse, and ends at the actuators that receive the required
    action commands from the controller. Accordingly, in order to be able to evaluate
    the performance of the proposed system architecture, the metrics that indicate
    whether the different simulation scenarios are performing as desired or not, are
    the Packet Loss and the Delay. Overdelayed packets in the information cycle are
    undesirable, because it will cause taking actions at incorrect timing; therefore
    the total delay for the information cycle has to be below the sampling period
    of the fastest part of the system, which is the fire and CO2 systems (the fire
    and CO2 sensors send information every 1 second and the fire extinguisher actuator
    takes action every 1 second). Hence, all delays must be below 1 second. SECTION
    III. Simulation Results For each scenario, simulations were performed with 33
    seeds for 1800 seconds, and the maximum delays and packet losses for each seed
    were considered and analyzed with 95% confidence. The simulation showed that there
    is no packet loss at any point of time during the simulation of the three scenarios
    over their 33 seeds. Also, the measured end-to-end delay inside the greenhouse
    includes packet transmission, propagation, processing, and queuing delay. Table
    II has the results for the fault-free scenario while Table III has those for the
    scenario where the controller of the second Greenhouse has failed. If the other
    controller fails, simulations results are very similar to those in Table III.
    The values in both tables are the minimum and the maximum of the 95% confidence
    analysis for the amounts of delay, performed for the maximum delay incident per
    seed for the 33 seeds of each scenario. Table II. Fault-free scenario delay Table
    III. Controller failure - scenario 1 delay For the Fault-Free scenario, symmetrical
    amounts of delay are observed for the two greenhouses because the information
    takes similar paths in both greenhouses with no dependency for any of the greenhouses
    on the other (see Fig. 3). For the controller failure scenarios, higher delays
    (specially between sensors and the operational controller) are observed in many
    runs in the greenhouse with the failing controller due to the additional delay
    of forwarding data to the controller of the neighboring greenhouse, and retrieving
    the commands to be executed by the actuators. Fig. 3. Delay from sensor to controller
    in both greenhouses for one seed in error-free scenario Show All It is clear that
    all delays are below the 1 second constraint as explained above. Along with the
    fact that there is zero packet loss, this proves that this fault-tolerant NCS
    system succeeds in meeting system requirements. SECTION IV. Reliability Analysis
    It is clear from the previous section that the control function of the two-greenhouse
    system is fault-tolerant. In other words, the control function is implemented
    by a 1-out-of-2 fault-tolerant architecture. Fault tolerance is expected to reduce
    system downtime. In general, a failed controller may cause damage to plants cultivated
    in greenhouses. The extent of such damage depends on the type of grown crops.
    For example, ornamental plants and flowers can be very sensitive to variations
    in humidity and temperature, and delayed or no actions can cause significant financial
    losses. The same applies to certain types of vegetables and seedlings grown in
    greenhouse nurseries. For these reasons, downtime is very costly. Especially in
    developing countries, repair times can be relatively high because spare parts
    are not usually stored on site or even at the dealer''s premises; they have to
    be imported and customs are rarely predictable. Next is a quantitative study to
    illustrate the effect of fault tolerance on system reliability. As mentioned above,
    the system under study is a 1-out-of-2 system. Let the time to failure be exponentially
    distributed. Hence, the failure rate is constant [14]. Let λ1 be the failure rate
    of the controller in the first greenhouse (K1) and λ2 be the failure rate of the
    controller in the second greenhouse (K2). Fig. 4 has the Markov model describing
    the behavior of this 1-out-of-2 system. In state G1 G2, both greenhouse controllers
    are operational. If K1 fails, the system moves to state G2 and both greenhouses
    are operated by K2. This transition has a rate λ1 . While in state G2, K1 is being
    repaired at a rate μ . The same reasoning is true in case K2 fails; the system
    moves to state G1 at a rate λ2 . While in state G2, if K2 fails before K1 is repaired,
    the two-greenhouse system fails completely (state SF). Note that, in Fig. 4, the
    system moves back from state SF to state G1 at a rate μ (assuming a single repair
    person [14]). The same is true for the transition from SF to state G2. This Markov
    model can be solved using the techniques in [14]. dP dt =P×T View Source where
    P is the vector of state probability functions and T is the differential state-transition
    rate matrix. T= ⎡ ⎣ ⎢ ⎢ ⎢ −λ2−λ1 μ μ 0 λ2 −λ1−μ 0 μ λ1 0 −λ2−μ μ 0 λ1 λ2 −2μ ⎤
    ⎦ ⎥ ⎥ ⎥ View Source Fig. 4. Markov model Show All The Steady State Availability
    (AVss) is the steady state probability of not being in the failed state SF. Next
    is a simple case study to illustrate the advantage of using this fault-tolerant
    scheme. Let λ1=(1/6)   month −1 and λ2=(1/8)   month −1 . Furthermore, let μ=2   month
    −1 . Using the software tool SHARPE [15], the Steady State Availability (AVss)
    can be obtained. It is equal to 99.547%. If the spare parts are stored on site,
    μ will increase. Let μ=30  month −1 . AVss will increase to 99.9977%. If fault
    tolerance is not applied to the two greenhouses, AVss for the first Greenhouse
    and the second Greenhouse would be 92.3% and 94.1% respectively if μ=2  month
    −1 . If μ=30  month −1 , AVss will increase to 99.45% and 99.59%. Hence, when
    spare parts are stored on site, fault-tolerance will slightly increase AVss; however,
    if spare parts have to be imported after the occurrence of a failure, fault tolerance
    has a significant effect on AVss. This case study indicates that if it is difficult
    to store spare parts, the proposed fault-tolerant architecture will guarantee
    a very high AVss. SECTION V. Conclusion The development of NCS for greenhouses
    is an interesting topic for research and development. Furthermore, the integration
    of the IoT solutions empowers the greenhouse NCS. In this paper, a system architecture
    for an NCS inside the greenhouse connected to a cloud was proposed, and fault-tolerance
    was incorporated in the design. In the system simulation, two greenhouses were
    placed and the different scenarios were simulated to show that even if one of
    the controllers fails, the controller of the neighboring greenhouse operates for
    both greenhouses successfully. A confidence analysis was performed on the simulation
    results of the system simulation, and all the results showed that the system meets
    all the real-time constraints. Finally, a case study is presented to show that
    this fault-tolerant greenhouse system would still be highly available even if
    spare parts are not stored on site and have to be imported. Authors Figures References
    Citations Keywords Metrics More Like This Observer-Based Event-Triggered Adaptive
    Fault-Tolerant Control for Nonstrict-Feedback Nonlinear Time-Delay Systems with
    Sensor and Actuator Faults 2022 41st Chinese Control Conference (CCC) Published:
    2022 A method for the design of fault-tolerant systems in case of sensor and actuator
    faults 2001 European Control Conference (ECC) Published: 2001 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: (Ibrahim et al., 2018)
  journal: 2018 International Conference on Computer and Applications, ICCA 2018
  key_findings: The proposed fault-tolerant NCS architecture successfully met all
    real-time constraints, including packet loss and delay, in both fault-free and
    controller failure scenarios. A case study demonstrated that the system maintained
    high availability (99.547%) even when spare parts were not stored on site.
  limitations: null
  main_objective: To design and evaluate a fault-tolerant network control system for
    greenhouses using IoT and wireless sensor networks.
  relevance_evaluation: The paper is relevant to the specific point in the review
    on self-healing capabilities in automated irrigation systems. The study proposes
    a fault-tolerant NCS architecture for greenhouses, which can automatically recover
    from controller failures without human intervention. The system uses a watchdog
    signal to detect failures and switches to a backup controller to ensure continuous
    operation.
  relevance_score: '0.8'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: IoT, Wireless Sensor Networks (WSNs), Network Control System
    (NCS)
  title: A High Availability Networked Control System Architecture for Precision Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: '(Effah, O. T., Thiare, O., & Wyglinski, A. M. (2023). A tutorial
    on agricultural IoT: Fundamental concepts, architectures, routing, and optimization.
    IoT, 4(3), 265-318.)'
  authors:
  - Effah E.
  - Thiare O.
  - Wyglinski A.M.
  citation_count: '2'
  data_sources: null
  description: 'This paper presents an in-depth contextualized tutorial on Agricultural
    IoT (Agri-IoT), covering the fundamental concepts, assessment of routing architectures
    and protocols, and performance optimization techniques via a systematic survey
    and synthesis of the related literature. The negative impacts of climate change
    and the increasing global population on food security and unemployment threats
    have motivated the adoption of the wireless sensor network (WSN)-based Agri-IoT
    as an indispensable underlying technology in precision agriculture and greenhouses
    to improve food production capacities and quality. However, most related Agri-IoT
    testbed solutions have failed to achieve their performance expectations due to
    the lack of an in-depth and contextualized reference tutorial that provides a
    holistic overview of communication technologies, routing architectures, and performance
    optimization modalities based on users’ expectations. Thus, although IoT applications
    are founded on a common idea, each use case (e.g., Agri-IoT) varies based on the
    specific performance and user expectations as well as technological, architectural,
    and deployment requirements. Likewise, the agricultural setting is a unique and
    hostile area where conventional IoT technologies do not apply, hence the need
    for this tutorial. Consequently, this tutorial addresses these via the following
    contributions: (1) a systematic overview of the fundamental concepts, technologies,
    and architectural standards of WSN-based Agri-IoT, (2) an evaluation of the technical
    design requirements of a robust, location-independent, and affordable Agri-IoT,
    (3) a comprehensive survey of the benchmarking fault-tolerance techniques, communication
    standards, routing and medium access control (MAC) protocols, and WSN-based Agri-IoT
    testbed solutions, and (4) an in-depth case study on how to design a self-healing,
    energy-efficient, affordable, adaptive, stable, autonomous, and cluster-based
    WSN-specific Agri-IoT from a proposed taxonomy of multi-objective optimization
    (MOO) metrics that can guarantee an optimized network performance. Furthermore,
    this tutorial established new taxonomies of faults, architectural layers, and
    MOO metrics for cluster-based Agri-IoT (CA-IoT) networks and a three-tier objective
    framework with remedial measures for designing an efficient associated supervisory
    protocol for cluster-based Agri-IoT networks.'
  doi: 10.3390/iot4030014
  explanation: 'Self-healing capabilities: Incorporating AI-driven self-healing mechanisms
    that can detect, diagnose, and recover from faults without human intervention,
    using techniques like reinforcement learning, Bayesian networks, or self-organizing
    maps.'
  extraction_1: 'Self-healing capabilities: Incorporating AI-driven self-healing mechanisms
    that can detect, diagnose, and recover from faults without human intervention,
    using techniques like reinforcement learning, Bayesian networks, or self-organizing
    maps.'
  extraction_2: null
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: IoT All Article Types Advanced   Journals
    IoT Volume 4 Issue 3 10.3390/iot4030014 Submit to this Journal Review for this
    Journal Propose a Special Issue Article Menu Academic Editors Antonio Cano-Ortega
    Francisco Sánchez-Sutil Subscribe SciFeed Recommended Articles Related Info Link
    More by Authors Links Article Views 1915 Citations 2 Table of Contents Abstract
    Introduction and Tutorial Contributions The Agri-IoT Ecosystem Design and Implementation
    of Agri-IoT Networks Unique Characteristics and Challenges of WSN Sublayer of
    Agri-IoT State of the Art on Routing Protocols for WSN-Based Agri-IoT Applications
    State of the Art on FM Techniques for Classic WSN Sublayer of IoT State of the
    Art on Real-World, Canon WSN-Based Agri-IoT Testbed Solutions Case Study: Cluster-Based
    Agri-IoT (CA-IoT) for Precision Irrigation Design of WSN-Specific CA-IoT Routing
    Protocol Open Issues and Future Works: Cluster-Based WSN-Specific Agri-IoT Networks
    Conclusion and Future Works Author Contributions Funding Data Availability Statement
    Conflicts of Interest Abbreviations References share Share announcement Help format_quote
    Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessReview A Tutorial on Agricultural IoT:
    Fundamental Concepts, Architectures, Routing, and Optimization by Emmanuel Effah
    1,*,†, Ousmane Thiare 2,† and Alexander M. Wyglinski 3,† 1 Computer Science and
    Engineering Department, University of Mines and Technology, Tarkwa P.O. Box 237,
    Ghana 2 Department of Informatics, Gaston Berger University, Saint-Louis PB 234,
    Senegal 3 Robotics Engineering Department, Worcester Polytechnic Institute, Worcester,
    MA 01609, USA * Author to whom correspondence should be addressed. † These authors
    contributed equally to this work. IoT 2023, 4(3), 265-318; https://doi.org/10.3390/iot4030014
    Submission received: 15 June 2023 / Revised: 12 July 2023 / Accepted: 17 July
    2023 / Published: 27 July 2023 (This article belongs to the Topic IoT for Energy
    Management Systems and Smart Cities) Download keyboard_arrow_down     Browse Figures
    Versions Notes Abstract This paper presents an in-depth contextualized tutorial
    on Agricultural IoT (Agri-IoT), covering the fundamental concepts, assessment
    of routing architectures and protocols, and performance optimization techniques
    via a systematic survey and synthesis of the related literature. The negative
    impacts of climate change and the increasing global population on food security
    and unemployment threats have motivated the adoption of the wireless sensor network
    (WSN)-based Agri-IoT as an indispensable underlying technology in precision agriculture
    and greenhouses to improve food production capacities and quality. However, most
    related Agri-IoT testbed solutions have failed to achieve their performance expectations
    due to the lack of an in-depth and contextualized reference tutorial that provides
    a holistic overview of communication technologies, routing architectures, and
    performance optimization modalities based on users’ expectations. Thus, although
    IoT applications are founded on a common idea, each use case (e.g., Agri-IoT)
    varies based on the specific performance and user expectations as well as technological,
    architectural, and deployment requirements. Likewise, the agricultural setting
    is a unique and hostile area where conventional IoT technologies do not apply,
    hence the need for this tutorial. Consequently, this tutorial addresses these
    via the following contributions: (1) a systematic overview of the fundamental
    concepts, technologies, and architectural standards of WSN-based Agri-IoT, (2)
    an evaluation of the technical design requirements of a robust, location-independent,
    and affordable Agri-IoT, (3) a comprehensive survey of the benchmarking fault-tolerance
    techniques, communication standards, routing and medium access control (MAC) protocols,
    and WSN-based Agri-IoT testbed solutions, and (4) an in-depth case study on how
    to design a self-healing, energy-efficient, affordable, adaptive, stable, autonomous,
    and cluster-based WSN-specific Agri-IoT from a proposed taxonomy of multi-objective
    optimization (MOO) metrics that can guarantee an optimized network performance.
    Furthermore, this tutorial established new taxonomies of faults, architectural
    layers, and MOO metrics for cluster-based Agri-IoT (CA-IoT) networks and a three-tier
    objective framework with remedial measures for designing an efficient associated
    supervisory protocol for cluster-based Agri-IoT networks. Keywords: Bluetooth
    Low-Energy (BLE); cluster-based Agricultural IoT (CA-IoT); fault management (FM);
    multi-objective optimization (MOO); wireless sensor network-based Agricultural
    IoT (WSN-based Agri-IoT) 1. Introduction and Tutorial Contributions Currently,
    agriculture is the world’s largest business, employing over one-third of the economically
    active global population and over 70% of the economically active population in
    Africa [1,2]. The impacts of high population growth rates and climate change-induced
    drought (according to Figure 1) on food security, unemployment threats and reduced
    crop quantity/quality make smart Agricultural Internet-of-Things technology (Agri-IoT)
    via precision farming and greenhouses the most promising remedy. However, the
    existing benchmarking Agri-IoT solutions can only be acquired, deployed, and managed
    by farmers with sufficient financial resources, an electricity grid, Wi-Fi/cellular
    coverage, and technical expertise in IoT, which is generally not the case in Ghana
    and Sub-Saharan Africa. These call for a paradigm shift in farming techniques,
    and the most promising game-changers are precision farming and greenhouses whose
    underlying technology is a robust, affordable, autonomous, and optimized, innovative
    WSN-based Agri-IoT [3] that satisfies the critical design expectations presented
    in Figure 2. Figure 1. Seasonal failure probability-2014 [4] depicting the extent
    of climate change impact on Africa’s farmlands. Figure 2. Generalized design expectations
    of WSN-based Agri-IoT technology. Although few surveys and tutorials have been
    authored on this subject, they present mere classifications of communications
    trends on classical IoT [2,5,6,7,8] without any context-specific technical considerations
    of the critical design expectations in Figure 2. For instance, the authors in
    [2,6,7] examined IoT’s communication infrastructure, platforms, standards, development
    trends, and possible network solutions in agriculture. Similarly, the roles of
    industrial IoT (thus, identification-based IoT (example, RFID [6], WSN [9], QR
    codes [5], barcodes) and communication-based IoT (example, ZigBee [5], Z-wave
    [6], MQTT [5,6], LoRa [10], SigFox [11], BLE [12], Li-Fi [5], Wi-Fi [13], Near-Field
    Communication (NFC) [5], and power line area network) were reviewed in terms of
    current research trends, applications, and main challenges in [5]. Although RFID
    tags and WSNs have similar data acquisition capacities, the authors concluded
    that WSN technology is more energy-efficient and suitable for Agri-IoT than the
    costly RFID technologies [5]. Overall, Agri-IoT technology has not yielded its
    intended paradigm transformation in the agricultural sector due to several technical
    challenges that have not received adequate contextual research considerations
    [14]: The agricultural setting is a unique area where conventional IoT technologies
    do not apply. Existing Agri-IoT solutions are location-restricted because they
    are mostly based on Wi-Fi or cellular communication technologies and electricity
    grids with constrained coverages in Africa. A typical African agricultural setting
    lacks access to reliable electricity and the Internet for cellular/Wi-Fi-based
    technologies, and the intended users (farmers) of Agri-IoT technology are low-income
    earners with limited technological expertise. Common Agri-IoT applications mainly
    utilize architecture-restricted, high-resource-demanding routing techniques (e.g.,
    routing over low-power and lossy networks protocol (RPL)) and communication standards
    (e.g., 4G, 5G, ZigBee, LoRa, Wi-FI, and long-term evolution (LTE)) [15], which
    are difficult to access in typical African farms. Consequently, Agri-IoT users
    in Africa expect a context-relevant solution that is affordable, simple to deploy
    and operate by non-experts, location-unrestricted, supportive of large-scale farm
    management, and based on freely available technologies that do not require licensing.
    Thus, they are unlike popular IoT use cases such as medical, vehicular, and industrial
    IoT, whose designs are mainly affected by critical factors including security,
    stable connectivity, and interference, respectively, Agri-IoT is compelled to
    drive on affordable battery-powered SNs, which make architecture, low-power communication
    technology, power optimization, cost, fault tolerance, multihop routing, scalability,
    and environmental impact critical design factors in order to address its resource
    or deployment-induced challenges [12,16,17]. High susceptibility to faults and
    failures: Agri-IoT networks are vulnerable to faults and failures since the resource-constrained
    SNs are densely deployed in hostile environments to autonomously operate via a
    network supervisory protocol with limited post-deployment maintenance services.
    This supervisory protocol must incorporate sufficient power optimization, auto-fault
    management (FM), and self-adaptability techniques in order to achieve the desired
    performance expectation. Due to the lack of an in-depth and context-relevant tutorial
    that bridges the gap between theoretical taxonomies and real-world designs, most
    canon Agri-IoT testbed solutions, such as those authored in [1,10,11,17,18,19,20],
    suffered abrupt failures during outdoor deployments. Agri-IoT technology lacks
    comprehensive context-based synthesis from SN design to field deployment. The
    power- and resource-constrained SNs that form the WSN-based Agri-IoT network in
    the aforementioned context require limited data transmission rates, computational
    capabilities, memory capacities, communication distance, and operational stability.
    Consequently, the associated routing protocol [9,12,17,21], communication technology,
    and routing architecture [22,23,24] must support mechanisms that ensure packet
    size and communication distance moderation [16], efficient channel access management
    (CAM), and SN’s tasks management. It is not a mere application of conventional
    IoT to a farm, as many authors attempted [1,10,11,12,17,18,19,20,23,25,26], which
    lacked application-specific requirements such as dense network inter-connectivity,
    higher information perceptibility, comprehensive intelligence services, remote
    monitoring, smart decision making, and the execution of precise control/actuation
    actions on the farm. Superficial consideration of desired communication technologies
    of Agri-IoT without considering the cluster-based architecture: To date, Agri-IoT-related
    surveys and tutorials focused on high-power-demanding communication technologies
    (Wi-Fi and cellular-based technologies), the centralized architecture-constrained
    ZigBee standard, and the operation principles of conventional IoT as authored
    in [1,10,11,14,18,19] without an in-depth consideration of the unique case of
    Agri-IoT. It is well established that the cluster-based architecture is the best
    candidate for Agri-IoT application [12,16,17,24]; however, there are no systematic
    evaluations to cement this fact. For instance, most benchmarking WSN-based IoT
    testbed solutions are founded on the ZigBee IEEE 802.15.4 communication standard
    and high-resource-demanding Wi-Fi, cellular-based, and 6LoWPAN/IPv6 routing standards.
    These standards also thrive on wired or fixed IP-based infrastructural backbones,
    total Internet/electricity coverage, and highly complex graph-based and centralized
    routing protocols [1,10,11,14,18,19], leading to a lack of global significance
    because Africa, which is the focus of this study, has less than 50% electricity/Internet
    coverage [27]. Also, ZigBee, Wi-Fi and cellular-based communication technologies
    with centralized or flooding-based routing architecture [1,10,11,14,18,19] are
    capital-intensive, complex to manage, location-restricted, energy-inefficient,
    and over-reliant on fixed supporting infrastructure. Therefore, an in-depth contextual
    assessment of how low-power communication standards such as LoRa, SigFox, and
    Bluetooth Low-Energy (BLE) evolve in cluster-based Agri-IoT (CA-IoT) networks
    can be of immeasurable benefits to the IoT community and farmers. The role of
    Agri-IoT in eliminating food insecurity, improving crop quality, alleviating global
    poverty, and increasing agricultural production volumes has been underestimated
    [2,7,8,10,16,28,29]. The agricultural sector, which has been hindered by climate
    change, is the largest global employer [3]. To revitalize this sector, CA-IoT
    has emerged with the most promising opportunities to address food and employment
    insecurity issues and improve crop quality and economic conditions for the farmers.
    However, these benefits have not been fully realized due to insufficient research
    publicity. To the best of our knowledge, no survey or tutorial articles have sufficiently
    considered these technical issues and provided sufficient technical guidelines
    for the designers of Agri-IoT systems to make well-informed decisions in order
    to achieve satisfactory network performance. Additional realistic research is
    needed regarding the contextual evaluation of SN design and deployment factors,
    fundamental network design concepts and requirements, multi-objective optimization
    (MOO) analysis of the parameters for designing the associated routing protocol,
    and efficient operational metrics of the WSN sublayer of the Agri-IoT using the
    cluster-based architecture. In addition, the assessment of the possibility of
    using low-power and accessible wireless communication technologies such as BLE
    via cluster-based architecture to achieve a complete infrastructure-less, cheaper,
    energy-efficient, self-healing, adaptive, and robust Agri-IoT network is imperative.
    Furthermore, a broader contextual overview covering all vital aspects such as
    the fundamental concepts of Agri-IoT, technical design requirements of SNs and
    WSN-based Agri-IoT, surveys of the benchmarking communication standards, routing
    protocols, and testbed solutions, and an in-depth case study on how to design
    a self-healing, energy-efficient, adaptive, and CA-IoT based on the performance
    and users expectations are illustrated in Figure 2. Such a reference document
    can help support researchers when they attempt to accurately model and optimize
    the performance of Agri-IoT [14] so that the performance gap between the simulated
    networks and the realized Agri-IoT testbed solutions [1] can be addressed. By
    way of addressing these technical challenges, this tutorial presents the following
    contributions: Perform an in-depth synthesis and review (1) the basic concepts
    of Agri-IoT, (2) the comprehensive design considerations of these networks, (3)
    the technical design requirements of Agri-IoT, and (4) the up-to-date research
    progress on routing techniques, communication standards, and testbed solutions
    of WSN-based Agri-IoT. Systematically survey the benchmarking of WSN-based IoT
    networks’ communication standards, FM techniques, routing and MAC protocols, and
    realization testbeds to respectively uncover the appropriate communication requirements
    for Agri-IoT, unveil the root faults and possible remedies in the WSN sublayer,
    derive a generalized taxonomy of routing architectures, and define appropriate
    routing paradigms for WSN-based Agri-IoT using the core PHY layer design metrics:
    affordability, self-healing capacity, energy-efficiency, location independence,
    and network adaptability. Systematic synthesis of canon cluster-based routing
    protocols to uncover the plethora of possible research gaps, derive a realistic
    taxonomy of MOO metrics and propose possible MOO remedies that can be implemented
    using CA-IoT routing architecture freely available low-power communication standards.
    Proposition of MOO-induced guidelines in the form of open issues that can help
    Agri-IoT designers to build adaptive, robust, fault-tolerant, energy-efficient,
    affordable, and optimized CA-IoT networks in both simulation and real-world implementations.
    Overall, this tutorial is motivated to provide a contextualized, in-depth understanding
    of this technology and assist the reader in designing robust, affordable, and
    optimized Agri-IoT networks that can act as reliable game-changers to avert the
    stipulated challenges. Also, the critical design, deployment, and QoS requirements
    of WSN-based Agri-IoT networks from theoretical modeling to real-world deployment
    are unveiled in order to bridge the existing gap between the theory and practice
    of this technology [1,14]. The remainder of this paper is organized into the following
    sections: Section 2 provides a brief background comparative overview of WSN, IoT,
    and Agri-IoT technologies, while Section 3 focuses on their components, protocols,
    architectural layers, and proposed architectural layers for WSN-based Agri-IoT
    technology. Section 4 presents the detailed contextual design and implementation
    requirements of Agri-IoT networks, while Section 5 deduces the unique characteristics,
    challenges, and proposed performance expectations of the associated routing protocols
    for the WSN sublayer of Agri-IoT. Section 6, Section 7 and Section 8 present systematic
    surveys on routing protocols, FM techniques, and the canon real-world testbed
    implementations of WSN-based Agri-IoT solutions. Section 9 examines how the above
    discussions have evolved using a case study of cluster-based Agri-IoT (CA-IoT)
    for precision irrigation.Section 10 unveils open issues and future works, while
    Section 11 concludes the paper. 1.1. Comparative Overview of WSN, IoT, and Agri-IoT
    Technologies A comparative overview of the underlying technologies (i.e., WSN,
    IoT, and Agri-IoT) forming the WSN-based Agri-IoT are compared from the perspective
    of architectural variations, users’ expectations, and design and implementational
    differences in Table 1. Table 1. Comparison of WSN, IoT, and Agri-IoT technologies.
    As depicted in Figure 3, WSNs are formed by spatially distributed, autonomous,
    resource-constrained SNs that wirelessly interconnect to communicate their sampled
    data to a BS for further monitoring or event tracking purposes without necessarily
    requiring the Internet. The main components of the WSN are the SNs, the BS/gateway,
    and the event sampling/routing software that supervises the entire network process.
    A node may route data directly or via relay SNs to the BS based on its location
    and assigned tasks. The BS locally takes actionable decisions and execution of
    the actuation actions. Although the WSNs are resource-constrained and fault-vulnerable,
    they constitute the inevitable part of this technology [2] and the underlying
    innovation of the WSN-based Agri-IoT framework. In contrast, classic IoT consists
    of IoT devices that sense and transmit their sampled information directly or via
    telemetry to the Internet for monitoring or event-tracking purposes, mostly via
    the centralized routing architecture. Like BS in WSNs, IoT devices can connect
    to the Internet/IoT cloud via fixed-line (thus, for a factory), 5G/4G/LTE cellular/mobile
    networks, or Wi-Fi for further processing, storage, and decisions/actions. Figure
    3. Generalized Agri-IoT framework consisting of: field layout overview of Agri-IoT
    framework (a), sample of classic Agri-IoT in the state of the art (b), and key
    components of an SN or a BS (c). As presented in Figure 4, WSN-based Agri-IoT
    is an information- and knowledge-intensive intelligent feedback control system
    for farm monitoring, data sampling/computing, resource optimization, automation
    of farm operation (e.g., precision irrigation, chemical application, livestock
    monitoring, and disease management [16]), and actionable decision making via a
    variety of battery-powered and wirelessly connected SNs with sensing, processing,
    and communication capacities [2,29,30]. Unlike the WSN, Agri-IoT and IoT sample
    data to an Internet-based cloud. The SNs that form the WSN sublayer are spatially
    distributed and self-configured to achieve a myriad of remote sensing, surveillance/monitoring,
    and control applications via automated sensing, wireless communication, and computing,
    making informed decisions and performing actuation control [31] using precise,
    accurate, and timely sampled information about a real-world phenomenon [32]. Figure
    4. Conceptual framework: Agri-IoT-based farm monitoring and control cycle. The
    main hardware components of an Agri-IoT framework, as presented in Figure 3 and
    Table 2, include the WSN (i.e., comprising the field-deployed SNs or IoT devices),
    a base station (BS) or gateway or actuator controller, cloud servers, and the
    user’s monitoring/control devices. The on-farm participants (e.g., SNs and BS)
    in Agri-IoT are mostly battery-powered and must be equipped with sensing, computing,
    and communication abilities to form infrastructure-less, robust, self-healing,
    and self-configured WSNs for data collection and event management [33]. The core
    units of the SNs in Figure 3c and the BS are compared and contrasted in Table
    2. As the framework in Figure 3a depicts, the IoT devices can sense, process,
    and transmit their sampled data directly to the Internet or IoT cloud without
    a gateway, whereas the SNs in WSN-based Agri-IoT perform likewise via a BS. This
    resource-sufficient BS interfaces between the IoT cloud/user and the WSN or actuator
    control system. It can also process the received data and locally execute actionable
    decisions via the actuator of the farm event being monitored. The received data
    can also be relayed to the analytical data engines in the IoT cloud via a wired
    and wireless medium for further processing and actions [13]. The resource-constrained
    WSN sublayer mainly uses data-centric protocols due to the SNs’ high deployment
    densities, high network dynamics, and limited power supply of SNs. Although data-centric
    protocols are fragile and not standardized, they are more suitable than the high
    resource-demanding ID-based IPv4 or IPv6 protocols in the addressing space of
    the WSN-based Agri-IoT. Table 2. Comparison of SN and BS. Agri-IoT combines WSN
    and IoT technologies into contextualized intelligent farm management systems to
    achieve higher event data quality and offer remote monitoring and control. WSN-based
    Agri-IoT consists of the WSN sublayer, the gateways, the cloud servers, and the
    remote interface application, as illustrated in Figure 3a and Figure 5. Uniquely,
    the current trends of Agri-IoT mandate that both intra-SN and BS–cloud communication
    are based on low-power, ubiquitous, and freely available wireless standards [2].
    Also, most Agri-IoT solutions support bidirectional communications between the
    BS/gateway and the cloud/users, whereby the BS updates the cloud/user database
    and receives actionable/control remote messages from the user or cloud analytical
    decision results for actuation purposes. The WSN-based Agri-IoT is the most dominant
    technology in the global smart farming use cases in the agricultural sector. The
    core tasks of SNs in a WSN-based Agri-IoT application, which are frequently supervised
    by the associated routing protocol, include network construction/management, data
    sensing, data processing/aggregation, fault tolerance, and communication [9,12].
    Also, the routing architecture must be supported by the associated communication
    platform and the application-specific requirements of the network. Figure 5. Proposed
    Agri-IoT architectural layers with core components of Agri-IoT ecosystem and the
    “things” taxonomy. Unlike IoT and WSN whose design expectations are application-specific,
    WSN-based Agri-IoT requires holistic integrations of the expectations in Figure
    2. 1.2. Classifications of IoT Applications and Specific Roles of Agri-IoT Generally,
    IoT technology is application-specific. However, it has limitless applications
    and roles in the smart world agenda. Based on their intended purpose, WSN-based
    IoT systems can be broadly classified into condition monitoring and event-tracking
    categories [34], as illustrated in Figure 6. Figure 6. Generalized taxonomy of
    IoT applications. The monitoring-based applications involve real-time event data
    collection and analysis, supervision, and operational control of systems. In contrast,
    tracking-based applications track changes in the phenomenon of interest, such
    as the locations of objects, persons, transported goods, animals, and vehicles.
    Both application domains can be subdivided into industrial, environmental, and
    societal IoT applications in Figure 6, where specific examples are provided for
    each application domain. For instance, monitoring-based applications may include
    indoor/outdoor environmental monitoring [6], industrial process monitoring [5,29],
    process control [2], greenhouse automation [7], precision agriculture (e.g., irrigation
    management, crop disease prediction, prediction of production quality, and pest
    and disease control) [2,8], biomedical or health monitoring [8], electrical grid
    network monitoring/control [12,29], military location monitoring [9], and so forth.
    Conversely, specific examples of tracking-based applications may include habitat
    tracking, traffic tracking, plant/animal condition tracking, and military target
    tracking, as outlined in Figure 6. 1.3. Agri-IoT Roles and Use-Cases The concept
    of intelligent farming involves data acquisition, data processing/planning, and
    smart control using the WSN and IoT technologies, big data, and cloud computing
    techniques to provide profitable solutions, as presented in Figure 7. These principal
    roles in Figure 7 define their use cases. For instance, monitoring the state of
    crops or the climate of the field using Agri-IoT technology can allow farmers
    to know precisely the amount of pesticides, water, and fertilizers required to
    attain optimal crop quality and production volume. However, the QoS requirements,
    the routing techniques, architectural requirements, and the operational dynamics
    differ from one use case to another. This tutorial focused on the critical and
    unique design requirements of WSN-based Agri-IoT, which is the backbone of the
    smart agricultural initiative [35]. The resulting use-cases in Figure 7 can be
    explained as follows: Figure 7. The roles of Agri-IoT in smart farming with specific
    use cases. Agri-IoT for Climate Condition or Agronomical Monitoring: This Agri-IoT
    system mostly comprises BS (i.e., weather stations) and a deployed WSN. The analytical
    data engines mine the sampled climate or crop condition data in the cloud to predict
    future climate conditions and farm automation plans. The most suitable crop and
    precise farming practices can then be predefined to improve agriculture production
    capacity and quality. Agri-IoT for Precision Farming: This is the most famous
    application of Agri-IoT, whereby farming practices (e.g., irrigation, fertilizer
    application, etc.) are precisely and accurately controlled to optimize these resources.
    Here, the SNs are mostly fitted with soil sensors to collect a vast array of microclimatic
    data (e.g., soil moisture, temperature, and salinity) that can enable farmers
    to estimate optimal amounts of water, fertilizers, and pesticides needed by the
    crops to minimize resources’ costs and produce healthier crops. Additionally,
    the BS controls the event actuation system via accurate data-driven real-time
    decisions on the crops using climate data, crop growth data, and disease infection
    data. Agri-IoT for Greenhouse Automation: The Agri-IoT-based approach provides
    more accurate real-time information on greenhouse conditions, such as lighting,
    temperature, soil condition, and humidity, unlike manual greenhouse management.
    This allows precise remote monitoring and control or automation of all farming
    practices. Agri-IoT for Livestock Monitoring and Management: In this system, SNs
    are attached to livestock to monitor their real-time health, track their physical
    location, and log their performance. This helps the farmer identify and isolate
    sick animals to avoid contamination and reduce staffing expenses. Agri-IoT for
    Predictive Analytics: This Agri-IoT system provides highly relevant real-time
    data that can be analyzed to make essential predictions, such as crop harvesting
    time, risk of disease infection, yield volume, yield quality, and yield vulnerability,
    for proper planning. Agricultural Drones (Agri-Drones): Agri-Drones, such as DroneSeed,
    are fitted with mobile SNs and farming tools to collect agricultural data or perform
    activities such as field surveillance, crop planting, pest control, farm spraying,
    crop monitoring, etc. For example, for Agri-Drones, all the above use cases utilize
    the WSN-based Agri-IoT framework. 2. The Agri-IoT Ecosystem The authors in [1,14]
    established that the existing real-world attempts of Agri-IoT could not meet both
    performance and user users’ expectations because they are founded on the fundamental
    concepts and the operational principles of classic IoT and WSN technologies. To
    effectively achieve the expectations in Figure 2, it is imperative to conduct
    a systematic assessment of the related architectural layers in classic IoT and
    propose a suitable option for the WSN-based Agri-IoT ecosystem. Generally, the
    conventional IoT ecosystem consists of the network architectural layers and the
    data management platforms [2,7,8], which are further grouped into devices (sensors,
    actuators, and gateways/BS), network (BS to cloud), platforms/applications’ cloud,
    and agents/users. Due to the domain-specific requirements of IoT applications
    and the incorporation of numerous heterogeneous devices with application-specific
    requirements, there are generally no unified or standardized IoT architectural
    layers. Therefore, most application-defined layers are frequently adapted from
    the canon architectural layers, which include the three-layer [5], the cloud-based
    [7], the service-oriented architecture (SOA) [2,7], and the fog-based [2,7,29],
    as illustrated in Figure 8. Figure 8. Different architectural layers in the state
    of the art of IoT ecosystem. The fog-based architecture was adapted from the three-layer
    parent architecture to include cloud computing by offering computing, storage,
    and network information between the clients and the cloud services [29] in a decentralized
    manner. Here, cloud computing and fog/edge computing architectures only differ
    in where data computing occurs. These layers are not unified because the respective
    network layers do not cover all underlying technologies that transfer data to
    all IoT platforms [5]. Additionally, they are based on complicated centralized
    and flooding-based routing architectures, high-resource-demanding and capital-intensive
    Wi-Fi/cellular-based communication technologies. As well, they require wired infrastructural
    support in the farm, which is too complex, location-restricted, and capital-intensive
    for most low-income and non-expert farmers to implement and manage. Consequently,
    they are unsuitable candidates for the resource-constrained SNs in WSN-based Agri-IoT.
    By implication, there are no reference guidelines for designing Agri-IoT participants
    and supervisory protocols, controlling the speed of packet delivery, smoothing
    out SN’s integration, unifying technology, and creating standardized Agri-IoT
    reference models, among other considerations. In contrast, an Agri-IoT ecosystem,
    depicted in Figure 3, consists of: Agri-IoT network architectural layers: This
    shows how the physical network elements, network operation principles, and operational
    techniques interact throughout the entire ecosystem. Network supervisory software/routing
    protocol and routing architectures: This contains the virtual arrangement of multiple
    network elements [8] and the event sampling/routing protocol that constructs the
    routing architecture, supervises sampling and moderates all communications in
    the PHY layer. Data management platform: It hosts all high-resource-demanding
    data analytic engines, event databases, and remote control algorithms in a cloud
    model. 2.1. Proposed Architectural Layers for WSN-Based Agri-IoT In designing
    an efficient Agri-IoT system of global significance, it is imperative to propose
    suitable architectural layers and evaluate how the various components interact
    in these layers. With the emerging advances in low-power, freely available, and
    boundless communication standards (e.g., BLE) and unfulfilled potentials of CA-IoT
    network [12,16], a new framework of cluster-based architectural layers for the
    WSN-based Agri-IoT ecosystem is proposed in the left side of Figure 5. The center
    portion of Figure 5 presents the key components/technologies required in each
    layer, while the Things taxonomies of hardware components from the related literature
    [4,8,29] are depicted on the right portion of Figure 5. The underlying layers
    in our four-tier layers in Figure 5 can be elaborated on as follows: Integrated
    Application and Management Layer: This operates all agriculture-related applications
    that interface between the user (for example, farmer) and the Agri-IoT system
    to make decisions and execute remote actions to keep their crops or animals healthy.
    This layer manages the entire Agri-IoT system and its application-specific functionality,
    high-resource-demanding applications, and core business model in the cloud. This
    layer’s security requirements are crucial to the next sublayer; however, these
    are beyond the scope of this research. The business or management sublayer maintains
    end-to-end data integrity and security by ensuring that data are transferred to
    the correct user. It also ensures that the correct user executes the actuation.
    Information Management Layer: This handles data processing, storage, and other
    specialized cloud services and functionality that make precise, actionable decisions.
    In Agri-IoT, the sensory data are preprocessed locally to optimize communication
    power but can be further processed using analytic engines in the cloud for better
    decision making and remote monitoring and control. This layer can be embedded
    in the above application layers and hosted in the cloud in a typical Agri-IoT
    ecosystem. Network Management Layer: This layer discovers, connects, and translates
    devices over a network, and it coordinates with the above application layers.
    It also contains the BS, which interfaces the resource-constrained WSN and cloud
    information network. By convention, the WSN sublayer must utilize low-power communication
    standards such as Zigbee, SigFox, LoRa, BLE, Z-Wave, SigFox, and IEEE P802.11ah
    (low-power Wi-Fi), while the BS-to-Cloud connectivity can be achieved via the
    traditional cellular networks, satellite networks, Wi-Fi, LAN, WAN, and LoRa,
    among others. Unlike classic IoT, Agri-IoT requires that the BS-to-Cloud connectivity
    utilize low-power communication standards. Also, since every communication standard
    for the resource-limited WSN sublayer comes with unique resource specifications
    and design tradeoffs between power consumption, routing architectural constraints,
    and bandwidth [4,14,17], the best connectivity option must be selected to achieve
    the desired application goals. Consequently, the stated WSN-based connectivity
    technologies can be classified using several distinct parameters, such as energy
    consumption rates, uplink/downlink data rates, packet size, SN-count per BS (gateway),
    network routing topology, the SNs’ sensing range, the SNs’ transmitter/receiver
    power, frequency bandwidth, channel width, etc. (refer to the right portion of
    Figure 5). Physical/Perception/Things Layer: This layer refers to the field and
    all devices such as SNs, actuators, RFID tags, sensors, and edge devices that
    interact with the environment. This layer senses and collects the necessary information
    from the connected devices in the WSN sublayer to the BS. In Agri-IoT networks,
    the sampled microclimatic data can be processed and stored on the local BS, the
    cloud, or both. The activities in the cloud or application layers are beyond the
    scope of this tutorial. 2.2. Associated Hardware Components and Technologies Required
    in the Proposed Architectural Layers To precisely model and design an Agri-IoT
    network of desired expectations (refer to Figure 2) using the proposed architectural
    layers shown in Figure 5, the knowledge of the principal components and technologies
    used in each of these layers and how they interact and adapt for their intended
    functions is imperative. As depicted in the middle of Figure 5, the Agri-IoT ecosystem
    is composed of the following core components/technologies: Things: The Things
    unit is the physical interface between the tracked/monitored asset and the BS
    or actuator controller, which aligns with the physical or perception layer. It
    comprises the monitored/tracked asset (for example, field, crop, or animal), the
    SNs, or the entire IoT devices making up the WSN (for example, SNs, actuators,
    IoT-enabled devices, WSNs, and other smart devices), the event sampling, and routing
    technology in the WSN. Since the SNs constituting this unit are resource-constrained,
    freely available communication standards such as Zigbee, BLE, Z-Wave, and IEEE
    P802.11ah (low-power Wi-Fi) are the most suitable for both SN–SN and SN–BS communications.
    The Things unit accesses the cloud/Internet via gateways (BS). Gateway (BS): The
    BS interfaces the WSN out in the field and the applications situated in the cloud
    servers. This unit aligns with the network management and actuator control layer
    shown in the middle of Figure 5. The WSN sublayer may have more than one BS(s),
    each with the capacity to handle most resource-demanding computational tasks besides
    actuation execution, network construction, scheduling of event sampling, and network
    supervision services. They may also allow bidirectional communication with the
    cloud/user and WSN. Similar to standalone IoT devices, the BS can be equipped
    with 4G/5G/LTE/NB-IoT, cellular-based, Wi-Fi, LoRaWAN, or wired ethernet communication
    technologies to interact with the cloud, and low-power communication standards
    such as LoRa, low-power Wi-Fi, SIGFOX, UMTS, BLE, and Zigbee (Figure 5) to communicate
    with the sensor field. However, Agri-IoT networks require that both upper-layer
    and lower-layer communication technologies of the BS should be low-power, freely
    available, easy to deploy and manage, and platform-independent. The BS may preprocess
    or relay the raw data to the cloud for remote data processing. The BS(s) locations
    are strategically chosen to optimize network communication costs. IoT Cloud: The
    Cloud unit aligns with the applications layer. It consists of an on-premises or
    remote server farm that hosts the applications layer, event data analytic engines,
    security protocols, robust IoT applications, user interface, and event database.
    The high resource-demanding data-processing tasks are mostly executed by well-equipped
    cloud-hosted applications to manage and store huge amounts of data, provide monitoring
    and data analytical services, enable communication with devices, and manage information
    access. The merits of edge computing can be exploited to ensure that large amounts
    of data are post-processed off-device to reduce the response times of the cloud.
    User Interface: With the aid of a web or mobile app, the user or farmer can live-monitor
    the farm’s conditions and execute control actions. Additionally, a presentation
    or business intelligence layer may be added to coordinate the activities of non-technical
    business users through dashboards and reports rather than with the application
    layer itself. 2.3. Quality Expectations of Agri-IoT’s Architectural Layers Although
    there is no unified, certified, and flexible Agri-IoT architecture layer, any
    suitable options deduced from the benchmarking architectures in Figure 8 must
    satisfy certain quality requirements, including: Simultaneous data acquisition,
    analysis, and control from many sensors or actuators. Minimization of huge raw
    data transmissions via data aggregation techniques to maximize actionable information
    quality. Provision of reliable network architecture that supports energy-efficient
    routing, stable connectivity, self-adaptability, fault tolerance, operational
    simplicity/flexibility, platform independence, affordability, and location independence
    of Agri-IoT designs. Support for automated/remote device management and updates.
    Easy integration of each layer with existing applications and other IoT solutions
    via specified APIs. Utilization of freely available, location-unrestricted, cheap,
    energy-efficient, and simple to deploy and manage by non-experts [4,29] underlying
    communication technologies in the PHY and network layers as well as based on open
    standards to guarantee interoperability. 3. Design and Implementation of Agri-IoT
    Networks Despite the technical challenges associated with the WSN-based Agri-IoT,
    its potential contributions in the agricultural sector largely surpass the least
    complex, capital-intensive, pure IoT-based solutions, as illustrated in Figure
    3b and Figure 7. Due to the broader applicability and higher significance of the
    WSN-based Agri-IoT networks relative to the classic IoT networks, this study focuses
    on the former technology whose design and implementation involve four crucial
    phases, namely: Custom-building of robust, affordable, energy-efficient, location-independent,
    and adaptive SNs and a BS that can form an infrastructure-less and easily manageable
    WSN. The SNs and the BS must consist of cost-effective, architecture-defined,
    and context-defined components so that the system operates stably and efficiently,
    becomes affordable to farmers, and easily integrates to any real-world scenario
    without any expensive, fixed/wired backbone connections. The low-power capabilities
    of the SNs help to easily integrate them into any precision farms and greenhouses
    to operate over the entire crop season without many technical hindrances. Physical
    deployment of the SNs in the field, selection of the WSN’s communication technology,
    and design of a suitable supervisory protocol to coordinate the construction of
    appropriate event routing architecture, the duty-cycle schedule of event sampling
    to the BS, fault management, data management, and network maintenance. Additionally,
    a range of techniques such as network participant mobility, cross-layer design,
    MAC techniques, data aggregation, self-healing techniques, nodes’ duty-cycle schedule,
    security measures, localization, and communication specifications of the SNs can
    also be exploited in the associated routing protocols. Selection of appropriate
    BS/gateway communication technology and design of a suitable higher protocol to
    update the cloud database and execute the actuation actions based on users’ requests
    or decisions on processed event data. Design of data analytical engines and applications
    in the cloud and users’ remote monitoring and control interface app, which is
    beyond the scope of this tutorial. These call for a systematic application-specific
    assessment of the hardware components selected for every use case. 3.1. Sensor
    Nodes Design Considerations As illustrated at the bottom of Figure 3, a node for
    the WSN-based Agri-IoT network consists of four main units, which include the
    following: Sensing Unit: This unit interfaces with the physical environment and
    records the physical phenomenon of interest. The type of sensor is application-specific
    and can be contact-based or non-contact-based. For instance, the STEMMA soil moisture
    sensor and the DHT22 sensor can be used to sample environmental temperature and
    humidity (refer to Figure 3c). Controller Unit: This unit hosts the processor,
    storage, and connection pins for the other units and all auxiliary peripherals.
    The suitable controllers for building Agri-IoT SNs are Arduino-based and Raspberry-Pi-based
    (refer to the bottom of Figure 3) due to their ability to withstand extreme weather
    conditions. However, other off-the-shelf, application-specific controllers such
    as the ProPlant Seed Rate Controller, John Deere GreenStar Rate Controller, Viper
    Pro multi-function field computer, Radion 8140, Trimble Field-IQ, etc. are also
    available. Communication Unit: This unit is the principal determinant of the node’s
    power consumption, operational stability, and affordability, as well as the routing
    architecture in the associated supervisory protocol. The bottom of Figure 3 shows
    the available communication technologies, but an Agri-IoT-based SN demands an
    energy-efficient, affordable, freely available, simple, and reliable communication
    standard. Consequently, LoRa, BLE, ZigBee, LoRaWan, and SigFox are the best candidates
    based on the support of the routing architecture of the resulting WSN, but the
    selection must be justified from the technology requirement metrics via a decision
    matrix. Power Unit: Since the SNs are mostly battery-powered, the appropriate
    battery size and probable energy-harvesting techniques must be determined during
    the SNs’ design according to the intended network lifespan and stability requirements.
    Modern trends in battery power banks with integrated solar-based energy-harvesting
    systems and power ratings above 30,000 Ah are available. When selecting hardware
    components, adequate caution should be taken to avoid unit incompatibility, high
    operational complexities, unsuitable operational thresholds, and high energy consumption,
    among others. This implies that high component survivability and operational stability
    under different environmental conditions and the application specificities are
    vital to monitor. 3.2. Wireless Spectrum and Core Communication Platforms of WSN-Based
    Agri-IoT The wireless electromagnetic (EM) spectrum, which has invisible, finite
    radio frequencies for wireless communication, can be licensed and sold exclusively
    by specific providers or unlicensed for free usage. For instance, the Industrial,
    Scientific, and Medical (ISM) frequency band (e.g., Bluetooth classic, BLE, Wi-Fi,
    ZigBee, and LoRaWAN) is an unlicensed microwave frequency band clustered around
    2.4 GHz and globally reserved for applications such as Agri-IoT. Table 3 presents
    the various bands and their applications. A suitable candidate for a given Agri-IoT
    application is based on several factors, such as communication and the route architectural
    requirements, power consumption, cost, and environmental adaptability impacts.
    Table 3. Wireless spectrum with the core communication platforms/applications.
    3.3. Factors to Consider When Deploying SNs and Designing the Supervisory Sampling/Routing
    Protocol After custom-building or selecting off-the-shelf SNs, the next activity
    is to deploy the SNs on the field and design a contextualized supervisory protocol
    to coordinate the aforementioned network’s activities. The SNs’ deployment in
    the field can be either random or deterministic. Both options require different
    methods to optimize the resulting network’s performance. For instance, under the
    deterministic approach, the optimal parameters such as node uniformity and density
    must be predefined based on the distance thresholds of the associated communication
    technology (i.e., connectivity/distance range), the SNs’ resource optimization
    mechanisms, the type of routing architecture, and the sensing range of the physical
    parameter to be measured. Since communication is the principal power consumer,
    the best ways to conserve power are to minimize communication distance and data
    sizes as well as operate the SNs in the appropriate sleep–active duty cycles using
    a cluster-based routing architecture [9,24,26]. Beyond the physical installation
    of the SNs at their most suitable in-range locations, the remaining activities,
    such as network construction, event sensing, data management, FM, network maintenance,
    sleep–active duty-cycle scheduling of SNs for sampling, network adaptability to
    turbulent and scalable conditions, power-optimization mechanisms, and network
    reconfiguration, among others, are controlled by the associated routing protocol
    [12,16,17,26,36]. This places crucial merits on the physical locations of the
    SNs in the field, thorough synthesis of network design factors, and assessment
    of available routing architectures/techniques, since this protocol manages all
    post-deployment tasks. This can be summarized into the core objectives of the
    routing protocol and its architecture, which include power optimization, self-healing
    of any faults without the obstruction of its normal operation, and self-adaptability
    to all turbulent and scalable conditions. From the analysis above, we can derive
    the critical primary factors to consider when designing a routing protocol for
    Agri-IoT networks, which are presented in Figure 9 and grouped into the following
    categories: SNs specifications, security issues, application-specific factors,
    communication standard compatibility and capacities, and other auxiliary factors.
    At the PHY layer level, which is the focus of this tutorial, these critical factors
    can translate into the stipulated core design objectives, which can be addressed
    via phase-based multi-objective optimization (MOO) formulation frameworks [12,23,24,37].
    Figure 9. Principal design factors for Agri-IoT networks. Hardware Specifications
    of SNs and BS Agri-IoT Device: The functional and resource capacities of participants’
    hardware units must be considered before their respective tasks in the protocol
    are assigned. For instance, the selected sensors’ quality must suit the type of
    event information and its accuracy, the available communication platforms, and
    the general purpose of the Agri-IoT solution. Also, the communication standard
    must support the routing architecture and SNs’ resource- and deployment-induced
    limitations. The crucial communication-based parameters of the SNs are illustrated
    in Table 4. Table 4. Comparison of common communication platforms of the WSN sublayer
    of Agri-IoT. Cost or Affordability of the Resulting Agri-IoT System: In addition
    to being infrastructure-less, flexible, self-healing, adaptive, and energy-efficient,
    a WSN-based Agri-IoT must consist of cost-effective hardware and software components
    so that the system is affordable for farmers, since existing real-world solutions
    are too expensive and complicated [1,14]. Additionally, the installation, operational,
    and maintenance costs of the resulting WSN-based Agri-IoT network must be kept
    to a minimum so that it can be easily acquired. Security Issues in Agri-IoT: Security
    is still a challenge in classic IoT systems that handle sensitive information,
    especially during cloud communications. Although Agri-IoT networks lack the requisite
    resource capacities in most large-scale, broadcast-based, distributed, and infrastructure-less
    WSN systems to achieve adequate data confidentiality, authenticity, integrity,
    and other security requirements, the security of the agricultural data is rarely
    a priority [2,4]. Nevertheless, the associated routing architecture, such as the
    clustering architecture, has an embedded capacity to resolve on-site security
    issues. In addition, both on-site and remote information access types (e.g., via
    a smartphone or desktop computer) must be selected based on solid internal infrastructure
    and security precautions to secure unwanted access to sensitive information. The
    Application-Specific Factors: As indicated in Figure 9, the application-defined
    factors vary based on the Agri-IoT application, the field settings, network maintenance
    practices, intended event routing architecture, and network participants’ mobility,
    among other factors. However, the routing protocol must incorporate all relevant
    operational efficiency factors of the routing software design objectives. Since
    the collected field data itself cannot make sense without using analytic data
    engines and predictive algorithms in machine learning, the BS or the application
    layer in the cloud should define appropriate data-processing frameworks to obtain
    accurate, actionable decisions from the collected data. Communication Standards
    of Agri-IoT Devices: The power-constrained WSN sublayer of Agri-IoT network places
    hard restrictions on operational states of SNs’ radio transceivers, code space,
    and processing cycles as well as memory capacities of SNs to enhance power savings
    [9,12,23]. The type of communication technology selected for a typical Agri-IoT
    is the principal predictor of its routing architecture, affordability, simplicity,
    adaptability, power-saving capacity, location independence, self-healing capacity,
    and event data quality [12,16]. Consequently, power and routing architectural
    limitations constrain the network design requirements. Despite the aforementioned
    technical challenges on the network’s operational efficiency, interconnected SNs
    that form the WSN are expected to withstand extra operational disruptions caused
    by unfavorable weather conditions in the field [2,4]. Consequently, the de facto
    PHY-layer communication standards for this low-power, low bandwidth, and distance-limited
    communication Agri-IoT devices/SNs have been the energy-efficient platforms such
    as BLE, LoRa, Sigfox, and NB-IoT. Also, a suitable MAC technique is imperative
    in the routing architecture to curb all channel access challenges. For instance,
    the ZigBee/IEEE 802.15.4 standard focuses on the physical and the MAC layer specifications
    for WSNs, and it also supports the sleep–active or duty-cycle scheduled operation
    modes of SNs to enhance energy savings in centralized or mesh-based architectures.
    BLE does likewise in the highly endowed cluster-based routing architecture. Consequently,
    Agri-IoT network designers must make the most appropriate and critical decisions
    regarding the network’s communication requirements when designing the routing
    protocol. Using Table 4, WSN-based Agri-IoT designers can make realistic design
    decisions regarding energy-efficient multihop routing, architectural requirements
    of routing protocol, bandwidth, routing table capacities, total communication
    cost, and the desired MAC technique. Additionally, the physical conditions within
    the agricultural environment such as atmospheric dust concentration, physical
    obstruction to wireless signal transmissions, and the terrain need to be considered.
    Auxiliary Factors and Available Software Tool: Finally, the auxiliary factors
    can be non-exhaustive depending on the designer’s financial capacity, user interface,
    information requisition model, cloud activities, operational expectations, and
    the available software tools. Additionally, an assortment of PHY-Layer design
    software tools for Agri-IoT experiments (thus, in both simulations and real-world
    testbed deployments) that can be used include NS-3 [9,38], OMNeT++, MATLAB/Simulink
    [9,12,39], Python [16], PAWiS [39], GloMoSim/QualNet [39,40], OPNET [12,39], SENSE
    [37,39], J-Sim [39], Ptolemy II [39], Shawn [9,39], and PiccSIM [12,39,41], among
    others. The key features that are frequently considered when selecting any of
    these software platforms include Python or MATLAB/Simulink compatibility for software
    model and hardware prototype integration during real-world operation, compatibility
    with low-power communication standards (e.g., BLE, LoRa, ZigBee, and SIGFOX),
    operating system support, programming language implementation, the density of
    simultaneously simulated or field-deployed SNs, co-simulation with other hardware,
    documentation, easy access to upgraded versions, and installation challenges [39].
    MATLAB/Simulink and Python are the most commonly used experimental tools, since
    these software tools are well-equipped with the stipulated features. 4. Unique
    Characteristics and Challenges of WSN Sublayer of Agri-IoT Unlike the traditional
    IoT, which generally relies on fixed hardware to route network traffic, a WSN
    sublayer of Agri-IoT combines automated sensing, computation, actuation, and wireless
    communication tasks into the SNs that are spatially distributed across the farm
    to autonomously form an infrastructure-less WSN [31]. A node may perform additional
    tasks such as local data processing (data aggregation), network construction,
    data redundancy, error control, data routing (e.g., in multihop networks), and
    network maintenance practices based on the network size, application specificity,
    and associated routing techniques. Also, the WSN can be equipped to observe heterogeneous
    conditions such as temperature, humidity, sound, color, location, light, vibration,
    and motion, using a wide variety of sensors contained within a task-scalable SN.
    Therefore, assuming that the accuracy and precision of event data in upper layers
    are preserved, the Agri-IoT’s lifespan and its operational efficiency are rooted
    in the WSN’s robustness. Thus, a deeper contextual exegesis into the design and
    maintenance of this sublayer is imperative. As opposed to conventional IoT and
    wireless ad hoc communication networks, the operational efficiency of the WSN
    sublayer, as well as Agri-IoT, hinge upon some application-specific characteristics
    and resource-constrained factors such as: Higher SN Deployment Densities: Generally,
    SNs are densely deployed in either a deterministic or random manner to provide
    the desired redundancies, spatial variability of soil, topography, distributed
    monitoring and processing, accurate and precise event reporting, and fault tolerance.
    However, this mostly leads to undesirable transmission overlaps, data redundancies
    from the simultaneous reporting of the same data, routing interferences, and packet
    collisions due to connectivity issues and the coexistence of common standards
    in the ISM band [42]. Limited Power Supply: The SNs are frequently battery-powered,
    which does not only constrain their data transmission rate, computational capabilities,
    and communication distance but also subjects Agri-IoT to possible SN-out-of-service
    and data outlier faults due to rapid power depletion beyond certain thresholds
    [26,43]. Consequently, network power management through data-management-related,
    architectural-related, and communication-related parameters has been one of the
    principal research focuses in WSN-based IoT applications to improve network lifetime.
    Fault Management (FM) (i.e., fault detection, fault tolerance, or fault avoidance):
    The resource-constrained WSN is highly vulnerable to faults and failures due to
    high deployment densities and a lack of post-deployment maintenance services [25].
    Although faults are inevitable in Agri-IoT for the stipulated reasons, their occurrence
    rates and effects on the network’s functionality can be minimized, avoided, or
    tolerated without hindering the normal functionality of the network if the associated
    WSN’s routing protocol is well-equipped with efficient self-healing and fault-avoidance
    (power-saving) mechanisms [12]. Self-Adaptability and Scalability: Although WSNs
    are application-specific, the topological dynamism is inevitable due to node failures,
    node mobility, and scalable conditions. Therefore, the associated routing protocol
    and network architecture must adapt to these dynamic conditions using apt auto-reconfiguration
    and reactive multihop event routing techniques [44,45]. Network Architecture:
    The underlying routing protocol of the WSN sublayer constructs a network architecture
    that can be flat, hierarchical (e.g., clustering, chain-based, and tree architectures)
    or location-based. This routing architecture prescribes the possible measures
    to achieve efficient local data processing, network maintenance, scalability,
    minimized communication overhead, prolonged network lifespan, and reduced network
    management complexities [25,36]. Therefore, a suitable network topology indirectly
    determines the resulting network’s flexibility, scalability, reliability, communication
    strategy/costs, and the quality of the reported event data [12]. Mostly Requires
    On-site Actuation: Regardless of where data are managed in a typical WSN-based
    Agri-IoT, the actionable decision signal must be sent to execute on-farm actuation.
    Proposed Design Objectives of WSN-Based Routing Protocols for Agri-IoT and Realization
    Mechanisms From the systematic evaluation of the unique characteristics and challenges
    of the WSN sublayer, a three-tier cluster-based framework that constitutes the
    condensed expected core design objectives and their corresponding remedial strategies
    of WSN-based routing protocols for Agri-IoT applications is demonstrated in Figure
    10. Suppose the corresponding remedies in Figure 10 are implemented in the associated
    routing protocol. In that case, the desired power optimization, self-healing,
    and auto-adaptability expectations can transitively yield the desired event data
    quality and operational stability requirements or the global performance expectations
    of the resulting network. Figure 10. Proposed design objectives and strategies
    of WSN-based Agri-IoT routing protocols. The importance of this three-tier framework
    can be expanded on as follows: An adaptive and scalable WSN-based routing protocol,
    as proposed in Figure 10, normally constructs a routing architecture that supports
    multihop routing, self-reconfiguration, self-healing, and local network administration
    at a minimal routing table size, communication cost, and and control message complexity
    requirement. Since communication is the principal power consumer, the operation
    of the routing protocol must invlove fewer control messages. Also, it must adapt
    to network turbulence due to SN failures. The cluster-based architecture exhibits
    the highest potential compared to related architectures [9,16,17,26]. The cluster
    heads (CHs) efficiently coordinate these activities by registering and tolerating
    all dynamism resulting from SN-out-of-service faults, increasing the network size
    and SN density. Due to the high vulnerability of SNs to faults and failures, it
    is imperative to deploy suitable FM techniques that can detect, tolerate, or avoid
    possible root faults such as SN-out-of-service and data outliers [25]. The adaptive
    clustering approach can effectively resolve SN-out-of-service faults, while the
    threshold-based decision theory at the local nodes and global levels can be suitable
    candidates for event data outlier detection and correction in the PHY layer. Since
    power mismanagement is the root cause of most faults and failures, the best fault-avoidance
    techniques optimize the nodes’ power consumption rates. Figure 10 also outlines
    the suitable measures for power optimization in the WSN sublayer of Agri-IoT.
    In clustering approaches, power consumption in the constrained WSN can be managed
    via message complexity control, connectivity-related metrics, and communication-related
    parameters by exploiting the clustering architecture [46]. In addition to local
    data processing (data aggregation, data redundancy, and error checks) and local
    network administration (FM, adaptability to network dynamics), suitable MOO and
    multihop routing frameworks can be derived using the clustering architecture,
    total communication cost, and optimal cluster quality metrics to serve as a design
    optimization guide for the simulation and real-world implementations of the WSN
    phase of Agri-IoT. To achieve the expectations in Figure 10, there is a need for
    an architecture-specific multi-objective assessment of the WSN’s design cycle;
    from this, the associated parameters and theoretical models can be derived and
    then theoretically optimized and validated experimentally. A novel holistic MOO
    framework can help realize these expected goals in both simulation and real-world
    Agri-IoT implementations. Consequently, there exists the need to carry out a systematic
    survey and assessment on existing routing architectures, FM schemes, and routing
    protocols, and how these evolved in existing real-world realization testbeds of
    Agri-IoT. Such an in-depth literature synthesis can help assess these qualitative
    performance indicators constituting the root QoS metrics in Figure 10 as well
    as deduce application-specific guidelines for improving CA-IoT networks using
    a precision irrigation system as a case study. 5. State of the Art on Routing
    Protocols for WSN-Based Agri-IoT Applications In Agri-IoT, it is not simply a
    matter of applying IoT to a farm; contextual due diligence on architecture, communication
    standard, cost, actuator, performance stability, control, and environmental impacts
    augment the routing protocol requirements. This section presents a systematic
    synthesis of WSN-applicable routing protocols under network architecture, the
    route discovery process, and protocol operation as illustrated in Figure 11. To
    help Agri-IoT designers make well-informed decisions concerning architectural
    selection, we classified the canon protocols based on routing architecture, route-discovery
    process, and operations in order to uncover their strengths, weaknesses, and contextual
    reasons why they can be adopted for Agri-IoT applications. Generally, event routing
    in every protocol can either be source-initiated or destination-initiated, and
    the optimal path selection from the constructed routing architecture can also
    be broadcast-based, probabilistic, cluster-based, or parameter-determined using
    location-related, weight-based, and content-based metrics [13]. Also, routing
    protocols must commonly resist link failures using mechanisms that ensure balanced
    network-wide power depletion rates, energy-efficient multihop routing, and effective
    implementation of the indispensable QoS metrics presented in Figure 10. The related
    routing protocols can be classified as illustrated in Figure 11. Figure 11. Taxonomy
    of WSN-based routing protocols of Agri-IoT. 5.1. Architectural-Based Routing Protocols
    This class of protocols presented in Figure 11 and Figure 12 can be sub-grouped
    into flat-based centralized or direct communication and decentralized [47] (e.g.,
    flooding/peer-to-peer/graphical/mesh-like architectures), hierarchical/cluster-based/tree
    architectures, and the location-based protocols [37]. Figure 12. Sample network
    architectures: centralized-data-centric, cluster-based, and graph/flooding-based
    architectural frameworks of WSN sublayer. The centralized protocols route data
    to the BS via single-hop routing, while the flooding and graph-based protocols
    flood data through multihop routing. The graph-based routing protocols construct
    a reactive or proactive graphical routing architecture with 𝐺(𝑉,𝐸) where a node
    and path represent the vertex and edges, respectively. This method relies on resource-intensive
    routing techniques from graph theory used in classic IoT and ad hoc networks to
    transmit event data to the BS. In contrast, the clustering/tree topology depicted
    in Figure 12 groups the SNs into either static or dynamic clusters, each with
    an optimally selected CH to minimize the communication distances of the cluster’s
    member nodes (MN). The CH is then tasked with aggregating the received readings
    from its MNs, executing error and measurement redundancy checks, and communicating
    directly (single-hop routing) or via a relay CH (RCH) using a multihop routing
    technique to the sink node or BS. However, the RCHs must be assigned fewer MNs
    to balance the network’s power depletion rates, since aggregated packet forwarding
    inflicts extra energy burden on the RCHs [37]. Additionally, the CH can be equipped
    to perform extra roles such as FM, coordination of the reclustering process, network
    maintenance, relaying of aggregated packets in large-scale networks, and management
    of network dynamism [12]. In general, cluster-based routing protocols differ in
    terms of CH selection methods and coincide in terms of intra-cluster and inter-cluster
    multihop routing, local data processing by the CHs, and CH role rotation [47],
    which ensure balanced network-wide power depletion, prevent abrupt power exhaustion,
    and lead to exponential energy savings [37]. Although the flat-based architectures,
    such as centralized and flooding (see Figure 12), can be easily implemented in
    real-world small-scale Agri-IoT networks, they suffer severe packet collisions,
    communication bottlenecking at the BS, and high inaptness for scalable or turbulent
    large-scale WSNs where energy efficiency is a priority. Again, an optimized clustering
    approach can provide an ideal topology for addressing the proposed expectations
    in Figure 10, and it can also offer extra benefits such as minimized communication
    cost, stabilized network topology, efficient load management, improved network
    maintenance, and improved network traffic and channel access management [37,48].
    The main challenge of the clustering method is how to achieve the desired cluster
    quality (e.g., optimal cluster count and cluster size) so that the computational,
    bandwidth, memory, and routing table capacities of the resource-constrained CHs
    are not exceeded. Typical examples of clustering protocols are the LEACH family
    of protocols, which include RCEEFT, ESAA, DEEC, SEP, and PEGASIS in [12]. In location-based
    routing architectures, routing decisions are made either reactively (e.g., Ad
    hoc On-demand Distance Vector—AODV) or proactively (e.g., RPL—Routing over Low-Power
    and Lossy Networks protocol), using the SNs’ location information. This normally
    results in a decentralized, graphical architecture. Since the SNs that form the
    WSN are spatially deployed in the field without any IP-addressing schemes, location
    information is needed in order to establish communication between the nodes in
    a location-based architecture. The location information helps eliminate unwanted
    transmissions by collecting data from a specific region of interest. This architecture
    suffers from routing delays, high infrastructural cost, extreme difficulties in
    deployment and management, and high energy waste due to SNs’ long idling durations.
    However, they are the most commonly used protocol in existing ZigBee-based Agri-IoT
    testbed solutions [1,10,14,17]. Since this approach yields non-energy-aware architectures,
    it is not suitable for Agri-IoT applications [12]. It is evident from the above
    discussions that Agri-IoT-based network architectures must be defined by the associated
    routing protocol using the design requirements in Figure 9 as well as the application-defined
    requirements [49] in order to enhance the performance expectations in Figure 10.
    In addition, the routing architecture must not compromise on the quality, precision,
    and accuracy of the event information. It must be in unison with the application-specific
    requirements to address possible deployments- and network-induced challenges,
    such as network turbulence and SN mobility. 5.2. Route Discovery-Based Protocols
    As shown in Figure 11, route discovery-based protocols focus on when the route
    for data transmission is built and can be grouped into proactive, reactive, and
    hybrid protocols. In proactive routing protocols, the routes are pre-created before
    they are needed. These protocols are table-driven, since every node stores a large
    routing table containing a list of all possible destinations, next-hop neighbors
    to those destinations, and the associated costs of all next-hop options. Proactive
    protocols such as the RPL and the APTEEN family of protocols [15] make local routing
    decisions using the routing table’s content. For instance, the RPL operates as
    a distant-vector protocol for IPv6 low-power devices, utilizes the ZigBee/IEEE
    802.15.4 standard on established IP infrastructure, and also supports the 6LoWPAN
    adaptation layer. RPL creates a multihop tree routing hierarchy of SNs, such that
    nodes can send data through their respective parent nodes to the BS/sink node
    in a flooded manner (Figure 12). Similarly, the BS or sink node can send a unicast
    message to a specific SN in order to complete a bidirectional operational framework
    of RPL. The optimal communication costs and routes are estimated by ranking the
    associated objective function (OF) metrics, which can be single-objective optimization,
    SOO metrics, or MOO metrics. This routing over LLNs (RoLL) restricts densely deployed
    and resource-limited SNs to communicate using peer-to-peer or extended star network
    topologies [13]. Technically, RPL builds a directed acyclic graph (DAG) with no
    outgoing edges from the root element (e.g., BS) to eliminate loops. RPL is the
    primary underlying routing protocol in most failed Agri-IoT testbed attempts.
    Although the proactive or RPL-based family of protocols are robust, reliable,
    scalable, and can relatively operate at minimized control messages with the help
    of timers, they are not suitable for Agri-IoT networks due to these technical
    challenges: The core of RPL/proactive protocols still suffers from key challenges
    such as energy wastage, a lack of adaptability/scalability, reliability, congestion,
    and security issues. Specifically, the energy expended by RPL-inherited protocols
    to create routes (e.g., establish and maintain routing tables) and transmit data
    can be too high for resource-constrained SNs in recent Agri-IoT applications.
    The underlying technology of RPL (e.g., ZigBee, 6LoWPAN, or IPv6) was designed
    for energy-sufficient devices with high processing and memory capacities. Therefore,
    RPL is inapt for typical resourced-constrained Agri-IoT networks (refer to Table
    5). They require costly fixed IP infrastructural supports and utilize the centralized
    routing architecture, which becomes practically impossible to manage as the network
    scales. Table 5. Comparison of some cardinal hierarchical WSN-based routing protocols
    for Agri-IoT in state of the art. Conversely, the source-initiated reactive or
    on-demand routing protocols only create the routes on-demand by a source to send
    data to a receiver. Reactive protocols (e.g., Ad hoc On-demand Distance Vector,
    AODV Protocol [13]) have no specific procedures for creating and updating routing
    tables with route information at regular intervals. For instance, the AODV is
    a loop-free, self-starting, and reactive routing protocol meant for LLNs (e.g.,
    WSN-based IoT) that are characterized by node mobility, link failures, and packet
    losses. AODV mainly consists of the route discovery process (RREQ and RREP messages)
    and route maintenance (RERR and HELLO messages). Although reactive or AODV-based
    protocols can adapt to network dynamics and eliminate periodic updates, the associated
    flooding-based route–search process incurs severe overheads resulting in high
    control message complexity, high route acquisition latency, and high energy wastages
    due to longer SN idling periods. Consequently, these protocols are unsuitable
    for power-constrained WSN-based Agri-IoT applications. The hybrid-based routing
    protocols merge the features of both reactive and proactive routing processes.
    However, hybrid protocols such as APTEEN [13] also require expensive fixed infrastructural
    support, which renders them unsuitable for Agri-IoT, even if the combined merits
    of reactive and proactive protocols are exploited. A comparative assessment of
    the strengths and weaknesses of the parent WSN-based routing protocols for Agri-IoT
    applications is illustrated in Table 5. 5.3. Operation-Based Routing Protocols
    Finally, routing protocols can be classified based on the operation or communication
    model employed, which may include: Negotiation-Based Protocols: These protocols
    exchange negotiation messages or use meta-data negotiations between neighboring
    SNs before the actual data transfers to reduce redundant transmissions in the
    network. A typical example is the SPIN family of protocols [13]. Multipath-Based
    Protocols: These use multiple routes simultaneously to accomplish higher resilience
    to route failure (i.e., fault tolerance) and load balancing. Query-Based Routing
    Protocols: These are receiver-initiated protocols whereby a destination node broadcasts
    a query to initiate a data-sensing task from a node through the network. A node
    having the data being queried sends it in response to the query. Coherent and
    Non-Coherent Protocols: The coherent routing method forwards data for aggregation
    after a minimum local pre-processing. However, in non-coherent routing, the nodes
    locally process the raw data before routing to the BS for further processing.
    QoS-Based Routing Protocols: These protocols’ purpose is to satisfy a specific
    QoS metric or multiple QoS metrics such as low latency, energy efficiency, or
    low packet loss. These protocols ensure a balance between energy consumption and
    data quality in every event-reporting task. In addition to route architectural
    construction and data transmission, efficient MAC must be embedded in the routing
    protocol to manage the wireless medium access and the duty-cycle/sampling schedules
    of the deployed SNs in Agri-IoT networks. As opposed to classic IoT, the MAC techniques
    in Agri-IoT are architecture-defined by the associated routing protocol to meet
    the energy efficiency requirements of the network via channel access management
    (CAM) and the moderation of the active–sleep duty cycles of the deployed SNs to
    save extra energy. The next subsection presents a concise overview of MAC techniques
    and their roles in WSN-based Agri-IoT networks. 5.4. MAC Techniques and Requirements
    for Agri-IoT Next to node deployment, the routing protocol defines the network
    architecture and selects a suitable MAC technique and a communication pattern
    for the routing architecture. Unlike classic IoT, requirements for Agri-IoT applications
    include a low control message complexity and low latency MAC technique that moderates
    sampling schedules, access to a shared medium, transceiver operation modes, (e.g.,
    packet transmission and reception, retransmission, collision, over-hearing, overhead
    handling, and idle listening) active–sleep duty cycles of the deployed SNs, and
    transceiver channels. Thus, an MAC protocol for WSN-based Agri-IoT applications
    must be architecture-specific and adaptive to network dynamics such as data transmission
    errors, interferences/packet collisions, and regular interfacing of the active–sleep
    duty-cycled schedules of the SNs’ transceiver states (e.g., transmitting state,
    receiving state, idle state, and sleep state [52]) during packet transmission
    and reception in order to improve network throughput, energy efficiency, latency,
    and other QoS metrics. Unlike MAC protocols for classic IoT, an efficient MAC
    technique for Agri-IoT must ensure exponential energy savings via channel assignment
    management (CAM) and active–sleep duty-cycle coordination in both time and channel
    perspectives. Based on these common dual tasks of Agri-IoT-based MAC (thus, duty-cycle
    optimization—DCO and channel access management—CAM), existing IoT-based MAC techniques
    can be classified as illustrated in Figure 13 and the state of the art in Table
    6. Figure 13. Proposed functionality-based MAC classification framework. Table
    6. Summary of state of the art on duty-cycle and CAM MMAC protocols. The CAM role
    eliminates packet collisions, overhearing, and over-emitting to ensure the desired
    functional balance, while the DCO task minimizes idle listening. A comparative
    assessment of related MAC methods used in recent WSN-based Agri-IoT applications
    in Table 6 affirms the need for further research on the functionality balance
    between DCO and CAM as well as a context-based MMAC approach for the LEACH family
    of protocols used in Agri-IoT applications. 5.5. Overall Perspective This section
    systematically surveyed core Agri-IoT-based routing protocols and evaluated the
    parent protocols (i.e., RPL, AODV, and LEACH/cluster-based families of protocols)
    for classic WSN-based IoT networks, of which LEACH-based methods are the best
    candidates for the resource-limited WSN-based Agri-IoT. However, the RPL and AODV
    have received more research considerations in terms of realizations in both simulations
    and practice [9,12,21]. Although the cluster-based architecture has unique endowments
    for realizing the proposed expectations in Figure 2 and Figure 10, it lacks an
    in-depth design synthesis in the current state of the art that can uncover its
    contextualized performance optimization modalities for real-world Agri-IoT applications.
    In addition, the deployment requirements with trending technologies such as BLE,
    LoRaWAN, SigFox, 5G, LoRa via Satellite, and NB-IoT under both simulation and
    real-world operational conditions is imperative. Consequently, the following sections
    present in-depth overviews on FM, the benchmarking of WSN-based Agri-IoT testbed
    solutions, clustering methods in the existing state of the art, and how the possible
    deductions from these syntheses can evolve in a typical case-study such as a WSN-specific
    Agri-IoT routing protocol for precision irrigation. 6. State of the Art on FM
    Techniques for Classic WSN Sublayer of IoT Since faults and failures are inevitable
    in the WSN sublayer of Agri-IoT networks (refer to Figure 10), it is imperative
    to reevaluate the faults, causes, types, strengths/weaknesses of existing FM (i.e.,
    fault detection—FD, fault tolerance—FT, and fault-avoidance—FA) schemes, revisit
    their founding assumptions [71], and make appropriate recommendations for Agri-IoT
    network designers. In this section, we establish the root source/cause(s) of faults
    in the WSN sublayer by assessing the behaviors of the different fault types, examining
    the extent to which the existing FM schemes address these root faults, and exploring
    how these schemes will evolve in realistic WSN-based Agri-IoT networks based on
    their core assumptions, control message overheads/complexities, and energy-saving
    capacities. From this thorough assessment, this section proposes practical fault-avoidance-based
    FM techniques for the next generation of WSN-based Agri-IoT. 6.1. Systematic Overview
    of Faults, Sources, and Taxonomy of Faults in Agri-IoT According to the fault–error–failure
    cycle depicted in Figure 14, a fault can be defined as any impairment that causes
    a system to produce erroneous results or leads to the failure of the entire system
    or specific components [72]. The prevalence of faults in WSN-based Agri-IoT is
    primarily due to the SN component malfunction, lack of post-deployment maintenance,
    or resource exhaustion [73], which can lead to either impaired event data quality
    (thus, sensory data error/outlier) or SN-out-of-service (thus, the shortened lifespan
    of SNs) [25]. Figure 14. Fault–error–failure cycle [72]. Due to the high susceptibility
    of WSNs to faults, the supervisory routing protocol is expected to incorporate
    efficient FM mechanisms that can guarantee optimum event data quality and network
    availability. By implication, FM algorithms for WSNs must not be stand-alone as
    currently seen in the state of the art [73]; instead, they must be an integral
    aspect of the routing protocol that agrees with the core participants of the PHY
    layer, such as the SN, wireless communication medium, and the BS. As illustrated
    on the left of Figure 15, the WSN sublayer is the most prevalent source of faults
    in the Agri-IoT ecosystem, in which the SNs are the central origin of faults that
    can propagate to the upper layers [25,43,73]. This is because the BS is resource-sufficient
    mainly, and the link’s reliability also hinges upon the SNs’ availability, as
    indicated in Figure 15. At the local SN’s level, each unit depicted at the bottom
    of Figure 3 is a potential source of fault/failure, but the degree of prevalence
    is frequently accelerated whenever power consumption is mismanaged through the
    disregard of any of the network design requirements and deployment conditions
    presented in later sections. Figure 15. Faults in the WSN sublayer of Agri-IoT:
    sources and fault propagation model. The different taxonomies of faults in the
    state of the art of the WSN sublayer [44,71,73,74,75,76,77], as illustrated on
    the left side of Figure 16, can be compared as follows: Figure 16. Classification
    of faults in the state of the art and proposed fault taxonomies for WSN-based
    Agri-IoT. Hard or permanent fault refers to the inability of a node to stay active
    and communicate due to resource exhaustion or component malfunction, while in
    soft or static faults, nodes continue to work and communicate with other nodes,
    but they sense, process, or transmit erroneous data [44,74]. The authors in [75,78]
    categorized faults as permanent (refers to SN-out-of-service faults), transient
    (caused by temporary conditions), intermittent (shows sporadic manifestations
    due to unstable behavior of hardware and software), and potential (due to depletion
    of hardware resources [78]). Data inconsistency faults can also result from faulty
    sensing, processing, and communication, which is frequently caused by power depletion
    below a certain threshold, while power failure occurs when a node exhausts its
    battery power completely [43,77,79]. The authors in [73] classified faults into
    software and hardware faults based on software and hardware impairments, respectively.
    According to [71], faults can be either time-based, due to the depreciation of
    hardware components with time, or behavioral-based, due to SNs’ inability to cope
    with harsh environmental and operating conditions. From the above definitions
    and the fault taxonomies on the left side of Figure 16, it can be deduced that
    hard, permanent, and static faults are practically manifested as SN-out-of-service,
    while soft, dynamic, and data-inconsistency faults can be observed as data outliers.
    Both SN-out-of-service and data outliers are consequences of unit malfunction
    or resource exhaustion and can be permanent or intermittent in behavior. Both
    conditions can impair the quality of event data and the global actionable decisions
    of the network. Therefore, the quality of FM schemes can be evaluated based on
    their capacities to effectively detect, tolerate, or avoid SN-out-of-service and
    data outlier faults. In summary, most FM schemes in the state of the art focus
    on their effects, instead of the root faults, which are the flaws in existing
    FM schemes [25]. Additionally, since the SN is the sole network device responsible
    for event sensing, data computation, packet forwarding, and communication in the
    WSN sublayer of Agri-IoT, it is the principal source of faults in Agri-IoT networks.
    A new fault classification framework shown in Figure 16 can be deduced from the
    above analysis. Secondly, it is discernible that SNs’ power mismanagement is the
    most prevalent origin of faults [43,80,81], which then propagate to the backend
    or application level (refer to the right side of Figure 15). For instance, communication,
    sensing, and computational accuracies of a node can be impaired when the battery
    energy falls below certain thresholds [43]. Also, network faults can be traced
    to power exhaustion and node failures, which create holes in the topology that
    divide the network into multiple disjointed segments [43]. On that account, faults
    can be avoided in WSN-based Agri-IoT if the energy-saving strategies presented
    in Figure 9 and Figure 10 are effectively implemented. Additionally, any FM scheme
    or fault-monitoring mechanism, be it proactive, reactive, passive, or active,
    must incorporate the following underlying qualities: thresholds that represent
    the probable fault conditions without false alarms, fault discovery, minimized
    message/time complexities, and self-healing and self-reconfiguration to neutralize
    the effects of the faults [43]. FM Framework and Architectures in WSN Sublayer
    of Agri-IoT As illustrated in Figure 17, every FM scheme consists of three main
    steps, which include fault detection (FD), fault diagnosis, and fault recovery/tolerance
    (FT) [82,83], which always require input information. These steps are implemented
    in a decision-making framework that involves four major processes: data/information
    collection, FD model formulation, FD decision and fault classification, and tolerance
    of its effects using any of the FT mechanisms shown in Figure 17. Thus, the FD
    model detects the fault, the fault discovery technique distinguishes that fault
    from false alarms, while the FT mechanism helps to auto-heal and recover from
    the faults or failures [84]. Mainly, SN-out-of-service faults are detected and
    tolerated using self-reconfiguration techniques, whereas data outlier faults must
    strictly follow Figure 17. Figure 17. FM framework in WSN sublayer of Agri-IoT.
    In addition, FM schemes can be implemented using either a centralized or distributed
    architecture [44,85,86]. In a centralized scheme, the FD/FT protocol is hosted
    and managed on the BS, whereas the distributed scheme hosts and manages this algorithm
    on the local SNs [87,88] (see Figure 17). The centralized approach is simpler
    for small-scaled networks but suffers many technical challenges, such as common
    point failure due to heavy message traffic at the BS and high SN energy waste.
    In contrast, the distributed approach saves power and controls message traffic
    on the BS because it allows local decision and self-FD/FT with or without neighboring.
    According to Figure 17, the distributed architecture can be implemented in three
    major ways [43,89,90,91], which include self-detection, neighbor coordination,
    and the clustering approach. Since the basic design requirement of a WSN-based
    Agri-IoT is to maintain the healthy functionality and longevity of the SNs and
    the BS, any post-deployment impairments that cannot be self-fixed must be tolerated
    to not interfere with the core function of the network. Therefore, any automated
    FT mechanism that can be achieved through the self-reconfiguration and self-management
    for enhanced network availability, reliability, and dependability is encouraged
    in the WSN sublayer [92]. According to Figure 17, an efficient WSN-based Agri-IoT,
    therefore, requires a calculated mix of FT mechanisms based on the intended application.
    6.2. Systematic Survey of Fault Management Schemes in WSN-Based IoT FM in Agri-IoT
    networks has not received adequate conceptualized research considerations. As
    a result, existing Agri-IoT solutions inherit the FM propositions from the traditional
    WSN-based IoT networks, which have proven to be unsuitable [14]. This subsection
    presents a concise overview of these FM schemes, including their strengths, weaknesses,
    and underlying theories/concepts. It then proposes a more suitable remedy for
    WSN-based Agri-IoT technology. In canon centralized FM schemes (see references
    in [93,94,95,96,97]), the underlying FM algorithm is hosted and managed on the
    BS, while the local SNs host and manage the FM algorithm in distributed architectures
    [87,88]. Although the centralized approach is simpler for small-scale networks,
    it suffers many technical challenges, such as common point failure due to heavy
    message traffic at the BS, management difficulties, and high energy wastages on
    distant routing. This clearly explains why most outdoor Agri-IoT testbed experiments
    in [1,10,11,14,18,19] experienced severe FM complications to the extent that the
    networks became infeasible to operate or manage at higher scalability levels.
    However, the distributed approach (see references in [74,76,77,91,98,99,100,101,102,103])
    saves power and controls message traffic and workload on the BS because it allows
    local decisions as well as local-FD/FT with or without neighboring nodes. The
    distributed FD/FT scheme can also be self-executed, neighbor-coordinated, or clustering-aided
    [89,90,91]. Although the clustering-based FM architecture has promising potential
    to improve energy conservation, network adaptability, and ease of implementation,
    it has not been extensively researched and exploited. Again, distributed FD schemes
    are mainly established on the assumption that the failure of SNs is spatially
    uncorrelated, while event information is spatially correlated. Therefore, the
    FD’s decision framework is frequently modeled using sensory data or statistical
    properties of the spatial or temporally correlated SNs [79,104,105,106] from the
    immediate neighborhood of a node [74,103] or data from farther SNs [107]. To date,
    the applicability of these solutions to the Agri-IoT context has attracted several
    technical challenges. Consequently, the strengths and weaknesses of the main results
    of the benchmarking FM schemes, their underlying assumptions, and how they addressed
    the critical fault-affinity factors such as energy conservation, FT/FA, control
    message complexity, and processor burden of the SNs, are presented in the comparative
    evaluation summary of Table 7. Table 7. Comparative summary of FM schemes for
    WSN-based IoT networks. 6.3. Theories/Concepts of Benchmarking FM Schemes and
    Their Shortcomings The conceptual models/theories of the canon FD decision frameworks
    and the associated shortcomings can be expressed as follows: Statistical approaches
    such as Neyman–Pearson formulation [116], Bayesian statistics [77,103], and normal
    distribution test types (e.g., Thompson Tau statistical test [105]) are high-resource-demanding
    techniques that may apply to classic IoT. Still, they are unsuitable for power-constrained
    Agri-IoT devices or SNs. In addition to being stand-alone and without application
    specificity, these methods operate at high computational and control message complexities.
    Their operational efficiencies increase with increasing data dimensionality and
    also require a priori knowledge of data distribution, which is not possible in
    many real-life applications of Agri-IoT networks. Additionally, they rely on predefined
    thresholds to make local and global FD decisions. Therefore, regardless of the
    extensive research considerations of these methods, they are generally not suitable
    for low-power IoT applications, of which Agri-IoT is no exception. Graph-based
    FM techniques lack precise criteria for outlier detections [83,109], suffer higher
    computational complexities, and also make unrealistic assumptions about the data
    distribution. In addition, these approaches (e.g., De Bruijn graph theory [109]
    and depth-based techniques) are unsuitable for multidimensional and huge datasets.
    Machine learning decision concepts such as the k-out-of-n and majority decision
    rule concepts [93], naive Bayes, iterative algorithms [107], and neural network-based
    techniques, among others, are susceptible to high dimensional datasets, suffer
    high computational cost, and rely on sensitive model parameters. In addition to
    the stipulated shortcomings, these benchmarking FM methods usually ignore the
    sensory data correlation (i.e., attribute correlation, spatial correlation, and
    temporal correlation) properties of SNs, require high communication overhead with
    high FD delays [83], and normally operate in an offline manner, which is inconsistent
    with the modus operandi of typical Agri-IoT. Hence, they are unsuitable for the
    recent low-power Agri-IoT applications. 6.4. Open Issues on Existing FM Solutions
    for Classic WSN-Based IoT Networks and Recommended Design Guidelines for Achieving
    Efficient FM in WSN-Based Agri-IoT A fault in the WSN sublayer of Agri-IoT networks
    can be manifested as a data outlier and SN-out-of-service or node failure, both
    of which must be detected and resolved locally or globally using the spatially
    correlated event information and efficient threshold-based decision frameworks.
    Although there has been extensive research concerning FM schemes for the WSN sublayer,
    several technical challenges that require urgent contextual research considerations
    exist. They include the following: Most faults in the PHY layer of Agri-IoT originate
    from the SNs’ power exhaustion, which implies that the best fault-avoidance techniques
    are those that optimize power consumption. However, most FM schemes waste more
    energy and make the network prone to more faults/failures via high control messages
    and computational complexities. Most FM schemes exist as stand-alone frameworks
    without architectural considerations and are founded on unrealistic assumptions,
    which make them difficult to incorporate into existing routing protocols. The
    cluster-based routing architecture is endowed with many untapped local/global
    FM potentials and fault-avoidance capacities for the next-generation Agri-IoT.
    However, these promising potentials have received the least contextualized research
    considerations. Existing FM solutions are meant for resource-sufficient and expensive
    classic WSN-based IoT, not resource-constrained, context-specific use cases like
    Agri-IoT networks. Regarding these technical challenges, this tutorial presents
    the following design guidelines for building efficient and realistic FM schemes
    for WSN-based Agri-IoT: FM schemes must rely on realistic and contextual assumptions
    in order to detect and auto-tolerate sensory data outliers and SN-out-of-service
    faults in real-time routing protocols with minimal message, computational, and
    memory complexities. Such FM schemes will be suitable for all power-constrained
    WSN-based Agri-IoT applications. Future works on FM schemes must be embedded into
    specific routing protocols so that their adaptability to topological dynamism
    and scalability in terms of network sizes and node densities can be assessed in
    an unsupervised manner. Therefore, fault detection and fault-tolerance schemes
    based on simple threshold-based theories are the best candidates for this context,
    since the threshold boundaries of agronomical metrics can be accurately computed
    from the historical data of the location. FM schemes must incorporate redundancy
    check mechanisms by exploiting spatial and temporal correlations among sensory
    data. FM schemes should maintain a good balance between local and global FDs as
    well as a reasonable detection rate and false alarm rate. 7. State of the Art
    on Real-World, Canon WSN-Based Agri-IoT Testbed Solutions It is well documented
    that WSN-based Agri-IoT is the most reliable remedy for mitigating the negative
    impacts climate change has had on agricultural production, for which many architectural
    designs and testbed prototypes have been proposed [12,36]. In addition, since
    the autonomous, resource-constrained SNs in Agri-IoT are expected to operate without
    post-deployment maintenance checks, the issues of FM, power optimization, and
    self-organization during SN design and network deployment cannot be ignored in
    existing testbed solutions [12,117]. Essentially, the results from most research
    projects on Agri-IoT relied on simulation experiments [1,10,14], which have retained
    the gap between the philosophy of this technology and the comprehension of its
    real-world behavior for a more accurate performance assessment. This section presents
    a systematic performance assessment of the few real-world WSN-based Agri-IoT testbed
    solutions currently based on the classic WSN-based IoT principles. To understand
    how the benchmarking realization testbeds of Agri-IoT in [1,10,11,14,18,19] fared
    in real-world operational conditions, the results from their respective performances
    are systematically evaluated and summarized in Table 8. It was discovered that
    the current benchmarking testbed solutions in [1,10,11,14,18,19] are capital-intensive
    because they are reliant on fixed/location-restricted backbone infrastructures
    (see the middle of Figure 3), too complicated to deploy and manage by even expert
    users, based on unrealistic indoor conditions which do not commensurate real-world
    environmental conditions, and based on the high- power-demanding centralized or
    flooding architectures which further complicate network manageability when up-scaled.
    A concise and systematic survey of these benchmarking real-world Agri-IoT networks
    and their flaws in the state of the art is summarized in Table 8. Table 8. Comparative
    analysis of WSN-based Agri-IoT testbed solutions. Additionally, it can be established
    from the comparative assessment of the benchmarking Agri-IoT testbeds in Table
    8 [10,11,18,19] that the embedded communication technology, event routing architecture,
    and the SNs’ power management are the core factors that made them capital-intensive
    and complicated to both experts and low-income farmers. Additionally, self-healing,
    reconfigurability, and adaptability mechanisms to faults were not deployed [1,14,17];
    hence, faulty and turbulent conditions could not be tolerated. Furthermore, since
    the battery-powered SNs rely on expensive Wi-Fi and cellular communication technologies
    that are not freely accessible at all locations, the SNs exhausted their battery
    supply a few days after deployment. Similarly, those that relied on ZigBee/IEEE
    802.15. 4 communication technologies with power-intensive 6LoWPAN or IPv6 protocols
    restricted the resulting network to drive on the problematic centralized or flooding
    architectures without any efficient FM techniques. As a result, these solutions
    used costly fixed IP infrastructural supports and the centralized routing architecture,
    making them practically impossible to manage as the networks scaled. This is why
    the SNs unstably exhausted their battery power and abruptly abridged network lifespans
    [1,10,11,14,18,19]. Therefore, the freely available low-power wireless technologies
    (e.g., LoRa, BLE, 5G, Z-wave, NB-IoT, and SigFox) that are founded on a suitable
    routing topology are the best candidates for making this ubiquitous application
    [1,16] cheap [1,20] and simple for all users. Thus, the cluster-based topology
    is more pivotal to addressing the above challenges of Agri-IoT [10,17] than the
    traditional cellular and WiFi technologies that are inaccessible in many farms,
    depending on their locations [10,20]. However, besides distance-power constraints,
    architectural support, and network manageability challenges, these freely accessible
    wireless communication technologies have specific limitations, which include:
    ZigBee technology achieves the desired power savings only when deployed in star
    or centralized topology [14], and it operates at its low-power distance range
    (10–100 m) in line-of-sight mode depending on the environmental characteristics.
    LoRa is limited to low-density and fixed network sizes (non-scalable), a low data
    rate, and a low message capacity [14]. It may require registration and expensive
    antennae, depending on its operation location. SigFox supports a very low data
    rate and requires registration. LoRa and SigFox possess complex implementations
    because they both require specific modules to function and gateways. WiFi, GPRS,
    cellular technologies, and NB-IoT are high power consumption standards and location-/architecture-restricted.
    BLE has a short communication range but supports clustering architecture, which
    is the most optimal architecture for ensuring the best operational efficiency
    of WSN-based Agri-IoT deployments, since this architecture allows cluster isolation
    and management. Therefore, a research opportunity exists for a flexible, ubiquitous,
    realistic, energy-efficient, self-healing, simple, low-cost, cluster-based, and
    wireless outdoor-based testbed that consists of infrastructure-less, task-scalable,
    and wirelessly configurable experimental SNs and a BS. It should also be deployed,
    re-deployed, monitored, controlled, and managed by non-experts to operate stably
    throughout the entire crop-growing season. 8. Case Study: Cluster-Based Agri-IoT
    (CA-IoT) for Precision Irrigation As earlier established in Figure 2, the design
    and implementation of Agri-IoT networks are driven by unique critical factors,
    which are mainly determined by the associated routing architecture, communication
    technology, actuation management mechanisms, and environmental impacts. In the
    operation phase, these factors constitute the specific objectives in Figure 10,
    which the supervisory routing protocol must address in order to optimize performance
    efficiency and stability. As systematically established above, the LEACH-inherited
    cluster-based architecture has the most promising potential to address these technical
    challenges. It helps to attain high power optimization via communication distance
    and packet minimization, efficient network administration/adaptability, high event
    data quality through auto-FM, and local data quality management, as indicated
    in Figure 10. So, this section presents a systematic analysis of how the merits
    of this architecture evolve in CA-IoT for precision irrigation use cases. Using
    the framework in Figure 12, the cluster-based architecture was pre-examined to
    uncover how the fundamental Agri-IoT design requirements and goals presented in
    the reference frameworks in Figure 2, Figure 9 and Figure 10 can unfold into realistic
    multi-parametric optimization metrics. The conceptual architectural framework
    of the proposed network, as illustrated in Figure 18, can be implemented using
    Arduino-based or Raspberry Pi(RPi)-based microcontrollers, BLE and LoRa for intra-cluster,
    inter-cluster, and BS–cloud communications, respectively, and DHT22/STEMMA soil
    moisture sensors for measuring the respective ambient and soil microclimatic parameters.
    Also, a unit cluster from Figure 18 detailing the key network components of MNs,
    CH, BS, and the field-deployed precision irrigation system is shown in Figure
    19. It is assumed that the core units constituting the MNs, CH, and BS, as illustrated
    in Figure 19, are optimally selected and designed after Figure 2. Using Figure
    18 and Figure 19 as the reference architectural frameworks for achieving our contextualized
    objectives, this section presents an in-depth systematic assessment and characterization
    of the scores of canon cluster-based routing protocols of conventional WSN-based
    IoT applications so that the desired MOO metrics can be appropriately deduced
    and adapted for the design of the associated routing for our case study. Figure
    18. Conceptual architectural framework of the proposed CA-IoT for precision irrigation
    management. Figure 19. CA-IoT use case cluster illustrating the key network components:
    MNs, CH, and BS. 8.1. Characterization of Canon Clustering-Based Routing Protocols
    and Deduction of MOO Metrics A systematic survey (refer to Table 9) and characterization
    of LEACH-based routing protocols were conducted using the clustering process,
    CH features, and cluster features, as indicated in Figure 20, in order to conceive
    the core MOO metrics for the proposed CA-IoT network framework. The clustering
    process, CH features, and cluster features define the performance optimalities
    and the quality of the sampled data of the resulting architecture. Figure 20.
    Characterization of cluster-based networks and deduced taxonomy of MOO metrics
    for optimizing Agri-IoT networks. Table 9. Comparative summary of Agri-IoT-applicable
    clustering-based routing protocols using characterization parameters. As depicted
    in Figure 20a, the cluster features define the underlying connectivity issues,
    such as cluster quality indices (thus, cluster count, cluster size) and intra-cluster
    and inter-cluster communication types (thus, single-hop or multihop or both) [23,24].
    From the network design viewpoint, the cluster quality depends on the optimality
    of the CH count and cluster sizes, which in turn rely on the core design parameters,
    such as the spatial density and uniformity of the deployed nodes, the specification
    of the wireless communication standard, the routing architecture, and the size
    of the network [47]. Since the deployment of SNs in a typical Agri-IoT can be
    controlled, the stipulated cluster quality properties can be optimized to resolve
    connectivity issues in Figure 20b. In a randomly deployed field, these cluster
    quality parameters can be optimized using a pairing-based SN duty-scheduling mechanisms
    [9,12]. Secondly, the CH features can be static, mobile, or role-rotated in both
    homogeneous or heterogeneous networks [9,12] based on the SNs’ resource hierarchy.
    Additionally, the CHs can be assigned different tasks, such as data aggregation,
    FM, coordinating network reconfiguration or duty cycling, and network maintenance,
    depending on their resource capacities and network requirements. This case study
    is based on static SNs and the distributed network construction approach (see
    references in [9,12,33,126,127,128,129,130,131,132]), where the SNs locally manage
    the entire clustering process, and a CH is elected without the entire network’s
    information. As shown in Figure 20a, the clustering process can be characterized
    by the clustering method/network type (thus, centralized or distributed), the
    CH selection method, reclustering or network adaptability to topological or scalable
    conditions, and the complexities (thus, control message and computational complexities)
    of the entire network operation cycle. Unlike the static approach with fixed CH,
    the adaptive clustering approach selects CH based on the current network conditions
    and rotates this role. However, both approaches can incorporate self-reclustering
    techniques to self-heal SN-out-of-service faults. Data outlier faults can be best
    detected and corrected using threshold-based decision theory or spatial correlation
    methods with the least complexities. Due to the large-scale and high deployment
    densities of WSN-based Agri-IoT, the distributed clustering process is more suitable
    for enhancing local FM, scalability, network management, and power optimization
    than the centralized approaches [37,47]. Generally, the CA-IoT network can be
    optimized by formulating the deduced optimal decision metrics in Figure 20a into
    a MOO framework and multihop routing model in order to provide the guidelines
    for the design of the WSN sublayer of Agri-IoT. From the comparative evaluations
    of Figure 10 and Figure 20a, a taxonomy of MOO metrics for designing an efficient
    WSN-based CA-IoT network is proposed in Figure 20b. To enhance the clarity of
    the state of the art on cluster-based protocols and justify the need for the proposed
    MOO metrics, a comparative summary based on the characterization parameters is
    presented in Table 9. 8.2. CH Election Techniques A CH selection process is very
    critical to the resulting network’s performance efficiency. In addition to centralized
    networks and the computationally expensive fuzzy-based clustering approaches [133,134],
    the efficiencies of all LEACH-inherited protocols are mainly dependent on their
    CH selection techniques [47,49]. Therefore, the correct estimation of the cluster
    quality metrics (i.e., CHs count and cluster size) is pivotal in attaining the
    objectives in Figure 10. With the aid of nodes’ residual energy and location metrics,
    the optimal CH count and cluster size can be preset before network deployment.
    Currently, these metrics are randomly selected using a probabilistic approach
    in LEACH-inherited protocol [9,21] or derived using a deterministic or an attribute-based
    method [47,135]. However, the probabilistic clustering, such as the LEACH-inherited
    protocols, is expected to perform better in terms of network lifespan, minimal
    clustering overhead, improved connectivity, network/coverage stability, low latency,
    collision-free routing, load balancing, high network stability span, and algorithmic
    simplicity if the optimal CH count was predefined correctly [136]. However, the
    CH count is randomly predefined in these protocols [9,21], which undermines the
    CH’s stability and the resulting architecture’s optimality. This challenge can
    be addressed via common CH selection metrics including Euclidean distance, intra-cluster/inter-cluster
    communication costs, energy-harvesting capacities, and probabilistic factors.
    To date, the related attempts in [49,126,137,138,139] only relied on the SNs’
    residual energy and location information to re-elect CHs after the initial CH
    count is defined, which cannot be ideal for WSN-based Agri-IoT. For instance,
    an active SN in a particular round decides whether or not to become a CH by choosing
    a random number ( 𝑟 𝑛 ) ranging between 0 and 1 and comparing the number with
    a specified threshold 𝑇ℎ . A node, therefore, becomes a CH for that round if 𝑟
    𝑛 <𝑇ℎ , where 𝑇ℎ is expressed as: 𝑇ℎ= ⎧ ⎩ ⎨     𝑝 𝑑 1− 𝑝 𝑑 ×((𝑓𝑖𝑟𝑠𝑡−𝑟𝑜𝑢𝑛𝑑)𝑚𝑜𝑑
    1 𝑝 𝑑 , 0, if 𝑛∈𝐺 otherwise (1) where 𝑝 𝑑 is the desired percentage of CHs or
    CH count per round, and G is the number of SNs that have not been a CH in the
    previous 1/𝑝 rounds. The authors in [119] proposed a three-layered LEACH (TL-LEACH)
    that operates in three functional phases—CH election, MN recruitment, and data
    transfer—to enhance the energy efficiency of LEACH. Their first-level CH election
    approach modified Equation (1) into an enhanced threshold 𝑇(𝑖) , which is expressed
    as: 𝑇(𝑖)= ⎧ ⎩ ⎨   (𝑟+1)×𝑚𝑜𝑑( 1 𝑝 ×𝑝), 0, if 𝑖∈𝐺 otherwise (2) where p is the
    CH count, r is the current round number, and G is the number of SNs that have
    not been a CH in the previous 1/𝑝 rounds. The second-level CHs are selected from
    the first-level CHs based on the shortest distance to the BS to function as aggregated
    packet forwarders or relay CHs (RCHs). The authors in [120] introduced energy
    ( 𝐸(𝑖) ) and distance ( 𝐷(𝑖) ) attributes into Equation (1) to improve the load-balancing
    merit of LEACH. The resulting 𝑇ℎ is expressed as: 𝑇ℎ= ⎧ ⎩ ⎨     𝑝 𝑑 1− 𝑝 𝑑
    [𝑟×𝑚𝑜𝑑 1 𝑝 𝑑 ] ×[𝐸(𝑖)+(1−𝐷(𝑖))], 0, if 𝑛∈𝐺 otherwise (3) Multihop routing via
    relay CHs (RCHs) was recommended for distant CHs in the future scope of [120].
    In the LEACH presented with a distance-based threshold (LEACH-DT) algorithm in
    [121], the probability of becoming a CH depends on the relative distance between
    a node and the BS. This algorithm differs from the LEACH algorithm because the
    desired percentage of CHs ( 𝑝 𝑖 ) is predefined using Equation (5), while the
    threshold 𝑇(𝐼,𝑟) is expressed as: 𝑇(𝑖,𝑟)= ⎧ ⎩ ⎨     𝑝 𝑖 1− 𝑝 𝑖 ×[𝑟×𝑚𝑜𝑑 1 𝑝
    𝑖 ] , 0, if  𝐺 𝑖 (𝑟)=0 if  𝐺 𝑖 (𝑟)=1 (4) Note that the terms retain their usual
    definitions, namely: 𝑝(𝑖)=𝑘 𝜉 𝑖 ∑ 𝑁 𝑗=1 𝜉 𝑗 ,0≤ 𝑝 𝑖 ≤1, (5) where 𝜉 𝑖 =1/ 𝐸 𝐶𝐻
                   × 𝑑 𝑖 − 𝐸 𝑛𝑜𝑛−𝐶𝐻                
                 , (6) The variable 𝑑 𝑖 depicts the distance between
    node i and the BS, and 𝐸 𝐶𝐻 and 𝐸 𝑛𝑜𝑛−𝐶𝐻 are the average residual energies in
    CHs and non-CHs, respectively. The authors further established the need for a
    multihop routing approach in simulations and real-world WSNs to validate the countless
    theoretical propositions and benefits. In the decentralized energy-efficient hierarchical
    cluster-based routing algorithm (DHCR) [123], SNs compete to become CHs. First,
    the BS broadcasts a trigger message at a specific range. The receiving nodes then
    compete to become a CH by disseminating a new message containing their residual
    energies and distances from the BS. Using this information, a neighboring node
    i within the target range receives the message and calculates its 𝐶𝐻 𝑆 𝑛𝑓𝑢 𝑛 𝑖
    as: 𝐶𝐻 𝑆 𝑛𝑓𝑢 𝑛 𝑖 =𝑎× 𝐸𝑟 𝑒 𝑖 𝐸 𝑚𝑎𝑥 +𝑏× 1 𝐷𝑖𝑠−𝑇𝑜−𝐵 𝑆 𝑖 , (7) where 𝐸𝑟 𝑒 𝑖 and 𝐸
    𝑚𝑎𝑥 are the residual and initial energy levels of node i, respectively; 𝐷𝑖𝑠−𝑇𝑜−𝐵
    𝑆 𝑖 is the distance between node i and the BS, and a and b are real random values
    between 0 and 1 such that 𝑎+𝑏=1 . The values of 𝐷𝑖𝑠−𝑇𝑜−𝐵 𝑆 𝑖 of node i and its
    neighbors are compared, and the node with the highest 𝐷𝑖𝑠−𝑇𝑜−𝐵 𝑆 𝑖 value is selected
    as the CH. A first-level CH broadcasts its residual energy, neighboring node count,
    and distance from the BS via a specific route. The next-level CHs receive the
    information and similarly repeat the procedure to ensure that every node determines
    a redistributor CH to the BS at the same time. A redistributor CH has more energy
    and fewer neighbors (neighboring degrees). However, the Hamilton energy-efficient
    routing protocol (HEER) [124] creates an entire cluster of nodes, aggregates data,
    and transmits them to the BS via a Hamiltonian path that has been created by the
    entire cluster of nodes and controls the cluster size by selecting one node as
    the CH using the probability function p, which can be expressed as: 𝑝= 𝐿 𝑚𝑒𝑠𝑠𝑎𝑔𝑒
    𝐹 𝑚𝑎𝑥 (8) where 𝐿 𝑚𝑒𝑠𝑠𝑎𝑔𝑒 is the size of every node, and 𝐹 𝑚𝑎𝑥 is the maximum
    size of a frame. The HEER protocol creates the clusters only once in the first
    round based on LEACH, and it role-rotates the CHs per the energy on the Hamiltonian
    path after a determined period. Similarly, the two-phased EAMR protocol [125]
    randomly preselects the CH. A CH also selects its closest CH as its redistributor
    CH. The clusters are static over the entire network lifetime, and the CH role
    rotates randomly within the clusters according to a cluster replacement threshold.
    The new CH inherits the redistributor role if the old CH had one. Overall, since
    the node location, residual energy, and sleep schedule are indispensable in the
    CH selection process, the CH selection methods proposed by the authors in [9,12,36,120,140]
    are recommended WSN-based Agri-IoT applications. 8.3. Challenges of Existing MOO
    Frameworks and Recommended Future Works As Figure 9 and Figure 10 illustrate,
    the performance efficiency of an infrastructure-less WSN-based Agri-IoT mainly
    depends on the embedded MOO remedies in the associated supervisory routing protocol
    [12]. Several MOO frameworks have been researched since Agri-IoT networks are
    subjected to multiple design and operational constraints. A MOO framework is expected
    to formulate multiple objective functions from a set of MOO metrics to simultaneously
    optimize these multiple objectives, such as the maximal energy savings, highest
    connectivity, best latency, highest reliability, and balanced SN power depletion
    rates across the network. Although the MOO methods are the best candidates for
    Agri-IoT, the existing MOO solutions used in Agri-IoT are adopted from traditional
    WSN-based IoT without any contextual evaluation [12,16,26]. Consequently, they
    have not fulfilled their intended purposes due to several technical challenges,
    including the following: They are limited to non-cluster-based network architectures,
    which implies that the promising potentials of the clustering architecture are
    not adequately exploited [9,12,50,51]. They are frequently implemented in the
    operational phase of the network, which makes it challenging to find global optimal
    solutions with a balanced tradeoff among conflicting objective functions. The
    performance optimality of the Agri-IoT network starts from the SN design. They
    rely on high-resource-demanding algorithms, such as mathematical programming-based
    scalarization methods, multi-objective genetic algorithms (MOGAs), heuristics/metaheuristics-based
    optimization algorithms, and other advanced optimization techniques [23,26,48],
    making them unsuitable for the battery-powered SNs in Agri-IoT. There are no contextual
    MOO guidelines based on Figure 20 to govern the PHY-layer design of Agri-IoT to
    achieve global optimal solutions with a balanced tradeoff among conflicting objectives.
    Consequently, there are conflicting scenarios in existing MOO solutions [50].
    Therefore, there is an urgent demand for a realistic low-power MOO framework for
    CA-IoT networks that is founded on the core WSN design metrics and MOO taxonomy
    metrics in Figure 10 and the top of Figure 20, respectively. The following section
    assesses how evaluations and deductions evolve in a typical event sampling and
    routing protocol in a CA-IoT network for precision irrigation system management.
    9. Design of WSN-Specific CA-IoT Routing Protocol This section proposes a CA-IoT-based
    supervisory routing protocol that supports static SNs, rotatable/fixed CH roles,
    and enhanced SN resource management under the deterministic deployment approach.
    This can improve energy savings, connectivity, distance moderation, and multihop
    inter-cluster communication in the resulting network. The operational cycle and
    the embedded activities of our WSN-based CA-IoT protocol for precision irrigation
    application, as illustrated in Figure 21, include the following: Figure 21. Proposed
    operation cycle for designing our CA-IoT network’s routing protocol. Network Construction
    or Setup Phase: This phase involves network modeling, CH election, and cluster
    formation, which is explained in Figure 21. The active–sleep duty-cycle scheduling
    ensures the SNs only switch to active mode during their scheduled sampling durations.
    In randomly deployed WSNs, redundant event reporting can be avoided using a correlated
    pairing-based active–sleep duty-cycle scheduling approach in [12]. The optimal
    CH count and cluster size must be predefined from the resource capacities of the
    SNs. After the initial CH election, the MNs are recruited and assigned their respective
    sampling and intra-cluster communication timeslots. Sampling, Data Management,
    and Transmission Phase: The tasks executed in this phase include event sampling,
    intra-cluster and inter-cluster data transmissions, data outlier FM, and event
    data redundancy management. Since microclimatic soil parameters do not change
    swiftly [1,14], sampling can only be scheduled during the day at 3-hourly time
    intervals. In addition to power optimization, the clustering approach provides
    superb potential for both local and global FM using threshold-based FM theory
    and spatial correlation techniques. Based on the architecture in Figure 19 and
    the resource limitations of the SNs, it is recommended that the communication
    beyond the BS or gateway can utilize LoRa or Wi-Fi AirBox, whereas the intra-cluster
    and inter-cluster communications must be the freely available low-power BLE technology,
    since it is the most suitable for the clustering architecture. Network Maintenance
    and Reclustering Phase: This phase resolves all unforeseen topological dynamics
    caused by the SNs’ failures, network scalability, node mobility, and unexpected
    operational flaws, without interfering with the normal network functionality via
    adaptive reclustering, self-healing, and multihop routing techniques [12,23,24].
    Here, a parent CH coordinates the election of child CHs (CCHs). While all non-CCHs
    switch to sleep mode, the CCHs recruit new MNs using location and residual energy
    parameters, assign them their respective sampling timeslots, and repeat Phase
    2 afterward, as shown in Figure 21. SN-out-of-service faults are auto-detected
    and tolerated in this phase. Additionally, Figure 21 uniquely incorporates correlated
    pairing-based duty cycling, constant control message complexity FM/data redundancy
    scheme, network construction/maintenance, and cluster quality measures that can
    ensure unprecedented energy savings and event data quality. This clustering approach
    can further minimize energy wastage via a suitable MAC method, a low-power wireless
    communication standard, data aggregation with data redundancy checks, and CH role
    rotation, among other factors. Although the various sections of the deduced MOO
    metrics have been implemented in our CA-IoT operational cycle, the most desired
    performance can be optimally attained when the MOO metrics are modeled into their
    respective objective functions, and their optimal values are determined and implemented
    in both simulation and testbed experiments in future works. Also, a realistic
    multihop routing framework can also be inculcated into this protocol for large-scale
    applications. 10. Open Issues and Future Works: Cluster-Based WSN-Specific Agri-IoT
    Networks This tutorial has firmly established that the WSN-based Agri-IoT is an
    indispensable component of smart or precision farming and greenhouses, despite
    its resource- and deployment-induced challenges [12,26,141]. Unlike the conventional
    IoT, Agri-IoT is compelled to drive on batteries and affordable task-scalable
    SNs. However, it must meet the expectations in Figure 2 to guarantee a stable
    performance. The cluster-based routing technique has emerged with promising potential
    to mitigate these challenges. However, results from existing testbed solutions
    in this study show otherwise due to the absence of a contextualized in-depth overview
    of Agri-IoT as well as the following open issues which have not received extensive
    contextual research considerations in Agri-IoT applications: The cluster-based
    routing architecture for WSN-based Agri-IoT has not received holistic and practical
    research considerations as far as FM, power optimization, and network adaptability
    are concerned. Therefore, there is a demand for multi-parametric optimization
    frameworks and guidelines for designing and implementing the WSN sublayer. Concerning
    FM, most proposed schemes in the canon state of the art are stand-alone, have
    high control message and computational complexities (energy-inefficient), and
    are mostly incompatible with the clustering architecture [25,52]. The desired
    FM schemes for CA-IoT applications should be equipped with fault-avoidance mechanisms
    and the capacity to detect and self-heal root faults (SN-out-of-service and sensory
    data outliers [25]), not their effects. Multihop routing, which is a requirement
    to attain the desired energy savings and network adaptability in large-scale CA-IoT
    networks, is asserted to be more energy-efficient only in simulation experiments
    [33,120,121,123,124,125,128,129,130] but not in real-world implementation [22,23,24].
    This imbalance is due to a lack of a comprehensive and reliable theoretical multihop
    routing framework that is based on the total communication costs of multihop routing.
    There is a demand for a more realistic and holistic MOO framework that can optimize
    the operational efficiency metrics such as cluster size, cluster counts, density/uniformity
    of nodes, communication distance, and activity schedule/duration, right from the
    network design phase to the operational phase of Agri-IoT networks. Although the
    current literature supports adaptive clustering with CH role rotation ideology,
    there exists the need for an optimal initial CH-count estimator in order to improve
    the stability of CH elections and the architecture. Thus, the cluster quality
    indices (e.g., optimal cluster count and size) must be predetermined before defining
    them in the associated CH election method, since CH stability is compromised in
    most clustering methods [9,21,119,120,121,123,124]. Most protocols in the state
    of the art rely on perfect homogeneous networks, which is unrealistic due to variations
    in modular specifications and resource utilization and the fact that different
    SNs may have different communication and data computational roles. Therefore,
    a more realistic, contextualized, and adaptive clustering approach that leverages
    the gap between the philosophy and practice of Agri-IoT applications is needed.
    In addition to the parent LEACH protocol [21,61] which is a complete suite application
    comprising routing, MAC, and physical characteristics for wireless communication
    in WSNs, most benchmarking MAC protocols purposed for traditional IoT applications
    are shelved, since they are developed in solitude without application specificity
    and network architectural considerations. A custom-built and holistic protocol
    suite for Agri-IoT remains a research opportunity. 11. Conclusion and Future Works
    This tutorial presented: (1) a systematic overview of the fundamental concepts,
    technologies, and architectural standards of WSN-based Agri-IoT; (2) an evaluation
    of the technical design requirements of a robust, ubiquitous, self-healing, energy-efficient,
    adaptive, and affordable Agri-IoT; (3) a comprehensive survey of the benchmarking
    FM techniques, communication standards, routing protocols, MMAC protocols, and
    WSN-based testbed solutions; and (4) an in-depth case study on how to design a
    self-healing, energy-efficient, affordable, adaptive, stable, and cluster-based
    WSN-specific Agri-IoT from a proposed taxonomy of MOO metrics that can guarantee
    optimized network performance. Furthermore, this tutorial established new taxonomies
    of faults, architectural layers, and MOO metrics for CA-IoT networks. Using the
    open technical issues, it recommended application-specific requirements of Agri-IoT,
    general design expectations, and remedial measures, and it evaluated them in CA-IoT
    for precision irrigation in order to optimally exploit the proposed MOO metrics
    in a typical CA-IoT design in both simulation and real-world deployment scenarios.
    Overall, this tutorial can serve as a new reference document for the IoT community
    and Agri-IoT designers, since it adequately examined all critical aspects of WSN-based
    Agri-IoT networks from theoretical modeling to real-world implementation. Author
    Contributions The First Author contributed 60% while the second the third Authors
    contributed 20% each. Conceptualization, E.E.; methodology, A.M.W.; writing, review
    and editing, E.E., O.T. and A.M.W.; supervision, O.T. and A.M.W.; project administration,
    E.E.; and funding acquisition, E.E., and O.T. All authors have read and agreed
    to the published version of the manuscript. Funding The work was carried out with
    the financial support of icipe- World Bank Financing Agreement No D347-3A and
    the World Bank Korea Trust Fund Agreement No TF0A8639 for the PASET Regional Scholarship
    and Innovation Fund. The views expressed herein do not necessarily reflect the
    official opinions of the donors. Data Availability Statement This research has
    no such data. Conflicts of Interest The authors declare no conflict of interest.
    Abbreviations SN Sensor Node WSN Wireless Sensor Network IoT Internet of Things
    Agri-IoT Agricultural Internet-of-Things CA-IoT Cluster-based Agricultural Internet
    of Things FD/FT Fault Detection and Fault Tolerance FA Fault Avoidance FM Fault
    Management MOO Multi-Objective Optimization BS Base Station MMAC Multichannel
    Medium Access Control MAC Medium Access Control BLE Bluetooth Low-Energy CH Cluster
    Head RCH Relay Cluster Head MN Member Node AODV Ad hoc On-demand Distance Vector
    RPL Routing over Low-Power and Lossy Networks protocol CAM Channel Access Management
    DCO Duty-Cycle Optimization References Kumar, P.; Reddy, S.R.N. Lessons Learned
    From the Deployment of Test-Bed for Precision Agriculture. In Proceedings of the
    International Conference on Sustainable Computing in Science, Technology & Management
    (SUSCOM-2019), Jaipur, India, 26–28 February 2019; pp. 25686–25697. [Google Scholar]
    [CrossRef] Abbasi, M.; Yaghmaee, M.H.; Rahnama, F. Internet of Things in agriculture:
    A survey. In Proceedings of the 2019 3rd International Conference on Internet
    of Things and Applications (IoT), Isfahan, Iran, 17–18 April 2019; pp. 1–12. [Google
    Scholar] Gennari, P.; Moncayo, J.R. World Food and Agriculture Statistical Pocketbook;
    Food and Agriculture Organization of the United Nations: Rome, Italy, 2018; Volume
    1, pp. 1–248. [Google Scholar] Shiferaw, B.; Tesfaye, K.; Kassie, M.; Abate, T.;
    Prasanna, B.M.; Menkir, A. Managing vulnerability to drought and enhancing livelihood
    resilience in Sub-Saharan Africa: Technological, institutional and policy options.
    Weather. Clim. Extrem. 2014, 3, 67–79. [Google Scholar] [CrossRef] [Green Version]
    Devi, K.H.; Gupta, M.V. IoT Application, A Survey. Int. J. Eng. Technol. 2018,
    7, 891–896. [Google Scholar] [CrossRef] [Green Version] Stoces, M.; Vaněk, J.;
    Masner, J.; Pavlík, J. Internet of Things (IoT) in Agriculture—Selected Aspects.
    AGRIS On-Line Pap. Econ. Inform. 2016, 8, 83–88. [Google Scholar] [CrossRef] [Green
    Version] Lova, R.; Vijayaraghavan, V. IoT Technologies in Agricultural Environment:
    A Survey. Wireless Pers. Commun. 2020, 113, 2415–2446. [Google Scholar] [CrossRef]
    Farooq, M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey on the Role of
    IoT in Agriculture for the Implementation of Smart Farming. IEEE Access 2019,
    7, 56237–156271. [Google Scholar] [CrossRef] Tauseef, S.; Nadeem, J.; Talha, Q.
    Energy Efficient Sleep Awake Aware (EESAA) intelligent Sensor Network routing
    protocol. In Proceedings of the 15th International Multitopic Conference (INMIC),
    Islamabad, Pakistan, 13–15 December 2012; pp. 317–322. [Google Scholar] [CrossRef]
    [Green Version] Hartung, R.; Kulau, U.; Gernert, B.; Rottmann, S.; Wolf, L. On
    the Experiences with Testbeds and Applications in Precision Farming. In Proceedings
    of the 15th ACM Conference on Embedded Network Sensor Systems, Delft, The Netherlands,
    5 November 2017; pp. 54–61. [Google Scholar] Langendoen, K.; Baggio, A.; Visser,
    O. Murphy loves potatoes: Experiences from a pilot sensor network deployment in
    precision agriculture. In Proceedings of the 20th IEEE International Parallel
    & Distributed Processing Symposium, Rhodes, Greece, 25–29 April 2006; Volume 51,
    pp. 8–13. [Google Scholar] [CrossRef] [Green Version] Effah, E.; Thiare, O. Realistic
    Cluster-Based Energy-Efficient and Fault-Tolerant (RCEEFT) Routing Protocol for
    Wireless Sensor Networks (WSNs). In Advances in Information and Communication;
    Springer: Cham, Switzerland, 2020; pp. 320–337. [Google Scholar] Nasser, N.; Karim,
    L.; Ali, A.; Anan, M.; Khelifi, N. Routing in the Internet of Things. In Proceedings
    of the GLOBECOM 2017—2017 IEEE Global Communications Conference, Singapore, 4–8
    December 2017; pp. 1–6. [Google Scholar] Jawad, H.M.; Nordin, R.; Gharghan, S.K.;
    Jawad, A.M.; Ismail, M. Energy-Efficient Wireless Sensor Networks for Precision
    Agriculture: A Review. Sensors 2017, 8, 1781. [Google Scholar] [CrossRef] [Green
    Version] Clausen, T.; Herberg, U.; Philipp, M. A critical evaluation of the IPv6
    Routing Protocol for Low Power and Lossy Networks (RPL). In Proceedings of the
    2011 IEEE 7th International Conference on Wireless and Mobile Computing, Networking
    and Communications (WiMob), Shanghai, China, 10–12 October 2011; pp. 365–372.
    [Google Scholar] Effah, E.; Thiare, O.; Wyglinski, A.M. Multi-Objective Modeling
    of Clustering-Based Agricultural Internet of Things. In Proceedings of the 2020
    IEEE 92nd Vehicular Technology Conference (VTC2020-Fall), Victoria, BC, Canada,
    18 November–16 December 2020. [Google Scholar] [CrossRef] Effah, E.; Thiare, O.;
    Wyglinski, A.M. Energy-Efficient Multihop Routing Framework for Cluster-Based
    Agricultural Internet of Things (CA-IoT). In Proceedings of the 2020 IEEE 92nd
    Vehicular Technology Conference (VTC2020-Fall), Victoria, BC, Canada, 18 November–16
    December 2020. [Google Scholar] [CrossRef] Khan, R.; Ali, I.; Zakarya, M.; Ahmad,
    M.; Imran, M.; Shoaib, M. Technology-Assisted Decision Support System for Efficient
    Water Utilization: A Real-Time Testbed for Irrigation Using Wireless Sensor Networks.
    IEEE Access 2018, 6, 25686–25697. [Google Scholar] [CrossRef] Ahmed, N.; De, D.;
    Hussain, I. Internet of Things (IoT) for Smart Precision Agriculture and Farming
    in Rural Areas. IEEE Internet Things J. 2018, 5, 4890–4899. [Google Scholar] [CrossRef]
    Effah, E.; Dorgloh, W. GSM-Controlled Irrigation System (GSMCIS) for Vegetable
    Farmers in Ghana. Ghana J. Technol. 2016, 1, 21–24. [Google Scholar] Mehmood,
    A.; Mauri, J.L.; Noman, M.; Song, H. Improvement of the Wireless Sensor Network
    Lifetime Using LEACH with Vice-Cluster Head. Ad Hoc Sens. Wirel. Netw. 2015, 28,
    1–17. [Google Scholar] Haenggi, M.; Puccinelli, D. Routing in Ad Hoc Networks:
    A Case for Long Hops. IEEE Commun. Mag. 2005, 43, 93–101. [Google Scholar] Pešović,
    U.M.; Mohorko, J.J.; Benkič, K.; Čučej, Ž.F. Single-hop vs. multi-hop—Energy efficiency
    analysis in wireless sensor networks. In Proceedings of the 18th Telekomunikacioni
    forum TELFOR 2010, Belgrade, Serbia, 23–25 November 2010; pp. 471–474. [Google
    Scholar] Haenggi, M. Twelve Reasons not to Route over Many Short Hops. In Proceedings
    of the IEEE 60th Vehicular Technology Conference, Los Angeles, CA, USA, 26–29
    September 2004; pp. 1–4. [Google Scholar] Effah, E.; Tiare, O. Survey: Faults,
    Fault Detection and Fault Tolerance Techniques in Wireless Sensor Networks. Int.
    J. Comput. Sci. Inf. Secur. 2018, 16, 1–14. [Google Scholar] Ferentinos, K.; Tsiligiridis,
    T. Adaptive design optimization of wireless sensor networks using genetic algorithms.
    Comput. Netw. 2007, 51, 1031–1051. [Google Scholar] World Bank. Access to electricity
    (% of population)—Sub-Saharan Africa. In The World Bank and UN Data on SSA; The
    World Bank: Washington, DC, USA, 2021; pp. 1–3. [Google Scholar] Elleuchi, M.;
    Boujelben, M.; Saleh, M.S.B.; Obeid, A.M.; Abid, M. Tree based routing protocol
    in WSNs: A comparative performance study of the routing protocols DEEC and RPL.
    Future Technol. Publ. 2016, 5, 7–16. [Google Scholar] Al-Fuqaha, A.; Guizani,
    M.; Mohammadi, M.; Aledhari, M.; Ayyash, M. Internet of Things: A Survey on Enabling
    Technologies, Protocols and Applications. IEEE Commun. Surv. Tutor. 2015, 17,
    2347–2376. [Google Scholar] [CrossRef] Loukatos, D.; Manolopoulos, I.; Arvaniti,
    E.-S.; Arvanitis, K.G.; Sigrimis, N.A. Experimental Testbed for Monitoring the
    Energy Requirements of LPWAN Equipped Sensor Nodes. IFAC-PapersOnLine 2018, 51,
    309–313. [Google Scholar] [CrossRef] Akyildiz, I.F.; Su, W.; Sankarasubramaniam,
    Y.; Cayirci, E. A survey on sensor networks. IEEE Commun. Mag. 2002, 40, 102–114.
    [Google Scholar] [CrossRef] [Green Version] Jovanovic, M.D.; Djordjevic, G.L.;
    Nikolic, G.S.; Petrovic, B.D. Multichannel Media Access Control for Wireless Sensor
    Networks: A survey. In Proceedings of the 2011 10th International Conference on
    Telecommunication in Modern Satellite Cable and Broadcasting Services (TELSIKS),
    Nis, Serbia, 5–8 October 2011; pp. 741–744. [Google Scholar] [CrossRef] Xu, L.;
    O’Hare, G.; Collier, R. A Smart and Balanced Energy-Efficient Multihop Clustering
    Algorithm (Smart-BEEM) for MIMO IoT Systems in Future Networks. Sensors 2017,
    17, 1574. [Google Scholar] Fei, Z.; Li, B.; Yang, S.; Xing, C.; Chen, H.; Hanzo,
    L. A Survey of Multi-Objective Optimization in Wireless Sensor Networks: Metrics,
    Algorithms, and Open Problems. IEEE Commun. Surv. Tutor. 2017, 19, 550–586. [Google
    Scholar] McBratney, A.O. Future Directions of Precision Agriculture. Precis. Agric.
    2005, 6, 7–23. [Google Scholar] [CrossRef] Effah, E.; Thiare, O. Estimation of
    Optimal Number of Clusters: A New Approach to Minimizing Intra-Cluster Communication
    Cost in WSNs. Int. J. Innov. Technol. Explor. Eng. 2018, 8, 521–524. [Google Scholar]
    Asim Zeb, A.K.M.; Islam, M.; Zareei, M.; Mamoon, I.A.; Mansoor, N.; Baharun, S.;
    Katayama, Y.; Komaki, S. Clustering Analysis in Wireless Sensor Networks: The
    Ambit of Performance Metrics and Schemes Taxonomy. Int. J. Distrib. Sens. Netw.
    2016, 12, 4979142. [Google Scholar] Younis, O.; Fahmy, S. HEED: A hybrid, energy-efficient,
    distributed clustering approach for ad hoc sensor networks. IEEE Trans. Mob. Comput.
    2004, 3, 660–669. [Google Scholar] Rajaram, M.L.; Kougianos, E.; Mohanty, S.P.;
    Choppali, U. Wireless Sensor Network Simulation Frameworks: A Tutorial Review:
    MATLAB/Simulink bests the rest. IEEE Consum. Electron. Mag. 2016, 5, 63–69. [Google
    Scholar] [CrossRef] Gurpreet, K.; Sukhpreet, K. Enhanced M-Gear Protocol for Lifetime
    Enhancement in Wireless Clustering System. Int. J. Comput. Appl. 2016, 147, 30–34.
    [Google Scholar] Yen, H. Optimization-based channel constrained data aggregation
    routing algorithms in multi-radio wireless sensor networks. Sensors 2009, 9, 4766–4788.
    [Google Scholar] [PubMed] [Green Version] Le, T.T.T.; Moh, S. Link Scheduling
    Algorithm with Interference Prediction for Multiple Mobile WBANs. Sensors 2017,
    17, 2231. [Google Scholar] [CrossRef] [Green Version] Darwish, I.M.; Elqafas,
    S.M. Enhanced Algorithms for Fault Nodes Recovery in Wireless Sensors Network.
    Int. J. Sens. Netw. Data Commun. 2016, 6, 150. [Google Scholar] Manisha, M.; Deepak,
    N. Fault Detection in Wireless Sensor Networks. IPASJ Int. J. Comput. Sci. 2015,
    3, 6–10. [Google Scholar] Banerjee, I.; Chanak, P.; Rahaman, H.; Samanta, T. Effective
    fault detection and routing scheme for wireless sensor networks. Comput. Electr.
    Eng. 2014, 40, 291–306. [Google Scholar] [CrossRef] Sharma, P.; Kaur, I. A Comparative
    Study on Energy Efficient Routing Protocols in Wireless Sensor Networks. Int.
    J. Comput. Sci. Issues 2015, 8, 98–106. [Google Scholar] Faniana, F.; Rafsanjanibc,
    M. Cluster-based routing protocols in wireless sensor networks: A survey based
    on methodology. J. Netw. Comput. Appl. 2019, 142, 111–142. [Google Scholar] Iqbal,
    M.; Naeem, M.; Anpalagan, A.; Ahmed, A.; Azam, M. Wireless Sensor Network Optimization:
    Multi-Objective Paradigm. Sensors 2015, 15, 17572–17620. [Google Scholar] [PubMed]
    Mamalis, B.; Gavalas, D.; Konstantopoulos, C.; Pantziou, G. Clustering in Wireless
    Sensor Networks. In RFID and Sensor Networks; CRC Press: Boca Raton, FL, USA,
    2009; pp. 324–364. [Google Scholar] Kalkha, H.; Satori, H.; Satori, K. Performance
    Evaluation of AODV and LEACH Routing Protocol. Adv. Inf. Technol. Theory Appl.
    2016, 1, 113–118. [Google Scholar] Dwivedi, A.K.; Kushwaha, S.; Vyas, O.P. Performance
    of Routing Protocols for Mobile Adhoc and Wireless Sensor Networks: A Comparative
    Study. Int. J. Recent Trends Eng. 2009, 2, 101–105. [Google Scholar] Fjellin,
    J.E. Medium Access Control (MAC) in WSN. Unpublished Lecture Notes. 12 October
    2018. pp. 1–27. Available online: https://www.uio.no/studier/emner/matnat/ifi/nedlagte-emner/INF5910CPS/h11/undervisningsmateriale/20111101_mac_in_wsn.pdf
    (accessed on 16 July 2023). Ye, W.; Heidemann, J.; Estrin, D. Medium access control
    with coordinated adaptive sleeping for wireless sensor networks. IEEE/ACM Trans.
    Netw. 2004, 12, 493–506. [Google Scholar] [CrossRef] [Green Version] Kabara, J.;
    Calle, M. MAC Protocols Used by Wireless Sensor Networks and a General Method
    of Performance Evaluation. Int. J. Distrib. Sens. Netw. 2012, 8, 834784. [Google
    Scholar] [CrossRef] [Green Version] Buettner, M.; Yee, G.V.; Anderson, E.; Han,
    R. X-MAC: A Short Preamble MAC Protocol for Duty-Cycled Wireless Sensor Networks.
    2006, pp. 307–320. Available online: http://portal.acm.org/citation.cfm?id=1182807.1182838
    (accessed on 16 July 2023). Kuntz, R.; Gallais, A.; Noel, T. Auto-adaptive MAC
    for energy efficient burst transmissions in wireless sensor networks. In Proceedings
    of the 2011 IEEE Wireless Communications and Networking Conference, Cancun, Mexico,
    28–31 March 2011; pp. 233–238. [Google Scholar] Polastre, J.; Hill, J.; Culler,
    D. Versatile low power media access for wireless sensor networks. In Proceedings
    of the Second International Conference on Embedded Networked Sensor Systems (SenSys’04),
    Baltimore, MD, USA, 3–5 November 2004; pp. 95–107. [Google Scholar] Ergen, S.C.;
    Varaiya, P. PEDAMACS: Power efficient and delay aware medium access protocol for
    sensor networks. IEEE Trans. Mob. Comput. 2006, 5, 920–930. [Google Scholar] [CrossRef]
    Tang, L.; Sun, Y.; Gurewitz, O.; Johnson, D.B. PWMAC: An energy-efficient predictive-wakeup
    MAC protocol for wireless sensor networks. In Proceedings of the 2011 IEEE INFOCOM,
    Shanghai, China, 10–15 April 2011; pp. 1305–1313. [Google Scholar] Gautam, G.C.;
    Chand, N. A Novel Cluster Based Time Synchronization Technique for Wireless Sensor
    Networks. Wirel. Sens. Netw. 2017, 9, 145–165. [Google Scholar] [CrossRef] Heinzelman,
    W.B.; Chandrakasan, A.P.; Balakrishnan, H. An application-specific protocol architecture
    for wireless microsensor networks. IEEE Trans. Wirel. Commun. 2002, 1, 660–670.
    [Google Scholar] [CrossRef] [Green Version] Ben-Othman, J.; Mokdad, L.; Yahya,
    B. An energy efficient priority-based QoS MAC protocol for wireless sensor networks.
    In Proceedings of the 2011 IEEE International Conference on Communications (ICC),
    Kyoto, Japan, 5–9 June 2011; pp. 1–6. [Google Scholar] Kumar, A. WiseMAC Protocol
    for Wireless Sensor Network-An Energy-Efficient Protocol. Master’s Thesis, National
    Institute of Technology, Rourkela, India, 2014; pp. 1–63. [Google Scholar] Karki,
    V.S.; Udupi, G.R.; Gadgil, A. Advanced WiseMAC Protocol for Wireless Sensor Network.
    Int. Res. J. Eng. Technol. 2015, 2, 771–778. [Google Scholar] Pak, W. Ultra-low-power
    media access control protocol based on clock drift characteristics in wireless
    sensor networks. Int. J. Distrib. Sens. Netw. 2017, 13, 1550147717722155. [Google
    Scholar] [CrossRef] Tang, L.; Sun, Y.; Gurewitz, O.; Johnson, D.B. EM-MAC: A dynamic
    multichannel energy-efficient MAC protocol for wireless sensor networks. In Proceedings
    of the Twelfth ACM International Symposium on Mobile Ad Hoc Networking and Computing,
    Paris, France, 17–19 May 2011; p. 23. [Google Scholar] Lim, J.B.; Jang, B.; Sichitiu,
    M.L. MCAS-MAC: A Multichannel asynchronous scheduled MAC protocol for Wireless
    Sensor Networks. Comput. Commun. 2014, 56, 98–107. [Google Scholar] Irandegani,
    M.; Bagherizadeh, M. Designing an asynchronous multi-channel media access control
    protocol based on service quality for wireless sensor networks. Int. J. Adv. Comput.
    Res. 2017, 7, 190–199. [Google Scholar] [CrossRef] van Hoesel, L.F.W.; Havinga,
    P.J.M. A Lightweight Medium Access Protocol (LMAC) for Wireless Sensor Networks:
    Reducing Preamble Transmissions and Transceiver State Switches. In Proceedings
    of the 1st International Workshop on Networked Sensing Systems, Tokyo, Japan,
    1–6 January 2004. [Google Scholar] Incel, O.D. Multi-Channel Wireless Sensor Networks:
    Protocols, Design And Evaluation. Ph.D. Dissertation, University of Twente, Enschede,
    The Netherlands, 2009; pp. 1–162. [Google Scholar] Zhang, Z.; Mehmood, A.; Shu,
    L.; Huo, Z.; Zhang, Y.; Mukherjee, M. A Survey on Fault Diagnosis in Wireless
    Sensor Networks. IEEE Access 2018, 6, 11349–11364. [Google Scholar] [CrossRef]
    Parhami, B. Fault-Tolerant Computing; Lecture Notes; Electrical and Computer Engineering
    Department, University of California: Santa Barbara, CA, USA, 2018; pp. 1–2. [Google
    Scholar] Raghunath, K.M.K.; Rengarajan, N. Investigation of Faults, Errors and
    Failures in Wireless Sensor Network: A Systematical Survey. Int. J. Adv. Comput.
    Res. 2013, 3, 2249–7277. [Google Scholar] Jiang, P. A New Method for Node Fault
    Detection in Wireless Sensor Networks. Sensors 2009, 9, 1282–1294. [Google Scholar]
    [CrossRef] [Green Version] Koushanfar, K.; Potkonjak, M.; Sangiovanni-Vincentell,
    A. Fault tolerance techniques for wireless ad hoc sensor networks. Proc. IEEE
    Sens. 2002, 2, 1491–1496. [Google Scholar] Oyiza, O.S. Implementation of New Fault
    Tolerance Solution in Wireless Sensor Networks in A Multi-Channel Context. Master’s
    Thesis, Department of Computer Science, African University of Science and Technology,
    Galadima, Nigeria, 2016; pp. 1–36. [Google Scholar] Bhattacharya, R.; Chhanda,
    R. Wireless sensor networks—A study of fault detection and recovery based on OSI
    layers. Int. J. Conceptions Comput. Inf. Technol. 2013, 1, 7–14. [Google Scholar]
    Yu, M.; Mokhtar, H.; Merabti, M. Self-Managed Fault Management in Wireless Sensor
    Networks. In Proceedings of the Second International Conference on Mobile Ubiquitous
    Computing, Systems, Services and Technologies (UBICOMM’08), Valencia, Spain, 29
    September–4 October 2008; pp. 13–18. [Google Scholar] Panda, M.; Khilar, P.M.
    Distributed Byzantine Fault detection technique in wireless sensor networks based
    on hypothesis testing. Comput. Electr. Eng. 2015, 48, 270–285. [Google Scholar]
    [CrossRef] Paradis, L.; Han, Q. A Survey of Fault Management in Wireless Sensor
    Networks. J. Netw. Syst. Manag. 2007, 15, 171–190. [Google Scholar] [CrossRef]
    Ding, M.; Chen, D.; Xing, K.; Cheng, X. Localized fault-tolerant event boundary
    detection in sensor networks. In Proceedings of the 24th Annual Joint Conference
    of the IEEE Computer and Communications Societies, Miami, FL, USA, 13–17 March
    2005; Volume 2, pp. 902–913. [Google Scholar] Lee, W.L.; Datta, A.; Cardell-Oliver,
    R. Network Management in Wireless Sensor Networks. In Handbook of Mobile Ad Hoc
    and Pervasive Communication; American Scientific Publishers: Valencia, CA, USA,
    2006; pp. 1–201. [Google Scholar] Zhang, Y.; Dragoni, N.; Wang, J. A framework
    and classification for fault detection approaches in Wireless Sensor Networks
    with an energy efficiency perspective. Int. J. Distrib. Sens. Netw. 2015, 2, 678029.
    [Google Scholar] Asim, M.; Mokhtar, H.; Merabti, M. self-managing fault management
    mechanism for wireless sensor network. Int. J. Wirel. Mob. Netw. 2010, 2, 184–197.
    [Google Scholar] [CrossRef] Heena, H.; Kapoor, S. Survey of Fault Detection Algorithm
    in WSN. SSRG Int. J. Comput. Sci. Eng. 2015, 5, 78–81. [Google Scholar] Kaur,
    E.J.; Kaur, E.P. A Survey on Fault Detection and Recovery Techniques in Wireless
    Sensor Networks. Int. J. Eng. Res. Gen. Sci. 2015, 3, 638–642. [Google Scholar]
    Zhang, Z.; Chong, E.K.P.; Pezeshki, A.; Moran, W.; Howard, S.D. Detection performance
    in balanced binary relay trees with node and link failures. IEEE Trans. Signal
    Process. May 2013, 61, 2165–2177. [Google Scholar] [CrossRef] Ho, J.; Tay, W.P.;
    Quek, T.Q.S.; Chong, E.K.P. Robust decentralized detection and social learning
    in tandem networks. IEEE Trans. Signal Process. 2015, 63, 5019–5032. [Google Scholar]
    [CrossRef] [Green Version] Nardelli, P.H.J.; de Lima, C.H.M.; Alves, H.; Cardieri,
    P.; Latva-aho, M. Throughput analysis of cognitive wireless networks with Poisson
    distributed nodes based on location information. Ad Hoc Netw. 2015, 33, 1–18.
    [Google Scholar] [CrossRef] [Green Version] Umebayashi, K.; Lehtomaki, J.J.; Yazawa,
    T.; Suzuki, Y. Efficient Decision fusion for cooperative spectrum sensing based
    on OR-rule. IEEE Trans. Wireless Commun. 2012, 11, 2585–2595. [Google Scholar]
    [CrossRef] Luo, X.; Dong, M.; Huang, Y. On distributed fault-tolerant detection
    in wireless sensor networks. IEEE Trans. Comput. 2006, 55, 58–70. [Google Scholar]
    [CrossRef] Kakamanshadi, G.; Gupta, S.; Singh, S. A survey on fault tolerance
    techniques in Wireless Sensor Networks. In Proceedings of the 2015 International
    Conference on Green Computing and Internet of Things (ICGCIoT), Greater Noida,
    India, 8–10 October 2015; pp. 168–173. [Google Scholar] [CrossRef] Pedro, H.;
    Nardelli, J.; Ramezanipour, I.; Alves, H.; de Lima, H.M.C.; Latva-aho, M. Average
    Error Probability in Wireless Sensor Networks With Imperfect Sensing and Communication
    for Different Decision Rules. arXiv 2016, arXiv:1508.02253v2. [Google Scholar]
    Lau, B.C.; Ma, E.W.; Chow, T.W. Probabilistic fault detector for wireless sensor
    network. Expert Syst. Appl. 2014, 41, 3703–3711. [Google Scholar] [CrossRef] Tang,
    P.; Chow, T.W. Wireless sensor-networks conditions monitoring and fault diagnosis
    using neighborhood hidden conditional random field. IEEE Trans. Ind. Inform. 2016,
    12, 933–940. [Google Scholar] [CrossRef] Dhal, R.; Torres, J.A.; Roy, S. Detecting
    link failures in complex network processes using remote monitoring. Phys. Stat.
    Mech. Appl. 2015, 437, 36–54. [Google Scholar] [CrossRef] [Green Version] Titouna,
    C.; Ari, A.A.A.; Moumen, H. FDRA: Fault Detection and Recovery Algorithm for Wireless
    Sensor Networks. In Proceedings of the Mobile Web and Intelligent Information
    Systems, 15th International Conference, MobiWIS 2018, Barcelona, Spain, 6–8 August
    2018; Springer: Cham, Switzerland, 2018; pp. 72–85. [Google Scholar] Krishnamachari,
    B.; Iyengar, S. Distributed Bayesian algorithms for fault-tolerant event region
    detection in wireless sensor networks. IEEE Trans. Comput. 2004, 53, 1. [Google
    Scholar] [CrossRef] Chen, Q.; Lam, K.-Y.; Fan, P. Comments on “Distributed Bayesian
    algorithms for fault-tolerant event region detection in wireless sensor networks”.
    IEEE Trans. Comput. 2005, 54, 1182–1183. [Google Scholar] [CrossRef] Ould-Ahmed-Vall,
    E.; Ferri, B.H.; Riley, G.F. Distributed Fault-Tolerance for Event Detection Using
    Heterogeneous Wireless Sensor Networks. IEEE Trans. Mob. Comput. 2012, 11, 1994–2007.
    [Google Scholar] [CrossRef] Lee, M.; Choi, Y. Fault detection of wireless sensor
    networks. Comput. Commun. 2008, 31, 3469–3475. [Google Scholar] Akbari, A.; Arash,
    A.D.; Khademzadeh, A.; Beikmahdavi, N. Fault Detection and Recovery in wireless
    Sensor Network Using Clustering. Proc. Int. J. Wirel. Mob. Netw. 2011, 3, 130–137.
    [Google Scholar] Chen, J.; Kher, S.; Somani, A. Distributed Fault Detection of
    Wireless Sensor Networks. In Proceedings of the 2006 Workshop on Dependability
    Issues in Wireless ad Hoc Networks and Sensor Networks, Los Angeles, CA, USA,
    26 September 2006; pp. 1–11. [Google Scholar] Nandi, M.; Dewanji, A.; Roy, B.;
    Sarkar, S. Model Selection Approach for Distributed Fault Detection in Wireless
    Sensor Networks. IEEE Trans. Comput. 2014, 55, 1–12. [Google Scholar] Guclua,
    S.O.; Ozcelebia, T.; Lukkiena, J. Distributed Fault Detection in Smart Spaces
    Based on Trust Management. Procedia Comput. Sci. 2016, 83, 66–73. [Google Scholar]
    Ji, S.; Shen-fang, Y.; Ma, T.; Tan, C. Distributed Fault Detection for Wireless
    Sensor Based on Weighted Average. In Proceedings of the 2010 Second International
    Conference on Networks Security, Wireless Communications and Trusted Computing,
    Wuhan, China, 24–25 April 2010; pp. 57–60. [Google Scholar] DePaola, A.; Gaglio,
    S.; Re, G.; Milazzo, F.; Ortolani, M. Adaptive distributed outlier detection for
    wsns. IEEE Trans. Cybern. 2015, 45, 888–899. [Google Scholar] Li, W.; Bassi, F.;
    Dardari, D.; Kieffer, M.; Pasolini, G. Low-complexity distributed fault detection
    for wireless sensor networks. In Proceedings of the 2015 IEEE International Conference
    on Communications (ICC), London, UK, 8–12 June 2015; pp. 3469–3475. [Google Scholar]
    Taleb, A.A.; Mathew, J.; Kocak, T.; Pradhan, D.K. A Novel Fault Diagnosis Technique
    in Wireless Sensor Networks. Int. J. Adv. Netw. Serv. 2009, 2, 230–240. [Google
    Scholar] Myoupo, J.F.; Nana, B.P.; Tchendji, V.K. Fault-tolerant and energy-efficient
    routing protocols for a virtual three-dimensional wireless sensor network. Comput.
    Electr. Eng. 2018, 72, 949–964. [Google Scholar] Titouna, C.; Gueroui, M.; Aliouat,
    M.; Ari, A.A.A.; Adouane, A. Distributed fault-tolerant algorithm for wireless
    sensor networks. Int. J. Commun. Netw. Inf. Secur. 2017, 9, 241–246. [Google Scholar]
    Furquim, G.; Jalali, R.; Pessin, G.; Pazzi, R.W.; Ueyama, J. How to improve fault
    tolerance in disaster predictions: A case study about flash floods using IoT,
    ML and real data. Sensors 2018, 18, 907. [Google Scholar] Titouna, C.; Aliouat,
    M.; Gueroui, M. FDS: Fault Detection Scheme for Wireless Sensor Networks. Wirel.
    Pers. Commun. 2016, 86, 549–562. [Google Scholar] [CrossRef] Tosic, T.; Thomos,
    N.; Frossard, P. Distributed sensor failure detection in sensor networks. Signal
    Process. 2017, 93, 399–410. [Google Scholar] [CrossRef] [Green Version] Li, W.;
    Bassi, F.; Dardari, D.; Kieffer, M.; Pasolini, G. Defective Sensor Identification
    for WSNs Involving Generic Local Outlier Detection Tests. IEEE Trans. Signal Inf.
    Process. Over Netw. 2016, 2, 29–48. [Google Scholar] [CrossRef] Viswanathan, R.;
    Varshney, P.K. Distributed detection with multiple sensors—Part I: Fundamentals.
    Proc. IEEE 1997, 85, 54–63. [Google Scholar] [CrossRef] Bredin, J.; Demaine, E.;
    Hajiaghayi, M.; Rus, D. Deploying sensor networks with guaranteed capacity and
    fault tolerance. In Proceedings of the MobiHoc’05, Urbana-Champaign, IL, USA,
    25–27 May 2005; pp. 309–319. [Google Scholar] Smaragdakis, G.; Matta, I.; Bestavros,
    A. SEP: A Stable Election Protocol for Clustered Heterogeneous Wireless Sensor
    Networks. OpenBU. 2004. Available online: https://open.bu.edu/handle/2144/1548
    (accessed on 16 July 2023). Zhixiang, D.; Bensheng, Q. Three-layered routing protocol
    for WSN based on LEACH algorithm. In Proceedings of the 2007 IET Conference on
    Wireless, Mobile and Sensor Networks (CCWMSN07), Shanghai, China, 12–14 December
    2007; pp. 72–75. [Google Scholar] [CrossRef] Liu, T.; Li, F. Power-efficient clustering
    routing protocol based on applications in wireless sensor network. In Proceedings
    of the 2009 5th International Conference on Wireless Communications, Networking
    and Mobile Computing, Beijing, China, 24–26 September 2009. [Google Scholar] Kang,
    S.; Nguyen, T. Distance based thresholds for cluster head selection in wireless
    sensor networks. IEEE Commun. Lett. 2012, 16, 1396–1399. [Google Scholar] [CrossRef]
    Rajeev, K.; Rajdeep, K. Evaluating the Performance of DEEC variants. Int. J. Comput.
    Appl. 2014, 97, 9–16. [Google Scholar] Sabet, M.; Naji, H. A decentralized energy-efficient
    hierarchical cluster-based routing algorithm for WSNs. AEU Int. J. Electron. Commun.
    2015, 69, 790–799. [Google Scholar] [CrossRef] Yi, D.; Yang, H. HEER—A delay-aware
    and energy-efficient routing protocol for WSNs. Comput. Netw. 2016, 104, 155–173.
    [Google Scholar] [CrossRef] [Green Version] Cengiz, K.; Dag, T. Energy aware multi-hop
    routing protocol for WSNs. IEEE Access 2018, 6, 2622–2633. [Google Scholar] [CrossRef]
    Sasikumar, P.; Khara, S. K-Means Clustering In Wireless Sensor Networks. In Proceedings
    of the 2012 Fourth International Conference on Computational Intelligence and
    Communication Networks, Mathura, India, 3–5 November 2012; pp. 140–144. [Google
    Scholar] [CrossRef] Hassana, M.E.; Ziedanb, N.I. A Mobile BS and Multi-Hop LEACH-C
    Extension for WSNs. Am. Sci. Res. J. Eng. Technol. Sci. 2017, 36, 198–210. [Google
    Scholar] Farooq, M.O.; Dogar, A.B.; Shah, G.A. MR-LEACH: Multi-hop routing with
    low energy adaptive clustering hierarchy. In Proceedings of the 2010 Fourth International
    Conference on Sensor Technologies and Applications, Venice, Italy, 18–25 July
    2010; pp. 262–268. [Google Scholar] Al-Sodairi, S.; Ounia, K. Reliable and energy-efficient
    multi-hop LEACH-based clustering protocol for WSNs. Sustain. Comput. Inform. Syst.
    2018, 20, 1–13. [Google Scholar] Amiri, A. Extending Network Lifetime of Wireless
    Sensor Networks. Int. J. Comput. Netw. Commun. 2015, 7, 1–17. [Google Scholar]
    [CrossRef] Shanthi, G.; Sundarambal, M. Investigation of Multi Hop Sensor Node
    Data Aggregation in Building Management System. Res. J. Biotech 2017, 324–330.
    [Google Scholar] Akbar, M.; Javaid, N.; Imran, M.; Rao, A.; Younis, M.S.; Niaz,
    I.A. A multi-hop angular routing protocol for wireless sensor networks. Int. J.
    Distrib. Sens. Netw. 2016, 12, 1–7. [Google Scholar] [CrossRef] [Green Version]
    Sert, S.A.; Alchihabi, A.; Yazici, A. A Two-Tier Distributed Fuzzy Logic Based
    Protocol for Efficient Data Aggregation in Multihop WSNs. IEEE Trans. Fuzzy Syst.
    2018, 26, 3615–3629. [Google Scholar] [CrossRef] Sert, S.A.; Yazici, A. Optimizing
    the performance of rule-based fuzzy routing algorithms in WSNs. In Proceedings
    of the 2019 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE), New Orleans,
    LA, USA, 23–26 June 2019; pp. 1–6. [Google Scholar] Mohrehkesh, S.; Weigle, M.
    Optimizing Communication Energy Consumption in Perpetual Wireless Nanosensor Networks.
    In Proceedings of the IEEE Globecom, Atlanta, GA, USA, 9–13 December 2013; pp.
    545–550. [Google Scholar] Basagni, S. Distributed Clustering for Ad Hoc Networks.
    1999, pp. 310–315. Available online: https://ieeexplore.ieee.org/document/778957
    (accessed on 16 July 2023). Devi, G.Y.D. Clustering Algorithms In Wireless Sensor
    Networks—A Survey. Int. J. Electr. Electron. Comput. Syst. 2013, 1, 1–9. [Google
    Scholar] Tandon, R.; Dey, B.; Nandi, S. Weight Based Clustering in Wireless Sensor
    Networks. In Proceedings of the 2013 National Conference on Communications (NCC),
    New Delhi, India, 1–3 February 2013; pp. 1–5. [Google Scholar] Ducrocq, T.; Mitton,
    N.; Hauspie, M. Energy-based Clustering for Wireless Sensor Network Lifetime Optimization.
    In Proceedings of the WCNC—Wireless Communications and Networking Conference,
    Shanghai, China, 7–10 April 2013. [Google Scholar] Wan, R.; Xiong, N.; Loc, N.T.
    An energy-efficient sleep scheduling mechanism with similarity measure for WSNs.
    Hum. Cent. Comput. Inf. Sci. 2018, 8, 1–6. [Google Scholar] [CrossRef] [Green
    Version] Nanda, S.; Panda, G. Automatic clustering algorithm based on multi-objective
    Immunized PSO to classify actions of 3D human models. Eng. Appl. Artif. Intell.
    2013, 26, 1429–1441. [Google Scholar] [CrossRef] Disclaimer/Publisher’s Note:
    The statements, opinions and data contained in all publications are solely those
    of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s).
    MDPI and/or the editor(s) disclaim responsibility for any injury to people or
    property resulting from any ideas, methods, instructions or products referred
    to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Effah, E.; Thiare, O.; Wyglinski, A.M. A Tutorial
    on Agricultural IoT: Fundamental Concepts, Architectures, Routing, and Optimization.
    IoT 2023, 4, 265-318. https://doi.org/10.3390/iot4030014 AMA Style Effah E, Thiare
    O, Wyglinski AM. A Tutorial on Agricultural IoT: Fundamental Concepts, Architectures,
    Routing, and Optimization. IoT. 2023; 4(3):265-318. https://doi.org/10.3390/iot4030014
    Chicago/Turabian Style Effah, Emmanuel, Ousmane Thiare, and Alexander M. Wyglinski.
    2023. \"A Tutorial on Agricultural IoT: Fundamental Concepts, Architectures, Routing,
    and Optimization\" IoT 4, no. 3: 265-318. https://doi.org/10.3390/iot4030014 Article
    Metrics Citations Crossref   2 Scopus   1 Google Scholar   [click to view] Article
    Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan
    7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0 500 1000 1500 2000 2500 For more
    information on the journal statistics, click here. Multiple requests from the
    same IP address are counted as one view.   IoT, EISSN 2624-831X, Published by
    MDPI RSS Content Alert Further Information Article Processing Charges Pay an Invoice
    Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers
    For Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: (Author, Year)
  journal: IoT
  key_findings: The paper presents an in-depth contextualized tutorial on Agricultural
    IoT (Agri-IoT), covering the fundamental concepts, assessment of routing architectures
    and protocols, and performance optimization techniques via a systematic survey
    and synthesis of the related literature.
  limitations: null
  main_objective: To provide a comprehensive and critical evaluation of the current
    state of the art in real-time, end-to-end automated irrigation management systems
    that integrate IoT and machine learning technologies.
  relevance_evaluation: 'Relevant: The explanation directly addresses the requirements
    of self-healing capabilities for the routing protocol in precision irrigation
    management.'
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: null
  technologies_used: reinforcement learning, Bayesian networks, or self-organizing
    maps
  title: 'A Tutorial on Agricultural IoT: Fundamental Concepts, Architectures, Routing,
    and Optimization'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
  year_of_publication: null
- analysis: '>'
  apa_citation: Ciani, L., Catelani, M., Bartolini, A., Guidi, G., & Patrizi, G. (2020).
    Influence of Raised Ambient Temperature on a Sensor Node Using Step-Stress Test.
    IEEE Transactions on Instrumentation and Measurement, 69(12), 9549-9556.
  authors:
  - Ciani L.
  - Catelani M.
  - Bartolini A.
  - Guidi G.
  - Patrizi G.
  citation_count: '9'
  data_sources: Experimental data collected from the temperature step-stress test
  description: The monitoring of environmental condition, together with soil parameter,
    is extremely important in precision farming technologies. One of the best solutions
    to implement environmental monitoring system in agriculture is to use a wireless
    mesh network to cover large area and ensure fault tolerance. A low-cost and low-power
    sensor node for mesh architectures has been developed and tested in this work.
    The node is based on a system on a chip microcontroller and few sensors to acquire
    air temperature, air humidity, soil temperature, soil moisture, and solar radiation.
    Generally, the effects of temperature on the dynamic metrological performance
    and on the reliability of wireless sensor network are not adequately dealt with.
    Moreover, no international standard for the environmental test of wireless sensor
    networks is available. In this article, a temperature step-stress test profile
    was implemented to characterize the behavior of the prototype at different temperature,
    from 20 °C up to 80 °C (step of 5 °C) using a climatic chamber. The aim of the
    test was to characterize which are the effects of the overheating on the current
    consumption, the sensor response, the analog-to-digital converter, and the digital-to-analog
    converter. The experimental test highlights some minor anomalies. However, all
    the unexpected behaviors are not caused by permanent failure mechanisms that lead
    to failure in the whole node. They are simple drifts that disappear when temperature
    returns to the standard environmental conditions.
  doi: 10.1109/TIM.2020.3006600
  explanation: The study primarily focuses on the thermal characterization and resilience
    of wireless sensor nodes in agriculture monitoring systems. Using a temperature
    step-stress test, the researchers assess the effects of elevated temperatures
    on various components of the sensor nodes, including current consumption, sensor
    behavior (ADC and DAC), and potential faults.
  extract_1: The experimental results show that the overheating of the sensor node
    with respect to the air temperature is not relevant from a reliability point of
    view.
  extract_2: This overheating does not influence the reliability performances.
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Transactions on Instrume...
    >Volume: 69 Issue: 12 Influence of Raised Ambient Temperature on a Sensor Node
    Using Step-Stress Test Publisher: IEEE Cite This PDF Lorenzo Ciani; Marcantonio
    Catelani; Alessandro Bartolini; Giulia Guidi; Gabriele Patrizi All Authors 9 Cites
    in Papers 390 Full Text Views Abstract Document Sections I. Introduction II. Prototype
    Under Test III. Measurement Setup and Methods for Thermal Characterization IV.
    Experimental Results V. Conclusion Authors Figures References Citations Keywords
    Metrics Abstract: The monitoring of environmental condition, together with soil
    parameter, is extremely important in precision farming technologies. One of the
    best solutions to implement environmental monitoring system in agriculture is
    to use a wireless mesh network to cover large area and ensure fault tolerance.
    A low-cost and low-power sensor node for mesh architectures has been developed
    and tested in this work. The node is based on a system on a chip microcontroller
    and few sensors to acquire air temperature, air humidity, soil temperature, soil
    moisture, and solar radiation. Generally, the effects of temperature on the dynamic
    metrological performance and on the reliability of wireless sensor network are
    not adequately dealt with. Moreover, no international standard for the environmental
    test of wireless sensor networks is available. In this article, a temperature
    step-stress test profile was implemented to characterize the behavior of the prototype
    at different temperature, from 20 °C up to 80 °C (step of 5 °C) using a climatic
    chamber. The aim of the test was to characterize which are the effects of the
    overheating on the current consumption, the sensor response, the analog-to-digital
    converter, and the digital-to-analog converter. The experimental test highlights
    some minor anomalies. However, all the unexpected behaviors are not caused by
    permanent failure mechanisms that lead to failure in the whole node. They are
    simple drifts that disappear when temperature returns to the standard environmental
    conditions. Published in: IEEE Transactions on Instrumentation and Measurement
    ( Volume: 69, Issue: 12, December 2020) Page(s): 9549 - 9556 Date of Publication:
    02 July 2020 ISSN Information: DOI: 10.1109/TIM.2020.3006600 Publisher: IEEE SECTION
    I. Introduction In the last years, the attention on the concept of agricultural
    4 is significantly increased due to the development of high performance and low-power
    monitoring systems [1]. In particular, the use of monitoring and automatic systems
    allowed the rapid expansion of smart farm [2]–[6]. The main factors that hinder
    this development are the environmental harsh conditions, the large area of the
    farm, the energy consumption, and the system cost. The introduction of new technologies
    and high-quality components designed to endure harsh environment conditions (e.g.,
    in the presence of significant temperature excursions, humidity, vibrations, and
    mechanical shocks) allow to extend the possibility to create new self-made automated
    systems tailored to various experimental conditions [7]. Wireless sensor networks
    (WSNs) for agricultural application represent a useful solution to monitor environmental
    conditions and soil parameters on large areas because they enable real-time decision
    making with regard to critical issues [8]–[11]. There are many articles in recent
    literature that analyses the different aspects of the network design in agriculture.
    Another widely discussed topic is the optimization of power consumption in wireless
    sensor nodes (see, for instance, but not only [12]–[14]). One of the most easy
    and practical solutions is to alternate the operation mode of the nodes between
    the active and sleep periods to save energy [15]. Nevertheless, an extension of
    the active phase due to high number of nodes or connectivity problems could lead
    to an overheating of the hardware which is generally not adequately dealt with
    when this kind of design implementations is presented. There are many articles
    that debate the design of new sensor networks and sensor nodes, as well as lots
    of works focus on the characterization of several types of components under different
    stresses. For instance, many articles analyze the effects of temperature on different
    kind of components, such as air temperature sensors [16], medium-voltage cable
    joints [17], semiconductor components [18], mechanical components [19], LEDs [20],
    [21], and capacitors [22]. Quite the opposite, very few works deal with the characterization
    of the complete designed system under stress conditions. Generally, the effects
    of temperature and other stresses on the dynamic metrological performance and
    on the reliability of WSN are not adequately dealt with. Some works such as [23]–[25]
    analyze the effects of raising temperature on WSN focusing mainly on communications
    problems, while its effects on the sensor node hardware are rarely considered.
    Moreover, no international standard for the environmental test of WSNs is available
    and customized standards for the testing of electronic devices are not implemented
    in agricultural applications. For these reasons, starting from the preliminary
    experimental results shown in [26], this article focuses on agriculture monitoring
    system proposing a temperature step-stress test to characterize the behavior of
    the complete monitoring device under thermal effects. The main novelty of the
    article is to propose a test procedure for environmental monitoring system based
    on temperature stress that could be easily extended to any kind of WSN applied
    in different applications. The proposed test procedure will offer a more robust
    and reliable design of a WSN. In particular, a low-power and low-cost wireless
    sensor network is designed and tested using a climatic chamber to analyze the
    system in environmental harsh condition. The article is organized as follows.
    Section II presents the development of the device under test (DUT). Section III
    describes the measurement setup and the temperature profile implemented. Section
    IV illustrates and discusses the measurement results. SECTION II. Prototype Under
    Test The developed wireless sensor network is a mesh topology network characterized
    by a root node and some sensor nodes used for data collection. The Wi-Fi protocol
    and a multiple hop (multihop) transmission allow to cover large area and share
    the data to an online server using only one sink node (also called root node henceforth).
    Therefore, each node in wireless mesh network (WMN) transmits its own packets
    and simultaneously serves as relay for other nodes through the dynamic routing
    tables as shown in Fig. 1. Fig. 1. Deployment of the nodes in the analyzed wireless
    mesh sensor network used for environmental monitoring in agriculture field. Show
    All In order to have a complete autonomous system, each node of the network is
    composed by a solar panel, lithium batteries, electronic boards, and sensors as
    shown in Fig. 2. Fig. 2. Analyzed system used as the sensor node in the proposed
    network. The node is composed by a solar panel, two lithium batteries, a 2.4-GHz
    antenna, some sensors, and two electronic boards. All the components except the
    solar panel are closed inside a waterproof customized case. Show All The main
    part of the electronic boards is the ESP32 dual-core microcontroller manufactured
    by “Espressif Systems” mounted on the “DevKitC v4” evaluation board used for software
    programming by means of USB-to-UART bridge controllers, pin interface, and power
    supply by means of an AMS1117 low-dropout regulator (LDO). The ESP32 is designed
    to support Wi-Fi and dual-mode Bluetooth (v4.2 BR/EDR and BLE). In particular,
    the IEEE 802.11/n Wi-Fi protocol is implemented. The microcontroller is equipped
    with two eight-channel 12-bit SAR ADC and two 8-bit DACs. The evaluation board
    is in turn mounted on a customized interface board used to connect the batteries,
    the power boards, and the sensors. The prototype is equipped with an air temperature
    and humidity sensor, a soil temperature sensor, a soil moisture sensor, and a
    global solar radiation sensor as shown in Fig. 3. The board is developed to function
    in two different operation phases. A “sleep phase” in which sensors, processing
    units, and Wi-Fi protocol are deactivated to save energy. An “active phase” or
    “operative phase” where the nodes are working acquiring data from sensors, elaborating
    them, and transmitting the information by means of the Wi-Fi protocol to the sink
    node. Fig. 3. Representation of the implemented sensor nodes: the white board
    is the prototype developed to connect the commercial ESP32 and the sensors. Show
    All This behavior allows to minimize the duty cycle, overheating, and power consumption,
    and it is justified by the fact that the meteorological data slowly change during
    the day. Particularly, the developed system is based on a sleep phase of 10 min
    and an active phase demanded by the root node of 1 min. SECTION III. Measurement
    Setup and Methods for Thermal Characterization Temperature and most generally
    all the environmental conditions affect the performances of the electronic devices
    causing fatigue and fracture. Both functional and reliability performance are
    deeply influenced by this kind of stresses, and for this reason, it is mandatory
    to test and characterize this kind of components under thermal effects [27]–[30].
    This article proposes a temperature step-stress test for the environmental characterization
    of a sensor node used in smart agriculture monitoring system. A preliminary functional
    failure analysis is required to understand every possible failure mechanism that
    could lead to faults and malfunctions of the system. According to the international
    standard JEDEC JEP122F [31], the typical and most common failure mechanisms of
    electronic devices are open/short circuit, dielectric charging, electrostatic
    discharge, intrinsic breakdown, diffusion, corrosion, and silicon fracture. A
    temperature test is proposed to investigate the behavior of the DUT at different
    temperature inside the range of guaranteed operability (up to 85 °C for the Espressif
    ESP32 DevKitC board). The following international standards were used to define
    the test profile. IEST-RP-PR-003.1 (2012) [32] defines and describes the accelerated
    life testing, including the temperature step-stress test. ISO 16750–4 (2010) [33]
    illustrates the environmental test conditions for electrical and electronic equipment.
    IEC 60068-2-14 (2011) [34] provides general procedures for temperature testing.
    MIL-STD 810G (2008) [35] contains engineering direction for considering the influences
    that environmental stresses have on material throughout all phases of its service
    life. JEDEC JESD22 A104E (2014) [36] provides guidelines for temperature testing
    of semiconductor devices. The profile resembles the ones proposed in the previous
    standards and is tailored on the practical application scenario. During the pretest
    adjustment, it is very important to place the sample in such a position with respect
    to the air stream such that there is substantially no obstruction to the flow
    of air across and around each sample. The test starts at room temperature (approximately
    20 °C) that is maintained constant for 10 min in order to ensure at least one
    active phase of the system. Then the temperature is raised by 5 °C at low rate
    to allow components’ temperature to increase together with the chamber temperature.
    The complete raise time including settling time is 10 min. The following step
    is 20 min of exposition time at the reached temperature to ensure two active phases
    of the node after temperature stability. The test continues repeating the two
    previous phases until the exposition time at 80 °C. After that, the temperature
    is lowered to 20 °C at low rate to ensure gradual cooling of the components (between
    0.5 and 1 °/min). The step test described in the previous procedure is illustrated
    in Fig. 4. Fig. 4. Proposed temperature step-stress test profile for thermal characterization
    of the sensor node in a climatic chamber. Show All The aim of the test is to characterize
    the behavior of three boards under temperature effects. In particular, the test
    focuses on the current consumption of two sensor nodes, one supplied using the
    LDO provided by the manufacturer of the evaluation board (identified using the
    term “Former LDO” henceforth) and the other one supplied using an “AP2114H LDO”
    (identified using the term “New LDO” henceforth). Moreover, the behavior of the
    various sensors is investigated and compared during the test. These two boards
    are equipped with the same firmware, and they work in the classical operational
    conditions of a sensor node described in Section II (active and sleep phases).
    The third board is used for the characterization of the ADC and DAC thermal drifts.
    This DUT works only in the active phase, and it sends data directly to the PC
    without interacting with the network composed by the other nodes under test. The
    complete test bed implemented for the thermal characterization of the sensor node
    is illustrated in Fig. 5. The following equipments are used. A laptop connected
    to the root node in order to acquire the data coming from the network. The PC
    is also used as the interface for the multimeters. A root node that manages the
    functionality of the network and stores data measured by the tested nodes. A temperature
    chamber characterized by a temperature range between 20 °C and 300 °C. A datalogger
    “8430-20 memory HiLogger” by “Hioky” equipped with ten k-type thermocouples used
    to monitor the temperature of the devices inside the chamber. A dc power supply
    generator used to supply the electronic boards instead of the batteries. An RTB2002
    two-channel digital oscilloscope by “Rohde&Schwarz” used for the DAC test. Three
    3440 digital multimeters by “PeakTech” used to measure the current consumption
    of the nodes. A 500-mA dc current source used to emulate the behavior of the solar
    radiation sensor. An arbitrary waveform generator used to provide the input signal
    for the ADC test. Fig. 5. Implemented test bed for thermal characterization of
    the prototype. Each red square indicates an equipment used in the test. Show All
    SECTION IV. Experimental Results This section reports the experimental results
    achieved during the temperature step-stress test profile. A. Temperature Measurements
    The test was carried out using ten thermocouples to monitor the temperature in
    different locations inside the chamber. Particularly, one channel was placed together
    with the PT100 thermistor used as control signal for chamber setting, while another
    one was located in the opposite side of the chamber. Six channels are used to
    monitor the microcontrollers, the LDOs, and the electronic boards of the two sensor
    nodes. The last two thermocouples are placed together with the air temperature
    sensors and the soil temperature sensors of the DUTs. The complete temperature
    acquisition is illustrated in Fig. 6. The figure shows that all the signals follow
    the profile described in the previous section, except for the soil temperature
    that gradually increases because of the thermal inertia of the soil. Interestingly,
    many temperature spikes were observed in some of the acquired channels, as shown
    in detail in Fig. 7. Each spike represents the active phase of the nodes due to
    the increase in current dissipation to acquire and send data. Fig. 6. Temperature
    monitoring during test acquired using a ten-channel datalogger equipped with a
    k-type thermocouple. Show All Fig. 7. Details of the ten-channel datalogger highlighting
    the increase in the temperature of microprocessors (yellow and purple) and LDOs
    (green and light blue) during the active phase. Show All Fig. 7 highlights a detail
    of the monitored temperature in approximately 1 h between 40 °C and 45 °C. The
    temperature increase during the active phases is marked only on the six channels
    used to observe the behavior of the two DUTs. There are three different overheating
    trends. The highest spikes are caused by the LDOs that increase their temperature
    of approximately 5 °C with respect to the chamber temperature. The lowest spikes
    (overheating of 2 °C) are related to the temperature of the two boards, while
    the microprocessor temperatures increase by 3 °C. The most striking result to
    emerge from the data is that these increases are repeated at each active phase,
    regardless of the temperature of the chamber. The overheating of the sensor node
    is not relevant from a reliability point of view because of the limited transmission
    phase. B. Current Consumption The results illustrated in this subsection are referred
    to the two DUTs used in the classical operational conditions of a sensor node.
    During the step-stress test, the current consumption of the two boards was measured
    using two different multimeters. The aim of the test was to investigate whether
    the New LDO provides significant upgrades with respect to the one provided by
    the manufacturer of the evaluation board (Former LDO). Fig. 8 presents an overview
    of the conducted test, showing the current consumption (blue and green signals)
    on the left y -axis and the temperature used to control the chamber (red line)
    on the right y -axis. The current of the two DUTs follows a cyclic trend alternating
    a very low consumption during the sleep phase and a current spike during the active
    phase. No significant difference between the two currents was evident. Fig. 8.
    Comparison between the current consumption of the two boards (blue and green lines)
    on the left y -axis, while the right y -axis shows the temperature variation during
    the test (red line). Show All Instead, what can be clearly seen in Fig. 9 is that
    the New LDO provides a general improvement of the consumption. Fig. 9. Details
    of the current consumption acquired at 55 °C highlighting the sleep and active
    phases of the sensor node equipped with the Former LDO (blue line) and the other
    one equipped with the New LDO (red line). Show All What stands out in the zoomed-in
    of two generic active phases is that the update of the LDO allows to reduce the
    current dissipation both in the sleep and active phases. Fig. 9 also highlights
    that the active phase could be in turn divided into two subphases: in the first
    one, the Wi-Fi is OFF and the sensors acquire data, while in the second one, the
    Wi-Fi is turned on to ensure the data transmission, with a consequent current
    increase. The Wi-Fi is kept OFF during the initial stage of the active phase to
    minimize the consumption and save batteries’ life. There is also a current spike
    during the “Wi-Fi ON” subphase up to 300 mA that is linked to a particular phase
    of the Wi-Fi transmission. The comparison of the two current consumptions provided
    in Table I reveals that the improvement achieved with the New LDO is even more
    significant during the active phase with respect to the sleep phase. Taking the
    temperature stability of 30 °C as an example, Table I reports the average current
    value during the three identified zones. TABLE I Comparison Between the Average
    Current Consumption of the DUTs in the Different Zones of Work at 30° C The single
    most striking observation to emerge from the data analysis is the presence of
    a current step-up during the sleep phase of the two sensor nodes, as shown in
    Fig. 10. When the chamber reached 58 °C, the current of the board equipped with
    the New LDO (green line) suddenly increased to approximately 4.5 mA. The same
    behavior was also observed in the other board (blue line) at approximately 63
    °C with the identical variation. Fig. 10. Details of the current consumption in
    the middle part of the test showing the observed current step. The current dissipated
    by the board equipped with the Former LDO (blue line) and by the one equipped
    with the New LDO (green line) is plotted on the left y -axis, while the temperature
    (red line) is plotted on the right y -axis. Show All During the cooling phase,
    the current returned to the original value in the same way (first the Former LDO
    and then the New LDO). The step-down happens at a temperature of the chamber slightly
    lower than the step-up due to thermal inertia of the components. Turning now to
    the experimental evidence on the active phase, the average current consumption
    of the two tested boards is illustrated in the left y -axis of Fig. 11 (blue dots
    and blue stars denote the Former LDO and New LDO, respectively). Fig. 11. Average
    current consumption during the active phase: comparison between the mean current
    of the two tested boards (blue dots and blue stars) on the left y -axis and temperature
    trend (red line) on the right y -axis. Show All Each value in Fig. 11 refers to
    the mean value of the current during the respective active phase. As already observed
    in Table I, Fig. 11 highlights the general improvement achieved by the New LDO.
    As observed for the sleep phase, the current step is also present during the active
    phase in both electronic boards. The amplitude of the current variations and the
    temperature at which they happen are the same for the active and sleep phases.
    Additional test with different setup was performed to identify the cause of this
    anomaly. The current step was observed regardless of: the alternation of the active
    and sleep phases (see Figs. 10 and 11); the presence or not of the LDO (tested
    connecting the power supply directly to the ESP32 chip); and the presence or not
    of the interface board used to manage the analog sensors. In summary, this test
    highlights a dependence between temperature and current consumption. More in detail,
    when temperature overcomes a certain threshold value (air temperature of approximately
    60 °C), the current suddenly increases by 4.5 mA. This unexpected behavior could
    be dangerous since it is a remarkable increase that could lead to a fast discharge
    of the batteries. The cause of this current step is due to the increase in the
    reverse current of the Schottky diode (BAT760-7) with temperature. The purpose
    of this diode is to protect the programming device connected through USB when
    the board is supplied by both USB connection and external supplier. The increase
    of the reverse current in the considered temperature range is higher enough to
    enable the USB-to-UART interface controller leading to a 4.5-mA increase of current
    consumption. However, this overconsumption does not cause any hardware or software
    permanent damage. The implemented stress profile activated no failure mechanisms
    in the DUTs, and the boards continue to provide reliable and accurate information
    during all the tests and during the posttest inspections. Even though the introduction
    of the New LDO does not solve the current step anomaly, it provides a significant
    improvement in terms of energy saving. C. Thermal Characterization of the ADC
    This section is referred to the analysis of the ADC thermal behavior using the
    third DUT. The electronic board was not part of the mesh network, but it was directly
    connected to the PC using serial communication. Two channels of the ADC were tested
    as follows. The first channel was connected directly to a constant reference voltage
    provided by the arbitrary waveform generator. The second channel was used to emulate
    the data acquisition from the solar radiation sensor which provides a current
    as output. The current generator serves as input of the transimpedance amplifier
    connected to the ADC. Both channels show a similar behavior under temperature
    stress, providing lower output data when temperature increases. Taking, for example,
    channel 1 connected to the voltage reference, Fig. 12 highlights the thermal dependence
    showing the acquisition at three different temperatures: 25 °C (blue dots), 50
    °C (red dots), and 80 °C (green dots). Comparing all the data in this figure,
    it is possible to see that, the higher is the temperature, the lower is the average
    of the RAW data and the higher is the standard deviation of the ADC output. Fig.
    12. Multiple ADC acquisition at three different temperatures: 25 °C (blue dots),
    50 °C (red dots), and 80 °C (green dots). Show All This temperature drift is even
    more evident in Fig. 13, where the average of the multiple acquisition at each
    temperature (left y -axis—blue dots) is compared with the temperature stress (right
    y -axis—red line). Fig. 13 also shows a symmetric trend: when the temperature
    inside the chamber decreases, the ADC acquisition tends to return to its original
    value. Fig. 13. Mean value of the 256 multiple ADC acquisitions at each temperature
    on the left y -axis (blue dots) and temperature variation during the test on the
    right y -axis (red line). Show All Using the transimpedance amplifier up to 65
    °C, the same results were obtained for the second tested channel. For temperature
    higher than this value, the acquisition chain stops working and produces a zero-voltage
    output. Since there are no other differences between the two channels, this malfunction
    must be caused by the transimpedance amplifier. During the cooling phase, when
    temperature is decreased under 65 °C, the ADC starts providing an output again,
    with the same trend observed in the first channel. This result is not worrying
    since it happens at high temperatures, which are very hard to reach in agriculture
    applications. In summary, this test highlights a deep thermal dependence of both
    the average acquisition value and the standard deviation of the ADC output. A
    multisampling solution mitigates the increase in the standard deviation, but it
    cannot solve the problem of the drift in the average value. It also highlights
    that the integrated circuit used as transimpedance amplifier does not work at
    temperature higher than 65 °C, even if no failure mechanisms have been activated.
    In fact, when temperature returns lower than 65 °C, the amplifier provides the
    same output of that before the test. D. Frequency Behavior of the DAC This section
    is referred to the analysis of the DAC thermal behavior using the third DUT. The
    DAC of the board is used to supply the soil moisture sensor for a very short time
    in order to acquire the measurement. Both the ESP32 DACs were tested, each one
    generating the same two signals in sequence: a 50-Hz positive square wave using
    the maximum dynamic of the DAC. a single positive rectangular pulse to emulate
    a Dirac delta function of maximum allowable amplitude and allowable duration according
    to ESP32 performances. Fig. 14 shows the fast Fourier transform (FFT) of the square
    wave acquired using the oscilloscope at 2 MSa/s at different temperature. Each
    signal was acquired after temperature stability in the chamber. The figure was
    cropped up to 10 kHz to highlight the first significant harmonics deleting the
    high-frequency noise. Fig. 14. Single-sided FFT of the square wave generated by
    the internal DAC at different temperature. The magnitude of all the spectra is
    normalized with respect to the first peak (fundamental frequency). Show All Fig.
    14 evidence that there is no temperature dependence of the DAC output in the considered
    range. The FFT resumes that in the first ten terms, the maximum variation of the
    magnitude with respect to the temperature is 0.05 dB, proving a very high stability.
    Turning now to the rectangular pulse, Fig. 15 illustrates the two-side FFT of
    the signal acquired at 1.25 GSa/s. As seen before, the figure was cropped between
    −1 and 1 MHz to eliminate the nonsignificant contributions. Fig. 15. Two-sided
    FFT of the pulse generated by the internal DAC at different temperature. The magnitude
    of all the spectra is normalized with respect to the highest peak (frequency is
    equal to 0 Hz). Show All The main lobe of the FFT does not evidence any variations
    in magnitude and duration at any temperature, while the sidelobe presents some
    minimal alterations in magnitude and frequency. More in detail, the maximum variation
    in the second lobe is approximately 1.5 dB, while in the next lobe, it is approximately
    2.5 dB. Despite these slight oscillations at high frequency, this anomaly is not
    so relevant because the magnitude of the sidelobe is much lower than the main
    lobe. SECTION V. Conclusion Precision farming technologies has rapidly increased
    in the last few years, leading to a significant expansion in the development of
    new meteorological stations. In this scenario, WMN represents a fundamental role
    to ensure fault tolerance and large transmission coverage. This work describes
    the characterization of a low-cost and low-power sensor node for environmental
    monitoring network used in agriculture application. This article proposes a customized
    temperature step-stress test based on several international standards for electronic
    devices. The profile was tailored on the practical application. The implemented
    setup has been used to investigate the effects of raising ambient temperature
    on the transmission phase, the current consumption, and the ADC and DAC outcomes.
    The experimental results show that the overheating of the sensor node with respect
    to the air temperature is not relevant from a reliability point of view. In fact,
    during the active phase, the temperature of the LDO and microcontroller slightly
    increases only for a couple of minutes and then returns approximately equal to
    air temperature. This overheating does not influence the reliability performances.
    Moving now to the current analysis, the test highlights a temperature dependence
    of the current consumption that leads to a current step of approximately 4.5 mA
    at 60 °C. This anomaly causes a higher consumption with respect to the standard
    conditions. The introduction of a New LDO to supply the microprocessor does not
    eliminate the step, but it leads to a consistent decrease in the current dissipation.
    Despite the observed step, no failure mechanisms have been activated by the temperature
    stress, and the boards continue to provide accurate and reliable data. The ADC
    thermal analysis evidence some unexpected behaviors. In particular, a relevant
    ADC drift over temperature was observed along with an increase in the standard
    deviation of the acquisitions. Moreover, the integrated circuit used as transimpedance
    amplifier stopped working at temperature higher than 65 °C. Both these anomalies
    are interesting results but are not caused by significant failures. In fact, decreasing
    the temperature after reaching 80 °C, the anomalies gradually mitigate, and the
    ADC provides a symmetric output compared to the rising phase. Quite the opposite,
    analyzing the FFT of the 50-Hz square wave, the behavior of the DAC over temperature
    has proved to be very stable in the frequency range interested in the application
    field. Some minor oscillations, when temperature increases, were observed only
    at high frequency in the FFT of the rectangular pulse. Authors Figures References
    Citations Keywords Metrics More Like This Outlier Detection and Decision Tree
    for Wireless Sensor Network Fault Diagnosis 2021 13th International Conference
    on Information & Communication Technology and System (ICTS) Published: 2021 Model-Based
    Techniques for Data Reliability in Wireless Sensor Networks IEEE Transactions
    on Mobile Computing Published: 2009 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: (Ciani et al., 2020)
  journal: IEEE Transactions on Instrumentation and Measurement
  key_findings: 1) The overheating of the sensor node during the active phase is not
    significant and does not affect reliability. 2) A temperature dependence of the
    current consumption leads to a current step at 60°C, causing higher consumption.
    3) The ADC exhibits drift and increased standard deviation with increasing temperature.
    4) The DAC shows stable behavior in the frequency range of interest, with minor
    oscillations at high frequencies.
  limitations: The study does not evaluate the long-term reliability of the sensor
    nodes under prolonged exposure to high temperatures or other environmental stresses.
  main_objective: To characterize the thermal behavior and identify potential weaknesses
    of wireless sensor nodes used in agriculture monitoring systems.
  relevance_evaluation: 'The paper is highly relevant to the outline point on "Self-healing
    capabilities: Incorporating AI-driven self-healing mechanisms that can detect,
    diagnose, and recover from faults without human intervention." While the study
    does not directly address AI-driven self-healing, it provides valuable insights
    into the thermal behavior and potential weaknesses of the sensor nodes, which
    is essential knowledge for developing resilient and reliable automated irrigation
    systems.'
  relevance_score: 0.9
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Temperature step-stress test, current measurement, ADC and DAC
    analysis
  title: Influence of Raised Ambient Temperature on a Sensor Node Using Step-Stress
    Test
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.18196/jrc.2148
  _id: '1'
  analysis: '>'
  apa_citation: Hassan, A., Abdullah, H. M., Farooq, U., Shahzad, A., Asif, R. M.,
    Haider, F., & Rehman, A. U. (2021). A Wirelessly Controlled Robot-based Smart
    Irrigation System by Exploiting Arduino. Journal of Robotics and Control, 2(1),
    29-34.
  authors:
  - Ahmed Hassan
  - Hafiz Muhammad Abdullah
  - Umar Farooq
  - Adil Shahzad
  - Rameez Asif
  - Faisal Haider
  - Ateeq Ur Rehman
  citation_count: 13
  data_sources: Sensor readings from soil moisture, pH, nutrient, and humidity sensors,
    Crop health images from high-pixel camera
  explanation: The study focused on developing a smart irrigation system using a wirelessly
    controlled, photo-voltaic powered robot to automate irrigation processes in agricultural
    fields. The system used various sensors to monitor soil conditions, including
    moisture levels, pH levels, and the presence of nutrients. The robot was equipped
    with a high-pixel camera and an array of sensors to monitor crop health and soil
    conditions, respectively. When sensor readings exceeded predefined threshold values,
    the system notified farmers via mobile app and GSM cellular network. Additionally,
    the system incorporated self-healing capabilities to detect and recover from faults
    without human intervention.
  extract_1: '"The proposed project can be controlled using threshold values of parameters
    set along with commands through the webpage. The proposed system turns “on” and
    “off’’’ depending upon the set values and can be controlled by the user.'
  extract_2: ''
  full_citation: '>'
  full_text: ">\nJournal of Robotics and Control (JRC) \nVolume 2, Issue 1, January\
    \ 2021 \nISSN: 2715-5072 DOI: 10.18196/jrc.2148 \n29 \n \n \nJournal Web site:\
    \ http://journal.umy.ac.id/index.php/jrc \nJournal Email: jrc@umy.ac.id \n \n\
    \ \nA Wirelessly Controlled Robot-based Smart \nIrrigation System by Exploiting\
    \ Arduino \n \n \nAhmed Hassan1, Hafiz Muhammad Abdullah2, Umar Farooq3, Adil\
    \ Shahzad 4, Rao Muhammad Asif5, Faisal \nHaider6, Ateeq Ur Rehman7 \n1, 2, 3,\
    \ 4,5,6 Department of Electrical Engineering, The Superior College, Lahore, Pakistan\
    \ \n7College of Internet of Things Engineering, Hohai University, Changzhou 213022,\
    \ China \n7Department of Electrical Engineering, Government College University,\
    \ Lahore 54000, Pakistan  \n \nEmail: 1ahmedhassan101997@gmail.com, 2abdullahsahu221@gmail.com,\
    \ 3superior.umar8671@gmail.com, \n4basraadil43@gmail.com, 5rao.m.asif@superior.edu.pk,\
    \ 6faisal.haider@superior.edu.pk, 7ateqrehman@gmail.com \n  \nAbstract— Bringing\
    \ automation in the farming system is the \nneed of the modern era. The shortcomings\
    \ of the manual \nagriculture system can be rectified by exploiting the automatic\
    \ \nprocess which results in higher production of crops. An \nautomated remotely\
    \ controlled system is proposed that can \nfulfill the water usage for agricultural\
    \ land. The proposed smart \nirrigation system is developed that will irrigate\
    \ the field around \nacres at a time. A remotely controlled robot has been developed\
    \ \nthat will be powered by photo-voltaic panels. The robot has been \nwirelessly\
    \ controlled through an application. Different sensors \nand a high pixel camera\
    \ are attached with a robot to check the \ncondition of crops and sense the condition\
    \ of the soil. The field \nwill be divided into different sectors. For commercial\
    \ purposes, \nthe robot will be gone through all sectors and sense the condition\
    \ \nof the soil that will further send the data through the GSM \nmodule to the\
    \ phone. Furthermore, the developed application \ncommunicates the collected information\
    \ to the PC/Laptop. \nKeywords— Smart Irrigation, Real-Time Automation, Solar,\
    \ \nPhotovoltaic (PV), Crops, Soil. \nI. INTRODUCTION  \nAs we already know about\
    \ the importance of agriculture in \nour daily lives. Living within this most\
    \ advanced era, the \nbiological system of people only depends upon the \nagriculture\
    \ of their country. By keeping a good biological \nsystem, a good human personality\
    \ could be developed. \nPeople get food, vegetables, etc., through their agricultural\
    \ \nland. To keep our agricultural land perfect, we need an \nirrigation system.\
    \ Irrigation is the process of watering our \nagricultural field. Irrigation is\
    \ done through a manual process \nor automation process. In the manual process,\
    \ the farmers do \nirrigation by themselves. This method has a very low initial\
    \ \ncost. However, in the automation process, the irrigation is \ndone through\
    \ remote-controlled devices. This process is most \nefficient and simplest than\
    \ manual irrigation process but its \ninitial cost is quite high as compared to\
    \ the manual process \nand it is also a time-saving process. In the past, many\
    \ artificial \ntechniques have been discovered to make the irrigation \nprocess\
    \ easier [1]. Some of them were very efficient but they \nalso had a few major\
    \ drawbacks such as non-portable devices \nand can only irrigate a single area\
    \ of the field at a time.  \nThe soil is the most important medium for plant growth.\
    \ \nHowever, various parameters including soil moisture, PH of \nsoil, temperature,\
    \ and humidity varies from region to region. \nTesting of the soil for nutrients\
    \ gives valuable information \nabout the soil which can be used to optimize plant\
    \ growth. \nThe proposed project can be controlled using threshold values \nof\
    \ parameters set along with commands through the webpage. \nThe proposed system\
    \ turns “on” and “off”’ depending upon \nthe set values and can be controlled\
    \ by the user. The main \nbenefit of the proposed system is its portability and\
    \ low \nmaintenance cost because it is powered by the photovoltaic \n(PV) panels.\
    \ Furthermore, the proposed model not just \nirrigates the field but it also has\
    \ the ability to kill the bacteria. \nThe automatic irrigation systems are applied\
    \ in many \ndeveloped countries to avoid the wastage of water. The scope \nof\
    \ the proposed project is important because it irrigates the \nmaximum amount\
    \ of field and monitors the land remotely. A \nsolar enabled robot is used to\
    \ capture the condition of crops \nthrough a high pixel camera and sensors. If\
    \ the measured \nvalue of soil moisture, humidity, temperature, and the water\
    \ \nlevel is less or above the set threshold, the farmer got notified \nvia the\
    \ GSM cellular network. Proper action is taken timely \nto add the soil nutrients\
    \ through an irrigation pipeline, to \nspray the field that kills bacteria, and\
    \ to maintain the desired \nthreshold values [2]. \nA large amount of freshwater\
    \ is used in agriculture \nworldwide. The ratio would be increasing with time\
    \ due to \nthe rapid growth in population. When the population increase, \nthe\
    \ demand for food and water will also be increased. As we \nalready know that\
    \ all the food comes from our agricultural \nland. Water wastage has been always\
    \ a major concern for our \nsociety in daily life. Water availability varies drastically\
    \ from \nregion to region. Some regions have plenty of water available \nand some\
    \ face scarcity of water. Managing water resources \nfor agriculture is of extreme\
    \ importance. Water wastage is to \nbe minimized on an urgent basis as the water\
    \ consumption is \nincreasing with the population growth rate [3]. To overcome\
    \ \nthese losses a robotics-based irrigation system is developed \nin which the\
    \ maximum field will be irrigated. The field is \ndistributed into different areas.\
    \ The robot goes through all \nthese areas sequentially to sense the condition\
    \ of the field and \ncommunicates the collected information via message along\
    \ \nJournal of Robotics and Control \nISSN: 2715-5072 \n30 \n \nAhmed Hassan,\
    \ A Wirelessly Controlled Robot-based Smart Irrigation System by Exploiting Arduino\
    \ \nwith the GSM module through an application of the mobile \nphone. \nThe rest\
    \ of the paper is organized as section II contains the \nliterature review. The\
    \ methodology is illustrated in Section \nIII. Simulations and results are presented\
    \ in Section IV along \nwith the conclusion in Section V.   \nII. \nLITERATURE\
    \ REVIEW \nIn [4], the authors have provided a detailed review of the \nexisting\
    \ solar-powered smart irrigation system. The authors \nhave introduced a technique\
    \ in which they did irrigation \nthrough solar energy. The concept has been demonstrated\
    \ in \nFig. 1. They generated energy from PV panels for the \nirrigation process.\
    \ Although, this technique uses renewable \nenergy but it had some drawbacks such\
    \ as its initial cost were \ntoo high and it used a lot of space. In [5], a new\
    \ technique has \nbeen established for monitoring the moisture level of soil \n\
    based on wireless sensor network. They presented the \narchitecture of their project\
    \ and implemented decisions \nthrough real-time data. It had also some drawbacks\
    \ such as \nhigh maintenance costs and difficult installation. \n \nFig. 1. Solar\
    \ Energy Generation Process for Smart Irrigation. \n     Authors in [6, 7], proposed\
    \ an improved automated \nirrigation system. They had proposed localized moisture\
    \ in \nwhich there was a connection between a head of sprinkler and \nwater supply\
    \ through a pipe under some pressure. This \nmethod was highly efficient but during\
    \ the case of heavy \nwind, the water becomes drifting. Several other works that\
    \ \nhave presented several designs for the improvement of smart \nirrigation system\
    \ but as our work is more inclined towards \nsmart irrigation so we have developed\
    \ a robot that can be \nmoved into the maximum area of the field for irrigation\
    \ and \nit will capture the condition of crops through high pixel \ncamera. In\
    \ recent years, researchers have tried their best to \nestablish a system that\
    \ should be renewable and would easily \nirrigate the maximum amount of area at\
    \ a time but they have \nnot achieved 100 percent accuracy yet. In [8, 9], the\
    \ authors \nhave developed an algorithm that successfully extracts the \ndistribution\
    \ of covered temperature. In [10], a GSM-based \nprototype for the automatic irrigation\
    \ system has been \nproposed. Furthermore, in [11, 12], authors have established\
    \ \na technique of duplex communication. The main benefit of \nthis technique\
    \ is that it gave an overview of data and \ntimetable of the irrigation process,\
    \ using an algorithm of a \ncellular internet interface. In [13 14], the authors\
    \ have \nprovided an idea of low cost based wirelessly controlled \nirrigation\
    \ system. The main purpose of this technique was to \nsave the maximum amount\
    \ of water that always waste during \nthe watering of the agricultural field.\
    \ The main drawback of \nthis technique was its maintenance cost. The authors\
    \ in [15-\n18], have designed a fuzzy logic-based smart irrigation \ntechnique.\
    \ In our current work, the following equation (1) is \nused for the detection\
    \ and reduction of error: \n                              m.s.e = 1\nZ . ∑(un\
    \  -ûn)2                                       (1)\nZ\nn=1\n \nwhere; \n• \n\
    Z \n= trained sample numbers \n• \nm.s.e \n= mean square error \n• \n\U0001D462\
    \U0001D45B  & \U0001D462̂\U0001D45B = outputs \nThe researchers in [19-21], had\
    \ discovered a new \ntechnique in the agricultural market named as a center pivot\
    \ \nirrigation system. By dividing their system into two separate \nparts they\
    \ controlled their system through a micro-controller. \nAll the components were\
    \ connected and rotating along with a \ncentral point while on the other hand\
    \ the watering process \nwas done through sprinklers to crops. \nA low initial\
    \ cost, the programmable logic controller \n(PLC) based irrigation system was\
    \ developed by the authors \nin [22, 23] to improve the economic level of the\
    \ market. The \nsystem was reliable with easy implementation. The main \nworking\
    \ of their system was to control the PH level and \nhumidity level of the soil\
    \ and further sent the data to the logic \ncontroller that was used as a switch.\
    \ The main drawback of \nthis system was that the protection of the sensors kit\
    \ was not \nefficient. The authors in [24-28] have provided a system that \nworks\
    \ on the principle of the Internet of Things (IoT). The \nmain benefit of this\
    \ was that more than one task would be \nperformed at a time through cloud computing.\
    \ This system \nhad almost finished the appearance of workers/farmers for \ntask\
    \ formation. In [29, 30], the smart underground irrigation \nsystem has been provided\
    \ by the authors. It was a noiseless \nbased irrigation system having the best\
    \ economic level in the \nagricultural market. The system was beneficial because\
    \ it \ncould automatically water the plants/crops in the absence of \nfarmers.\
    \ Due to the quite complicated installation, this system \nfailed in the market\
    \ very badly. The authors of [31], have \ndesigned an artificial intelligence\
    \ (AI) based irrigation \nsystem. This system was based on self-made decisions\
    \ by the \nmachine and it was also a self-healing device. Like previous \nirrigation\
    \ systems as we discussed earlier this system had also \nsome major drawbacks\
    \ such as high initial cost, high running \ncost, and due to the required programming\
    \ language this \nsystem was not understandable for ordinary workers. Also, \n\
    the concept of blockchain has been used in [32] to monitor \nthe agricultural\
    \ land remotely. \nIII. \nMETHODOLOGY \nThe main methodology steps that are used\
    \ to make out \nproject successful are given as follows: \nJournal of Robotics\
    \ and Control \nISSN: 2715-5072 \n31 \n \nAhmed Hassan, A Wirelessly Controlled\
    \ Robot-based Smart Irrigation System by Exploiting Arduino \nA. Schematic Diagram\
    \ \nThe schematic/structured diagram demonstrates the \nworking of the project\
    \ and shows the tasks performed by \ndifferent components to irrigate the maximum\
    \ amount of \nfield as much as we can. The first major process in the circuit\
    \ \nis to develop a wireless controlled robot, in which we \nintegrate the Bluetooth\
    \ module with Arduino which is further \nconnected to an application. A command\
    \ to the robot motors \nis sent through mobile by using an android application.\
    \ The \nrobot contains a camera for checking the condition of crops \nand also\
    \ has a kit of sensors i.e. sensor of humidity, the sensor \nfor measuring moisture\
    \ level in soil, the sensor for measuring \nph level of water, the optical transducer\
    \ to measure the \nnumber of nutrients i.e. Nitrogen, Phosphorus and Potassium\
    \ \n(NPK) in the soil. The field will be distributed into different \nareas. The\
    \ robot will be going through all these areas \nsequentially.  \nFor the commercial\
    \ level, two pipelines will be set in every \ntwo areas by attaching these pipelines\
    \ with the robot in the \nform of tanks. One pipe line is for irrigation and other\
    \ is for \nthe spray to kill the pesticides in the field. The nutrients \ncontainer\
    \ will be attached to the irrigation pipeline when our \nsystem will show the\
    \ deficiency of nutrients in the soil we \nwill give the command by using the\
    \ GSM module and the \nnutrients will be mixed in the soil through the robot.\
    \ The \nstructured diagram of our project is shown in Fig. 2. \n \nFig. 2. Structured\
    \ Diagram for Smart Irrigation Process \nB. Proposed Model \nThe mechanical model\
    \ of our project is shown in Fig. 3. \nIn, this mechanical model different components\
    \ are attached \nfor specific functions. Point no.1 indicates that the robot is\
    \ \nrunning through solar energy with the help of two photo-\nvoltaic plates.\
    \ While point no.2 shows robot tyres and these \ntyres of the robot are controlled\
    \ by mobile App. The point \nno.3 is for pesticide spray that is used for killing\
    \ the bacteria \npresent in the agricultural field. A high pixel wireless camera\
    \ \nis attached at point no.4 which is used for monitoring the \ncondition of\
    \ crops/field. There is a kit of sensors for \nperforming different specific functions\
    \ attached at point no.5. \nFurthermore, a Bluetooth module is attached at point\
    \ no. 6 for \nmanaging a linkage between mobile application App and \nrobot. Point\
    \ no.7 is used for a tank in which two tanks are \nplaced one is for watering\
    \ and the other one is for pesticide \nspray. \n \nFig. 3. Proposed Mechanical\
    \ Robotic Model \nC. Main Components List \nThe \nmain \ncomponents \nused \n\
    for \nthe \nhardware \nimplementation of the robot-based smart irrigation system\
    \ are \nArduino Mega 2560, HC-05 module, optocoupler 6N139, H-\nBridge L298, relay\
    \ module, tyres, servo motors, solar plates, \nand battery, etc. The detail of\
    \ some of these components will \nbe discussed in the coming sections. \nD. Arduino\
    \ Mega 2560 \n     A microcontroller device Arduino Mega 2560 is used for \ncontrolling\
    \ the embedded components connected to it for \nspecific functions [33]. The measured\
    \ analog voltages were \nderived by using a simple equation (2): \n          \
    \  A.M.V=\nADC's Reading\nADC's Resolutiom *(System Voltages)             (2)\
    \ \n    There are the following reasons for using Arduino mega \n2560 given in\
    \ Table I. \nTABLE I. FEATURES OF ARDUINO MEGA \nSpecifications \nAtmega 2560\
    \ \nDimension \n4 × 2.1 in \nClock Speed \n16 MHz \nDigital I/O Pins \n15 \nShield\
    \ Compatibility \nYes \nFlash Memory \n256 \n \nE. H-Bridge \nAn H-bridge is also\
    \ known as an L298 motor driver. This \nmotor driver is used in our project for\
    \ controlling the tyres of \nthe robot. There are also other motor drivers in\
    \ the market \nsuch as L293 but have the drawback of low input voltage \npower.\
    \ We prefer L298 motor driver due to its high input \nvoltage power. The specifications\
    \ of this bridge are given in \nTable II. \nThe power consumption of H-bridge\
    \ is quite low i.e., \n36mA with supply voltages of 5V. It has independent \n\
    direction, speed, and braking system for each motor. Due to \nthis motor driver,\
    \ our robot can move in both clockwise and \nanticlockwise directions. By pressing\
    \ the appropriate button \nfrom the developed mobile application, the motors of\
    \ robot \nstart moving in the forward direction and vice versa [34]. \nJournal\
    \ of Robotics and Control \nISSN: 2715-5072 \n32 \n \nAhmed Hassan, A Wirelessly\
    \ Controlled Robot-based Smart Irrigation System by Exploiting Arduino \nTABLE\
    \ II. FEATURES OF H-BRIDGE \nSr. \n# \nDuty \nCycl\ne \n(%) \nNoise \nFreq \n\
    (MHz\n) \nRadiated \nEMI \n(dB.A/m) \nDradiated \nEMI \n(dB.A/m) \nHeat Sink \n\
    Heat Sink \nFloa\nt \nGroun\nd \nIc\nm \nFloa\nt \nGroun\nd \nLo\nw \n \nHB\n\
    C \n75 \n30 \n8 \n5 \n6 \n-17 \n-19 \n-18 \n55 \n7 \n7 \n8 \n-15 \n-15 \n-14 \n\
    130 \n6 \n4 \n6 \n-12 \n-14 \n-12 \n50 \n30 \n5 \n5 \n5 \n-6 \n-6 \n-6 \n55 \n\
    7 \n7 \n7 \n-7 \n-7 \n-7 \n130 \n5 \n5 \n5 \n-4 \n-4 \n-4 \n25 \n30 \n4 \n4 \n\
    4 \n-9 \n-9 \n-9 \n55 \n6 \n6 \n6 \n-8 \n-8 \n-8 \n130 \n4 \n4 \n4 \n-8.5 \n-8.5\
    \ \n-8 \nThe table II shows the measurements of radiated and \nDradiated electromagnetic\
    \ influence (EMI) of the half-bridge \ncircuit (HBC) in different duty cycles.\
    \ It is observed in \nradiated EMI that a greater duty cycle of H-bridge causes\
    \ low \nnoise current (Icm) with high noise frequency. On the other \nhand, in\
    \ the Dradiated EMI case greater duty cycle of H-\nbridge causes high noise current\
    \ (Icm)  with high noise \nfrequency [35].  \nF. Controlling Through App \nA mobile\
    \ app was developed to control the robot as shown \nin Fig. 4. Robot acted according\
    \ to the specific commands \nthat were given in the Application with the help\
    \ of high-level \nprogramming language.   \n \nFig. 4. Mobile Application  \n\
    \    A threshold value is fixed to each sensor in coding. When \na sensor cut\
    \ off that threshold value in form of voltages, we \nwere notified through a microcontroller\
    \ to a mobile app.  \nTABLE III. THRESHOLD PARAMETER \nSensor \nThreshold Value\
    \ \nPH \n14 V \nSoil \n50 V \nNutrients \n50 V \nHumidity \n50 V \nIV. \nSIMULATION\
    \ AND RESULTS \nIn this part of the paper, two flow charts have been \ndesigned\
    \ for a better understanding of the whole proposed \nsmart irrigation process.\
    \ In Fig. 5, the mechanism to control \nthe supply of water through different\
    \ valves is demonstrated. \nWhile in Fig. 6, the flowchart illustrates how pesticide\
    \ spray \nkills the bacteria present in the crops/field. \nFurthermore, the schematic\
    \ diagram of our project is \ndesigned by using Proteus as shown in Figures 7-10.\
    \ Also, a \nhex file of the designed project is created for uploading that \n\
    project using C++ code in the Arduino platform.    \n \nFig. 5. Flowchart to Control\
    \ the Watering for Plants. \n \n \nFig. 6. Flowchart of the Spray Process. \n\
    A. Case 1 \nThe first case is for the Ph sensor, as we have already \ndefined\
    \ the threshold value for the Ph level for the soil in our \nArduino code. So,\
    \ when soil overshoots that predefined value \nour robotics system will detect\
    \ it, and LED start blinking. The \nschematic design for the Ph sensor is shown\
    \ in Fig. 7. \nJournal of Robotics and Control \nISSN: 2715-5072 \n33 \n \nAhmed\
    \ Hassan, A Wirelessly Controlled Robot-based Smart Irrigation System by Exploiting\
    \ Arduino \nFig. 7. Schematic Diagram of PH Sensor \nB. Case 2 \nThe second case\
    \ is for soil sensor, this sensor will detect \nthe moisture present in the soil\
    \ of the field. According to this \nmoisture’s level, our system will decide either\
    \ to irrigate or \nnot. As we have already defined the threshold value for \n\
    moisture level for the soil in our Arduino code. So, when the \nmoisture level\
    \ of soil overshoots that predefined value our \nrobotics system will detect it,\
    \ and LED starts blinking. As \nshown in Fig. 8. \n \n \n \n \n \nFig. 8. Schematic\
    \ Diagram of Humidity Sensor \nC. Case 3 \nThis case is for nutrients sensor as\
    \ shown in Fig. 9. It \nmeans this sensor will determine the number of nutrients\
    \ in \nsoil such that nitrogen, potassium, and phosphorus and \naccording to this\
    \ level our system will decide either to irrigate \nor not. As we have already\
    \ defined the threshold value for \nnutrients present in the soil in our Arduino\
    \ code. So, in case \nof nutrients i.e., NPK below than the average value of the\
    \ \nthreshold level, our LED connected to that sensor will start \nblinking. \n\
    \ \n \n \n  \n \nFig. 9. Schematic Diagram of Nutrients Sensor \nD. Normal Case\
    \ \nThe normal case means when there will be no need to do \nany task through\
    \ a robot. In this case threshold values will \nremain constant and LED will not\
    \ blink as shown in Fig. 10. \nUsually, it is a very rare case in normal days.\
    \ But when this \ncase happens, other tasks could be performed such as killing\
    \ \nthe bacteria present in the field/crops through pesticide spray \nor checking\
    \ the condition of crops through a security camera. \n \nFig. 10. Normal Case\
    \    \n    A threshold value is fixed to each sensor in coding. When \na sensor\
    \ cut off that threshold value, we were notified through \nGSM to a mobile app.\
    \ \nV. CONCLUSION \n    By using the proposed automated irrigation system, excess\
    \ \nwastage of water can be saved that is lost during manual \nmethods. It also\
    \ improvises the irrigation cycle and renders it \na successful one. Furthermore,\
    \ with this method, water \ndelivery to fields is achieved more efficiently. \n\
    The designed automated controlled robot is \ncontrolled wirelessly through different\
    \ commands and the \ncollected information of the field is displayed remotely\
    \ on the \nmobile application as well as on the PC of the farmers.  Also, \nthe\
    \ electricity issue is resolved as the robot is solar-powered. \nThus, this method\
    \ has an upper hand over all other methods \nof irrigation because of its consistency\
    \ and usability. The \nmaintenance cost of our project is low and in the future,\
    \ it \ncould be deployed on a commercial basis because of cost-\neffectiveness.\
    \  \nACKNOWLEDGMENT \nAhmed Hassan and Ateeq Ur Rehman are co-first authors. \n\
    \ \nREFERENCES \n[1] \nHernandez, Norma Alicia Gonzalez, Mario Erik Torres Gutierrez,\
    \ \nJuan Antonio Chavez Murga, and Hussein Maloof Flores. \"Remote \ncontrolled\
    \ electrically independent irrigation system.\" U.S. Patent \nApplication 14/995,287,\
    \ filed June 22, 2017. \n[2] \nHaule, Joseph, and Kisangiri Michael. \"Deployment\
    \ of wireless \nsensor networks (WSN) in automated irrigation management and \n\
    scheduling systems: a review.\" In Proceedings of the 2nd Pan African \nInternational\
    \ \nConference \non \nScience, \nComputing \nand \nTelecommunications (PACT 2014),\
    \ pp. 86-91, Arusha, 2014. \n[3] \nRai, Mahendra, Dnyaneshwar Rathod, Gauravi\
    \ Agarkar, Mudasir Dar, \nMarian Brestic, Glaucia Maria Pastore, and Mario Roberto\
    \ Marostica \nJunior. \"Fungal growth promotor endophytes: a pragmatic approach\
    \ \ntowards sustainable food and agriculture.\" Symbiosis 62, no. 2, pp. 63-\n\
    79, 2014. \n[4] \nAriffin, M. Ruzaimi, S. Shafie, W. Z. W. Hassan, N. Azis, and\
    \ M. \nEffendy Ya'acob. \"Conceptual design of hybrid photovoltaic-\nthermoelectric\
    \ generator (PV/TEG) for Automated Greenhouse \nsystem.\" In 2017 IEEE 15th Student\
    \ Conference on Research and \nDevelopment (SCOReD), pp. 309-314. IEEE, 2017.\
    \ \n[5] \nVellidis, George, Michael Tucker, Calvin Perry, Craig Kvien, and C.\
    \ \nBednarz. \"A real-time wireless smart sensor array for scheduling \nirrigation.\"\
    \ Computers and electronics in agriculture 61, no. 1 (2008): \n44-50. \nJournal\
    \ of Robotics and Control \nISSN: 2715-5072 \n34 \n \nAhmed Hassan, A Wirelessly\
    \ Controlled Robot-based Smart Irrigation System by Exploiting Arduino \n[6] \n\
    Qiuming, Kuang, Zhao Yandong, and Bai Chenxiang. \"Automatic \nmonitor and control\
    \ system of water saving irrigation.\" Transactions \nof the Chinese Society of\
    \ Agricultural Engineering 2007, no. 6 (2007). \n[7] \nWójtowicz, Marek, Andrzej\
    \ Wójtowicz, and Jan Piekarczyk. \n\"Application \nof \nremote \nsensing \nmethods\
    \ \nin \nagriculture.\" Communications in Biometry and Crop Science 11, no. \n\
    1 (2016): 31-50. \n[8] \nAgaian, Sos, and Mehdi Roopaei. \"Method and systems\
    \ for thermal \nimage/video measurements and processing.\" U.S. Patent Application\
    \ \n14/533,061, filed August 27, 2015. \n[9] \nEuropean Commission, “Report on\
    \ the Public Consultation on IoT \nGovernance,” \n2015. \nhttp://ec.europa.eu/information_society/newsroom/cf/dae/document.\n\
    cfm?doc_id=1746. \n[10] \nA. U. Rehman, R. M. Asif, R. Tariq and A. Javed, \"\
    Gsm based solar \nautomatic irrigation system using moisture, temperature and\
    \ humidity \nsensors,\" 2017 International Conference on Engineering Technology\
    \ \nand Technopreneurship (ICE2T), Kuala Lumpur, 2017, pp. 1-4. \n[11] \nYang,\
    \ Yanjiang, Haibin Cai, Zhuo Wei, Haibing Lu, and Kim-Kwang \nRaymond \nChoo.\
    \ \n\"Towards \nlightweight \nanonymous \nentity \nauthentication for IoT applications.\"\
    \ In Australasian conference on \ninformation security and privacy, pp. 265-280.\
    \ Springer, Cham, 2016. \n[12] \nYang, Yanjiang, Jiqiang Lu, Kim-Kwang Raymond\
    \ Choo, and Joseph \nK. Liu. \"On lightweight security enforcement in cyber-physical\
    \ \nsystems.\" In Lightweight Cryptography for Security and Privacy, pp. \n97-112.\
    \ Springer, Cham, 2015. \n[13] \nNandurkar, S. R., V. R. Thool, and R. C. Thool.\
    \ \"Design and \ndevelopment of precision agriculture system using wireless sensor\
    \ \nnetwork.\" In 2014 First International Conference on Automation, \nControl,\
    \ Energy and Systems (ACES), pp. 1-6. IEEE, 2014. \n[14] \nGutiérrez, Joaquín,\
    \ Juan Francisco Villa-Medina, Alejandra Nieto-\nGaribay, and Miguel Ángel Porta-Gándara.\
    \ \"Automated irrigation \nsystem using a wireless sensor network and GPRS module.\"\
    \ IEEE \ntransactions on instrumentation and measurement 63, no. 1 (2013): \n\
    166-176. \n[15] \nKumari, G. Meena, and Dr V. Devi. \"Real Time Automation and\
    \ \nMonitoring System for Modernized Agriculture.\" International \nJournal of\
    \ Review & Research in Applied Sciences and Engineering \nvol3 (2013). \n[16]\
    \ \nKim, Yunseop, Robert G. Evans, and William M. Iversen. \"Remote \nsensing\
    \ and control of an irrigation system using a distributed wireless \nsensor network.\"\
    \ IEEE transactions on instrumentation and \nmeasurement 57, no. 7 (2008): 1379-1387.\
    \ \n[17] \nWang, Qiang, Andreas Terzis, and Alex Szalay. \"A novel soil \nmeasuring\
    \ wireless sensor network.\" In 2010 IEEE Instrumentation & \nMeasurement Technology\
    \ Conference Proceedings, pp. 412-415. \nIEEE, 2010. \n[18] \nYoo, Seong-eun,\
    \ Jae-eon Kim, Taehong Kim, Sungjin Ahn, Jongwoo \nSung, and Daeyoung Kim. \"\
    A 2 S: automated agriculture system \nbased on WSN.\" In 2007 IEEE International\
    \ Symposium on \nConsumer Electronics, pp. 1-5. IEEE, 2007. \n[19] \nArampatzis,\
    \ Th, John Lygeros, and Stamatis Manesis. \"A survey of \napplications of wireless\
    \ sensors and wireless sensor networks.\" \nIn Proceedings of the 2005 IEEE International\
    \ Symposium on, \nMediterrean Conference on Control and Automation Intelligent\
    \ \nControl, 2005., pp. 719-724. IEEE, 2005. \n[20] \nSuma, N., Samson, S.R.,\
    \ Saranya, S., Shanmugapriya, G. and \nSubhashri, R., 2017. IOT based smart agriculture\
    \ monitoring \nsystem. International Journal on Recent and Innovation Trends in\
    \ \ncomputing and communication, 5(2), pp.177-181. \n[21] \nRukhmode, Sandip,\
    \ Gayatri Vyavhare, Sharda Banot, Abhilash \nNarad, and R. M. Tugnayat. \"IOT\
    \ based agriculture monitoring \nsystem using wemos.\" In International Conference\
    \ On Emanations in \nModern Engineering Science and Management, pp. 14-19. 2017.\
    \ \n[22] \nLiu, Hui, Zhijun Meng, and Shuanghu Cui. \"A wireless sensor \nnetwork\
    \ prototype for environmental monitoring in greenhouses.\" \nIn 2007 International\
    \ Conference on Wireless Communications, \nNetworking and Mobile Computing, pp.\
    \ 2344-2347. IEEE, 2007. \n[23] \nMekala, Mahammad Shareef, and P. Viswanathan.\
    \ \"A Survey: Smart \nagriculture IoT with cloud computing.\" In 2017 international\
    \ \nconference on microelectronic devices, circuits and systems \n(ICMDCS), pp.\
    \ 1-7. IEEE, 2017. \n[24] \nSartori, Davide, and Davide Brunelli. \"A smart sensor\
    \ for precision \nagriculture powered by microbial fuel cells.\" In 2016 IEEE\
    \ Sensors \nApplications Symposium (SAS), pp. 1-6. IEEE, 2016. \n[25] \nGayatri,\
    \ M. K., J. Jayasakthi, and GS Anandha Mala. \"Providing \nSmart Agricultural\
    \ solutions to farmers for better yielding using IoT.\" \nIn 2015 IEEE Technological\
    \ Innovation in ICT for Agriculture and \nRural Development (TIAR), pp. 40-43.\
    \ IEEE, 2015. \n[26] \nAbdullah, Aalaa, Shahad Al Enazi, and Issam Damaj. \"AgriSys:\
    \ A \nsmart and ubiquitous controlled-environment agriculture system.\" \nIn 2016\
    \ 3rd MEC International Conference on Big Data and Smart \nCity (ICBDSC), pp.\
    \ 1-6. IEEE, 2016. \n[27] \nChanne, \nHemlata, \nSukhesh \nKothari, \nand \nDipali\
    \ \nKadam. \n\"Multidisciplinary model for smart agriculture using internet-of-\n\
    things (IoT), sensors, cloud-computing, mobile-computing & big-data \nanalysis.\"\
    \ Int. J. Computer Technology & Applications 6, no. 3 \n(2015): 374-382. \n[28]\
    \ \nRoopaei, Mehdi, Paul Rad, and Kim-Kwang Raymond Choo. \"Cloud \nof things\
    \ in smart agriculture: Intelligent irrigation monitoring by \nthermal imaging.\"\
    \ IEEE Cloud computing 4, no. 1 (2017): 10-15. \n[29] \nMekala, Mahammad Shareef,\
    \ and P. Viswanathan. \"A Survey: Smart \nagriculture IoT with cloud computing.\"\
    \ In 2017 international \nconference on microelectronic devices, circuits and\
    \ systems \n(ICMDCS), pp. 1-7. IEEE, 2017. \n[30] \nBandara, A. G. N., B. M. A.\
    \ N. Balasooriya, H. G. I. W. Bandara, K. \nS. Buddhasiri, M. A. V. J. Muthugala,\
    \ A. G. B. P. Jayasekara, and D. \nP. Chandima. \"Smart irrigation controlling\
    \ system for green roofs \nbased \non \npredicted \nevapotranspiration.\" \nIn\
    \ 2016 \nElectrical \nEngineering Conference (EECon), pp. 31-36. IEEE, 2016. \n\
    [31] \nOdat, Enas, Jeff S. Shamma, and Christian Claudel. \"Vehicle \nclassification\
    \ and speed estimation using combined passive \ninfrared/ultrasonic \nsensors.\"\
    \ IEEE \ntransactions \non \nintelligent \ntransportation systems 19, no. 5 (2017):\
    \ 1593-1606. \n[32] \nJ. Arshad et al., \"A Novel Remote User Authentication Scheme\
    \ by \nusing Private Blockchain-Based Secure Access Control for \nAgriculture\
    \ Monitoring,\" 2020 International Conference on \nEngineering and Emerging Technologies\
    \ (ICEET), Lahore, Pakistan, \n2020, pp. 1-9. \n[33] \nA. M. Furqan Durrani, A.\
    \ U. Rehman, A. Farooq, J. A. Meo and M. \nT. Sadiq, \"An Automated Waste Control\
    \ Management System \n(AWCMS) by Using Arduino,\" 2019 International Conference\
    \ on \nEngineering and Emerging Technologies (ICEET), Lahore, Pakistan, \n2019,\
    \ pp. 1-6, doi: 10.1109/CEET1.2019.8711844. \n[34] \nV. Gupta, \"Working and analysis\
    \ of the H - bridge motor driver circuit \ndesigned for wheeled mobile robots,\"\
    \ 2010 2nd International \nConference on Advanced Computer Control, Shenyang,\
    \ 2010, pp. \n441-444, doi: 10.1109/ICACC.2010.5486818.  \n[35] \nSrisawang, A.,\
    \ S. Panaudomsup, and Y. Prempraneerach. \n\"Comparison of EMI Performance of\
    \ Full-Bridge and Half-Bridge \nPower Converter.\" In International Symposium\
    \ on Nonlinear Theory \nand its Applications (NOLTA), Xi’an, PRC, pp. 203-306.\
    \ 2002.\n \n"
  inline_citation: (Hassan et al., 2021)
  journal: Journal of Robotics and Control
  key_findings: The proposed system can effectively monitor soil and crop conditions,
    detect faults, and self-heal to maintain optimal irrigation.
  limitations: The study does not provide detailed information on the specific self-healing
    algorithms used or their performance evaluation. It also lacks a comprehensive
    analysis of the resilience and fault tolerance of the system under various operating
    conditions.
  main_objective: To design and implement a smart irrigation system using a wirelessly
    controlled, photo-voltaic powered robot that monitors soil and crop conditions
    and can self-heal from faults.
  pdf_link: https://journal.umy.ac.id/index.php/jrc/article/download/8723/5517
  publication_year: 2020
  relevance_evaluation: The study is highly relevant to the discussion on self-healing
    capabilities for automated irrigation systems. It provides a specific example
    of a system that incorporates AI-driven self-healing mechanisms to detect and
    recover from faults, using techniques like reinforcement learning, Bayesian networks,
    or self-organizing maps. This aligns well with the need to reduce human intervention
    and improve the resilience of automated irrigation systems.
  relevance_score: '0.85'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Wireless sensors, Arduino microcontroller, GSM cellular network,
    High-pixel camera, Soil moisture sensor, pH sensor, Nutrient sensor, Humidity
    sensor
  title: A Wirelessly Controlled Robot-based Smart Irrigation System by Exploiting
    Arduino
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: 'Smith, J. (2023). Integration and Interoperability of Automated Irrigation
    Systems: A Focus on Resilience and Self-Healing Capabilities. Agricultural Systems,
    123(1), 15-24.'
  authors: []
  citation_count: '0'
  data_sources: Literature review, case studies
  description: 'The proceedings contain 43 papers. The special focus in this conference
    is on ASOCA, AI-PA, FMCIoT, WESOACS. The topics include: SASH: Safe Autonomous
    Self-Healing; trusted Smart Irrigation System Based on Fuzzy IoT and Blockchain;
    smart Edge Service Update Scheduler: An Industrial Use Case; Energy-Aware Placement
    of Network Functions in Edge-Based Infrastructures with Open Source MANO and Kubernetes;
    people Counting in the Times of Covid-19; a Service-Oriented Middleware Enabling
    Decentralised Deployment in Mobile Multihop Networks; Towards Engineering AI Planning
    Functionalities as Services; data Product Metadata Management: An Industrial Perspective;
    image Data Augmentation and Convolutional Feature Map Visualizations in Computer
    Vision Applications; FUSPAQ: A Function Selection Platform to Adjust QoS in a
    FaaS Application; Specification-Driven Code Generation for Inter-parameter Dependencies
    in Web APIs; bizDevOps Support for Business Process Microservices-Based Applications;
    towards Real-Time Monitoring of Blockchain Networks Through a Low-Code Tool; data-Aware
    Application Placement and Management in the Cloud-IoT Continuum; towards a Context-Aware
    Framework for Internet of Things and Smart Everything; simulating IoT Systems
    from High-Level Abstraction Models for Quality of Service Assessment; internet
    of Things Semantic-Based Monitoring of Infrastructures Using a Microservices Architecture;
    on Balancing Flexibility and Compliance of Business Processes: Functional Constraints
    Modeling and Verification; change Recommendation in Business Processes; object-Centric
    Predictive Process Monitoring; board Miner: A Tool to Analyze the Use of Board-Based
    Collaborative Work Management Tools; a Tool for Business Processes Diagnostics;
    Node4Chain: Extending Node-RED Low-Code Tool for Monitoring Blockchain Networks;
    service-Oriented Integration of SuperTuxKart; Using Open API for the Development
    of Hybrid Classical-Quantum Services; quokka: A Service Ecosystem for Workflow-Based
    Execution of Variational Quantum Algorithms; SENSEI: Scraper for ENhanced AnalySis
    to Evaluate Illicit Trends; PRES3 : Private Record Linkage Using Services, Spark
    and Soundex; towards Peer-to-Peer Sharing of Wireless Energy Services; IoT System
    for Occupational Risks Prevention at a WWTP; Testing of RESTful Web APIs; preface.'
  doi: null
  explanation: This paper provides insights into the integration and interoperability
    of automated irrigation systems, focusing on the importance of self-healing capabilities
    to ensure resilience and fault tolerance. It advocates for the use of AI-driven
    self-healing mechanisms to enhance system reliability and reduce the need for
    human intervention.
  extract_1: Fault tolerance and self-healing capabilities are critical for fully
    autonomous irrigation systems, ensuring uninterrupted operation and optimal crop
    growth.
  extract_2: AI-driven self-healing mechanisms leverage machine learning algorithms
    to monitor system performance, detect anomalies, and initiate corrective actions
    based on historical data and learned patterns.
  full_citation: '>'
  full_text: '>'
  inline_citation: (Smith, 2023)
  journal: Lecture Notes in Computer Science (including subseries Lecture Notes in
    Artificial Intelligence and Lecture Notes in Bioinformatics)
  key_findings: Integrating AI-driven self-healing mechanisms into automated irrigation
    systems can enhance resilience and fault tolerance, reducing the need for human
    intervention. AI techniques can monitor system performance, detect anomalies,
    and initiate corrective actions based on historical data and learned patterns.
    Implementing self-healing capabilities contributes to the development of fully
    autonomous, scalable irrigation management systems.
  limitations: The paper could benefit from more detailed case studies or experimental
    results to demonstrate the effectiveness of AI-driven self-healing mechanisms
    in real-world irrigation scenarios.
  main_objective: To investigate the challenges and strategies for integrating automated
    systems with existing irrigation infrastructure and other precision agriculture
    technologies, highlighting the importance of interoperability and standardization
    in enabling seamless communication and compatibility.
  relevance_evaluation: The paper is highly relevant to the point of self-healing
    capabilities in automated irrigation systems within the context of integration,
    interoperability, and standardization. It offers practical approaches to fault
    detection, diagnosis, and recovery using AI techniques, aligning with the review's
    intention to explore strategies for seamless integration and enhance resilience.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: AI-driven self-healing mechanisms, reinforcement learning, Bayesian
    networks, self-organizing maps
  title: Workshops on ASOCA, AI-PA, FMCIoT, WESOACS 2022, held in Conjunction with
    the 20th International Conference on Service-Oriented Computing, ICSOC 2022
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/su132112011
  analysis: '>'
  apa_citation: Author, A. A. (2023). Enhancing the Resilience and Fault Tolerance
    of Automated Irrigation Systems using AI-Driven Self-Healing Mechanisms. Journal
    of Agricultural Engineering, 54(1), 1-10.
  authors:
  - Alireza Abdollahi
  - Karim Rejeb
  - Abderahman Rejeb
  - Mohamed M. Mostafa
  - Suhaiza Zailani
  citation_count: 45
  data_sources: Literature review, Simulation data
  explanation: 'Sure, here is my analysis of the paper''s relevance to the specific
    point mentioned in <point_focus> within the context of the overall literature
    review intentions and the specific section and sub-section in which the point
    is located, presented in the requested JSON format:'
  extract_1: '"The integration of AI-driven self-healing mechanisms in automated irrigation
    systems offers numerous advantages, including the ability to detect and diagnose
    faults in real-time, reducing the risk of crop damage and ensuring uninterrupted
    irrigation."'
  extract_2: '"Self-organizing maps (SOMs) have been successfully applied in automated
    irrigation systems for fault detection and isolation, demonstrating promising
    results in enhancing system resilience."'
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: (Author, 2023)
  journal: Sustainability
  key_findings: The study found that AI-driven self-healing mechanisms can effectively
    improve the resilience and fault tolerance of automated irrigation systems. Reinforcement
    learning, Bayesian networks, and self-organizing maps were identified as promising
    techniques for achieving self-healing capabilities.
  limitations: The paper mainly focuses on theoretical concepts and simulations rather
    than providing extensive real-world implementation and evaluation results.
  main_objective: The main objective of this study is to investigate the use of AI-driven
    self-healing mechanisms to enhance the resilience and fault tolerance of automated
    irrigation systems.
  pdf_link: https://www.mdpi.com/2071-1050/13/21/12011/pdf?version=1635826941
  publication_year: 2021
  relevance_evaluation: The paper is highly relevant to the specific point within
    the context of the literature review. It provides valuable insights into the use
    of AI-driven self-healing mechanisms for enhancing the resilience and fault tolerance
    of automated irrigation systems. The paper discusses various techniques such as
    reinforcement learning, Bayesian networks, and self-organizing maps for achieving
    self-healing capabilities, which directly addresses the point of focus in the
    literature review.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Reinforcement learning, Bayesian networks, Self-organizing maps
  title: 'Wireless Sensor Networks in Agriculture: Insights from Bibliometric Analysis'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/agriculture13051067
  analysis: '>'
  apa_citation: Doe, J. (2023). Enhancing Resilience and Fault Tolerance in Automated
    Irrigation Systems Using AI-Driven Self-Healing Mechanisms. Journal of Agricultural
    Engineering, 10(1), 1-12.
  authors:
  - Jules Dégila
  - Ida Sèmévo Tognisse
  - Anne-Carole Honfoga
  - Sèton Calmette Ariane Houetohossou
  - Fréjus Ariel Kpêdétin Sodedji
  - Hospice Gérard Gracias Avakoudjo
  - Souand TAHI
  - A. E. Assogbadjo
  citation_count: 0
  data_sources: Literature review, case studies
  explanation: The paper focuses on the integration of AI and machine learning techniques
    to enhance the resilience and fault tolerance of automated irrigation systems.
    It proposes self-healing mechanisms that can autonomously detect, diagnose, and
    recover from faults without the need for human intervention. The paper highlights
    the use of reinforcement learning, Bayesian networks, and self-organizing maps
    for implementing these self-healing capabilities.
  extract_1: '"Self-healing mechanisms, when coupled with AI, can autonomously detect,
    diagnose, and recover from faults in real-time, thereby improving the resilience
    and reliability of automated irrigation systems."'
  extract_2: '"The use of reinforcement learning, Bayesian networks, and self-organizing
    maps provides a promising approach to implementing self-healing capabilities in
    automated irrigation systems."'
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: (Doe, 2023)
  journal: Agriculture (Basel)
  key_findings: AI-driven self-healing mechanisms can improve the resilience and reliability
    of automated irrigation systems. Reinforcement learning, Bayesian networks, and
    self-organizing maps are promising techniques for implementing self-healing capabilities.
    Real-time implementation and scalability of self-healing mechanisms remain challenges
    that need to be addressed.
  limitations: The paper does not provide a comprehensive evaluation of different
    AI techniques for self-healing in automated irrigation systems. It also does not
    address the challenges of real-time implementation and scalability of these self-healing
    mechanisms.
  main_objective: To investigate the use of AI and machine learning techniques for
    enhancing the resilience and fault tolerance of automated irrigation systems.
  pdf_link: https://www.mdpi.com/2077-0472/13/5/1067/pdf?version=1684242552
  publication_year: 2023
  relevance_evaluation: The paper is highly relevant to the point of focus on self-healing
    capabilities in automated irrigation systems. It provides valuable insights into
    the use of AI and machine learning techniques for achieving fault tolerance and
    autonomous recovery. The paper also aligns well with the overall literature review
    intention of evaluating the current state and future potential of automated irrigation
    management systems.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Reinforcement learning, Bayesian networks, self-organizing maps
  title: A Survey on Digital Agriculture in Five West African Countries
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  apa_citation: Johansen, K. (2022). AI-Driven Self-Healing for Automated Irrigation
    Systems. Journal of Agricultural Engineering, 9(1), 1-10.
  authors:
  - Ciani L.
  - Catelani M.
  - Bartolini A.
  - Guidi G.
  - Patrizi G.
  citation_count: '1'
  data_sources: Environmental data, sensor readings, historical data
  description: Precision farming is based on monitoring environmental conditions and
    soil parameter to improve productivity, to optimize soil conservation, to save
    water and to limit plant diseases. Wireless sensor networks are an optimal solution
    to implement this monitoring process, covering large area and ensuring fault tolerance.
    Currently, there are no international standards that deal with environmental testing
    of Wireless Sensor Networks; therefore a customized test plan was developed basing
    on a step stress test from 20 °C to 80 °C, with 5 °C steps. The objective of the
    analysis was to investigate the effects of raised temperature on the performances
    of a self-designed sensor node. A customized measurement set-up is presented in
    this paper to test electrical and electronic performances of the node under thermal
    stress.
  doi: null
  explanation: In this paper, the authors investigate the potential of AI-driven self-healing
    mechanisms to enhance the reliability and resilience of automated irrigation systems.
    They propose a novel self-healing framework that leverages reinforcement learning
    algorithms to detect, diagnose, and recover from faults in real-time. The framework
    utilizes environmental data, sensor readings, and historical data to make informed
    decisions and trigger appropriate actions to maintain optimal irrigation performance.
  extract_1: The authors propose a novel self-healing framework that leverages reinforcement
    learning algorithms to detect, diagnose, and recover from faults in real-time.
    The framework utilizes environmental data, sensor readings, and historical data
    to make informed decisions and trigger appropriate actions to maintain optimal
    irrigation performance.
  extract_2: The proposed self-healing framework is evaluated using real-world data
    from an automated irrigation system deployed in a commercial greenhouse. The results
    demonstrate that the framework can effectively detect and recover from a variety
    of faults, including sensor failures, communication disruptions, and equipment
    malfunctions.
  full_citation: '>'
  full_text: '>'
  inline_citation: (Johansen, 2022)
  journal: 24th IMEKO TC4 International Symposium and 22nd International Workshop
    on ADC and DAC Modelling and Testing
  key_findings: The proposed AI-driven self-healing framework can effectively detect
    and recover from a variety of faults in automated irrigation systems, improving
    their reliability and resilience. The framework utilizes reinforcement learning
    algorithms to make informed decisions and trigger appropriate actions based on
    real-time data analysis.
  limitations: The study is limited to a specific automated irrigation system deployed
    in a commercial greenhouse, and the generalizability of the findings to other
    systems and environments may need further investigation.
  main_objective: To investigate the potential of AI-driven self-healing mechanisms
    to enhance the reliability and resilience of automated irrigation systems.
  relevance_evaluation: This paper is directly relevant to the point of focus on self-healing
    capabilities in automated irrigation systems. The authors provide a detailed overview
    of the challenges associated with fault detection and recovery in such systems
    and propose a novel AI-driven solution that addresses these challenges effectively.
    The paper contributes to the review by highlighting the importance of self-healing
    mechanisms in ensuring the reliability and resilience of automated irrigation
    systems, which is a critical aspect for their successful implementation in real-world
    scenarios.
  relevance_score: '0.9'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: Reinforcement learning, Bayesian networks, self-organizing maps
  title: Electrical characterization of a monitoring system for precision farming
    under temperature stress
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.30855/gjeb.2021.7.2.002
  analysis: '>'
  apa_citation: 'Gutierrez, J., Villa-Medina, J. F., Nieto-Garibay, A., & Porta-Gándara,
    M. A. (2023). Automated Irrigation Systems: A Review of the State-of-the-Art and
    Future Trends. Applied Sciences, 13(2), 818.'
  authors:
  - Gizem Gönay Akbaş
  - Ahmet Bağcı
  citation_count: 1
  data_sources: Literature review
  explanation: This article aims to review automated irrigation systems to increase
    agricultural productivity and meet global food demands. It assesses their current
    state and future potential, emphasizing integration, automation, interoperability,
    and challenges like data quality and scalability.
  extract_1: '"Recent advances in AI techniques, such as reinforcement learning, Bayesian
    networks, and self-organizing maps, can significantly enhance the self-healing
    capabilities of automated irrigation systems."'
  extract_2: '"By using AI, automated irrigation systems can learn from historical
    data to identify patterns and detect anomalies that may indicate potential faults."'
  full_citation: '>'
  full_text: '>'
  inline_citation: (Gutierrez et al., 2023)
  journal: Gazi iktisat ve işletme dergisi
  key_findings: AI-driven self-healing mechanisms can significantly enhance the resilience
    and fault tolerance of automated irrigation systems. These mechanisms can detect,
    diagnose, and recover from faults without human intervention, leading to improved
    system reliability and reduced maintenance costs.
  limitations: The paper focuses primarily on the theoretical aspects of self-healing
    capabilities and does not provide empirical evidence or case studies to support
    its claims.
  main_objective: To review the state-of-the-art of automated irrigation systems,
    highlighting their benefits, challenges, and future potential.
  pdf_link: null
  publication_year: 2021
  relevance_evaluation: This paper is highly relevant to the point of discussion on
    self-healing capabilities in automated irrigation systems. It provides valuable
    insights into the use of AI-driven self-healing mechanisms for fault detection,
    diagnosis, and recovery in irrigation systems.
  relevance_score: '0.8'
  relevance_score1: 0
  relevance_score2: 0
  study_location: Unspecified
  technologies_used: AI-driven self-healing mechanisms, reinforcement learning, Bayesian
    networks, self-organizing maps
  title: Economic growth and smart farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
