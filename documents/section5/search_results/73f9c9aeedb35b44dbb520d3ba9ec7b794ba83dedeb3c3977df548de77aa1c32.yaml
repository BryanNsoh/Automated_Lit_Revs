- DOI: https://doi.org/10.1109/access.2020.3009298
  analysis: '>'
  authors:
  - Vippon Preet Kour
  - Sakshi Arora
  citation_count: 97
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 8 Recent
    Developments of the Internet of Things in Agriculture: A Survey Publisher: IEEE
    Cite This PDF Vippon Preet Kour; Sakshi Arora All Authors 98 Cites in Papers 12885
    Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Sources and Search Methods III. Introduction
    to the Internet of Things (IoT) Concepts and Theories IV. Related Work V. Findings
    Show Full Outline Authors Figures References Citations Keywords Metrics Abstract:
    A rise in the population has immensely increased the pressure on the agriculture
    sector. With the advent of technology, this decade is witnessing a shift from
    conventional approaches to the most advanced ones. The Internet of Things (IoT)
    has transformed both the quality and quantity of the agriculture sector. Hybridization
    of species along with the real-time monitoring of the farms paved a way for resource
    optimization. Scientists, research institutions, academicians, and most nations
    across the globe are moving towards the practice and execution of collaborative
    projects to explore the horizon of this field for serving mankind. The tech industry
    is racing to provide more optimal solutions. Inclusion of IoT, along with cloud
    computing, big data analytics, and wireless sensor networks can provide sufficient
    scope to predict, process, and analyze the situations and improve the activities
    in the real-time scenario. The concept of heterogeneity and interoperability of
    the devices by providing flexible, scalable, and durable methods, models are also
    opening new domains in this field. Therefore, this paper contributes towards the
    recent IoT technologies in the agriculture sector, along with the development
    of hardware and software systems. The public and private sector projects and startup''s
    started all over the globe to provide smart and sustainable solutions in precision
    agriculture are also discussed. The current scenario, applications, research potential,
    limitations, and future aspects are briefly discussed. Based on the concepts of
    IoT a precision farming framework is also proposed in this article. A graphical
    abstract for Recent developments of the Internet of Things in Agriculture: A Survey.
    Published in: IEEE Access ( Volume: 8) Page(s): 129924 - 129957 Date of Publication:
    14 July 2020 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2020.3009298 Publisher:
    IEEE CCBY - IEEE is not the copyright holder of this material. Please follow the
    instructions via https://creativecommons.org/licenses/by/4.0/ to obtain full-text
    articles and stipulations in the API documentation. SECTION I. Introduction The
    term ‘Agriculture’ is inferred from the Latin words ‘Ager’ means ‘Land’ and ‘Culture’
    means ‘Cultivation’. It is the milestone field of human civilization and is one
    of the benchmark areas. This field is the withstander of the economies of various
    nations. According to the Food and Agricultural Organization of the United Nations
    (FAO), more than 60% of the human population depends on agriculture for survival
    and around 12% of the total land area is under agricultural production [1]. Predicted
    by FAO, the global population will reach the mark of 8 billion people by the year
    2025 and 9.6 billion by the end of 2050 (FAO, 2009) [2]. The interpretation of
    this data shows that to tackle this population growth, an estimated increase of
    70% in food production must be achieved worldwide by 2050 [3]. Agriculture is
    also the second-largest greenhouse gas (GHG) emitter, because of fossil-based
    fertilizers, biomass, and machinery. In some of the developed and developing nations,
    the agriculture sector is the backbone of the economy. This field has a huge contribution
    in the growth of Gross Domestic Product (GDP) of developing countries, in particular,
    some of them are listed in TABLE 1. TABLE 1 Nations Having Agriculture as a Major
    Part of Their GDP [4] In India, 53% of the population is dependent on the agriculture
    sector for employment and 61.5 % of the Indian population is primarily dependent
    on the agriculture sector for its livelihood [5]. Focusing on the market size,
    India is the second-largest fruit producer in the world. Based on certain data
    and statistics, the farming income in India is expected to double by 2022. Eyeing
    this change, there is an intra-state cluster development of certain states in
    terms of the agriculture sector. The various stats and numbers representing the
    impact of agriculture in the overall economic development of India as compared
    to other fields has been shown in Fig. 1. FIGURE 1. Contributions of various sectors
    in the Indian economy [6]. Show All At present, the demand is more than the supply
    generated and this curve will illustrate more unstable results in the coming years,
    due to increase in demand with population rise. To maintain the demand-supply
    curve, there will be enormous stress on the agricultural sector. Global warming
    and changing climatic conditions are also important factors to be taken into consideration.
    From the past decades, due to the increase in demand and pressure on the overall
    structure of the field, this area is witnessing the slow but progressive shift
    from traditional approaches to the most advanced technology-driven methods. The
    use of traditional approaches and conventional methods, as well as the changes
    in the environment, lay stress on the agricultural sector. Some of the challenges
    for the agricultural sector are given as follows: The use of traditional techniques
    of farming hinders the optimization of both cost and time. Depletion of the topsoil
    due to floods and winds resulting in the deposition of the pollutants, sediments,
    nitrates, and phosphates, result in causing the eutrophication and the runoff
    of the soil. Planting the same crop after each harvest makes the soil redundant
    of the essential nutrients. Water scarcity due to the climatic changes lowers
    the level of groundwater for irrigation, thereby disturbing the water cycle. Global
    climate changes due to the destruction of the tropical forests and the other vegetative
    species in agriculture result in the elevation of the carbon dioxide and other
    greenhouse gas levels. Lack of expertise in proper recognition of the particular
    plant species. There is no proper method to detect the disease at early stages,
    such that precautionary measures could be taken to prevent it. Therefore, because
    of these factors, the need for the creation of modern methods and intensification
    of the agricultural practices to use water, soil, minerals, and other resources
    efficiently becomes obligatory. The nature of the technology and devices is changing
    i.e. it never settles for any less. A lot of research papers addressing the challenges
    of agriculture in the IoT domain have been put forth. Constant developments and
    everlasting expectations from the existing technologies paves a great way for
    motivating academicians and researchers to set and attain new standards. During
    recent years, there has been a paradigm shift in the study and application of
    domains like IoT, cloud computing, machine learning, and big data, etc. Therefore,
    from the trends of these data sets, a constant need is felt to revisit the current
    standings and capacities of the new age IoT concepts. The modern-day requirements
    and the counteractive substitutes in the field of agriculture and changes exactly
    to the expectations based on the concepts of IoT must be addressed. The contribution
    of IoT in the agriculture field and certain gaps in resource utilization motivated
    us to perform a study that addresses current issues and applications of IoT in
    agriculture. Agriculture is expected to get immensely fortified by the advancement
    of technology especially by the domain IoT. Precision agriculture is the new term
    appended to the agriculture filed, with all the procedures being followed, addressed,
    and simulated in a tech-driven manner. Incorporation of the internet has started
    to revolutionize this field by associating devices together, now being identified
    as the Internet of Things. Coined in 1999 by a British visionary “Kevin Ashton”,
    Internet of Things is a consortium of devices connected [7]. The devices are associated
    with internet via Wireless Sensor Networks (WSN), Radio-frequency Identification
    (RIFD), Near Field Communication (NFC), Long Term Evolution (LTE), and other devices
    and communication technologies. This association helps the devices and the other
    objects transfer the information gathered to destined places all over the network.
    Precision agriculture, therefore, aims to optimize and improve agricultural processes
    to ensure optimum production with reliable, fast, and distributed dimensions thus
    providing growers a detailed overview of the ongoing scenarios in the cultivation
    stretches. This practice is followed to reduce energy consumption. The major areas
    where IoT can leave an everlasting impression are climate monitoring [8], data
    analytics [9], early disease detection [10], crop counting [11], smart irrigation
    [12], etc. With the spread of a network of devices, a communication channel can
    be established between the farmers, fields, and experts. By developing IoT based
    models, the field conditions can be monitored remotely on regular time intervals
    without any human intervention and after analyzing the data favorable and efficient
    decisions can be taken accordingly. This will help to ensure both field and market
    safety and security to the farmer. Also, with early monitoring of crops, disease
    detection can be done and thus preventive measures can be taken to save the crop
    beforehand. For producers it will also help in the analysis of consumer demands.
    Whether the product will be able to meet market expectations, thus creating an
    intelligent decision driven farming. An analysis of different existing articles
    addressing the research and development of precision agriculture is presented
    in TABLE 2. TABLE 2 Alaysis of Various Papers in the Field of Precison Agricuture
    for the Current Study In this article based on research gaps and findings obtained
    from articles analyzed below, a systematic survey is done. Therefore in this study,
    the most prominent problems of the agriculture sector, and solutions provided
    by modern systems are addressed and discussed in detail. The major contributions
    of this study are as follows: A comprehensive survey of the architectural, conceptual,
    and implementation details of IoT models adopted for Precision Agriculture has
    been carried out. Various IoT hardware platforms and other associated devices
    like sensors, accumulators, etc. along with their role in agriculture have been
    discussed in brief. Various IoT OS supported for Precision Agriculture have been
    discussed. The significance and key differences of MIoT in agriculture have been
    discussed along with related studies. Studies limited to a specific domain has
    been merged together for clear mapping of the domain. Sensors and their role in
    agriculture is discussed. Various projects/ start-up’s started all over the globe
    for tacking agricultural problems and providing intelligent and sustainable solutions
    to farmers have also been discussed. Functional concepts like limitations, improvements,
    future works and applications are discussed separately. The rest of the paper
    has been organized as in Section 2 various search and source methods used for
    the selections of relevant articles has been introduced, in Section 3 to get into
    the deep insight of the various concepts, theories, and devices related to the
    implementation of Internet of Things has been discussed, followed by Section 4
    which gives the various related studies concerning different applications of Internet
    of Things in Agriculture, findings like challenges, limitations, improvements,
    future work, etc. with a short description of our proposed work has been given
    in Section 5, and finally, at last, the article ends with a conclusion. Table
    3 gives the detailed nomenclature used throughout this article. TABLE 3 Nomenclature
    SECTION II. Sources and Search Methods The research methodology consists of going
    through articles based on the contribution of IoT and its related technologies
    for the advancement and development of the agriculture filed. For designing the
    overall structure of this article, the data and selected studies are chosen strictly
    based on a time frame. Most of the articles taken for study are sorted from 2015
    to 2020. This time frame is chosen to visualize and understand the current impact
    of IoT in the field. In TABLE 4, a summary of the resources from where the papers
    have been selected is presented. TABLE 4 Summary of the E-Reserves for Obtaining
    the Related Research Articles Given the objective of this article, research has
    been conducted thoroughly by examining the existing literature work related to
    the subject. For developing a firm foundation, the articles containing the origin
    of IoT, alongside current standings, recent trends, and technologies, were considered
    for a study concerning their contributions to the field of agriculture. By reviewing
    the existing literature, a sustainable framework has been developed to overcome
    the existing challenges in the field. The keywords mainly used to identify the
    literature included Precision Agriculture, Agriculture, Plant Monitoring, Internet
    of Things, Smart Agriculture, Smart Farming, Irrigation, Plant Pathology, Wireless
    Sensor Networks, etc. The eight-year trends of the different terminologies and
    their search significance over the years have been extracted from Google and are
    presented in Fig. 2 and Fig. 3. FIGURE 2. Worldwide distribution of IoT of the
    past eight years [19]. Show All FIGURE 3. Precision Agriculture distribution worldwide
    of the past eight years [19]. Show All From the figures, it can be seen that the
    frequency of search or usage of these two terms is somewhat stable over the past
    eight years. An average, 80% of people talk and search about these topics for
    study and other related purposes, thus establishing the growing interest worldwide
    in this area. So for a better understanding, in the next section, the various
    terminologies related to the Internet of things concepts and devise have been
    discussed. SECTION III. Introduction to the Internet of Things (IoT) Concepts
    and Theories Inspired from the technology of the internet to connect the whole
    world, the Internet of Things constitutes of things possessing unique identities
    and are connected to the internet. A cosmos of sensors, actuators, appliances,
    and other devices connected with each over the internet, results in making the
    Internet of Things (IoT). The scope of IoT is not just limited to only connecting
    things but to allow them to communicate and exchange data. Based on the Electronic
    Devices and Network Annex-IEA-4E (EDNA), by 2020 the number of connected devices
    will rise to 50 billion, thus resulting in the generation of high revenue. IoT
    works in a layered manner depending upon the problem it is addressing. Therefore,
    it can be define that IoT possesses a layered architecture [20]. All these layers
    combined are called the IoT functional blocks. Apart from the functional blocks,
    various communication models that aid the smooth working of an IoT model are a
    request-response model, publish-subscribe, push-pull, and exclusive pair [20].
    Fig. 4 represents the reference architecture of IoT in agriculture and includes
    the following layers: device/physical layer, network layer, middleware layer,
    service layer, analytics layer, and end-user layer. The layered architecture includes
    all the hardware devices, facilities, equipment, internet, communication technologies,
    protocols, and data analytic algorithms. How the layers work along with each other
    is described below: Perception Layer: Also called physical or the device layer,
    this layer lies at the bottom of the architecture and constitutes of sensors,
    actuators, microcontrollers, gateways, routers, switches, hubs, etc. The main
    role of this layer is, how efficiently the sensing devices and the other equipment’s
    can work together to gather data. The microcontroller device acts as a controller
    as it performs all the networking ifunctionalities. The microcontroller also acts
    as a network regulating body as it regulates the networks, such that the sensors
    and other devices can collect data. The main aim of this layer is to capture data
    and transfer it to the other layer i.e., the higher abstraction layers. In terms
    of agriculture, the devices in the physical layer gather, soil, water, pH value,
    humidity, leaf wetness, and other data parameters. Also, the topology in which
    the devices are placed plays a major role in power consumption and efficient data
    collection in this layer. Network Layer: It comprises of internet and other communication
    technologies. The main aim of this layer is, how to achieve better communication
    in the platform. In terms of agriculture, the design of this layer plays an important
    role in a framework due to the selection of suitable communication technologies
    relevant to field size or the test bed size. LTE, CDMA, GSM, Wi-Fi, ZigBee, LoRa,
    NFC, UWB Bluetooth, and RIFD are some of the communication technologies used for
    agriculture purposes. ZigBee, LoRa, and NFC are the most used communication technologies
    employed depending upon the problem and the area to be addressed in the agro domain.
    NFC and Bluetooth are the most suitable for the greenhouses. Various protocols
    like HTTP, WWW, and SMTP serve for efficient communication in the agricultural
    scenarios. Middleware Layer: This layer in IoT architecture is accountable for
    device management, context awareness, interoperability, portability, and security-related
    responsibilities. In terms of agriculture scenarios, HYDRA, SMEPP act as best
    middleware due to their context-aware functionalities. Service Layer: Dealing
    with agricultural problems, cloud-assisted service layer in IoT layered architecture
    plays a prominent role in providing cloud storage and Software-as-a-Service (SaaS).
    To facilitate the function of sensing, actuation, and other activities, this layer
    focuses on some main areas or domains such as monitoring, detection, control,
    decision making, recognition, etc. The service layer offers services like device
    monitoring, control, discovery, and data publishing services. Analytics Layer:
    The layer is responsible for the processing and analysis of data. This layer works
    as a consortium of two steps- 1) Data ingestion, is the step that performs storage,
    cleansing, and streaming of data and the 2) Data analytics, which performs data
    reporting, mining, and learning. In the analytics layer various machine learning
    tools, data analytic algorithms are employed to give early predictive decisions
    for measuring the crop yield, crop growth, disease detection, etc. These decisions
    can enhance farm monitoring capacity. The predictive decisions can help in the
    design of better decision support systems. End-User Layer: Being the topmost layer
    of the model, it serves the consumer or the user. To provide the interface to
    the users to control and monitor their model, this layer allows them to view the
    system status, analyze or process the data. In agro models, the farmer is the
    end-user. This layer provides a user-friendly experience and platform to the farmers.
    The services or applications in this layer are designed based on the behavioral
    study and pattern analysis of the user. Various intelligent approaches and data
    analytic studies are employed to understand the behavior of the users, as they
    come with different needs and offer a lot of diversity. Social media, Cloud computing,
    Mobile messaging are the platforms used to provide services to users, experts,
    and industries. Through this layer, the whole IoT based platform can be monitored,
    controlled, and run. The services generated from this layer are mostly the link
    between the user and the systems/platforms. FIGURE 4. A layered ecosystem/architecture
    of Agro-IoT. Show All A. Multimedia Internet of Things (MIoT) in Agriculture Based
    on the working, nature of deployment, and the subject IoT concepts are used to
    address, traditional IoT is differentiated into various forms such as IoMT, MIoT,
    IIoT, etc. Without the inclusion of these concepts, IoT systems cannot successfully
    realize the concept of ubiquitous computing. In these paradigms, the interaction
    and cooperation between the heterogeneous devices is facilitated. Due to the increase
    in the number, diversity of devices and data with time, these concepts have become
    more functional and prominent to develop models and techniques for coming challenges
    and reflect the possibilities enabled in them. All these concepts have the same
    main character of availability, intelligence, and devices but they only differ
    in their due course of action i.e., their general usage. Being an allied branch
    or extension of IoT, MIoT, include smart objects that are usually resource-constrained,
    in terms of memory, energy, and processing power. Due to the progressive reduction
    in size and cost of production of these devices, MIoT models are expected to be
    developed and deployed on a large scale. Generally, the sensors of these models
    are usually designed to be battery operated or solar power operated. Due to the
    large data sensing and analysis, these devices require high computational power.
    Mostly, the multimedia data includes audio, video, and image data, which possess
    unstructured features and is difficult to transmit and analyze on a computationally
    scarce network and low bandwidth conditions. Multimedia data shows different behavior
    compared to the scalar data due to its computational complexity and network topology
    bottlenecks to the Quality of Service (QoS). A lot of work has been done in IoT
    and its allied fields to realize the concept of heterogeneous, low-level data
    transmission, and communication. In agricultural frameworks, the data is mostly
    in the visual form e.g., pest images, plant disease images, field images, etc.
    The characteristic difference in scalar and multimedia data is shown in Fig. 5.
    FIGURE 5. Key characteristic differences between IoT and MIoT data [25]. Show
    All Depending upon the various parameters there are key differences between IoT
    and MIoT and they are discussed as: The IoT systems work mostly on non-heterogeneous
    devices while the MIoT functions well in case of heterogeneity. IoT data is mostly
    scalar, however, MIoT considers the multimedia data. Traditional IoT networks
    does not take into consideration the concept QoS while transmission and communication
    whereas in case of MIoT, QoS and QoE play a major role as the prime parameters.
    IoT can function well over low bandwidth channels whereas MIoT networks are in
    demand of high bandwidth due to bulky data. Node operation is predefined in IoT
    whereas in MIoT the node operation is adaptive in nature. Various authors have
    worked on the implementation of concepts of MIoT for agriculture. Zhang et al.
    [21], worked on the concept of preserving the concept of data confidentiality
    while realizing the challenge of low-cost data acquisition. A measurement matrix
    under the control of chaos and random subsampling is employed to capture the ruptured
    image signals. Then these sampled sub-images are assembled to form a big master
    image and then encrypted based on android transform and single value diffusion.
    Correlation, histogram, keyspace, robustness, real-time, and entropy analysis
    are performed to understand and realize the concept of low-level transmission.
    Rani et al. [22], worked on the concept of bridging the gap between the scalar
    and multimedia data, and for this, they developed an IoMT cross-layer protocol.
    This protocol considered cross-communication between the physical, data link,
    and routing layers. The main objective of this work was to achieve energy-efficient
    communication with less computational time complexity. An optimal mathematical
    model was developed to study the cross-layer behavior in all the three layers,
    therefore selecting the efficient one. A comparative study was conducted on two
    parameters like delay and distance. Usman et al. [23], proposed a multilayer framework
    based on multilevel edge computing architecture to manage, and preserve the privacy
    of end devices from external attacks. Authors mainly focused on the three major
    challenges i.e., node management, privacy-preserving, and network protection.
    The proposed architecture is divided into three layers with the first layer comprising
    of underlying network partitioned into multiple clusters to manage end-devices
    and Level-One Edge Devices (LOEDs). In the second layer, the LOEDs apply an efficient
    aggregation technique to reduce the volumes of generated data and preserve the
    privacy of end-devices. Local differential privacy-based technique is applied
    to protect the privacy of sensitive information in aggregated data. In the last
    layer, the mobile sinks are registered with a level-two edge device via a handshaking
    mechanism to protect the underlying network from external threats. Floris and
    Atzori [24], addressed the issue of evaluation of Quality of Experience (QoE)
    for IoT applications where mostly multimedia data is involved. For designing a
    layered architecture, authors first tried to analyze the QoE parameters or factors
    with applications in the relevant scenarios. Then a layered multimedia IoT architecture
    was proposed for QoE analysis by combing each of the analytic and contributing
    factors. Zikria et al. [25], presented a brief overview of the MIoT along with
    its challenges, solutions and future opportunities. The authors discussed the
    data differences between the traditional IoT and MIoT, along with the role of
    communication technologies. The demand for realizing the dream of MIoT and its
    bottlenecks were also discussed. The challenge of data collection and its impact
    over the network traffic is also discussed along with the methodologies developed
    to solve it. Nauman et al. [26], presented a comprehensive survey on the multimedia
    internet of things. Authors discussed the existing role of MIoT in concern with
    various fields like medical, agriculture, automation, and industry, etc. The importance
    of QoE and QoS for multimedia transmission over IoT channels is also discussed.
    A better need for routing and Physical-Medium Access Control (PHY-MAC) protocols
    for M-IoT was also discussed. A potential discussion on open research issues related
    to multimedia communication in IoT was presented. Alsamhi et al. [27], presented
    a survey on the role of green IoT in greener and smart cities. The authors focused
    on how the environment pollution can be controlled along with other parameters
    for making living more sustainable and green with the aid of IoT concepts. AlSkaif
    et al. [28], presented a survey on the energy efficiency of MAC protocols in low
    data rate wireless multimedia sensors. The conflicting goals of WMSN were also
    discussed. Role and challenges of multimedia data were also discussed. A focused
    analysis was performed on network parameter constraints and what techniques are
    employed to solve them. A comparison of the energy consumption of MAC protocols
    in four selected application scenarios related to smart cities and environment
    monitoring was also presented. Libo et al. [29], worked on how with the use of
    multimedia data in the form of images can be employed to detect the plant diseases.
    Rape diseases were studied as a case study. Authors also discussed the challenges
    and bottlenecks faced for the transfer of multimedia data over low bandwidth channels.
    With machine intelligence, authors also proposed a diagnostic procedure via which
    the data can be transferred over wireless multimedia sensors networks. Psannis
    et al. [30], proposed a technique for the transfer of advanced media-based smart
    big data via intelligent systems. Authors in their work addressed the problem
    of the rapid rise of devices and heterogeneity. An encoding algorithm with HVEC
    standard for performance evaluation was proposed to transfer the data intelligently.
    B. Hardware Platforms for IoT The hardware platform for IoT comprises a set of
    compatible hardware capable of running certain software. The main components of
    a hardware platform are machine language, sensors, wireless devices, programs,
    and processors, protocols, etc. The processor in a hardware platform determines
    how much fast a framework can work. To design certain new methodologies in IoT,
    various hardware platforms supported are elaborated as: 1) Raspberry Pi It is
    a series of single-board computers developed in the UK by Raspberry foundation.
    There are various families of raspberry i.e., Raspberry Pi 1, Raspberry Pi 2,
    Raspberry Pi 3, Raspberry Pi Zero, Raspberry Pi 4. All these families have different
    models. The Broadcom processor is used in most of the boards. It acts more like
    a computer system and can do multitasking [31]. 2) Arduino Uno Developed by Arduino.cc,
    it is a microcontroller board and is based on the ATMega32 processor. Arduino
    Uno possessing a USB port is a very valuable addition to the family of microcontrollers.
    Various versions of Arduino like Arduino Uno, Arduino Due, Arduino Leonardo, and
    Arduino Mega are present in the market. Out of these the most common versions
    are Arduino Uno and Arduino Mega [32]. 3) Node MCU It is an open-source IoT platform.
    It generally refers to firmware rather than the development kits. It is a low-cost
    open-source kit/module developed for the ESP8266 Wi-Fi chip. It is developed in
    the Arduino IDE environment [33]. 4) Beaglebone Developed by Texas Instruments,
    it is a low-cost open-source single-board computer. Its size measures 75 by 75
    mm and possesses all the functionality of a basic computer. It requires 2W of
    power or a 5V separate power and can work smoothly without any cooling or sinks
    [34], [35]. 5) Banana Pi It is a low-cost credit-card-sized single-board computer
    developed by a Chinese company Shenzhen SINOVOIP Co. Ltd. The hardware design
    is hugely influenced by Raspberry Pi. It is compatible with Raspberry Pi boards
    as well. It can be developed both on Android and Linux [36]. The various hardware
    platforms of IoT with their functional specifications are given in TABLE 5. TABLE
    5 Hardware Platforms of IoT and Their Specifications C. IoT Operating System (IoT
    OS) for Agriculture IoT operating system (IoT OS) is an operating system designed
    to perform within the constraints particular to Internet of Things devices. IoT
    OS are designed and developed in such a way that it can function under the restrictions
    of memory, size, power and processing capability. The main aim of IoT OS is to
    enable successful data transfer over the network via internet. The IoT OS for
    a particular framework is not chosen at random. Certain parameters such as footprint,
    scalability, portability, modularity, connectivity, and reliability are taken
    into consideration. As per the requirement of agriculture, a huge number of devices
    are connected having different features and also the devices have to withstand
    the different environments, the OS then to be chosen must be scalable, cost-efficient,
    and reliable. Various studies have been put forward for the role of IoT OS in
    network management and overall communication. Javed et al. [37], provided a detailed
    reviewed comparison of the operating systems designed for IoT devices based on
    their architecture, scheduling methods, networking technologies, programming models,
    power, and memory management methods, along with other features required for IoT
    OS applications. Musaddiq et al. [38], studied the role of small IoTOS in powering
    the scarce network devices. Authors also put light on the energy consumption of
    these devices. A detailed discussion on IoT devices and resource management is
    provided and some state of art IoT OSs such as Contiki, TinyOS, and FreeRTOS are
    also investigated. Baccelli et al. [39], a comprehensive review of RIOT is provided.
    The key components highlighted in this study are the kernel, hardware abstraction,
    software modularity for various configurations. The authors also discussed the
    operational aspects like system boot-up, timers, power management, and networking
    along with the relevant APIs. Zikria et al. [40], proposed a study for the management,
    challenges, and opportunities of IoT OS in managing IoT systems. The authors discussed
    the issue of interoperability, protocol functionalities to support heterogeneous
    deployment scenarios. Supported hardware and future research trends are also discussed.
    Ain et al. [41], proposed an efficient and flexible decision-making system for
    maintaining user thermal comfort with the help of intelligent sensors. Fuzzy based
    approach along with RIOT OS was developed to tackle the problem of fluctuation
    and adjustment. Results show that the proposed approach can perform 28% better
    than the existing approaches in terms of energy efficiency. Stergiou et al. [42],
    studied the transfer of metadata in the IoT networks. Authors discussed the techniques
    and open tools such as CC analyzers and simulators which can provide intelligent
    metadata transfer over a network. The experimentation was performed on CloudSim
    and Cooja emulator of Contiki OS for the testing of a single network segment.
    From the experimentation, it was found that no duplicate packet transfer occurred
    which is a good sign for multimedia data transmission. The various IoT OS with
    their functional specifications are presented in TABLE 6. TABLE 6 IoT OS Platforms
    in Agriculture and Their Specifications D. Sensors and Their Role in Agriculture
    Sensors are the devices, modules, machines or subsystems capable of detecting
    the changes or events in the environment. They also send signals back to the receiver
    end. Mostly the sensors are used with other electronics. A sensors sensitivity
    usually indicates how much change in sensor output occurs with respect to the
    change in the input quantity measurements. Most sensors possess the linear transfer
    function. The sensitivity of a sensor is defined as the ratio between the output
    signal and the measured property. The resolution of a sensor is the smallest change
    it can detect in the quantity it is measuring. In the area of agriculture, demand
    of technological solutions with high aim in rising production and quality is increasing
    day by day. Also the solutions are required which provide optimal analysis and
    sustainable methods for the field development with reduced cost and time. To sustain
    such challenges, sensor- based technologies have proven to be of much help to
    tackle the above issues and challenges. Precision agriculture is an emerging area
    where sensor based technologies are playing a major role. Since the sensors are
    a major data collection agents, they play a dynamic role in agriculture. Also,
    it is very difficult to collect the data from an agricultural field due to the
    undulating field conditions that keep on changing over time. Sensors are selected
    or designed according the problem to be addressed or needs identified by the farmers.
    Agriculturalists generally use sensors to sense the soil conditions, humidity,
    crop conditions, minerals, pH value, water levels, and sunlight, etc. The nature
    and the characteristics of the component which needs to be sensed also plays a
    major role in the development of a sensing device. With the development of technology,
    machinery and easy-to-use microcontroller platforms, the usage of sensors has
    expanded beyond the traditional fields of measurement i.e., temperature, pressure
    and flow. However, the analog sensors such as potentiometers and force sensing
    resistors are still widely in use. Pajares et al. [54], discussed the sensors
    in agriculture and forestry. In the article, various related works of the sensors
    performed by different authors in the same domain were presented. The role and
    importance of the component or substance which needs to be sensed was discussed
    along with their characteristics and specifications. The major areas focused by
    authors were soil analysis, seed growth, weed detection, forest stands and reflectance,
    machinery for effective treatments, microorganisms, pest control, seedling breeding,
    growing, state of health, positioning, navigation, safety, detection and classification.
    Zhu et al. [55], showed that LIDAR, IMU, and Encoder (x2) can be used for designing
    a prototype vehicle for the agricultural domain. The authors also discussed how
    these sensors can be used for the development and usage of that prototype in case
    of undulating surfaces and rough terrains. A complete review of the wireless sensors
    and the network applications used in agriculture is provided. The authors also
    addressed the importance of sensors in the field of agriculture. Along with the
    sensors, the communication technologies that support sensor communications are
    also mentioned by Rehman et al. [56]. The sensors used in the medical and agricultural
    fields have also been discussed. In the case of the agricultural field, the various
    conditions and circumstances affecting the data collection from sensors are addressed.
    The various types of sensors and their platforms used by different authors in
    their work are also included by Chokkareddy et al. [57]. Plageras et al. [58],
    used efficient IoT based sensor and big data analytics for secure collection of
    data and communication over a channel. In the study, smart housing or building
    was taken as case study, and the secure data collection with the sensors was performed
    and analyzed. The behavior of various sensors for data collection in different
    scenarios in terms of IoT and cloud computing was studied by Stergiou et al. [59].
    The secure communication among devices was also studied along with performance
    bottlenecks and challenges. The various sensors and their use in agriculture is
    discussed below: 1) Level Sensors They measure the substance of liquid in a cast.
    The cast can be any agricultural field, pond, water tank, etc. They measure data
    in two methodologies 1) Point level measurements: indicate only whether the constituent
    or level measured is above or below the sensing point or threshold. 2) Continuous
    measurements: specific range measurements and exact substance amount determination
    are performed by these sensors. In agricultural fields, the water level sensors,
    humidity sensors, and moisture sensors are used to measure the water content levels
    in a field. The point level sensors are used when the water content in the cast
    i.e., soil or testbed is very less i.e. in dry and arid areas, whereas the continuous
    level sensors are feasible for semi-arid locations. Some of the ultrasonic level
    sensors are also used in water treatment plants. Blank et al. [60], designed a
    low-level senor based fusion application for agricultural machinery design. 2)
    Temperature Sensor Temperature sensors measure the temperature of the environment
    or surroundings. They are of different types i.e. thermistors, thermocouples,
    resistance temperature detectors, infrared sensors, semiconductor sensors. In
    agriculture they measure the temperature variants in a field. Mahan et al. [61]
    designed an optimal temperature based field monitoring system by using a low-cost
    infrared sensor. 3) Proximity Sensors Detect the presence of nearby objects without
    any physical intervention. The sensor works by emitting an electromagnetic beam
    in the field and looks for any alterations in the signal. These are mainly employed
    in agricultural cattle grazing, counting of fruits, etc. Kim et al. [62] used
    a capacitive proximity sensor to optimize the harvest yield of fields. 4) Infrared
    Sensors Senses the changes in the environment by emitting infrared rays. They
    work in two approaches i.e., active and passive. An active IR sensor can both
    emit and detect the radiations and constitute a light-emitting diode and a receiver.
    The passive IR sensors can only detect the radiation and possess only a LED. In
    agriculture field infrared sensors can be employed to detect the presence of rodents
    in the orchards, count the number of plants or trees in the field, capturing satellite
    images of the field. Allred et al. [63], used IR sensor-based satellite imagery
    to map the findings and results of UAV to chart agricultural drainage systems.
    5) Touch Sensors Also known as tactile sensors, work on sensing the touch. They
    are low-cost sensors. In the agriculture field they can be used for the detection
    of intrusions in the field. Depending on the target and the range, there are different
    types of sensors, the same are discussed in Fig. 6 and TABLE 7 below: TABLE 7
    Sensors Based on Their Fields of Application FIGURE 6. Sensors and their types.
    Show All SECTION IV. Related Work The advancement and role of the Internet of
    Things in precision agriculture along with the related areas where research is
    being conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections. Various studies are performed and put forward by various
    academicians and authors concerning the evolution of agriculture relating to the
    incubation of the concepts of the Internet of Things. Kim et al. [64], reviewed
    different articles related to the induction of unmanned aerial vehicles in agriculture.
    The authors highlighted the recent trends, controls, perspectives, and platforms
    of UAV for agriculture. The study focused on what are the different platforms
    used for UAV and how those platforms can be designed. The hardware components
    related to the design of UAVs were also discussed. Sensor types compatible with
    platforms such as fixed-wing, helicopter, quadcopter, etc. were also discussed.
    A study on critical technologies for communication, modeling, and control was
    also presented. Various applications of UAVs in crop monitoring, spraying, and
    mapping, etc. were also presented. The authors concluded their study by providing
    the data on the latest technology trends and applications of UAVs in agriculture.
    Ayaz et al. [65], studied the latest trends and technologies in the field of agriculture.
    The potential sensors, IoT devices, communication techniques, used for soil, crop
    irrigation, insect, pest analysis were studied and discussed. Also, how this technology
    is redefining the agriculture system and boosting farmers to work, is portrayed.
    Authors studied the recent developments of IoT and how it is helping in providing
    the solutions while designing an IoT system for agriculture, what strategies and
    policies need to be considered. The advanced agricultural practices such as greenhouses,
    vertical farming, hydroponic farming, and phenotyping are also explained. All
    the crop stages and potential challenges are also discussed. Farooq et al. [66],
    presented many aspects of IoT in agriculture. Authors discussed all the recent
    technologies associated with IoT along with big data analytics for the development
    of precision agriculture systems. Various network topologies, architectures, layers,
    and protocols are also presented. In context to the development of a smart farm,
    all the major components and relevant technologies were discussed. Also, the regulations,
    standardizations, and policies used by several countries to standardize IoT methods
    for agriculture have been discussed. Elijah et al. [67], gave an overview of IoT
    and data analytics technologies and practices in agriculture. The authors divided
    their study into four sections i.e., communication technology, internet, data
    storage, technology. The authors also provided an analysis and data on how the
    aforementioned sections can be employed for dealing with the diminishing agricultural
    resources. The pros and cons of various technologies such as cloud computing,
    WSN, radio frequency identification, middleware systems, etc. to their application
    in the agriculture field are also discussed. Studies on how these technologies
    can be used to develop an IoT ecosystem, with technical and business scenarios
    were also presented. Misra et al. [68], discussed the concepts and role of IoT,
    AI and big data in the field of agriculture. In the review, focus was laid on
    green- house monitoring, disease detection, usage UAV machines and drones agriculture
    and supply chain modernization, social media in food industry, food quality assessment
    and modernization for food traceability. Thakur et al. [69], reviewed articles
    of repute in the context of the employability of WSN in agriculture. The authors
    highlighted the different communication technologies and WSN technologies adopted
    for precision agriculture. The authors also discussed various sensors and their
    role in agriculture. The influence of various techniques for designing the models
    is also discussed at length. Damos [70], presented a review on the pest control
    in precision agriculture. The author discussed the various computer-aided technologies
    employed for forecasting and designing decision support systems. The challenges
    and constraints of designing the decision support system were highlighted. The
    most available and published data present online in terms of pest management was
    also discussed. A differentiation between the documented and existing decision
    support systems was highlighted. The advancement and role of the internet of things
    in precision agriculture along with the related areas where research is being
    conducted are discussed in this section. Literature including various approaches,
    techniques, and methodologies presented by the number of authors has been divided
    into different sections and are discussed as follows: A. IoT in Farm Management
    Farm management refers to the construction and implementation of decisions for
    obtaining the maximum production and profit via organizational operation of decisions.
    This area is most benefitted by automation and the implementation of new technological
    methods. With farm management agricultural practices are made informative by evaluation
    and comparison with the other developed approaches and methods. Diedrichs et al.
    [71], with the aid of machine learning and IoT sensing devices, predicted the
    occurrence of frost events. Authors designed their system based on three layers
    i.e., a group of internet-enabled devices for water data collection. The authors
    augmented the data using the synthetic minority oversampling technique due to
    its capability of reducing the occurrence of errors with the ML approaches. The
    humidity and temperature sensors were employed to collect data from five meteorological
    stations of the Mendoza Province of Argentina. For each station, the existing
    sensor data spanning from a period 2001 to 2016 was taken as a reference to collect
    the daily data. The data was divided into two sets i.e., locally available is
    the config-local and the one available globally is the config-all. Bayesian Networks
    were employed along with SMOTE and recursive portioning, to train the system.
    Jawad et al. [72], designed a wireless power transfer technology based on a drone
    charging system for smart agriculture. The authors used the concepts of magnetic
    resonator coupling and sleep/active modes of charge transfer system for designing
    the model. Authors mainly focused on how to charge wirelessly the drones and other
    equipment employed in agricultural field monitoring. The magnetic resonant coupling
    technique was considered due to its capability of high power transfer and efficiency.
    In the experimentation, authors found that the FSC coil with 150 coil turns in
    the transmitter circuit and the MTC comprising of 60 coil turns in the receiver
    (i.e. drone) accomplish the maximum transfer power and efficiency. For finding
    the accurate efficiency, the model was tested based on different load, and how
    to load misalignment changes the model behavior was also noted. Drone flight time
    was also taken into consideration and was estimated based on the adopted battery
    capacity and payload of the drone. Tseng et al. [73], proposed an intelligent
    IoT based platform for farm management. The authors took the data based on different
    plants i.e., beans, spinach, celery via sensors, and used 3D normalization on
    that data to extract the optimal/useful data. The average and variance were moved
    to obtain user data without making any visible changes in the actual data. Farmer’s
    behavior was analyzed for the application of pesticides and fertilizers. For the
    platform development SIM5320E, IoT Development Board is used along with the BH1750
    illumination sensor and BME280 temperature and moisture sensor. Bacco et al. [74],
    designed a model based on air-ground UAV communications for smart farming. Authors
    empirically and analytically developed a real test-bed implementation of IEEE
    802.15.4 based communication between unmanned aerial vehicle and ground sensors.
    The focus was laid on how to transfer data between sensors and other devices present
    on the ground in an optimized manner to ensure fewer transmission losses. From
    the experimentation, and result analysis authors found the Gilbert-Elliot model
    to be suitable to approximate the packet loss in the link at low transmission
    speeds. The authors used approximately 80,000 datasets from the testbed. Ahmed
    et al. [75], based on the concepts of fog computing and Wi-Fi-based long-distance
    networks proposed a system for smart monitoring. In comparison to the existing
    traditional models, a scalable and flexible model was designed for monitoring
    and controlling agro farms in rural areas. Authors introduced a WiLD network and
    fog computing in the existing WSN-based solutions to cover long ranges with fewer
    delays. A cross-layer based MAC and routing solution for sensing and actuating
    were proposed to reduce the network latency. Throughput, coverage range, and network
    latency of the network structure were analyzed. Liu et al. [76], by hybridizing
    the concepts of IoT, cloud computing, and data mining proposed an integrated framework
    for the agricultural field. China was considered as the territory to design and
    devise mechanisms to enhance modern agriculture as compared to the conventional
    one. Quality, safety, management, and pollution are were taken into consideration
    while designing the model. NoSql database, DynamoDB, relational database Oracle,
    and file object storage Amazon S3, were employed to provide the hybrid data storage
    design. Bai et al. [77], due to the issue of frequently changing environmental
    conditions addressed the issue of estimation and control in the greenhouse. The
    authors studied how to collaboratively deploy WSNs and actuator schemes for agriculture.
    Sensor nodes were used to conduct a local estimation with Kalman filters to enhance
    the stability and transmission of data ensuring energy optimization. Using the
    concepts of collective clustering and mutual effect, the actuator node based scheme
    is designed for the improvement of estimation speed and conversion accuracy. Parameter
    optimization is achieved through fuzzy neural networks along with the PID control
    algorithm. Jinbo et al. [78], performed research on developing a platform for
    the monitoring of a field with agricultural modernization. A system named DEMO
    was proposed by using the SpringMVC framework, MyBatis, Spring Data DynamoDB Stored
    Procedure, Paho, and other related technologies grounded on the J2EE platform.
    Open-source elements such as raspberry, IoT gateway integrated with the ZigBee
    module were used for the development of the platform and were chosen due to their
    stable and cost-efficient properties. The proposed system is capable of massive
    data processing and analysis for agricultural monitoring. RESTful interface service
    system developed on a cloud platform, ExtJs client technology, and WeChat were
    applied to develop the Demo system of an application layer. Mukherjee et al. [79],
    worked on the challenges of a decentralized and heterogeneous UAV swarm deployment.
    The work is focused on how to design and deploy a UAV in resource-constrained,
    harsh, and challenging environments. Swarm edge due to its heterogeneous nature
    and unequal data generation within its member’s results in under-utilization of
    the available computational resources. To solve this issue, the authors proposed
    a Nash bargaining-based weighted intra edge processing offload scheme which can
    reduce the problem of heavy processing in some swarm members. The proposed method
    achieves better scalability and reduced processing delays. Chen et al. [80], developed
    an IoT based inexpensive platform named ‘AgriTalk’ for precision soil farming.
    Turmeric plant was considered for cultivation and experiments were conducted to
    enhance its growth and production. Authors employed AgriTalk in developing several
    other IoT based models for the fields of Mountain Bao in Taiwan. For the study
    authors grew turmeric in three fields. The proposed model is capable of addressing
    dynamic changes in the field conditions for plants grown via in-soil cultivation.
    Automated devices like sensors, actuators with desired farming intelligence were
    employed to design the model. Manual delays for automatic control and switching
    over long distances were also addressed. From experim-entation it was found that
    the curcumin concentration in turmeric leaves after six months was elevated to
    6685.6 μM as compared to 72.1 μM thus witnessing a fivefold increase. Lopez et
    al. [81], proposed a smart system for estimation of soil parameters using an autonomous
    wireless sensor network. Phosphorus content in the soil was measured. For power
    optimization and maintaining a balance between change rate phenomena of soil throughout
    the day for phosphorous estimation, authors developed a dynamic power management
    approach. DPM was tested on both the circuit level and the system level. ANN was
    used to find the significant correlations between the soil parameters such as
    electrical conductivity, phosphorous, temperature, and humidity. Also, energy
    harvesting with the help of IoT and cloud services is proposed. Chen and Yang
    [82], provided a detailed analysis of how efficiently the systems can be developed
    for agriculture based on the techniques of data visualization, clustering, etc.
    The authors studied the significance of various parameters in the same environment
    and effects. For the promotion of efficient development of agriculture, the authors
    proved that data visualization and cluster analysis pave a way for finding the
    key technologies to be applied in modern agriculture. For time and cost optimization,
    functions such as sensing, monitoring, identification, transmission, and feedback
    can be realized using IOT platforms and they can serve as an impetus for intelligent
    agriculture. To test and develop their methodology, authors took the agriculture
    situation in the Jhinsa river basin which lies in the upper reaches of the Yangtze
    River as a testbed. This area has become the most abundant area of biological
    communities in Eurasia. For the study, the authors collected precipitation and
    temperature data. Since data was large, k-means clustering is used to analyze
    the data. Leng et al. [83], presented a study for the application of IoT in agricultural
    products supply chain management. Authors discussed in length what to take into
    consideration, while designing a structural model for the supply chain management.
    RIFD technology was considered as the key constituent for designing the model.
    Pereira et al. [84], based on the concepts of IoT developed an instrument capable
    of performing environment monitoring in a poultry farm. The authors focused on
    designing a cost efficient prototype for the poultry monitoring which provides
    affordable benefits compared to the commercial products available in the market.
    DHT22 sensors were used to collect air pressure and temperature details and CPU
    such as Wemos Mini D1with chipset ESP-8266EXwith standard Wi-Fi 2.4 Ghz connectivity
    were used to calibrate the whole model. Singh et al. [85], developed a cloud based
    autonomic system for delivering agriculture as a service via web and mobile based
    applications. For data collection IoT and other devices were used for communication
    and coordination. Fuzzy logic was used to automatically analyze agriculture. An
    architecture named Agri-info was developed to provide user services. Kolipaka
    [86], proposed a predictive analysis using cross media references for precision
    farming. Authors focused on the usage of sensors and MEMS integrated IoT for precision
    farming. The crop growth parameters such as soil state, water, weed state, crop
    quality and seed quality were also discussed. ML and big data approaches were
    applied to perform predictive analysis and thus finding method to provide optimal
    solutions to farmers. Further based upon the certain characteristics we have tabularized
    the major findings in TABLE 8. TABLE 8 Summary of Developed Methods for Farm Management
    B. IoT in Irrigation Irrigation is the method of application of controlled water
    to the farming fields, at needed intervals. Irrigation has been a constant area
    where a lot of energy, money, and labor is invested in the case of farming. Detection
    and knowledge of water level can reduce the cost of production by half. For increasing
    crop yield, smart irrigation management is essential. Various optimized and precise
    methods have been developed by various academicians. Klein et al. [96], with the
    help of satellite images, worked on the implementation of closed-loop irrigation.
    The authors designed a real-time water requirement system, which can optimize
    water delivery for 140 cells located in four hectares of land. Vegetative indexes
    were calculated for analyzing the total water consumption and how via loops this
    facility can be automated. Through this study and experimentation it was found
    that with the integration of closed-loop strategy and advanced water analysis,
    the overall water consumption efficiency can be improved. Alahi et al. [97], extended
    research to design and develop a smart nitrate monitoring system for the monitoring
    nitrate content in the surface and groundwater. The authors proposed a portable
    sensing system with the help of a planar inter-digital sensor, associated electronics,
    instrumentation, and electrochemical impedance spectroscopy-based analysis. Through
    real-time monitoring and sending data directly to the IoT web server, the proposed
    system possesses the capacity to monitor the impact of industrial, urban, and
    agricultural activity on water content and quality. The system also ensures distributed
    monitoring. Daskalakis et al. [98], used leaf sensing technology instead of ground
    soil monitoring for knowing the plant water stress. The authors proposed a low
    cost and low power consumption leaf moisture sensing model by sensing the leaves
    with the new plant backscatter sensor node/tag. The developed tag collects the
    information from a leaf via analog and digital conversions and then the data is
    transferred via remote communication to a low-cost software-defined radio reader
    using monostatic backscatter architecture. The data collected from this node is
    then connected to the irrigation system. The proposed system is powered by a flexible
    solar panel. Jayalakshmi and Gomathi [99], proposed a sensor-cloud based precision
    agriculture for intelligent water management, to enhance crop production. For
    the model design, moisture and stress levels of different plant organs were considered
    along with the behavior vegetative and reproductive organs cell growth, and its
    effects on the water requirement were studied. The dimensionality reduction technique
    was employed to choose the optimal parameters. For the case study, the wheat plant
    was taken. The effect of soil temperature and water suction rate was studied in
    the case of the plant growth. The non-adsorbing testbed was prepared by exploding
    the sand grains at high temperatures. With the aid of WSN, it was monitored when
    the plant needs to be irrigated. Angelopoulos et al. [100], developed a small
    scale smart irrigation prototype for a strawberry greenhouse. The prototype possesses
    off the shelf hardware and software requirements and was tested on large farms
    having multiple crops to get a data gain. The reference architecture also targets
    edge data distribution. The model was tested in Greece and its performance was
    compared against the traditional existing strawberry greenhouse methods for irrigation.
    Compared to the cloud-based approaches, and their incompetence to handle network
    traffic, security challenges, and data sharing with the third party, this model
    is secure and reliable and can handle large datasets. Dominguez-Nino et al. [101],
    worked on how to integrate sensors for developing automated software tools to
    undertake the routine tasks and decision-making involved in scheduling irrigation.
    The authors also focused on the suitability of capacitance approach soil moisture
    sensors and how to automatically interpret them and providing feedback to the
    scheduling algorithm. The proposed approach was tested in the apple orchards located
    at the IRTA-Lleida Experimental Station in Mollerussa, Lleida, Spain. For the
    study, both the physiological and agronomic properties were taken into consideration
    while experimentation. Krishnan et al. [102], designed an automated irrigation
    method. The authors developed a fuzzy logic-based system for precision irrigation
    by using Global System for Mobile Communication (GSM) service to enable farmers
    to water the fields. Soil and temperature, humidity, and motor status parameters
    were monitored and taken for the study. For the efficiency evaluation of the system,
    a comparison was done between the proposed system, drip irrigation, and manual
    flooding. Harun et al. [103], designed an environment-friendly system named “Greenhouse
    Irrigation Management System” for precision irrigation in agriculture. Some critical
    environmental parameters such as soil moisture, pH, temperature, humidity are
    measured with the use of WSNs to make decisions. The sensors measure the data
    and based on certain threshold value result, the fields are irrigated. Olivo [104],
    focused on the problems associated with device growth and its effects on the control
    decisions. To address this issue, an architecture named “Rules Engine and Context
    Event Processor (RECEP)” is proposed for the dynamic processing of events originated
    in the context of IoT and PA. In this model the concept if optimization was used
    to optimize the resources to increase agricultural production. The experimental
    setup was set in a banana field located in Machala-Ecuador. The given model was
    designed for operating in low-cost infrastructures for both small and large producers.
    Marcelino et al. [105], based on the work and issues of small family farmers,
    proposed a low-cost system for control, monitoring, and automation of agricultural
    greenhouse. The proposed model was designed by prototyping Raspberry Pi and Arduino
    along with sensors. Temperature, humidity, and light sensors are used for the
    field data collection. The web human interface was developed for interaction between
    the system and the farmers. Koksal and Tekinerdogan [106], developed an automatic
    farm management information system capable of performing data acquisition, processing,
    monitoring, planning, and decision making and managing the farm fields. The authors
    tested their models on two case studies on smart farming in Turkey, one for smart
    wheat in Konya and other greenhouses in Antalya. The feature-driven domain analysis
    model is designed based on IoT reference architectures and data modeling approaches.
    The system was capable of performing all farming related functions, such as irrigation,
    crop monitoring, etc. Hate et al. [107], designed a vegetable traceability system
    with smart irrigation. The field parameters like soil moisture, humidity, water
    supply control, and temperature of particular farmland are monitored with sensors
    such as water level, humidity, soil moisture, and temperature sensors. With IoT,
    the cost is reduced and efficiency is improved. Agale and Gaikwad [108], focused
    on the problem of water reduction in farmlands. An IoT based automatic system
    is designed to collect, analyze, and monitor the real-time sensor data every 10
    seconds from soil and environment and provide irrigation solutions based on that.
    The parameters like temperature, humidity, soil moisture were considered for data
    collection. The proposed method achieved 92.24 % accuracy in water-saving strategy.
    Huan et al. [109], designed a system for monitoring of water in aquaculture ponds.
    To design the system authors used the concept of narrowband IoT (NB-IoT). The
    system used STM32L151C8 microcontroller, sensors and other devices for real time
    data collection and other services. The system was implemented and tested in ChangZhou,
    JiangSu Province, China and performed with low error rate. Vij et al. [110], developed
    a smart precision irrigation system based on the concepts of IoT and machine learning.
    The main aim of authors was to develop a computationally efficient and low cost
    system. Raspberry Pi and Arduino Mega 3 were used as microcontroller and other
    sensors were used to fabricate the system. Compared to the existing systems, the
    proposed system is computationally efficient. The various findings of this section
    have been tabularized in TABLE 9. TABLE 9 Summary of IoT Based Developed Methods
    for Irrigation C. IoT in Crop Monitoring Crop monitoring is the process or method
    of observing the farm fields and crops for enhancing productivity and reducing
    cost. This can be performed with satellites, drones, sensors, and other methods.
    Vegetative indexes of an area can also play a major role in crop monitoring by
    providing the data related to the exact area of land under cultivation etc. With
    crop monitoring the estimated time of harvest can be predicted. de Souza et al.
    [118], proposed an integrated framework with the combination of hardware, software,
    middleware, and other equipment to monitor the testbed. The authors also recorded
    the testing of each equipment in the seed test labs. An IoT based system was developed
    where soil sensors provided the relevant information/data for the growth of seeds.
    Testing was performed in the Official Seed Analysis Laboratory (OSTL) of the Brazilian
    Agricultural Research Corporation. Rekha et al. [119], developed a WSN based framework
    for sensing agricultural characteristics and then provide decisions to the farmers.
    Based on the data collected, the model will provide decisions for irrigation and
    crop monitoring. For the case study, India was taken into consideration due to
    its large farming area and population dependence on agriculture. Groundnut farming
    was studied in this work. Becker Reshef et al. [120], proposed a remote sensing
    analysis based crop monitoring system for strengthening agricultural decisions
    and improving crop security. The authors named this model as “GEOGLAM” model which
    ensures the decision support of all the necessary steps for crop security and
    analysis. Kamath et al. [121], proposed a wireless sensor-based model for monitoring
    the growth of weeds in paddy crop. The authors performed a study on how Raspberry
    Pi and WSN can be modeled for precision agriculture. Raspberry Pi based model
    was deployed to monitor crop along with the integration of Bluetooth 4.0 to send
    signals from visual sensors to the base station. A solar cell battery was used
    to provide power to the system. At the remote station, the images of the crops
    were processed to extract the background and foreground objects. Classification
    between weeds and paddy crop was performed with SVM. Rao and Sridhar [122], Developed
    an automatic irrigation system by prototyping Raspberry Pi and other IoT devices
    to enhance crop productivity. A cloud-based data collection system supported by
    sensors used for data collection is employed to collect the field data. The data
    collected is sent to the base station and based on that data, the decisions are
    made. Parameters like humidity, soil temperature, and sunlight availability are
    measured. Geng et al. [123], for greenhouse environment monitoring proposed a
    four-layer IoT based mobile system. To design the system, the authors proposed
    integration of both Raspberry Pi and Arduino chip in the design where the former
    serves as the data server and later as the master chip for a mobile system. Fabrication
    of all the sensors, actuators, and other devices was done on a single board, thereby
    reducing the device’s physical distances for better performance due to serial
    communication. A dedicated communication protocol with CYC was designed to reduce
    transmission errors and data loss. Shadrin et al. [124], designed an intelligent
    agriculture IoT equipment to monitor the crop. The authors designed the system
    using the test case of monitoring the seed germination. The proposed model was
    fabricated with the integration of low power embedding wireless sensor nodes with
    artificial intelligence. CNN was used to train the model along with the collection
    of data via sensor nodes of the different stages of germinated seeds. A 3D clustering
    analysis was used to analyze the relationship between environmental factors and
    farmer issues. Uddin et al. [125], focused on developing a system for monitoring
    crops from the stage of seed germination to harvest. For this authors proposed
    a resource optimized fast health crop monitoring system. Saudi Arabian agriculture
    was taken into consideration as a case study. IoT and drones were harnessed to
    make an efficient agricultural monitoring system. Data collection methods were
    used to collect data from heterogeneous devices arranged in localized clusters.
    The system was designed to withstand a harsh environment with agility and feasibility.
    Feng et al. [126], proposed a crop growth and nutrition diagnostic system based
    on hyperspectral remote sensing. Color canopies obtained from images captured
    with satellites, UAV, and remote sensing were used to determine the index of yield.
    To determine the color canopy of plants, the color correlation was employed. Cen
    et al. [127], discussed the usage of UAV with dual image frame cameras to estimate
    the aboveground biomass and panicle biomass of rice. The authors conducted their
    study at different growth stages of the crop. The field investigations were made
    on the variations in typical vegetation indices. The accuracy of the model was
    obtained with the extraction of RGB images at two different stages. Random forest
    was employed to obtain AGB as well as the PB. Khan and Kumar [128], proposed a
    framework for the monitoring the crop field. To make their study reliable, the
    authors monitored weather in real-time to get an idea of how to provide an ambient
    condition to farm. Production increase techniques are also proposed for precision
    farming. To overcome the problems of delay in information transfer from the field
    to the farmer, the context-based agricultural mobile sink is designed in WSN.
    Thus the mobile sink node introduction improves the overall efficiency and energy
    consumption of the model. Frontward communication area (FCA) based route selection
    is proposed to reduce energy consumption and delay. Min and Kuang [129], designed
    a system for monitoring the rice crop field. The analysis of the growth of rice
    and rice duck in real-time is done by obtaining the data via the Internet of Things.
    Authors comprehensively viewed the rice and rice duck plant species and the ambient
    farm conditions required for their growth. Qiulan et al. [130], estimated the
    production of carbon from the crop growth. The authors provided a framework for
    the estimation of organic carbon compounds in the farmland soil. The wheat plant
    was taken as a test case in this study. The model provided the real monitoring
    of the farm for carbon production with the aid of IoT and other devices. The real-time
    data was collected from the Yanzhou District of Jining City, Shandong Province,
    China. Harun et al. [131], proposed an improved crop monitoring system based on
    IoT concepts. Brassica Chinensis is the plant taken for study and was subjected
    to four different light treatments such as pulse treatment, continuous treatment,
    high intensity, and artificial control for enhancing the plant growth. The authors
    also analyzed parameters such as leaf count, height, dry weight, and chlorophyll
    a and b. An intelligent embedded system was developed to monitor and capture real-time
    data. Alonso et al. [132], designed an intelligent edge IoT based platform for
    precision livestock and crop monitoring in a dairy farming scenario. In their
    study, authors used the concepts of AI, blockchain technology, edge computing
    and IoT concepts for designing the platform. The architecture named Global Edge
    Computing Architecture (GCEA) was tried and tested in real time in a dairy farm.
    Castellanos et al. [133], proposed a narrowband IoT (NB-IoT) system for collection
    of soil parameters to monitor the potato crop health and growth. A UAV aided network
    is used to support the purpose. The architecture proposed accessed the real filed
    scenario of a potato filed near Bogota, Columbia. The main achievement of this
    work was the energy harnessing due to optimal topology applied for the deployment
    of sensors across the field and thus making the battery last for 82 hours for
    above ground sensors and 77 months for the deep buried sensors. Shafi et al. [134],
    presented a multimodal for crop health monitoring based on the concepts remote
    sensing, IoT and ML. Authors conducted their research in Pakistan. Sensors were
    deployed in fields to collect the real time data. Multispectral data from drones
    presented a NDVI and was used to analyze the crop based on its chlorophyll content.
    Variable length time series data captured from IoT devices and sensors were used
    to generate crop health maps. Deep neural networks were implemented for classification
    and provided the optimal classification. Some studies of the articles incorporating
    IoT in fields related to crop monitoring are presented in TABLE 10. TABLE 10 Summary
    of Developed Methods Crop Monitoring D. IoT in Disease Detection Diseases play
    a vital role in the economic and food crisis of a country. So to avoid this, disease
    detection is employed. This involves the detection of various diseases whether
    fungal, viral, bacterial, etc. from the stages of early to the post-harvest. Incubation
    of IoT has revolutionized the disease detection area in plant phenotyping resulting
    in major control resources available to avoid disease occurrence. Wang et al.
    [146], focused on addressing the problem of pests and insects. Authors proposed
    an IoT based model that can detect the early occurrence of the pests and diseases
    from visual references. Rough set theory algorithm and NN were used to model design.
    The proposed model was compared with existing models for accuracy and efficiency.
    Pandiyan et al. [147], applied the concepts of image segmentation and IoT, to
    develop a system/platform that can detect the diseases in plants. Authors proposed
    a novel platform having an Advanced Segmented Dimension Extraction (ASDE) with
    Heterogeneous Internet of Things procedural (HIoT) aspects, to detect the apple
    leaf diseases. A sign based plant disease identification model for real-time resembling
    of leaf diseases namely bacteria, fungi, micro-organisms, and viruses is presented.
    Three levels i.e. connectivity level, platform level, and service level were employed
    for performing data aggregation, transmission, and automatic identity identification.
    Leaf gestures were studied to identify the diseases in leaves. Zhao et al. [148],
    developed an automatic crop disease detection system capable of identifying and
    recognizing the leaves from a cluttered background. Combining IoT concepts and
    CNN, authors designed a novel approach named “Multi-Context Fusion Network (MCFN)”
    along with IoT deployments for crop diseased detection in wild. Kale and Sonavane
    [149], developed a smart and optimized smart fertilizing decision support system
    for smart farming. The authors addressed the problem of disproportion due to lack
    of judgment. Concepts of IoT and GA were used to design the system. An improved
    GA based multilevel parameter optimized feature selection algorithm for ELM classifier
    along with IoT was proposed in the designed system. The proposed system focuses
    on plant disease detection in a real-time environment. Khattab et al. [150], developed
    an IoT based cognitive automatic monitoring system for detecting the epidemic
    diseases in plants. By combining the concepts of artificial intelligence and prediction
    algorithms to develop the expert system, capable of predicting, analyzing, and
    decision making. A layered approach was used to design the model. Soil, leaf wetness,
    wind speed, and wind direction sensors were employed to gather the data. The model
    was tested on detection of the diseases like Late Blight, Early Blight, and Powdery
    Mildew in tomato and potato crops. Chen et al. [151], based on AI technologies
    and IoT, developed a system named “RiceTalk” for the detection of Blight diseases
    in the rice plant. AgriTalk model was used as a base model in this work to develop
    this system. Compared to AgriTalk, the authors used non-image IoT devices to design
    this model for disease detection. Devi et al. [152], proposed a simple and efficient
    IoT enabled solution for developing a system for automatic disease detection.
    Bunchy top of banana and Sigatoka diseases in the wild banana plant were detected
    and classified. Environmental parameters like soil moisture, temperature were
    measured with sensors and the IoT model was framed using the Raspberry PI hardware
    model. Data were classified using GLCM and RFC for disease detection. Kitpo and
    Inoue [153], developed an early disease detection system for rice crops disease
    detection. The drones based IoT architecture with real-time data collection capabilities
    was designed. For the mapping of drones on the fields, GPS sensors were used.
    The designed system is capable of displaying the analytical results and the position
    of the plant where the disease is present. Pawara et al. [154], studied the pomegranate
    diseases such as Bacterial Blight, Fruit Spot, Fruit Rot, and Leaf Spot. Developed
    a HMM and senor based model to early detect the disease and provide the solutions.
    Parameters like air temperature, leaf wetness, air humidity, and soil wetness
    were considered and studied for model design. For digital communication between
    field and farm GSM module was used. Truong et al. [155], real-time data monitoring
    capable system was designed with IoT and cloud storage for disease detection and
    recognition. The fungal diseases of rural crop fields with detected. Environmental
    data conditions such as humidity, temperature, wind speed, and rainfall were employed
    for designing decision support. A Support Vector Machine Regression (SVMr) model
    was used to classify the data. Jumat et al. [156], developed a cost-efficient
    and affordable smart farming prototype capable of detecting plant disease and
    proving decisions. For study and experimentation, Septoria plant disease was taken
    and studied for different stages right from outbreak to spread maturity. The system
    also possesses the web-enabled facilities for farmer support. Some studies of
    the articles incorporating IoT in fields related to disease detection are presented
    in TABLE 11. TABLE 11 Summary of IoT Based Developed Methods for Disease Detection
    SECTION V. Findings Several research articles related to the role and responses
    of the Internet of Things in agriculture have been studied. From the literature
    and studies, it can be seen that immense contribution has made by IoT in the field
    of agriculture starting from micro areas and moving over to macro environments.
    Internet of Things along with the concepts of cloud computing, cluster computing,
    wireless sensor networks and computer vision has revolutionized the field of monitoring,
    crop production, disease detection, and supply chain management. Since the domain
    of agriculture itself is a wide domain so considering the impact IoT has or can
    make on this field, the search was not restricted or limited to any area. The
    data acquisition for agriculture systems is a multidimensional approach. There
    are several fields in agriculture where IoT is applied e.g., crop monitoring,
    diseased detection, precision irrigation, supply chain, cattle grazing, and raising,
    etc. To design a precision approach, the target plays a very important role in
    data collection. From the existing studies it is found that mostly overall 90%
    of the data is self-acquired by the authors with the use of wireless sensors.
    This data included soil data, pH values, light, water, humidity, and images. In
    the case of crop disease detection, leaves were taken as the primary subject of
    study due to their ease of availability and quantity. Nearly 80% of the leaf data
    was self-acquired using digital cameras and web-enabled devices. However in some
    studies to validate their models, authors also used the existing standard ground
    truth databases available. Satellite imaging and remote sensing images were also
    taken to understand the demography and vegetative indexes of a region. UAV drones
    were the most used devices along with web-enabled digital cameras and mobile devices
    to capture the data in the form of images and also acted for providing real-time
    monitoring of device location in the fields. Certain issues and challenges are
    faced by the authors while capturing real-time images due to environmental and
    lighting conditions. To avoid these issues, laboratory-based testbeds such as
    greenhouses were developed and their data was acquired in a closed environment.
    From the literature, it is seen that, to develop the prototypes certain common
    parameters were taken for conducting the study irrespective of the problem to
    be addressed. Theses parameters included soil data, pH value, humidity level,
    moisture content, water content. After the analysis of the studies it was found
    that for any agricultural system to flourish all these parameters play a combined
    role. These parameters were most common for the problems addressing farm management,
    crop monitoring, and irrigation. However in certain other parameters like leaf
    wetness, salinity, disease severity, fertilizer ratio, plant height, CO2 content,
    mineral content, and conductivity were considered while addressing the specific
    problems like plant disease detection, smart irrigation, seedling germination,
    etc. These were the devices employed to collect the data. Depending upon the problem
    the authors addressed, different type of sensors were employed. For soil data
    collection, the contact method sensors such as hygrometers, or electrodes which
    penetrate the soil were used to collect soil information. While as in the case
    of the collection of soil information via tractors or vehicles non-contact soil
    sensors were employed. But for the studies it can be seen that contact method
    sensors are the most common devices used for soil data collection. In case of
    soil pH value and salinity electrochemical sensors are employed. In the case of
    soil nitrates, CO2, and fertilizer content, topsoil depth, biomass content, organic
    matter are measured. For water data collection, parameters like relative humidity,
    leakage of pipes, dissolved oxygen, nitrates, and other oxides were measured by
    the authors. To accomplish this various water sensors like ultrasonic sensors
    were employed to measure the water levels in the tanks, ponds, and farms. Temperature
    and humidity sensors were used to measure the temperature of water and humidity
    of soil for water content. In the case of plant leaves, the leaf wetness sensors
    were employed to understand the moisture content of the plants. Other than these
    sensors, neutron sensors, time travels sensors, and capacitance sensors are also
    employed by some authors for measuring the water levels. In the case of supply
    chain and cattle grazing, tags and biosensors were employed to gather the data.
    To develop the prototypes, the authors used the devices based on functional capabilities.
    From all the devices, Arduino and Raspberry Pi were the most desirable hardware
    platforms for the authors. Arduino was employed to tackle simple or sequential
    issues that do not require complex solutions. In the case of scenarios with complex
    environments, Raspberry Pi boards were employed due to their capability of addressing
    multiple problems at the same time. For functionalities that faced time issues,
    Raspberry Pi boards were employed. In the case of communication technologies,
    LoRa and ZigBee are the most commonly used communication technologies by the authors
    in the platform designs due to their capabilities of handling a multitude of solutions.
    Lora and ZigBee use GPS to enable and detect geo-locations. They are low cost
    and secure for data transmission. Other than these technologies, authors also
    made use of cloud and cluster computing to handle a large mass of data and provide
    on-spot solutions to the consumers. The authors performed the processing of data
    in different stages. At first preprocessing on data was performed to remove any
    kind of outliers or anomalies in the data. To remove the imperfect data, algorithms
    such as noise removal with Gaussian noise, salt and pepper noise, histogram equalization
    were commonly used for the preprocessing of image data. However in the case of
    numerical data missing value imputation, the banana dataset for noise reduction
    was employed. To obtain the optimal data from a given set of data, data reduction
    was performed. The data reduction approaches e.g., dimensionality reduction, attribute
    subset selection, numerosity reduction, etc. were employed by various authors.
    To make systems capable of taking decisions, several learning algorithms like
    GA, CNN, NN, SVM, PNN, GANs were used to train and test the models. From the literature,
    it is seen that most studies and experiments were performed in countries that
    have agricultural economies like the USA, China, India, Brazil, Australia, etc.
    Most of these countries are economically stable and first world countries. They
    have better infrastructure and service availability. Also only 20% of the studies
    were focused on real-time implementation of their prototypes which indicates that
    most of the experimentation was conducted in a closed environment. This pattern
    raises concerns on how these studies can be employed in real-time environments
    with low infrastructure and maintenance costs. The problem of power consumption
    was also addressed by some studies. However there were no comparisons and reasons
    given on how the dream of IoT can be made real for poor and self-financing farmers.
    Along with this, a few studies provided the cost estimation for the deployment
    of the models. In the Fig. 7, the percentage distribution and contribution of
    IoT in different fields of agriculture are shown. From the figure it can be seen
    that more extensive studies are conducted in the field of crop monitoring. FIGURE
    7. Percentage contribution of IoT in different fields of agriculture. Show All
    These studies and analysis put forth by different articles show that current/existing
    solutions have incorporated IoT to solve several challenges in the agricultural
    domain. With the incorporation of these technologies, a large number of challenges/factors
    for improvement have emerged. Along with the study of factors for improvement,
    future research directions, applications are also highlighted. The sections below
    explain the factors for improvement and the futuristic research directions. A.
    Challenges Despite the growth achieved by IoT over the past few decades, there
    still exist some conceptual, fundamental, and developmental issues. 1) Cost Designing
    a cost-optimized model is still a difficulty faced by many authors. Scientists
    are focusing on developing cost-efficient systems by reducing the hardware and
    software requirements in IoT deployments. Economic differences of countries make
    it difficult for farmers to deploy devices and technology. So, it is important
    to develop some economic models. 2) Standardization To fully utilize the technology
    for large range of applications, standardization of devices is essential. The
    present or current mechanisms do not confirm any standardization formats either
    for the data and process representation. Deprived of the cordial use of the semantic
    ontologies, machine-readable codes result in output differences due to misinterpretation
    and alterations from time to time. With standardization the interoperability issues
    of the devices, applications, systems and products can be solved. 3) Heterogeneity
    While designing a system, heterogeneous devices are used. Every device differs
    in processes and services requirements. In the case of agriculture, most models
    perform with heterogeneous devices, so it is important to create interaction between
    heterogeneous modules and communication technologies. Because of heterogeneity,
    the complexity of the network increases, and sometimes falsified results may appear.
    4) Accessibility For developing any farming decision support system based on IoT
    technology and other devices, the demand for availability of existing software
    and hardware to be present anywhere any time is a must thing. These problems need
    to be addressed to ensure the availability of services anywhere and anytime. Lack
    of availability of the required equipment can result in chaos and delay in the
    services. 5) Adaptability While designing a model, especially for precision farming,
    it is pertinent for the devices to be adaptable with the other devices and the
    surroundings. Since the environmental conditions keep varying and also sometimes
    due to certain communication or hardware issues certain devices are not adaptable
    with each other. 6) Energy Optimization Energy is the most emerging issue in IoT
    systems, WSNs, and other devices for their communication. Till now conventional
    sources of energy have been supporting the designing and working models. But due
    to an increase in devices, the consumption of conventional energy is not a reliable
    solution. Non-conventional sources of energy like solar, wind, water energy harvesting
    schemes should also be tested, but they haven’t been of much success and new methodologies
    should be developed to employ them for model development. 7) Compatibility To
    achieve the standards of fragmentation and scalability, the developed models or
    software should be flexible and should run on any machine. 8) Reliability For
    successful and smooth working, reliability is a major concern for IoT devices
    in terms of data transmission. The devices need to gather and transfer reliable
    data as based on the data received and interpreted, the decisions are made. Reliability
    is still a challenge due to system failures, node failures, battery issues, or
    other interventions. 9) Mobility Generally the systems or models developed are
    static. For smooth implementation of the framework, there should be mobility as
    most of the devices and applications are mobile. In mobile models, the issue of
    maintaining connectivity is still a difficult task. 10) Environmental Conditions
    In agriculture there are different landforms. So it becomes difficult to adapt
    to those changes, and this also jeopardizes data and services. This alters the
    accuracy of a system. 11) Real-Time Deployment Most of the studies put forward
    are not employed or tested in a real-time testbed. So before deploying a system
    or model, real-time analysis is a must, to avoid post-deployment losses. B. Improvements
    Since the growth of IoT is remarkable in the field of agriculture, certain improvements
    can be included in the growth and developmental state to make the systems and
    models more efficient, reliable, and business-oriented. 1) Warding Off the Performance
    Degradation Generally while developing systems, customer interaction or input
    is not taken. As the models serve a variety of customers from dynamic backgrounds,
    therefore their input must be taken while developing the models. This way the
    performance hazards and chaos that occurs on the filed can be avoided. 2) Sharing
    Rich Data Globally In almost all, the IoT based models designed for precision
    farming, the data sharing while integrating and mapping the system design should
    be encouraged. This can lead to the development of an interactive model globally.
    This feature can also help in understanding the topographic and demographic challenges
    of various regions on a global level. Thus the suitable solutions can be designed
    with those working in resource-constrained environments. 3) Moving Towards High-Speed
    Communication The communication domain itself is witnessing a progressive and
    dynamic shift. Since the IoT models are remotely located, so better communication
    is a prerequisite. Therefore it is important to consider high-speed communication
    strategies like 5G, for making the devices more reachable with lesser delays.
    4) Cost Analytic Studies for Model Design With the incumbent of IoT in agriculture,
    a variety of models are designed for addressing different domains such as irrigation,
    farm management, disease detection, and crop monitoring, etc. While designing
    the models various case studies are performed. As the development cost of models
    for these cases varies from country to country i.e., in first world countries
    there will be the different cost of devices and in second and third world countries
    it will be different. Therefore a model cost analysis will provide an idea of
    the purchasing power and investment a farmer from these varied economic regions
    can invest to develop a model. Also this can result in seeking or considering
    other cheaper and efficient ways to develop models. C. Future Research Directions
    With the advancement in the development of precision agriculture platforms with
    IoT and other technologies, the development of new applications or research areas
    is envisioned. After the study of the literature, certain potential concepts and
    futuristic research directions are listed and discussed below: Design of platforms
    in a user-friendly manner (from farmers’ perspective and ease of using) using
    Artificial Intelligence and other learning tools. Farmer’s perspective here means
    that an audit should be done well before designing the prototype. From this study
    a clear insight and differences between the requirements of the farmers and farming
    systems across the globe can be understood. To develop concepts and methodologies
    based on multidimensional aspects like science, expertise, experience, industry,
    etc. Energy harvesting or power optimization methodologies should be developed
    to reduce the cost of production, maintenance, and fault tolerance. It is evident
    that mostly the farms be it small or large, require power and energy for the working
    of devices. In most of the cases, the power to the devices is supplied from the
    main line or the power grid. But this is not a sustainable and efficient method.
    Thus in order to make farms self-reliant, the energy harvesting or power optimization
    approaches should be developed or incorporated while designing of the models.
    Induction of cloud sources for data gathering and processing in a reliable, systematic,
    and scientific manner. Develop systems that can withstand variable soil and environmental
    conditions. Since the agricultural environments are harsh and keep on changing
    with change in climatic conditions or seasons. So it is essential to develop systems
    which can be robust and sustainable to the changes in the external as well as
    internal factors. Development of user or farmer friendly apps for monitoring crop
    and plant health. Mostly farmers come different ethnic and linguistic backgrounds.
    So due to this their level of understanding and ways to perform agricultural tasks
    is also different. It is important to develop frameworks considering the native
    language of a region into consideration so the farmer and machine interaction
    can be improved. This will enhance enable the acceptance of precision farming
    methods easy as it can be seen some areas are reluctant to adopt due to this linguistic
    and understanding problems. Development of efficient sensor-based systems for
    high elevation areas. High elevation areas mostly have undulating surfaces and
    also in most of the countries, supply of power to these areas is still a dream.
    Form the literature, it can be seen that these areas have not been targeted for
    precision farming instead of being resource deficient. Therefore deployment and
    design of sensor based systems in these areas opens a scope in future of precision
    farming. Usage of previous and existential scientific data for the development
    of decision support systems in farming. Generally for designing the precision
    farming models, the primary data is considered. However for designing cost efficient
    and reliable models, the previous case studies and deployment models should be
    considered for the study. This means a collaborative model development methodology
    should be developed for understanding the nature of the work. To recognize various
    plant species using mixed data sets or heterogeneous data. Design of a portable
    and sustainable farming equipment control systems for large as well as small farms.
    Mostly from the study it can be seen that first world countries are welcoming
    in PA approaches while as in most third world and other nations, this concept
    is still in avoidance due to cost and shelf life of products and equipment’s.
    Development of reliable supply chain management methods for precision farming.
    D. Applications of IoT in Agriculture IoT has revolutionized the world of agriculture,
    and a manifold of application can be derivative of implementation of the Internet
    of Things in agriculture. These applications are a resultant of the architectural
    design chosen. These applications have been categorized and differentiated based
    on the subject they focus on and also the service they provide. The major sectional
    areas where IoT is applicable in agriculture are- observation, data collection
    and corroboration, governing, and management. Most of these fields work collaboratively,
    and all the applications involve at least two of these sections. All these sections
    are described below and TABLE 12 presents various IoT applications in agriculture.
    TABLE 12 Applications of IoT in Agriculture 1) Observation It is also called monitoring
    as the main aim of this section is to discern the working of various models, devices,
    applications, etc. With the incubation of the concept of IoT, it is the first
    and foremost stage to be smeared. In this phase, all the devices and equipment
    that are placed strategically are monitored for their work. Sensors, are the major
    deployment and data collection tools engaged in this phase for data collection
    of various field and non-field parameters. Monitoring the certain parameters,
    like soil salinity, pH value, volumetric water content by using various soil sensors
    and other essential parameters such leaf wetness sensors, color, humidity, etc.
    helps in the development of systems capable of performing following operations
    e.g., calculation of leaf area index, leaf health, leaf color, plant growth and
    aid in the development of automatic plant recognition systems. Other devices like
    water sensors aid in the monitoring of irrigation levels and requirements of the
    fields. Thus with such devices, smart irrigation scheduling systems are developed.
    Also with the gas sensors, remote monitoring devices such as UAV devices or images
    with hyperspectral reflectance properties, help in the estimation of biomass,
    nitrogen, carbon, and other essential gases content. This data can also be used
    to find the vegetative indexes of the filed or large demography. Heavy-duty vehicles
    such as thrashers, tractors, trucks etc., also need supervision and can use data
    analytics for farm management. Robots, autonomous vehicles, agricultural drones
    other equipment also need to be monitored remotely for better farm supervision.
    Livestock monitoring with the aid of IoT is also an important subject for precision
    farming. It includes cattle monitoring remotely using tags. Labour is also a major
    area of concern for precision farming. Since human intervention is generally prone
    to errors due to differences in understanding, decision making, and methodologies
    applied to solve a particular problem. Also the induction of human labor is cost-intensive.
    Therefore, with the application of IoT, human interference can be minimized and
    a network can be set up for monitoring thus reducing the errors and cost. 2) Data
    Collection and Corroboration Data is the main constituent of precision farming.
    It acts as both base and catalyst in the whole process. With IoT, a large number
    of data is collected in varying forms and formats. Sensors, cameras, and various
    other nodes aid in the collection of data. In precision agriculture, based on
    the nature of the problem, the IoT network can be designed and formulated to collect
    different types of data. After the data is collected, the corroboration also called
    documentation of the data is very important for better understanding. Corroboration
    is a natural application of collected data, but certain additions of different
    samples such as manual or machine integration are also seen. Data once collected
    needs to be refined and understood, labeled, and thus documented in a certain
    format. Documentation or corroboration of data helps in formulating statistical
    analysis and developing the decision support systems. Remote sensing charts and
    other crop assessing tools can be employed to understand the total crop yield
    of a particular region. Crop management can also be optimized using corroborating
    data. A yearly or term analysis can be performed on this data to improve precision
    farming. Food chain supply management can use the predictive analysis of this
    data for optimizing and designing new efficient strategies. The major areas where
    its application is seen are yield mapping for fertilization planning, field planning,
    agro-food traceability, site-specific measurements based on soil and water analysis,
    and remote vehicle monitoring for supply chains, etc. 3) Foretelling Also called
    forecasting is one of the major attributes or applications for decision making
    that is brought in agriculture with the introduction of IoT. With the IoT devices
    and network, real-time data analysis along with the comparison to the previously
    available datasets helps in the forecasting of the upcoming events in much advance.
    With this foretelling, various decision support systems can be designed capable
    of taking optimal and real time-decisions. It can also act as a preventive measure
    mechanism for avoiding or dealing with various upcoming unprecedented situations.
    With monitoring, data collection, and corroboration, foretelling can help in early
    disease detection, pest growth, weeding, drought, smart irrigation, and harvesting.
    Artificial intelligence can be employed for designing these learning systems.
    With IoT, a predictive analysis could be made way earlier than the harvest period
    for assessing crop production and consumption. Pre and post-harvest crop monitoring
    along with behavioral sciences and market analysis can also be employed to help
    site-specific farming and production increase in precision agriculture in the
    context of IoT. 4) Governing and Management It is an outcome of the monitoring
    device. Governing helps in controlling the whole system. Foretelling also plays
    a major role in governing. With IoT, it is important to govern the farm. Thresholds
    play a major role in designing a controlling strategy. Controlling is a major
    addendum of IoT in agriculture. Applications of controlling can be easily seen
    in site-specific management, working of smart irrigation models, plant growth
    monitoring models, and early crop analysis models and also in supply chain and
    smart vehicular navigation, interaction, optimization, and logistics control of
    farms. With governing, all the new strategies, formulae, practices and methods
    employed to solve the problems occurring on daily basis in farms can be monitored.
    These strategies can then be compared and analysed with the previous existential
    strategies. Therefore a knowledge base can be maintained. From the data analysis
    of that knowledge base, the best or the optimal strategies that can be employed
    to design or mould the system can be fetched. Various case studies can be performed
    to gather and test such information. From this the redundant techniques can be
    withdrawn and robust ones can be prioritised. With these methodologies and experiments,
    the management can be made more flexible, scalable and reliable. Also governing
    and management can be employed to find the best suited solutions. Due to the growth
    in agriculture sector, various public and private sector projects and startups
    are being started in various countries across the world. All these projects use
    artificial intelligence and IoT concepts to provide support and solutions to the
    growing industry of agriculture. All these projects or startups are explained
    in the TABLE 13. TABLE 13 IoT Based Public and Private Sector Projects/Startups
    for Precision Agriculture E. Our Proposed Work Inspired by the contribution of
    IoT in the field of agriculture, we proposed an architecture for precision farming.
    The layout of the architecture to be designed is proposed and shown in Fig. 8.
    The structure proposed for precision farming in case of farm management will constitute
    of different layers. The first layer would be the sensing layer, in which different
    types of sensors like soil, humidity, water, light, proximity, and conductive
    sensors will be deployed in the region of experimentation. All data from the sensors
    will be sent to the base station. The second layer is the network layer, which
    consists of gateways, internet, and other devices. This layer manages the traffic
    of the whole architecture. This layer collects data from the sensing layer and
    transfers it to the decision layer and the application layer. The third layer
    is the decision layer, which processes the data, manipulates it, and generates
    alerts or actions. The next layer is the application layer, which constitutes
    the firmware and the users. It receives all the inputs from other layers and the
    outputs are made visible to users. It also manages how the whole architecture
    will work or look. FIGURE 8. Proposed layered architecture for Precision Agriculture.
    Show All Our proposed architecture aims to observe and monitor the farm in real-time.
    Optimize the resource utilization, early detection of the diseases, and identification
    of the plant species, optimize irrigation facilities, and make definite use of
    pesticides and other manures. Monitor the growth of plants in each stage and take
    the necessary actions for the betterment of plants. The model to be designed will
    take into consideration the earning and investment of the small scale farmer.
    A scalable and cost efficient model will be designed by considering the reusability
    and recycling of the materials used. From the literature, it is found that the
    issue of interoperability and robustness is still not achieved. So, while designing
    the model these issues will be prioritized. Also, power supply and power consumption
    is a bottleneck for each model. So, from the literature it is found that energy
    harnessing approaches can be used to address this issue. In the proposed model,
    main focus will be on incorporating the concepts of energy harnessing approaches
    like solar energy and wind flow energy for power optimization. Harnessing solar
    energy for regions which have different season’s e.g., Kashmir, which has four
    seasons like spring, summer, autumn and winter throughout the year. So for these
    regions depending only on solar energy will be a bottle neck. Therefore, in the
    proposed work, a hybrid approach based on consumption of both wind and solar energy
    for reducing power consumption will be proposed. Some of the major findings of
    the proposed work will be: A scalable and cost efficient model will be designed
    by considering the reusability and recycling of materials used. The issues of
    interoperability and robustness issues of heterogeneous devices will be targeted.
    Power supply and power consumption being the bottleneck of each model will be
    targeted. To tackle such issues, energy conservation and energy harnessing approaches
    like solar and wind energy will be used. Harnessing solar energy for regions which
    have different season’s e.g., Kashmir, which has four seasons like spring, summer,
    autumn and winter throughout the year. So for these regions depending only on
    solar energy will be a bottle neck. Therefore in the proposed work, a hybrid approach
    based on consumption of both wind and solar energy for reducing power consumption
    will be proposed. Small scale farmers will be targeted for the development of
    sustainable and robust model. SECTION VI. Conclusion The Internet is revolutionizing
    our world. Communication via connective devices has become the countenance of
    survival. Agriculture is growing from precision farming to micro-farming. IoT
    has added more potential to communication by enabling the communication between
    humans and objects along with the environmental aspects. Seeking the vision of
    omnipresence i.e., anytime, anything, anywhere, everywhere, IoT should be considered
    a core for the development of new architectural concepts. Resource scarcity is
    a must address issue in precision agriculture and models should be developed to
    optimize resource utilization. Inclusion of monitoring in food supply chains,
    farms, greenhouses equipped with tags, WSN, etc. at each stage in the growth of
    the product/plant, making automatic reasoning via intelligent analysis and responses
    is moving towards much safer, secure, and trustworthy systems. In the article,
    firstly the agriculture sector along with its challenges and economic importance
    is presented. The domain of IoT along with the communication technologies and
    goals, protocols, architectures are studied and put forward. The various IoT OS,
    their specifications and features with respect to agriculture are discussed. An
    analytic study of various articles in the field of agriculture is presented, highlighting
    their most focused sections and gaps or areas not addressed. The sensors based
    on their field of application are also discussed. A systematic review of different
    articles focusing especially on crop monitoring, irrigation, disease detection,
    and farm management is offered. The articles considered for study range from the
    time frame of the year 2015 to 2020. From the studies, certain issues are put
    forward that demand research and experimentation in the future. Various existing
    public and private sector platforms or start-ups which work for precision farming
    are also presented and discussed with their specifications and applications. Making
    precision farming a base, a layout of an IoT based architecture is proposed. The
    communication technologies and the hardware platforms of IoT are also discussed.
    The applications of IoT in agriculture are also discussed. The issues, challenges,
    and future research directions are also highlighted. As a whole, the in-depth
    description of various aspects of IoT for agriculture has been discussed and how
    these studies should be catered in a way to create efficient and smart agricultural
    scenarios. Authors Figures References Citations Keywords Metrics More Like This
    Internet of Things and Wireless Sensor Networks for Smart Agriculture Applications:
    A Survey IEEE Access Published: 2023 Weighted Connected Vertex Cover Based Energy-Efficient
    Link Monitoring for Wireless Sensor Networks Towards Secure Internet of Things
    IEEE Access Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/8948470/09139962.pdf
  publication_year: 2020
  relevance_score1: 0
  relevance_score2: 0
  title: 'Recent Developments of the Internet of Things in Agriculture: A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.23919/mipro.2018.8400066
  analysis: '>'
  authors:
  - Richard Charles Andrew
  - Reza Malekian
  - Dijana Capeska Bogatinoska
  citation_count: 25
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2018 41st International Conve... IoT solutions
    for precision agriculture Publisher: IEEE Cite This PDF Richard Charles Andrew;
    Reza Malekian; Dijana Capeska Bogatinoska All Authors 27 Cites in Papers 1168
    Full Text Views Abstract Document Sections I. Introduction II. Sensor Based Irrigation
    III. Sensor Based Livestock Behavior Monitoring IV. Conclusions Authors Figures
    References Citations Keywords Metrics Abstract: In this paper, precision agriculture
    is set to provide higher productivity and a better use of resources when compared
    to traditional methods and this will result in lower costs with higher yields.
    A crucial activity for crop farming is water irrigation while for livestock farming
    it is the monitoring of animal health. This paper presents two feasibility studies
    on IoT solutions for automated irrigation and one study for automated animal monitoring.
    In each, the proof of concept is verified to operate under normal field conditions.
    Published in: 2018 41st International Convention on Information and Communication
    Technology, Electronics and Microelectronics (MIPRO) Date of Conference: 21-25
    May 2018 Date Added to IEEE Xplore: 02 July 2018 ISBN Information: DOI: 10.23919/MIPRO.2018.8400066
    Publisher: IEEE Conference Location: Opatija, Croatia SECTION I. Introduction
    Precision agriculture (also known as smart farming) uses internet of things (IoT)
    solutions together with Big Data methods to provide for more efficient management
    of resources. It is a significant vertical market [1] that includes the management
    of crop yields, livestock, seeding, fertilizer use and water. The benefits of
    precision agriculture (PA) include increased profitability and reduced environmental
    impact [2]. In the early years, PA consisted mainly of map based technologies
    using geo-statistical methods like GIS and satellite remote sensing and the main
    application of PA was to manage fertilizer use [2]. Sensor use was not widespread
    since sensors were either too costly, too inaccurate or unavailable for the applications
    required. Surveys during the early 2000''s showed that few farmers used PA technologies
    and the main barriers to the adoption of these methods were the lack of technologies
    to deal with the large amounts of information, the lack of scientific validation,
    high costs and no training or technology transfer [2]. This has changed with the
    development and testing of prototype PA systems, the rapid development of IoT
    [3] and Big Data [4], and the decreased cost of sensors. IoT solutions in agriculture
    now form a cycle of i) monitoring through sensors, ii) analysis and planning,
    and iii) smart control, all linked by a wireless network connected to a cloud
    service (as shown in Figure 1) [5]. Big Data analytics [6] and machine learning
    [6], [7] can be applied to the data to help make informed decisions [8] and the
    create intelligent control. This paper will consider past feasability studies
    in irrigation and livestock monitoring [9] and will present the main conclusions
    found. Fig. 1. Precision agriculture IoT wireless system [5] Show All SECTION
    II. Sensor Based Irrigation The success of crop farming relies on proper irrigation.
    Under-watering reduces nutrient uptake while over-watering causes leaching which
    poisons ground water [10]. Early water management [11] relied heavily on projected
    weather patterns, past farming activities and the manual observation of soil conditions;
    for instance, McKinion et al. [12] used GIS information [13] (based on soil samples
    and past farm use) as inputs for crop simulation models to optimize water and
    nitrogen use on a 201 ha cotton farm. Around the same time an automated irrigation
    system was prototyped using a central computer control centre [14], [15] linked
    to field irrigation valves [16]. This system by Damas et al. had the hallmarks
    of a modern IoT solution [17], [18] since it was made up of rudimentary sensors
    measuring water pressure and flow volume, simple solenoids controlling the irrigation
    valves, and a central computer management system [19], [20] all linked together
    with a network of omni directional UHF radio antennas. 1500 ha of irrigated land
    was covered with an irrigation system comprised of 1850 valves, 1850 meters and
    32 pressure sensors. The management software monitored the sensors [21], controlled
    the valves while assessing water use to correctly bill the supplied communities.
    Although the system could more efficiently distribute water to irrigation users
    it was not fully automated since it lacked control feedback from the fields. This
    requires the use of soil and moisture sensors [22], [1]. Fig. 2. Water volume
    for the greenhouse irrigation system (bottom line) as compared to traditional
    methods (top line) [23] Show All Such an experimental system was developed by
    Gutirrez et al. [23] to irrigate sage crops in a greenhouse. The main components
    of the system were sensor units joined to a central micro controller through a
    ZigBee network. A General Packet Radio Service unit relayed the sensor data over
    a cellular network to a server with a database. Each sensor unit is comprised
    of a temperature sensor, a moisture sensor, solar power cells with rechargeable
    batteries with a ZigBee radio unit. The unit is low-power with a sleep mode to
    reduce consumption. ZigBee unit was chosen due to its low price and efficient
    power consumption. The micro controller sends data to the server and receives
    instructions to activate irrigation. It also directly processes sensor data to
    implement automatic irrigation. Lastly the irrigation pumping system consists
    of two pumps activated by relays. A web application is used for monitoring and
    determination of an irrigation schedule. It is also used to set threshold values
    on the WIU for the automated scheduling. A SQL database is used for storage. Testing
    was done over 136 days to compare it to the traditional irrigation method that
    used human supervision. Both methods used the same flow rate per drip hole during
    irrigation. The traditional irrigation schedule consisted of watering 42 production
    beds for 5 hours three times per week. The automated system watered 14 beds for
    only 35 min/week for the first 6 weeks then 35 min every three weeks along with
    automatic watering triggered by the sensor feedback of temperature and soil moisture.
    Threshold values to trigger automatic irrigation were set based on the producers
    experience. The total water use (for 14 beds) shown in Figure 2 show a ∼ 90% reduction
    in water use using the automated system as compared to human supervision. Advantages
    of the system are low power consumption, reasonable cost, long power life due
    to the solar cells and efficient water management. The study showed that a wireless
    sensor based irrigation system is an effective solution to cut water use. An outdoor
    system was developed by Coates et al. [24] to irrigate outdoor nurseries and orchards.
    It used a commercial system developed by MEMSIC (Andover, Mass., USA) consisting
    of soil moisture sensors that communicated over a low power, IEEE 802.15.4 standard
    mesh network to a base station connected to a computer with a SQL database. The
    system shares many features with the previous greenhouse system such as solar
    panels and control relays except everything is geared towards outdoor field irrigation.
    The actuator units contained a micro controller that received sensor data and
    controlled irrigation valves with latching solenoids. The application software
    monitored sensor and actuator operation and sent control instructions to the actuators
    units based on a preprogrammed schedule or irrigation rules based on sensor information.
    Advantages of this system are long range connectivity, outdoor design, a grid
    network enabling communication between nodes and long power life due to solar
    cells. The estimated cost of a working system with 10 sensor nodes with 1 actuator
    along with the estimated savings per year due to the reduced labor, fertilizer
    use and water use costs meant that cost recovery would take about 4.5 years. The
    system was tested for network and valve actuator robustness. The network tests
    shown in Figure 3 show that nodes connectivity depended on line of sight conditions
    a ranged from 100 m to 170 m. It was also noted that once the node successfully
    joined the network, communication remained stable. The actuator stress tests showed
    that the system withstood over 11000 normal actuations and over 6000 short circuit
    events. Short circuit testing was crucial since short circuiting valve wires is
    a common mistake made in the field. Further field testing done for nursery, landscaping
    and orchard applications revealed no major mis functions. The system showed that
    a commercially available sensor network could be used to actuate valves for a
    large scale irrigation system under normal operating conditions. SECTION III.
    Sensor Based Livestock Behavior Monitoring Animal farms require healthy stock
    to provide maximum profits. Many detectors have been developed to monitor the
    individual health of animals. These wearable sensors monitor various health indicators
    to identify disease and infection [25]. For instance sensors that monitor body
    temperature and humidity are used to detect stress levels in animals [26]. Another
    indicator of animal health is the identification of various animal behaviors such
    as movement and eating/drinking patterns. Analyzing these patterns can indicate
    if an animal is in distress and requires medical intervention. Nadimi et al. [27]
    developed an experimental system that monitored animal head movements which were
    analysed by a trained neural network to identify movement modes of individual
    animals. The system consisted of a ZigBee mesh wireless network connected to temperature
    and accelerometer sensors in sensor nodes from Crossbow Technology, Inc. The network
    transfered data to a cellular modem which connected to a cloud server. Four main
    movement modes were identified (grazing, lying down, standing and walking) and
    these were monitored for an eleven sheep flock in both field and barn conditions
    for 9 hrs a day for five days. The resulting 1782000 measurements were split 75/25
    into training and testing datasets and used to train a feed-forward backpropogation
    5-layered network. Testing was done to evaluate network health (see Table. I)
    and the accuracy of the machine learning algorithm (see Table. II). They found
    that the total packet loss on average was 14.8% which is a significant improvement
    to previous studies by Nadimi et al. [28]. Similarly, movement mode identification
    accuracy was better than previous studies using a Kalman filter with a multiple-model
    adaptive estimation technique [29] and one using decision tress [28]. The study
    showed the effectiveness of combining a sensor network with predictive data analysis.
    Fig. 3. Network connectivity tests for nodes mounted at differing heights [24].
    Show All Table I Network health statistics [27]. Table II Machine learning accuracy
    [27]. SECTION IV. Conclusions The sensor network systems presented here all share
    the same basic features: a wireless sensor/actuator network connected to a server
    and database. The studies showed that the wireless sensor networks were feasable
    with an improvement over traditional methods. Each system generated vaste quantities
    of data which could be analyzed with Big Data analytics to find trends and correlations.
    In the case of irrigation, data on irrigation events would be integrated into
    the systems that control agricultural machinery to improve crop yields and fertilizer
    use. Time trends would be used to plan future farming strategies based on recorded
    outcomes. Animal monitoring would flag abnormal animal behavior and make predictions
    on the possible cause. This data would be used to inform veterinary services about
    the nature of the health problem to initiate a call-out. These IoT solutions will
    improve farming methods and result in more productivity and a better use of resources.
    Authors Figures References Citations Keywords Metrics More Like This A Wireless
    Multimodal Physiological Monitoring ASIC for Animal Health Monitoring Injectable
    Devices IEEE Transactions on Biomedical Circuits and Systems Published: 2024 Monitoring
    and irrigation of an urban garden using IoT 2018 IEEE Colombian Conference on
    Communications and Computing (COLCOM) Published: 2018 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: IoT solutions for precision agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/tim.2022.3196446
  analysis: '>'
  authors:
  - Gabriele Patrizi
  - Alessandro Bartolini
  - Lorenzo Ciani
  - Vincenzo Gallo
  - Paolo Sommella
  - Marco Carratù
  citation_count: 12
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Transactions on Instrume...
    >Volume: 71 A Virtual Soil Moisture Sensor for Smart Farming Using Deep Learning
    Publisher: IEEE Cite This PDF Gabriele Patrizi; Alessandro Bartolini; Lorenzo
    Ciani; Vincenzo Gallo; Paolo Sommella; Marco Carratù All Authors 15 Cites in Papers
    4883 Full Text Views Open Access Under a Creative Commons License Abstract Document
    Sections I. Introduction II. DL for Soft Sensing III. Experimental Setup IV. Data
    Analysis and Network Training V. Results and Discussion Show Full Outline Authors
    Figures References Citations Keywords Metrics Abstract: Precision farming technologies
    refer to a set of cutting-edge tools and strategies implemented to optimize the
    management of the plantation. Smart meter devices, Internet of Things (IoT) technologies,
    and wireless sensor networks (WSNs) are only a few examples of the innovative
    systems increasingly employed from an Agriculture 4.0 point of view. Recent literature
    has paid close attention to the role of artificial intelligence (AI) and deep
    learning (DL) algorithms in helping farmers and improving soil productivity. In
    this regard, this article presents the design of a WSN based on low-cost, low-power
    photovoltaic (PV)-supplied sensor nodes able to acquire data regarding environmental
    conditions and soil parameters. Among all the implemented sensors, the most critical
    is the soil moisture sensors because of many issues related to cost, installation,
    reliability, and calibration. Thus, this article proposes a DL approach based
    on long short-term memory (LSTM) networks to provide a virtual soil moisture sensor
    using only the data acquired by the other transducer installed on the node. Performance
    estimation of the virtual sensors and an in-depth comparison with other learning-based
    approaches have been presented in this article to validate the effectiveness of
    the proposed soft sensing approach. Published in: IEEE Transactions on Instrumentation
    and Measurement ( Volume: 71) Article Sequence Number: 2515411 Date of Publication:
    04 August 2022 ISSN Information: DOI: 10.1109/TIM.2022.3196446 Publisher: IEEE
    CCBY - IEEE is not the copyright holder of this material. Please follow the instructions
    via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles
    and stipulations in the API documentation. SECTION I. Introduction Technological
    evolutions over the last decade are making predictive modeling processes in multiple
    fields ever easier. In particular, the massive diffusion of artificial neural
    networks (ANNs) and, more generally, deep learning (DL) algorithms make computers
    more autonomous in learning processes for classifications, regressions, and predictions.
    This evolution is of fundamental importance in the Industry 4.0 paradigm, where
    these innovative analysis tools are integrated within the context of smart metering
    based on Internet of Things (IoT) architectures. Thanks to the latest evolutions
    of artificial intelligence (AI), it is possible to analyze the huge amount of
    data produced by this growing number of intelligent sensor nodes in order to extract
    useful information for the optimization of industrial processes [1], [2]. This
    optimization concerns the industrial world and any other sector where reducing
    costs is necessary. Among these fields, the interest in AI-based optimization
    of IoT architectures is rapidly spreading in the agricultural industry [3], [4].
    As a matter of fact, precision farming (also known as smart farming) technologies
    involve the use of smart meters, wireless sensor networks (WSNs), unmanned aerial
    vehicles (UAVs), smart camera nodes, and many other IoT technologies in order
    to fulfill the following [5]–[7]. Decrease the use of pesticides allowing a more
    sustainable and eco-friendly production. Optimize the irrigation reducing water
    waste. Enhance the overall resources management of the farm. Diagnose and prevent
    plant diseases allowing a significant improvement in the harvest. Reduce farming
    costs. A. Problem Background Smart farming is crucial in the fight against climate
    change, as the waste of natural resources contributes substantially to worsening
    the situation. In this regard, the world of agriculture is pushing toward improving
    monitoring efficiency by employing DL algorithms as decision support in agricultural
    activities [8]. More in detail, the improvement in decision making, with consequent
    optimization of the use of natural and economic resources, has been studied for
    multiple activities related to this area. For example, environmental factors capable
    of affecting the crop yield and the consequent irrigation scheduling were analyzed
    in [9] using DL algorithms. Furthermore, the study of factors that may influence
    irrigation scheduling was analyzed with convolutional neural networks (CNNs) and
    long short-term memory (LSTM) networks in [10]. Similarly, a DL approach for smart
    irrigation systems is proposed in [11] using an LSTM-based neural network. Another
    example of the use of DL algorithms is given by Moon et al. [12], where a prediction
    of CO2 concentration in greenhouses was made thanks to an LSTM network trained
    with different environmental data, including temperature, relative humidity (%RH),
    atmospheric pressure, CO2 concentration, soil parameters (temperature, humidity,
    and electrical conductivity), and parameters outside the greenhouse (temperature,
    humidity, and wind). Disease detection is another central point of study in this
    context that could benefit significantly from the introduction of AI. For instance,
    a shallow visual geometric group (VGG) based on several convolutional and pooling
    layers has been introduced in [13] to identify plant diseases. The effectiveness
    of the network has been tested using images of potato, corn, and tomato fields.
    Other approaches for plant disease identification and classification include the
    use of adapted deep residual neural network-based algorithms [14], LSTM [15],
    transfer learning [16], and embedded system enriched with a recurrent neural network
    (RNN) [17]. For a more detailed discussion about this topic, see [18] and [19].
    Soft sensors, also known as virtual sensors, have also found great engagement
    in this context. This term refers to a software node where numerous measurement
    tasks are performed and processed together. The spread of ANNs has made possible
    the development of increasingly advanced soft sensors capable of identifying correlations
    between measures that could not be predicted in the past. For example, in [20],
    a soft sensor for gasoline engine exhaust emission estimation has been devised
    using ANNs. Soft sensors are crucial in environments where it is impossible for
    logistical reasons, such as installing physical sensors [21], [22]. Their use
    is also helpful in areas where the failure of one of the sensors can cause severe
    damage, both functionally and economically. This aspect is mainly described in
    [23], where soft sensors are implemented for instrument fault accommodation, and
    in [24], where soft sensors were used for timber bundle volume measurement in
    the Swedish forest industry. In this context, the applicability of the soft sensor
    concept to the precision agriculture field employing DL algorithms was evaluated.
    In particular, a study has been carried out on the cost of all the sensors necessary
    for the correct irrigation programming of the fields to be cultivated. The results
    of the analysis emphasized that the soil moisture measurement sensor is one of
    the most important but also one of the most expensive and most critical sensor
    in a weather station for agricultural purposes, as widely described in [11] and
    [25]–[27]. B. Literature Review So far, soil moisture is estimated using WSNs
    and satellite imagery, but these are expensive and have low accuracy [28]. To
    overcome these limitations, the researchers have tried to make the most of all
    the sensors present above and below ground to reduce costs and increase the accuracy
    of the analysis and prediction of the parameters. Specifically, Liu et al. [29]
    tried to predict soil moisture by employing standard environmental sensors comprising
    ambient temperature and humidity sensors and the soil moisture sensor. The authors
    then implemented a smart sensor node connected with the cloud platform via the
    Message Queue Telemetry Transport (MQTT) protocol. However, the approach’s limitations
    can be traced to two factors: the first relates to the economic factor since,
    as mentioned earlier, soil moisture sensors are not cheap; moreover, the proposed
    method requires multiple sensors to improve the accuracy of measurements over
    a large area of land. Another limitation is the possible failures that may have
    the sensors, more likely due to their greater quantity, combined with possible
    measurement errors due to hostile environmental conditions and improper installation
    by the operators. Another approach presented in [30] uses a support vector machine
    (SVM) to predict soil moisture based on digital photography. However, the cost
    and size of the required hardware make the approach based on photography not always
    affordable. Another approach based on soil picture is presented in [33]. Different
    machine learning methods for soil moisture prediction are investigated in [31].
    This article presents a remarkable review of machine learning approaches; however,
    it misses considering RNN and their improvements, such as LSTM. Another comparison
    between machine learning algorithms for soil moisture prediction has been proposed
    in [32], considering multiple linear regression, support vector regression, and
    RNN. The major limitation of the work is the limited time forecast (up to 7 days).
    Other available approaches include the use of graph neural networks [34], intelligent
    multioutput regression model [35], and DL regression network [36]. Therefore,
    to comply with the soft sensor concept, it was necessary to supplement the collected
    data with an estimation and prediction algorithm from exogenous variables related
    to the variable. However, in such cases, correlations between environmental variables
    are often weak and insufficient for applying classical estimation and prediction
    algorithms such as Kalman filtering and Fuzzy logic. C. Major Contributions For
    the reasons mentioned above, it was decided to use the black box approach concept
    typical of DL algorithms, which are used in almost every field today. In particular,
    it was decided to leverage the capabilities of LSTM networks in conjunction with
    the soft sensor concept to remove the soil moisture sensor by predicting the value
    mentioned above from other environmental measurements taken at the site. Furthermore,
    this method is also characterized by the ability to predict not only the present
    value of soil moisture but also more distant time steps due to the structure of
    the LSTM network. The choice of LSTM networks is based not only on the excellent
    performance in regression and prediction by the network itself but also on the
    scalability and flexibility capabilities of the technique. In fact, the neural
    network can be retrained to accommodate a change in geographic sensor placement;
    it is also possible to change the architecture slightly to vary the number of
    inputs while keeping the final soft sensor output unchanged. In this way, it is
    possible to integrate new sensors without overcomplicating the architecture, which
    can improve performance during the regression process of the network. The major
    contributions of this article are as follows. The introduction of a DL technique
    within a traditional monitoring device for smart pharming technologies. This allows
    to propose an innovative AI-based IoT device for precision agriculture that is
    currently not available neither in the literature nor in the market. The implementation
    and characterization of a virtual soil moisture sensor using the LSTM network,
    which to the author’s knowledge, has never been developed in the literature. The
    optimization of both LSTM network architecture and hyperparameters with respect
    to the problem under study in order to improve the accuracy of prediction. A detailed
    comparison between LSTM, fully RNN (FRNN), nonlinear autoregressive network with
    exogenous inputs (NARX), and multivariate regression tree for virtual soil moisture
    sensor, which to the author’s knowledge, is missing in recent literature. D. Manuscript
    Structure This article will introduce the concept of LSTM units and how they integrate
    into more complex architectures in Section II. Then the experimental setup will
    be described from a hardware point of view in Section III. In Section IV, the
    data analysis and the neural network training will be described, along with all
    the baseline models available in state of the art, chosen for performance comparison.
    Section V will compare the results with a traditional nonlinear regression method,
    a NARX networks, and a FRNN. Finally, in Section VI, the conclusions will be presented.
    SECTION II. DL for Soft Sensing A. LSTM Networks LSTM networks are special neural
    networks composed of individual LSTM units. These units result from an evolution
    of the RNNs, which are neural networks having a state, a feature that allows them
    to learn characteristics of long temporal sequences, to make classifications or
    predictions on future predictions time steps. The need to use LSTMs instead of
    RNNs arises from the “vanishing” gradient problem, i.e., the possibility that
    the gradient may vanish or explode during the back-propagation operation, the
    real pillar of the training of ANNs. An example of an LSTM network structure can
    be seen in Fig. 1. In particular, the signals shown in the figure are described
    by the set of following equations: i t = f t = o t = C ~ t = C t = h t = σ( x
    t U i + h t−1 W i ) σ( x t U f + h t−1 W f ) σ( x t U o + h t−1 W o ) tanh( x
    t U g + h t−1 W g ) σ×( f t × C t−1 + i t × C ~ t ) σ t × σ h ( c t ) (1) (2)
    (3) (4) (5) (6) View Source where σ is a sigmoid activation function, σ t and
    σ h are two hyperbolic tangent activation functions, f t is the forget gate’s
    activation vector, i t is the input/update gate’s activation vector, o t is the
    output gate’s activation vector, h t is the hidden state vector, C ~ t is the
    cell input activation vector, and C t is the cell state vector. The different
    W stand for the weight matrices and bias vector parameters learned during the
    training. Fig. 1. Schematic representation of the LSTM cell architecture [37].
    Show All The three gates regulate the flow of information through the cell since
    the number of states stored is arbitrarily defined during training. LSTM networks
    can be used, depending on the choice of the output layer, either for the classification
    of temporal sequences or for the prediction of successive temporal instants. In
    particular, in order to make a convincing prediction, the network must analyze
    several samples, defined as a warmup, that are not given as output by the network.
    In addition to the reference time steps, these networks can have one input and
    one output (univariate LSTM) or multiple inputs and one output (multivariate LSTM).
    The latter approach was the appropriate one for the case study, as it involves
    an improvement in the quality of the prediction of the output variable due to
    the simultaneous analysis of multiple variables. Furthermore, this approach allows
    the identification of correlations between the input and output variables that
    are often difficult to identify with traditional methodologies and approaches.
    The soft sensor can then be designed from a training having as input the measured
    variables and as output, the objective measurement of the soft sensor, to physically
    remove the sensor after the training and continue to estimate its measurement
    at the software level. B. Dataset Construction As in all DL approaches, it is
    necessary to construct the dataset respecting size, intraclass variability, and
    interclass variability criteria. In this case, it is necessary to ensure a sufficient
    number of samples for the warmup of the network. Furthermore, the dataset must
    be made up of the input data and the corresponding time step, which is essential
    for predicting future outputs of the time series analysis. The neural network
    then accepts input in a format (batch, sequence length, input features), provided
    following a structure visible in Fig. 2. Fig. 2. Example of LSTM input structure
    [38]. Show All Another fundamental aspect regarding the construction of the dataset
    is its normalization. This is crucial because a dataset normalized according to
    a Gaussian simplifies the optimizer’s work considerably, thus increasing the performance
    of the prediction. The equation used for the normalization of the dataset is (7),
    where F i stands for the input feature, or input data, NF for the Normalized Features,
    F ¯ for the mean of the features, and s F for the sample standard deviation of
    the features NF i = F i − F ¯ s F . (7) View Source SECTION III. Experimental
    Setup This Section presents the characteristics of the proposed IoT infrastructure
    for smart farming technologies. The entire system is a WSN based on a self-organized
    and self-configured mesh topology to collect data from a distributed network of
    sensor nodes deployed on a wide field. The nodes are independent and self-powered
    units that collect different kinds of environmental data and transmit them to
    a central gateway (i.e., the root node or simply the access point). Furthermore,
    they also serve as a relay for other nodes to reach the central gateway using
    a multihop protocol and dynamic routing tables. The proposed sensor node is a
    low-cost and low-power device composed of the following subunits. The power supply
    unit uses the energy provided by a photovoltaic (PV) panel to recharge two lithium
    ion batteries through a customized dc–dc converter. The acquisition and elaboration
    unit uses the ESP32 system-on-a-chip microcontroller to acquire data from analog
    and digital sensors and transmit them to the central gateway through IEEE 802.11
    Wi-Fi protocol. Digital sensors are managed directly by the microcontroller, while
    analog sensors are acquired through adequate and customized conditioning circuits
    and two embedded eight-channel 12-bit successive approximation register (SAR)
    analog-to-digital converter (ADC). An external 3 dBi antenna. A sensors pack,
    including the following transducers. The AM2315 digital temperature and humidity
    sensor. The temperature measurement is characterized by a 0.1 °C and 16-bit resolution
    ranging from −40 °C to 125 °C. The typical accuracy is ±0.1 °C in the center of
    the range, while it can reach the maximum value of ±1 °C in the proximity of the
    range’s bound. Instead, the relative humidity measurement has a typical resolution
    of 0.1 %RH and typical accuracy of ±2 %RH in the wide range [0, 99.9] %RH. This
    sensor is used to acquire ambient temperature (At) and relative humidity of the
    air (RHa). The DS18B20 programmable (9- to 12-bit resolution) digital temperature
    sensor is used to acquire the soil temperature (St). It is characterized by ±0.5
    °C accuracy from −10 °C to 85 °C. The SM 100 soil moisture sensor, which is an
    analog transducer characterized by a 3% volumetric water content (VWC) accuracy
    and a 0.1% VWC resolution. This sensor is used to collect information about the
    relative humidity of the soil (VWC), which represents the target feature to be
    estimated using the proposed soft sensing algorithm. An analog solar radiation
    sensor used to collect the light radiation (Rad). An embedded thermistor with
    ±0.5 °C accuracy implemented to monitor the microcontroller’s overheating. The
    duty cycle of the proposed sensor node is almost 5% (i.e., the node works 1 min
    to acquire and send data over a period of 20 min) to minimize energy consumption,
    to avoid an oversampling of environmental data (note that meteorological parameters
    change slowly during the day), and to reduce component overheating and thus increase
    system reliability. See [37] and [38] for more information about the developed
    hardware. The proposed network has been installed within an olive grove nearby
    Pisa, Tuscany, central Italy. A set of ten battery-powered sensor nodes have been
    deployed in different locations of the olive grove, and they have been used to
    acquire environmental and soil parameters for more than one year. An example of
    sensor node installation on the field is illustrated in Fig. 3, highlighting the
    location of the different implemented sensors with dedicated labels. Fig. 3. Photograph
    of a sensor node installation on the olive grove. Show All The proposed WSN for
    smart farming applications has been self-developed, taking into account the following
    principles. Low-cost hardware able to ensure a good tradeoff between metrological
    performances, computational complexity, and the price of the final product. Fault-tolerant
    network architecture to ensure high-reliability requirements. Easiness and quickness
    of installation on the field. Low power consumption to maximize the battery life
    and minimize the need for maintenance operations due to loss of power. Easiness
    of sensor calibration. Considering all the principles mentioned above, it stands
    rapidly out of the numerous issues and challenges brought by the SM 100 soil moisture
    sensor. First of all, the high cost of the soil moisture sensor makes it extremely
    difficult to maintain a good tradeoff between the performance and price of the
    final product. As a matter of fact, half the hardware development cost of the
    entire sensor node (including all the sensors and the required electronics) is
    due only to the SM 100 soil moisture sensor. Furthermore, the soil moisture sensor
    also has a higher cost in terms of maintenance. Moreover, several studies on the
    prototypes highlighted that the soil moisture sensor has a higher probability
    of failure than all the other sensors installed in the proposed node, with a major
    impact on the overall system’s reliability. Moreover, the calibration process
    of the SM100 is extremely difficult, and the installation is quite challenging
    too. It must be deployed on the ground at a precise depth level, which must be
    exactly the same for all the sensors in the WSN to ensure consistent results.
    Considering all the limitations mentioned above, a DL approach for soft sensing
    has been implemented in this work. The work aims to substitute the soil moisture
    transducer with a virtual sensor achieved by utilizing an LSTM network. The data
    acquired by the other sensors installed in the station are used to train the network
    and predict the target feature (i.e., the VWC). SECTION IV. Data Analysis and
    Network Training A. Data Correlations Following the data collection, organized
    in tables, an in-depth analysis was carried out to remove any errors and to understand
    the presence of any correlations capable of improving the ability to estimate
    the relative humidity of the soil. As indicated above, the data available concern
    the time of acquisition, i.e., the timestamp, the ambient temperature (At), the
    RHa, the soil temperature (St), the relative humidity of the soil (target feature,
    VWC), the light radiation (Rad), and other values concerning the operating status
    of the smart sensor. The first results concerning this analysis are shown in Fig.
    4, where data concerning environmental and soil parameters have been examined.
    The matrix presents on the major diagonal unitary values, as they refer to the
    autocorrelation of the features. In contrast, in the other cells, values between
    −1 and 1 represent the correlation of covariances between the features reported,
    respectively, in the specific row and column. As can be seen from the correlation
    matrix, the features that present greater correlations with the others have been
    air temperature, relative air humidity, and soil temperature. On the contrary,
    the light radiation and the relative humidity of the soil had less strong correlations
    with the other features. Fig. 4. Correlation heatmap between data acquired by
    the proposed sensor node. Show All The main focus of this discussion was that
    soil moisture had stronger correlations with air temperature and soil temperature,
    while it has weaker correlations with relative air humidity and light radiation.
    Therefore, to improve the soil moisture prediction as much as possible, it was
    decided to include additional data regarding the amount of rainfall. Although
    no rainfall sensor was installed on the site, it was possible to obtain the above
    data related to the specific location where the sensors were installed, thanks
    to the hydrological and geological service of the Tuscany Region, Italy. Following
    the data collection, it was necessary to synchronize them, sampled every 15 min,
    with those acquired by the setup described above. An example of the complete data
    format can be seen in Table I. TABLE I Extract of the Complete Data Format Used
    in this Work Finally, the confusion matrix was calculated similar to what was
    done before. The results are shown in Fig. 5. It can be seen from the correlation
    heatmap that rainfall data have a weak negative correlation with air temperature,
    a medium correlation with air humidity and soil moisture, and no correlation with
    soil temperature and light radiation. The evaluation of the significance of the
    input variables for the algorithms employed has been reported in [39] and states
    that the variable is significant if its correlation is greater than the following
    equation, for large N , numerosity of input data Absolute correlation≥ 2 N − −
    √ . (8) View Source Fig. 5. Correlation heatmap including sensors installed on
    the prototype and rainfall data. Show All B. Multivariate Regression Tree As described
    above, it was not possible to perform a linear regression to predict soil moisture
    values, as there are no sufficiently strong correlations between the different
    features. Therefore, it was decided to use a regression method based on a specific
    machine learning algorithm. Thus, in the form of a multivariate regression tree,
    decision tree learning has been used as a term of comparison for the performances
    of the proposed DL algorithm. This method is, in fact, used in data mining, machine
    learning, and statistical applications for both classification and decision-making
    applications and prediction applications [40], [41]. In particular, three specific
    profiles of this algorithm were used: fine tree, medium tree, and coarse tree.
    The parameter used by the algorithm as a minimization objective is the entropy
    E(S) (9) E(S)= ∑ i=1 N (− p i log 2 p i ) (9) View Source where S is the set of
    all instances in the dataset, N is the number of distinct class values, and p
    i is the event probability. In this case, it can measure the impurity of the sub
    splits of the regression tree, improving the distinction of the features and,
    therefore, the successive regressions. In addition to this parameter, the Gini
    impurity I G (10) is also usually used in constructing the regression tree, which
    is also useful in estimating the purity of the tree’s branches I G =1− ∑ j=1 N
    ( p 2 i ) (10) View Source where N is the number of distinct class values, and
    p i is the event probability. The model was generated on one dataset and then
    tested on three datasets in all cases. These results are reported in Section V.
    C. NARX Model Another tested methodology belonging to the field of neural networks
    is NARX. These networks are part of state of the art in time series classification
    and prediction. The model relates the current value of a time series to the past
    values of the same series and to the current and past values of the driving factor
    (the model). The NARX model can be formalized as follows: y t =F( y t−1 , y t−2
    , y t−3 ,…, u t , u t−1 , u t−2 , u t−3 ,…,)+ε. (11) View Source In (10), y t
    is the variable of interest at time t , u t is the externally determined variable
    at time t , and ε is the error. The designed NARX network has been structured
    with ten hidden layers and one delay step. D. Fully Recurrent Neural Network FRNNs
    are deep neural networks capable of classifying and predicting temporal sequences
    characterized by the greatest simplicity of hyperparameters possible. The FRNN
    is a simple deep neural network where, however, every neuron, except those belonging
    to the input layer, has a feedback link from the output to the input of another
    neuron. This is also the case for multiple hidden layers and output layer neurons.
    This greatly simplifies the basic cell structure at the expense of architectural
    complexity [42]. The architecture of FRNN employed in the work is shown in Table
    II and includes 2000 warmup samples, 32 fully recurrent units, and one neuron
    for the output layer for the regression task. TABLE II Architecture of the Proposed
    FRNN E. LSTM Network As described in Section II, the choice of DL algorithm fell
    on LSTM Networks. In particular, tests were carried out to evaluate the performance
    of the different hyperparameters, such as the length of the sequence for warming
    up the network, the sampling rate, the batch size, the number of epochs, the learning
    rate, the training, and validation split of the data. The network architecture
    was then designed, as shown in Table III. The size of the input layer had to take
    into account the number of input variables, namely, St, RHa, Gt, Rad, and Rain.
    So, the shape of the input level is composed of the batch, the warmup steps (2000),
    and the number of input variables, while the LSTM level is composed of 32 units
    with no activation function. The output layer consists of only one neuron to comply
    with the regression task. The training was monitored with the mean square error
    loss parameter and using the Adam optimizer. TABLE III Architecture of the Proposed
    LSTM Network F. Network Training In order to train the network, it was first necessary
    to fix all the hyper-parameters in order to reduce the mean squared error of the
    neural network output compared to the validation set. Although there is no general
    rule for defining the architecture of the neural network, the literature has reported
    that the number of hidden layers should be only one, or at least no more than
    two, to keep accuracy high and reduce possible overfitting [43]. The number of
    LSTM cells of the hidden layer, on the other hand, is highly dependent on the
    level of complexity of the input signal. For this reason, it should be as few
    as possible in order to avoid overfitting problems. Therefore, the operation was
    carried out empirically, verifying each time the trend of the results concerning
    the best set of the previous rounds. The optimal parameters obtained at the end
    of the optimization process are shown in Table IV and have been used for both
    LSTM and FRNN training. TABLE IV Best Parameters of the Proposed LSTM Network
    More in detail, after the operation of normalization described in Section II,
    the data have been organized, with the aid of an appropriate Python script, in
    such a way to respect the shape foreseen by the input layer of the neural network.
    At the end of the training operations, the best results have brought back a validation
    loss, mean squared error, equal to 1.70, reached on the 35th epoch. The summary
    of the dataset split can be seen in Table V, while the training trend and the
    loss and validation loss parameters can be seen in Fig. 6. TABLE V Dataset Management
    Fig. 6. Network training results. Show All After the training, the model was compiled
    and used to predict and estimate soil relative humidity data in the inference
    phase. SECTION V. Results and Discussion A. Algorithm Comparison Following the
    neural network training, it was decided to test its results on three sets of measurements
    taken at different locations. In particular, the three sets covered a period of
    at least nine months, with data acquired between 2020 and 2021. As a result, the
    variability of the data is very high, as they covered periods of cold and heat,
    related to the change of season between winter and summer, and also between drought
    and large rainfall, as evidenced by the variability of precipitation. These factors
    predicted relative soil moisture values more challenging. It was, therefore, necessary
    to set up, as described above, a long warmup period of about 2000 samples, equal
    to about 34 days. Following the inference operation, it was also necessary to
    de-normalize the resulting data by reversing (7) using the same mean and standard
    deviation values. The results of this evaluation were then compared and visualized
    to verify consistency with actual soil moisture data to understand the true capability
    of the system to replace the relative sensor. As an example, a batch of data having
    a time span of about 180 days is reported, as an example, in Fig. 7. In particular,
    the predicted values, in orange, and the measured values, in blue, are compared.
    Fig. 7. Extract of the proposed soft sensor’s output compared to the actual sensor’s
    response. Show All The same operation was performed with the algorithm chosen
    as a benchmark and described previously. More in detail, the dataset used for
    training the neural network has been used to derive the regression model, while
    the three sets of measurements used during the testing phase of the LSTM were
    also used to test the other models. The measured values versus the values resulting
    from the model were then plotted, and the results are reported in Fig. 8. For
    the validation of the model, a cross-validation fold on four partitions of the
    dataset was also prepared to avoid overfitting the model. Fig. 8. Medium regression
    tree algorithm. True values versus predicted sensor’s output. Show All In order
    to choose which of the three regression trees (fine, medium, or coarse) was the
    best, the root mean square error (RMSE), calculated as in (12), was evaluated
    for each test set of measures RMSE= ∑ N i=1 ( y ^ i − y i ) 2 N − − − − − − −
    − − − − − − √ (12) View Source where N is the number of samples analyzed, y ^
    i is the estimated value, and y i is the real value. The results of the RMSE estimation
    are reported in Table VI. TABLE VI Comparison of the RMSE Between the Proposed
    LSTM and Three Different Regression Trees What stands out from the table is that
    the coarse tree turns out to be the optimal multivariate regression model due
    to the smaller mean square error. Similarly, the RMSE has also been evaluated
    considering the neural network prediction results since accuracy is not an employable
    parameter for regression tasks. For comparison, the RMSE of the LSTM approach
    has been calculated using the same batches of data implemented in the case of
    the regression tree, NARX, and FRNN. The resulting RMSE values are also reported
    in the final row of Table VI using bold characters. Fig. 9 shows a batch of true
    responses versus predicted responses for the LSTM approach. What stands out from
    the plot is that the results of Table VI are confirmed. Furthermore, the values
    predicted by the LSTM network resulted in being closer to the bisector (i.e.,
    perfect prediction) than those related to the regression tree method (as in Fig.
    8). Fig. 9. Proposed LSTM approach. True values versus predicted sensor’s output.
    Show All Given the models’ results and their performances presented in synthetic
    terms using the RMSE, it can therefore be concluded that the proposed method based
    on the LSTM network has provided better results on all three batches of data used
    for testing. In contrast, the NARX network and the FRNN achieved similar performances,
    better than the multivariate regression trees but worse than the LSTM. The downside
    concerns training times: while inference times turn out to be small compared to
    the dynamics of the phenomenon under investigation (~1 s), training times can
    be considerably longer depending on the type of hardware used. In fact, deep neural
    networks require longer training times than other approaches, which can be cut
    down by using graphics accelerators and more powerful hardware. In particular,
    the LSTM has a better RMSE and a significantly higher training time at the same
    epochs than the FRNN. This is mainly due to the higher architectural complexity
    of the LSTM unit in comparison with the simple feedback neuron of the FRNN. A
    laptop without graphics acceleration has been used for this article, and the results
    are shown in Table VII. TABLE VII Training Time Comparison B. Performance Estimation
    In order to pursue the main purpose of the work, i.e., to design a soft sensor
    starting from the technique exposed and tested so far, it was necessary to perform
    a more in-depth analysis of the predictions in comparison with the ground truth,
    measured with the appropriate soil moisture sensor, to make calibration of the
    entire measurement chain. In a first step, the characteristics of the error committed
    by the neural network in estimating the relative humidity of the soil were evaluated
    in more detail. An in-depth analysis of how the average relative error varies
    across the dataset was then performed for each test batch employed. For this purpose,
    it was decided to use a function defined as sliding occurrence error (SOE). This
    function allows estimating the probability distribution of the average relative
    error in the form of a survival function, as in the following equation: S(t)=P({T>t})=
    ∫ ∞ t f(u)du=1−F(t) (13) View Source where T is a continuous random variable with
    cumulative distribution function F(t) on the interval [0, ∞ ). Then, the average
    relative error was calculated using a sliding window on the dataset, according
    to (14). L s specifies the width, in terms of the number of samples, of the sliding
    window, y p the predicted value, and y m the measured value E mean,L (i)= 1 L
    S ∑ k=0 L S −1 ∣ ∣ ∣ y p (i−k)− y m (i−k) y m (i−k) ∣ ∣ ∣ . (14) View Source The
    SOE curve plots the mean relative deviation E mean,L on the x -axis and the corresponding
    relative occurrences in the moving window of the regression error on the y -axis.
    To improve the prediction accuracy, further optimization has been carried out.
    First, the length of the sliding window and the overlap between different windows
    have been parametrized. Following this analysis, a 30-sample wide sliding window
    was chosen, with an overlap between windows of 80%. The latter corresponds to
    24 samples. The optimized results are shown in Fig. 10. Fig. 10. Comparison of
    SOE of the three testing data batches. Show All In particular, the first batch
    of data is the one that obtained the lowest error, as the average relative error
    of almost all observation windows was confined within 5%. On the other hand, batch
    three and especially batch two reported larger mean relative errors even though
    the probability of it being greater than 0.08 is still less than 10%. The last
    analysis has been about comparing the SOE obtained for the best batch of data
    (the first one) predicted using the LSTM network, the coarse regression tree method
    (i.e., the regression tree method that ensures the best results for the same batch
    of data), the NARX and the FRNN. The results of this comparison are illustrated
    in Fig. 11. Also, in this case, we have the substantial confirmation of the results
    reported previously, as the probability level associated with the average error
    of the sliding window, calculated on the output data of the LSTM network, turns
    out to be lower than that of the regression tree on the whole interval under examination.
    Fig. 11. Comparison of SOE considering the proposed approach and three other state-of-the-art
    methods. Show All At the same time, FRNN performed slightly worse than LSTM, and
    NARX had almost the same performance as the regression tree. These tests, therefore,
    verified the improvements of using the LSTM network for soft sensing over the
    use of traditional machine learning algorithms, particularly over the regression
    tree and NARX. SECTION VI. Conclusion This work deals with a soft sensing solution
    to improve the performance of a WSN for smart farming applications. The developed
    WSN is based on ten autonomous sensor nodes equipped with an air temperature and
    humidity sensor, a soil temperature sensor, a soil moisture sensor, and a radiation
    sensor. Due to several limitations in using a physical sensor for measuring the
    relative humidity of the soil, this work introduces a soft sensing algorithm based
    on a DL approach to implement a virtual soil moisture sensor. The virtual sensor
    has proven to be a remarkable advantage despite the classical physical sensor,
    allowing a cost reduction, an increment in system reliability, and an easier installation
    and maintenance of the node. Compared with NARX, FRNN, and multivariate regression
    tree networks, the proposed technique’s main downside lies in the long training
    time. However, this problem can be solved by using more powerful hardware at the
    time of training since, in the inference phase, the time required is significantly
    lower and in line with the dynamics of the observed phenomenon. To test and validate
    the performances of the proposed LSTM-based soft sensing approach, a comparison
    with three alternatives of the classical multivariate regression tree algorithm
    has been presented. The results show the goodness of estimation of the proposed
    virtual sensor regarding RMSE and SOE. Authors Figures References Citations Keywords
    Metrics More Like This A PM2.5 Concentration Prediction in High-Cost and Low-Cost
    Wireless Sensor Networks Using Neural Networks 2023 16th International Conference
    on Advanced Technologies, Systems and Services in Telecommunications (TELSIKS)
    Published: 2023 Intrusion Monitoring in Military Surveillance Applications using
    Wireless Sensor Networks (WSNs) with Deep Learning for Multiple Object Detection
    and Tracking 2021 International Conference on Control, Automation, Power and Signal
    Processing (CAPS) Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE transactions on instrumentation and measurement
  limitations: '>'
  pdf_link: null
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: A Virtual Soil Moisture Sensor for Smart Farming Using Deep Learning
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1117/12.2224248
  analysis: '>'
  authors:
  - Stephanie Bonadies
  - Alan M. Lefcourt
  - S. Andrew Gadsden
  citation_count: 15
  full_citation: '>'
  full_text: '>

    This website uses cookies to provide you with a variety of services and to improve
    the usability of our website. By using the website, you agree to the use of cookies
    in accordance with our Privacy Policy. Close    17 May 2016 Get Citation A survey
    of unmanned ground vehicles with applications to agricultural and environmental
    sensing Stephanie Bonadies, Alan Lefcourt, S. Andrew Gadsden Author Affiliations
    +    Proceedings Volume 9866, Autonomous Air and Ground Sensing Systems for Agricultural
    Optimization and Phenotyping; 98660Q (2016) https://doi.org/10.1117/12.2224248
    Event: SPIE Commercial + Scientific Sensing and Imaging, 2016, Baltimore, MD,
    United States DOWNLOAD PAPER SAVE TO MY LIBRARY ARTICLE MENU     Abstract Unmanned
    ground vehicles have been utilized in the last few decades in an effort to increase
    the efficiency of agriculture, in particular, by reducing labor needs. Unmanned
    vehicles have been used for a variety of purposes including: soil sampling, irrigation
    management, precision spraying, mechanical weeding, and crop harvesting. In this
    paper, unmanned ground vehicles, implemented by researchers or commercial operations,
    are characterized through a comparison to other vehicles used in agriculture,
    namely airplanes and UAVs. An overview of different trade-offs of configurations,
    control schemes, and data collection technologies is provided. Emphasis is given
    to the use of unmanned ground vehicles in food crops, and includes a discussion
    of environmental impacts and economics. Factors considered regarding the future
    trends and potential issues of unmanned ground vehicles include development, management
    and performance. Also included is a strategy to demonstrate to farmers the safety
    and profitability of implementing the technology. © (2016) COPYRIGHT Society of
    Photo-Optical Instrumentation Engineers (SPIE). Downloading of the abstract is
    permitted for personal use only. Citation Download Citation Stephanie Bonadies,
    Alan Lefcourt, and S. Andrew Gadsden "A survey of unmanned ground vehicles with
    applications to agricultural and environmental sensing", Proc. SPIE 9866, Autonomous
    Air and Ground Sensing Systems for Agricultural Optimization and Phenotyping,
    98660Q (17 May 2016); https://doi.org/10.1117/12.2224248 ACCESS THE FULL ARTICLE
    ORGANIZATIONAL Sign in with credentials provided by your organization. Organizational
    Username Organizational Password Show Password INSTITUTIONAL Select your institution
    to access the SPIE Digital Library. SELECT YOUR INSTITUTION PERSONAL Sign in with
    your SPIE account to access your personal subscriptions or to use specific features
    such as save to my library, sign up for alerts, save searches, etc. PERSONAL SIGN
    IN No SPIE Account? Create one PURCHASE THIS CONTENT SUBSCRIBE TO DIGITAL LIBRARY
    50 downloads per 1-year subscription Members: $195 Non-members: $335 ADD TO CART
    25 downloads per 1 - year subscription Members: $145 Non-members: $250 ADD TO
    CART PURCHASE SINGLE ARTICLE Includes PDF, HTML & Video, when available Members:
    $17.00 Non-members: $21.00 ADD TO CART Advertisement Subscribe to Digital Library
    Receive Erratum Email Alert Access provided by Univ. of Nebraska-Lincoln                      Site
    Map Information for Authors Information for Reviewers Information for Librarians
    Contact & Support    © 2024 SPIE Connect'
  inline_citation: '>'
  journal: Proceedings of SPIE
  limitations: '>'
  pdf_link: null
  publication_year: 2016
  relevance_score1: 0
  relevance_score2: 0
  title: A survey of unmanned ground vehicles with applications to agricultural and
    environmental sensing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3390/w14060889
  analysis: '>'
  authors:
  - Jorge Lopez-Jimenez
  - Alain Vande Wouwer
  - Nicanor Quijano
  citation_count: 6
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: '>'
  journal: Water (Basel)
  limitations: '>'
  pdf_link: https://www.mdpi.com/2073-4441/14/6/889/pdf?version=1647444247
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Dynamic Modeling of Crop–Soil Systems to Design Monitoring and Automatic
    Irrigation Processes: A Review with Worked Examples'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3389/fpls.2022.915109
  analysis: '>'
  authors:
  - Ying Cui
  - Suhong Liu
  - Xingang Li
  - Hao Geng
  - Yun Xie
  - Yi He
  citation_count: 5
  full_citation: '>'
  full_text: '>

    Web Store Add shortcut Name URL Customize Chrome'
  inline_citation: '>'
  journal: Frontiers in plant science
  limitations: '>'
  pdf_link: https://www.frontiersin.org/articles/10.3389/fpls.2022.915109/pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'Estimating Maize Yield in the Black Soil Region of Northeast China Using
    Land Surface Data Assimilation: Integrating a Crop Model and Remote Sensing'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.32604/iasc.2023.026289
  analysis: '>'
  authors:
  - S. Sakthivel
  - VijayaRangan Vivekanandhan
  - M. Manikandan
  citation_count: 2
  full_citation: '>'
  full_text: '>

    Submit LOGIN REGISTER Home Academic Journals Books & Monographs Conferences Language
    Service News & Announcements About Home/ Journals/ IASC/ Vol.35, No.1, 2023/ 10.32604/iasc.2023.026289
    Submit a Paper Propose a Special lssue Table of Content Abstract Introduction
    Literature Review Proposed Methodology Results and Discussion Conclusion and Future
    Work References Open Access ARTICLE Automated Irrigation System Using Improved
    Fuzzy Neural Network in Wireless Sensor Networks S. Sakthivel1, V. Vivekanandhan2,*,
    M. Manikandan2 1 Department of Computer Science and Engineering, Sona College
    of Technology, Salem 636005, Tamilnadu, India 2 Department of Computer Science
    and Engineering, Adhiyamaan College of Engineering, Hosur 635109, Tamilnadu, India
    * Corresponding Author: V. Vivekanandhan. Email: Intelligent Automation & Soft
    Computing 2023, 35(1), 853-866. https://doi.org/10.32604/iasc.2023.026289 Received
    21 December 2021; Accepted 19 February 2022; Issue published 06 June 2022 View
    Full Text Download PDF Abstract Irrigation plays a significant role in various
    agricultural cropping methods deployed in semiarid and arid regions where valuable
    water applications and managing are considered crucial concerns. Multiple factors
    such as weather, soil, water, and crop data need to be considered for irrigation
    maintenance in an efficient besides uniform manner from multifaceted and different
    information-based systems. A Multi-Agent System (MAS) has been proposed recently
    based on diverse agent subsystems with definite objectives for attaining global
    MAS objective and is deployed on Cloud Computing paradigm capable of gathering
    information from Wireless Sensor Networks (WSNs) positioned in rice, cotton, cassava
    crops for knowledge discovery and decision making. The radial basis function network
    has been used for irrigation prediction. However, in recent work, the security
    of data has not focused on where intruder involvement might corrupt the data at
    the time of data transferring to the cloud, which would affect the accuracy of
    decision making. To handle the above mentioned issues, an efficient method for
    irrigation prediction is used in this work. The factors considered for decision
    making are soil moisture, temperature, plant height, root depth. The above-mentioned
    data will be gathered from the sensors that are attached to the crop field. Sensed
    data will be forwarded to the local server, where data encryption will be performed
    using Adaptive Elliptic Curve Cryptography (AECC). After the encryption process,
    the data will be forwarded to the cloud. Then the data stored in the cloud will
    be decrypted key before being given to the decision-making module. Finally, the
    uniform distribution-based fuzzy neural network is formulated based on the received
    data information in the decision-making module. The final decision regarding the
    level of water required for crop fields would be taken. Based on this outcome,
    the water volve opening duration and the level of fertilizers required will be
    considered. Experimental results demonstrate the effectiveness of the proposed
    model for the United States Geological Survey (USGS) database in terms of precision,
    accuracy, recall, and packet delivery ratio. Keywords Irrigation; multi-agent
    system; precision irrigation; accuracy; elliptic curve cryptography; encryption;
    wireless sensor networks; fertilizers Cite This Article S. Sakthivel, V. Vivekanandhan
    and M. Manikandan, "Automated irrigation system using improved fuzzy neural network
    in wireless sensor networks," Intelligent Automation & Soft Computing, vol. 35,
    no.1, pp. 853–866, 2023. BibTex EndNote RIS    This work is licensed under a Creative
    Commons Attribution 4.0 International License , which permits unrestricted use,
    distribution, and reproduction in any medium, provided the original work is properly
    cited. We recommend DeepQ Based Automated Irrigation Systems Using Deep Belief
    WSN E. Gokulakannan, Intelligent Automation & Soft Computing, 2022 An Energy-Efficient
    Protocol Using an Objective Function & Random Search with Jumps for WSN Mohammed
    Kaddi et al., CMC-Computers, Materials & Continua Chaotic Krill Herd with Fuzzy
    Based Routing Protocol for Wireless Networks Dutta Ashit et al., Intelligent Automation
    & Soft Computing, 2022 Greenhouse; wireless sensor network; deep learning; Internet
    of Things; strategic crops monitoring; smart irrigation CMC-Computers, Materials
    & Continua An Interpretable Artificial Intelligence Based Smart Agriculture System
    Fariza Sabrina et al., CMC-Computers, Materials & Continua, 2022 Design of precision
    irrigation system based on wireless sensor network and fuzzy control Wei Zhang
    et al., Transactions of the Chinese Society of Agricultural Engineering, 2009
    Research and design of crop water status monitoring system based on wireless sensor
    networks Gao, Feng et al., Transactions of the Chinese Society of Agricultural
    Engineering A Sensor Node Selection Method Based on Fuzzy Programming in Wireless
    Sensor Networks CHU Wei-Jian et al., Electronic Science and Technology, 2018 Research
    on Security of Pervasive Computing System Based on Wireless Sensor Networks YANG
    Han et al., Electronic Science and Technology, 2018 Application of sensor data
    based predictive maintenance and artificial neural networks to enable Industry
    4.0 Jon Martin Fordal et al., Advances in Manufacturing, 2023 Powered by Downloads
    Citation Tools 1326 View 632 Download 0 Like 2 Related articles Vermicompost and
    water stress effects on dry beans (Phaseolus vulgaris L.): productive parameters
    and water relations Aguilar-Benítez G, CB Peña-Valdivia,... Physiological traits
    during ripening showing the appropriate timing for harvest to improve the organoleptic
    quality of “Flavorcrest” peach (Prunus persica... Altube HA, MG Ontivero Urquiza,...
    Nocturnal accumulation of titratable acidity in Tillandsia makoyana (Bromeliaceae),
    epiphytic bromeliad of the tropical dry forest Díaz-Álvarez EA, AP Rojas-Cortés,...
    Evapotranspiration and energy balance measurements over a soybean field in the
    semiarid sowthwestern region of Buenos Aires province (Argentina) Cargnel MD,
    AL Orchansky, RE Brevedan,... Genetic analysis for quantitative traits in bread
    wheat exposed to irrigated and drought stress conditions Ataei R, M Gholamhoseini,
    M Kamalizadeh'
  inline_citation: '>'
  journal: Intelligent automation & soft computing (Print)
  limitations: '>'
  pdf_link: https://file.techscience.com/ueditor/files/iasc/TSP_IASC-35-1/TSP_IASC_26289/TSP_IASC_26289.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: Automated Irrigation System Using Improved Fuzzy Neural Network in Wireless
    Sensor Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.14569/ijacsa.2021.0120239
  analysis: '>'
  authors:
  - K Vanishree
  - G S Nagaraja
  citation_count: 1
  full_citation: '>'
  full_text: ">\n(IJACSA) International Journal of Advanced Computer Science and Applications,\
    \ \nVol. 12, No. 2, 2021 \n304 | P a g e  \nwww.ijacsa.thesai.org \nEmerging Line\
    \ of Research Approach in Precision \nAgriculture: An Insight Study \nVanishree\
    \ K1 \nResearch Scholar, Department of ISE \nRV College of Engineering \nBengaluru,\
    \ India \nNagaraja G S2 \nProfessor and Associate Dean, Department of Computer\
    \ \nScience and Engineering, RV College of Engineering \nBengaluru, India \n \n\
    \ \nAbstract—The present state of agriculture and its demand is \nvery much different\
    \ than what it used to be two decades back. \nHence, Precision Agriculture (PA)\
    \ is more in demand to address \nthis challenging demand. With consistent pressure\
    \ to develop \nmultiple products over the same agricultural land, farmers find\
    \ \nPA’s adoption the best rescue-based solution with restricted \nresources.\
    \ PA accelerates the yield and potentially assists in \ncatering up the demand\
    \ of scarcity of demands of food. With the \nincreasing adoption of PA-based technologies\
    \ over farming, there \nare best possibilities to explore efficient farming practices\
    \ and \nbetter decision-making facilitated by real-time data availability. \n\
    There isan evolution of various novel technologies to boost \nagricultural \n\
    performance, \ni.e. \nvariable \nrate \ntechnology, \nGeomapping, remote sensing,\
    \ automated steering system, and \nsatellite positioning system. Apart from this,\
    \ it is also observed \nthat Internet-of-Things (IoT) and Wireless Sensor Network\
    \ \n(WSN) have been slowly penetrating this area to acceleratePA's \ntechnological\
    \ advancement. It is noticed that the adoption of \nsensing technology is a common\
    \ factor in almost all the \ntechniques used in PA. However, there is no clear\
    \ idea about the \nmost dominant approach in this regard. Therefore, this paper\
    \ \ndiscusses existing approaches concerning standard conventional \nPA and sensing-based\
    \ PA using WSN. The study contributes \ntowards some impressive learning outcomes\
    \ to state that WSN \nand IoT are extensive to boost PA. \nKeywords—Precision\
    \ agriculture; smart farming; wireless \nsensor network; internet-of-things; remote\
    \ sensing; variable rate \ntechnology \nI. \nINTRODUCTION \nTechnological advancement\
    \ has penetrated agriculture in \nthe present time, right from small to large\
    \ scale farming [1]. \nTwo decades back, the Global Positioning System (GPS) usage\
    \ \npermits the farmers to collect necessary farming data, which \nfacilitates\
    \ autonomous steering control system development \n[2]. However, the present times\
    \ make use of more advanced \ntechnologies, e.g., fixed solutions for Internet-of-Things\
    \ (IoT), \naerial devices, sensors, etc., to carve the progressive path of \n\
    Precision Agriculture (PA). The prime goal of PA is to \nachieve, i) opt for the\
    \ appropriate crop to ensure increased \nquality yield and make more revenue in\
    \ the commercial \nmarket, ii) using the proper data to assess the performance\
    \ of \nthe farming land, iii) improve the economics of farming and \nanother offer\
    \ better sustainability towards the environment, and \niv) making a prediction\
    \ of climatic fluctuations and taking \nnecessary countermeasures to protect from\
    \ upcoming threat \ntowards agriculture [3]-[5]. The significant beneficial aspectof\
    \ \nPA is minimizing and controlling crop waste and adverse \ninfluence over the\
    \ environment.Farmers are facilitated with the \nappropriate \nanticipated \n\
    yield \nfor \ntheir \nfarming \nland. \nInvestigation towards PA could offer potential\
    \ insight towards \nsolving the crisis of food demand globally [6]. Farmers are\
    \ \nnow able to identify the beneficial aspects of PA introduced by \nIoT. The\
    \ return of investment and quality of decision-making \ncan be ensured by adoption\
    \ PA by business owners.There is the \ninclusion of various metrics to carry out\
    \ PA, e.g., fertilizer \ninput, a sample of soil, nutrient availability of soil,\
    \ rainfall \nlevel, temperature, etc. [7]. \nAcquisition of this information via\
    \ sensors can lead to \nprecision decision-making by the farmers. It can also\
    \ furnish \nvarious real-time data of their farming land, identifying \nspecific\
    \ production patterns or identifying any associated risk \nfactors during cultivation\
    \ and harvesting season. Adopting PA \nalso facilitates exclusive access to the\
    \ agricultural records via \ncloud-based resources where the data can be accessed\
    \ anytime \nand anywhere [8]. It also leads to an adequate formulation of \nmeasures\
    \ towards crop protection. Usage of sensors can \nquickly identify the health\
    \ statistics of a plant concerning soil \npressure, presence of chemicals, environmental\
    \ impact, pest, \netc. [9]. This information leads to a better decision in planning\
    \ \nfor fertilizer input by the farmer. The most potential benefit of \nPA is\
    \ associated with irrigation management. Any form of the \ncrop demands an adequate\
    \ water supply in appropriate \nquantities and channel them throughout the farming\
    \ land. \nUsage of various controllers, actuators, and sensors further \noffers\
    \ relevantwater supply statistics for better irrigation \nmanagement. To effectively\
    \ operational, PA demands the use \nof progressive technologies, i.e., usage of\
    \ sensors [10], \nprecision farming software [11], connectivity protocols [12],\
    \ \nand location monitoring tools [13]. Irrespective of PA’s known \nbenefits,\
    \ it is still yet to get a discloser about the research \nprogress regarding more\
    \ insights over challenging state of \nfarming, minimal resource waste, identifying\
    \ the unique \npattern of production or risk. Therefore, this manuscript offers\
    \ \nan exhaustive review of standard and upcoming potential PA \napproaches to\
    \ providea more precise research state. The \nsignificant contributionsin the\
    \ proposed paper aredescribed as \nfollows: \n The present state of conventional\
    \ approaches in PA is \nhighly scattered. So this paper contributes towards \n\
    offering a compact discussion of conventional standard \napproaches concerning\
    \ its taxonomies. \n(IJACSA) International Journal of Advanced Computer Science\
    \ and Applications, \nVol. 12, No. 2, 2021 \n305 | P a g e  \nwww.ijacsa.thesai.org\
    \ \n Presents an elaborative discussion of all the potential \nimplementation\
    \ carried out in present times towards \nconventional standard approaches in PA.\
    \ \n Discussion about the existing approaches carried out by \nWireless Sensor\
    \ Network (WSN) to identify the \nstrength and weaknesses. \n Presents a compact\
    \ discussion about existing research \ntrends to have a real picture of existing\
    \ approaches, \ntargeted issues, and technological adoption. \n Contributes towards\
    \ more in-depth insight of the study \nfindings concerning learning outcomes to\
    \ visualize the \nclear picture of PA approaches \nThe remaining sections of the\
    \ proposed manuscript \nareorganized as follows: Section II discussesthe essentials\
    \ of \nprecision agricultureconcerning all standard taxonomies and \nconventional\
    \ research-based approaches. Since WSN is \nidentified as upcoming technology\
    \ and IoT in precision \nagriculture, Section III discusses various techniques\
    \ used in \nWSN in precision agriculture; Section IV discusses the \nresearch\
    \ trend. In contrast, Section V highlights about learning \noutcome of this manuscript.\
    \ Finally, Section VI summarizes \nthe overall contribution of the proposed review\
    \ study and briefs \nabout future work direction in precision agriculturebased\
    \ on \nstudy findings. \nII. PRECISION AGRICULTURE \nPrecision Agriculture (PA)\
    \ targets improving crop \nproduction with the adoption of advanced technologies.\
    \ This \nconcept deals with improving agricultural management based \non various\
    \ scientific observations [14]. The primary aim of \nprecision agriculture is\
    \ to construct an appropriate decision-\nmaking system capable of optimizing productivity\
    \ without \nconsuming expensive resources [15]. It is believed that crop \nproduction\
    \ is significantly affected by the terrain features \nstudied in the phytogeomorphological\
    \ mechanism [16]. The \nevolution of the phytogeomorphological mechanism is due\
    \ to \nthe realizationthat the hydrological factors of farmland are \ncontrolled\
    \ by geomorphic components [17].The proliferation of \nvarious satellite navigation\
    \ systems has further boosted the \nadoption of precision agriculture [18]. Adopting\
    \ such a \nnavigation system helps localize an appropriate location of the \n\
    agricultural land suitable for production. Such geographic \ninformation obtained\
    \ from satellite navigational system also \nfurnishes spatial information of land\
    \ concerningactual contents \nrequired for cultivation viz. potassium, manganese,\
    \ pH level, \nnitrogen level, moisture level, crop yield, etc. [19].  A sensory-\n\
    based satellite navigation system helps further more data \ncollection, right\
    \ from a degree of water in the soil to the level \nof chlorophyll. More granularity\
    \ can be obtained from \nhyperspectral imaging in this regard. At present, there\
    \ are \ndifferent forms of variable rate technology (e.g., sprayers, \nseeders)\
    \ that are used along with satellite images for \noptimizing the resources [20].\
    \ However, the current advances \nin technologies are more inclined to use sensors\
    \ planted within \nthe soil. This sensor can directly forward the aggregated data\
    \ to \nthe user autonomously without any dependency on human \ninteractivity.\
    \ \nThe adoption of airborne vehicles is also used in precision \nagriculture\
    \ due to their cost-effective nature and does not \nrequire specialized skills\
    \ to make them airborne. Such \napproaches make use of photogrammetric techniques\
    \ by using \ndifferent forms of the camera (for both color and hyperspectral \n\
    images) are used over airborne vehicles to extract information \nassociated with\
    \ the field images [21]. The images obtained by \nthis technique can be used for\
    \ evaluating the different forms of \nvegetative index [22]. Apart from this,\
    \ a different form of other \ninformation, e.g.,the elevation of land, can also\
    \ be captured by \nairborne \nvehicles \nsubjected \nto \nvariousconditions \n\
    of \nsophisticated software models for constructing topography \n[23]. Therefore,\
    \ a better probability of enhancing crop \ncultivation can be achieved by studying\
    \ such a topography \nmap. This information can be used for improving the inputs\
    \ \ntowards healthy cultivation, e.g., growth regulators, different \ntypes of\
    \ chemicals, fertilizers, water, etc. Therefore, using \ndifferent forms of technologies\
    \ in precision agriculture is used \nto study crop science, accelerate the economics\
    \ associated with \nthe production, and protect the environment by controlling\
    \ \ndifferent possibilities of risk and agricultural footprints. \nA. Standard\
    \ Taxonomies of Technologies in PA \nThe novel approaches of agricultural practices\
    \ are now \nfacilitated by the advent of different technologies in PA. The \n\
    optimization is now possible for PA for both profitability and \nproductivity\
    \ \nbased \non \ndecision-making \nand \nreal-time \ninformation over the field.\
    \ The prime targets of the \ntechnologies used in PA are mainly to control the\
    \ agricultural \ninput along with environmental protection. On this basis, it\
    \ is \nseen that there are five standard taxonomies of precision \nfarming,including\
    \ 1) Satellite Positioning System, 2) Variable \nRate Technology, 3) Geomapping,\
    \ 4) Automated Steering \nSystem, and 5) Remote Sensing as in (Fig. 1). \nIn Satellite\
    \ Positioning System, the prime technological \ncontributor is the Global Positioning\
    \ System (GPS), mainly \nusing data associated with geo-references of production\
    \ and \nauto-steer system. The agricultural machines (e.g., tractors) are \nbetter\
    \ controlled with accuracy using GPS inbuilt within the \nmachine. The farming\
    \ operation is improved when the driver is \nprovided with error-free information\
    \ with machine movement \npatterns (Fig. 2). \nTechnologies \nin PA\nAutomated\
    \ \nSteering \nSystem\nVariable \nRate \nTechnology\nRemote \nSensing\nGeomapping\n\
    Satellite \nPositioning \nSystem\n \nFig. 1. Standard Taxonomies of Technology\
    \ used in PA. \n(IJACSA) International Journal of Advanced Computer Science and\
    \ Applications, \nVol. 12, No. 2, 2021 \n306 | P a g e  \nwww.ijacsa.thesai.org\
    \ \nParallel Linear Swathing Curve Following \n \n(a) \n  \n(b) \n \n(c) \nFig.\
    \ 2. Patterns of Field Traffic enabled by GPS. a) Linear-Parallel Pattern, \n\
    b) Curve Pattern, and c) Circular Pattern. \nIn Variable Rate Technology, the\
    \ agricultural inputs are \ncontrolled by farmers. Adopting this standard technology\
    \ \noffers planting density to be optimized while increasing the \napplicate rate's\
    \ efficiency towards nutrients and pest protection. \nThis significantly minimizes\
    \ the farming cost as well as \neffectively control the adverse impact onthe environment.\
    \ \nWhen variable rate technology is integrated with application \nequipment,\
    \ the system offers precise information about the \nfield’s location and appropriate\
    \ time for obtaining input for \nrates corresponding to the region-specific application.\
    \ Fig. 3 \nhighlights the soil map used for variable-rate technology to \nfind\
    \ the different nutrients needed in the soil. \nIn Geomapping and Remote Sensing,\
    \ sensors are usually \nused to construct a map with the different crop and soil\
    \ \nconditions, e.g., pest, soil pH, type of soil, nutrient level of the \nsoil.\
    \ Sensors are attached to different machines and vehicles to \nbe dominantly used\
    \ for creating soil maps. Sensors collect the \ninformation from the field and\
    \ GPS to assess the health \nstatistics of crops and soil. This information is\
    \ then passed on \nto a specific location in an area. Farmers can carry out \n\
    identification of specific events or any significant alteration in \nthe properties\
    \ of soil. Fig. 4 highlights the mapped field which \nis used by the sensors built\
    \ over the agriculture machine. \nIn the Automated Steering System, the vehicles\
    \ used in \nagriculture are involuntarily steered by the navigation system. \n\
    This \ntechnology \nreduces \nhuman-related \nerrors \nwhile \ncontrolling the\
    \ movement of the vehicle. It also permits \neffective management of the field\
    \ by providing overhead \ntuning andcontrolling the machinerybased on edge information.\
    \ \nThe existing system uses differential correction for real-time \nkinematics\
    \ to offer accuracy in the form of centimeters. Fig. 5 \nhighlights overlapping\
    \ factors of auto-steering system and \nmanual machine. \nHowever, to offer higher\
    \ accuracy for the machinery over \nthe deployed path, installing a specific communication\
    \ system \nwith a base station is required. A precise point positioning \nsystem\
    \ does not require any form of data communication in the \nauto-steering system\
    \ [24]. On the other hand, machinery can \nalso be allowed to be moved using GPS\
    \ based navigation \nsystem. \nFiled Name:\nFiled 1\nArea: 23.47 Ha\nPotassium\n\
    Phosphorus\nMagnesium\npH\nN\nScale \nMeters\n0\n50\n100\n150\n200\nSoil Nutrient\
    \ Level Field Summary\n \nFig. 3. Usage of Soil Map for Analyzing the Level of\
    \ Nutrients in the Soil, \na) Presence of Potassium, b) the Presence of Phosphorus,\
    \ c) Presence of \nMagnesium, and d) the Presence of pH. \n \nFig. 4. Geomapping\
    \ and Remotely Sensed Soil Map with its Properties from \nthe Sensor Fitted in\
    \ the Machine. \n \n(a) \n \n \n (b) \nFig. 5. Automated Steering System. (a)\
    \ Manual Machine Guided Field \nOverlapping (Blue), b) Auto-Steering based Field\
    \ Overlapping. \n(IJACSA) International Journal of Advanced Computer Science and\
    \ Applications, \nVol. 12, No. 2, 2021 \n307 | P a g e  \nwww.ijacsa.thesai.org\
    \ \nB. Review of Studies on Conventional PA Technologies \nThis section discusses\
    \ the various research work being \ncarried out towards different standard technologies\
    \ in PA \nbriefed in the prior section. \n Satellite Positioning System:  This\
    \ approach uses two \nprominent techniques, i.e., GPS (Global Positioning \nSystem)\
    \ and GNSS (Global Navigation Satellite \nSystem). It is found that GPS, when\
    \ integrated with the \nrobotic application, could significantly contribute \n\
    towards PA. However, the GPS signal’s availability \ncould be impacted due to\
    \ occlusion towards GPS-\nenabled Real-Time Kinematic (RTK) in farming. This \n\
    problem is addressed in Levoir et al. [25] by evolving \nout with a smart rover\
    \ that uses sophisticated image \nprocessing \nand \nstatistical \nanalysis \n\
    to \nperform \nlocalization tasks by the rover. Further studies show \nthat integrating\
    \ GPS with the sensory application could \nimprove the data acquisition with more\
    \ accuracy \n(Rodriguez et al. [26]). A prototype was developed for \nherbicide\
    \ ballistic technology integrated with sensors \nand GPS to automate data acquisition.\
    \ Prototyping-\nbased modeling is evolving in an existing system \nwhere \nGPS\
    \ \nis \nintegrated \nwith \na \nmicro-\nelectromechanical system.The idea was\
    \ to offer a \nprecise steering angle of the agriculture vehicle (Si et \nal.\
    \ [27]). An unscented Kalman filter did the \ncomputation of the steering angle.\
    \ Existing study \ntowards the adoption of GPS has mainly emphasized \nachieving\
    \ better accuracy for the receivers (Dabove et \nal. [28]).It should be noted\
    \ that GPS is an integral \nsection of GNSS with variable ranges of transmission\
    \ \nfrequency. Literature has also studied the adoption of \nGNSS towards precision\
    \ farming (Marucci et al. [29]); \nhowever, it does not work effectively in hilly\
    \ regions. \nThere is still a better possibility of improvement when \nthe GNSS\
    \ system is combined with different \ntechnologies to overcome this issue. GNSS\
    \ is also \nfound with various artifacts, e.g., multipath error, \natmospheric\
    \ \ninterference, \nsatellite \nconfiguration \n(Stombaugh et al. [30]). \n Variable\
    \ Rate Technology: This kind of technology is \nused for managing crop production\
    \ specific to the \nfarming region (Rubio and Mas [31], Ayaz et al. [32]). \n\
    The recent work carried out by Nordblom et al. [33] \nhave used variable rate\
    \ technology in PA focusing on \nnitrogen fertilizer input. The study integrates\
    \ such \napplication with Geographic Information System (GIS) \nand rainfall data\
    \ to determine the reason for \nwaterlogging in a specific geographic area. The\
    \ study \nhas also simulated data distribution of financial risk in \npredictive\
    \ mode to signify variable rate technology. A \nsimilar direction of work is also\
    \ carried out by Steffani \n[34], where a statistical model is used for analyzing\
    \ \nlint. The idea is to emphasize adequate control over the \nenvironment and\
    \ maximization of profit, as discussed \nin the study of Kweon et al. [35]. A\
    \ study carried out \nby Colaco [36] has analyzed the impact of this \ntechnology\
    \ on yield, the fertility of the soil, and \nfertilizer consumption. The study\
    \ outcome shows that \nthe variability factor can successfully achieve increased\
    \ \nproduction without much dependency on excessive \nfertilizers. A study carried\
    \ out by Nawar et al. [37] \nhighlights that this technology, when integrated\
    \ with \nregion delineation management approach then it could \nlead to better\
    \ efficiency in farming in contrast to \napplication with uniform rate. At present,\
    \ the \nimplementation of variable rate technology is further \nboosted by the\
    \ proliferation of novel solutions by \nmanufacturers of farming equipment. The\
    \ work carried \nout by Thomasson et al. [38] has discussed the \nfrequently adopted\
    \ manufacturers using crop sensors \nassociated with this technology of nitrogen\
    \ fertilizers. \nThe study also suggestsusing automatic differential \nharvesting\
    \ as another promising actuation process for \npromoting the harvesting process\
    \ over the field. \nAdoption of differential harvesting process is reported \n\
    in Sethuramasamyraja [39], where infrared sensors \nwere used over vineyards to\
    \ analyze the quality of \ngraph based on anthocyanin present in berries. The\
    \ \nimplementation is carried out as follows viz. \ni) anthocyanin contents of\
    \ the grapes are sensed, ii) a \ncertain level of the threshold for this content\
    \ is \nconsidered to generate a quality map for this data, and \niii) forwarding\
    \ the generated map to the user \n(harvester). \n Geomapping and Remote Sensing:\
    \ There are various \nforms of Geomapping and remote sensing approaches \nused\
    \ towards PA (Kim et al.[40]). This approach leads \nto the generation of agroecological\
    \ zones where \ndifferent attributes are subjected to analysis (Muthoni \net al.\
    \ [41]). The imageries obtained from satellite \nimages are studied for boundary\
    \ delineation using \nfeature extraction and image segmentation method \n(North\
    \ et al. [42]). The existing study has also \nwitnessed increased adoption of\
    \ Sentinel-2 data in PA \n(Sharifi [43]) for analyzing nitrogen usage. Nitrogen\
    \ is \nthe essential input for PA has also been studied by Yao \net al. [44] using\
    \ an active crop sensor.  Apart from \nthese conventional approaches, the advanced\
    \ integrated \napproach of drone technology and Internet-of-Things \nare also\
    \ deployed in precision farming (Uddin et al. \n[45]). Another interesting study\
    \ carried out by Xu et al. \n[46] has used data from cameras and terrestrial laser\
    \ \nscanning to monitor crop health in PA. The majority of \nthe approaches associated\
    \ with Geomapping and \nremote sensing are associated with capturing the field\
    \ \nimage followed by performing analysis. Proximal \nsensing is most recently\
    \ integrated with remote sensing \nfrom multiple sources to study the leaf area\
    \ index \n(Asad et al. [47]). This work connects the health \nstatistics of the\
    \ leaf with the topographical map of the \nearth. This model has three distinct\
    \ modules viz. i) data \nprocessing with semantic segmentation of ground \nimages,\
    \ ii) training using deep learning model, and iii) \nperforming prediction. The\
    \ study outcome suggests \nthat it is capable of performing better prediction\
    \ even \nwith images with low resolution. \n(IJACSA) International Journal of\
    \ Advanced Computer Science and Applications, \nVol. 12, No. 2, 2021 \n308 | P\
    \ a g e  \nwww.ijacsa.thesai.org \nThe current study has also discussed spectral\
    \ feature usage, \nwhere the prime challenge is to address the issues associated\
    \ \nwith data collection and training. This issue is addressed in \nAshourloo\
    \ et al. [48], which carried out a comparative study of \ndifferent variants of\
    \ spectral bands. The outcome shows \nsupport vector machine to be useful for\
    \ large scale of data \nusing time-series approach.  However, such an approach\
    \ is less \nutilized for computing as well as predicting yield. This \nproblem\
    \ is addressed in the work of Fieuzal et al. [49] \nconsidering leaf area index.\
    \ The data considered for this \nanalysis is from synthetic aperture radar, where\
    \ multiple \nsources are considered for analysis for evaluating a crop’s dry \n\
    mass. A similar study is also carried out by Zalite et al. [50], \nwhere time\
    \ series is considered. The study limits its evaluation \nfrom the wetlands, which\
    \ is another research challenge found \nin current times. The prime cause of this\
    \ challenge is spectral \nsimilarity and the degree of heterogeneity involved\
    \ in \nlandmasses. A study to address this challenge is seen in \nHempattarasuwan\
    \ et al. [51], where quantitative analysis is \ncarried out over historical data.\
    \ The study implements a \nclassification \napproach \nby \ncombining \nthree\
    \ \nstandard \napproaches, i.e., Mahalanobis distance, maximum likelihood, \n\
    and decision tree. The outcome shows a decision tree to offer \nbetter classification\
    \ performance. A study concerning leaf area \nindex is also carried out by Pan\
    \ et al. [52], where water content \ninformation is also used for modeling. The\
    \ emphasis on water \nattributes was also seen in the study of Patil et al. [53].\
    \ The \ncurrent study also claims that useful classification can be \ncarried\
    \ out using a PA's deep learning approach (Sun et al. \n[54]). From an approach\
    \ perspective, the random forest has \nalso registered itself to be assisting\
    \ in the classification of \nsatellite images of land (Zafari et al. [55]). In\
    \ such an approach, \na unique classifier is designed for constructing a similarity\
    \ \nkernel. There are also studies where correlated factors, e.g., \ndevelopment\
    \ stage and fractal dimension,are studied (Shen et \nal. [56]). Such study mainly\
    \ explores different factors that \naffect production, i.e., soil background and\
    \ different farming \npractices. A unique study carried out by Dong et al. [57]\
    \ has \nused chlorophyll index for assessing the internal processing of \ncrops\
    \ in PA.  The study carried out over simulated environment \nshows the potential\
    \ linear correlation among different variants \nof vegetation index. The study\
    \ contributes towards the impact \nof red edge reflectance associated with chlorophyll\
    \ during \nphotosynthesis. Such models emphasize the internal processing \nof\
    \ plant nutrients but do not focus on balancing them. \nBalancing the nutrient\
    \ demand is essential when it comes tothe \nmanagement of agricultural land in\
    \ PA. Such an approach was \ndiscussed by Gimenez et al. [58],where remotely sensed\
    \ data is \nintegrated with the model for land management. The study \ncontributes\
    \ towards yielding useful information associated with \nfarm practices and balancing\
    \ the nutrients demands on it.  \nExisting studies have also evolved with a unique\
    \ clustering \napproach on its features over the standard scale to assess the\
    \ \nmonitoring of crops in PA (Yuzugullu et al. [59]). The work \ncarried out\
    \ by Ali et al. [60] has developed a model for remote \nsensing where multitemporal\
    \ attributes have been used for \nevaluating biomass. The study has used an integrated\
    \ machine \nlearning approach where neuro-fuzzy logic, neural network, \nand linear\
    \ regression have been used over remotely sensed data \nto extract biomass estimates.\
    \ \n Automated Steering System: The research work \ntowards this approach is\
    \ mainly associated with \ndeveloping agricultural machinery to give them a \n\
    direction towards its orientation. The existing system \nhas used fuzzy logic\
    \ (Duan et al. [61]), manual priority \n(Fu et al. [62]), renewable energy (Ghobadpour\
    \ et al. \n[63]), proportional integral derivative (Liu et al. [64], \nYin et\
    \ al. [65]), designing electro-hydraulic circuit \n(Mungwongsa et al. [66]), field\
    \ robots (Gonzalez-de-\nSantos et al. [67]), and automatic pilot system (Wang\
    \ \net al. [68]). The idea of the majority of such \nimplementation orients about\
    \ developing a system that \ncan assist the agricultural machinery to accomplish\
    \ \nspecific objectives while farming. It reduced iterative \nhuman efforts andcan\
    \ undertakea specific task that is \nnot feasible for humans to carry out for\
    \ a given \nconstraint of extensive agricultural lands. However, \nmost of the\
    \ approaches are associated with hardware-\nbased development, and less advancement\
    \ is done on \nthe computational model. \nTable I highlights the summary of the\
    \ most significant \nconventional PA-based approaches studied above-concerning\
    \ \nissues, methodology, advantages, and limitations connected to \nthem. \n \n\
    \ \n(IJACSA) International Journal of Advanced Computer Science and Applications,\
    \ \nVol. 12, No. 2, 2021 \n309 | P a g e  \nwww.ijacsa.thesai.org \nTABLE I. \n\
    SUMMARIZATION OF THE EXISTING STUDIES IN PA [SPS: SATELLITE POSITIONING SYSTEM,\
    \ VRT: VARIABLE RATE TECHNOLOGY, GRS: \nGEOMAPPING AND REMOTE SENSING, ASS: AUTOMATED\
    \ STEERING SYSTEM \n \nAuthor \nProblem \nMethodology \nAdvantages \nLimitation\
    \ \nSPS \nLevoir et al. [25] \nHigh complexity localization, \nocclusion of GPS\
    \ \nAutonomous GPS-based rover \nvehicle, image processing, \nstatistics \nHigher\
    \ accuracy \nLacks standard \nbenchmarking \nRodriguez et al. [26]). \nData acquisition\
    \ \nPrototyping by integrating sensor \nand GPS \nAssists in differential data\
    \ \nacquisition \nLacks comparison with the \nexisting system, does not \nconsider\
    \ signal unavailability \nin GPS \nSi et al. [27] \nCalculating steering angle\
    \ of \nfarming vehicle \nPrototyping with gyroscope, \nunscented Kalman filter,\
    \ GPS \nHigher accuracy \nInvolves higher computation \nto compute steering angle\
    \ \nDabove et al. [28] \nReceiver effectiveness with \nGPS \nDiscussion of different\
    \ variants of \nGPS-based receiver and antenna \nSimplified discussion \nIt does\
    \ not conclude the best \nperforming receiving in \nadverse environmental \ncondition\
    \ \nMarucci et al. [29] \nEffectiveness of using GNSS \nAn experimental model\
    \ \ncombining RTK with GNSS \nImproved accuracy of \ntrajectories \nIt does not\
    \ deal with \nheterogeneous environments \nof farming \nVRT \nNordblom et al.\
    \ [33] \nSearch for the reason for \nwaterlogging \nSimulation-based study \n\
    Simplified probability \nmodel, risk analysis \nRegion-specific study \nSteffani\
    \ [34] \nRisk analysis of cotton \nproduction \nStatistical modeling \nSimplified\
    \ risk analysis \nRegion-specific study \nKweon et al. [35] \nTesting of organic\
    \ matter of \nsoil \nPrototyping, field study, sensors, \nlinear regression (multivariate)\
    \ \nComprehensive analysis \nComputational complexity is \nhigher and not addressed\
    \ \nColaco& Molin [36] \nFertilization of citrus \nDiscussion of variable rate\
    \ \nfertilization, yield map \nReduction in input, \nStudy-specific to region\
    \ and \ncrop \nNawar et al. [37] \nZone delineation management \nDiscussion of\
    \ various techniques \nand their contribution \nPin-pointed findings to \nprove\
    \ increased yield \nIt does not discuss the \ninclusion of high-end \nanalytics\
    \ \nThomasson et al. [38] \nAutomation technologies \nDiscussion of robotics and\
    \ \nautomation in PA \nDiscusses the importance \nof robotics in PA \nIt does\
    \ not discuss the \nsignificant approach \nGRS \nNorth et al. [42] \nBoundary\
    \ delineation \nImage segmentation, feature \nextraction \nHigher suitability\
    \ towards \nthe classification of land \nArea-specific study \nUddin et al. [45]\
    \ \nHealth monitoring of crop \nDrone with IoT, dynamic \nclustering of data \n\
    Wide applicability, cost-\neffective \nHypothetical model \nXu et al. [46] \n\
    Health monitoring of crop \nScanning with terrestrial laser, \ncloud data \nHigher\
    \ precision \nIt does not support \nheterogeneous modeling \nAsad et al. [47]\
    \ \nIndex area mapping of leaf \nDeep learning \nThe prediction does not \ndemand\
    \ high image \nresolution \nIterative mechanism, \nAshourloo et al. [48] \nData\
    \ collecting during remote \nsensing \nTime-series, support vector \nmachine \n\
    Assists in involuntary crop \nmapping \nTraining time is higher. \nFieuzal et\
    \ al. [49] \nLack of well-sampled data in \ntime series, analysis of leaf \narea\
    \ index \nCombined analysis of satellite \ndata and agrometeorological data \n\
    Effective simulation of \ntemporal feature \nStudy restricted to specific \ncrop\
    \ (sunflower) \nHempattarasuwan et al. \n[51] \nWetland classification \nIntegrated\
    \ classification approach \nDecision tree found to \noffer higher accuracy \n\
    This leads to computational \ncomplexity \nPan et al. [52] \nAnalysis of multispectral\
    \ data \nIntegrating leaf area index and \nwater content, neural network \nGood\
    \ accuracy \nIt does not include the \nenvironmental uncertainty \nfactor \nPatil\
    \ et al. [53] \nWater productivity assessment \nEnergy balance for surface \n\
    Lower predictive errors \nSpecific to desert farming \nZafari et al. [55] \nClassification\
    \ of land \nRandomized tree, kernel \nAble to solve high-\ndimensional data \n\
    Study-specific to support \nvector machine \n(Shen et al. [56]). \nCrop type classification\
    \ \nDeep learning \nReliable map generation \nDoes not address the \ncomputational\
    \ complexity of \ntraining. \n(IJACSA) International Journal of Advanced Computer\
    \ Science and Applications, \nVol. 12, No. 2, 2021 \n310 | P a g e  \nwww.ijacsa.thesai.org\
    \ \nDong et al. [57] \nAssessing vegetation index \nAlgorithm for extracting \n\
    reflectance of active chlorophyll \nCapable of assessing the \nimpact of vegetation\
    \ \nimpact \nStudy-specific to chlorophyll \nGimenez et al. [58] \nClassification\
    \ of land usage \nIntegrating remotely sensed data \nwith a model of land management\
    \ \nIncreasing accuracy in the \ninformation of land usage \nIncreased processing\
    \ time \nAli et al. [60] \nBiomass estimation \nMachine learning \nEnhanced estimation\
    \ \napproach \nAccuracy depends upon the \namount of trained data, \npresence\
    \ of anomalies from \nthe satellite signal \nASS \nDuan et al. [61] \nReal-time\
    \ control on \nmachinery \nFuzzy Logic \nImprove accuracy in \nsteering \nIt depends\
    \ upon ruleset \nconstruction \nFu et al. [62], Liu et al. \n[64], Mungwongsa\
    \ et al. \n[66] \nAutomated steering \nElectro-hydraulic steering, sensor \nReduced\
    \ response time \nLacks smart feature \nGhobadpour et al. [63] \nAutomated steering\
    \ \nRenewable energy system \nDiscusses increasing trend \nIt does not highlight\
    \ the \neffective approach \nGonzalez-de-Santos et \nal. [67] \nIntelligent farming\
    \ \nRobotics \nDiscusses autonomous \nrobots \nResearch gap not identified \n\
    Wang et al. [68], Yin et \nal. [65] \nAutonomous robots \nEmbedded system \nGood\
    \ accuracy \nNo benchmarking \nIII. WSN IN PRECISION AGRICULTURE \nWith the advent\
    \ of the dominant adoption of sensors, \ncurrent research work towards PA has\
    \ been revolutionized \nmore toward incorporating smart sensing. One of the prime\
    \ \nmotivations towards this research trend is the increasing \nawareness of Internet-of-Things\
    \ (IoT), where sensors are \nintegral. IoT is one dominant research topic for\
    \ improving \nagricultural yields (Kour and Arora [69]). It has contributed \n\
    towards opening avenues for smart farming and PA, although \nthere is some dominant\
    \ research gap (Kour and Arora [69]). In \nthis aspect, various forms of sensors\
    \ have also been \ninvestigated towards PA, where it is found that support vector\
    \ \nmachine and random forest are dominant classification \napproaches (Kamath\
    \ et al. [70]). Apart from this, there is also \ndedicated research work being\
    \ carried out where machine \nlearning approaches are claimed to optimize IoT\
    \ performance \nin PA to facilitate predictive operation for farming. \nWith the\
    \ adoption of various sensors for capturing field \ninformation, the data are\
    \ forwarded using various IEEE \nstandards of the family (e.g., 802.15.4/11 as\
    \ seen in the work of \nKone et al. [71]), which further forwards it to the gateway\
    \ node \nand then to cloud where the application of analytics resides \n(Ahmed\
    \ et al. [72]). The study offers some specific information \nthat was not found\
    \ in conventional PA-based approaches, e.g., \ni) energy being one of the practical\
    \ constraintsof using sensors \nin PA, and ii) routing and topology is another\
    \ essential \noperation, which is also challenged in adverse environmental \n\
    condition. There are various MAC protocols in wireless sensor \nnetworks [72],\
    \ but they do not combine to ensure downlink \nscheduling, multi-hop decisions,\
    \ heterogeneous duty cycles, \nand traffic adaptive. To perform a full scenario\
    \ to capture \nenvironment information of farming process, all this \ncharacteristic\
    \ is demanded in IoT. The adoption of IoT \ntechnology in PA is depicted in Fig.\
    \ 6. The figure shows how \nsensor devices, gateways, and WiFi technology integrated\
    \ with \ncloud infrastructure enableIoT-PA ecosystems. There are \nbasically severalwireless\
    \ sensor nodes deployed in the farm \nand agriculture fields in rural regions.\
    \ The sensor nodes capture \nsignificant events related to agriculture and send\
    \ them to the \ncloud computing system via WiFi and gateway-based \nnetworking\
    \ systems. The sensed data collected to the cloud is \nfurther stored and processed\
    \ by an analytics engine and fog \nnetworking to enable framers managing farms\
    \ to boost the \nquality and quantity of products and optimizes the cost \nassociated\
    \ with human labor required. However, in this \nscenario, the biggest impediment\
    \ is a trade-off concerning \nsupportability and efficiency between the protocols\
    \ in IoT and \nWireless Sensor Network (WSN). \nCloud \nWiFi Node\n10 KM Link\n\
    802.11 \nInterface\nGateway \n802.15.4 \nInterface\nFarm and Agriculture Fields\
    \ in Rural Region \nWiFi-based Long Distance Network\n6LoWPAN \nBorder Router\
    \ \nHierarchical Fog\nCloud\n6LoWPAN based \nWSN\n \nFig. 6. Adoption of IoT in\
    \ PA. \nThe most recent study carried out by Gulec et al. [73] has \ndiscussed\
    \ improving the lifetime of WSN focusing on PA in a \ndistributed environment.\
    \ The study uses connected dominating \nsets as a backbone of communication in\
    \ WSN considering \nharvester and regular sensors in farming. The study outcome\
    \ is \nobtained from both experimental and simulated versions stating \nthat the\
    \ proposed system is energy efficient. Existing research \n(IJACSA) International\
    \ Journal of Advanced Computer Science and Applications, \nVol. 12, No. 2, 2021\
    \ \n311 | P a g e  \nwww.ijacsa.thesai.org \nshows certain dedicated attempts\
    \ to model WSN in PA with \nuniform sensory node distribution over the farming\
    \ area. The \nwork carried out by Bacco et al. [74] has developed a channel \n\
    model that is used by the ground sensors to perform data \ntransfer. However,\
    \ the emphasis was more on the usage of \nIEEE standards and less on WSN. Adopting\
    \ the heterogeneous \nsensor network is witnessed in Sylvian et al. [75] and \n\
    Kaiwartya et al. [76]. In this work, prototyping is carried out \nusing different\
    \ sensors to capture different information \nassociated with farm fields and crops.\
    \ \nFurther, WSN also claims to offer a decision support \nsystem for facilitating\
    \ water usage (Khan et al. [77]). A \nprototype is designed where the temperature\
    \ is used for \nenvironmental monitoring in PA. The study analyzes the \nconsumption\
    \ of current while functioning over different \ndegrees of temperatures. Importance\
    \ over plant water is \nanother investigation in the existing system, an essential\
    \ part of \nthe leaf sensing system in WSN with PA. The current study \nclaims\
    \ that the adoption of backscatter-based sensor nodes \ncould enhance the PA performance\
    \ from the perspective of \npower-saving (Daskalakis et al. [78]). The study has\
    \ also used \nMorse code, which is computationally cost-effective for carrier\
    \ \nsignal modulation. Focus on power saving can also be \nimplemented using non-orthonormal\
    \ multiple access in WSN \n(Hu et al. [79]). The study outcome shows that this\
    \ mechanism \nsignificantly controls outage probability and the rate of \nsummed\
    \ data. \nThe majority of the existing studies emphasize estimating \nsoil parameters\
    \ in PA; however, the modeling attributes are \nless emphasized towards power.\
    \ A study on such issues is \ncarried out by Estrada-Lopez et al. [80], where\
    \ a WSN \ntopology is constructed using both cloud and IoT considering \nsoil\
    \ parameters. The data analysis is carried out by an artificial \nneural network\
    \ followed by using a unique power management \nscheme. Apart from the terrestrial\
    \ application, the adoption of \nWSN is also carried out over the underground\
    \ ecosystem. \nSalam et al. [81] have developed such a system to model \nchannel\
    \ impulse. The study has also analyzed various time-\ndomain attributes, e.g.,\
    \ gain in multipath power, channel \ncapacity, delay, etc. A study on a similar\
    \ direction towards the \nunderground ecosystem is also investigated by Castellanos\
    \ et \nal. [82], where soil parameters are collected using a narrow-\nband communication\
    \ scheme of Long Term Evolution (LTE). \nThe study uses unmanned aerial vehicles\
    \ to collect data from \nunderground sensors over the potato crop field. Another\
    \ study \nof the underground ecosystem is carried out by Sambo et al. \n[83],\
    \ where a path loss model is presented along with \npredictive framework development\
    \ using a complex dielectric \nconstant. \nDeployment of WSN in PA was also claimed\
    \ to enhance \nproductivity by using dataloggers and actuators (Lozoya et al.\
    \ \n[84]). The current study of WSN is also focused on \nincorporating intelligence\
    \ in the process of irrigation in PA. \nThe work carried out by Jamroen et al.\
    \ [85] has developed an \nirrigation scheduling mechanism using fuzzy logic in\
    \ WSN. \nThe outcome witnessed an increase in crop yield. The current \nstudy\
    \ also discusses the usage of WSN for assisting in \nlocalizing in PA. Sahota\
    \ and Kumar [86] have implemented a \nmodel where the received signal strength\
    \ has been used for \ndistribution over WSN. The study develops a node localization\
    \ \nmodel considering distance propagation invarious degrading \neffective over\
    \ the signal considering fading and path loss \nmodel. The study contributes to\
    \ predicting loss in nitrogen. A \nsimilar received signal strength-based approach\
    \ for assisting in \nlocalization has also been carried out by Abouzar et al.\
    \ [87]. \nThis study has used a spanning tree for developing belief \npropagation.\
    \ \nA unique concept towards promoting energy harvesting in \nPA is discussed\
    \ by Konstantopoulos et al. [88]. According to \nthis study, the electric potential\
    \ produced within a plant is used \nas a power source for WSN. The study uses\
    \ nonnegative matrix \nfactorization to process this electric potential signal.\
    \ From the \nviewpoint of power saving, it is also found that data registers'\
    \ \nfrequency plays a crucial role. The energy-saving in WSN can \nbe facilitated\
    \ using this data register frequency variation to \nimpact PA (Santos and Cugnasca\
    \ [89]). Another essential \nfactor to be considered is the presence of partitioned\
    \ sensors in \nPA, which leads to disruption in the network. The work carried\
    \ \nout by Maheswararajah et al. [90] hypothesizes that the \npresence of such\
    \ nodes leads to noise in the measurement. A \nKalman-filter-based optimization\
    \ strategy is developed to \nrestore such nodes. Existing literature further hypothesizes\
    \ that \nmonitoring environmental values is essential when deploying \nWSN in\
    \ PA. The work of Kampianakis et al. [91] has \npresented a prototype that employs\
    \ the networking principle of \nsensor nodes (especially modulation of analog\
    \ frequency) \nalong with software-defined radio. \nThe summary of the practical\
    \ approaches in WSN in PA is \ntabulated in Table II. \n \n \n(IJACSA) International\
    \ Journal of Advanced Computer Science and Applications, \nVol. 12, No. 2, 2021\
    \ \n312 | P a g e  \nwww.ijacsa.thesai.org \nTABLE II. \nSUMMARY OF WSN-BASED\
    \ PA APPROACHES \nAuthor \nProblem \nMethodology \nAdvantages \nLimitation \n\
    Gulec et al. [73] \nNetwork lifetime \nConnected dominating sets, solar \nenergy\
    \ harvesting \nReduced energy consumption \nLacks considering different \nresource\
    \ retention \nBacco et al. [74] \nCoverage and Connectivity \nChannel model \n\
    Simplified design \nOnly focus on IEEE 802.15.4 \nusage \nSylvian et al. [75],\
    \ Kaiwartya \net al. [76] \nHealth monitoring of crops \nMulti-sensor prototype\
    \ \nEffective field measurement \nLacks benchmarking \nKhan et al. [77] \nWater\
    \ utilization in the \nfarming area \nDecision support system \nHigher accuracy\
    \ \ndoes not consider energy \nfactor \nDaskalakis et al. [78] \nPlant water monitoring\
    \ \nBackscatter \nPower saving \nCost is still incurred in the \nusage of multiple\
    \ equipments \nHu et al. [79] \nEnhancing Network lifetime \nNon-Orthonormal Multiple\
    \ \nAccess \nReduces outage probability \nNot applicable for the sparse \nnetwork.\
    \ \nEstrada-Lopez et al. [80] \nPower management, soil \nparameter estimation\
    \ \nArtificial neural network, cloud, \nIoT \nEnhanced reliability and \nbetter\
    \ system performance \nThe study uses a specific \nsensor node, which demands\
    \ \nmore training for accuracy. \nSalam et al. [81] \nUnderground channel \ndevelopment\
    \ in WSN for \nassessing soil health \nAssessing impulse response \nApproach with\
    \ practical \nconstraints, reduced energy \ndepletion, reduced delay \nThe routing\
    \ aspect is not \nconsidered in WSN \nCastellanos et al. [82] \nComputation of\
    \ link quality \nNarrow-band communication, \npath loss model \nApplicable for\
    \ both under and \nabove ground operation \nIt does not ensure scalability \n\
    owing to the defined range. \nSambo et al. [83] \nUnderground monitoring in \n\
    PA \nPath loss model, predictive \nHigher accuracy \nPerforms a highly iterative\
    \ \noperation \nJamroen et al. [85] \nIrrigation scheduling \nFuzzy logic \nReduces\
    \ energy consumption, \nincreased crop yield \nIncreased dynamic attributes \n\
    may cause an increase in \nfuzzy rules \nSahota and Kumar [86], \nAbouzar et al.\
    \ [87] \nA crop network architecture \nin PA \nReceived signal strength, \nmaximum\
    \ likelihood \nResistive against multipath \nfading \nCannot sustain over \nintermittent\
    \ links in WSN \nKonstantopoulos et al. [88] \nEnergy harvesting \nNonnegative\
    \ matrix factorization \nHighly cost useful energy \nsource \nWorkability over\
    \ extensive, \ndense, and uncertain network \nis not evaluated \nMaheswararajah\
    \ et al. [90] \nThe partitioned node in WSN \nKalman Filter \nReduced error rate\
    \ \nError computation is \nresource-dependent and \nhence not scalable for large\
    \ \nnetworks. \nKampianakis et al. [91] \nEnvironmental monitoring \nPrototyping,\
    \ software-defined \nradio \nHigher precision \nIt demands excessive power \n\
    consumption \nIV. REVIEWING RESEARCH TREND \nFrom the perspective of the global\
    \ trend, it is seen that IoT, \nalong with the inclusion of software and different\
    \ variants of \nsensing technology, is going to minimize the skilled labors in\
    \ \nagriculture in the coming days. The global market is not \nconsistently evolving\
    \ with the rise of real-time kinetic \ntechnology, remote sensing technology,\
    \ networking, variable \nrate technology, robotics, and fertilizers and sprayer\
    \ \ncontrollers. \nA. Trend in PA Research \nThe last decade has witnessed approximately\
    \ 1710 research \npapers in PA approaches while only 230 are found to be \njournals\
    \ in IEEE Xplore digital library. A nearly similar trend \nis found in other reputed\
    \ publishers like ACM digital library, \nSpringer, ScienceDirect, and Elsevier.\
    \ There are very few \nstudies towards automated steering systems, while more\
    \ \nstudies are populated in the adoption of satellite positioning \nsystems (GPS,\
    \ GNSS). Not much work is carried out towards \nvariable rate technology. However,\
    \ some potential work in a \nlarge number has been carried out towards remote\
    \ sensing and \nsoil mapping. More inclination is seen towards remote sensing\
    \ \napproaches using hyperspectral images or other equivalent \nforms of images\
    \ from an unmanned flying object (drones).  \nHowever, the trend is more on adopting\
    \ a single crop field is \nextensively more investigated, and multi-crop land\
    \ is less \nfound in consideration, which could impedeupcoming research \nwork.\
    \ Agriculture 4.0 is an upcoming standard for automating \nPA; however, studies\
    \ show few implementations associated \nwith such upcoming standard formulation.\
    \ Image processing \nremains the dominant approach, and its adoption is consistently\
    \ \nincreasing; however, there is a shift of this approach with data-\ncentric\
    \ technologies in IoT. \nB. Trend in Technological Adoption \nThe present scenario\
    \ of implementation in PA is highly \nscattered. More work is carried out using\
    \ prototyping, and less \nmathematical or computational modeling is noticed. Adoption\
    \ \nof machine learning or artificial intelligence is also found to be \nless\
    \ prominent in this aspect. Although machine learning has \nbeen used in existing\
    \ studies, it is not evaluated fromits \n(IJACSA) International Journal of Advanced\
    \ Computer Science and Applications, \nVol. 12, No. 2, 2021 \n313 | P a g e  \n\
    www.ijacsa.thesai.org \ncomputational complexity. The engineering area, e.g.,\
    \ robotics, \nembedded system, machinery compilation, etc. is more \nfocused,\
    \ limiting investigation strength and giving less \nexposure to unknown challenges\
    \ in PA. Adopting IoT and \nWSN has just started its research work, and it has\
    \ more way to \ngo to achieve its state of maturity as a research standard model.\
    \ \nThe development of a test-bed for analyzing farming data is \nanother inclusive\
    \ research trend in PA. \nC. Trend in Target Issues \nThe issues mainly considered\
    \ in the existing system in PA \nare mainly associated with environmental monitoring.\
    \ The \nexisting research trend is also to consider a specific issue \nconnected\
    \ with a specific crop, making the model heavily case-\nspecific and less applicable\
    \ to different environments. Data \nacquisition is another target issue considered\
    \ in the existing \nresearch trend in PA. Different techniques have been carried\
    \ \nout towards acquiring data. However, less emphasis is offered \nto analyze\
    \ this collected data. The trend towards analytics over \nmulti-crop land is less\
    \ found. Adopting sensors integrated with \ndifferent networking principles also\
    \ assists in data acquisition; \nhowever, there are various open-end challenges\
    \ associated, \ne.g., non-inclusion of the energy model makes such a solution\
    \ \nlimited to theoretical concepts. \nV. DISCUSSION AND PERSPECTIVE \nBased on\
    \ the observation being carried out towards \nconventional approaches used in\
    \ PA and the upcoming \nadoption of WSN in PA, it is noticed that there are various\
    \ \nconcluding remarks associated with the overall techniques used \nin PA. This\
    \ section briefs about the learning outcomes of the \nproposed review work as\
    \ follows: \n A \ntradeoff \nbetween \nDemands \nand \nAvailable \nTechnology:\
    \ A closer look into the available \napproaches shows that PA needs to consider\
    \ multiple \nattributes simultaneously, e.g., soil health, plant-related \nfeatures,\
    \ surrounding environment, and weather. There \nare many more sub-attributes for\
    \ this core attribute, \nwhich require equal attention for improved crop \ncultivation\
    \ and environmental risk reduction. All the \nexisting approaches using a conventional\
    \ approach or \nWSN based approaches use only a limited number of \nsuch attributes\
    \ in modeling its PA. On the other side, \nthere has been an immense advancement\
    \ in prototyping \nas \nwell as computational \nmodeling. However, \nprototyping\
    \ is the most dominant approach in PA in \nexisting studies. Hence, the demand\
    \ to offer productive \nPA performance is immensely more which are not \nfound\
    \ to be considered while modeling with existing \ntechnological advancement. \n\
     Lack of Uncertainty-based Modelling: There are \nvarious \nattributes \nlike\
    \ \ncrop \nhealth, \nrainfall, \ntemperature, soil health, etc. they are stochastic.\
    \ \nExisting approaches focus on modeling predefined \necosystems, which is more\
    \ or less impractical than \nreal-world scenarios. There isa various uncertain\
    \ \nscenario that could develop either using conventional \nor WSN based approaches,\
    \ e.g. rate of energy \ndepletion,incoming \nstreamed \ndata, \nmobile \nof \n\
    machinery, occlusion in GPS-based data, etc. Until and \nunless such uncertainty\
    \ conditions are not included in \nthe modeling, the outcome may eventually result\
    \ in \noutliers.  Apart from this, various studies where \nmachine learning has\
    \ been used do not consider this, \nleading to its solution inapplicable to real-time\
    \ \napplication. \n Use Case Specific Study: Almost all the existing PA \napproaches\
    \ have considered a specific use case of crop \nor study environment (e.g., soil\
    \ health, water, \ntemperature, etc.). On the other side, the conventional \n\
    study approach has focused on the adoption of specific \nmachinery. The modeling\
    \ is carried out considering a \nspecific form of crops using any of the approaches\
    \ in \nPA. This means that there is no generalized algorithm \nto solve a similar\
    \ problem when environmental \nvariables change. It also incurs more cost when\
    \ it \ncomes to deploying commercial products and their \nadoption. It is only\
    \ cost-effective of a simplified model \n(or product) that can address multiple\
    \ PA problems \naltogether. \n Less Emphasis over Routing: Routing or deploying\
    \ a \ncommunication protocol is significant usingthe larger \nfarming \narea \n\
    with \nchallenging \ncommunication \nscenarios (e.g., forest, terrain, etc.).\
    \ It is already \nobserved that the adoption of the hybrid approach is \nthe most\
    \ effective one to mitigate the limitation of \nsingle-approach. For example,\
    \ GPS integrated with \nsensor nodes or drones could offer more effective data\
    \ \ncapture than considering any of them. This also means \nthat there isa good\
    \ possibility of hybridizing different \ntypes of machinery and different nodes\
    \ to facilitate an \neffective data transmission in PA. However, this \nchallenge\
    \ can be addressed if a unique routing protocol \nis designed and developed for\
    \ such a scenario. No \nstudies are being carried out in evolving a novel \nrouting\
    \ scheme in PA;instead, it reuses the adopted \ntechniques' routing scheme. This\
    \ also offers more \nimpediments towards data transmission when the farm \nenvironment\
    \ is subjected to priority-based data \ntransmission \nor \nexercising \nspecific\
    \ \ntime-critical \napplications. \n IoT and WSN still in the Nascent Stage:\
    \ IoT is slowly \nmaking its entry from the roof of research and \ndevelopment\
    \ to the commercial world. Apart from this, \nthe study shows that most PA approaches\
    \ have a \ndeployment of sensor nodes for soil mapping, remote \nsensing, etc.\
    \ (conventional approach in PA), but they \ndo not have a deployment of WSN, which\
    \ makes a \nnetwork of sensors. With the inclusion of automation \nstandard 4.0,\
    \ there is a need for smart farming using \nIoT, which is still under development.\
    \ Apart from this, \nWSN is an integral part of IoT. However, there has \nbeen\
    \ immense work towards addressing multiple \nproblems in WSN in past decades,\
    \ and their solutions \nare not directly applicable in IoT. There is always a\
    \ \ntradeoff between IoT and WSN with the inclusion of \nIoT based routing scheme\
    \ and WSN based routing \nscheme that requires smooth integration. Hence, \n(IJACSA)\
    \ International Journal of Advanced Computer Science and Applications, \nVol.\
    \ 12, No. 2, 2021 \n314 | P a g e  \nwww.ijacsa.thesai.org \ncurrent approaches\
    \ in WSN on PA aresignificantly less \nand insignificant in contrast to conventional\
    \ PA \napproaches. \n Lack of inclusion of Resource: Sensor nodes of any \nform\
    \ are characterized by the limited capability of \nprocessing as well as they\
    \ have limited availability of \nresources too (e.g., memory, channel capacity,\
    \ energy, \netc.). None of the existing studies where WSN is \nconsidered in PA\
    \ has any inclusion of novel resource \nmanagement model exclusively focusing\
    \ on constraints \nassociated with PA's farming environment. Without the \ninclusion\
    \ of the resource factor, modeling any solution \nwill be more impractical. \n\
     Few Studies towards Optimization: By optimization, it \ncan represent a technique\
    \ that offers increased \nperformance yield with low inclusion/dependencies of\
    \ \nresources. Machine learning has been used for this \npurpose to some extent.\
    \ At present, many optimization-\nbased approaches fit on solving various problems\
    \ \nassociated with PA. A closer look into the existing \nsystem \nalso \nshows\
    \ \nthat \nit \ndoes \nnot \nensure \ncomputational cost-effectiveness in its\
    \ algorithm. \nHence, the adoption of appropriate optimization \ntechniques is\
    \ highly demanded. \nVI. CONCLUSION \nThe manuscript discusses the PA approaches\
    \ and \ntechniques that are mainly associated with implementing a \nmanagement\
    \ scheme towards facilitating effective responses \ntoward crops, measurement,\
    \ and observation towards animals \nand fields. Adoption of PA leads to enhanced\
    \ yields in the \ncrop, cost reduction, and process input optimization. However,\
    \ \nthere are various challenges associated with it. There is an \ninclusion of\
    \ higher initial capital to implement PA in real-time, \nand such investment is\
    \ carried out for long-term plans. In order \nto reach the PA implementation maturity\
    \ stage, several years \nmay be consumed prior to even possessing adequate data\
    \ to \nimplement even the conventional approaches completely. The \nfinal challenge\
    \ in PA implementation is its data aggregation \nfollowed by an analysis, which\
    \ could be an extensively \ndemanding task. Based on the presented findings of\
    \ existing \nresearch work, it could be just said that effective \nimplementation\
    \ of PA demands i) precise management, \nii) identification and adoption of appropriate\
    \ technology, and \niii) data. \n1) Overall summary: The essential findings of\
    \ the proposed \nstudy are summarized as follows: i) existing approaches of PA\
    \ \nhas an increasing concern over interoperability of different \ninnovative\
    \ systems and tools, ii) adoption of PA by ordinary \nfarmers will be a big task\
    \ as the technologies involved in it are \nhighly advanced and require a thorough\
    \ knowledge of it, \niii) despite various studies using IoT, narrowband, GPS,\
    \ WSN, \netc., coverage and connectivity in rural areas will be a \npotentiallytricky\
    \ task, iv) An appropriate PA implementation \nleads to generate a massive score\
    \ of big farming data which is \nimpossible to analyze from a single data point\
    \ in the crop field.  \nWith the increasing adoption of multi-crop land, there\
    \ will be \nmassive growth of data and understanding the significance and \npriority\
    \ of such data will be near to impossible for average \nfarmers in existing times,\
    \ v) IoT and WSN is the most \npromising technology in PA, but adoption of current\
    \ schemes \nonly induces scalability problems along with troublesome \nconfiguration\
    \ issues, vi) there is a lack of mathematical \nmodelling seen in the existing\
    \ system using WSN, which has \nbetter future scope. \n2) Future work: The future\
    \ direction of work will consider \nadopting IoT and WSN, which is the most demanding\
    \ \nupcoming technology for reshaping the existing system to \nFarming 4.0. In\
    \ this context, the next work is to design and \ndevelop an IoT scenario with\
    \ multi-crop land powered by \nheterogeneous WSN. The focus will be first to include\
    \ all real-\ntime constraints, e.g., energy, coverage and connectivity, \nresource\
    \ management of the sensors. The secondary focus is to \nformulate a novel routing\
    \ scheme thatoffers flexibility, \nscalability, and resource efficiency. It is\
    \ also necessary to \nperform the complete modeling using the computational model,\
    \ \nconsidering its applicability to practical world scenarios. The \ninclusion\
    \ of multiple challenging test-bed and an effective \nvalidation technique could\
    \ further offer more reliability to PA's \nupcoming solution. \nREFERENCES \n\
    [1] Vecchio, Yari, Marcello De Rosa, Felice Adinolfi, Luca Bartoli, and \nMargherita\
    \ Masi. ―Adoption of precision farming tools: A context-\nrelated analysis.‖ Land\
    \ Use Policy 94 (2020): 104481. \n[2] Abobatta, Waleed Fouad. ―Precision Agriculture:\
    \ A New Tool for \nDevelopment.‖ In Precision Agriculture Technologies for Food\
    \ Security \nand Sustainability, IGI Global (2021) pp. 23-45. \n[3] Torky, Mohamed,\
    \ and Aboul Ella Hassanein. ―Integrating blockchain \nand the internet of things\
    \ in precision agriculture: Analysis, \nopportunities, and challenges.‖ Computers\
    \ and Electronics in \nAgriculture (2020): 105476. \n[4] Li, Wenjing, Beth Clark,\
    \ James A. Taylor, Helen Kendall, Glyn Jones, \nZhenhong Li, Shan Jin, et al.\
    \ ―A hybrid modelling approach to \nunderstanding adoption of precision agriculture\
    \ technologies in Chinese \ncropping systems.‖ Computers and Electronics in Agriculture\
    \ 172 \n(2020): 105305. \n[5] Priya, Rashmi, and Dharavath Ramesh. ―ML based sustainable\
    \ precision \nagriculture: A future generation perspective.‖ Sustainable Computing:\
    \ \nInformatics and Systems 28 (2020): 100439. \n[6] Klerkx, Laurens, and David\
    \ Rose. ―Dealing with the game-changing \ntechnologies of Agriculture 4.0: How\
    \ do we manage diversity and \nresponsibility in food system transition pathways?‖\
    \ Global Food \nSecurity 24 (2020): 100347. \n[7] Vecchio, Yari, Marcello De Rosa,\
    \ Felice Adinolfi, Luca Bartoli, and \nMargherita Masi. ―Adoption of precision\
    \ farming tools: A context-\nrelated analysis.‖ Land Use Policy 94 (2020): 104481.\
    \ \n[8] Symeonaki, Eleni, Konstantinos Arvanitis, and DimitriosPiromalis. ―A \n\
    context-aware middleware cloud approach for integrating precision \nfarming facilities\
    \ into the IoT toward agriculture 4.0.‖ Applied Sciences \n10, no. 3 (2020): 813.\
    \ \n[9] Boursianis, \nAchilles \nD., \nMaria \nS. \nPapadopoulou, \nPanagiotis\
    \ \nDiamantoulakis, Aglaia Liopa-Tsakalidi, PantelisBarouchas, George \nSalahas,\
    \ George Karagiannidis, Shaohua Wan, and Sotirios K. Goudos. \n―Internet of things\
    \ (IoT) and agricultural unmanned aerial vehicles \n(UAVs) in smart farming: a\
    \ comprehensive review.‖ Internet of Things \n(2020): 100187. \n[10] Singh, Ritesh\
    \ Kumar, MichielAernouts, Mats De Meyer, Maarten Weyn, \nand Rafael Berkvens.\
    \ ―Leveraging LoRaWAN technology for precision \nagriculture in greenhouses.‖\
    \ Sensors 20, no. 7 (2020): 1827. \n(IJACSA) International Journal of Advanced\
    \ Computer Science and Applications, \nVol. 12, No. 2, 2021 \n315 | P a g e  \n\
    www.ijacsa.thesai.org \n[11] Ofori, Martinson, and Omar El-Gayar. ―Drivers and\
    \ challenges of \nprecision agriculture: a social media perspective.‖ Precision\
    \ Agriculture \n(2020): 1-26. \n[12] Cabezas-Cabezas, Roberto, Jomar Guzmán-Seraquive,\
    \ Kevin Gómez-\nGómez, and Corima Martínez-Villacís. \"Integrated System for the\
    \ \nImprovement of Precision Agriculture Based on IoT.\" In International \nConference\
    \ on Technologies and Innovation, pp. 123-136. Springer, \nCham, 2020. \n[13]\
    \ Groher, Tanja, Katja Heitkämper, Achim Walter, Frank Liebisch, and \nChristina\
    \ Umstätter. ―Status quo of adoption of precision agriculture \nenabling technologies\
    \ in Swiss plant production.‖ Precision Agriculture \n21, no. 6 (2020): 1327-1350.\
    \ \n[14] Keswani, Bright, Ambarish G. Mohapatra, Poonam Keswani, Ashish \nKhanna,\
    \ Deepak Gupta, and Joel Rodrigues. ―Improving weather \ndependent zone specific\
    \ irrigation control scheme in IoT and big data \nenabled self-driven precision\
    \ agriculture mechanism.‖ Enterprise \nInformation Systems 14, no. 9-10 (2020):\
    \ 1494-1515. \n[15] Demestichas, \nKonstantinos, \nand \nEmmanouil \nDaskalakis.\
    \ \n―Data \nLifecycle Management in Precision Agriculture Supported by \nInformation\
    \ and Communication Technology.‖ Agronomy 10, no. 11 \n(2020): 1648. \n[16] Nel,\
    \ Werner, Jan C. Boelhouwers, Carl-Johan Borg, Julian H. Cotrina, \nChristel D.\
    \ Hansen, Natalie S. Haussmann, David W. Hedding et al. \n―Earth science research\
    \ on Marion Island (1996–2020): a synthesis and \nnew findings.‖ South African\
    \ Geographical Journal (2020): 1-21. \n[17] Wang, Nan, Weiming Cheng, Baixue Wang,\
    \ Qiangyi Liu, and Chenghu \nZhou. ―Geomorphological regionalization theory system\
    \ and division \nmethodology of China.‖ Journal of Geographical Sciences 30, no.\
    \ 2 \n(2020): 212-232. \n[18] Groher, Tanja, Katja Heitkämper, Achim Walter, Frank\
    \ Liebisch, and \nChristina Umstätter. ―Status quo of adoption of precision agriculture\
    \ \nenabling technologies in Swiss plant production.‖ Precision Agriculture \n\
    21, no. 6 (2020): 1327-1350. \n[19] Radoglou-Grammatikis, Panagiotis, Panagiotis\
    \ Sarigiannidis, Thomas \nLagkas, and IoannisMoscholios. ―A compilation of UAV\
    \ applications \nfor precision agriculture.‖ Computer Networks 172 (2020): 107148.\
    \ \n[20] Bucci, Giorgia, Deborah Bentivoglio, Matteo Belletti, and Adele Finco.\
    \ \n―Measuring the farm’s profitability after the adoption of Precision \nAgriculture\
    \ Technologies: A case study research from Italy.‖ Acta \nIMEKO 9, no. 3. \n[21]\
    \ Raj, \nRahul, \nSoumyashree \nKar, \nRohit \nNandan, \nand \nAdinarayanaJagarlapudi.\
    \ ―Precision agriculture and unmanned aerial \nvehicles (UAVs).‖ In Unmanned Aerial\
    \ Vehicle: Applications in \nAgriculture and Environment, pp. 7-23. Springer,\
    \ Cham, 2020. \n[22] Balasundram, Siva K., Kamlesh Golhani, Redmond R. Shamshiri,\
    \ and \nGanesan \nVadamalai. \n―Precision \nagriculture \ntechnologies \nfor \n\
    management of plant diseases.‖ In Plant Disease Management Strategies \nfor \n\
    Sustainable \nAgriculture \nthrough \nTraditional \nand \nModern \nApproaches,\
    \ pp. 259-278. Springer, Cham, 2020. \n[23] Pang, Guowei, Qinke Yang, Chunmei\
    \ Wang, Rui Li, and Lu Zhang. \n―Quantitative assessment of the influence of terrace\
    \ and check dam \nconstruction on watershed topography.‖ Frontiers of Earth Science\
    \ 14 \n(2020): 360-375. \n[24] Turcian, Daniel, ValerDolga, Darius Turcian, and\
    \ Cristian Moldovan. \n―Fusion Sensors Experiment for Active Cruise Control.‖\
    \ In Joint \nInternational \nConference \nof \nthe \nInternational \nConference\
    \ \non \nMechanisms and Mechanical Transmissions and the International \nConference\
    \ on Robotics, pp. 432-443. Springer, Cham, 2020. \n[25] LeVoir, Samuel J., Peter\
    \ A. Farley, Tao Sun, and Chong Xu. ―High-\nAccuracy Adaptive Low-Cost Location\
    \ Sensing Subsystems for \nAutonomous Rover in Precision Agriculture.‖ IEEE Open\
    \ Journal of \nIndustry Applications 1 (2020): 74-94. \n[26] Rodriguez, Roberto,\
    \ Daniel M. Jenkins, and James JK Leary. ―Design \nand validation of a GPS logger\
    \ system for recording aerially deployed \nherbicide ballistic technology operations.‖\
    \ IEEE Sensors Journal 15, no. \n4 (2014): 2078-2086. \n[27] Si, Jiaqian, YanxiongNiu,\
    \ Jiazhen Lu, and Hao Zhang. ―High-Precision \nEstimation of Steering Angle of\
    \ Agricultural Tractors Using GPS and \nLow-Accuracy MEMS.‖ IEEE Transactions\
    \ on Vehicular Technology \n68, no. 12 (2019): 11738-11745. \n[28] Dabove, P.,\
    \ and A. M. Manzino. ―GPS mass-market receivers for \nprecise farming.‖ In Proceedings\
    \ of IEEE/ION PLANS 2014, pp. 472-\n477. 2014. \n[29] Marucci, Alvaro, Andrea\
    \ Colantoni, Ilaria Zambon, and Gianluca Egidi. \n\"Precision farming in hilly\
    \ areas: The use of network RTK in GNSS \ntechnology.\" Agriculture 7, no. 7 (2017):\
    \ 60. \n[30] Stombaugh, Timothy. ―Satellite‐based Positioning Systems for Precision\
    \ \nAgriculture.‖ Precision agriculture basics (2018): 25-35. \n[31] Saiz-Rubio,\
    \ Verónica, and Francisco Rovira-Más. ―From smart farming \ntowards agriculture\
    \ 5.0: A review on crop data management.‖ agronomy \n10, no. 2 (2020): 207. \n\
    [32] Ayaz, Muhammad, Mohammad Ammad-Uddin, Zubair Sharif, Ali \nMansour, and El-Hadi\
    \ M. Aggoune. ―Internet-of-Things (IoT)-based \nsmart agriculture: Toward making\
    \ the fields talk.‖ IEEE Access 7 \n(2019): 129551-129583. \n[33] Nordblom, Thomas\
    \ L., Timothy R. Hutchings, Sosheel S. Godfrey, and \nCassandra R. Schefe. ―Precision\
    \ variable rate nitrogen for dryland \nfarming on waterlogging Riverine Plains\
    \ of Southeast Australia?.‖ \nAgricultural Systems 186 (2020): 102962. \n[34]\
    \ Stefanini, Melissa Reynolds. ―Effects of optical sensing and variable \nrate\
    \ technology on nitrogen fertilizer use, lint yields, and profitability in \n\
    cotton production.‖ (2015). \n[35] Kweon, G.; Lund, E.; Maxton, C. Soil organic\
    \ matter and cation-\nexchange capacity sensing with on-the-goelectrical conductivity\
    \ and \noptical sensors. Geoderma 2013, 199, 80–89 \n[36] Colaço, A.F.; Molin,\
    \ J.P. Variable rate fertilization in citrus: A long \nterm study. Precis. Agric.\
    \ 2017, 18, 169–191. \n[37] Nawar, S.; Corstanje, R.; Halcro, G.; Mulla, D.; Mouazen,\
    \ A.M. \nDelineation of Soil Management Zones for Variable-Rate Fertilization.\
    \ \nAdv. Agron. 2017, 143, 175–245 \n[38] Thomasson, A.; Baillie, C.; Antile,\
    \ D.; Lobsey, C.; McCarthy, C. \nAutonomous Technologies in Agricultural Equipment:\
    \ A Review of the \nState of the Art. In Proceedings of the 2019 Agricultural\
    \ Equipment \nTechnology Conference, Louisville, KY, USA, 11–13 February 2019;\
    \ \nAmerican Society of Agricultural and Biological Engineers: St. Joseph, \n\
    MI, USA, 2019. ASABE Publication Number 913C0119. \n[39] Sethuramasamyraja, B.\
    \ Precision Ag Research at California State \nUniversity, Fresno. Resource 2017,\
    \ 24, 18–19. \n[40] Kim, Jeongeun, Seungwon Kim, Chanyoung Ju, and Hyoung Il Son.\
    \ \n―Unmanned aerial vehicles in agriculture: A review of perspective of \nplatform,\
    \ control, and applications.‖ IEEE Access 7 (2019): 105100-\n105115. \n[41] Muthoni,\
    \ Francis. ―Spatial-Temporal Trends of Rainfall, Maximum and \nMinimum Temperatures\
    \ Over West Africa.‖ IEEE Journal of Selected \nTopics in Applied Earth Observations\
    \ and Remote Sensing 13 (2020): \n2960-2973. \n[42] North, Heather C., David Pairman,\
    \ and Stella E. Belliss. ―Boundary \ndelineation of agricultural fields in multitemporal\
    \ satellite imagery.‖ \nIEEE Journal of Selected Topics in Applied Earth Observations\
    \ and \nRemote Sensing 12, no. 1 (2018): 237-251. \n[43] Sharifi, Alireza. ―Using\
    \ sentinel-2 data to predict nitrogen uptake in \nmaize crop.‖ IEEE Journal of\
    \ Selected Topics in Applied Earth \nObservations and Remote Sensing 13 (2020):\
    \ 2656-2662. \n[44] Yao, Yinkun, Yuxin Miao, Qiang Cao, Hongye Wang, Martin L.\
    \ Gnyp, \nGeorg Bareth, Rajiv Khosla, Wen Yang, Fengyan Liu, and Cheng Liu. \n\
    ―In-season estimation of rice nitrogen status with an active crop canopy \nsensor.‖\
    \ IEEE Journal of Selected Topics in Applied Earth Observations \nand Remote Sensing\
    \ 7, no. 11 (2014): 4403-4413. \n[45] Uddin, Mohammad Ammad, Muhammad Ayaz, El-Hadi\
    \ M. Aggoune, \nAli Mansour, and Denis Le Jeune. ―Affordable broad agile farming\
    \ \nsystem for rural and remote area.‖ IEEE Access 7 (2019): 127098-\n127116.\
    \ \n[46] Xu, Lijun, Teng Xu, and Xiaolu Li. ―Corn Seedling Monitoring Using 3-\n\
    D Point Cloud Data From Terrestrial Laser Scanning and Registered \nCamera Data.‖\
    \ IEEE Geoscience and Remote Sensing Letters 17, no. 1 \n(2019): 137-141. \n(IJACSA)\
    \ International Journal of Advanced Computer Science and Applications, \nVol.\
    \ 12, No. 2, 2021 \n316 | P a g e  \nwww.ijacsa.thesai.org \n[47] Asad, Muhammad\
    \ Hamza, and Abdul Bais. ―Crop and Weed Leaf Area \nIndex Mapping Using Multi-Source\
    \ Remote and Proximal Sensing.‖ \nIEEE Access 8 (2020): 138179-138190. \n[48]\
    \ Ashourloo, Davoud, Hamid Salehi Shahrabi, Mohsen Azadbakht, \nHossein Aghighi,\
    \ Ali Akbar Matkan, and Soheil Radiom. ―A novel \nautomatic method for alfalfa\
    \ mapping using time series of landsat-8 OLI \nData.‖ IEEE Journal of Selected\
    \ Topics in Applied Earth Observations \nand Remote Sensing 11, no. 11 (2018):\
    \ 4478-4487. \n[49] Fieuzal, Remy, Claire Marais Sicre, and Frederic Baup. ―Estimation\
    \ of \nsunflower yield using a simplified agrometeorological model controlled\
    \ \nby optical and SAR satellite data.‖ IEEE Journal of Selected Topics in \n\
    Applied Earth Observations and Remote Sensing 10, no. 12 (2017): \n5412-5422.\
    \ \n[50] Zalite, Karlis, Oleg Antropov, JaanPraks, Kaupo Voormansik, and Mart\
    \ \nNoorma. ―Monitoring of agricultural grasslands with time series of X-\nband\
    \ repeat-pass interferometric SAR.‖ IEEE Journal of Selected Topics \nin Applied\
    \ Earth Observations and Remote Sensing 9, no. 8 (2015): \n3687-3697. \n[51] Hempattarasuwan,\
    \ Nuttiga, George Christakos, and Jiaping Wu. \n―Changes of Wiang Nong Lom and\
    \ Nong Luang Wetlands in Chiang \nSaen Valley (Chiang Rai Province, Thailand)\
    \ During the Period 1988–\n2017.‖ IEEE Journal of Selected Topics in Applied Earth\
    \ Observations \nand Remote Sensing 12, no. 11 (2019): 4224-4238. \n[52] Pan,\
    \ Haizhu, Zhongxin Chen, Jianqiang Ren, He Li, and Shangrong Wu. \n―Modeling winter\
    \ wheat leaf area index and canopy water content with \nthree different approaches\
    \ using Sentinel-2 multispectral instrument \ndata.‖ IEEE Journal of Selected\
    \ Topics in Applied Earth Observations \nand Remote Sensing 12, no. 2 (2018):\
    \ 482-492. \n[53] Patil, \nVirupakshagowda \nC., \nKhalid \nA. \nAl-Gaadi, \n\
    RangaswamyMadugundu, ElKamil HM Tola, SamyMarey, Ali Aldosari, \nChandrashekhar\
    \ M. Biradar, and Prasanna H. Gowda. ―Assessing \nagricultural water productivity\
    \ in desert farming system of Saudi \nArabia.‖ IEEE Journal of Selected Topics\
    \ in Applied Earth Observations \nand Remote Sensing 8, no. 1 (2014): 284-297.\
    \ \n[54] Sun, Ziheng, Liping Di, Hui Fang, and Annie Burgess. ―Deep Learning \n\
    Classification for Crop Types in North Dakota.‖ IEEE Journal of \nSelected Topics\
    \ in Applied Earth Observations and Remote Sensing 13 \n(2020): 2200-2213. \n\
    [55] Zafari, Azar, Raul Zurita-Milla, and Emma Izquierdo-Verdiguier. ―Land \n\
    cover classification using extremely randomized trees: A kernel \nperspective.‖\
    \ IEEE geoscience and remote sensing letters 17, no. 10 \n(2019): 1702-1706. \n\
    [56] Shen, Yonglin, Liping Di, Genong Yu, and Lixin Wu. ―Correlation \nbetween\
    \ corn progress stages and fractal dimension from MODIS-NDVI \ntime series.‖ IEEE\
    \ Geoscience and Remote Sensing Letters 10, no. 5 \n(2013): 1065-1069. \n[57]\
    \ Dong, Taifeng, Jihua Meng, Jiali Shang, Jiangui Liu, and Bingfang Wu. \n―Evaluation\
    \ of chlorophyll-related vegetation indices using simulated \nSentinel-2 data\
    \ for estimation of crop fraction of absorbed \nphotosynthetically active radiation.‖\
    \ IEEE Journal of Selected Topics in \nApplied Earth Observations and Remote Sensing\
    \ 8, no. 8 (2015): 4049-\n4059. \n[58] Giménez, Marta Gómez, Raniero Della Peruta,\
    \ Rogier de Jong, Armin \nKeller, and Michael E. Schaepman. ―Spatial differentiation\
    \ of arable \nland and permanent grassland to improve a land management model\
    \ for \nnutrient balancing.‖ IEEE Journal of Selected Topics in Applied Earth\
    \ \nObservations and Remote Sensing 9, no. 12 (2016): 5655-5665. \n[59] Yuzugullu,\
    \ Onur, EsraErten, and Irena Hajnsek. ―Rice growth \nmonitoring by means of X-band\
    \ co-polar SAR: Feature clustering and \nBBCH scale.‖ IEEE Geoscience and Remote\
    \ Sensing Letters 12, no. 6 \n(2015): 1218-1222. \n[60] Ali, Iftikhar, Fiona Cawkwell,\
    \ Edward Dwyer, and Stuart Green. \n―Modeling \nmanaged \ngrassland \nbiomass\
    \ \nestimation \nby \nusing \nmultitemporal remote sensing data—A machine learning\
    \ approach.‖ \nIEEE Journal of Selected Topics in Applied Earth Observations and\
    \ \nRemote Sensing 10, no. 7 (2016): 3254-3264. \n[61] Duan, Jie, Lei Zhang, Zhaoiinz\
    \ Zhang, Jinzbo Zhao, and Yan Jiang. \n―Research on Automatic Steering System\
    \ of Agricultural Machinery \nBased on Fuzzy Neural Network.‖ In 2018 2nd IEEE\
    \ Advanced \nInformation Management, Communicates, Electronic and Automation \n\
    Control Conference (IMCEC), pp. 1602-1605. IEEE, 2018. \n[62] Fu, Weiqiang, Guangwei\
    \ Wu, Yue Cong, You Li, and Zhijun Meng. \n―Development of tractor automatic steering\
    \ system with manual priority \nfunction.‖ In 2015 IEEE International Conference\
    \ on Cyber Technology \nin Automation, Control, and Intelligent Systems (CYBER),\
    \ pp. 555-559. \nIEEE, 2015. \n[63] Ghobadpour, Amin, LoïcBoulon, Hossein Mousazadeh,\
    \ Ahmad Sharifi \nMalvajerdi, and Shahin Rafiee. ―State of the art of autonomous\
    \ \nagricultural off-road vehicles driven by renewable energy systems.‖ \nEnergy\
    \ Procedia 162 (2019): 4-13. \n[64] Liu, Jin-yi, Jing-quan Tan, En-rong Mao, Zheng-he\
    \ Song, and Zhong-\nxiang Zhu. ―Proportional directional valve based automatic\
    \ steering \nsystem for tractors.‖ Frontiers of Information Technology & Electronic\
    \ \nEngineering 17, no. 5 (2016): 458-464. \n[65] Yin, Chengqiang, Shourui Wang,\
    \ Jie Gao, Ling Zhao, and Hequan \nMiao. ―Steering tracking control based on assisted\
    \ motor for agricultural \ntractors.‖ International Journal of Control, Automation\
    \ and Systems 17, \nno. 10 (2019): 2556-2564. \n[66] Mungwongsa, \nAnon, \nKhwantriSaengprachatanarug,\
    \ \nand \nThana \nRadpukdee. ―Design of an Automatic Steering System in a Small\
    \ Farm \nTractor.‖ In 2018 21st International Symposium on Wireless Personal \n\
    Multimedia Communications (WPMC), pp. 224-229. IEEE, 2018. \n[67] Gonzalez-de-Santos,\
    \ Pablo, Roemi Fernández, Delia Sepúlveda, \nEduardo Navas, Luis Emmi, and Manuel\
    \ Armada. \"Field Robots for \nIntelligent Farms—Inhering Features from Industry.\"\
    \ Agronomy 10, no. \n11 (2020): 1638. \n[68] Wang, Maoli, Yongwei Tang, Huijuan\
    \ Hao, Fengqi Hao, and Junfei Ma. \n―The design of agricultural machinery autonomous\
    \ navigation system \nbased on Linux-ARM.‖ In 2016 IEEE Advanced Information \n\
    Management, Communicates, Electronic and Automation Control \nConference (IMCEC),\
    \ pp. 1279-1282. IEEE, 2016. \n[69] Kour, Vippon Preet, and Sakshi Arora. ―Recent\
    \ Developments of the \nInternet of Things in Agriculture: A Survey.‖ IEEE Access\
    \ 8 (2020): \n129924-129957. \n[70] Kamath, Radhika, Mamatha Balachandra, and\
    \ Srikanth Prabhu. \n―Raspberry pi as visual sensor nodes in precision agriculture:\
    \ A study.‖ \nIEEE Access 7 (2019): 45110-45122. \n[71] Kone, Cheick Tidjane,\
    \ AbdelhakimHafid, and Mustapha Boushaba. \n―Performance management of IEEE 802.15.\
    \ 4 wireless sensor network \nfor precision agriculture.‖ IEEE Sensors Journal\
    \ 15, no. 10 (2015): \n5734-5747. \n[72] Ahmed, Nurzaman, Debashis De, and Iftekhar\
    \ Hussain. ―Internet of \nThings (IoT) for smart precision agriculture and farming\
    \ in rural areas.‖ \nIEEE Internet of Things Journal 5, no. 6 (2018): 4890-4899.\
    \ \n[73] Gulec, Omer, ElifHaytaoglu, and SezaiTokat. ―A Novel Distributed \nCDS\
    \ Algorithm for Extending Lifetime of WSNs With Solar Energy \nHarvester Nodes\
    \ for Smart Agriculture Applications.‖ IEEE Access 8 \n(2020): 58859-58873. \n\
    [74] Bacco, Manlio, Andrea Berton, Alberto Gotta, and Luca Caviglione. \n\"IEEE\
    \ 802.15. 4 air-ground UAV communications in smart farming \nscenarios.\" IEEE\
    \ Communications Letters 22, no. 9 (2018): 1910-1913. \n[75] Sylvain, Matthieu,\
    \ Francis Lehoux, Steeve Morency, Félix Faucher, Eric \nBharucha, Denise M. Tremblay,\
    \ Frédéric Raymond et al. \"The EcoChip: \nA wireless multi-sensor platform for\
    \ comprehensive environmental \nmonitoring.\" IEEE transactions on biomedical\
    \ circuits and systems 12, \nno. 6 (2018): 1289-1300. \n[76] Kaiwartya, Omprakash,\
    \ Abdul Hanan Abdullah, Yue Cao, Ram Shringar \nRaw, Sushil Kumar, Daya Krishan\
    \ Lobiyal, Ismail FauziIsnin, Xiulei \nLiu, and Rajiv Ratn Shah. ―T-MQM: Testbed-based\
    \ multi-metric quality \nmeasurement of sensor deployment for precision agriculture—A\
    \ case \nstudy.‖ IEEE Sensors Journal 16, no. 23 (2016): 8649-8664. \n[77] Khan,\
    \ Rahim, Ihsan Ali, Muhammad Zakarya, Mushtaq Ahmad, \nMuhammad Imran, and Muhammad\
    \ Shoaib. ―Technology-assisted \ndecision support system for efficient water utilization:\
    \ a real-time test-\nbed for irrigation using wireless sensor networks.‖ IEEE\
    \ Access 6 \n(2018): 25686-25697. \n[78] Daskalakis, Spyridon Nektarios, George\
    \ Goussetis, Stylianos D. \nAssimonis, Manos M. Tentzeris, and Apostolos Georgiadis.\
    \ ―A uW \n(IJACSA) International Journal of Advanced Computer Science and Applications,\
    \ \nVol. 12, No. 2, 2021 \n317 | P a g e  \nwww.ijacsa.thesai.org \nbackscatter-morse-leaf\
    \ sensor for low-power agricultural wireless sensor \nnetworks.‖ IEEE Sensors\
    \ Journal 18, no. 19 (2018): 7889-7898. \n[79] Hu, Zeng, Longqin Xu, Liang Cao,\
    \ Shuangyin Liu, Zhijie Luo, Jing \nWang, Xiangli Li, and Lu Wang. ―Application\
    \ of non-orthogonal \nmultiple access in wireless sensor networks for smart agriculture.‖\
    \ IEEE \nAccess 7 (2019): 87582-87592. \n[80] Estrada-López, Johan J., Alejandro\
    \ A. Castillo-Atoche, Javier Vázquez-\nCastillo, and Edgar Sánchez-Sinencio. \"\
    Smart soil parameters estimation \nsystem using an autonomous wireless sensor\
    \ network with dynamic \npower management strategy.\" IEEE Sensors Journal 18,\
    \ no. 21 (2018): \n8913-8923. \n[81] Salam, Abdul, Mehmet C. Vuran, and Suat Irmak.\
    \ ―A Statistical Impulse \nResponse Model Based on Empirical Characterization\
    \ of Wireless \nUnderground \nChannels.‖ \nIEEE \nTransactions \non \nWireless\
    \ \nCommunications 19, no. 9 (2020): 5966-5981. \n[82] Castellanos, German, Margot\
    \ Deruyck, Luc Martens, and Wout Joseph. \n―System assessment of WUSN using NB-IoT\
    \ UAV-aided networks in \npotato crops.‖ IEEE Access 8 (2020): 56823-56836. \n\
    [83] Sambo, Damien Wohwe, Anna Forster, Blaise Omer Yenke, IdrissaSarr, \nBamba\
    \ Gueye, and Paul Dayang. ―Wireless underground sensor \nnetworks path loss model\
    \ for precision agriculture (WUSN-PLM).‖ \nIEEE Sensors Journal 20, no. 10 (2020):\
    \ 5298-5313. \n[84] Lozoya, Camilo, Alberto Aguilar, and Carlos Mendoza. \"Service\
    \ \noriented design approach for a precision agriculture datalogger.\" IEEE \n\
    Latin America Transactions 14, no. 4 (2016): 1683-1688. \n[85] Jamroen, \nChaowanan,\
    \ \nPreechaKomkum, \nChanonFongkerd, \nand \nWipaKrongpha. ―An Intelligent Irrigation\
    \ Scheduling System Using \nLow-Cost Wireless Sensor Network Toward Sustainable\
    \ and Precision \nAgriculture.‖ IEEE Access 8 (2020): 172756-172769. \n[86] Sahota,\
    \ Herman, and Ratnesh Kumar. ―Maximum-likelihood sensor \nnode localization using\
    \ received signal strength in multimedia with \nmultipath characteristics.‖ IEEE\
    \ Systems Journal 12, no. 1 (2016): 506-\n515. \n[87] Abouzar, Pooyan, David G.\
    \ Michelson, and Maziyar Hamdi. ―RSSI-\nbased distributed self-localization for\
    \ wireless sensor networks used in \nprecision agriculture.‖ IEEE Transactions\
    \ on Wireless Communications \n15, no. 10 (2016): 6638-6650. \n[88] Konstantopoulos,\
    \ Christos, EftichiosKoutroulis, Nikolaos Mitianoudis, \nand AggelosBletsas. ―Converting\
    \ a plant to a battery and wireless sensor \nwith scatter radio and ultra-low\
    \ cost.‖ IEEE Transactions on \nInstrumentation and Measurement 65, no. 2 (2015):\
    \ 388-398. \n[89] Santos, Ivairton Monteiro, and Carlos Eduardo Cugnasca. ―Adaptive\
    \ \nStrategies for Dynamic Setting of the Data Register Frequency in \nWireless\
    \ Sensor Networks.‖ IEEE Latin America Transactions 12, no. 7 \n(2014): 1284-1291.\
    \ \n[90] Maheswararajah, Suhinthan, Saman K. Halgamuge, Kithsiri B. \nDassanayake,\
    \ and David Chapman. ―Management of orphaned-nodes in \nwireless sensor networks\
    \ for smart irrigation systems.‖ IEEE \ntransactions on signal processing 59,\
    \ no. 10 (2011): 4909-4922. \n[91] Kampianakis, Eleftherios, John Kimionis, Konstantinos\
    \ Tountas, \nChristos Konstantopoulos, EftichiosKoutroulis, and AggelosBletsas.\
    \ \n―Wireless environmental sensor networking with analog scatter radio \nand\
    \ timer principles.‖ IEEE Sensors Journal 14, no. 10 (2014): 3365-\n3376. \n \n"
  inline_citation: '>'
  journal: International journal of advanced computer science & applications (Online)
  limitations: '>'
  pdf_link: http://thesai.org/Downloads/Volume12No2/Paper_39-Emerging_Line_of_Research_Approach_in_Precision_Agriculture.pdf
  publication_year: 2021
  relevance_score1: 0
  relevance_score2: 0
  title: 'Emerging Line of Research Approach in Precision Agriculture: An Insight
    Study'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/access.2023.3281731
  analysis: '>'
  authors:
  - Ala Altaweel
  - Hena Mukkath
  - Ibrahim Kamel
  citation_count: 4
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 11 GPS Spoofing
    Attacks in FANETs: A Systematic Literature Review Publisher: IEEE Cite This PDF
    Ala Altaweel; Hena Mukkath; Ibrahim Kamel All Authors 3 Cites in Papers 1860 Full
    Text Views Open Access Comment(s) Under a Creative Commons License Abstract Document
    Sections I. Introduction II. Fanets: Technical Background and Applications III.
    Methodology IV. State-of-the-Art V. GPS Spoofing in FANETs: A Taxonomy Show Full
    Outline Authors Figures References Citations Keywords Metrics Abstract: Flying
    Ad-Hoc Networks (FANETs) are groups of UAVs connected in an Ad-Hoc manner to accomplish
    a common mission. The widespread acceptance of UAVs due to their low cost and
    high efficiency has attracted malicious security attacks against them. These attacks
    cannot be easily prevented due to UAVs’ limited computational power, short battery
    life, and inability to execute complex algorithms. FANETs rely on the Global Positioning
    System (GPS) for localization. GPS Spoofing, an easy-to-launch attack, is one
    of the main challenges in FANETs. In which, the legitimate and not-encrypted civilian
    GPS signals are overridden by counterfeit signals to deceive the UAVs to collide
    or to be hijacked. Researchers proposed various countermeasures to address GPS
    Spoofing attacks in FANETs. To further assist future research, this paper provides
    a systematic literature review on GPS Spoofing attacks in FANETs and their defense
    mechanisms. After formulating eight research questions and applying well-defined
    inclusion/exclusion criteria and quality assessment tools, 70 research articles
    were extracted. The existing defense mechanisms were classified based on their
    objectives (i.e., detection, mitigation, and/or prevention) and according to their
    basis (i.e., relying on readings from various drones’ devices/sensors, processing
    the signals received by various sensors, employing machine learning algorithms,
    relying on game theory, or leveraging cryptographic techniques to authenticate
    and protect the confidentiality of GPS signals). The defense mechanisms were also
    analyzed to identify the attacker models, impacts of the attack, and detection
    performance. This study found that most of the proposed methods are detection
    approaches, rather than mitigation or prevention. Also, almost all papers used
    simulation experiments rather than a proof-of-concept implementation, which does
    not demonstrate a convincing performance under realistic mobility and propagation
    models. Moreover, most solutions ad... (Show More) GPS Spoofing Attack Scenario
    in FANET: the UAV at the ''Original Location'' travels to the ''Desired Destination
    Location'' through the ''Original Path'' (shown in green). The ...View more Published
    in: IEEE Access ( Volume: 11) Page(s): 55233 - 55280 Date of Publication: 31 May
    2023 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2023.3281731 Publisher: IEEE
    Funding Agency: SECTION I. Introduction The advancements in technology have invaded
    almost every sphere of human life. Human intervention is been getting expelled
    from the aircraft industry as well. The development of autonomous drones or Unmanned
    Ariel Vehicles (UAVs), popularly known as ‘drones’, is a major indication of this
    fact. The drone market has put on huge investments since the beginning of this
    decade. As per a report from the Drone Industry Insights [1], the drone market
    worth ~ $ 30.6 billion in 2022 and is expected to reach ~ $ 55.8 billion by 2030.
    This is due to the widespread acceptance of UAVs for various military and civilian
    applications such as border surveillance [2], disaster monitoring [3], traffic
    monitoring [4], managing wildfire [5], relay for Ad-Hoc networks [6], wind estimation
    [7], emergency management and high-risk situations [8], etc. The deployment of
    UAVs not only nullifies the risk for human operators but also minimizes the probability
    of human errors. Single large UAVs were recently used, yet, they are inadequate
    in terms of capability [9]. Thus, the technologists found it is advantageous to
    deploy small multiple UAVs that work in groups. FANET is a self-organized UAV
    network, popularly known as UAV Swarm, in which UAVs operate together collaboratively
    to accomplish various missions. The UAVs in FANETs communicate with each other
    by establishing wireless Ad-Hoc UAV-to-UAV communication links [10]. That is,
    no pre-established infrastructure is required for FANET deployment. The capability
    of sharing information, not only with the ground station but also among the UAVs,
    makes FANETs less prone to the difficulties of short-range communications and
    network failures, which might occur when a single UAV is deployed. The deployment
    of multi-UAVs in groups is advantageous due to many reasons. The cost [11] of
    deploying and maintaining small UAVs instead of larger ones is more feasible.
    The scalability [11] of operation also enhances with small multi-UAVs. Also, since
    multiple UAVs work together, the chance of Single-Point-of-Failure [12] is minimized.
    Moreover, multiple UAVs can accomplish a task more efficiently [13]. On the other
    hand, FANETs confront various technical and security challenges [14]. The battery
    with limited capacity poses a major challenge in UAV operations by limiting their
    flight time. UAVs’ computational power and storage are also limited. UAVs normally
    hover in 3-D space with a speed range of 30–460 km/h [15], leading to frequent
    variations in communication distances and topology changes. The drones should
    maintain connectivity within the network such that the area covered by individual
    drones and the swarm as a whole is maximized without causing network partitioning.
    The locational information provided by the GPS plays a vital role in this regard.
    The exchanged GPS information among the drones helps in relatively localizing
    each drone to other drones as well as within the swarm area. With the widespread
    acceptance of FANETs among public and private entities, they are also targeted
    by malicious attackers. The GPS sensors in drones are vulnerable to GPS Spoofing
    and Jamming attacks, which are the most popular and easy-to-launch attacks that
    can be instigated using low-cost Software Defined Radio (SDR) [16]. While Jamming
    intends to deny GPS services in the target area by transmitting stronger signals
    with the same frequency used by genuine GPS signals, spoofing attacks intend to
    redirect the UAVs from their actual path to the attacker’s desired path. In December
    2012, Iranian army engineers claimed that they hijacked a surveillance drone launched
    by U.S. Central Intelligence Agency (CIA) RQ170 Sentinel [17]. The first successful
    spoofing on GPS receivers of drones was demonstrated by a research team at the
    University of Texas [18], [19] as a part of a demonstration to raise concerns
    about civilian drone regulations. The U.S. Customs and Border Protection reported
    that some drug cartels spoofed their drones in 2015 and the attacks of the same
    kind increased afterward [20]. To address the aforesaid research challenge, a
    systematic literature review has been conducted with the aim of pinpointing the
    state-of-the-art of GPS Spoofing attacks in FANET, the attacker capabilities,
    and the detection and mitigation mechanisms. To the best of our knowledge, this
    is the first systematic review on GPS Spoofing attacks in FANETs that followed
    the review guidelines proposed by [21]. These guidelines are widely adopted by
    the research community to conduct unbiased and high-quality surveys. The articles
    published during the tenure from 2017 to 2022 are considered, as GPS Spoofing
    in FANETs is a recently developed research area. This survey was conducted in
    three phases. Specifically, planning, conducting, and reporting. In the planning
    phase, eight Research Questions were formulated. The articles for this survey
    have been collected from five databases, namely, IEEE XPlore®, ACM Digital Library,
    ScienceDirect®, SpringerLink and Google Scholar in the conducting phase. Afterward,
    70 papers including 14 state-of-the-art survey papers and 56 technical papers
    relevant to the survey’s topic were extracted. Among the 56 technical papers,
    37 papers proposed various solutions to defend against GPS spoofing attacks in
    UAVs, nine papers discussed GPS Spoofing attack mechanisms, eight papers discussed
    how GPS spoofing can be used to deter malicious drones from sensitive areas, one
    article conducted an impact study on GPS Spoofing attack in UAVs, and one article
    portrayed the vulnerability of UAVs to GPS Spoofing attack. The extracted technical
    papers were categorized into four groups. Specifically, GPS Spoofing attack mechanisms
    (that discussed the attacker models), GPS Spoofing defense mechanisms, GPS Spoofing
    as a defense mechanism (that leverages GPS Spoofing techniques to defend against
    other attacks), as well as GPS Spoofing impact and vulnerability, which studied
    the impact of and vulnerability to GPS Spoofing attack on drones. Then, a taxonomy
    of various defense mechanisms is redesigned based on their objectives and basis.
    For the objectives, the defense mechanisms are classified into three categories:
    1) detection mechanisms, which sense or alert the presence of attack, 2) mitigation
    mechanisms, which help the drones to recover from the effects of the attack, 3)
    prevention mechanisms, which secure the drones from being attacked. For the basis,
    the defense mechanisms can also be classified into five categories: 1) onboard
    sensor/devices, which compare the readings from the devices on the drones like
    cameras, gyroscopes, accelerometers, barometers, etc. with the readings of GPS
    receivers, 2) signal processing methods, which analyze the received signal parameters
    like the Time of Arrival, Angle of Arrival, Signal Strength, etc., 3) cryptographic
    techniques such as encryption, decryption, authentication, digital signatures,
    etc., which are used to secure and verify the GPS signals received by the drones,
    4) game-theory based methods, which depend on the strategic movements of the attacker
    and the victim during the attack, and 5) machine learning-based methods, which
    leverage the training and learning models designed to defend against the attacks.
    The survey aims to enable the readers to gain insights into the directions of
    research in the field of GPS Spoofing attacks in FANETs. Also, the readers are
    aided to find the research gaps existing in the domain. The major contributions
    of this survey are as follows: Comprehensive guidelines for researchers in terms
    of FANETs’ features, applications, mobility, propagation models, communication
    protocols, and security challenges (in Section II) are provided. GPS Spoofing
    attacks and their impacts are also discussed in detail. Following the guidelines
    of Kitechenham and Charters [21], this survey systematically extracted 70 articles
    that are relevant to GPS Spoofing attacks in UAVs, by applying the planning, conducting,
    and reporting phases recommended by [21] (in Section III). The extracted articles
    were classified into state-of-the-art articles and technical articles. A detailed
    analysis of the state-of-the-art articles in terms of the number of papers surveyed,
    the years of publications considered, and a brief description of the concepts
    discussed in these articles are provided (in Section IV). A summarized table of
    these articles is also provided in Table 11 in the Appendix. The technical articles
    on GPS Spoofing are classified (in Section V) into four main categories as follows:
    GPS Spoofing attack mechanisms: the articles that discussed the attacker models.
    As a part of the attacker model, we discussed: Spoofing tools such as simulators,
    repeaters, etc. Spoofing techniques such as position denial and track break. Spoofer
    location such as remote, onboard, and escort. Defense mechanisms against GPS Spoofing:
    the research articles that discuss various mechanisms to defend against GPS Spoofing
    attacks in UAVs. These articles are further classified based on their objectives
    as follows: Detection of GPS Spoofing attacks. Mitigation the damage caused by
    GPS Spoofing attacks. Prevention of GPS Spoofing. The defense mechanisms are also
    classified according to their basis as follows: The use of devices/sensors on
    the drones. Signal processing techniques applied on various signals received by
    various sensors on the drone. Cryptographic techniques to protect the confidentiality
    of data collected by the drones. Game-theory techniques that are used to defend
    against GPS Spoofing attacks. Machine learning techniques that are used to defend
    against GPS Spoofing attacks. Use of GPS Spoofing as a mechanism to deter malicious
    drones from sensitive infrastructure. Impact and Vulnerability: the articles that
    discussed the impact of the GPS Spoofing attack and the vulnerability of drones
    to it. The above taxonomy is based on a systematic analysis of various approaches
    that deal with GPS Spoofing attacks in UAVs. The diversity in the existing research
    works and the lack of a proper taxonomy is the motivation behind the development
    of the above taxonomy. This survey aims to classify all the existing methods under
    various headers and conduct a comparative survey to identify the open issues for
    future research works. An extensive study of the 37 articles that dealt with defense
    mechanisms against GPS Spoofing attacks is conducted in Section V. The study focused
    on the proposed defense methodology in the existing works to extract the number
    of UAVs considered (i.e., FANET or single UAV environment), the detection performance
    evaluation methodologies (i.e., simulation or proof-of-concept implementation),
    and the performance metrics used. The limitations and open issues in the existing
    research are also identified. A detailed discussion and comparative analysis of
    the extracted results in terms of the datasets used in the experiments, the attacker
    models, the performance evaluation methods, and metrics from all covered articles
    are provided. This analysis is done in order to understand the current state of
    the defense mechanisms, identify the research gaps, and propose recommendations
    for future research works (in Section VI). TABLE 1 Abbreviations Related to FANET
    Environment TABLE 2 Abbreviations Related to Attacker Models TABLE 3 Classification
    of FANET Propagation Models TABLE 4 Communication Technologies Used in FANET TABLE
    5 Symbols and Meanings TABLE 6 Research Questions and Motivations TABLE 7 Database
    and Search Results (2017-2022) Before & After Inclusion/Exclusion Criteria TABLE
    8 Analysis of the Attacker Models TABLE 9 List of Drones that Can Be Used for
    FANET Formation TABLE 10 Overview of Datasets TABLE 11 Comparative Analysis of
    the State-of-Art Articles The rest of this paper is organized as follows: Section
    II briefly describes the technical background of FANETs, which includes a discussion
    of their mobility and propagation models, communication protocols, applications,
    performance evaluation methods and metrics, and security challenges. A special
    focus on GPS Spoofing attacks and their impacts on FANETs is also provided. Section
    III presents the systematic literature review methodology that was applied in
    this study. In Section IV, the state-of-the-art papers are discussed. The technical
    papers on GPS Spoofing attacks, the existing solutions, the application of GPS
    Spoofing attacks (as a defense mechanism), and the impact and vulnerability of
    the GPS Spoofing attack are elaborated in Section V. The results, discussions,
    and research gaps are portrayed in Section VI. The paper is concluded in Section
    VII. SECTION II. Fanets: Technical Background and Applications In this section,
    the acronym ‘FANET’ is introduced in detail with a substantial description of
    the unique characteristics, mobility and propagation models, communication protocols,
    applications, and security issues in FANETs. Furthermore, various performance
    metrics that can be used to evaluate the performance of the FANET environment
    are also discussed. A. Fanets: Flying AD-Hoc Networks FANETs comprise UAVs, connected
    together in an Ad-Hoc manner. The major components of an Unmanned Aerial System
    (UAS) include the UAV, the GCS, and the communication links. The communication
    links include the UAV-to-UAV links, UAV-to-Satellite links, and UAV-to-GCS links
    [11]. The UAVs in FANET utilize GPS and this locational information is exchanged
    within the network for maintaining the FANET topology. Fig. 1 depicts a typical
    FANET environment. The UAVs communicate with each other through Ad-Hoc UAV-to-UAV
    links. The UAVs have onboard GPS receivers and the locational information (via
    UAV-to-Satellite link) received from at least four satellites [22] is used to
    find the UAV position through the process of trilateration [23]. The radio waves
    from the satellite travel at the speed of light and the time of departure of the
    GPS signal from the satellite are obtained from this signal. The speed and time
    obtained are used by the GPS receivers to compute the distance between the satellite
    and the GPS receiver. One (or more) of the UAVs communicate with the GCS for exchanging
    control and other relevant information. Table 1 shows various abbreviations related
    to the FANET environment that are used throughout this paper. Some other common
    abbreviations used in this paper are shown in Table 2. FIGURE 1. A typical FANET
    environment. Show All The UAVs constituting the FANETs are generally low-cost
    commercial off-the-shelf devices with limited computational power and storage.
    Thus, FANETs cannot rely on algorithms requiring complex computations for accomplishing
    their mission or incorporating security features. Due to the size and weight constraints
    of drones in FANETs, it is not possible to leverage powerful computation hardware.
    Also, since complex computations consume lots of energy, the battery gets drained
    faster. In Section II-B below, we provide a detailed discussion of the unique
    characteristic features of FANETs. B. Unique Features of FANET The unique characteristics
    of FANET [24] are depicted in Fig. 2 and are elaborated in the subsequent lines:
    Dynamic Network Topology: The higher mobility and the failure or injection of
    drones in the FANET cause frequent topology changes. The movement of drones and
    the resultant variations in the distance between drones can lead to link outages
    [11]. Mobility Models: The drones in FANET follow either a pre-defined trajectory
    or random paths [11]. A detailed discussion of the mobility models is provided
    in Section II-C. Node Mobility: The drones in FANET move at higher speeds than
    those in a MANET or VANET. Based on the type of flight and mission, this speed
    can range from 30 to 460 km/h. These variations in speed present various communication
    problems [11] such as network partitioning. Node Density: The UAVs in a FANET
    are generally distributed across the entire swarm area so that the coverage area
    of individual drones and the FANET itself are maximized. Thus, the node density
    (number of drones per unit area) is lesser when compared to the other networks
    such as MANET or VANET [11]. Propagation Models: The communication between the
    UAVs (U2U) in the FANET is Line-of-Sight and those between UAV and GCSs are nLos
    (non-Line-of-Sight) [25]. A detailed discussion of the propagation models in FANET
    is provided in Section II-C. Power Consumption: FANETs, with battery-powered,
    drones are energy-limited devices. The power consumption varies with the size
    of the drones, distance to be covered, mission, communication hardware used, etc.
    [11]. Lowering the dependence on power-sensitive devices and complex computational
    algorithms in FANETs can enhance the network lifetime and reduce network outages.
    3-D Space: FANET flies in free space, mostly far above the ground without obstructions
    such as buildings, trees, etc. Thus, there is no significant path loss in the
    signals transmitted among the drones FIGURE 2. Unique features of FANET. Show
    All The frequent topology variations impact the communication and collaboration
    of the drones in a FANET. The movement pattern of the drones is represented (i.e.,
    modeled) using various mobility patterns, which are discussed in Section II-C.
    C. Mobility and Propagation Models in FANETs FANETs are unique in terms of their
    mobility, topology variations, propagation, and energy constraints [11]. In this
    section, some light is thrown on the mobility and propagation models in FANETs,
    which are also part of the Research Questions in this study (Section III-A: RQ6
    and RQ7). The UAVs in FANET move with higher velocity when compared to the ancestral
    networks, namely, MANETs and VANETs. Moreover, the UAVs hover in three-dimensional
    (3-D) space (roll, pitch, and yaw). Hence, more adequate mobility models are employed
    that simulate the motion of FANETs in real-world scenarios. Mobility models describe
    the motion pattern of the UAV including the velocity (speed change and direction)
    and acceleration. Different mobility models have been used in FANET environments
    such as random, group, time-dependant, and path-planned. A classification FANETs
    mobility models based on a study by Wheeb et al. [26] is illustrated in Fig. 3
    and is briefly described below: Random Mobility Model: The drones in this mobility
    model move randomly and freely without any restrictions. Thus, this mobility model
    is not preferable for FANET scenarios as the drones in FANET should move in a
    coordinated manner without network partitioning. Random mobility model is further
    classified into the following four sub-types: Random Walk (RW) in which the drones
    move in a random direction and speed for a fixed interval of time or distance,
    then new speed and direction are calculated. These are memory-less models. Random
    Waypoint (RWP) in which halts are taken upon reaching each waypoint and then move
    to the random direction at a random speed. Random Direction (RD) in which the
    destination is chosen towards the boundary of the simulation area; once it reaches
    the destination, it stops and new destinations are chosen again. Manhattan Grid
    (MG) in which the UAVs follow a grid-structure path layout. These mobility models
    are used in scenarios where paths are well-defined. The UAV randomly chooses to
    move in the same direction or take turns at intersections of the grid. Group Mobility
    Model: This mobility model is deployed in scenarios where drones should move in
    groups, as is the case in FANETs, to accomplish a specific mission. This model
    can be further categorized into the following four sub-types: Column (CLMN) in
    which a point of reference along a straight line will be defined; each node revolves
    around this point in a random direction and speed. Exponential Correlated Random
    (ECR) in which a group of nodes exhibits correlated dynamic motion. Nomadic Community
    (NC) in which every UAV node moves randomly around certain reference points following
    the same path leading to a collision. Pursue (PRS) in which the UAV tracks a particular
    UAV that travels in a specific way. Time-dependent: The sudden changes in speed
    and direction are avoided in this model by considering various parameters like
    prior direction, current time, speed, etc. This model can be further categorized
    into the following three sub-types: Gauss Markov (GM) in which sudden movement
    changes are minimized by adjusting randomness in direction and speed. Smooth Turn
    (ST) in which the accelerations of UAVs are always maintained by adjusting the
    spatial and temporal variables. Enhanced Gauss Markov (EGM) which is most widely
    used in FANETs. The direction deviations are used to reduce sharp turns and stops.
    Path-Planned: A pre-determined trajectory is generated and stored for each UAV.
    This model can be further classified into the following three sub-types: Flight
    Plan (FP) in which UAV’s flight plan is defined in a special file and time-dependent
    flight maps are designed accordingly. Semi Random Circular (SRCM) in which UAVs
    move in curved paths around a central point. Paparazzi Model (PPRZM), a Probabilistic
    model based on state machines with five possible movements, namely, waypoint,
    scan, stay-at, eight, and oval. FIGURE 3. Classification of FANET mobility models.
    Show All Propagation models also occupy a relevant space in FANET communication.
    Propagation model refers to the mathematical modeling of the radio channel through
    which the waves are transmitted (i.e., to simulate the attenuation of the waves
    when propagated [27]). The FANET environment faces several challenges with regard
    to radio propagation. This is due to the frequent differences in communication
    distance between various nodes, the antenna pattern, shadowing from other UAVs,
    fluctuations in the link quality due to UAV attitude (yaw, pitch, and roll), and
    other environmental elements. The deployment of FANETs requires adequate knowledge
    of the radio channel characteristics. The communications between the UAVs (U2U)
    in the FANET are Line-of-Sight. Differently, they are nLos (non-Line-of-Sight)
    between UAV and GCSs. There are three major propagation models studied by Jun
    Peng [25] for UAV networks. Specifically, the free-space model, the two-ray model,
    and the shadowing model. A brief description of the propagation models is summarized
    in Table 3. Another categorization by Antonio et al. [27] modeled the channel
    losses through which the electromagnetic waves (EM) are attenuated. The propagation
    models are divided into three classes. Specifically, theoretical, empirical, and
    semi-empirical models. The antenna structure also has an intense impact on the
    communication architecture of FANET. Directional and Omnidirectional antennas
    are used in FANET communications [15]. D. Communication Protocols in FANETs The
    UAVs in a FANET communicate with each other through Ad-Hoc links established among
    each other without requiring any infrastructure. Setting up and maintaining such
    a network is challenging due to node mobility, high speed, operating environment,
    unstable communication links, and resource limitations. FANET requires efficient
    and secure wireless communication to be established with the ground stations as
    well as with other drones in the network. Short-range unlicensed wireless technologies
    like Wi-Fi (IEEE 802.11), Bluetooth (IEEE 805.15.1), and Zigbee (IEEE 802.15.4)
    are most commonly used for drone communication [28]. LoRaWAN besides licensed
    and infrastructure-based technologies that rely on 5G, Beyond 5G, and 6G are also
    used in FANET for long-range communications (i.e., to enhance coverage and throughput
    demands). Table 4 showcases a summary of these technologies. IEEE 802.11n and
    IEEE 802.15.4 protocols are mostly used for data exchanges in FANETs [29]. IEEE
    802.11n ensures high data delivery no matter the number of UAVs in the network;
    however, it is costlier, consumes more power, and is more complex compared to
    IEEE 802.15.4. Also, due to the frequent fluctuations in the link quality, mesh
    topology (UAVs route messages to the GCS) is preferred over star topology (all
    drones directly communicate with the GCS) in a FANET scenario. Peer-to-peer communication
    is established for collaborative mission completion and collision avoidance. Various
    routing protocols [30] have been proposed to establish robust and reliable communications
    among the drones in FANET. E. Applications of FANETs Multiple UAVs cooperate to
    accomplish various applications in a collaborative manner. These include applications
    in remote sensing, the construction industry, drone delivery services, search
    and rescue operations, and monitoring and surveillance, as shown in Fig. 4. We
    present more details about these applications in the next paragraphs. FIGURE 4.
    Applications of FANETs. Show All 1) Search and Rescue Operations UAVs are widely
    considered nowadays for critical situations such as disaster management, rescue
    operations, and public safety. UAVs offer real-time visual (image/ video) data
    of intended locations. Consequently, a search and rescue team can timely detect
    and decide where accurately the assistance is urgently required. For instance,
    drones can be used to track people who were lost during any mission or to protect
    people lost in remote deserts or forests [31]. 2) Construction Industry UAVs can
    be deployed to monitor the progress and safety of construction and various equipment
    by providing a real-time visual view of the sites. Monitoring construction projects
    from beginning to end ensures the quality of work. The cracks in the buildings,
    pipelines, and other surfaces can also be accurately monitored using UAVs [32].
    3) Precision Agriculture Drones are deployed in precision agriculture for sensing
    water quality, soil properties, pesticide spraying, disease and weed detection,
    and irrigation scheduling. The incorporation of UAVs in precision agriculture
    saved a lot of time and cost, enhancing productivity and crop yields [33]. 4)
    Traffic Monitoring Reliable and smart UAVs can aid in the automation of rescue
    teams, surveyors, and traffic police. UAVs can gather data about traffic conditions
    on highways as they can be deployed to get a vision of road accidents or vehicle
    thefts, to detect vehicle over-speeding, as well as to assist in avoiding traffic
    jams and mass congestion [34]. 5) Military Services UAVs play an integral role
    in military services. Most countries have added UAVs to their defense strategic
    plans to be used for enemy detection, border control, and maritime monitoring
    of critical sea lanes [35]. 6) Disaster Management Drones play significant roles
    in the management of man-made or natural disasters such as terrorist attacks and
    floods. These disasters can severely destruct the telecommunication infrastructure,
    transportation, power, water, and other supplies. UAVs can be deployed to locate
    disasters and provide alerts. For instance, a swarm of drones can be deployed
    to extinguish fires in case of wild or domestic fires, so that human safety is
    not compromised [36]. 7) Delivery Drones UAVs are also prominent nowadays for
    delivering various services including medicines, food, documents, and other services.
    Drones can be deployed to transport medicinal products (e.g., organs for transplantation,
    vaccines, pharmaceuticals, and medical samples) and prepared foods (e.g., pizzas
    and frozen beverages) [37]. 8) Entertainment Purpose Apart from the above applications,
    drones are nowadays prominently used for various entertainment purposes such as
    light shows, airshows, photography, cinema, etc. [38]. F. Performance Metrics
    In this section, various performance metrics that were used to evaluate the performance
    of the proposed systems have been elaborated. Various symbols used in the equations
    to compute these metrics are listed in Table 5. False Positive is the number of
    non-attack cases detected as attacks by the system/algorithm. The False Positive
    Rate (FPR), the ratio of false positives to total non-attack cases, should be
    minimized to avoid the problem of Denial-of-Service (DoS) to legitimate users.
    True Positive is the number of attack cases correctly detected by the system/algorithm.
    The True Positive Rate (TPR), which is the ratio of true positives to the total
    attack cases, should be maximized to discriminate and block the attackers. False
    Negative is the number of attack cases not detected by the system/algorithm. In
    other words, it is the number of attack cases reported as legitimate cases. The
    False Negative Rate (FNR), the ratio of false negatives to total attack cases,
    should be minimized to discriminate against and block the attackers. True Positive
    Rate and False Negative Rate can be related using the following equation: FNR=1−TPR
    (1) View Source In relation to the above three metrics, systems can be also evaluated
    using Recall, Precision, and F1-score metrics as follows: Recall Precision F1−score
    = t p t p + f n = t p t p + f p =avg(Recall,Precision) (2) (3) (4) View Source
    Detection Latency refers to the time delay between the instigation of attack and
    detection of attack by the system/algorithm. Detection latency is a crucial metric
    since it represents the time the attacker has to hijack the UAVs or cause mission
    failure before he/she gets detected. Position Drift refers to the UAV displacement
    caused by spoofed signals from the original trajectory. Root Mean Square Error
    (RMSE) indicates the differences between the values (e.g., position or velocity
    of UAV) predicted by a model and the actual or observed value. RMSE= 1 n ∑ N i=1
    ( P i − A i ) 2 − − − − − − − − − − − − − − − √ (5) View Source Accuracy refers
    to the ratio of correct predictions, both the true and attack signals, to the
    number of cases under consideration. Accuracy= t p + t n t p + f p + t n + f n
    (6) View Source UAV Capture Probability is the probability that a drone gets captured
    or hijacked by an attacker in presence of the proposed algorithm. Power Consumption
    refers to the energy consumed (battery) for the execution of the proposed algorithm.
    This metric should be minimized since drones are battery-limited entities. Memory
    Consumption indicates the storage requirements of the proposed algorithms. The
    value of this metric should be low or negligible since the drones cannot carry
    large storage devices due to their light weightiness. G. Security Issues in FANETs
    FANETs are prone to various cyber-attacks, which are broadly classified into three
    categories by Mohsen et al. [39], namely, Data Interception attacks, Data Manipulation
    attacks, and Denial-of-Service attacks. Data interception attacks such as Eavesdropping
    and Key Logging mainly target the privacy of information transmitted between the
    UAV and the GCS. Data Manipulation attacks such as GPS Spoofing attacks, de-authentication,
    message injection, modification, and deletion mainly aim to hijack or take UAV
    control. Jamming are examples of Denial-of-Service attacks. GPS Spoofing attack
    is one of the most dreadful attacks since it can capture, mislead and/or make
    the UAV collide with other UAVs or objects causing security and safety concerns.
    The ease of availability of low-cost Software Defined Radios (SDR) and the open
    nature of GPS signals have attracted the malicious attackers to exploit the UAV’s
    vulnerabilities. In the following paragraphs, the GPS Spoofing attacks in UAVs
    and their impacts are briefly discussed. GPS is a Global Navigation Satellite
    System (GNSS) that uses positional information broadcasted by satellite constellations.
    Different broadcast frequencies and modulation techniques are used by these satellites.
    The frequency of 1575.42 MHz is used for civilian GPS Signals and is popularly
    known as the L1 band. The Course Acquisition Code (C/A) is a Pseudo Random Number
    (PRN), which identifies the satellite of origin. Generally, a minimum of four
    satellite signals are needed to be identified by the receiver using PRNs to calculate
    its position and time information by correlation. The GPS positioning systems
    apply the principle of three-sphere positioning. That is, the signal propagation
    delay to the GPS receiver is obtained from three satellites and it is multiplied
    with the speed of light. The pseudo-distance obtained from the three satellites
    gives three spherically connected equations. The readings from the fourth satellite
    are used for adjusting the clock differences. GPS Spoofing attacks are launched
    in two ways: 1) The attacker locks the GPS receiver of the target by computing
    the pseudo-distance first. The received signal is jammed, delayed, and then forwarded.
    2) The attacker generates counterfeit signals by analyzing the satellite signal
    characteristics to broadcast in the target located area. Both methods can mislead
    the target with erroneous locational information. As a consequence of GPS Spoofing,
    the entire network operation, and the existence of the network itself is severely
    affected. Fig. 5 illustrates a GPS Spoofing attack scenario in which the UAV at
    the ‘Original Location’ travels to the ‘Desired Destination Location’ through
    the ‘Original Path’ that is shown in green. The spoofer desires to redirect the
    UAV to the position labeled as ‘Attacker Desired Destination’. The spoofer sends
    fake locational information to the UAV such that the UAV perceives that it is
    navigating in the wrong trajectory. However, it is located at the ‘Actual Current
    Location’, the spoofer deceives the UAV that it is located at the position labeled
    as ‘Fake Current Location’. The UAV then follows the ‘Perceived Flight Trajectory’
    shown as the blue arrow in Fig. 5. This movement makes the UAV travel in the ‘Actual
    Flight Trajectory’ shown in the dark red arrow, leading it to the ‘Attacker Desired
    Destination’. FIGURE 5. Illustration of GPS spoofing attack in UAV. Show All Location
    awareness of constituent nodes is required for better performance of FANETs or
    UAV swarms. The current UAV positions are exchanged within the network with other
    UAVs, GCS, and/or other centralized services for topology maintenance. Forging
    the GPS signals, which is the main source of localization in FANETs, and disseminating
    this information in the network has harsh impacts on FANETs missions as follows:
    The absolute or relative locational information of UAVs is required for the successful
    completion of FANET’s mission. So, falsifying this information can lead to mission
    failure. Wrong locational information can cause two UAVs to collide. False location
    information can cause the UAV to enter geofenced areas such as military bases,
    airports, etc. Line-of-Sight (LoS) propagation is used by malicious UAVs to disseminate
    fake locational information. Hence, there is no chance of multi-path fading, which
    can be monitored otherwise using SNR (Signal-to-Noise Ratio) or C/N0 (Carrier-to-Noise
    Power Density, N0 represents the noise spectral density). SNR and C/N0 are vital
    parameters to analyze the performance of GPS receivers. In one aspect, GPS Spoofing
    in drones is relatively simple as multiple low-cost and simple drones are used.
    In another aspect, the spoofer has to counteract the swarm formation, i.e., the
    position of the FANET as a whole as well as the relative positions of UAVs within
    the swarm also has to be taken into account when spoofing attack is launched.
    A fake GPS signal relative to an individual drone will make obvious changes in
    the swarm formation and hence be detected easily. Thus, it can be concluded that
    deeper investigations on the threat of GPS Spoofing attacks in FANETs need to
    be conducted. This paper conducts a systematic literature survey on this topic,
    so future researchers can conceive this survey as a comprehensive guide to propose
    various solutions to secure the FANET environment from the threat of GPS Spoofing
    attacks. In the following section, the methodology adopted for this survey has
    been detailed. Specifically, Research Questions, Search Strategy, Keywords, Databases,
    Selection Criteria, Quality Assessment Tools, Data Extraction, and Data Synthesis.
    SECTION III. Methodology The research methodology in this survey follows the guidelines
    of Kitchenham and Charters [21], which has three phases, namely, planning, conducting,
    and reporting. In the planning phase, a complete plan of how and why to conduct
    this survey is provided. The research questions are also identified; and the search
    strategy, keywords, and resources are determined. In the conducting phase, the
    search strategies are applied to select the research articles to be considered.
    Based on the Inclusion/Exclusion criteria (shown in Section III-E), irrelevant
    articles are filtered out. The selected articles are further refined by a quality
    assessment tool formulated for this survey. In the reporting phase, the synthesized
    data are compiled in the form of facts and figures. In the following sections,
    the aforementioned phases are detailed. A. Research Questions (RQs) The survey
    conducted in this paper aims to address the following Research Questions: RQ1:
    What is GPS Spoofing Attack and its impact in FANETs? RQ2: What are the GPS Spoofing
    Attacker Models in UAVs in terms of Spoofing Strategy, Spoofing Technique, Spoofer
    Location & Number, and Spoofer System? RQ3: What are the attack detection and
    prevention mechanisms presented in the existing literature? RQ4: What are the
    Performance Evaluation Mechanism(s) in terms of Simulation or Proof-of-Concept
    Implementation? RQ5: What are the Performance Metrics used in existing Literature?
    RQ6: What are the Mobility Models used in the detection and prevention mechanisms?
    RQ7: What are the Communication / Propagation Models used in the detection and
    prevention mechanisms? RQ8: What are the Future Directions and Open Issues that
    are unaddressed in GPS Spoofing Attack studies? Table 6 lists the motivations
    that led to raising the above research questions. B. Search Strategy The articles
    published on GPS Spoofing attacks in Unmanned Ariel Vehicles (UAVs) during the
    2017–2022 period were searched in IEEE XPlore®, ACM Digital Library, ScienceDirect®,
    Springer, and Google Scholar databases to conduct this survey. The aim of the
    search is to locate papers that discussed GPS Spoofing attacks in FANETs and/or
    defense mechanisms. In the next section, we present the formulated search words,
    which are also associated with logical “AND” and “OR” operators. C. Search Terms
    or Keywords With the aim of identifying all scientific articles related to GPS
    Spoofing attacks in FANETs, the major search terms identified for this purpose
    are “Unmanned Ariel Vehicle” and its acronym “UAV”, “Flying Ad-Hoc Network” and
    its acronym “FANET”, “Drones” and “Global Positioning System Spoofing” and its
    acronym “GPS Spoofing”. GPS being a subcategory of Global Navigation Satellite
    Systems, the term “Global Navigation Satellite System Spoofing” and its acronym
    “GNSS Spoofing” is also used. Below is the search query used in this survey: (‘‘Unmanned
    Ariel Vehicles’’ OR ‘‘UAV’’ OR ‘‘Drones’’ OR ‘‘Flying Ad-Hoc Network’’ OR ‘‘FANET’’)
    AND (‘‘Global Navigation Satellites Spoofing’’ OR ‘‘GNSS Spoofing’’ OR ‘‘Global
    Positioning System Spoofing’’ OR ‘‘GPS Spoofing’’). The compiled query is pasted
    in the search text field of the resources discussed in the next Section (III-D)
    and are searched in the “Title” and “Abstract” of the results. D. Resources As
    mentioned before, this study explored publications listed in global databases.
    Specifically, IEEE XPlore®, ACM Digital Library, ScienceDirect®, Springer, and
    Google Scholar databases. Selected articles’ bibliography sections are also analyzed
    for literature completion. In the IEEE XPlore® and ACM Digital Library databases,
    the search was conducted for the above query, and a filter was applied to get
    results from the years 2017-2022. In IEEE XPlore®, an advanced search is conducted
    using the ‘Command Search’ option available under the ‘Advanced Search’ menu.
    The ScienceDirect® database, owned by Elsevier Publishers, is also queried in
    the same manner. In SpringerLink, in addition to the above filter, the results
    are further filtered to omit the result-bearing books’ titles using the filtering
    tool in MS Excel (i.e., the results were exported to Excel Spreadsheets). Google
    Scholar database is also searched with the same search query and the year of search
    is selected as 2017–2022 from the options in the sidebar. Recent survey papers
    on GPS Spoofing attacks were collected for reviewing the state-of-art in Section
    IV. The technical papers on GPS Spoofing attacks in existing literature are presented
    in Section V. The following section presents the selection criteria applied in
    this survey. E. Selection Criteria Appropriate criteria have been applied for
    the inclusion/exclusion of identified publications into/from the final corpus.
    The published articles that meet all the inclusion criteria are included in this
    study. Oppositely, if the article has any exclusion criterion, it is omitted.
    The Exclusion Criteria (EC) and Inclusion Criteria (IC) employed in this survey
    are: EC1: The main focus of this study is GPS Spoofing attacks in UAVs and their
    impact on FANETs. So, this study doesn’t consider publications that deal with
    any other security threats in UAVs or FANETs. EC2: The attacks on MANETs/ VANETs
    or any kind of networks other than FANETs are out of the scope of this work. EC3:
    All articles published in languages other than English are not considered. IC1:
    The publications that study GPS Spoofing attacks, which include Surveys and/or
    Detection and/or Prevention of GPS Spoofing attacks in FANETs. IC2: The year of
    publication should be 2017-2022. IC3: The publication should be well-structured
    and well presented in English writing. The results obtained by applying these
    criteria have reduced the number of publications/articles to be considered in
    this survey to 79, which was 428 before. The summary of these results is tabulated
    in Table 7. The articles/publications are then categorized into two groups: 1)
    State-of-the-art Papers and 2) Technical Papers. It is observed that out of 79,
    14 papers were Survey or Review papers and are included in the category ‘State-of-the-art
    Papers’. The ‘Technical Papers’ comprised 56 papers, which include various papers
    that present studies on or propose solutions for GPS Spoofing attacks in UAVs.
    Google Scholar has an overlap of nine papers from other databases. So, a total
    of 70 papers are considered in this study for further refinement. A year-wise
    analysis of this observation is illustrated in Fig. 6. The results are further
    refined based on Quality Assessment Tools, which are presented in the next section.
    FIGURE 6. Year-wise analysis of research publications on GPS Spoofing attacks
    in UAVs. Show All F. Quality Assessment Tools All papers resulted from the searches
    are subjected to a quality check using the tools that will be described in this
    section. This helps to select only the most relevant papers for consideration
    in this survey. “Quality instruments” [21] are used for this purpose, which are
    typically quality assessment questions. The numerical assessment of quality can
    be obtained if these instruments are mapped to numerical values. The ‘State-of-the-art’
    papers are evaluated using the following Quality Checklists (QCs): QC1: Does the
    study contain sufficient information about FANETs and GPS Spoofing attacks in
    FANETs? QC2: Does the survey adhere to any Survey Methodology or Searching Strategy?
    QC3: Does the survey clearly state its motivation? QC4: Does the survey review
    a sufficient number of papers? QC5: Does the survey identify the research gaps?
    The ‘Technical Papers’ are evaluated using the following assessment questions:
    QC6: Does the study present the existing literature on GPS Spoofing attacks in
    FANETs before proposing the solution to defend the attack, if any solution is
    proposed by the authors? QC7: Does the study have clear problem(s) statement?
    QC8: Does the study portray implementation results? QC9: Does the study present
    a discussion on the results? QC10: Does the study clearly indicate the implementation
    tools used, i.e., simulation and/or proof-of-concept and/or datasets? QC11: Does
    the study make a comparison of the proposed system with existing ones and indicated
    how it outperformed them to fill the research gaps? QC12: Does the study addressed
    the research questions presented in Section III-A? QC13: Are the performance metrics
    used in the study valid and reliable? Further, qualitative checklists were framed
    and applied to evaluate both the state-of-the-art papers and the technical papers,
    as follows: QC14: How clear are the links and flow between various sections in
    the paper? QC15: Are there any new insights delivered by the study? QC16: How
    well is the comprehensibility of the language and style used in the paper? Each
    paper is assigned weights as ‘0’, ‘0.5’, or ‘1’, based on the answers to the above
    QCs, that do not meet, partially meet, or clearly/fully meet the quality checklist,
    respectively. These weights are summed up to score the paper. A paper is included
    if its final score is ≥5 out of 8 (for state-of-the-art papers) and ≥8 out of
    11 (for technical papers). G. Data Extraction The results refined after applying
    the criteria in Section III-E and III-F were processed to extract the information
    from the selected studies to answer the Research Questions (RQs) formulated in
    Section III-A. The following points were considered when processing state-of-the-art
    papers: Authors’ details, journal/publication details, year of publication, and
    the years or duration of studies considered in the survey. Concepts or topics
    discussed in the study. Open issues or future directions provided by the study.
    The technical papers are processed with the following points in mind: Authors’
    details, journal/publication details, year of publication. The defense strategy
    applied for the proposed solution. The proposed solution. The implementation details.
    The scenario where the proposed solution is deployed (whether it is FANET or Single
    UAV). If a single UAV, whether the solution is also applicable to FANETs. The
    attacker model. Whether the proposed solution is for detection, mitigation, and/or
    prevention. The performance parameters (methods and metrics) considered in the
    evaluation. H. Data Synthesis The information extracted from the results is summarized,
    tabulated, and/or plotted graphically based on the nature of the information.
    Sections IV and V put light on the ‘State-of-the-Art’ and ‘Technical’ papers,
    respectively, that satisfied the criteria mentioned in Section III-E and passed
    the Quality Checks (QCs) in Section III-F. SECTION IV. State-of-the-Art In this
    section, a review of the state-of-the-art papers identified during this study
    is presented. A total of 12 out of 14 (that passed the Quality Checks) Survey/Review
    papers on GPS Spoofing attacks in FANETs were selected as a part of this study.
    However, it is found that most of the papers reviewed the security issues in Unmanned
    Ariel Vehicles (UAVs). The papers that have some special mention of the GPS Spoofing
    attacks in FANETs along with other attacks are discussed. For instance, Mohsen
    et al. [39] reviewed ~84 articles and presented a study on the cyber attacks on
    UAVs. The attacks on UAVs were analyzed and categorized. The authors also reviewed
    the recent defense mechanisms against various attacks on UAVs. Among these, ~13
    articles (from 2012 to 2019) were technical papers on GPS Spoofing attacks, which
    discussed GPS Spoofing attacks under the category of Data Manipulation attacks.
    They classified GPS Spoofing defense strategies into four categories, namely,
    Cryptography-based, Spatial Processing-based, Machine Learning-based, and Hybrid
    methods. However, only few of these studies addressed the security requirements
    of GPS Spoofing attacks in FANETs. Most of them are generalized defense mechanisms
    for GPS Spoofing attacks. The authors projected the need to develop efficient
    techniques in the future so that UAVs can navigate efficiently in GPS-denied environments.
    Hamza et al. [40] reviewed ~56 articles and discussed the UAV components, vulnerabilities,
    and defense methodologies. The authors created a taxonomy of attacks against UAVs
    based on the UAV components and the GPS Spoofing attacks were categorized under
    ‘Attack against Communication Link’. Various defense techniques were also discussed
    by the authors in ~8 articles (from 2014 to 2016). These include signal processing,
    encrypting GPS signals, and machine learning techniques. It also is observed that
    the GPS Spoofing strategies and defense mechanisms discussed in this paper are
    not specific to FANETs. The authors recommended the need for GPS-independent navigation
    solutions for UAVs so that the missions can be completed successfully during Jamming
    and spoofing attacks. As GPS signals are more prone to spoofing and Jamming attacks,
    the need for proposing effective navigation techniques that are less dependent
    on GPS is recommended as a future direction in this paper. Yueyan et al. [41]
    studied ~29 papers and analyzed the safety aspects of UAVs from three angles,
    namely, sensors, communications, and multi-UAVs. GPS Spoofing attacks were studied
    under the category ‘attack on sensors’. Two types of spoofing threats (Repeater
    type and Generating type) in UAVs are also presented in this paper. The authors
    have cited only one technical paper (published in 2017) specific to GPS Spoofing
    attacks in which attack signals were broadcasted using USRP (Universal Software
    Radio Peripheral). Fazal et al. [28] portrayed a review of communication perspectives
    of FANETs. They reviewed ~73 papers with the goal of providing insights into communication
    technologies in FANETs, applications scenarios, challenges, and open issues in
    the area. Among these, ~4 technical papers (from 2017 to 2019) discussed GPS Spoofing.
    This includes the GPS Spoofing vulnerability of 3-D Robotics commercial drones
    and few solutions to GPS Spoofing attacks in FANETs. However, no detailed discussion
    of these solutions was provided. Aicha et al. [42] presented a comprehensive survey
    (~213 references) on UAV communication protocols, networking systems, architecture,
    and applications. The survey also discussed the technical challenges and open
    research issues. Among these, few technical papers (~3 papers from 2020 to 2022)
    give a brief review of recent GPS Spoofing attack detection techniques in UAVs
    based on Visual Odometry, the fusion of GPS and optical flow raw data, and machine
    learning. No future direction related to GPS Spoofing attacks was discussed in
    this paper. A review on GPS Spoofing vulnerability of UAVs was provided by Eshta
    et al. [43] after reviewing ~41 articles. Among these, ~29 technical papers were
    on GPS Spoofing attacks and only two papers (published in 2014) are specific to
    UAVs. The paper also discussed the spoofing problems, types, and various countermeasures
    in the existing literature. A detailed discussion on the different types of spoofing
    attacks, namely, Covert and Overt as well as based on the threat assessment, namely,
    Simplistic, Intermediate, and Sophisticated were also provided. Moreover, the
    authors discussed different countermeasures and categorized them into several
    groups - encryption-based, Receiver Autonomous Integrity Monitoring (RAIM), Navigation
    Message Authentication, differing spoofed signal and true GNSS signals in space,
    antenna motion or geometry, and signal power. The authors also stated that the
    studied solutions face a common pitfall in that they require specialized hardware,
    which increases the weight and cost of UAVs. This is because the solutions were
    not UAV specific and hence cannot address the GPS Spoofing issues in FANETs. As
    a future direction, the authors recommended conducting more research on improving
    the tools for counteracting GPS Spoofing attacks. They emphasized the adoption
    of cryptographic techniques to safeguard against GPS Spoofing attacks in UAVs.
    Also, the need for drone manufacturers to develop a minimal level of countermeasures
    against GPS Spoofing while manufacturing commercial drones is envisioned. Hassija
    et al. [44] reviewed ~ 165 articles and presented a comprehensive review on drone
    communication. The authors shed light on security-critical drone applications
    and security challenges. Furthermore, the authors discussed solution architectures
    for various attacks based on Blockchain, Software Defined Networks (SDNs), Machine
    Learning, and Fog/Edge Computing. Among various security issues discussed in this
    paper, GPS Spoofing attacks in drones also got a relevant space as discussed in
    ~4 technical papers (from 2018 to 2019). An example of a GPS Spoofing attack on
    an American drone on December 5, 2011, was also showcased. The usage of BladeRFx40
    SDR for generating falsified GPS Signals was also reviewed. Solutions to prevent
    GPS Spoofing attacks in drone environments based on Fog computing were discussed.
    The authors stated that Blockchain technology, SDNs, Fog computing, and machine
    learning techniques are new directions to consider while designing solutions for
    GPS Spoofing attacks in UAVs. Vinay et al. [45] surveyed ~144 articles to showcase
    a comprehensive review of UAV attacks and neutralization techniques. Among these,
    ~7 papers are specific to GPS Spoofing attacks in UAV, which include spoofing
    tools, and solutions to GPS Spoofing attacks based on techniques like deep learning.
    These papers also discussed the misuse of UAVs for illegal surveillance and unmanned
    attacks. Discussion on GPS Spoofing being used as an anti-UAV tool to neutralize
    UAV attacks is also provided as well as the need for future research to address
    various security concerns in UAVs. Faisal et al. [46] studied ~20 recent articles
    to survey the Jamming and Spoofing attacks on UAVs. Among these, ~4 papers (from
    2019 to 2021) are specific to GPS Spoofing attacks in UAVs. The spoofing attacks
    that target the GPS, as well as Automatic Dependable Surveillance-Broadcast (ADS-B),
    are briefly illustrated. The authors observed the three ways of executing GPS
    Spoofing attacks, namely, falsified GPS signal or higher frequency signals, or
    spoofing the high gain antenna. The authors also observed that traditional defense
    mechanisms like GPS signal authentication are not suitable for resource constraint
    UAVs and recommended machine learning as an effective mechanism to defend against
    GPS Spoofing attacks. Rugo et al. [47] collected ~125 papers and presented a systematic
    literature review on drone security. Among these, ~4 technical papers discussed
    GPS Spoofing attacks in UAVs. Along with other security issues studied, the authors
    dug into the history of GPS Spoofing attacks in UAVs. The countermeasures in the
    existing literature to mitigate GPS Spoofing were also discussed. The authors
    showcased sophisticated techniques like comparing the other sensors (such as onboard
    IMUs, signal amplitudes) measurements, vision-based techniques, and machine-learning-based
    methods. Their observation was that the attackers are becoming smarter as the
    defense mechanism are becoming stronger. Furthermore, the authors recommended
    the use of GPS authentication and encryption as the most effective tool to counteract
    the threat of GPS Spoofing in FANETs. The possibility of replay attacks using
    the previously sent signals exists though. Syed et al. [48] surveyed ~126 articles
    and showcased a comprehensive review of UAVs, types, classifications, security
    challenges, applications, and standardization. Apart from a pictorial illustration
    of a GPS Spoofing attack in UAV, there are no further discussions on GPS Spoofing
    attacks in this paper. The author concentrated more on other technical details
    like the types of UAVs, applications, etc. Kai-Yun et al. [49] collected ~200
    papers and identified the cyber security threats and solutions when UAVs collaborate
    to form FANETs. A detailed study on UAV communication architecture, routing protocols,
    and UAV characteristics including the mobility models are also showcased. Each
    paper studied in this survey is analyzed with an eye on security and non-security
    features addressed. A generic view of GPS Spoofing attacks and detection methods
    is given in this paper. The history of GPS spoofing attack is briefly explained
    through a pictorial illustration. As future directions, the authors recommended
    the use of techniques like lightweight encryption, reinforcement learning, and
    SDN to improve the security aspects of resource constraint UAV devices. Table
    11 in the Appendix shows a summary of the comparative analysis of the State-of-Art
    papers discussed in this study and presented how the survey conducted in this
    paper is different compared to them. Conclusion. In this study, 12 out of 14 papers
    were selected after the quality assessment. The papers were considered relevant
    if they had some discussions on GPS Spoofing attacks in UAVs/FANETs. The discussion
    can be on the attacks and/or their impacts, the tools or algorithms for creating
    GPS Spoofing attacks, or the countermeasures. It is observed that most of the
    selected surveys studied the security issues in UAVs or FANETs in general and
    GPS Spoofing has been mentioned as one among many attacks. Some papers have elaborated
    on and viewed GPS Spoofing attacks in a broader sense. However, to the best of
    our knowledge, few studies have been conducted exclusively on GPS Spoofing attacks
    in FANETs. Though few studies exist on GPS Spoofing attacks on a single UAV scenario,
    none of the aforementioned followed any particular search/surveying methodology.
    Only one article followed systematic review guidelines, but that was also a generalized
    view of drone security. Accordingly, the survey presented in this paper on GPS
    Spoofing attacks in FANETs is the first of its kind to conduct a systematic literature
    review following the guidelines of Kitchenham [21]. An overview of this survey
    is shown in Figure 7. FIGURE 7. A taxonomy of GPS spoofing in FANETs. Show All
    SECTION V. GPS Spoofing in FANETs: A Taxonomy During this survey, it is observed
    that GPS Spoofing attack in FANETs is an issue of serious concern, and few research
    works that are specific to this topic have been undertaken. A total of 56 articles
    published between 2017 to 2022 has been considered, which can be classified into
    four categories, as shown in Figure 7. Articles that focus on GPS Spoofing attack
    mechanisms, articles that propose GPS Spoofing defense mechanisms, articles that
    have used GPS Spoofing as a defense mechanism (i.e., against other attacks), and
    articles that investigate the impact and vulnerability of GPS Spoofing attack.
    The following sections present a review of the articles in each category. A. GPS
    Spoofing Attack Mechanisms in UAVs In this section, the articles that studied
    the GPS Spoofing attacker models are discussed in detail. The purpose of these
    articles is to provide guidelines to the research community and cyber experts
    to understand the attacker’s capabilities and how they conduct the attack. Thus,
    to aid the development of novel solutions to defend against the threat of GPS
    Spoofing attack. As presented in Section II-G, the satellites transmit radio signals
    to UAV receivers to be processed in order to obtain the positional information.
    As these radio signals don’t use any encryption or authentication mechanism, the
    positional information can be altered by a spoofer device. The attacker might
    project a mimicked route or trajectory to the GPS receiver in three possible ways:
    Generating fake GPS signals. Sending signals with higher frequency leading to
    a denial of GPS signals. Spoofing high gain antenna. Bethi et al. [50] presented
    GPS Spoofing architecture layers, as shown in Fig. 8. The spoofing strategy and
    techniques are included in the application layer, whereas spoofer location, spoofer
    system, and user-spoofer understanding are placed under the device layer. The
    spoofing strategies adopted by the attackers are either to “mislead” the target
    or to “misreport” the positional information. While “mislead” guides the target
    UAV to a false destination, “misreport” reports false location information. The
    techniques used for implementing these two strategies are “position denial” and
    “track break”. In “position denial” techniques (also called detection denial techniques),
    the receiver is denied from detecting legitimate GPS signals. In “track break”,
    the targets are misled by sending false navigation signals. The spoofers can operate
    from different locations: “stand-off” (remote), “escort” (near but at a distance,
    also called stand-in), and “onboard” (resides along with the target). Distributed
    attackers deploy multiple spoofers at different locations. The spoofer systems
    include “simulators” (software codes to simulate GPS signals and radiate Radio
    Frequency (RF) signals with higher power), “repeaters” (the receiver module within
    the attacker captures the GPS signals, manipulates them, and re-transmits), and
    “hardware injection” systems, where the spoofed signals are combined with the
    receiver’s hardware for intentional misreporting. The user-spoofer understanding
    is the relation between the receiver and the spoofer. It includes “non-cooperative”
    (the receiver is unaware of the spoofer’s presence and always tries to avoid the
    attack) and “cooperative” (the user aims to get spoofed for misreporting its position
    to the base station). FIGURE 8. GPS spoofing attack layers. Show All In FANETs,
    the attacker manipulates UAV’s GPS signals with two main objectives. Either to
    change the routing information leading to a collision of UAVs (or incomplete missions)
    or to capture the UAV. The attacker sends fake GPS signals with higher power to
    UAVs with two basic modes: Covert Attack: the attacker avoids triggering any spoofing
    detection methods. This kind of attack is usually hard to detect. Overt Attack:
    the attacker launches a severe attack without any caution being detected. He et
    al. [51] studied the communication security of UAVs. Security vulnerabilities
    in UAV modules enable attackers to launch GPS Spoofing attacks. A low-cost implementation
    of GPS attacks is discussed in this paper. Since civilian GPS signals are not
    encrypted, they are more vulnerable to attacks. The spoofer system includes a
    repeater-based system. It is a low-cost GPS record-modify-and-replay system, which
    is hardware-based - Ettus USRP [52] radio family and software based on GNU Radio
    [53]. The spoofer location is remote and a track break spoofing technique is used
    in which the signal received from the satellite is recorded and sampled by USRP.
    The signal is then modified and reproduced to create spoofed GPS signals. The
    UAV’s GCS receives different locational information under normal scenarios and
    spoofed scenarios when the UAV was located at the same place. Eric et al. [16]
    developed a GPS Spoofing tool that can attack a DJI Matrice 100 Quadcopter. BladeRFx40
    SDR is used to transmit the spoofed signals to the GPS receiver. The authors showcased
    the overall basics to details of the hardware and software of the DJI Matrice
    100 Quadcopter. An open-source C-based software, GPS-SDR-SIM [54], is fed to the
    BladeRFx40 SDR to generate the spoofed signals. The authors aims to provide the
    research community with a general understanding of the GPS Spoofing concept in
    order to develop efficient defense mechanisms. Guo et al. [55] proposed a covert
    GPS Spoofing tool that generates spoofed signals without being detected. The original
    trajectory of a UAV is first captured using some external devices such as radar
    and is then used to simulate similar counterfeit signals so that the UAV will
    not suffer from bigger shakes during this drift. For that purpose, the acceleration
    of the UAV is made adjusted so that it is moved to the deceptive trajectory. The
    authors have not put much focus on the simulator used and future directions. The
    articles discussed so far have dealt with tools that can create GPS Spoofing attack
    on individual drones. However, the scenario in FANETs is different as swarms are
    formed with multiple drones working towards a common goal. These drones might
    be relatively of low cost and less complex and hence it is easier to instigate
    GPS Spoofing attacks. However, the concept of swarm formation plays a vital role
    in this case as transmitting a signal relative to any individual drone in the
    swarm might create obvious changes in the FANET’s shape. This observation is considered
    by Ceccato et al. [56] in 2020 to design a spoofing tool against FANET to divert
    the routes of the entire swarm without disrupting the formation. This is called
    ‘Spatial Spoofing’, where FANETs move in the spoofed area in formation as if they
    are moving in their real target area. Multidimensional Linear Filters (e.g., Wiener
    Filter) are used for filtering the signals transmitted by the satellites in the
    target area and are further re-transmitted by multiple spoofing ground antennas.
    Ceccato et al. claimed that this releases the attacker from keeping track of each
    individual drone in the swarm. Aru et al. [57] demonstrated the use of GPS-SDR-SIM,
    for generating spoofed signals to test the security vulnerability of DJI Phantom
    3. GPS-SDR-SIM run by Attify 1.3 operating system, which is based on Ubuntu Linux
    and is built on a VirtualBox system. The GPS coordinates are input into the system.
    The tool then generates new coordinates and outputs into a gpssim.bin file. This
    is loaded to the BladeRF X40 device, which is then connected to the virtual machine.
    This system uses a track break mechanism and the attacker is operated from a remote
    position. Wang et al. [58] proposed two spoofing trajectory planning algorithms,
    the extension line and the tangent line. Forward Spoofing Jamming technique is
    used, which generates the spoofed signal by adding a certain time delay to the
    original satellite signals. The authors considered the role of the Inertial Navigation
    System (INS) as well. In the extension line, the next spoofing position is the
    intersection of a circle with the center as the UAV’s previous position and the
    direction vector of the Jamming signal. In the tangent line, the next spoofing
    position is the intersection of the tangent to the circle with the UAV position
    as the center from the actual destination of the UAV. MATLAB simulation experiments
    were conducted to evaluate the performance of the two algorithms. Even though
    both deflected the UAV from its original path, the tangent line algorithm was
    more powerful. The various attacker models applied by GPS Spoofing attack mechanisms
    discussed in this section are summarized in Table 8. B. GPS Spoofing Defense Mechanisms
    in UAVs The proposed taxonomy of the GPS Spoofing defense mechanisms in UAVs is
    depicted in Fig. 7, which are classified under five major categories, based on
    the methodology adopted for or the basis of the defense. Specifically, onboard
    devices, signal processing, cryptographic, game theory-based, and machine or deep
    learning-based methods. The use of onboard navigation systems such as Inertial
    Measurement Units (IMUs) (e.g., Accelerometers, Gyroscopes) and cameras to compare
    with GPS measurements is the basis of defense using onboard devices. In signal
    processing methods, various characteristics of received signals like the Received
    Signal Strength (RSSI) are analyzed to check for any anomaly. Cryptography-based
    methods rely on encryption and authentication techniques. Strategic movements
    based on game theory are applied in game theory-based defense methods. The techniques
    of learning and training the network through various machine and deep learning
    concepts are employed in the machine or deep learning-based methods. In the following
    paragraphs, we discuss the details of the articles for each mechanism. A summarised
    table of these articles is shown in Table 13 in the Appendix. TABLE 12 Detailed
    Analysis of the Attacker Models TABLE 13 Summary of Defense Mechanisms (NA: Not
    Available) Onboard devices or sensors techniques leverage various sensors onboard
    the drones for detecting GPS spoofing attack. The basic strategy is to employ
    the sensors to detect any anomalies or deviations from the expected GPS signals.
    There are several types of sensors that can be used onboard a UAV such as Inertial
    sensors (e.g., accelerometers and gyroscopes), Magnetic sensors (e.g., magnetometers),
    and Vision sensors (e.g., Cameras). Onboard sensors-based GPS spoofing detection
    approaches are advantageous as they can detect spoofing attacks in real-time and
    they are resistant to Jamming and interference. However, these approaches have
    some limitations and challenges like the need for accurate sensor calibration
    and the potential for false alarms due to other factors that might affect the
    sensor readings (e.g., environmental conditions or sensor noise). Fig. 9 depicts
    a high-level description of the methodology of these approaches. In the following
    paragraphs, we discuss the proposed defense solutions that are based on onboard
    devices or sensors. FIGURE 9. GPS spoofing detection using onboard devices or
    sensors. Show All In 2017, Qiao et al. [61] proposed a GPS Spoofing detection
    based on the vision of the UAV. The Monocular Camera, using Lucas-Kanade (LK),
    and the IMU sensors were used to find the velocities of the UAVs. The velocity
    obtained via these two sensors is compared with the corresponding velocity obtained
    using the GPS. RMSE values are computed and spoofing is detected if the RMSE goes
    beyond a specific threshold value more than a pre-set number of times. The aforementioned
    process is performed during fixed time intervals. The proof-of-concept was implemented
    using DJI Phantom 4, which uses a rectangular trajectory. The GPS-spoofed signals
    are simulated at a UAV’s speed of 5m/s and the authors claimed that their method
    is efficient, as it does not require any additional hardware. The detection latency
    is used to evaluate the system. The experimental results show that the proposed
    methods detect GPS Spoofing in an average of 5s . The authors plan to implement
    the proposed system in open-source platforms and outline the steps the UAVs must
    take upon detecting the attack. The above work in [61] has been extended by Daojing
    et al. [62] in 2018 by proposing a method for the safe return of UAVs when spoofing
    is detected. The authors proposed to use the Oriented FAST and Rotated BRIEF (ORB)
    methods for feature detection, which are more precise and faster than their traditional
    counterparts like Scale Invariant Feature Transform (SIFT) and Speeded Up Robust
    Features (SURF). The UAV stores the image frames it captures during every prefixed
    time interval and if spoofing is detected, the UAV moves back in the same line.
    Then, after the same prefixed time interval, the UAV compares the captured image
    for that location with the stored one. If they match, it moves back from that
    location and repeats the same process until it reaches the starting location.
    The authors have not implemented their proposed method and therefore the performance
    is not evaluated. The authors recommended doing more research on decentralized
    approaches to control UAV clusters for decision-making and collision avoidance.
    However, continuous usage of the camera might rapidly drain the battery of the
    drones. Moreover, environmental factors like light, fog, and wind might affect
    the camera’s performance. Feng et al. [63] proposed a drone hijacking detection
    method in which the position of the drone detected by the Gyroscopes and Accelerometers
    sensors and the GPS receiver module are compared. The method avoids accumulated
    errors when the INS is used. The performance of the proposed method is evaluated
    using proof-of-concept implementation with Quadrotor drone (equipped with L3GD20H
    gyroscopes and LSM303D accelerometers) using the PixhawkTMflight control system.
    The GPS system used in these drones is NEO-M8N. Hardware injection attack is conducted
    using an onboard micro-controller that generates fake GPS signals and a timer
    is set to trigger the hijacked mode. Position denial was used to prevents the
    GPS receivers from sensing the original signals. The “Correctness Ratio” (i.e.,
    the ratio of the number of successful detection of hijacks to the total number
    of experiments) was calculated for the proposed method and it was 84% for non-hijacked
    cases and 100% for hijacked cases. At the same time, the systems that used GPS
    versus INS exhibited 0% and 100% correctness ratios, respectively. The authors
    recommend conducting future tests with other drones to generalize the results.
    The authors further improved their scheme in [64] to enhance the detection rate
    in non-hijacked cases. The GPS data (GPS angle) and gyroscope measurement (Yaw
    from the Angular Velocity) are the only factors used. This is because the readings
    from the accelerometers reduce the Accuracy of results in [63]. The authors claim
    that the correctness ratio of the system had become 100%, while it was 84% in
    [63] (DATE method) during non-hijacked curved trajectories. Yet, the method introduced
    subsequent degradation (still 92%) in the correctness ratio during non-hijacked
    line trajectories. Thus, in order to achieve 100% perfection in all scenarios,
    the authors recommended using [63] and [64] methods in fusion. In addition to
    the future direction in [63], the authors plan to extend their work to anti-hijacking
    flight control so that the drones can detect and stay resilient to fake or low-quality
    GPS signals. Sun et al. [65] discuss the GPS Spoofing attack in UAVs that employ
    INS/GPS-integrated navigation systems. The authors state that in order to make
    the UAVs anti-spoof, the spurious GPS signals need to be identified first. For
    this, the system dynamics are based on the centroid motion model and attitude
    motion model. The measurements from INS and GPS are passed through two Extended
    Kalman Filters and are used to find relative estimation errors. Numerical Simulation
    experiments were conducted to evaluate the proposed model. The Estimation Error
    of centroid dynamics parameters Xc , Xy , and Xz with respect to time were used
    as performance parameters. The authors have not mentioned any future direction
    for their work. Majidi et al. [66] proposed an approach to estimate the actual
    location of UAVs, which uses a fusion of INS/GPS data for navigational purposes.
    The spoofing is detected using the hypothesis method and the real trajectory to
    be followed during spoofed situations is estimated using particle filters. The
    authors used a Particle Swarm Optimization Filter (PSOF). The results obtained
    are compared with those of other particle filters such as the Sampling Importance
    Sampling Particle Filter (SIS-PF), Sampling Importance Re-sampling Particle Filter
    (SIR-PF), and Adaptive Unscented Particle File (AUPF). The PSOF is found to have
    a better performance, as it uses the experiences of each particle as well as neighbors
    for trajectory estimations. The performance of the system is evaluated using MATLAB
    simulations and the system has 97% Accuracy in positioning. Root Mean Square tests
    were conducted to validate the proposed method. No future directions were mentioned
    in this article. Zhu et al. [67] proposed a method that involves a human operator
    supervisory control system. The image/video reels captured by onboard cameras
    are compared by a human operator with a pre-defined map. Any inconsistency in
    the correlation suspects a hacking attack and the operator can take control of
    the UAV for safe-return. The experiments to evaluate this concept was conducted
    on the Security-Aware Research Environment for Supervisory Control of Heterogeneous
    Unmanned Vehicles (RESCHU-SA) platform [68], [69]. The experimental results show
    80% success rates. The data is analyzed using ANOVA tests and Pearson correlation.
    The authors recommended that Human Geo-location can be used as a potential tool
    to detect GPS Spoofing if the decision support systems are further enhanced. This
    work has been extended in 2019 using Hidden Markov Model (HMM) to reveal two hacking
    detection strategies (waypoint-oriented and target-oriented) [70]. The inefficiencies
    of these strategies were identified and recommended the need for a better decision
    support system as a future direction. The devices and systems that can provide
    real-time operational guidelines to the operators are other future directions.
    Yet, human operator is not a desirable feature for an autonomous environment.
    Cheng et al. [71] proposed an approach that is based on the fusion of GPS and
    IMU information. The detection task is entrusted to the GCS and the GPS devices
    are relieved of any infrastructural changes. The authors have considered a FANET
    scenario where multiple UAVs interact and collaborate to accomplish a task. The
    locational information is also exchanged among the UAVs and they are compared
    with the locations obtained from GPS. Any mismatch indicates the probability of
    an attack. In case the number of drones in the system is not sufficient, the flight
    characteristics and other positional information from individual drones’ onboard
    sensors are used to compare with GPS information. The Monte Carlo simulation [72]
    experiments claim that the system detects GPS Spoofing attacks within 8s (and
    28s in the worst case) with a 98.6% detection rate. Communication Time Overhead,
    False Positive, and False Negative (miss detection) were the performance evaluation
    metrics used in this paper. No future directions are discussed in this paper.
    However, all drones in a FANET might not be always connected to GCS. Ferrao et
    al. [73] proposed a GPS Spoofing detection mechanism that incorporates the security
    and safety of UAVs as a unified concept. A safety metric that indicates the health
    status of the UAV and the priority of a component for the overall system security
    is computed. Haversine Formula is applied to find the distance between two points.
    The readings of the IMUs are also employed in the detection mechanism. The time
    data and distance are used to find the average speed of the drone. If the distance
    covered in the time range is acceptable (based on 80 Km/h speed), the drone is
    concluded to be in a stable state. Node Criticality Index (NCI) metric, which
    is the average of the health status index and priority, is applied to evaluate
    the performance of the proposed system. If the node is found to be unstable, the
    priority of UAV modules that can help the UAV to return to a safe state is increased.
    The experiments were conducted using 3DR solo drone. Fake GPS location Mobile
    App is employed to simulate spoofed GPS signals. The authors recommended conducting
    more research works on decision-making systems after the spoofing attack is detected.
    Lianxiao et al. [74] proposed an approach that applied the fusion of the GPS and
    optical flow sensors to detect GPS Spoofing attacks in UAVs. The distance obtained
    by GPS coordinates of two positions traversed by a UAV and the pixel distance
    of images collected by optical flow sensors at these locations is compared. If
    the difference exceeds a preset threshold value, the UAV is considered to be spoofed.
    The proof-of-concept experiments have been conducted with a Quadrotor (PX4 Flight
    Control Software). It leverages PX4flow v1.3.1 as the optical flow model and HackRF
    SDR is operated to simulate the spoofed GPS signals. QGroundControl, which is
    a powerful and user-friendly GCS for UAVs, is employed for calibrating the sensors
    before the flight. Detection latency performance metric was measured. The method
    claims to have instantaneous detection of spoofing attacks. The future plan is
    to precisely locate the spoofed sensor and to investigate about the decision UAVs
    have to take after detecting the attack. Varshosaz et al. [75] proposed an approach
    that can detect sophisticated GPS Spoofing attacks employing Visual Odometry.
    The trajectories determined by GPS and those by the onboard camera(s) are locally
    compared with the help of a moving window. The differences between these trajectories
    were estimated by computing the Euclidean Distances between corresponding points,
    Angle of Distance, and Taxicab Distance between Histogram of Oriented Displacements.
    The proof-of-concept evaluation of the proposed method is performed using images
    captured by DJI-FC6520 digital camera at Golgir village. The detection rate and
    latency performance metrics were measured. The method fails to detect the attack
    in certain scenarios like darkness, lack of features or texture in the images,
    etc. The changes in drone velocity might also affect the performance of the system.
    Hacohen et al. [76] proposed a GNSS spoofing detection mechanism in UAV swarms
    that leverage the IMUs and the GNSS (GPS) receivers. Additionally, an onboard
    sensor that estimates the relative distance between the drones (like LoRa Sensor)
    is employed in this scheme. The drones in the swarm exchange their mutual distances
    among each other in the network and an Extended Kalman Filter is used for estimating
    the FANET distribution. The pool-testing method is applied to identify and isolate
    the malicious drones in the swarm. Experimental simulation experiments were conducted
    to evaluate the performance of the method. The method is found to have 90% Accuracy
    when there are at least 10 drones constituting the network. Signal Processing
    based methods can be deployed to detect GPS spoofing attacks in FANETs. GPS spoofing
    detection based on signal processing involves analyzing the received GPS signals
    to detect inconsistencies in the signal characteristics such as carrier-to-noise
    ratio (C/N0) Monitoring, Signal Correlation Analysis, Correlation Analysis, Geometric
    Consistency, Statistical Analysis, etc. If the deviations or inconsistencies exceed
    a prefixed threshold value, spoofing is detected. Figure 10 illustrates a high-level
    diagram of the process. Following paragraphs discuss various proposed solutions
    that leverage the signal processing methods to detect GPS Spoofing attacks in
    UAV environments. FIGURE 10. GPS spoofing detection using signal processing methods.
    Show All Xiao et al. [77] proposed location authentication in drones against illegal
    hijacking by GPS Spoofing. The method named as “WiDrone” in which a WiFi Fingerprint
    location cross-check is performed. The Current WiFi Fingerprint (CWF) is compared
    with the Destination WiFi Fingerprint (DWF), which is already stored in the device.
    If there is any mismatch, spoofing is detected. The drone flies away from that
    location, gets a GPS signal, and then authenticates the destination again by employing
    the same procedure. The experimental evaluation is conducted using DJI Matrice
    100. The system uses MT7601U wireless network card as the WiFi module to perform
    WiFi fingerprint collection. The drone and the Raspberry Pi were connected via
    UART cable. USRP N210 [78] simulates the GPS Spoofing signal, which is operated
    from a remote location. Track break technique was used to attack the drone. The
    WiFi Fingerprint similarity in different environments such as laboratory buildings,
    student dormitories, residential zones, and business districts are used for the
    performance evaluation. It is observed that the distance between CWF and DWF has
    a critical role in influencing the similarity. The authors judge that the distance
    of 50 m is suitable to perform the authentication. The authors recommended that
    instead of comparing RSSI of WiFi signals, other signal parameters can also be
    included, as WiFi works well only in urban/city areas. For mountainous areas without
    enough WiFi signal strength, this method fails. The authors project the possibility
    of introducing a “No-Fly WiFi zone” to overcome the problem of bypassing the no-fly
    zone policies that can lead to terrorist attacks or illegal spying. Javaid et
    al. [79] proposed a method to detect and mitigate GPS Spoofing attacks in UAVs
    leveraging Receiver Autonomous Integrity Monitoring (RAIM). The integrity of the
    signal packet received from the satellites is compared by computing the pseudo-range
    values from different satellites. If any discrepancy is found, the faulty satellites
    have to be isolated. The signals from five satellites are processed in three groups
    to detect the faulty host and the common host in all the groups is isolated to
    mitigate the effects. OMNeT++4.5 simulator [80] (with GPS module, called as UAVSim),
    which is a C++-based discrete event network simulator, is used to test the performance
    of the proposed concept. Jansen et al. [81] proposed a method that leverages the
    periodic GPS position advertisements broadcasted by the aircraft for air traffic
    control purpose to detect GPS Spoofing attack and also to identify the location
    of the spoofer(s). The Time Difference of Arrival (TDoA) of the position advertisements
    at various globally distributed sensors at the OpenSky network [82] is used to
    estimate the position of the aircraft. The sensors are time-synchronized. The
    inconsistencies of these positions with those reported by the GPS receiver is
    used to detect the attack. The location of the spoofer is identified by employing
    the propagation delay in the advertisement traffic broadcasted by the receivers.
    The traffic is analyzed by dedicated infrastructure on the ground. USRP B200 from
    Ettus Research [52] and the software-defined GPS signal simulator, gps-sdr-sim
    [54], were applied to generate spoofed signals. Detection rate, delay, and coverage
    were the performance metrics measured. The detection rate is about 75% with a
    detection latency of fewer than two seconds. The attacker could be located within
    15 minutes of monitoring. Dang et al. [83] proposed a 5G-assisted method for monitoring
    the position of UAVs and hence live detection of GPS Spoofing attack. The method
    relies on the up-link Received Signal Strength (RSS) of signals received at the
    cellular base stations on the ground. The UAVs report their positional information
    to the Unmanned Ariel System Traffic Management (UTM), as per the Federal Aviation
    Administration (FAA) regulations. UAV residence areas and Adaptive Trustable Residence
    Areas (ATRAs) are computed using a trilateration approach. The UTM compares the
    location provided by the UAV with that of ATRA. If the UAV is located outside
    the ATRA, it is spoofed. The performance of the method, evaluated using Python,
    showed that more than 95% of the attacks are detected. True Positive, False Negative,
    and False Positive were used as performance evaluation metrics. The system applies
    the shadowing propagation model. For future works, the authors plan to work on
    LOS/NLOS Path Loss Models. Also, the proposed models would be extended to test
    the performance of the system under conditions where the UAV is not in the vicinity
    of fewer than three base stations. Additionally, the authors give directions to
    use machine learning techniques to access the channel quality. Wan et al. [84]
    proposed a GPS Spoofing attack mitigation mechanism that tracks the attacker’s
    location and estimates the effective range of the spoofing signals using an Extended
    Kalman Filter (EKF). This allows the UAV to move away from this range within the
    escape time and avoid sudden sensor drifts. The performance of the system is evaluated
    using numerical simulations with Julia Programming Language. Tituona et al. [85]
    proposed a method to detect GPS Spoofing attacks in UAV networks leveraging the
    Bayesian Networks. The UAV system is modeled as a Bayesian Network and the GPS
    signals (Signal-to-Noise ratio, pseudo-range, Doppler shift, etc.) were analyzed
    to detect the spoofing attack. When a UAV receives a new GPS signal, the attack
    detector module embedded in the UAV checks the correctness of the signal by propagating
    signals in the network and estimating the conditional probability in the Bayesian
    Network. The performance of the proposed model was evaluated using MATLAB simulations
    and SatGrid datasets were used to generate GPS signals, which includes G22 (genuine
    GPS dataset collected from distributed locations) and S7 (spoofed dataset) [86].
    The Precision, Recall, and FPR were the performance metrics measured. The method
    exhibited a Detection Accuracy of 96.2%. For future works, the authors plan to
    conduct experiments with more variables and compare the performance with other
    existing systems. The method does not work well if the trajectory is not pre-defined
    or if at least two neighbors do not follow the same trajectory. In 2021, Bada
    et al. [87] proposed a trust-based method for detecting colluding GPS Spoofing
    attacks. The nodes in the FANET are classified as targets, active witnesses, and
    passive witnesses. The active witness can locate the spoofer using the angle of
    arrival and PRN code. The method is based on the free space loss factor in signal
    propagation. The free space loss factor is found to be negligible if the distance
    between the target and the satellite changes drastically in the case of authentic
    GPS signals, whereas a slight move can lead to a huge difference if the target
    is very close to the spoofer. The spoofer adjusts its transmission power such
    that the target receives it at almost the same power as received from the satellite.
    The neighboring UAVs (witnesses) can detect this signal with signal power greater
    than the detection threshold, making them aware of the attack. The UAVs in this
    model communicated using LrWPAN (Zigbee) protocol. The active witness detects
    this and communicates to all one-neighbor nodes in its vicinity. The passive witness,
    who can also witness the spoofed signal, confirms the attack and notifies the
    target. WEIBULL distribution is used to model the trust between nodes. The performance
    is evaluated using the NS3 simulator [88] with Random Mobility Model and ITU-R
    1411 LOS propagation model. The detection rate (True Positives) and False Negatives
    were the performance metrics measured. The method detects 99.88% attacks with
    an Accuracy of 98.40%. For future works, the authors plan to integrate machine
    learning solutions with the proposed model, alongside fusing the Byzantine Agreements
    to enhance and optimize the trust model. In 2022, Pardhasaradhi et al. [89] proposed
    a method to detect and mitigate GPS Spoofing attacks in UAV Swarms using Distributed
    Radars. Multiple radars are deployed on the ground and the position, velocity,
    and time estimate of the signals from the targets are fused with GPS position
    estimate by the target in a central node. If both tracks are different, GPS Spoofing
    is detected. Then, the fused data from the radar are fed into the GPS receivers
    to mitigate the attack. Simulation experiments (simulation tool was not mentioned)
    were conducted to evaluate the performance of the system. Position Root Mean Square
    Error (PRMSE) has been used to detect the changes in the fusion node. Though the
    method does not require modifications in the existing GPS receiver infrastructure,
    it incurs high costs and computational overhead. Also, the deployment of multiple
    radars seems to be impractical. The security of the communication link between
    the radar and drones also needs to be ensured. For future works, the authors plan
    to deploy onboard radars instead of ground-based ones. Also, a fusion of IMU track,
    GPS tracking, and Radar track is to be considered. Cryptographic methods are another
    approaches to detect GPS spoofing attacks in FANETs. These techniques involve
    employing cryptographic algorithms to authenticate and/or validate GPS signals.
    However, proper key management and computational overhead can be two hindering
    factors for the widespread adoption of these methods in resource-constrained drones.
    A high-level diagram of the process in these methods is depicted in Fig. 11. The
    following paragraphs discuss various proposed solutions that leverage cryptographic
    techniques. FIGURE 11. GPS spoofing detection using cryptographic methods. Show
    All In 2019, Han et al. [90] proposed a cooperative GNSS spoofing detection system
    for FANETs based on Blockchain technology. Blockchain is deployed as a layer on
    top of the UAVs, which upload their locational information from the GPS to the
    Blockchain. This updating is performed every second and the UAVs compare the locational
    information of the neighbors obtained through their Radio Direction Finding (RDF)
    unit. If any variation is detected, a spoofing attack is suspected and an alert
    is sent over the network to other nodes including the victim. The authors have
    not conducted any experimental study and no future direction was stated. This
    work has been included in this survey since it has given an orientation into GPS
    Spoofing attacks in FANETs whereas most other papers focused only on a single
    UAV. Kara et al. [91] proposed a method to prevent/avoid GPS Spoofing attacks
    in FANETs. Their strategy aims to estimate the real position of UAV using a Leader-follower
    method. One of the UAVs in the FANET is elected as a leader using a consensus
    that is based on mission type, flight quality, etc. The leader gets its GPS position,
    which is then encrypted and sent to other drones. The follower drone decrypts
    the received message to get the leader’s position, which is also appended with
    other parameters like propagation delay to compute its true position. In order
    to ensure the reachability of the leader drone by other drones, each drone sends
    the received message from the leader to all other connected drones. The leader
    is elected for a prefixed time period and then re-elected. The concept has yet
    to be implemented and its performance to be evaluated. The battery constraints
    of the drones for encryption and decryption also need to be considered. Game-theory
    based methods are mathematical frameworks that model the interactions and decision-making
    of multiple entities in a strategic setting. The strategic movements of drones
    and attackers in this model are essential entities to be considered. A high-level
    diagram of the mechanism (or process) in these methods is illustrated in Fig.
    12. The following paragraphs discuss various proposed solutions that are based
    on Game-theory. FIGURE 12. GPS spoofing detection using game-theory based methods.
    Show All In 2017, Tao et al. [92] envisioned the vulnerability of civilian UAVs
    to spoofing. After highlighting the impracticability of encrypting the GPS signals
    in civilian UAVs (due to cost, secrecy, and scalability requirements), the authors
    proposed a strategic defense against GPS Spoofing attacks in these UAVs. The receiver
    strategically infers a new location even if the attacker tries to mislead with
    false signals. A game-theoretic solution is proposed where the strategic interactions
    between UAV and the attacker are used to detect the attack. The game tries to
    attain Perfect Bayesian Equilibrium (PBE) and it is observed that the equilibrium
    has a PLASH (Pooling in Low types And Separating in High types) structure. In
    case of a spoofing attack, the UAV infers its true position during the separating
    part and the strategic move of the UAV in the pooling portion makes it move such
    that the deviation from the true position is minimal. A continuous-kernel signaling
    game model analyzes the equilibrium of the game. Numerical experiments were conducted
    to evaluate the proposed scheme. The positions of UAVs under different scenarios
    were observed and employed as evaluation parameters. The remote spoofer captures
    the GPS signals and generates counterfeit ones for the UAV to track break and
    redirect the UAV to desired locations. In 2020, Eldosouky et al. [93] proposed
    a GPS Spoofing defense mechanism that relies on the cooperative positioning of
    UAVs in the FANET to mitigate the effect of spoofing. A FANET scenario with five
    UAVs is studied in this paper. The authors aimed to capture the strengths of the
    Stackelberg Game Equilibrium to enhance their defense strategy. The optimal routes
    followed by UAVs during normal and attack scenarios were modeled using system
    dynamics. The performance of the proposed system is compared with other two systems
    that use random and deterministic strategies. The simulation results showed that
    the proposed system outperformed the other two systems in terms of UAV capture
    probability and UAV deflections from the planned routes. The authors direct future
    research to find solutions for the problem when more than five UAVs getting targeted
    by multiple simultaneous attackers. The reliability of other UAVs needs to be
    ensured in this scheme. Machine Learning methods to defend against GPS Spoofing
    attacks in UAVs are used to analyze the GPS signals and detect any anomalies or
    deviations from the expected behavior. The system is trained to detect anomalies
    or classify them as legitimate or spoofed based on signal features. These approaches
    require diverse and realistic training datasets. A high-level diagram of the process
    in these methods is depicted in Fig. 13. The following paragraphs discuss the
    proposed solutions that employed machine learning approaches to detect GPS Spoofing
    in a UAV environment. FIGURE 13. GPS spoofing detection using machine learning
    methods. Show All Panice et al. [94] discussed that the civilian GPS system does
    not guarantee authentication, integrity, and confidentiality, thus, it is vulnerable
    to GPS Spoofing attacks. The signal power is computed in many cases to detect
    the attack, however, this might not work for UAVs due to resource constraints.
    The authors proposed employing Support Vector Machines (SVM) to detect anomalies.
    The data fused from different navigation systems are analyzed using SVM. A decision
    boundary is constructed based on the knowledge of data during normal scenarios.
    The system is trained to detect deviation in order to indicate the attack. MATLAB
    simulations were used for performance evaluations. The attacker is considered
    to be located onboard as fake GPS data are injected into the simulation and used
    the track break strategy. FPR, TPR, and Accuracy were measured as the performance
    metrics. The system is found to detect the attacks within 30s . The authors recommend
    conducting real-world experiments as a future direction for their work. However,
    the calibration of INS is done using GPS signals at the receiver. Manesh et al.
    [95] proposed a machine learning-based approach that uses artificial intelligence
    to detect GPS Spoofing attacks in UAVs. The GPS signals are classified based on
    pseudo-range, Doppler Shift, and Signal-to-Noise ratio. The authors captured real
    GPS signals to create a meaconing (repeater-based) attack. RTL-SDR V.3 RTL2832U
    was used to receive the signals. RTKLIB [96] was deployed as a GNSS library. The
    experiments and training were only on the GPS data (i.e., without using any UAV).
    The detection rates, False Positives, and False Negatives were measured as performance
    metrics. The method exhibited an Accuracy of 98.2% and a detection rate of 99.4%.
    For future work, the authors recommended to use online learning to train the network
    when new data arrives. In 2019, Xiao et al. [97] proposed a Recurrent Neural Network
    (RNN) based approach to identify behavioral anomalies in UAVs. Reliable normal
    behaviors are modeled using two scenarios and the UAVs are trained accordingly.
    The model Accuracy is enhanced by estimating the angle of arrival and Normalised
    Root Mean Square Error (NRMSE) that detects the deviation in a real position of
    the UAV and the position provided by the normal behavior models. If the NRMSE
    is greater than a prefixed threshold, abnormal behavior is detected. The experiments
    were simulated using Python and TensorFlow [98] and the Angle of Arrival is obtained
    by analyzing the real-time movement of the Dajiang Mavic Pro UAV and combining
    it with the national standards provided in the ITU-TY.IoT-UAS-Reqts [97]. The
    detection Accuracy of different RNNs in the deployed scenarios was measured and
    compared to the detection Accuracy of SVMs and Multi-Layer Perception (MLPs).
    The proposed method exhibited an Accuracy of 98.7% and a latency of 0.034s . As
    a future direction, the authors projected the need of more optimized results that
    are in line with the real-world scenarios. In 2020, Wang et al. [99] proposed
    a solution for UAVs with fixed routes like surveillance and delivery drones. The
    flight path of the UAV is predicted using the Long Short Term Memory (LSTM) algorithm,
    which relies on previous flight data. If the deviation between the predicted path
    and the GPS path exceeds a preset threshold, the path-based detection method is
    invoked. Path-based detection method uses the position estimated by integrating
    the velocity obtained from IMU. MATLAB simulations were used to evaluate the performance
    of the system using the detection latency and the detection ratio metrics. The
    proposed method showed a detection ratio of 78% and a detection latency of 3 to
    5s . Xue et al. [100] proposed a deep-learning-based approach that compares satellite
    images from Google Earth and images captured by their own UAV to detect GPS Spoofing
    attacks. The satellite images and aerial photos captured by UAV are fed into a
    deep learning model, which can be on-board or on-ground. The model compares the
    satellite and the UAV images. If a mismatch occurs, a spoofing alert is generated.
    The authors constructed a dataset, SatUAV [101], using images captured by DJI
    Phantom 4 with camera DJI FC631 and satellite images obtained from Google Earth.
    SatUAV dataset is further nourished with images obtained from the SenseFly website
    [102]. The performance of the model is evaluated using NVIDIA © Tesla® V100GPU
    (for deep learning), Raspberry Pi 3B+ and Python 3 with Pytorch [103]. Accuracy,
    precision, recall, F1-score (True Positive, False Positive, False Negative), Time
    Complexity, and Power Consumption were measured. The results exhibited a 95% success
    rate in detecting the attack within less than 100 ms. The authors suggested various
    future directions like exploring the probability of detecting the attack in featureless
    or feature-poor areas, parameter optimization or tuning for higher Accuracy, and
    overcoming challenges like detecting attacks at night and dealing with ephemeral
    objects, etc. Also, conducting more real-world experiments under various weather/air
    conditions (e.g., rain, snow, fog, haze, etc.) in more places for further evaluation.
    Fusion with other sensors like IMUs was also recommended. However, the proposed
    method relies on old images to detect the attack. Jason et al. [104] proposed
    an intrusion detection system that detect GPS Spoofing attack in UAVs. The method
    is based on one-class classifiers, which used flight logs as a training dataset.
    A comparative analysis of various one-class classifiers, namely, One-Class Support
    Vector Machine (OC-SVM), Autoencoder Neural Network, and Local Outlier Factor
    (LOF) with the proposed system has been conducted. The authors used original flight
    log data, the UAV Attack Dataset [105], as a training set. The performance of
    the experiments is evaluated using SITL simulator and Gadgets HackRF software-defined
    radio with GPS-SDR-SIM tool for creating the spoofed signal. Keysight EXG N5172B
    signal generator has been used to provide the true coordinates as a location in
    Shanghai, China. Detection rate (precision, recall, and F1-score) and Accuracy
    performance metrics were measured. The system resulted in an average F1-score
    of 94.81% for the Autoencoder classifier, 81.17% for OC-SVM, and 58.93% for the
    LOF. As a future direction, the authors plan to develop classifiers for an onboard
    IDS using other sensors. Feng et al. [106] proposed a machine learning-based method
    to train the UAV based on the GPS and IMU readings. The authors trained the UAVs
    off-board and on-board. XGBoost (XB) machine learning method is used for off-board
    training and the precision of the learning outcome is further fine-tuned using
    Genetic Algorithm (GA). Moreover, drones were trained onboard using real-time
    flight log data from the IMU and GPS receiver. The experiments were conducted
    using real-world Quadrotor drones. The spoofer is operated onboard triggering
    fake signals. The detection Accuracy and latency performance metrics were measured.
    The results show that the proposed method detects 93.3% and 100% of attacks in
    non-hijacked and hijacked cases, respectively, and the detection of the attack
    was within 1s . For future works, the authors plan to conduct experiments in other
    drones with more complex trajectories and to investigate anti-hijacking flight
    control methods to make the drones resistant to low-quality GPS signals. Dang
    et al. [107] proposed a method to detect GPS Spoofing in UAVs that leverages deep
    learning and statistical approaches. The statistical properties of path loss between
    UAV and nearby Base Station (s) are used to train the Multi-Layer Perceptron Model
    (MLP). Three statistical properties were considered (i.e., moment, quartile, and
    probability distribution difference) and three MLP-based models were designed.
    If the difference between the actual path loss (provided by the base station (s))
    and the theoretical path loss (provided by UAV, which increases with distance)
    is greater than a threshold value, a spoofing is suspected. The accurate threshold
    values and selected base stations are given by MLP. The performance of the system
    was evaluated using Python and TensorFlow library. The Spoofer operated from a
    remote location with track break spoofing. The proposed method achieved a 93%
    detection rate if the UAV is in the vicinity of three base stations and an 80%
    detection rate if in the vicinity of one UAV. The future directions are to test
    the system using ensemble machine learning models and real data. Richmond et al.
    [108] developed Deep Learning based models using UAV flight logs and telemetry
    data to detect GPS Spoofing attacks in real-time. The UAV log data for different
    models are generated and used for training. A classification-based training approach
    is adopted using two LSTM classifiers, namely, Binary Classifiers (BC) that use
    benign and spoofed data, and Autoencoder-based One-Class Classifiers (OCC) that
    use only benign data for training. Gazebo Simulator [109] was used for generating
    flight log datasets. PX4 Autopilot firmware with QGroundControl App (as GCS) was
    used to simulate UAVs. The performance and feasibility of the proposed model have
    been validated using Intel Neural Computing Stick (NCS2) [110]. The measured performance
    metrics were recall, precision, Accuracy, and F-1 score. UAV-specific and generalized
    evaluations were performed. UAV-generalized detectors are found to have a detection
    Accuracy of 97.79% using binary classifiers, whereas, 94.98% for one-class classifiers.
    The UAV-specific detectors exhibited a detection Accuracy of 99.56% using binary
    classifiers and ~ 99.24% using one-class classifiers. The authors have evaluated
    the time overhead on the UAVs and found that the average time interference for
    the LSTM-based Autoencoder OCC is 4.32 ms and 3.986 ms for the binary classifier.
    For future works, the authors plan to propose effective methods to address the
    attack after detecting it. Aissou et al. [111] compared several tree-based machine
    learning models, Random Forest (RNF), Gradient Boost (GB), XB, and LightBM (LB),
    to detect GPS Spoofing attacks. The datasets were generated from real-time GPS
    signals using a USRP device and simulated spoofed GPS signals by manipulating
    various features of authentic signals (e.g., Carrier-to-Noise Ratio, Time of the
    Week, etc.). The models were trained and tested using the dataset and the performance
    of the models was evaluated. The probability of detection and misdetection, the
    probability of false alarm, and the Accuracy were measured. XB outperformed other
    algorithms in terms of Accuracy and probability of detection with an Accuracy
    of 95.52% (i.e., compared to 95.23%, 94.07%, and 91.45% for LB, RNF, and GB, respectively).
    RNF models outperformed others in terms of the probability of misdetection and
    false alarms. XB is faster with 2 ms latency compared to RNF: 21.01 ms, GB: 6.99
    ms, and LB: 8.99 ms. XB is also less memory-consuming with 2.63 MB compared to
    RNF: 1.6 MB, GB: 3.19 MB, and LB: 2.0 MB. RNF outperformed in terms of memory
    consumption, however, it has the longest latency. From a UAS perspective, XB was
    the best algorithm. Gasimova et al. [112] conducted a comparative study of three
    Ensemble based machine learning models. Namely, Bagging (Ba.), Boosting (Bo.),
    and Stacking (St.). The datasets were generated using the same approach in [111].
    The performance of the models was evaluated in terms of Accuracy, probability
    of detection/misdetection, probability of false alarm, memory size, processing
    time, and prediction time per sample. The St. model outperformed others in terms
    of Accuracy with 95.43% (versus Ba.: 95.28%, Bo.: 94.61%), detection rate with
    99.56% (versus Ba.: 95.28%, Bo.: 94.61%), FNR with 0.36% (versus Ba.: 0.64%, Bo:
    2.95%), and FPR with 0.03% (versus Ba.: 1.07%, Bo.: 5.08%). However, the St. model
    showcased the worst performance in terms of memory consumption with 191.3 MB (versus
    Ba.: 190.4 MB, Bo.: 190.5 MB), processing time with 13.06s (versus Ba.: 0.74s
    , Bo.: 1.5s ), and prediction time with 0.24s (versus Ba.: 0.02s , Bo.: 0.01s
    ). Tala et al. [113] proposed two techniques (Metric Optimized Dynamic selector
    and Weighted Metric Optimized Dynamic selector) to select the classifier for detecting
    GPS Spoofing attacks in UAVs. The authors compared ten machine learning algorithms
    and measured their performance in terms of Accuracy, detection probability, false
    alarm probability, misdetection probability, and detection latency. Thirteen GPS
    signal features from real-time experiments were used as datasets in MATLAB [114].
    The proposed model showed an Accuracy of 99.6%, a detection probability of 98.9%,
    a false alarm probability of 1.56%, a misdetection probability of 1.09%, and a
    detection latency of 1.24s . C. GPS Spoofing as Defense in UAVs Even though the
    technological innovation brought by UAVs is crucial, their problems are also critical.
    The illegal operations of UAVs make them difficult to manage. Anti-drone services
    that aim to disrupt or incapacitate non-cooperative drone operations are discussed
    in this section. That is, when GPS Spoofing is used as a tool to eliminate the
    security threats caused by UAVs. Shijith et al. [115] proposed GPS Spoofing as
    a defense mechanism to counterfeit the GPS receiver on a drone that tries to enter
    restricted areas. The unencrypted nature of GPS signals is exploited to take over
    the drone to the desired location. The used tools are SatGen [116] simulator (as
    a GPS signal generator) and an SDR tool, USRP N210 [78], to transmit the signals.
    Specifically, to generate National Marine Electronics Association (NMEA) file
    that contains the locational information. This info is then converted to a text
    containing the coordinates of all intermediate locations. Python scripts were
    used to generate signals based on the location information. This signal is then
    transferred to the USRP N210 tool. The spoofer uses a track break technique and
    operates from a remote location, where false signals are generated and sent to
    the target. The targeted drone will be then directed to the desired location in
    the spoofed signal. The authors recommended a real-time implementation of their
    proposed system. Gasper et al. [117], [118] recommended using GPS Spoofing vulnerability
    to divert unauthorized UAVs flying over unauthorized areas. The SDR, bladeGPS
    simulator, was used to generate fake GPS signals. The bladeGPS simulator uses
    NMEA messages that store GPS-related data. This field can be manipulated to make
    false signals. That is, to make the UAV recalculates its present position and
    moves out of the restricted area. The experiments were conducted in indoor and
    outdoor environments. The impact of spoofing in Smartphones, u-blox M8 GNSS evaluation
    kit, and u-blox MAX-7Q (GPS receiver used in most UAVs) were studied. The attacker
    is considered to operate from a remote location with a track breaking technique.
    Li et al. [119] designed a miniature GPS spoofer that is based on Digital Signal
    Processing (DSP), Field-Programmable Gate Array (FPGA), and RF. Several experiments
    were conducted to spoof DJI Phantom Pro 4 using the mini spoofer and the results
    were studied. The DSP and FPGA are the core signal processing modules and the
    RF module up-converts the IF signals to resemble GPS L1 RF signals. The experimental
    results were successful in misleading the target by controlling its position and
    velocity. Also, the UAVs were made to land in the spoofed position. The authors
    claim that their spoofer can be used to control and manage low-altitude UAVs.
    They also recommended further study of the effectiveness of the spoofing strategy
    with real-time measurements from UAV target monitoring systems. Similarly, Sheng
    et al. [120] proposed a Reinforcement based Learning method to control UAVs that
    enter unauthorized areas. The authors suggested the use of GPS Spoofing as one
    example to expel the UAVs from the target estate. Daojing et al. [121] proposed
    GNSS Spoofing as a method to counter non-cooperative UAVs that enter ‘No-Fly Zone’
    areas. The UAVs that entered the restricted area need to be sensed first (using
    some techniques like RADAR) and then jammed. When they convert to auto-pilot mode,
    they are spoofed with counterfeit signals that redirect them to far locations.
    The authors recommended, as a future direction, spoofing a cluster of non-cooperative
    drones. Noh et al. [122] proposed hard spoofing techniques where the receiver
    is jammed with powerful signals for safe-hijacking the consumer drones. The proposed
    method aims to expel the drone safely from the protected area. The effect of GPS
    Spoofing and the behavior of the drones during and after the GPS failure and signal
    recovery were analyzed. Four safe-hijacking strategies have been introduced accordingly.
    Field studies were conducted using prominent consumer drones namely DJI (Phantom
    3 and 4) drones, Parrot Bebop 2, and 3DR Solo. GSG-6 GNSS simulator [123] has
    been used in the experiments to generate spoofed signals and SITL (Software-in-the-Loop)
    [124] simulator was used to evaluate the results. Hosam et al. [125] proposed
    a technique to land the unauthorized drones by transmitting manipulated GPS signals
    using RF-SDR. The technique also determines the launch location of the drones.
    The drones are forced to operate in rescue mode by the manipulated GPS signals
    and return to the launch location. The iterative guesses are made on the latitude
    and longitude of the launch locations using the current coordinate of the drone.
    As the drones return back to the launch location at a constant speed, the x and
    y components of the drone’s speed become zero when it reaches the launch location.
    Experiments were conducted using HackRF SDR to launch spoofed GPS signals into
    Audrino chipset with GPS. Future works aims to minimize the number of guesses
    and evaluate the proposed algorithm on real drones. D. GPS Spoofing Impact and
    Vulnerability Vishal et al. [59] discussed the security vulnerabilities of drones
    such as the GPS Spoofing vulnerability of the DJI Phantom 4 Pro (P4P) drone. Afterwards,
    the architecture details of DJI P4P drones and the experimental studies (i.e.,
    cracking the DJI SDK, reverse-engineering the firmware, and launching GPS Spoofing
    attacks) were discussed. The attacks were conducted using LabSat3 [126] GPS simulator.
    The u-blox NEO 8M GPS receiver of the DJI P4P defends jam-then-spoof attacks.
    However, the experiments were conducted using weak GPS signals. The active antenna
    RLACS198 of the LabSat Kit records the original GPS signals and the SatGen software
    was used to generate fake signals. Mendes et al. [60] studied the impact of GPS
    Spoofing attacks on Quadcopters. The authors observed that increasing the duration
    of tampering will also increase the deviation. However, after short time, the
    UAV does not show any deviation. The spoofer system is a hardware injection system
    in which the ArduCopter flight controller (used for processing and calculations
    purposes) is instrumented with a GPS Spoofing module. This module triggers the
    attack by tampering GPS signal after 45s of the starting time. The spoofer was
    onboard and used the track break technique. The experiments used SITL [124] simulator
    that simulates Quadcopter behavior (i.e., using a Navio2 control board developed
    by Emlid and Raspberry Pi with Raspbian OS). The deviation in UAVs’ positions
    with respect to time was taken as a performance metric. As a future direction,
    the authors plan to conduct real-world experiments with Quadcopter. SECTION VI.
    Results, Discussions, and Research Gaps In this section, our observations, in
    terms of attacker models, defense mechanisms, performance measures, datasets,
    various research gaps, and open issues are discussed. This section aims to address
    RQ2, RQ3, RQ4, RQ5, and RQ8 (raised in Section III-A). A. Attacker Models The
    study conducted in this paper has observed in Section V that the attacker uses
    different attacking strategies and tools that operate from different locations
    to conduct GPS Spoofing attacks. These attacker models are analyzed in this section,
    addressing RQ2 of Section III-A. Table 12 in the Appendix shows a detailed analysis
    of the attacker model used in the articles studied in this survey. It is found
    that the majority (75%) of spoofers operate from remote locations in the existing
    literature and adopted track break spoofing techniques. The spoofer system includes
    GPS simulators, repeater-based systems, and hardware injection methods. A percentage-wise
    analysis of the spoofer systems used in the proposed works is depicted in Fig.
    14. It can be seen that the majority of the works (62%) relied on GPS simulators
    to generate spoofed signals. The low-cost and easy availability of the SDRs can
    be the main reason for this reliance. The repeaters, which capture the real signals,
    manipulate them, and then re-transmit them to the GPS receivers, are used by 23%
    of the works. Rest 15% used hardware injection systems, in which the spoofer device
    is embedded or installed on the GPS receiver. FIGURE 14. Comparative analysis
    of spoofer systems. Show All The GPS simulator-based systems rely mostly on open-source
    GPS simulators like GPS-SDR-SIM [54] to generate fake GPS signals. These signals
    are converted to RF signals with the help of SDRs like HackRF, BladeRF, USRP,
    etc. A percentage-wise analysis of various spoofing tools used in the proposed
    works to spoof GPS signals is shown in Fig. 15. As is clear, BladeRF and HackRF
    were relied on by the majority (31% each) of the works. USRP tools, namely, Ettus
    USRP (19%) and SatGen USRP (7%) were used by some (26%) of the works. Other tools
    used are LabSat3 and GSC-6 GNSS (both by 6%). FIGURE 15. Comparative analysis
    of spoofing tools in simulators. Show All To the best of our knowledge, and based
    on the covered articles, various research gaps exist related to attacker models,
    which are listed below: Other than mentioning the tools used for conducting the
    attack, most of the works failed to consider other attack parameters like the
    minimum distance from which the spoofer operates, the number of drones that can
    be victimized by a single malicious node, and the number of malicious nodes required
    to spoof the entire swarm area. These parameters can have a crucial impact on
    determining the attacker’s capability. The distance from which the spoofer operates
    can affect the number of drones being spoofed. Even though the attacker might
    be targeting to spoof the GPS location information of one drone, other drones
    in its vicinity might also get locked into these spoofed signals. This will affect
    the FANET system itself, which relies on the locational information that gets
    exchanged among the drones. Moreover, any detection system that relies on the
    locational information shared by other drones will also get deceived by the wrong
    locational information provided by neighboring drones, which are also victims
    of the spoofing attack. For example, the solutions proposed in [71] and [87] leverage
    the GPS locational information shared by the neighboring drones. So, if these
    neighboring drones also fall in the spoofed area, the detection system fails.
    Thus, the effect of spoofer-to-target distance on successful GPS Spoofing attack
    instigation needs to be investigated. The possibility that the entire swarm area
    to be spoofed and the minimum number of malicious nodes required for such spoofing
    also needs to be investigated. It is anticipated that defensive mechanisms might
    fail in such scenarios. We recommend that future research works should assess
    these factors also so that a robust defense mechanism can be designed. A comparative
    evaluation of various tools in Fig. 15 can also be conducted. To the best of our
    knowledge, these tools are used to launch the spoofing attack in single UAV scenarios.
    None of the existing works performed an attack on FANET with these tools. So,
    the effectiveness of these tools in launching attacks in the FANET scenario needs
    to be investigated and analyzed in order to understand the attackers capabilities;
    hence, the effectiveness of the proposed detection or defense solutions can be
    accurately evaluated. The power capabilities of the attacker have not been much
    discussed in the covered articles. As per the authors in [87], the spoofer tries
    to adjust its transmission power such that targets that are at a distance ‘D’
    from the spoofer will receive a signal of power −154 dBW. If the power received
    at the target is lesser than −157 dBW, the detection systems detect the presence
    of an attack. More studies need to be conducted in this direction considering
    the different power capabilities of the attacker and their impacts on the effectiveness
    of the proposed detection or defense mechanisms. None of the papers covered in
    this study has investigated the number and type of tools that can be used to simultaneously
    launch the attack. Future studies should thus investigate the number of tools
    that might be required to spoof the FANET. The impact of the collaboration of
    multiple attackers that are equipped with different tools (like HackRF and BladeRF)
    to launch the attacks from various locations also needs to be studied. B. Objective(S)
    and Taxonomy of Proposed Mechanisms The study conducted in this paper has observed
    (as shown in Fig. 7 and detailed in Section V) that the proposed mechanisms can
    be classified into four main categories based on their objectives. Specifically,
    GPS Spoofing Attack Mechanisms, GPS Spoofing Defense Mechanisms, GPS Spoofing
    as-Defense Mechanisms, and GPS Spoofing Impact and vulnerability. Fig. 16 shows
    the statistical analysis of technical papers considered in this study. It can
    be seen that, out of 56 technical papers selected after various filtering, 37
    papers addressed the detection, mitigation, and/or prevention of GPS Spoofing
    attacks in UAVs. Nine papers demonstrated how to instigate GPS Spoofing attacks
    in UAVs, eight papers proposed to use GPS Spoofing as a defense mechanism to deter
    malicious UAVs, and only two papers discussed the impacts and vulnerabilities
    of GPS Spoofing attacks in UAVs. FIGURE 16. GPS spoofing paper categories. Show
    All RQ3 in Section III-A is addressed by providing a taxonomy based on the approaches
    proposed to detect, mitigate and/or prevent GPS Spoofing attacks in UAVs. Following
    the basis or the technique leveraged to defend against GPS Spoofing attacks, the
    methodologies were categorized into onboard devices or sensors, signal processing,
    cryptographic, game theory, and machine learning mechanisms. A comparative analysis
    of the number of articles under various GPS Spoofing defense mechanisms is illustrated
    in Fig. 17. A major observation in Fig. 17 is the number of papers that aimed
    to prevent or mitigate the attack is lesser when compared to the total number
    of papers. Most of the papers aimed at the detection of the attack. Another observation
    is that 14 approaches leverage machine learning techniques and another 14 approaches
    leverage the onboard devices for the detection of GPS Spoofing attacks in UAVs.
    Signal processing approaches have been applied by five detection as well as mitigation
    approaches. Game theoretic solutions were proposed in three works to detect the
    attack and one work used it for mitigation. One approach used a cryptographic
    mechanism to detect and prevent the attack. A percentage-wise analysis of the
    articles according to their defense mechanisms is depicted in Fig. 18. Onboard
    devices and machine learning approaches have been adopted by 38% of the approaches,
    signal processing by 13%, and game theory by 8%. Cryptographic approaches were
    adopted by just 3% of the works. It is later seen that the approaches using cryptography
    were not implemented or not conceptually proved. FIGURE 17. Number of papers based
    on attack defense mechanism’s basis. Show All FIGURE 18. Percentage wise analysis
    of based on basis of defense. Show All A percentage-wise analysis of the type
    of publication is shown in Fig. 19. Out of the 70 articles (14 state-of-the-art
    papers and 56 technical papers) considered in this survey, 40% of the articles
    were conference papers, 46% were articles published in journals, and 14% were
    published in magazines or book chapters. This is an indication that the research
    works on GPS Spoofing attacks in UAVs are still maturing. FIGURE 19. Comparative
    analysis of publication types. Show All The number of papers that considered a
    FANET scenario, where multiple UAVs interact is also analyzed. Fig. 20 depicts
    that out of the 28 publications in conference proceedings, only three were addressing
    the GPS Spoofing attack problem in the FANET scenario. Also, among the 32 journal
    articles, only five dealt with FANET cases. None of the ten papers published in
    magazine/book chapters was on the FANET scenario. This again indicated that the
    area of research on GPS Spoofing attacks in FANET has obtained very little attention
    so far from the research community. FIGURE 20. Papers on FANET scenario. Show
    All To the best of our knowledge, and based on the covered articles, various research
    gaps exist related to the objectives of the proposed mechanisms, which are listed
    below: From Fig. 16, it is noticed that only two articles [59] and [60], have
    studied the vulnerability and impact of GPS Spoofing attacks in UAVs. Future research
    should analyze the vulnerability of various types of drones to GPS Spoofing attacks.
    The existing study was conducted for a particular type of drone only (i.e., DJI
    Phantom 4 Pro). The impact of GPS Spoofing attacks on FANETs with regard to different
    attack parameters such as the attack duration, and attack frequency should also
    be studied. Further to this, various position-based routing protocols such as
    Reactive-Greedy-Reactive protocol (RGR) [127] and Ad-Hoc Routing Protocol for
    Aeronautical MANETs (ARPAM) [128] rely on the knowledge of geographical positions
    that drones obtain through their GPS sensors. The geographical positions are leveraged
    in the data delivery to get the destination’s location as well in cases of network
    disconnections to avoid network partitioning. The geographic positions of UAVs
    in the network are also exploited to select the shortest path between the source
    UAV and the destination UAV. Hence, when this locational information is manipulated,
    the packet delivery rate and routing capabilities are severely affected. Thus,
    it is recommended to conduct simulation experiments or proof-of-concept implementations
    to investigate the impacts of GPS Spoofing attacks on these protocols. Future
    research works should try to propose defense mechanisms that can not only detect,
    but mitigate, and prevent the attack. It is recommended that more research work
    might be conducted to investigate the effectiveness of: Machine Learning-based
    or onboard devices-based defense mechanisms to mitigate or prevent the attacks
    as well rather than to detect the attack. Game-theoretic approaches as well as
    Cryptographic-based approaches in dealing with GPS Spoofing attacks. Hybrid-based
    approaches, which combine (i.e., employ) two or more of the above approaches together
    in dealing with GPS Spoofing attacks. For instance, signal processing approaches
    when combined with the onboard devices to defend against the attack since leveraging
    these methods don’t require any infrastructural modification and hence can be
    cost-effective. Less than 50% of papers were published in journals, indicating
    the immature state-of-the-art of GPS Spoofing research works in FANETs, more research
    needs to be conducted and papers to be published in reputed journals. As per this
    study, out of the 46% journal papers covered, only five articles were on FANETs.
    C. Performance Evaluation Methods In this section, various performance evaluation
    methods (i.e, simulation experiments and proof-of-concept implementations) of
    the papers covered in this study are analyzed, answering RQ4, which was formulated
    in Section III-A. Fig. 21 illustrates the analysis of the number of papers evaluated
    using proof-of-concept implementation. DJI Matrice 100, DJI Phantom Pro, 3DR Solo,
    PX4 Autopilot (Flight Controller), and Holybro S 500 are the major drones used
    in articles considered in this study to evaluate various experiments in a single
    UAV scenario. However, most of these drones are no longer in production as newer
    versions were released recently. For instance, DJI Matrice 100 and Phantom 4 Pro
    drones are no longer in production nowadays and are replaced by DJI Matrice 300
    [129] and DJI Phantom 4 Pro V2.0 [130] drones, respectively. The 3DR Solo has
    been discontinued and is replaced with Aurelia X4 Standard, which is an improved
    quadcopter drone [131]. Moreover, none of the papers that addressed GPS Spoofing
    attacks in FANETs have provided a proof-of-concept implementation. Hence, the
    upgraded drones that are presently available in the market, which are able to
    communicate with each other by forming an Ad-Hoc network, need to be considered
    and involved by future research. A list of the upgraded drones and their communication
    capabilities is shown in Table 9. FIGURE 21. Papers evaluated using proof-of-concept
    implementation. Show All Some of the studied articles conducted simulation experiments.
    All the simulators that were used in the studied articles in this survey are analyzed
    in Fig. 22. Specifically, MATLAB [114], STIL (Software in The Loop) [124], RESCHU-SA
    [69], RTKLIB [96], Monte Carlo [72], Python, TensorFlow [98], Gazebo [109], NS3
    [88], and OMNeT++ [80] were used by the articles for performance evaluations.
    Some articles used numerical simulations and some others, categorized under ‘Others’
    in Fig. 22, have not stated the names of simulators used for performance evaluations.
    It is observed that most of the machine learning-based schemes were evaluated
    using MATLAB [114] followed by TensorFlow [98], as both tools support various
    built-in machine learning libraries. Other simulators are used by one or a maximum
    of two experiments. Another observation is that the cryptography-based schemes
    were not evaluated even using the simulation experiments. Furthermore, Monte Carlo
    [72], NS3, OMNeT++ [80], and MATLAB [114] were used in experiments involving FANETs.
    FIGURE 22. Papers evaluated using simulation experiments. Show All The mobility
    and propagation models of UAVs were neglected in most of the simulation experiments.
    A few articles have mentioned the random mobility model in the experimental details.
    This includes experiments conducted using OMNeT++ [80] and NS3 [88] simulators.
    One article that used NS3 [88] has mentioned the propagation model as ITU-R 1411
    LOS (Line-of-sight). Thus, it is recommended to use either OMNeT++ [80] or NS3
    [88] for future evaluations so that the mobility and propagation models can be
    easily employed and included in the evaluation. Also, this is an indication that
    RQ6 and RQ7 (Section III-A) have not been well addressed in the existing literature.
    Furthermore, since FANETs move in 3-D space, the mobility models that can simulate
    the 3-D movement of UAVs such as the Gauss Markov Model [136] can be used in future
    experiments. That is, the efficiency of the proposed approaches in terms of power
    requirements and/or storage and communication overhead when employing these mobility
    models must be considered. A few methods have used some real and synthetic datasets
    in the experiments. Specifically, SatUAV [137], the senseFly drone dataset [102],
    UAV attack dataset (IEEE Dataports) [105], SatGrid [86], and OpenSky Network [82].
    SatUAV Dataset is a synthetic dataset generated using a collection of images captured
    by a DJI Phantom 4 drone (with camera DJI FC631 and pixel resolution of 5472×3078
    ), which includes 967 SatUAV image pairs combined with the SenseFly dataset. SenseFly
    website has 362 photos available on the Internet [102] taken by eBee drones (with
    a camera resolution of 4608×3456 and 5472×3648 pixel resolution). It includes
    160 photos (using a Canon IXUS125HS camera) of the Swiss village of Merlischachen
    at a flight height of 162 m (531.4 ft), 40 photos (using a Parrot Sequoia camera)
    outskirts of Renens, a municipality in Switzerland at a flight height of 100 m
    (328.1 ft), 113 images (using SenseFly S.O.D.A. camera) of Lausanne, Switzerland
    at a height of 100 m (328.1 ft), and 49 images (using Canon IXUS 125 HS) of Paris
    Le Bourget Airport at the height of 120 m (393.7 ft). UAV attack dataset (IEEE
    Dataports) [105] are flight log files saved by autopilot in ULog format having
    header (the file magic number, log version, and timestamp), definition (logged
    attributes and values), and data sections (contains informational, debug warning,
    and emergency information sent from the autopilot to the GCS) as the contents.
    It contains flight logs during both benign (i.e., normal) and attack (i.e., spoofed)
    scenarios. SatGrid dataset [86] includes SatGrid: G22 (Genuine GPS dataset) and
    SatGrid: S7 (spoofed dataset). These are real-time traces of GPS signals collected
    from different geo-locations, time, and environmental conditions. OpenSky [82]
    provides an Air Traffic Surveillance (ATS) dataset collected with the help of
    over 3000 sensors around the world. Table 10 presents a brief overview of these
    datasets. To the best of our knowledge, and based on the covered articles, various
    research gaps exist in terms of performance evaluation methods, which are listed
    below: Some articles covered in this study have not clarified the method used
    for their performance evaluation experiments, which we stated as ‘Others’ in Fig.
    21 and 22. Future research works should clearly mention the names of drones and
    GPS simulators used in proof-of-concept evaluations. Furthermore, the simulator,
    the mobility model, and the propagation model used in various simulation experiments.
    Simulated experiments generally don’t reflect real-world scenarios. For example,
    environmental factors like wind, light, and fog have a crucial impact on the movement
    and performance of drones, might not be addressed by simulators. However, the
    majority of the experiments in the covered articles in this survey are evaluated
    using simulated experiments. Thus, we recommend that future research works rely
    on real-world experiments or proof-of-concept implementations. D. Performance
    Metrics In this section, various metrics that were used in the performance evaluation
    experiments, discussed in Section VI-C, are analyzed to answer RQ5 (raised in
    Section III-A). Specifically, FPR, TPR, FNR, Detection Latency (Delay), Position
    Drift, Precision, F1-Score, Accuracy, RMSE, UAV Capture Probability, Power Consumption,
    and Memory Overhead. Fig. 23 illustrates the number of articles that used these
    metrics in their evaluations. As shown in this figure, TPR, Accuracy, Detection
    Latency, and FPR are most commonly used in the articles covered in this study.
    To the best of our knowledge, and based on the covered articles, various research
    gaps exist in terms of performance metrics, which are listed below: The FPR, which
    is a major factor that hinders the service delivery to legitimate users of any
    system, has not been extensively evaluated in the existing works. Indeed, the
    detection of the attack is the major goal of the proposed approaches, however,
    higher false alarms can unintentionally lead to Denial-of-Service attack as it
    might prohibit legitimate drones or disable their services. Detection time (latency)
    was not evaluated in some articles that were covered in this study. Also, the
    articles that reported the detection latency haven’t studied the impact of varying
    different attack parameters on it such as the number of victim drones and the
    number of malicious nodes that launch the attack (discussed in Section VI-A).
    The detection latency is a crucial measure that reflects the time taken by the
    proposed algorithms to detect the attack after it is launched by the malicious
    attackers. This metric must be evaluated by future research works as longer detection
    time might cause the UAVs to be hijacked or collide and as a result causes a mission
    failure (i.e., long detection time allows the malicious attackers to cause more
    damage into the system before the detection approach issue warnings/alarms). Only
    few articles of the existing works evaluated the power/energy consumption and
    memory of the proposed algorithms. Since drones are devices with constraints on
    the resources such as low battery power, less memory storage, and limited processing
    capabilities, these resource constraints factors should be considered when designing
    the defensive schemes. Other metrics such as the victim-to-attacker ratio (i.e.,
    the number of drones that can be spoofed by malicious drones), communication overhead
    (i.e., the number and size of messages that are used by the proposed approaches),
    Big O notation (i.e., that represents the worst-case complexity of the proposed
    algorithms) also need to be considered and evaluated by future research works.
    FIGURE 23. Papers evaluated using performance metrics. Show All E. Comparative
    Analysis A detailed comparative analysis of the articles covered in this study
    that proposed solutions to defend against GPS Spoofing attacks in UAV environments
    is depicted in Table 14 in the Appendix. The performance evaluations of the proposed
    systems were compared in terms of the performance metrics used by the majority
    of the articles, which were also observed to be crucial in determining the performance
    of any detection mechanism. Specifically, TPR, FPR, Accuracy, and Latency. The
    prerequisites of the aforementioned articles were also analyzed in terms of any
    additional requirements on hardware devices or sensors, storage, battery, and
    any other specific requirements such as datasets, as shown in Table 14. It can
    be seen that the defensive approaches that are based on Machine Learning algorithms
    outperformed other detection mechanisms in terms of their performance. However,
    it is well known that Machine Learning algorithms require a high amount of computation
    and processing power, which in turn demands battery and storage. Apart from these,
    the requirement for a sufficient amount of diverse and realistic training datasets
    also hinders the acceptance of machine learning algorithms in securing resource-constrained
    drone networks. Signal processing-based methods such as [87] and [83] exhibited
    detection rates of 99.98% and 95% followed by methods that leverage onboard sensors
    [71], which exhibited 98.6% [67], [70]. In terms of Accuracy, signal processing-based
    methods [85], [87] also show relatively high results of 98.4% and 96.2%, respectively.
    The methods that rely on onboard sensors such as [66] and [76] showcased greater
    Accuracy of 97% and 90%, respectively. The methods that rely on signal processing
    and onboard sensors were efficient in terms of detection time (latency) as well,
    which was less than two seconds in [81]. However, the main problems with methods
    that used onboard cameras are the additional storage, battery, and weight requirements.
    Furthermore, these methods require favorable atmospheric conditions such as ambient
    light, fog, wind, and rain free environments. The main limitation of the signal
    processing method, which we suggest to be evaluated and mitigated in future works,
    is the communication overhead with the ground (GCS, Radars, etc.) [81]. TABLE
    14 Comparative Analysis of Performance Evaluations & Additional Requirements for
    Proposed Solutions. (NA: Not Available) F. Summary To summarize, the following
    were the research gaps identified as a result of this study: The minimum spoofer-to-target
    distance, the count of victims as well as the number of malicious nodes that are
    required to launch the attack were not well addressed in the existing works. These
    parameters should be taken into account when designing future research solutions.
    Defense approaches to mitigate and prevent GPS Spoofing attacks in FANETs needs
    more attention. So far, the approaches to detect the attacks have been the main
    focus and proposed most. From Fig. 17, it can be observed that machine learning
    and onboard devices were mostly relied on by the existing approaches to address
    the problem of GPS Spoofing attacks in UAVs, which is then followed by signal
    processing approaches. Since the machine-learning approaches impose high computational
    overhead on drones, they are not desirable for real-time applications; where FANET
    cannot invest considerable resources for complex computations due to its limited
    computational power and battery constraints. Thus, it is recommended that future
    research should focus on onboard devices and signal processing approaches to address
    the problem of GPS Spoofing attacks in FANETs without imposing any additional
    overhead. Leveraging onboard devices is promising as it does not require any infrastructural
    changes in the drones. Researchers should consider publishing more comprehensive
    and thorough articles in reputed journals, that address the threat of GPS Spoofing
    in FANETs. From Fig. 20, it is evident that the research works, which considered
    a FANET environment where multiple UAVs collaborate and exchange information,
    is not well addressed. Thus, future research works should focus on addressing
    GPS Spoofing attacks in the FANET environment by leveraging the unique characteristics
    of FANET such as high mobility, limited battery life, frequent topology change,
    and the information exchanged among the drones. The latest drones that are capable
    of forming Ad-Hoc wireless networks (the list is shown in Table 9) need to be
    investigated to conduct proof-of-concept implementation of future solutions. Existing
    literature lacks such works that used proof-of-concept evaluation in the FANET
    scenario. The defense mechanisms against GPS Spoofing attacks on single drones
    only are evaluated using proof-of-concept implementation. Some articles have conducted
    simulation experiments, however, their simulation experimental setup don’t reflect
    the real-world environment where the drones operate. The names and specs of the
    drones and/or simulators used in the proof-of-concept implementation or simulation
    experiments should be clearly identified and justified. The mobility models and
    communication propagation models that are followed or used by drones are not well
    considered in the proposed solutions. The simulation platforms that can employ
    the mobility and propagation models of drones in FANETs need to be investigated.
    From Fig. 23, TPR, FPR, detection latency, and Accuracy are most widely used in
    the experiments of the proposed solutions. Apart from these, considering the unique
    characteristics of FANET, future works should report as many metrics as possible.
    For example, the ratio of the number of victimized UAVs to the total number of
    UAVs can be one metric to be considered. SECTION VII. Conclusion In this paper,
    a systematic literature survey of the articles that addressed GPS Spoofing attacks
    in FANETs has been conducted. This survey aims to enhance the understanding of
    the existing works and propose future scopes in securing FANETs against GPS Spoofing
    attacks. The GPS Spoofing attacks in FANETs have been viewed from four perspectives,
    namely, GPS Spoofing techniques, GPS Spoofing defense mechanisms, GPS Spoofing
    as-defense mechanisms, and GPS Spoofing Impact and Vulnerability. A taxonomy of
    the mechanisms that addressed the threat of GPS Spoofing attacks in the existing
    literature has been portrayed. Based on the adopted survey methodology, eight
    research questions were formulated. Moreover, 37 research articles on detection,
    mitigation, and prevention of GPS Spoofing attacks in UAVs that were published
    between 2017 and 2022 were extracted for deep investigation. Specifically, in
    terms of the basis of the defense approach, the attacker models, and the performance
    evaluation mechanisms and metrics. The research gaps in the proposed methods were
    identified and future directions for the researchers have been recommended. For
    future works, we aim to address some of the research gap(s) identified in this
    study and propose robust solutions to defend against the threat of GPS Spoofing
    attacks in FANETs. Appendix: Detailed Tables for Articles See Tables 11–14. Authors
    Figures References Citations Keywords Metrics More Like This Performance of Real-Time
    Kinematic Global Positioning System and Automatic Level Surveying for Height Determination
    - A Comparison 2009 International Conference on Signal Acquisition and Processing
    Published: 2009 Miniature Interferometer Terminals for Earth Surveying: Ambiguity
    And Multipath with Global Positioning System IEEE Transactions on Geoscience and
    Remote Sensing Published: 1981 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  pdf_link: https://ieeexplore.ieee.org/ielx7/6287639/10005208/10139317.pdf
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'GPS Spoofing Attacks in FANETs: A Systematic Literature Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.3389/fcteg.2022.982463
  analysis: '>'
  authors:
  - Lina Owino
  - Dirk Söffker
  citation_count: 1
  full_citation: '>'
  full_text: '>

    How much is enough in watering

    plants? State-of-the-art in

    irrigation control: Advances,

    challenges, and opportunities

    with respect to precision

    irrigation

    Lina Owino* and Dirk Söffker

    Chair of Dynamics and Control, Faculty of Engineering, University of Duisburg-Essen,
    Duisburg,

    Germany

    With a rapidly expanding global population placing an ever growing demand on

    freshwater resources, an increased focus on irrigation techniques tailored to
    the

    speciﬁc needs of plant appears as one solution to minimize overall freshwater

    consumption. Precision irrigation methods seek to realize an acceptable

    compromise

    between

    yield

    and

    irrigation

    water consumption

    through

    control of the timing and quantity of water supplied to plants. The goal is to

    maintain the water content of the soil, achieve speciﬁc water use efﬁciency with

    regard to yield or maintain the physiological response of the plant to water

    stress within predetermined limits. Reliance on soil moisture measurements to

    establish irrigation water demand inadequately addresses heterogenous

    distribution of water in soil. Growing research interest is observed detailing

    the determination of plant water status directly from physiological responses.

    This paper reviews irrigation control approaches based on different plant water

    status assessment techniques. A distinct focus is made on application scale of

    the discussed control approaches, an aspect that has not been considered

    intensively enough in previous discussions of irrigation control approaches. A

    discussion of the observed strengths and shortcomings and technological

    advances supporting the various methods used to quantify plant water status

    extends the review. Emerging trends that are likely to have an impact on plant

    water status determination and optimal timing and quantiﬁcation of irrigation

    water requirements are integrated to show latest results. A peek into the future

    of precision irrigation foresees greater reliance on plant-based signals, both
    in

    characterization of the control variable, namely the plant water status, and in

    generation of controller outputs in terms of quantity and timing.

    KEYWORDS

    precision irrigation, irrigation control, deﬁcit irrigation, water status, irrigation

    management, industry 4.0

    OPEN ACCESS

    EDITED BY

    Fotis Nicholas Koumboulis,

    National and Kapodistrian University of

    Athens, Greece

    REVIEWED BY

    Nikolaos Kouvakas,

    National and Kapodistrian University of

    Athens, Greece

    Georgios Chamilothoris,

    Eindhoven University of Technology,

    Netherlands

    *CORRESPONDENCE

    Lina Owino,

    lina.owino@uni-due.de

    SPECIALTY SECTION

    This article was submitted to Control

    and Automation Systems,

    a section of the journal

    Frontiers in Control Engineering

    RECEIVED 30 June 2022

    ACCEPTED 08 August 2022

    PUBLISHED 02 September 2022

    CITATION

    Owino L and Söffker D (2022), How

    much is enough in watering plants?

    State-of-the-art in irrigation control:

    Advances, challenges, and opportunities

    with respect to precision irrigation.

    Front. Control. Eng. 3:982463.

    doi: 10.3389/fcteg.2022.982463

    COPYRIGHT

    © 2022 Owino and Söffker. This is an

    open-access article distributed under

    the terms of the Creative Commons

    Attribution License (CC BY). The use,

    distribution or reproduction in other

    forums is permitted, provided the

    original author(s) and the copyright

    owner(s) are credited and that the

    original publication in this journal is

    cited, in accordance with accepted

    academic practice. No use, distribution

    or reproduction is permitted which does

    not comply with these terms.

    Frontiers in Control Engineering

    frontiersin.org

    01

    TYPE Review

    PUBLISHED 02 September 2022

    DOI 10.3389/fcteg.2022.982463

    1 Introduction

    As the world advances further into the 21st century, a rapidly

    growing global population continues to exert greater demand on

    agricultural food production (van Dijk et al., 2021). The effects of

    climate change provide an additional challenge to traditional

    rain- and reservoir-based crop production, making the case for

    use of irrigation either exclusively throughout the growing

    season, or as a supplement to natural precipitation (Wada

    et al., 2013; Rosa et al., 2020). Maintaining crop yields from

    the available land area, using a diminishing quantity of the

    required freshwater for irrigation is a delicate balancing act

    that has acted as a motivation for extensive research in

    precision irrigation approaches, with the overall goal of

    maximizing water use efﬁciency of irrigated crops, while

    simultaneously meeting the rising global food demand.

    While water treatment and desalination provide alternatives

    to cover the freshwater need, existing techniques are costly and

    energy intensive, particularly at low to medium scale (Arborea

    et al., 2017; Hagenvoort et al., 2019; Arena et al., 2020;

    Oubelkacem et al., 2020; Ofori et al., 2021). Concerns about

    the safety of treated wastewater, even with application of

    advanced treatment methods, have resulted in a call to more

    rigorous regulation and combination of treatment processes

    (Rizzo et al., 2020). Freshwater generation via atmospheric

    water harvesting (Tu et al., 2018; Lu et al., 2022) offers a

    novel, but energy intensive alternative which is currently

    limited to smaller production units (LaPotin et al., 2021). As a

    conclusion optimization of crop irrigation appears to be the most

    suitable solution to achieve a sustainable compromise between

    increasing freshwater demand for food production and the

    associated energy and environmental costs to realize adequate

    global food supply.

    In the history of mankind, adequate food production has

    been a fundamental requirement in the growth and advancement

    of human society. As early as 5000 BC, early agricultural

    civilizations in Egypt and Mesopotamia had come upon the

    idea of expanding the extent of arable land through use of

    irrigation, making use of the ﬂoodwaters of the Nile, Tigris,

    and Euphrates which was diverted into arable farmlands

    bordering the rivers through an extensive network of canals

    (Bazza, 2007). Through the use of intricate systems of canals,

    with later additions of reservoirs, dikes, and overﬂow canals,

    ﬂooding could be mitigated (Grenfell et al., 1900; Westermann,

    1919). Similar implementation of surface irrigation was also

    recorded in ancient China, Crete, India, and Persia (Biswas,

    1970). Irrigation control in this case was focused on direction

    of irrigation water to speciﬁc locations, regulation of irrigation

    duration and mitigation of ﬂooding. Surface irrigation methods

    involving use of ﬂooded basins, furrows, dykes, dams, and

    artiﬁcial reservoirs remain the predominant form of irrigation

    to date (Jägermeyr et al., 2015). Control methods aimed at more

    efﬁcient use of irrigation water have been targeted at regulating

    the timing, duration, and frequency of supply to the ﬁelds

    through control of gates, sluices, valves, and pumps.

    Introduction of new methods of water application to

    plants in the ﬁeld, namely through sprinklers and drip

    lines, provided new opportunities for more accurate control

    of irrigation water supply, allowing the regulation of water

    supply down to the individual plant level. These developments

    on the actuation side of irrigation have been accompanied by

    corresponding

    developments

    in

    sensing

    and

    control

    approaches.

    The incorporation of spatial variability in the management of

    irrigation is a key concept in distinguishing between traditional

    irrigation and precision irrigation (Sadler et al., 2005; Smith and

    Baillie, 2009). In Smith et al. (Smith et al., 2010), a distinction is

    made between traditional deﬁnitions of precision irrigation,

    which

    focus

    on

    maximizing

    efﬁciency

    through

    precise

    determination of volume, location and timing of irrigation,

    with uniform application over the entire system, and an

    updated deﬁnition that incorporates spatial and temporal

    variation in irrigation treatment. The focus is shifted from

    ﬁeld level to management zones within the ﬁeld (Gonzalez-

    Dugo et al., 2014; Fernández, 2017), or to individual plant

    level (Kizer et al., 2018; Klein et al., 2018). Camp et al.

    describe

    precision

    irrigation

    as

    “site-speciﬁc

    water

    management, speciﬁcally the application of water to a given

    site in a volume and at a time needed for optimum crop

    production, proﬁtability, or other management objectives at

    that speciﬁc site” (Camp et al., 2006). In this review, the

    supporting technologies are considered with regard to their

    ﬂexibility in allowing variable precision irrigation of individual

    plants or zones, rather than achieving efﬁciency through

    generation of uniform irrigation schedules.

    Traditional deﬁnitions of precision irrigation consider the

    “precise amount” of water to be applied to be the full amount of

    water required to meet the plant demand, which has commonly

    been determined based on the relationship between crop

    evapotranspiration and environmental factors (Morillo et al.,

    2015; Morales et al., 2016). Current irrigation practices that

    explore the cultivation of irrigated crops under regulated

    water deﬁcit provide a new Frontier for precision irrigation,

    where the required amount to be delivered is determined with a

    goal of avoiding irreversible water stress damage, without

    necessarily

    fully

    matching

    evapotranspiration-based

    plant

    demands. This provides further avenues for improvement of

    water use efﬁciency. Deﬁcit irrigation-based applications of

    precision irrigation approaches have been employed in control

    of both pre- and post-harvest yield quality (Pérez-Pastor et al.,

    2007; Lipan et al., 2019; Venturi et al., 2021). The observed effect

    of deﬁcit irrigation approaches on crop maturation (Zegbe-

    Domínguez et al., 2003; Cui et al., 2008) is an additional

    research target, with the possibility to enhance economic

    outcomes for the farmer by matching harvest timing to

    periods of greatest market demand. In this review, precision

    Frontiers in Control Engineering

    frontiersin.org

    02

    Owino and Söffker

    10.3389/fcteg.2022.982463

    irrigation control approaches incorporating regulated water

    deﬁcit are emphasized.

    Previous

    contributions

    in

    the

    review

    of

    precision

    irrigation

    approaches

    have

    addressed

    model-based

    and

    sensor-based monitoring (Adeyemi et al., 2017; Liang et al.,

    2020; Plaščak et al., 2021; Bwambale et al., 2022), speciﬁc

    control algorithms applied in irrigation scheduling (Romero

    et al., 2012; Abioye et al., 2022), and technological advances

    supporting future development in precision irrigation control

    (Neupane and Guo, 2019; Bodkhe et al., 2020; Han et al.,

    2020).

    This

    review

    similarly

    provide

    a

    comprehensive

    summary of monitoring, control, and actuation approaches

    applied in precision irrigation control. Additionally, the

    implementability of deﬁcit irrigation-based strategies for

    increased water use efﬁciency is addressed, allowing the

    extension of achievable water savings thus contributing to

    sustainable expansion of global food production without

    exhausting available freshwater resources.

    2 Precision irrigation control

    approaches

    Control techniques are broadly classiﬁed as open or closed

    loop, deﬁning the existence of any kind of calculated or otherwise

    technically realized feedback (output to the input of the system

    considered). Open loop precision irrigation control relies on an

    accurate understanding (in the best case: a model) of plant water

    requirements, while closed loop methods include sensing

    mechanisms to dynamically adjust the control input to the

    irrigation system based on measured values.

    The performance of precision irrigation control approaches

    depends on the deﬁnition of plant water requirements. The

    characterization of plant water demand and the subsequent

    responses to the water application is described in Kögler

    (Kögler and Söffker, 2017) along a soil-plant-atmosphere

    continuum.

    This

    paper

    similarly

    groups

    approaches

    in

    precision

    irrigation

    into

    soil-based,

    plant-based,

    and

    atmosphere-based approaches. Further distinction is made

    between approaches targeted at enhancing precise delivery at

    ﬁeld level, within irrigation management zones and at individual

    plant level.

    2.1 Soil-based approaches

    Growing plants obtain water required for their growth from

    the soil. The soil moisture content has therefore been applied as a

    measure of the water status of the plant, with a plant-speciﬁc

    lower limit describing the minimum moisture content required

    to maintain the plant above wilting point (Briggs and Shantz,

    1911) and a soil-speciﬁc maximum water holding capacity, also

    referred to as the ﬁeld capacity (Veihmeyer and Hendrickson,

    1931). The main goal of traditional irrigation methods is to

    maintain soil moisture content at ﬁeld capacity during the

    growth phases, with scheduling of irrigation events based on

    plant growth models such as FAO Aquacrop (Steduto et al., 2009)

    or multivariable models simulating soil moisture, plant growth,

    and evapotranspiration such as DSSAT (Hoogenboom et al.,

    2019).

    Model-based predictive control approaches applied in

    precision irrigation allow the integration of soil moisture

    models

    in

    a

    predictive

    control

    scheme,

    which

    allows

    forecasting of moisture content and update of control actions

    based on measured variables. Spatial and temporal variability is

    accounted for using regression models (Hedley C. and Yule I.,

    2009), a predictive model with weekly measurement-based

    updates performing online optimization (Nahar et al., 2019),

    employment of Kalman ﬁlters (Roy, 2014), and application of

    deep belief networks and macroscopic cellular automata, with

    dynamic environmental measurements providing additional data

    for prediction (Song et al., 2016).

    The learning capabilities of neural networks allows the

    adaptation of plant growth models for the design of precision

    irrigation controllers. Speciﬁc neural-network based approaches

    allow online updating of control decisions based on measured

    real-time conditions, resulting in more accurate behavior. These

    capabilities are utilized by Capraro et al. (Capraro et al., 2008) in

    the development of an adaptive closed loop controller that allows

    for

    modiﬁcation

    of

    control

    actions

    when

    environmental

    perturbations such as rainfall or extreme temperatures cause a

    change in irrigation requirements. Long short term memory

    neural networks are employed for prediction of soil moisture

    content (Adeyemi et al., 2018) or soil matric potential Jimenez

    et al. (2020) with varying performance, both in terms of water

    savings and prediction accuracy. These are attributed to soil

    characteristics and duration of the prediction window. Difference

    in performance of neural network-based predictive models are

    also reported by (Gu et al., 2021), with larger estimation errors

    observed at lower soil moisture content levels, affecting

    performance of the precision irrigation scheduling system.

    A major challenge in the use of model-based methods for

    precision irrigation is that the control performance is limited by

    the accuracy of prediction or estimation achieved by the model.

    Incorporation of soil moisture data into irrigation management

    decisions offers a signiﬁcant performance improvement in soil-

    based precision irrigation approaches. Sensor readings have been

    used to calibrate and reﬁne model output, as described in (Tseng

    et al., 2018), where soil moisture measurements are used in

    labelling images acquired from an unmanned aerial vehicle for

    training a deep learning-based predictive algorithm. Conversely,

    application of predictive models can be integrated in sensor-

    based control approaches to reduce the quantity of sensor

    readings required to make an accurate assessment of soil

    water content, as proposed in (De Benedetto et al., 2013b)

    and (Andugula et al., 2017).

    Frontiers in Control Engineering

    frontiersin.org

    03

    Owino and Söffker

    10.3389/fcteg.2022.982463

    Soil-based closed loop control methods integrate soil

    moisture measurements in the control loop. On/off switching

    algorithms triggered by designated soil moisture sensors with

    preset static thresholds have been employed in precision

    irrigation control by Xiao et al. (Xiao et al., 2010). Use of

    dynamic switching thresholds allows real-time response to

    ﬁeld

    conditions,

    with

    the

    adaptation

    of

    the

    thresholds

    accomplished in Capraro et al. (Capraro et al., 2008) by

    neural networks, and numerical simulation employed by Egea

    et al. (Egea et al., 2017). An alternative approach involves

    placement of sensors at varying depths to track inﬁltration

    rate, allowing anticipatory switching (Benzekri and Refouﬁ,

    2006; Zhao et al., 2007; Liu and Xu, 2018).

    Development of a large variety of soil moisture sensors with

    greater accuracy and reliability has facilitated the precision

    control of irrigation based on real-time conditions. A major

    challenge to implementation of sensor-based control approaches

    has been the unit cost of sensors, which limits the economic

    viability of ﬁeld scale application of appropriately accurate and

    precise sensors. New low-cost soil moisture sensors have been

    developed in recent times based on sensing approaches

    commonly used in commercially available sensors, including

    frequency domain reﬂectometry (FDR) (Xiao et al., 2010),

    time

    domain

    reﬂectometry

    (TDR)

    (Wei

    et

    al.,

    2013),

    impedance

    spectroscopy

    (Umar

    and

    Setiadi,

    2015),

    and

    capacitance-based methods (Kojima et al., 2016; Gao et al.,

    2018). Novel approaches in the measurement of soil moisture

    content have also been developed in recent times, such as a time-

    domain multiplexing approach described in Saeed et al. (Saeed

    et al., 2019) and a high frequency double-resonance tuning

    approach developed by Qinglan et al. (Qinglan et al., 2020).

    Ding and Chandra introduce a Wi-Fi-based measurement

    system that relies on radio-frequency propagation (Ding and

    Chandra, 2019). Development of more precise calibration

    techniques and incorporation of fault detection mechanisms

    generates an opportunity for improvement of measurement

    accuracy and ﬂexibility of application in both novel and

    existing soil moisture sensors (Oates et al., 2016; Chen L.

    et al., 2019; González-Teruel et al., 2019; Nagahage et al.,

    2019). Additionally, dynamically variable irrigation thresholds

    based on plant growth requirements can be incorporated through

    calibration based on plant measurements. This is employed in

    Lou et al. (Lou et al., 2016) to generate a set of soil potential

    thresholds that allows precision irrigation through different plant

    growth stages.

    Location and distribution of moisture sensors within the ﬁeld

    has traditionally relied on expert knowledge from manufacturers

    or farmers. Approaches for optimizing the spatial distribution of

    soil moisture sensors for improved mapping of water content

    include use of clay percentile (Zhao W. et al., 2017), analysis of

    soil elevation maps combined with measurement of electrical

    conductivity (Adamchuk et al., 2010), and application of graph-

    theoretical methods (Roy, 2014).

    Field level precision irrigation based on soil moisture content

    relies on accurately modeling and/or measurement of soil water

    dynamics, incorporating the effects of precipitation, irrigation,

    leaching, run-off, and drainage to establish the moisture available

    within the root zone of the plant. Precision irrigation control

    approaches are therefore employed primarily to address accuracy

    of moisture content measurement and monitoring, and the

    scheduling the timing and quantity of ﬁeld-level irrigation

    events. Remote sensing techniques capable of extracting soil

    moisture characteristics with increasing precision and more

    frequent intervals is a key factor in the further development

    of soil-based precision irrigation at ﬁeld level. Electromagnetic

    surveys have been applied in (Hedley et al., 2013) to assess the

    spatio-temporal dynamics of soil moisture and water table depth

    for precision irrigation control. Satellite data are also used to

    determine the soil water index, which is used as an indicator of

    soil moisture content (Termite et al., 2019).

    Zone level precision irrigation relies on accurate demarcation

    of the ﬁeld into homogeneous management zones based on

    physical and chemical characteristics of the soil (Bazzi et al.,

    2018; de Lara et al., 2018; Chen S. et al., 2019). Integration of

    plant-related

    measurements

    to

    complement

    soil

    sensor

    measurements has been explored in (Rojo et al., 2016; Ortuani

    et al., 2019; Vera et al., 2019; Serrano et al., 2020) for better zone

    delineation as a means to increasing irrigation efﬁciency. Recent

    research investigates the adoption of Bayesian maximum entropy

    (Han et al., 2020) and clustering approaches (Haghverdi et al.,

    2015; Oldoni and Bassoi, 2016; Ohana-Levi et al., 2019; Javadi

    et al., 2022) for achievement of optional zoning. To address

    challenges arising from static management zone delineation

    based on spatial characterization, dynamic determination of

    zone boundaries has been explored with integration of real-

    time soil and plant sensor measurements (Scudiero et al.,

    2018;

    Fontanet

    et

    al.,

    2020)

    or

    use

    of

    deep

    learning

    approaches (Song et al., 2016).

    With regard to the current status of soil-based precision

    irrigation control approaches summarized in Table 1, it can be

    stated that the maintenance of soil moisture level between a user-

    deﬁned lower boundary related to the wilting point and an upper

    boundary deﬁned by the soil water capacity has been employed as

    the basis for control decisions. Challenges related to soil water

    dynamics arising from inherent hydraulic characteristics or

    changes in the spatial envelope deﬁning root-available water

    have been addressed. Optimization of location and distribution

    of soil moisture sensors to allow accurate mapping of soil

    moisture distribution while minimizing the required number

    of sensors is a potential area for further work in the

    implementation

    of

    sensor-supported

    soil-based

    precision

    irrigation control. Variations in the upper soil moisture

    boundary during scheduling of irrigation quantity has not

    been

    considered

    in

    literature,

    signifying

    a

    gap

    in

    the

    application of soil-based precision irrigation methods to

    deﬁcit irrigation strategies. Additionally, a signiﬁcant gap

    Frontiers in Control Engineering

    frontiersin.org

    04

    Owino and Söffker

    10.3389/fcteg.2022.982463

    exists in soil-based approaches applied at individual plant level.

    Advancements in the ﬁeld of wireless sensor networks, remote

    sensing and machine learning approaches are expected to drive

    future developments in soil-based precision irrigation control,

    allowing for more localized decision support systems and greater

    adaptability to individual plant water requirements.

    2.2 Atmosphere-based approaches

    Atmosphere-based precision irrigation control approaches

    involve balancing the water supplied to the plant with the water

    released

    to

    the

    atmosphere

    through

    evapotranspiration.

    Achievement of the high accuracy required in precision

    irrigation

    is

    either

    accomplished

    by

    reﬁning

    evapotranspiration models for use in open loop control or by

    incorporation of sensor feedback in closed loop control.

    Common models of evapotranspiration incorporated into

    precision irrigation include FAO’s Penman-Monteith model

    (Allen, 1998; Fourati et al., 2014; Robinson et al., 2017;

    Pereira

    et

    al.,

    2020),

    the

    Hargreaves-Samani

    model

    (Hargreaves and Samani, 1985; Gordin et al., 2019; Pelosi

    et al., 2019; Domínguez-Niño et al., 2020) and the Surface

    Energy Balance model (SEBAL) (Bastiaanssen et al., 1998;

    Gobbo

    et

    al.,

    2019).

    Both

    the

    Penman-Monteith

    and

    Hargreaves-Samani models generate an estimated reference

    evapotranspiration rate, which is multiplied by a crop-speciﬁc

    coefﬁcient to predict the actual evapotranspiration rate of the

    crop.

    The

    Hargreaves-Samani

    model

    provides

    a

    simpler

    approach due to its ability to provide an estimate based solely

    on temperature values, as compared to the Penman-Monteith

    approach, where several environmental, geographic and soil-

    related variables are required. Better temporal stability in

    evapotranspiration prediction accuracy using the Hargreaves-

    Samani approach has also been reported in (Lorite et al., 2015),

    making it a more reliable option for control approaches

    integrating longer prediction windows. The SEBAL approach

    directly computes the actual evapotranspiration rate from

    thermal imagery without requiring speciﬁc soil- or crop-

    related coefﬁcients, making it more readily applicable to new

    or inadequately researched crop varieties for which physiological

    coefﬁcients are yet to be established.

    Machine learning approaches have more recently been

    applied in estimation of evapotranspiration, and hence plant

    water requirements, based on weather data (Sidhu et al., 2020;

    Farooque et al., 2021). Linker et al. use temperature forecasts to

    TABLE 1 Summary of soil-based precision irrigation control approaches.

    Author

    Year

    Sensing/Measurement

    Application scope

    Modeling/Control

    approach

    Soil

    Plant

    Atm

    Field

    Zone

    Plant

    Adeyemi et al.

    2018

    x

    x

    x

    MPC with NN-based prediction

    Andugula et al.

    2017

    x

    x

    Gaussian process regression

    Bazzi et al.

    2019

    x

    x

    Fuzzy C-means algorithm

    de Benedetto et al.

    2018

    x

    x

    Kriging with external drift

    Benzekri and Refouﬁ

    2006

    x

    x

    x

    Anticipatory on/off control

    Capraro et al.

    2008

    x

    x

    on/off control with dynamic thresholds

    Chen et al.

    2020

    x

    Genetic algorithm

    Egea et al.

    2017

    x

    x

    on/off control

    Gu et al.

    2021

    x

    x

    x

    NN-based on/off control

    Hedley and Yule

    2009

    x

    x

    Daily prediction of soil water status

    Jimenez et al.

    2020

    x

    x

    LSTM neural network

    Liu and Xu

    2018

    x

    x

    On/off control

    Lou et al.

    2016

    x

    x

    x

    On/off control

    Nahar et al.

    2019

    x

    x

    x

    MPC with closed loop scheduling

    Roy

    2014

    x

    x

    MPC with stochastic receding horizon

    Song et al.

    2016

    x

    x

    x

    Deep belief network (DBN)

    Termite et al.

    2019

    x

    x

    x

    x

    Feedforward NN; ANFIS

    Tseng et al.

    2018

    x

    x

    x

    Deep convolutional neural network

    Wei et al.

    2013

    x

    x

    On/off control

    Xiao et al.

    2010

    x

    x

    on/off control

    Xiao et al.

    2010

    x

    x

    x

    on/off control

    Zhao et al.

    2007

    x

    x

    On/off, Time control and fuzzy hybrid control

    Frontiers in Control Engineering

    frontiersin.org

    05

    Owino and Söffker

    10.3389/fcteg.2022.982463

    estimate evapotranspiration values, which are applied in

    precision scheduling of irrigation to achieve targeted optimal

    combinations of yield and irrigation amount selected by the

    farmer (Linker et al., 2018). Estimation of evapotranspiration

    using remote sensing data is employed in Barker et al. (Barker

    et al., 2018) for variable rate irrigation control. In Ma et al., the

    Root Zone Water Quality Model is calibrated using lysimeter

    measurements for estimation of plant evapotranspiration, which

    is then applied in irrigation scheduling (Ma et al., 2017). The

    authors suggest further improvement of irrigation scheduling by

    inclusion of weather forecasting data. Improvements in water use

    efﬁciency are observed in this case. However, due to the

    implementation

    of

    an

    open-loop

    control,

    real-time

    evapotranspiration values play no role in the decision-making,

    making the system susceptible to environmental variations. For

    greenhouse-based applications (Incrocci et al., 2014), developed a

    data-driven evapotranspiration model for precision irrigation

    control, achieving a 45% reduction in seasonal water use.

    An

    alternative

    atmospheric-based

    approach

    relies

    on

    prediction of precipitation rather than evapotranspiration

    (Roy,

    2014;

    Tsakmakis

    et

    al.,

    2016).

    Roy

    introduces

    a

    stochastic

    weather

    forecasting

    module

    for

    predicting

    precipitation (Roy, 2014) using publicly available weather

    forecasts. Tsakmakis et al. use a weather prognostics model

    based on the air pollution model (Hurley, 2005), which

    predicts

    precipitation

    by

    solving

    given

    scalar

    equations.

    Irrigation scheduling is adjusted based on predicted timing

    and quantities of precipitation.

    Hybrid approaches combining ET estimation with soil

    moisture sensing (Lozoya et al., 2016; Nocco et al., 2019;

    Bhatti et al., 2020) or plant-based methods (Tsakmakis et al.,

    2016; Gobbo et al., 2019) have also been used to achieve greater

    accuracy

    in

    precision

    irrigation

    control.

    These

    allow

    compensation

    of

    weather-related

    disturbances

    to

    the

    evapotranspiration model by integrating the dynamic behavior

    of soil moisture or of the plant. However their reliability depends

    on the accuracy of crop coefﬁcients used in determination of

    actual evapotranspiration.

    A major challenge in atmospheric-based precision irrigation

    approaches arises from the difﬁculty in differentiating between

    evaporation (from the soil surface) and transpiration (from the

    plants), requiring dynamic adjustment of irrigation control

    algorithms as plant cover increases during the growth season.

    A recent approach described by Chen et al. (Chen et al., 2020)

    involves the partitioning of evapotranspiration values into its two

    components through machine learning techniques. This could

    provide a key to achieving greater accuracy in precision irrigation

    control, allowing the focusing of water delivery to meet actual

    plant demand rather than maintaining constant soil moisture

    levels, including in areas where no plant growth is present. A

    summary of existing atmosphere-based control approaches is

    provided in Table 2.

    TABLE 2 Summary of atmosphere-based precision irrigation control approaches.

    Author

    Year

    Sensing/

    Measurement

    Application scope

    Modeling/Control

    approach

    Soil

    Plant

    Atm

    Field

    Zone

    Plant

    Barker et al.

    2018

    x

    x

    x

    VRI with remote sensing-based water balance model

    Bhatti et al.

    2019

    x

    satellite and airborne imagery-based VRI

    Dominguez-Nino et al.

    2020

    x

    x

    x

    model-predictive control (IRRIX software)

    Farooque et al.

    2021

    x

    deep learning model-based ET prediction

    Fourati et al.

    2014

    x

    x

    x

    x

    FAO56 ET model-based on/off control

    Gobbo et al.

    2019

    x

    x

    x

    VRI with dynamic zone delineation

    Gordin et al.

    2019

    x

    x

    x

    x

    Hargreaves-Samani ET model-based on-off control

    Incrocci et al.

    2014

    x

    x

    x

    x

    Soil moisture-based vs. ET-based automated drip irrigation

    Linker et al.

    2018

    x

    x

    MPC with real-time multi-objective optimization

    Lorite et al.

    2015

    x

    x

    weather forecast-based on/off irrigation control

    Lozoya et al.

    2016

    x

    x

    x

    x

    model-predictive control with soil moisture measurement

    Ma et al.

    2017

    x

    x

    x

    weather forecast-derived ET-based deﬁcit irrigation

    Pelosi et al.

    2019

    x

    x

    x

    calibrated Hargreaves-Samani for ET modeling

    Robinson

    2017

    x

    x

    x

    plant-speciﬁc Penman-Monteith model-based control

    Roy

    2014

    x

    x

    x

    x

    stochastic receding horizon approach

    Sidhu et al.

    2020

    x

    x

    Regression-based on/off scheduling

    Tsakmakis et al.

    2016

    x

    x

    x

    x

    interoperable model coupling for irrigation scheduling (IMCIS)

    Frontiers in Control Engineering

    frontiersin.org

    06

    Owino and Söffker

    10.3389/fcteg.2022.982463

    2.3 Plant-based approaches

    To alleviate the gaps inherent in soil-based and atmospheric-

    based precision control approaches, plant-based precision

    irrigation control has been widely seen as the best approach

    in accurately determining and meeting plant water requirements

    (Jones, 2004). The timing and quantity of irrigation is based on

    the plant physiological response to lack of water, which results in

    changes in leaf surface temperature, water potential, or turgor

    (Ayars and Phene, 2007).

    Canopy temperature-based crop water stress indices (CWSI),

    both based on theoretical (Idso et al., 1981) and experimental

    models (Jackson et al., 1981) have been employed in irrigation

    scheduling since the early 1980s. Due to their reliance on canopy

    temperature measurements taken at a speciﬁc time of day

    (typically midday), they are constrained in their adaptability

    to dynamically varying stress conditions. Applications of

    CWSI

    in

    precision

    irrigation

    control

    are

    described

    in

    O’Shaughnessy et al. (O’Shaughnessy et al., 2012b), where a

    cumulative

    time

    threshold

    is

    incorporated

    in

    the

    determination of irrigation timing, and in Osroosh et al.

    (Osroosh

    et

    al.,

    2015),

    where

    a

    dynamic

    threshold

    is

    implemented to account for changes in water stress thresholds

    at different growing stages. A recent approach described by

    Andrade et al. (Andrade et al., 2018) is the implementation of

    machine learning algorithms for forecasting of crop water stress

    indices based on historic data.

    Advancements in canopy temperature measurements have

    contributed greatly to the development of plant-based precision

    irrigation approaches. High resolution satellite thermal images

    have been used for mapping of plant water stress levels for site-

    speciﬁc irrigation scheduling, with the capability to replace

    locally obtained leaf water potential (LWP) measurements

    (Meron et al., 2010). At a local level, thermal imagery

    obtained from unmanned aerial vehicles (UAVs) (Gonzalez-

    Dugo et al., 2013; Martínez et al., 2016; Matese et al., 2018) or

    all-terrain vehicles moving within the irrigated ﬁeld (Gutiérrez

    et al., 2018) has been used in mapping of plant water

    requirements for generation of irrigation management zones.

    At plant level, surface temperature sensors mounted on

    individual leaves have been applied to allow continuous

    monitoring of stress status (Rojo et al., 2016; Kizer et al., 2018).

    Determination of plant water status by measurement of water

    potential in a pressure chamber was ﬁrst described by Dixon and

    Joly in 1895 (Dixon and Joly, 1895). Various approaches have

    been developed for determination of water potential, with

    measurements taken either from the leaves or from the stem

    (SWP). Water potential measurement is done either directly on

    the plant (Mirás-Avalos et al., 2016; Blanco-Cipollone et al.,

    2017) or estimated from multispectral imagery (Baluja et al.,

    2012; Zhao T. et al., 2017; Beeri et al., 2018; Helman et al., 2018;

    Tung et al., 2018). Precision irrigation control approaches based

    on use of plant water potential-based thresholds for triggering of

    irrigation events are described by (Acevedo-Opazo et al., 2010;

    Bellvert et al., 2015; Mirás-Avalos et al., 2016) and (Ruiz-

    Sánchez et al., 2018). The application of machine learning

    approaches enables integration of historical water potential

    measurements

    to

    predict

    spatial

    variations

    in

    water

    requirements, as described in (Pôças et al., 2020). An

    alternative method

    involves the use of

    water potential

    thresholds

    as

    the

    standard

    for

    calibration

    of

    other

    measurement approaches, such as trunk diameter shrinkage

    and growth rate (Livellara et al., 2011). Near infra-red

    spectroscopy

    measurements

    have

    also

    been

    applied

    in

    precision irrigation control, as described by (Diago et al., 2018).

    Water is required for the maintenance of turgor pressure

    in plants. Plant water status can therefore be monitored or

    measured through measurement of turgor. Developments

    related

    to

    leaf

    turgor

    measurements

    and

    potential

    application

    in

    precision

    irrigation

    are

    described

    in

    (Martínez-Gimeno et al., 2016; Rodriguez-Dominguez et al.,

    2019). A novel approach employing ultrasonic sensing

    techniques for determination of leaf water content as

    related to turgor pressure is described in (Álvarez-Arenas

    et

    al.,

    2016),

    allowing

    for

    non-contact

    application

    of

    turgor-based precision irrigation control.

    Other emerging methods of assessing plant water status that

    could provide useful feedback for precision irrigation control

    include measurement of leaf thickness (Seelig et al., 2011), trunk

    diameter (Conejero et al., 2011; Meng et al., 2017), leaf reﬂectance

    (Katsoulas et al., 2016) and various applications of image analysis

    (Hendrawan and Murase, 2009; Chen et al., 2018; Mateo-Aroca

    et al., 2019; Xu et al., 2020). The demarcation of irrigation

    management zones based on plant-based sensors is also a

    potential area of exploration (Bazzi et al., 2018), allowing the

    realization of zone-based irrigation control that better matches

    the plant water requirements.

    In general, while plant-based approaches (summarized in

    Table 3) provide the closest match to plant water requirements,

    there still exist open questions regarding the determination of

    appropriate

    irrigation

    quantity,

    the

    distinguishing

    of

    physiological responses to water stress from other stresses,

    and the dynamic adaptation of irrigation control to account

    for physiological coping mechanisms employed by plants in

    response to water stress.

    The interaction between the soil, plant and atmosphere

    provides a broad spectrum of combinations for precision

    irrigation control approaches. Selection of a suitable approach

    depends

    on

    the

    speciﬁc

    soil,

    plant

    and

    environmental

    characteristics under consideration, as well as the desired scale

    of application. While signiﬁcant progress has been made in

    development of ﬁeld-level and zone-based precision irrigation

    applications using all three approaches, there remains a

    signiﬁcant gap in plant-level precision irrigation control,

    which has the potential to further improve the efﬁciency of

    irrigation water supply to meet actual plant demand.

    Frontiers in Control Engineering

    frontiersin.org

    07

    Owino and Söffker

    10.3389/fcteg.2022.982463

    3 Advances in precision irrigation

    The development of precision irrigation control has beneﬁted

    from technological advances in various ﬁelds. In this section, the

    technological advances contributing to precision irrigation

    control are discussed under three main categories: sensor

    development and data acquisition, data processing and control

    approaches, and actuating devices. Speciﬁc elements of Industry

    4.0 are directly addressed in each section.

    3.1 Advances in sensing

    3.1.1 Remote sensing

    Greater availability of satellite data has provided a signiﬁcant

    boost to integration of remote sensor data in precision irrigation

    applications. The soil moisture and ocean salinity (SMOS)

    satellite (Kerr et al., 2010) launched by the European Space

    Agency and the soil moisture active and passive (SMAP)

    (Entekhabi et al., 2010) satellite by NASA have in particular

    been

    instrumental

    in

    furthering

    research

    on

    remote

    measurement and monitoring of soil water content. Drought

    assessment using soil water deﬁcit indices derived from SMOS

    Martínez-Fernández et al. (2016) and SMAP (Zhu et al., 2019)

    enables the tracking of changes in soil moisture content over

    time, enabling precision irrigation management. In (Brocca et al.,

    2018), satellite data are used to quantify amount of irrigation

    water supplied at various sites, demonstrating the potential of

    applying remote sensing data to monitoring and control tasks

    associated

    with

    precision

    irrigation.

    The

    challenge

    of

    downscaling regional scale satellite data for local application,

    such as in precision irrigation, is presented in (Peng et al., 2017),

    with a discussion of satellite-based, geoinformation-based, and

    model-base approaches. A key limitation of microwave satellites

    is that soil moisture information describes the surface condition

    rather

    than

    root

    zone

    characteristics.

    The

    Global

    Land

    Evaporation Amsterdam Model (GLEAM) (Martens et al.,

    2017) provides a set of algorithms allowing estimation of

    root-zone soil moisture and evaporation from satellite data,

    allowing for incorporation into precision irrigation strategies.

    Termite et al. (Termite et al., 2019) describe the harnessing of

    machine learning capabilities in analysis of satellite imagery to

    predict soil moisture dynamics for application in irrigation

    decision support systems.

    3.1.2 Wireless sensor networks

    Advancements in wireless sensor network technology have

    led to improved collection and analysis of sensor data for high

    resolution mapping of soil moisture (Zhao et al., 2007; Xiao

    et al., 2010; Hedley et al., 2013). Real-time communication

    between

    sensors,

    actuators,

    and

    human

    users

    is

    easily

    achievable

    over

    locally

    available

    telecommunications

    TABLE 3 Summary of plant-based precision irrigation control approaches.

    Author

    Year

    Sensing/

    Measurement

    Application scope

    Modeling/Control

    approach

    Soil

    Plant

    Atm

    Field

    Zone

    Plant

    Acevedo-Opazo et al.

    2010

    x

    x

    x

    SWP-based regulated deﬁcit irrigation

    Andrade et al.

    2018

    x

    x

    x

    x

    ANN-based model predictive control

    Bellvert et al.

    2015

    x

    x

    regulated deﬁcit irrigation with dynamic management zones

    Blanco-Cipollone et al.

    2017

    x

    x

    x

    deﬁcit irrigation with on/off control and static thresholds

    Gonzalez-Dugo et al.

    2013

    x

    x

    x

    x

    canopy-air temperature differential-based CWSI thresholding

    Gutierrez et al.

    2018

    x

    x

    x

    reduced error pruning tree-based VRI

    Kizer et al.

    2018

    x

    x

    x

    CWSI- and stem water potential-based VRI

    Livellara et al.

    2011

    x

    x

    x

    variable rate drip irrigation

    Martinez et al.

    2016

    x

    x

    x

    x

    IR image-based deﬁcit irrigation

    Matese et al.

    2018

    x

    x

    x

    stem water potential-based on/off control

    Meron et al.

    2010

    x

    x

    x

    inverse distance-weighted interpolation of CWSI data

    Miras-Avalos et al.

    2016

    x

    x

    x

    x

    SWP-based regulated deﬁcit irrigation

    O’Shaughnessy et al.

    2012

    x

    x

    x

    x

    CWSI- and time threshold-based on/off control

    Osroosh et al.

    2015

    x

    x

    x

    x

    x

    x

    adaptive on/off control with dynamic threshold

    Pocas et al.

    2020

    x

    x

    Bayesian and Tree-based regression algorithms

    Rojo et al.

    2016

    x

    x

    x

    unsupervised fuzzy classiﬁcation-based VRI

    Ruiz-Sanchez et al.

    2018

    x

    x

    x

    x

    Takagi-Sugeno-Kang fuzzy inference system

    Tung et al.

    2018

    x

    x

    x

    Modiﬁed partial least squares regression-based LWP modeling

    Frontiers in Control Engineering

    frontiersin.org

    08

    Owino and Söffker

    10.3389/fcteg.2022.982463

    infrastructure and interfaces can be implemented on mobile

    hand-held devices (Işık et al., 2017). An expansion of sensor

    networking has seen the rise of Internet-of-Things-based

    sensing applied for monitoring of plant water requirements,

    whether via soil-based, atmosphere-based, or plant-based

    measurements (Vasisht et al., 2017; Goap et al., 2018; Munir

    et al., 2018). Integration of wireless sensor networks has also

    found

    application

    in

    dynamic

    delineation

    of

    irrigation

    management

    zones

    for

    zone-based

    precision

    irrigation

    control in Sapna et al. (Sapna et al., 2020).

    3.2 Advances in data processing and

    control

    3.2.1 Big data

    The vast quantities of data generated from networked sensors

    generate a need for expanded processing and storage capabilities.

    In this respect, cloud computing approaches provide a viable

    solution, ﬁnding application in monitoring of real-time irrigation

    status (López-Riquelme et al., 2017; Vaishali et al., 2017) and

    modeling of plant water requirements for soil-based (Raikar

    et al., 2018; Mezouari et al., 2020), plant-based (Roopaei et al.,

    2017), and atmosphere-based (Bendre et al., 2015) precision

    irrigation control approaches. Data analysis techniques applied

    on Big Data applications are also proving beneﬁcial in

    management of precision irrigation control systems (Zhang

    et al., 2017).

    3.2.2 Machine learning and artiﬁcial intelligence

    Machine learning involves generation of self-modifying

    or

    adapting

    algorithms

    whose

    performance

    accuracy

    increases

    with

    experience

    (Marsland,

    2014).

    Machine

    learning techniques have been crucial in development of

    dynamic

    control

    approaches

    through

    integration

    of

    learning capabilities. Applications in the area of precision

    irrigation are primarily in predictive modeling of soil

    moisture dynamics (Hinnell et al., 2010; Adeyemi et al.,

    2018) and optimized irrigation scheduling (Jimenez et al.,

    2018;

    Murthy

    et

    al.,

    2019).

    Recent

    research

    involves

    application of Machine learning algorithms to identify new

    parameters that can be employed in characterization of plant

    water content, primarily through image analysis (Hendrawan

    and Murase, 2009).

    3.2.3 Multi-agent systems

    Multi-agent systems expand the capabilities of artiﬁcial

    intelligence by introducing multiple autonomous intelligent

    agents capable of interacting with each other. Multi-agent

    systems have been employed in simulation of plant growth

    response

    to

    multiple

    irrigation

    strategies,

    allowing

    the

    selection

    of

    optimal

    precision

    irrigation

    approaches

    for

    speciﬁc conditions (Isern et al., 2012; Belaqziz et al., 2013;

    Zaryouli et al., 2020). With the incorporation of real-time

    sensed

    variables

    describing

    plant

    response

    to

    water

    application,

    multi-agent

    systems

    have

    additionally

    been

    proposed

    for

    dynamic

    tuning

    of

    irrigation

    scheduling

    algorithms (Villarrubia et al., 2017; Wanyama and Far, 2017;

    González-Briones et al., 2019), allowing for constant adaptation

    of water supply to plant needs. Further research in incorporation

    of artiﬁcial intelligence in plant-based precision irrigation control

    could be useful in enabling further individualization of plant

    water requirement estimation, resulting in precision irrigation

    control applications that more closely meet individual plant

    needs.

    An emerging ﬁeld in precision irrigation control is the

    modeling

    of

    irrigation-related

    parameters

    using

    hybrid

    automata.

    Here,

    plant,

    soil,

    and

    atmosphere-related

    parameters are modeled using ﬁnite state-machines, with

    individual

    states

    described

    using

    simple

    linear

    models,

    enabling the modeling and control of complex dynamic

    systems, as described in Lozoya et al. (Lozoya et al., 2019) and

    Jihin et al. (Jihin et al., 2019). Future work in this area would

    involve integration of the generated plant models in precision

    irrigation control algorithms, with the aim of predicting plant

    water

    requirements

    and

    adaptively

    adjusting

    irrigation

    scheduling based on plant response.

    3.3 Advances in actuation

    Delivery of irrigation water involves control of suitable

    individual or combinations of pumps, valves, gates, and drip

    lines through connected actuators in the form of motors,

    mechanisms, and/or linkages. To ensure that the required

    amount of irrigation water is delivered in a timely manner to

    the required location, improvements at the delivery end play a

    signiﬁcant role. A common unifying factor is uniform supply of

    irrigation water, with precision control approaches mainly

    concerned with on/off switching of actuators to accomplish

    scheduling and determine irrigation quantity.

    3.3.1 Variable rate irrigation

    The achievement of precision irrigation requires variable

    delivery of water to different locations, based on localized

    requirements. The development of variable rate irrigation is

    described in Mulla and Khosla (Mulla and Khosla, 2015) as

    one of the major contributors to the widespread adoption of

    precision agriculture. In variable rate irrigation, the amount of

    water delivered by individual nozzles or groups of nozzles is

    independently adjustable, allowing for delineation of a ﬁeld into

    different irrigation management zones. This is a widely used

    approach in cases where variations in scheduling or frequency of

    irrigation for different zones within the ﬁeld may not be desired.

    Implementation of variable rate irrigation has been achieved by a

    number of researchers through modiﬁcation of commercially

    Frontiers in Control Engineering

    frontiersin.org

    09

    Owino and Söffker

    10.3389/fcteg.2022.982463

    available sprinkler irrigation systems to supply preset quantities

    of water under the control of a programmable system (McCann

    et al., 1997; Camp et al., 1998; Chávez et al., 2009) or

    development of new systems with variable rate irrigation

    capabilities (Han et al., 2009). With hardware capable of

    supplying different amounts of water, precision irrigation

    control is transformed into a zoning/mapping operation, with

    regions requiring similar quantities of irrigation water (based on

    soil properties or plant requirements) clustered together.

    Delineation

    of

    irrigation

    management

    zones

    has

    been

    accomplished through measurement of soil properties at

    different locations within the area under irrigation to generate

    databases that are used to determine location-speciﬁc irrigation

    settings (Hedley C. B. and Yule I. J., 2009; Chávez et al., 2009;

    Moral et al., 2010; Nahry et al., 2011; Liakos et al., 2015; Boluwade

    et al., 2016). Aggregation of on-site sensor measurements with

    satellite data to develop decision support and zone management

    systems for use in precision irrigation control is described by

    multiple researchers as well (Zhang et al., 2009; Jiang et al., 2011;

    De Benedetto et al., 2013a; Barker et al., 2018).

    Variable

    rate

    irrigation

    approaches

    relying

    on

    characterization

    of

    soil

    properties

    for

    zoning

    result

    in

    generation

    of

    prescription

    maps

    for

    precision

    irrigation

    applications. Such approaches, however, fail to respond to the

    dynamics of plant water requirements. Recent approaches

    incorporate plant-based measurements to dynamically update

    zoning maps generated from soil properties. O’Shaughnessy et al.

    use real-time plant water stress readings taken during irrigation

    events to dynamically update the zoning maps used for precision

    irrigation

    control

    (O’Shaughnessy

    et

    al.,

    2012a).

    In

    Goumopoulos et al., a wireless sensor network integrating

    measurements from soil, plant, and atmosphere is applied in

    generation of irrigation management zones and used for control

    of a wireless actuator network for precision irrigation within a

    greenhouse (Goumopoulos et al., 2014).

    3.3.2 Agricultural robots

    Introduction of robotic agents in automation of irrigation

    water delivery is an emerging area of research interest. With

    appropriate path planning and ﬁeld preparation, greater

    ﬂexibility in geographical location of irrigation heads is

    achievable, and the role of such robots is easily expandable to

    include multiple functions, such as sensing of soil and plant

    characteristics, collection of samples, and delivery of agricultural

    chemicals. Jafari et al. introduce an autonomously guided vehicle

    for relocation of sprinkler heads within an irrigated ﬁeld (Jafari

    et al., 2013). The replacement of manual labour with robotic

    actuation improves on accuracy and speed of irrigation, as well as

    minimizes wastage of water. Gealy et al. develop a hand-held

    robotic device used for ﬁne-tuning emitter settings in a modiﬁed

    drip irrigation system (Gealy et al., 2016). Water delivery can be

    set to match individual plant requirements by adjustment of ﬂow

    settings at each emitter. Thayer et al. introduce a routing

    algorithm to allow a similar robotic device for precision

    adjustment of emitter settings to operate autonomously within

    a vineyard (Thayer et al., 2018). Developments in collaborative

    robotics provide further opportunities for integration of robotic

    actuation in precision irrigation. Dusadeerungsikul et al.

    (Dusadeerungsikul et al., 2019) discuss the development of a

    collaborative control protocol which integrates robotic agents

    into a smart greenhouse to create a cyber-physical system that

    includes human and robotic agents. The described system

    primarily

    serves

    a

    monitoring

    and

    detection

    role

    with

    response provided by human operators. The system however

    is an indicator of the potential application of collaborative robots

    in a precision irrigation scenario, whether in sensing or actuation.

    Current research involving collaborating robotic ﬂeets,

    otherwise described as swarm robotics, is an emerging area of

    interest that could further inﬂuence future developments in

    precision irrigation control. The scalability, ﬂexibility, and

    robustness in solution of complex tasks could be employed in

    tailoring precision control decisions to allow more individually

    adapted irrigation on larger scale (Albani et al., 2017). This is

    facilitated by having specialized functions distributed among a

    larger number of robots, which can then be deployed as and when

    needed with coordinated communication (Emmi et al., 2014). Of

    particular interest are swarms composed of aerial and ground

    robots, which could integrate airborne sensing capabilities with

    ground-based application tasks, allowing real-time, closed-loop

    precision irrigation control (Grassi et al., 2017; Vu et al., 2017;

    Potena et al., 2019).

    4 Challenges and opportunities

    Irrigation

    control

    has

    primarily

    been

    targeted

    at

    minimization of water consumption at the expense of yield, or

    maximization of yield at the expense of water consumption.

    Research on the effect of targeted water stress during speciﬁc

    growth periods however indicates that it is possible to achieve

    equivalent

    or

    even

    greater

    yield

    while

    reducing

    water

    consumption

    through

    strategic

    alternation

    of

    moderate

    drought stress and recovery periods (Blum et al., 1990; Cui

    et al., 2009; Niu et al., 2018). With the ongoing depletion of

    global freshwater supplies, minimization of water consumption

    will remain an overarching target of precision irrigation, with

    advancements in technology increasingly targeting more efﬁcient

    use of every applied drop of water. An emerging Frontier that

    presents interesting research questions is the individualized

    direct control of plant growth and development by targeted

    application of environmental stresses, such as is accomplished

    through deﬁcit irrigation. This has been suggested in various

    research works (Hunt and Nicholls, 1986; Kang and Wang, 2017;

    Sánchez-Blanco et al., 2019). Kögler and Söffker compare such

    targeted growth control based on precise irrigation sequencing to

    sports training (Kögler and Söffker, 2020). Development of more

    Frontiers in Control Engineering

    frontiersin.org

    10

    Owino and Söffker

    10.3389/fcteg.2022.982463

    efﬁcient precision irrigation technology and more accurate

    models representing the complex relationship between plant

    growth and irrigation water supply is necessary to achieve

    this. More direct targeting of irrigation application to the

    speciﬁc plants that require it, with quantity and timing

    selected to just avoid the region of drought stress within

    which physiological damage or yield reduction occurs, could

    result in signiﬁcant water savings and more reliable projection of

    irrigation water use throughout the growing season.

    Integration of networking and remote access into precision

    irrigation solutions has led to a new set of challenges related to

    data security. Wireless sensor networks, Internet-of-Things

    enabled devices, and cloud-based systems can be particularly

    vulnerable to cyber security threats such as distributed denial of

    service (DDoS) attacks, integration into malicious botnets

    (Antonakakis et al., 2017) and exploitation by ransomware

    creators. This creates an additional layer of considerations to

    be included in design of precision irrigation control systems.

    Legal challenges stemming from ambiguity in regulatory

    frameworks governing implementation of new technology

    could be a setback in some precision irrigation applications,

    such as those involving robotic actors and artiﬁcial intelligence.

    Progress has been made in enacting legislation to govern

    operation of unmanned aerial vehicles within the European

    Union

    (European

    Commission,

    Directorate-General

    for

    Mobility

    and

    Transport,

    2019a;

    European

    Commission,

    Directorate-General for Mobility and Transport, 2019b). Social

    and ethical issues stemming from implementation of artiﬁcial

    intelligence and autonomous robotic agents are also a cause of

    concern,

    with

    questions

    arising

    regarding

    data

    privacy,

    accountability in decisions involving human interaction and

    accessibility of criteria applied in decision-making (Müller,

    2020).

    Despite existing challenges, a wealth of opportunities

    abounds in precision irrigation research and implementation.

    Recent advances in high resolution remote sensing technology

    could also play an important role in precision irrigation. In

    particular, the use of satellite data to infer soil moisture is

    particularly practicable in introduction of precision irrigation

    principles in decision support systems for large scale irrigation

    platforms. Termite et al. apply machine learning techniques to

    infer soil moisture status from satellite imagery, providing crucial

    information for irrigation management at a municipality level

    (Termite et al., 2019).

    Further opportunities exist in application of cloud-based data

    storage and processing, allowing for reduction in setup and

    FIGURE 1

    Agriculture 4.0- The future of precision irrigation control, with cloud-based
    data storage and processing, real-time communication between

    plant-based sensors, intelligent agents (including robots), supported by weather
    data and market analytics.

    Frontiers in Control Engineering

    frontiersin.org

    11

    Owino and Söffker

    10.3389/fcteg.2022.982463

    operational costs through remote sharing of data and processing

    power. Enhanced accumulation of soil, plant, and environmental

    data facilitated by networked devices expands available agricultural

    data from which new models and control approaches can be

    generated and tested. On the actuation front, assistive technologies

    such as subsurface water retention technology (SWRT) (Roy et al.,

    2019), which uses an impermeable membrane to extend the

    duration of water availability to plants, could be integrated into

    precision irrigation scheduling approaches.

    What then, does the future hold for precision irrigation

    control? The incorporation of elements of Industry 4.0 in

    agricultural applications (also referred to as Agriculture 4.0)

    provides a guiding framework (see Figure 1). Plant-level

    sensors would give individual plants or plant monitoring units

    the ability to communicate their needs in real time. This

    information would be collected and processed in real time in

    an interconnected network of devices and agents. Artiﬁcial

    intelligence would then interpret the collected data and

    combine

    it

    with

    accurate,

    dynamic

    growth

    models

    encompassing speciﬁc scenarios with regard to exactly how

    much water should be consumed during the entire growth

    season, what yield is to be produced from each sector, by

    which

    date

    the

    crops

    should

    be

    arriving

    at

    speciﬁc

    developmental stages (including targeted harvest dates), and

    employing

    additional

    soil-speciﬁc

    and

    weather-speciﬁc

    information to tailor the prescription to each ﬁeld, growing

    season, and set of user preferences. A robust, adaptable

    controller would then generate a database containing the

    speciﬁc irrigation needs of each individual, and delivery of

    water would be implemented by opening of irrigation valves

    at the individual plant level, activated either remotely from a

    cloud-connected platform, or on site by swarms of mobile robots,

    each responsible for speciﬁc zones within the ﬁeld. After all, the

    best-placed entity to answer the question “how much water is too

    much water” is the individual plant, communicating its needs in

    real time and determining when it wishes to be watered, how

    much water it requires, and how much thirst it can take before

    compromising the ﬁnal expected yield.

    Author contributions

    The contribution of the authors to the work is as follows:

    Conceptualization, DS and LO; Resources, DS; Data Curation,

    LO; Writing—Draft preparation, Review and Editing, LO and

    DS; Proofreading—DS; Supervision, DS; Project Administration,

    DS; Funding Acquisition, DS.

    Funding

    This publication was made possible through the ﬁnancial

    support of the Open Access Fund of the University of Duisburg-

    Essen.

    Acknowledgments

    The authors wish to acknowledge the support provided the

    Deutscher Akademischer Austauschdienst (DAAD) and the

    Kenya

    National

    Research

    Fund

    (NRF)

    by

    means

    of

    a

    scholarship covering the research period.

    Conﬂict of interest

    The authors declare that the research was conducted in the

    absence of any commercial or ﬁnancial relationships that could

    be construed as a potential conﬂict of interest.

    Publisher’s note

    All claims expressed in this article are solely those of the authors

    and do not necessarily represent those of their afﬁliated organizations,

    or those of the publisher, the editors and the reviewers. Any product

    that may be evaluated in this article, or claim that may be made by its

    manufacturer, is not guaranteed or endorsed by the publisher.

    References

    Abioye, E. A., Hensel, O., Esau, T. J., Elijah, O., Abidin, M. S. Z., Ayobami,
    A. S., et al.

    (2022). Precision irrigation management using machine learning and digital farming

    solutions. AgriEngineering 4, 70–103. doi:10.3390/agriengineering4010006

    Acevedo-Opazo, C., Ortega-Farias, S., and Fuentes, S. (2010). Effects of

    grapevine (vitis vinifera l.) water status on water consumption, vegetative

    growth and grape quality: An irrigation scheduling application to achieve

    regulated deﬁcit irrigation. Agric. Water Manag. 97, 956–964. doi:10.1016/j.

    agwat.2010.01.025

    Adamchuk, V. I., Pan, L., Marx, D., and Martin, D. (2010). “Locating

    soil

    monitoring

    sites

    using

    spatial

    analysis

    of

    multilayer

    data,”

    in

    Proceedings of the 19th World Congress of Soil Science: Soil solutions for a

    changing world, Brisbane, Australia (Vienna: International Union of Soil

    Sciences).

    Adeyemi,

    O.,

    Grove,

    I.,

    Peets,

    S.,

    Domun,

    Y.,

    and

    Norton,

    T.

    (2018).

    Dynamic

    neural

    network

    modelling

    of

    soil

    moisture

    content for predictive irrigation scheduling. Sensors 18, 3408. doi:10.3390/

    s18103408

    Adeyemi, O., Grove, I., Peets, S., and Norton, T. (2017). Advanced monitoring

    and management systems for improving sustainability in precision irrigation.

    Sustainability 9, 353. doi:10.3390/su9030353

    Albani, D., IJsselmuiden, J., Haken, R., and Trianni, V. (2017). “Monitoring and

    mapping with robot swarms for agricultural applications,” in 2017 14th IEEE

    International Conference on Advanced Video and Signal Based Surveillance

    (AVSS), 1–6. doi:10.1109/AVSS.2017.8078478

    Allen, R. G. (1998). Crop evapotranspiration : Guidelines for computing crop water

    requirements- FAO irrigation and drainage paper 56, 300. Rome: Food and

    Agriculture Organization of the United Nations).

    Álvarez-Arenas, T. G., Gil-Pelegrin, E., Cuello, J. E., Fariñas, M., Sancho-Knapik,

    D., Burbano, D. C., et al. (2016). Ultrasonic sensing of plant water needs for

    agriculture. Sensors 16, 1089. doi:10.3390/s16071089

    Frontiers in Control Engineering

    frontiersin.org

    12

    Owino and Söffker

    10.3389/fcteg.2022.982463

    Andrade, M. A., Evett, S. R., and O’Shaughnessy, S. A. (2018). “Machine learning

    algorithms applied to the forecasting of crop water stress indicators,” in Technical

    session proceedings (Fairfax, VA: Irrigation Show). (Long Beach, California:

    Irrigation Association).

    Andugula, P., Durbha, S. S., Lokhande, A., and Suradhaniwar, S. (2017).

    “Gaussian process based spatial modeling of soil moisture for dense soil

    moisture sensing network,” in 2017 6th International Conference on Agro-

    Geoinformatics, 1–5. doi:10.1109/Agro-Geoinformatics.2017.8047014

    Antonakakis, M., April, T., Bailey, M., Bernhard, M., Bursztein, E., Cochran,
    J.,

    et al. (2017). “Understanding the mirai botnet,” in Proceedings of the 26th USENIX

    Security Symposium (Vancouver, BC, Canada: USENIX Association), 1093–1110.

    Arborea, S., Giannoccaro, G., de Gennaro, B., Iacobellis, V., and Piccinni, A.

    (2017). Cost–beneﬁt analysis of wastewater reuse in puglia, southern Italy. Water
    9,

    175. doi:10.3390/w9030175

    Arena, C., Genco, M., and Mazzola, M. R. (2020). Environmental beneﬁts and

    economical sustainability of urban wastewater reuse for irrigation—A cost-beneﬁt

    analysis of an existing reuse project in puglia, Italy. Water 12, 2926. doi:10.3390/

    w12102926

    Ayars, J. E., and Phene, C. J. (2007). 7. Automation. In developments in

    agricultural engineering (elsevier). Microirrigation Crop Prod. Des. Operation

    Manag., 259–284. doi:10.1016/s0167-4137(07)80010-2

    Baluja, J., Diago, M. P., Balda, P., Zorer, R., Meggio, F., Morales, F., et al.
    (2012).

    Assessment of vineyard water status variability by thermal and multispectral

    imagery using an unmanned aerial vehicle (UAV). Irrig. Sci. 30, 511–522.

    doi:10.1007/s00271-012-0382-9

    Barker, J. B., Heeren, D. M., Neale, C. M., and Rudnick, D. R. (2018). Evaluation
    of

    variable rate irrigation using a remote-sensing-based model. Agric. Water Manag.

    203, 63–74. doi:10.1016/j.agwat.2018.02.022

    Bastiaanssen, W., Menenti, M., Feddes, R., and Holtslag, A. (1998). A remote

    sensing surface energy balance algorithm for land (SEBAL). 1. formulation.

    J. Hydrology 212-213, 198–212. doi:10.1016/s0022-1694(98)00253-4

    Bazza, M. (2007). Overview of the history of water resources and irrigation

    management in the near east region. Water Supply 7, 201–209. doi:10.2166/ws.2007.023

    Bazzi, C. L., Schenatto, K., Upadhyaya, S., Rojo, F., Kizer, E., and Ko-Madden,
    C.

    (2018). Optimal placement of proximal sensors for precision irrigation in tree
    crops.

    Precis. Agric. 20, 663–674. doi:10.1007/s11119-018-9604-3

    Beeri, O., May-tal, S., Raz, Y., Rud, R., and Pelta, R. (2018). “Detecting variability

    in plant water potential with multi-spectral satellite imagery,” in Proceedings
    of the

    14th International Conference on Precision Agriculture, Montreal, Canada

    (Monticello, IL: International Society of Precision Agriculture).

    Belaqziz, S., Fazziki, A. E., Mangiarotti, S., Page, M. L., Khabba, S., Raki,
    S. E., et al.

    (2013). An agent based modeling for the gravity irrigation management. Procedia

    Environ. Sci. 19, 804–813. doi:10.1016/j.proenv.2013.06.089

    Bellvert, J., Zarco-Tejada, P., Marsal, J., Girona, J., González-Dugo, V., and

    Fereres, E. (2015). Vineyard irrigation scheduling based on airborne thermal

    imagery and water potential thresholds. Aust. J. Grape Wine Res. 22, 307–315.

    doi:10.1111/ajgw.12173

    Bendre, M. R., Thool, R. C., and Thool, V. R. (2015). “Big data in precision

    agriculture: Weather forecasting for future farming,” in 2015 1st International

    Conference on Next Generation Computing Technologies, Dehradun, India

    (Piscataway, NJ: IEEE), 744–750. doi:10.1109/NGCT.2015.7375220

    Benzekri, A., and Refouﬁ, L. (2006). “Design and implementation of a

    microprocessor-based interrupt-driven control for an irrigation system,” in 2006

    1ST IEEE International Conference on E-Learning in Industrial Electronics, 68–73.

    doi:10.1109/ICELIE.2006.347214

    Bhatti, S., Heeren, D. M., Barker, J. B., Neale, C. M., Woldt, W. E., Maguire,
    M. S.,

    et al. (2020). Site-speciﬁc irrigation management in a sub-humid climate using
    a

    spatial evapotranspiration model with satellite and airborne imagery. Agric. Water

    Manag. 230, 105950. doi:10.1016/j.agwat.2019.105950

    Biswas, A. (1970). History of hydrology. Amsterdam New York: North-Holland

    Publishing Company American Elsevier Publishing Company.

    Blanco-Cipollone, F., Lourenço, S., Silvestre, J., Conceição, N., Moñino, M.,
    Vivas,

    A., et al. (2017). Plant water status indicators for irrigation scheduling associated

    with iso- and anisohydric behavior: Vine and plum trees. Horticulturae 3, 47.
    doi:10.

    3390/horticulturae3030047

    Blum, A., Ramaiah, S., Kanemasu, E., and Paulsen, G. (1990). Wheat recovery

    from drought stress at the tillering stage of development. Field Crops Res. 24,
    67–85.

    doi:10.1016/0378-4290(90)90022-4

    Bodkhe, U., Tanwar, S., Bhattacharya, P., and Kumar, N. (2020). Blockchain for

    precision irrigation: Opportunities and challenges. Trans. Emerg. Tel. Tech. doi:10.

    1002/ett.4059

    Boluwade, A., Madramootoo, C., and Yari, A. (2016). Application of

    unsupervised clustering techniques for management zone delineation: Case

    study of variable rate irrigation in southern alberta, Canada. J. Irrig. Drain.
    Eng.

    142, 05015007. doi:10.1061/(asce)ir.1943-4774.0000936

    Briggs, L. J., and Shantz, H. L. (1911). A wax seal method for determining

    the lower limit of available soil moisture. Bot. Gaz. 51, 210–219. doi:10.1086/

    330474

    Brocca, L., Tarpanelli, A., Filippucci, P., Dorigo, W., Zaussinger, F., Gruber,
    A.,

    et al. (2018). How much water is used for irrigation? A new approach exploiting

    coarse resolution satellite soil moisture products. Int. J. Appl. Earth Observation

    Geoinformation 73, 752–766. doi:10.1016/j.jag.2018.08.023

    Bwambale, E., Abagale, F. K., and Anornu, G. K. (2022). Smart irrigation

    monitoring and control strategies for improving water use efﬁciency in

    precision agriculture: A review. Agric. Water Manag. 260, 107324. doi:10.1016/j.

    agwat.2021.107324

    Camp, C. R., Sadler, E. J., Evans, D. E., Usrey, L. J., and Omary, M. (1998).

    Modiﬁed center pivot system for precision management of water and nutrients.

    Appl. Eng. Agric. 14, 23–31. doi:10.13031/2013.19362

    Camp, C. R., Sadler, J. E., and Evans, R. G. (2006). “Chap. Precision water

    management: Current realities, possibilities and trends,” in Handbook of precision

    agriculture. Editor A. Srinivasan (Binghamton, New York: Haworth Press),

    153–183.

    Capraro, F., Patino, D., Tosetti, S., and Schugurensky, C. (2008). “Neural

    network-based irrigation control for precision agriculture,” in 2008 IEEE

    International Conference on Networking, Sensing and Control, 357–362. doi:10.

    1109/ICNSC.2008.4525240

    Chávez, J. L., Pierce, F. J., Elliott, T. V., and Evans, R. G. (2009). A remote

    irrigation monitoring and control system for continuous move systems. Part a:

    Description and development. Precis. Agric. 11, 1–10. doi:10.1007/s11119-009-

    9109-1

    Chen, A., Orlov-Levin, V., and Meron, M. (2018). “Applying high-resolution

    visible-channel aerial scan of crop canopy to precision irrigation management,”
    in

    Proceedings of the 2nd International Electronic Conference on Remote Sensing,

    335. doi:10.3390/ecrs-2-051482

    Chen, H., Huang, J. J., and McBean, E. (2020). Partitioning of daily

    evapotranspiration using a modiﬁed shuttleworth-wallace model, random forest

    and support vector regression, for a cabbage farmland. Agric. Water Manag. 228,

    105923. doi:10.1016/j.agwat.2019.105923

    Chen, L., Zhangzhong, L., Zheng, W., Yu, J., Wang, Z., Wang, L., et al.

    (2019a). Data-driven calibration of soil moisture sensor considering impacts of

    temperature: A case study on FDR sensors. Sensors 19, 4381. doi:10.3390/

    s19204381

    Chen, S., Wang, S., Shukla, M. K., Wu, D., Guo, X., Li, D., et al. (2019b).

    Delineation of management zones and optimization of irrigation scheduling

    to improve irrigation water productivity and revenue in a farmland of

    northwest China. Precis. Agric. 21, 655–677. doi:10.1007/s11119-019-

    09688-0

    Conejero, W., Mellisho, C., Ortuño, M., Moriana, A., Moreno, F., and Torrecillas,

    A. (2011). Using trunk diameter sensors for regulated deﬁcit irrigation scheduling

    in early maturing peach trees. Environ. Exp. Bot. 71, 409–415. doi:10.1016/j.

    envexpbot.2011.02.014

    Cui, N., Du, T., Kang, S., Li, F., Zhang, J., Wang, M., et al. (2008). Regulated
    deﬁcit

    irrigation improved fruit quality and water use efﬁciency of pear-jujube trees.
    Agric.

    Water Manag. 95, 489–497. doi:10.1016/j.agwat.2007.11.007

    Cui, N., Du, T., Li, F., Tong, L., Kang, S., Wang, M., et al. (2009). Response
    of

    vegetative growth and fruit development to regulated deﬁcit irrigation at different

    growth stages of pear-jujube tree. Agric. Water Manag. 96, 1237–1246. doi:10.1016/

    j.agwat.2009.03.015

    De Benedetto, D., Castrignanò, A., and Quarto, R. (2013b). A geostatistical

    approach to estimate soil moisture as a function of geophysical data and soil

    attributes. Procedia Environ. Sci. 19, 436–445. doi:10.1016/j.proenv.2013.

    06.050

    De Benedetto, D., Castrignanò, A., Rinaldi, M., Ruggieri, S., Santoro, F., Figorito,

    B., et al. (2013a). An approach for delineating homogeneous zones by using multi-

    sensor data. Geoderma 199, 117–127. doi:10.1016/j.geoderma.2012.08.028

    de Lara, A., Khosla, R., and Longchamps, L. (2018). Characterizing spatial

    variability in soil water content for precision irrigation management. Agronomy

    8, 59. doi:10.3390/agronomy8050059

    Diago, M. P., Fernández-Novales, J., Gutiérrez, S., Marañón, M., and Tardaguila,

    J. (2018). Development and validation of a new methodology to assess the vineyard

    water status by on-the-go near infrared spectroscopy. Front. Plant Sci. 9, 59.
    doi:10.

    3389/fpls.2018.00059

    Frontiers in Control Engineering

    frontiersin.org

    13

    Owino and Söffker

    10.3389/fcteg.2022.982463

    Ding, J., and Chandra, R. (2019). “Towards low cost soil sensing using wi-ﬁ,”
    in

    The 25th Annual International Conference on Mobile Computing and Networking,

    Los Cabos, Mexico (New York, NY: ACM). doi:10.1145/3300061.3345440

    Dixon, H. H., and Joly, J. (1895). On the ascent of sap. Philosophical Trans.
    R. Soc.

    Lond. B 186, 563–576.

    Domínguez-Niño, J. M., Oliver-Manera, J., Girona, J., and Casadesús, J. (2020).

    Differential irrigation scheduling by an automated algorithm of water balance
    tuned

    by capacitance-type soil moisture sensors. Agric. Water Manag. 228, 105880. doi:10.

    1016/j.agwat.2019.105880

    Dusadeerungsikul, P. O., Nof, S. Y., Bechar, A., and Tao, Y. (2019). Collaborative

    control protocol for agricultural cyber-physical system. Procedia Manuf. 39,

    235–242. doi:10.1016/j.promfg.2020.01.330

    Egea, G., Muñiz, J., and Diaz-Espejo, A. (2017). Optimization of an automatic

    irrigation system for precision irrigation of blueberries grown in sandy soil.
    Adv.

    Animal Biosci. 8, 551–556. doi:10.1017/s204047001700005x

    Emmi, L., de Soto, M. G., Pajares, G., and de Santos, P. G. (2014). New trends
    in

    robotics for agriculture: Integration and assessment of a real ﬂeet of robots.
    Sci.

    World J., 1–21. doi:10.1155/2014/404059

    Entekhabi, D., Njoku, E. G., O’Neill, P. E., Kellogg, K. H., Crow, W. T., Edelstein,

    W. N., et al. (2010). The soil moisture active passive (SMAP) mission. Proc. IEEE
    98,

    704–716. doi:10.1109/jproc.2010.2043918

    European Commission, Directorate-General for Mobility and Transport (2019b).

    Commission delegated regulation (eu) 2019/945 of 12 march 2019 on unmanned

    aircraft systems and on third-country operators of unmanned aircraft systems.

    Ofﬁcial J. Eur. Union 62, 1–40.

    European Commission, Directorate-General for Mobility and Transport (2019a).

    Commission implementing regulation (eu) 2019/947 of 24 may 2019 on the rules

    and procedures for the operation of unmanned aircraft (text with eea relevance.).

    Ofﬁcial J. Eur. Union 62, 45–71.

    Farooque, A. A., Afzaal, H., Abbas, F., Bos, M., Maqsood, J., Wang, X., et al.
    (2021).

    Forecasting daily evapotranspiration using artiﬁcial neural networks for sustainable

    irrigation scheduling. Irrig. Sci. 40, 55–69. doi:10.1007/s00271-021-00751-1

    Fernández, J. (2017). Plant-based methods for irrigation scheduling of woody

    crops. Horticulturae 3, 35. doi:10.3390/horticulturae3020035

    Fontanet, M., Scudiero, E., Skaggs, T. H., Fernàndez-Garcia, D., Ferrer, F.,

    Rodrigo, G., et al. (2020). Dynamic management zones for irrigation scheduling.

    Agric. Water Manag. 238, 106207. doi:10.1016/j.agwat.2020.106207

    Fourati, M. A., Chebbi, W., and Kamoun, A. (2014). “Development of a web-

    based weather station for irrigation scheduling,” IEEE international colloquium
    in

    information science and technology. (CIST IEEE). doi:10.1109/cist.2014.7016591

    Gao, Z., Zhu, Y., Liu, C., Qian, H., Cao, W., and Ni, J. (2018). Design and test
    of a

    soil proﬁle moisture sensor based on sensitive soil layers. Sensors 18, 1648.
    doi:10.

    3390/s18051648

    Gealy, D. V., McKinley, S., Guo, M., Miller, L., Vougioukas, S., Viers, J., et
    al.

    (2016). “Date: A handheld co-robotic device for automated tuning of emitters to

    enable precision irrigation,” in IEEE International Conference on Automation

    Science and Engineering, Fort Worth, TX (Piscataway, NJ: IEEE), 922–927. doi:10.

    1109/COASE.2016.7743501

    Goap, A., Sharma, D., Shukla, A., and Krishna, C. R. (2018). An IoT based smart

    irrigation management

    system using machine learning and open source

    technologies. Comput. Electron. Agric. 155, 41–49. doi:10.1016/j.compag.2018.

    09.040

    Gobbo, P., , Panunzi, M., and Berti, M. (2019). Integrating SEBAL with in-ﬁeld

    crop water status measurement for precision irrigation applications—A case study.

    Remote Sens. 11, 2069. doi:10.3390/rs11172069

    González-Briones, A., Castellanos-Garzón, J. A., Mezquita-Martín, Y., Prieto,
    J.,

    and Corchado, J. M. (2019). “A multi-agent system framework for autonomous

    crop irrigation,” in 2019 2nd International Conference on Computer Applications

    Information Security (ICCAIS), 1–6. doi:10.1109/CAIS.2019.8769456

    Gonzalez-Dugo, V., Goldhamer, D., Zarco-Tejada, P. J., and Fereres, E. (2014).

    Improving the precision of irrigation in a pistachio farm using an unmanned

    airborne thermal system. Irrig. Sci. 33, 43–52. doi:10.1007/s00271-014-0447-z

    Gonzalez-Dugo, V., Zarco-Tejada, P., Nicolás, E., Nortes, P. A., Alarcón, J. J.,

    Intrigliolo, D. S., et al. (2013). Using high resolution UAV thermal imagery to
    assess

    the variability in the water status of ﬁve fruit tree species within a commercial

    orchard. Precis. Agric. 14, 660–678. doi:10.1007/s11119-013-9322-9

    González-Teruel, J., Torres-Sánchez, R., Blaya-Ros, P., Toledo-Moreo, A.,

    Jiménez-Buendía, M., and Soto-Valles, F. (2019). Design and calibration of a

    low-cost SDI-12 soil moisture sensor. Sensors 19, 491. doi:10.3390/s19030491

    Gordin, L. C., de Almeida, C. D. G. C., Júnior, J. A. S., de França e Silva, Ê.
    F.,

    Almeida, A. C. D. S., and da Silva, G. S. N. (2019). Irrigation scheduling techniques

    and irrigation frequency on capsicum growth and yield. DYNA 86, 42–48. doi:10.

    15446/dyna.v86n211.77678

    Goumopoulos, C., O’Flynn, B., and Kameas, A. (2014). Automated zone-speciﬁc

    irrigation with wireless sensor/actuator network and adaptable decision support.

    Comput. Electron. Agric. 105, 20–33. doi:10.1016/j.compag.2014.03.012

    Grassi, R., Rea, P., Ottaviano, E., and Maggiore, P. (2017). “Application of an

    inspection robot composed by collaborative terrestrial and aerial modules for
    an

    operation in agriculture,” in Advances in service and industrial robotics (Springer

    International Publishing), 539–546. doi:10.1007/978-3-319-61276-8_56

    Grenfell, B. P., Hunt, A. S., Hogarth, D. G., and Milne, J. G. (1900). Fayûm towns

    and their papyri. London: Egypt: exploration fund: Graeco-Roman branch.

    Gu, Z., Zhu, T., Jiao, X., Xu, J., and Qi, Z. (2021). Neural network soil moisture

    model for irrigation scheduling. Comput. Electron. Agric. 180, 105801. doi:10.1016/

    j.compag.2020.105801

    Gutiérrez, S., Diago, M. P., Fernández-Novales, J., and Tardaguila, J. (2018).

    Vineyard water status assessment using on-the-go thermal imaging and machine

    learning. PLOS ONE 13, e0192037. doi:10.1371/journal.pone.0192037

    Hagenvoort, J., Ortega-Reig, M., Botella, S., García, C., de Luis, A., and Palau-

    Salvador, G. (2019). Reusing treated waste-water from a circular economy

    perspective—The case of the real acequia de moncada in valencia (Spain).

    Water 11, 1830. doi:10.3390/w11091830

    Haghverdi, A., Leib, B. G., Washington-Allen, R. A., Ayers, P. D., and

    Buschermohle, M. J. (2015). Perspectives on delineating management zones for

    variable rate irrigation. Comput. Electron. Agric. 117, 154–167. doi:10.1016/j.

    compag.2015.06.019

    Han, L., Wang, C., Liu, Q., Wang, G., Yu, T., Gu, X., et al. (2020). Soil moisture

    mapping based on multi-source fusion of optical, near-infrared, thermal infrared,

    and digital elevation model data via the bayesian maximum entropy framework.

    Remote Sens. 12, 3916. doi:10.3390/rs12233916

    Han, Y. J., Khalilian, A., Owino, T. O., Farahani, H. J., and Moore, S. (2009).

    Development of clemson variable-rate lateral irrigation system. Comput. Electron.

    Agric. 68, 108–113. doi:10.1016/j.compag.2009.05.002

    Hargreaves, G. H., and Samani, Z. A. (1985). Reference crop evapotranspiration

    from temperature. Appl. Eng. Agric. 1, 96–99. doi:10.13031/2013.26773

    Hedley, C. B., and Yule, I. J. (2009b). Soil water status mapping and two

    variable-rate irrigation scenarios. Precis. Agric. 10, 342–355. doi:10.1007/s11119-

    009-9119-z

    Hedley, C., Roudier, P., Yule, I., Ekanayake, J., and Bradbury, S. (2013). Soil

    water status and water table depth modelling using electromagnetic surveys for

    precision irrigation scheduling. Geoderma 199, 22–29. doi:10.1016/j.geoderma.

    2012.07.018

    Hedley, C., and Yule, I. (2009a). A method for spatial prediction of daily soil
    water

    status for precise irrigation scheduling. Agric. Water Manag. 96, 1737–1745. doi:10.

    1016/j.agwat.2009.07.009

    Helman, D., Bahat, I., Netzer, Y., Ben-Gal, A., Alchanatis, V., Peeters, A., et
    al.

    (2018). Using time series of high-resolution planet satellite images to monitor

    grapevine stem water potential in commercial vineyards. Remote Sens. 10, 1615.

    doi:10.3390/rs10101615

    Hendrawan, Y., and Murase, H. (2009). Precision irrigation for sunagoke moss

    production using intelligent image analysis. Environ. Control Biol. 47, 21–36.
    doi:10.

    2525/ecb.47.21

    Hinnell, A. C., Lazarovitch, N., Furman, A., Poulton, M., and Warrick, A. W. (2010).

    Neuro-drip: Estimation of subsurface wetting patterns for drip irrigation using
    neural

    networks. Irrig. Sci. 28, 535–544. doi:10.1007/s00271-010-0214-8

    Hoogenboom, G., Porter, C. H., Boote, K. J., Shelia, V., Wilkens, P. W., Singh,
    U.,

    et al. (2019). “The DSSAT crop modeling ecosystem,” in Advances in crop modelling

    for a sustainable agriculture (Cambridge: Burleigh Dodds Science Publishing),

    173–216. doi:10.19103/as.2019.0061.10

    Hunt, R., and Nicholls, A. O. (1986). Stress and the coarse control of growth
    and

    root-shoot partitioning in herbaceous plants. Oikos 47, 149. doi:10.2307/3566039

    Hurley, P. (2005). The air pollution model (TAPM) version 3. Aspendale,

    VictoriaCSIRO Atmospheric Research.

    Idso, S., Jackson, R., Pinter, P., Reginato, R., and Hatﬁeld, J. (1981). Normalizing

    the stress-degree-day parameter for environmental variability. Agric. Meteorol.
    24,

    45–55. doi:10.1016/0002-1571(81)90032-7

    Incrocci, L., Incrocci, G., di Vita, A., Pardossi, A., Bibbiani, C., Marzialetti,
    P., et al.

    (2014). Scheduling irrigation in heterogeneous container nursery crops. Acta

    Hortic. 193, 193–200. doi:10.17660/actahortic.2014.1034.23

    Isern, D., Abelló, S., and Moreno, A. (2012). Development of a multi-agent system

    simulation platform for irrigation scheduling with case studies for garden irrigation.

    Comput. Electron. Agric. 87, 1–13. doi:10.1016/j.compag.2012.04.007

    Frontiers in Control Engineering

    frontiersin.org

    14

    Owino and Söffker

    10.3389/fcteg.2022.982463

    Işık, M., Sönmez, Y., Yılmaz, C., Özdemir, V., and Yılmaz, E. (2017). Precision

    irrigation system (PIS) using sensor network technology integrated with IOS/

    android application. Appl. Sci. 7, 891. doi:10.3390/app7090891

    Jackson, R. D., Idso, S. B., Reginato, R. J., and Pinter, P. J. (1981). Canopy

    temperature as a crop water stress indicator. Water Resour. Res. 17, 1133–1138.

    doi:10.1029/wr017i004p01133

    Jafari, S., Barenji, R. V., and Hashemipour, M. (2013). Towards an automated

    guided vehicle (AGV) in sprinkler irrigation. Int. J. Environ. Sci. Dev. 456,
    456–460.

    doi:10.7763/ijesd.2013.v4.393

    Jägermeyr, J., Gerten, D., Heinke, J., Schaphoff, S., Kummu, M., and Lucht, W.

    (2015). Water savings potentials of irrigation systems: Global simulation of processes

    and linkages. Hydrol. Earth Syst. Sci. 19, 3073–3091. doi:10.5194/hess-19-3073-2015

    Javadi, S. H., Guerrero, A., and Mouazen, A. M. (2022). Clustering and smoothing

    pipeline for management zone delineation using proximal and remote sensing.

    Sensors 22, 645. doi:10.3390/s22020645

    Jiang, Q., Fu, Q., and Wang, Z. (2011). “Study on delineation of irrigation

    management zones based on management zone analyst software,” in Computer and

    computing technologies in agriculture IV (Springer Berlin Heidelberg), 419–427.

    doi:10.1007/978-3-642-18354-6_50

    Jihin, R., Kögler, F., and Söffker, D. (2019). “Data driven state machine model
    for

    industry 4.0 lifetime modeling and identiﬁcation of irrigation control parameters,”

    in 2019 global IoT summit (GIoTS), 1–6. doi:10.1109/GIOTS.2019.8766393

    Jimenez, A.-F., Ortiz, B. V., Bondesan, L., Morata, G., and Damianidis, D. (2020).
    Long

    short-term memory neural network for irrigation management: A case study from

    southern Alabama, USA. Precis. Agric. 22, 475–492. doi:10.1007/s11119-020-09753-z

    Jimenez, A. F., Herrera, E. F., Ortiz, B. V., Ruiz, A., and Cardenas, P. F. (2018).

    “Inference system for irrigation scheduling with an intelligent agent,” in Advances

    in intelligent systems and computing (Springer International Publishing), 1–20.

    doi:10.1007/978-3-030-04447-3_1

    Jones, H. G. (2004). Irrigation scheduling: Advantages and pitfalls of plant-based

    methods. J. Exp. Bot. 55, 2427–2436. doi:10.1093/jxb/erh213

    Kang, M., and Wang, F.-Y. (2017). From parallel plants to smart plants:

    Intelligent control and management for plant growth. IEEE/CAA J. Autom. Sin.

    4, 161–166. doi:10.1109/jas.2017.7510487

    Katsoulas, N., Elvanidi, A., Ferentinos, K. P., Kacira, M., Bartzanas, T., and
    Kittas, C.

    (2016). Crop reﬂectance monitoring as a tool for water stress detection in greenhouses:

    A review. Biosyst. Eng. 151, 374–398. doi:10.1016/j.biosystemseng.2016.10.003

    Kerr, Y. H., Waldteufel, P., Wigneron, J.-P., Delwart, S., Cabot, F., Boutin,
    J., et al.

    (2010). The SMOS mission: New tool for monitoring key elements ofthe global

    water cycle. Proc. IEEE 98, 666–687. doi:10.1109/jproc.2010.2043032

    Kizer, E., Ko-Madden, C., Drechsler, K., Meyers, J., Jiang, C., de S. Santos,
    R., et al.

    (2018). Precision irrigation in almonds based on plant water status. Amaz. Jour.

    Plant Resear. 2, 113–116. doi:10.26545/ajpr.2018.b00015x

    Klein, L. J., Hamann, H. F., Hinds, N., Guha, S., Sanchez, L., Sams, B., et al.
    (2018).

    Closed loop controlled precision irrigation sensor network. IEEE Internet Things
    J.

    5, 4580–4588. doi:10.1109/jiot.2018.2865527

    Kögler, F., and Söffker, D. (2020). State-based open-loop control of plant growth

    by means of water stress training. Agric. Water Manag. 230, 105963. doi:10.1016/j.

    agwat.2019.105963

    Kögler, F., and Söffker, D. (2017). Water (stress) models and deﬁcit irrigation:

    System-theoretical description and causality mapping. Ecol. Model. 361, 135–156.

    doi:10.1016/j.ecolmodel.2017.07.031

    Kojima, Y., Shigeta, R., Miyamoto, N., Shirahama, Y., Nishioka, K., Mizoguchi,

    M., et al. (2016). Low-cost soil moisture proﬁle probe using thin-ﬁlm capacitors
    and

    a capacitive touch sensor. Sensors 16, 1292. doi:10.3390/s16081292

    LaPotin, A., Zhong, Y., Zhang, L., Zhao, L., Leroy, A., Kim, H., et al. (2021).
    Dual-

    stage atmospheric water harvesting device for scalable solar-driven water

    production. Joule 5, 166–182. doi:10.1016/j.joule.2020.09.008

    Liakos, V., Vellidis, G., Tucker, M., Lowrance, C., and Liang, X. (2015). “A

    decision support tool for managing precision irrigation with center pivots,” in

    Precision agriculture ’15 (Wageningen Academic Publishers), 677–684. doi:10.3920/

    978-90-8686-814-8_84

    Liang, Z., Liu, X., Xiong, J., and Xiao, J. (2020). Water allocation and integrative

    management of precision irrigation: A systematic review. Water 12, 3135. doi:10.

    3390/w12113135

    Linker, R., Sylaios, G., Tsakmakis, I., Ramos, T., Simionesei, L., Plauborg, F.,
    et al.

    (2018). Sub-optimal model-based deﬁcit irrigation scheduling with realistic weather

    forecasts. Irrig. Sci. 36, 349–362. doi:10.1007/s00271-018-0592-x

    Lipan, L., Martín-Palomo, M. J., Sánchez-Rodríguez, L., Cano-Lamadrid, M., Sendra,

    E., Hernández, F., et al. (2019). Almond fruit quality can be improved by means
    of deﬁcit

    irrigation strategies. Agric. Water Manag. 217, 236–242. doi:10.1016/j.agwat.2019.02.041

    Liu, Z., and Xu, Q. (2018). Precision irrigation scheduling using ECH2O moisture

    sensors for lettuce cultivated in a soilless substrate culture. Water 10, 549.
    doi:10.

    3390/w10050549

    Livellara, N., Saavedra, F., and Salgado, E. (2011). Plant based indicators for

    irrigation scheduling in young cherry trees. Agric. Water Manag. 98, 684–690.

    doi:10.1016/j.agwat.2010.11.005

    López-Riquelme, J., Pavón-Pulido, N., Navarro-Hellín, H., Soto-Valles, F., and
    Torres-

    Sánchez, R. (2017). A software architecture based on FIWARE cloud for precision

    agriculture. Agric. Water Manag. 183, 123–135. doi:10.1016/j.agwat.2016.10.020

    Lorite, I. J., Ramírez-Cuesta, J. M., Cruz-Blanco, M., and Santos, C. (2015).
    Using

    weather forecast data for irrigation scheduling under semi-arid conditions. Irrig.
    Sci.

    33, 411–427. doi:10.1007/s00271-015-0478-0

    Lou, Y., Miao, Y., Wang, Z., Wang, L., Li, J., Zhang, C., et al. (2016).

    Establishment of the soil water potential threshold to trigger irrigation of

    kyoho grapevines based on berry expansion, photosynthetic rate and

    photosynthetic product allocation. Aust. J. Grape Wine Res. 22, 316–323.

    doi:10.1111/ajgw.12208

    Lozoya, C., Favela-Contreras, A., Aguilar-Gonzalez, A., and Orona, L. (2019).
    A

    precision irrigation model using hybrid automata. Trans. ASABE 62, 1639–1650.

    doi:10.13031/trans.13357

    Lozoya, C., Mendoza, C., Aguilar, A., Román, A., and Castelló, R. (2016). Sensor-

    based model driven control strategy for precision irrigation. J. Sensors 2016,
    1–12.

    doi:10.1155/2016/9784071

    Lu, H., Shi, W., Guo, Y., Guan, W., Lei, C., and Yu, G. (2022). Materials

    engineering for atmospheric water harvesting: Progress and perspectives. Adv.

    Mater. 34, 2110079. doi:10.1002/adma.202110079

    Ma, L., Qi, Z., Shen, Y., He, L., Xu, S., Kisekka, I., et al. (2017). Optimizing
    et-

    based irrigation scheduling for wheat and maize with water constraints. Trans.

    ASABE 60, 2053–2065. doi:10.13031/trans.12363

    Marsland, S. (2014). Machine learning. Taylor & Francis.

    Martens, B., Miralles, D. G., Lievens, H., van der Schalie, R., de Jeu, R. A.
    M.,

    Fernández-Prieto, D., et al. (2017). GLEAM v3: Satellite-based land evaporation
    and root-

    zone soil moisture. Geosci. Model Dev. 10, 1903–1925. doi:10.5194/gmd-10-1903-2017

    Martínez, J., Egea, G., Agüera, J., and Pérez-Ruiz, M. (2016). A cost-effective

    canopy temperature measurement system for precision agriculture: A case study
    on

    sugar beet. Precis. Agric. 18, 95–110. doi:10.1007/s11119-016-9470-9

    Martínez-Fernández, J., González-Zamora, A., Sánchez, N., Gumuzzio, A., and

    Herrero-Jiménez, C. (2016). Satellite soil moisture for agricultural drought

    monitoring: Assessment of the SMOS derived soil water deﬁcit index. Remote

    Sens. Environ. 177, 277–286. doi:10.1016/j.rse.2016.02.064

    Martínez-Gimeno, M. A., Castiella, M., Rüger, S., Intrigliolo, D. S., and Ballester,

    C.

    (2016).

    Evaluating the usefulness of

    continuous

    leaf

    turgor

    pressure

    measurements for the assessment of persimmon tree water status. Irrig. Sci. 35,

    159–167. doi:10.1007/s00271-016-0527-3

    Mateo-Aroca, A., García-Mateos, G., Ruiz-Canales, A., Molina-García-Pardo, J.
    M.,

    and Molina-Martínez, J. M. (2019). Remote image capture system to improve aerial

    supervision for precision irrigation in agriculture. Water 11, 255. doi:10.3390/w11020255

    Matese, A., Baraldi, R., Berton, A., Cesaraccio, C., Gennaro, S. D., Duce, P.,
    et al.

    (2018). Estimation of water stress in grapevines using proximal and remote sensing

    methods. Remote Sens. 10, 114. doi:10.3390/rs10010114

    McCann, I. R., King, B. A., and Stark, J. C. (1997). Variable rate water and

    chemical application for continuous-move sprinkler irrigation systems. Appl. Eng.

    Agric. 13, 609–615. doi:10.13031/2013.21649

    Meng, Z., Duan, A., Chen, D., Dassanayake, K. B., Wang, X., Liu, Z., et al. (2017).

    Suitable indicators using stem diameter variation-derived indices to monitor the

    water status of greenhouse tomato plants. PLOS ONE 12, e0171423. doi:10.1371/

    journal.pone.0171423

    Meron, M., Tsipris, J., Orlov, V., Alchanatis, V., and Cohen, Y. (2010). Crop
    water

    stress mapping for site-speciﬁc irrigation by thermal imagery and artiﬁcial reference

    surfaces. Precis. Agric. 11, 148–162. doi:10.1007/s11119-009-9153-x

    Mezouari, A. E., Najib, M., and Fazziki, A. E. (2020). “Towards a smart irrigation

    scheduling system through massive data and predictive models,” in Advances in

    intelligent systems and computing (Springer International Publishing), 375–384.

    doi:10.1007/978-3-030-36664-3_42

    Mirás-Avalos, J. M., Pérez-Sarmiento, F., Alcobendas, R., Alarcón, J. J., Mounzer,

    O., and Nicolás, E. (2016). Using midday stem water potential for scheduling deﬁcit

    irrigation in mid–late maturing peach trees under mediterranean conditions. Irrig.

    Sci. 34, 161–173. doi:10.1007/s00271-016-0493-9

    Moral, F., Terrón, J., and da Silva, J. M. (2010). Delineation of management zones

    using mobile measurements of soil apparent electrical conductivity and multivariate

    geostatistical techniques. Soil Tillage Res. 106, 335–343. doi:10.1016/j.still.2009.

    12.002

    Frontiers in Control Engineering

    frontiersin.org

    15

    Owino and Söffker

    10.3389/fcteg.2022.982463

    Morales, R., Lozoya, C., Mendoza, C., Aguilar, A., Román, A., and Castelló, R.

    (2016). Sensor-based model driven control strategy for precision irrigation.

    J. Sensors 2016, 9784071–9784112. doi:10.1155/2016/9784071

    Morillo, J. G., Martín, M., Camacho, E., Díaz, J. A. R., and Montesinos, P. (2015).

    Toward precision irrigation for intensive strawberry cultivation. Agric. Water

    Manag. 151, 43–51. doi:10.1016/j.agwat.2014.09.021

    Mulla, D., and Khosla, R. (2015). “Historical evolution and recent advances in

    precision farming,” in Advances in soil science (Boca Raton, FLCRC Press), 1–36.

    doi:10.1201/b18759-2

    Müller, V. C. (2020). “Ethics of artiﬁcial intelligence and robotics,” in The

    stanford encyclopedia of philosophy. Editor E. N. Zalta. edn (Metaphysics

    Research Lab, Stanford University). Summer 2020.

    Munir, M. S., Bajwa, I. S., Naeem, M. A., and Ramzan, B. (2018). Design and

    implementation of an IoT system for smart energy consumption and smart

    irrigation in tunnel farming. Energies 11, 3427. doi:10.3390/en11123427

    Murthy, A., Green, C., Stoleru, R., Bhunia, S., Swanson, C., and Chaspari, T.

    (2019). “Machine learning-based irrigation control optimization,” in Proceedings
    of

    the 6th ACM International Conference on Systems for Energy-Efﬁcient Buildings,

    Cities, and Transportation (ACM). doi:10.1145/3360322.3360854

    Nagahage, E. A. A. D., Nagahage, I. S. P., and Fujino, T. (2019). Calibration
    and

    validation of a low-cost capacitive moisture sensor to integrate the automated
    soil

    moisture monitoring system. Agriculture 9, 141. doi:10.3390/agriculture9070141

    Nahar, J., Liu, S., Mao, Y., Liu, J., and Shah, S. L. (2019). Closed-loop scheduling

    and control for precision irrigation. Ind. Eng. Chem. Res. 58, 11485–11497. doi:10.

    1021/acs.iecr.8b06184

    Nahry, A. E., Ali, R., and Baroudy, A. E. (2011). An approach for precision

    farming under pivot irrigation system using remote sensing and GIS techniques.

    Agric. Water Manag. 98, 517–531. doi:10.1016/j.agwat.2010.09.012

    Neupane, J., and Guo, W. (2019). Agronomic basis and strategies for precision

    water management: A review. Agronomy 9, 87. doi:10.3390/agronomy9020087

    Niu, J., Zhang, S., Liu, S., Ma, H., Chen, J., Shen, Q., et al. (2018). The

    compensation effects of physiology and yield in cotton after drought stress.

    J. Plant Physiology 224-225, 30–48. doi:10.1016/j.jplph.2018.03.001

    Nocco, M. A., Zipper, S. C., Booth, E. G., Cummings, C. R., Loheide, S. P., and

    Kucharik, C. J. (2019). Combining evapotranspiration and soil apparent electrical

    conductivity mapping to identify potential precision irrigation beneﬁts. Remote

    Sens. 11, 2460. doi:10.3390/rs11212460

    Oates, M. J., González, M. G., Ruiz-Canales, A., Molina-Martínez, J. M., and de

    León, A. L. V. (2016). “Automatic fault detection in a low cost fdr based soil

    moisture sensor,” in Il Simposio Nacional de Ingeniería Hortícola Automatización

    y Tics en Agricultura (Almería: Sociedad Espan^ola de Ciencias Horticolas),

    107–111.

    Ofori, S., Puškáčová, A., Růžičková, I., and Wanner, J. (2021). Treated wastewater

    reuse for irrigation: Pros and cons. Sci. Total Environ. 760, 144026. doi:10.1016/j.

    scitotenv.2020.144026

    Ohana-Levi, N., Bahat, I., Peeters, A., Shtein, A., Netzer, Y., Cohen, Y., et
    al.

    (2019). A weighted multivariate spatial clustering model to determine irrigation

    management zones. Comput. Electron. Agric. 162, 719–731. doi:10.1016/j.compag.

    2019.05.012

    Oldoni, H., and Bassoi, L. H. (2016). Delineation of irrigation management zones

    in a quartzipsamment of the brazilian semiarid region. Pesq. Agropec. Bras. 51,

    1283–1294. doi:10.1590/s0100-204x2016000900028

    Ortuani, B., Sona, G., Ronchetti, G., Mayer, A., and Facchi, A. (2019). Integrating

    geophysical and multispectral data to delineate homogeneous management zones

    within a vineyard in northern Italy. Sensors 19, 3974. doi:10.3390/s19183974

    O’Shaughnessy, S. A., Evett, S. R., Colaizzi, P. D., and Howell, T. A. (2012b).
    A

    crop water stress index and time threshold for automatic irrigation scheduling
    of

    grain sorghum. Agric. Water Manag. 107, 122–132. doi:10.1016/j.agwat.2012.

    01.018

    O’Shaughnessy, S. A., Evett, S. R., Colaizzi, P. D., and Howell, T. A. (2012a).

    “Automating prescription map building for vri systems using plant feedback,” in

    Irrigation Association Conference ProceedingsOrlando, Florida.

    Osroosh, Y., Peters, R. T., Campbell, C. S., and Zhang, Q. (2015). Automatic

    irrigation scheduling of apple trees using theoretical crop water stress index
    with an

    innovative dynamic threshold. Comput. Electron. Agric. 118, 193–203. doi:10.1016/

    j.compag.2015.09.006

    Oubelkacem, A., Scardigno, A., and Choukr-Allah, R. (2020). Treated wastewater

    reuse on citrus in Morocco: Assessing the economic feasibility of irrigation and

    nutrient management strategies. Integr. Environ. Assess. Manag. 16, 898–909.

    doi:10.1002/ieam.4314

    Pelosi, A., Chirico, G. B., Bolognesi, S. F., De Michele, C., and D’Urso, G. (2019).

    “Forecasting crop evapotranspiration under standard conditions in precision

    farming,” in 2019 IEEE International Workshop on Metrology for Agriculture

    and Forestry (MetroAgriFor), 174–179. doi:10.1109/MetroAgriFor.2019.8909263

    Peng, J., Loew, A., Merlin, O., and Verhoest, N. E. C. (2017). A review of spatial

    downscaling of satellite remotely sensed soil moisture. Rev. Geophys. 55, 341–366.

    doi:10.1002/2016rg000543

    Pereira, L., Paredes, P., and Jovanovic, N. (2020). Soil water balance models
    for

    determining crop water and irrigation requirements and irrigation scheduling

    focusing on the FAO56 method and the dual kc approach. Agric. Water Manag.

    241, 106357. doi:10.1016/j.agwat.2020.106357

    Pérez-Pastor, A., Ruiz-Sánchez, M. C., Martínez, J. A., Nortes, P. A., Artés,
    F., and

    Domingo, R. (2007). Effect of deﬁcit irrigation on apricot fruit quality at harvest
    and

    during storage. J. Sci. Food Agric. 87, 2409–2415. doi:10.1002/jsfa.2905

    Plaščak, I., Jurišić, M., Radočaj, D., Vujić, M., and Zimmer, D. (2021). An

    overview of precision irrigation systems used in agriculture. Teh. Glas. 15, 546–553.

    doi:10.31803/tg-20210416103500

    Pôças, I., Tosin, R., Gonçalves, I., and Cunha, M. (2020). Toward a

    generalized predictive model of grapevine water status in douro region

    from hyperspectral data. Agric. For. Meteorology 280, 107793. doi:10.1016/j.

    agrformet.2019.107793

    Potena, C., Khanna, R., Nieto, J., Siegwart, R., Nardi, D., and Pretto, A. (2019).

    AgriColMap: Aerial-ground collaborative 3d mapping for precision farming. IEEE

    Robot. Autom. Lett. 4, 1085–1092. doi:10.1109/lra.2019.2894468

    Qinglan, S., Yujiao, S., Xiaochen, L., Shuli, M., and Lei, F. (2020). A high-

    sensitivity multilayer soil moisture monitoring sensor based on a double high-

    frequency

    tuning

    detection

    circuit.

    Int.

    J.

    Distributed

    Sens.

    Netw.

    16,

    155014772090782. doi:10.1177/1550147720907826

    Raikar, M. M., Desai, P., Kanthi, N., and Bawoor, S. (2018). “Blend of cloud and

    internet of things (iot) in agriculture sector using lightweight protocol,” in

    2018 International Conference on Advances in Computing, Communications

    and Informatics, Bangalore, India (Piscataway, NJ: IEEE), 185–190. doi:10.1109/

    ICACCI.2018.8554406

    Rizzo, L., Gernjak, W., Krzeminski, P., Malato, S., McArdell, C. S., Perez, J.
    A. S.,

    et al. (2020). Best available technologies and treatment trains to address current

    challenges in urban wastewater reuse for irrigation of crops in EU countries.
    Sci.

    Total Environ. 710, 136312. doi:10.1016/j.scitotenv.2019.136312

    Robinson, T., Lakso, A., Lordan, J., Francescatto, P., Dragoni, D., DeGaetano,
    A.,

    et al. (2017). Precision irrigation management of apple with an apple-speciﬁc
    penman-

    monteith model. Acta Hortic. 245, 245–250. doi:10.17660/actahortic.2017.1150.34

    Rodriguez-Dominguez, C., Hernandez-Santana, V., Buckley, T., Fernández, J.,

    and Diaz-Espejo, A. (2019). Sensitivity of olive leaf turgor to air vapour pressure

    deﬁcit correlates with diurnal maximum stomatal conductance. Agric. For.

    Meteorology 272-273, 156–165. doi:10.1016/j.agrformet.2019.04.006

    Rojo, F., Kizer, E., Upadhyaya, S., Ozmen, S., Ko-Madden, C., and Zhang, Q.

    (2016). A leaf monitoring system for continuous measurement of plant water status

    to assist in precision irrigation in grape and almond crops. IFAC-PapersOnLine
    49,

    209–215. doi:10.1016/j.ifacol.2016.10.039

    Romero, R., Muriel, J., García, I., and de la Peña, D. M. (2012). Research on

    automatic irrigation control: State of the art and recent results. Agric. Water
    Manag.

    114, 59–66. doi:10.1016/j.agwat.2012.06.026

    Roopaei, M., Rad, P., and Choo, K. R. (2017). Cloud of things in smart agriculture:

    Intelligent irrigation monitoring by thermal imaging. IEEE Cloud Comput. 4, 10–15.

    doi:10.1109/MCC.2017.5

    Rosa, L., Chiarelli, D. D., Sangiorgio, M., Beltran-Peña, A. A., Rulli, M. C.,
    D’Odorico,

    P., et al. (2020). Potential for sustainable irrigation expansion in a 3 °c warmer
    climate.

    Proc. Natl. Acad. Sci. U. S. A. 117, 29526–29534. doi:10.1073/pnas.2017796117

    Roy, P. C., Guber, A., Abouali, M., Nejadhashemi, A. P., Deb, K., and Smucker,
    A.

    J. M. (2019). “Simulation optimization of water usage and crop yield using precision

    irrigation,”

    in

    Evolutionary

    multi-criterion

    optimization.

    Editors

    K.

    Deb,

    E. Goodman, C. A. Coello Coello, K. Klamroth, K. Miettinen, S. Mostaghim,

    et al. (Cham: Springer International Publishing), 695–706.

    Roy, S. (2014). “Feedback control of soil moisture in precision-agriculture

    systems: Incorporating stochastic weather forecasts,” in 2014 American Control

    Conference, 2694–2698. doi:10.1109/ACC.2014.6858834

    Ruiz-Sánchez, M. C., Abrisqueta, I., Conejero, W., and Vera, J. (2018). “Deﬁcit

    irrigation management in early-maturing peach crop,” in Water scarcity and

    sustainable agriculture in semiarid environment (Elsevier), 111–129. doi:10.1016/

    b978-0-12-813164-0.00006-5

    Sadler, E., Evans, R., Stone, K., and Camp, C. (2005). Opportunities for

    conservation with precision irrigation. J. Soil Water Conservation 60, 371–378.

    Saeed, I. A., Qinglan, S., Wang, M., Butt, S. L., Zheng, L., Tuan, V. N., et al.
    (2019).

    Development of a low-cost multi-depth real-time soil moisture sensor using time
    division

    multiplexing approach. IEEE Access 7, 19688–19697. doi:10.1109/access.2019.2893680

    Frontiers in Control Engineering

    frontiersin.org

    16

    Owino and Söffker

    10.3389/fcteg.2022.982463

    Sánchez-Blanco, M., Ortuño, M., Bañon, S., and Álvarez, S. (2019). Deﬁcit

    irrigation as a strategy to control growth in ornamental plants and enhance

    their ability to adapt to drought conditions. J. Hortic. Sci. Biotechnol. 94,

    137–150. doi:10.1080/14620316.2019.1570353

    Sapna Pattanaik, K., and Trivedi, A. (2020). A dynamic distributed boundary

    node detection algorithm for management zone delineation in precision agriculture.

    J. Netw. Comput. Appl. 167, 102712. doi:10.1016/j.jnca.2020.102712

    Scudiero, E., Teatini, P., Manoli, G., Braga, F., Skaggs, T., and Morari, F. (2018).

    Workﬂow to establish time-speciﬁc zones in precision agriculture by spatiotemporal

    integrationofplantand soilsensing data.Agronomy8,253.doi:10.3390/agronomy8110253

    Seelig, H.-D., Stoner, R. J., and Linden, J. C. (2011). Irrigation control of
    cowpea

    plants using the measurement of leaf thickness under greenhouse conditions. Irrig.

    Sci. 30, 247–257. doi:10.1007/s00271-011-0268-2

    Serrano, J., Shahidian, S., da Silva, J. M., Paixão, L., Moral, F., Carmona-Cabezas,
    R.,

    et al. (2020). Mapping management zones based on soil apparent electrical conductivity

    and remote sensing for implementation of variable rate irrigation—Case study of
    corn

    under a center pivot. Water 12, 3427. doi:10.3390/w12123427

    Sidhu, R. K., Kumar, R., and Rana, P. S. (2020). Machine learning based crop

    water demand forecasting using minimum climatological data. Multimedia Tools

    Appl. 79. doi:10.1007/s11042-019-08533-w

    Smith, R. J., Baillie, J., McCarthy, A., Raine, S., and Baillie, C. (2010). Review
    of

    precision irrigation technologies and their application. Darling Heights, Queensland:

    Australian National Centre for Engineering in Agriculture.

    Smith, R. J., and Baillie, J. N. (2009). “Deﬁning precision irrigation: A new

    approach to irrigation management,” in Irrigation Australia 2009: Irrigation

    Australia Irrigation and Drainage Conference: Irrigation Today - Meeting the

    Challenge (Australia: Swan Hill).

    Song, X., Zhang, G., Liu, F., Li, D., Zhao, Y., and Yang, J. (2016). Modeling
    spatio-

    temporal distribution of soil moisture by deep learning-based cellular automata

    model. J. Arid. Land 8, 734–748. doi:10.1007/s40333-016-0049-0

    Steduto, P., Hsiao, T. C., Raes, D., and Fereres, E. (2009). AquaCrop-the FAO

    crop model to simulate yield response to water: I. Concepts and underlying

    principles. Agron. J. 101, 426–437. doi:10.2134/agronj2008.0139s

    Termite, L. F., Garinei, A., Marini, A., Marconi, M., and Biondi, L. (2019). “Combining

    satellite data and machine learning techniques for irrigation decision support
    systems,” in

    2019 IEEE International Workshop on Metrology for Agriculture and Forestry

    (Piscataway, NJ: IEEE), 291–296. doi:10.1109/MetroAgriFor.2019.8909279

    Thayer, T. C., Vougioukas, S., Goldberg, K., and Carpin, S. (2018). “Routing algorithms

    for robot assisted precision irrigation,” in 2018 IEEE International Conference
    on

    Robotics and Automation (ICRA), 2221–2228. doi:10.1109/ICRA.2018.8461242

    Tsakmakis, I., Kokkos, N., Pisinaras, V., Papaevangelou, V., Hatzigiannakis, E.,

    Arampatzis, G., et al. (2016). Operational precise irrigation for cotton cultivation

    through the coupling of meteorological and crop growth models. Water Resour.

    manage. 31, 563–580. doi:10.1007/s11269-016-1548-7

    Tseng, D., Wang, D., Chen, C., Miller, L., Song, W., Viers, J., et al. (2018).

    “Towards automating precision irrigation: Deep learning to infer local soil moisture

    conditions from synthetic aerial agricultural images,” in 2018 IEEE 14th

    International Conference on Automation Science and Engineering, Munich,

    Germany (Piscataway, NJ: IEEE), 284–291. doi:10.1109/COASE.2018.8560431

    Tu, Y., Wang, R., Zhang, Y., and Wang, J. (2018). Progress and expectation of

    atmospheric water harvesting. Joule 2, 1452–1475. doi:10.1016/j.joule.2018.07.015

    Tung, K.-C., Tsai, C.-Y., Hsu, H.-C., Chang, Y.-H., Chang, C.-H., and Chen, S.

    (2018). Evaluation of water potentials of leafy vegetables using hyperspectral

    imaging. IFAC-PapersOnLine 51, 5–9. doi:10.1016/j.ifacol.2018.08.052

    Umar, L., and Setiadi, R. N. (2015). Low cost soil sensor based on impedance spectroscopy

    for in-situ measurement. Melville, NY: AIP Publishing LLC. doi:10.1063/1.4917112

    Veihmeyer, F. J., and Hendrickson, A. H. (1931). The moisture equivalent as a

    measure of the ﬁeld capacity of soils. Soil Sci. 32, 181–194. doi:10.1097/00010694-

    193109000-00003

    Vaishali, S., Suraj, S., Vignesh, G., Dhivya, S., and Udhayakumar, S. (2017).
    “Mobile

    integrated smart irrigation management and monitoring system using iot,” in

    2017 International Conference on Communication and Signal Processing, Wuhan,

    China (Piscataway, NJ: IEEE), 2164–2167. doi:10.1109/ICCSP.2017.8286792

    van Dijk, M., Morley, T., Rau, M. L., and Saghai, Y. (2021). A meta-analysis of

    projected global food demand and population at risk of hunger for the period

    2010–2050. Nat. Food 2, 494–501. doi:10.1038/s43016-021-00322-9

    Vasisht, D., Kapetanovic, Z., Won, J., Jin, X., Chandra, R., Kapoor, A., et al.

    (2017). “Farmbeats: An iot platform for data-driven agriculture,” in Proceedings
    of

    the 14th USENIX Symposium on Networked Systems Design and Implementation,

    Boston, MA, USA (Berkeley, CA: USENIX), 515–529.

    Venturi, M., Manfrini, L., Perulli, G. D., Boini, A., Bresilla, K., Grappadelli,
    L. C.,

    et al. (2021). Deﬁcit irrigation as a tool to optimize fruit quality in abbé fetél
    pear.

    Agronomy 11, 1141. doi:10.3390/agronomy11061141

    Vera, J., Conejero, W., Conesa, M., and Ruiz-Sánchez, M. (2019). Irrigation factor

    approach based on soil water content: A nectarine orchard case study. Water 11,

    589. doi:10.3390/w11030589

    Villarrubia, G., Paz, J. F. D., Iglesia, D. H. D. L., and Bajo, J. (2017). Combining

    multi-agent systems and wireless sensor networks for monitoring crop irrigation.

    Sensors 17, 1775. doi:10.3390/s17081775

    Wada, Y., Wisser, D., Eisner, S., Flörke, M., Gerten, D., Haddeland, I., et al.

    (2013). Multimodel projections and uncertainties of irrigation water demand under

    climate change. Geophys. Res. Lett. 40, 4626–4632. doi:10.1002/grl.50686

    Wanyama, T., and Far, B. (2017). Multi-agent system for irrigation using fuzzy

    logic algorithm and open platform communication data access. doi:10.5281/

    ZENODO.1130676

    Wei, Y., Wang, Z., Wang, T., and Liu, K. (2013). Design of real time soil moisture

    monitoring and precision irrigation systems. Nongye Gongcheng Xuebao/Transactions

    Chin. Soc. Agric. Eng. 29, 80–86. doi:10.3969/j.issn.1002-6819.2013.17.011

    Westermann, W. L. (1919). The development of the irrigation system of Egypt.

    Class. Philol. 14, 158–164. doi:10.1086/360222

    Xiao, K., Xiao, D., and Luo, X. (2010). Smart water-saving irrigation system in

    precision agriculture based on wireless sensor network. Trans. Chin. Soc. Agric.
    Eng.

    26, 170–175.

    Xu, C., Qu, J. J., Hao, X., Cosh, M. H., Zhu, Z., and Gutenberg, L. (2020).

    Monitoring crop water content for corn and soybean ﬁelds through data fusion of

    MODIS and landsat measurements in Iowa. Agric. Water Manag. 227, 105844.

    doi:10.1016/j.agwat.2019.105844

    Zaryouli, M., Fathi, M. T., and Ezziyyani, M. (2020). “Data collection based on

    multi-agent modeling for intelligent and precision farming in lokoss region

    Morocco,” in 2020 1st International Conference on Innovative Research in

    Applied Science, Engineering and Technology (IRASET), 1–6. doi:10.1109/

    IRASET48871.2020.9092214

    Zegbe-Domínguez, J., Behboudian, M., Lang, A., and Clothier, B. (2003). Deﬁcit

    irrigation and partial rootzone drying maintain fruit dry mass and enhance fruit

    quality in ‘petopride’ processing tomato (lycopersicon esculentum, mill.). Sci.

    Hortic. 98, 505–510. doi:10.1016/S0304-4238(03)00036-0

    Zhang, P., Zhang, Q., Liu, F., Li, J., Cao, N., and Song, C. (2017). “The

    construction of the integration of water and fertilizer smart water saving

    irrigation system based on big data,” in 22017 IEEE International Conference

    on Computational Science and Engineering (CSE) and IEEE International

    Conference on Embedded and Ubiquitous Computing (EUC IEEE). doi:10.1109/

    cse-euc.2017.258

    Zhang, X., Shi, L., Jia, X., Seielstad, G., and Helgason, C. (2009). Zone mapping

    application for precision-farming: A decision support tool for variable rate

    application. Precis. Agric. 11, 103–114. doi:10.1007/s11119-009-9130-4

    Zhao, T., Chen, Y., Ray, A., and Doll, D. (2017a). “Quantifying almond water

    stress using unmanned aerial vehicles (UAVs): Correlation of stem water potential

    and higher order moments of non-normalized canopy distribution,” in 13th ASME/

    IEEE International Conference on Mechatronic and Embedded Systems and

    Applications (American Society of Mechanical Engineers ASME). doi:10.1115/

    detc2017-68246

    Zhao, W., Li, J., Yang, R., and Li, Y. (2017b). Determining placement criteria
    of

    moisture sensors through temporal stability analysis of soil water contents for
    a

    variable rate irrigation system. Precis. Agric. 19, 648–665. doi:10.1007/s11119-017-

    9545-2

    Zhao, Y., Bai, C., and Zhao, B. (2007). “An automatic control system of precision

    irrigation for city greenbelt,” in 2007 2nd IEEE Conference on Industrial Electronics

    and Applications, 2013–2017. doi:10.1109/ICIEA.2007.4318763

    Zhu, Q., Luo, Y., Xu, Y.-P., Tian, Y., and Yang, T. (2019). Satellite soil moisture

    for agricultural drought monitoring: Assessment of SMAP-derived soil water

    deﬁcit index in Xiang river basin, China. Remote Sens. 11, 362. doi:10.3390/

    rs11030362

    Vu, Q., Nguyen, V., Solenaya, O., Ronzhin, A., and Guzey, H. M. (2017).

    Algorithms for joint operation of service robotic platform and set of uavs in

    agriculture tasks. In 2017 5th IEEE Workshop on Advances in Information,

    Electronic and Electrical Engineering (AIEEE). 1–6. doi:10.1109/AIEEE2017.

    8270525

    Frontiers in Control Engineering

    frontiersin.org

    17

    Owino and Söffker

    10.3389/fcteg.2022.982463

    '
  inline_citation: '>'
  journal: Frontiers in control engineering
  limitations: '>'
  pdf_link: https://www.frontiersin.org/articles/10.3389/fcteg.2022.982463/pdf
  publication_year: 2022
  relevance_score1: 0
  relevance_score2: 0
  title: 'How much is enough in watering plants? State-of-the-art in irrigation control:
    Advances, challenges, and opportunities with respect to precision irrigation'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.22214/ijraset.2023.54997
  analysis: '>'
  authors:
  - . Selsiya
  citation_count: 0
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: 'Soil Sensors as a Service: Low-Cost Soil Diagnostics System using IoT'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.18297/etd/4029
  analysis: '>'
  authors:
  - Muhammad Zaigham Abbas Shah Syed
  citation_count: 0
  full_citation: '>'
  full_text: ">\nUniversity of Louisville \nUniversity of Louisville \nThinkIR: The\
    \ University of Louisville's Institutional Repository \nThinkIR: The University\
    \ of Louisville's Institutional Repository \nElectronic Theses and Dissertations\
    \ \n12-2022 \nIoT in smart communities, technologies and applications. \nIoT in\
    \ smart communities, technologies and applications. \nMuhammad Zaigham Abbas Shah\
    \ Syed \nUniversity of Louisville \nFollow this and additional works at: https://ir.library.louisville.edu/etd\
    \ \n Part of the Other Computer Engineering Commons \nRecommended Citation \n\
    Recommended Citation \nSyed, Muhammad Zaigham Abbas Shah, \"IoT in smart communities,\
    \ technologies and applications.\" \n(2022). Electronic Theses and Dissertations.\
    \ Paper 4029. \nhttps://doi.org/10.18297/etd/4029 \nThis Doctoral Dissertation\
    \ is brought to you for free and open access by ThinkIR: The University of Louisville's\
    \ \nInstitutional Repository. It has been accepted for inclusion in Electronic\
    \ Theses and Dissertations by an authorized \nadministrator of ThinkIR: The University\
    \ of Louisville's Institutional Repository. This title appears here courtesy of\
    \ \nthe author, who has retained all other copyrights. For more information, please\
    \ contact thinkir@louisville.edu. \nIOT IN SMART COMMUNITIES, TECHNOLOGIES AND\
    \ APPLICATIONS\nBy\nMuhammad Zaigham Abbas Shah Syed\nB.Eng., M.Sc.\nA Dissertation\n\
    Submitted to the Faculty of the\nJ.B. Speed School of Engineering of the University\
    \ of\nLouisville\nin Partial Fulfillment of the Requirements\nfor the Degree of\n\
    Doctor of Philosophy\nin Computer Science and Engineering\nDepartment of Computer\
    \ Science and Engineering\nUniversity of Louisville\nLouisville, Kentucky\nDecember\
    \ 2022\nCopyright 2022 by Muhammad Zaigham Abbas Shah Syed\nAll rights reserved\n\
    IOT IN SMART COMMUNITIES, TECHNOLOGIES AND APPLICATIONS\nBy\nMuhammad Zaigham\
    \ Abbas Shah Syed\nB.Eng., M.Sc.\nDissertation approved on\nNovember 8, 2022\n\
    by the following dissertation Committee:\nDissertation Director\nDr. Adel S. Elmaghraby\n\
    Dr. Daniel Sierrasosa\nDr. Anup Kumar\nDr. Ibrahim Imam\nDr. Monica Gentili\n\
    \    ii\nDEDICATION\nTo my late grandmother, Shireen Shah who always championed\
    \ the im-\nportance of education and personal values. She has had the biggest\
    \ impact\non the person that I have become.\nTo my parents, who worked hard to\
    \ provide us with the best opportunities\nthat can be provided to any child.\n\
    iii\nACKNOWLEDGMENTS\nI would like to thank my supervisor, Dr. Adel Elmaghraby\
    \ for his sup-\nport and guidance throughout the course of my research work here\
    \ at the\nUniversity of Louisville. Without his support and trust I would not\
    \ have\nbeen able to succeed in this endeavor.\nI would also like to thank Dr.\
    \ Anup Kumar and Dr. Daniel Sierra-Sosa\nfor their support in conducting my research\
    \ and providing feedback on\nour experiments which helped improve the quality\
    \ of the work.\nI would like to thank all my friends, both in the United States\
    \ and else-\nwhere who have been a tremendous support to me during my time in\n\
    Louisville. They were like a family away from home.\nFinally, I would like to\
    \ say thanks to my family, who have supported me\nthroughout think and thin. First\
    \ and foremost my parents, my mother\nNaheed and father Sher Muhammad. They through\
    \ their hard work and\ndetermination left no stone unturned to provide us with\
    \ the best upbring-\ning anyone can provide to their children. My wife Farwa,\
    \ who has always\nbeen a pillar of support for me. My siblings, Zafi, Shehram\
    \ and Fiza who\nhave been the best brothers and sister anyone can ask for. My\
    \ sisters in\nlaw, Madiha and Hina and my lovely niece Maryam, who is a cause\
    \ of\nmuch joy in our life.\niv\nABSTRACT\nIOT IN SMART COMMUNITIES, TECHNOLOGIES\
    \ AND APPLICATIONS\nMuhammad Zaigham Abbas Shah, Syed\nNovember 8, 2022\nInternet\
    \ of Things is a system that integrates different devices and technologies,\n\
    removing the necessity of human intervention. This enables the capacity of having\n\
    smart (or smarter) cities around the world. By hosting different technologies\
    \ and al-\nlowing interactions between them, the internet of things has spearheaded\
    \ the develop-\nment of smart city systems for sustainable living, increased comfort\
    \ and productivity\nfor citizens. The Internet of Things (IoT) for Smart Cities\
    \ has many different domains\nand draws upon various underlying systems for its\
    \ operation, in this work, we provide\na holistic coverage of the Internet of\
    \ Things in Smart Cities by discussing the fun-\ndamental components that make\
    \ up the IoT Smart City landscape, the technologies\nthat enable these domains\
    \ to exist, the most prevalent practices and techniques which\nare used in these\
    \ domains as well as the challenges that deployment of IoT systems for\nsmart\
    \ cities encounter and which need to be addressed for ubiquitous use of smart\
    \ city\napplications. It also presents a coverage of optimization methods and\
    \ applications\nfrom a smart city perspective enabled by the Internet of Things.\
    \ Towards this end,\na mapping is provided for the most encountered applications\
    \ of computational opti-\nmization within IoT smart cities for five popular optimization\
    \ methods, ant colony\noptimization, genetic algorithm, particle swarm optimization,\
    \ artificial bee colony op-\ntimization and differential evolution. For each application\
    \ identified, the algorithms\nused, objectives considered, the nature of the formulation\
    \ and constraints taken in\nv\nto account have been specified and discussed. Lastly,\
    \ the data setup used by each\ncovered work is also mentioned and directions for\
    \ future work have been identified.\nWithin the smart health domain of IoT smart\
    \ cities, human activity recognition\nhas been a key study topic in the development\
    \ of cyber physical systems and as-\nsisted living applications. In particular,\
    \ inertial sensor based systems have become\nincreasingly popular because they\
    \ do not restrict users’ movement and are also rel-\natively simple to implement\
    \ compared to other approaches. Fall detection is one of\nthe most important tasks\
    \ in human activity recognition. With an increasingly aging\nworld population\
    \ and an inclination by the elderly to live alone, the need to incor-\nporate\
    \ dependable fall detection schemes in smart devices such as phones, watches\n\
    has gained momentum. Therefore, differentiating between falls and activities of\
    \ daily\nliving (ADLs) has been the focus of researchers in recent years with\
    \ very good results.\nHowever, one aspect within fall detection that has not been\
    \ investigated much is di-\nrection and severity aware fall detection. Since a\
    \ fall detection system aims to detect\nfalls in people and notify medical personnel,\
    \ it could be of added value to health pro-\nfessionals tending to a patient suffering\
    \ from a fall to know the nature of the accident.\nIn this regard, as a case study\
    \ for smart health, four different experiments have been\nconducted for the task\
    \ of fall detection with direction and severity consideration on\ntwo publicly\
    \ available datasets. These four experiments not only tackle the problem\non an\
    \ increasingly complicated level (the first one considers a fall only scenario\
    \ and\nthe other two a combined activity of daily living and fall scenario) but\
    \ also present\nmethodologies which outperform the state of the art techniques\
    \ as discussed. Lastly,\nfuture recommendation have also been provided for researchers.\n\
    vi\nTABLE OF CONTENTS\nMotivation . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n1\nAims . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n2\nOrganization\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n2\nIOT SMART CITIES\n. . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3\nSmart\
    \ City Components . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . . . .\n4\n\
    2.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . . . .\n5\n2.4\n\
    Smart Health . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.5\nSmart\
    \ Home . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.6\nSmart\
    \ Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n6\n2.7\nSmart\
    \ Infrastructure . . . . . . . . . . . . . . . . . . . . . . .\n7\n2.8\nSmart\
    \ Transport\n. . . . . . . . . . . . . . . . . . . . . . . . .\n7\nInternet of\
    \ Things for Smart Cities . . . . . . . . . . . . . . . . . . . . . .\n7\n3.1\n\
    IoT Architectures for Smart cities . . . . . . . . . . . . . . . .\n8\n3.1.1\n\
    Cloud Computing Model . . . . . . . . . . . . . . . .\n9\n3.1.2\nFog Computing\
    \ Model . . . . . . . . . . . . . . . . .\n9\n3.1.3\nEdge Computing Model . .\
    \ . . . . . . . . . . . . . .\n10\n3.2\nIoT Challenges for smart Cities . . .\
    \ . . . . . . . . . . . . . .\n11\n3.2.1\nSecurity and Privacy . . . . . . . .\
    \ . . . . . . . . . .\n12\n3.2.2\nSmart Sensors . . . . . . . . . . . . . . .\
    \ . . . . . . .\n13\n3.2.3\nNetworking . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n13\n3.2.4\nBig Data Analytics . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3\nSensing Technologies . . . . . . . . . . . . . . . . . . . . . . .\n\
    14\n3.3.1\nAmbient Sensors . . . . . . . . . . . . . . . . . . . .\n15\n3.3.2\n\
    Bio-Sensors . . . . . . . . . . . . . . . . . . . . . . .\n15\nvii\nDedication\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    iii\nAcknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\niv\nAbstract . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\nv\nList of Tables . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\nxi\nList of Figures\n. . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . .\nxiii\nINTRODUCTION\
    \ AND DISSERTATION OVERVIEW\n. . . . . . . . . . . .\n1\n3.3.3\nChemical\n. .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n16\n3.3.4\nElectric Sensors . .\
    \ . . . . . . . . . . . . . . . . . . .\n16\n3.3.5\nHydraulic . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n16\n3.3.6\nIdentification . . . . . . . . .\
    \ . . . . . . . . . . . . .\n17\n3.3.7\nMotion Sensors . . . . . . . . . . . .\
    \ . . . . . . . . .\n17\n3.3.8\nPresence . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n17\n3.3.9\nOther Sensors . . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4\nNetworking Technologies . . . . . . . . . . . . . . . . . .\
    \ . . .\n17\n3.4.1\nNetwork Topologies\n. . . . . . . . . . . . . . . . . .\n\
    18\n3.4.2\nNetwork Architectures . . . . . . . . . . . . . . . . .\n19\n3.4.3\n\
    Network Protocols . . . . . . . . . . . . . . . . . . .\n20\n3.5\nSecurity and\
    \ Privacy in Smart City IoT . . . . . . . . . . . . .\n23\n3.5.1\nApplication\
    \ Software Layers\n. . . . . . . . . . . . .\n24\n3.5.2\nNetwork Layer\n. . .\
    \ . . . . . . . . . . . . . . . . . .\n25\n3.5.3\nPerception Layer . . . . . .\
    \ . . . . . . . . . . . . . .\n27\n3.5.4\nSystem Wide Issues\n. . . . . . . .\
    \ . . . . . . . . . .\n27\nSWOT Analysis . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n28\n4.1\nStrengths\n. . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n29\n4.2\nWeaknesses\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .\n30\n4.3\nOpportunities . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .\n30\n4.4\nThreats\n. . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n30\nConclusions . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n31\nAI IN IOT SMART CITIES .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n32\nBig Data\
    \ Algorithms/Artificial Intelligence . . . . . . . . . . . . . . . . . .\n32\n\
    2.1\nMachine Learning . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    2.2\nDeep Learning . . . . . . . . . . . . . . . . . . . . . . . . . . .\n33\n\
    AI Applications for Smart Cities\n. . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.1\nSmart Agriculture . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n33\n3.2\nSmart City Services . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n34\n3.3\nSmart Energy . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n36\n3.4\nSmart Health . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n38\n3.5\nSmart Homes . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n40\n3.6\nSmart Industry . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n41\n3.7\nSmart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\n3.8\nSmart Transport\n. . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n43\nConclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . .\n46\nOPTIMIZATION IN IOT SMART CITIES\n. . . . . . . . . . .\
    \ . . . . . . . .\n49\nIntroduction . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n49\nOptimization and Heuristics in IoT Smart Cities\
    \ . . . . . . . . . . . . . . .\n49\nMeheuristic Algorithms . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n50\n3.1\nAnt Colony Optimization\n\
    . . . . . . . . . . . . . . . . . . . .\n50\n3.2\nGenetic Algorithm\n. . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n50\nviii\n3.3\nParticle Swarm Optimization\n\
    . . . . . . . . . . . . . . . . . .\n51\n3.4\nDifferential Evolution . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n52\n3.5\nArtificial Bee Colony . . . .\
    \ . . . . . . . . . . . . . . . . . . .\n52\nOptimization Applications in Smart\
    \ Cities . . . . . . . . . . . . . . . . . .\n53\n4.1\nSmart Agriculture . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .\n53\n4.2\nSmart City Services .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n55\n4.3\nSmart Grid\n. . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n57\n4.4\nSmart Health . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n60\n4.5\nSmart Homes . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n64\n4.6\nSmart Industry . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . .\n66\n4.7\nSmart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n69\n4.8\nSmart Transportation\n\
    . . . . . . . . . . . . . . . . . . . . . .\n71\nConclusion . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n73\nCASE STUDY - SMART\
    \ HEALTH . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIntroduction . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n76\nIoT for\
    \ Fall Detection\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    76\n2.1\nChallenges/Requirements of a FDS . . . . . . . . . . . . . . .\n77\n\
    2.1.1\nNon-intrusiveness . . . . . . . . . . . . . . . . . . . .\n77\n2.1.2\n\
    Low Latency\n. . . . . . . . . . . . . . . . . . . . . .\n77\n2.1.3\nLow power\
    \ consumption . . . . . . . . . . . . . . . .\n77\n2.1.4\nAllow mobility\n. .\
    \ . . . . . . . . . . . . . . . . . . .\n77\n2.1.5\nDifferentiate between Falls\
    \ and Activities\n. . . . . .\n77\n2.1.6\nNotify caregivers . . . . . . . . .\
    \ . . . . . . . . . . .\n78\n2.1.7\nTrack history . . . . . . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2\nTypes of Fall Detection Systems . . . . . . . . .\
    \ . . . . . . . .\n78\n2.2.1\nAmbient Sensor based systems\n. . . . . . . . .\
    \ . . .\n78\n2.2.2\nVision based systems . . . . . . . . . . . . . . . . . .\n\
    79\n2.2.3\nWearable Sensor based systems . . . . . . . . . . . .\n79\n2.3\nTypes\
    \ of Wearable FDS\n. . . . . . . . . . . . . . . . . . . . .\n80\n2.3.1\nThreshold\
    \ based systems . . . . . . . . . . . . . . . .\n80\n2.3.2\nMachine/Deep Learning\
    \ based systems . . . . . . . .\n80\n2.4\nSensors used in Wearable FDS . . . .\
    \ . . . . . . . . . . . . . .\n80\n2.4.1\nAccelerometers . . . . . . . . . . .\
    \ . . . . . . . . . .\n81\n2.4.2\nGryroscope . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n81\n2.4.3\nMagnetometer\n. . . . . . . . . . . . . . . . . . .\
    \ . .\n81\n2.4.4\nVarious Medical Sensors . . . . . . . . . . . . . . . .\n81\n\
    2.5\nDesign considerations for Wearable FDS\n. . . . . . . . . . . .\n81\n2.5.1\n\
    Sampling frequency . . . . . . . . . . . . . . . . . . .\n82\n2.5.2\nWindowing\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n82\n2.5.3\nFeature Extraction\
    \ . . . . . . . . . . . . . . . . . . .\n82\n2.6\nLiterature Review . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n82\n2.7\nFall detection Datasets .\
    \ . . . . . . . . . . . . . . . . . . . . .\n89\n2.7.1\nSisFall Dataset . . .\
    \ . . . . . . . . . . . . . . . . . .\n89\n2.7.2\nK-Fall Dataset\n. . . . . .\
    \ . . . . . . . . . . . . . . .\n90\nix\n2.8\nExperiments . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n90\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration 91\n2.8.2\nFall Detection with Severity and Direction\
    \ along with\nADL consideration using Wavelet Pooling and K-NN\n101\n2.8.3\nFall\
    \ Detection with Severity and Direction along with\nADL consideration using CNN-XGBoost\
    \ . . . . . . .\n111\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-\n\
    attention network . . . . . . . . . . . . . . . . . . . .\n119\nConclusion . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n125\nCONCLUSION\
    \ AND FUTURE WORK . . . . . . . . . . . . . . . . . . . . .\n128\nConclusion .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n128\n\
    Contribution\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n128\nFuture Work\n. . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n129\nREFERENCES . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .\n131\nAppendix A: Sample Plots for different fall categories\
    \ . . . . . . . . . . . . . .\n174\nAppendix B: Acronyms\n. . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . .\n180\nCurriculum Vita. . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . 183\nx\nLIST OF TABLES\n\
    1\nComparison of Cloud, Fog and Edge Computing Models\n. . . . . . . . .\n11\n\
    2\nSmart City IoT Challenges and Mitigation . . . . . . . . . . . . . . . . .\n\
    15\n3\nSensing Technologies for IoT Smart Cities by Smart City Component . .\n\
    18\n4\nComparison of Network Technologies for IoT Smart Cities\n. . . . . . .\
    \ .\n22\n5\nSecurity and Privacy issue for IoT Smart Cities . . . . . . . . .\
    \ . . . . .\n28\n6\nSWOT Analysis for IoT in Smart Cities\n. . . . . . . . . .\
    \ . . . . . . . .\n29\n7\nAI use for Smart Agriculture . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .\n35\n8\nAI use for Smart city Services . . . . . .\
    \ . . . . . . . . . . . . . . . . . .\n37\n9\nAI use for Smart Energy . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . .\n38\n10\nAI use for Smart Health\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .\n39\n11\nAI use for Smart\
    \ Homes . . . . . . . . . . . . . . . . . . . . . . . . . . .\n42\n12\nAI use\
    \ for Smart Industry . . . . . . . . . . . . . . . . . . . . . . . . . .\n44\n\
    13\nAI use for Smart Infrastructure . . . . . . . . . . . . . . . . . . . . .\
    \ . .\n45\n14\nAI use for Smart Transport\n. . . . . . . . . . . . . . . . . .\
    \ . . . . . . .\n46\n15\nAI applications for IoT Smart Cities\n. . . . . . . .\
    \ . . . . . . . . . . . .\n48\n16\nOptimization in Smart Agriculture\n. . . .\
    \ . . . . . . . . . . . . . . . . .\n56\n17\nData setup used for Smart Agriculture\
    \ Optimization\n. . . . . . . . . . .\n56\n18\nOptimization in Smart City Services\n\
    . . . . . . . . . . . . . . . . . . . .\n58\n19\nData setup used for Smart City\
    \ Services Optimization\n. . . . . . . . . .\n58\n20\nOptimization in Smart Grid\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .\n61\n21\nData setup used for\
    \ Smart Grid . . . . . . . . . . . . . . . . . . . . . . .\n62\n22\nOptimization\
    \ in Smart Health . . . . . . . . . . . . . . . . . . . . . . . .\n63\n23\nData\
    \ setup used for Smart Health . . . . . . . . . . . . . . . . . . . . . .\n64\n\
    24\nOptimization in Smart Homes . . . . . . . . . . . . . . . . . . . . . . .\
    \ .\n67\n25\nData setup used for Smart Homes . . . . . . . . . . . . . . . . .\
    \ . . . . .\n67\n26\nOptimization in Smart Industry . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n68\n27\nData setup for Smart Industry . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n70\n28\nOptimization in Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . .\n71\n29\nData types for Smart Infrastructure\
    \ . . . . . . . . . . . . . . . . . . . . .\n71\n30\nOptimization in Smart Transportation\n\
    . . . . . . . . . . . . . . . . . . .\n74\n31\nData types for Smart Transportation\
    \ . . . . . . . . . . . . . . . . . . . .\n75\n32\nADL and Falls present in the\
    \ SisFall dataset. . . . . . . . . . . . . . . . .\n90\n33\nADL and Falls present\
    \ in the K-Fall dataset. . . . . . . . . . . . . . . . .\n91\n34\nLabeling used\
    \ for Fall only classification for the SisFall Dataset\n. . . . .\n92\n35\nFeatures\
    \ computed for each fall segment\n. . . . . . . . . . . . . . . . . .\n94\n36\n\
    Fall F1-scores (Fall direction only)\n. . . . . . . . . . . . . . . . . . . .\
    \ .\n99\n37\nFall F1-scores (Fall severity and direction) . . . . . . . . . .\
    \ . . . . . . .\n100\n38\nBest Results: Fall direction\n. . . . . . . . . . .\
    \ . . . . . . . . . . . . . .\n100\n39\nBest Results: Fall direction and Severity\
    \ . . . . . . . . . . . . . . . . . .\n101\nxi\n40\nADL Labels used for SisFall\
    \ Recordings. . . . . . . . . . . . . . . . . . .\n102\n41\nPerformance for different\
    \ observation window sizes. . . . . . . . . . . . .\n109\n42\nPerformance for\
    \ different sensing modalities. . . . . . . . . . . . . . . . .\n110\n43\nBest\
    \ Results (Obs. Window : 3 sec, Sensing Modality: Acc. + Gyro.) . .\n110\n44\n\
    One ADL vs. Individual Falls. . . . . . . . . . . . . . . . . . . . . . . . .\n\
    116\n45\nIndividual ADLs vs. Individual Falls. . . . . . . . . . . . . . . . .\
    \ . . . .\n116\n46\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n118\n47\nComparison with State of the art (Individual ADLs vs. Individual\
    \ Falls.)\n119\n48\nLabeling for K-Fall Dataset\n. . . . . . . . . . . . . . .\
    \ . . . . . . . . . .\n120\n49\nResults for SisFall: One ADL vs. Individual Falls\
    \ . . . . . . . . . . . . .\n122\n50\nResults for K-Fall: One ADL vs. Individual\
    \ Falls\n. . . . . . . . . . . . .\n122\n51\nResults for SisFall: Individual ADLs\
    \ vs. Individual Falls\n. . . . . . . . .\n123\n53\nComparison with State of the\
    \ art (Individual ADLs vs. Individual Falls.)\n125\n54\nComparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\n126\n55\nResults for the\
    \ four Experiments for the SisFall dataset (F1-Score[%]) . .\n126\nxii\nLIST OF\
    \ FIGURES\n1\nSmart City Components . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .\n5\n2\nIoT Architecture\n. . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .\n8\n3\nChallenges for IoT in Smart Cities. . . . . . .\
    \ . . . . . . . . . . . . . . .\n12\n4\nSensing Technologies for IoT Smart Cities.\
    \ . . . . . . . . . . . . . . . . .\n16\n5\nNetwork Technologies for IoT Smart\
    \ Cities.\n. . . . . . . . . . . . . . . .\n23\n6\nModified CERT Attack Taxonomy\
    \ for Smart Cities. . . . . . . . . . . . .\n24\n7\nAI for IoT Smart Cities. .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . .\n47\n8\nOptimization applications\
    \ in Smart Agriculture. . . . . . . . . . . . . . .\n54\n9\nOptimization applications\
    \ in Smart City Services. . . . . . . . . . . . . .\n57\n10\nOptimization applications\
    \ in Smart Grid. . . . . . . . . . . . . . . . . . .\n59\n11\nOptimization applications\
    \ in Smart Health.\n. . . . . . . . . . . . . . . .\n62\n12\nOptimization applications\
    \ in Smart Homes.\n. . . . . . . . . . . . . . . .\n64\n13\nOptimization applications\
    \ in Smart Industry. . . . . . . . . . . . . . . . .\n69\n14\nOptimization applications\
    \ in Smart Infrastructure.\n. . . . . . . . . . . .\n70\n15\nOptimization applications\
    \ in Smart Transportation . . . . . . . . . . . .\n72\n16\nOptimization applications\
    \ in IoT based Smart Cities. . . . . . . . . . . .\n75\n17\nFall Detection with\
    \ Direction and Severity. . . . . . . . . . . . . . . . . .\n93\n18\nHierarchical\
    \ classification scheme for ADL and Fall detection.\n. . . . . .\n103\n19\nSample\
    \ Wavelet (Mexican Hat). . . . . . . . . . . . . . . . . . . . . . . .\n104\n\
    20\nHaar Wavelet. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .\n105\n21\nExample: 4-2-1 1-D Spatial Pyramid Pooling. . . . . . . . .\
    \ . . . . . . .\n106\n22\nAverage F1-scores for each activity for the four classifiers.\n\
    . . . . . . . .\n108\n23\nCNN-XGBoost based classification scheme for ADL and\
    \ Fall detection. .\n112\n24\nIllustration of data augmentation. (X component\
    \ of Accelerometer, Lat-\neral Fall) . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .\n113\n25\nCNN Network for feature extraction and\
    \ XGBoost classification stage.\n.\n114\n26\nNetwork performance for different\
    \ fall directions.\n. . . . . . . . . . . . .\n117\n27\nNetwork performance for\
    \ different fall directions.\n. . . . . . . . . . . . .\n118\n28\nConvLSTM-attention\
    \ Network.\n. . . . . . . . . . . . . . . . . . . . . . .\n121\n29\nFall detection\
    \ performance for both experiments.\n. . . . . . . . . . . . .\n124\n30\nFall\
    \ severity performance.\n. . . . . . . . . . . . . . . . . . . . . . . . . .\n\
    124\n31\nFall direction performance. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .\n125\n1\nAccelerometer and Gyroscope measurements: Forward Hard Fall\
    \ . . . . .\n174\n2\nAccelerometer and Gyroscope measurements: Forward Soft Fall\n\
    . . . . .\n175\n3\nAccelerometer and Gyroscope measurements: Backward Hard Fall\
    \ . . . .\n176\n4\nAccelerometer and Gyroscope measurements:f Backward Soft Fall\
    \ . . . .\n177\n5\nAccelerometer and Gyroscope measurements: Lateral Hard Fall\n\
    . . . . .\n178\n6\nAcclerometer and Gyroscope measurements: Lateral Soft Fall\n\
    . . . . . .\n179\nxiii\nCHAPTER I\nINTRODUCTION AND DISSERTATION OVERVIEW\n1\n\
    Motivation\nThe world is experiencing a bulging world population and increasing\
    \ urbanization\nwhich is set to grow by more than 10% in the next 30 years [1]\
    \ resulting in a total\nof 70% living in cities by 2050. Countries around the\
    \ world are looking at equipping\ntheir cities to deal with the influx of people\
    \ and the stress it will bring to current\ncity systems [2]. This is to be performed\
    \ keeping in view the UN Sustainable De-\nvelopment Goals 2030 [3]. In this regard,\
    \ Smart Cities have come out as a major\ninitiative by various governments in\
    \ making cities more navigable and welcoming to\nthe expected population increase\
    \ and providing city dwellers a better living experi-\nence, as is evidenced by\
    \ the multiple projects ongoing on both the public and private\nlevel [4, 5, 6,\
    \ 7]. The Internet of Things (IoT) has been the prime enabler of smart\ncities\
    \ as it has provided the means in terms of sensors, architectures, storage and\n\
    other technologies to instrument cities. It allows stakeholders to gather data,\
    \ pro-\ncess it and then make decisions based on the analyses performed. There\
    \ are various\ndomains within smart cities, these include Smart Agriculture, Smart\
    \ City Services,\nSmart Grid, Smart Health, Smart Homes, Smart Industry, Smart\
    \ Infrastructure and\nSmart Transportation.With improvement of Artificial intelligence\
    \ (AI) capabilities\nin the last decade, there have been different applications\
    \ of machine learning (ML)\nand deep learning (DL) algorithms within each of these\
    \ domains providing for better\ndecision making and improvement of services. Apart\
    \ from various supervised and un-\nsupervised learning applications, several tasks\
    \ within different components of smart\ncities can be formulated into optimization\
    \ problems and/or require heuristics to be\nincorporated in some form. However,\
    \ in both such tasks, there is a dearth of an\noverall coverage of Smart City\
    \ IoT based ML/DL and combinatorial optimization\nproblems. Such a coverage would\
    \ be very beneficial to researchers starting in the\nfield and has been presented\
    \ herein.\nOne of the major applications of the IoT Smart Cities is for health\
    \ purposes.\nMany countries around the world, especially in the developed world\
    \ are facing an\naging population. With the retirement of the ’baby boomer’ generation,\
    \ countries\naround the world are facing a big question over caring for their\
    \ elderly population.\nOne of the major issues that elderly people face today\
    \ are falls [8]. In the US, falls\naccount for a majority of the deaths caused\
    \ by injury in population aged 65 and\nabove [9] and a fall related injury occurs\
    \ every 19 minutes [10]. As indicated in [11],\nfalls have been associated with\
    \ estimated medical costs ranging from $31.5 billion for\n2013 to $49.5 billion\
    \ for 2017. Moreover, Floerence et al. [12] notes that in 2018,\nfalls contributed\
    \ to 8% of Medicaid expenses in the US for older adults, consequently\n1\nfalls\
    \ have huge health as well as financial ramifications for people and governments.\n\
    Determining when a person has experienced a fall is therefore an important task\
    \ in\nthe healthcare of people, more so in the old age population who tend to\
    \ increasingly\nlive alone and are at increased risk of suffering from falls.\
    \ Apart from just detecting\nif a fall has occurred or not, the direction of a\
    \ fall is an important consideration\nas well. Bourke et al. [13] notes that even\
    \ though 60% of falls occurring in older\nadults are forward falls, falls occurring\
    \ sideways may result in fracture and thus\nare important to determine. Quick\
    \ dispatch of healthcare providers can result in\ntimely treatment of fall related\
    \ injuries, thereby reducing the overall impact to life\nand wealth. Additional\
    \ information about the fall could benefit the medical dispatch\nteam to help\
    \ decide emergency procedures which could be matched up with patient\nhistory\
    \ of potentially being injury prone in a certain part of the body. In light of\
    \ this\nall, the development of fall detection systems has been of keen interest\
    \ to researchers\nin the domain of human activity recognition, tele-medicine and\
    \ smart health.\n2\nAims\nCiting the importance of IoT usage in communities, the\
    \ aims of this dissertation are\nas follows:\n1. To provide a wholistic coverage\
    \ of IoT based Smart City system design consid-\nering important aspects such\
    \ as sensors, technologies used, IoT architectures,\nthe use of machine/deep learning\
    \ methods and optimization schemes as well as\nthe challenges.\n2. Considering\
    \ the case study of smart health and specifically fall detection, de-\nvelop methodologies\
    \ for detection of falls considering fall direction and severity.\n3\nOrganization\n\
    This dissertation is organized in to six chapters.\nChapter II presents a coverage\n\
    of the IoT for Smart Cities in terms of the technologies used, its architectures\
    \ and\nalso the challenges towards IoT usage in Smart Cities. Chapter III discusses\
    \ the the\napplications of machine and deep learning algorithms. This chapter\
    \ provides a com-\nprehensive discussion on IoT usage in Smart Cities by considering\
    \ the different types\nof systems devised for each application as well. Chapter\
    \ IV discusses the applications\nof optimization algorithms in IoT based smart\
    \ cities for five popular algorithms. It\nthus provides a coverage of optimization\
    \ applications under the IoT smart city um-\nbrella. Chapter V presents work on\
    \ a chosen case study of smart health based on\nIoT. The considered task is fall\
    \ detection with direction and severity consideration.\nFour experiments have\
    \ been performed in this regard considering three scenarios, one\nconsidering\
    \ falls only with direction and severity and two others considering falls and\n\
    activity of daily living (ADL) as a combined problem. The designed methodologies\n\
    have shown to outperform the state of the art as has been discussed in the chapter.\n\
    The conclusion and future work opportunities are discussed in chapter VI.\n2\n\
    CHAPTER II\nIOT SMART CITIES\n1\nIntroduction\nThis chapter provides an overeview\
    \ of the use of IoT in Smart Cities and discuss\nhow it facilitates such initiatives.\
    \ It starts by laying out the structure of Internet\nof Things in a Smart City\
    \ context, discussing its various applications, components\nand architectures\
    \ while also discussing the technologies used at the different levels of\nthe\
    \ IoT architecture. Lastly, a discussion of the technical challenges that exist\
    \ in the\ndeployment of IoT in the Smart City domain is provided along with identification\
    \ of\npotential solutions to those challenges followed by future directions.\n\
    It is hard to define a Smart City, in fact, cities claim to be ‘smart’ based on\
    \ a\nvariety of criteria, for e.g. implementing novel e-governance schemes, creating\
    \ so-\ncial learning ventures and community engagement programs, focusing on sustainable\n\
    living as well as the more typical application of Information and Communication\n\
    Technologies for innovation [14]. In this work, Smart Cities are defined to be\
    \ the ap-\nplication of various information and communication technologies (ICT)\
    \ with the aim\nof creating a better living experience for a city’s population.\
    \ This encompasses use\nof these technologies in all the domains discussed previously,\
    \ including governance,\ntransport, housing, business, sustainable living, social\
    \ learning, community engage-\nment, providing opportunities and more. In an ideal\
    \ sense, the idea of a smart city\ntranscends the typically set boundaries of\
    \ a traditional city’s administrative and so-\ncial structure by allowing interaction\
    \ between the two, thereby enabling it to operate\nin a more cohesive and engaged\
    \ manner. Smart cities offer several advantages (in\nterms of value) compared\
    \ to a traditional city ecosystem:\n1. Climate goal achievement: Smart cities\
    \ are at the forefront of pioneering tech-\nnologies to help enable countries\
    \ meet climate goals. Smart city focuses on\nsmart energy management, smart transportation\
    \ systems and city administra-\ntion which aim to reduce the carbon footprint\
    \ of cities and enable development\nand use of new technologies for cleaner living.\n\
    2. Money value: Smart City ventures will be a market of USD 1 Trillion by 2025\n\
    [15], this provides a huge monetary incentive for not only governments but\nprivate\
    \ companies to actively contribute to the development of technologies\nsupporting\
    \ smart city development.\n3. Societal impact: The centerpiece of the smart city\
    \ project is to improve the qual-\nity of life of a city’s inhabitants and help\
    \ develop an inclusive society wherein\nevery opinion is catered for and equal\
    \ opportunity is provided. Information and\n3\nCommunication Technologies in the\
    \ smart city context are a fundamental com-\nponent to the provision of public\
    \ services by facilitating interactions of citizens\nwith the city environment\
    \ and making life easier.\n2\nSmart City Components\nA smart city is made up of\
    \ several components which are illustrated in Figure 1.\nSmart city applications\
    \ typically have four aspects associated with them, the first is\nthe collection\
    \ of data, the next is its transmission/reception, third is the storage and\n\
    fourth is analysis. The collection of data is application dependent and has been\
    \ a real\ndriver for sensor development in the various domains. The second part\
    \ is the exchange\nof data, this involves data transmission from the data collection\
    \ units towards the\ncloud for storage and analysis.\nThis task has been achieved\
    \ in several manners,\nmany smart city ventures have city-wide Wi-Fi networks,\
    \ 4G and 5G technologies are\nbeing used, as well as various types of local networks\
    \ which can convey data either\non a local level or a global level. The third\
    \ stage is storage in the cloud, different\nstorage schemes are used to arrange\
    \ and organize data so as to make it usable for\nthe fourth stage which is data\
    \ analysis. Data Analysis refers to the extraction of\npatterns and inferences\
    \ from the gathered data to guide decision making. In some\nsituations, simple\
    \ analysis such as basic decision making and aggregating would work\ntoo. For\
    \ more complex decision making, the availability of the cloud allows not only\n\
    for heterogeneous data gathering/storage and processing but also analysis through\n\
    the use of statistical methods as well as machine and deep Learning algorithms\
    \ in\nreal-time [16].\n2.1\nSmart Agriculture\nFood security is one of the most\
    \ important parts of the United Nations Sustainable\nDevelopment goals for 2030.\
    \ With an increasing world population, worsening climate\nchange causing erratic\
    \ weather in food centers of the world, the race to ensure that\nfood production\
    \ is made sustainable and that dwindling resources such as water are\nutilized\
    \ efficiently has been a high priority for countries around the world. Smart\n\
    agriculture is the use of sensors embedded into plants and fields to measure various\n\
    parameters to help in decision making and prevent/diseases, pests etc [17]. A\
    \ part\nof the smart agriculture paradigm is precision agriculture, which involves\
    \ sensors\nbeing placed in plants to provide targeted measurements and therefore\
    \ allow for\ntargeted care mechanisms to be deployed. Precision agriculture will\
    \ be necessary\nfor food security in the future [18] and therefore is an essential\
    \ part of the fight for\nsustainable food production. The major applications of\
    \ AI in IoT for agriculture are\ncrop monitoring/disease detection and data driven\
    \ crop care and decision making.\n2.2\nSmart City Services\nSmart city services\
    \ encompass the activities that sustain a city’s population, these\ninvolve municipal\
    \ tasks such as supply of water, waste management, environmental\n4\nSmart \n\
    Energy\nSmart \nTransportation\nSmart \nAgriculture\nSmart \nInfrastructure\n\
    Smart  \nCity Services\nSmart Health\nSmart Homes\nSmart  Industry\nFigure 1.\
    \ Smart City Components\ncontrol and monitoring etc. Sensors for water quality\
    \ can be deployed to continually\nprovide an update about the quality of water\
    \ being used in the city and detect leaks\n[19]. One popular component of smart\
    \ city initiatives is the management of waste,\nand it has been the part of many\
    \ of the smart city initiatives mentioned earlier, from\nchutes in Barcelona to\
    \ having bins equipped with sensors and connected to the cloud\nso as to not only\
    \ inform the relevant authorities of the need to empty them but also\nusing AI\
    \ to determine the best route to reduce cost [20]. Sensors can also be used to\n\
    monitor the environmental conditions in a city to determine pollution levels [21]\
    \ and\nguiding citizens to the next free parking space to save fuel costs [22].\n\
    2.3\nSmart Energy\nTypical electrical systems have one-way energy flow from a\
    \ main generator source,\nusually a hydroelectric or fossil fuel based power plant.\
    \ Power generation is controlled\nvia feedback from the substations, however,\
    \ since there is no information feedback\nfrom the consumer end, the power generation\
    \ scheme used with these systems requires\nthat the power being produced by these\
    \ sources outstrips the demand by a large\namount to ensure continuous supply\
    \ of power. The process of detecting faults and\nperforming corrective actions\
    \ in such systems is also a time taking process. Moreover,\nwith renewable energy\
    \ technologies becoming cheaper, the consumer of today not\nonly has a supply\
    \ from the main utility but also performs their own generation.\nSmart Grids is\
    \ the use of ICT to make the current and newly installed grids more\nobservable,\
    \ allow for distributed energy generation, both at the consumer end as well\n\
    as the utility end and introduce self-healing capabilities in to the grid. One\
    \ aspect\n5\nof smart grids is that real time power data is transmitted to utilities\
    \ at different\npoints on the grid throughout the supply lines till the customer.\
    \ Since smart grids\nprovide real-time data about consumer usage, it allows for\
    \ better management of\npower generation using prediction models developed through\
    \ acquired consumption\ndata, integrating different energy sources as well as\
    \ self-healing [23] of the network\nto ensure an uninterrupted supply.\n2.4\n\
    Smart Health\nSmart Health refers to the use of ICT to improve health care availability\
    \ and quality.\nWith an increasing population and rising costs of healthcare,\
    \ this area has been of\nintense focus of researchers as well as healthcare providers.\
    \ Current health systems\nare over burdened and therefore cannot cater to the\
    \ increasing demand from the pop-\nulace. In this regard, smart health aims to\
    \ ensure that healthcare be available to as\nmany people as possible through telemedicine\
    \ services [24] and improved diagnosis\nassistance to doctors utilizing AI [25].\
    \ With the ubiquitousness of mobile phones\nand health trackers [26] that can\
    \ capture real-time data about peoples health (ECGs,\ntemperature, body oxygen\
    \ saturation and other biosensors) while also recording daily\nactivity and detecting\
    \ abnormal movements using inertial sensors, it has become pos-\nsible to leverage\
    \ cloud capabilities for processing this data to make better healthcare\ndecisions.\
    \ Thus reducing the overall costs as well as burden on healthcare facilities.\n\
    2.5\nSmart Home\nOne major component of Smart Cities is the Smart Home since it\
    \ is central to the\nlife of the city’s inhabitants. Smart Homes involve the use\
    \ of sensing units installed\nthroughout a person’s home that provide information\
    \ about the home as well as\nits occupants. These sensors might include user activity\
    \ monitors such as ambient\nsensors, motion trackers and power/energy consumption.\n\
    2.6\nSmart Industry\nIndustries around the world are busy in a continuous pursuance\
    \ of being more ef-\nficient and increasing productivity while reducing cost.\
    \ The industry 4.0 paradigm\nentails the vision of a connected factory where all\
    \ its intermediary functionaries are\nseamlessly integrated, working in tandem\
    \ with each other. This is made possible be-\ncause of the internet of things\
    \ [27]. The use of IoT in manufacturing and production\nprocesses, cyber physical\
    \ systems integrating workers and machines has led to several\nbenefits to the\
    \ industry such as faster and better innovation, optimization of manu-\nfacturing\
    \ schemes (resources and processes), better quality of products and enhanced\n\
    safety for factory workers. However, smart industries come with several challenges\n\
    for IoT usage, working with a set of heterogeneous devices and machines has its\
    \ own\nchallenges and requires cyber physical systems to have flexibility in configuration,\
    \ con-\nnectivity and quick implementation for use in IoT applications for Smart\
    \ Industry\n[28]. Artificial Intelligence has gone hand in hand with IoT to spur\
    \ the development\nand deployment of industry 4.0 services. With sensors being\
    \ embedded in machines\n6\nand other processes in the factory, data from these\
    \ sources provide an opportunity for\nusing AI techniques to increase automation,\
    \ perform business intelligence operations\nand more. In fact, researchers have\
    \ suggested frameworks for integrating AI within\nIoT for Smart Industry [28,\
    \ 29, 30]. The major applications of AI in the industry are\npredictive maintenance,\
    \ monitoring/fault detection (machine health) and production\nmanagement.\n2.7\n\
    Smart Infrastructure\nThe infrastructure of a city is paramount to its living\
    \ quality, city governments need\nto construct new bridges, roads and buildings\
    \ for the use of its inhabitants and also\nperform maintenance for uninterrupted\
    \ usage. Smart infrastructure helps cities in\nensuring their infrastructure is\
    \ in shape and usable by utilizing sensors for measuring\nbuilding/bridge structural\
    \ state for structural health monitoring using accelerome-\nters [31] and smart\
    \ materials [32]. Data collected through these sensors allows for\npredictive\
    \ maintenance of these essential units to maintain normal operation of the\ncity.\n\
    2.8\nSmart Transport\nMany urban centers suffer from traffic problems, this includes\
    \ congestion, pollution,\nscheduling and cost reduction issues for public transport.\
    \ The rapid development\nand implementation of new Information and Communication\
    \ Technologies, Vehicle-\nInfrastructure-Pedestrian communication has become commonplace.\
    \ Whether it be\nVehicle to Vehicle (V2V), Vehicle to Infrastructure (V2I), Vehicle\
    \ to Pedestrian (V2P)\nor Pedestrian to Infrastructure (P2I), such technologies\
    \ have made the design of smart\ntransportation systems possible. With cars having\
    \ a GPS device and the common-\nality of cellphones with every driver, many approaches\
    \ use GPS data to track driver\nbehavior and traffic patterns [33]. This real-time\
    \ data is already used for route map-\nping in applications such as Waze and Google\
    \ Maps and used for trip scheduling in\npublic transport. Parking systems equipped\
    \ with sensors can also guide drivers to\nthe nearest free parking spot.\n3\n\
    Internet of Things for Smart Cities\nAt the heart of the smart city initiatives\
    \ is the internet of things, it is the enabling\ntechnology that has allowed for\
    \ the pervasive digitization that gives rise to the con-\ncept of smart cities.\
    \ The internet of things refers to the ubiquitous connection of\ndevices to the\
    \ internet, allowing them to send information to the cloud and poten-\ntially\
    \ get directions for performing actions. IoT involves the collection of data and\n\
    performing data analytics operations to extract information in order to support\
    \ de-\ncision and policy making. It is estimated that by 2025 more than 75 billion\
    \ devices\nwill be connected to the internet [34], spearheading even more application\
    \ develop-\nment. Within the smart city context, IoT allows for sensors to collect\
    \ and send data\n7\nabout the city’s state to a central cloud, which is then mined\
    \ or processed for pattern\nextraction and decision-making purposes.\n3.1\nIoT\
    \ Architectures for Smart cities\nThe Internet of Things unifies the operations\
    \ of data sensing, transmission/recep-\ntion, processing and storage through the\
    \ use cloud services. Based on technology, a\ngeneric IoT architecture consists\
    \ of five layers where successive layers operate on the\ninformation from the\
    \ previous layer as shown in Figure 2. It also shows the three\ndifferent architectures\
    \ that exist for IoT systems.\nCloud Computing\nEdge computing\nFog Computing\n\
    Business layer\nActuators\nMobile Elements\nSensors\nNetwork Technologies\nNetwork\
    \ Topologies\nAPIs, Databases, Security\nApplications\nData Analytics (Machine\
    \ Learning, Optimization, Deep Learning)\nApplications \nLayer\nMiddleware \n\
    Layer\nNetwork Layer\nSensing Layer\nFigure 2. IoT Architecture\nThe Sensing layer,\
    \ also called the Perception layer consists of sensors that can\nget information\
    \ about physical quantities of interest in any application as well as\nactuators\
    \ which can act upon physical objects, such as Radio Frequency IDentification\n\
    (RFID) readers for reading RFID tags and other such devices. The data read by\
    \ the\nsensing layer is passed onward to the Middleware layer using the networking\
    \ layer\nthrough wireless network technologies such as Wi-Fi, cellular internet,\
    \ Zigbee and\nBluetooth etc.\nThe Middleware layer provides a generic interface\
    \ for the sensing\nlayer hardware and the Application layer which uses the data\
    \ through various API’s\nand database management services to provide users with\
    \ services. The Business layer\nis attached to the application layer and is used\
    \ to develop strategies and formulate\npolicies that help manage the complete\
    \ system.\nIn terms of architectures, typically, IoT architectures are categorized\
    \ based on\nthe type of operation responsibilities allocated to parts of the IoT\
    \ system, this cat-\negorization is based mainly on processing of data responsibilities.\
    \ There are three\narchitectures of IoT systems with respect to the stage of the\
    \ IoT framework where\nprocessing of data can be carried out and these are Cloud,\
    \ Fog and Edge Models.\nTable 1 lists the traits of each of three layers of the\
    \ IoT system. It is important to\n8\nmention that the three IoT architectures\
    \ discussed here are not mutually exclusive,\ninstead the aim of this hierarchy\
    \ is to complement the higher layer by providing it only\nuseful information which\
    \ makes the system more productive and dependable. For any\nIoT system designer,\
    \ the aim is to establish a balance between the capabilities of the\nthree layers\
    \ keeping in view system costs and requirements.\n3.1.1\nCloud Computing Model\n\
    This was the first proposed architecture for IoT systems and is based on the premise\n\
    that processing of data from the various components in the IoT system should take\n\
    place in the cloud. Cloud computing allows for the remote accessing of uninterrupted\n\
    shared resources (computing, storage and services) over the network. It should\
    \ be\nable to dynamically allocate these resources without human intervention,\
    \ schedule\nor pool as necessary and be able to be accessed from a variety of\
    \ different platforms\n[35]. The cloud can provide both hardware as well as software\
    \ services for smart city\napplications. It has the advantage that it provides\
    \ a central management platform\nfrom which to observe, control the IoT system\
    \ as well as to disseminate command\nactions based on the received data. Moreover,\
    \ this centralization also allows for cloud\nsystems to have sufficiently large\
    \ computing and storage capacities thereby allowing\nthem to perform complex tasks\
    \ of data mining, pattern extraction and making infer-\nences from sensor data\
    \ in smart cities to make use of it in the best manner possible.\nHowever, there\
    \ are a few disadvantages with using the cloud computing model for\nthe IoT. First,\
    \ transmitting all gathered data to the cloud increases network traffic,\neven\
    \ though this may not be true for applications in which measurements are not\n\
    very frequent, but in other cases, this could increase network costs. Moreover,\
    \ data\ntransmission overheads may increase due to the large amount of data that\
    \ needs to\nbe transmitted by the many sensors existing in the smart city scenario.\
    \ Another\ndisadvantage that the cloud computing model suffers from is data latency,\
    \ since the\nsensing units exist at the sensing layer and the decision making/data\
    \ processing takes\nplace in the cloud, this gives rise to data latency in the\
    \ transmission of sensing infor-\nmation, especially when many devices start sending\
    \ data at the same time. Network\nreliability can be an issue when using this\
    \ model, with the large volume of data traffic\non the network, it might not be\
    \ possible to enforce robust data transmission schemes\nas IoT systems get bigger.\n\
    3.1.2\nFog Computing Model\nSince most of the information produced with in IoT\
    \ takes place towards the sensing\nend of the IoT system, also called the edge,\
    \ Fog Computing was proposed in [36]\nto overcome some of the problems of the\
    \ cloud computing model for the IoT. Fog\ncomputing provides a more diverse distribution\
    \ of responsibilities than are dictated\nby the cloud computing architecture by\
    \ moving some of the processing to devices\non the local network.\nTypically,\
    \ Fog computing refers to data processing that is\ncarried out by routers and\
    \ other network devices within in the Network layer in the\nIoT. Since network\
    \ devices nowadays increasingly offer better computational capabil-\n9\nities,\
    \ one can leverage them to perform rudimentary operations on data. Operations\n\
    such as aggregation and collection of sensor data, simple processing operations\
    \ and\ndecision-making can be performed to reduce the amount of information flow\
    \ towards\nthe higher cloud layer. Questions that need to be answered for the\
    \ decision-making\nprocess include but are not limited to for e.g., does the decision\
    \ require the use of\naveraging for one quantity and instantaneous values of the\
    \ other? Is it possible to\nextrapolate data received for one quantity and use\
    \ the currently measured value for\nanother one? Based on the previous data for\
    \ a given period, can one provide higher\nlayers with decision options rather\
    \ than just data, thereby providing better quality\ninformation to the cloud layer\
    \ thus resulting in better utilization of cloud resources.\nFog layers can localize\
    \ decision making since they have access to the local state of a\ngiven region\
    \ [37]. This would be helpful in implementing distributed decision mak-\ning mechanisms\
    \ which might be necessary in some applications. Moreover, they also\nallow for\
    \ local networks to be established using non-internet technologies such as Zig-\n\
    bee, Bluetooth, RFID etc where sensors and other end devices transmit data to\
    \ the\nFog node (also referred to as access points in such systems) which is connected\
    \ to the\ncloud.\nFog computing results in reduced costs for deployment of IoT\
    \ systems, increases ro-\nbustness as latency, data overhead and errors in transmission\
    \ are reduced. This also\nimproves the efficiency of the applications as quicker\
    \ decisions can be made on the\nreceived data, which is important in critical\
    \ decision-making situations. Moreover,\nFog devices have the capability to not\
    \ only receive data from similar devices at the\nedge but also collect it from\
    \ many different types of devices. This capability to mea-\nsure different parameters\
    \ in the edge environment enable for an application neutral\nIoT system architecture\
    \ to be developed.\nData sent upward by the Fog layer in the IoT hierarchy would\
    \ be used to gain insights\nin to system behavior and to guide new rules of system\
    \ operation, this will typically\nbe carried out in the cloud. Devices in the\
    \ Fog layer may be provided decision making\nguidance from the higher cloud layer\
    \ to ensure smooth system operation. However,\na balance needs to be struck as\
    \ to the division of responsibilities between the cloud\nand the fog layer keeping\
    \ in view the costs involved.\n3.1.3\nEdge Computing Model\nThe purpose of Fog\
    \ Computing was to push some of the decision making towards\nthe edge of the network.\
    \ In recent years, with increasingly capable devices being\ndeveloped that are\
    \ attached to ‘edge’ nodes, simple decision making, and processing\nof data has\
    \ been increasingly moved on to these devices so as to reduce network\nand device\
    \ costs even further at the fog level and make for even deeper distributed\ndecision-making\
    \ schemes. Edge computing refers to data processing that is done at\nthe ”thing”\
    \ level, i.e. by sensors and other devices in the IoT system [38]. Another\nconcept\
    \ about Edge computing as discussed in [39] defines the Edge computing layer\n\
    as an intermediary layer between the Fog and the ‘things’ (sensors) rather than\
    \ edge\nnodes. The difference between them in this case is the Edge computing\
    \ nodes act\nas aggregation and decision-making units on a smaller scale compared\
    \ to fog devices\n10\nwhich act to provide seamless connectivity and data integrity\
    \ throughout the IoT\nnetwork. The aim of the Fog and the Edge computing paradigms\
    \ is to decentralize\nthe IoT system for purposes of reducing cost, increasing\
    \ scalability and increasing\nrobustness.\nTable 1. Comparison of Cloud, Fog and\
    \ Edge Computing Models\nCloud\nComputing\nModel\nFog Computing Model\nEdge Computing\
    \ Model\nContextual awareness on a\nglobal level encompassing all\naspects of\
    \ the application\nThe Fog layer has contextual aware-\nness of the local sensing\
    \ scenario\nEdge devices typically only\nhave\ninformation\nabout\ntheir own status.\
    \ Exchange\nstrategy possible but limited\nto local neighborhood\nFarthest away\
    \ from the edge\nand therefore decision mak-\ning can be slow and latency\nis\
    \ high\nBeing the closest unit to the edge,\nthe Fog layer can respond much\n\
    more quickly to the data being sent\nfrom sensors and other devices, as it\ncan\
    \ aggregate the information sent\nQuickest\ndecision\nmaking\npossible; however,\
    \ decisions\nwill be based on local states\nUtilizes heterogeneous data\nfrom\
    \ a variety of sensing de-\nvices\nUtilizes heterogeneous data,\nbut\nwithin a\
    \ small region\nUsually do not have access\nto different types of data\nHigh network\
    \ cost\nMedium network cost as data flow\nis reduced\nLeast network cost\nPotential\
    \ privacy risk as raw\ndata might be sent to the\nCloud\nIncreased\nprivacy\n\
    compared\nto\nCloud computing\nEven\ngreater\nprivacy\nen-\nforcement possible\
    \ than Fog\ncomputing model\nLeast\nrobust\nas\ndecision\nmaking is centralized\n\
    More robust than Cloud computing\nmodel\nMost robust as distributed\ndecision\
    \ making takes place\nBest capabilities in terms of\nresources\nLesser capable\
    \ than Cloud devices\nLeast capable\nScalability is low\nScalability is better\
    \ than Cloud\nScalability is highest\n3.2\nIoT Challenges for smart Cities\nThe\
    \ Internet of Things promises the digitization of all aspects of our lives. For\
    \ smart\ncities, this digitization process entails the proliferation of sensing\
    \ nodes in every\ndomain of a city’s operation mechanism. With an application\
    \ scope this broad, the\ncreation and subsequent deployment of IoT systems in\
    \ smart cities carry enormous\nchallenges that need to be considered. In this\
    \ section, a discussion is provided of\nthe challenges that IoT system designers\
    \ face when making deployments in smart\ncity applications.\nThe focus in this\
    \ work is on the technological challenges that\npertain to IoT use in smart cities\
    \ and has also been the focus of researchers. Figure 3\nshows the different challenges\
    \ which Smart City IoT system deployment encounters,\nnamely Security and Privacy,\
    \ Smart Sensors, Networking and Big Data Analytics. A\nsummary of the discussion\
    \ in this section is presented in Table 2.\n11\nSmart City\nChallenges\nSmart\
    \ \nSensors\nNetworking\nIntelligent \nData \nAnalytics\nSecurity and \nPrivacy\n\
    Interoperab\nility\nReliability\nRobustness\nPower\nMemory\nHeterogen\nous data\n\
    Scalability\nLow Power\nMobility\nRouting\nEncryption \nData \nLeakage\nAccess\
    \ \nControl\nNetwork \nAttacks\nFigure 3. Challenges for IoT in Smart Cities.\n\
    3.2.1\nSecurity and Privacy\nSecurity, along with Privacy is the primary concern\
    \ in smart cities.\nSmart cities\ninvolve having essential city infrastructures\
    \ online, any aberration in the operation\nof the city’s services will bring inconvenience\
    \ to its citizens and put human lives and\nproperty at risk. Therefore, security\
    \ is a big concern in smart cities. In today’s age\nwhere cybercrime and warfare\
    \ have become a tactic in world politics, smart cities\nare at an ever-greater\
    \ risk of being the target of such malicious attacks. Encryption\nof data transmitted\
    \ over the network is necessary in this scenario. For smart city\nprojects to\
    \ be successful, they require the trust and participation of citizens. The\nproliferation\
    \ of sensors in smart cities, which continuously collect data about the\nactivity\
    \ of people may expose the daily activities of citizens to unwanted parties.\n\
    Moreover, companies and corporations on the IoT network may use citizen data\n\
    without their approval for things like targeted advertising and may perform acts\
    \ such\nas eavesdropping etc. Solutions to this will require processes that anonymize\
    \ data\ncollection while retaining the integrity of the context of the measured\
    \ task so that\napt decision making is possible. Security and Privacy has been\
    \ covered in detail in a\nlater section.\n12\n3.2.2\nSmart Sensors\nSmart sensors\
    \ are the hardware components that gather data in smart cities. These\ndevices\
    \ are manufactured by a host of different vendors that adhere to different sens-\n\
    ing mechanisms, standards of measurement, data formats and connectivity proto-\n\
    cols. Smart city deployment will require all these devices to exchange data, perform\n\
    scheduling of tasks between them and be able to aggregate data together for mak-\n\
    ing inferences. A solution to this issue is to develop and use open protocols\
    \ and\ndata formats that will enable manufacturers to create equipment that can\
    \ communi-\ncate between each other, further spurring IoT system deployment. Another\
    \ solution\ncould be the development of ‘standard’ access point nodes for IoT\
    \ systems that can\ncommunicate to devices using several different communication\
    \ protocols and are able\nto decode the information received. Some manufacturers\
    \ have, in fact, made their\nproducts compatible with other protocols as mentioned\
    \ in [40].\nAnother challenge for smart sensors is reliability and robustness.\
    \ Reliability and\nrobustness refer to the dependability and correctness of the\
    \ IoT system. IoT is the\nbackbone of future smart cities and being imperative\
    \ to their operation, the IoT\nsystem needs to provide a smooth experience to\
    \ its users. This requires that service\nrequests from users of the application\
    \ receive an accurate and timely response. The\nquality of service needs to be\
    \ ensured for every citizen in the smart city. Systems\nthat deliver critical\
    \ utilities such as transport, electricity etc. should be decentralized.\nThe\
    \ distributed connection points will allow for robustness and increase reliability.\n\
    One such example is self-healing in Smart Grids [23].\nMany current networking\
    \ protocols are developed for infrastructure networked\ndevices which have access\
    \ to continuous power, however, sensors in smart cities will\nbe mobile in many\
    \ scenarios and thus be battery powered. Moreover, they will need\nto measure,\
    \ transfer and in some cases save data they have collected. This requires\nthe\
    \ development of not only low power, low overhead data transmission schemes\n\
    but also development of new memory and storage technologies as well as low power\n\
    devices that extend battery life as much as possible. Storing this large amount\
    \ of\ndata would require development of compression algorithms which will be employed\n\
    and database schemes that will need to be developed in the future as smart cities\n\
    and IoT are scaled up. Solutions for power issues necessitate the development\
    \ of new\nbattery technologies and perhaps the incorporation of energy harvesting\
    \ mechanisms\nin such devices to make long lasting service provision possible.\n\
    3.2.3\nNetworking\nThe IoT depends on the capability of sensing and other devices\
    \ to be able to send\nand receive information to each other and the Cloud. With\
    \ new smart city appli-\ncations coming up, providing networking to these devices\
    \ to remain connected is a\nbig challenge. Current networking methods are not\
    \ optimized to providing network-\ning services for smart city components. Many\
    \ devices in smart cities have mobility\nand data throughput requirements which\
    \ need to be met to provide an acceptable\nquality of service. Different approaches\
    \ have been suggested in terms of defining ac-\n13\ncess points, local networks\
    \ etc. to solve this problem. Another aspect of networking\nwould be working on\
    \ efficient and dynamic routing protocols that can serve IoT re-\nquirements capable\
    \ of working with stationary as well as devices in motion, which\nmany current\
    \ protocols do not offer sufficiently [41].\n3.2.4\nBig Data Analytics\nIoT connected\
    \ devices generated 13.6 Zetta Bytes of data in 2018 and this is expected\nto\
    \ grow to 79.4 Zetta Bytes till 2025 [34]. To make use of this data and continuously\n\
    improve the services that are delivered in smart cities, new data analytics algorithms\n\
    need to be developed. With the myriad of the different parameters that are measured\n\
    in smart cities, these algorithms need to be applicable to data of varying nature\
    \ (both\nstructured and unstructured), better data fusion techniques need to be\
    \ developed as\nwell so as to combine them in meaningful ways and be able to extract\
    \ inferences and\nrecognize patterns. Deep learning has been of interest in this\
    \ area as it can lever-\nage on this large amount of data to provide better results\
    \ for different applications.\nAnother important consideration would be to ensure\
    \ that the developed algorithms\nare scalable in that they have enough generality\
    \ and can be used through out the\nintended application. For, e.g., for the purposes\
    \ of activity recognition, the authors\nin [42] found that a CNN trained for activity\
    \ recognition on one dataset failed to\nperform well on others or in [43] where\
    \ the deep learning network performs poorly\nwhen the color of tomatoes is different\
    \ from what it was trained on. Concept drift is\nanother issue of concern as with\
    \ the continuous acquisition of data, the properties of\ndata may change over\
    \ time. Techniques such as incremental learning may be useful\nin this respect.\
    \ Explainability is another important factor for Smart City analytics\nto be widely\
    \ acceptable, specially in the area of smart health. There have been some\napproaches\
    \ suggested towards this end, in [44] a hybrid deep learning classifier and\n\
    semantic web technologies based solution is demonstrated for the application of\
    \ flood\nmonitoring. In [45], the authors present an explainable deep learning\
    \ based health-\ncare system at the Edge for COVID-19 care based on a distributed\
    \ learning paradigm\nwith promising results. However, more work needs to be performed\
    \ to incorporate\nexplainability techniques such as distillation, visualization,\
    \ and intrinsic methods into\nMachine and Deep Learning based smart city applications\
    \ in order to increase smart\ncity application proliferation.\n3.3\nSensing Technologies\n\
    Sensing is at the heart of smart city technologies. Sensors provide the knowledge\
    \ and\ndata from which smart city innovations are created. With the vastly different\
    \ nature\nof Smart City projects and its various components, there are numerous\
    \ sensors which\nare used as part of these initiatives. The authors in [58] have\
    \ provided a framework\nfor the comparison of IoT sensors and have listed sensors\
    \ they found in use for the\nInternet of Things. We use their work to direct our\
    \ survey of the sensing technologies\nused in smart cities. Sensors within IoT\
    \ can be divided in to several groups, these are\nambient, motion, electric, biosensors,\
    \ identification, presence, hydraulic and chemical\n14\nTable 2. Smart City IoT\
    \ Challenges and Mitigation\nChallenge\nMitigation/research direction\nReferences\n\
    Security and Pri-\nvacy\nEncryption\n[46][47][48][49][50][51][52]\nNew authentication\
    \ mechanisms\n[53][54][55]\nNew standards to anonymize data\nPrevent data leakage\n\
    Smart Sensors\nInteroperability: Open Standards\n[46][47][48][52][53][54][55]\n\
    Reliability and Robustness: Decen-\ntralized and distributed architec-\ntures\
    \ and decision making\n[56]\nPower and Memory:\nEnergy har-\nvesting, Low power\
    \ sensors, New\ndatabase storage systems\nNetworking\nLow\npower\nnetworks,\n\
    Network\nschemes that ensure fluent mobility\nand routing\n[41][52]\nBig data\
    \ analytics\nNew algorithms which work with\ndifferent\nnatured\ndata,\nDevelop\n\
    scalable and explainable AI\n[47][52][57]\nsensors as shown in Figure 4.\nSensors\
    \ are the key component in smart city IoT\nsystems which provide the interaction\
    \ between the smart city system and the city’s\ninhabitants and allow for new\
    \ services to be developed. One thing to note is that\nmany of the sensors find\
    \ applications in multiple areas as discussed. Furthermore,\nany given application\
    \ will require measuring different physical quantities and will\nrequire the use\
    \ of many different types of sensors. For, e.g., ambient, motion, electric,\n\
    identification, position, chemical and hydraulic sensors have been found to be\
    \ used in\nsmart homes. As noted in the challenges, working with different sensors\
    \ which might\nhave different output data types is a task that needs to be dealt\
    \ with when working\nwith multiple types of sensors. Table 3 presents a summary\
    \ of the sensors used in\neach smart city component.\n3.3.1\nAmbient Sensors\n\
    Ambient sensors include sensors used to measure physical quantities indicating\
    \ to\nenvironmental conditions such as temperature, humidity, light intensity\
    \ and pressure.\nAmbient sensors are used in a variety of smart city applications\
    \ including smart homes\nwhere they are used to regulate the comfort level, they\
    \ are also used for smart city\nservices.\n3.3.2\nBio-Sensors\nBio-sensors are\
    \ used for measuring health parameters of living things. Bio-sensors in\nsmart\
    \ cities are used for monitoring patients for healthcare purposes. Such sensors\
    \ in-\nclude ElectroEncepheloGram (EEG), ElectroMyoGram (EMG), ElectroCardioGram\n\
    15\nAmbient\nPresence\nMotion\nOther \nsensors\nIdentification\nElectric\nHydraulic\n\
    Smart City Services\nSmart Homes\nSmart Transport\nSmart Agriculture\nSmart City\
    \ Services\nSmart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart\
    \ Infrastructure\nSmart Transport\nSmart Health\nSmart Homes\nSmart Industry\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Homes\nSmart Industry\n\
    Smart Energy\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Agriculture\n\
    Smart City Services\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nBiosensors\nSmart City Services\nSmart Homes\nSmart Transport\n\
    Smart Sensors\nChemical\nSmart Agriculture\nSmart City Services \nSmart Homes\n\
    Smart Transport\nFigure 4. Sensing Technologies for IoT Smart Cities.\n(ECG),\
    \ skin resistance, heart beat, breath sensors, pulse oximetry, blood pressure\n\
    and more.\n3.3.3\nChemical\nChemical sensors are used to measure chemical properties\
    \ of materials, this includes\ngas sensors which can measure/detect carbon monoxide\
    \ (CO), carbon dioxide (CO2)\nand other gases for air quality monitoring, sensors\
    \ for detecting smoke, pH and other\nsensors for water quality monitoring etc.\n\
    3.3.4\nElectric Sensors\nElectric sensors allow for the measurement of electrical\
    \ power and are widely used in\nsmart grids and smart homes to monitor the power\
    \ consumption of consumers/ap-\npliances. Types include current transformers and\
    \ voltage sensors to measure current\nand voltage, respectively.\n3.3.5\nHydraulic\n\
    Hydraulic sensors refer to sensors used for liquid measurements such as level,\
    \ flow,\nleak detection. These are used for measurement of liquid levels in tanks\
    \ [59].\n16\n3.3.6\nIdentification\nIdentification sensors refer to RFID tags\
    \ and Near Field Communication (NFC) de-\nvices. These sensors are used in applications\
    \ involving payments, data exchange in\nthe domain of smart transportation and\
    \ smart city services.\n3.3.7\nMotion Sensors\nMotion sensors refer to sensors\
    \ that can be used for the detection of motion. Sensors\nfor motion sensing involve\
    \ inertial sensors such as accelerometers and gyroscopes.\nThese sensors are used\
    \ in smart health applications such as activity tracking as well\nas applications\
    \ like vibration sensing in smart homes and industry.\n3.3.8\nPresence\nPresence\
    \ sensors indicate to the presence of a humans or objects. Passive InfraRed\n\
    (PIR) sensors are very popular and are used to detect human motion, reed switches\n\
    can be used on windows and doors for security purposes, inductive loop sensors\
    \ which\nuse electromagnetic induction can be used to detect presence in transport\
    \ systems.\nUltrasonic sensors are also used to determine the distance of objects.\n\
    Capacitive\nsensors are also included in this type, these may be used to determine\
    \ position.\n3.3.9\nOther Sensors\nVarious smart city applications make use of\
    \ different sensing modalities such as audio\nor visual information or other signal\
    \ measurement devices, for, e.g., bluetooth and\nWi-Fi signal strength. Since\
    \ the sensors for these modalities capture raw information\nabout signals (visual,\
    \ sound or signal strength etc.), the gathered data is typically\nprocessed further\
    \ before it indicates to the target variable being measured.\n3.4\nNetworking\
    \ Technologies\nThe internet of things in smart cities depends on the aggregation\
    \ of data measured by\nindividual sensing units placed throughout the smart city\
    \ environment. Systems that\ncan use these measurements individually have long\
    \ existed and provided automation\nfor small projects. However, the ‘smart’ in\
    \ smart city comes from the collective usage\nof the data from these individual\
    \ sensing units to perform complex decisions while\ndelivering services to citizens.\
    \ The collective use of this data enables its analysis over\na wider scope compared\
    \ to individual levels so as to determine long term patterns\nand provide meaningful\
    \ insights to support services. The number of such IoT devices\ncurrently present\
    \ in the world [34] are multiple times that of the world population.\nTo enable\
    \ these devices to exchange data, wireless technologies need to be used as\nphysical\
    \ connections would, for one, be too costly (where ever they can be used),\nsecond,\
    \ would not satisfy the mobility requirements that are typical of many smart\n\
    city applications. The internet has provided connectivity to computers, smartphones\n\
    and other electronic devices around the world with each other, allowing for instant\n\
    17\nTable 3. Sensing Technologies for IoT Smart Cities by Smart City Component\n\
    Smart City Com-\nponent\nSensor Type\nReferences\nSmart Agriculture\nAmbient,\
    \ Chemical, Hydraulic, Other sen-\nsors\nSmart City Services\nAmbient, Chemical,\
    \ Hydraulic, Presence,\nOther sensors,\n[60][61][62]\nSmart Energy\nAmbient, Electric,\
    \ Motion\n[63][64]\nSmart Health\nBiosensors, Identification, Motion, Other\n\
    sensors\n[65][66][67]\nSmart Home\nAmbient, Chemical, Electric, Hydraulic,\nIdentification,\n\
    Motion,\nPresence,\nOther\nsensors,\n[63][68]\nSmart Industry\nAmbient, Biosensors,\
    \ Electric, Hydraulic,\nIdentification., Motion, Other sensors\nSmart Infrastructure\n\
    Ambient, Motion, Electric, Other sensors,\n[60]\nSmart\nTransporta-\ntion\nAmbient,\
    \ Chemical, Identification, Mo-\ntion, Presence, Other sensors\n[69][70][71]\n\
    transfer of information between them. However, for IoT the internet may not neces-\n\
    sarily be the only communication method [72] as many applications do not possess\n\
    edge devices that can connect to the internet. An application may consist of a\
    \ local\nnetwork of sensing units which can exchange data between them and rely\
    \ on a multi-\nhop communication protocol to send data to a central node, hub\
    \ or gateway. The\ngateway might be fixed and would be connected to the internet,\
    \ thereby relaying any\nmonitored data to the cloud for further processing or\
    \ use. It might also be possible\nthat devices within an application may use many\
    \ different protocols with the central\nnode having the capability to communicate\
    \ with all of them, a common case for such\narchitectures is the smart home where\
    \ manufacturers produce devices using propriety\nor incompatible protocols for\
    \ which a hub may be used, an example of such a system\nwas provided in [73] and\
    \ several hubs are commercially available. In this section, we\ndiscuss the network\
    \ types, topologies and protocols used in the Internet of Things for\nSmart City\
    \ applications as illustrated in Figure 5. We later provide a comparison of\n\
    these protocols in Table 4.\n3.4.1\nNetwork Topologies\nThere are three IoT network\
    \ topologies, point to point, star and mesh [74]. The first\ntype of topology\
    \ is the point to point topology where devices are connected to each\nother sequentially\
    \ in a point to point manner. Point to point networks introduce\ndata hops for\
    \ packets that need to be sent to other nodes as data needs to go through\neach\
    \ node in the path of the two nodes wanting to exchange data. Point to point\n\
    networks are not very popular in IoT systems as it ranks low on fault resiliency\
    \ and\nwill breakdown if there is a fault in any of the intermediate nodes. In\
    \ Star topology,\n18\nall units in a network are connected to a central node or\
    \ gateway and cannot send data\nto each other directly. In order to perform an\
    \ exchange of data among themselves, the\ndevices need to send it through the\
    \ central node. Star topology networks, with their\ncentral node structure provide\
    \ a natural aggregation scheme for data collection within\nthe internet of things,\
    \ however, large networks consisting of many devices, which can\nbe the case in\
    \ most smart city applications, may result in high latency and possible\nbottlenecks\
    \ in high information throughput scenarios. Star topology has been used in\nvarious\
    \ applications including disaster management [75] and environmental sensing\n\
    [76]. The last type of network topology that is used in IoT is the Mesh network\n\
    topology, mesh networks allow all individual devices to communicate between them.\n\
    By enabling communication between the nodes in a network, mesh topology offers\n\
    a larger range as data transmitted towards a certain node can make multiple hops\n\
    through the network, this also increases the networks resilience as alternate\
    \ paths\ncould be used if packet delivery fails due to any node becoming faulty.\
    \ In fact, such\ntopologies have been used in smart homes [77] as well as in smart\
    \ grids [78]. There are\nother topologies which have not been mentioned, for,\
    \ e.g., tree (which has multiple\nstar networks connected in a point by point\
    \ fashion).\n3.4.2\nNetwork Architectures\nNetwork Architecture refers to the\
    \ structure of the network used for a given appli-\ncation. As discussed earlier,\
    \ the ‘things’ in IoT may not necessarily be connected\nthrough the internet,\
    \ in fact a distributed connectivity structure may be imple-\nmented with only\
    \ one unit in the network being capable of sending data to the\ncloud depending\
    \ on the requirement. Work in [72] mentions three types of network\narchitectures\
    \ that are used for smart cities based on IoT. These are Home Area\nNetworks (HANs),\
    \ Wide Area Networks (WANs) and Field/Neighborhood Area Net-\nworks (FANs/NANs).\
    \ Home Area Networks are short range networks and are usually\nused to transmit\
    \ information to a central node which is responsible for data collection\nbefore\
    \ it is sent to the cloud. Communication within the network is performed using\n\
    some low power communication protocol such as Zigbee, Bluetooth, Wi-Fi etc. HANs\n\
    are very popular in smart homes where they are used to gather power consumption\n\
    and times of operation data from a multitude of appliances which are then sent\
    \ to\na smart meter as part of a smart grid [79]. The second type of network architecture\n\
    is Field Area Networks (FANs), sometimes also called Neighborhood Area Networks\n\
    (NANs). Field Area Networks have a larger communication range than HANs and\n\
    are used to provide connection between a customer (for, e.g., in a smart grid)\
    \ to the\nutility company. Wide Area Networks are used for network structures\
    \ that require\ncommunication over large distances. These networks are not as\
    \ dense as HANs or\nFANs and utilize technologies such as cellular services, wired\
    \ connections such as fiber\noptics as well as a class of low power protocols\
    \ designed for WANs themselves [80].\nWANs are used in a variety of smart city\
    \ applications including Smart Grids where\nthey are used to connect multiple\
    \ substations together or exchanging data between\nthe customer and the substation\
    \ [81].\n19\n3.4.3\nNetwork Protocols\nThe type of network to use depends on the\
    \ requirements of the application. It is\nimperative that the communication protocol\
    \ used in a smart city application meet\nthe desirable quality of service (QoS).\
    \ Several protocols have been used in the internet\nof things for smart cities\
    \ [48, 82, 83, 84], herein, we discuss the traits of the most\npopular wireless\
    \ networking protocols used in smart cities.\n3.4.3.1\nRFID\nRadio Frequency Identification\
    \ (RFID) utilizes radio frequencies\nto transmit and receive data. RFID communication\
    \ consists of two types of devices,\none device is the Reader and the other is\
    \ called the Tag. The Reader is usually\npowered and once a tag comes in the vicinity\
    \ of the reader, an exchange of information\ntakes place after authorization as\
    \ the tag harvests the energy from the reader. Such\ntags are called passive tags,\
    \ there are also active tags which are do not depend on the\nreader for their\
    \ power. Depending on the standard, RFID can operate on different\nfrequencies\
    \ in the radio frequency spectrum between 125 KHz to 928 MHz and can\nbe used\
    \ over short ranges. They are used in applications such as smart transport\n(toll\
    \ tax collection, parking), smart health and more.\n3.4.3.2\nNear Field Communication\n\
    Near Field Communication (NFC) is very\nsimilar to RFID, however, the structure\
    \ of NFC communication doesn’t consist of\ntags and readers. Unlike RFID, both\
    \ devices which want to communicate using NFC\nneed to be powered and data tranmission/reception\
    \ can take place in both directions\nunlike RFIDs. This enables the use of NFC\
    \ to control and configure devices unlike the\nRFID which cannot be used for measurement\
    \ or control tasks. NFC utilizes similar\nfrequencies to RFID but is used for\
    \ very short distances. NFC devices are popular\nfor applications involving payment\
    \ using smart phones and are also used in smart\nhomes.\n3.4.3.3\nBluetooth\n\
    Bluetooth is a low energy protocol popular in IoT applica-\ntions as it can support\
    \ an unlimited number of nodes [82]. The protocol is designed\nfor short range,\
    \ low bandwidth communication in an arrangement where devices can\neasily exit\
    \ or enter the network. Bluetooth natively supports the star topology as it\n\
    has a master device at the center of the communication mechanism. It operates\
    \ in\nthe 2.4 GHz ISM band and can have maximum data rates of 2 Mbps. Bluetooth\
    \ has\nbeen widely used in smart home due to it providing a direct connection\
    \ interface to\nsmart phones without the need for any intermediary hub device.\n\
    3.4.3.4\nZ-Wave\nZ-Wave or Zensys wave is a low power protocol developed to\n\
    be used in home automation applications. It is a low speed protocol with a short\n\
    range, operating in the frequencies of 868 MHz and 900 MHz. It operates in a master\n\
    slave fashion where a master can have multiple slave devices which can respond\
    \ to\ncommands from the master node. Therefore this is well suited for applications\
    \ where\na central control element is present and needs to gather data from multiple\
    \ sensing\nunits such as smart homes and smart healthcare systems.\n20\n3.4.3.5\n\
    Li-Fi\nLi-Fi (Light Fidelity) uses visible light instead of radio frequency\n\
    (RF) to exchange data. The advantage with using Li-Fi over RF communication is\n\
    that it can utilize already present lighting systems which also results in conservation\n\
    of power [85]. It offers very high speeds of data transfer for short distances\
    \ and has\nbeen used in parking systems.\n3.4.3.6\nWi-Fi\nWi-Fi (Wireless Fidelity)\
    \ operates using wireless frequencies in the\n2.4 GHz and 5 GHz bands to provide\
    \ high speed internet connectivity in a limited\ndistance. Wi-Fi is popular in\
    \ many smart city applications as it provides ready to\nuse interface to smart\
    \ phones, computers and other wearable gadgets.\n3.4.3.7\nZigbee\nThe ZigBee protocol\
    \ was developed as a low power low cost pro-\ntocol for wireless sensor networks\
    \ (WSNs) and has evolved to be used in the Internet\nof Things. The ZigBee protocol\
    \ operates in the 868 MHz/915 MHz/2.4 GHz band\nand offers moderate data transfer\
    \ speeds with distances similar to Wi-Fi in a multi-\nhop data transfer scheme.\
    \ Zigbee radios are low cost devices and therefore it is a\npopular protocol used\
    \ by many manufacturers of smart home, smart healthcare de-\nvices. A ZigBee network\
    \ will have three devices, one called the coordinator which\nis the controller\
    \ of the network, the router which is responsible for moving data to\nother devices\
    \ and the ZigBee end device (sensors and actuators).\n3.4.3.8\nWi-SUN\nThe Wireless\
    \ Smart Utility Network (Wi-SUN) is a network\napproved by Institute of Electrical\
    \ and Electronic Engineers (IEEE) and is used in\nfield area networks for utility\
    \ metering, automation of distribution for utilities such\nas electricity, gas\
    \ etc. and also for demand response systems for utility-based appli-\ncations.\
    \ It supports IPv6 addressing and can be used in star or mesh configuration\n\
    where it also allows for multi-hop communication [86].\n3.4.3.9\nCellular\nCellular\
    \ technologies refers to 3G, 4G and 5G communications.\nAlong with Bluetooth and\
    \ Zigbee, they are the most popular IoT enabling technolo-\ngies. Cellular communication\
    \ provides high data rate and supports more content rich\napplications compared\
    \ to the other protocols. With the long range they provide, they\nare preferred\
    \ for a variety of applications where power is not an issue. Depending on\nthe\
    \ technology, cellular bands range from 600 MHz to 80 GHz with very high data\n\
    rates.\n3.4.3.10\nLoRaWAN\nLoRaWAN stands for Long Range Wide Area Network (Lo-\n\
    RaWAN) and it is a Low Power Wide Area Network (LPWAN) that consists of several\n\
    gateways and multiple end devices with the gateways connected to a back-end net-\n\
    work server. The back-end server provides connection to the cloud. End devices\
    \ do\nnot have a fixed association with a specific gateway and may send data to\
    \ multiple\ngateways when it needs to transfer data to the cloud.\n21\n3.4.3.11\n\
    6LoWPAN\n6LoWPAN which is short for IPv6 over Low Power Net-\nworks was created\
    \ by the Internet Engineering Task Force (IETF) specifically for\ninternet of\
    \ things applications with the aim of making it possible for providing in-\nternet\
    \ connectivity to small devices. It is an IP based network and leverages IPv6\n\
    communication. This is a short-range network operating in Industrial, Scientific\
    \ and\nMedical (ISM) bands.\n3.4.3.12\nSigFox\nSigFox is a proprietary standard\
    \ developed by SigFox Inc., France.\nIt uses unlicensed bands to perform ultra-narrowband\
    \ bidirectional communication\nwith low speeds [87]. SigFox has a similar architecture\
    \ to LoRaWAN and like Lo-\nRaWAN and 6LoWPAN, SigFox is a popular LPWAN in the\
    \ IoT domain offering\nsufficiently large distances of communication of up to\
    \ 50 km. SigFox finds applica-\ntions in security in buildings, smart lighting\
    \ and environmental monitoring.\n3.4.3.13\nNB-IoT\nNB-IoT (Narrow Band IoT) is\
    \ a type of LPWAN which oper-\nates on Global System for Mobile Communications\
    \ (GSM) and Long-Term Evolution\n(LTE) bands. In fact, it can operate using the\
    \ same hardware with a software up-\ngrade as it is considered a bare bones version\
    \ of LTE. It allows for connecting up to\n100,000 devices per cell.\nTable 4.\
    \ Comparison of Network Technologies for IoT Smart Cities\nArchitecture\nTechnology\n\
    Frequency/Medium Data rate\nRange\nTopology\nHome\nArea\nNet-\nworks (HANs)\n\
    NFC\n125\nKHz,\n13.56\nMHz/860 MHz\n106 Kbps, 212\nKbps or 424\nKbps\n10 cm\n\
    Point to Point\nRFID\n125\nKHz,\n13.56\nMHz/902-928 MHz\n4 Mbps [82]\n3 - 10 m\n\
    Point to Point\nLi-Fi\nLED Light\n1 – 3.5 Gbps\n[85]\n10 m\nPoint\nto\npoint,\n\
    Star,\nMesh\nBluetooth\n2.4 GHz\nUp to 2 Mbps\n240 m\nStar\nZ-wave\n868 MHz/900\
    \ MHz\n40-100 Kbps\n30 – 100 m\nMesh\nZigbee\n868\nMHz/915\nMHz/2.4 GHz\n250 Kbps\n\
    Up to 100 m\nMesh,\nStar,\nTree\nWi-Fi\n2.4 GHz/5 GHz\n54 Mb/s, 6.75\nGb/s\n140\
    \ m , 100 m\nTree\n6LOWPAN\n[82]\n868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n250\nKbps\n\
    10 - 100 m\nMesh, Star\nField/Neighborhood\nArea\nNetworks\n(FANs/NANs)\nWi-SUN\n\
    868\nMHz/915\nMHz/2.4 GHz\nUp\nto\n300\nKbps\nUp to 4 Km\nStar, Mesh\nWide\nArea\n\
    Net-\nworks (WANs)\nNB-IOT\nLicensed LTE bands\n200 Kbps\n1 - 10 Km\nTree\nLoRaWAN\n\
    433\nMHz/868\nMHz/915 MHz\n50 Kbps\n5 - 20 Km\nStar\nof\nStar\n(nested star)\n\
    Sigfox\n433\nMHz/868\nMHz/915 MHz\n100 bps\n10 – 50 Km\nOne hop star\n3G\n1.8\
    \ – 2.5 GHz\n2 Mbps\n-\nTree\n4G\n600 – 5.925 GHz\nup to 1 Gbps\n-\nTree\n5G\n\
    600 - 80 GHz\nUp to 20 Gbps\n-\nTree\n22\nHome Area \nNetworks (HANs)\nNFC\nRFID\n\
    Li-Fi\nBluetooth\nZ-Wave\nZigbee\nWi-Fi\n6LoWPAN\nField/ Neighborhood \nArea Networks\
    \ \n(FANs/NANs)\nWi-SUN\nWide Area Networks \n(WAN)\nNB-IoT\nLoRaWAN\nSigFox\n\
    Cellular\ndistance\n1 Km\n10 Km\n100 Km\nFigure 5. Network Technologies for IoT\
    \ Smart Cities.\n3.5\nSecurity and Privacy in Smart City IoT\nSmart Cities involve\
    \ the transmission of sensing data, control information through\nthe internet\
    \ as well as local networks. Moreover, several components in smart cities\ntend\
    \ to critical aspects of a citys operation and are highly intertwined with the\
    \ social\nand private life of its citizens. Consequently, security and privacy\
    \ in Smart Cities\nis of great importance and has been of high interest to researchers\
    \ [51, 88, 89, 90,\n91, 92]. The topic of Security of IoT has been covered in\
    \ [93] who deliberate upon\nthe challenges faced in the different architectures\
    \ of the IoT and present issues and\nsolutions. We cover security for IoT in smart\
    \ cities so as to highlight issues that are\npertinent to in the Smart City context\
    \ and to complete our discussion on this topic.\nSmart Cities are enabled by collecting\
    \ data through sensors within a city as well\nas its populace, process it and\
    \ then mine it to provide a better quality of life to the\npeople living. These\
    \ sensors can provide an estimate about the internal state of a\ncity’s components\
    \ such as transportation, power system, building condition/state,\nhuman mobility\
    \ and more. All of this data is sent to the cloud where it is processed\nand mined.\
    \ However, there are several issues that pertain to how these data are\nsent and\
    \ used and raises questions about integrity, protection and the confidentiality\n\
    23\nAttackers\nHackers\nSpies\nTerrorists\nCorporate \nRaiders\nProfessional \n\
    Criminals\nVandals\nVoyeurs\nTool\nPhysical \nAttack\nInformation \nExchange\n\
    User \nCommand\nScript or \nProgram\nAutonomous \nAgent\nToolkit\nDistributed\
    \ \nTool\nData Tap\nVulnerability\nDesign\nImplementation\nConfiguration\nAction\n\
    Probe\nScan\nFlood\nAuthenticate\nBypass\nSpoof\nRead\nCopy\nSteal\nModify\nDelete\n\
    Target\nAccount\nProcess\nData\nComponent\nComputer\nNetwork\nInternetwork\nUnauthorized\
    \ \nResult\nIncreased \nAccess\nDisclosure of \nInformation\nCorruption of \n\
    Information\nDenial of \nService\nTheft of \nResources\nObjectives\nChallenge,\
    \ \nStatus, Thrill\nPolitical Gain\nFinancial Gain\nDamage\nGovernments\nBusiness\n\
    Consumers\nTransport \nSystems\nUtilities\nCity \nAdministration\nSocial Panic\
    \ / \nUnrest\nBusiness Trust \nManipulation\nFigure 6. Modified CERT Attack Taxonomy\
    \ for Smart Cities.\nof this process. In fact, this concern is not unwarranted\
    \ for, in 2015 an attack on\nthe Ukranian power grid which left 225,000 people\
    \ without power [94] opened the\nworlds eyes to the very real threat posed by\
    \ cyber attackers. Data gathered in Smart\nCity applications can be used to perform\
    \ many undesired acts, GPS devices that are\npresent in every phone and most vehicles\
    \ are susceptible to providing information\nabout a persons location, habits as\
    \ well as lead to privacy issues as discussed in [91],\npower consumption and\
    \ ambient sensor data from a building may indicate to occu-\npancy [95] and even\
    \ indicate to the individual identities [96]. This information may\nbe used by\
    \ bad actors to carry out unlawful acts causing risk to life and property.\nTo\
    \ secure the Internet of Things for Smart Cities, typical security schemes might\
    \ not\nbe as effective in many cases and new methods will need to be developed\
    \ to cope\nwith the security and privacy issues in IoT for Smart Cities. In order\
    \ to provide a\nstandardized framework and terminology for discussing security\
    \ attacks, we adapt the\nstandard attack incident taxonomy [97] suggested by the\
    \ Computer Emergency Re-\nsponse Team (CERT) which was established by Defense\
    \ Advanced Research Projects\nAgency (DARPA) for use towards IoT for Smart Cities.\
    \ This is shown in Figure 6.\nThere are different types of security and privacy\
    \ issues in IoT in Smart Cities,\nthey exist on each of the three levels of the\
    \ IoT architecture, application software\nlayers, network layer and the perception\
    \ layer along with some system wide issues, a\ndiscussion is provided for each\
    \ of them. Furthermore, Table 5 provides a summary\nof the security and privacy\
    \ issues in IoT for Smart Cities and the counter measures\nthat one can take to\
    \ mitigate them.\n3.5.1\nApplication Software Layers\nApplication software layers\
    \ are comprised of the Middleware, Application and Busi-\nness Layers. Security\
    \ and privacy in the application software layers tend to issues\nrelating to storage\
    \ of data and its usage. These are data visibility, access and injec-\ntion.\n\
    24\n3.5.1.1\nData Visibility/Identification\nOnce data is gathered, it is sent\
    \ to the\ncloud where it is stored and mined to make inferences. Since the cloud\
    \ would be used\nby multiple entities with different standards of security protocols\
    \ and practices, it is\nextremely important that data stored in the cloud is encrypted\
    \ so as not to allow its\nexposure to unwanted entities. Any data stored in plain\
    \ form would be a risk to not\nonly user privacy but also company rapport.\n3.5.1.2\n\
    Data access/Secondary Use\nAccess control is also a major issue in\nsmart city\
    \ data. Most Smart City applications rely on the usage of data from different\n\
    applications to provide smart services, thus resulting in the gathered data to\
    \ be used\nby many different enterprises. To allow this to take place smoothly\
    \ while preserving\nprivacy, suitable access control schemes will need to be devised\
    \ to allow for responsible\naccess to users of this data. A well-defined hierarchy\
    \ of data users will need to be\ndeveloped and implemented to limit access only\
    \ to intended authorized personnel.\nInformation flow control should also be employed\
    \ that can track data flow as access\nto it is made and to detect any violation\
    \ of access or usage rules. Moreover, data\nmashups that will occur in the cloud\
    \ where multiple entities merge their data to\nwork on some common goal, should\
    \ be carried out with proper oversight.\nData\nanonymization may also be required\
    \ in such a scenario where specific values may be\nconverted in to a range perhaps\
    \ ( e.g., using k-anonymity [90]) and unwanted data be\ndeleted as necessary.\
    \ Blockchain has been suggested to be used for access control as\nwell as access\
    \ tracking of users in IoT applications where each user access to a service\n\
    or an application ends up as a transaction to form the applications IoT trail\
    \ [98].\n3.5.1.3\nData Injection/Data Integrity\nData injection refers to the\
    \ injection\nof false information or modification information about a user in\
    \ the system after\ngaining access. Since data is typically stored in databases,\
    \ SQL injection involves\nan attacker inserting queries to modify data or make\
    \ false data insertions into the\ndatabase. This can have far reaching consequences\
    \ for smart city applications such\nas patient record manipulation as well as\
    \ manipulation or deletion of government\nrecords. SQL injection prevention schemes\
    \ involve the validation of data before using\nit [99] such as positive pattern\
    \ matching. It also involves limiting database access\nbased on the user requirements\
    \ and performing penetration testing.\n3.5.2\nNetwork Layer\nLike other networks,\
    \ the IoT in Smart Cities are also susceptible to network attacks\nsuch as Denial\
    \ of service, Eavesdropping, Man in the middle attack, Side Channel\nand spoofing\
    \ attacks [100]. We discuss these attacks and discuss remedial actions\nthat should\
    \ be taken to prevent them.\n3.5.2.1\nMan in the Middle Attack\nMan in the middle\
    \ (MITM) attack refers\nto the interception of data on the network by faking the\
    \ identity of a network node\nor device. This is carried out by appearing as the\
    \ intended recipient to the sender\n25\nand the original sender to the recipient\
    \ by unauthorized actors. To prevent this,\nthe exchange of data between two entities\
    \ should employ cryptographic protocols\nwhich can ensure secure communication.\
    \ Many public networks do not make use of\nencryption when exchanging data, this\
    \ endangers user data and can give access to\nunwanted persons to user information\
    \ [90]. Policies need to be devised to allow for\nsuitable data communication\
    \ standards for such networks while keeping the user as\nwell as commercial interests\
    \ in mind.\n3.5.2.2\nEavesdropping/Sniffing Attack\nEavesdropping refers to the\
    \ listening\nof data on the network. In eavesdropping an unauthorized entity joins\
    \ the network\nand can listen to the data that is being exchanged between the\
    \ devices on the network.\nTo avoid this, strategies include the use of authenticate\
    \ always protocols which initiate\nauthentication steps whenever devices need\
    \ to communicate with each other. This will\nensure that no unwanted users are\
    \ allowed access to network traffic to prevent such\nattacks. Moreover, industry\
    \ standard security protocols such as the Transport Layer\nSecurity (TLS), Wi-Fi\
    \ Protected Access 2 (WPA2) should be used for authenticating\nremote access.\
    \ Furthermore, remote sessions should have time-outs implemented to\nensure that\
    \ mistakes are not made by forgetful employees.\n3.5.2.3\nSide Channel Attack\n\
    Side Channel Attacks refer to the extraction\nof information by observing operation\
    \ characteristics of the implemented computer\nalgorithms or systems such as power\
    \ consumed, time taken, traffic analysis, fault\nanalysis, acoustic analysis [101].\
    \ Side Channel attacks don’t give nonpermitted parties\naccess to the data within\
    \ the network but may allow them to determine important\ninformation about the\
    \ system, such as the protocol used, or allow them to drop\npackets so as to degrade\
    \ performance of the network. One solution to counter network\ntraffic side channels\
    \ attacks is to saturate network bandwidth to prevent patterns\nfrom being observed.\
    \ Another popular method of preventing side channel attacks is\nto make use of\
    \ masking [102].\n3.5.2.4\nDenial of Service Attack\nDenial of Service (DOS) or\
    \ Distributed DOS\n(DDOS) attacks involve an entity getting access to the network\
    \ and using legitimate\nnodes within it to flood the target with unnecessary requests\
    \ to consume network\nbandwidth and degrade quality of service. With a smart city\
    \ depending on sensors\nto provide it with a ‘view’ of the city, DOS attacks can\
    \ make the smart city system\nblind which can lead to loss of property and life.\
    \ Countermeasures for DOS attacks\ninvolve anomaly detection by monitoring of\
    \ network data to check for any irregular\nbehavior. Artificial Intelligence has\
    \ found applications in this area as noted by [103],\nfor, e.g., it has been used\
    \ to identify abnormal data in smart grids [104] as well as\ndetecting attacks\
    \ [105, 106].\n3.5.2.5\nSpoofing Attack\nIn a spoofing attack, an attacker adds\
    \ itself to the\nnetwork by appearing to be a legitimate device on the network,\
    \ thereby allowing\nthem to send irregular or abnormal data to upset normal operation\
    \ of a smart city\n26\nsystem. Due to the varying nature and types of IoT devices\
    \ having different levels of\nbuilt-in security, spoofing is a particularly dangerous\
    \ attack for IoT systems. Methods\nto prevent spoofing are the use of cryptography,\
    \ hybrid encryption [107] as well as the\nuse of blockchain [108] to validate\
    \ data exchange and as well as authenticate devices.\n3.5.3\nPerception Layer\n\
    Perception layers attacks refer to physical attacks on an IoT based smart city\
    \ system.\nThis requires the physical presence of an attacker near the sensing\
    \ elements in an IoT\nsystem. We cover these attacks to provide a holistic assessment\
    \ of the security and\nprivacy issues in IoT Smart Cities. Tempering and Radio\
    \ Interference (jamming)\nare attacks which can affect the performance of smart\
    \ city systems. Tempering may\noccur during the development or the manufacturing\
    \ process while jamming can take\nplace due to a generation of radio frequencies\
    \ which interfere with the frequencies\nused by devices on the network to exchange\
    \ data. To circumvent this, policies may\nbe incorporated into software which\
    \ alert businesses and other Smart City partners\nto missing or abnormal data\
    \ from sensing devices.\n3.5.4\nSystem Wide Issues\n3.5.4.1\nData Leakage\nData\
    \ leakage refers to the unintentional conveyance of\ninformation about subjects\
    \ in smart cities. The many data sources in smart cities\nmay contain information\
    \ related to a user’s identity, health, quality of life etc. Smart\nCity application\
    \ managers use this data to improve their services and provide a bet-\nter user\
    \ experience, however, it is possible that this data might be shared with third\n\
    party entities. It is therefore necessary to anonymize data before such assignments\n\
    are taken. Data leakage can also take place when devices within a network perform\n\
    discovery tasks and may provide personal information to rogue nodes in the network.\n\
    In Smart Grids, power consumption data should be anonymized by considering the\n\
    data on a neighborhood level rather than on the individual level, moreover, systems\n\
    could be installed in homes using batteries to modify the demand response signal.\n\
    Data aggregation is an important tool in preserving individual privacy and preventing\n\
    data leakage. Moreover, data should be encrypted when sending it over the network\n\
    so that any unauthorized access is avoided. Another strategy would be to use data\n\
    minimization. Typically, sensors used in smart cities will gather data of less\
    \ ‘interest’\nin addition to data of interest. For, e.g., navigation systems many\
    \ times record loca-\ntion information even when not in use or video applications\
    \ such as facial recognition\nsystems typically record other activities apart\
    \ from being activated whenever a face is\nobserved in the video. This extra information\
    \ increases the risk of data leakage. Data\nminimization can be employed in such\
    \ cases to limit the data that is being gathered\non the user.\n3.5.4.2\nTrustworthiness\n\
    Apart from the technical steps that need to be taken\nto provide a secure usage\
    \ experience of smart city applications and to encourage its\nuse, it is important\
    \ that smart city users be provided clear policy guidelines to how\n27\nTable\
    \ 5. Security and Privacy issue for IoT Smart Cities\nLayer\nIssue\nCountermeasure\n\
    Application\nSoftware\nLayers\nData\nvisibility/Identifica-\ntion\n- Use of encryption\
    \ to store data\n(Middleware,\nApplica-\ntion and Business)\nData access/Secondary\
    \ use\n- Access control schemes based on user hi-\nerarchy\n- Data anonymization\
    \ be employed\n- Use of blockchain for tracking user access\nData\ninjection/Data\n\
    in-\ntegrity\n- Use of data validation before usage\n- Limiting data access\n\
    - Query parameterization\n- Penetration testing\nNetwork Layer\nMan in the middle\
    \ attack\n- Use of cryptographic protocols for data\nexchanges\n- Encrypting data\
    \ on public networks\nEavesdropping/Sniffing\nat-\ntack\n- Use always authenticate\
    \ protocols\n- Remote access should use industry ac-\ncepted protocols such as\
    \ TLS, WPA2\n- Timeouts for remote sessions\nSide channel attacks\n- Bandwidth\
    \ saturation\n- Masking to prevent similar operational\npatterns\nDenial of Service\n\
    - Check irregular data requests (AI has\nbeen shown to be of use here)\nSpoofing\
    \ attacks\n- Use of cryptography\n- Use of hybrid encryption\n- Use blockchain\
    \ to validate data exchange\nas well as authenticate devices\nPerception Layer\n\
    Tempering and Jamming\n- Software policies for missing data\nSystem Wide\nData\
    \ leakage\n- Data anonymization\n- Data minimization\n- Data aggregation\nTrustworthiness\n\
    - Provide clear policy guidelines to users\n- Flexible policy development in consulta-\n\
    tion with users\ncompanies providing them these services will manage their data.\
    \ Transparency in this\nregard will help increase user trust and the feedback\
    \ will enable companies to develop\nbetter data privacy mechanisms. Another way\
    \ trust could be developed would be for\nthe companies to provide customers who\
    \ are vary of data collection, certain options\nin policies where they could choose\
    \ which parts of the data collection are acceptable\nto them and which aren’t.\n\
    4\nSWOT Analysis\nTo complete this discussion, we perform a Strength Weaknesses\
    \ Opportunities Threat\n(SWOT) analysis on the use of IoT for Smart Cities that\
    \ discusses the strengths that\nIoT offers for Smart cities, the weaknesses in\
    \ the current implementation scenario,\nthe opportunities which exist for future\
    \ work in this area as well as the threats that\nIoT application to smart cities\
    \ faces, a summary of our discussion has been given in\n28\nTable 6. SWOT Analysis\
    \ for IoT in Smart Cities\nPositive\nNegative\nStrengths\nWeaknesses\nInternal\n\
    - Sustainable living\n- Lack of data control policies\n- Improved quality of life\n\
    - Laws need to be developed\n- Efficient city operations\n- Interoperability of\
    \ networks\n- Well suited for big data algorithms\n- Incompatible sensor standards\n\
    - Scalability of applications\n- Myriad of different application\nframeworks\n\
    - Real-time/fast response due to distributed IoT\nstructure\n- Reduced costs\n\
    - Robustness\n- Enable heterogenous system connectivity\nOpportunities\nThreats\n\
    External\n- Development of new sensor technologies.\n-\nTrustworthiness\nissues\n\
    among\nusers\n- Development of low power and higher speed com-\nmunication schemes\n\
    - Network attacks\n- Development of Encryption techniques for stor-\nage and data\
    \ exchange\n- Data theft\n- Development of Data processing for privacy\npreservation\
    \ techniques\n- Data leakage\n- Development of new city services\n- Development\
    \ of scalable, explainable AI\nTable 6.\n4.1\nStrengths\nIoT smart city strengths\
    \ are the fact that they provide an improved quality of life for\na city’s population\
    \ along with reduction of costs in terms of operation and also enable\ncities\
    \ to be sustainable. IoT enables sensors and devices to be deployed throughout\
    \ a\ncity to give an overview of the state of the city’s main functions such as\
    \ transportation\nsystems, electric, water and gas distribution as well as crime\
    \ monitoring to name\na few. This real time information helps city administration,\
    \ businesses and other\nstakeholders to provide better services to people, increase\
    \ the effectiveness of those\nservices and reduce the cost through efficient operation.\n\
    On the technical side, IoT data has made possible to use data analytics to gauge\n\
    various aspects of the multitude of services which are being provided in the city\
    \ as\nwell as to determine interactions between them and utilize that information\
    \ for better\ndecision making to make life easier for citizens. Furthermore, the\
    \ distributed nature\nof IoT systems and the flexible architectures which enable\
    \ fluidity through movement\nof sensing units is easily scalable thereby requiring\
    \ little additional cost to upgrade\nand expand currently deployed systems. Moreover,\
    \ this distributed architecture also\nmakes such systems very robust to faults\
    \ thereby increasing reliability of deployments\nand offering self-healing in\
    \ applications such as electricity systems.\n29\n4.2\nWeaknesses\nIoT in Smart\
    \ cities do suffer from some weaknesses in terms of technology, for, e.g.,\nthe\
    \ current deployment scenario has a myriad of different technologies relating\
    \ to\nnetworks, hardware platforms and software frameworks which do not often\
    \ work to-\ngether very well as discussed. Different standards’ bodies such as\
    \ the IETF, European\nTelecommunications Standards Institute (ETSI), IEEE and\
    \ other organizations have\nbeen contributing with standards for communication,\
    \ network discovery, identifica-\ntion, management of devices etc. However, the\
    \ sheer number of ‘standards’ with\nmany of them not being compatible with each\
    \ other has not fully solved the inter-\noperability problem and this can cause\
    \ hurdles for expansion of IoT systems without\na significant overhaul of system\
    \ components. Another problem currently facing IoT\nsystems is the lack of data\
    \ policies and legislation. The concern here is that data\npolicies are not mature\
    \ enough to regulate how data is handled in IoT systems, as\nhas been discussed\
    \ previously. This is a major problem given the growing issue with\nuser data\
    \ privacy in a connected world.\n4.3\nOpportunities\nIoT in Smart cities presents\
    \ many opportunities to researchers and businesses alike\nin lieu of mitigating\
    \ the weaknesses and also in the provision of new city services.\nThe data gathered\
    \ by the sensors in IoT systems has the potential to provide a\nholistic overview\
    \ of the city’s state allowing for the use of big data algorithms to\ndevelop\
    \ new applications and services. For researchers in the data analytics domain,\n\
    this heterogenous data provides a wonderful opportunity for the development of\
    \ new\ndata science algorithms for service delivery. There is a large monetary\
    \ value towards\nthe development and usage of computationally cheap encryption\
    \ techniques, efficient\ndata storage methods and networking technologies to make\
    \ IoT deployment easier\nand cheaper.\nDevelopment of new sensor technologies\
    \ is another opportunity for\nresearchers in IoT for smart cities.\nThe development\
    \ of newer, efficient, low-cost\nsensors would aid to the creation of IoT services\
    \ and enable even wider usage.\n4.4\nThreats\nWith a connected system, there are\
    \ several threats that come with IoTs for Smart\nCities involving trust issues\
    \ among users, privacy concerns due to network attacks,\npotential data theft\
    \ etc. Privacy and security are the most important concerns of\nIoT applications,\
    \ with such a personalized interaction mechanism between people\nand devices as\
    \ is the case of smart cities, the risks for privacy breaches, data theft\nand\
    \ leakages are high and this is a constant concern for service users as well as\n\
    providers. Numerous attacks on Smart City systems have exposed the vulnerability\n\
    of this technology to cyber attacks and also demonstrated the consequences that\
    \ it\nhas on the population. Traditional security procedures and methods such\
    \ as access\nauthentication, routing and networking might not be enough or possible\
    \ in many IoT\ndeployments due to IoT devices typically not having sufficient\
    \ computing capabilities,\n30\nthis has exacerbated the privacy and security concerns\
    \ for IoT stakeholders. This can\nalso feed to a lack of trust by customers to\
    \ participate in smart city applications.\n5\nConclusions\nThis chapter presented\
    \ a broad coverage of the Internet of Things in Smart Cities.\nProviding a detailed\
    \ discussion of Smart Cities and its different domains, IoT was\npresented as\
    \ a vital enabler of smart city services and the various smart city architec-\n\
    tures and the challenges that are faced in the deployment of smart city applications\n\
    were deliberated upon. This was followed by a review of the sensing and networking\n\
    technologies used for such applications Finally, the security and privacy issues\
    \ faced\nby IoT based Smart Cities were discussed and a SWOT analysis is provided.\n\
    31\nCHAPTER III\nAI IN IOT SMART CITIES\n1\nIntroduction\nThis chapter provides\
    \ insight into different ways in which AI has been applied in\nthe IoT for Smart\
    \ Cities using the application of clustering, regression, classification\netc.\
    \ In addition, various applications, solutions and data used for implementing\
    \ the\noverall framework of Smart Cities are discussed in detail. along with the\
    \ types of\ndeployment used by these proposed approaches.\n2\nBig Data Algorithms/Artificial\
    \ Intelligence\nThe various sensors that make up the internet of things in a smart\
    \ city relay in-\nformation about the city’s state to the cloud. However, measuring\
    \ raw data is not\nenough, to utilize this data and to make the city ‘smart’,\
    \ data analysis is key. Data\nanalysis in smart cities has four layers, the first\
    \ is Data Acquisition, which deals with\nthe collection and storage of data, this\
    \ is followed by the Preprocessing layer which\nperforms operations (such as imputing\
    \ missing values, scaling, removing erroneous\ndata points etc.) on the data to\
    \ ensure that data is of suitable quality to be used for\nthe data analytics stage.\
    \ The data analytics stage involves the application of data\nscience techniques\
    \ on the data to extract patterns and insights which would be used\nfor policy\
    \ making, planning and other actions in the Service layer. In this section, we\n\
    focus our attention on the third stage of the data analysis process, i.e., data\
    \ analytics.\nData analytics in the Smart City based on the IoT involves the use\
    \ of Deep Learning\nand Machine Learning on the gathered data. The discussion\
    \ in this chapter considers\nthe following aspects of the use of AI (ML/DL) in\
    \ the IoT for smart cities:\n1. The type of application: This refers to the aim\
    \ of the application.\n2. Algorithm/Network: This refers to the algorithm being\
    \ used to perform the\ntask and can be any of the ML/DL algorithms covered.\n\
    3. System Architecture: System architecture refers to the IoT architecture pro-\n\
    posed for the covered work. This can be Cloud, Fog or Edge.\n4. Task: This refers\
    \ to the type of machine learning task being performed. This can\nbe classification,\
    \ clustering or regression. In this category, a brief description is\nalso presented\
    \ about what quantities/outcomes are being worked with.\n32\n5. Data Type: This\
    \ refers to the type of data being used. Data can be of two\ntypes, heterogeneous\
    \ or homogeneous. Heterogeneous refers to the use of data\nof different modalities\
    \ whereas homogenous refers to a single modality being\nused. The aim of providing\
    \ this information is to capture the complexity of the\ndata involved in an application.\n\
    2.1\nMachine Learning\nMachine learning (ML) has been a crucial element of smart\
    \ city application develop-\nment [109], helping in prediction (classification),\
    \ estimation (regression) and cluster-\ning tasks. Machine learning refers to\
    \ the set of approaches through which computers\ncan be used to learn from empirical\
    \ data [110] and has been used in smart cities\nin various applications. Since\
    \ there has been a lot of work in this area using ML\nalgorithms, we focus on\
    \ work in the last few years. It was found that most commonly\nused ML algorithms\
    \ have been the Support Vector Machine (SVM), Random Forests\n(RF), Decision Tree\
    \ (DT), Naive Bayes (NB), K-Means, K-Nearest Neighbor (K-NN)\nand Logistic Regression\
    \ (LR).\n2.2\nDeep Learning\nDeep learning is the use of successive layers of\
    \ Artificial Neural Networks (ANNs) to\nlearn patterns. The idea is that successive\
    \ non-linear layers of interconnected artificial\nneurons can be used to learn\
    \ patterns in data that simple machine learning algorithms\nmight not be able\
    \ to do. Deep learning architectures can process noisy data to provide\noutput\
    \ for classification and prediction tasks. This makes them very useful in the\n\
    Smart City environment where the IoT enables the collection of heterogeneous sensor\n\
    data which can be of varying nature. Data derived from sensors can be processed\
    \ to\nextract features or can be fed directly to deep learning algorithms which\
    \ can perform\nboth feature extraction as well as classification/prediction. Deep\
    \ Learning methods\nsuch as Recurrent Neural Networks (RNN)(Long Short-Term Machines\
    \ (LSTM) and\nGated Recurrent Units (GRU)), Convolutional Neural Networks (CNN),\
    \ Deep Neural\nNetworks (DNN) and Stacked Autoencoder Networks (SAE) were the\
    \ preferred deep\nlearning methodologies used for smart city applications and\
    \ our discussion revolves\naround the utilization of these methods.\n3\nAI Applications\
    \ for Smart Cities\nIn this section, the applications for of AI in smart cities\
    \ have been discussed, we also\nmention the kind of deployment as well as the\
    \ nature of data utilized to achieve their\ntask.\n3.1\nSmart Agriculture\nThe\
    \ major applications of AI in IoT for agriculture are crop monitoring/disease\
    \ de-\ntection and data driven crop care and decision making. Considering the\
    \ scarcity of\n33\nwater, the authors in [111, 112, 113] develop irrigation systems\
    \ which monitor and\ncontrol the amount of water being used for crops, all structured\
    \ around a cloud com-\nputing system. This problem has been devised both as a\
    \ classification as well as a\nregression problem as in [114], who develop a closed\
    \ loop water irrigation system using\nsupport vector regression and K-Means clustering.\
    \ The authors in [115, 116] propose\ncloud based greenhouse monitoring systems\
    \ using images and a host of physical pa-\nrameters from plants such as temperature,\
    \ humidity and light using several machine\nand deep learning methods. Plant disease\
    \ detection is also an important task within\nsmart agriculture and has been worked\
    \ on by the authors in [117, 118, 119, 120] who\npresent schemes for disease detection\
    \ for various crops including tomatoes and pota-\ntoes. The proliferation of sensing\
    \ systems in agricultural fields has also provided an\navenue for data driven\
    \ decision making and planning for farmers. This involves pre-\ndicting various\
    \ physical parameters which can affect crop growth like solar radiance\n[121]\
    \ and temperature, humidity, windspeed [122, 123, 124, 125, 126] to help in deci-\n\
    sion making in terms of plant care but also classification systems for recommending\n\
    crops to be sown [127, 128]. It is important to note that all of these implementations\n\
    are cloud based.\nThere have been some suggested methodologies for bringing fog\
    \ processing for AI\nin smart agriculture, for, e.g., in [129] a deep learning\
    \ entrusted to fog nodes (DLEFN)\nalgorithm is described to support efficient\
    \ use of resources and reduce cloud resource\nusage. However, as noted in [130],\
    \ who use an edge system for temperature prediction\nusing an LSTM, edge device\
    \ performance still lacks that of similar cloud systems but\nthe inclusion of\
    \ DL capable hardware does provide opportunities for further innova-\ntions. Previous\
    \ work by the same author [131], where they aimed to monitor crops\nfor frost\
    \ signs and trigger anti-frost measures, compared edge and cloud computing\nsystems\
    \ for outlier detection and determined that cloud implementations to provide\n\
    much better performance. However, they do note the potential for edge systems\
    \ to\nprovide highly responsive data analytics in smart agriculture. More applications\
    \ can\nbe envisaged for AI deployment in smart agriculture, for, e.g., monitoring\
    \ of crop\ngrowth, selection of the fertilizer and the timeline for it to be used\
    \ as well as targeted\napplication, pest detection and intelligent pesticide spraying\
    \ so as to reduce harm to\nthe environment, environmental monitoring to track\
    \ the effects of climate change and\nmore. Some of these applications have potential\
    \ to be deployed as edge computing\nsystems. A summary of the use of IoT based\
    \ AI in Smart Agriculture is presented in\nTable 7.\n3.2\nSmart City Services\n\
    A popular component of smart city initiatives is the management of waste and involves\n\
    having bins equipped with sensors and connected to the cloud to not only inform\
    \ the\nrelevant authorities of the need to empty them but also using AI to determine\
    \ the\nbest route to reduce fuel consumption. The use of IoT systems for waste\
    \ management\nhas been observed in the works of [133] who utilize IoT systems\
    \ to help reduce energy\nwastage in waste collection by municipalities. Hussain\
    \ et al. [134] develop a waste\nmanagement system that not only determines if\
    \ bins are full and need collecting\n34\nTable 7. AI use for Smart Agriculture\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nCrop\nMonitoring\n\
    /Plant care (Irriga-\ntion)\nLR [111]\nCloud\nClassification\n-\nDifferent\nstates\
    \ of crop [less water\netc])\nHeterogeneous\n(Temperature,\nSoil\nmoisture, Air\
    \ quality,\nSunlight etc)\nDT [113]\nCNN [112]\nClassification\n-\nDifferent\n\
    conditions of plants and soil\n[dry etc])\nHomogeneous\n(Im-\nages)\nSVR + K-Means\
    \ [114]\nRegression\n-\nPredicting\namount of moisture in soil\nHeterogeneous\n\
    (Soil moisture,\nSoil\ntemperature,\nAir\ntemperature,\nUltra-\nviolet\n(UV)\n\
    light\nradiation,\nRelative\nhumidity,\nWeather\nforecast data)\nCrop\nMonitoring\n\
    /Plant\ncare\n(Mon-\nitoring\nand\ndisease\ndetection)\nSVM [115]\nCloud\nRegression\n\
    -\nForecasting\ntemperature\nHeterogeneous (Tem-\nperature,\nHumidity,\nLight,\
    \ Soil moisture)\nSVM [118]\nRegression\n-\nDaily\ncrop\ngrowth\n(indirectly\n\
    from\nmeasured data)\nSVM [117]\nClassification\n–\nDifferent\ncrop conditions\n\
    Heterogeneous\n(Im-\nages, Gas)\nSVM + K-Means + CNN\n[116]\nClassification\n\
    -\nDifferent\nstages of tomato growth\nHomogeneous\n(Im-\nages)\nSVM [119]\nClassification\
    \ - Recognizing\nand detecting disease\nCNN [120]\nEdge\nData driven crop care\n\
    and decision making\n(Predicting\nphysical\nparameters)\nCNN + RNN(GRU) [122]\n\
    Cloud\nRegression - Prediction of\nTemperature, Humidity and\nWind speed\nHeterogeneous\
    \ (Tem-\nperature,\nHumidity,\nWind\nspeed,\nLoca-\ntion\nof\nmonitoring\nstation,\
    \ Time, Rain-\nfall, Solar radiation)\nRFC[126]\nRNN (LSTM) [123]\nDNN [125]\n\
    RNN (GRU) [124]\nDNN [121]\nRegression - Prediction of\nsolar radiance\nRNN (LSTM)\
    \ [132]\nEdge /Cloud\nRegression\n-\nTemperature\nforecasting\nData driven crop\
    \ care\nand decision making\n(Crop\nrecommenda-\ntion)\nDT [127]\nCloud\nClassification\n\
    -\nDifferent\ncrops\nHomogeneous (Tem-\nperature)\nDT [128]\nClassification -\
    \ Soil fertility\nand type, Regression - Pre-\ndiction of soil toxicity\nHeterogeneous\n\
    (Soil\nmoisture,\nTemper-\nature,\nHumidity,\nPH,\nSoil\nnutrient\ncontent/fertility)\n\
    35\n(using data from various sensors placed in the bin) but also predicts the\
    \ air quality\naround it using RNNs. The sensing modalities in each of these applications\
    \ is pretty\nsimilar in that they indicate to whether a waste bin is full or not\
    \ which is then\nused for route planning. Considering the requirements of such\
    \ a system, in terms\nof implementation, all of these systems are cloud based.\
    \ Sewer monitoring has been\nperformed in [135] in a cloud based system, they\
    \ use sewer water level and rain gauge\ndata along with a RNN to perform sewer\
    \ overflow monitoring. The RNN is used to\npredict sewer overflow ahead in time.\
    \ Water quality has monitoring has been the focus\nof [136, 137, 138] where the\
    \ authors use multiple sensors measuring pH value, chloride,\nnitrate content\
    \ and hardness of water to determine whether it is fit for drinking or\nnot. In\
    \ [139], Liu et al. use data from water monitoring stations along the Yangtze\n\
    river to predict water quality. Like the classification-based systems, they use\
    \ multiple\nchemical measurements from the water such as oxygen, pH, turbidity\
    \ etc. Apart from\nair quality, smart city monitoring systems are an important\
    \ application within the\nsmart city services domain. This includes urban noise,\
    \ which has been the focus of\nresearchers in [140, 141] as well as other more\
    \ comprehensive monitoring systems as\nproposed in [142, 143]. All these systems\
    \ are cloud based and use a combination\nof sensors for sound and/or image data\
    \ for performing noise monitoring/detection\nand various smart city dashboard\
    \ applications. In Table 8, we summarize the type\nof deployments, applications\
    \ task and data for smart city services applications. It\nis noted that most of\
    \ the applications relating to city services such as air quality\nmonitoring and\
    \ prediction, sewer monitoring, waste collection have been proposed as\ncloud\
    \ systems as data needs to be collected from nodes at various points in a city.\n\
    It is envisaged that due to the nature of the applications, many smart city services\n\
    would still rely on cloud or fog architectures as the decision-making taking place\
    \ in\nsuch situations isn’t possible on only a local level. It is also observed\
    \ that most of the\napplications required data from multiple sensors and therefore\
    \ utilized heterogeneous\ndata to carry out the task at hand.\n3.3\nSmart Energy\n\
    Load/energy consumption forecasting is an essential task for monitoring and control\n\
    of electrical power supply in the electricity grid and ensure appropriate demand\
    \ side\nmanagement. It has been performed by the authors of [148] who use data\
    \ collected\nfrom consumers in a smart grid to determine load for up to 24 h in\
    \ advance. They treat\nthis as primarily a clustering problem where they form\
    \ clusters of similar load profiles\nand then use distance functions to determine\
    \ energy consumption for the future. The\nauthors in [149] also use a cloud based\
    \ clustering approach, using historical power\ndata, they use K-Means clustering\
    \ to determine the closest historical records and then\ncombine them to predict\
    \ energy consumption 24 h in advance. The load forecasting\nproblem has been dealt\
    \ as a regression by [150] using a SVM and by [151] through an\nRNN using electricity\
    \ power data. A regression approach is also followed by [152, 153]\nwho use electricity\
    \ consumption in addition to environmental data for load forecasting\nusing deep\
    \ learning methods (DNN and a combination of Autoencoders and RNNs\n(GRU)). Edge\
    \ based systems have been suggested by the authors of [154, 155, 156]\n36\nTable\
    \ 8. AI use for Smart city Services\nApplication\nNetwork\nSystem\nAr-\nchitecture\n\
    Task\nData type\nAir quality\nK-NN [144]\nCloud\nClassification - Differentiate\n\
    between different air quality\nlevels\nHeterogenous\n(Gas,\nLight, Temperature,\n\
    Humidity, Pressure,\nRFC[145]\nWind\nspeed,\nWeather\ninfor-\nmation, Images,\n\
    RFC[146]\nTraffic\nflow\ndata,\nVisibility,\ninforma-\ntion about\nRNN (LSTM)\
    \ [147]\nRegression - Prediction of\nair quality levels\ntypes\nof\nbuildings\n\
    etc)\nWater quality moni-\ntoring\nNB [136]\nCloud\nClassification - Determine\
    \ if\nwater is fit to drink or not\nHeterogeneous\n(Chlorides, Nitrates,\nTotal\n\
    dissolved\nsolids,\nSVM [137]\npH\nand\nHardness,\nand\nother\nchemical\nproperties)\n\
    DNN [138]\nRNN (LSTM) [139]\nRegression - Prediction of\nwater quality\nSewer\
    \ Overflow Mon-\nitoring\nRNN (GRU,LSTM) [135]\nCloud\nRegression - Prediction\
    \ of\nwhen\nHeterogeneous (Wa-\nter level sensor data\n(ultrasonic)\nover\ndrain\
    \ holes as well as\nrain gauges)\nWaste management\nRNN (LSTM) for prediction\n\
    of air quality [134] , K-NN\nfor detection of waste bin be-\ning full\nCloud\n\
    Regression - Prediction of\nair pollutant levels, Classifi-\ncation - Bin full\
    \ or not\nHeterogeneous\n(Odor, Weight, Level\nsensing using\nRFC[133]\nClassification\
    \ - Empty bin or\nnot\nultrasonic\nsensor,\nGas\nsensor\nfor\nair\nquality, Vibration)\n\
    Urban noise monitor-\ning\nCNN [140]\nCloud\nClassification\n-\nDifferent\ntypes\
    \ of sounds\nHomogeneous\n(Sound)\nRNN (LSTM) [141]\nRegression – Prediction of\n\
    noise levels\nManagement\nof\nSmart City\nCNN [143]\nCloud\nApplication\n–\nDashboard\n\
    (object identification etc)\nHeterogeneous (Var-\nious sensors, Urban\nvideo\n\
    and\nsound\ndata)\nCNN [142]\nfor load forecasting for household consumers, [156]\
    \ use federated learning to train a\nRNN. In addition to load forecasting, smart\
    \ grid management/monitoring is also a\nnecessary application in this domain.\
    \ The authors in [157] use decision trees in a cloud\nbased system to classify\
    \ between different faults in a smart grid. In [158], the authors\nuse power consumption\
    \ data from consumers in China to determine electricity theft\nin a cloud based\
    \ system. They use wide and deep convolutional neural networks to\ncapture the\
    \ periodic and nonperiodic components from electricity consumption data\nand show\
    \ their network to be suitable for electricity theft detection. The authors in\n\
    [159] present a framework for edge computing based monitoring of the smart grid.\n\
    Edge computing in the smart grid has several advantages as it reduces delay and\
    \ also\nit is secure in terms of data privacy. A summary of the use of IoT based\
    \ AI in Smart\nEnergy is provided in Table 9.\n37\nTable 9. AI use for Smart Energy\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nEnergy/Load\n\
    con-\nsumption forecasting\nK-Means [148]\nCloud\nClustering - Determine clus-\n\
    ters of similar power con-\nsumption\nHomogeneous (Elec-\ntric power)\nK-NN [149]\n\
    Regression - Predict con-\nsumption\nof\nelectricity\nahead of time\nSVM [150]\n\
    RNN (LSTM) [151]\nDNN [152]\nHeterogeneous (Elec-\ntric\npower,\nTem-\nperature,\n\
    Humidity,\nTime, Holiday\nSAE + RNN (GRU) [153]\nCNN [155]\nEdge\nRNN (GRU) [154]\n\
    Homogeneous (Elec-\ntric power)\nRNN (LSTM) [156]\nSmart\nGrid\nline\nevent\n\
    classification\n(fault etc.)\nDT [157]\nCloud\nClassification\n-\nDifferent\n\
    powerline events\nHomogeneous (Elec-\ntric power)\nElectricity theft de-\ntection\n\
    CNN [158]\nCloud\nClassification - Theft detec-\ntion for abnormal patterns\n\
    of consumption\nHomogeneous (Elec-\ntric power)\n3.4\nSmart Health\nThere are\
    \ two major applications of IoT with AI in health, these are activity recog-\n\
    nition/fall detection and disease diagnosis/health monitoring, a summary of the\
    \ IoT\nbased AI systems used in Smart Health is presented in Table 10. Activity\
    \ recog-\nnition involves the use of movement sensors such as accelerometers,\
    \ gyroscopes and\nmagnetometers with the aim to help provide the user with feedback\
    \ on their health.\nThis can be in terms of them having enough physical exercise\
    \ or not, used for sports\ntherapy, fall detection and for monitoring of different\
    \ diseases such as Parkinson’s or\nother motor degenerative ailments. The most\
    \ popular sensor for activity recognition\nare inertial sensors which have been\
    \ used by [160, 161] in a cloud based setting using\nvarious deep and machine\
    \ learning algorithms. In [162], Castro et al. include vital\nsign data in addition\
    \ to movement information for human activity recognition in a\ncloud environment,\
    \ they utilize the DT as their classifier. In [163],, the authors pro-\npose an\
    \ edge-based system to perform activity recognition for people by recording\n\
    their movements using the accelerometer and gyroscope present on the phone. They\n\
    use a SVM as their classifier and differentiate between six different activities\
    \ of daily\nliving. Fall detection has been performed by [164, 165] in a fog and\
    \ edge environment,\nrespectively, using an accelerometer, Santos et al. [164]\
    \ use a CNN while Yacchirema\net al. [165] useRFCwith both approaches showing\
    \ promising results.\nEquipped with the power of AI in IoT, Smart Health systems\
    \ facilitate the provi-\nsion of telehealth services as well as real time monitoring\
    \ of patients, giving doctors\nand patients feedback on their health.\nHealth\
    \ monitoring systems and real time\ndisease diagnosis have been one of the most\
    \ important applications of IoT technol-\nogy. The authors in [166, 167, 168,\
    \ 169, 170, 171, 172, 173, 174, 175, 176] develop\ncloud based health monitoring\
    \ systems for detecting various types of diseases, such\n38\nas heart (stroke\
    \ [167], irregular sound [169], irregular rhythm [171, 173]), epilep-\ntic seizures\
    \ [172], Parkinson seizure [176] and multiple disease diagnosis systems\n[174,\
    \ 175]. In [174, 175], the authors formulate the problem of disease diagnosis\
    \ as\na classification problem and utilize medical data such as ECGs, EEG, heart\
    \ rate,\nblood pressure, blood sugar, heart sound, blood glucose, liver health\
    \ along with var-\nious machine and deep learning methods to achieve this task.\
    \ Fog and edge based\nhealth monitoring/disease diagnosis systems have also been\
    \ suggested by a number\nof researchers. The authors in [177] present a fog based\
    \ system using a deep neural\nnetwork to detect heart disease from a patients\
    \ vital signs (blood oxygen, heart rate,\nrespiration rate, EEG, ECG, EMG, blood\
    \ pressure, glucose) and activity data. In\n[178], Devarajan & Ravi work on a\
    \ fog computing based Parkinson detection system\nusing a persons speech. Moreover,\
    \ an edge computing system is presented in [179]\nwhich utilizes EEG signals to\
    \ determine seizures in patients.\nTable 10. AI use for Smart Health\nApplication\n\
    Network\nSystem\nArchi-\ntecture\nTask\nData type\nHuman\nactivity\nrecognition/Fall\n\
    de-\ntection\nDT [162]\nCloud\nClassification - Different activities,\nfall /non\
    \ falls\nHeterogeneous (Acceleration, Heart\nrate,\nPosture,\nECG, Respiration\n\
    rate)\nRFC[160]\nHomogeneous (Accelerometer)\nCNN [161]\nRNN\n(LSTM)\n[180]\n\
    Fog Edge\nHeterogeneous (Accelerometer, Gy-\nroscope, Magnetometer)\nCNN [164]\n\
    Fog\nRFC[165]\nEdge\nHeterogeneous (Accelerometer and\nGyroscope)\nSVM [163]\n\
    Patient health moni-\ntoring\nDT [166]\nCloud\nClassification\n-\nRecommendation\n\
    about diet etc\nHeterogeneous (Heart rate, Sleep,\nCalories burned, Weight, Physical\n\
    activity time, Water, Exercise etc)\nSVM [169]\nClassification - Different emotions\n\
    Heterogeneous (Speech and Image)\nRNN(LSTM)\n[181]\nHeterogeneous (ECG, BVP, GSR,\n\
    SKT, EMG)\nCNN\n+\nSAE [172]\nClassification - Abnormal/normal\nheart sounds\n\
    Homogeneous (EEG)\nRFC[168]\nClassification - Epileptic Seizure de-\ntection\n\
    Homogeneous (Heart sounds)\nSVM [171]\nClassification - ECG arrhythmias\nHomogeneous\
    \ (ECG)\nDisease diagnosis\nDT [173]\nCloud\nClassification - Different heart\
    \ dis-\neases\nHeterogeneous (Heart health infor-\nmation, Patient records and\
    \ other\nhealth sensors)\nK-Means\n[174]\nClassification - Kidney, Heart and\n\
    Liver disease\nHeterogeneous (Heart and Kidney\nhealth data)\nRFC[175]\nClassification\
    \ - Detection of various\ndiseases\nHeterogeneous\n(Diabetes,\nHeart,\nLiver,\
    \ Dermatology etc data)\nDNN [177]\nFog\nClassification - Presence of heart\n\
    disease or not\nHeterogeneous\n(Blood\noxygen,\nHeart rate, Respiration rate,\
    \ EEG,\nECG, EMG, Blood Pressure, Glu-\ncose and Activity data)\nParkinson detection/\n\
    RFC[167]\nCloud\nClassification - Parkinson detec-\ntion/stroke has happened/seizure\n\
    detection\nHeterogeneous\n(Blood\npressure,\nSugar, Pulse rate)\nSeizure monitoring\n\
    SVM [176]\nHomogeneous (Speech)\nK-NN\n[178]\nFog\nNB [179]\nEdge\nHomogeneous\
    \ (EEG)\n39\n3.5\nSmart Homes\nAmbient assisted living is a huge component of\
    \ Smart Homes.\nThis is especially\nneeded for the elderly and is typically achieved\
    \ by the use of ambient sensors, Wi-Fi\nand radio frequency systems in smart homes.\
    \ In this work, we include all monitoring\nmethods that depend on sensors placed\
    \ in the home/within the smart home domain.\nIn [182], Pirzada et al. use a network\
    \ of reed switches connected to the cloud to\nmonitor the activities of elderly\
    \ people as a clustering problem. They use the K-\nNN algorithm to determine anomalies\
    \ in the daily activities which can then be used\nto send medical or other help\
    \ requests to assist people. A similar setup for activity\nrecognition for ambient\
    \ assisted living has been presented in [183, 184, 185] where they\nuse data from\
    \ a number of different sensors including motion, presence, water float,\ntemperature\
    \ etc to determine various activities being performed in a home. In [186],\na\
    \ cloud based assisted living system for the deaf has been developed that performs\n\
    haptic conversions for sounds detected in a home. An array of sensors are used\
    \ to\nmonitor environmental sound and the authors use RNNs for detecting the sound\n\
    event before its passed on to the haptic vibration producer. Another task within\n\
    in monitoring is localization of people, this part of smart homes is also applicable\n\
    to smart infrastructure in that such systems are used in smart buildings as well.\n\
    Applications of localization include security, i.e., detecting unauthorized presence\n\
    and people monitoring in general (for, e.g., locating elderly people in homes)\
    \ etc.\nThe authors in [187] perform localization using a grid of Wi-Fi units\
    \ that measure\nsignal strength to determine peoples locations indoors for buildings.\
    \ They formulate\nthis both as a classification problem as well as a regression\
    \ problem. The classification\nproblem being formulated as coded locations (for,\
    \ e.g., a given room no) while the\nregression case estimating the location of\
    \ the user in a coordinate grid. Their system is\ncloud based and they use a deep\
    \ neural network to perform this task and have found\nsuitably good results. Occupancy\
    \ detection has been performed by the authors of\n[188] making use of various\
    \ ambient measurements (temperature, humidity, pressure\netc.) and passing them\
    \ to a cloud before using a deep neural network to classify\nbetween the various\
    \ number of people present in an indoor environment. In [189],\nZimmermann et\
    \ al. also make use of ambient sensors for the occupancy problem and\nuse a na¨ıve\
    \ bayes learner to determine both the presence of occupants as well as their\n\
    number.\nHome automation is another application that the IoT finds application\n\
    within the Smart Home domain. The integration of AI has helped develop smart\n\
    home automation systems that aim to reduce energy consumption in homes as well\n\
    as maintain user privacy, security. Chowdhry et al. [190] use a combination of\
    \ visual\ndata and motion sensing to perform home automation for security using\
    \ a SVM.\nAn interesting use of AI in home automation is presented in [191] who\
    \ develop a\ncloud based home automation system, they take measurements from various\
    \ ambient\nsensors and control appliances and use a Na¨ıve Bayes classifier to\
    \ determine which\ntechnician to call whenever sensor measurements appear aberrated.\
    \ The problem of\nintelligent consumption of energy has been considered by [192]\
    \ who develop an energy\ndisaggregation system on the appliance level in smart\
    \ homes using stacked denoising\nautoencoders. They achieve this using power data\
    \ for individual appliances as well\n40\nas the total power consumed in the home\
    \ and send it to a local cloud. Data is then\ndisaggregated for various appliances\
    \ to provide feedback to the user.\nMore work\nproviding energy intelligence to\
    \ consumers has been performed by [193, 194, 195].\nKonstantakopoulos et al. [195]\
    \ pose this as a regression problem, they propose a\ncloud-based system utilizing\
    \ both ambient sensor data (lighting, temperature etc)\nand appliance power data\
    \ to forecast resource usage for consumers using a RNN.\nThey show a reduction\
    \ in energy consumption for their users using this information.\nEventhough applications\
    \ covered in smart homes have been cloud based systems,\nthere have been recent\
    \ proposals for frameworks that combine edge and cloud pro-\ncessing as in [196]\
    \ who discuss a hierarchical control system for smart homes through\na edge microgrid\
    \ and a cloud power grid. Due to the nature of smart homes in that\nthe sensing\
    \ scheme is present within a finite space (within the home), edge and fog\ncomputing\
    \ based systems are expected to be increasingly incorporated smart home\napplications.\
    \ A summary of the use of IoT based AI in Smart Homes is presented in\nTable 11.\n\
    3.6\nSmart Industry\nOne of the major applications of AI in the IoT powered smart\
    \ industry is towards\nfault detection in products and anomaly detection in industrial\
    \ processes. This has\nseen the use of both Machine Learning (SVM [197, 198],RFC[199,\
    \ 200]) as well as\nDeep Learning (DNN [201, 202, 203], CNN [204]) methods using\
    \ a cloud computing\nstructure to perform anomaly detection/product inspection\
    \ and monitoring using a\nvariety of heterogeneous and homogenous data sources\
    \ such as inertial sensors for ma-\nchines, images for products and processes\
    \ and other process specific variables. Other\napproaches suggested in [205, 206]\
    \ propose a fog computing method along with edge\ncomputing systems suggested\
    \ in [207, 208]. An edge computing system for anomaly\ndetection is presented\
    \ in [209] where edge devices collaboratively train a deep anomaly\ndetection\
    \ model. Production management is another application that has found usage\nof\
    \ AI in IoT based smart Industry. For, e.g., the authors in [210, 211, 212, 213,\
    \ 214]\nuse cloud based data driven systems along with machine and deep learning\
    \ algorithms\nto help with task dispatching, performance analysis as well as worker\
    \ activity recog-\nnition utilizing a variety of sensing modalities. The work\
    \ of [213, 214] are especially\ninteresting as they aim is to not only perform\
    \ production management but also pro-\npose data for various health related analysis\
    \ to create a safer working environment\non the factory floor. A fog system for\
    \ production management has been presented in\n[215] who use activity data to\
    \ determine resource allocation locations to contribute\nto management of a production\
    \ operation. Furthermore, product inspection, which\nis a common application of\
    \ instrumentation systems in a factory, has been performed\nby [216, 217] who\
    \ utilize images and sensor data in a cloud based system to monitor\nproduct quality.\n\
    A factory has a multitude of machines and equipment working round the clock\n\
    manufacturing goods. Maintenance is an important aspect of this operation where\n\
    regular checks are performed on the equipment to ensure that no breakdown occurs\n\
    during the production process, which might result in monetary loss or loss of\
    \ life.\n41\nTable 11. AI use for Smart Homes\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nAmbient Assisted liv-\ning (Activity recogni-\n\
    tion/Fall detection)\nK-NN [182]\nCloud\nClustering - Detect abnor-\nmal clusters\n\
    Homogeneous (Reed switches)\nRNN (LSTM)\n[185]\nClassification - Different ac-\n\
    tivities\nHeterogeneous\n(Human\nmotion,\nWater float, Reed switches, Tem-\nperature,\n\
    Pressure,\nLuminance,\nGas and other environmental sen-\nsors in a home)\nRNN\
    \ (LSTM)\n[183]\nSAE [184]\nRNN\n(GRU)\n[186]\nClassification\n-\nDifferent\n\
    sounds\nHomogeneous\n(Sound\nrecordings\nfrom rooms in a house)\nAmbient\nAssisted\n\
    living\n(Localization\nand Occupancy de-\ntection)\nDNN [187]\nCloud\nClassification\n\
    and\nRegres-\nsion - Localization estima-\ntion\nHomogeneous\n(Wi-Fi\nsignal\n\
    strength and identifiers)\nNB [189]\nClassification - Presence of\npeople or not,\
    \ Regression-\nNumber of occupants\nHeterogeneous\n(Volatile\norganic\ncompounds,\n\
    CO,\nTemperature,\nHumidity)\nDNN [188]\nClassification\n-\nDifferent\nnumber\
    \ of people present\nHeterogeneous (Temperature, Lu-\nminance, Humidity, Pressure,\
    \ CO2,\nMotion, Magnetometer, Gyroscope,\nAccelerometer, Sound, Door and\nwindow\
    \ open/close status)\nEnergy management\n(Automation, Power\nconsumption\nprofil-\n\
    ing)\nSVM [190]\nCloud\nClassification - Intrusion de-\ntection\nHeterogeneous\
    \ (Images + Sound)\nSAE [192]\nRegression - Disaggregation\nof appliance power\
    \ data\nHomogeneous\n(Appliance\npower\nconsumption)\nRNN\n(LSTM)[195]\nRegression\
    \ – Forecasting oc-\ncupant resource usage\nHeterogeneous\n(Appliance\npower\n\
    consumption,\nLuminance,\nVibra-\ntion, Temperature, Humidity, Ac-\ncelerometer\
    \ [fan])\nSAE\nfor\ndisaggre-\ngation\nand\nRNN(LSTM)\nfor forecasting\n[194]\n\
    Classification - Energy dis-\naggregation,\nRegression\n-\nLoad forecasting\n\
    Heterogeneous\n(Temperature,\nLuminance,\nHumidity,\nProximity\nswitches, Ultraviolet\
    \ light sensors,\nPower consumption)\nNB [193]\nClassification\n-\nDetermine\n\
    appliances that are on\nHomogeneous\n(Appliance\npower\nconsumption)\nHowever,\
    \ with the data gathered by various sensors on these machines, it is often\nmore\
    \ beneficial to take an active approach rather than a passive one by using this\n\
    data for predictive maintenance purposes. Predictive maintenance utilizes data\
    \ from\nthe daily operation of machines in an industry to optimize the manufacturing\
    \ op-\neration [218] and is one of the main uses for AI in the industry. In [219,\
    \ 220], the\nauthors suggest a predictive maintenance scheme using SVMs utilizing\
    \ data from ac-\ncelerometers measuring vibration in a crane motor and data from\
    \ various sources in\na semiconductor manufacturing process, respectively, both\
    \ work in a cloud environ-\nment as evidenced from the architecture. Prediction\
    \ of failure can also be a regression\noperation, as was demonstrated by [221]\
    \ who use RNNs to predict future values of\na physical parameters of a pump using\
    \ a number of heterogeneous sensors used to\nmonitor it. As with the other two\
    \ systems, this system also had a cloud architecture.\nThe authors in [170] also\
    \ present a regression based health prognosis system for the\nindustry using a\
    \ CNN on machine data (Images, stress, temperature, vibration, po-\n42\nsition\
    \ and electromagnetic signal measurements). The use of IoT based AI in Smart\n\
    Industry has been presented in Table 12.\n3.7\nSmart Infrastructure\nAn application\
    \ within smart infrastructures also involves monitoring of civil structures\n\
    for structural health. The authors in [222] take a clustering approach to perform\n\
    health monitoring of a bridge using vibration data in a cloud setting.\nThey use\n\
    clustering to determine clusters of abnormal behavior in accelerometer measurements\n\
    from a bridge. In [223, 224, 225], accelerometer signals have been used where\
    \ as [226]\nhave used piezo electric transducers for performing structural health\
    \ monitoring of\nbridges formulated as a classification problem between different\
    \ damaged states of\na bridge. The prime sensing modality for monitoring has been\
    \ measuring vibration\nusing accelerometers, however, other sensors such as fiber\
    \ optic gratings can also be\nused to measure stress.\nThe second avenue for AI\
    \ applications in IoT for smart infrastructure is the use\nof IoT devices for\
    \ building environment control and energy management as well com-\nfort aware\
    \ control. This involves the prediction of building energy usage based on\nenvironmental\
    \ data (such as temperature, humidity) and electrical power data. The\nauthors\
    \ in [227] and [228] use electric power data and heat flow information in a\n\
    building to predict the energy requirements in the future so as to better manage\
    \ en-\nergy consumption. Ambience control of a museum has been performed in [229]\
    \ where\nthe authors use deep learning algorithms to predict the CO2 and humidity\
    \ levels\nfor the care of exhibits. Comfort aware energy management has been performed\
    \ in\n[230] where the authors use a CNN to regulate thermal comfort in a building\
    \ using\nvarious physical quantities. It can be noted that all of these mentioned\
    \ systems have\nbeen deployed in the cloud, this is due to the nature of the application.\
    \ However,\nthere have been efforts for developing fog/edge systems for smart\
    \ infrastructure. The\nauthors in [231] describe a framework for deploying edge\
    \ and fog computing services\nin smart buildings and demonstrate their systems\
    \ effectiveness for the case of energy\nmanagement. Table 13 summarizes the use\
    \ of IoT based AI in Smart Infrastructure.\n3.8\nSmart Transport\nMajor smart\
    \ transportation applications involve smart parking and transportation\nmanagement.\
    \ Smart parking aims to solve the problem of helping users finding park-\ning\
    \ spots in order to save time as well as reduce gas emissions and is therefore\
    \ a much-\nresearched topic for AI deployment towards smart transportation. Solutions\
    \ to this\nproblem have been formulated both as a regression problem as well as\
    \ a classification\none, both utilizing imaging and/or other occupancy sensing\
    \ modalities. Regression\nsolutions [232, 233, 234] are typically used to predict\
    \ a parking lots occupancy levels\nin the future whereas classification systems\
    \ [235, 236, 237] involve guiding drivers ac-\ncording to the shortest distance\
    \ as well as used for user localization purposes within\nsuch lots. In addition\
    \ to cloud based approaches, edge computing systems for smart\nparking have also\
    \ been devised as suggested in [238, 239] who deploy CNNs on edge\n43\nTable 12.\
    \ AI use for Smart Industry\nApplication\nNetwork\nSystem\nAr-\nchitecture\nTask\n\
    Data type\nFault\nand\nanomaly\ndetection\nDNN [203]\nCloud\nClassification -\
    \ Different classes of abnor-\nmality labels\nHeterogeneous (Mul-\ntiple sensor\
    \ and con-\ntrols [button states\netc] information)\nDNN [202]\nClassification\
    \ - Different damage stages of\na 3D printer\nHeterogeneous\n(Accelerometer, Gy-\n\
    roscope)\nRFC[199]\nClassification - Normal and abnormal op-\neration in wind\
    \ turbines\nHomogeneous\n(Ac-\ncelerometer)\nSVM [197]\nClassification\n-\nDifferent\n\
    wind\nturbine\nhealth conditions\nSVM [198]\nClassification - Normal and mixed\
    \ cement\nHomogeneous\n(Im-\nages)\nRFC[200]\nClassification - Different fault\
    \ types in steel\nmanufacturing\nHeterogeneous\n(Various\nsensors,\ndimensional\n\
    mea-\nsurements)\nDNN [201]\nClassification - Normal and arcing\nHomogeneous\n\
    (Cur-\nrent)\nCNN [204]\nClassification - Defected product or not\nHomogeneous\n\
    (Im-\nages)\nCNN [205]\nFog\nClassification - Different types of defects\nHomogeneous\n\
    (Im-\nages)\nCNN [206]\nSVM [207]\nEdge\nClassification - Abnormal and normal\
    \ pres-\nsure\nHomogeneous\n(Wa-\nter pressure)\nCNN\n+\nLSTM [209]\nClassification\
    \ - Abnormal and normal time\npower patterns\nHomogeneous (Elec-\ntrical power)\n\
    RNN (LSTM)\n[208]\nClassification - Faulty and normal state of\na machine\nHomogeneous\n\
    (Ac-\ncelerometer)\nProduction manage-\nment\nSVM [210]\nCloud\nRegression - Prediction\
    \ of the slotted coef-\nficient in a hydraulic press\nHeterogeneous (Var-\nious\n\
    measurements\nfrom\na\nhydraulic\npress)\nConvLSTM +\nSAE [211]\nRegression -\
    \ Forecasting machine speed to\nmake production more efficient\nHomogeneous (Speed\n\
    of machine [rotary])\nDNN [214]\nRegression - Bottle neck prediction in time\n\
    Heterogeneous\n(RFID,\nmovement\nsensors)\nCNN [212]\nClassification - Different\
    \ activities in an as-\nsembling factory\nHeterogeneous\n(IMU, EMG)\nSVM [213]\n\
    Classification - Different activities in a\nmeat processing plant evaluate worker\
    \ per-\nformance\nHeterogeneous\n(Accelerometer, Gy-\nroscope)\nRFC[217]\nClassification\
    \ - Bad or good product qual-\nity\nHeterogeneous (Var-\nious sensors from a\n\
    production floor in a\nfactory)\nCNN [216]\nClassification - Prediction of temperature,\n\
    Carbon content in steel\nHomogeneous (Spec-\ntrogram Images)\nRFC[215]\nFog\n\
    Classification - Determine Room ID, used\nfor system disruption\nHeterogeneous\n\
    (Ac-\ntivity\ndata,\nLoca-\ntion)\nPredictive\nmainte-\nnance\nCNN [170]\nCloud\n\
    Regression - Predict health index for ma-\nchines\nHeterogeneous\n(Im-\nages,\n\
    Temperature,\nVibration,\nPosition,\nElectromagnetic\nsignal measurements,\nStrain\
    \ gauge)\nSVM [219]\nClassification - Abnormal or normal vibra-\ntion data (from\
    \ electric motor in a crane)\nHomogeneous\n(Ac-\ncelerometer)\nRFC+\nSVM\n[220]\n\
    Classification - Failure prediction\nHeterogeneous (Mul-\ntiple\nsensors\nfrom\n\
    SECOM dataset)\nRNN (LSTM)\n[221]\nRegression - Predicting data from sensors\n\
    Heterogeneous\n(Different\nsensors\n[Pressure,\nTempera-\nture, Vibration etc])\n\
    44\nTable 13. AI use for Smart Infrastructure\nApplication\nNetwork\nSystem\n\
    Ar-\nchitecture\nTask\nData type\nStructural\nhealth\nmonitoring\nK-Means [222]\n\
    Cloud\nClustering – Look for abnor-\nmality of building state\nHomogeneous\n(Ac-\n\
    celerometers)\nK-NN [226]\nClassification\n–\nDifferent\ndamage states\nHomogeneous\
    \ (Piezo\nelectric sensors)\nDNN [223]\nHomogeneous\n(Ac-\ncelerometer)\nCNN +\
    \ RNN (LSTM) [225]\nSVM [224]\nEnergy and Environ-\nment management\nSVM [227]\n\
    Cloud\nRegression\n-\nForecasting\nelectrical power usage\nHeterogeneous\n(Power\
    \ and environ-\nmental data)\nSAE [228]\nRegression -Energy predic-\ntions for\
    \ buildings\nHomogeneous (Heat\nflow data in build-\nings)\nRNN (GRU, LSTM) [229]\n\
    Regression -Prediction of en-\nvironmental variables (CO2,\nHumidity etc)\nHeterogeneous\
    \ (envi-\nronmental data such\nas\nCO2,\nHumidity,\nAir velocity)\nCNN [230]\n\
    Regression - Comfort level\ndevices for occupancy detection and user localization,\
    \ respectively. Another applica-\ntion of AI IoT for smart transportation involves\
    \ determining traffic flow as well as\nprediction of traffic flow for traffic\
    \ light control and other management tasks such as\naccident detection. In this\
    \ regard, video cameras are popular for detection of vehicle\ndensity on roads\
    \ for traffic congestion determination. However, with most cars having\na GPS\
    \ device and the commonality of cellphones with every driver, many approaches\n\
    use the data from the GPS along with weather and generic traffic flow information\n\
    to determine traffic prediction. The nature of traffic flow prediction using sensing\n\
    modalities such as GPS require systems to be operated as cloud-based systems as\n\
    is the case in [240, 241, 242, 243]. Of these, Wangyang et al. [242] and Xiao\
    \ et al.\n[243] use deep learning based sequential modeling approaches to predict\
    \ traffic flow\nahead of time where as Aung & Naing [240] and Yunxiang Liu & Wu\
    \ [241] solve this\nthrough a classification formulation. A traffic management\
    \ system for public buses\nhas been proposed in [33, 244] where GPS data is used\
    \ to predict bus arrival times\nfor public transportation systems. Accident detection\
    \ has been performed using car\nposition and velocity information in a Vehicular\
    \ Adhoc NETworks (VANET) envi-\nronment by the authors of [245]. They do this\
    \ through a cloud based system that\ncan use this information to predict whether\
    \ an accident has occurred or not. Apart\nfrom typical sensing modalities, with\
    \ smart phones and user participation in social\nmedia, smart transportation systems\
    \ are expected to increasingly include more sens-\ning modalities [246] fused\
    \ together for use in decision making for traffic management\npurposes. Mukherji\
    \ et al. [247] use Wi-Fi signals to determine commuter traffic a\nsubway station.\
    \ They do this by using the measured signal strength of the Wi-Fi\nsignals along\
    \ with a Random Forest classifier in a cloud-based setting. Their system\nis able\
    \ to determine if a person is on the train or on the platform which can be used\n\
    to help with planning train times and routes. A summary of IoT based AI for Smart\n\
    Transport has been given in Table 14.\n45\nTable 14. AI use for Smart Transport\n\
    Application\nNetwork\nSystem\nAr-\nchitecture\nTask\nData type\nSmart\nParking\n\
    (Parking\noccupancy\ndetection/Rout-\ning/Location predic-\ntion)\nK-NN [237]\n\
    Cloud\nClassification - Presence of a\nvehicle\nHomogeneous\n(Im-\nages)\nK-Means\
    \ [232]\nRegression - Future occu-\npancy prediction\nHeterogeneous\n(Oc-\ncupancy,\n\
    Location,\nTime)\nRNN (LSTM) [234]\nLR [233]\nHomogeneous (RFID\ndata from cars)\n\
    DNN+ CNN [235]\nClassification - Different po-\nsitions based on beacons in-\n\
    stalled\nHomogeneous (Radio\nfrequency\nsignal\nstrength)\nDT [236]\nClassification\
    \ - Recommen-\ndation of parking lot based\non distance\nHeterogeneous\n(Parking\n\
    informa-\ntion, Time)\nCNN [238]\nEdge\nClassification - Detection of\nempty parking\
    \ space\nHeterogeneous\n(LI-\nDAR, Images)\nCNN [239]\nClassification\n–\nDifferent\n\
    user locations localization\nHomogeneous (Blue-\ntooth received signal\nstrength)\n\
    Transport\nman-\nagement\n(Public\ntransport\nmanage-\nment)\nK-Means [33]\nCloud\n\
    Regression – Transport de-\nlay prediction\nHeterogeneous (GPS,\nTicket\ninformation,\n\
    Time,\nArrival,\nDe-\nparture\ninformation\netc )\nK-Means [244]\nRegression –\
    \ Arrival time\nprediction\nRFC[247]\nClassification\n–\nLocaliza-\ntion, as on\
    \ platform or train\nHomogeneous (Wi-Fi\nsignal parameters)\nTransport\nmanage-\n\
    ment (Traffic flow)\nNB [240]\nCloud\nClassification\n-\nDifferent\ntraffic states\n\
    Homogeneous\n(GPS\ndata, current and his-\ntorical)\nRFC[241]\nHeterogeneous\n\
    (Weather,\nRoad\ndata)\nRNN (LSTM) [243]\nRegression - Traffic flow pre-\ndiction\n\
    Homogeneous (Traf-\nfic flow data[vehicle\nspeed count etc])\nRNN (LSTM) [248]\n\
    SAE + RNN (LSTM) [242]\nTransport\nman-\nagement\n(Traffic\nAccident detection)\n\
    RFC [245]\nClassification - Accident or\nnot\nHomogeneous\n(Ve-\nlocity, Position)\n\
    4\nConclusion\nThis chapter provided a coverage of the usage of AI in terms of\
    \ machine and deep\nlearning for applications within smart cities. For each of\
    \ the applications discussed\nfor the various components, the type of deployment\
    \ based on the technologies and\narchitectures discussed in the previous chapter\
    \ were identified. Figure 7 provides a\nsummary of the AI discussion in this section.\
    \ Moreover, a tabular version is provided\nin Table 15 for this section. It highlights\
    \ the applications in which each AI domain\nfinds use in for smart city components.\n\
    46\nAI for IoT Smart \nCities\nMachine Learning\nDeep Learning\nSupport \nVector\
    \ \nMachines \nDecision \nTrees\nK-Nearest \nNeighbor\nRandom \nForests\nLogistic\
    \ \nRegression\nNaïve Bayes\nK-Means\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Health\nSmart Industry\nSmart Transport\n\
    Smart Agriculture\nSmart Transport\nSmart Agriculture\nSmart Energy\nSmart Health\n\
    Smart Infrastructure\nSmart Transport\nRecurrent Neural \nNetworks (RNN, \nLSTM,\
    \ GRU)\nStacked Auto \nEncoders\nConvolutional \nNeural \nNetworks\nDeep Neural\
    \ \nNetworks\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\nSmart Energy\n\
    Smart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\nSmart Transport\n\
    Smart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\nSmart Industry\n\
    Smart Infrastructure\nSmart Transport\nSmart Agriculture\nSmart City Services\n\
    Smart Energy\nSmart Health\nSmart Homes\nSmart Industry\nSmart Infrastructure\n\
    Smart Transport\nSmart Agriculture\nSmart City Services\nSmart Energy\nSmart Health\n\
    Smart Homes\nSmart Industry\nSmart Health\nSmart Homes\nSmart Transport\nSmart\
    \ Agriculture\nSmart Energy\nSmart Health\nSmart Transport\nFigure 7. AI for IoT\
    \ Smart Cities.\n47\nTable 15. AI applications for IoT Smart Cities\nSmart\nCity\n\
    Component\nMachine Learning\nDeep Learning\nObservations\nSmart Agricul-\nture\n\
    - Crop Monitoring /Plant care\n(Irrigation)\n- Crop Monitoring /Plant care\n(Irrigation)\n\
    - Crop Monitoring /Plant care\n(Monitoring and disease detec-\ntion)\n- Crop Monitoring\
    \ /Plant care\n(Monitoring and disease detec-\ntion)\n- Data driven crop care\
    \ and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven crop\
    \ care and de-\ncision making (Predicting phys-\nical parameters)\n- Data driven\
    \ crop care and de-\ncision making (Crop recommen-\ndation)\nSmart\nCity\nServices\n\
    - Air quality\n- Air quality\n- Water quality monitoring\n- Water quality monitoring\n\
    - Waste management\n- Waste management\n- Sewer Overflow Monitoring\n- Urban noise\
    \ monitoring\nSmart Energy\n-\nEnergy/Load\nconsumption\nforecasting\n-\nEnergy/Load\n\
    consumption\nforecasting\n- Smart Grid line event classifi-\ncation\n- Electricity\
    \ theft detection\nSmart Health\n- Human activity recognition/-\nFall detection\n\
    - Human activity recognition/-\nFall detection\n- Patient Health Monitoring\n\
    - Patient Health Monitoring\n- Disease diagnosis\n- Disease diagnosis\n- Parkinson\
    \ detection/Seizure\nmonitoring\n- Parkinson detection/Seizure\nmonitoring\nSmart\
    \ Homes\n- Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n\
    - Ambient Assisted living (Ac-\ntivity\nrecognition/Fall\ndetec-\ntion)\n- Ambient\
    \ Assisted living (Lo-\ncalization and Occupancy de-\ntection)\n- Ambient Assisted\
    \ living (Lo-\ncalization and Occupancy de-\ntection)\n-\nEnergy\nmanagement\n\
    (Au-\ntomation, Power consumption\nprofiling)\n-\nEnergy\nmanagement\n(Au-\ntomation,\
    \ Power consumption\nprofiling)\nSmart\nIndus-\ntry\n- Fault and anomaly detection\n\
    - Fault and anomaly detection\n- Production management\n- Production management\n\
    Smart\nInfras-\ntructure\n- Structural health monitoring\n- Structural health\
    \ monitoring\n- Energy and Environment man-\nagement\n- Energy and Environment\
    \ man-\nagement\nSmart\nTrans-\nport\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Smart Parking (Parking occu-\npancy detection/Routing/Loca-\n\
    tion prediction)\n- Transport management (Pub-\nlic transport management)\n- Transport\
    \ management (Traf-\nfic flow)\n- Transport management (Traf-\nfic flow)\n- Transport\
    \ management (Traf-\nfic Accident detection)\nFor\napplications\nsuch\nas\nSmart\n\
    Agriculture,\nSmart\nEnergy,\nSmart\nHealth,\nSmart Industry and Smart\nTransport,\n\
    Deep\nLearn-\ning\nas\nwell\nas\nMachine\nLearning\nalgorithms\nhave\nbeen deployed\
    \ in Edge/Fog\nconfigurations.\nThe most popular machine\nlearning algorithms\
    \ were the\nSVM and RFC.\nThe\nmost\npopular\nDeep\nLearning\nalgorithms\nwere\n\
    RNNs and CNNs.\n48\nCHAPTER IV\nOPTIMIZATION IN IOT SMART CITIES\n1\nIntroduction\n\
    This chapter presents a coverage of combinatorial optimization in IoT based smart\n\
    cities by deliberating on the most popular applications of optimization algorithms\n\
    and providing an insight to how those problems are formulated and worked upon.\
    \ It\nprovides a mapped overview of the optimization landscape in the smart city\
    \ domain\nwhile considering the IoT. Through this mapping, the common optimization\
    \ problems\nacross the various components of the IoT enabled smart city have been\
    \ identified. For\neach problem discussed, the objective function used, the nature\
    \ of the objective as\nwell as the constraints considered have also been elaborated\
    \ on.\n2\nOptimization and Heuristics in IoT Smart Cities\nAs has been observed\
    \ by [249], combinatorial optimization problems in the real-world\nare known to\
    \ be difficult to formulate and generally are hard to solve. Moreover,\nchoosing\
    \ the right algorithm is also a tedious task as each comes with a different\n\
    set of characterizations. This is very applicable to the IoT bases smart city\
    \ where\napplications in each component caters to a different environment and\
    \ aspect of the\ncity’s operation and therefore requires intricate design of the\
    \ problem. This chapter\ntakes guidance from the work of [249]. They note that\
    \ the most popular algorithms for\nuse in combinatorial optimization problems\
    \ are the Ant Colony Optimization (ACO),\nGenetic Algorithm (GA), Particle Swarm\
    \ Optimization (PSO), Differential Evolution\n(DE) and Artificial Bee Colony (ABC).\
    \ Moreover, following from their discussion, six\nfactors are considered for each\
    \ application identified. These are:\n1. The type of application: This refers\
    \ to the problem being optimized within the\nsmart city domain.\n2. Data Setup:\
    \ For each application, we mention the data setup used. While doing\nso, we aim\
    \ to capture the various ways in which researchers have sourced data\nfor their\
    \ proposed method.\n3. Single-Parallel problems: Another thing to note in smart\
    \ city optimization\nproblems is whether a problem has been considered as a single\
    \ problem or\nmultiple sub-problems/parallel.\n4. Objective direction, function\
    \ and number of objectives: Maximization or mini-\nmization, lowest fitness function\
    \ value desirable or higher fitness function value\n49\nis desirable.\nSince we\
    \ list the objectives, we also covere the number of ob-\njectives inherently.\
    \ Single objective, where a single fitness is optimized for its\nbest value or\
    \ multi-objective where multiple objective functions need to be con-\nsidered\
    \ at the same time. The latter is a complex process as some objectives\nmay have\
    \ conflicts and thus requires the need to perform trade-offs with what’s\nacceptable.\n\
    5. Constraints: Constraints are a set of restrictions or prerequisites that may\n\
    sometimes be necessary to determine if a solution is considered valid or not.\n\
    Soft constraints are desirable but not necessary whereas hard constraints are\n\
    mandatory to be met. Constraints are put on the fitness function according to\n\
    application being considered. Covering this aspect is particularly important as\n\
    constraints are determined by the application being worked on.\n3\nMeheuristic\
    \ Algorithms\nMetaheuristic algorithms are widely used to solve combinatorial\
    \ optimziation prob-\nlems in the real-world [249]. The aim of these algorithms\
    \ is to determine the minima\nor maxima of an objective function which translates\
    \ an optimization objective in to\none or more mathematical equations. Five algorithms\
    \ have been considered in this\nchapter, these are the Ant Colony Algorithm, Genetic\
    \ Algorithm, Particle Swarm Op-\ntimization Algorithm, Differential Evolution\
    \ and Artificial Bee Colony. As mentioned\nearlier, these have been chosen as\
    \ these were the most commonly used optimzation\nalgorithms identified by [249].\
    \ In this section, we provide a brief intuitive description\nfor each of them.\n\
    3.1\nAnt Colony Optimization\nAnt colony optimization is derived from the behavior\
    \ of ants searching for food\n[250]. It was observed that during this process,\
    \ each ant deposits a chemical called\npheromone on the path which it takes towards\
    \ the food. The more the ants take a\ngiven path, the more the pheromone is deposited\
    \ on it. Subsequent ants that want\nto go towards the food use the amount of pheromone\
    \ on a given path or sub-path\nto decide which path to take so as to determine\
    \ the optimal route to the food. In\nthe artificial ant colony optimization algorithm,\
    \ the points on the path that form the\nsub-paths are encoded on a graph where\
    \ each ant can only visit a given vertex (travel\non the same sub-path) once.\
    \ Each iteration starts with a number of artificial ants,\nan ant would choose\
    \ the next vertex to visit based on the level of pheromone on the\npossible sub-paths\
    \ available to it as well as whether that path has been used before.\nAt the end\
    \ of each iteration, the pheromone levels are updated so as to prioritize the\n\
    use of the most used path for ants in the next iteration.\n3.2\nGenetic Algorithm\n\
    A genetic algorithm [251] is based on evolutionary science. The idea behind the\
    \ ge-\nnetic algorithm is that starting from a given population set of organisms,\
    \ subsequent\n50\nreproduction will result in fitter organisms being produced\
    \ given that the organisms\nchosen for reproduction have some level of fitness.\
    \ To solve an optimization prob-\nlem, a genetic algorithm begins with a given\
    \ population size of strings also called\na chromosome. Each ‘chromosome’ consists\
    \ of a ‘gene’ which may represent points\nin the population. The sequence in which\
    \ the genes are present would represent a\nsolution to the problem. For e.g. for\
    \ a route scheduling problem, this may be the\ncoordinates of the stops. The ‘goodness’\
    \ of a chromosome is determined by a fitness\nfunction that quantifies how appropriate\
    \ a given chromosome is as a solution for the\nproblem. Choosing the right fitness\
    \ function is an important consideration in genetic\nalgorithms as it needs to\
    \ gauge the kind of optimization that is to be performed.\nThe optimization process\
    \ starts with an initial population of a given size. Once a fit-\nness function\
    \ has been defined, in each iteration, two or more chromosomes (parents)\nare\
    \ taken at random from the population and one or more offsprings are generated.\n\
    The random selection takes the selected parents fitness function value in to account,\n\
    however, its necessary that not all parents chosen are the fittest of the population\
    \ as\notherwise, diversity will be compromised, and the algorithm may get stuck\
    \ in a local\nminimum. The method by which these offspring are generated is called\
    \ the Crossover\nfunction and the number of parents mated to form offsprings from\
    \ them depends\non the crossover rate. The Crossover function defines the way\
    \ the genes within the\nchromosomes are exchanged. Usually, the crossover rate\
    \ has a high value. Moreover,\ndepending on some mutation rate, a given fraction\
    \ of all offsprings are mutated. Mu-\ntation depends on the mutation function\
    \ used and involves members of the offspring\nbeing swapped in some manner. When\
    \ one iteration of the offspring creation from\nthe parents in the entire population\
    \ is completed, the offsprings replace members of\nthe original population (typically\
    \ the weakest) and one generation of the GA is said\nto be completed. In order\
    \ to converge to a sufficiently good result, GA’s need to run\nfor many generations.\n\
    3.3\nParticle Swarm Optimization\nParticle Swarm Optimization is modeled on the\
    \ social behavior of animals rather than\nthe evolutionary biological behavior\
    \ on which Genetic Algorithms are based. PSO\n[252] is particularly based on the\
    \ behavior of a flock of birds searching for food. Each\nbird in the flock searches\
    \ for food and can communicate with other birds in the flock\nas soon as it finds\
    \ food or a good direction for it. Therefore, each bird has two food\n‘directions’\
    \ that it needs to consider, first is on an individual level which is called\n\
    the personal best and the second is on the flock level which is the global best.\
    \ Using\nthese two values the bird will proceed towards that path and will inform\
    \ other birds\nin the flock too. The idea here is that after enough time and with\
    \ all the individuals\nworking together, the swarm will find the place with the\
    \ highest concentration of\nfood. In terms of using PSO for optimization tasks,\
    \ individual birds are equivalent\nto a solution as in a GA and each is considered\
    \ as a point or a particle, collectively\nthey make up the swarm. This swarm population\
    \ may be initialized randomly or\nbased on some domain knowledge about the problem.\
    \ The highest concentration of\nfood represents the optimal solution for the whole\
    \ swarm where as a good direction\n51\nrepresents the local optimal solution for\
    \ each case. The aim here, like birds in a flock\nis to determine the global optimal\
    \ solution using information from each individual\nparticle. Each particle has\
    \ three aspects to it, its position, its velocity and a value of\nits current\
    \ position’s ’goodness’. This ’goodness’ as in the GA is defined by a fitness\n\
    function. Like birds, each particle has a personal best fitness value and is also\
    \ aware\nof the global best fitness value. For any particle, the new direction\
    \ of movement is\ndecided by a combination of the personal best and the global\
    \ best as well as the\nparticle’s intention to maintain its current movement.\
    \ Furthermore, several different\ntopologies can be utilized, and a neighborhood\
    \ can also be set for each particle to\nconvey positions when limiting the global\
    \ best parameter to the local best scheme\nrather than the whole swarm. The algorithm\
    \ may be stopped till the best solution is\nreached or no more improvement is\
    \ observed.\n3.4\nDifferential Evolution\nDifferential evolution [253] is a stochastic\
    \ evolutionary algorithm which is used for\noptimization problems for continuous\
    \ functions. The DE algorithm does not expect\ngradient information and thus it\
    \ doesn’t need to be differentiable. Like other evolu-\ntionary algorithms, a\
    \ solution is searched for in the design space by maintaining a\nset of individual\
    \ candidate solutions. In each iteration, the solutions with the best\nfitness\
    \ are combined together and retained for the next iteration. The aim is to im-\n\
    prove upon the fitness value and this process is repeated until a pre-decided\
    \ condition\nfor termination of this process is satisfied. Differential Evolution\
    \ is very similar to\nGenetic Algorithms in that both are evolutionary in nature,\
    \ however, the difference\nis that the DE uses real numbers in the chromosome\
    \ and also that the mutation oper-\nation consists of the difference between two\
    \ or more chromosomes of the population\nwith the possible addition of some type\
    \ of noise to create a new individual. Like\nGA, DE also suffer from getting stuck\
    \ in local minima. The DE algorithm also has\nthree control parameters, the population\
    \ size, the mutation factor and the crossover\nprobability.\n3.5\nArtificial Bee\
    \ Colony\nArticle Bee Colony [254] is a swarm intelligence algorithm based on\
    \ the behavior of\nbees. Within bees, there are different social classes who work\
    \ together to complete\ntasks such as harvesting pollen and nesting through the\
    \ use of smell, ’swing dance’\nand other methods. Bee colonies consist of three\
    \ types of bees, queen, male and\nthe worker bees which work on activities such\
    \ as searching for food, gathering and\nstorage of honey.\nAfter gathering honey,\
    \ the worker bee comes to the nest and\ninforms other bees about the location\
    \ of the honey source site through a dance. The\nABC algorithm simulates the behavior\
    \ of bees by considering three elements, the\nfood source, employed bees and unemployed\
    \ bees. The food source is represented as\nrevenue considering its distance and\
    \ quality, the higher the revenue, the better is the\nvalue. In computational\
    \ optimization terms, the food source is a potential solution\nto the objective\
    \ formulation of the considered problem and the quality or value of\n52\nthe food\
    \ source represents the fitness value of that particular solution. At the start,\n\
    all bees are used as scouts, searching for food sources. When a food source is\
    \ found,\nfor a high value food source, bees who find those food sources become\
    \ hire bees and\ncollect the food source. If the food source is of intermediate\
    \ value, the bees become\nfollow bees and if the food source value becomes low,\
    \ the bees become scout bees to\nlook for better food sources. Hire bees, the\
    \ bees with a food source location having\na high value, lead the follow bees\
    \ to develop solutions in their neighborhood in order\nto come up with more solutions.\
    \ A subset of the highest-ranking solutions are then\nconsidered before this process\
    \ is repeated again until the end conditions are met.\n4\nOptimization Applications\
    \ in Smart Cities\nSeveral tasks in smart city operations require the use of metheuristics\
    \ to be solved,\nthe aim being to optimize the resources present in the city.\
    \ This section presents\nthe different uses of optimization techniques for IoT\
    \ enabled Smart Cities.\nThis\ntask is performed for all eight components, Smart\
    \ Agriculture, Smart City Services,\nSmart Grid, Smart Health, Smart Homes, Smart\
    \ Homes, Smart Industry, Smart\nInfrastructure and Smart Transportation.\n4.1\n\
    Smart Agriculture\nSmart Agriculture involves the use of digital technologies\
    \ such as sensors and in-\ntelligent systems to improve agricultural productivity.\
    \ The sustenance of agriculture\ndepends on water, and it is central to the agricultural\
    \ production of food items around\nthe world. However, water is becoming an ever-scarce\
    \ resource due to the increasing\ndemand caused by human population growth, increased\
    \ economic activity by indus-\ntries and also due to climate change. It therefore\
    \ is necessary to utilize this precious\nresource wisely so as make use of it\
    \ in the best manner possible.\nOne approach\ntowards ensuring that water and\
    \ land is used appropriately is by introducing irriga-\ntion management schemes\
    \ such as irrigation scheduling and water allocation in the\nfarming process.\
    \ A summary of the optimization problems, objectives, constraints in\nsmart agriculture\
    \ and the use of IoT is illustrated in Figure 8.\nMeasurements in water irrigation\
    \ systems are typically performed by sensors\nplaced at different points in the\
    \ canals and rivers to determine water flow, volume and\nspeed. This information\
    \ regarding water movement can be combined with economic\ninformation such as\
    \ yeild, crop profit to optimize water distribution. Irrigation man-\nagement\
    \ through scheduling has been performed by the authors of [255, 256, 257, 258]\n\
    to maximize net return on crop profits, water use efficiency and to minimize leakage\n\
    losses. In [259] Fuqiang et al. aim to optimize water delivery through canals\
    \ while\nalso performing scheduling. They do this using a genetic algorithm and\
    \ work with\ntwo objectives, minimizing the difference between the time of water\
    \ delivery and wa-\nter demand and the fluctuation in water discharge of the main\
    \ canal. Their model\nwas applied to a district in China.\nThe authors in [260,\
    \ 261] work on optimal allocation of water. Of these, Ikudayisi\net al. [260]\
    \ use the differential evolution algorithm to minimize the water allocated to\n\
    53\nSmart Agriculture \nIrrigaƟon\nWater\nScheduling \nIrrigaƟon\nWater\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon\nand Water\nControl \nObjectives: Minimize\nwater\nusage/deviation/leakage\n\
    Maximize benefits\nConstraints: Land area\navailable, water limits\nObjectives:Minimize\n\
    leakage \nMaximize net return,\nwater usage \nConstraints: Water\nlimits, capacity\
    \ of\nirrigation system, flow\ncapacity, discharge\nlimits, time limits\nObjectives:\
    \ Minimize\nenergy cost \nConstraints: Limited\nenergy available, water\nvolume\
    \ minimums\nIoT Usage: Sensors provide information about water flow, amount of\
    \ water and more\nConstraints: Water\nlimits, capacity of\nirrigation system,\
    \ flow\ncapacity, discharge\nlimits, time limits\nFigure 8. Optimization applications\
    \ in Smart Agriculture.\nfarms in South Africa while maximizing the benefits in\
    \ terms of job creation, ensuring\nfood security and the yield of crops.\nWu et\
    \ al.\n[261] approach this as problem\nof reducing deviation between different\
    \ channels and minimizing water seepage to\nensure a more consistent supply to\
    \ all water channels. An approach presented by\nOcampo et al. [262] tackles this\
    \ problem not as a task of allocation directly but\nconsiders the scenario of\
    \ providing sufficient water to a smart farm while controlling\ntwo water pumps.\
    \ The objective function is formulated to minimize the energy cost\nof the water\
    \ pumps while maintaining sufficient supply of water to the plants on the\nfarms.\
    \ Constraints considered for such applications include the limited quantities\
    \ of\nwater being worked with, the time for which the water was available and\
    \ the area\nof land which was to be considered. Another allocation based scheme\
    \ is presented\nby Zhuo et al. [263] who use a genetic algorithm for an irrigation\
    \ system based on\na reservoir and two pumping stations. Their aim is to ensure\
    \ that there is no water\n54\nshortage. The objective function used by them is\
    \ the minimization of the annual sum\nof squared water shortage. Other work in\
    \ [264] also minimizes use of groundwater\nand increase benefit to the regional\
    \ water supply through reduction of water deficits\nin the Dujiangyan region of\
    \ China.\nA precision agriculture scheme is presented by Roy et al.\n[265] who\
    \ combine\nan IoT system consisting of sensors on plants using a GA based rainfall\
    \ predictor.\nCombining predicted rainfall information along with the sensed moisture\
    \ level in\nthe crops, they control plant watering. Lin et al. [266] propose a\
    \ framework for the\nmanagement of fertigation and irrigation in precision agriculture.\
    \ They perform short\nterm management and long-term management. Soil and crop\
    \ growth data is gathered\nfrom IoT based sensor systems. Long term planning refers\
    \ to the allocation of water\nand fertilizer resources to crops in terms of quantity\
    \ so as to meet demands whereas\nshort term refers to when and how to use them.\
    \ They use a genetic algorithm for long\nterm planning considering the allocation\
    \ of water and fertilizer for crops to maintain\npH value and electrical conductivity.\
    \ This information has been presented in Table\n16 while a summary of the identified\
    \ data sources used by each considered work has\nbeen provided in Table 17.\n\
    4.2\nSmart City Services\nAccording to the world bank, the amount of annual solid\
    \ waste generated is set to be\n3.40 billion tons [268] in 2050. Managing this\
    \ waste and its collection in an efficient\nmanner is imperative for health and\
    \ climate reaons. The most common application\ntowards smart city services optimization\
    \ is waste management as illustrated in Figure\n9 which summarizes the objectives,\
    \ constraints and the use of IoT.\nSmart waste collection systems include sensors\
    \ attached to trash cans which can\ninform the municipal authority about the status\
    \ of the garbage amount present in\nthem.\nOnce the trash cans are close to being\
    \ full, it is the responsibility of the\nmunicipal corporation to perform garbage\
    \ collection in an efficient manner. In this\nrespect, data provided by the sensors\
    \ on garbage cans can be used to determine\nan optimized route for garbage collection\
    \ to construct the Vehicle Routing Problem\n(VRP) in the Smart City Services domain.\
    \ As such, this problem has been performed\nkeeping in view various goals. The\
    \ minimization of the route distance taken by a\ngarbage tuck has been performed\
    \ by the authors in [269, 270, 271, 272, 273]. The\naim in this case is to determine\
    \ a route for garbage collection vehicles that minimizes\nthe total distance traveled\
    \ by the them. Zhang et al. [273] consider multi-vehicle\nallocation while considering\
    \ the single objective of minimizing route distance. Wei\net al. [274] use the\
    \ Artificial Bee Colony algorithm to determine garbage collection\nroutes resulting\
    \ in the minimum emission of CO2. Another optimization objective\nin route optimization\
    \ for waste management has been the minimization of the total\ntravel time, such\
    \ a target is described by the authors of [275, 276, 277, 278] who aim\nto reduce\
    \ travel time while considering emptying of waste bins. Another optimization\n\
    consideration in route optimization for waste management is to reduce cost. This\
    \ has\nbeen carried out by Tirkolaee et al. [279] who formulate a multi-objective\
    \ function of\ntravel cost and total useage cost of vehicles and determine the\
    \ route with the minimum\n55\nTable 16. Optimization in Smart Agriculture\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nIrrigation Management\
    \ (Ir-\nrigation Water Scheduling)\nACO [255]\nSingle\nMaximizing net return on\
    \ crop\nConstraint on water avail-\nability\nPSO [256]\nCapacity of irrigation\
    \ sys-\ntem\nWater\nsavings\nshould\nbe\nmore than deficiency\nGA [259]\nSingle\n\
    Minimize water fluctuations and\ndifference between the time of wa-\nter demand\
    \ and need\nFinite canal capacity\nMaximum rotation time lim-\nitation\nGA [257]\n\
    Parallel\nMaximize yield, global and local\nwater use efficiencies\nConstraint\
    \ on irrigation in-\nterval\nMinimum and max irriga-\ntion amount\nGA [258]\n\
    Parallel\nMinimize leakage loss both individ-\nually and overall\nFlow\ncapacity\n\
    limited\nby\nmaximum\nIrrigation time constraint\nNet discharge constraint\nTotal\
    \ flow rate should be\nsum of individual flowrates\nIrrigation Management (Ir-\n\
    rigation Water Allocation)\nDE [260]\nSingle\nMinimize irrigation water allocated\n\
    and maximizes net benefits\nConstraint on the land area\navailable\nMinimum and\
    \ max planting\nareas for crops\nLimited water available for\nthe farm\nPSO [261]\n\
    Parallel\nMinimize deviation in the different\nchannels, water seepage in the\
    \ dis-\ntribution channels\nTime\nWater quantity constraints\nGA [264]\nParallel\n\
    Maximize benefit to regional wa-\nter supply, minimize water deficit\ngroundwater\
    \ exploitation in regions\nWater supply quantity con-\nstraints for annual water,\n\
    ground water\nIrrigation Management (En-\nergy Optimization)\nGA [262]\nParallel\n\
    Minimize energy cost while main-\ntaining water supply for plants\nLimited energy\
    \ available\nWater volume maintained in\nstorage tank, fish pond\nGA [263]\nSingle\n\
    Minimize sum of squared water\nshortage\nAnnual water availability in\nreservoir\n\
    Water rights of replenish-\nment pumping station\nWater rights of the irrigation\n\
    pumping station\nOperational rule constraints\nIrrigation\nManagement\n(Water\
    \ Control)\nGA [267]\nSingle\nMaximize yield\nMinimum\nand\nmaximum\nwater depth\
    \ limits\nMin and max soil moisture\nIrrigation\nand\nFertilizer\nManagement\n\
    GA [266]\nSingle\nMaximize economic profits and en-\nvironmental benefits\nLimits\
    \ on the demand of wa-\nter for each crop\nTotal water does not exceed\navailable\n\
    Total fertilizer doesn’t ex-\nceed availability\nWater allocation should be\n\
    positive\nTable 17. Data setup used for Smart Agriculture Optimization\nData Type\n\
    Papers\nSelf-collected / Presented\n[256, 258, 259, 262, 267, 266]\nGovernment\
    \ and private agencies\n[260, 256, 255, 267, 259, 257, 258, 261]\n56\nSmart City\
    \ Services \nWaste Management\nRoute OpƟmizaƟon \nObjectives: Minimize\ndistance,\
    \ CO2\nemissions, travel time\nConstraints: Road\nnetwork fixed, location\nserved\
    \ by one truck,\ncontinuous routes,\ndeadline to finish jobs,\ncapacity limited\n\
    IoT usage: Sensors for\ntrash fill level and\nweight detection\nFigure 9. Optimization\
    \ applications in Smart City Services.\ncosts using the ACO. Constraints considered\
    \ in such applications are related to a\nfixed road network which depends on the\
    \ locality for which the optimization is being\nperformed, the continuity in the\
    \ determined route as well as fulfillment of capacity\nrestrictions. The useage\
    \ of optimization algorithms in smart city services is provided\nin Table 18 and\
    \ the data sources used are provided in Table 19.\n4.3\nSmart Grid\nThe electricity\
    \ grid has been a major beneficiary of smart city technologies. The in-\ncreasing\
    \ demand for energy by consumers along with the environmental impact that\nfossil\
    \ fuel-based energy production has on the planet has forced utility companies\n\
    to introduce renewable energy sources within the electricity distribution system\
    \ and\nmake their energy production and distribution systems more efficient through\
    \ plan-\nning and design improvements. Optimization algorithms find applications\
    \ within the\nsmart grid domain in terms of power management and planning.\nA\
    \ summary of\n57\nTable 18. Optimization in Smart City Services\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nWaste\nManagement\n\
    Route Optimization\nACO [269]\nSingle\nMinimization of distance\nRoad Network\
    \ is fixed\nGA [270, 271,\n273]\nEach dumpster served by\none truck only\nTrucks\
    \ leave depot to go to\nlandfill\nPSO [272]\nRoutes are continuous\nABC [274]\n\
    Single\nMinimize Co2 emissions\nCapacity constraint for bins\nas well as trucks\n\
    ACO [275]\nSingle\nMinimize total travel time\nTrucks leave a depot empty\nGA\
    \ [276, 277]\nBins needs to be fully emp-\ntied by trucks\nVehicle start depot\
    \ and end\nat landfill\nPSO [278]\nDemand should not exceed\ncapacity\nACO [279]\n\
    Single\nMinimize travel cost and to-\ntal usage cost of vehicles\nSubtour elimination\n\
    Jobs should finish within a\ngiven deadline\nTable 19. Data setup used for Smart\
    \ City Services Optimization\nData Type\nPapers\nSelf-collected / Presented/ Generated\n\
    [269, 270, 271, 275, 279, 277, 273]\nGovernment Agency\n[276, 278]\nDataset\n\
    Capacitated VRP datasets [280] by [272], Capacitated VRP Instances [281] by [274]\n\
    the applications, objectives, constraints and IoT usage for optimization algorithms\
    \ in\nSmart Grids has been illustrated in Figure 10.\nAn increasing population\
    \ has led to an increasing demand for electricity around\nthe world. This burdening\
    \ of the electricity grid has led to measures for increasing\nthe performance\
    \ of the electricity distribution system by reducing loss, prevent over-\nload\
    \ and reduce cost. The authors in [282, 283, 284, 285, 286, 287, 288] work on\n\
    the improvement of grid performance by minimizing cost and reducing power losses.\n\
    Power loss minimization is specifically targeted by [282, 286, 284]. Of these,\
    \ Ettappan\net al. [282] aim for the reduction of power losses, voltage deviation\
    \ and increasing\nvoltage stability. Atteya et al. [286] also address this problem\
    \ by considering net-\nwork redistribution to minimize losses in the grid whereas\
    \ Sakr et al. [284] focuses\non minimizing transfer losses in the smart grid to\
    \ accomplish this task. Nguyen and\nMohammadi [285] attempt the reduction of power\
    \ losses and line congestion by deter-\nmining the location of thyristor controlled\
    \ series compensator devices. The problem\nis formulated as a multi-objective\
    \ problem aiming to minimize loadability of the lines,\nactive power loss and\
    \ the reactance of the transmission line. A cost reduction-based\napproach to\
    \ improve grid performance is followed by Das et al. [283] who aim to\nreduce\
    \ cost of maintaining electrical stability and also the cost of management of\
    \ the\ndistribution network. They do this by considering changing the location\
    \ of energy\nstorage systems within the grid. Kanwar et al. [287] take maximizing\
    \ profits and\n58\nSmart Grid \nPower Management \nImproved Grid\nPerformance\
    \ \nDistributed\nEnergy\nResource\nManagement \nPlanning \nExpansion of\nDistribuƟon\n\
    Network \nObjectives: Minimize power\nloss, voltage deviation,\nreactance, average\n\
    loadability, cost \nMaximize profit  \nConstraints: Power flow\nrestrictions,\
    \ location\nlimitations, operational\nlimitations. capacity limits,\nload balances,\
    \ power limits,\ntopology restrictions\nObjectives: Minimize cost,\nemissions\
    \ \nConstraints: Power limits\n(generation and\ndistribution), battery\ncharge/discharge\
    \ limits,\nload schedule restrictions,\ncapacity limits\nObjectives: Minimize\n\
    expansion cost, number of\nunits, power losses\nConstraints: Power flow\nrestrictions,\
    \ generation\nlimits, infrastructure limits\nIoT Usage: Loads and other devices\
    \ in the power network can be swithced on and off as needed. Phase\nmeasurement\
    \ units for e.g., provide capability to obtain measurements in the smart grid\n\
    Figure 10. Optimization applications in Smart Grid.\nminimization of power losses\
    \ while considering sizing of a distributed energy resource\ngeneration system.\n\
    Distributed energy resource (DER) management is another area where optimiza-\n\
    tion algorithms are used in Smart Grids. The management of distributed energy\n\
    sources within smart grids is dependent on the interconnectivity provided by IoT\n\
    in the smart grid system.\nSmart meters within the smart grid provide real-time\n\
    information relating to power consumption which can be used for controlling DER\n\
    electricity. Moreover, IoT devices allow for switching loads and generation sources\
    \ as\nrequired. This assists in creating a virtual power plant to aggregate all\
    \ energy sources\nin a DER scenario. With global warming and a changing climate,\
    \ utilities around\nthe world are increasingly incorporating various renewable\
    \ energy sources within their\ngrid which often times are an economically convenient\
    \ option as well. However, many\n59\nof these sources such as wind and solar (photo\
    \ voltaic [PV]) do not offer a consistent\nsupply of power throughout the day.\
    \ In this regard, systems such as batteries as\nwell as conventional generation\
    \ plants need to be used together along with renewable\nenergy sources. For utility\
    \ companies, it is necessary to optimize power production\nso that the maximum\
    \ amount of energy is utilized from these renewable sources so\nas to reduce cost\
    \ to the user while also maintaining the quality of service. The au-\nthors in\
    \ [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302] provide\n\
    a management scheme for DERs to minimize cost. In this regard, the authors in\n\
    [292, 293, 294, 297, 289, 290, 300, 301, 302] all formulate the problem of distributed\n\
    energy resource management as a single objective problem where the cost incurred\
    \ is\nminimized. On the other hand, the authors in [298, 295, 291] and [299] formulate\
    \ this\nas a multi-objective problem. Azaza and Wallin [299] not only target reduction\
    \ of\nelectricity production cost but also maximize reliability of the system\
    \ while reducing\nthe environmental impact of the distribution system. It is interesting\
    \ to note that the\nimprovement of system reliability is formulated as a minimization\
    \ problem as well.\nSimilarly, Das et, al. [291] consider the reduction of both\
    \ the total cost as well as\nthe environmental cost of the system. Their considered\
    \ scenario also consists of a\nPV, Wind Turbine and battery. The constraints considered\
    \ were constraints regard-\ning power flow, limitations on power and voltage values,\
    \ power balance constraint\nand power generation constraints on the renewable\
    \ energy sources. In [289, 302], a\nDER management system is developed for a microgrid\
    \ which consists of a controllable\ncollection of energy storage and generation\
    \ sources powered by IoT devices.\nPlanning in distribution networks has been\
    \ considered by the work of [303] and\n[304]. Mahdavi et al. [303] work on expanding\
    \ transmission lines utilizing the artificial\nbee colony algorithm to minimize\
    \ cost of network expansion, power losses in load\nand generation. On the other\
    \ hand, Maji and Acharjee [304] aim to determine the\nminimum number of Phase\
    \ Measurement Units (PMUs) to make the distribution\nnetwork observable. The constraints\
    \ used were power flow and balance of power as\nwell as limits on the number of\
    \ transmission lines available. The internet of things also\nfinds usefulness\
    \ in terms of the use of Phase Measurement Units that provide voltage\nand current\
    \ measurement capabilities within smart grids to perform maintenance and\nmonitoring\
    \ operations. A summary of this discussion has been provided in Table 20\nand\
    \ the data setups used by the covered research work is presented in Table 21.\n\
    4.4\nSmart Health\nSmart health refers to the use of technology to provide better\
    \ healthcare to patients.\nThis can be in the form of developing tools for better\
    \ diagnosis of diseases or the use\nof algorithms for better planning and healthcare\
    \ delivery. The deployment of timely\nemergency vehicles to a person in need is\
    \ imperative towards providing healthcare\nservices to people. Two applications\
    \ of optimization problems within Smart Health\nare emergency vehicle routing\
    \ and their allocation and relocation as shown in Figure\n11. It also summarizes\
    \ the objectives uses, constraints considered and role of IoT.\nLate arrival of\
    \ ambulances and other emergency vehicles to people in need may\nresult in irreversible\
    \ damage to life and property. Studies have shown that delayed\n60\nTable 20.\
    \ Optimization in Smart Grid\nApplication\nAlgorithm\nSingle/\nParallel\nproblems\n\
    Objectives\nConstraints\nPower\nManagement\n(Improve Grid Per-\nformance)\nABC\
    \ [282]\nSingle\nMinimize active power loss,\nvolage deviation and voltage\nstability\
    \ index (L-index)\nPower flow constraints\nGA [284]\nRestriction on power source\
    \ instal-\nlations and other components re-\nlated to power structure\nPSO\n[286,\
    \ 288]\nSingle\nMinimize power loss\nGeneration and other component\noperations\
    \ within limits\nGA [285]\nSingle\nMinimize average percent-\nage\nof\nloadability\n\
    of\nthe\nlines, active power loss, re-\nactance of transmission line\nLimitation\
    \ on values of bus voltage\nTransmission line capacity, genera-\ntor active and\
    \ reactive power.\nABC [283]\nSingle\nMinimize cost for maintain-\ning thermal\
    \ and voltage sta-\nbility and lower asset man-\nagement of distribution net-\n\
    works\nActive and reactive power must be\nbalanced\nLimits on voltage and load\
    \ maxi-\nmum\nESS max charging and discharging\nconstraints\nPSO [287]\nParallel\n\
    Maximize annual profit by\nreducing charges for annual\nenergy losses, peak power\n\
    loses etc\nConstraint on the node voltage\n(soft)\nMinimize power loss for the\n\
    network reconfiguration\nPower injected by DER and SG\nwithin limit\nPower generated\
    \ at a given node\nhas a limit\nFor reconfiguration:\nRadial topology,\nNode voltages\
    \ has a max hard con-\nstraint\nPower\nManagement\n(Distributed Energy\nResource\n\
    Manage-\nment)\nABC\n[292, 293, 294]\nSingle\nMinimize total cost\nPower\ngeneration\n\
    by\nrenewables\nwithin limits\nDE [295, 297,\n296]\nBattery charge and discharge\
    \ limits\nand system reliability\nGA [289, 290]\nPower balance constraint (gener-\n\
    ated equal to consumed)\nPSO\n[300, 301, 302]\nSpecific loads are interruptible\n\
    Constraints on the efficiencies of the\nsources\nDE [298]\nSingle\nMinimize cost\
    \ and emission\nABC [305]\nSingle\nMinimize cost and power im-\nported from outside\
    \ micro-\ngrid\nPower flow constraints for the DER\nGA [291]\nSingle\nMinimization\
    \ of cost of en-\nergy and life cycle emissions\n(CO2 and energy stored in\nbatteries\
    \ or converted by re-\nnewable sources during pro-\ncess of satisfying load re-\n\
    quirements)\nConstraints on battery capacity\nSystem reliability constraint\n\
    Energy produced equal or greater\nsthan required\nPSO [299]\nSingle\nMinimize\n\
    reliability\ncost,\ncost of electricity production\nand operation environmen-\n\
    tal impact ()using renewable\nfactor)\nExpansion of distri-\nbution network\n\
    ABC [303]\nSingle\nMinimize cost of network ex-\npansion, active losses and\n\
    loss of load and generation\nPower flow and active power bal-\nanced\nPower generation\
    \ limits\nNumber of transmission line limits\nPSO [304]\nSingle\nMinimize number\
    \ of PMUs\nSG Network should be observable\n61\nTable 21. Data setup used for\
    \ Smart Grid\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n25 Bus\
    \ network s[295, 297, 298, 291, 299, 300, 301, 302] [305]\nGovernment Agency/\
    \ other research work\n[292, 293, 294, 290, 299, 303]\nDataset/ Standard Network\n\
    IEEE 14 Bus [284, 304]\nIEEE 30 Bus [282, 284, 285]\nIEEE 33 Bus [286, 283, 287,\
    \ 296]\nIEEE 37 Bus [289]\nIEEE 57 Bus [282, 284, 304]\nIEEE 69 Bus [287]\n119\
    \ Node system of [306, 288]\nSmart Health \nEmergency\nVehicle\nAllocaƟon and\n\
    RelocaƟon \nEmergency\nVehicle RouƟng \nObjectives: Minimize time,\ncost\nConstraints:\
    \ Traffic balance,\ntraffic flow restrictions,\nvehicle speed and number\nlimits,\
    \ location of\nemergency vehicle\nObjectives: Minimize time,\nvehicle density\
    \ \nConstraints: Road connection\nrestrictions, time limits \nIoT Usage: Real\
    \ time location services, real time traffic\ninformation, vehicle to vehicle and\
    \ vehicle to infrastructure\ncommunication can also provide better navigation\
    \ and monitoring\nservices\nFigure 11. Optimization applications in Smart Health.\n\
    ambulance dispatch increases mortality [307], moreover, economically speaking,\
    \ a\none-minute delay in response time for cardiac patients found that the mortality\
    \ in-\ncreases by 1% and adds annual costs of USD 7 billion in healthcare expenditure\n\
    [308]. Keeping this in mind ambulance deployment and location determination have\n\
    been of considerable interest in the area of optimization for smart health. These\n\
    two problems are specific cases of the Vehicle Routing Problem [309] and Maximum\n\
    coverage problem [310] sometimes called the Ambulance Routing Problem [311] and\n\
    Ambulance Location Problem [312]. The authors in [313] work on the optimal allo-\n\
    62\ncation determination based on fixed sites and a finite number of ambulances\
    \ while\nminimizing lateness of ambulance arrival using the Ant Colony Optimization.\
    \ Later\non, in their work in [314], they do a comparison with using GAs and find\
    \ that GAs\nprovide better performance. Kochetov and Shamray [315] attempt localization\
    \ of\nambulance fleet at base stations with the aim to minimize the average waiting\
    \ time\nfor arrival of ambulances. An interesting approach to this problem is\
    \ presented in\nYan et al. [316] who work on this problem from a scheduling perspective\
    \ where they\ncontrol scheduling of emergency vehicles to reduce the total cost\
    \ in terms of money\nand time using a Genetic Algorithm. Another approach for\
    \ sequencing vehicles to\nensure emergency vehicles reach their destination in\
    \ time is presented by Lu et al.\n[317] who aim to prioritize emergency vehicle\
    \ thoroughfare on traffic intersections.\nThey do this by minimizing the entrance\
    \ time of the vehicle by manipulating vehicle\norder. Constraints used for these\
    \ problems include constraints on the speed of the\nambulances, the flow of vehicles\
    \ on the road, specific road connections present as well\nas time constraints.\
    \ The internet of things serves a pivotal role in enabling the allo-\ncation and\
    \ routing of emergency vehicles. The connectivity provided by IoT through\nvehicle-to-vehicle\
    \ communication as well as vehicle to infrastructure communication\nfacilitates\
    \ providing a real-time indication of the vehicle’s location as well as the con-\n\
    dition of traffic in a given area. This information can then be used to determine\
    \ an\noptimal route for emergency vehicles as well as for their optimal deployment\
    \ to serve\npeople in need. Information about optimization methods for smart health\
    \ has been\npresented in Table 22 and the data setups used in these approaches\
    \ in Table 23.\nTable 22. Optimization in Smart Health\nApplication\nAlgorithm\n\
    Single/\nParallel\nproblems\nObjectives\nConstraints\nEmergency\nVehicle\nAllocation\
    \ and Relo-\ncation\nACO [313]\nSingle\nMinimize lateness\nAmbulance\nfrom\nnearest\n\
    hospital\nis\ndispatched\nGA [314]\nSpeed of ambulance\nTotal number of am-\n\
    bulance limits\nGA [315]\nSingle\nMinimize\naverage\nwaiting\ntime of ambulances\n\
    Balance\nconstraints\non exit and entry vol-\numes\nFlow\nconservation\nconstraints\n\
    GA [316]\nSingle\nMinimize\ntotal\ncost\nin\nmoney and time\nEmergency\nVehicle\n\
    Routing\nPSO [318]\nSingle\nMinimize travel time, road\nlength traveled, density\
    \ of\nvehicles on the road\nRoad connections are\nspecific\nGA [317]\nSingle\n\
    Minimize the entrance time\nof\nemergency\nvehicle\nby\nchanging the order of\
    \ vehi-\ncles going through intersec-\ntions\nConstraint\non\nthe\ndifference\n\
    between\narrival times of cur-\nrent\nand\nprevious\nvehicles and on the\nentrance\
    \ time of the\nvehicle\n63\nTable 23. Data setup used for Smart Health\nData Type\n\
    Papers\nSelf-collected/ Presented/ Generated\n[313, 314, 315, 316, 318, 317]\n\
    Government Agency/ other research work\n[314, 315, 316]\n4.5\nSmart Homes\nHome\
    \ energy management has been the prime application of optimization in smart\n\
    homes, a summary of the objectives, constraints and the use of IoT has been shown\n\
    in Figure 12.\nSmart Homes \nHome Energy Management \nAppliance\nScheduling \n\
    Objectives: Minimize\ncost, time, peak to\naverage power ratio,\ndiscomfort \n\
    Constraints: Capacity\nlimits, flow, one level\nper location\nIoT usage: Sensors\
    \ for providing power consumption data and other environmental\nreadings such\
    \ as temperature etc for comfort determination in homes, smart meters\nprovide\
    \ interconnectivity betwen homes\nFigure 12. Optimization applications in Smart\
    \ Homes.\n64\nHome energy management refers to the development of demand side\
    \ manage-\nment schemes that aim to reduce the electricity cost billed to a customer\
    \ or maintain\ncomfort for the user. One way this is performed is by appropriate\
    \ appliance schedul-\ning. The idea here is to schedule the usage of appliances\
    \ in such a way that the\nmost power-hungry devices are turned on during off peak\
    \ hours when electricity costs\nmight be lower. The combination of the Smart Grid\
    \ and Smart Homes facilitates the\ndevelopment of optimization schemes that not\
    \ only benefit the customer (in terms\nof reduced electricity costs and maintaining\
    \ comfort) but also be useful for the util-\nities in ensuring that load profiles\
    \ (though minimizing the peak to average ratio)\nare more consistent thereby allowing\
    \ better planning of the power generation mix\nused by them. The authors of [319]\
    \ perform appliance scheduling for the purpose of\nminimizing electricity cost\
    \ and the waiting time for appliance usage. Interestingly,\nthey incorporate comfort\
    \ maintenance by adding it as a constraint. A similar ap-\nproach has been followed\
    \ by Bui et al [320] and Makhadmeh et al. [321] who aim to\nminimize the cost\
    \ of electricity usage with a constraint for maintenance of comfort.\nMakhadmeh\
    \ et al. [321] also include the reduction of waiting time rate for appliances\n\
    by the user and the reduction of the peak to average ratio of the power consumed\
    \ as\nconstraints. The authors in [322, 323, 324, 325] perform appliance scheduling\
    \ while\nconsidering electricity cost and peak to average ratio which need to\
    \ be minimized.\nAll of the authors present a multi-objective function for this\
    \ purpose combining the\nobjectives of minimizing the cost and the peak to average\
    \ power ratio. Azimi et al.\n[326] combine the problem of reducing cost and power\
    \ together as a single objective\nby considering the minimization of the ratio\
    \ of operating cost and load factor in a\nbattery supported system. The works\
    \ of [327, 328, 329, 330, 331] also consider user\ncomfort as part of the objective.\
    \ In [327], Essiet and Wang form a multi-objective\nminimization problem of electricity\
    \ cost, peak to average ratio for power and discom-\nfort of users in a smart\
    \ home supported by a renewable energy system consisting of a\nbattery and PV\
    \ system. In Chanra et al. [332], the authors aim to reduce electricity\ncost\
    \ by appliance scheduling in such a manner so as to make as much use of onsite\n\
    energy units as possible so as to reduce usage of utility provided electricity.\
    \ The\nenergy units they consider are a diesel generator, renewables and battery.\
    \ Another\napproach that aims to reduce cost of consumed electricity is presented\
    \ by Faia et\nal. [333] who formulate it as a problem of minimizing the energy\
    \ bill and the cost\nassociated with curtailment of power in a system with a battery\
    \ and a photovoltaic\nsystem. Work in [334, 330, 335, 336] also perform appliance\
    \ scheduling to reduce\ncost of electricity. Appliance scheduling for smart homes\
    \ has also been performed by\nFatima et al. [323] and Abid et al. [322] considering\
    \ a microgrid for homes where\ninstead of optimizing data from single homes, the\
    \ authors used data from connected\nsmart meters to determine an optimized control\
    \ scheme for appliances across the grid.\nThe constraints used for optimization\
    \ in smart homes are on the comfort needing to\nbe maintained, constraints on\
    \ the powerflow, time of operation, the maximum power\nthat is present or used\
    \ and which appliances are switchable appliances. Appliance\nscheduling is based\
    \ on smart meters as well as individual control and monitoring of\nappliances\
    \ using IoT systems. IoT devices enable the microgrid which is used to\ngather\
    \ data as well as control the switching on and off of sources from the houses\n\
    65\nelectricty supply. The information gathered from these IoT units can be processed\n\
    to optimize energy consumption patterns to reduce cost to the customer as well\
    \ as\nincrease comfort. The use of the considered optimization schemes for smart\
    \ homes\nhas been presented in Table 24 with the data setups presented in Table\
    \ 25.\n4.6\nSmart Industry\nOne of the biggest enablers of the Industry 4.0 concept\
    \ has been the use of AI tech-\nniques to improve the efficiency of the manufacturing\
    \ and production process. This\nhas led to the development of cyber physical systems\
    \ aiming to assist in activity recog-\nnition [339], machine health prediction\
    \ [340] and production management in terms of\nbottleneck prediction [341]. Apart\
    \ from conventional AI applications of anomaly de-\ntection, classification and\
    \ regression, computational optimization also finds numerous\napplications as\
    \ it fits well with the objective of efficient and streamlined manufac-\nturing.\
    \ The major applications for the use of computational optimization have been\n\
    in the area of routing and location for logistics and are variations of the vehicle\n\
    routing problem and are typically represented as Multidepot Vehicle Routing Prob-\n\
    lem (MVRP), Vehicle Routing Problem Pick-up and Delivery with Time Windows\n(VRPPDTW)\
    \ or Large-scale Dynamic Vehicle Routing Problem (LSDVRP). Figure\n13 summarizes\
    \ the objectives utilized, constraints and the role of IoT in optimization\nfor\
    \ Smart Industry.\nThe authors in [342] and [343] use the ABC and the GA respectively\
    \ to determine\nthe best location of service sites for logistic operations. Both\
    \ these approaches use\nmulti-objective formulations aiming to reduce cost of\
    \ operations, transportation as\nwell as the establishment of the centers. The\
    \ authors in Su et al. [344] use ACO,\nAlinaghia et al. [345] PSO and Utama et\
    \ al. [346] use ABC to address the problem\nof determining the best route for\
    \ logistics operations.\nThe routing and coverage\nproblem for logistics involves\
    \ determining the best route for either a single or multiple\nvehicles at a depot\
    \ which have to visit every customer. The works of [344, 345, 346]\nfocus on reducing\
    \ the cost incurred in the routing for vehicles in logistics as a single\nobjective\
    \ formulation. On the other hand, the authors of [347, 348] and [349] all\nwork\
    \ on the minimization of distance as their objective in determining the optimal\n\
    route for delivery vehicles trying to serve multiple locations.\nMounia and Bachir\n\
    [348] address routing in logistics as a multi-objective problem where they not\
    \ only\naim to minimize the distance traveled by the vehicles but also aim to\
    \ reduce CO2\nemissions and the number of vehicles used. A time based optimization\
    \ approach is\npresented by the authors of [350] and [351] with [350] also factoring\
    \ in reduction of fuel\nconsumption in their objective function formulation. Constraints\
    \ used for the routing\nand location determination problem are related to time,\
    \ capacity constraints for the\nvehicles, each customer being served only once,\
    \ constraints related to the route. The\ndetermination of the location and the\
    \ route for vehicles is dependent on real time\ninformation concerning the traffic\
    \ in the area as well as the loads to be collected from\neach site in addition\
    \ to other information which can be provided by IoT units. The\nusage of optimization\
    \ algorithms for smart industry has been presented in Table 26\nwith data setups\
    \ presented in Table 27.\n66\nTable 24. Optimization in Smart Homes\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nHome Energy Man-\n\
    agement\nACO [319]\nSingle\nMinimize cost and waiting\ntime\nComfort needs to\
    \ be main-\ntained\nACO [322]\nParallel\nMinimize cost and peak to\naverage ratio\n\
    Power flow constraints\nACO [323]\nSingle\nMinimize cost and peak to\naverage\
    \ ratio\nMaximum energy capacity\nconstraint\nDE [324]\nDevice counted that can\
    \ be\nshifted is positive\nPSO [325]\nNumber of devices shifted at\nany time should\
    \ not be more\nthan the available number of\ncontrollable devices\nGA [337]\n\
    Single\nMinimize peak to average\nratio for load shaping\nLoad shaping, redistribution\n\
    of load in a flexible manner\nGA [326]\nSingle\nMinimize ratio of operating\n\
    cost and load factor\nCharging and discharging of\nbatteries\nComplete load transfer\
    \ and\nload clipping limits\nDE [327]\nSingle\nMinimize\nelectricity\ncost,\n\
    peak\nto\naverage\nratio\nof\npower and discomfort mini-\nmization of users\n\
    Constraints on PV supply\nlimits\nACO [328]\nState of charge and rate of\ndischarge\
    \ of battery\nDE [329]\nSingle\nMinimize\nelectricity\ncost\nand discomfort\n\
    Time of operation within\nspecified limits\nPSO [331]\nTemperature,\nair\nquality,\n\
    illumination\nand\nenergy\nshould be within maximum\nlimits\nGA [330, 338,\n305]\n\
    Parallel\nA given appliance must be\non for specified times of the\nday\nPower\
    \ limits to be followed\nABC [320]\nSingle\nMinimize cost of electricity\nAppliances\
    \ for comfort have\nfixed times\nDE [332, 334]\nSome appliances cannot be\ndelayed\n\
    GA [335]\nPower balance constraints\nPSO\n[321, 336]\nSurplus\nsolar\npower\n\
    sold\nback to distribution system\nMaintain zero net energy in\nbuilding\nTime\
    \ constraints\nLoad safety factor\nLoad phases of appliances\nfulfill energy requirements\n\
    Comfort needs to be main-\ntained\nPeak to average power ratio\nbalancing\nPSO\
    \ [333]\nSingle\nMinimize\nenergy\nbill\nand\ncost associated with KWH\ncurtailment\n\
    Power\nvalues\nwithin\nlim-\nits, battery charge and dis-\ncharge limits\nTable\
    \ 25. Data setup used for Smart Homes\nData Type\nPapers\nSelf-collected/ Presented/\
    \ Generated\n[322, 319, 323, 324, 325, 326, 327, 329, 305, 338, 330, 320, 334,\
    \ 335, 321, 336]\nGovernment Agency/ other research work\n[322, 323, 337, 327,\
    \ 338, 331, 332, 321, 333]\n67\nTable 26. Optimization in Smart Industry\nApplication\n\
    Algorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\nLocation determina-\n\
    tion for sites\nABC [342]\nSingle\nMinimize\ntransportation\nand hub establishment\
    \ cost\nSingle allocation for each de-\nmand node\nA given number of hubs are\n\
    established\nCovering radius constraint\nTime reliability constraint\nGA [343]\n\
    Parallel\nMinimize distribution cost\nand maximize profit\nLoad capacity meets\
    \ needs\nof customers\nA delivery vehicle can only\nbe delivered when it receives\n\
    a task\nCapacity constraints\nRouting for Logistics\nABC [348]\nParallel\nMinimize\
    \ distance travelled,\nCO2 emissions, number of\nvehicles used\nEvery customer\
    \ visited only\nonce\nEvery vehicle visiting a loca-\ntion must leave it too\n\
    Ensure route continuity\nDemands of any route must\nnot exceed capacity\nEdges\
    \ satisfying time win-\ndow constraint are allowed.\nABC [349]\nSingle\nMinimize\
    \ total transporta-\ntion distance\nEach customer served only\nonce\nGA[347]\n\
    Route should start and end\nat the same depot\nServed demand of each vehi-\ncle\
    \ does not exceed capacity\nlimit\nACO [344]\nSingle\nMinimizing total cost\n\
    Each customer served only\nonce\nPSO[345]\nDispatched\nvehicles\nnot\nmore than\
    \ available\nABC [346]\nVehicle routes don’t contain\ndisconnected routes\nCustomer\
    \ demand shouldn’t\nbe larger than vehicle capac-\nity\nABC [351]\nSingle\nMinimize\
    \ travelling time\nVehicle load constraint\nSubtours not allowed\nSpeed, time\
    \ and distance\nMaximum number of vehi-\ncles on a route\nEach customer served\
    \ by one\nvehicle\nVehicle number max limit\nPSO [350]\nParallel\nMinimize fuel\
    \ consumption\nand travel time\nEach customer serviced by\nonly one vehicle\n\
    Continuity in route\nVehicle\nload\nconservation\nbetween nodes,\nFirst\nin\n\
    first\nout\nproper\nwhen traveling time is com-\nputed\nTime taken for customers\
    \ as\nstated,\nMaximum time for servicing\nVehicle capacity constraint\nDepot\
    \ is the first and final\ndestination of each vehicle\n68\nSmart Industry \nLocaƟon\
    \ DeterminaƟon of sites \nRouƟng for LogisƟcs \nObjectives: Minimize\ntransportation,\n\
    establishment and\ndistribution cost, Maximize\nprofit\nConstraints: Number of\n\
    sites need to be met,\ndistance coverage for\nlocations, time limits,\ncapacity,\
    \ demands need to\nbe met\nObjectives: Minimize\ndistance travelled, CO2\nemissions,\
    \ number of\nvehicles, time, fuel, cost\nConstraints: Customer\nserved only once,\
    \ route is\ncontinuous, demand limits,\nvehicle count limits,\nvehicle load limits,\
    \ speed,\ntime and distance limits,\ntime limits\nIoT Usage: Sensing units provide\
    \ information relating to the loads to be\ncollected as well as traffic and other\
    \ information\nFigure 13. Optimization applications in Smart Industry.\n4.7\n\
    Smart Infrastructure\nWithin the infrastructure domain, the most common optimization\
    \ problem is the\narea of health monitoring of structures. Structural Health Monitoring\
    \ (SHM) is a\nnecessary application within the smart infrastructure domain as\
    \ it makes for safe\nusage of different structures of public use.\nThese structures\
    \ can be buildings as\nwell as transport structures such as bridges, tunnels.\
    \ Structural health monitoring\ntypically involves the use of sensors attached\
    \ to a structure at several points that can\ngauge some type of physical variable\
    \ (vibration, strain, acceleration, temperature,\ntilt etc) from the structure.\n\
    Data gathered from these connected sensors is then\nused to determine if any structural\
    \ damage has taken place or not.\nWithin the\ndomain of SHM, optimization algorithms\
    \ find application towards the Optimal Sensor\n69\nTable 27. Data setup for Smart\
    \ Industry\nData Type\nPapers\nSelf-collected / Presented/ Generated\n[342, 343,\
    \ 347, 351]\nGovernment Agency/ other research work\n[348, 349, 344, 346, 351]\n\
    Dataset/ Standard Network\nTest instances in [352] used by [345] and [350]\nPlacement\
    \ (OSP) Problem as illustrated in Figure 14. Figure 14 summarizes the\nobjectives\
    \ used, constraint and the use of IoT.\nSmart Infrastructure \nOpƟmal Sensor Placement\
    \ \nObjectives: Minimize error,\nredundancy \nMaximize sensor coverage,\nconnectivity,\
    \ relaibility\nConstraints: Sensor placement\nlocations limitations, number of\n\
    sensors limited\nIoT usage: The placement of sensors\nespecially is performed\
    \ using IoT\nwhere connected sensors povide the\ndata using which optimization\
    \ is\nperformed\nFigure 14. Optimization applications in Smart Infrastructure.\n\
    For the optimal sensor placement problem, the aim is to determine the best num-\n\
    ber and placement of sensors over a structure so as to reduce the number of sensors\n\
    used as well as improve the measurement process, both these aims result in increased\n\
    reliability of the SHM system as well as potentially lower the cost of the system\n\
    too. The authors in [353, 354, 355, 356, 357] work on the placement of sensors\
    \ for\nstructural health monitoring focusing on improving the effectiveness of\
    \ the deployed\nsystem. In this regard, [353] and [356] use the genetic algorithm\
    \ to solve a multi-\nobjective problem aiming to minimize the measurement error\
    \ and cost. Yang et al.\nin [355] formulate OSP as single objective minimization\
    \ where they aim to reduce\nthe ratio of sensor placement performance to the redundancy\
    \ of information resulting\nfrom each tested placement. Another approach that\
    \ works on the error is presented\nby [354] who use the Particle Swarm Optimization\
    \ to maximize the reconstruction\n70\nTable 28. Optimization in Smart Infrastructure\n\
    Application\nAlgorithm\nSingle/\nParallel\nproblems\nObjectives\nConstraints\n\
    Sensor placement\nGA [353]\nSingle\nMinimize measurement er-\nror and measurement\
    \ cost\nPSO [354]\nSingle\nMaximize\nreconstruction\naccuracy\nand\nrobustness\n\
    of\ntransfer\nrelationship\nbetween\ndeformation\ndis-\nplacement and surface\
    \ strain\n(formulated as a minimiza-\ntion\nproblem\nfor\nnegated\naccuracy and\
    \ robustness)\nSensor\nplacements\nwithin\npredefined range and angles\nGA [355]\n\
    Single\nMinimize the ratio of sen-\nsor placement performance\nto redundancy information\n\
    Sensor placement is permit-\nted on chosen location\nGA [356]\nSingle\nMinimize\
    \ the MAE between\nthe system and the esti-\nmated response (global er-\nror)\
    \ and minimize the maxi-\nmum difference between the\nsystem and its estimated\
    \ re-\nsponse (local error)\nSensor locations are from a\nset of predefined locations\n\
    DE [357]\nSingle\nMaximize quality of cover-\nage,\nlifetime,\nconnectivity\n\
    uniformity of sensor nodes\nand cluster heads and relia-\nbility\nConstraint on\
    \ the number\nof cluster heads associated\nwith each sensor node and\ncluster\
    \ head\nGA [358]\nSingle\nMinimize cross correlation of\nthe sensing network\n\
    Sensor placement is permit-\nted on chosen location\nTable 29. Data types for\
    \ Smart Infrastructure\nData Type\nPapers\nSelf-collected/ Presented/ Generated\n\
    [353, 354, 355, 356, 358, 358, 359, 360]\naccuracy and robust transfer relationship\
    \ between the deformation and surface strain\nwith different sensor placements.\
    \ It must be noted that the objective function is for-\nmulated as minimization\
    \ of negated accuracy and negated robustness measurement.\nOptimized structural\
    \ health monitoring for aircraft monitoring has been targeted\nin [358]. In their\
    \ setup consisting of vibration sensors, the authors optimize sensor\nplacement\
    \ by minimizing the cross correlation of the vibration waves in the sensing\n\
    network. The most common constraint for sensor placement is restrictions on the\n\
    places where sensors can be placed. This information has been provided in Table\
    \ 28\nand the data setups are presented in 29.\n4.8\nSmart Transportation\nOne\
    \ of the most popular optimization applications within smart cities are within\
    \ the\nsmart transport domain. These include parking system routing, traffic signal\
    \ control\nand scheduling. A summary of the applications, their objectives, constraints\
    \ and the\nrole of IoT is illustrated in Figure 15.\n71\nSmart TransportaƟon \n\
    Traﬃc Signal\nControl \nTraﬃc RouƟng \nParking System\nRouƟng \nRoad Traﬃc\nRouƟng\
    \ \nObjectives: Minimize\ntime delay\nConstraints: Traffic\nvolume constraint,\
    \ traffic\nflow constraint, duration\nof traffic light phases \nIoT usage: For\
    \ parking, IoT nodes indicate to free parking spots from which data is\ngathered\
    \ and sent to the cloud. Connected vehicles are also another source of IoT data\n\
    used for navigation purposes along with data from cellphones. \nObjectives: Minimize\n\
    travel distance, traffic\ncongestion\nConstraints: Roadmap\nto be followed is\
    \ fixed,\nroad connections fixed \nObjectives: Minimize\ntravel time, delay,\n\
    emissions, traffic flow\nConstraints: Road\nconnections are fixed,\nnumber of\
    \ routes are\nfixed \nFigure 15. Optimization applications in Smart Transportation\n\
    Smart transport systems consist of sensors along roads and traffic intersections\n\
    to measure relevant parameters while also providing communication services between\n\
    vehicles and infrastructure. This allows for measurement of the current state\
    \ of roads\nin terms of traffic congestion and usage thereby allowing for the\
    \ use of optimization\ntechniques to improve trip experiences for users and make\
    \ the transportation system\nmore efficient. The authors in [361, 362, 363, 364,\
    \ 365] work on the minimization\nof time (wait and travel) in traffic signal control.\
    \ The aim of such systems is to\nreduce traffic build up on signal intersections.\
    \ Of these, the work in [361, 362] and\n[363] use the artificial bee colony and\
    \ the genetic algorithm respectively for a single\nobjective function of minimizing\
    \ delay time. An interesting approach for this problem\nis presented by Li et\
    \ al. [365] who use a multi objective formulation targeting the\nminimization\
    \ of the average travel time both overall and individually for all vehiclesl.\n\
    Another multi-objective approach in traffic signal control is presented by Chen\
    \ and\nYuan [366] who form a mixed problem of minimizing vehicle emissions and\
    \ travel\ntime together. Korkmaz [367] work on the estimation of delays in traffic\
    \ signals using\na genetic algorithm, they use it to minimize the difference between\
    \ the estimated\n72\nand simulated values.\nTang et al.\n[364] carry out distributed\
    \ optimization in a\nfog and cloud hierarchy.\nFirst, fog nodes optimize phase\
    \ timings within a single\ncycle and if the number of vehicles exceeds a threshold,\
    \ the results are sent to the\ncentral controller to further optimize over different\
    \ cycles so that a traffic jam is\navoided or alleviated. Zhang et al. [368] attempt\
    \ traffic signal optimization using\nmulti objective optimization functions of\
    \ reducing time delay and increasing traffic\ncapacity.\nConstraints used for\
    \ traffic signal control are timing constraints on the\nphase durations, flow\
    \ rate of vehicles and on the travel time.\nTraffic routing is also another important\
    \ aspect in smart transportation. This\ntypically involves the determination of\
    \ the best route to the destination keeping in\nview various criteria such as\
    \ reduction of distance, time, cost etc.\nThe problem\nof traffic routing is addressed\
    \ by the works of [369, 370, 371, 372, 373, 374, 375,\n376, 377, 378, 379]. The\
    \ authors in [369] and [370] use the ant colony optimization\nand genetic algorithm\
    \ to minimize the travel distance in parking system routing.\nThey aim to minimize\
    \ distance traveled by a driver looking to find a free parking\nspot, using the\
    \ algorithm, an optimized route is determined for the parking spot.\nIn, [371,\
    \ 373] and [372] the ant colony optimization algorithm is used to determine\n\
    the best route in a generic traffic scenario where cars can communicate with road\n\
    side units in a VANET architecture. Routing for public transport is performed\
    \ by\n[380] and [375] in a connected vehicle scenario aiming to minimize travel\
    \ time. An\neconomic objective approach to traffic routing is taken by the authors\
    \ of [376, 378]\nand [379] who minimize the total cost of the trip.\nMao [379]\
    \ also include traffic\ncongestion and travel time as well in their computation.\
    \ Hassoune et al. [381] work\non a parking guidance using the ant colony optimization\
    \ algorithm to reduce traffic\ncongestion and minimize distance. Constraints for\
    \ traffic routing are related to the\nroad network allowing travel in specific\
    \ directions, signaling and travel time. Within\nsmart transportation, IoT nodes\
    \ are used to determine occupied parking spaces and\nthis data is used for routing\
    \ applications in parking. Traffic routing is based on vehicle\nto vehicle and\
    \ vehicle to infrastructure communication provided by VANETs within\nthe IoT framework.\
    \ These systems enable cars to exchange data with each other and\nalso with fixed\
    \ infrastructure on the roads. This discussion is also presented in Table\n30\
    \ and the data setups for the covered work are presented in Table 31.\n5\nConclusion\n\
    This chapter provides coverage of the application of five popular computational\
    \ algo-\nrithms in the IoT enabled Smart City. It provides a mapping of the various\
    \ applica-\ntions to the specific smart city domain as well as highlights the\
    \ different formulations\nof the objective function used to solve the considered\
    \ problem. This coverage is pro-\nvided in terms of the number of objectives as\
    \ well as whether the problem was solved\nas a single objective, in a hierarchical\
    \ manner or otherwise. It also highlights the con-\nstraints used by the researchers\
    \ in solving the problem which is an important aspect\nas constraints are governed\
    \ by the application at hand. An overview of the mapping\nof various smart city\
    \ optimization applications derived from this work is provided in\nFigure 16.\n\
    73\nTable 30. Optimization in Smart Transportation\nApplication\nAlgorithm\nSingle/\n\
    Parallel\nproblems\nObjectives\nConstraints\nTraffic signal control\nABC [380]\n\
    Single\nMinimize travel time\nInterval of feasible green\ntime length values\n\
    ABC [374]\nInterval of feasible offset\ntime length values\nConstraints\non\n\
    cycle\nlengths\nABC\n[361, 362]\nSingle\nMinimize time delay\nOnly one active\
    \ stage\nGA [363, 364]\nFlow dynamic constraint\nGA [365]\nParallel\nMinimize\n\
    time\ndelay\nand\nalso achieve traffic network\nequilibrium\nLink volume constraint\n\
    Constraints on duration\nof green/red phases\nOffset phase duration\nMinimize\
    \ average travel\ntime.\nRelationship\nbetween\nroute\nand\nlink\nflows\nneed\
    \ to be maintained\nas defined\nGA [366]\nSingle\nMinimize vehicle emissions\n\
    and travel time for vehicles\nSum of green time of\neach phase is equal to to-\n\
    tal available green time\nGreen time is set by a\nlower bound\nGA [368]\nParallel\n\
    Minimize delay, and exhaust\nemission and maximize traf-\nfic capacity (formulated\
    \ as\nminimization problem)\nCycle length of signals\nhas minimum and max-\nimum\
    \ limits\nTraffic\nRouting\n(Parking System)\nACO [369]\nParallel\nMinimize\n\
    distance\nwith\nbend straightening and turn\nreduction\nBend straightening and\n\
    turn reduction\nACO [381]\nParallel\nReduce\ntraffic\nflow\nand\nshortest\ndistance\n\
    towards\nparking\nGA [370]\nSingle\nMinimize distance\nSpecific prefixed routes\n\
    possible for free parking\nTraffic\nRouting\n(Road Traffic)\nACO\n[371, 373]\n\
    Single\nMinimize distance, minimize\ncongestion\nFollow roadmap\nACO [372]\nSingle\n\
    Maximize flow\nACO [375]\nSingle\nMinimize travel time\nConstraint on relation-\n\
    ship between green time\nlengths cycle length, off-\nset on the network calcu-\n\
    lation\nGA [377]\nInterval of feasible green\ntime length values\nInterval of\
    \ feasible offset\ntime length values\nSpecific road segments\nConnected\nconstraints\n\
    on the values of time\ntaken for vehicles\nDE [376]\nSingle\nMinimize travelling\
    \ cost and\nrental cost\nEach bus has one em-\nployee\nEmployees\ncan\nbe\nas-\n\
    signed when stop is avail-\nable\nBus stop assigned when\nbus is in use\nConstraint\
    \ on distance of\nbus stop from employee\nhome and more\nDE [378]\nSingle\nMinimize\
    \ total cost\nRoad\nnetwork\nconnec-\ntions followed\nSolutions contains cor-\n\
    rect number of routes\nACO [379]\nSingle\nMinimize\ntransit\ntime,\ntravel distance,\n\
    road con-\ngestion and traffic expenses\nVariable\nvalue\ncon-\nstraints\n74\n\
    Table 31. Data types for Smart Transportation\nData Type\nPapers\nSelf-collected\
    \ / Presented/ Generated\n[374, 362, 361, 363, 364, 365, 366, 368, 369, 381, 370,\
    \ 371, 373, 372, 380, 377]\nGovernmentAgency/ other research work\n[361, 365,\
    \ 366, 370, 374, 375, 377, 376, 378, 363]\nSmart\nAgriculture \nIrrigaƟon Water\n\
    Scheduling \nSmart Homes \nHome Energy\nManagement \nSmart City\nServices \nWaste\n\
    Management\nRoute\nOpƟmizaƟon \nSmart Industry \nSmart Grid \nPower\nManagement\
    \ \nPlanning \nSmart\nInfrastructure \nOpƟmal Sensor\nPlacement \nSmart Health\
    \ \nEmergency\nVehicle\nAllocaƟon and\nRelocaƟon \nEmergency\nVehicle RouƟng \n\
    Smart Transport \nTraﬃc Signal\nControl \nTraﬃc RouƟng \nOpƟmizaƟon in Smart CiƟes\
    \ \nRouƟng and\nLocaƟon\nDeterminaƟon\nfor LogisƟcs \nIrrigaƟon Water\nAllocaƟon\
    \ \nEnergy\nOpƟmizaƟon and\nWater Control \nFigure 16. Optimization applications\
    \ in IoT based Smart Cities.\n75\nCHAPTER V\nCASE STUDY - SMART HEALTH\n1\nIntroduction\n\
    As discussed earlier, IoT finds usage in many different Smart City domains, both\
    \ for\nuse in classification/regression tasks as well as for optimization applications.\
    \ One\nof the most important applications of IoT within Smart Cities is within\
    \ the Smart\nHealth domain wherein IoT devices enable the monitoring of patients\
    \ for different\ndiseases such as heart disease etc. While there are a multitude\
    \ of IoT within Smart\nHealth, in order to develop algorithms on IoT sensor data,\
    \ the case of ambient assisted\nliving was chosen, in particular, this work considers\
    \ the case of fall detection.\n2\nIoT for Fall Detection\nThe United Nations estimates\
    \ that the number of old people (aged 60 and above) will\nbe 2.1 billion by 2050\
    \ and 3.1 billion by 2100 [382] leading to an increased old age\npopulation. With\
    \ people above 65 years suffering the greatest number of fatal falls\namong adults\
    \ aged 60 and over [383] healthcare costs related to fall related injuries\nrun\
    \ in to billions of dollars. These falls can result in injuries of moderate to\
    \ severe\nnature in the people experiencing the falls and may lead to decreased\
    \ mobility [384],\nespecially for the elderly [385]. Furthermore, following the\
    \ initial fall, the likelihood\nof experiencing additional falls increases [386]\
    \ and can lead to mental stress in the\nform of post-fall syndrome [387].\nThe\
    \ Internet of Things has spearheaded the development of cyber-physical systems\n\
    that facilitate the recognition of activities/events being performed by people\
    \ in their\ndaily life. One aspect of this application scenario is fall detection.\
    \ Falls can occur\ndue to a variety of reasons [388] and Fall Detection Systems\
    \ (FDS) are used for\npeople with different of health related ailments such as\
    \ in Parkinsons disease [389],\nepilepsy [390], arthritis, people suffering from\
    \ cardiovascular diseases and various\nneuro-degenerative diseases [391]. In any\
    \ scenario, it is pertinent that when a person\nundergoes a fall, they be provided\
    \ care as quickly as possible. Providing timely care\nafter a fall may improve\
    \ post-fall life quality of a patient. Fall detection Systems can\nplay a vital\
    \ role in contributing to the provision of timely care [389, 392] by alerting\n\
    healthcare professionals. As noted by [393] fall detection systems are necessary\
    \ for\nold people with cognitive impairments who may not be able to get up after\
    \ a fall for\nlong durations of time which may result in pressure sores and other\
    \ complications\nand due to vulnerability to injuries when experiencing a fall,\
    \ it may sometimes result\nin death [394].\n76\nA fall is an unintended and sudden\
    \ change of posture resulting in one resting on\nthe ground or some other lower\
    \ level elevation. The aim of a FDS is to monitor the\nmovement of a person and\
    \ determine when a fall has taken place with the aim to\nalert healthcare personnel\
    \ or other caregivers. Over the years different methodologies\nhave been suggested\
    \ to address this problem, however, before discussing the different\nmethods utilize\
    \ for fall detection purposes, it is important to mention what researchers\nenumerate\
    \ to be the traits of a ’good’ FDS [395].\n2.1\nChallenges/Requirements of a FDS\n\
    The following are the typical typical traits/requirements of a good fall detection\n\
    system.\n2.1.1\nNon-intrusiveness\nAn important requirement in fall detection\
    \ systems is to be non-intrusive. Any FDS\nshould not be an impediment in the\
    \ execution of daily activities of a person as it may\nrestrict movement or inconvenience\
    \ their lifestyle.\n2.1.2\nLow Latency\nAn FDS needs to be able to detect a fall\
    \ with low latency. Latency refers to the time\nduration between the occurring\
    \ of a fall and its detection. FDS need to detect falls\nas quickly as possible\
    \ to ensure that caregivers can be notified right away so that apt\ncare is provided\
    \ to the person. Low latency depends on not only the algorithm being\nused to\
    \ detect falls but also parameters like network speed and reliability. Sensor\
    \ data\ntransmission to the main system might also be included in this calculation\
    \ depending\non the FDS proposed.\n2.1.3\nLow power consumption\nPower consumption\
    \ is an important issue in FDS, especially for ones which are battery\npowered.\
    \ Many FDS are expected to be used by elderly people who might not be\nas regular\
    \ in charging the FDS, therefore FDS should consume as little power as\npossible.\n\
    2.1.4\nAllow mobility\nA FDS should not hamper mobility as it might be preventive\
    \ in adoption of a FDS\ntoo. FDS which require people to remain infront of a camera\
    \ at a certain viewpoint\netc can be difficult to deploy and use.\n2.1.5\nDifferentiate\
    \ between Falls and Activities\nA FDS should have low false positives and false\
    \ negatives. In other words it should\nbe able to confidently detect falls and\
    \ be able to differentiate them from activities of\n77\ndaily living such as walking,\
    \ sitting, jumping, running etc. Any false alarms will result\nin wastage of valuable\
    \ healthcare resources, on the contrary, any false negatives might\ncause the\
    \ patient/person having undergone the fall to not get appropriate medical\ncare\
    \ in time and lead to potential death or trauma.\n2.1.6\nNotify caregivers\nA\
    \ complete fall detection solution should have some mechanism of informing care-\n\
    givers whenever a fall is detected. Typically this is carried out in terms of\
    \ email,\nnotifications via some system or messages. Moreover, this process should\
    \ be quick so\nas to ensure the dispatch of any needed help as quickly as possible.\n\
    2.1.7\nTrack history\nA complete fall detection solution should be able to provide\
    \ the history about a\npatient in terms of falls that a person may have suffered\
    \ from as this will help monitor\nthe patients health and determine likelihood\
    \ to suffer from falls in the future. FDS\nmay sometimes also look at other biological\
    \ parameters during falls so as to help\ninvestigate the causes of falls using\
    \ the conditions prevalent at that time. Biological\nparameters that could be\
    \ measured include heart rate, perhaps an ECG or others as\ndeemed necessary based\
    \ on a patients history.\n2.2\nTypes of Fall Detection Systems\nFall detection\
    \ systems can be categorized in to three types based on the sensing\nmechanisms\
    \ used and their placement. These are Ambient Sensor based systems,\nVisual based\
    \ systems and Wearable Sensor based systems.\n2.2.1\nAmbient Sensor based systems\n\
    Ambient sensor based systems are also sometimes referred to as environmental sensor\n\
    based systems since these types of FDS rely on the use of a number of wirelessly\n\
    connected ambient sensors placed in a given area for the detection of falls. These\n\
    FDS make use of various sensors including Passive InfraRed (PIR) Sensors [396],\n\
    Acoustic sensors such as microphones, thermal sensors as well as sensors measuring\n\
    Wi-Fi signal strength etc. For e.g., the authors in [397] develop a fall detection\
    \ system\nbased on two PIR sensors and a vibration sensor to detect vibrations\
    \ on the floor\nwhen a person falls down. Using the PIR sensor to detect a persons\
    \ motion. feature\nextraction is performed on vibration measurements and an SVM\
    \ classifier is used to\ndetermine whether a fall has taken place or not. Another\
    \ approach presented in [398]\nutilize sounds in a home to determine falls in\
    \ the elderly. They do this by extracting\nfeatures in sound signals and like\
    \ [397] use a Support Vector Machine classifier to\ndetermine falls. The authors\
    \ in [399] make use of Wi-Fi channel state information\nfor fall detection. They\
    \ achieve this by feature extraction in the frequency domain\nfollowed by an SVM\
    \ classifier.\n78\nAmbient fall detection systems offer the advantage of not requiring\
    \ people to wear\nanything on their bodies and are thus nonrestrictive in that\
    \ sense. However, such\nsystems are prone to suffer high false positives due to\
    \ the large number of external\nfactors such as other heat emitting devices, multiple\
    \ people moving around at the\nsame time etc. Another issue that comes with ambient\
    \ fall detection systems is that\ndeployment could be cumbersome to cover a large\
    \ space, therefore they are typically\ndeployable in small places such as a home\
    \ or a small building but are very difficult\nto use outdoors due to the nature\
    \ of the setting as well as the possible sources of\nexternal interference.\n\
    2.2.2\nVision based systems\nVision based systems rely on the processing of video\
    \ frames or other visual infor-\nmation such as depth and thermal images or their\
    \ combination [400] to detect falls.\nTypically, the recorded data is sent to\
    \ a server or central computer which provides\nprocessing capabilities. Moreover,\
    \ recently, with the use of deep learning algorithms,\nsuch systems have found\
    \ to provide improved performance. For e.g. [401] use Convo-\nlution Neural Networks\
    \ on velocity information in video frames. Another approach\nthat uses CNNs is\
    \ given in [402] who model human motion from video frames using\nCNNs and then\
    \ use a logistic regression classifier to determine falls. Other approaches\n\
    with CNNs include the works in [403] and [404], both of which achieve very high\
    \ de-\ntection accuracy. Another DL network which has been useful in fall detection\
    \ systems\nbased on cameras is Long Short Term Machine, a recent example of that\
    \ is the use of\na CNN + LSTM combination on 360 degree video recordings of an\
    \ indoor facility to\ndetermine falls. The LSTM allows for capturing the changing\
    \ characteristics between\nvideo frames to provide fall recognition.\nEventhough\
    \ vision based FDS have been able to provide improved fall detection\nperformance\
    \ recently, like ambient sensor based systems, these systems suffer from\nsome\
    \ drawbacks. They are affected negatively in terms of performance and deploya-\n\
    bility from external factors such as occlusion, restricted mobility of the people\
    \ being\nmonitored, typically usable in environments over a small area, have high\
    \ computa-\ntional costs and are expensive. One other issue with vision based\
    \ systems is privacy,\nvision systems which use normal cameras pose risk of violation\
    \ to the privacy of peo-\nple being captured on video. The question of privacy\
    \ can be circumvented by the\nuse of depth cameras for e.g. a kinect [405, 406]\
    \ or using heatmaps using infrared\ncameras/sensors [407].\n2.2.3\nWearable Sensor\
    \ based systems\nWearable fall detection systems involve the use of a device attached\
    \ to the subject.\nThe wearable device monitors user activity by means of sensors\
    \ and can determine\nwhen a fall has occurred. Information about the fall is then\
    \ conveyed to a doctor or\nother medical professionals. Various types of sensors\
    \ can be used in these systems\nincluding inertial measurement sensors such as\
    \ accelerometers, gyroscopes, magne-\ntometers [408] or health sensors such as\
    \ ECGs, oxygen level and pulse rate sensors\n79\nas well. The devices that contain\
    \ these sensors can be worn on the hand, wrist, arm,\nchest, waist, legs, thigh\
    \ or even put inside shoes and are usually battery powered.\nWearable fall detection\
    \ systems have the advantage that they do not restrict move-\nment of the person\
    \ using them and consume less power than the other two approaches,\nhowever, a\
    \ disadvantage to this is the need to ’carry’ the device all the time. Another\n\
    disadvantage is the need to charge the device regularly which might be difficult\
    \ to do\nfor older people, a way this has been addressed in some approaches is\
    \ to make use of\nenergy harvesting [409].\n2.3\nTypes of Wearable FDS\nThere\
    \ are two types of wearable systems in use for fall detection purposes.\n2.3.1\n\
    Threshold based systems\nThe first of type of wearable FDS are threshold-based\
    \ fall detection systems where\nauthors have used various thresholding techniques\
    \ on sensor values measuring motion,\nparticularly the accelerometer. The major\
    \ advantage of threshold based fall detection\nsystems is their relative low computational\
    \ cost and use of sensor fusion techniques\nto improve fall detection accuracy\
    \ , however, the big disadvantage of such systems is\nthat threshold based systems\
    \ do not generalize well across subjects since people may\nhave different gaits,\
    \ this is especially true for people of different ages. As a result,\nthreshold\
    \ based FDS may suffer from having many false positives as well as false\nnegatives\
    \ since the FDS needs to differentiate between activities of daily living and\n\
    falls, which many times may appear to be fairly similar to each other in terms\
    \ of\nsensor readings.\n2.3.2\nMachine/Deep Learning based systems\nSince threshold-based\
    \ systems are rigid in terms of their usage, ML/DL methods\nprovide a flexible\
    \ method for fall detection. ML/DL algorithms can learn complex\npatterns from\
    \ sensor data which indicate to a fall while monitoring a persons activities\n\
    and therefore are useful in fall detection systems. As opposed to threshold based\n\
    systems, their generalizing capability allows them to be used across subjects.\n\
    A\ntypical ML framework for fall detection will involve data acquisition, prepossessing,\n\
    feature extraction and then usage of a suitable ML algorithm to make the inference\n\
    for a fall or no fall. A deep learning framework based FDS might have a similar\n\
    methodology, but depending on the DL algorithm used, feature extraction might\
    \ be\nomitted.\n2.4\nSensors used in Wearable FDS\nAs mentioned before, the sensors\
    \ used in wearable FDS are accelerometers, gyroscope,\nmagnetometer, ECG, Pulse\
    \ Rate and oxygen saturation levels. In this section, we will\ndiscuss briefly\
    \ the role of these sensors in wearable FDS and parameters of interest\nwhen using\
    \ them in FDS.\n80\n2.4.1\nAccelerometers\nAccelerometers, together with gyroscopes\
    \ are the most widely used sensors in wear-\nable FDS. One reason for this is\
    \ that both these sensors are typically present in\nsmartphones, which have been\
    \ used to either collect data for and/or deploy fall de-\ntection systems. An\
    \ accelerometer provides a measure of absolute acceleration and\nare used to detect\
    \ vibrations, force in a variety of applications involving monitoring\nof machines,\
    \ planes, civil architectures and more. In an FDS, an accelerometer is\nable to\
    \ capture the movement patterns of individuals which can be used to determine\n\
    falls.\n2.4.2\nGryroscope\nGyroscopes are used to measure tilt/orientation.\n\
    Gyroscopes find applications in\nvarious areas where orientation measurement is\
    \ required, for e.g. in airplanes and\nsubmarines where they are used in stabilization\
    \ systems, smartphones and game re-\nmotes for interactive gameplay, among other\
    \ things. Since orientation is an important\ncharacteristic of a fall, gyroscopes\
    \ are one of the most widely used sensors in FDS\nalong with acceleratorometers.\n\
    2.4.3\nMagnetometer\nA magnetometer is a device that measures the direction and\
    \ strength of magnetism\nrelative to the earths magnetic north. In addition to\
    \ other applications, magnetome-\nters are used in aircrafts for direction referencing.\
    \ These sensors are not very popular\nin FDS but have been proposed in some approaches\
    \ [410, 411] to be used for fall\ndetection in addition to accelerometers and/or\
    \ gyroscopes.\n2.4.4\nVarious Medical Sensors\nWearable fall detection systems\
    \ may also incorporate different types of medical sen-\nsors such as ElectroCardioGraphs,\
    \ ElectroMyoGraphs, Pulse Rate or Oxygen Level\nmeasurement in the FDS solution.\
    \ Even though there have been some approaches\nwhich have used medical sensors\
    \ exclusively for fall detection (such as EMG[412]),\nhowever, like magnetometers,\
    \ these sensors are usually used along with accelerome-\nters and/or gyroscopes.\
    \ Adding these sensors to fall detection systems has the added\nadvantage of assessing\
    \ falls from a health standpoint too as this information can be\nused to determine\
    \ risk of falls [413].\n2.5\nDesign considerations for Wearable FDS\nWearable\
    \ fall detection systems utilize sensor measurements to ascertain the occur-\n\
    rence of a fall. Since wearable FDS units are always attached to a persons body,\
    \ they\ncontinuously provide measurements of a persons movements and activities.\
    \ In order\nto use these measurements in a FDS, there are some design considerations\
    \ involved.\nWe discuss them in this section.\n81\n2.5.1\nSampling frequency\n\
    The sampling frequency dictates the number of sensor measurements recorded per\n\
    second. The sampling frequency used in an FDS should be high enough to capture\n\
    fall motion but not too high so as to increase data processing, storage requirements\n\
    as well as allow for energy efficient operation. In fact, depending on the position\n\
    of the sensors, significant reductions can be made in the sampling frequency used\n\
    for sensors with little or no change in performance as demonstrated by [414].\
    \ Such\nreductions could result in low power consumption by the wearable module\
    \ thereby\nenabling longevity of operation.\n2.5.2\nWindowing\nSince wearable\
    \ fall detection systems provide a continuous stream of sensor data, the\ndata\
    \ needs to be windowed for fall detection to be performed. Windowing refers to\
    \ the\nextraction of a subset of the sensor data stream in a sliding manner or\
    \ otherwise and\nis typically specified in terms of time duration for its size.\
    \ It is typical for wearable\nFDS designers to test different window sizes for\
    \ their fall detection algorithms. The\nsize of the window used would dictate\
    \ memory and computational requirements of\nthe unit used for deploying the FDS\
    \ system. Another important factor in windowing\nsensor signals is whether overlapping\
    \ is used during the windowing process or not.\nThis might be important to allow\
    \ for smooth transitions between different windows.\n2.5.3\nFeature Extraction\n\
    Feature extraction is the process of determining quantities from data which charac-\n\
    terizes it for a desired task appropriately. Feature extraction not only aims\
    \ to capture\nimportant aspects of the data being worked on but also to present\
    \ its content in a\nreduced size, thereby, making use of the data easier. Feature\
    \ extraction is a typ-\nical step of the a signal processing and machine learning\
    \ workflow and follows the\nwindowing step. There are different types of features\
    \ which have been computed\nfor fall detection applications, common feature computations\
    \ include the determina-\ntion of time domain features, frequency domain features,\
    \ statistical features etc. or\nsome combination from sensor data in FDS. Feature\
    \ extraction is followed by either a\nthresholding algorithm to sensor values\
    \ or a machine/deep learning model. For deep\nlearning, there have been some end\
    \ to end deep learning approaches which skip the\nstep of manual feature extraction.\
    \ In such approaches, deep learning networks such\nas CNN may be used to extract\
    \ features followed by other networks such as LSTM\nto determine falls, an example\
    \ is proposed in [415].\n2.6\nLiterature Review\nAs discussed previously, wearable\
    \ fall detection systems present several advantages\nwhen used for fall detection\
    \ purposes such as non-intrusiveness, ease of mobility, small\nsize of deployment,\
    \ low cost and that many implementations are typically standalone\nsystems. This\
    \ added with the fact that sensors and other components which are used\n82\nin\
    \ such systems have been becoming cheaper and cheaper to produce has resulted\
    \ in\na lot of interest in the development of wearable FDS by researchers and\
    \ technologists\nalike. Therefore, wearable FDS methodologies have gained considerable\
    \ interest in\nfall detection research. We discuss some of the popular methodologies\
    \ proposed in\nthis regard.\nThe authors in Mrozek et al. [416] present a complete\
    \ design of a wearable fall\ndetection system for an Internet of Things scenario.\
    \ They conduct two experiments\nwith their system, in one experiment, data is\
    \ collected from a gyroscope and an\naccelerometer and sent to the cloud for fall\
    \ detection (as a web service) while in\nthe second experiment, fall detection\
    \ is performed on the edge node (smart phone).\nThrough their experiments they\
    \ conclude that performing fall detection on the edge\nnode results in less network\
    \ traffic and storage requirements for the cloud. Algo-\nrithmically speaking,\
    \ they extract 3 second overlapping windows from measurements\nof both sensors,\
    \ perform feature extraction and pass it on to a boosted decision tree\nclassifier\
    \ for determining whether a fall has taken place or not. Moreover, the boosted\n\
    decision tree classifier was trained using the SisFall [417] dataset. Another\
    \ IoT based\nsystem is proposed by Marquez et al. [418] who develop a fall detection\
    \ system for\nIoT on the edge. They first gather data from an accelerometer and\
    \ a gyroscope placed\non the waist of multiple subjects and train a support vector\
    \ machine classifier on a\ncombination of raw sensor values and its standard deviation.\
    \ They are able to deploy\ntheir system successfully and achieve satisfactory\
    \ results. Moreover, feature selection\nis also performed before the classification\
    \ stage. A fog based fall detection model has\nbeen proposed by Sarabia-J’acome\
    \ et al. [419] who utilize a Long Short Term Memory\nRecurrent Neural Network\
    \ in their method. Edge nodes collect Inertial Measurement\nUnit (IMU) measurements\
    \ and relay them to a fog node which processes the data to\ndetermine if a fall\
    \ has taken place or not. One motivation for them to develop RNN\nmodels over\
    \ a Convolutional Neural Network one is the requirement of less param-\neters\
    \ and thus less computational requirements. Their final model consists of a 1D\n\
    CNN layer followed by two LSTM layers and a fully connected layer for classification\n\
    and is trained using raw data (window of 15s) from the SisFall dataset.\nZurbuchen\
    \ et al. in [420] provide a comparison of various machine learning al-\ngorithms\
    \ for fall detection while using data from the SisFall dataset. They perform\n\
    experiments using Decision Trees, Random Forest Classifier, Gradient Boosting\
    \ tree,\nK-Nearest Neighbor and Support Vector Machines. Segments of 10 seconds\
    \ are ex-\ntracted from the trials in the SisFall dataset and various time and\
    \ frequency domain\nfeatures are computed for those segments. These are then passed\
    \ on to the classifiers.\nThrough their experiments, they find that Random Forest\
    \ and Gradient Boosting\ntrees perform the best among the considered methods.\
    \ Another comparison of var-\nious ML algorithms is provided by Chelli and P¨atzold\
    \ in [421] who compare the\nperformance of a number of machine learning algorithms\
    \ on two datasets, the Cogent\nLabs dataset [422] and the one provided in [423].\
    \ The algorithms they consider are\nan artificial neural network, K-NN, an ensemble\
    \ bagged tree (EBT) and Quadratic\nSupport Vector Machine (QSVM). They compute\
    \ several time and frequency domain\nfeatures from accelerometer and gyroscope\
    \ signals and pass them on to the classi-\nfiers. Their best performing classifiers\
    \ were QSVM and EBT. Kerdjidj et al. in [424]\n83\nuse compressive sensing to\
    \ explore the use of different modalities for fall detection\npurposes. The performance\
    \ of accelerometer only and an accelerometer - gyroscope\nsensor combination in\
    \ a fall detection scenario is compared. A Shimmer device [425]\nis used to capture\
    \ data from 17 volunteers asked to perform activities of daily living\nas well\
    \ as fall like movements. They first extract segments of length 2.56 seconds\n\
    from their recordings before performing feature extraction and passing it on to\
    \ four\ndifferent machine learning classifiers, K-Nearest Neighbor, Support Vector\
    \ Machines,\nDecision Trees and an Ensemble Classifier (EC). They conduct two\
    \ such experiments,\none with compressive sensing and the other without. Their\
    \ results indicate that the\nEC classifier and SVM perform the best with the help\
    \ of compressive sensing included\nin the pipeline. A ’transfer learning’ approach\
    \ towards fall detection is provided by\nFanez et al. in [426] and they test it\
    \ on the UMAFall [427] dataset and the FallOVI\ndataset (created by them). Using\
    \ a finite state machine which captures windows\nof accelerometer measurements\
    \ based on peak values, the authors convert the win-\ndowed segments into string\
    \ representations using symbolic aggregate approximation\n(SAX) [428]. During\
    \ training each user performs normal ADLs and falls for a short\nperiod of time.\
    \ Peak values are determined from sensor measurements and used to\ncreate bag\
    \ of words using SAX. After this, normal operation of the system starts\nand information\
    \ retrieval (term frequency - inverse term frequency) values are used\nto determine\
    \ what label to give to new SAX words derived from sensor values. If a\ndetermined\
    \ word is not similar (using Manhattan distance) to any word in the bag of\nwords\
    \ (K-NN clustering is used to group similar words), a fall event is suggested\
    \ to\nhave occurred. ’Transfer learning’ involves the use of clusters formed by\
    \ other users\n(performing activities only) as the starting point of the training.\
    \ Their experiment\ncompared an SVM classifier with their information retrieval\
    \ based scheme. They are\nable to detect falls all the time with the UMAfall dataset\
    \ but have a high number\nof false positives for the FallOVI dataset. An noticeable\
    \ aspect of this approach is\nthe use of clustering and ’feature extraction’ as\
    \ strings. In Giuffrida et al. [429]\nthe authors use data from the SisFall dataset\
    \ and an SVM classifier to differentiate\nbetween falls and no-fall samples. They\
    \ extract slices (of 1 second) from the SisFall\ntrials and label each slice as\
    \ containing a fall or not. A number of features were then\ncomputed for each\
    \ slice before feature selection was performed and an SVM classifier\nwas trained\
    \ to determine the output class.\nDeep Learning methods have also been widely\
    \ used for fall detection purposes.\nCasilari et al. in [430] explore the contribution\
    \ of the gyroscope sensor for use in\ncombined accelerometer-gyroscope based fall\
    \ detection systems.\nTo do this, they\nmake use of measurements from the SisFall\
    \ dataset, extract observation windows of\n5 seconds around peaks of accelerometer\
    \ sensor signal values over a trace and pass\nthem on to a Convolutional Neural\
    \ Network with four convolutional layers, three\nmax pooling layers followed by\
    \ one fully connected layer for classification. Training is\nperformed in two\
    \ different sets of experiments, one including gyroscope data and the\nother without\
    \ it. They note that the results they get while using only accelerometer\nsignal\
    \ measurements are better than that when using data from both sensors. A\nCNN\
    \ is used for fall detection purposes by Santos et al. in [431] from accelerometer\n\
    measurements. Their network consists of six convolutional layers, two max pooling\n\
    84\nlayers in between followed by a fully connected layer for classification.\n\
    They use\ndata from the URFD dataset [432] and the Smart Watch and Notch datset\
    \ [433] in\ntheir experiments. They note that their model performs best when they\
    \ use data\naugmentation for both the datasets. However, this was achieved by\
    \ two different\nvariants of the same model. This highlights the point of a single\
    \ model not necessarily\nperforming well on all datasets. Another interesting\
    \ aspect of their work is the use of\nthe Mathews Correlation Coefficient to evaluate\
    \ performance of their algorithms. A\nmodified AlexNet [434] has been used in\
    \ [435] by Alarifi et. al. They collect tri-axial\ndata from inertial measurement\
    \ sensors consisting of accelerometer, gyroscope and\nmagnetometer at six different\
    \ positions on a subjects body. A total of 16 activities of\ndaily living and\
    \ 20 falls were recorded by them. Feature extraction is then performed\nin terms\
    \ of various statistical measurements as well as frequency analysis. This is\n\
    followed by principal component analysis and then passed on to the classification\n\
    stage consisting of an optimized AlexNet ConvNet. Waheed et. al. in [436] develop\n\
    a FDS using a Bi-Directional Long Short-Term Memory (Bi-LSTM) network. They\n\
    consider the binary case of fall and no fall and perform experiments using the\
    \ SisFall\ndataset as well as the UP-Fall dataset [437]. Their network consists\
    \ of eight layers\nin total. Two Bi-LSTM layers and two fully connected layers\
    \ with dropouts being\nused for regularization. Training is performed with creating\
    \ missing values in the\ndata to introduce noise tolerancy.\nCasiliri et al.\n\
    in [438] provide a performance\ncomparison for a CNN network on multiple public\
    \ fall detection datasets. The aim\nof their work is to test the cross-application\
    \ of a similar CNN network trained on\ndifferent datasets. They set their experiments\
    \ up by training a four layer CNN on\neach dataset separately for fall detection\
    \ on 14 datasets (using similar positions of\nsensor placement) on windows of\
    \ 5 seconds for accelerometer signals. Their results\nindicate a very good performance\
    \ of the network for the SisFall dataset, however, it\ndoesn’t perform very well\
    \ for most of the other datasets, in some cases, performing\nless than random\
    \ chance, which is quite surprising. Their experiments do however,\nhighlight\
    \ an issue with the well accepted notion that an algorithm developed on some\n\
    benchmark dataset will necessarily work similarly well with other datasets.\n\
    The\nauthors suggest that the erratic performance of their method could be due\
    \ to the\ndifference in the nature of the data in terms of sampling frequency\
    \ used, range of\nthe sensor and the varying type of movements. Another cross-dataset\
    \ approach for\nfall detection has been proposed in [439] where the authors use\
    \ a combination of a\nCNN and Long Short Term Memory network to extract features\
    \ followed by a K-\nNearest Neighbor classifer to detect falls as well as identify\
    \ the subjects within four\nfall datasets, DFNAPAS [440], SisFall, UniMiB-SHAR\
    \ [441] and ASLH [442]. The\nnetwork is trained using the DFNAPAS dataset, before\
    \ training the network however,\ndata augmentation is carried out for the fall\
    \ class. Their best results are achieved\nfor a value of K = 3 and they achieve\
    \ good results for all experiments. They observe\nthat using a deep learning architecture\
    \ for feature extraction purposes along with a\nmachine learning classifier performs\
    \ better than a using a fully connected layer at the\nclassification stage.\n\
    Post fall intelligence is an important research area in the field of fall detection\n\
    as it can be useful in determining various post fall injuries [443] and serve\
    \ as an\n85\nintelligence parameter [444] for doctors. Jung et al. in [445] also\
    \ target detection\nof pre-impact falls for wearable airbag deployment. Their\
    \ method involves the ap-\nplication of a threshold on determined features from\
    \ accelerometer and gyroscope\nmeasurement measurements. The thresholds are then\
    \ applied to a dataset collected\nby them and also on the SisFall dataset. The\
    \ threshold is determined by performing\na grid search on the extracted features\
    \ from their dataset to maximize specificity and\nsensitivity. They do note that\
    \ some activties like sitting down quickly on a chair or a\nmattress triggered\
    \ false positives. Moreover, when applied to SisFall, their methods\nperformance\
    \ is not as high as achieved by methods based on ML/DL. Koo et. al.\n[446] present\
    \ experiments for post fall detection from a combination of self collected\ndata\
    \ and the SisFall dataset. They conduct tests using sliding windows as well as\
    \ dis-\ncrete windows from these signals and compute statistical features from\
    \ them. After\nfeature extraction, two different classifiers, the artificial neural\
    \ network and support\nvector machine are tested with the computed features as\
    \ well as raw sensor values.\nThey find that both ANN and SVM are suitable for\
    \ use in post fall detection sce-\nnarios. Another approach looking at the different\
    \ phases of a fall has been presented\nin [447] where Hsieh et. al. use accelerometer\
    \ sensor data to differentiate between\nfive phases of a fall, pre-fall, free-fall,\
    \ impact, resting and recovery and the initial\nand end static phases. To do this,\
    \ they compute various time domain and statistical\nfeatures and test five classifiers,\
    \ SVM, K-Nearest Neighbors, Naive Bayes, Decision\nTrees and Adaptive Boosting\
    \ (AdaBoost). For their experimental setup, the best\nresults were achieved using\
    \ the K-NN classifier. In Musci et al. [448], the authors\npropose a RNN based\
    \ method to differentiate between falls, pre-impact falls (state\nwhere a person\
    \ is in a dangerous state of transition which may result in a falls) and\nnormal\
    \ activities. Their motivation for including preimpact falls is to enable timely\n\
    deployment of a fall protection system. First, they label data from the SisFall\
    \ dataset\nto form three classes. They then extract windows of duration 1.28 seconds\
    \ with an\noverlap of 50% from the sensor signals and pass them on to their network\
    \ which\nconsists of two fully connected layers and two-layer LSTM layers. Moreover,\
    \ due to\nan imbalanced training set, they define a new balancing loss function.\
    \ Their method\nresults in fall detection good results for the three classes considered.\
    \ A CNN-LSTM\napproach has been proposed in [449] by Yu et al. for detection of\
    \ pre-impact fall and\nfalls in the SisFall dataset. They provide a comparison\
    \ of standalone CNN, LSTM\nand a combined CNN-LSTM architecture for this task\
    \ and also implement them on\na Jetson Nano. They define a pre-impact fall as\
    \ the time interval where a subject\ntransitions from a controlled state to a\
    \ state which may lead to a fall. First, they\nlabel data in the SisFall dataset\
    \ as described in [448] to form a three class problem.\nThey achieved their best\
    \ results for their CNN+LSTM model having four CNN layers\nfollowed by two LSTM\
    \ layers and a fully connected layer for classification. Their ap-\nproach highlights\
    \ the combined capability of CNN-LSTM for feature extraction. An\naspect of fall\
    \ intelligence is direction, in [450] Lee et al. use the velocity vector from\n\
    the acceleration sensor in a smartphone for fall detection with direction and\
    \ then\nlater on in [451], they use the standard deviation of the accemerometer\
    \ and gyro-\nscope sensor measurements from a smart phone to determine falls and\
    \ fall direction.\nThey perform a small experiment and are able to differentiate\
    \ between left, right,\n86\nfront and backward falls. More work on fall detection\
    \ with direction was performed\nby the authors in [452] who use an accelerometer\
    \ and gyroscope combination along\nwith a kalman filter for tilt estimation. Fall\
    \ detection is then performed using an\nSVM classifier. Falls with direction detection\
    \ has been attempted in [453, 454] by\nthe same authors. They collect accelerometer\
    \ data from various subjects and extract\nthree features from the recordings for\
    \ each axis, the mean, standard deviation and\nprincipal components (using Principal\
    \ Component Analysis). These are then passed\non to a SVM classifier to differentiate\
    \ between a forward, backward, left and right\nfall and ADLs.\nWhile direction\
    \ aware fall detection is an important determination in terms of post\nfall intelligence,\
    \ fall detection with severity is necessary since it could help provide\nindications\
    \ to falls with immediate recovery or otherwise, as falls without immediate\n\
    recovery would be more detrimental to health than a fall with immediate recovery\
    \ as\nhas been suggested in [455]. In [456] the authors attempt to classify between\
    \ different\nfalls (direction: forward, backward, right, left and intensity: hard,\
    \ soft [fall on knees\nfirst, then on floor]) and five different ADLs using accelerometer\
    \ data. They collected\ndata for their experiments using a triaxial accelerometer\
    \ mounted on the chest. Fea-\nture extraction consists of first concatenating\
    \ acceleration values in each axis and\nthen using a Debauchies-2 level-3 wavelet\
    \ which are then sent to the classification\nstage. In the classification stage\
    \ five different classifiers, an ANN, a Radial Basis\nFunction (RBF) Network,\
    \ Probabilistic Principal Component Analysis (PPCA) and\nLinear Discriminant Analysis\
    \ (LDA) are used through a voting machine to determine\nfalls. A voting machine\
    \ (VM) involves multiple classifiers giving a vote towards any of\nthe multiple\
    \ classes and the sum of the vote is compared against a vote threshold to\ndetermine\
    \ the event that has taken place. In their work, the authors train individual\n\
    VMs for all the activity and fall types in their dataset by structuring them all\
    \ in par-\nallel and adding a comparator function at the end of the pipeline.\
    \ Moreover, a K-NN\nmulticlass classifier also feeds in to the comparator and\
    \ is trained while training of\nthe other classifier, it is provided the true\
    \ value of the activity being input to the\nclassification stage. The authors\
    \ show that their dataset works very well. A valuable\ninsight about their work\
    \ is the ensembling mechanism the authors have employed to\ndetermine fall directions.\
    \ In [457], Hussain et al. propose a fall detection system that\ncan first determine\
    \ falls and then the type of fall using data from the SisFall dataset.\nThey accomplish\
    \ this in a hierarchical setup where their system first considers fall\ndetection\
    \ as a binary problem, whether a fall has taken place or not, and if a fall\n\
    has been detected, it classifies between the various falls in the dataset. Their\
    \ system\nis designed to work with 10 second non-overlapping windows of accelerometer\
    \ and\ngyroscope signals. Data from each record is first low pass filtered before\
    \ two different\ntypes of feature sets, consisting of various time domain and\
    \ statistical features, are\ncomputed on the data. This is then followed by the\
    \ machine learning stage where\nthree different classifiers are tested, K-NN,\
    \ SVM and RFC. In the fall detection stage,\nstatistical features are computed\
    \ from ADL and fall signals and sent to the three clas-\nsifiers for the preliminary\
    \ binary classification. After a fall has been determined to\nhave happened, numerous\
    \ other statistical and time domain features are then com-\nputed on the data\
    \ before being sent to the next stage to determine the type of fall\n87\nactivity\
    \ taking place. In their experiments, the authors find that K-NN is most effec-\n\
    tive in differentiating between falls and ADLs where as RFC performs the best\
    \ when\nthe different fall activities need to be determined. This work highlights\
    \ the usefulness\nof a hierarchical approach towards non-binary fall detection.\
    \ One proposed method\nto perform combined activity recognition and fall detection\
    \ has been presented in\n[458]. In this, Li et. al. use multi-modal sensor fusion\
    \ and a Bi-LSTM classification\nnetwork to differentiate between five activities\
    \ of daily living and a fall. The sensors\nthey use are an inertial sensor placed\
    \ on the wrist, waist and ankle as well as a radar\nsensor. After pre-processing\
    \ both the inertial measurement and radar signals, various\nstatistical and moment\
    \ computations were performed to be used as features. These\nwere passed on to\
    \ the multilayer Bi-LSTM network after feature selection to deter-\nmine the output\
    \ class. One thing to note is that both both [458] and [421] consider\nfall as\
    \ a single category rather than considering falls as a detailed problem (direction\n\
    and/or severity) in itself. More recent work by We et al. [459] also considers\
    \ ac-\ntivity recognition and fall detection together. They use inertial measurement\
    \ sensor\ndata from two datasets, the MobiAct dataset [460] and the SmartFall\
    \ dataset [433].\nThe MobiAct dataset contains data from four falls and nine activities\
    \ of daily living\nwhereas the SmartFall dataset has non-fall and fall recordings.\
    \ In their experimenta-\ntion, they compare the performance of different machine\
    \ learning models and several\ndeep learning models, including a CNN, LSTM, CNN-LSTM\
    \ combination and Gated\nRecurrent Units. The machine learning models are trained\
    \ by computing time and\nfrequency domain features whereas the deep learning models\
    \ are trained using raw\nsensor data. They find that the GRU designed by them\
    \ consisting of two GRU units\nfollowed by a softmax classification layer is the\
    \ best performing model. Another deep\nlearning approach utilizing sequential\
    \ modeling for a fall detection system that also\nconsiders ADLs has been presented\
    \ by Seng¨ul et al. [461]. They collect their own\ndata for two types of falls\
    \ and four activities of daily living. After data augmentation\non the minority\
    \ classes, they use a Bi-LSTM for classification. Le et al. [462] propose\na non-binary\
    \ fall detection scheme utilizing a collection of time, frequency frequency\n\
    domain features in addition to the three Hjorth parameters of activity, mobility\
    \ and\ncomplexity. They use data from two datasets, the MobiAct dataset and the\
    \ UP-Fall\ndataset. They are able to achieve good results on both datasets using\
    \ all three feature\ntypes with a random forest classifier.\nThe use of attention\
    \ based models has also been finding increasing usage in fall\ndetection research.\
    \ Yhdego [463] use an attention model to perform binary fall de-\ntection. The\
    \ fall dataset is collected by them and after windowing, the authors use\ntime2vec\
    \ positional encoding on the data. Their network consists of three attention\n\
    blocks each consisting of multiheaded self attention followed by normalization\
    \ and a\nfully connected network. After the attention blocks follow two fully\
    \ connected layers.\nThey find that their network incorporating attention performs\
    \ well in differentiating\nbetween fall and non-fall samples. Another interesting\
    \ approach using attention is\npresented by Liu et al. [464]. Inorder to apply\
    \ attention on both temporal (step wise)\nand spatial (channel wise) aspects of\
    \ the signals, a gated scheme is suggested. A fully\nconnected layer is used to\
    \ determine the embeddings before positional information is\nadded to the data.\
    \ Positional encoding is only used for stepwise attention as channel\n88\nwise\
    \ positions are not useful. Self attention is performed in the step-wise part\
    \ of the\nnetwork and is carried out for the individual channels in a pairwise\
    \ fashion across all\ntime steps while the channel wise attention is performed\
    \ across the different channels\nacross all time-steps. The outputs of these two\
    \ units are combined through a fully\nconnected network which weighs them before\
    \ concatenation and classification.\n2.7\nFall detection Datasets\nThere are several\
    \ datasets published for use in algorithm development for fall detec-\ntion as\
    \ has been noted in [438]. Of these, for this case study, we choose two datasets,\n\
    these are the SisFall and the K-Fall dataset. The SisFall [417] dataset is chosen\
    \ as\nit contains recordings of elderly people which are most at risk from injury\
    \ due to\nfalls and therefore should provide a good representation of activities\
    \ of the elderly. It\nshould be noted that its one of the most used dataset for\
    \ fall detection purposes [438].\nThe other dataset used is the K-Fall [465] dataset.\
    \ It was released on the pattern of\nthe SisFall dataset and includes more activities\
    \ compared to SisFall. A summary of\nthe datasets is presented in the next section.\n\
    2.7.1\nSisFall Dataset\nThe SisFall dataset consists of accelerometer and gyroscope\
    \ recordings of 19 types of\nactivities of daily living and falls. Two accelerometers\
    \ and one gyroscope were placed\non the waist and used for making the measurements.\
    \ This location was chosen so as\nto ensure that all body movements while performing\
    \ the activities/falls were captured\nby the sensory system. Furthermore, the\
    \ data recordings involved 23 young people\nbetween the ages of 19-30 years old\
    \ and 15 elderly people between the ages of 60-75\nyears. The dataset contains\
    \ annotated sensor measurements of each of these ADLs\nand falls recorded as well\
    \ as video recordings of sample experiments. There are four\nmain types of falls\
    \ present, six of them are forward falls , three backward falls, four\nlateral\
    \ falls and two vertical falls. The types of falls performed were directed through\n\
    a survey taken from elderly people living independently as well as the ones living\n\
    in retirement homes and include scenarios of slipping and tripping. Moreover,\
    \ they\nare preceded by various types of ADLs being performed to make the recordings\
    \ as\nclose to a real world scenario as possible. The ADLs recorded were approved\
    \ by\nmedical personnel and were chosen so as to be similar to falls. The ADLs\
    \ include\nhigh mobility activities such as walking up/down stairs, jogging as\
    \ well as activities\nwhich can be confused with falls such as quickly sitting\
    \ in a chair, bending at the\nknee and stumble while walking etc. In total, there\
    \ were 2706 ADL recordings and\n1798 fall recordings. The SisFall data is utilized\
    \ in this study as it has been the\nthe dataset of choice for several previous\
    \ research approaches addressing the subject\nof fall detection [466, 467, 468,\
    \ 436, 469] and also because the volunteer makeup\nconsists of both men and women,\
    \ young adults and the elderly. The ADLs and Falls\nin the SisFall dataset have\
    \ been presented in Table 32 with a brief description of the\nactivities and falls\
    \ provided as well.\n89\nTable 32. ADL and Falls present in the SisFall dataset.\n\
    Activity/\nFall Code\nBrief Description\nD01\nWalking slowly\nD02\nWalking quickly\n\
    D03\nJogging slowly\nD04\nJogging quickly\nD05\nWalking upstairs and downstairs\
    \ slowly\nD06\nWalking upstairs and downstairs quickly\nD07\nSlowly sit in a half\
    \ height chair, wait a moment, and up slowly\nD08\nQuickly sit in a half height\
    \ chair, wait a moment, and up quickly\nD09\nSlowly sit in a low height chair,\
    \ wait a moment, and up slowly\nD10\nQuickly sit in a low height chair, wait a\
    \ moment, and up quickly\nD11\nSitting a moment, trying to get up, and collapse\
    \ into a chair\nD12\nSitting a moment, lying slowly, wait a moment, and sit again\n\
    D13\nSitting a moment, lying quickly, wait a moment, and sit again\nD14\nBeing\
    \ on one’s back change to lateral position, wait a moment, and change to\none’s\
    \ back\nD15\nStanding, slowly bending at knees, and getting up\nD16\nStanding,\
    \ slowly bending without bending knees, and getting up\nD17\nStanding, get into\
    \ a car, remain seated and get out of the car\nD18\nStumble while walking\nD19\n\
    Gently jump without falling (trying to reach a high object)\nF01\nFall forward\
    \ while walking caused by a slip\nF02\nFall backward while walking caused by a\
    \ slip\nF03\nLateral fall while walking caused by a slip\nF04\nFall forward while\
    \ walking caused by a trip\nF05\nFall forward while jogging caused by a trip\n\
    F06\nVertical fall while walking caused by fainting\nF07\nFall while walking,\
    \ with use of hands in a table to dampen fall, caused by\nfainting\nF08\nFall\
    \ forward when trying to get up\nF09\nLateral fall when trying to get up\nF10\n\
    Fall forward when trying to sit down\nF11\nFall backward when trying to sit down\n\
    F12\nLateral fall when trying to sit down\nF13\nFall forward while sitting, caused\
    \ by fainting or falling asleep\nF14\nFall backward while sitting, caused by fainting\
    \ or falling asleep\nF15\nLateral fall while sitting, caused by fainting or falling\
    \ asleep\n2.7.2\nK-Fall Dataset\nThe K-Fall dataset has been developed based on\
    \ the SisFall dataset and contains 15\nfall types and 21 ADLs. The falls in K-Fall\
    \ are the same as those in SisFall. However,\nin the case of ADLs, they remove\
    \ the activity of sitting in and getting out of a car\nand combine some of the\
    \ activities while adding static activities of sitting on a chair,\nsitting on\
    \ a sofa and lying down.\nA total of 2729 ADL recordings and 2346 fall\nrecordings\
    \ are present in the dataset. This dataset is included in the study to test\n\
    cross-dataset fall detection. The details of the K-Fall dataset are presented\
    \ in Table\n33.\n2.8\nExperiments\nThis section discusses the experiments conducted\
    \ for the purposes of fall detection.\nFour experiments have been performed in\
    \ this regard, first considering fall data only\n90\nTable 33. ADL and Falls present\
    \ in the K-Fall dataset.\nActivity/\nFall Code\nBrief Description\nD01\nStand\
    \ for 30 seconds\nD02\nStand, slowly bend the back with or without bending at\
    \ knees, tie shoe lace,\nand get up\nD03\nPick up an object from the floor\nD04\n\
    Gently jump (try to reach an object)\nD05\nStand, sit to the ground, wait a moment,\
    \ and get up with normal speed\nD06\nWalk normally with turn (4m)\nD07\nWalk quickly\
    \ with turn (4m)\nD08\nJog normally with turn (4m)\nD09\nJog quickly with turn\
    \ (4m)\nD10\nStumble while walking\nD11\nSit on a chair for 30 seconds\nD12\n\
    Sit on the sofa (back is inclined to the support) for 30 seconds\nD13\nSit down\
    \ to a chair normally, and get up from a chair normally\nD14\nSit down to a chair\
    \ quickly, and get up from a chair quickly\nD15\nSit a moment, trying to get up,\
    \ and collapse into a chair\nD16\nStand, sit on the sofa (back is inclined to\
    \ the support), and get up normally\nD17\nLie on the bed for 30 seconds\nD18\n\
    Sit a moment, lie down to the bed normally, and get up normally\nD19\nSit a moment,\
    \ lie down to the bed quickly, and get up quickly\nD20\nWalk upstairs and downstairs\
    \ normally (5 steps)\nD21\nWalk upstairs and downstairs quickly (5 steps)\nF01\n\
    Forward fall when trying to sit down\nF02\nBackward fall when trying to sit down\n\
    F03\nLateral fall when trying to sit down\nF04\nForward fall when trying to get\
    \ up\nF05\nLateral fall when trying to get up\nF06\nForward fall while sitting,\
    \ caused by fainting\nF07\nLateral fall while sitting, caused by fainting\nF08\n\
    Backward fall while sitting, caused by fainting\nF09\nVertical (forward) fall\
    \ while walking caused by fainting\nF10\nFall while walking, use of hands to dampen\
    \ fall, caused by fainting\nF11\nForward fall while walking caused by a trip\n\
    F12\nForward fall while jogging caused by a trip\nF13\nForward fall while walking\
    \ caused by a slip\nF14\nLateral fall while walking caused by a slip\nF15\nBackward\
    \ fall while walking caused by a slip\nand aiming to determine falls with direction\
    \ and severity. The second, third and\nfour experiments involved the inclusion\
    \ of activities of daily living classification in\naddition to the fall classes\
    \ considered in the first experiment. Moreover, experiment\nfour presents results\
    \ for a cross-dataset fall detection scenario.\n2.8.1\nFall Detection with Severity\
    \ and Direction consideration\nThis section describes the work on fall detection\
    \ considering severity and direction\nwhile only considering sensor data for falls.\
    \ The experiment has been performed as\ntwo tasks, one for determining falls considering\
    \ direction only and the other while\nconsidering both direction as well as severity.\n\
    2.8.1.1\nData Labeling\nTo perform fall detection that is direction and severity\
    \ aware, we only considered fall\n91\ndata from the SisFall dataset. As can be\
    \ seen from Table 32, most of the falls in\nthe dataset have been labelled as\
    \ either being in the forward, backward or lateral\ndirection.\nHowever, two of\
    \ the falls (F06 and F07) are not labeled in terms of\ndirection. For the considerations\
    \ of this research work, these were assigned the labels\nof Forward and Lateral\
    \ respectively using the videos of sample trials provided by the\ndataset authors.\n\
    Concerning fall severity, while the original labels from the dataset contained\
    \ in-\nformation for most falls for direction, the approach followed by Gibson\
    \ et al. [456]\nwas used to determine the severity of falls. According to the\
    \ practice followed by\nthem, all falls where in some support was used to soften\
    \ the impact of the fall were\nconsidered as soft falls whereas all falls where\
    \ the subject fell directly were classified\nas hard falls. This resulted in six\
    \ classes for fall types with hard and soft for ima-\npact and forward, backward\
    \ and lateral for direction. These are Forward Soft Falls\n(FSF), Forward Hard\
    \ Falls (FHF), Backward Soft Falls (BSF), Backward Hard Falls\n(BHF), Lateral\
    \ Soft Falls (LSF) and Lateral Hard Falls (LHF). These labels have\nbeen summarized\
    \ in Table 34.\nTable 34. Labeling used for Fall only classification for the SisFall\
    \ Dataset\nExperiment Name\nFall\nCode\nAssigned Fall Name\nAssigned Fall Label\n\
    Direction\nF01\nForward Fall\nFF\nF02\nBackward Fall\nBF\nF03\nLateral Fall\n\
    LF\nF04\nForward Fall\nFF\nF05\nForward Fall\nFF\nF06\nForward Fall\nFF\nF07\n\
    Lateral Fall\nLF\nF08\nForward Fall\nFF\nF09\nLateral Fall\nLF\nF10\nForward Fall\n\
    FF\nF11\nBackward Fall\nBF\nF12\nLateral Fall\nLF\nF13\nForward Fall\nFF\nF14\n\
    Backward Fall\nBF\nF15\nLateral Fall\nLF\nDirection + Severity\nF01\nForward Hard\
    \ Fall\nFHF\nF02\nBackward Hard Fall\nBHF\nF03\nLateral Hard Fall\nLHF\nF04\n\
    Forward Hard Fall\nFHF\nF05\nForward Hard Fall\nFHF\nF06\nForward Soft Fall\n\
    FSF\nF07\nLateral Soft Fall\nLSF\nF08\nForward Soft Fall\nFSF\nF09\nLateral Soft\
    \ Fall\nLSF\nF10\nForward Soft Fall\nFSF\nF11\nBackward Soft Fall\nBSF\nF12\n\
    Lateral Soft Fall\nLSF\nF13\nForward Soft Fall\nFSF\nF14\nBackward Soft Fall\n\
    BSF\nF15\nLateral Soft Fall\nLSF\n92\nWindowing\nTime and Frequency\nDomain Feature\n\
    Computation\nRF-RFE Feature\nSelection\nFeature\nExtraction and\nFeature Selection\n\
    Classification\nData\nPreprocessing\nPeak SMV Detection\nOutput Class \n(FF, BF,\
    \ LF) \n(FHF, FSF, BHF, BSF, LHF, LSF)\nIMU Recording (Falls) \n(FF, BF, LF) \n\
    (FHF, FSF, BHF, BSF, LHF, LSF)\nSVM Classifier\nFigure 17. Fall Detection with\
    \ Direction and Severity.\n2.8.1.2\nMethodology\nThe methodology used for this\
    \ experiment follows a typ-\nical machine learning pipeline as shown in Figure\
    \ 17. First, we pre-process the data\nwhich involves extraction of sensor segments\
    \ representing falls. This is followed by\nfeature extraction that aims to extract\
    \ useful representations from the accelerometer\nand gyroscope sensor data. Lastly,\
    \ feature selection is carried out where we aim to\nreduce the number of features\
    \ used in the last stage that is classification.\nData Pre-processing\nRecordings\
    \ in the SisFall dataset vary in length between 12 and 100 seconds. The\ntrial\
    \ recordings for falls in the SisFall dataset consist of subjects performing various\n\
    activities before experiencing the fall. For a sound feature extraction process,\
    \ we\nextract equal duration segments of sensor readings from these trials that\
    \ represent\nthe fall taking place along with some part of the pre-fall activity\
    \ being performed.\nTo do this, for each record we first calculate the acceleration\
    \ magnitude (also called\nthe Signal Magnitude Vector (SMV) ) [430] for all sensor\
    \ value samples within a trial\nrecording. The SMV can be calculated as given\
    \ in Eq.1.\nSMVj =\nq\f\fAxj\n\f\f2 +\n\f\fAyj\n\f\f2 +\n\f\fAzj\n\f\f2\n(1)\n\
    93\nwhere SMVj represents the SMV value for a sample j in a given trial. The SMV\n\
    is calculated for all samples and the sample location for the SMV peak value is\n\
    determined within the trial. This is then used as the midpoint for extracting\
    \ a 2.5\nsecond segment from the trial. A segment length of 2.5 seconds was chosen\
    \ as it was\nvisually found to capture all the falls as well as some part of the\
    \ pre-fall activity being\nperformed. Using this scheme, segments were extracted\
    \ for all the fall trials in the\ndataset.\nThere are a total of 1798 fall samples\
    \ in the dataset, after the labeling used, there\nwere a total of 838 samples\
    \ for the forward fall category, 360 samples for the backward\nfall category and\
    \ 600 samples for the lateral fall category. Sample waveforms for the\nthree directions\
    \ of falls and three severity levels have been shown in Appendix A.\nFeature Extraction\n\
    Feature extraction is used to convert inputs in to more useful representations.\
    \ In\nthis experiment, we take cue from the work of [420, 470] who use various\
    \ time and\nfrequency domain features successfully for fall detection and recognition\
    \ of activities\nof daily living. Table 35 lists the features computed for each\
    \ extracted segment. Each\nof these features have been computed for every axis\
    \ of the considered accelerometer\nand gyroscope sensor measurements.\nTable 35.\
    \ Features computed for each fall segment\nDomain\nFeatures Computed\nTime\n25th\
    \ Percentile\n75th Percentile\nDelta\nInterquartile range\nKurtosis\nMean\nMedian\n\
    Maximum\nMinimum\nSkewness\nStandard Deviation\nVariance\nFrequency\nPower Spectral\
    \ Entropy\nPower Spectral Density Mean\nPower Spectral Density Median\nPower Spectral\
    \ Density RMS\nPercentiles (25th Percentile, 75th Percentile) and Interquartile\
    \ Range\nFor a set of numerical values X ordered in arranged ascending order,\
    \ the ith percentile\nis defined as the number n below which i percent of the\
    \ total numbers of X fall below\nit. Therefore, the 25th Percentile (also called\
    \ the First Quartile) is the number in X\nbelow which exactly 25% of the values\
    \ fall. Similarly, 75th Percentile (also called\nthe Third Quartile) is the number\
    \ in X below which exactly 75% of the values fall.\nAnother important quantity\
    \ concerning percentiles is the Interquartile Range (IQ\n94\nRange), also called\
    \ the Midspread. The IQ Range is the difference between the 75th\nPercentiles\
    \ and the 25th Percentiles.\nDelta\nThe Delta represents the difference between\
    \ the minimum and maximum\nvalue of a set of numeric values X.\nKurtosis\nIt’s\
    \ a metric for how much a distribution’s tails diverge from that of\na normal\
    \ distribution. A large Kurtosis values indicates to larger extremity of the\n\
    divergences which can be thought of as outliers. The Kurtosis for a set of numerical\n\
    values X can be calculated as given in Eq. 2.\nKurtosis(X) =\n1\nNσ4\nN\nX\ni=1\n\
    (xi − µ)4\n(2)\nMean\nFor a set of values X, the arithmetic mean or the average\
    \ returns the\ncenter value of X. Mathematically it is given in Eq. 3.\nMean(X)\
    \ =\nPN\ni=1 xi\nN\n(3)\nMedian\nFor a set of values X, the median indicates to\
    \ the central tendency of\nX. It divides a set of values in to two equal parts.\
    \ For a set X of size N arranged in\nascending order, the median can be calculated\
    \ as in Eq. 4.\nMedian(X) = X[N + 1\n2\n]\n(4)\nMaximum\nFor a set of values X,\
    \ the maximum value represents the largest\nvalue in the set X.\nMinimum\nFor\
    \ a set of values X, the minimum value represents the smallest\nvalue in the set\
    \ X.\nSkewness\nThe Skewness measures the lack of symmetry in the probability\
    \ dis-\ntribution of data around its mean. It is calculated as in Eq. 5.\nSkewness(X)\
    \ =\n1\nNσ3\nN\nX\ni=1\n(xi − µ)3\n(5)\nStandard Deviation and Variance\nThe Standard\
    \ Deviation measures the\nvariation of a set of numerical values around its mean.\
    \ For a set of numerical values\nX, the standard deviation can be calculated as\
    \ in Eq. 6.\n95\nStd(X) =\nsPN\ni=1(xi − µ)2\nN\n(6)\nwhere µ is the Mean of X.\
    \ The Variance of X is the square of the Standard\nDeviation.\nPower Spectral\
    \ Density\nThe Power Spectral Density (PSD) is an indication\nto the power content\
    \ of a signal with respect to its frequency. It therefore helps to\nunderstand\
    \ the distribution of power in the signal for the different frequencies that\n\
    comprise it. The PSD has been computed using the Welch method [471]. Once the\n\
    PSD has been computed, the mean, median and Root Mean Squared (RMS) values\nof\
    \ the PSD are computed.\nPower Spectral Entropy\nThe Power Spectral Entropy (PSE)\
    \ is a measure of\nthe entropy in the power spectrum of a signal and indicates\
    \ to the complexity present\ntherein. It is computed as an entropy calculation\
    \ on the normalized PSD estimate.\nSimilar to the PSD computation, the Welch method\
    \ was used to estimate the PSD\nbefore PSE calculations were performed.\nThe aforementioned\
    \ quantities were computed for all windowed samples of the fall\nrecordings. In\
    \ total, this resulted in 96 features being computed for each segment.\nBefore\
    \ these features are passed on to the next stage, normalization was performed\n\
    feature wise for each sensor.\nFeature Selection\nFeature selection is an important\
    \ step in the machine learning pipeline. It not only\nhelps to reduce the feature\
    \ set size used in an application which helps computationally\nbut may also result\
    \ in performance improvement as observed by [472]. Feature se-\nlection is performed\
    \ using Random Forest Recursive Feature Elimination (RF-RFE)\n[473] which involves\
    \ determining the importance of features by eliminating features\niteratively\
    \ and looking at classifier performance. It starts by developing a model us-\n\
    ing all the available features within the dataset, in every iteration, the feature\
    \ that\nhas the ’least importance/contribution’ is discarded and a new model is\
    \ fitted with\nthe remaining features. This process is carried out until a pre-decided\
    \ number of\nfeatures remain. Since in this work, our goal is to reduce the number\
    \ of features\nfrom the original count, we perform manual tests by establishing\
    \ a baseline for the\nperformance of our models. The baseline is formed by using\
    \ all features for each\nof our classification tasks and using the highest weighted\
    \ F1-score achieved as the\nperformance goal cut-off for the reduction of features.\
    \ This step will ensure that we\natleast get the same performance as the original\
    \ feature set.\nClassification\nClassification refers to the usage of a classification\
    \ algorithm, also called a classifier\n96\nto determine the output ’label’ or\
    \ category given a set of input values called features.\nIn the current setting,\
    \ the classification problem is a supervised one wherein the\nclassifier is provided\
    \ inputs and their corresponding output labels which allow it\nto learn the relationship\
    \ between the input and the output.\nOnce this mapping\nhas been sufficiently\
    \ learned (a process called training) the trained classifier can\nbe provided\
    \ unlabeled inputs for it to predict an output label value or class. The\nefficacy\
    \ of the classifier in predicting the correct output is measured through various\n\
    metrics such as accuracy, precision, recall, F1-score etc. This experiment consists\
    \ of\ntwo classification experiments being performed, one is the direction only\
    \ experiment\nwhere the classifiers used are trained to distinguish between the\
    \ three direction of falls\ngiven the input feature set and another experiment\
    \ where the classifiers are trained\nto determine fall directions and severity\
    \ together.\nFour different classifiers were tested to perform these tasks, these\
    \ are the Random\nForest Classifier, Support Vector Machines, Decision Trees and\
    \ Extreme Gradient\nBoost (XGBoost). All of the classifiers were trained using\
    \ five fold cross validation\nwith a stratified split and a parameter search being\
    \ performed for tuning purposes.\nSupport Vector Machines\nSupport Vector Machine\
    \ is a supervised learning\nalgorithm that, in its simplest form tries to fit\
    \ a line in between data samples of two\ndifferent classes to separate them. The\
    \ criteria used by the SVM to fit this line is\nthe maximization of the distance\
    \ between the line and the (data) points closest to it.\nThis concept of using\
    \ a line to separate two dimensional data can be extended to two\ndimensional\
    \ planes being used for separating three-dimensional data and hyperplanes\nfor\
    \ higher dimensional data. SVMs are quite flexible in that they can not only be\
    \ used\nto work with linearly separable data but also with data that is not linearly\
    \ separable.\nThis is achieved using Kernel functions which map the nonlinearly\
    \ distributed data\nin to a higher dimensional space to make it linearly separable\
    \ (as much as possible).\nThere are several kernel functions available to be used\
    \ for this purpose such as the\nhyperbolic tangent, radial basis, sigmoid, polynomial\
    \ etc. Optimizing the SVM re-\nquires the tuning of the cost parameter C, a small\
    \ value of C indicates an underfit\nwhereas a very large value of C indicates\
    \ an overfit.\nEven though, the current experiment considers using SVMs for a\
    \ classification\ntaks, it should also be mentioned that SVM’s are not limited\
    \ to application towards\nclassification problems and they have also been used\
    \ for regression applications too.\nDecision Tree\nDecision Trees are one of the\
    \ most widely used classification\nalgorithms due to their interpretability. The\
    \ aim of the algorithm is to come up with\nas simple a solution as possible while\
    \ successively dividing the data in to simpler and\nsimpler classification tasks\
    \ based on the values of the features. For a classification\nproblem, given a\
    \ set of input features of the training set, decision trees use the values\nof\
    \ the features to divide or split the dataset in to more simpler sub problems.\
    \ The\naim being to get the largest information gain when choosing the feature/s\
    \ for the\nsplit. Each split point in a decision tree is called a node and each\
    \ split is called a\nbranch. Branches from a given node represent all the possible\
    \ outcomes from that\n97\nnode and may contain subsequent decision nodes as well\
    \ which are called child nodes.\nEach branch ends at a node called the leaf node\
    \ where data points are assigned a\nclass label.\nDepending on the number of input\
    \ features and the output classes, decision trees\ncan be built to classify the\
    \ dataset in a ’complete’ manner due to its iterative parti-\ntioning scheme.\
    \ However, this is undesirable since that would lead to overfitting of the\nmodel\
    \ and also because such trees would lead to a complicated model, which is not\n\
    desirable since that would impact interpretability. The process of removing branches\n\
    and replacing them by leaf nodes is called pruning. Pruning aims to increase the\n\
    models generalizations capabilities and increase robustness. Two paramters which\n\
    are used for this purpose are tree depth limits the number of child nodes present\
    \ in\nevery branch and the number of features used at each split.\nRandom Forest\
    \ Classifier\nRandom forest is a bagging approach towards de-\ncision trees where\
    \ instead of deciding on where to split for each node, for each tree\na random\
    \ subset of features is used and the feature/threshold to split the data is\n\
    determined within that subset of features to separate the data in the best manner\n\
    possible. This process is repeated multiple times which results in various trees\
    \ pro-\nducing possibly different predictions. The predictions from each tree\
    \ are combined\nto form an ensemble either through majority voting or by averaging.\
    \ The imple-\nmentation of Random Forests used in this work uses the averaging\
    \ approach. There\nare several parameters that are important in the tuning of\
    \ Random Forests are the\nnumber of trees created before the averaging process\
    \ starts, the number of levels in\neach tree and more.\nExtreme Gradient Boost\n\
    Extreme Gradient Boost is another ensemble based\ntree algorithm, however compared\
    \ to the RFC, XGBoost uses boosting instead of\nbagging. In boosting, the input\
    \ samples are uniformly weighted and first a ’weak’\nlearner (classifier) is created\
    \ for a given task that doesnt perform well but is sufficient\nin the sense that\
    \ it is better than random guessing. In subsequent iterations of the\nlearner,\
    \ input samples which werent classified correctly by the learner are reweighted\n\
    by assigning larger weights to them while the weights for correctly classified\
    \ inputs\nis reduced. This step is repeated for a number of times with different\
    \ weak learners\nbeing trained.\nThe decision of the weak learners are combined\
    \ through majority\nvoting to determine the output class. Parameters used to tune\
    \ XGBoost are the\nmaximum depth allowed in each tree, the weight settings etc.\n\
    2.8.1.3\nResults\nAs mentioned previously, two separate experiments were conducted,\
    \ first was to dif-\nferentiate between fall directions only and the other to\
    \ differentiate between fall\ndirection as well as severity. The results from\
    \ those experiments are presented here.\nThe metrics considered for judging model\
    \ quality is the F1-score. The F1-score is the\nharmonic mean of the precision\
    \ and recall and is given as in Eq. 7.\n98\nF1 Score = 2 ∗ (Precision ∗ Recall)\n\
    Precision + Recall\n(7)\nwhere Precision is the ratio of the True positive samples\
    \ divided by the sum of the\nTrue positive and False positive samples as given\
    \ in Eq. 8. It is also called positive\npredictive value as it indicates to the\
    \ capability of the classifier to identify correctly\nthe samples of a given class.\n\
    Precision =\nTrue Positive\nTrue Positive + False Positive\n(8)\nand recall indicates\
    \ to the models capability to identify the samples of a given\nclass over the\
    \ whole dataset. It is also called the sensitivity and is the ratio of the\nTrue\
    \ positives to the sum of the True positives and False Negatives as shown in Eq.\n\
    9.\nRecall =\nTrue Positive\nTrue Positive + False Negative\n(9)\nWe report on\
    \ the F1-scores for each class when discussing classification perfor-\nmance and\
    \ deciding on the best classifier. Moreover, for the best classifier identified\n\
    the precision and recall have also been provided.\nFall direction\nIn this experiment,\
    \ fall segments labeled for direction only were used as input to the\nclassifiers.\
    \ To establish a baseline to be used as a reference in the feature selection\n\
    process, all computed features (96 in total) were passed to the four classifiers.\
    \ The\nbest performing model was found to be the SVM with a weighted F1-score\
    \ of 90.4%.\nFeature selection was then performed keeping in view baseline performance\
    \ of the\nSVM classifier so as to retain or improve this performance baseline\
    \ when choosing a\ngiven number of ’top’ features. Following this rule, feature\
    \ selection resulted in 90\nfeatures. The results are given in Table 36. It can\
    \ be observed from the table that\nthe SVM has outperformed the other algorithms\
    \ in detecting forward and lateral falls\nwhereas it achieves a slightly lower\
    \ F1-score for the backward fall class. Overall the\nSVM has shown to be better\
    \ at discriminating falls with direction.\nTable 36. Fall F1-scores (Fall direction\
    \ only)\nFall\nClassifier (F1-score %)\nSVM\nDT\nRFC\nXGBoost\nBF\n96.05\n92.22\n\
    96.59\n96.63\nFF\n92.67\n83.60\n90.10\n89.49\nLF\n88.67\n71.78\n85.63\n84.35\n\
    Average\n92.46\n82.53\n90.77\n90.15\n99\nFall direction and severity\nIn this\
    \ experiment, fall segments from the dataset were labeled for direction and\n\
    severity based on the labeling shown in Table 34 and passed to each of the classifiers\n\
    after feature selection. Like before, to establish a baseline, all computed features\
    \ (96\nin total) were passed to the four classifiers. The best weighted F1-score\
    \ of 78.44% was\nachieved by the SVM classifier. We used this value as the baseline\
    \ we aim to achieve\nafter feature selection. With this condition the number of\
    \ features were reduced to\n93. The performance achieved for each of the four\
    \ tested classifers is summarized in\nTable 37. It can be observed that the SVM\
    \ is the best performing classifier for all fall\ntypes bar FHF where the random\
    \ forest classifer achieves a slightly higher F1-score.\nThe highest F1-score\
    \ overall is achieved for the class BSF where as the lowest has\nbeen achieved\
    \ for LHF. When looking at fall direction, falls in the forward direction\ncan\
    \ be seen to be the hardest to identify followed by lateral falls. No such pattern\n\
    can be noted for soft/hard falls.\nTable 37. Fall F1-scores (Fall severity and\
    \ direction)\nFall\nClassifier (F1 Score %)\n[]\nSVM\nDT\nRFC\nXGBoost\nBHF\n\
    87.27\n50.00\n69.39\n66.67\nBSF\n95.08\n77.88\n88.33\n85.47\nFHF\n72.43\n54.02\n\
    75.56\n67.04\nFSF\n73.25\n50.60\n67.57\n58.93\nLHF\n66.67\n29.85\n35.90\n50.00\n\
    LSF\n84.65\n62.24\n75.17\n75.69\nAverage\n79.89\n54.10\n68.65\n67.30\n2.8.1.4\n\
    Discussion\nTo summarize the results from both experiments, we present the individual\
    \ F1-\nscores, Precision and Recall for the best performing classifier in each\
    \ case. These\nhave been presented in Table 38 and Table 39.\nTable 38. Best Results:\
    \ Fall direction\nFall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBF\n94.44\n97.70\n\
    96.05\nFF\n93.33\n92.02\n92.67\nLF\n88.67\n88.67\n88.67\nAverage\n92.16\n92.80\n\
    92.46\nIn both cases the best performing classifier was the SVM. This is inline\
    \ with\nthe findings of other research work as found from the literature review\
    \ [424, 429].\nA surprising outcome during this work was the unsatisfactory performance\
    \ of tree\nbased algorithms contrary to [420], we attribute this to the difference\
    \ in the data\nsegmentation scheme and also the fact that we follow different\
    \ labelling for the data\n100\nTable 39. Best Results: Fall direction and Severity\n\
    Fall\nPrecision (%)\nRecall (%)\nF1-score (%)\nBHF\n80.00\n96.00\n87.27\nBSF\n\
    96.67\n93.55\n95.08\nFHF\n74.44\n70.53\n72.43\nFSF\n74.17\n72.36\n73.25\nLHF\n\
    60.00\n75.00\n66.67\nLSF\n85.00\n84.30\n84.65\nAverage\n78.38\n81.96\n79.89\n\
    in terms of a direction and severity aware system. Moreover, the final weighted\
    \ F1-\nscores for the fall direction experiment was 92% and for the fall direction\
    \ and severity\nwas 79.53% which resulted in an improvement of just above 1% in\
    \ both cases with a\nsmall reduction in the number of features utilized, 90 and\
    \ 93 respectively compared to\n96 in the original feature set. Commenting on the\
    \ direction, the hardest to predict fall\nwas in the lateral direction and the\
    \ classifier incorrectly predicted forward falls and\nlateral falls in both the\
    \ scenarios tested. This highlights the difficulty in capturing\nthe difference\
    \ between these two fall directions using the features considered.\n2.8.2\nFall\
    \ Detection with Severity and Direction along with ADL consid-\neration using\
    \ Wavelet Pooling and K-NN\nThis section provides a framework for a fall and activity\
    \ recognition system. It aims\nto determine an appropriate sensor modality to\
    \ use and the window size to be used\nfor the task. The framework does this as\
    \ a problem of differentiating between various\nactivities of daily living as\
    \ well as various types of falls with regard to fall datection\nbeing direction\
    \ and severity aware. To do this, data from the SisFall dataset is used\nand after\
    \ suitable pre-processing and feature extraction, machine learning algorithms\n\
    are utilized to differentiate between different activities of daily living and\
    \ falls\n2.8.2.1\nData Labeling\nSince we aim to perform activity recognition\
    \ and fall detection with direction and\nseverity, the ADL labeling of the original\
    \ dataset has been modified. This labeling\nhas been shown in Table 40. As can\
    \ be observed from Table 40, the activities Walking\n(W), Jogging (J), Sitting\
    \ (S) and Standing (SB) have been considered for this work\nwhich are typical\
    \ activities in ADL detection problems. Each of these labels includes\ndata from\
    \ multiple original activities, for e.g. activities with original labels of walking\n\
    upstairs and downstairs, walking slowly and walking quickly have been considered\
    \ as\nwalking in this work. A similar scheme has been used for the other three\
    \ activity\nlabels as well. Some of the activities such as being on one’s back\
    \ change to lateral\nposition, wait a moment, and change to one’s back (D14),\
    \ getting in and out of the\ncar (D17), stumble while walking (D18), and gently\
    \ jumping without falling while\ntrying to reach a high object (D19) have not\
    \ been considered. The reason for this\nis that they have very few samples to\
    \ be considered as standalone activities (only\none type of sub-activity and also\
    \ because most of these are not considered in typical\n101\nADL detection scenarios).\
    \ For falls, the labeling same as that for the direction and\nseverity experiment\
    \ has been retained.\nTable 40. ADL Labels used for SisFall Recordings.\nActivity\
    \ Code\nAssigned Activity Name\nAssigned Activity Label\nD01\nWalking\nW\nD02\n\
    Walking\nW\nD03\nJogging\nJ\nD04\nJogging\nJ\nD05\nWalking\nW\nD06\nWalking\n\
    W\nD07\nSit\nS\nD08\nSit\nS\nD09\nSit\nS\nD10\nSit\nS\nD11\nSit\nS\nD12\nSit\n\
    S\nD13\nSit\nS\nD14\n-\n-\nD15\nStanding\nSB\nD16\nStanding\nSB\nD17\n-\n-\nD18\n\
    -\n-\nD19\n-\n-\n2.8.2.2\nMethodology\nFigure 18 shows the methodology for this\
    \ work with individual parts being elab-\norated upon in the proceeding subsections.\
    \ As can be seen, the first stage consists of\ndata preprocessing, followed by\
    \ feature extraction and then evaluation or classifica-\ntion.\nData Preprocessing\n\
    Data preprocessing for this experiment was performed in a similar manner to section\n\
    2.8.1 for most recordings. The SMV was computed for the complete recording and\n\
    windowed segments of a fixed duration were extracted.\nWindowed segments are\n\
    extracted in this manner from all considered activities in the SisFall dataset\
    \ except\nthe activities of D01, D02, D03 and D04 which consist of a single trial\
    \ per subject of\nduration 100s. In such cases, continuous windowed segments of\
    \ duration n seconds\nare extracted from the recordings. It is also pertinent\
    \ to mention here that since\nboth accelerometers are placed at the same position,\
    \ we only consider one of the\naccelerometers along with the gyroscope readings\
    \ present in the recorded trials. To\ndetermine the value of n as well as the\
    \ appropriate sensor modality to use for the\nfinal system, experiments were performed\
    \ on the developed framework and the results\nhave been discussed in subsequent\
    \ sections.\nFeature extraction\nIn this experiment, feature extraction consists\
    \ of two steps. The first is the use of\n102\nWindowing\nWavelet Coefficient\n\
    Extraction\nSpatial Pyramid\nPooling\nKNN Classifier ADL\nvs Fall \n(W J, S, SB,\
    \ Fall)\nKNN Classifier\nSeverity \n(HF, SF)\nKNN Classifier\nDirection \n(F,\
    \ B, L)\nFeature\nExtraction\nHierarchical\nClassification\nData\npreprocessing\n\
    Peak SMV detection\nFall ?\nOutput Class \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF,\
    \ LSF)\nDetermination of Fall type (Voting)\nYes\nNo\nIMU Recording (Falls and\
    \ Activities) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFigure 18. Hierarchical\
    \ classification scheme for ADL and Fall detection.\nwavelets [474] for performing\
    \ wavelet decomposition and then performing pooling,\nthe inspiration for this\
    \ type of feature extraction came from the work of [475].\n103\nWavelet Decomposition\n\
    Wavelets can be used for a variety of applications\nsuch as spectral analysis\
    \ where they are used to analye a signal in the time-frequency\ndomain, denoising,\
    \ compression and signal enhancement. A wavelet is a function of\nfinite duration\
    \ and has an average value of zero, an example of a mexican hat wavelet\nis shown\
    \ in Figure. 19. The width of the wavelet is called its scale and it is analogous\n\
    to frequency in an inverse manner. A large value of the scale (wider window) allows\n\
    for capturing of low frequency components of the signal whereas a small scale\
    \ value\ncaptures low frequency components.\n0\n20\n40\n60\n80\n100\n0.2\n0.1\n\
    0.0\n0.1\n0.2\n0.3\n0.4\nAmplitude\nMexican Hat Wavelet\nFigure 19. Sample Wavelet\
    \ (Mexican Hat).\nWavelets are convolved with an input signal to produce two sets\
    \ of coefficients.\nThese are called the detail and approximation coefficients.\
    \ The detail component\nrepresents the high frequency component captured by the\
    \ wavelet whereas the ap-\nproximation component represents the low frequency\
    \ part. Since the wavelet has\nonly been convolved once with the signal, these\
    \ coefficients are said to be level 1\ncoefficients. At each level, resulting\
    \ coefficients are downsampled by half to result in\na lower resolution signal.\
    \ Subsequent approximation components can be convolved\nwith the wavelet to result\
    \ in approximation and detail components for the next level\nthus forming what\
    \ is called a wavelet decomposition tree.\nTo perform wavelet decomposition, in\
    \ this experiment, we make use of the Haar\nwavelet [476] shown in Figure. 20.\
    \ Level 4 haar wavelets were computed for each of\nthe extracted segments of the\
    \ signals.\nSpatial Pooling\nThe results from the decomposition provide a large\
    \ number\nof features which would pose a problem for use in the proceeding classification\
    \ stage.\nIn order to reduce the feature dimension size, Spatial Pyramid Pooling\
    \ [477] was\nused. Spatial Pyramid Pooling is an adaptive pooling method which\
    \ was developed\nto address the issue of fluctuating input sizes in CNNs for image-based\
    \ applications,\nand it entails converting varying-size convolutional feature\
    \ maps into fixed-length\nsummarizations. These summarizations, having uniform\
    \ length can then be passed\non to the fully connected parts of the CNN where\
    \ a fixed length input is necessary.\n104\n1.0\n0.5\n0.0\n0.5\n1.0\n1.5\n2.0\n\
    1.00\n0.75\n0.50\n0.25\n0.00\n0.25\n0.50\n0.75\n1.00\nAmplitude\nHaar Wavelet\n\
    Figure 20. Haar Wavelet.\nGiven a pooling size pxp, adaptive pooling works by\
    \ dividing the input in to pxp pieces\nwhile computing the size of each piece\
    \ automatically and performing any necessary\npadding. Once these pieces are created,\
    \ a pooling operation is typically performed\n(max pooling or average pooling\
    \ for e.g.) on each of these pieces to summarize the\ninput into an output of\
    \ fixed size pxp. This results in a fixed output length for any\nsize of the input.\
    \ In this experiment, 4-2-1 1D Spatial Pyramid pooling was used\non the detail\
    \ and approximation coefficients of the wavelet decomposition of activity\nand\
    \ fall data. This process has been shown in Figure 21. Each coefficient set was\n\
    divided in to four and two parts and then max pooling was used to determine the\n\
    maximum value in these divided parts and the coefficient set as a whole.\nThese\n\
    maximum values were then concatenated together to form the seven valued output\n\
    from that coefficient set. Furthermore, the results for each coefficient set within\
    \ each\naxis were also concatenated to form the feature vector for a sensor axis\
    \ measurement.\nThis operation was performed for each axis of accelerometer and\
    \ groscope sensor\ndata with the final feature vector of 210 values consisting\
    \ of the concatenations of\nthe individual vectors for each axis. It is hypothesized\
    \ that this way local as well as\nglobal information at each level of the wavelet\
    \ coefficients can be captured. For the\nwavelet decomposition, tests were performed\
    \ with level values of 2, 3, 4, 5 and 7 and\nit was determined that level-4 produced\
    \ the best results.\nClassification\nA hierarchical classification approach is\
    \ employed to discriminate between the vari-\nous activities and falls considered\
    \ from the SisFall dataset. Hierarchical classification\ninvolves the division\
    \ of a complex taxonomic classification problem in to a set of\nsubsets that are\
    \ potentially easier to differentiate as the task becomes more localized.\nHierarchical\
    \ classifiers have been used in multiple different applications [478] where\n\
    they have been found to improve upon the performance of many flat classification\n\
    schemes. The classification framework used in this work combines hierarchical\
    \ clas-\nsification with a vote based system. The classification problem is divided\
    \ into three\nparts, each with its own classifier to indicate to the subclass\
    \ of the output. The clas-\n105\nMaxpooling Size = 4\nMaxpooling Size = 2\nMaxpooling\
    \ Size = 1\nMaxpooled Coefficients - 4\nMaxpooled Coefficients - 2\nMaxpooled\
    \ Coefficients - 1\nConcatenated cofficients for maxpooled wavelet coefficients\n\
    c1\nc2\nc3\nc4\nc5\nc6\nc7\nc8\nc9\nc10\nc11\nc12\nn Wavelet coefficients ( n\
    \ = 12 e.g.)\nMax (c1, c2, c3)\nMax (c4, c5, c6)\nMax (c7, c8, c9)\nMax (c10,\
    \ c11, c12)\nMax (c1, c2, c3, c4, c5, c6)\nMax (c7, c8, c9, c10, c11, c12)\nMax\
    \ (c1, c2, c3, c4, c5, c6,c7, c8, c9, c10, c11, c12)\nFigure 21. Example: 4-2-1\
    \ 1-D Spatial Pyramid Pooling.\nsifier in part one consists of differentiating\
    \ whether a given recording is a fall or one\nof the four considered ADLs. In\
    \ order to train this stage, the activities of Standing,\nWalking, Sitting and\
    \ Jogging along with all falls combined in to one class are passed\nto the classifier.\
    \ This dilutes the original ten-class problems in to a five-class sub\nproblem.\
    \ The output of this stage is the determination of whether a given recording\n\
    is either one of the four ADLs (Standing, Walking, Sitting or Jogging) or a fall.\
    \ If a\nrecording has been detected to be a fall, it is sent to the second and\
    \ third stages.\nThe second and third stages work in parallel on samples detected\
    \ as falls from\n106\nthe first stage in the form of a voting machine. These two\
    \ stages vote individually\non the direction and severity of the detected fall\
    \ samples. In order to train them,\nfall samples were relabeled to represent direction\
    \ and severity only and are fed to the\nclassifiers. For the direction, the classification\
    \ problem is formulated as a three-class\nproblem of determining fall directions\
    \ as being Forward, Backward or Lateral. For\nthe severity classifier, the classification\
    \ problem is formulated as a two-class problem\nof a fall being either Soft or\
    \ Hard. After a signal has passed through all necessary\nstages, the outputs of\
    \ the individual stages are combined to indicate to the activity\nor type of fall\
    \ being fed at the input.\nFour classifiers were tested for each part of the hierarchical\
    \ scheme, the classifiers\nconsidered were K-Nearest Neighbors, Support Vector\
    \ Machines, Random Forests\nand eXtreme Gradient Boosting. Parameter tuning was\
    \ performed using gradient\nsearch for each classifier over a range of values\
    \ for each parameter.\nK-Nearest Neighbor\nCompared to the SVM which attempts\
    \ to create a deci-\nsion boundary between classes on a global level, the K-NN\
    \ algorithm operates locally.\nStarting from a data point, the 1 Nearest Neigbhor\
    \ algorithm will assign each new\nsample the class of its neighbor. However, using\
    \ a single neighborhood point to assign\nnew classes may lead to erroneous classes\
    \ being assigned. Therefore, typically mul-\ntiple neighboring points are used\
    \ to determine the label for a given point. In K-NN,\n’K’ represents the number\
    \ of points used in the neighborhood to assign labels to data\nsamples. Each considered\
    \ sample is assigned the majority label within a neighbor-\nhood of K points around\
    \ it. In this manner, the K-NN algorithm is successively able\nto create a decision\
    \ boundary separating the data in to the different output classes.\n2.8.2.3\n\
    Results\nThree experiments were performed in this section. The first was to choose\
    \ the best\nclassifier to use, once that was determined. experiments were conducted\
    \ to determine\nthe observation window size and different combination of sensor\
    \ modalities. We used\nthe weighted F1-score as our training metric due to the\
    \ imbalance in the samples\nof the different classes in the data. Moreover, for\
    \ evaluation purposes, we report on\nthe individual F1-scores for each output\
    \ class and provide discussions as necessary.\nFurthermore, for the best performing\
    \ results, the Precision and Recall and Specificity\nwere also specified. Specificity\
    \ can be calculated as given in Eq. 10. It is also called\nthe True Negative Rate\
    \ and indicates to a classifiers capability to correctly detect\nsamples which\
    \ don’t belong to a given class. These metrics have been computed on\na one versus\
    \ all basis.\nSpecificity =\nTrue Negative\nTrue Negative + False Positive\n(10)\n\
    The data after the feature extraction stage was split in to a train/test partition\n\
    based on a 75/25 ratio with a parameter grid being searched through to obtain\n\
    107\ntuning parameters for maximizing the weighted F1-score while using five-fold\
    \ cross\nvalidation.\nClassifier Selection\nThis test was conducted to determine\
    \ the best classifier to use for the proceeding\nexperiments of observation window\
    \ selection and sensor modality selection. Here,\nexperiments were performed for\
    \ the considered window durations for each activity\nand the classifier which\
    \ provided the best performance overall was chosen. The mean\nF1-scores for each\
    \ output class for each classifier are shown in Figure 22. It can be\nobserved\
    \ that in general K-NN and SVM perform better compared to the ensemble\nmodels,\
    \ the RFC and XGBoost. However, since the K-NN slightly outperforms the\nSVM in\
    \ eight of the ten considered classes, we choose K-NN as the classifier for this\n\
    framework.\nBHF\nBSF\nFHF\nFSF\nJ\nLHF\nLSF\nS\nSB\nW\n0\n20\n40\n60\n80\n100\n\
    F1 Score (%)\nAverage F1 Scores for each activity\nKNN\nSVM\nRFC\nXGB\nFigure\
    \ 22. Average F1-scores for each activity for the four classifiers.\nObservation\
    \ Window Duration\nAn important consideration in working with activity recognition\
    \ systems is to de-\ntermine the appropriate observation window size for the analysis\
    \ of sensor signals\nto accomplish the ADL recognition/fall detection task. The\
    \ size of the observation\nwindow is important as a smaller observation window\
    \ increases the response time of\nthe activity recognition/fall detection system\
    \ and it can also impact the time taken\nin the computation of features. In order\
    \ to find the best observation window size,\nwe perform experiments using five\
    \ values, 2, 3, 4, 5 and 6 seconds. The classification\nresults in terms of the\
    \ F1-score are presented in Table 41. For each case, samples\nof duration equal\
    \ to half of the observation window were extracted around the peak\nvalue of the\
    \ SMV. From the table, it can be observed that an observation window\n108\nof\
    \ size 3 seconds produces the best results for six out of the ten output classes.\
    \ It\nonly produces poorer results for the classes BHF, BSF and S, SB where window\
    \ sizes\nof 2 seconds, 6 seconds and 4 seconds respectively perform better than\
    \ the 3 second\nwindowing case. Upon further investigation of this phenomenon\
    \ using the result of\nother classifiers, it was observed that the activities\
    \ of (BHF and BHF) were best rec-\nognized by all the classifiers with a window\
    \ size of 2 seconds (for the case of K-NN,\nthere is a small difference between\
    \ the 2 second and 6 second case), for the other two\nactivities of S and SB too\
    \ the F1-score was obtained for the 4 second duration (for\nthe activity S, the\
    \ difference in performance over windows larger than 4 seconds is\nvery small).\
    \ This could be attributed to the feature aggregation process in the max\npooling\
    \ operation in the different spatial segments.\nTable 41. Performance for different\
    \ observation window sizes.\nActivity/Fall\nObservation Window Size (F1-score\
    \ [%])\n2 sec\n3 sec\n4 sec\n5 sec\n6 sec\nBHF\n86.79\n83.02\n79.25\n83.64\n85.19\n\
    BSF\n92.17\n90.76\n89.08\n90.76\n93.22\nFHF\n78.53\n80.47\n78.32\n79.21\n78.83\n\
    FSF\n73.39\n77.18\n72.5\n76.83\n76.79\nLHF\n52.83\n67.8\n62.75\n59.26\n58.62\n\
    LSF\n79.69\n82.73\n77.57\n81.46\n79.41\nJ\n97.53\n98.27\n98.08\n98.00\n98.16\n\
    S\n95.27\n96.20\n97.60\n95.84\n95.93\nSB\n87.29\n85.71\n91.98\n90.61\n91.71\n\
    W\n98.08\n98.46\n98.12\n98.35\n98.16\nAverage\n84.16\n86.68\n84.52\n85.40\n85.60\n\
    Sensor Modality\nThe second experiment in designing the proposed system is the\
    \ determination of\nthe best sensor modality to use.\nUsing a single sensor would\
    \ result in less data,\nfaster processing and reduced hardware costs compared\
    \ to the multisensor approach\ncombining accelerometer and gyroscope. To do this,\
    \ the classification framework was\ntested with 3 second windowed segments of\
    \ the combined acceleromter and gyroscope\ndata as well as data of the accelerometer\
    \ and gyroscope sensors individually. The\nresults of this experiment are presented\
    \ in Table 42. It can be observed that using\na combination of both accelerometer\
    \ and gyroscope data together produces the best\nresults for eight of the ten\
    \ output classes. An accelerometer-only system produces\nbetter results for the\
    \ detection of activity SB and the fall FHF. The outcome of this\nexperiment agrees\
    \ with previous work for fall detection by Waheed et. al. [436] on\nthe SisFall\
    \ dataset.\n2.8.2.4\nDiscussion\nTable 43 reports on the best results obtained\
    \ for the proposed classification frame-\nwork. These results were achieved by\
    \ using windowed segments of 3 seconds and\n109\nTable 42. Performance for different\
    \ sensing modalities.\nActivity/Fall\nSensing Modality (F1-score [%])\nAccelerometer\
    \ + Gyroscope\nAccelerometer\nGyroscope\nBHF\n83.02\n67.92\n82.14\nBSF\n90.76\n\
    85.48\n78.18\nFHF\n80.47\n83.33\n71.17\nFSF\n77.18\n73.21\n63.96\nJ\n98.27\n97.79\n\
    95.59\nLHF\n67.80\n54.55\n55.56\nLSF\n82.73\n76.34\n73.21\nS\n96.20\n95.61\n91.17\n\
    SB\n85.71\n86.21\n76.09\nW\n98.46\n98.24\n96.30\nAverage\n86.06\n81.87\n78.33\n\
    combined data from the accelerometer and the gyroscope with a weighted F1-score\n\
    of 94.67% on the test set.\nTable 43. Best Results (Obs. Window : 3 sec, Sensing\
    \ Modality: Acc. + Gyro.)\nActivity/Fall\nPrecision (%)\nSensitivity/Recall (%)\n\
    Specificity (%)\nF1-Score (%)\nBHF\n95.65\n73.33\n99.96\n83.02\nBSF\n91.53\n90.00\n\
    99.80\n90.76\nFHF\n86.08\n75.56\n99.57\n80.47\nFSF\n76.86\n77.50\n98.88\n77.18\n\
    LHF\n68.97\n66.67\n99.65\n67.80\nLSF\n79.85\n85.83\n98.96\n82.73\nJ\n97.87\n98.68\n\
    99.36\n98.27\nS\n95.00\n97.44\n99.31\n96.20\nSB\n93.75\n78.95\n99.80\n85.71\n\
    W\n97.95\n98.97\n98.36\n98.46\nAverage\n88.35\n84.29\n99.37\n86.06\nFrom Table\
    \ 43, the best recognized ADLs are W and J whereas the best rec-\nognized fall\
    \ is BSF. The worst performing class in ADLs is SB whereas the worst\nperforming\
    \ fall is LHF. Upon further inspection of the cause of the bad performance\nwith\
    \ LHF, looking at the confusion matrix, it was observed that LHF was most\ncommonly\
    \ confused with FSF which resulted in a reduction of the classification per-\n\
    formance for this class. On the other hand, in the case of FSF (the second worse\n\
    performing class), looking at the confusion matrix, it was observed that FSF was\n\
    confused with LSF and FHF. Furthermore, the specificity values indicate that there\n\
    has been very little mis-identification for each of the classes. When talking\
    \ about\nthe activity S, it was observed that samples from this activity were\
    \ confused with\nthe activity W which resulted in the sub-par performance of the\
    \ classifier for its\nrecognition.\n110\n2.8.3\nFall Detection with Severity and\
    \ Direction along with ADL consid-\neration using CNN-XGBoost\nThis section presents\
    \ a scheme for performing fall detection considering fall direction\nand severity\
    \ as well as activity recognition. Inertial sensor data taken from the SisFall\n\
    dataset is used to develop the methodology. Data pre-processing is first carried\
    \ out\nin terms of windowing and relabeling. Then, data augmentation is carried\
    \ out for\nclasses which do not have a sufficient number of samples. Lastly, feature\
    \ extraction is\nperformed along with classification. This work considers fall\
    \ and activity recognition\nas a holistic problem, in that different types of\
    \ falls and activities are considered\nthereby producing a more ’complete’ recognition\
    \ system for use in cyber-physical\nsystems. Moreover, towards this end, a CNN-XGBoost\
    \ combination is proposed.\n2.8.3.1\nMethodology\nThe proposed scheme follows\
    \ a typical deep learning so-\nlution framework. First, inertial sensor data from\
    \ the IMU sensors contained within\nthe SisFall dataset is pre-processed to extract\
    \ windowed segments, then data aug-\nmentation is performed for minority classes,\
    \ followed by feature extraction and then\nclassification. This has been illustrated\
    \ in Figure 23 and a discussion is provided for\neach of the steps in the proceeding\
    \ sections.\nData Pre-processing\nBefore the IMU sensor recordings can be used\
    \ for ADL and fall detection, raw sensor\nmeasurements need to be suitably processed.\
    \ In this experiment, data pre-processing\nconsists of two steps, the first is\
    \ the extraction of uniform sized windows as was\nperformed in the previous section\
    \ from the IMU recordings and the next is data\naugmentation. Since windowing\
    \ of the signals has already been discussed previously,\nonly data augmentation\
    \ is discussed here.\nData Augmentation\nThe use of deep learning methods require\
    \ a suitable\namount of data to be present for them to learn the data pattern\
    \ sufficiently well. Un-\nfortunately, due to the nature of the problem considered,\
    \ the relabeled data from the\nSisFall dataset contains a reduced amount of data\
    \ for some of the classes, especially\nfall classes and also for the ADL of Standing.\
    \ In order to alleviate this shortcom-\ning, data augmentation was employed to\
    \ increase the number of samples from these\nclasses. Three augmentations were\
    \ performed for each of the extracted recordings\nfor the classes SB, FHF, FSF,\
    \ BHF, BSF, LHFand LSF. These were the addition of\nnoise, scaling and resampling\
    \ after inerpolation [439]. For augmentation with noise,\nwhite gaussian noise\
    \ was added to the extracted windows of the considered classes.\nThe noise was\
    \ generated using a standard deviation equal to 0.01. The addition of\nthe noise\
    \ simulates measurement noise during recording which might be encountered\nwhen\
    \ IMU based fall detection systems are employed. For scale based augmentation,\n\
    the original extracted window was multiplied by a random number from the uniform\n\
    distribution between 0.8 and 1.2 thereby scaling it between 80% and 120% of its\
    \ orig-\ninal form. By doing so, changes in amplitude over the same type of activity/fall\
    \ are\nincorporated. This could indicate to a change in fixation (loosening etc)\
    \ of the sensing\n111\nPeak SMV Detection\nWindowing\nCNN\nXGBoost Classifier\n\
    Data Augmentation\nData Processing\nIMU Recording (Falls and Activities) \n(ADL,\
    \ FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\n\
    Output Class \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF,\
    \ BSF, LHF, LSF)\nFeature Extraction\nClassification\nFigure 23. CNN-XGBoost based\
    \ classification scheme for ADL and Fall detection.\nunit to a subject or their\
    \ different physique and subsequent fall intensity response.\nLastly, in order\
    \ to incorporate sampling inconsistencies, the windows are first upsam-\npled\
    \ and then downsampled. This was done by a scale of ten. With this strategy,\n\
    each from original window were produced three additional samples. An illustration\n\
    for the results of the augmentation process for an X-axis accelerometer measurement\n\
    for a lateral fall has been shown in Figure 24.\nFeature extraction\nThe aim of\
    \ feature extraction for a classification problem is to produce a representa-\n\
    tion of the input that can be better used to indicate to the output class. In\
    \ this regard,\nresearch in the area of fall detection with inertial sensors has\
    \ made use of different\ntypes of hand crafted features such as statistical, time\
    \ and frequency domain as well\nas wavelet transforms [479, 480, 481, 482]. Convolutional\
    \ Neural Networks (CNNs\nor Covnets) are a set of neural networks developed following\
    \ the visual cortex within\nthe brain [483]. CNNs perform operations on inputs\
    \ by introducing convolutions of\n112\nFigure 24.\nIllustration of data augmentation.\n\
    (X component of Accelerometer,\nLateral Fall)\nseveral filters with learnable\
    \ weights to gauge the importance of each datapoint in\nthe input. These layers\
    \ containing the filters and to which the input is provided are\ncalled convolutional\
    \ layers. Through these learnable weights, CNNs are able to cap-\nture temporal\
    \ and spatial dependencies of the input. Moreover, using the same filters\nfor\
    \ different inputs reduces the number of parameters as the weights are reused.\
    \ This\nallows CNNs to develop a deeper understanding of the provided input compared\
    \ to\ntypical multilayer perceptron models. CNNs have revolutionized the field\
    \ of computer\nvision where they have been used for a variety of tasks such as\
    \ classification, object\ndetection, segmentation and object counting [484, 485]\
    \ and they have also successfully\nbeen used for applications within the speech\
    \ and other time series signal application\ndomain [486, 487, 488]. In this experiment,\
    \ rather than using hand crafted features\n113\nas in the previous experiments,\
    \ a CNN has been used to perform feature extraction\nin order to take advantage\
    \ of the spatial and temporal dependency capturing capa-\nbilities of CNNs. CNNs\
    \ are usually comprised of several convolutional (Conv) layers.\nWithin a multilayer\
    \ CNN, the earlier Conv layers capture low level features from the\ninput with\
    \ more complex features being computed by the successive layers. Also,\nCNNs may\
    \ employ pooling layers between convolutional layers so as to reduce the\nsize\
    \ of the input passed on to successive layers and therefore reduce computation.\n\
    The proposed network along with the XGBoost classification stage is illustrated\
    \ in\nFigure 25.\nConv\n64 filters (3x1)\nConv\n64 filters (3x1)\nConv\n64 filters\
    \ (3x1)\nConv\n64 filters (3x1)\nAvg Pooling\nAvg Pooling\nAvg Pooling\nFlatten\n\
    XGB classification\nStage\nFigure 25. CNN Network for feature extraction and XGBoost\
    \ classification stage.\nAs seen from the figure, the network consists of four\
    \ Conv layers of 64 filters\neach.\nThese layers have filters of size 3x1 and\
    \ are used to extract features from\nraw inertial sensor measurements. Each Conv\
    \ layer is followed by a Relu activation\nfunction which applies a non-linearity\
    \ to the output of the Conv layers. To condense\nthe output of the first three\
    \ Conv layers, a pooling layer is utilized. Instead of max\npooling, average pooling\
    \ is used in this network. Max pooling picks out the largest\nvalue of the patch\
    \ of data being observed currently, in contrast, average pooling uses\nthe average\
    \ of the data being observed. Average pooling has been successfully used in\n\
    114\nplace of max pooling in a variety of scenarios [489, 490]. Normalization\
    \ is performed\nusing a batch normalization layer for each Conv layer. The output\
    \ of the last Conv\nlayer are feature maps derived from the input raw inertial\
    \ sensor measurements from\nboth the accelerometer and the gyroscope.\nClassification\n\
    Classification is carried out by using a eXtreme Gradient Boosting (XGBoost) clas-\n\
    sifier. The output from the CNN is first flattened and then provided as an input\
    \ to\nthe XGBoost stage. The parameters of the XGBoost classifier are tuned through\
    \ a\nparameter search over a range of values. We make use of an XGBoost classifier\
    \ due\nto its suitability for a large dimensional input which results from the\
    \ flattened CNN\noutput.\n2.8.3.2\nResults\nIn order to use the proposed CNN for\
    \ feature extraction, it must first be trained\naccordingly. In order to train\
    \ the network, a fully connected layer with a softmax\noutput was added as the\
    \ final stage to serve as the intermediate temporary output\ndeterminant stage.\
    \ The windowed data from the SisFall dataset was divided in to\nthree sets, train,\
    \ validation and test in a stratified manner. A learning rate of 0.01\nwas used\
    \ for the network with a batch size of 20 and the stochastic gradient descent\n\
    was used as the optimizer. Moreover, the metric chosen was the average of the\
    \ recall\nscores of all classes together, also called as the unweighted average\
    \ recall (UAR).\nThe recall is considered as one wants the system correctly classify\
    \ as many positive\nsamples for every class as possible. The final network was\
    \ determined using early\nstopping. The unweighted average recall (UAR) can be\
    \ computed as,\nUAR =\nk\nX\nn=0\n\x10\nTPn\nTPn+FNn\n\x11\nk\n(11)\nwhere k stands\
    \ for number of classes and TPn stands for the number of True\nPositive samples\
    \ in the nth class and FNn stands for number False Negative samples\nin the nth\
    \ class. Therefore, the average of the individual recall scores from all classes\n\
    was aimed to be maximized.\nData from the training set was provided to the CNN\
    \ network after performing data\naugmentation on the minority classes, during\
    \ training, the validation set was used\nto observe performance of the network\
    \ and determine the best performing instance.\nOnce training was finished, the\
    \ last fully connected classification layer was removed\nand replaced by an XGBoost\
    \ classification stage. To train the XGBoost stage, the\nweights of the final\
    \ best performing CNN model were loaded in to CNN layers of\nthe network and input\
    \ samples were then passed through them as before. Using the\noutput of the CNN\
    \ stage as an input for the XGBoost, a search was then carried\nout to determine\
    \ the optimal parameter values. After training of the XGBoost stage,\nthe completely\
    \ trained CNN-XGBoost model was tested using the test set.\nTwo\n115\nsets of\
    \ tests were performed, one while considering all ADLs as a single class versus\n\
    individual falls and the other considering common individual ADLs and individual\n\
    falls.\nOne ADL vs Individual Falls\nIn this experiment, all ADLs present in the\
    \ SisFall dataset were combined in to one\nclass to build a generic ADL versus\
    \ fall system. The results are presented in Table 44.\nIt can be observed from\
    \ the table that the ADL class has been detected with perfect\nrecall score. Among\
    \ the falls, the worst performance was observed for LHF with the\nbest performance\
    \ for FHF.\nTable 44. One ADL vs. Individual Falls.\nActivity/ Fall\nPrecision\n\
    (%)\nSensitivity/\nRecall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n91.67\n\
    100\n95.65\nBSF\n100\n95.83\n100\n97.87\nFHF\n85.37\n97.22\n99.41\n90.91\nFSF\n\
    92.86\n81.25\n99.71\n86.67\nLHF\n72.73\n66.67\n99.70\n69.57\nLSF\n89.58\n89.58\n\
    99.50\n89.58\nADL\n99.54\n100\n97.78\n99.77\nAverage\n91.44\n88.89\n99.44\n90.02\n\
    Individual ADLs vs Individual Falls\nThe results of the experiment have been shown\
    \ in Table 45.\nTable 45. Individual ADLs vs. Individual Falls.\nActivity/Fall\n\
    Precision (%)\nSensitivity/Recall (%)\nSpecificity (%)\nF1-Score (%)\nBHF\n100\n\
    75.00\n100\n85.71\nBSF\n95.83\n95.83\n99.90\n95.83\nFHF\n76.19\n88.89\n99.01\n\
    82.05\nFSF\n90.24\n77.08\n99.60\n83.15\nLSF\n86.79\n95.83\n99.30\n91.09\nLHF\n\
    75.00\n75.00\n99.71\n75.00\nJ\n96.71\n96.71\n99.01\n96.71\nS\n96.77\n96.77\n99.57\n\
    96.77\nSB\n91.18\n83.78\n99.70\n87.32\nW\n97.21\n97.63\n97.77\n97.42\nAverage\n\
    90.59\n88.25\n99.36\n89.11\nAn average recall of 88.25% was observed for the experiment.\
    \ From Table 45,\nwhen looking at the recall achieved for the individual activities,\
    \ it can be observed\nthat the best recognized activities are W and J with each\
    \ achieving a recall of around\n97%. The worst performance in terms of ADLs was\
    \ achieved for the activity SB for\nwhich a recall of 83.78% was attained. Considering\
    \ the case of falls, out of the six\nfalls, the worst recall score of 75% was\
    \ achieved for BHF and LHF whereas the best\nrecall score was of 95.83% was achieved\
    \ for BSF and LSF. The fall class FSF was also\n116\nnot identified well, achieving\
    \ a recall score of 77.08%. Furthermore, as observed from\nthe table, a high value\
    \ of specificity was obtained for all ADLs and falls indicating\nto correct determination\
    \ of negative samples for each class as well. Investigating the\nperformance of\
    \ the network from the confusion matrix, it was observed that the worst\nperforming\
    \ activity SB was equally confused as S and W, this can be attributed to\nthe\
    \ fact that the SB activity includes slight bending which could lead to confusion\
    \ for\nthe classifier. For the worst performing falls, it was observed that BHF\
    \ was confused\nwith LHF and LSF whereas LHF was confused with FHF and FSF. The\
    \ confusion\nbetween the falls is apparent from plots shown in Appendix A where\
    \ BHF has very\nsimilar accelerometer signal values to these classes.\n2.8.3.3\n\
    Discussion\nInorder to better understand the performance of the network for the\
    \ various fall\ndetection types from Tables 44 and 45, the performance of the\
    \ network for fall severity\nhas been illustrated in Figure 26. It can be observed\
    \ that soft falls are better detected\ncompared to hard falls with UARs for the\
    \ individual ADL and fall experiment being\n79.63% for hard falls and that for\
    \ soft falls is 89.58%. For the one ADL and individual\nfall experiment, the difference\
    \ is less stark, being 85.18% for hard falls and 88.88%\nfor soft falls.\n60\n\
    65\n70\n75\n80\n85\n90\n95\n100\nInd ADLs/Ind Falls\nOne ADL/Ind Falls\nPerformance\
    \ for Fall Severity\nHard Falls\nSoft Falls\nFigure 26. Network performance for\
    \ different fall directions.\nFigure 27 illustrates the performance of the network\
    \ in fall detection for the three\ndirections considered for both experiments,\
    \ regardless of severity. It can be observed\nthat falls in backward and lateral\
    \ directions are determined with equal effectiveness,\nan average recall score\
    \ (UAR) of 85.42% was achieved for both cases where as for\nthe forward direction,\
    \ the UAR was 82.99%. As can be seen, there is a only a small\ndifference (3.43%)\
    \ between the achieved UARs.\n117\n60\n65\n70\n75\n80\n85\n90\n95\n100\nOne ADL/Ind\
    \ Falls\nInd ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\n\
    Backward Falls\nLateral Falls\nFigure 27. Network performance for different fall\
    \ directions.\nIn order to further test the performance of the developed CNN-XGBoost\
    \ scheme,\ntests were performed with the CNN network architecture presented in\
    \ [430].\nWe\nchoose the technique of [430] as the authors provide very good results\
    \ for fall detection\nusing the SisFall dataset using a deep learning model. The\
    \ results for the performance\nof the considered technique in comparison to the\
    \ method presented in this experiment\nis shown Table 46 and 47. The Recall scores\
    \ have been presented. It can be observed\nthat the proposed method outperforms\
    \ the work of Casilari et. al. for all classes\nexcept LHF. Moreover, there is\
    \ a large difference in the average recall achieved.\nTable 46. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n66.67\n91.67\nBSF\n64.58\n95.83\n\
    FHF\n95.83\n97.22\nFSF\n75\n81.25\nLHF\n77.78\n66.67\nLSF\n87.5\n89.58\nADL\n\
    99.31\n100\nAverage\n80.95\n88.89\nThe mean recall score achieved is 85.69% for\
    \ [430] for the individual ADLs vs\nIndividual Fall experiment compared to more\
    \ than 88% for the proposed scheme.\nIt can be observed from Table 47 that the\
    \ proposed CNN-XGBoost combination\noutperforms the work of Casilari et al. [430]\
    \ in seven out of the ten output classes\nfor recall while achieving a similar\
    \ performance for the classes of BHF, LHFand S.\n118\nTable 47. Comparison with\
    \ State of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [430]\nProposed work\nBHF\n75.00\n75.00\nBSF\n87.50\n95.83\n\
    FHF\n80.56\n88.89\nFSF\n72.92\n77.08\nLHF\n75.00\n75.00\nLSF\n93.75\n95.83\nJ\n\
    96.30\n96.71\nS\n96.77\n96.77\nSB\n81.08\n83.78\nW\n95.04\n97.63\nAverage\n85.39\n\
    88.25\n2.8.4\nCross dataset non-binary fall detection with a ConvLSTM-attention\n\
    network\nThis section presents a discussion on fall detection with severity and\
    \ direction along\nwith ADL recognition on the SisFall and the K-Fall datasets.\
    \ Two experiments were\nconducted in this regard, one with all ADLs as one class\
    \ versus the six fall types\nconsidered and another for individual ADLs and falls.\n\
    2.8.4.1\nData Labeling\nSince this experiment also uses the K-Fall dataset, the\
    \ labeling scheme for K-Fall\nis shown in Table 48. The labeling for the SisFall\
    \ dataset was retained the same\nfor the individual ADL and fall experiment.\n\
    However, for the one ADL and fall\nexperiment, all activities were labeled as\
    \ a single class ADL.\n2.8.4.2\nMethodology\nThe methodology consists of the two\
    \ steps of data preprocessing and classifi-\ncation. Data preprocessing has been\
    \ performed in the same manner as in section\n2.8.3.1. Therefore, this section\
    \ focuses on the ConvLSTM network used. The net-\nwork used in this work is illustrated\
    \ in Figure 28. It consists of four layers, the first\nof these is the ConvLSTM\
    \ layer. The ConvLSTM layer combines the properties of\nsequential learning associated\
    \ with LSTMs with the feature extraction capabilities\nof convolutional neural\
    \ networks and they have found successful use in the human\nactivity recognition/fall\
    \ detection domain [491, 492]. By replacing the simple matrix\nmultiplication\
    \ within LSTM cells by a convolutional operation, the ConvLSTM can\ncapture spatio-temporal\
    \ dependencies as opposed to the temporal only qualities of-\nfered by LSTMs.\
    \ Such spatial information is useful for the problem of fall detection\nwhere\
    \ not only the sequence contained within the recordings is important but also\n\
    the spatial information is also important to determine things like direction for\
    \ e.g.\nThe ConvLSTM layer is followed by a Self-Attention layer to incorporate\
    \ attention\n119\nTable 48. Labeling for K-Fall Dataset\nActivity Code\nAssigned\
    \ Label\nFall code\nAssigned Label\nD01\nADL/-\nF01\nFSF\nD02\nADL/SB\nF02\nBSF\n\
    D03\nADL/SB\nF03\nLSF\nD04\nADL/-\nF04\nFSF\nD05\nADL/S\nF05\nLSF\nD06\nADL/W\n\
    F06\nFSF\nD07\nADL/W\nF07\nLSF\nD08\nADL/J\nF08\nBSF\nD09\nADL/J\nF09\nFSF\nD10\n\
    ADL/-\nF10\nLSF\nD11\nADL/-\nF11\nFHF\nD12\nADL/-\nF12\nFHF\nD13\nADL/S\nF13\n\
    FHF\nD14\nADL/S\nF14\nLHF\nD15\nADL/S\nF15\nBHF\nD16\nADL/S\n-\n-\nD17\n-/ADL\n\
    -\n-\nD18\nADL/S\n-\n-\nD19\nADL/S\n-\n-\nD20\nADL/W\n-\n-\nD21\nADL/-\n-\n-\n\
    mechanism. Through the attention layer, important parts in the signal which can\n\
    help to determine the output class correctly are identified. For the current work,\
    \ a\nglobal attention mechanism which looks at the complete sequence is used.\
    \ After the\nattention layer follow two fully connected layers, one with a relu\
    \ activation function\nand the other with a softmax function to determine the\
    \ output class.\n2.8.4.3\nResults\nTwo experiments were performed in total on\
    \ the two datasets considered. The\nexperiments consisted of a fall vs ADL scenario\
    \ and another scenario in which ADLs\nwere conisdered individually to provide\
    \ a combined fall and ADL recognition system.\nThe results for each of the experiments\
    \ have been presented in this section. The\nnetwork was trained using an Adam\
    \ optimizer for 40 epochs with early stopping\nbeing used to retain the best performing\
    \ model before running it on the test set.\nAlso, during training, the network\
    \ was tasked to maximize the average recall of all\nclasses combined to ensure\
    \ that positive samples of each class were prioritized for\ncorrect detection,\
    \ however, in addition to recall, the precision, specificity and F1-\nscore have\
    \ also been reported in the results presented for the sake of completeness.\n\
    One ADL vs Individual Falls\nIn this experiment, all the ADLs were considered\
    \ a single class while the categories for\nfalls were retained as per individual\
    \ directions and severity levels. Table 49 presents\nthe results for this experiment\
    \ with the SisFall dataset for which an average recall of\n90.02% was achieved.\
    \ It can be observed that the network is able to determine ADLs\nvery well achieving\
    \ a recall of 99.93%. Considering falls, the class LHF is the worst\n120\nConvLSTM\n\
    16 filters (3x1)\nSelf Attention\nFully connected\n(Relu)\nPeak SMV Detection\n\
    Windowing\nFully connected\n(Softmax) Classifier\nData Augmentation\nData Processing\n\
    IMU Recording (Falls and Activities) \n(ADL, FHF, FSF, BHF, BSF, LHF, LSF) \n\
    (W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nOutput Class \n(ADL, FHF, FSF, BHF,\
    \ BSF, LHF, LSF) \n(W, J, S, SB, FHF, FSF, BHF, BSF, LHF, LSF)\nFeature Extraction\n\
    Classification\nFigure 28. ConvLSTM-attention Network.\n121\nperforming fall which\
    \ has been detected with a recall of only 68.42%. It was observed\nthat falls\
    \ from LHF were confused with forward falls and LSF. The best performing\nfall\
    \ is FHF with a recall of 98.28%.\nTable 49. Results for SisFall: One ADL vs.\
    \ Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\nRecall (%)\n\
    Specificity\n(%)\nF1-score\n(%)\nBHF\n100\n94.74\n100\n97.30\nBSF\n94.74\n94.74\n\
    99.88\n94.74\nFHF\n83.82\n98.28\n99.36\n90.48\nFSF\n94.20\n84.42\n99.76\n89.04\n\
    LHF\n81.25\n68.42\n99.83\n74.29\nLSF\n89.61\n89.61\n99.53\n89.61\nADL\n99.8\n\
    99.93\n98.96\n99.87\nAverage\n91.92\n90.02\n99.62\n90.76\nTable 50. Results for\
    \ K-Fall: One ADL vs. Individual Falls\nActivity/ Fall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n100\n92.00\n100\n95.83\nBSF\n\
    98.00\n96.08\n99.90\n97.03\nFHF\n82.93\n91.89\n98.63\n87.18\nFSF\n93.41\n85.00\n\
    99.4\n89.01\nLHF\n78.57\n88.00\n99.44\n83.02\nLSF\n96.97\n96.00\n99.70\n96.48\n\
    ADL\n99.45\n99.72\n98.93\n99.59\nAverage\n92.76\n92.67\n99.43\n92.59\nTable 50\
    \ presents the results for the K-Fall dataset when all ADLs are combined in\n\
    to one class. It can be observed that like the case for the SisFall dataset, the\
    \ ADLs in\nthis case have been detected very well, resulting in a recall of 99.72%.\
    \ Considering the\nperformance of falls, the best performing fall classes were\
    \ BSF and LSF for which a\nrecall of 96% was achieved. The worst performing fall\
    \ class in this case was FSF with\na recall of 85%.\nIndividual ADL vs Individual\
    \ Falls\nIn this experiment, individual ADLs were considered as separate classes\
    \ in addition\nto the six fall classes mentioned before. This exercise was carried\
    \ out to assess the\ndesigned systems performance as a combined ADL recognition\
    \ and fall detection\nsystem. The result for the SisFall dataset are presented\
    \ in Table 51. The average\nrecall achieved for this experiment using the SisFall\
    \ dataset is 91.49%.\nConsidering fall performance, it can be observed from Table\
    \ 51 that the class\nBSF is the best recognized fall, having a recall of 94.74%\
    \ with the fall LHF being\nthe worst recognized one with a recall of 73.68%. The\
    \ best recognized ADL is the\nclass W with a near perfect recall of 99.06%. The\
    \ worst recognized ADL is S with\n96.98% which is not a large difference compared\
    \ to the performance for falls. Table\n?? presents the results of the network\
    \ for the K-Fall dataset for this experiment. It\n122\nTable 51. Results for SisFall:\
    \ Individual ADLs vs. Individual Falls\nActivity/\nFall\nPrecision\n(%)\nSensitivity/\n\
    Recall (%)\nSpecificity\n(%)\nF1-score\n(%)\nBHF\n89.47\n89.47\n99.88\n89.47\n\
    BSF\n100\n94.74\n100\n97.30\nFHF\n86.89\n92.98\n99.51\n89.83\nFSF\n94.37\n87.01\n\
    99.75\n90.54\nLHF\n70.00\n73.68\n99.64\n71.79\nLSF\n88.89\n93.51\n99.44\n91.14\n\
    J\n98.44\n97.42\n99.53\n97.93\nS\n97.97\n96.98\n99.73\n97.47\nSB\n94.74\n90.00\n\
    99.81\n92.31\nW\n98.00\n99.06\n98.39\n98.53\nAverage\n91.88\n91.49\n99.57\n91.63\n\
    can be observed that in this case, the best performance for the fall categories\
    \ is both\nfor BSF and LSF\neach of which have a recall of 98%. The worst performing\
    \ fall is\nthe class BHF , it was observed that samples from this class were confused\
    \ with the\nclass BSF. For the case of ADLs, the best performing ADL for the K-Fall\
    \ dataset is\nSB with a recall of 97.5% with the worst being the class J.\n2.8.4.4\n\
    Discussion\nWhen comparing the performance of ADLs and falls overall for both\
    \ experiments,\nit can be observed that ADL recognition performance was much better\
    \ than the\nperformance for fall detection. For both experiments conducted, when\
    \ comparing the\nperformance of the network across datasets, the network performs\
    \ better on the K-Fall\ndataset compared to the SisFall dataset. This could be\
    \ attributed to the difference\nin the volunteer make up of the participants as\
    \ K-Fall mostly had young people\nvolunteering to perform falls whereas SisFall\
    \ contains a wide variety of age groups\nand gender make up in its volunteers.\
    \ To gather further insights in to the performance\nof the network in terms of\
    \ fall detection for the two experiments conducted across both\ndatasets, Figure\
    \ 29 illustrates the networks performance for falls for both datasets\nand experiments.\
    \ An average recall of 88.37% was achieved for the SisFall dataset\nand 91.49%\
    \ for the K-Fall dataset for the one ADL vs individual falls experiment\nand 88.57%\
    \ and 91.33% respectively for the individual ADL and individual falls\nexperiment.\
    \ It can be observed that the classes LSF, FHF and BSF were recognized\nvery well,\
    \ each achieving a recall of nearly 90% or higher. The class FHF was also\ndetected\
    \ sufficiently well, achieving an average recall of more than 86% across all\n\
    experiments. For SisFall, the least performing class was LHF and for K-Fall it\
    \ was\nBHF.\nFigure 30 investigates the performance of the network when considering\
    \ different\nfall severity levels for all the experiments. It can be observed\
    \ that soft falls have\nbeen consistently better recognized compared to hard falls.\
    \ This difference is largest\n(6%) when individual ADLs are considered as separate\
    \ classes for both datasets. For\nthe experiment where ADLs are grouped in to\
    \ a single class, there is only a slight\n123\n60\n65\n70\n75\n80\n85\n90\n95\n\
    100\nBHF\nBSF\nFHF\nFSF\nLHF\nLSF\nFall Results: Both Experiments\nSisFall One\
    \ ADL/Individual Falls\nSisFall Individual ADLs/Individual Falls\nKfall One ADL/Individual\
    \ Falls\nKfall Individual ADLs/Individual Falls\nFigure 29. Fall detection performance\
    \ for both experiments.\ndifference observed between the fall severity levels\
    \ for the K-Fall dataset whereas for\nSisFall, there is still a significant difference\
    \ of more than 5% between the detection\nof soft and hard falls.\nSisFall\nKfall\n\
    60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall One ADL/Ind Falls\nKFall One ADL/Ind\
    \ Falls\nSisFall Ind ADLs/Ind Falls\nKFall Ind ADLs/Ind Falls\nPerformance for\
    \ Fall Severity\nHard Falls\nSoft Falls\nFigure 30. Fall severity performance.\n\
    In Figure 31, the results from the experiments for fall direction have been illus-\n\
    trated. In this case, the performance of the network for tests using SisFall yield\
    \ best\nresults for falls in the backward direction with falls in the lateral\
    \ directions being\nrecognized the worst. In contrast, for the K-Fall dataset,\
    \ falls in the lateral direc-\n124\n60\n65\n70\n75\n80\n85\n90\n95\n100\nSisFall\
    \ One ADL/Ind Falls\nKfall One ADL/Ind Falls\nSisFall Ind ADLs/Ind Falls\nKfall\
    \ Ind ADLs/Ind Falls\nPerformance for Fall Directions\nForward Falls\nBackward\
    \ Falls\nLateral Falls\nFigure 31. Fall direction performance.\ntion have been\
    \ detected quite well, followed by backfward falls and forward falls. In\norder\
    \ to gauge the performance of the network, the work of We et al. [459] was\nused\
    \ as a comparison as they also utilize sequential modeling in their work and cater\n\
    to non-binary fall detection as well. Table 53 and 54 presents the results for\
    \ both\nexperiments with the cases where the work of Wu et al. outperforms the\
    \ presented\nmethod highlighted. It can be observed that the presented method\
    \ outperforms the\nmethod of [459] sufficiently well. Another thing to note is\
    \ that as observed with the\nresults presented, a similar pattern of variation\
    \ was observed for both data sets with\nrespect to the two experiments in that\
    \ a degradation was observed for experiments\nfor K-Fall whereas an improvement\
    \ was observed for SisFall.\nTable 53. Comparison with State of the art (Individual\
    \ ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall (%)\n[]\nWork\
    \ of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n63.16\n94.74\n92.00\n\
    92.00\nBSF\n86.84\n94.74\n96.08\n96.08\nFHF\n77.59\n98.28\n83.78\n91.89\nFSF\n\
    76.62\n84.42\n90.00\n85.00\nLHF\n68.42\n68.42\n64.00\n88.00\nLSF\n77.92\n89.61\n\
    93.00\n96.00\nADL\n98.78\n99.93\n99.58\n99.72\nAverage\n78.48\n90.02\n88.35\n\
    92.67\n3\nConclusion\nFall detection is an important task in the field of ambient\
    \ assisted living. Towards this\nend, four experiments were performed in this\
    \ chapter. In the first experiemt, a fall\n125\nTable 54. Comparison with State\
    \ of the art (Individual ADLs vs. Individual Falls.)\nActivity/Fall\nSensitivity/Recall\
    \ (%)\n[]\nWork of [459]\nProposed work\nWork of [459]\nProposed work\nBHF\n58.33\n\
    89.47\n76.00\n76.00\nBSF\n87.50\n94.74\n100\n98.04\nFHF\n83.33\n92.98\n91.89\n\
    95.95\nFSF\n81.25\n87.01\n89.00\n88.00\nLHF\n41.67\n73.68\n64.00\n92.00\nLSF\n\
    81.25\n93.51\n95.00\n98.00\nJ\n98.77\n97.42\n55.45\n87.13\nS\n88.71\n96.98\n81.17\n\
    90.91\nSB\n83.78\n90.00\n87.50\n97.50\nW\n96.12\n99.06\n87.30\n95.24\nAverage\n\
    80.07\n91.48\n82.74\n91.88\nTable 55. Results for the four Experiments for the\
    \ SisFall dataset (F1-Score[%])\nActivity/Fall\nExp. 1\nExp. 2\nExp. 3 (One ADL)\n\
    Exp. 3 (Ind ADLs)\nExp. 4 (One ADL)\nExp. 4 (Ind ADLs)\nBHF\n87.27\n83.02\n95.65\n\
    85.71\n97.30\n89.47\nBSF\n95.08\n90.76\n97.87\n82.05\n94.74\n97.30\nFHF\n72.43\n\
    80.47\n90.91\n75.00\n90.48\n89.83\nFSF\n73.25\n77.18\n86.67\n95.83\n89.04\n90.54\n\
    LHF\n66.67\n67.80\n69.57\n83.15\n74.29\n71.79\nLSF\n84.65\n82.73\n89.58\n91.09\n\
    89.61\n91.14\nJ\n-\n98.27\n96.71\n-\n97.93\nS\n-\n96.20\n96.77\n-\n97.47\nSB\n\
    -\n85.71\n87.32\n-\n92.31\nW\n-\n98.46\n97.42\n-\n98.53\nADL\n-\n-\n99.77\n-\n\
    99.93\n-\nOverall Average\n-\n86.06\n90.02\n89.11\n90.76\n91.63\nFall Average\n\
    79.89\n80.32\n88.38\n85.47\n89.24\n88.34\nADL Average\n-\n94.66\n99.77\n94.55\n\
    99.87\n96.56\nonly detection system that considers the direction as well as the\
    \ severity of falls was\npresented. Inertial measurement sensor data from a publicly\
    \ available dataset was\nused to carry out this task. Following a typical machine\
    \ learning pipeline, the data\nwas first preprocessed by extracting equal duration\
    \ segments from the accelerometer\nand gyroscope sensor signals based on the acceleration\
    \ magnitude. This is followed\nby the computation of various time and frequency\
    \ domain features for each of these\nsegments. The next step is feature selection\
    \ and classification which is performed by\nusing four different machine learning\
    \ algorithms popular in fall detection systems.\nFirst, a baseline performance\
    \ is established and then feature reduction is performed\naiming to maintain or\
    \ improve algorithm performance by elimination of redundant\nfeatures. It was\
    \ observed that the weighted F1-score improved slightly (by just over\n1%) for\
    \ both experiments.\nThe other three experiments considered activity of daily\
    \ living and fall detection\nsimultaneously. For the second experiment, utilizing\
    \ inertial sensor data, a hierarchi-\ncal classification framework using wavelets\
    \ and adaptive pooling was presented. To\nachieve this, inertial sensor recordings\
    \ (accelerometer and gyroscope) from the Sis-\nFall dataset were utilized and\
    \ windowed segments were extracted from each recording.\nFollowing this, a level-4\
    \ haar wavelet was used to extract wavelet coefficients from\nthese windowed segments\
    \ and then 4-2-1 1-D Spatial Pyramid pooling was used to\n126\nsummarize the output\
    \ of the wavelet feature coefficients at each approximation and\ndetail level\
    \ before the max pooled coefficients were concatenated to form the final\nfeature\
    \ vector. A hierarchical classification scheme was then used consisting of three\n\
    classification stages, one for determining individual ADLs versus a generic fall\
    \ and the\nsecond and third for fall direction and severity respectively with\
    \ both voting together\nto determine the severity and direction of a fall. Towards\
    \ this end, experiments were\nconducted to determine the most appropriate size\
    \ of the observation window as well as\nsensing modality used. It was found that\
    \ for the proposed setup, a window duration\nof 3 seconds produced the best results\
    \ while using data from both the accelerometer\nand gyroscope. In the third experiment,\
    \ Inertial Measurement Unit (accelerometer\nand gyroscope) data from the SisFall\
    \ dataset is first windowed into non-overlapping\nsegments of duration 3 seconds.\
    \ After suitable data augmentation for the minority\nclasses, the windowed segments\
    \ are passed to a Convolutional Neural Network for\nfeature extraction. The CNN\
    \ is trained to maximize the unweighted average recall\nfor the validation partition.\
    \ Once the CNN is trained, an XGBoost last stage is used\nfor classification.\
    \ Experiments conducted on the test set achieve an unweighted aver-\nage recall\
    \ of 88% for both the one ADL versus individual falls and individual ADLs\nversus\
    \ fall experiments. In comparison with other techniques used for this task, the\n\
    proposed scheme produces sufficiently better results, thereby demonstrating the\
    \ effi-\ncacy of the proposed method. Lastly, a ConvLSTM network with attention\
    \ has been\nused for detection of falls considering fall direction and severity.\
    \ Using data from the\nSisFall and the K-Fall datasets, two experiments were conducted\
    \ on inertial sensor\ndata. The first considered falls versus ADLs and the other\
    \ combined ADL recognition\nand fall detection. Results for both experiments achieved\
    \ an average recall of more\nthan 90%. The results from the cross-dataset performance\
    \ indicate to the robustness\nof the designed methodology.\nTable 55 presents\
    \ the F-1 scores for the four experiments considering fall detection\nwith direction\
    \ and severity for the SisFall dataset. For experiment 1, only the fall\ndetection\
    \ with direction and severity part has been reported. A progression can be\nobserved\
    \ in the detection of falls wherein an increase of nearly 8.5% in the average\n\
    F1-score was achieved.\n127\nCHAPTER VI\nCONCLUSION AND FUTURE WORK\n1\nConclusion\n\
    This dissertation provided a coverage of the use of Internet of Things towards\
    \ the\ndevelopment of smart communities. While doing so, the main applications\
    \ of ML/DL\nalgorithms as well as optimization algorithms were discussed and mapped.\
    \ Further-\nemore, other technological components of the IoT such as sensing,\
    \ communication,\nsecurity and privacy were also talked about. Lastly, considering\
    \ the case of smart\nhealth, specifically fall detection, experimentation and\
    \ analysis was conducted and\nthe results presented.\nIn this regard, the usage\
    \ of inertial sensor data has been very popular as they do\nnot restrict a users\
    \ movement and are also easy to deploy compared to other methods.\nFour approaches\
    \ that considered fall detection with direction and severity were pre-\nsented.\
    \ In this regard, four experiments were conducted, first was the development\n\
    of a fall only detection system whereas the other three were for a combined ADL\
    \ and\nfall system. For the other three experiments, a hierarchical and two deep\
    \ learning\nbased approaches were tested. The designed methodologies were compared\
    \ to the\nstate of the art and were found to outperform them.\n2\nContribution\n\
    The Internet of Things has spearheaded tremendous change in society by allowing\
    \ for\ncapturing measurements in different facets of our daily lives. With such\
    \ a fundamental\nimpact being made, it is pertinent that researchers commit to\
    \ analyzing the current\npenetration that IoT possesses in city operation and\
    \ also providing impetuses for\nnew and novel application development. This work\
    \ aims to address these needs by\ndiscussing the use and role of the internet\
    \ of things in smart communities.\nThe\ncontribution of the work are as follows:\n\
    1. Provide a coverage of the IoT based smart city ecosystem in terms of the tech-\n\
    nologies utilized. Discussion has been provided about the sensors, communi-\n\
    cation technologies as well as the IoT architectures that enable IoT smart city\n\
    development. Finally a review of the security and privacy issues was also dis-\n\
    cussed.\n2. Present a study of the uses of ML and DL methods for different applications\
    \ of\nsmart cities in an IoT context. To this end, the type of architecture employed\n\
    and the data source type were also covered.\n128\n3. The use of optimization algorithms\
    \ in IoT smart cities has been provided. To\nthe best of our knowledge, this is\
    \ the first comprehensive review of optimization\nalgorithms in IoT Smart Cities.\n\
    4. Considering the case of smart health, methodologies have been devised for the\n\
    novel case of fall detection with direction and severity detection. In this respect,\n\
    the performance time, frequency domain and statistical features on inertial\n\
    sensor data has been analyzed and presented.\n5. A combined activity of daily\
    \ living and fall detection framework with fall di-\nrection and severity consideration\
    \ has been discussed.\nFour approaches in\nthis regard have been presented, one\
    \ utilizing time-frequency information us-\ning wavelets along with a hierarchical\
    \ classification scheme, third a Convolu-\ntional Neural Network-eXtreme Gradient\
    \ Boost combination and the last being\na ConvLSTM has been proposed. The proposed\
    \ approaches has been shown to\noutperform the state of the art in the field.\n\
    3\nFuture Work\nThe IoT is revolutionizing development of smart city applications.\
    \ There are several\nopportunities. Some of these are listed below:\n• IoT Systems\
    \ for Smart Cities\n– A major research area is in the security and privacy of\
    \ IoT in smart cities in\nterms of encryption techniques, authentication protocols,\
    \ data anonymiza-\ntion techniques and other methods to prevent unvalidated access\
    \ to the IoT\nnetwork. As mentioned before technologies such as blockchain could\
    \ help\nintroduce access tracking and control, secure device discovery, prevention\n\
    of spoofing, data loss while ensuring that end to end encryption is also\nused.\n\
    – Of the data transfer standards developed till now for IoT, many are not\ncompatible\
    \ with each other. Work needs to be carried out in this regard to\nenable intercommunication\
    \ of sensor nodes using different protocols while\nutilizing low power, which\
    \ is imperative for sensor nodes in the network.\n– Another area to work on, is\
    \ the development of efficient storage techniques\nand low power hardware which\
    \ can reduce operational costs. From a de-\nployment perspective, decentralized\
    \ systems have been proposed as the\nbest solutions to increase reliability of\
    \ the application. Techniques such as\nfederated learning allow for decentralized\
    \ DL system deployments.\n• AI/Combinatorial Optimization in IoT Smart Cities\n\
    – The development of data fusion techniques that can make the use of het-\nerogeneous\
    \ data sources easier, intelligent data reduction/feature selection\nmethods to\
    \ ensure that redundant or ’uninteresting’ data is not part of the\n129\nAI development\
    \ pipeline. This will help in a quicker turnaround time as\nwell as improved performance\
    \ of deployments. Current methods need to be\nused as well as new ones be researched\
    \ for making ML and DL algorithms\nmore explainable to suit the various applications\
    \ in a smart city.\n– Hybrid and novel optimization methodologies (for e.g. graywolf\
    \ optimiza-\ntion [493]) which combine characteristics of multiple heuristic schemes\n\
    could potentially outperform singular methodologies.\nThere have been\nseveral\
    \ works which combine multiple optimization techniques.\n– Reinforcement learning\
    \ (RL) has the potential to provide solutions to com-\nbinatorial optimization\
    \ problems as covered in [494]. The idea is to use\nmachine learning and reinforcement\
    \ learning to get rid of human created\nheurists which may lead to optimizations\
    \ towards local optimums. Agents\ncan be trained to search for these heuristics\
    \ to automate the process.\n• Smart Health: Fall detection\n– The addition of\
    \ additional sensor modalities apart from intertial sensor\nmeasurements might\
    \ help improve performance for the worst detected\nclasses from the experiments\
    \ conducted. Various authors have incorpo-\nrated medical or pressure sensors\
    \ in their fall detection systems.\nData\nfrom these sensors can be used together\
    \ as an input to a deep learning\nnetwork. This additional information gathered\
    \ for subjects while under-\ngoing a fall could also describe valuable health\
    \ parameters that can be used\nfor diagnosis or early detection of ailments which\
    \ might be the underlying\ncause of falls.\n– Another work opportunity in the\
    \ data science domain would be the as-\nsessment of this problem considering a\
    \ data centric approach, where, in\ncontrast to a model centric approach where\
    \ the focus is on developing the\nbest model, data centric focuses on working\
    \ with data to improve applica-\ntion performance using systematic procedures\
    \ for labeling, augmentation\netc. Such systematic procedures and qualitative\
    \ data analysis would aid\nin cross-dataset algorithm deployment as well.\n130\n\
    REFERENCES\n[1]\nWorldometers, “World population forecast - worldometers,” (2019).\n\
    [2]\nH. Ahvenniemi, A. Huovila, I. Pinto-Sepp¨a, and M. Airaksinen, “What\nare\
    \ the differences between sustainable and smart cities?” Cities 60, 234–\n245\
    \ (2017).\n[3]\nUnited Nations, “About the Sustainable Development Goals - United\
    \ Na-\ntions Sustainable Development,” .\n[4]\nP. Cardullo and R. Kitchin, “Being\
    \ a ‘citizen’ in the smart city: up and\ndown the scaffold of smart citizen participation\
    \ in dublin, ireland,” Geo-\nJournal 84, 1–13 (2019).\n[5]\nJ. Desdemoustier,\
    \ N. Crutzen, and R. Giffinger, “Municipalities’ under-\nstanding of the smart\
    \ city concept: An exploratory analysis in belgium,”\nTechnological Forecasting\
    \ and Social Change 142, 129–141 (2019).\n[6]\nM. S. Khan, M. Woo, K. Nam, and\
    \ P. K. Chathoth, “Smart city and\nsmart tourism: A case of dubai,” Sustainability\
    \ (Switzerland) 9 (2017).\n[7]\nD. Wu, N. Jiang, W. Du, K. Tang, and X. Cao, “Particle\
    \ swarm optimiza-\ntion with moving particles on scale-free networks,” IEEE Transactions\
    \ on\nNetwork Science and Engineering 7, 497–506 (2018).\n[8]\nM. L. Finlayson\
    \ and E. W. Peterson, “Falls, aging, and disability,” Phys-\nical Medicine and\
    \ Rehabilitation Clinics 21, 357–373 (2010).\n[9]\nB. M. Kistler, J. Khubchandani,\
    \ G. Jakubowicz, K. Wilund, and J. Sos-\nnoff, “Peer reviewed: Falls and fall-related\
    \ injuries among us adults aged\n65 or older with chronic kidney disease,” Preventing\
    \ chronic disease 15\n(2018).\n[10]\nL. Bolton, “Preventing fall injury.” Wounds:\
    \ a compendium of clinical\nresearch and practice 31, 269–271 (2019).\n[11]\n\
    Y. K. Haddad, G. Bergen, and C. Florence, “Estimating the economic\nburden related\
    \ to older adult falls by state,” Journal of public health\nmanagement and practice:\
    \ JPHMP 25, E17 (2019).\n[12]\nC. S. Florence, G. Bergen, A. Atherly, E. Burns,\
    \ J. Stevens, and C. Drake,\n“Medical costs of fatal and nonfatal falls in older\
    \ adults,” Journal of the\nAmerican Geriatrics Society 66, 693–698 (2018).\n[13]\n\
    A. Bourke, J. O’brien, and G. Lyons, “Evaluation of a threshold-based tri-\naxial\
    \ accelerometer fall detection algorithm,” Gait & posture 26, 194–199\n(2007).\n\
    131\n[14]\nR. G. Hollands, “Will the real smart city please stand up? intelligent,\n\
    progressive or entrepreneurial?” City 12, 303–320 (2008).\n[15]\nL. G. Anthopoulos\
    \ and C. G. Reddick, “Understanding electronic gov-\nernment research and smart\
    \ city: A framework and empirical evidence,”\nInformation Polity 21, 99–117 (2016).\n\
    [16]\nZ. Khan, A. Anjum, K. Soomro, and M. A. Tahir, “Towards cloud based\nbig\
    \ data analytics for smart future cities,” Journal of Cloud Computing\n4 (2015).\n\
    [17]\nA. Koubaa, A. Aldawood, B. Saeed, A. Hadid, M. Ahmed, A. Saad,\nH. Alkhouja,\
    \ A. Ammar, and M. Alkanhal, “Smart palm: An iot frame-\nwork for red palm weevil\
    \ early detection,” Agronomy 10, 1–21 (2020). No\nML or dL used.\n[18]\nM. O’Grady,\
    \ D. Langton, and G. O’Hare, “Edge computing: A tractable\nmodel for smart agriculture?”\n\
    Artificial Intelligence in Agriculture 3,\n42–51 (2019).\n[19]\nI. Rojek and J.\
    \ Studzinski, “Detection and localization of water leaks in\nwater nets supported\
    \ by an ict system with artificial intelligence methods\nas away forward for smart\
    \ cities,” Sustainability (Switzerland) 11 (2019).\n[20]\nK. Pardini, J. J. Rodrigues,\
    \ S. A. Kozlov, N. Kumar, and V. Furtado, “Iot-\nbased solid waste management\
    \ solutions: A survey,” Journal of Sensor and\nActuator Networks 8 (2019).\n[21]\n\
    J. Dutta, C. Chowdhury, S. Roy, A. I. Middya, and F. Gazi, “Towards\nsmart city:\
    \ Sensing air quality in city based on opportunistic crowd-\nsensing,” ACM International\
    \ Conference Proceeding Series (2017).\n[22]\nF. Al-Turjman and A. Malekloo, “Smart\
    \ parking in iot-enabled cities: A\nsurvey,” Sustainable Cities and Society 49\
    \ (2019).\n[23]\nE. Shirazi and S. Jadid, “Autonomous self-healing in smart distribution\n\
    grids using multi agent systems,” IEEE Transactions on Industrial Infor-\nmatics\
    \ 3203, 1–11 (2018).\n[24]\nR. V. Andre˜ao, M. Athayde, J. Boudy, P. Aguilar,\
    \ I. de Araujo, and\nR. Andrade, “Raspcare: A telemedicine platform for the treatment\
    \ and\nmonitoring of patients with chronic diseases,” in “Assistive Technologies\n\
    in Smart Cities,” (IntechOpen London, UK, 2018).\n[25]\nP. A. Keane and E. J.\
    \ Topol, “With an eye to ai and autonomous diag-\nnosis,” npj Digital Medicine\
    \ 1, 10–12 (2018).\n[26]\nG. Trencher and A. Karvonen, “Stretching “smart”: advancing\
    \ health\nand well-being through the smart city agenda,” Local Environment 24,\n\
    610–627 (2019).\n132\n[27]\nB. R. Haverkort and A. Zimmermann, “Smart industry:\
    \ How ict will\nchange the game!” IEEE Internet Computing 21, 8–10 (2017).\n[28]\n\
    F. Tao, J. Cheng, and Q. Qi, “Iihub: An industrial internet-of-things\nhub toward\
    \ smart manufacturing based on cyber-physical system,” IEEE\nTransactions on Industrial\
    \ Informatics 14, 2271–2280 (2018).\n[29]\nP. Trakadas, P. Simoens, P. Gkonis,\
    \ L. Sarakis, A. Angelopoulos, A. P.\nRamallo-Gonz´alez, A. Skarmeta, C. Trochoutsos,\
    \ D. Calvo, T. Pariente,\nK. Chintamani, I. Fernandez, A. A. Irigaray, J. X. Parreira,\
    \ P. Petrali,\nN. Leligou, and P. Karkazis, “An artificial intelligence-based\
    \ collaboration\napproach in industrial iot manufacturing: Key concepts, architectural\n\
    extensions and potential applications,” Sensors (Switzerland) 20, 1–20\n(2020).\
    \ Ni as this is about architecture of AI in to Smart industry.\n[30]\nJ. Wan,\
    \ J. Yang, Z. Wang, and Q. Hua, “Artificial intelligence for cloud-\nassisted\
    \ smart factory,” IEEE Access 6, 55419–55430 (2018).\n[31]\nY. Huang, Z. Dang,\
    \ Y. Choi, J. Andrade, and A. Bar-ilan, “High-precision\nsmart system on accelerometers\
    \ and inclinometers for structural health\nmonitoring: development and applications,”\
    \ in “2018 12th France-Japan\nand 10th Europe-Asia Congress on Mechatronics,”\
    \ (IEEE, 2018), pp. 52–\n57.\n[32]\nS. G. Farag, “Application of smart structural\
    \ system for smart sustainable\ncities,” in “2019 4th MEC International Conference\
    \ on Big Data and\nSmart City (ICBDSC),” (2019), pp. 1–5.\n[33]\nY. Wang, S. Ram,\
    \ F. Currim, E. Dantas, and L. A. Sab´oia, “A big data\napproach for smart transportation\
    \ management on bus network,” IEEE\n2nd International Smart Cities Conference:\
    \ Improving the Citizens Qual-\nity of Life, ISC2 2016 - Proceedings pp. 0–5 (2016).\n\
    [34]\nA. Lele, “Internet of things (iot),” Smart Innovation, Systems and Tech-\n\
    nologies 132, 187–195 (2019).\n[35]\nP. Mell and T. Grance, “The nist-national\
    \ institute of standars and\ntechnology- definition of cloud computing,” NIST\
    \ Special Publication 800-\n145 p. 7 (2011).\n[36]\nJ. B.-M. Numhauser, “Fog computing\
    \ introduction to a new cloud evolu-\ntion,” University of Alcal´a (2012).\n[37]\n\
    M. Aazam, S. Zeadally, and K. A. Harras, “Fog computing architecture,\nevaluation,\
    \ and future research directions,” IEEE Communications Mag-\nazine 56, 46–52 (2018).\n\
    [38]\nH. El-Sayed, S. Sankar, M. Prasad, D. Puthal, A. Gupta, M. Mohanty,\nand\
    \ C. T. Lin, “Edge of things: The big picture on the integration of\nedge, iot\
    \ and the cloud in a distributed computing environment,” IEEE\nAccess 6, 1706–1717\
    \ (2017).\n133\n[39]\nA. Yousefpour, C. Fung, T. Nguyen, K. Kadiyala, F. Jalali,\
    \ A. Niakan-\nlahiji, J. Kong, and J. P. Jue, “All one needs to know about fog\
    \ computing\nand related edge computing paradigms: A complete survey,” Journal\
    \ of\nSystems Architecture 98, 289–330 (2019).\n[40]\nB. L. R. Stojkoska and K.\
    \ V. Trivodaliev, “A review of internet of things\nfor smart home: Challenges\
    \ and solutions,” Journal of Cleaner Production\n140, 1454–1464 (2017). The authors\
    \ perform a literature reiew of the\narchitectures available for IoT in the Smart\
    \ home. After doing so, they\nprovide an architecture of their own which has been\
    \ derived from the other\narchitectures discussed. ¡br/¿¡br/¿*They provide a good\
    \ description of the\ntypes of appliances.\n[41]\nA. Saini and A. Malik, “Routing\
    \ in internet of things: A survey,” Com-\nmunication and Computing Systems - Proceedings\
    \ of the International\nConference on Communication and Computing Systems, ICCCS\
    \ 2016 I,\n855–860 (2017).\n[42]\nE. Casilari, J. A. Santoyo-Ram´on, and J. M.\
    \ Cano-Garc´ıa, “On the hetero-\ngeneity of existing repositories of movements\
    \ intended for the evaluation\nof fall detection systems,” Journal of Healthcare\
    \ Engineering 2020 (2020).\nThe authors in EC20 analyse various datasets which\
    \ contain accelerom-\neter signal measurements for people performing fall activities.\
    \ Within\nthis:¡br/¿¡br/¿Table 1 lists the datasets considered¡br/¿Table 2 illustrates\n\
    the characteristics of the collected data (duration etc) and the partici-\npants¡br/¿Table\
    \ 3 discusses the sampling rate and other properties of the\ndata ¡br/¿¡br/¿The\
    \ analysis involves extracting sliding time windows of\n0.5 seconds from the signals\
    \ and calculate the window with the maximum\ndifference of acceleration as described\
    \ in ref [60] to determine the win-\ndow where the fall has taken place. Once\
    \ this is done, they calculate 12\nstatistical features from the data.\n[43]\n\
    M. Rahnemoonfar and C. Sheppard, “Deep count : Fruit counting based\non deep simulated\
    \ learning,” Sensors 17, 1–12 (2017).\n[44]\nD. Thakker, B. K. Mishra, A. Abdullatif,\
    \ and S. Mazumdar, “Explainable\nartificial intelligence for developing smart\
    \ cities solutions,” Smart Cities\n3, 1353–1382 (2020).\n[45]\nA. Rahman, M. S.\
    \ Hossain, N. A. Alrajeh, and N. Guizani, “B5g and\nexplainable deep learning\
    \ assisted healthcare vertical at the edge : Covid-\n19 perspective,” IEEE Network\
    \ 34, 98–105 (2020).\n[46]\nM. Janssen, S. Luthra, S. Mangla, N. P. Rana, and\
    \ Y. K. Dwivedi, “Chal-\nlenges for adopting and implementing iot in smart cities,”\
    \ Internet Re-\nsearch ahead-of-p (2019).\n[47]\nR. S´anchez-Corcuera, A. Nu˜nez-Marcos,\
    \ J. Sesma-Solance, A. Bilbao-\nJayo, R. Mulero, U. Zulaika, G. Azkune, and A.\
    \ Almeida, “Smart cities\n134\nsurvey: Technologies, application domains and challenges\
    \ for the cities\nof the future,” International Journal of Distributed Sensor\
    \ Networks 15\n(2019).\n[48]\nB. N. Silva, M. Khan, and K. Han, “Towards sustainable\
    \ smart cities: A\nreview of trends, architectures, components, and open challenges\
    \ in smart\ncities,” Sustainable Cities and Society 38, 697–713 (2018).\n[49]\n\
    W. Ejaz and A. Anpalagan, “Internet of things for smart cities: overview\nand\
    \ key challenges,” Internet of Things for Smart Cities pp. 1–15 (2019).\n[50]\n\
    G. Marques, N. Garcia, and N. Pombo, “A survey on iot: architectures,\nelements,\
    \ applications, qos, platforms and security concepts,” in “Ad-\nvances in Mobile\
    \ cloud computing and big data in the 5G era,” (Springer,\n2017), pp. 115–130.\n\
    [51]\nK. Zhang, J. Ni, K. Yang, X. Liang, J. Ren, and X. S. Shen, “Security\n\
    and privacy in smart city applications: Challenges and solutions,” IEEE\nCommunications\
    \ Magazine 55, 122–129 (2017).\n[52]\nY. Mehmood, F. Ahmad, I. Yaqoob, A. Adnane,\
    \ M. Imran, and\nS. Guizani, “Internet-of-things-based smart cities: Recent advances\
    \ and\nchallenges,” IEEE Communications Magazine 55, 16–24 (2017).\n[53]\nW. Rong,\
    \ Z. Xiong, D. Cooper, C. Li, and H. Sheng, “Smart city archi-\ntecture: A technology\
    \ guide for implementation and design challenges,”\nChina Communications 11, 56–69\
    \ (2014).\n[54]\nE. Ahmed, I. Yaqoob, A. Gani, M. Imran, and M. Guizani, “Internet-of-\n\
    things-based smart environments: State of the art, taxonomy, and open\nresearch\
    \ challenges,” IEEE Wireless Communications 23, 10–16 (2016).\n[55]\nS. Chen,\
    \ H. Xu, D. Liu, B. Hu, and H. Wang, “A vision of iot: Ap-\nplications, challenges,\
    \ and opportunities with china perspective,” IEEE\nInternet of Things Journal\
    \ 1, 349–359 (2014).\n[56]\nB. Ahlgren, M. Hidell, and E. C. Ngai, “Internet of\
    \ things for smart\ncities: Interoperability and open data,” IEEE Internet Computing\
    \ 20,\n52–56 (2016).\n[57]\nI. Lee and K. Lee, “The internet of things (iot):\
    \ Applications, investments,\nand challenges for enterprises,” Business Horizons\
    \ 58, 431–440 (2015).\n[58]\nC. M. Morais, D. Sadok, and J. Kelner, “An iot sensor\
    \ and scenario\nsurvey for data researchers,” Journal of the Brazilian Computer\
    \ Society\n25 (2019).\n[59]\nA. Sharma and M. Sinha, “A differential evolution-based\
    \ routing algo-\nrithm for multi-path environment in mobile ad hoc network,” Interna-\n\
    tional Journal of Hybrid Intelligence 1, 23–40 (2019).\n135\n[60]\nG. P. Hancke,\
    \ B. de Carvalho de Silva, and G. P. Hancke, The role of\nadvanced sensing in\
    \ smart cities, vol. 13 (Multidisciplinary Digital Pub-\nlishing Institute, 2013).\n\
    [61]\nM. Penza, D. Suriano, M. G. Villani, L. Spinelle, and M. Gerboles, “To-\n\
    wards air quality indices in smart cities by calibrated low-cost sensors\napplied\
    \ to networks,” Proceedings of IEEE Sensors 2014-Decem, 2012–\n2017 (2014).\n\
    [62]\nF. Folianto, Y. S. Low, and W. L. Yeow, “Smartbin: Smart waste man-\nagement\
    \ system,” 2015 IEEE 10th International Conference on Intelligent\nSensors, Sensor\
    \ Networks and Information Processing, ISSNIP 2015 pp.\n1–2 (2015).\n[63]\nG.\
    \ Bedi, G. K. Venayagamoorthy, R. Singh, R. R. Brooks, and K. C.\nWang, “Review\
    \ of internet of things (iot) in electric power and energy\nsystems,” IEEE Internet\
    \ of Things Journal 5, 847–870 (2018).\n[64]\nE. Y. Song, G. J. Fitzpatrick, and\
    \ K. B. Lee, “Smart sensors and standard-\nbased interoperability in smart grids,”\
    \ IEEE Sensors Journal 17, 7723–\n7730 (2017).\n[65]\nA. A. Abdellatif, A. Mohamed,\
    \ C. F. Chiasserini, M. Tlili, and A. Erbad,\n“Edge computing for smart health:\
    \ Context-aware approaches, opportu-\nnities, and challenges,” IEEE Network 33,\
    \ 196–203 (2019).\n[66]\nK. Fan, S. Zhu, K. Zhang, H. Li, and Y. Yang, “A lightweight\
    \ authen-\ntication scheme for cloud-based rfid healthcare systems,” IEEE Network\n\
    33, 44–49 (2019).\n[67]\nA. Prati, C. Shan, and K. I. Wang, “Sensors, vision and\
    \ networks: From\nvideo surveillance to activity recognition and health monitoring,”\
    \ Journal\nof Ambient Intelligence and Smart Environments 11, 5–22 (2019).\n[68]\n\
    D. Ding, R. A. Cooper, P. F. Pasquina, and L. Fici-Pasquina, “Sensor\ntechnology\
    \ for smart homes,” Maturitas 69, 131–136 (2011).\n[69]\nB. Jan, H. Farman, M.\
    \ Khan, M. Talha, and I. U. Din, “Designing a smart\ntransportation system: An\
    \ internet of things and big data approach,”\nIEEE Wireless Communications 26,\
    \ 73–79 (2019).\n[70]\nJ. Guerrero-Ib´a˜nez, S. Zeadally, and J. Contreras-Castillo,\
    \ “Sensor tech-\nnologies for intelligent transportation systems,” Sensors (Switzerland)\
    \ 18,\n1–24 (2018).\n[71]\nA. Gharaibeh, M. A. Salahuddin, S. J. Hussini, A. Khreishah,\
    \ I. Khalil,\nM. Guizani, and A. Al-Fuqaha, “Smart cities: A survey on data manage-\n\
    ment, security, and enabling technologies,” IEEE Communications Sur-\nveys and\
    \ Tutorials 19, 2456–2501 (2017).\n136\n[72]\nS. Talari, M. Shafie-Khah, P. Siano,\
    \ V. Loia, A. Tommasetti, and J. P.\nCatal˜ao, “A review of smart cities based\
    \ on the internet of things con-\ncept,” Energies 10, 1–23 (2017).\n[73]\nD. M.\
    \ Park, S. K. Kim, and Y. S. Seo, “S-mote: Smart home framework\nfor common household\
    \ appliances in iot network,” Journal of Information\nProcessing Systems 15, 449–456\
    \ (2019).\n[74]\nI. Yaqoob, E. Ahmed, I. A. T. Hashem, A. I. A. Ahmed, A. Gani,\
    \ M. Im-\nran, and M. Guizani, “Internet of things architecture: Recent advances,\n\
    taxonomy, requirements, and open challenges,” IEEE wireless communi-\ncations\
    \ 24, 10–16 (2017).\n[75]\nP. Sakhardande, S. Hanagal, and S. Kulkarni, “Design\
    \ of disaster man-\nagement system using iot based interconnected network with\
    \ smart city\nmonitoring,” 2016 International Conference on Internet of Things\
    \ and\nApplications, IOTA 2016 pp. 185–190 (2016).\n[76]\nL. Kang, S. Poslad,\
    \ W. Wang, X. Li, Y. Zhang, and C. Wang, “A public\ntransport bus as a flexible\
    \ mobile smart environment sensing platform for\niot,” Proceedings - 12th International\
    \ Conference on Intelligent Environ-\nments, IE 2016 pp. 1–8 (2016).\n[77]\nT.\
    \ Adiono, M. Y. Fathany, R. V. W. Putra, K. Afifah, M. H. Santri-\naji, B. L.\
    \ Lawu, and S. Fuada, “Live demonstration: Minds - meshed\nand internet networked\
    \ devices system for smart home: Track selection:\nEmbedded systems,” 2016 IEEE\
    \ Asia Pacific Conference on Circuits and\nSystems, APCCAS 2016 pp. 736–737 (2017).\n\
    [78]\nA. Ghosh and N. Chakraborty, “Design of smart grid in an university\ncampus\
    \ using zigbee mesh networks,” 1st IEEE International Conference\non Power Electronics,\
    \ Intelligent Control and Energy Systems, ICPEICES\n2016 pp. 1–6 (2017).\n[79]\n\
    Y. Yan, Y. Qian, and H. Sharif, “A secure data aggregation and dispatch\nscheme\
    \ for home area networks in smart grid,” GLOBECOM - IEEE\nGlobal Telecommunications\
    \ Conference pp. 1–6 (2011).\n[80]\nU. Raza, P. Kulkarni, and M. Sooriyabandara,\
    \ “Low power wide area\nnetworks: An overview,” IEEE Communications Surveys and\
    \ Tutorials\n19, 855–873 (2017).\n[81]\nM. Kuzlu and M. Pipattanasomporn, “Assessment\
    \ of communication\ntechnologies and network requirements for different smart\
    \ grid applica-\ntions,” 2013 IEEE PES Innovative Smart Grid Technologies Conference,\n\
    ISGT 2013 pp. 1–6 (2013).\n[82]\nS. Al-Sarawi, M. Anbar, K. Alieyan, and M. Alzubaidi,\
    \ “Internet of things\n(iot) communication protocols: Review,” ICIT 2017 - 8th\
    \ International\nConference on Information Technology, Proceedings pp. 685–690\
    \ (2017).\n137\n[83]\nK. Mekki, E. Bajic, F. Chaxel, and F. Meyer, “A comparative\
    \ study of\nlpwan technologies for large-scale iot deployment,” ICT Express 5,\
    \ 1–7\n(2019).\n[84]\nS. S. I. Samuel, “A review of connectivity challenges in\
    \ iot-smart home,”\n2016 3rd MEC International Conference on Big Data and Smart\
    \ City,\nICBDSC 2016 pp. 364–367 (2016).\n[85]\nP. Kuppusamy, S. Muthuraj, and\
    \ S. Gopinath, “Survey and challenges\nof li-fi with comparison of wi-fi,” Proceedings\
    \ of the 2016 IEEE Inter-\nnational Conference on Wireless Communications, Signal\
    \ Processing and\nNetworking, WiSPNET 2016 pp. 896–899 (2016).\n[86]\nB.-S. A.\
    \ Heile and M. H. T. P. C (Futurewei) Liu, B(Huawei Technolo-\ngies) Zhang, “Wi-sun\
    \ fan overview,” (2017).\n[87]\nB. Hammi, R. Khatoun, S. Zeadally, A. Fayad, and\
    \ L. Khoukhi, “Iot\ntechnologies for smart cities,” IET Networks 7, 1–13 (2018).\n\
    [88]\nZ. A. Baig, P. Szewczyk, C. Valli, P. Rabadia, P. Hannay, M. Cherny-\nshev,\
    \ M. Johnstone, P. Kerai, A. Ibrahim, K. Sansurooah, N. Syed, and\nM. Peacock,\
    \ “Future challenges for smart cities: Cyber-security and dig-\nital forensics,”\
    \ Digital Investigation 22, 3–13 (2017).\n[89]\nT. Braun, B. C. Fung, F. Iqbal,\
    \ and B. Shah, “Security and privacy\nchallenges in smart cities,” Sustainable\
    \ Cities and Society 39, 499–507\n(2018).\n[90]\nD. Eckhoff and I. Wagner, “Privacy\
    \ in the smart city - applications, tech-\nnologies, challenges, and solutions,”\
    \ IEEE Communications Surveys and\nTutorials 20, 489–516 (2018).\n[91]\nA. S.\
    \ Elmaghraby and M. M. Losavio, “Cyber security challenges in smart\ncities: Safety,\
    \ security and privacy,” Journal of Advanced Research 5,\n491–497 (2014).\n[92]\n\
    D. POPESCUL and L. D. RADU, “Data security in smart cities: Chal-\nlenges and\
    \ solutions,” Informatica Economica 20, 29–38 (2016).\n[93]\nV. Hassija, V. Chamola,\
    \ V. Saxena, D. Jain, P. Goyal, and B. Sikdar, “A\nsurvey on iot security: Application\
    \ areas, security threats, and solution\narchitectures,” IEEE Access 7, 82721–82743\
    \ (2019).\n[94]\nD. E. Whitehead, K. Owens, D. Gammel, and J. Smith, “Ukraine\
    \ cyber-\ninduced power outage: Analysis and practical mitigation strategies,”\
    \ 70th\nAnnual Conference for Protective Relay Engineers, CPRE 2017 (2017).\n\
    [95]\nI. B. A. Ang, F. D. Salim, and M. Hamilton, “Human occupancy recogni-\n\
    tion with multivariate ambient sensors,” 2016 IEEE International Confer-\nence\
    \ on Pervasive Computing and Communication Workshops, PerCom\nWorkshops 2016 pp.\
    \ 1–6 (2016).\n138\n[96]\nL. Yang, K. Ting, and M. B. Srivastava, “Inferring occupancy\
    \ from oppor-\ntunistically available sensor data,” 2014 IEEE International Conference\n\
    on Pervasive Computing and Communications, PerCom 2014 pp. 60–68\n(2014).\n[97]\n\
    J. D. Howard and T. A. Longstaff, “A common language for computer\nsecurity incidents,”\
    \ Sandia National Laboratories (1998).\n[98]\nR. Agrawal, P. Verma, R. Sonanis,\
    \ U. Goel, A. De, S. A. Kondaveeti, and\nS. Shekhar, “Continuous security in iot\
    \ using blockchain,” ICASSP, IEEE\nInternational Conference on Acoustics, Speech\
    \ and Signal Processing -\nProceedings 2018-April, 6423–6427 (2018).\n[99]\nS.\
    \ Rizvi, J. P. Iii, A. Kurtz, and M. Rizvi, “Securing the internet of things\n\
    ( iot ): A security taxonomy for iot,” in “2018 17th IEEE International\nConference\
    \ On Trust, Security And Privacy In Computing And Commu-\nnications/ 12th IEEE\
    \ International Conference On Big Data Science And\nEngineering (TrustCom/BigDataSE),”\
    \ (IEEE, 2018), pp. 163–168.\n[100] A. Aldairi and L. Tawalbeh, “Cyber security\
    \ attacks on smart cities and\nassociated mobile technologies,” Procedia Computer\
    \ Science 109, 1086–\n1091 (2017).\n[101] M. Ali, N. Abrishamchi, A. H. Abdullah,\
    \ A. D. Cheok, and K. S.\nBielawski, “Side channel attacks on smart home systems\
    \ :\nA short\noverview,” in “IECON 2017 - 43rd Annual Conference of the IEEE In-\n\
    dustrial Electronics Society,” (2017), pp. 8144–8149.\n[102] J. Choi and Y. Kim,\
    \ “An improved lea block encryption algorithm to pre-\nvent side-channel attack\
    \ in the iot system,” in “2016 Asia-Pacific Signal\nand Information Processing\
    \ Association Annual Summit and Conference\n(APSIPA),” (Asia Pacific Signal and\
    \ Information Processing Association,\n2016), pp. 1–4.\n[103] M. A. Al-Garadi,\
    \ A. Mohamed, A. K. Al-Ali, X. Du, I. Ali, and\nM. Guizani, “A survey of machine\
    \ and deep learning methods for internet\nof things (iot) security,” IEEE Communications\
    \ Surveys & Tutorials 22,\n1646–1685 (2020).\n[104] X. Ouyang and Z. Ma, “Using\
    \ lstm networks to identify false data of smart\nterminals in the smart grid,”\
    \ Proceedings of the International Conference\non Parallel and Distributed Systems\
    \ - ICPADS 2017-Decem, 765–768\n(2018).\n[105] A. Diro and N. Chilamkurti, “Leveraging\
    \ lstm networks for attack detec-\ntion in fog-to-things communications,” IEEE\
    \ Communications Magazine\n56, 124–130 (2018).\n[106] N. Balakrishnan, A. Rajendran,\
    \ D. Pelusi, and V. Ponnusamy, “Deep\nbelief network enhanced intrusion detection\
    \ system to prevent security\nbreach in the internet of things,” Internet of Things\
    \ p. 100112 (2019).\n139\n[107] R. Khatoun and S. Zeadally, “Cybersecurity and\
    \ privacy solutions in\nsmart cities,” IEEE Communications Magazine 55, 51–59\
    \ (2017).\n[108] H. F. Atlam, A. Alenezi, M. O. Alassafi, and G. B. Wills, “Blockchain\n\
    with internet of things : Benefits , challenges , and future directions,” I.J.\n\
    Intelligent Systems and Applications 10, 40–48 (2018).\n[109] J. T. de Souza,\
    \ A. C. de Francisco, C. M. Piekarski, and G. F. do Prado,\n“Data mining and machine\
    \ learning to promote smart cities: A systematic\nreview from 2000 to 2018,” Sustainability\
    \ (Switzerland) 11 (2019).\n[110] Z. Rayan, M. Alfonse, and A. B. M. Salem, “Machine\
    \ learning approaches\nin smart health,” Procedia Computer Science 154, 361–368\
    \ (2018).\n[111] R. Varghese and S. Sharma, “Affordable smart farming using iot\
    \ and\nmachine learning,” Proceedings of the 2nd International Conference on\n\
    Intelligent Computing and Control Systems, ICICCS 2018 pp. 645–650\n(2019).\n\
    [112] S. AlZu’bi, B. Hawashin, M. Mujahed, Y. Jararweh, and B. B. Gupta,\n“An\
    \ efficient employment of internet of multimedia things in smart and\nfuture agriculture,”\
    \ Multimedia Tools and Applications 78, 29581–29605\n(2019).\n[113] K. S. P. Reddy,\
    \ Y. M. Roopa, L. N. K. Rajeev, and N. S. Nandan, “Iot\nbased smart agriculture\
    \ using machine learning,” Proceedings of the 2nd\nInternational Conference on\
    \ Inventive Research in Computing Applica-\ntions, ICIRCA 2020 pp. 130–134 (2020).\n\
    [114] A. Goap, D. Sharma, A. K. Shukla, and C. R. Krishna, “An iot based\nsmart\
    \ irrigation management system using machine learning and open\nsource technologies,”\
    \ Computers and Electronics in Agriculture 155, 41–\n49 (2018).\n[115] S. Rodr´ıguez,\
    \ T. Gualotu˜na, and C. Grilo, “A system for the monitor-\ning and predicting\
    \ of data in precision a agriculture system for the and\npredicting of wireless\
    \ data in precision in a monitoring rose greenhouse\nbased on sensor agriculture\
    \ in a rose greenhouse based on wireless sensor\nnetworks ne,” Procedia Computer\
    \ Science 121, 306–313 (2017).\n[116] N. Kitpo, Y. Kugai, M. Inoue, T. Yokemura,\
    \ and S. Satomura, “Internet\nof things for greenhouse monitoring system using\
    \ deep learning and bot\nnotification services,” 2019 IEEE International Conference\
    \ on Consumer\nElectronics, ICCE 2019 (2019).\n[117] A. K. Saha, J. Saha, R. Ray,\
    \ S. Sircar, S. Dutta, S. P. Chattopadhyay, and\nH. N. Saha, “Iot-based drone\
    \ for improvement of crop quality in agricul-\ntural field,” in “2018 IEEE 8th\
    \ Annual Computing and Communication\nWorkshop and Conference (CCWC),” (IEEE,\
    \ 2018), pp. 612–615.\n140\n[118] A. A. Araby, M. M. Abd Elhameed, N. M. Magdy,\
    \ N. Abdelaal, Y. T.\nAbd Allah, M. S. Darweesh, M. A. Fahim, H. Mostafa et al.,\
    \ “Smart iot\nmonitoring system for agriculture with predictive analysis,” in\
    \ “2019 8th\nInternational Conference on Modern Circuits and Systems Technologies\n\
    (MOCAST),” (IEEE, 2019), pp. 1–4.\n[119] S. A. Nandhini and R. H. S. Radha, “Web\
    \ enabled plant disease detec-\ntion system for agricultural applications using\
    \ wmsn,” Wireless Personal\nCommunications 102, 725–740 (2018).\n[120] L. Ale,\
    \ A. Sheta, L. Li, Y. Wang, and N. Zhang, “Deep learning based\nplant disease\
    \ detection for smart agriculture,” 2019 IEEE Globecom\nWorkshops, GC Wkshps 2019\
    \ - Proceedings pp. 1–6 (2019).\n[121] F. Balducci, D. Impedovo, and G. Pirlo,\
    \ “Machine learning applications\non agricultural datasets for smart farm enhancement,”\
    \ Machines 6 (2018).\n[122] X.-B. Jin, N.-X. Yang, X.-Y. Wang, Y.-T. Bai, T.-L.\
    \ Su, and J.-L. Kong,\n“Hybrid deep learning predictor for smart agriculture sensing\
    \ based on\nempirical mode decomposition and gated recurrent unit group model,”\n\
    Sensors 20, 1334 (2020).\n[123] S. A. M. Varman, A. R. Baskaran, S. Aravindh,\
    \ and E. Prabhu, “Deep\nlearning and iot for smart agriculture using wsn,” 2017\
    \ IEEE International\nConference on Computational Intelligence and Computing Research,\
    \ IC-\nCIC 2017 pp. 0–5 (2018).\n[124] X. bo Jin, X. hong Yu, X. yi Wang, Y. ting\
    \ Bai, and T. li Su, “Deep\nlearning predictor for sustainable precision agriculture\
    \ based on internet\nof things system,” Sustainability 12, 1433 (2020).\n[125]\
    \ K. Aliev, M. M. Jawaid, S. Narejo, E. Pasero, and A. Pulatov, “Inter-\nnet of\
    \ plants application for smart agriculture,” International Journal of\nAdvanced\
    \ Computer Science and Applications 9, 421–429 (2018).\n[126] A. L. Diedrichs,\
    \ F. Bromberg, D. Dujovne, K. Brun-laguna, T. Watteyne,\nand S. Member, “Prediction\
    \ of frost events using machine learning and iot\nsensing devices,” IEEE Internet\
    \ of Things Journal 5, 4589–4597 (2018).\n[127] R.\nReshma,\nV.\nSathiyavathi,\n\
    T.\nSindhu,\nK.\nSelvakumar,\nand\nL. SaiRamesh, “Iot based classification techniques\
    \ for soil content analysis\nand crop yield prediction,” in “2020 Fourth International\
    \ Conference on\nI-SMAC (IoT in Social, Mobile, Analytics and Cloud)(I-SMAC),”\
    \ (IEEE,\n2020), pp. 156–160.\n[128] M. Pawar and G. Chillarge, “Soil toxicity\
    \ prediction and recommendation\nsystem using data mining in precision agriculture,”\
    \ in “2018 3rd interna-\ntional conference for convergence in technology (I2CT),”\
    \ (IEEE, 2018),\npp. 1–5.\n141\n[129] K. Lee, B. N. Silva, and K. Han, “Deep learning\
    \ entrusted to fog\nnodes (dlefn) based smart agriculture,” Applied Sciences (Switzerland)\n\
    10 (2020).\n[130] M. A. Guill´en, A. Llanes, B. Imbern´on, R. Mart´ınez, E. Andr´es,\
    \ B. Cre-\nspo, and J. Carlos, “Performance evaluation of edge - computing platforms\n\
    for the prediction of low temperatures in agriculture using deep learning,”\n\
    The Journal of Supercomputing 77, 818–840 (2021).\n[131] M. A. Guill´en-navarro,\
    \ R. Mart´ınez-espa˜na, and J. M. Cecilia, “A high-\nperformance iot solution\
    \ to reduce frost damages in stone fruits,” Con-\ncurrency and Computation: Practice\
    \ and Experience 33, e5299 (2019).\n[132] M. A. Guill´en, A. Llanes, B. Imbern´on,\
    \ R. Mart´ınez-Espa˜na, A. Bueno-\nCrespo, J. C. Cano, and J. M. Cecilia, “Performance\
    \ evaluation of edge-\ncomputing platforms for the prediction of low temperatures\
    \ in agriculture\nusing deep learning,” (2020).\n[133] D. Rutqvist, D. Kleyko,\
    \ and F. Blomstedt, “An automated machine learn-\ning approach for smart waste\
    \ management systems,” IEEE Transactions\non Industrial Informatics PP, 1–1 (2019).\n\
    [134] A. Hussain, U. Draz, T. Ali, S. Tariq, M. Irfan, A. Glowacz, J. Alfonso,\n\
    A. Daviu, S. Yasin, and S. Rahman, “Waste management and prediction\nof air pollutants\
    \ using iot and machine learning approach,” Energies 13,\n3930 (2020).\n[135]\
    \ D. Zhang, G. Lindholm, and H. Ratnaweera, “Use long short-term mem-\nory to\
    \ enhance Internet of Things for combined sewer overflow monitor-\ning,” Journal\
    \ of Hydrology 556, 409–418 (2018).\n[136] P. Varalakshmi, S. Vandhana, and S.\
    \ Vishali, “Prediction of water quality\nusing naive bayesian algorithm,” 2016\
    \ 8th International Conference on\nAdvanced Computing, ICoAC 2016 pp. 224–229\
    \ (2017).\n[137] D. Jalal, “Toward a Smart Real Time Monitoring System for Drinking\n\
    Water Based on Machine Learning,” 2019 International Conference on\nSoftware,\
    \ Telecommunications and Computer Networks (SoftCOM) pp.\n1–5 (2019).\n[138] T.\
    \ Bin, M. M. Alam, N. Absar, K. Andersson, and M. Shahadat, “Iot\nbased real-time\
    \ river water quality monitoring system,” Procedia Com-\nputer Science 155, 161–168\
    \ (2019).\n[139] P. Liu, J. Wang, A. K. Sangaiah, Y. Xie, and X. Yin, “Analysis\
    \ and\nprediction of water quality using lstm deep neural networks in iot envi-\n\
    ronment,” Sustainability 11, 2058 (2019).\n[140] Z. Tariq, S. K. Shah, and Y.\
    \ Lee, “Smart 311 request system with au-\ntomatic noise detection for safe neighborhood,”\
    \ 2018 IEEE International\nSmart Cities Conference, ISC2 2018 pp. 1–8 (2019).\n\
    142\n[141] J. Zhang, S. I. Levitan, and J. Hirschberg, “Multimodal deception detec-\n\
    tion using automatically extracted acoustic, visual, and lexical features.”\n\
    in “INTERSPEECH,” (2020), pp. 359–363.\n[142] Y. Santur, E. Karak¨ose, M. Karak¨ose,\
    \ and E. Akın, “Deep learning based\nartificial manager for smart city,” in “5th\
    \ International Conference on\nAdvanced Technology & Sciences,” (2017), pp. 197–201.\n\
    [143] S. Sanaei, B. Majidi, and E. Akhtarkavan, “Deep multisensor dashboard\n\
    for composition layer of web of things in the smart city,” 9th International\n\
    Symposium on Telecommunication: With Emphasis on Information and\nCommunication\
    \ Technology, IST 2018 pp. 211–215 (2019).\n[144] P. D. Rosero-Montalvo, J. A.\
    \ Caraguay-Procel, E. D. Jaramillo, J. M.\nMichilena-Calderon, A. C. Umaquinga-Criollo,\
    \ M. Mediavilla-Valverde,\nM. A. Ruiz, L. A. Beltran, and D. H. Peluffo-Ord´onez,\
    \ “Air quality moni-\ntoring intelligent system using machine learning techniques,”\
    \ Proceedings\n- 3rd International Conference on Information Systems and Computer\
    \ Sci-\nence, INCISCOS 2018 2018-Decem, 75–80 (2018).\n[145] C. Feng, W. Wang,\
    \ Y. Tian, X. Que, and X. Gong, “Estimate air quality\nbased on mobile crowd sensing\
    \ and big data,” 18th IEEE International\nSymposium on A World of Wireless, Mobile\
    \ and Multimedia Networks,\nWoWMoM 2017 - Conference (2017).\n[146] R. Yu, Y.\
    \ Yang, L. Yang, G. Han, and O. A. Move, “RAQ–A random for-\nest approach for\
    \ predicting air quality in urban sensing systems,” Sensors\n(Switzerland) 16\
    \ (2016).\n[147] I. K¨ok, M. U. S¸im¸sek, and S. ¨Ozdemir, “A deep learning model\
    \ for air\nquality prediction in smart cities,” Proceedings - 2017 IEEE International\n\
    Conference on Big Data, Big Data 2017 2018-Janua, 1983–1990 (2017).\n[148] A.\
    \ Al-Wakeel, J. Wu, and N. Jenkins, “K -means based load estimation\nof domestic\
    \ smart meter measurements,” Applied Energy 194, 333–342\n(2017).\n[149] O. Valgaev,\
    \ F. Kupzog, and H. Schmeck, “Building power demand fore-\ncasting using k-nearest\
    \ neighbours model - practical application in smart\ncity demo aspern project,”\
    \ CIRED - Open Access Proceedings Journal\n2017, 1601–1604 (2017).\n[150] P. Vrablecov´a,\
    \ A. B. Ezzeddine, V. Rozinajov´a, S. ˇS´arik, and A. K. Sanga-\niah, “Smart grid\
    \ load forecasting using online support vector regression,”\nComputers and Electrical\
    \ Engineering 65, 102–117 (2018).\n[151] W. Kong, Z. Y. Dong, Y. Jia, D. J. Hill,\
    \ Y. Xu, and Y. Zhang, “Short-\nterm residential load forecasting based on lstm\
    \ recurrent neural network,”\nIEEE Transactions on Smart Grid 10, 841–851 (2019).\n\
    143\n[152] S. Hosein and P. Hosein, “Load forecasting using deep neural networks,”\n\
    2017 IEEE Power and Energy Society Innovative Smart Grid Technologies\nConference,\
    \ ISGT 2017 (2017).\n[153] K. Ke, S. Hongbin, Z. Chengkang, and C. Brown, “Short-term\
    \ electrical\nload forecasting method based on stacked auto-encoding and gru neural\n\
    network,” Evolutionary Intelligence 12, 385–394 (2019).\n[154] T. Han, K. Muhammad,\
    \ T. Hussain, J. Lloret, and S. W. Baik, “An\nefficient deep learning framework\
    \ for intelligent energy management in\niot networks,” IEEE Internet of Things\
    \ Journal (2020).\n[155] X. Liu, Z. Xiao, R. Zhu, J. Wang, L. Liu, and M. Ma,\
    \ “Edge sensing data-\nimaging conversion scheme of load forecasting in smart\
    \ grid,” Sustainable\nCities and Society p. 102363 (2020).\n[156] A. Ta¨ık and\
    \ S. Cherkaoui, “Electrical load forecasting using edge com-\nputing and federated\
    \ learning,” in “ICC 2020-2020 IEEE International\nConference on Communications\
    \ (ICC),” (IEEE, 2020), pp. 1–6.\n[157] D. Nguyen, R. Barella, S. A. Wallace,\
    \ X. Zhao, and X. Liang, “Smart\ngrid line event classification using supervised\
    \ learning over pmu data\nstreams,” 2015 6th International Green and Sustainable\
    \ Computing Con-\nference (2016).\n[158] Z. Zheng, Y. Yang, X. Niu, H. N. Dai,\
    \ and Y. Zhou, “Wide and deep\nconvolutional neural networks for electricity-theft\
    \ detection to secure\nsmart grids,” IEEE Transactions on Industrial Informatics\
    \ 14, 1606–1615\n(2018).\n[159] Y. Huang, Y. Lu, F. Wang, X. Fan, J. Liu, and\
    \ V. C. Leung, “An edge\ncomputing framework for real-time monitoring in smart\
    \ grid,” Proceed-\nings - 2018 IEEE International Conference on Industrial Internet,\
    \ ICII\n2018 pp. 99–108 (2018).\n[160] S. Batool, N. A. Saqib, and M. A. Khan,\
    \ “Internet of things data analytics\nfor user authentication and activity recognition,”\
    \ 2017 2nd International\nConference on Fog and Mobile Edge Computing, FMEC 2017\
    \ pp. 183–187\n(2017).\n[161] H. Zhang, Z. Xiao, J. Wang, F. Li, and E. Szczerbicki,\
    \ “A novel iot-\nperceptive human activity recognition ( har ) approach using\
    \ multihead\nconvolutional attention,” IEEE Internet of Things Journal 7, 1072–1080\n\
    (2020).\n[162] D. Castro, “Wearable-based human activity recognition using an\
    \ iot ap-\nproach,” Journal of Sensor and Actuator Networks 6, 28 (2017).\n[163]\
    \ D. N. Tran and D. D. Phan, “Human activities recognition in android\nsmartphone\
    \ using support vector machine,” in “Proceedings - Inter-\nnational Conference\
    \ on Intelligent Systems, Modelling and Simulation,\nISMS,” , vol. 0 (IEEE, 2016),\
    \ vol. 0, pp. 64–68.\n144\n[164] G. L. Santos,\nP. T. Endo,\nK. Henrique,\nand\
    \ D. C. Monteiro,\n“Accelerometer-based human fall detection using,” Sensors 19,\
    \ 1–12\n(2019).\n[165] D. Yacchirema, “Fall detection system for elderly people\
    \ using iot and en-\nsemble machine learning algorithm,” Personal and Ubiquitous\
    \ Computing\n23, 801–817 (2019).\n[166] I.\nMachorro-Cano,\nG.\nAlor-Hern´andez,\n\
    M.\nA.\nParedes-Valverde,\nU. Ramos-Deonati, J. L. S´anchez-Cervantes, and L.\
    \ Rodr´ıguez-Mazahua,\n“Pisiot: A machine learning and iot-based smart health\
    \ platform for over-\nweight and obesity control,” Applied Sciences (Switzerland)\
    \ 9 (2019).\n[167] R. Ani, S. Krishna, N. Anju, A. M. Sona, and O. S. Deepa, “Iot\
    \ based pa-\ntient monitoring and diagnostic prediction tool using ensemble classifier,”\n\
    2017 International Conference on Advances in Computing, Communica-\ntions and\
    \ Informatics, ICACCI 2017 2017-Janua, 1588–1593 (2017).\n[168] A. Ukil and U.\
    \ K. Roy, “Smart cardiac health management in iot through\nheart sound signal\
    \ analytics and robust noise filtering,” IEEE Interna-\ntional Symposium on Personal,\
    \ Indoor and Mobile Radio Communica-\ntions, PIMRC 2017-Octob, 1–5 (2018).\n[169]\
    \ A. Alamri, “Monitoring system for patients using multimedia for smart\nhealthcare,”\
    \ IEEE Access 6, 23271–23276 (2018).\n[170] Y. Qu, X. Ming, S. Qiu, M. Zheng,\
    \ and Z. Hou, “An integrative framework\nfor online prognostic and health management\
    \ using internet of things and\nconvolutional neural network,” Sensors (Switzerland)\
    \ 19 (2019).\n[171] M. S. Hossain and G. Muhammad, “Cloud-assisted industrial\
    \ internet\nof things (iiot) - enabled framework for health monitoring,” Computer\n\
    Networks 101, 192–202 (2016).\n[172] M. Alhussein, G. Muhammad, M. S. Hossain,\
    \ and S. U. Amin, “Cognitive\niot-cloud integration for smart healthcare: Case\
    \ study for epileptic seizure\ndetection and monitoring,” Mobile Networks and\
    \ Applications 23, 1624–\n1635 (2018).\n[173] M. Ganesan and N. Sivakumar, “Iot\
    \ based heart disease prediction and di-\nagnosis model for healthcare using machine\
    \ learning models,” 2019 IEEE\nInternational Conference on System, Computation,\
    \ Automation and Net-\nworking, ICSCAN 2019 pp. 1–5 (2019).\n[174] S. Mohapatra,\
    \ P. K. Patra, S. Mohanty, and B. Pati, “Smart health care\nsystem using data\
    \ mining,” Proceedings - 2018 International Conference\non Information Technology,\
    \ ICIT 2018 pp. 44–49 (2018).\n[175] P. Kaur, R. Kumar, and M. Kumar, “A healthcare\
    \ monitoring system\nusing random forest and internet of things (iot),” Multimedia\
    \ Tools and\n145\nApplications 78, 19905–19916 (2019). Ni, its one of those random\
    \ papers\nwhere they take data and run algorithms on them.\n[176] M. Alhussein,\
    \ “Monitoring parkinson’s disease in smart cities,” IEEE Ac-\ncess 5, 19835–19841\
    \ (2017).\n[177] S. Tuli, N. Basumatary, S. S. Gill, M. Kahani, R. C. Arya, G.\
    \ S. Wan-\nder, and R. Buyya, “Healthfog: An ensemble deep learning based smart\n\
    healthcare system for automatic diagnosis of heart diseases in integrated\niot\
    \ and fog computing environments,” Future Generation Computer Sys-\ntems 104,\
    \ 187–200 (2020).\n[178] M. Devarajan and L. Ravi, “Intelligent cyber-physical\
    \ system for an ef-\nficient detection of parkinson disease using fog computing,”\
    \ Multimedia\nTools and Applications 78, 32695–32719 (2019).\n[179] M. A. Sayeed,\
    \ S. P. Mohanty, E. Kougianos, V. P. Yanambaka, and H. Za-\nveri, “A robust and\
    \ fast seizure detector for iot edge,” Proceedings - 2018\nIEEE 4th International\
    \ Symposium on Smart Electronic Systems, iSES\n2018 pp. 156–160 (2018).\n[180]\
    \ J. P. Queralta, T. N. Gia, H. Tenhunen, and T. Westerlund, “Edge-ai in\nlora-based\
    \ health monitoring: Fall detection system with fog computing\nand lstm recurrent\
    \ neural networks,” in “2019 42nd international confer-\nence on telecommunications\
    \ and signal processing (TSP),” (IEEE, 2019),\npp. 601–604.\n[181] M. Awais, M.\
    \ Raza, N. Singh, K. Bashir, U. Manzoor, S. ul Islam, and J. J.\nRodrigues, “Lstm\
    \ based emotion detection using physiological signals:\nIot framework for healthcare\
    \ and distance learning in covid-19,” IEEE\nInternet of Things Journal (2020).\n\
    [182] P. Pirzada, N. White, and A. Wilde, “Sensors in smart homes for indepen-\n\
    dent living of the elderly,” 5th International Multi-Topic ICT Conference:\nTechnologies\
    \ For Future Generations, IMTIC 2018 - Proceedings pp. 1–8\n(2018).\n[183] J.\
    \ Park, K. Jang, and S. B. Yang, “Deep neural networks for activity\nrecognition\
    \ with multi-sensor data in a smart home,” IEEE World Forum\non Internet of Things,\
    \ WF-IoT 2018 - Proceedings 2018-Janua, 155–160\n(2018).\n[184] A. Wang, G. Chen,\
    \ C. Shang, M. Zhang, and L. Liu, “Human activity\nrecognition in a smart home\
    \ environment with stacked denoising autoen-\ncoders,” in “International Conference\
    \ on Web-Age Information Manage-\nment,” (Springer, 2016), pp. 29–40.\n[185] D.\
    \ Singh, E. Merdivan, I. Psychoula, J. Kropf, S. Hanke, M. Geist,\nand A. Holzinger,\
    \ “Human activity recognition using recurrent neural\n146\nnetworks,” Lecture\
    \ Notes in Computer Science (including subseries Lec-\nture Notes in Artificial\
    \ Intelligence and Lecture Notes in Bioinformatics)\n10410 LNCS, 267–274 (2017).\n\
    [186] G. Y. Kim, S. S. Shin, J. Y. Kim, and H. G. Kim, “Haptic Conversion\nUsing\
    \ Detected Sound Event in Home Monitoring System for the Hard-\nof-Hearing,” HAVE\
    \ 2018 - IEEE International Symposium on Haptic,\nAudio-Visual Environments and\
    \ Games, Proceedings pp. 17–22 (2018).\n[187] A. B. Adege, H. P. Lin, G. B. Tarekegn,\
    \ and S. S. Jeng, “Applying deep\nneural network (dnn) for robust indoor localization\
    \ in multi-building en-\nvironment,” Applied Sciences (Switzerland) 8, 1–14 (2018).\n\
    [188] R. Adeogun, I. Rodriguez, M. Razzaghpour, G. Berardinelli, P. H. Chris-\n\
    tensen, and P. E. Mogensen, “Indoor occupancy detection and estimation\nusing\
    \ machine learning and measurements from an iot lora-based mon-\nitoring system,”\
    \ in “2019 Global IoT Summit (GIoTS),” (IEEE, 2019),\npp. 1–5.\n[189] L. Zimmermann,\
    \ R. Weigel, and G. Fischer, “Fusion of nonintrusive en-\nvironmental sensors\
    \ for occupancy detection in smart homes,” IEEE In-\nternet of Things Journal\
    \ 5, 2343–2352 (2018).\n[190] D. Chowdhry, R. Paranjape, and P. Laforge, “Smart\
    \ home automation\nsystem for intrusion detection,” 2015 IEEE 14th Canadian Workshop\
    \ on\nInformation Theory, CWIT 2015 pp. 75–78 (2015).\n[191] V. H. Bhide and S.\
    \ Wagh, “I-learning iot: An intelligent self learning\nsystem for home automation\
    \ using iot,” 2015 International Conference\non Communication and Signal Processing,\
    \ ICCSP 2015 pp. 1763–1767\n(2015).\n[192] F. C. C. Garcia, C. M. C. Creayla,\
    \ and E. Q. B. Macabebe, “Develop-\nment of an intelligent system for smart home\
    \ energy disaggregation using\nstacked denoising autoencoders,” Procedia Computer\
    \ Science 105, 248–\n255 (2017).\n[193] C. C. Yang, C. S. Soh, and V. V. Yap,\
    \ “A non-intrusive appliance load\nmonitoring for efficient energy consumption\
    \ based on naive bayes classi-\nfier,” Sustainable Computing: Informatics and\
    \ Systems 14, 34–42 (2017).\n[194] D. Popa, F. Pop, C. Serbanescu, and A. Castiglione,\
    \ “Deep learning model\nfor home automation and energy reduction in a smart home\
    \ environment\nplatform,” Neural Computing and Applications 31, 1317–1337 (2019).\n\
    [195] I. C. Konstantakopoulos, A. R. Barkan, S. He, T. Veeravalli, H. Liu,\nand\
    \ C. Spanos, “A deep learning and gamification approach to improving\nhuman-building\
    \ interaction and energy efficiency in smart infrastructure,”\nApplied Energy\
    \ 237, 810–821 (2019).\n147\n[196] H. Albataineh, M. Nijim, and D. Bollampall,\
    \ “The design of a novel smart\nhome control system using smart grid based on\
    \ edge and cloud comput-\ning,” in “2020 IEEE 8th International Conference on\
    \ Smart Energy Grid\nEngineering (SEGE),” (IEEE, 2020), pp. 88–91.\n[197] P. H.\
    \ F. Sousa, N. M. M. Nascimento, J. S. Almeida, P. P. R. Filho,\nand V. H. C.\
    \ Albuquerque, “Intelligent incipient fault detection in wind\nturbines based\
    \ on industrial iot environment,” Journal of Artificial Intel-\nligence and Systems\
    \ 1, 1–19 (2019).\n[198] M. Salhaoui, A. Guerrero-Gonz´alez, M. Arioua, F. J.\
    \ Ortiz, A. E.\nOualkadi, and C. L. Torregrosa, “Smart industrial iot monitoring\
    \ and\ncontrol system based on uav and cloud computing applied to a concrete\n\
    plant,” Sensors (Switzerland) 19 (2019).\n[199] M. A. Ferreira, L. F. F. D. Souza,\
    \ F. H. S. D. Silva, E. F. Ohata, J. S.\nAlmeida, and P. P. Filho, “Intelligent\
    \ industrial iot system for detection\nof short-circuit failure in windings of\
    \ wind turbines,” Proceedings of the\nInternational Joint Conference on Neural\
    \ Networks (2020).\n[200] T. Nkonyana, Y. Sun, B. Twala, and E. Dogo, “Performance\
    \ evaluation of\ndata mining techniques in steel manufacturing industry,” Procedia\
    \ Man-\nufacturing 35, 623–628 (2019).\n[201] J. E. Siegel, S. Pratt, Y. Sun,\
    \ and S. E. Sarma, “Real-time deep neural\nnetworks for internet-enabled arc-fault\
    \ detection,” Engineering Applica-\ntions of Artificial Intelligence 74, 35–42\
    \ (2018).\n[202] J. Windau and L. Itti, “Inertial machine monitoring system for\
    \ auto-\nmated failure detection,” Proceedings - IEEE International Conference\n\
    on Robotics and Automation pp. 93–98 (2018).\n[203] A. N. Sokolov, I. A. Pyatnitsky,\
    \ and S. K. Alabugin, “Research of Classical\nMachine Learning Methods and Deep\
    \ Learning Models Effectiveness in\nDetecting Anomalies of Industrial Control\
    \ System,” Proceedings - 2018\nGlobal Smart Industry Conference, GloSIC 2018 (2018).\n\
    [204] D. C. Huang, C. F. Lin, C. Y. Chen, and J. R. Sze, “The internet tech-\n\
    nology for defect detection system with deep learning method in smart\nfactory,”\
    \ 2018 4th International Conference on Information Management,\nICIM 2018 pp.\
    \ 98–102 (2018).\n[205] L. Li, K. Ota, and M. Dong, “Deep learning for smart industry:\
    \ Efficient\nmanufacture inspection system with fog computing,” IEEE Transactions\n\
    on Industrial Informatics 14, 4665–4673 (2018).\n[206] S. Y. Lin, Y. Du, P. C.\
    \ Ko, T. J. Wu, P. T. Ho, V. Sivakumar, and\nR. subbareddy, “Fog computing based\
    \ hybrid deep learning framework in\neffective inspection system for smart manufacturing,”\
    \ Computer Commu-\nnications 160, 636–642 (2020).\n148\n[207] M. S. S. Garmaroodi,\
    \ F. Farivar, M. S. Haghighi, M. A. Shoorehdeli, and\nA. Jolfaei, “Detection of\
    \ anomalies in industrial iot systems by data min-\ning: Study of christ osmotron\
    \ water purification system,” IEEE Internet\nof Things Journal 4662, 1–1 (2020).\n\
    [208] D. Park, S. Kim, Y. An, and J. Y. Jung, “Lired: A light-weight real-time\n\
    fault detection system for edge computing using lstm recurrent neural\nnetworks,”\
    \ Sensors (Switzerland) 18 (2018).\n[209] Y. Liu, N. Kumar, Z. Xiong, W. Y. B.\
    \ Lim, J. Kang, and D. Niyato,\n“Communication-efficient federated learning for\
    \ anomaly detection in in-\ndustrial internet of things,” in “GLOBECOM,” , vol.\
    \ 2020 (2020), vol.\n2020, pp. 1–6.\n[210] H. Zheng, Y. Feng, Y. Gao, and J. Tan,\
    \ “A robust predicted performance\nanalysis approach for data-driven product development\
    \ in the industrial\ninternet of things,” Sensors (Switzerland) 18 (2018).\n[211]\
    \ A. Essien and C. Giannetti, “A deep learning model for smart manu-\nfacturing\
    \ using convolutional lstm neural network autoencoders,” IEEE\nTransactions on\
    \ Industrial Informatics 16, 6069–6078 (2020).\n[212] W. Tao, Z.-H. Lai, M. C.\
    \ Leu, and Z. Yin, “Worker activity recognition\nin smart manufacturing using\
    \ imu and semg signals with convolutional\nneural networks,” Procedia Manufacturing\
    \ 26, 1159–1166 (2018).\n[213] A. R. M. Forkan, F. Montori, D. Georgakopoulos,\
    \ P. P. Jayaraman,\nA. Yavari, and A. Morshed, “An industrial iot solution for\
    \ evaluating\nworkers’ performance via activity recognition,” in “2019 IEEE 39th\
    \ In-\nternational Conference on Distributed Computing Systems (ICDCS),”\n(IEEE,\
    \ 2019), pp. 1393–1403.\n[214] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J.\
    \ Jiang, “A proactive task\ndispatching method based on future bottleneck prediction\
    \ for the smart\nfactory,” International Journal of Computer Integrated Manufacturing\n\
    32, 278–293 (2019). Not included as it is a hybrid.\n[215] B. Brik, B. Bettayeb,\
    \ M. Sahnoun, and F. Duval, “Towards predicting\nsystem disruption in industry\
    \ 4.0: Machine learning-based approach,”\nProcedia Computer Science 151, 667–674\
    \ (2019).\n[216] Y. Han, C. J. Zhang, L. Wang, and Y. C. Zhang, “Industrial IoT\
    \ for Intel-\nligent Steelmaking with Converter Mouth Flame Spectrum Information\n\
    Processed by Deep Learning,” IEEE Transactions on Industrial Informat-\nics 16,\
    \ 2640–2650 (2020).\n[217] J. Wang, Y. Wang, and M. Yu, “A multi-period ambulance\
    \ location and\nallocation problem in the disaster,” Journal of Combinatorial\
    \ Optimiza-\ntion 9, 1–24 (2020). This paper presents a survey about fall detection\n\
    technologies and discusses how sensor fusion is one of the most popular\ntrends,\
    \ both in terms of data as well as algorithm.\n149\n[218] L. Spendla, M. Kebisek,\
    \ P. Tanuska, and L. Hrcka, “Concept of predictive\nmaintenance of production\
    \ systems in accordance with industry 4.0,” in\n“2017 IEEE 15th International\
    \ Symposium on Applied Machine Intelli-\ngence and Informatics (SAMI),” (IEEE,\
    \ 2017), pp. 405–410.\n[219] S. Hwang, J. Jeong, and Y. Kang, “Svm-rbm based predictive\
    \ main-\ntenance scheme for iot-enabled smart factory,” 2018 13th International\n\
    Conference on Digital Information Management, ICDIM 2018 pp. 162–\n167 (2018).\n\
    [220] E.-J. K. J.-H. Kwon, “Failure prediction model using iterative feature\n\
    selection for industrial internet of things,” Symmetry pp. 1–15 (2019).\n[221]\
    \ W. Zhang, W. Guo, X. Liu, Y. Liu, J. Zhou, B. Li, Q. Lu, and S. Yang,\n“Lstm-based\
    \ analysis of industrial iot equipment,” IEEE Access 6, 23551–\n23560 (2018).\n\
    [222] A. Diez, N. L. D. Khoa, M. M. Alamdari, Y. Wang, F. Chen, and P. Run-\n\
    cie, “A clustering approach for structural health monitoring on bridges,”\nJournal\
    \ of Civil Structural Health Monitoring 6, 429–445 (2016).\n[223] J. Guo, X. Xie,\
    \ and R. Bie, “Structural health monitoring by using a\nsparse coding-based deep\
    \ learning algorithm with wireless sensor net-\nworks,” Personal and ubiquitous\
    \ computing 18, 1977–1987 (2014).\n[224] G. Gui, H. Pan, Z. Lin, Y. Li, and Z.\
    \ Yuan, “Data-driven support vector\nmachine with optimization techniques for\
    \ structural health monitoring\nand damage detection,” KSCE Journal of Civil Engineering\
    \ 21, 523–534\n(2017).\n[225] H. V. Dang, H. Tran-ngoc, T. V. Nguyen, G. D. Roeck,\
    \ H. X. Nguyen,\nand S. Member, “Data-driven structural health monitoring using\
    \ feature\nfusion and hybrid deep learning,” IEEE Transactions on Automation Sci-\n\
    ence and Engineering pp. 1–17 (2020).\n[226] J. Vitola, F. Pozo, D. A. Tibaduiza,\
    \ and M. Anaya, “A sensor data fusion\nsystem based on k-nearest neighbor pattern\
    \ classification for structural\nhealth monitoring applications,” Sensors (Switzerland)\
    \ 17 (2017).\n[227] J. Yu, M. Kim, H. C. Bang, S. H. Bae, and S. J. Kim, “IoT\
    \ as a ap-\nplications: cloud-based building management systems for the internet\
    \ of\nthings,” Multimedia Tools and Applications 75, 14583–14596 (2016).\n[228]\
    \ S. Singaravel, P. Geyer, and J. Suykens, “Deep neural network archi-\ntectures\
    \ for component-based machine learning model in building energy\npredictions,”\
    \ Digital Proceedings of the 24th EG-ICE International Work-\nshop on Intelligent\
    \ Computing in Engineering 2017 pp. 260–268 (2017).\n[229] N. A. Eltresy, O. M.\
    \ Dardeer, A. Al-Habal, E. Elhariri, A. H. Hassan,\nA. Khattab, D. N. Elsheakh,\
    \ S. A. Taie, H. Mostafa, H. A. Elsadek, and\n150\nE. A. Abdallah, “Rf energy\
    \ harvesting iot system for museum ambience\ncontrol with deep learning,” Sensors\
    \ (Switzerland) 19 (2019).\n[230] W. Hu, Y. Wen, K. Guan, G. Jin, and K. J. Tseng,\
    \ “itcm : Toward\nlearning-based thermal comfort modeling via pervasive sensing\
    \ for smart\nbuildings,” IEEE Internet of Things Journal 5, 4164–4177 (2018).\n\
    [231] H. Mora and A. Jimeno-morenilla, “Deployment of iot edge and fog com-\n\
    puting technologies to develop smart building services,” Sustainability 10,\n\
    1–23 (2018).\n[232] D. H. Stolfi, E. Alba, and X. Yao, “Predicting car park occupancy\
    \ rates\nin smart cities,” Lecture Notes in Computer Science (including subseries\n\
    Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformat-\nics)\
    \ 10268 LNCS, 107–117 (2017).\n[233] R. K. Lenka, R. K. Barik, N. K. Das, K. Agarwal,\
    \ D. Mohanty, and\nS. Vipsita, “Psps: An iot based predictive smart parking system,”\
    \ 2017\n4th IEEE Uttar Pradesh Section International Conference on Electrical,\n\
    Computer and Electronics, UPCON 2017 2018-Janua, 311–317 (2017).\n[234] G. Ali,\
    \ T. Ali, M. Irfan, U. Draz, M. Sohail, A. Glowacz, M. Sulowicz,\nR. Mielnik,\
    \ Z. B. Faheem, and C. Martis, “Iot based smart parking system\nusing deep long\
    \ short memory network,” Electronics 9, 1696 (2020).\n[235] T. Ebuchi and H. Yamamoto,\
    \ “Vehicle/pedestrian localization system\nusing multiple radio beacons and machine\
    \ learning for smart parking,” in\n“2019 International Conference on Artificial\
    \ Intelligence in Information\nand Communication (ICAIIC),” (IEEE, 2019), pp.\
    \ 086–091.\n[236] F. M. Awan, Y. Saleem, R. Minerva, and N. Crespi, “A comparative\n\
    analysis of machine / deep learning models for parking space availability\nprediction,”\
    \ Sensors 20, 322 (2020).\n[237] X. Sevillano, E. M`armol, and V. Fernandez-Arguedas,\
    \ “Towards smart\ntraffic management systems:\nVacant on-street parking spot detection\n\
    based on video analytics,” FUSION 2014 - 17th International Conference\non Information\
    \ Fusion (2014).\n[238] H. Bura, N. Lin, N. Kumar, S. Malekar, S. Nagaraj, and\
    \ K. Liu, “An\nedge based smart parking solution using camera networks and deep\
    \ learn-\ning,” in “2018 IEEE International Conference on Cognitive Computing\n\
    (ICCC),” (IEEE, 2018), pp. 17–24.\n[239] C. Lee, S. Park, T. Yang, and S.-H. Lee,\
    \ “Smart parking with fine-grained\nlocalization and user status sensing based\
    \ on edge computing,” in “2019\nIEEE 90th Vehicular Technology Conference (VTC2019-Fall),”\
    \ (IEEE,\n2019), pp. 1–5.\n[240] S. S. Aung and T. T. Naing, “Na¨ıve bayes classifier\
    \ based traffic prediction\nsystem on cloud infrastructure,” Proceedings - International\
    \ Conference\n151\non Intelligent Systems, Modelling and Simulation, ISMS 2015-Octob,\n\
    193–198 (2015).\n[241] Y. Liu and H. Wu, “Prediction of road traffic congestion\
    \ based on random\nforest,” Proceedings - 2017 10th International Symposium on\
    \ Computa-\ntional Intelligence and Design, ISCID 2017 2, 361–364 (2018).\n[242]\
    \ W. Wei, H. Wu, and H. Ma, “An autoencoder and lstm-based traffic flow\nprediction\
    \ method,” Sensors 19, 1–16 (2019).\n[243] Y. Xiao, “Hybrid lstm neural network\
    \ for short-term traffic flow predic-\ntion,” Information 10, 105 (2019).\n[244]\
    \ F. Sun, Y. Pan, J. White, and A. Dubey, “Real-Time and Predictive An-\nalytics\
    \ for Smart Public Transportation Decision Support System,” 2016\nIEEE International\
    \ Conference on Smart Computing, SMARTCOMP\n2016 pp. 1–8 (2016).\n[245] N. Dogru\
    \ and A. Subasi, “Traffic accident detection using random forest\nclassifier,”\
    \ 2018 15th Learning and Technology Conference, L and T 2018\npp. 40–45 (2018).\n\
    [246] D. Nallaperuma, R. Nawaratne, T. Bandaragoda, A. Adikari, and\nS. Nguyen,\
    \ “Online incremental machine learning platform for big data-\ndriven smart traffic\
    \ management,” IEEE Transactions on Intelligent\nTransportation Systems 20, 4679–4690\
    \ (2019).\n[247] A. Mukherji, V. Raghuram, S. Pandey, H. Tran, and N. Bulusu,\
    \ “Com-\nmuterscanner: Towards smart indoor positioning systems in urban trans-\n\
    portation,” 2019 11th International Conference on Communication Sys-\ntems and\
    \ Networks, COMSNETS 2019 2061, 619–624 (2019).\n[248] S. Majumdar, M. M. Subhani,\
    \ B. Roullier, A. Anjum, and R. Zhu, “Con-\ngestion prediction for smart sustainable\
    \ cities using iot and machine learn-\ning approaches,” Sustainable Cities and\
    \ Society 64, 102500 (2021).\n[249] F. Peres and M. Castelli, “Combinatorial optimization\
    \ problems and\nmetaheuristics: Review, challenges, design, and development,”\
    \ Applied\nSciences 11, 6449 (2021).\n[250] M. Dorigo and K. Socha, “Ant colony\
    \ optimization,” Handbook of Ap-\nproximation Algorithms and Metaheuristics pp.\
    \ 26–1–26–14 (2007).\n[251] D. Whitley, “A genetic algorithm tutorial,” Statistics\
    \ and computing 4,\n65–85 (1994).\n[252] J. Kennedy and R. Eberhart, “Particle\
    \ swarm optimization,” in “Pro-\nceedings of ICNN’95-international conference\
    \ on neural networks,” , vol. 4\n(IEEE, 1995), vol. 4, pp. 1942–1948.\n[253] V.\
    \ Feoktistov, Differential evolution (Springer, 2006).\n152\n[254] D. Karaboga,\
    \ “Artificial bee colony algorithm,” scholarpedia 5, 6915\n(2010).\n[255] D. C.\
    \ H. Nguyen, J. C. Ascough II, H. R. Maier, G. C. Dandy, and A. A.\nAndales, “Optimization\
    \ of irrigation scheduling using ant colony algo-\nrithms and an advanced cropping\
    \ system model,” Environmental mod-\nelling & software 97, 32–45 (2017).\n[256]\
    \ B. Saeidian, M. S. Mesgari, B. Pradhan, and A. M. Alamri, “Irrigation\nwater\
    \ allocation at farm level based on temporal cultivation-related data\nusing meta-heuristic\
    \ optimisation algorithms,” Water 11, 2611 (2019).\n[257] D. Guo, J. E. Olesen,\
    \ K. Manevski, and X. Ma, “Optimizing irrigation\nschedule in a large agricultural\
    \ region under different hydrologic scenar-\nios,” Agricultural Water Management\
    \ 245, 106575 (2021).\n[258] S. Guo, F. Zhang, C. Zhang, C. An, S. Wang, and P.\
    \ Guo, “A multi-\nobjective hierarchical model for irrigation scheduling in the\
    \ complex canal\nsystem,” Sustainability 11, 24 (2019).\n[259] F. Zhang, C. He,\
    \ F. Yaqiong, X. Hao, and S. Kang, “Canal delivery and\nirrigation scheduling\
    \ optimization based on crop water demand,” Agri-\ncultural Water Management 260,\
    \ 107245 (2022).\n[260] A. Ikudayisi, J. Adeyemo, J. Odiyo, and A. Enitan, “Optimum\
    \ irriga-\ntion water allocation and crop distribution using combined pareto multi-\n\
    objective differential evolution,” Cogent Engineering 5, 1535749 (2018).\n[261]\
    \ J. Wu, R. Huang, T. Fang, and Y. Han, “Multi-objective model of irriga-\ntion\
    \ water distribution based on particle swarm optimization,” in “IOP\nConference\
    \ Series: Earth and Environmental Science,” , vol. 344 (IOP\nPublishing, 2019),\
    \ vol. 344, p. 012087.\n[262] A. L. P. De Ocampo and E. P. Dadios, “Energy cost\
    \ optimization in\nirrigation system of smart farm by using genetic algorithm,”\
    \ in “2017IEEE\n9th International Conference on Humanoid, Nanotechnology, Information\n\
    Technology, Communication and Control, Environment and Management\n(HNICEM),”\
    \ (IEEE, 2017), pp. 1–7.\n[263] L. Zhuo, J. Cheng, and Z. Gong, “Optimal water\
    \ allocation method based\non the genetic algorithm for a system of a reservoir\
    \ and two pumping\nstations,” Water Supply 22, 849–859 (2022).\n[264] R. Li, Y.\
    \ Chang, and Z. Wang, “Study of optimal allocation of water\nresources in dujiangyan\
    \ irrigation district of china based on an improved\ngenetic algorithm,” Water\
    \ Supply 21, 2989–2999 (2021).\n[265] S. K. Roy and D. De, “Genetic algorithm\
    \ based internet of precision agri-\ncultural things (iopat) for agriculture 4.0,”\
    \ Internet of Things p. 100201\n(2020).\n153\n[266] N. Lin, X. Wang, Y. Zhang,\
    \ X. Hu, and J. Ruan, “Fertigation manage-\nment for sustainable precision agriculture\
    \ based on internet of things,”\nJournal of Cleaner Production 277, 124119 (2020).\n\
    [267] C. Arif, B. I. Setiawan, M. Mizoguchi, and B. D. A. Nugroho, “Genetic\n\
    algorithms optimization for water management in irrigated paddy fields,”\nin “IOP\
    \ Conference Series: Earth and Environmental Science,” , vol. 335\n(IOP Publishing,\
    \ 2019), vol. 335, p. 012002.\n[268] WorldBank, “Solid waste management,” (2019).\n\
    [269] S. Sharmin and S. T. Al-Amin, “A cloud-based dynamic waste manage-\nment\
    \ system for smart cities,” Proceedings of the 7th Annual Symposium\non Computing\
    \ for Development, ACM DEV-7 2016 (2016).\n[270] R. Fujdiak, P. Masek, P. Mlynek,\
    \ J. Misurec, and E. Olshannikova, “Us-\ning genetic algorithm for advanced municipal\
    \ waste collection in smart\ncity,” 2016 10th International Symposium on Communication\
    \ Systems,\nNetworks and Digital Signal Processing, CSNDSP 2016 pp. 1–6 (2016).\n\
    [271] R. Assaf and Y. Saleh, “Vehicle-routing optimization for municipal solid\n\
    waste collection using genetic algorithm: the case of southern nablus city,”\n\
    Civil and environmental engineering reports (2017).\n[272] M. A. Hannan, M. S.\
    \ H. Lipu, M. Akhtar, R. A. Begum, M. A. A. Mamum,\nA. Hussain, M. S. Mia, and\
    \ H. Basri, “Solid waste collection optimization\nobjectives, constraints, modeling\
    \ approaches, and their challenges toward\nachieving sustainable development goals,”\
    \ Journal of cleaner production\np. 123557 (2020).\n[273] Y. Zhang, X. Luo, X.\
    \ Han, Y. Lu, J. Wei, and C. Yu, “Optimization of\nurban waste transportation\
    \ route based on genetic algorithm,” Security\nand Communication Networks 2022,\
    \ 1–10 (2022).\n[274] Q. Wei, Z. Guo, H. C. Lau, and Z. He, “An artificial bee\
    \ colony-based\nhybrid approach for waste collection problem with midway disposal\
    \ pat-\ntern,” Applied Soft Computing 76, 629–637 (2019).\n[275] S. P. Raflesia\
    \ and A. K. Pamosoaji, “A novel ant colony optimization\nalgorithm for waste collection\
    \ problem,” in “2019 4th International Con-\nference on Information Technology,\
    \ Information Systems and Electrical\nEngineering (ICITISEE),” (IEEE, 2019), pp.\
    \ 413–416.\n[276] M. Yazdani, K. Kabirifar, B. E. Frimpong, M. Shariati, M. Mirmozaffari,\n\
    and A. Boskabadi, “Improving construction and demolition waste collec-\ntion service\
    \ in an urban area using a simheuristic approach: A case study\nin sydney, australia,”\
    \ Journal of Cleaner Production 280, 124138 (2021).\n[277] S. Idwan, I. Mahmood,\
    \ J. A. Zubairi, and I. Matar, “Optimal management\nof solid waste in smart cities\
    \ using internet of things,” Wireless Personal\nCommunications 110, 485–501 (2020).\n\
    154\n[278] U. M. Faizal, R. Jayachitra, P. Vijayakumar, and M. Rajasekar, “Opti-\n\
    mization of inbound vehicle routes in the collection of bio-medical wastes,”\n\
    Materials Today: Proceedings 45, 692–699 (2021).\n[279] E. B. Tirkolaee, M. Alinaghian,\
    \ A. A. R. Hosseinabadi, M. B. Sasi, and\nA. K. Sangaiah, “An improved ant colony\
    \ optimization for the multi-trip\ncapacitated arc routing problem,” Computers\
    \ and Electrical Engineering\n77, 457–470 (2019).\n[280] “Branch and cut for vehicle\
    \ routing,” .\n[281] “Capacitated vrp instances — vehicle routing problem,” .\n\
    [282] M. Ettappan, V. Vimala, S. Ramesh, and V. T. Kesavan, “Optimal reac-\ntive\
    \ power dispatch for real power loss minimization and voltage stability\nenhancement\
    \ using artificial bee colony algorithm,” Microprocessors and\nMicrosystems 76,\
    \ 103085 (2020).\n[283] C. K. Das, O. Bass, G. Kothapalli, T. S. Mahmoud, and\
    \ D. Habibi,\n“Optimal placement of distributed energy storage systems in distribution\n\
    networks using artificial bee colony algorithm,” Applied energy 232, 212–\n228\
    \ (2018).\n[284] W. S. Sakr, R. A. El-Sehiemy, and A. M. Azmy, “Adaptive differential\n\
    evolution algorithm for efficient reactive power management,” Applied\nSoft Computing\
    \ 53, 336–351 (2017).\n[285] T. T. Nguyen and F. Mohammadi, “Optimal placement\
    \ of tcsc for conges-\ntion management and power loss reduction using multi-objective\
    \ genetic\nalgorithm,” Sustainability 12, 2813 (2020).\n[286] I. I. Atteya, H.\
    \ A. Ashour, N. Fahmi, and D. Strickland, “Distribution net-\nwork reconfiguration\
    \ in smart grid system using modified particle swarm\noptimization,” 2016 IEEE\
    \ International Conference on Renewable Energy\nResearch and Applications, ICRERA\
    \ 2016 5, 305–313 (2016).\n[287] N. Kanwar, N. Gupta, K. R. Niazi, A. Swarnkar,\
    \ and R. C. Bansal, “Si-\nmultaneous allocation of distributed energy resource\
    \ using improved par-\nticle swarm optimization,” Applied Energy 185, 1684–1693\
    \ (2017).\n[288] K. Utkarsh, A. Trivedi, D. Srinivasan, and T. Reindl, “A consensus-\n\
    based distributed computational intelligence technique for real-time opti-\nmal\
    \ control in smart distribution grids,” IEEE Transactions on Emerging\nTopics\
    \ in Computational Intelligence 1, 51–60 (2016).\n[289] A. Askarzadeh, “A memory-based\
    \ genetic algorithm for optimization of\npower generation in a microgrid,” IEEE\
    \ transactions on sustainable en-\nergy 9, 1081–1089 (2017).\n[290] O. H. Mohammed,\
    \ Y. Amirat, and M. Benbouzid, “Economical evaluation\nand optimal energy management\
    \ of a stand-alone hybrid energy system\nhandling in genetic algorithm strategies,”\
    \ Electronics 7, 233 (2018).\n155\n[291] B. K. Das, R. Hassan, M. S. H. K. Tushar,\
    \ F. Zaman, M. Hasan, and\nP. Das, “Techno-economic and environmental assessment\
    \ of a hybrid re-\nnewable energy system using multi-objective genetic algorithm:\
    \ A case\nstudy for remote island in bangladesh,” Energy Conversion and Manage-\n\
    ment 230, 113823 (2021).\n[292] D. K. Geleta and M. S. Manshahia, “Artificial\
    \ bee colony-based optimiza-\ntion of hybrid wind and solar renewable energy system,”\
    \ Research Anthol-\nogy on Clean Energy Management and Solutions pp. 819–842 (2021).\n\
    [293] M. M. Moghaddam, M. Marzband, and F. Azarinejadian, “Optimal en-\nergy management\
    \ for a home microgrid based on multi-period artifi-\ncial bee colony,” in “2017\
    \ Iranian Conference on Electrical Engineering\n(ICEE),” (IEEE, 2017), pp. 1446–1451.\n\
    [294] H. U. R. Habib, S. Wang, A. Waqar, B. S. Farhan, K. M. Kotb, and Y.-S.\n\
    Kim, “Combined heat and power units sizing and energy cost optimization\nof a\
    \ residential building by using an artificial bee colony algorithm,” IEEE\nAccess\
    \ 8, 218289–218303 (2020).\n[295] F. Lezama, J. Soares, R. Faia, T. Pinto, and\
    \ Z. Vale, “A new hybrid-\nadaptive differential evolution for a smart grid application\
    \ under uncer-\ntainty,” in “2018 IEEE Congress on Evolutionary Computation (CEC),”\n\
    (IEEE, 2018), pp. 1–8.\n[296] F. Lezama, L. E. Sucar, E. M. de Cote, J. Soares,\
    \ and Z. Vale, “Differential\nevolution strategies for large-scale energy resource\
    \ management in smart\ngrids,” in “Proceedings of the Genetic and Evolutionary\
    \ Computation\nConference Companion,” (2017), pp. 1279–1286.\n[297] V. Palakonda,\
    \ N. H. Awad, R. Mallipeddi, M. Z. Ali, K. C. Veluvolu,\nand P. N. Suganthan,\
    \ “Differential evolution with stochastic selection\nfor uncertain environments:\
    \ A smart grid application,” in “2018 IEEE\nCongress on Evolutionary Computation\
    \ (CEC),” (IEEE, 2018), pp. 1–7.\n[298] S. Mandal and K. K. Mandal, “Optimal energy\
    \ management of micro-\ngrids under environmental constraints using chaos enhanced\
    \ differential\nevolution,” Renewable Energy Focus 34, 129–141 (2020).\n[299]\
    \ M. Azaza and F. Wallin, “Multi objective particle swarm optimization of\nhybrid\
    \ micro-grid system: A case study in sweden,” Energy 123, 108–118\n(2017).\n[300]\
    \ H. A. Gabbar, M. R. Abdussami, and M. I. Adham, “Optimal planning\nof nuclear-renewable\
    \ micro-hybrid energy system by particle swarm opti-\nmization,” IEEE Access 8,\
    \ 181049–181073 (2020).\n[301] B. A. Bhayo, H. H. Al-Kayiem, S. I. U. Gilani,\
    \ and F. B. Ismail, “Power\nmanagement optimization of hybrid solar photovoltaic-battery\
    \ integrated\nwith pumped-hydro-storage system for standalone electricity generation,”\n\
    Energy Conversion and Management 215, 112942 (2020).\n156\n[302] L. F. Grisales-Nore˜na,\
    \ O. D. Montoya, and C. A. Ramos-Paja, “An en-\nergy management system for optimal\
    \ operation of bss in dc distributed\ngeneration environments based on a parallel\
    \ pso algorithm,” Journal of\nEnergy Storage 29, 101488 (2020).\n[303] M. Mahdavi,\
    \ A. Kimiyaghalam, H. H. Alhelou, M. Javadi, J. P. S. Catal˜ao,\nand A. Ashouri,\
    \ “Transmission expansion planning considering power\nlosses, expansion of substations\
    \ and uncertainty in fuel price using discrete\nartificial bee colony algorithm,”\
    \ IEEE Access (2021).\n[304] T. K. Maji and P. Acharjee, “Multiple solutions of\
    \ optimal pmu placement\nusing exponential binary pso algorithm for smart grid\
    \ applications,” IEEE\nTransactions on Industry Applications 53, 2550–2559 (2017).\n\
    [305] M. B. Rasheed and M. D. R-Moreno, “Minimizing pricing policies based\non\
    \ user load profiles and residential demand responses in smart grids,”\nApplied\
    \ Energy 310, 118492 (2022).\n[306] D. Zhang, Z. Fu, and L. Zhang, “An improved\
    \ ts algorithm for loss-\nminimum reconfiguration in large-scale distribution\
    \ systems,” Electric\nPower Systems Research 77, 685–694 (2007).\n[307] J. P.\
    \ Pell, J. M. Sirel, A. K. Marsden, I. Ford, and S. M. Cobbe, “Effect of\nreducing\
    \ ambulance response times on deaths from out of hospital cardiac\narrest: cohort\
    \ study,” Bmj 322, 1385–1388 (2001).\n[308] RapidSOS, “Outcomes: Quantifying the\
    \ impact of emergency response\ntime - rapidsos,” (2015).\n[309] P. Toth and D.\
    \ Vigo, The vehicle routing problem (SIAM, 2002).\n[310] A. A. Ageev and M. I.\
    \ Sviridenko, “Approximation algorithms for maxi-\nmum coverage and max cut with\
    \ given sizes of parts,” in “International\nConference on Integer Programming\
    \ and Combinatorial Optimization,”\n(Springer, 1999), pp. 17–30.\n[311] E. Mouhcine,\
    \ Y. Karouani, K. Mansouri, and Y. Mohamed, “Toward a\ndistributed strategy for\
    \ emergency ambulance routing problem,” in “2018\n4th International Conference\
    \ on Optimization and Applications (ICOA),”\n(IEEE, 2018), pp. 1–4.\n[312] L.\
    \ Brotcorne, G. Laporte, and F. Semet, “Ambulance location and relo-\ncation models,”\
    \ European journal of operational research 147, 451–463\n(2003).\n[313] M. Benabdouallah,\
    \ C. Bojji, and O. E. Yaakoubi, “Deployment and re-\ndeployment of ambulances\
    \ using a heuristic method and an ant colony\noptimization - case study,” Proceedings\
    \ - 2016 3rd International Confer-\nence on Systems of Collaboration, SysCo 2016\
    \ pp. 1–4 (2017).\n157\n[314] M. Benabdouallah and C. Bojji, “Comparison between\
    \ ga and aco for\nemergency coverage problem in a smart healthcare environment,”\
    \ in “Pro-\nceedings of the 2017 International Conference on Smart Digital Environ-\n\
    ment,” (2017), pp. 48–55.\n[315] Y. A. Kochetov and N. B. Shamray, “Optimization\
    \ of the ambulance fleet\nlocation and relocation,” Journal of Applied and Industrial\
    \ Mathematics\n15, 234–252 (2021).\n[316] Y. Yan, Y. Kong, and Z. Fu, “Dynamic\
    \ resource scheduling in emergency\nenvironment,” Journal of Information Hiding\
    \ and Privacy Protection 1,\n143 (2019).\n[317] Q. Lu and K.-D. Kim, “A genetic\
    \ algorithm approach for expedited cross-\ning of emergency vehicles in connected\
    \ and autonomous intersection traf-\nfic,” Journal of Advanced Transportation\
    \ 2017 (2017).\n[318] H. M. Amer, H. A. Al-Kashoash, A. Kemp, L. Mihaylova, and\
    \ M. May-\nfield, “Coalition game for emergency vehicles re-routing in smart cities,”\n\
    Proceedings of the IEEE Sensor Array and Multichannel Signal Process-\ning Workshop\
    \ 2018-July, 306–310 (2018).\n[319] B. N. Silva and K. Han, “Mutation operator\
    \ integrated ant colony opti-\nmization based domestic appliance scheduling for\
    \ lucrative demand side\nmanagement,” Future generation computer systems 100,\
    \ 557–568 (2019).\n[320] K. N. Bui, I. E. Agbehadji, R. Millham, D. Camacho, and\
    \ J. J. Jung,\n“Distributed artificial bee colony approach for connected appliances\
    \ in\nsmart home energy management system,” Expert Systems 37, e12521\n(2020).\n\
    [321] S. N. Makhadmeh, A. T. Khader, M. A. Al-Betar, S. Naim, Z. A. A.\nAlyasseri,\
    \ and A. K. Abasi, “Particle swarm optimization algorithm for\npower scheduling\
    \ problem using smart battery,” 2019 IEEE Jordan In-\nternational Joint Conference\
    \ on Electrical Engineering and Information\nTechnology, JEEIT 2019 - Proceedings\
    \ pp. 672–677 (2019).\n[322] S. Abid, A. Zafar, R. Khalid, S. Javaid, U. Qasim,\
    \ Z. A. Khan, and\nN. Javaid, “Managing energy in smart homes using binary particle\
    \ swarm\noptimization,” in “Conference on Complex, Intelligent, and Software In-\n\
    tensive Systems,” (Springer, 2017), pp. 189–196.\n[323] I. Fatima, A. Khalid,\
    \ S. Zahoor, A. Yasmeen, S. Arif, U. Zafar, and\nN. Javaid, “Home energy management\
    \ system using ant colony optimiza-\ntion technique in microgrid,” in “International\
    \ Conference on Broadband\nand Wireless Computing, Communication and Applications,”\
    \ (Springer,\n2017), pp. 267–279. Use ACO for appliance scheduling in a microgrid.\n\
    [324] N. U. Rehman, N. Javaid, and Z. A. Khan, “An enhanced differential\nevolution\
    \ based energy management system for smart grids,” in “2017\n158\n31st International\
    \ Conference on Advanced Information Networking and\nApplications Workshops (WAINA),”\
    \ (IEEE, 2017), pp. 132–137.\n[325] I. Gupta, G. N. Anandini, and M. Gupta, “An\
    \ hour wise device scheduling\napproach for demand side management in smart grid\
    \ using particle swarm\noptimization,” 2016 National Power Systems Conference,\
    \ NPSC 2016 pp.\n1–6 (2017).\n[326] M. A. Nasab, M. Zand, M. Eskandari, P. Sanjeevikumar,\
    \ and P. Siano,\n“Optimal planning of electrical appliance of residential units\
    \ in a smart\nhome network using cloud services,” Smart Cities 4, 1173–1195 (2021).\n\
    [327] I. O. Essiet, Y. Sun, and Z. Wang, “Optimized energy consumption model\n\
    for smart home using improved differential evolution algorithm,” Energy\n172,\
    \ 354–365 (2019).\n[328] I. Ullah and D. Kim, “An improved optimization function\
    \ for maximiz-\ning user comfort with minimum energy consumption in smart homes,”\n\
    Energies 10 (2017).\n[329] R. Reghukumar, S. Sambhu, and V. R. Pandi, “Multi-objective\
    \ optimiza-\ntion for efficient home energy management system using differential\
    \ evo-\nlution algorithm,” in “2018 3rd IEEE International Conference on Recent\n\
    Trends in Electronics, Information & Communication Technology (RTE-\nICT),” (IEEE,\
    \ 2018), pp. 1157–1162.\n[330] T. Pamulapati, R. Mallipeddi, and M. Lee, “Multi-objective\
    \ home appli-\nance scheduling with implicit and interactive user satisfaction\
    \ modelling,”\nApplied Energy 267, 114690 (2020).\n[331] A. R. Jordehi, “Binary\
    \ particle swarm optimisation with quadratic trans-\nfer function: A new binary\
    \ optimisation algorithm for optimal schedul-\ning of appliances in smart homes,”\
    \ Applied Soft Computing 78, 465–480\n(2019).\n[332] P. Chandra, A. Das, C. Das,\
    \ A. Naskar, B. Ganguly, and S. Paul, “Dif-\nferential evolution algorithm based\
    \ energy management of residential mi-\ncrogrid under appliance scheduling dsm,”\
    \ in “2020 IEEE VLSI DEVICE\nCIRCUIT AND SYSTEM (VLSI DCS),” (IEEE, 2020), pp.\
    \ 50–55.\n[333] R. Faia, P. Faria, Z. Vale, and J. Spinola, “Demand response optimiza-\n\
    tion using particle swarm algorithm considering optimum battery energy\nstorage\
    \ schedule in a residential house,” Energies 12, 1645 (2019).\n[334] D. Madathil,\
    \ V. R. Pandi, K. Ilango, and M. G. Nair, “Differential evo-\nlution based energy\
    \ management system for zero net energy building,” in\n“2017 International Conference\
    \ on Technological Advancements in Power\nand Energy (TAP Energy),” (IEEE, 2017),\
    \ pp. 1–5.\n159\n[335] H. Swalehe and B. Marungsri, “Intelligent algorithm for\
    \ optimal load\nmanagement in smart home appliance scheduling in distribution\
    \ sys-\ntem,” in “2018 International Electrical Engineering Congress (iEECON),”\n\
    (IEEE, 2018), pp. 1–4.\n[336] J.-C. Chang and T.-H. Wu, “Demand side management\
    \ of power for\ntime-of-use pricing based on particle swarm optimization,” in\
    \ “2020 3rd\nIEEE International Conference on Knowledge Innovation and Invention\n\
    (ICKII),” (IEEE, 2020), pp. 317–320.\n[337] C. Bharathi, D. Rekha, and V. Vijayakumar,\
    \ “Genetic algorithm based\ndemand side management for smart grid,” Wireless Personal\
    \ Communi-\ncations 93, 481–502 (2017).\n[338] Z. Chen, Y. Chen, R. He, J. Liu,\
    \ M. Gao, and L. Zhang, “Multi-objective\nresidential load scheduling approach\
    \ for demand response in smart grid,”\nSustainable Cities and Society 76, 103530\
    \ (2022).\n[339] W. Tao, Z. H. Lai, M. C. Leu, and Z. Yin, “Worker activity recognition\n\
    in smart manufacturing using imu and semg signals with convolutional\nneural networks,”\
    \ Procedia Manufacturing 26, 1159–1166 (2018).\n[340] R. Zhao, R. Yan, Z. Chen,\
    \ K. Mao, P. Wang, and R. X. Gao, “Deep\nlearning and its applications to machine\
    \ health monitoring,” Mechanical\nSystems and Signal Processing 115, 213–237 (2019).\n\
    [341] B. Huang, W. Wang, S. Ren, R. Y. Zhong, and J. Jiang, “A proactive task\n\
    dispatching method based on future bottleneck prediction for the smart\nfactory,”\
    \ International Journal of Computer Integrated Manufacturing\n32, 278–293 (2019).\n\
    [342] M. Sadeghi, R. Tavakkoli-Moghaddam, and R. Babazadeh, “An efficient\nartificial\
    \ bee colony algorithm for a p-hub covering location problem with\ntravel time\
    \ reliability.” International Journal of Industrial Engineering 25\n(2018).\n\
    [343] K. Guo, “Research on location selection model of distribution network\n\
    with constrained line constraints based on genetic algorithm,” Neural\nComputing\
    \ and Applications 32, 1679–1689 (2020).\n[344] Y. Su, J. Liu, X. Xiang, and X.\
    \ Zhang, “A responsive ant colony optimiza-\ntion for large-scale dynamic vehicle\
    \ routing problems via pheromone di-\nversity enhancement,” Complex and Intelligent\
    \ Systems pp. 1–16 (2021).\n[345] M. Alinaghian, M. Ghazanfari, N. Norouzi, and\
    \ H. Nouralizadeh, “A\nnovel model for the time dependent competitive vehicle\
    \ routing problem:\nModified random topology particle swarm optimization,” Networks\
    \ and\nSpatial Economics 17, 1185–1211 (2017).\n[346] D. M. Utama, T. A. Fitria,\
    \ and A. K. Garside, “Artificial bee colony\nalgorithm for solving green vehicle\
    \ routing problems with time windows,”\n160\nin “Journal of Physics: Conference\
    \ Series,” , vol. 1933 (IOP Publishing,\n2021), vol. 1933, p. 012043.\n[347] M.\
    \ Ibrahim, F. Nurhakiki, D. Utama, and A. Rizaki, “Optimised genetic\nalgorithm\
    \ crossover and mutation stage for vehicle routing problem pick-\nup and delivery\
    \ with time windows,” in “IOP Conference Series: Materials\nScience and Engineering,”\
    \ , vol. 1071 (IOP Publishing, 2021), vol. 1071,\np. 012025.\n[348] D. A. Mounia\
    \ and D. Bachir, “A hybrid discrete artificial bee colony for\nthe green pickup\
    \ and delivery problem with time windows,” Informatica\n44 (2020).\n[349] Z. Gu,\
    \ Y. Zhu, Y. Wang, X. Du, M. Guizani, and Z. Tian, “Applying\nartificial bee colony\
    \ algorithm to the multidepot vehicle routing problem,”\nSoftware: Practice and\
    \ Experience (2020).\n[350] N. Norouzi, M. Sadegh-Amalnick, and R. Tavakkoli-Moghaddam,\
    \ “Modi-\nfied particle swarm optimization in a time-dependent vehicle routing\
    \ prob-\nlem: minimizing fuel consumption,” Optimization Letters 11, 121–134\n\
    (2017).\n[351] K. K. H. Ng, C. K. M. Lee, S. Z. Zhang, K. Wu, and W. Ho, “A multiple\n\
    colonies artificial bee colony algorithm for a capacitated vehicle routing\nproblem\
    \ and re-routing strategies under time-dependent traffic conges-\ntion,” Computers\
    \ and Industrial Engineering 109, 151–168 (2017).\n[352] M. M. Solomon, “Algorithms\
    \ for the vehicle routing and scheduling prob-\nlems with time window constraints,”\
    \ Operations research 35, 254–265\n(1987).\n[353] Y. Huang, S. A. Ludwig, and\
    \ F. Deng, “Sensor optimization using a ge-\nnetic algorithm for structural health\
    \ monitoring in harsh environments,”\nJournal of Civil Structural Health Monitoring\
    \ 6, 509–519 (2016).\n[354] F. Zhao, H. Bao, S. Xue, and Q. Xu, “Multi-objective\
    \ particle swarm\noptimization of sensor distribution scheme with consideration\
    \ of the ac-\ncuracy and the robustness for deformation reconstruction,” Sensors\
    \ 19,\n1306 (2019).\n[355] C. Yang, K. Liang, X. Zhang, and X. Geng, “Sensor placement\
    \ algorithm\nfor structural health monitoring with redundancy elimination model\
    \ based\non sub-clustering strategy,” Mechanical Systems and Signal Processing\n\
    124, 369–387 (2019).\n[356] A. Downey, C. Hu, and S. Laflamme, “Optimal sensor\
    \ placement within\na hybrid dense sensor network using an adaptive genetic algorithm\
    \ with\nlearning gene pool,” Structural Health Monitoring 17, 450–460 (2018).\n\
    161\n[357] B. Cao, X. Kang, J. Zhao, P. Yang, Z. Lv, and X. Liu, “Differential\n\
    evolution-based 3-d directional wireless sensor network deployment opti-\nmization,”\
    \ IEEE Internet of Things Journal 5, 3594–3605 (2018).\n[358] R. Marks, A. Clarke,\
    \ C. A. Featherston, and R. Pullin, “Optimization of\nacousto-ultrasonic sensor\
    \ networks using genetic algorithms based on ex-\nperimental and numerical data\
    \ sets,” International Journal of Distributed\nSensor Networks 13, 1550147717743702\
    \ (2017).\n[359] H. Liu, X. He, and Y. Jiao, “Damage identification algorithm\
    \ of hinged\njoints for simply supported slab bridges based on modified hinge\
    \ plate\nmethod and artificial bee colony algorithms,” Algorithms 11, 198 (2018).\n\
    [360] H. Tran-Ngoc, S. Khatir, G. D. Roeck, T. Bui-Tien, L. Nguyen-Ngoc, and\n\
    M. A. Wahab, “Model updating for nam o bridge using particle swarm\noptimization\
    \ algorithm and genetic algorithm,” Sensors 18, 4131 (2018).\n[361] K. Gao, Y.\
    \ Zhang, A. Sadollah, and R. Su, “Improved artificial bee colony\nalgorithm for\
    \ solving urban traffic light scheduling problem,” in “2017\nIEEE Congress on\
    \ Evolutionary Computation (CEC),” (IEEE, 2017), pp.\n395–402.\n[362] R. F. Adebiyi,\
    \ K. A. Abubilal, M. B. Mu’azu, and B. H. Adebiyi, “Devel-\nopment and simulation\
    \ of adaptive traffic light controller using artificial\nbee colony algorithm,”\
    \ International Journal of Intelligent Systems and\nApplications 10, 68–74 (2018).\n\
    [363] T. Mao, A.-S. Mihaita, and C. Cai, “Traffic signal control optimization\n\
    under severe incident conditions using genetic algorithm,” arXiv preprint\narXiv:1906.05356\
    \ (2019).\n[364] C. Tang, S. Xia, C. Zhu, and X. Wei, “Phase timing optimization\
    \ for\nsmart traffic control based on fog computing,” IEEE Access 7, 84217–\n\
    84228 (2019).\n[365] Z. Li, M. Shahidehpour, S. Bahramirad, and A. Khodaei, “Optimizing\n\
    traffic signal settings in smart cities,” IEEE Transactions on Smart Grid\n8,\
    \ 2382–2393 (2017).\n[366] X. Chen and Z. Yuan, “Environmentally friendly traffic\
    \ control strategy-\na case study in xi’an city,” Journal of Cleaner Production\
    \ 249, 119397\n(2020).\n[367] E. Korkmaz and A. P. AKG¨UNG¨OR, “Delay estimation\
    \ models for sig-\nnalized intersections using differential evolution algorithm,”\
    \ Journal of\nEngineering Research 5 (2017).\n[368] X. Zhang, X. Fan, S. Yu, A.\
    \ Shan, S. Fan, Y. Xiao, and F. Dang, “Inter-\nsection signal timing optimization:\
    \ A multi-objective evolutionary algo-\nrithm,” Sustainability 2022, Vol. 14,\
    \ Page 1506 14, 1506 (2022).\n162\n[369] M. Wang, H. Dong, X. Li, L. Song, and\
    \ D. Pang, “A novel parking sys-\ntem designed for smart cities,” Proceedings\
    \ - 2017 Chinese Automation\nCongress, CAC 2017 2017-Janua, 3429–3434 (2017).\n\
    [370] I. Aydin, M. Karakose, and E. Karakose, “A navigation and reservation\n\
    based smart parking platform using genetic optimization for smart cities,”\nICSG\
    \ 2017 - 5th International Istanbul Smart Grids and Cities Congress\nand Fair\
    \ pp. 120–124 (2017).\n[371] F. Ferdous and M. S. Mahmud, “Intelligent traffic\
    \ monitoring system us-\ning vanet infrastructure and ant colony optimization,”\
    \ 2016 5th Interna-\ntional Conference on Informatics, Electronics and Vision,\
    \ ICIEV 2016 pp.\n356–360 (2016). The authors in FF16 use ACO in a smart transportation\n\
    system to efficient route vehicles using VANETS.\n[372] F. Pompei, “Ant colony\
    \ optimisation and geolocation technologies for the\ntransportation assignment\
    \ problem,” Proceedings - International Com-\nputer Software and Applications\
    \ Conference 2, 749–753 (2017). The au-\nthors in FP17 use ACO for planning of\
    \ public transport routes for Rome\nusing Phone data from transit users.\n[373]\
    \ A. Rehman, M. M. Rathore, A. Paul, F. Saeed, and R. W. Ahmad, “Ve-\nhicular\
    \ traffic optimisation and even distribution using ant colony in smart\ncity environment,”\
    \ IET Intelligent Transport Systems 12, 594–601 (2018).\n[374] A. Jovanovi´c and\
    \ D. Teodorovi´c, “Fixed-time traffic control at super-\nstreet intersections\
    \ by bee colony optimization,” Transportation Research\nRecord p. 03611981211058104\
    \ (2021).\n[375] T.-H. Nguyen and J. J. Jung, “Ant colony optimization-based traffic\
    \ rout-\ning with intersection negotiation for connected vehicles,” Applied Soft\n\
    Computing 112, 107828 (2021).\n[376] R. Pitakaso, K. Sethanan, and N. Srijaroon,\
    \ “Modified differential evolu-\ntion algorithms for multi-vehicle allocation\
    \ and route optimization for em-\nployee transportation,” Engineering Optimization\
    \ 52, 1225–1243 (2020).\n[377] Y. Yi, K. Choi, and Y. J. Lee, “Optimal limited-stop\
    \ bus routes selec-\ntion using a genetic algorithm and smart card data,” Journal\
    \ of Public\nTransportation 19, 178–198 (2016).\n[378] A. T. Buba and L. S. Lee,\
    \ “Differential evolution with improved sub-\nroute reversal repair mechanism\
    \ for multiobjective urban transit routing\nproblem,” Numerical Algebra, Control\
    \ and Optimization 8, 351 (2018).\n[379] X. Mao, “Study on ant colony optimization\
    \ algorithm for “one-day tour”\ntraffic line,” Cluster Computing 22, 3673–3680\
    \ (2019).\n[380] A. Jovanovi´c, M. Nikoli´c, and D. Teodorovi´c, “Area-wide urban\
    \ traffic\ncontrol: A bee colony optimization approach,” Transportation Research\n\
    Part C: Emerging Technologies 77, 329–350 (2017).\n163\n[381] K. Hassoune, W.\
    \ Dachry, F. Moutaouakkil, and H. Medromi, “Dynamic\nparking guidance architecture\
    \ using ant colony optimization and multi-\nagent systems,” Journal of Advances\
    \ in Information Technology 11, 58–63\n(2020).\n[382] U. Nations, “World population\
    \ prospects: the 2017 revision, key findings\nand advance tables,” Department\
    \ of Economics and Social Affairs PD,\neditor. New York: United Nations (2017).\n\
    [383] WHO, “Falls : Key facts,” (2018).\n[384] R. Afable,\nB. Averbeck,\nK. Holmen,\n\
    R. Dziedzicki,\nA. Nichols,\nJ. Schlegelmilch, and D. Caruso, “When i’m 64: How\
    \ boomers will change\nhealth care,” (2007).\n[385] M. K. James, M. C. Victor,\
    \ S. M. Saghir, and P. A. Gentile, “Characteri-\nzation of fall patients: Does\
    \ age matter?” Journal of Safety Research 64,\n83–92 (2018).\n[386] J. A. Stevens,\
    \ M. F. Ballesteros, K. A. Mack, R. A. Rudd, E. DeCaro, and\nG. Adler, “Gender\
    \ differences in seeking care for falls in the aged medicare\npopulation,” American\
    \ journal of preventive medicine 43, 59–62 (2012).\n[387] J. Morisod and M. Coutaz,\
    \ “Post-fall syndrome: how to recognize and\ntreat it?” Revue M´edicale Suisse\
    \ 3, 2531–2 (2007).\n[388] K. Chaccour, R. Darazi, A. H. El Hassani, and E. Andres,\
    \ “From fall de-\ntection to fall prevention: A generic classification of fall-related\
    \ systems,”\nIEEE Sensors Journal 17, 812–822 (2016).\n[389] A. L. S. D. Lima,\
    \ L. J. W. Evers, T. Hahn, L. Bataille, J. L. Hamilton,\nM. A. Little, Y. Okuma,\
    \ B. R. Bloem, and M. J. Faber, “Freezing of\ngait and fall detection in parkinson’s\
    \ disease using wearable sensors: a\nsystematic review,” Journal of neurology\
    \ 264, 1642–1654 (2017).\n[390] E. E. Geertsema, G. H. Visser, M. A. Viergever,\
    \ and S. N. Kalitzin,\n“Automated remote fall detection using impact features\
    \ from video and\naudio,” Journal of biomechanics 88, 25–32 (2019).\n[391] P.\
    \ Tsinganos and A. Skodras, “A smartphone-based fall detection system\nfor the\
    \ elderly,” in “Proceedings of the 10th International Symposium on\nImage and\
    \ Signal Processing and Analysis,” (IEEE, 2017), pp. 53–58.\n[392] N. El Halabi,\
    \ R. A. Z. Daou, R. Achkar, A. Hayek, and J. B¨orcs¨ok,\n“Monitoring system for\
    \ prediction and detection of epilepsy seizure,” in\n“2019 Fourth International\
    \ Conference on Advances in Computational\nTools for Engineering Applications\
    \ (ACTEA),” (IEEE, 2019), pp. 1–7.\n[393] J. Fleming and C. Brayne, “Inability\
    \ to get up after falling, subsequent\ntime on floor, and summoning help: prospective\
    \ cohort study in people\nover 90,” Bmj 337 (2008).\n164\n[394] K. Ozcan, A. K.\
    \ Mahabalagiri, M. Casares, and S. Velipasalar, “Auto-\nmatic fall detection and\
    \ activity classification by a wearable embedded\nsmart camera,” IEEE journal\
    \ on emerging and selected topics in circuits\nand systems 3, 125–136 (2013).\n\
    [395] A. Ramachandran and A. Karuppiah, “A survey on recent advances in\nwearable\
    \ fall detection systems,” BioMed research international 2020\n(2020).\n[396]\
    \ Q. Guan, C. Li, X. Guo, and B. Shen, “Infrared signal based elderly fall\ndetection\
    \ for in-home monitoring,” in “2017 9th International Confer-\nence on Intelligent\
    \ Human-Machine Systems and Cybernetics (IHMSC),”\n, vol. 1 (IEEE, 2017), vol.\
    \ 1, pp. 373–376.\n[397] A. Yazar, F. Erden, and A. E. Cetin, “Multi-sensor ambient\
    \ assisted\nliving system for fall detection,” in “Proceedings of the IEEE International\n\
    Conference on Acoustics, Speech, and Signal Processing (ICASSP’14),”\n(2014),\
    \ pp. 1–3.\n[398] S. M. Adnan, A. Irtaza, S. Aziz, M. O. Ullah, A. Javed, and\
    \ M. T. Mah-\nmood, “Fall detection through acoustic local ternary patterns,”\
    \ Applied\nAcoustics 140, 296–300 (2018).\n[399] S. Palipana, D. Rojas, P. Agrawal,\
    \ and D. Pesch, “Falldefi: Ubiquitous\nfall detection using commodity wi-fi devices,”\
    \ Proceedings of the ACM\non Interactive, Mobile, Wearable and Ubiquitous Technologies\
    \ 1, 1–25\n(2018).\n[400] I. Halima, J.-M. Lafert´e, G. Cormier, A.-J. Foug`ere,\
    \ and J.-L. Dillenseger,\n“Depth and thermal information fusion for head tracking\
    \ using particle\nfilter in a fall detection context,” Integrated Computer-Aided\
    \ Engineering\npp. 1–14 (2020).\n[401] Q. Han, H. Zhao, W. Min, H. Cui, X. Zhou,\
    \ K. Zuo, and R. Liu, “A\ntwo-stream approach to fall detection with mobilevgg,”\
    \ IEEE Access 8,\n17556–17566 (2020).\n[402] J. Zhang, C. Wu, and Y. Wang, “Human\
    \ fall detection based on body\nposture spatio-temporal evolution,” Sensors 20,\
    \ 946 (2020).\n[403] R. Gupta, P. Anand, S. Chaudhury, B. Lall, and S. Singh,\
    \ “Compressive\nsensing based privacy for fall detection,” arXiv preprint arXiv:2001.03463\n\
    (2020).\n[404] R. Espinosa, H. Ponce, S. Guti´errez, L. Mart´ınez-Villase˜nor,\
    \ J. Brieva,\nand E. Moya-Albor, “Application of convolutional neural networks\
    \ for fall\ndetection using multiple cameras,” in “Challenges and Trends in Multi-\n\
    modal Fall Detection for Healthcare,” (Springer, 2020), pp. 97–120.\n[405] M.\
    \ T. Pourazad, A. Shojaei-Hashemi, P. Nasiopoulos, M. Azimi, M. Mak,\nJ. Grace,\
    \ D. Jung, and T. Bains, “A non-intrusive deep learning based fall\n165\ndetection\
    \ scheme using video cameras,” in “2020 International Conference\non Information\
    \ Networking (ICOIN),” (IEEE, 2020), pp. 443–446.\n[406] Y. Nizam and M. M. A.\
    \ Jamil, “A novel approach for human fall detection\nand fall risk assessment,”\
    \ in “Challenges and Trends in Multimodal Fall\nDetection for Healthcare,” (Springer,\
    \ 2020), pp. 237–259.\n[407] Z. Liu, M. Yang, Y. Yuan, and K. Y. Kan, “Fall detection\
    \ and person-\nnel tracking system using infrared array sensors,” IEEE Sensors\
    \ Journal\n(2020).\n[408] A. Singh, S. U. Rehman, S. Yongchareon, and P. H. J.\
    \ Chong, “Sensor\ntechnologies for fall detection systems: A review,” IEEE Sensors\
    \ Journal\n20, 6889–6919 (2020).\n[409] M. Hubl, O. Pohl, V. Noack, P. Hahlweg,\
    \ C. Ehm, M. Derleh, T. Wei-\nland, E. Schick, H. M¨uller, D. Hampicke et al.,\
    \ “Embedding of wear-\nable electronics into smart sensor insole,” in “2016 IEEE\
    \ 18th Electronics\nPackaging Technology Conference (EPTC),” (IEEE, 2016), pp.\
    \ 597–601.\n[410] T. Shi, X. Sun, Z. Xia, L. Chen, and J. Liu, “Fall detection\
    \ algorithm\nbased on triaxial accelerometer and magnetometer.” Engineering Letters\n\
    24 (2016).\n[411] S. Hwang, M. Ryu, Y. Yang, and N. Lee, “Fall detection with\
    \ three-axis\naccelerometer and magnetometer in a smartphone,” in “Proceedings\
    \ of\nthe International Conference on Computer Science and Technology, Jeju,\n\
    Korea,” (2012), pp. 25–27.\n[412] X. Xi, M. Tang, S. M. Miran, and Z. Luo, “Evaluation\
    \ of feature extrac-\ntion and recognition for activity monitoring and fall detection\
    \ based on\nwearable semg sensors,” Sensors 17, 1229 (2017).\n[413] P. Melillo,\
    \ R. Castaldo, G. Sannino, A. Orrico, G. De Pietro, and L. Pec-\nchia, “Wearable\
    \ technology and ecg processing for fall risk assessment,\nprevention and detection,”\
    \ in “2015 37th Annual International Confer-\nence of the IEEE Engineering in\
    \ Medicine and Biology Society (EMBC),”\n(IEEE, 2015), pp. 7740–7743.\n[414] K.-C.\
    \ Liu, C.-Y. Hsieh, S. J.-P. Hsu, and C.-T. Chan, “Impact of sampling\nrate on\
    \ wearable-based fall detection systems based on machine learning\nmodels,” IEEE\
    \ Sensors Journal 18, 9882–9890 (2018).\n[415] J. Xu, Z. He, and Y. Zhang, “Cnn-lstm\
    \ combined network for iot enabled\nfall detection applications,” in “Journal\
    \ of Physics: Conference Series,” ,\nvol. 1267 (IOP Publishing, 2019), vol. 1267,\
    \ p. 012044.\n[416] D. Mrozek, A. Koczur, and B. Ma lysiak-Mrozek, “Fall detection\
    \ in older\nadults with mobile iot devices and machine learning in the cloud and\
    \ on\nthe edge,” Information Sciences (2020).\n166\n[417] A. Sucerquia, J. D.\
    \ L´opez, and J. F. Vargas-Bonilla, “Sisfall: A fall and\nmovement dataset,” Sensors\
    \ 17, 198 (2017).\n[418] L. M´arquez-Ordaz and H. Ponce, “Implementation of a\
    \ svm on an embed-\nded system: A case study on fall detection,” in “Mexican International\n\
    Conference on Artificial Intelligence,” (Springer, 2020), pp. 76–87.\n[419] D.\
    \ Sarabia-J´acome, R. Usach, C. Palau, and M. Esteve, “Highly-efficient\nfog-based\
    \ deep learning aal fall detection system,” Internet of Things p.\n100185 (2020).\n\
    [420] N. Zurbuchen, P. Bruegger, and A. Wilde, “A comparison of machine\nlearning\
    \ algorithms for fall detection using wearable sensors,” in “2020 In-\nternational\
    \ Conference on Artificial Intelligence in Information and Com-\nmunication (ICAIIC),”\
    \ (IEEE, 2020), pp. 427–431.\n[421] A. Chelli and M. P¨atzold, “A machine learning\
    \ approach for fall detec-\ntion and daily living activity recognition,” IEEE\
    \ Access 7, 38670–38687\n(2019).\n[422] O. Ojetola, E. Gaura, and J. Brusey, “Data\
    \ set for fall events and daily\nactivities from inertial sensors,” in “Proceedings\
    \ of the 6th ACM multi-\nmedia systems conference,” (2015), pp. 243–248.\n[423]\
    \ D. Anguita, A. Ghio, L. Oneto, X. Parra, and J. L. Reyes-Ortiz, “A public\n\
    domain dataset for human activity recognition using smartphones.” in\n“Esann,”\
    \ , vol. 3 (2013), vol. 3, p. 3.\n[424] O. Kerdjidj, N. Ramzan, K. Ghanem, A.\
    \ Amira, and F. Chouireb, “Fall\ndetection and human activity classification using\
    \ wearable sensors and\ncompressed sensing,” Journal of Ambient Intelligence and\
    \ Humanized\nComputing 11, 349–361 (2020).\n[425] A. Burns, B. R. Greene, M. J.\
    \ McGrath, T. J. O’Shea, B. Kuris, S. M.\nAyer, F. Stroiescu, and V. Cionca, “Shimmer™–a\
    \ wireless sensor platform\nfor noninvasive biomedical research,” IEEE Sensors\
    \ Journal 10, 1527–\n1534 (2010).\n[426] M. Fa˜nez, J. R. Villar, E. de la Cal,\
    \ J. Sedano, and V. M. Gonz´alez,\n“Transfer learning and information retrieval\
    \ applied to fall detection,”\nExpert Systems 37, e12522 (2020).\n[427] E. Casilari,\
    \ J. A. Santoyo-Ram´on, and J. M. Cano-Garc´ıa, “Analysis of\na smartphone-based\
    \ architecture with multiple mobility sensors for fall\ndetection,” PLoS one 11,\
    \ e0168069 (2016).\n[428] J. Lin, E. Keogh, S. Lonardi, and B. Chiu, “A symbolic\
    \ representation of\ntime series, with implications for streaming algorithms,”\
    \ in “Proceedings\nof the 8th ACM SIGMOD workshop on Research issues in data mining\n\
    and knowledge discovery,” (2003), pp. 2–11.\n167\n[429] D. Giuffrida, G. Benetti,\
    \ D. D. Martini, and T. Facchinetti, “Fall detec-\ntion with supervised machine\
    \ learning using wearable sensors,” in “2019\nIEEE 17th International Conference\
    \ on Industrial Informatics (INDIN),”\n, vol. 1 (IEEE, 2019), vol. 1, pp. 253–259.\n\
    [430] E. Casilari, M. ´Alvarez-Marco, and F. Garc´ıa-Lagos, “A study of the use\n\
    of gyroscope measurements in wearable fall detection systems,” Symmetry\n12, 649\
    \ (2020).\n[431] G. L. Santos, P. T. Endo, K. H. d. C. Monteiro, E. d. S. Rocha,\
    \ I. Silva,\nand T. Lynn, “Accelerometer-based human fall detection using convolu-\n\
    tional neural networks,” Sensors 19, 1644 (2019).\n[432] B. Kwolek and M. Kepski,\
    \ “Human fall detection on embedded platform\nusing depth maps and wireless accelerometer,”\
    \ Computer methods and\nprograms in biomedicine 117, 489–501 (2014).\n[433] T.\
    \ R. Mauldin, M. E. Canby, V. Metsis, A. H. Ngu, and C. C. Rivera,\n“Smartfall:\
    \ A smartwatch-based fall detection system using deep learn-\ning,” Sensors 18,\
    \ 3363 (2018).\n[434] K. Simonyan and A. Zisserman, “Very deep convolutional networks\
    \ for\nlarge-scale image recognition,” arXiv preprint arXiv:1409.1556 (2014).\n\
    [435] A. Alarifi and A. Alwadain, “Killer heuristic optimized convolution neural\n\
    network-based fall detection with wearable iot sensor devices,” Measure-\nment\
    \ 167, 108258 (2021).\n[436] M. Waheed, H. Afzal, and K. Mehmood, “Nt-fds—a noise\
    \ tolerant fall\ndetection system using deep learning on wearable devices,” Sensors\
    \ 21,\n2006 (2021).\n[437] L. Mart´ınez-Villase˜nor, H. Ponce, J. Brieva, E. Moya-Albor,\
    \ J. N´u˜nez-\nMart´ınez, and C. Pe˜nafort-Asturiano, “Up-fall detection dataset:\
    \ A mul-\ntimodal approach,” Sensors 19, 1988 (2019).\n[438] E. Casilari, R. Lora-Rivera,\
    \ and F. Garc´ıa-Lagos, “A study on the appli-\ncation of convolutional neural\
    \ networks to fall detection evaluated with\nmultiple public datasets,” Sensors\
    \ 20, 1466 (2020).\n[439] R. Delgado-Escano, F. M. Castro, J. R. C´ozar, M. J.\
    \ Mar´ın-Jim´enez,\nN. Guil, and E. Casilari, “A cross-dataset deep learning-based\
    \ classifier\nfor people fall detection and identification,” Computer methods\
    \ and pro-\ngrams in biomedicine 184, 105265 (2020).\n[440] C. Medrano, R. Igual,\
    \ I. Plaza, and M. Castro, “Detecting falls as novelties\nin acceleration patterns\
    \ acquired with smartphones,” PloS one 9, e94811\n(2014).\n[441] D. Micucci, M.\
    \ Mobilio, and P. Napoletano, “Unimib shar: A dataset for\nhuman activity recognition\
    \ using acceleration data from smartphones,”\nApplied Sciences 7, 1101 (2017).\n\
    168\n[442] A. T. ¨Ozdemir, “An analysis on sensor locations of the human body\
    \ for\nwearable fall detection devices: Principles and practice,” Sensors 16,\
    \ 1161\n(2016).\n[443] M. Tolkiehn, L. Atallah, B. Lo, and G.-Z. Yang, “Direction\
    \ sensitive\nfall detection using a triaxial accelerometer and a barometric pressure\n\
    sensor,” in “2011 Annual international conference of the IEEE engineering\nin\
    \ medicine and biology society,” (IEEE, 2011), pp. 369–372.\n[444] B. Watanapa,\
    \ O. Patsadu, P. Dajpratham, and C. Nukoolkit, “Post-fall\nintelligence supporting\
    \ fall severity diagnosis using kinect sensor,” Ap-\nplied Computational Intelligence\
    \ and Soft Computing 2018 (2018).\n[445] H. Jung, B. Koo, J. Kim, T. Kim, Y. Nam,\
    \ and Y. Kim, “Enhanced\nalgorithm for the detection of preimpact fall for wearable\
    \ airbags,” Sensors\n20, 1277 (2020).\n[446] B. Koo, J. Kim, Y. Nam, and Y. Kim,\
    \ “The performance of post-fall de-\ntection using the cross-dataset: Feature\
    \ vectors, classifiers and processing\nconditions,” Sensors 21, 4638 (2021).\n\
    [447] C.-Y. Hsieh, H.-Y. Huang, K.-C. Liu, C.-P. Liu, C.-T. Chan, and S. J.-P.\n\
    Hsu, “Multiphase identification algorithm for fall recording systems using\na\
    \ single wearable inertial sensor,” Sensors 21, 3302 (2021).\n[448] M. Musci,\
    \ D. De Martini, N. Blago, T. Facchinetti, and M. Piastra,\n“Online fall detection\
    \ using recurrent neural networks,” arXiv preprint\narXiv:1804.04976 (2018).\n\
    [449] X. Yu, H. Qiu, and S. Xiong, “A novel hybrid deep neural network to pre-\n\
    dict pre-impact fall for older people based on wearable inertial sensors,”\nFrontiers\
    \ in bioengineering and biotechnology 8 (2020).\n[450] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Detection of fall direction using\na velocity vector in the android\
    \ smartphone environment,” Journal of\nthe Korea Institute of Information and\
    \ Communication Engineering 19,\n336–342 (2015).\n[451] W. Lee, T. S. Song, and\
    \ J.-H. Youn, “Fall direction detection using the\ncomponents of acceleration\
    \ vector and orientation sensor on the smart-\nphone environment,” Journal of\
    \ Korea Multimedia Society 18, 565–574\n(2015).\n[452] J. K. Lee, “Determination\
    \ of fall direction before impact using support\nvector machine,” Journal of Sensor\
    \ Science and Technology 24, 47–53\n(2015).\n[453] S. F. Hossain, M. Z. Islam,\
    \ and M. L. Ali, “Real time direction-sensitive\nfall detection system using accelerometer\
    \ and learning classifier,” in\n“2017 4th International Conference on Advances\
    \ in Electrical Engineering\n(ICAEE),” (IEEE, 2017), pp. 99–104.\n169\n[454] F.\
    \ Hossain, M. L. Ali, M. Z. Islam, and H. Mustafa, “A direction-sensitive\nfall\
    \ detection system using single 3d accelerometer and learning classifier,”\nin\
    \ “2016 International Conference on Medical Engineering, Health Infor-\nmatics\
    \ and Technology (MediTec),” (IEEE, 2016), pp. 1–6.\n[455] L. Palmerini, J. Klenk,\
    \ C. Becker, and L. Chiari, “Accelerometer-based\nfall detection using machine\
    \ learning: Training and testing on real-world\nfalls,” Sensors 20, 6479 (2020).\n\
    [456] R. M. Gibson, A. Amira, N. Ramzan, P. C. de-la Higuera, and Z. Pervez,\n\
    “Multiple comparator classifier framework for accelerometer-based fall de-\ntection\
    \ and diagnostic,” Applied Soft Computing 39, 94–103 (2016).\n[457] F. Hussain,\
    \ F. Hussain, M. Ehatisham-ul Haq, and M. A. Azam,\n“Activity-aware fall detection\
    \ and recognition based on wearable sensors,”\nIEEE Sensors Journal 19, 4528–4536\
    \ (2019).\n[458] H. Li, A. Shrestha, H. Heidari, J. Le Kernec, and F. Fioranelli,\
    \ “Bi-lstm\nnetwork for multimodal continuous human activity recognition and fall\n\
    detection,” IEEE Sensors Journal 20, 1191–1201 (2019).\n[459] X. Wu, Y. Zheng,\
    \ C.-H. Chu, L. Cheng, and J. Kim, “Applying deep\nlearning technology for automatic\
    \ fall detection using mobile sensors,”\nBiomedical Signal Processing and Control\
    \ 72, 103355 (2022).\n[460] G. Vavoulas, C. Chatzaki, T. Malliotakis, M. Pediaditis,\
    \ and M. Tsik-\nnakis, “The mobiact dataset: Recognition of activities of daily\
    \ living using\nsmartphones.” in “ICT4AgeingWell,” (2016), pp. 143–151.\n[461]\
    \ G.\nS¸eng¨ul,\nM.\nKarakaya,\nS.\nMisra,\nO.\nO.\nAbayomi-Alli,\nand\nR. Damaˇseviˇcius,\
    \ “Deep learning based fall detection using smartwatches\nfor healthcare applications,”\
    \ Biomedical Signal Processing and Control\n71, 103242 (2022).\n[462] H.-L. Le,\
    \ D.-N. Nguyen, T.-H. Nguyen, and H.-N. Nguyen, “A novel fea-\nture set extraction\
    \ based on accelerometer sensor data for improving the\nfall detection system,”\
    \ Electronics 11, 1030 (2022).\n[463] H. Yhdego, J. Li, C. Paolini, and M. Audette,\
    \ “Wearable sensor gait\nanalysis of fall detection using attention network,”\
    \ in “2021 IEEE Inter-\nnational Conference on Bioinformatics and Biomedicine\
    \ (BIBM),” (IEEE,\n2021), pp. 3137–3141.\n[464] M. Liu, S. Ren, S. Ma, J. Jiao,\
    \ Y. Chen, Z. Wang, and W. Song, “Gated\ntransformer networks for multivariate\
    \ time series classification,” arXiv\npreprint arXiv:2103.14438 (2021).\n[465]\
    \ X. Yu, J. Jang, and S. Xiong, “A large-scale open motion dataset (kfall)\nand\
    \ benchmark algorithms for detecting pre-impact fall of the elderly\nusing wearable\
    \ inertial sensors,” Frontiers in Aging Neuroscience p. 399\n(2021).\n170\n[466]\
    \ J. A. Santoyo-Ram´on, E. Casilari, and J. M. Cano-Garc´ıa, “A study of\none-class\
    \ classification algorithms for wearable fall sensors,” Biosensors\n11 (2021).\n\
    [467] N. Zurbuchen, A. Wilde, and P. Bruegger, “A machine learning multi-\nclass\
    \ approach for fall detection systems based on wearable sensors with\na study\
    \ on sampling rates selection,” Sensors 21, 938 (2021).\n[468] M. Musci, D. De\
    \ Martini, N. Blago, T. Facchinetti, and M. Piastra, “On-\nline fall detection\
    \ using recurrent neural networks on smart wearable de-\nvices,” IEEE Transactions\
    \ on Emerging Topics in Computing 9, 1276–\n1289 (2020).\n[469] E. Boutellaa,\
    \ K. Ghanem, H. Tayakout, O. Kerdjidj, F. Harizi, and\nS. Bourennane, “A tensor\
    \ approach for activity recognition and fall de-\ntection using wearable inertial\
    \ sensors,” in “2020 First International Con-\nference of Smart Systems and Emerging\
    \ Technologies (SMARTTECH),”\n(IEEE, 2020), pp. 203–207.\n[470] S. Rosati, G.\
    \ Balestra, and M. Knaflitz, “Comparison of different sets of\nfeatures for human\
    \ activity recognition by wearable sensors,” Sensors 18,\n4189 (2018).\n[471]\
    \ J. O. Smith, Mathematics of the discrete Fourier transform (DFT): with\naudio\
    \ applications (Julius Smith, 2007).\n[472] M. A. O’Reilly, W. Johnston, C. Buckley,\
    \ D. Whelan, and B. Caulfield,\n“The influence of feature selection methods on\
    \ exercise classification with\ninertial measurement units,” in “2017 IEEE 14th\
    \ International Conference\non Wearable and Implantable Body Sensor Networks (BSN),”\
    \ (IEEE,\n2017), pp. 193–196.\n[473] A. Liaw, M. Wiener et al., “Classification\
    \ and regression by randomfor-\nest,” R news 2, 18–22 (2002).\n[474] O. Rioul\
    \ and M. Vetterli, “Wavelets and signal processing,” IEEE signal\nprocessing magazine\
    \ 8, 14–38 (1991).\n[475] M. G. Abdu-Aguye and W. Gomaa, “Competitive feature\
    \ extraction for\nactivity recognition based on wavelet transforms and adaptive\
    \ pooling,”\nin “2019 International Joint Conference on Neural Networks (IJCNN),”\n\
    (IEEE, 2019), pp. 1–8.\n[476] ¨U. Lepik and H. Hein, “Haar wavelets,” in “Haar\
    \ Wavelets,” (Springer,\n2014), pp. 7–20.\n[477] K. He, X. Zhang, S. Ren, and\
    \ J. Sun, “Spatial pyramid pooling in deep\nconvolutional networks for visual\
    \ recognition,” IEEE transactions on pat-\ntern analysis and machine intelligence\
    \ 37, 1904–1916 (2015).\n171\n[478] C. N. Silla and A. A. Freitas, “A survey of\
    \ hierarchical classification across\ndifferent application domains,” Data Mining\
    \ and Knowledge Discovery\n22, 31–72 (2011).\n[479] S. B. Khojasteh, J. R. Villar,\
    \ C. Chira, V. M. Gonz´alez, and E. De la\nCal, “Improving fall detection using\
    \ an on-wrist wearable accelerometer,”\nSensors 18, 1350 (2018).\n[480] Q. T.\
    \ Huynh and B. Q. Tran, “Time-frequency analysis of daily activities\nfor fall\
    \ detection,” Signals 2, 1–12 (2021).\n[481] J. Wang, X. Zhang, Q. Gao, X. Ma,\
    \ X. Feng, and H. Wang, “Device-free si-\nmultaneous wireless localization and\
    \ activity recognition with wavelet fea-\nture,” IEEE Transactions on Vehicular\
    \ Technology 66, 1659–1669 (2016).\n[482] C. Ellouzi and M. Trkov, “Fast trip\
    \ detection using continuous wavelet\ntransform,” in “Proceedings of the Poster,\
    \ Dynamic Walking Conference,”\n(2021).\n[483] J. Gu, Z. Wang, J. Kuen, L. Ma,\
    \ A. Shahroudy, B. Shuai, T. Liu, X. Wang,\nG. Wang, J. Cai et al., “Recent advances\
    \ in convolutional neural net-\nworks,” Pattern Recognition 77, 354–377 (2018).\n\
    [484] D. Bhatt, C. Patel, H. Talsania, J. Patel, R. Vaghela, S. Pandya, K. Modi,\n\
    and H. Ghayvat, “Cnn variants for computer vision: History, architecture,\napplication,\
    \ challenges and future scope,” Electronics 10, 2470 (2021).\n[485] S. P. Singh,\
    \ L. Wang, S. Gupta, H. Goli, P. Padmanabhan, and B. Guly´as,\n“3d deep learning\
    \ on medical images: a review,” Sensors 20, 5097 (2020).\n[486] S. Latif, R. Rana,\
    \ S. Khalifa, R. Jurdak, J. Qadir, and B. W. Schuller,\n“Survey of deep representation\
    \ learning for speech emotion recognition,”\nIEEE Transactions on Affective Computing\
    \ (2021).\n[487] F. G. Pratic`o, R. Fedele, V. Naumov, and T. Sauer, “Detection\
    \ and mon-\nitoring of bottom-up cracks in road pavement using a machine-learning\n\
    approach,” Algorithms 13, 81 (2020).\n[488] K. Saho, S. Hayashi, M. Tsuyama, L.\
    \ Meng, and M. Masugi, “Machine\nlearning-based classification of human behaviors\
    \ and falls in restroom via\ndual doppler radar measurements,” Sensors 22, 1721\
    \ (2022).\n[489] J. Kakarla, B. V. Isunuri, K. S. Doppalapudi, and K. S. R. Byla-\n\
    pudi, “Three-class classification of brain magnetic resonance images using\naverage-pooling\
    \ convolutional neural network,” International Journal of\nImaging Systems and\
    \ Technology 31, 1731–1740 (2021).\n[490] J. Yang, F. Xie, H. Fan, Z. Jiang, and\
    \ J. Liu, “Classification for der-\nmoscopy images using convolutional neural\
    \ networks based on region av-\nerage pooling,” IEEE Access 6, 65130–65138 (2018).\n\
    172\n[491] M. H. Mohd Noor, S. Y. Tan, and M. N. Ab Wahab, “Deep temporal\nconv-lstm\
    \ for activity recognition,” Neural Processing Letters pp. 1–23\n(2022).\n[492]\
    \ M. I. Amara, A. Akkouche, E. Boutellaa, and H. Tayakout, “A smart-\nphone application\
    \ for fall detection using accelerometer and convlstm\nnetwork,” in “2020 2nd\
    \ International Workshop on Human-Centric Smart\nEnvironments for Health and Well-being\
    \ (IHSH),” (IEEE, 2021), pp. 92–\n96.\n[493] J. Du, Z. Zhang, M. Li, J. Guo, and\
    \ K. Zhu, “Optimal scheduling of\nintegrated energy system based on improved grey\
    \ wolf optimization algo-\nrithm,” Scientific Reports 12, 1–19 (2022).\n[494]\
    \ N. Mazyavkina, S. Sviridov, S. Ivanov, and E. Burnaev, “Reinforcement\nlearning\
    \ for combinatorial optimization: A survey,” Computers & Oper-\nations Research\
    \ 134, 105400 (2021).\n173\nAppendix A: Sample Plots for different fall categories\n\
    Sample plots of the windowed accelerometer and gyroscope measurements of\ndifferent\
    \ fall types.\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n\
    500\n0\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n-10,000\n\
    -8000\n-6000\n-4000\n-2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n-10,000\n-8000\n-6000\n-4000\n-2000\n0\n2000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n1200\n1000\n800\n\
    600\n400\n200\n0\n200\n400\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n2000\n0\n2000\n4000\n6000\n8000\nAmplitude\nGyro Z\nForward Hard Fall\n\
    Figure 1. Accelerometer and Gyroscope measurements: Forward Hard Fall\n174\n0\n\
    100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n0\nAmplitude\n\
    Acc X\n0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n\
    500\n1000\n1500\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    200\n100\n0\n100\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n4000\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n400\n300\n200\n100\n0\nAmplitude\nAcc Z\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro Z\nForward Soft Fall\nFigure 2. Accelerometer and Gyroscope measurements:\
    \ Forward Soft Fall\n175\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n2000\n0\n2000\n4000\n6000\nAmplitude\nGyro X\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n2000\n1500\n1000\n500\n0\n500\nAmplitude\nAcc Y\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n3000\n2000\n1000\n0\n1000\n2000\nAmplitude\nGyro\
    \ Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n200\n0\n200\n400\n600\n800\n\
    Amplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n500\n0\n500\n\
    1000\n1500\nAmplitude\nGyro Z\nBackward Hard Fall\nFigure 3. Accelerometer and\
    \ Gyroscope measurements: Backward Hard Fall\n176\n0\n100\n200\n300\n400\n500\n\
    600\nSample no\n600\n500\n400\n300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n1000\n0\n1000\n2000\n3000\n4000\nAmplitude\n\
    Gyro X\n0\n100\n200\n300\n400\n500\n600\nSample no\n1000\n800\n600\n400\n200\n\
    0\n200\nAmplitude\nAcc Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n800\n600\n\
    400\n200\n0\n200\n400\n600\nAmplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n300\n200\n100\n0\n100\n200\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n\
    500\n600\nSample no\n600\n400\n200\n0\n200\n400\n600\n800\n1000\nAmplitude\nGyro\
    \ Z\nBackward Soft Fall\nFigure 4. Accelerometer and Gyroscope measurements:f\
    \ Backward Soft Fall\n177\n0\n100\n200\n300\n400\n500\n600\nSample no\n1750\n\
    1500\n1250\n1000\n750\n500\n250\n0\n250\nAmplitude\nAcc X\n0\n100\n200\n300\n\
    400\n500\n600\nSample no\n6000\n4000\n2000\n0\n2000\nAmplitude\nGyro X\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n\
    0\n100\n200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n250\n200\n150\n\
    100\n50\n0\n50\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\nSample no\n\
    1000\n0\n1000\n2000\n3000\n4000\n5000\n6000\n7000\nAmplitude\nGyro Z\nLateral\
    \ Hard Fall\nFigure 5. Accelerometer and Gyroscope measurements: Lateral Hard\
    \ Fall\n178\n0\n100\n200\n300\n400\n500\n600\nSample no\n700\n600\n500\n400\n\
    300\n200\n100\n0\n100\nAmplitude\nAcc X\n0\n100\n200\n300\n400\n500\n600\nSample\
    \ no\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro X\n0\n100\n200\n\
    300\n400\n500\n600\nSample no\n600\n400\n200\n0\n200\nAmplitude\nAcc Y\n0\n100\n\
    200\n300\n400\n500\n600\nSample no\n2000\n1500\n1000\n500\n0\n500\n1000\n1500\n\
    Amplitude\nGyro Y\n0\n100\n200\n300\n400\n500\n600\nSample no\n150\n100\n50\n\
    0\n50\n100\n150\n200\n250\nAmplitude\nAcc Z\n0\n100\n200\n300\n400\n500\n600\n\
    Sample no\n1000\n500\n0\n500\n1000\n1500\n2000\n2500\n3000\nAmplitude\nGyro Z\n\
    Lateral Soft Fall \nFigure 6. Acclerometer and Gyroscope measurements: Lateral\
    \ Soft Fall\n179\nAppendix B: Acronyms\nABC - Artificial Bee Colony\nACO - Ant\
    \ Colony Optimization\nAdaBoost - Adaptive Boosting\nADL - Activity of Daily Living\n\
    AI - Artificial intelligence\nANN - Artificial Neural Networks\nBi-LSTM - Bi-Directional\
    \ Long Short-Term Memory\nCERT - Computer Emergency Response Team\nCNN - Convolutional\
    \ Neural Networks\nCO - Carbon Monoxide\nCO2 - Carbon Dioxide\nDARPA - Defense\
    \ Advanced Research Projects Agency\nDDOS - Distributed Denial of Service\nDE\
    \ - Differential Evolution\nDER - Distributed energy resource\nDOS - Denial of\
    \ Service\nDL – Deep Learning\nDLEFN - Deep Learning Entrusted to Fog Nodes\n\
    DNN - Deep Neural Networks\nDT - Decision Tree\nEBT - Ensemble Bagged Tree\nEC\
    \ - Ensemble Classifier\nECG - ElectroCardioGram\nEEG - ElectroEncepheloGram\n\
    EMG – ElectroMyoGram\nETSI - European Telecommunications Standards Institute\n\
    FANs - Field Area Networks\nFDS - Fall Detection System\nFN - False Negative\n\
    GA - Genetic Algorithm\nGRU - Gated Recurrent Units\nGSM - Global System for Mobile\
    \ Communications\nHANs - Home Area Networks\nICT - information and communication\
    \ technologies\nIEEE - Institute of Electrical and Electronic Engineers\nIETF\
    \ - Internet Engineering Task Force\nIQ Range - Interquartile Range\nIMU – Inertial\
    \ Measurement Unit\n180\nIoT - Internet of Things\nISM - Industrial, Scientific\
    \ and Medical\nK-NN - K-Nearest Neighbor\nLDA - Linear Discriminant Analysis\n\
    Li-Fi - Light Fidelity\nLoRaWAN - Long Range Wide Area Network\nLPWAN - Low Power\
    \ Wide Area Network\nLR - Logistic Regression\nLSDVRP - Large-scale Dynamic Vehicle\
    \ Routing Problem\nLSTM - Long Short-Term Machine\nLTE - Long-Term Evolution\n\
    MITM - Man in the Middle\nML - Machine Learning\nMVRP - Multidepot Vehicle Routing\
    \ Problem\nNANs - Neighborhood Area Networks\nNB - Naive Bayes\nNB-IoT - Narrow\
    \ Band IoT\nNFC - Near Field Communication\nOSP - Optimal Sensor Placement\nPCA\
    \ - Principal Component Analysis\nPIR - Passive InfraRed\nPMU - Phase Measurement\
    \ Units\nPSD - Power Spectral Density\nPSE - Power Spectral Entropy\nPSO - Particle\
    \ Swarm Optimization\nPPCA - Probabilistic Principal Component Analysis\nPV -\
    \ photo voltaic\nP2I - Pedestrian to Infrastructure\nQSVM - Quadratic Support\
    \ Vector Machine\nRBF - Radial Basis Function\nRF – Radio Frequency\nRFC - Random\
    \ Forest Classifier\nRFID - Radio Frequency Identification\nRF-RFE - Random Forest\
    \ Recursive Feature Elimination\nRMS - Root Mean Squared\nRNN - Recurrent Neural\
    \ Networks\nSAE - Stacked Autoencoder Networks\nSAX - Symbolic Aggregate Approximation\n\
    SHM - Structural Health Monitoring\nSMV - Signal Magnitude Vector\nSWOT - Strength\
    \ Weaknesses Opportunities Threat\nSVM - Support Vector Machine\nTLS - Transport\
    \ Layer Security\nTP - True Positive\nVANET - Vehicular Adhoc NETworks\n181\n\
    VM - Voting machine\nVRP - Vehicle Routing Problem\nVRPPDTW - Vehicle Routing\
    \ Problem Pick-up and Delivery with Time Win-\ndows\nV2V - Vehicle to Vehicle\n\
    V2I - Vehicle to Infrastructure\nV2P - Vehicle to Pedestrian\nWANs - Wide Area\
    \ Networks\nWi-Fi - Wireless Fidelity\nWi-SUN - Wireless Smart Utility Network\n\
    WPA2 - Wi-Fi Protected Access 2\nWSNs - wireless sensor networks\nXGBoost - Extreme\
    \ Gradient Boost\nZ-Wave - Zensys Wave\n182\nCURRICULUM VITA\nNAME:\nMuhammmad\
    \ Zaigham Abbas Shah Syed\nADDRESS:\nComputer Science and Engineering Department\n\
    J.B Speed School of Engineering\nUniversity of Louisville\nLouisville, KY 40292\n\
    United States of America.\n2022\nUniversity of Louisville, Louisville, KY, USA.\n\
    M.Sc. in Electronic and Electrical Engineering, Novem-\nber 2013\nUniversity of\
    \ Strathclyde, Glasgow, United King-\ndom\nB.Eng in Electronics Engineering, March\
    \ 2010\nMehran University of Engineering and Technol-\nogy, Jamshoro, Pakistan\n\
    WORK\nEX-\nPERIENCE:\nGraduate Assistant, Innovative Technologies Lab,\nUniversity\
    \ of Louisville, KY, USA, 2022\n183\nPh.D., Computer Science & Engineering, December\n\
    EDUCATION:\nPUBLICATIONS:\nJOURNAL\n1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup\
    \ Kumar, and Adel Elmaghraby.\nIoT in smart cities: a survey of technologies,\
    \ practices and challenges. Smart Cities,\nvol. 4, no. 2, pp. 429–475, 2021\n\
    2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nMaking\
    \ Cities Smarter—Optimization Problems for the IoT Enabled Smart City\nDevelopment:\
    \ A Mapping of Applications, Objectives, Constraints.Sensors, vol. 22,\nno. 12,\
    \ p. 4380, 2022\n3. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel\
    \ Elmaghraby. A\nhierarchical approach to activity recognition and fall detection\
    \ using wavelets and\nadaptive pooling.Sensors, vol. 21, no. 19, p. 6653, 2021\n\
    4. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby. A\ndeep\
    \ convolutional neural network-XGB for direction and severity aware fall detec-\n\
    tion and activity recognition.Sensors, vol. 22, no. 7, p. 2547, 2022\nCONFERENCE\n\
    1. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar, and Adel Elmaghraby.\nCross\
    \ dataset non-binary fall detection using a ConvLSTM-attention network. (ac-\n\
    cepted at IEEE GlobeCOM 2022).\n2. Abbas Shah Syed, Daniel Sierra-Sosa, Anup Kumar,\
    \ and Adel Elmaghraby.\nDetermining Fall direction and severity using SVMs.2020\
    \ IEEE International Sym-\nposium on Signal Processing and Information Technology\
    \ (ISSPIT),2020, pp. 1–7.\n184\n"
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://ir.library.louisville.edu/cgi/viewcontent.cgi?article=5278&context=etd
  publication_year: 2023
  relevance_score1: 0
  relevance_score2: 0
  title: IoT in smart communities, technologies and applications.
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
