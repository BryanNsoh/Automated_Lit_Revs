- analysis: '>'
  authors:
  - Jiménez A.F.
  - Ortiz B.V.
  - Lena B.P.
  citation_count: '0'
  description: Efficient irrigation is essential for sustainable food production and
    regional water security. Temperature measurements provide information about crop
    water status, which allows the estimation of water needs and precise irrigation
    scheduling. This paper proposes a technology for agricultural irrigation management
    that combines cost-effective implementation with the ability to map crop canopy
    temperatures using a wireless network of infrared thermometers on a center pivot.
    The technology integrates Wireless Sensor Networks (WSN) with scalability options,
    IoT capabilities, and web data availability, enabling precise plant water stress
    quantification based on canopy temperature and soil water content. It facilitates
    real-time irrigation prescriptions while the center pivot is in motion, with canopy
    temperature sensors providing accurate readings of +/- 0.5 °C without additional
    calibration. Nonlinear Autoregressive Network with Exogenous Inputs (NARX) and
    Long Short-Term Memory (LSTM) neural network models were trained to predict irrigation
    prescriptions, achieving Root Mean Squared Error (RMSE < 4.18 mm) and correlation
    coefficient (r^2 > 0.82). This technology will allow the definition of real-time
    and site-specific prescriptions for variable-rate irrigation systems using infrared
    temperature sensors. Future work includes exploring LoRaWAN technologies, implementing
    a Differential Global Positioning System (DGPS), improving spatial resolution
    with data fusion algorithms, refining irrigation prescription models, reducing
    sensor costs and developing models considering soil and crop effects.
  doi: 10.1016/j.measurement.2024.114570
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. Results and discussion 4. Conclusions CRediT authorship contribution statement
    Declaration of competing interest Acknowledgments Data availability References
    Show full outline Figures (13) Show 7 more figures Tables (4) Table 1 Table 2
    Table 3 Table 4 Measurement Volume 230, 15 May 2024, 114570 Real-time mapping
    of crop canopy temperature using a wireless network of infrared thermometers on
    a central pivot Author links open overlay panel Andrés-F Jiménez a, Brenda V.
    Ortiz b, Bruno P. Lena c Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.measurement.2024.114570
    Get rights and content Highlights • A real-time mapping tool was implemented using
    infrared sensors installed on a center pivot. • The developed tool includes IRT
    and soil perception systems, mapping, visualizing and data storage. • Each IRT
    sensor location is determined using the geometrical dimensions of the central
    pivot. • The dynamic mapping allows for real-time irrigation prescription using
    neural network models. Abstract Efficient irrigation is essential for sustainable
    food production and regional water security. Temperature measurements provide
    information about crop water status, which allows the estimation of water needs
    and precise irrigation scheduling. This paper proposes a technology for agricultural
    irrigation management that combines cost-effective implementation with the ability
    to map crop canopy temperatures using a wireless network of infrared thermometers
    on a center pivot. The technology integrates Wireless Sensor Networks (WSN) with
    scalability options, IoT capabilities, and web data availability, enabling precise
    plant water stress quantification based on canopy temperature and soil water content.
    It facilitates real-time irrigation prescriptions while the center pivot is in
    motion, with canopy temperature sensors providing accurate readings of +/- 0.5
    °C without additional calibration. Nonlinear Autoregressive Network with Exogenous
    Inputs (NARX) and Long Short-Term Memory (LSTM) neural network models were trained
    to predict irrigation prescriptions, achieving Root Mean Squared Error (RMSE <
    4.18 mm) and correlation coefficient (r^2 > 0.82). This technology will allow
    the definition of real-time and site-specific prescriptions for variable-rate
    irrigation systems using infrared temperature sensors. Future work includes exploring
    LoRaWAN technologies, implementing a Differential Global Positioning System (DGPS),
    improving spatial resolution with data fusion algorithms, refining irrigation
    prescription models, reducing sensor costs and developing models considering soil
    and crop effects. Previous article in issue Next article in issue Keywords Irrigation
    schedulingCanopy temperatureWireless sensor networksCanopy cover 1. Introduction
    The growing scarcity of freshwater is one of the main challenges to food security
    and sustainability, where agriculture annually consumes the most water [1]. For
    this purpose, precision agriculture (PA) has achieved significant progress in
    water management and crop production using technological advances in software
    and hardware [2]. Precision irrigation (PI) is the sustainable management of water
    resources, which involves the application of water to the crop to meet specific
    plant water demands in space and time, while avoiding excessive or insufficient
    irrigation and minimizing adverse environmental impacts [3]. In PA, the Variable
    Rate Application (VRA) is the assignment of agricultural inputs in a site-specific
    manner. The correct application of the variable rate needs the specific plant
    requirements, the precise position and the characteristics of the environment
    where the input will be applied. There are two strategies for VRA: Map-based and
    sensor-based. In Map-Based VRA, the prescription map is generated and loaded into
    a computer inside the machinery before it performs its activities on the field
    [4]. Sensor-Based VRA is the technology that integrates sensors for automatically
    detecting the value of specific parameters in the plants or the soil in real-time
    and for deciding which kind and quantity of agricultural input should be applied
    [5]. VRA technologies apply water, fertilizer, herbicide and other chemicals for
    weeds and disease control and seed selection in sowing [6]. The purpose of those
    technologies is to save water, fertilizers and chemicals, increase potential yields
    and the protection of the environment [7]. The variable rate irrigation (VRI)
    technology provides the ability to site-specifically apply water in the field
    to achieve potential water savings [8]; this enables the incorporation of water
    in the soil according to the temporal and spatial soil characteristics and plant
    demand at different growth stages [9]. The VRI technology aims to apply the right
    amount of water at the right time, in the right place of the field, reducing water
    waste and improving water use efficiency (WUE), which is the ratio between biomass
    produced to the rate of transpiration [10], [6]. The effectiveness of VRI depends
    on the delineation of management zones, irrigation infrastructure, crop type,
    weather conditions and field properties such as topography, soil texture and soil
    water retention curves; that influence soil water content and crop irrigation
    prescriptions [11]. Therefore, understanding these factors can provide a basis
    to achieve improvements in crop water productivity and the environment [12]. In
    VRI, water requirements are applied at different rates to appropriately match
    field variability using individual management zones and their real needs instead
    of a homogeneous input application on the field [13]. A management zone is a field
    area with similar attributes in soil and topography. According to the definition
    of management zones, several parameters are considered as crop and soil properties,
    sensor-based information, field attributes, management practices and yield maps
    [14]. The information about irrigation prescriptions in the management zones is
    linked with automatic site-specific irrigation systems using dynamic prescription
    maps [15]. However, these maps can be challenging because the spatiotemporal variations
    on a field are affected by biotic factors such as plant diseases and pest infestation,
    and abiotic factors such as water stress, cold, drought, soil and water salinity
    [16]. The development process for an irrigation prescription map aims to fill
    the spatially variable soil–water profile and use software available with VRI
    hardware, yield, elevation or electrical conductivity maps through precision agriculture
    software or soil–water balance approaches from satellite imagery or wireless sensor
    networks [17]. Additionally, these maps use soil water measurements, soil water
    balance calculations or plant stress-based methods for defining irrigation amounts
    and timing. Volumetric water content (VWC) sensors, soil water profile measurements
    by a neutron probe and soil matric potential (SMP) sensors are the most used technologies
    for irrigation scheduling based on soil water measurements [18]. The magnitude
    of soil water content (SWC) varies with time and location, but the pattern of
    spatial variability usually remains similar [19]. Scheduling using soil water
    balance allows estimating soil–water depletion with good performance through the
    reference evapotranspiration multiplied by the corresponding crop coefficient
    [20]. In addition, process-based and statistical/machine-learning models can determine
    irrigation amounts using soil water balance [21]. These models consider factors
    like data availability, scalability, quantification of plant water stress, model
    uncertainties and constraints, and participation and motivation of producers [22].
    Some plant-based irrigation scheduling strategies use dendrometers [23], sap flow
    sensors [24] or canopy temperature measurements [25], among others. Canopy temperature
    is used for irrigation management because it indirectly indicates plant water
    stress through canopy energy balance. Water stress arises when the quantity of
    water in plant leaves restricts photosynthesis and respiration. In water-stressed
    conditions, transpiration decreases, causing more energy to be converted to sensible
    heat at the canopy surface compared to non-water-stressed conditions. It causes
    plant canopy temperatures to rise above what would occur without water shortages
    [22]. Remote and proximal sensing technologies such as infrared sensors (IRT)
    and near-infrared and thermal imaging measure canopy temperatures. With canopy
    temperature and weather data, it is possible to provide information about environmental,
    soil and crop conditions for VRI and the development of dynamic irrigation prescription
    maps [26]. Canopy temperature can be measured using radiometers filtered to the
    thermal infrared wavelengths , making them non-contact infrared thermometers.
    These devices can measure an area ranging from a few to several according to the
    platform, typically categorized as ground-based, aircraft, or satellite. Ground-based
    platforms can be stationary or moving, with sensors handheld, portable, or on
    moving machinery like center pivots. Moving platforms offer more spatial coverage
    with fewer sensors but trade-off frequency, usually measuring at a single time
    of day at many locations, while stationary devices provide continuous measurements
    at one field location [27]. Satellite remote sensing includes constraints associated
    with the spatial and temporal resolution and the cost and durability of sensors
    and associated components required for wireless data transmission. The Unmanned
    Aerial Vehicles (UAVs) offer several advantages for canopy temperature measurements,
    including a spatial resolution of several meters, a repeat frequency of no more
    than a few days, and a short interval from field measurement to data availability,
    typically just a few minutes. These advantages complement the essential requirements
    of reasonable instrument cost, precision, accuracy, and the ability to cover a
    significant field area. However, regulatory barriers exist for flying UAVs in
    certain regions [28]. Questions have arisen regarding the economic viability of
    utilizing UAV platforms for thermal imaging due to the cost and the extensive
    post-processing needed to generate reliably accurate thermometric images of a
    field [29]. Ground-based sensors, such as canopy temperature measured by stationary
    IRTs offer advantages over satellite and aircraft thermal imagers for agricultural
    use, including simplicity, lower cost, lower power consumption, and, most importantly,
    higher accuracy [30]. Achieving adequate field coverage needs a relatively large
    number of sensors, which would depend on factors such as field slope, soil variability,
    crop profitability, and sensor cost. The main types of algorithms used in irrigation
    management with IRTs are water stress indices and time–temperature thresholds
    (TTT) [27]. The crop water stress index (CWSI) and integrated CWSI (iCWSI) provide
    irrigation trigger information through the cooling effect due to plant transpiration
    based on the normalized function of vapor pressure deficit (VPD) and temperature
    difference between canopy and air [22]. The biologically identified optimal temperature
    interactive console (BIOTIC, [31]) is the fundamental principle for the definition
    of the TTT. The crop canopy temperature is measured using IRT sensors and compared
    with a crop-specific temperature threshold value [32]. The daily total amount
    is increased by one minute for each minute that the canopy temperature is higher
    than the temperature threshold. If this total daily value exceeds the time threshold
    at the end of the day, an irrigation amount is scheduled for the next day, corresponding
    to the daily crop evapotranspiration [36]. Other constraints are established for
    the addition of minutes to the daily total value in the TTT calculations, the
    net radiation must be greater than [33] and minutes are not added if the wet-bulb
    temperature is greater than the threshold temperature minus , because relative
    humidity can limit cooling by evaporation. [34] found equation (1), to determine
    the wet-bulb temperature using relative humidity and air temperature values. (1)
    The TTT plant stress-based method is easily automated in the field, installing
    IRT sensors in fixed locations. When sensors are not stationary, canopy temperatures
    are modelled according to sensors in a reference location using equation (2) [35].
    (2) where is the calculated canopy temperature at the remote location (°C)and
    is the predawn canopy temperature (°C). is the canopy temperature at the remote
    location on the center pivot, at any daylight time measured by the IRT sensor
    (°C) and is the reference canopy temperature at the same interval as (°C), is
    the measured reference temperature at the same time as when the remote temperature
    measurement was taken (°C). For adjusting canopy temperature values, [36] advise
    to use an adjusted equation for temperatures detected by the IRT sensor ( ) using
    the sensor body temperature ( ) as in equation (3). (3) The CWSI uses the variation
    in canopy temperature as a function of water deficits and meteorological conditions
    [18]. It relates the difference in the crop canopy temperature measured using
    IRT sensors to the air temperature as a function of relative humidity [37]. The
    water stress index uses this temperature difference according to an upper and
    lower temperature baseline. Under the same prevailing environmental conditions,
    the upper and lower baseline temperatures determine the non-transpiring and fully
    transpiring crop temperatures [38]. The CWSI is a dimensionless value in a range
    between 0 and 1. A well-watered crop corresponds to 0, and a severely water-stressed
    cultivation corresponds to 1 [37]. The concept was extended to moving IRTs aboard
    center pivots, resulting in crop yield and water use efficiency comparable to
    or greater than manual irrigation scheduling using soil water profile measurements
    with a neutron probe [39]. Several studies have focused on developing ground-based
    remote sensing systems for center pivots, including algorithms [40], wireless
    sensor networks [27], low-cost wireless IRT networks [41], and software to generate
    site-specific prescription maps based on weather, plant, and soil water information,
    with a graphical user interface (GUI) and geographic information system (GIS)
    tools, enabling site-specific irrigation scheduling for variable-rate irrigation
    (VRI) center pivot systems [42], [43]. Irrigation scheduling methods based on
    IRT sensors have been applied to corn [44], grain sorghum [45], soybean [25],
    hibiscus potted plants [46], apple trees [47], [48], Indian mustard [49] and cotton
    [50] crops. In [28], IRT sensors were implemented in a center-pivot irrigation
    system to calculate crop evapotranspiration (ETc). These sensors use a two-source
    energy balance (TSEB) model and provide a reduction of errors in ETc and crop
    water stress calculations by partitioning surface temperature into soil and canopy
    components. [51] applied the TTT method to a center-pivot irrigation system with
    infrared thermocouples and a global positioning system mounted on the center pivot
    for a soybean crop. Irrigation prescriptions were defined with the data analysis
    after midnight to determine the next-day strategy. Irrigation was applied in only
    one direction using special nozzles. The sensors corrected the canopy temperatures
    on the center pivot using soil IRT sensors obtaining the correction equation (4).
    (4) [50] used canopy temperature sensors on the center pivot for obtaining the
    Crop Water Stress Index (CWSI) by equation (5). (5) where is the crop temperature,
    is the average temperature of a wet reference and is obtained adding to the maximum
    dry bulb temperature recorded for the specific field day. [15] demonstrated the
    advantage of IRT sensors mounted on a center pivot with a global positioning system
    to provide spatial and temporal crop water status at the field scale. While most
    precision irrigation technology is too expensive and complex for average farmers,
    methods involving IRTs may become more appealing due to their lower costs and
    simplicity. This technology has the potential to simplify management while increasing
    yields and reducing water-related waste, making it an attractive option for producers
    [35]. IRTs on center pivots and irrigation scheduling algorithms have resulted
    in crop yields and water productivity equal to or greater than those achieved
    with soil water measurements and a field-calibrated neutron probe. Combining stationary
    IRT measurements with moving IRT arrays enhances the effectiveness of irrigation
    scheduling algorithms. Stationary measurements offer time series data while moving
    arrays provide spatially distributed data [52], [30]. Wireless data transmission
    is now accessible for IRTs, eliminating the need for cumbersome wiring and enhancing
    the ease of deploying IRTs in various settings [53], [54]. Furthermore, researchers
    use extensive datasets with canopy temperature and corresponding weather information.
    These datasets, in conjunction with machine learning, artificial neural networks
    and deep learning techniques, are being employed alongside energy balance models
    to estimate thermal stress indices and facilitate irrigation scheduling [55],
    [56]. Employing infrared thermocouples (IRTCs) on self-propelled irrigation systems
    such as center pivots present several challenges: - Estimating daily canopy temperature
    dynamics from a single measurement at each field location is challenging due to
    the uncertainty associated with the timing of these measurements [35]. - It requires
    automatic data collection and analysis to control the irrigation system based
    on the canopy temperature data [35]. - If a self-propelled irrigation system is
    in motion, it has made an irrigation decision based on prescription maps unless
    it acquires data moving without irrigating [35]. - The misalignment of the IRTCs
    over the rows occurs as the pivot moves around the field [35]. - The time–temperature
    threshold (TTT) and crop water stress indexes are canopy temperature-based algorithms
    that do not distinguish between soil and canopy temperature. This lack of distinction,
    even though differences can exceed 30 °C, can affect the apparent surface temperature,
    particularly during partial canopy cover. Consequently, instances of unnecessary
    irrigation events occurring early in the season, before full canopy cover, have
    been reported [45], [28]. - Concerns have arisen that the deflection of moving
    irrigation systems and other factors may degrade moving IRT measurements relative
    to stationary IRT measurements [30]. - Specialized hardware and software systems
    exist for defining irrigation prescription maps based on weather, plant, and soil
    water information. This software incorporates site-specific irrigation scheduling
    methods and automates the data collection and processing obtained from sensing
    systems. However, it only defines static irrigation prescription maps and does
    not facilitate real-time water application in the field [43]. - Calculation methods
    typically employ the empirical upper and lower limits of the temperature difference
    between canopy and air to estimate CWSI and iCWSI based on the standardized temperature
    difference. This approach introduces irreducible uncertainty and error [22]. -
    Existing precision irrigation tools often have inadequate user interfaces, making
    them difficult to use and resulting in a poor user experience [57]. Additionally,
    low accuracy characterizes these tools, leading to the reluctance of producers
    to adopt them [58]. - Most current precision irrigation decision-support systems
    assume that producers strictly adhere to the recommended irrigation decisions
    for each event without allowing any flexibility in the irrigation timing [22].
    - The increasing adoption of infrared thermometers (IRT) for crop irrigation management
    has contributed to the growth of surface temperature datasets. This trend emphasizes
    the need to develop data quality assurance and control (QA/QC) procedures like
    those used for agricultural weather station data [53]. - In-situ sensors currently
    available in markets are typically expensive or not cost-effective enough for
    widespread adoption. Furthermore, they often require installation and removal
    before and after the growing season for row crops, resulting in additional labor
    costs [59], [22]. According to the references consulted, there is a wide range
    of research opportunities and challenges in the commercial implementation of this
    technology. Further studies are needed to determine how to integrate the information
    acquired from IRT sensors and automatic irrigation application systems to prescribe
    and apply the site-specific irrigation needs in real-time during the growing season,
    using soil and crop characteristics under different environments [15], [6]. Currently,
    systems acquire data from the field and generate irrigation prescription maps
    before the irrigation procedure (static maps). This study aims to develop an innovative
    system for mapping real-time canopy temperature and defining prescriptions using
    IRT sensors on a center pivot and GPS data while the center pivot moves on the
    field. The proposed system consists of hardware and software developments whose
    final goal is to provide farm managers with accurate and frequently updated information
    about crop irrigation requirements. This paper shows only the real-time canopy
    temperature system. The prescription mechanism and the proposed system comparison
    with others will be reported in other publications. 2. Materials and methods The
    study was conducted from the Farm Services Unit of E.V. Smith Research Center
    in Shorter, Auburn University, Alabama, USA (32° 26′ 15″ N, 85° 54′ 57″ W, and
    32 masl), during the 2018 and 2019 growing seasons. The field experiences a subtropical
    humid (Cfa) climate, with average low and high temperatures of and , respectively,
    and an annual rainfall of (https://awis.aumesonet.com/). The same corn hybrid
    (Dekalb DKC62-08, Bayer Corp., Whippany, N.J.) was planted in both years. In 2018,
    the corn was planted in concentric rows, while in 2019, it was planted in straight
    rows at a row spacing of and a population density of [60]. Soil texture, bulk
    density, and soil water retention curves (SWRC) were determined at five points
    within the experimental area. These properties were measured at soil depths of
    , , and at each location. The percentage by mass of sand, clay, and silt was determined
    by a commercial soil laboratory (Water Agricultural Laboratories, Camilla, Ga.).
    Saturated undisturbed soil cores were analyzed using a hydraulic property analyzer
    (HYPROP 2, Meter Group, Pullman, Wash.) to establish the relationship between
    soil matric potential and volumetric soil water content (VWC) [61]. The soil matric
    potential of saturated undisturbed cores, measured with the hydraulic property
    analyzer, ranged from 0 to 0.08 MPa. Additionally, a dew point hygrometer (WP4C
    PotentiaMeter, Meter Group) was employed to determine the VWC versus soil matric
    potential relationship at 0.63, 1.5, and 3.3 MPa using disturbed soil samples.
    The data from both instruments were processed using HYPROP-FIT software (ver.
    4.1.0.0, Meter Group, https://library.metergroup.com/Manuals/UMS/HYPROP-FIT_Manual.pdf)
    to generate soil water retention curves (SWRCs) based on the traditional unconstrained
    van Genuchten model [62]. The volumetric soil water content (VWC) at field capacity
    (FC) was determined for all locations, while the permanent wilting point (PWP)
    was established at a soil matric potential of 1.5 MPa. Soil bulk density was calculated
    by dividing the weight of dry soil (oven-dried at 105 °C until reaching a constant
    weight) by its volume, using undisturbed soil cores. The experiment took place
    in a field irrigated by a seven-span, half-circle center pivot irrigation system
    covering 30 ha. The system (model 7000, Valmont Industries, Valley, Neb.) had
    a lateral length of 434 m and operated with a flow rate of 181.7 cubic meters
    per hour, with a line pressure at the pivot point of 0.241 MPa. Equipped with
    a middle-elevation spray application (MESA) sprinkler package, the system included
    pressure regulators rated at 0.103 MPa. It was retrofitted with a variable-rate
    irrigation (VRI) system featuring solenoid valves to control water application
    over each half span. Each half span, approximately 31 m in length, represented
    a grid of 2° arc, allowing for the prescription of a single irrigation rate for
    the group of sprinklers within each half span. The experiment utilized full and
    limited irrigation treatments, designated as T100 (100 % soil water replenishment
    to field capacity), T66 (66 % replenishment of T100), and T33 (33 % replenishment
    of T100). A randomized complete block design was implemented with three treatments
    and four replications in 2018 (12 plots) and six replications in 2019 (18 plots).
    Soil water content (VWC) in the root zone was measured using a time domain reflectometer
    (TDR-315L, Acclima, Meridian, Ida.) and a capacitance-type soil water sensor (ECH2O
    EC-5, Meter Group) at three depths. In 2018, sensors were installed from 21 May
    to 30 August, while in 2019, they were installed from 23 April to 5 August. For
    the T100 treatments, VWC changes (except for replication 1 in 2018) were monitored
    using TDR-315L and EC-5 sensors at 0.15, 0.3, and 0.6 m soil depths. The T66 and
    T33 treatments were assessed using only EC-5 sensors at the same soil depths as
    the T100 treatments. Dataloggers (Aquatrac, AgSense, Valmont Industries, Inc.,
    Huron, S.D., and model Em50, Meter Group) recorded VWC values at 30-minute intervals.
    Aquatrac dataloggers were used for TDR-315L sensors, while Em50 dataloggers were
    used for EC-5 sensors. Data collection began on 21 May 2018 and 28 April 2019.
    Irrigation rates were determined using VWC data from TDR-315L sensors in the T100
    treatment to replenish soil water to field capacity (FC) at a depth of 0.6 m.
    When soil water depletion from any T100 treatment reached 50 % of plant-available
    water (PAW), irrigation was applied to all treatments. The irrigation rate for
    each block was calculated based on the T100 treatment. For T66 and T33 treatments,
    irrigation rates were 66 % and 33 % of the T100 rate, respectively. Soil water
    depletion (SWD) was calculated by summing the depletion at each soil layer using
    data from four TDR-315L sensors in 2018 and three TDR-315L sensors in 2019. The
    irrigation prescription map was generated using Valley VRI (model 8.55, Valmont
    Industries, Valley, Neb.) and uploaded remotely to the Valley Pro2 panel located
    at the pivot point. Canopy temperature data were recorded using wireless IRT sensors
    (SapIP-IRT, Dynamax, Houston, Tex.) installed on a stationary mast in each experimental
    plot. IRT data collection began on May 13, 2018, and May 7, 2019, corresponding
    to the V7 vegetative growth stage. IRTs were installed 1 m above the canopy in
    the same crop row and 1.5 m from soil water sensors. Each IRT sensor targets the
    crop row throughout the growing season. Additionally, twelve IRT sensors (SapIP-IRT,
    Dynamax, Houston, Tex.) were installed on span 2 in 2018 and on span 7 in 2019,
    collecting data while the center pivot was moving. Dynamax IRT sensors were calibrated
    by the company before the experiments. IRT location accuracy was determined using
    a real-time kinematic (RTK) 297 Trimble GPS (Trimble Inc., Sunnyvale, CA, USA).
    The design principle follows the concept of a wireless sensor network (WSN) [63].
    The system has a set of IRT sensors installed on a center pivot, a global positioning
    system node (GPS), which communicates with a central or main station using a Zigbee
    protocol (IEEE 802.15.4). The central station uses an embedded computer (EC).
    The CE is responsible for data acquisition from the IRT sensors and performing
    water stress indices, storing the information in a database, configuring the capture
    modules, and interacting with the user through a graphic user interface (GUI).
    Irrigation prescriptions with IRT sensors measurements on the center pivot were
    modeled using the machine learning models NARX (Nonlinear Autoregressive Network
    with Exogenous Inputs) and LSTM (Long short-term memory), adjusting the best hyperparameters
    and using as inputs the air temperature and relative humidity, canopy temperature
    of sensors on stationary masts, canopy temperature of sensors installed aboard
    the central pivot and as output the corresponding irrigation prescription. This
    procedure is not the scope of this article, and details will be explained in forthcoming
    publications. The proposed system design for canopy temperature monitoring and
    water balance estimation in a center pivot involves hardware and software integration
    and communication components. This section describes the electronic devices required
    to satisfy the requirements defined in the research. First, the hardware for the
    IRT system, the GPS system and the embedded computer are presented, with a justification
    of their suitability and an exposition of their main features. Then, is discussed
    the methodological aspects of the software development process. Finally, are introduced
    the underlying mapping algorithms of canopy temperature. 2.1. Hardware components
    description Wireless sensor node architecture includes twelve SapIP-IRT Infrared
    Leaf Temperature (Dynamax, Inc., Houston, TX), equipped with an XBee RF module
    (Digi International, Minnetonka, Minn.). The SapIP-IRT has a highly accurate reading
    of , is very stable over time, and has a signal window and field of view (FOV).
    For a one-meter-wide target, the IRT must place three meters above the item or
    surface to measure (20 degrees FOV). Zigbee specifications are and a range of
    with a omnidirectional antenna - (high gain), rechargeable batteries, typical
    current of . The maximum battery voltage during charging is , and the minimum
    battery operation is . Sensor response stops below . Fig. 1 shows the general
    scheme of the proposed system. Download : Download high-res image (252KB) Download
    : Download full-size image Fig. 1. Diagram of interaction among central station,
    sensors, GPS receiver and server in the center pivot. The wireless GPS node in
    the center pivot end-tower uses a raspberry pi zero board, a solar panel, a 12
    V battery and a Garmin GLO GPS. GLO can receive position information from the
    GPS and the GLONASS satellite constellations, allowing it to connect to up to
    24 more satellites than devices that rely on GPS alone. The GLO GPS locks on satellites
    approximately 20 percent faster and remain connected even at high speed. GLO updates
    its position information ten times per second with WAAS, an accuracy of 3 m and
    12 h of battery life. The 12 IRT sensors mounted onto the center pivot acquire
    crop canopy temperature. Sensors and GPS node transmit temperature and geolocation
    data to the central station, that is, a small computer Raspberry Pi3 (Raspberry-Pi®
    Foundation North America, Inc) at the pivot point with Zigbee 2.4 GHz protocol
    and an algorithm developed in the Python programming platform (Python Software
    Foundation, version 3, Netherlands) for managing and visualizing data, and defining
    irrigation prescription. 2.2. Software development process According to [50],
    for an IRT sensor located on the pivot, the cover surface can be approximated
    as an elliptical footprint with the vertical axis (Fig. 2). The equation used
    to calculate the area and characteristics of that elliptical footprint was defined
    using Fig. 3. This figure shows the geometrical dimensions of the cover surface
    pattern. The parameters defined are : horizontal distance from the pivot lateral
    to the ellipse starting point, : horizontal distance from the pivot lateral to
    the point with the highest temperature value acquired by the IRT sensor, horizontal
    distance from the pivot lateral to the ellipse center and : the horizontal distance
    from the pivot lateral to the ellipse endpoint. , and represent the optical path
    length from the IRT sensor to , and , respectively. is the angle between the vertical
    IRT projection to the soil and , is de IRT Field of Vision (FOV), μ and τ are
    half of the major and minor axis of the ellipse and is the height of the IRT sensor
    with respect to the soil. Download : Download high-res image (373KB) Download
    : Download full-size image Fig. 2. Pattern of canopy temperature cover surface
    using IRT sensors on the center pivot. Download : Download high-res image (134KB)
    Download : Download full-size image Fig. 3. Geometrical dimensions of the IRT
    cover surface pattern. Horizontal distances were defined using equations (6),
    (7), (8), (9). (6) (7) (8) (9) Half of the ellipse-major axis was defined using
    equation (10). (10) where is the IRT inclination, is FOV/2 and is the half of
    the ellipse-major axis from Fig. 3b. (11) (12) (13) (14) Using the ellipse equation
    (15) and changing the parameters obtained in equations (13), (14), the equation
    (16) is obtained. (15) (16) where is the half of the minor axis of the ellipse.
    Consequently, from equation (11) is obtained equation (17). (17) Finally, the
    ellipse area calculation is determined using equation (18). (18) Using equation
    (18), for example, an IRT looking slightly forward of the drop hoses at an oblique
    angle to the of FOV, mounted on a pivot lateral ( above the ground), (in the horizontal
    plane) from the edge of a treatment plot, will have a resolution of approximately
    of crop surface and with FOV approximately of crop surface. Fig. 4 specifies the
    IRT sensors and GPS node location on the pivot. is the GPS node location at time
    , represents the angle between the GPS node position respect to the reference
    point , is the pivot lateral angle respect to and is the angle between the pivot
    lateral and the GPS node location, which is a constant. Download : Download high-res
    image (252KB) Download : Download full-size image Fig. 4. Infrared (IRT) sensors
    and GPS location on the center pivot. A Geo7X GPS (Trimble®, Sunnyvale, CA, USA)
    allowed the definition of , (Span1 distance) and (Span2 distance) coordinates,
    with an accuracy of 1–100 cm using Global Navigation Satellite System (GNSS) in
    the World Geodetic System 1984 (WGS84). These coordinates where stored in three
    variables: , and These locations were converted to Universal Transverse Mercator
    (UTM) coordinates: , and Distances (from to ) and (from to ) were defined using
    the UTM coordinates, equations (19), (20). (19) (20) To calculate the distance
    between IRT sensors ( ), is divided by the number of sensors plus one. In this
    experiment, there were 12 sensors on the pivot, then . A list of sensor locations
    on the pivot , is generated by with . This list contains 12 values, equation (21).
    (21) Each Dynamax IRT sensor sends a frame with a time tick, sensor serial number,
    battery voltage, target IR temperature degrees Celsius resolution), and sensor
    body temperature. For example, the frame: corresponds to sensor 305, reading of
    canopy temperature. The algorithm uses a list of IRT serial numbers with codes
    of the 12 sensors installed on the pivot. This list contains 12 strings, equation
    (22). (22) Additionally, the code uses a dictionary with 12 key-value pairs. The
    keys correspond to the 12 serial numbers and a list of values acquired by 12 IRT
    sensors. The dictionary uses the notation tuples of Key (String): Values (List
    of float numbers), equation (23). S (23). The GPS distance concerning the pivot
    lateral is a constant defined by equation (24). (24) The angle between the pivot
    lateral and the GPS location is a constant defined by equation (25). (25) The
    algorithm to define the location of each sensor on the field in real-time uses
    the following steps: • Acquire data from and convert it to . • Define in Fig.
    3 using the equation (26). (26) • Adding with to define the pivot lateral angle
    . For determining the geographical position of each sensor, the algorithm uses
    a new dynamic center point . This location changes during the pivot movement,
    adding −90 degrees to the center pivot angle according to Fig. 4. 3. Results and
    discussion Fig. 5a shows the GPS node located at the center pivot final tower.
    Fig. 5b and 5c correspond to the central station installed in the field. Fig.
    5c shows the embedded computer (Raspberripy3), connected to a wireless radio (Xbee
    Pro2) and a USB Pen Drive. The Xbee and the pen drive are connected using the
    USB ports of the Raspberry Pi3. The power supply uses a 12 V battery and a solar
    cell panel connected to a voltage regulator from 12 V to 5 V. The Raspberry Pi3
    is connected to the power supply using a USB 2.0 A-male to micro-B cable, and
    the Xbee device uses a USB 2.0 to mini-B male cable. Download : Download high-res
    image (553KB) Download : Download full-size image Fig. 5. (a) GPS node on the
    center pivot, (b) Central station implementation and (c) Central station electronic
    components. Fig. 6 shows some of the twelve SapIP-IRT Infrared Leaf Temperature
    sensors installed on the pivot. Nodes are installed and connected to solar panels
    for data acquisition and transmission. Download : Download high-res image (148KB)
    Download : Download full-size image Fig. 6. IRT – Canopy temperature sensors installed
    on the central pivot. The developed Python software application called Infrared
    Mapping Tool supports the system configuration (sensors, GPS node data acquisition
    and other parameters), data processing and map visualization. The design principles
    for the Infrared Mapping Tool in real-time were that it should provide the most
    accurate and site-specific information we could offer the irrigation manager with
    the selected technology. In addition, the Infrared Mapping Tool requires minimum
    user input, is very easy to manage and provides ready-to-use data output to irrigation
    prescriptions in real-time. The Infrared Mapping Tool can operate with Raspbian
    or Windows operative systems. This tool records data in plain text format (.txt)
    inside its memory block and in an external pen drive and generates a shape file
    with the information in real-time from the sensors and their locations. The system
    uses a VNC (Virtual Network Computing) connection for monitoring remotely using
    WIFI communication protocols, and data is sent to a server for processing after
    the acquisition if there is an internet connection. The central station uses a
    Raspberry Pi with a 3.2 in. touch screen. After the initial setup, the user interacts
    with the Main Screen (Fig. 7). If the system configuration does not need modifications,
    the user can click the button Active IRT System to start data acquisition and
    map generation in real time. Download : Download high-res image (208KB) Download
    : Download full-size image Fig. 7. Main user-interface screen of the Infrared
    Mapping Tool in the Raspbian operative system. Raspbian operative system. The
    IRT Sensors Monitoring Tab allows the visualization of all the sensors connected
    in the system. Clicking some sensor pushbutton is possible to visualize the data
    acquired by the sensor in real-time (Fig. 8a). On this screenshot, the user can
    view information about latitude, longitude, sensor code, battery, canopy temperature
    and IRT sensor temperature. The screenshot in Fig. 8c shows the selection option
    to configure charts. It is possible to visualize the behavior of each variable
    selected concerning the time, as is shown in Fig. 9. Download : Download high-res
    image (349KB) Download : Download full-size image Fig. 8. Raspbian operative system
    running the Infrared Mapping, (a) The IRT Sensors Monitoring, (b) the screenshot
    for monitoring sensor1 and (c) to select parameters option for the chart. Download
    : Download high-res image (78KB) Download : Download full-size image Fig. 9. Raspbian
    operative system. Sensor 1 chart - Infrared Mapping Tool. Battery, canopy temperature
    and IRT sensor temperature. The user may configure the Infrared Mapping Tool to
    central pivot characteristics. The accurate definition of those parameters is
    significant because they are stored and used to locate the IRT sensors on the
    center pivot and to ensure the dynamic location precision of each sensor when
    it is in movement. The Center Pivot Span Configuration tab allows the user to
    edit any of the information about the center pivot related to the exact location
    of the center and the final of each span (Fig. 10a). The Sensor-Central Pivot
    configuration tab allows to define the number of IRT sensors that are installed
    by span (Fig. 10b). Finally, the Sensor Order configuration tab allows to establish
    the code order of the sensors installed on the center pivot from the left (center)
    to the right (span 7) (Fig. 10c). Each sensor has a code provided from Dynamax
    company and the user can select the order of the sensors in this configuration
    step. Download : Download high-res image (301KB) Download : Download full-size
    image Fig. 10. Infrared Mapping Tool Configuration. (a) center pivot span configuration,
    (b) Sensor-central pivot configuration and (c) sensor order configuration (right).
    Raspbian operative system. 3.1. Infrared mapping Tool performance Fig. 11 shows
    the Real-Time map of the location of canopy temperature sensors on the center
    pivot in the graphic interface of the Windows operative system. The map validation
    process consisted of retroactively applying the model to the center pivot with
    twelve IRT sensors and the measurement on the field using the Trimble GPS device.
    Accuracies were less than 3.0 m with the proposed system implementation because
    of the GLO GPS Characteristics. This accuracy can be improved using a GPS receiver
    with better performance. Download : Download high-res image (393KB) Download :
    Download full-size image Fig. 11. Infrared Mapping Tool Configuration. Real-Time
    map of the location of canopy temperature sensors on the center pivot. Windows
    operative system. Fig. 12 shows a Canopy Temperature map obtained with the developed
    system, where colors define the temperature amounts acquired in the field. Download
    : Download high-res image (438KB) Download : Download full-size image Fig. 12.
    Canopy Temperature map obtained with the developed system. Table 1 shows the result
    of training the LSTM and NARX neural networks for determining irrigation prescriptions
    using as input data the ambient temperature, relative humidity, canopy temperature
    (ground and aboard the center pivot), and the irrigation prescription as output.
    Root Mean Squared Error ( ) and correlation coefficient ( ) metrics were used
    in irrigation prediction with a test dataset. Fig. 13 shows the training results
    for case T66. Fig. 13a shows the decaying cost function for training and validation,
    indicating no overfitting. Fig. 13b shows the result of irrigation prediction
    with test data indicating that the models effectively tracked the irrigation prescription
    behavior using canopy temperature sensors. The procedure and data analysis will
    be used for subsequent publications because this paper only shows the development
    of the real-time crop temperature mapping system. Table 1. Performance of LSTM
    and NARX Neural Networks Treatment Neural Network Model RMSE T33 LSTM 0.71 0.99
    T66 LSTM 3.93 0.92 T100 LSTM 1.89 0.99 T33 NARX 0.56 0.98 T66 NARX 4.18 0.82 T100
    NARX 1.87 0.94 Download : Download high-res image (197KB) Download : Download
    full-size image Fig. 13. Irrigation prescription predicted with a NARX neural
    network. Inputs: ambient temperature, relative humidity, and plant cover temperature;
    output: irrigation prescription (T66). a) Loss function in training and validation.
    b) Model evaluation using a test dataset. Efficient irrigation plays a crucial
    role in achieving the sustainability of food production and ensuring regional
    water security [64]. Producers rely on personal experience and weather data to
    determine when and how much to irrigate using center pivot systems. A survey found
    that over 75 % of U.S. irrigation scheduling methods rely on rules of thumb like
    crop calendars and neighbor practices, while less than 25 % use science or technology-based
    approaches [65]. According to the recent advances, challenges and opportunities
    of precision irrigation described by [22], the most important topics are data
    availability and scalability, quantification of plant water stress, model uncertainties
    and constraints, and the participation of producers and motivation. Table 2 shows
    the challenges and contributions of the proposed system in this research. Table
    2. Challenges, contributions and future improvements of the proposed technology
    [22]. Empty Cell Data availability and scalability Quantification of plant water
    stress Model uncertainties and constraints Producers’ participation and motivation
    Challenges In-situ: usually costly and/or labor-intensive, thus not scalable.
    Remote sensing data: insufficient resolution in either time and space and long
    latency. Unclear plant water stress definition. Soil-based prescriptions only
    focus on water supply.Prescriptions derived from plant-based indicators such as
    canopy temperature indices (CWSI and iCWSI) and leaf water potential. Process-based
    models. Uncertainties when applying calibrated models to other fields. Under-represented
    or missing process. Statistical/machine learning models. Black boxes and lack
    specificity. Low confidence. Impractical and unreliable tools. Limit access to
    information. Limit market-based incentives for water conservation. Contributions
    of the proposed technology Low-cost implementation. Wireless Sensor Networks (WSN)
    with scalability option. IoT capabilities. Web data availability. Plant water
    stress quantification based on canopy temperature and soil water content. Real-time
    irrigation prescriptions while the center pivot is moving on the field. Dynamic
    Variable Rate Application of water on the field.Factory sensor calibration.It
    ensures sufficient data transmission times in the mesh wireless network. Application
    of artificial intelligence models for irrigation prescription while the center
    pivot is moving in the field. Easy-to-use software application. In addition, it
    shows the movement of the pivot in real-time on the field. IoT and web technologies
    enable easy access to information. Future work on the proposed technology Use
    LoRa WAN technologies for better transmission distances. Further reduces the costs
    of sensors and data acquisition systems. Development of ground, drone and satellite
    data fusion algorithms to improve spatial resolution. Study the irrigation prescription
    model in different environments. Improve irrigation amount to apply considering
    soil water demand and plant physiological regulations. Link real-time mapping
    system on commercial center pivots. Study and find models that allow including
    the effects of data measurement in soil rows and crop plants. Improve GPS module
    precision. Develop useful irrigation application models for different types of
    soil, climate and crops based on canopy temperature sensors and deep learning
    strategies. Add intuitive management tools to the proposed system, which allow
    easy interaction between the user and the developed software. Integrate commercial
    central pivot management functionalities with the real-time prescription system.
    The developed system significantly enhances precision irrigation practices by
    enabling real-time water application according to crop water demand. This information
    allows for optimal irrigation precise determination timing and amounts across
    the field. Unlike conventional infrared thermography (IRT) sensor systems on center
    pivots, which generate static water need maps [42], [43], our system offers dynamic,
    real-time irrigation prescriptions with application in dynamic variable-rate technologies
    that adjust irrigation rates based on the changing conditions within the field.
    These prescriptions are vital because they consider the spatial and temporal variations
    in crop growth, crop water status, and soil water availability throughout the
    growing season. This capability represents a significant advancement in precision
    irrigation technology. The adoption of precision irrigation tools depends on their
    accuracy and user-friendly interfaces [57]. Our system provides an intuitive interface
    and dynamic decision-making, empowering farmers with the capability to make informed
    decisions about when to start or stop irrigation. Swift updates based on soil
    and plant conditions are crucial if irrigation is postponed [22], and real-time
    mapping eliminates the need for acquiring new data for the entire field and generating
    new prescription maps. Additional calibrations beyond the manufacturer''s factory
    settings were not applied to Dynamax IRT sensors (Dynamax, Inc., Houston, TX).
    A study conducted in a controlled temperature chamber showed that root mean squared
    errors between factory-calibrated IRT brightness and black-body temperatures (ranging
    from 15 °C to 55 °C) were mostly within 0.75 °C, while ambient temperatures in
    the chamber were varied from 15 °C to 45 °C. However, the temperature differences
    between the target and ambient temperatures in the controlled chamber (up to 40
    °C) were much larger than those typically encountered in field conditions (10)°C).
    Field testing using a lysimeter indicated that post-factory calibration versus
    factory calibration had minimal impact on calculated crop evapotranspiration [66].
    This suggests that an additional post-factory, sensor-specific calibration would
    have little justification over using only factory-calibrated temperatures in the
    field. Moreover, conducting a post-factory calibration over a range of ambient
    and target temperatures would necessitate a blackbody surface and chamber with
    variable temperature control, equipment that is rarely available [53]. Therefore,
    IRT data that solely rely on factory calibration are more likely to be suitable
    for practical applications in this project. The ZigBee Remote Control protocol
    offers several significant advantages over other systems. It provides low-power
    transmission, robustness, high security, and high scalability, with the ability
    to support high node density. Additionally, it leverages wireless control and
    sensor networks in IoT applications [67]. In wireless communication systems deployed
    in agricultural fields, security and privacy are crucial to ensure data confidentiality.
    Zigbee addresses these concerns by employing the 128-bit advanced encryption standard
    (AES) [68]. The AES algorithm encrypts the data and verifies data integrity using
    a message authentication code generated by encrypting the IEEE MAC frame. Xbee
    modules use the AES-CTR mode for encrypting the payload. Compared to IEEE 802.15.4,
    Zigbee adds two extra security layers to the network and application layers, utilizing
    AES 128-bit encryption. The distributed security model is limited to routers and
    end devices. If a router detects a powered-up existing network, it can join the
    secured network; otherwise, it can form a distributed secured network and assign
    network keys to newly joined routers and end devices. While this model is simple,
    it does not offer the highest level of security. We use the centralized security
    model, which is more complex and secure than the distributed model. The network
    coordinator is responsible for authenticating and validating each device attempting
    to join the network [69]. While these encryptions enhance security, they limit
    the delay in network communications (latency), the speed at which data is transmitted
    (throughput), link quality, power consumption and longevity of the network. However,
    the increased energy consumption for encryption is recommended in agricultural
    IoT applications [70]. Security measures implementation can significantly enhance
    the security of Zigbee networks. Nevertheless, like any technology, the effectiveness
    of security measures depends on how they are implemented and maintained [71].
    Without adequate security configurations, Xbee devices are vulnerable. These devices
    are built with a preconfigured global link key, making them susceptible to man-in-the-middle
    attacks. The equipment in IRT sensors and central station should be placed in
    protective enclosures to prevent damage from insects, rodents, and weather conditions.
    These enclosures must be both weatherproof and tamper-resistant. Environmental
    sealing can protect against moisture and dust, which can negatively impact the
    performance of electronic components. Adequate ventilation may also be necessary
    to prevent overheating. It is recommended to use reliable power sources, such
    as solar panels or batteries, to ensure the continuous operation of the electronic
    system. Backup power sources may be required in the event of power outages. Dynamax
    IRT sensors offer remote monitoring capabilities, enabling the tracking of the
    electronic system''s performance and the detection of any issues related to the
    power system. Regular inspection and maintenance of the electronic system are
    crucial to ensure optimal performance. This includes checking for signs of damage,
    cleaning components, and replacing worn-out parts. Preventive maintenance was
    conducted monthly, while general corrective maintenance and functional tests were
    performed whenever the sensors were installed on the central pivot, and the routers
    and central station were placed in the field. To prevent damage from rodents,
    all exposed cables near the soil were covered with flexible metal tubes. The scalability
    in the developed systems depends on the transceiver devices used in the wireless
    sensor network. ZigBee networks offer several benefits, particularly in large-scale
    deployments, due to their energy efficiency and flexibility. [72] refers to Zigbee
    networks as personal area networks (PANs) and states that each network has a unique
    PAN identifier (PAN ID) shared among all devices in the network. Zigbee devices
    can join a network by either being preconfigured with a PAN ID or by discovering
    nearby networks and selecting a PAN ID to join. Zigbee defines three device types:
    coordinator, router, and end-device [73]. In Zigbee networks, there should be
    only one Coordinator node per network, serving as the controller responsible for
    selecting the network channel, organizing the network, and synchronizing the wireless
    sensor network. The coordinator selects the channel, PAN ID, security policy,
    and stack profile for the network. It initiates the network, selects the channel
    and PAN ID (64-bit and 16-bit), and manages other functions that define, secure,
    and maintain the network. Routers are responsible for maintaining the infrastructure
    of the ZigBee network. These nodes do not gather data or start the message transmission
    but only transmit data from router to router or from the end devices to the coordinator.
    These devices cannot sleep and must always remain powered on. Finally, end-devices
    do not route. They are responsible for gathering data and delivering it to the
    nearby router or coordinator. The scalability of the proposed system in this paper
    does not have restrictions by communication infrastructure because designers have
    made all ZigBee nodes small, lightweight, and energy-efficient, allowing the connection
    of up to 65,535 nodes [74]. Dynamax utilizes the IRT SALH data logger system,
    housed in a weatherproof enclosure, which can link to repeaters to collect data
    from up to 25 wireless IRT sensors and three routers [75]. In this research, we
    designed and implemented a datalogger that allows the connection of more IRT sensors,
    integrating one coordinator, multiple end-devices and routers, leveraging the
    capabilities of ZigBee technology and improving system scalability. Table 3 lists
    the required hardware for implementing the wireless sensor, GPS, and central station
    nodes, along with their current costs. The number of wireless sensor nodes used
    depends on the central pivot size, and a span can accommodate several IRT sensors.
    Based on the current design and the study field characteristics, the cost of implementing
    the entire hardware in the center pivot with twelve SapIP-IRT Infrared Leaf Temperature
    (Dynamax, Inc., Houston, TX) nodes is US$8,964.32. We implemented this hardware
    to ensure the system performs correctly. One key focus of future work is reducing
    implementation costs and optimizing modules'' energy consumption. Table 3. Costs
    of electronic components and sensors in the proposed system. Description Part
    Number Manufacturer Cost (US$) Wireless sensor node Infrared Leaf Temperature
    Sensor SapIRT-IRT Dynamax 490 Miscellaneous (Cables, sockets, pipes) 42.11 Energy
    System, solar Panel (5 W) 20 2.4 GHz Weatherproof Antenna. 300 to 500 m SPIP-ACC24-EW
    Dynamax 130 Total Wireless sensor node 682.11 GPS node Bluetooth GPS GLO GPS Garmin
    110 Board Raspberry Pi Zero W Raspberry-Pi Foundation 27 Communication System
    XBEE S2C-PRO Digi International 58.25 Miscellaneous (Cables, electronic components,
    sockets, pipes, box) 30 Energy System, solar Panel (10 W), Battery(12 V-7.5AH)
    and Controller 10 W 12 V Poly solar Panel Kit ECO-WORTHY, MTEK 55 2.4 GHz Weatherproof
    Antenna. 300 to 500 m SPIP-ACC24-EW Dynamax 130 Total GPS Mode 410.25 Central
    Station node Board Raspberry Pi 3 Raspberry-Pi Foundation 47 Communication System
    XBEE S2C-PRO Digi International 58.25 Miscellaneous (Cables, electronic components,
    sockets, pipes, box) 68.5 Energy System, solar Panel (20 W), Battery(12 V-7.5AH)
    and Controller 10 W 12 V Poly solar Panel Kit ECO-WORTHY, MTEK 65 2.4 GHz Weatherproof
    Antenna. 300 to 500 m SPIP-ACC24-EW Dynamax 130 Total Central Station 368.75 TOTAL
    1461.11 According to the University of Georgia’s crop production budget [76],
    a center pivot irrigation system can consume diesel and electricity per every
    irrigated acre-inch (Table 4). These costs are strictly related to the center
    pivot movement when watering. Table 4. Cost analysis for center pivot installation:
    investment and operating costs [76]. Parameter 65 Acres 65 Acres 160 Acres 160
    Acres Type Diesel Electric Diesel Electric Crop Type Corn Corn Corn Corn Acreage
    Covered (Acres) 65 65 160 160 Average Time for Full Coverage (hour) 43.5 43.5
    73 73 Average Application Rate (inches) 1 1 1 1 Annual Acre Inch Applied (inches)
    16 16 16 16 Total Investment Costs (US$) 176 875.00 176 875.00 215 375.00 212
    375.00 Total Ownership Costs (US$) 19 013.02 18 655.52 22 959.27 22 601.77 Total
    Operating Costs (US$) 12 174.44 5 613.05 27 155.78 8 606.95 Annual Costs per pivot
    (US$) 31 187.46 24 268.57 50 115.05 31 208.72 Annual Costs per Acre (US$) 479.81
    373.36 313.22 195.05 Reviewing the current procedure for canopy sensors on central
    pivot systems reveals the need to move the pivot across the field, acquire data
    along its path, generate irrigation prescription maps, and adjust pivot movement
    for irrigation based on these prescriptions [42], [43]. Additionally, any incidental
    rain or operational problems with the central pivot that render the system inoperable
    for hours or days render the initial prescription obsolete, necessitating new
    routes for new prescriptions. The system proposed in this research addresses these
    challenges. Moreover, by eliminating field steps required for generating irrigation
    maps, the operating costs of the center pivot are reduced respect to Table 4.
    It is important to note that the values presented in Table 4 do not include these
    data acquisition processes, which contribute to higher implementation and operation
    costs when using the conventional mapping method with IRT sensors on the center
    pivot. 4. Conclusions The proposed technology contributes to agricultural irrigation
    management through its cost-effective implementation and capabilities of mapping
    crop canopy temperatures using a wireless network of infrared thermometers on
    a center pivot. It incorporates Wireless Sensor Networks (WSN) with scalability
    options, IoT capabilities, and web data availability. The technology enables precise
    plant water stress quantification based on canopy temperature and soil water content,
    facilitating real-time irrigation prescriptions while the center pivot is in motion
    on the field. Canopy temperature sensors do not require additional calibration,
    guaranteeing highly accurate readings of +/- 0.5 °C. Enhancing the GPS receiver
    accuracy is imperative because it guarantees the determination of the sensor''s
    position on the center pivot. GLO2 GPS can receive position information from GPS
    and GLONASS satellite constellations, can use 24 extra satellites to lock approximately
    20 % faster and remain connected even at high speed but with an accuracy of 3
    m. To enhance the GPS module, we can use receivers with Differential Global Positioning
    System (DGPS) as Real-time kinematic positioning (RTK) or augmentation systems
    such as Wide Area Augmentation System (WAAS) in U.S.A. or European Geostationary
    Navigation Overlay Service (EGNOS) in Europe. NARX and LSTM neural network models
    were trained to predict irrigation prescriptions using ambient temperature, relative
    humidity, and plant cover temperature as input data. These temperatures were measured
    by the sensors installed on the ground and aboard the central pivot. The irrigation
    prescription was used as output data. They achieved RMSE values ranging from 0.56
    mm to 4.18 mm in RMSE. Additionally, the correlation coefficient values exceeded
    0.8, indicating that the models effectively tracked the irrigation prescription
    behavior using canopy temperature sensors. Several research activities are proposed
    as future work. Exploring LoRaWAN technologies can enhance transmission distances,
    thus improving the efficiency and reach of sensor networks. Additionally, efforts
    to reduce the costs of sensors and data acquisition systems can continue, making
    these technologies more accessible to farmers. Another promising area is the development
    of algorithms for fusing data from ground, drone, and satellite sources, which
    could significantly enhance spatial resolution in irrigation management. Furthermore,
    research focusing on refining irrigation prescription models in diverse environments
    and improving irrigation amount calculations based on soil water demand and plant
    physiological regulations is essential. Finally, researchers must develop models
    that consider the effects of measurements in soil rows and crop plants. This research
    was funded by the Wheat and Feed Grain Committee – Alabama Farmers Federation,
    Alabama Soil and Water Conservation Committee, TigerDay – Auburn University and
    Dynamax company. This research also was funded by the Universidad de los Llanos
    (DGI) - Colombia, with the project: Smart system for detecting and mapping of
    insect-pest population density in crops using machine learning techniques and
    IoT – Cod: C09-F02-007–2021. Funding This research was funded by the Wheat and
    Feed Grain Committee – Alabama Farmers Federation, Alabama Soil and Water Conservation
    Committee, TigerDay – Auburn University and Dynamax company. This research also
    was funded by the Universidad de los Llanos (DGI) - Colombia, with the project:
    Smart system for detecting and mapping of insect-pest population density in crops
    using machine learning techniques and IoT – Cod: C09-F02-007-2021. CRediT authorship
    contribution statement Andrés-F Jiménez: Conceptualization, Data curation, Formal
    analysis, Investigation, Methodology, Software, Validation, Visualization, Writing
    – original draft, Writing – review & editing. Brenda V. Ortiz: Conceptualization,
    Data curation, Formal analysis, Funding acquisition, Investigation, Methodology,
    Project administration, Resources, Supervision, Validation, Writing – original
    draft. Bruno P. Lena: Data curation, Formal analysis, Investigation, Methodology,
    Validation, Visualization, Writing – original draft. Declaration of competing
    interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgments Authors express their gratitude to Greg Pate –
    Former Director of the E. V. Smith Research Station, Auburn University. Many thanks
    to undergraduate students and research assistants that worked on this project:
    Barret Mason, Taylor Putman and Megan Thurmond. A.F. Jiménez expresses his gratitude
    to the Department of Boyacá and Minciencias – Colombia for the support through
    the scholarship program No. 733 - 2015 for the PhD at the Universidad Nacional
    de Colombia and to the Universidad de Los Llanos, Villavicencio, Colombia. Data
    availability The authors do not have permission to share data. References [1]
    M. Bozorgi, M. Moein, F. Nejadkoorki, N. Toosi Assessing the effect of water scarcity
    on crop selection and spatial pattern of croplands in central Iran Comput. Electron.
    Agric., 178 (2020), Article 105743, 10.1016/j.compag.2020.105743 View PDFView
    articleView in ScopusGoogle Scholar [2] U. Shafi, R. Mumtaz, J. García-Nieto,
    S. Hassan, S. Zaidi, N. Iqbal Precision agriculture techniques and Practices:
    from considerations to applications J. Sens., 19 (17) (2019), p. 3796, 10.3390/s19173796
    View in ScopusGoogle Scholar [3] O. Adeyemi, I. Grove, S. Peets, Y. Domun, T.
    Norton Dynamic neural network modelling of soil moisture content for predictive
    irrigation scheduling J. Sens., 18 (10) (2018), p. 3408, 10.3390/s18103408 View
    in ScopusGoogle Scholar [4] A.A. Alameen, K.A. Al-Gaadi, E. Tola Development and
    performance evaluation of a control system for variable rate granular fertilizer
    application Comput. and Electron. in Agric., 160 (2019), pp. 31-39, 10.1016/j.compag.2019.03.011
    View PDFView articleView in ScopusGoogle Scholar [5] A. Balafoutis, B. Beck, S.
    Fountas, J. Vangeyte, T.V.D. Wal, I. Soto, V. Eory Precision agriculture technologies
    positively contributing to GHG emissions mitigation, farm productivity and economics
    Sustainability, 9 (8) (2017), p. 1339, 10.3390/su9081339 View in ScopusGoogle
    Scholar [6] J. Neupane, W. Guo Agronomic basis and strategies for precision water
    management: a review Agronomy, 9 (2) (2019), p. 87, 10.3390/agronomy9020087 View
    in ScopusGoogle Scholar [7] I. Bhakta, S. Phadikar, K. Majumder State-of-the-art
    technologies in precision agriculture: a systematic review J. Sci. Food. Agric.,
    2019 (99) (2019), pp. 4878-4888, 10.1002/jsfa.9693 View in ScopusGoogle Scholar
    [8] M. Li, Y. Wang, H. Guo, F. Ding, H. Yan Evaluation of variable rate irrigation
    management in forage crops: saving water and increasing water productivity Agric
    Water Manag, 275 (2023), Article 108020, 10.1016/j.agwat.2022.108020 View PDFView
    articleView in ScopusGoogle Scholar [9] E. Abioye, M. Abidin, M. Mahmud, S. Buyamin,
    M. Ishak, M. Abd Rahman, M. Ramli A review on monitoring and advanced control
    strategies for precision irrigation Comput. Electron. Agric., 173 (2020), Article
    105441, 10.1016/j.compag.2020.105441 View PDFView articleView in ScopusGoogle
    Scholar [10] S. O’Shaughnessy M. Andrade K. Stone E. Vories R. Sui S. Evett 2018.
    Adapting a VRI irrigation scheduling system for different climates. In, Irrigation
    association show and education conference technical session proceedings on irrigation
    association 2018 Fairfax VA. Google Scholar [11] X. Hui, Y. Zheng, H. Yan Water
    distributions of low-pressure sprinklers as affected by the maize canopy under
    a center pivot irrigation system Agric Water Manag, 245 (2021), Article 106646,
    10.1016/j.agwat.2020.106646 View PDFView articleView in ScopusGoogle Scholar [12]
    B. Ortuani, G. Sona, G. Ronchetti, A. Mayer, A. Facchi Integrating geophysical
    and multispectral data to delineate homogeneous Management zones within a Vineyard
    in northern Italy J. Sens., 19 (18) (2019), p. 3974, 10.3390/s19183974 View in
    ScopusGoogle Scholar [13] K. Stone, P. Bauer, G. Sigua Potential water conservation
    using site-specific Variable rate irrigation Eng. in Agric. Appl., 35 (6) (2019),
    pp. 881-888, 10.13031/aea.13108 View in ScopusGoogle Scholar [14] J. Reyes, O.
    Wendroth, C. Matocha, J. Zhu Delineating site-specific Management zones and evaluating
    soil water temporal dynamics in a Farmer’s field in Kentucky J. Vadose Zon., 18
    (1) (2019), 10.2136/vzj2018.07.0143 Google Scholar [15] S. O’Shaughnessy, S. Evett,
    P. Colaizzi Dynamic prescription maps for site-specific variable rate irrigation
    of cotton Agric. Water Manag., 159 (2015), pp. 123-138, 10.1016/j.agwat.2015.06.001
    View PDFView articleView in ScopusGoogle Scholar [16] V. Cirillo, D. Molisso,
    A.M. Aprile, A. Maggio, R. Rao Systemin peptide application improves tomato salt
    stress tolerance and reveals common adaptation mechanisms to biotic and abiotic
    stress in plants Environ. Exp. Bot., 199 (2022), Article 104865, 10.1016/j.envexpbot.2022.104865
    View PDFView articleView in ScopusGoogle Scholar [17] A. McCarthy, J. Foley, P.
    Raedts, J. Hills Field evaluation of automated site-specific irrigation for cotton
    and perennial ryegrass using soil-water sensors and model predictive control Agric
    Water Manag, 277 (2023), Article 108098, 10.1016/j.agwat.2022.108098 View PDFView
    articleView in ScopusGoogle Scholar [18] O. Adeyemi, I. Grove, S. Peets, T. Norton
    Advanced monitoring and management systems for improving sustainability in precision
    irrigation J. Sustain., 9 (3) (2017), p. 353, 10.3390/su9030353 View in ScopusGoogle
    Scholar [19] W. Zhao, J. Li, R. Yang, Y. Li Determining placement criteria of
    moisture sensors through temporal stability analysis of soil water contents for
    a variable rate irrigation system Precis. Agric., 19 (2018), pp. 648-665, 10.1007/s11119-017-9545-2
    View in ScopusGoogle Scholar [20] A.-F. Jiménez, P. Cárdenas, F. Jiménez, A. Ruiz-Canales,
    A. López A cyber-physical intelligent agent for irrigation scheduling in horticultural
    crops Comput. Electron. Agric., 178 (2020), Article 105777, 10.1016/j.compag.2020.105777
    View PDFView articleView in ScopusGoogle Scholar [21] B. Peng, K. Guan, J. Tang,
    E. Ainsworth, S. Asseng Towards a multiscale crop modelling framework for climate
    change adaptation assessment nat Plants, 6 (2020), pp. 338-348, 10.1038/s41477-020-0625-3
    View in ScopusGoogle Scholar [22] J. Zhang, K. Guan, B. Peng, C. Jiang, W. Zhou,
    Y. Yang, Y. Cai Challenges and opportunities in precision irrigation decision-support
    systems for center pivots Environ. Res. Lett., 16 (5) (2021), Article 053003,
    10.1088/1748-9326/abe436 View in ScopusGoogle Scholar [23] E. Vilenski, P. Bak,
    J. Rosenblatt Multivariate anomaly detection for ensuring data quality of dendrometer
    sensor networks Comput. Electron. Agric., 162 (2019), pp. 412-421, 10.1016/j.compag.2019.04.018
    View PDFView articleView in ScopusGoogle Scholar [24] D.A. Segovia-Cardozo, L.
    Franco, G. Provenzano Detecting crop water requirement indicators in irrigated
    agroecosystems from soil water content profiles: an application for a citrus orchard
    Sci. Total Environ., 806 (2022), Article 150492, 10.1016/j.scitotenv.2021.150492
    View PDFView articleView in ScopusGoogle Scholar [25] A. Morales-Santos R. Nolz
    Assessment of canopy temperature-based water stress indices for irrigated and
    rainfed soybeans under subhumid conditions Agric Water Manag 279 2023 108214 10.1016/j.agwat.2023.108214.
    10.1016/j.agwat.2022.107957. Google Scholar [26] Gowda, P., Chavez, J., Colaizzi,
    P., Evett, S., Howell, T., Tolk, J., 2007. Remote sensing based energy balance
    algorithms for mapping et: Current status and future challenges. Trans. ASABE,
    50, 1639–1644. 10.13031/2013.23964. Google Scholar [27] S. O’Shaughnessy, S. Evett
    Canopy temperature-based system effectively schedules and controls center pivot
    irrigation of cotton Agric. Water Manag., 97 (9) (2010), pp. 1310-1316, 10.1016/j.agwat.2010.03.012
    View PDFView articleView in ScopusGoogle Scholar [28] P. Colaizzi, S. O’Shaughnessy,
    S. Evett, R. Mounce Crop evapotranspiration calculation using infrared thermometers
    aboard center pivots Agric Water Manag, 187 (2017), pp. 173-189, 10.1016/j.agwat.2017.03.016
    View PDFView articleView in ScopusGoogle Scholar [29] Y. Osroosh, L. Khot, R.
    Peters Economical thermal-RGB imaging system for monitoring agricultural crops
    Comput. Electron. Agric., 147 (2018), pp. 34-43, 10.1016/j.compag.2018.02.018
    View PDFView articleView in ScopusGoogle Scholar [30] P. Colaizzi, S. O’Shaughnessy,
    S. Evett, M. Andrade Comparison of stationary and moving infrared thermometer
    measurements aboard a center pivot Appl. Eng. Agric., 35 (6) (2019), pp. 853-866,
    10.13031/aea.13443 View in ScopusGoogle Scholar [31] Upchurch, D., Wanjura, D.,
    Burke, J., & Mahan, J., 1996. Biologically-identified optimal temperature interactive
    console (BIOTIC) for managing irrigation. US Patent No. 5539637. Google Scholar
    [32] O’Shaughnessy, S., Evett, S., Colaizzi, P., Howell, T., 2012. Grain sorghum
    response to irrigation scheduling with the time-temperature threshold method and
    deficit irrigation levels. Transactions of the ASABE. 55 (2), pp. 451–461. https://doi:
    10.13031/2013.41395. Google Scholar [33] D. Wanjura D. Upchurch Canopy temperature
    characterizations of corn and cotton water status Trans ASAE 43 (4):867–875 2000
    10.13031/2013.2982. Google Scholar [34] R. Stull Wet-bulb temperature from relative
    humidity and air temperature Appl. Meteorol. and Climatol., 50 (11) (2011), pp.
    2267-2269, 10.1175/JAMC-D-11-0143.1 View in ScopusGoogle Scholar [35] R.T. Peters,
    S.R. Evett Complete center pivot automation using the temperature–time threshold
    method of automatic irrigation scheduling Proceedings of the ASAE/CSAE Annual
    International Meeting. Dynamic Partnerships for an Environmentally Safe and Healthy
    World (2004), 10.13031/2013.16409 Google Scholar [36] Lamm, F., Aiken, R., 2008.
    Comparison of temperature-time threshold-and et-based irrigation scheduling for
    corn production, in 2008 Providence, Rhode Island. ASABE. p. 1. 10.13031/2013.25046.
    Google Scholar [37] Y. Erdem L. Arin T. Erdem S. Polat M. Deveci H. Okursoy Gülta¸s,
    H.T., Crop water stress index for assessing irrigation scheduling of drip irrigated
    broccoli (Brassica oleracea L. var. italica) Agric. Water Manag. 98 2010 148 156
    10.1016/j.agwat.2010.08.013. Google Scholar [38] O’Shaughnessy, S., Rush, C.,
    2014. Precision agriculture: Irrigation. In Encycl of Agric and Food System; Alfen,
    N.K.V., Ed.; Academic Press: Oxford, UK; pp. 521–535. Google Scholar [39] S. O’Shaughnessy,
    S. Evett, P. Colaizzi, T. Howell Wireless sensor network effectively controls
    center pivot irrigation of sorghum Appl. Eng. Agric., 29 (6) (2013), pp. 853-864,
    10.13031/aea.29.9921 View in ScopusGoogle Scholar [40] Colaizzi, P., O’Shaughnessy,
    S., Evett, S., Howell, T., 2012. Using plant canopy temperature to improve irrigated
    crop management. Proceedings of the 24th Annual Central Plains Irrigation Conference,
    Colby, Kansas, February 21-22, 2012 Available from CPIA, 760 N. Thompson, Colby,
    Kansas. Google Scholar [41] S. O’Shaughnessy, M. Hebel, S. Evett, P. Colaizzi
    Evaluation of a wireless infrared thermometer with a narrow field of view Comput.
    Electron. Agric., 76 (2011), pp. 59-68, 10.1016/j.compag.2010.12.017 View PDFView
    articleView in ScopusGoogle Scholar [42] M. Andrade, S. O’Shaughnessy, S. Evett
    ARSPivot, a sensor-based decision support software for variable-rate irrigation
    center pivot systems: Part a Development. Transactions of the ASABE, 63 (5) (2020),
    pp. 1521-1533, 10.13031/trans.13907 View in ScopusGoogle Scholar [43] M. Andrade,
    S. O’Shaughnessy, S. Evett ARSPivot, a sensor-based decision support software
    for variable-rate irrigation center pivot systems: Part B. application Trans.
    ASABE, 63 (5) (2020), pp. 1535-1547, 10.13031/trans.13908 View in ScopusGoogle
    Scholar [44] H.N. Nakabuye, D. Rudnick, K.C. DeJonge, T.H. Lo, D. Heeren, X. Qiao,
    J. Duan Real-time irrigation scheduling of maize using degrees above non-stressed
    (DANS) index in semi-arid environment Agric Water Manag, 274 (2022), Article 107957,
    10.1016/j.agwat.2022.107957 View PDFView articleView in ScopusGoogle Scholar [45]
    S. O’Shaughnessy, S. Evett, P. Colaizzi, T. Howell A crop water stress index and
    time threshold for automatic irrigation scheduling of grain sorghum Agric. Water
    Manage., 107 (2012), pp. 122-132, 10.1016/j.agwat.2012.01.018 View PDFView articleView
    in ScopusGoogle Scholar [46] G. Parihar, S. Saha, L. Giri Application of infrared
    thermography for irrigation scheduling of horticulture plants Smart Agricultural
    Technology, 1 (2021), Article 100021, 10.1016/j.atech.2021.100021 View PDFView
    articleView in ScopusGoogle Scholar [47] Y. Osroosh, R. Peters, C. Campbell, Q.
    Zhang Automatic irrigation scheduling of apple trees using theoretical crop water
    stress index with an innovative dynamic threshold Comput. Electron. Agric., 118
    (2015), pp. 193-203, 10.1016/j.compag.2015.09.006 View PDFView articleView in
    ScopusGoogle Scholar [48] Y. Osroosh, R. Peters, S. Campbell, Q. Zhang Comparison
    of irrigation automation algorithms for drip-irrigated apple trees Comput. Electron.
    Agric., 128 (2016), pp. 87-99, 10.1016/j.compag.2016.08.013 View PDFView articleView
    in ScopusGoogle Scholar [49] N. Kumar, R. Rustum, V. Shankar, A. Adeloye Self-organizing
    map estimator for the crop water stress index Comput. Electron. Agric., 187 (2021),
    Article 106232, 10.1016/j.compag.2021.106232 View PDFView articleView in ScopusGoogle
    Scholar [50] S. O’shaughnessy, S. Evett, P. Colaizzi, T. Howell Using radiation
    thermography and thermometry to evaluate crop water stress in soybean and cotton
    Agric. Water Manag., 98 (10) (2011), pp. 1523-1535, 10.1016/j.agwat.2011.05.005
    View PDFView articleView in ScopusGoogle Scholar [51] R. Peters, S. Evett Automation
    of a center pivot using the temperature-time-threshold method of irrigation scheduling
    J. Irrig and Drain., 134 (3) (2008), pp. 286-291, 10.1061/(ASCE)0733-9437(2008)134:3(286)
    View in ScopusGoogle Scholar [52] S. O’Shaughnessy, M. Andrade, S. Evett Using
    an integrated crop water stress index for irrigation scheduling of two corn hybrids
    in a semi-arid region Irrig. Sci., 35 (5) (2017), pp. 451-467, 10.1007/s00271-017-0552-x
    View in ScopusGoogle Scholar [53] P. Colaizzi, S. O’Shaughnessy, S. Evett, G.
    Marek, D. Brauer, K. Copeland, B. Ruthardt Data quality control for Stationary
    Infrared thermometers viewing crops Appl. Eng. Agric., 39 (4) (2023), pp. 427-438,
    10.13031/aea.15642 View in ScopusGoogle Scholar [54] T. Mathew, A. Sabu, S. Sengan,
    J. Sathiamoorthy, A. Prasanth Microclimate monitoring system for irrigation water
    optimization using IoT Measurement: Sensors, 27 (2023), Article 100727, 10.1016/j.measen.2023.100727
    Google Scholar [55] S. Virnodkar, V. Pachghare, V. Patil, S. Jha Remote sensing
    and machine learning for crop water stress determination in various crops: a critical
    review Precis. Agric., 21 (5) (2020), pp. 1121-1155, 10.1007/s11119-020-09711-9
    View in ScopusGoogle Scholar [56] B. King, D. Tarkalson, V. Sharma, D. Bjorneberg
    Thermal crop water stress index base line temperatures for sugarbeet in arid western
    U.S Agric. Water Manag., 243 (2021), Article 106459, 10.1016/j.agwat.2020.106459
    View PDFView articleView in ScopusGoogle Scholar [57] S. Mir, S. Quadri Decision
    support systems: concepts, progress and issues–a review climate change, intercropping,
    Pest control and beneficial microorganisms Sustainable Agriculture Reviews, 2
    (2009), pp. 373-399, 10.1007/978-90-481-2716-0_13 Google Scholar [58] US GAO.,
    2019 Irrigated agriculture: technologies, practices, and implications for water
    scarcity (United States Government Accountability Office). Google Scholar [59]
    M.C. Vuran, A. Salam, R. Wong, S. Irmak Internet of underground things: Sensing
    and communications on the field for precision agriculture, 2018 IEEE 4th World
    Forum on Internet of Things (WF-IoT), Singapore (2018), pp. 586-591, 10.1109/WF-IoT.2018.8355096
    View in ScopusGoogle Scholar [60] B.P. Lena, B.V. Ortiz, A.-F. Jimenez, Á. Sanz-Sáez,
    S.A. O’Shaughnessy, M.K. Durstock, G. Pate Evaluation of infrared canopy temperature
    data in relation to soil water-based irrigation scheduling in a humid subtropical
    climate Trans. ASABE, 63 (5) (2020), pp. 1217-1231, 10.13031/trans.13912 View
    in ScopusGoogle Scholar [61] M. Shokrana, E. Ghane Measurement of soil water characteristic
    curve using HYPROP2 MethodsX, 7 (2020) (2020), pp. 1-17, 10.1016/j.mex.2020.100840
    Google Scholar [62] M. Van Genuchten A closed-form equation for predicting the
    hydraulic conductivity of unsaturated soils SSSA J., 44 (5) (1980), pp. 892-898,
    10.2136/sssaj1980.03615995004400050002x View in ScopusGoogle Scholar [63] M.M.
    Rahaman, M. Azharuddin Wireless sensor networks in agriculture through machine
    learning: a survey Comput. Electron. Agric., 197 (2022), Article 106928, 10.1016/j.compag.2022.106928
    Google Scholar [64] Y. Li K. Guan Peng., B., Trenton., E., Quantifying irrigation
    cooling benefits to maize yield in the US Midwest glob Change Biol. 26 2020 3065
    3078 10.1111/gcb.15002. Google Scholar [65] USDA NASS., 2017 Census of Agriculture
    (United States Department of Agriculture). Google Scholar [66] P. Colaizzi, S.
    O’Shaughnessy, S. Evett Calibration and tests of commercial wireless infrared
    thermometers Appl. Eng. Agric., 34 (4) (2018), pp. 647-658, 10.13031/aea.12577
    View in ScopusGoogle Scholar [67] I. Kuzminykh, A. Snihurov, A. Carlsson Testing
    of communication range in ZigBee technology, 2017 14th International Conference
    The Experience of Designing and Application of CAD Systems in Microelectronics
    (CADSM), Lviv, Ukraine (2017), pp. 133-136, 10.1109/CADSM.2017.7916102 View in
    ScopusGoogle Scholar [68] Akestoridis, D.G.; Harishankar, M.; Weber, M.; Tague,
    P., 2020. Zigator: Analyzing the Security of Zigbee-Enabled Smart Homes. In Proceedings
    of theWiSec 2020—Proceedings of the 13th ACM, Linz, Austria, 8–10, Association
    for Computing Machinery. NY, USA; Volume 12, pp. 77–88. 10.1145/3395351.3399363.
    Google Scholar [69] V. Gavra, O.A. Pop, I. Dobra A comprehensive analysis: evaluating
    security Characteristics of xbee Devices against zigbee protocol Sensors, 23 (21)
    (2023), p. 8736, 10.3390/s23218736 Google Scholar [70] K. Haque, A. Abdelgawad,
    K. Yelamarthi Comprehensive performance analysis of zigbee communication: an experimental
    approach with XBee S2C module Sensors, 22 (9) (2022), p. 3245, 10.3390/s22093245
    View in ScopusGoogle Scholar [71] Sriraam, S., Sajeev, S., Joshi, R., Vithalkar,
    A., Bansal, M., Jagadeesh, H. 2020. Implementation of 5G Authentication and Key
    Agreement Protocol on Xbee Networks. In Proceedings of the 2020 COMSNETS, Bengaluru,
    India, 7–11, pp. 696–698. 10.1109/COMSNETS48256.2020.9027314. Google Scholar [72]
    XBee, XBee®/XBee-PRO S2C Zigbee® RF Module User Guide. Available online: https://www.digi.com/resources/documentation/digidocs/pdfs/90002002.pdf
    (accessed on 02 December 2023). Google Scholar [73] Y. Hamdy, A. Alghannam Evaluation
    of ZigBee topology effect on throughput and end to end delay due to different
    transmission bands for IoT applications J. Commun. Softw. Syst., 16 (2020), pp.
    254-259, 10.24138/jcomss.v16i3.975 View in ScopusGoogle Scholar [74] I. Calvo,
    O. Barambones, A. Chouza, S. Abrahams, G. Beckers, D. Slechten, J. Velasco Building
    wireless control applications with XBee and LabVIEW Appl. Sci., 9 (11) (2019),
    p. 2379, 10.3390/app9112379 View in ScopusGoogle Scholar [75] Dynamax Grower Services
    water Management https://dynamax.com/products/crop-water-management/products/sapip-irt-infrared-leaf-temperature
    2024 accessed on 02 February 2024. Google Scholar [76] Georgia., Budgets 2021
    University of Georgia Department of Agricultural & Applied Economics https://agecon.uga.edu/extension/budgets.html.
    (accessed on 02 February 2024. Google Scholar Cited by (0) View Abstract © 2024
    Elsevier Ltd. All rights reserved. Recommended articles Wavelength measurement
    of narrowband terahertz radiation using a diffraction grating Measurement, Volume
    230, 2024, Article 114513 Paweł Komorowski, …, Norbert Pałka View PDF An ultra-rapid
    optical gas standard for dynamic processes: Absolute NH3 quantification and uncertainty
    evaluation Measurement, Volume 230, 2024, Article 114559 Denghao Zhu, …, Zhechao
    Qu View PDF Prediction of the tunnelling advance speed of a super-large-diameter
    shield machine based on a KF-CNN-BiGRU hybrid neural network Measurement, Volume
    230, 2024, Article 114517 Junwei Jin, …, Liucheng Yu View PDF Show 3 more articles
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: 'Measurement: Journal of the International Measurement Confederation'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Real-time mapping of crop canopy temperature using a wireless network of
    infrared thermometers on a central pivot
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zheng W.
  - Zheng K.
  - Gao L.
  - Zhangzhong L.
  - Lan R.
  - Xu L.
  - Yu J.
  citation_count: '0'
  description: The accurate measurement of soil moisture content emerges as a critical
    parameter within the ambit of agricultural irrigation management, wherein the
    precise prediction of this variable plays an instrumental role in enhancing the
    efficiency and conservation of agricultural water resources. This study introduces
    an innovative, cutting-edge hybrid model that ingeniously integrates Gated Recirculation
    Unit (GRU) and Transformer technologies, meticulously crafted to amplify the precision
    and reliability of soil moisture content forecasts. Leveraging meteorological
    and soil moisture datasets amassed from eight monitoring stations in Hebei Province,
    China, over the period from 2011 to 2018, this investigation thoroughly assesses
    the model’s efficacy against a diverse array of input variables and forecast durations.
    This assessment is concurrently contrasted with a range of conventional machine
    learning and deep learning frameworks. The results demonstrate that (1) the GRU–Transformer
    model exhibits remarkable superiority across various aspects, particularly in
    short-term projections (1- to 2-day latency). The model’s mean square error (MSE)
    for a 1-day forecast is notably low at 5.22%, reducing further to a significant
    2.71%, while the mean coefficient of determination (R2) reaches a high of 89.92%.
    Despite a gradual increase in predictive error over extended forecast periods,
    the model consistently maintains robust performance. Moreover, the model shows
    exceptional versatility in managing different soil depths, notably excelling in
    predicting moisture levels at greater depths, thereby surpassing its performance
    in shallower soils. (2) The model’s predictive error inversely correlates with
    the reduction in parameters. Remarkably, with a streamlined set of just six soil
    moisture content parameters, the model predicts an average MSE of 0.59% and an
    R2 of 98.86% for a three-day forecast, highlighting its resilience to varied parameter
    configurations. (3) In juxtaposition with prevalent models such as Support Vector
    Regression (SVR), K-Nearest Neighbors (KNN), Gradient Boosting Decision Tree (GBDT),
    XGBoost, Random Forest, and deep learning models like Deep Neural Network (DNN),
    Convolutional Neural Network (CNN), and standalone GRU-branch and Transformer-branch
    models, the GRU–Transformer framework demonstrates a significant advantage in
    predicting soil moisture content with enhanced precision for a five-day forecast.
    This underscores its exceptional capacity to navigate the intricacies of soil
    moisture data. This research not only provides a potent decision-support tool
    for agricultural irrigation planning but also makes a substantial contribution
    to the field of water resource conservation and optimization in agriculture, while
    concurrently imparting novel insights into the application of deep learning techniques
    in the spheres of agricultural and environmental sciences.
  doi: 10.3390/agronomy14030432
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Agronomy All Article Types Advanced   Journals
    Agronomy Volume 14 Issue 3 10.3390/agronomy14030432 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Subscribe SciFeed Recommended
    Articles Related Info Link More by Authors Links Article Views 688 Table of Contents
    Abstract Introduction Material and Method Results and Discussion Conclusions Author
    Contributions Funding Institutional Review Board Statement Informed Consent Statement
    Data Availability Statement Conflicts of Interest References share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessArticle
    GRU–Transformer: A Novel Hybrid Model for Predicting Soil Moisture Content in
    Root Zones by Wengang Zheng 1,2, Kai Zheng 1, Lutao Gao 3, Lili Zhangzhong 2,4,*,
    Renping Lan 2, Linlin Xu 5 and Jingxin Yu 2,4,* 1 College of Agricultural Engineering,
    Shanxi Agricultural University, Jinzhong 030801, China 2 Intelligent Equipment
    Research Center, Beijing Academy of Agriculture and Forestry Sciences, Beijing
    100097, China 3 School of Big Data, Yunnan Agricultural University, Kunming 650201,
    China 4 Information Technology Research Center, Beijing Academy of Agriculture
    and Forestry Sciences, Beijing 100097, China 5 Department of Systems Design Engineering,
    University of Waterloo, Waterloo, ON N2L 3G1, Canada * Authors to whom correspondence
    should be addressed. Agronomy 2024, 14(3), 432; https://doi.org/10.3390/agronomy14030432
    Submission received: 13 January 2024 / Revised: 18 February 2024 / Accepted: 20
    February 2024 / Published: 23 February 2024 (This article belongs to the Section
    Precision and Digital Agriculture) Download keyboard_arrow_down     Browse Figures
    Versions Notes Abstract The accurate measurement of soil moisture content emerges
    as a critical parameter within the ambit of agricultural irrigation management,
    wherein the precise prediction of this variable plays an instrumental role in
    enhancing the efficiency and conservation of agricultural water resources. This
    study introduces an innovative, cutting-edge hybrid model that ingeniously integrates
    Gated Recirculation Unit (GRU) and Transformer technologies, meticulously crafted
    to amplify the precision and reliability of soil moisture content forecasts. Leveraging
    meteorological and soil moisture datasets amassed from eight monitoring stations
    in Hebei Province, China, over the period from 2011 to 2018, this investigation
    thoroughly assesses the model’s efficacy against a diverse array of input variables
    and forecast durations. This assessment is concurrently contrasted with a range
    of conventional machine learning and deep learning frameworks. The results demonstrate
    that (1) the GRU–Transformer model exhibits remarkable superiority across various
    aspects, particularly in short-term projections (1- to 2-day latency). The model’s
    mean square error (MSE) for a 1-day forecast is notably low at 5.22%, reducing
    further to a significant 2.71%, while the mean coefficient of determination (R2)
    reaches a high of 89.92%. Despite a gradual increase in predictive error over
    extended forecast periods, the model consistently maintains robust performance.
    Moreover, the model shows exceptional versatility in managing different soil depths,
    notably excelling in predicting moisture levels at greater depths, thereby surpassing
    its performance in shallower soils. (2) The model’s predictive error inversely
    correlates with the reduction in parameters. Remarkably, with a streamlined set
    of just six soil moisture content parameters, the model predicts an average MSE
    of 0.59% and an R2 of 98.86% for a three-day forecast, highlighting its resilience
    to varied parameter configurations. (3) In juxtaposition with prevalent models
    such as Support Vector Regression (SVR), K-Nearest Neighbors (KNN), Gradient Boosting
    Decision Tree (GBDT), XGBoost, Random Forest, and deep learning models like Deep
    Neural Network (DNN), Convolutional Neural Network (CNN), and standalone GRU-branch
    and Transformer-branch models, the GRU–Transformer framework demonstrates a significant
    advantage in predicting soil moisture content with enhanced precision for a five-day
    forecast. This underscores its exceptional capacity to navigate the intricacies
    of soil moisture data. This research not only provides a potent decision-support
    tool for agricultural irrigation planning but also makes a substantial contribution
    to the field of water resource conservation and optimization in agriculture, while
    concurrently imparting novel insights into the application of deep learning techniques
    in the spheres of agricultural and environmental sciences. Keywords: GRU; transformer;
    soil moisture content; deep learning 1. Introduction Maize, ubiquitously recognized
    as a cornerstone in global food agriculture and a prominent cash crop within the
    Chinese agrarian economy [1], holds a paramount position in the agricultural sector.
    In 2019, as per the Food and Agriculture Organization of the United Nations (FAO),
    China’s maize yield escalated to an extraordinary 260 million tons, constituting
    a substantial 21.3% of the worldwide production [2]. However, the growth and fecundity
    of maize are contingent upon an array of determinants, with soil moisture content
    emerging as a critical environmental factor [3]. The hydration state of soil is
    pivotal, directly influencing the physiological and biochemical processes in maize,
    along with its root development [4]. Consequently, the precise prognostication
    of soil water content within the maize root zone is imperative for orchestrating
    efficient irrigation strategies and augmenting both the water-use efficiency and
    the crop’s yield. Yet, forecasting the moisture content in maize’s root zone presents
    a labyrinthine nonlinear challenge. It is intricately influenced by an amalgamation
    of factors such as meteorological conditions, soil characteristics, and various
    stages of crop growth, defying simplification into elementary mathematical models
    [5]. Thus, the exigent scientific quandary lies in harnessing the available meteorological
    and soil data to formulate a potent and efficacious predictive model. Conventional
    methodologies for forecasting the soil moisture content in maize’s root zone can
    be broadly categorized into three distinct classifications: physics-based approaches,
    statistics-based strategies, and machine learning-driven techniques [6]. Physics-based
    methods employ a combination of soil moisture movement and crop water demand equations,
    integrated with meteorological, soil, and crop parameters, to simulate the dynamic
    fluctuations of soil moisture. Exemplified by sophisticated models such as HYDRUS
    [7], SWAT (Soil and Water Assessment Tool) [8], DSSAT (Decision-support System
    for Agrotechnology Transfer) [9], and EPIC (Erosion Productivity Impact Calculator)
    [10], these methods adeptly mirror the physical underpinnings of soil moisture
    dynamics. However, they are hampered by their requirement for extensive parameter
    inputs, computational intricacy, and the need for highly precise parameter values,
    rendering them less viable for broad-scale and long-duration predictive applications
    [11]. Statistics-based methods, on the other hand, rely on the application of
    statistical principles and techniques to construct mathematical regression models.
    These models project future soil moisture levels based on historical meteorological
    and soil data [12] and are often represented through methodologies like linear
    regression [13], multiple regression [12], and exponential smoothing [14]. Despite
    their simplicity and ease of use, these methods fall short in acknowledging the
    nonlinear nature of soil moisture, failing to accurately track its dynamic variations
    and generally suffering from lower predictive accuracy [15]. Machine learning-based
    methods, meanwhile, harness the power of artificial intelligence to autonomously
    discern the intrinsic patterns of soil moisture from extensive meteorological
    and soil data, thereby predicting future soil moisture levels [13]. This category
    includes a diverse array of techniques such as the radial basis function neural
    network (RBF) [16], BP neural network [17], support vector machine (SVM) [18,19],
    extreme learning machine (ELM) [20], Random Forest [21], and Gradient Boosting
    Tree [22]. These methods are particularly proficient at processing nonlinear and
    high-dimensional data, yielding high prediction accuracy. However, they necessitate
    substantial volumes of training data, and their predictive performance is often
    limited by the models’ inadequate feature extraction capabilities [23]. Deep learning,
    a sophisticated subset of machine learning, is founded on multi-layered neural
    networks capable of autonomously extracting features and discerning patterns from
    voluminous datasets, thereby boasting potent expressive and generalization proficiencies.
    The primary modalities within deep learning encompass the convolutional neural
    network (CNN) [24], the recurrent neural network (RNN) [25], and the self-attention
    mechanism [26]. As deep learning has evolved, methods such as DNN [27] and RNN
    [26] have been increasingly applied to the prediction of soil moisture content
    in agricultural contexts, achieving notable advancements. Nonetheless, traditional
    deep learning methodologies are not without their limitations. The CNN, utilizing
    convolutional kernels for feature extraction, is adept at processing structured
    data like images and speech but falters with time-series data [28]. Conversely,
    the RNN, designed to handle time-series data, leverages historical information
    for future predictions but is plagued by gradient vanishing and explosion issues,
    impeding its ability to capture long-term dependencies [29]. Similarly, while
    the self-attention mechanism can effectively manage unstructured data such as
    natural language, it is less effective with structured data [30]. To address these
    challenges, the Gated Recurrent Unit (GRU) improves upon the RNN by incorporating
    a gating mechanism to mitigate gradient vanishing and explosion, thereby enhancing
    the model’s memory capabilities [4]. Meanwhile, the Transformer, based on the
    self-attention mechanism, can discern global dependencies within an input sequence
    through multi-head attention and position encoding, significantly bolstering the
    model’s expressive capacity [31]. Both GRU and Transformer, originating from the
    realm of natural language processing, excel in handling time-series prediction
    tasks and offer complementary advantages to redress the shortcomings of RNNs and
    self-attention mechanisms, respectively [32]. There have been successful applications
    of GRU and Transformer models in various fields, such as traffic flow analysis
    [33], speech recognition [34], and environmental sequence modeling [35], yet their
    application in predicting soil moisture content in maize’s root zone remains relatively
    unexplored. Given the proven efficacy of hybrid models in enhancing prediction
    accuracy by amalgamating different deep learning approaches [4,36], this study
    proposes a novel technical solution: the creation of a hybrid model that fuses
    GRU and Transformer technologies. This GRU–Transformer hybrid model will be applied
    to the prediction of soil water content in the root zone of maize, with an aim
    to evaluate its feasibility and effectiveness in this specific domain. The principal
    aim of this study is to introduce and assess the efficacy of a novel soil water
    content prediction model, christened the GRU–Transformer. This model’s validation
    involves a rigorous evaluation using meteorological and soil moisture data collected
    from maize cultivation areas across eight distinct locations in Hebei Province,
    China, spanning the years 2011 to 2018. The assessment strategy encompasses an
    analysis of the model’s predictive capabilities across various input configurations
    and forecast durations. Additionally, the performance of the GRU–Transformer model
    is benchmarked against a range of conventional machine learning and advanced deep
    learning models, providing a comprehensive understanding of its relative effectiveness
    in predicting soil moisture content in agricultural settings. 2. Material and
    Method The hybrid modeling methodology delineated in this manuscript leverages
    the synergistic capabilities of GRU and Transformer algorithms to prognosticate
    future soil moisture levels across varying depths, as depicted in Figure 1. This
    innovative model is bifurcated into two distinct branches: the GRU branch and
    the Transformer branch. Each branch meticulously processes the 3D tensor, characterized
    by the dimensions (batch_size, input_length, num_features), amalgamating input
    variables derived from both meteorological and soil datasets. Subsequently, the
    extracted features from each branch are intricately spliced and amalgamated through
    a meta-learner, culminating in the synthesis of the final predictive output. This
    output is represented as a two-dimensional tensor (batch_size, output_length),
    encapsulating the forecasted soil moisture content at a future juncture, thereby
    showcasing the model’s robust predictive acumen. Figure 1. Architectural blueprint
    of the GRU–Transformer model. 2.1. GRU Branch The purpose of the GRU branch in
    this study is to utilize the recurrent structure and gating mechanism of GRU to
    capture the long-term dependence and temporal dynamics features in the input sequences
    (Figure 2). GRU, using an improved RNN, can solve the problem of vanishing or
    exploding gradients that RNNs are prone to when dealing with long sequences [35].
    The basic units of GRU are as follows: 𝑟 𝑡 =𝜎( 𝑊 𝑟 𝑥 𝑡 + 𝑈 𝑟 ℎ 𝑡−1 + 𝑏 𝑟 ) (1)
    𝑍 𝑡 =𝜎( 𝑊 𝑍 𝑥 𝑡 + 𝑈 𝑍 ℎ 𝑡−1 + 𝑏 𝑍 ) (2) ℎ ̃  𝑡 =tanh( 𝑊 ℎ 𝑥 𝑡 + 𝑈 ℎ ( 𝑟 𝑡 ⨀ ℎ
    𝑡−1 )+ 𝑏 ℎ ) (3) ℎ 𝑡 =(1− 𝑍 𝑡 )⨀ ℎ 𝑡−1 + 𝑍 𝑡 ⨀ ℎ ̃  𝑡 (4) where 𝑥 𝑡 is an input
    vector, ℎ 𝑡 is an output vector, 𝑟 𝑡 is a reset gate, 𝑍 𝑡 is an update gate, 𝜎
    is a sigmoid function, ⨀ is an element-by-element multiplication, 𝑊 𝑟 , 𝑊 𝑍 ,
    𝑊 ℎ , 𝑈 𝑟 , 𝑈 𝑍 , 𝑈 ℎ is a learnable weight matrix, and 𝑏 𝑟 , 𝑏 𝑍 , 𝑏 ℎ is a learnable
    bias vector. Reset gates and update gates can control the flow of information,
    selectively forgetting or remembering historical states. The reset gate can decide
    whether to reset the historical state or not, and the update gate can decide whether
    to update the current state or not. Figure 2. Conceptual illustration of the GRU
    branch. The structural design and hyperparameter configuration of the GRU branch
    in the model proposed in this paper are shown in Table 1. Table 1. Configuration
    of hyperparameters in the GRU branch. Firstly, a two-layer GRU network is constructed
    with 512 neurons in each layer. ReLU is used for the activation function to increase
    the depth and nonlinearity of the model and to improve the expressive power of
    the model. The formula for the ReLU function is 𝑟𝑒𝑙𝑢(𝑥)=max(0,𝑥) (5) The output
    of the GRU is then mapped onto a low-dimensional space using a fully connected
    layer (Dense) of 256 neurons, reducing the number of parameters and decreasing
    the complexity of the model. The formula for the fully connected layer is 𝑦=𝑊𝑥+𝑏
    (6) where 𝑥 is the input vector, 𝑦 is the output vector, 𝑊 is the learnable weight
    matrix, and 𝑏 is the learnable bias vector. Finally, a spreading layer (Flatten)
    is connected to obtain a 2D tensor (batch_size, 256), which converts the output
    of the fully connected layer into a 1D vector for easy splicing with the output
    of the Transformer branch. The formula for the Flatten layer is 𝑦=𝑥.𝑟𝑒𝑠ℎ𝑎𝑝𝑒(𝑏𝑎𝑡𝑐ℎ𝑠𝑖𝑧𝑒,−1)
    (7) where 𝑥 is the input tensor, 𝑦 is the output vector, 𝑏𝑎𝑡𝑐ℎ𝑠𝑖𝑧𝑒 is the batch
    size, and −1 indicates that the remaining dimensions are computed automatically.
    The output of the GRU branch can be expressed as 𝑦=𝐹𝑙𝑎𝑡𝑡𝑒𝑛(𝐷𝑒𝑛𝑠𝑒(𝐺𝑅𝑈(𝐺𝑅𝑈(𝑥))))
    (8) where 𝑥 is the input tensor, 𝑦 is the output vector, 𝐺𝑅𝑈 is the GRU layer,
    𝐷𝑒𝑛𝑠𝑒 is the fully connected layer, and 𝐹𝑙𝑎𝑡𝑡𝑒𝑛 is the spreading layer. 2.2. Transformer
    Branch In the proposed GRU–Transformer model, the Transformer branch plays a pivotal
    role in capturing global dependencies and multidimensional features within the
    input sequence. This is achieved through the employment of the Transformer’s self-attention
    and multi-head attention mechanisms, as depicted in Figure 3. The Transformer
    is adept at handling sequence-to-sequence tasks, utilizing its attention-based
    encoder–decoder structure [33]. This structure is integral to the model’s ability
    to process and analyze complex sequences of data effectively. The core unit of
    the Transformer can be conceptualized as follows: 𝑄=𝑋 𝑊 𝑄 (9) 𝐾=𝑋 𝑊 𝐾 (10) 𝑉=𝑋
    𝑊 𝑉 (11) 𝐴=𝑠𝑜𝑓𝑡𝑚𝑎𝑥( 𝑄 𝐾 𝑇 𝑑 𝐾 − − √ ) (12) 𝑌=𝐴𝑉 (13) where X is the input matrix,
    𝑄 , 𝐾 , 𝑉 is the query matrix, 𝑊 𝑄 , 𝑊 𝐾 , 𝑊 𝑉 key matrix, value matrix, 𝐴 is
    the learnable weight matrix, 𝑌 is the attention matrix, 𝑑 𝐾 is the output matrix,
    𝑑 𝐾 − − √ is the dimension of the attention header, 𝑠𝑜𝑓𝑡𝑚𝑎𝑥 is a scaling factor
    used to prevent the attention weights from being too large or too small, and softmax
    is the normalization function used to compute the weight of the value corresponding
    to each key. The attention mechanism calculates the correlation of each element
    in the input sequence with the other elements, thus enabling global dependency
    capture. Figure 3. Conceptual diagram of the Transformer branch. The structure
    of the Transformer branch in the model proposed in this paper is designed as follows:
    firstly, position information is added to each element in the input sequence by
    adding position embeddings to the inputs, so that the model can distinguish between
    elements at different positions. The detailed hyperparameter configuration is
    shown in Table 2. Table 2. Hyperparameter configuration for the Transformer branch.
    The formula for position encoding is as follows: 𝑃𝐸 (𝑝𝑜𝑠,2𝑖) =sin ⎛ ⎝ ⎜ ⎜ ⎜ 𝑝𝑜𝑠
    10000 2𝑖 𝑑 ⎞ ⎠ ⎟ ⎟ ⎟ (14) 𝑃𝐸 (𝑝𝑜𝑠,2𝑖+1) =cos ⎛ ⎝ ⎜ ⎜ ⎜ 𝑝𝑜𝑠 10000 2𝑖 𝑑 ⎞ ⎠ ⎟ ⎟
    ⎟ (15) where 𝑃𝐸 is the position encoding matrix, 𝑝𝑜𝑠 is the position index, 𝑖
    is the dimension index, 𝑑 is the dimension of the input. The dimensions of the
    position encoding are the same as the dimensions of the input and can be added
    directly to the input. Then, four Transformer encoder layers (Transformer_encoder)
    are constructed with four attention heads per layer (num_heads = 4), each with
    a dimension of 64 (head_size = 64), a feedforward network with a dimension of
    128 (ff_dim = 128), and a Dropout layer with a rate of 0.1 (dropout_rate = 0.1).
    The above configuration increases the depth and diversity of the model and improves
    its expressive power. Among them, the Dropout layer can randomly discard a small
    number of neurons to prevent model overfitting. The structure of the Transformer
    encoder layer is as follows: 𝑋 ′ =𝑋+𝑀𝑢𝑙𝑡𝑖𝐻𝑒𝑎𝑑𝐴𝑡𝑡𝑒𝑛𝑡𝑖𝑜𝑛(𝑋,𝑋,𝑋) (16) 𝑋 ″ = 𝑋 ′ +𝐹𝑒𝑒𝑑𝐹𝑜𝑟𝑤𝑎𝑟𝑑(
    𝑋 ′ ) (17) 𝑌=𝐿𝑎𝑦𝑒𝑟𝑁𝑜𝑟𝑚( 𝑋 ″ ) (18) where 𝑋 is the input matrix, 𝑋 ′ is the output
    of the first residual connection, 𝑋 ″ is the output of the second residual connection,
    𝑌 is the final output, 𝑀𝑢𝑙𝑡𝑖𝐻𝑒𝑎𝑑𝐴𝑡𝑡𝑒𝑛𝑡𝑖𝑜𝑛 is the multi-head attention layer, 𝐹𝑒𝑒𝑑𝐹𝑜𝑟𝑤𝑎𝑟𝑑
    is the feedforward network layer, and 𝐿𝑎𝑦𝑒𝑟𝑁𝑜𝑟𝑚 is the layer normalization layer.
    The multi-head attention layer can divide the input matrix into multiple sub-matrices,
    which are stitched together after separate attention computations to capture the
    multi-dimensional features in the input sequence. The feedforward network layer
    can increase the complexity of the model by performing a nonlinear transformation
    of the input matrix. The layer normalization layer normalizes each layer of the
    input matrix to make the model more stable. Residual connections make the model
    easier to optimize avoiding gradient vanishing or exploding. Then, a 256 neuron
    fully connected layer (Dense) is constructed to map the output of the Transformer
    to a low dimensional space reducing the number of parameters and decreasing the
    complexity of the model. Finally, a two-dimensional tensor (batch_size, 256) is
    obtained through a Flatten layer, which converts the output of the fully connected
    layer into a one-dimensional vector, which can be easily spliced with the output
    of the GRU branch. The output of the Transformer branch can be represented as
    follows: 𝑦=𝐹𝑙𝑎𝑡𝑡𝑒𝑛(𝐷𝑒𝑛𝑠𝑒( 𝑇𝑟𝑎𝑛𝑠𝑓𝑜𝑟𝑚𝑒𝑟𝐸𝑛𝑐𝑜𝑑𝑒𝑟 4 (𝑃𝑜𝑠𝑖𝑡𝑖𝑜𝑛𝐸𝑚𝑏𝑒𝑑𝑑𝑖𝑛𝑔𝑠(𝑥)))) (19)
    where 𝑥 is the input tensor, 𝑦 is the output vector, 𝑃𝑜𝑠𝑖𝑡𝑖𝑜𝑛𝐸𝑚𝑏𝑒𝑑𝑑𝑖𝑛𝑔𝑠 is the
    position encoding layer, 𝑇𝑟𝑎𝑛𝑠𝑓𝑜𝑟𝑚𝑒𝑟𝐸𝑛𝑐𝑜𝑑𝑒𝑟 is the Transformer encoder layer,
    𝐷𝑒𝑛𝑠𝑒 is the fully-connected layer, 𝐹𝑙𝑎𝑡𝑡𝑒𝑛 is the spreading layer, and 4 means
    repeat four times. 2.3. Meta-Learner The purpose of the meta-learner in the model
    proposed in this paper is to splice and fuse the outputs of the two branches to
    obtain the final prediction results. The structure of the meta-learner is designed
    as follows: firstly, the outputs of the two branches are concatenated to obtain
    a two-dimensional tensor (batch_size, 512), and then the features of the two branches
    are combined to increase the information content of the model. The detailed hyper-parameter
    configuration is shown in Table 3. Table 3. Meta-learner hyperparameter configuration.
    The equation for the splicing layer can be expressed as follows: 𝑦=[ 𝑥 1 , 𝑥 2
    ] (20) where 𝑥 1 is the output of the GRU branch, 𝑥 2 is the output of the Transformer
    branch, 𝑦 is the spliced output, and [] denotes the splicing operation. Then,
    a 5-layer neuron fully connected layer (Dense) is constructed and the activation
    function is ReLU. The formula for the fully connected layer is as follows: 𝑦=𝑟𝑒𝑙𝑢(𝑊𝑥+𝑏)
    (21) where 𝑥 is the input vector, 𝑦 is the output vector, 𝑊 is the learnable weight
    matrix, 𝑏 is the learnable bias vector, and 𝑟𝑒𝑙𝑢 is the activation function. Finally,
    the connection is made to the output layer, which is Dense, and the activation
    function used is linear to obtain the final output, which is a two-dimensional
    tensor (batch_size, output_length). The above process maps the output of the fully
    connected layer to a one-dimensional space to obtain the predicted values. 2.4.
    Model Evaluation and Training To evaluate the performance of different models,
    the following five evaluation metrics were chosen in this paper. Mean Squared
    Error (MSE): 𝑀𝑆𝐸= 1 𝑚 ∑ 𝑚 𝑖=1 ( 𝑦 𝑖 − 𝑦 ̂  𝑖 ) 2 (22) Mean Absolute Error (MAE):
    𝑀𝐴𝐸= 1 𝑚 ∑ 𝑚 𝑖=1 |( 𝑦 𝑖 − 𝑦 ̂  𝑖 )| (23) Root Mean Squared Error (RMSE): 𝑅𝑀𝑆𝐸=
    1 𝑚 ∑ 𝑚 𝑖=1 ( 𝑦 𝑖 − 𝑦 ̂  𝑖 ) 2 − − − − − − − − − − − − − − − √ (24) Coefficient
    of Determination (R2): 𝑅 2 =1− ∑ 𝑖 ( 𝑦 ̂  𝑖 − 𝑦 𝑖 ) 2 ∑ 𝑖 ( 𝑦 ̲ 𝑖 − 𝑦 𝑖 ) 2 (25)
    where 𝑦 ̂  𝑖 is the predicted value, 𝑦 𝑖 is the true value, 𝑦 ̲ 𝑖 is the average
    of the true values. 𝑀𝐴𝐸 can reflect the actual situation of the error of the predicted
    value: the smaller its value, the higher the accuracy of the prediction. 𝑀𝑆𝐸 is
    the expected value of the square of the difference between the predicted value
    and the true value, which can evaluate the degree of change of the data, the smaller
    its value, the higher the stability of the prediction. 𝑅𝑀𝑆𝐸 is the arithmetic
    square root of 𝑀𝑆𝐸 , which, like the 𝑀𝐴𝐸 , is used to measure the accuracy of
    the prediction, but it has a greater penalty for larger errors, so it is more
    suitable for evaluating models that are sensitive to errors. 𝑅 2 can eliminate
    the influence of dimensionality on the evaluation index, it indicates the degree
    of correlation between the predicted value and the real value, and the closer
    its value is to 1, the higher the fit of the prediction. Regarding the experimental
    setup for this research, the hardware configuration encompasses an Intel® Xeon®
    CPU E5-1620 v4 @ 3.50 GHz, an NVIDIA Quadro K2200 GPU, and 32 GB of RAM. The software
    infrastructure leverages Anaconda as the foundational platform for deep learning
    endeavors, with Keras serving as the framework for constructing deep learning
    models, and TensorFlow-gpu 1.13 functioning as the backend engine. CUDA technology,
    developed by NVIDIA Corporation based in Santa Clara, CA, USA, is employed to
    facilitate parallel computing on the GPU, thereby augmenting the training speed
    of the model. Python 3.7 is utilized as the primary programming language. The
    training methodology incorporates the Adam optimization algorithm for model refinement,
    complemented by an early stopping criterion as a termination condition for training.
    This criterion is set with a threshold of 50 iterations—training ceases if there
    is no improvement in the model’s loss on the validation set within these iterations.
    The optimal model weights are preserved, and the model is saved in the .h5 format.
    This comprehensive setup ensures a robust and efficient training environment,
    which is crucial for the development and validation of the deep learning model.
    2.5. Study Area and Data Acquisition The focal area of this study is Hebei Province,
    China, encompassing geographical coordinates ranging from 36°05′ to 42°40′ N latitude
    and 113°27′ to 119°50′ E longitude. This region is characterized by a temperate
    continental monsoon climate, distinguished by four well-defined seasons, ample
    sunshine, moderate rainfall, and significant temperature variations, among other
    climatic attributes. The dataset employed in this study was procured from the
    China Meteorological Data Network, encompassing both meteorological and soil moisture
    content data spanning the years 2011 to 2018. In alignment with the prevalent
    conditions of maize cultivation in the region and subsequent consultations with
    local agricultural authorities, a comprehensive dataset comprising 450,120 records
    was assembled from eight agrometeorological monitoring stations within Hebei Province
    (namely Fuping, Weixian, Gaoyi, Fengning, Langfang, Xinglong, Weichang, and Qinglong
    stations), as illustrated in Figure 4. Soil water content measurements were conducted
    at an hourly frequency. The volumetric water content of the soil (denoted as 10SVWC,
    20SVWC, 30SVWC, 40SVWC, 50SVWC, and 60SVWC, represented in percentage) was recorded
    at varying depths of 10 cm, 20 cm, 30 cm, 40 cm, 50 cm, and 60 cm, with daily
    average values being computed. The meteorological data encompassed a range of
    parameters, including the daily mean air temperature (TEM_Avg, in degrees Celsius),
    minimum air temperature (TEM_Min, in degrees Celsius), maximum air temperature
    (TEM_Max, in degrees Celsius), mean surface temperature (GST_Avg, in degrees Celsius),
    minimum surface temperature (GST_Min, in degrees Celsius), maximum surface temperature
    (GST_Max, in degrees Celsius), duration of sunshine (SSH, in hours), mean relative
    humidity (RHU_Avg, in percentages), precipitation during the period from 20:00
    to 08:00 h (PRE_Time_2008, in millimeters), precipitation during the period from
    08:00 to 20:00 h (PRE_Time_0820, in millimeters), 24 h precipitation (PRE_Time_2020,
    in millimeters), average wind speed (WIN_S_Avg, in kilometers per hour), maximum
    wind speed (WIN_S_Max, in kilometers per hour), dominant wind direction (WIN_D_S_Max,
    in degrees), instantaneous maximum wind speed (WIN_S_Inst_Max, in kilometers per
    hour), and the direction of the instantaneous maximum wind speed (WIN_D_INST_Max,
    in degrees). Figure 4. Geographical overview of the study area and distribution
    of sites. 2.6. Data Analysis Table 4 elegantly presents the synthesized statistical
    analysis of 22 distinct soil and meteorological indicators, encompassing an array
    of parameters such as mean, standard deviation, minimum, maximum, and median values
    across the eight meticulously chosen monitoring stations. The temporal scope of
    this study encompasses an entire annual cycle of data from maize cultivation locales,
    thereby encapsulating the complete spectrum of seasonal fluctuations and chronological
    diversities. This comprehensive temporal coverage, while providing a holistic
    view of the data, simultaneously introduces a formidable challenge in the precise
    prediction of soil water content at varying depths within the maize root zone.
    Such an encompassing approach ensures a thorough understanding of the intricate
    interplay between temporal variables and the dynamic nature of soil moisture content,
    critical for advancing predictive accuracy in agricultural environmental studies.
    Table 4. Comprehensive statistical analysis outcomes of soil and meteorological
    data. Figure 5 elegantly delineates the outcomes of the Pearson correlation analysis
    conducted among the various variables. This analysis reveals that the correlation
    coefficients pertaining to soil water content at diverse depths surpass the threshold
    of 0.7, indicating a robust and strongly positive correlation. The interplay between
    each meteorological parameter and soil water content exhibits varying degrees
    of correlation. Specifically, TEM_Avg, TEM_Max, TEM_Min, RHU_Avg, PRE_Time_2008,
    PRE_Time_0820, PRE_Time_2020, GST_Avg, GST_Max, and GST_Min all demonstrate a
    positive correlation with the soil water content at different depths. Conversely,
    WIN_S_Avg, WIN_S_Max, WIN_D_S_Max, WIN_S_Inst_Max, WIN_D_INST_Max, and SSH exhibit
    a negative correlation with soil water content across various depths. This intricate
    mosaic of correlations underscores the multifaceted nature of the interactions
    between meteorological factors and soil water content, providing invaluable insights
    into the complex dynamics governing soil moisture across different strata. Figure
    5. Analytical depiction of correlation between soil water content and other variables
    at varied depths. Asterisks (*) indicate correlations statistically significant
    at p < 0.05. 3. Results and Discussion 3.1. Comparison of Model Prediction Accuracy
    for Different Days of Delay Figure 6 and Figure 7 elucidate the predictive accuracy
    outcomes of the GRU–Transformer model across various delay intervals. The model’s
    overall performance is noteworthy for its consistently high accuracy and stability
    under diverse conditions. Specifically, the MSE for soil moisture prediction at
    different depths fluctuated between 2.71% and 17.53%, while the R2 spanned from
    60.47% to 96.08%. These figures emphatically underscore the model’s adaptability
    and resilience in varied scenarios. A more granular analysis reveals that the
    model’s predictive precision is notably superior for shorter delay periods, such
    as 1 to 2 days. For instance, the average MSE for a 1-day delay stands at 5.22%,
    with the lowest recorded value being 2.71%, and the average R2 is remarkably high
    at 89.92%. Nonetheless, it is observed that the predictive error incrementally
    ascends with an increase in the delay duration, suggesting a heightened proficiency
    of the model in forecasting near-term data. When delving into the comparison across
    different soil depths, it is discernible that the model’s predictive error for
    shallow soils, like at 10 cm depth, is relatively elevated, with a mean MSE of
    15.00% and an average R2 of merely 66.17%. In stark contrast, the model’s error
    rate for deeper soils, such as at 50 cm, is markedly lower, boasting an average
    MSE of 7.71% and an average R2 of 85.66%. This disparity highlights the model’s
    significant advantage in predicting the water content of deeper soils. In summation,
    the soil water content prediction model introduced in this study exhibits exemplary
    efficacy across various prediction delays and soil depths. It is particularly
    commendable for its high accuracy and reliability in short-term predictions and
    in assessing the water content of deeper soil layers. Figure 6. Analysis of prediction
    error in GRU–Transformer model across different time delays. Figure 7. Error distribution
    in test set for GRU–Transformer model over various time delays. The marked disparities
    in the performance of the soil moisture content prediction model at varying delay
    intervals and soil depths, as highlighted in this study, underscore the intricate
    complexity of soil moisture dynamics and its susceptibility to environmental influences.
    These variances not only attest to the model’s adaptability but also furnish novel
    insights into the understanding of soil moisture behavior. The observed decrease
    in prediction accuracy with prolonged delay days is potentially attributable to
    escalating uncertainties on the temporal scale. In the immediate term, the soil
    moisture content is relatively less impacted by meteorological conditions, thereby
    enabling the model to forecast near-future soil moisture status with greater precision.
    However, the predictability diminishes as the timeframe extends, largely due to
    the increasing unpredictability of meteorological factors such as rainfall and
    evaporation, which exert a direct influence on the model’s accuracy [37]. Figure
    8 delineates the outcomes of an autocorrelation analysis on soil water content
    over a 1–10-day delay period, using the data from this study. The analysis reveals
    a decline in the mean autocorrelation coefficient of soil water content from a
    peak of 0.91 to a mere 0.19 as the delay interval increases, thereby highlighting
    the amplified challenges in forecasting over longer future durations. This phenomenon
    aligns with the findings of Cai et al. (2019) [29], who examined the 1–16-day
    autocorrelation of soil water content. Figure 8. Autocorrelation analysis of soil
    water content under 1–10-day delay. Furthermore, the dynamics of soil moisture
    encompass a spectrum of intricate nonlinear processes such as evaporation, infiltration,
    and plant water uptake. Consequently, the model’s prediction error tends to escalate
    with the extension of the forecast period, a concept corroborated by theoretical
    studies in time-series prediction. From the standpoint of soil depth, the model
    exhibits heightened accuracy in predicting moisture content in deeper soils. This
    heightened accuracy could stem from the reduced impact of daily climatic fluctuations
    on deeper soils, which exhibit relatively less variability in moisture content.
    In contrast, surface soils are directly exposed to atmospheric elements, rendering
    their moisture status more immediately susceptible to variables like rainfall
    and evapotranspiration, thus posing greater challenges for accurate prediction
    [38]. The moisture dynamics in deeper soil strata are comparatively stable and
    are more effectively and accurately captured by existing hydrological and soil
    science models [39]. This observation underscores the significant role of soil
    physical characteristics in influencing the performance of prediction models and
    suggests the necessity of comprehensive consideration of the properties of different
    soil layers in the construction and parameter optimization of these models. 3.2.
    Assessing the Predictive Efficacy of Varied Input Parameter Combinations The efficacy
    of the proposed soil water content prediction model was exhaustively evaluated
    across a spectrum of input parameter combinations. Six distinct sets of input
    terms, comprising 6, 9, 12, 15, 18, and 22 parameters, respectively, were meticulously
    formulated based on the inter-correlation of the indicators (as outlined in Table
    5). This approach was employed to juxtapose the model’s predictive accuracies
    under diverse parameter amalgamations. The experimental outcomes elucidate key
    characteristics and trends in the model’s performance. Table 5. Framework of diverse
    input term combinations. Figure 9 and Figure 10 depict the predictive accuracy
    of the GRU–Transformer model under these varied input scenarios. Regarding its
    overall performance, the model consistently exhibited high accuracy and stability
    across the range of parameter combinations. The MSE of the GRU–Transformer model
    oscillated between 0.43% and 1.11%, while the R2 ranged from 0.8482 to 0.8578.
    This variance indicates that the proposed model adeptly predicts soil water content,
    effectively handling different sets of input parameters. Figure 9. Assessment
    of prediction accuracy in GRU–Transformer model with varied input term combinations.
    Figure 10. Distribution of test set errors in GRU–Transformer model under different
    input term combinations. Focusing on the comparative performance across parameter
    combinations, the model attained its zenith under the 22-parameter ensemble (Group
    1), registering an average MSE of 0.62% and an average R2 of 0.8578. This implies
    that the model harnesses a broader array of data features to enhance predictive
    accuracy when endowed with a higher count of parameters. Conversely, in the 6-parameter
    combination (Group 6)—the minimal parameter set—the average MSE modestly declined
    to 0.59%, and the average R2 marginally ascended to 0.8482. This demonstrates
    the model’s capacity to sustain high accuracy even with a reduced parameter set,
    underlining its robustness and adaptability. An in-depth analysis of the influence
    of the parameter count on the model’s efficacy reveals that, while both the maximal
    and minimal MSE values diminish as the number of parameters decreases, the overall
    performance remains relatively unaffected. This observation suggests that the
    model proficiently captures the salient features of soil water content, even under
    conditions of simplified input, highlighting its capability to efficiently distill
    and utilize essential data characteristics. This research discerned that diminishing
    the number of parameters led to a slight escalation in the error indices, while
    the R2 values continued to hover at elevated levels. This phenomenon suggests
    that the model retains the primary factors influencing soil water content, even
    under a regime of parameter simplification, thereby facilitating effective prediction.
    Such a capability could be attributed to the fact that the chosen parameters exhibit
    a strong correlation with soil water content, coupled with a degree of redundancy
    among them. That is, certain parameters can be inferred or approximated using
    others. Consequently, when the parameter count is reduced, the model compensates
    for the absence of certain parameters by adjusting the weights of the remaining
    ones, thus sustaining its high predictive accuracy. This characteristic also underscores
    the model’s robust self-adaptive nature, enabling automatic adjustments in its
    structure and parameters in response to varying parameter combinations, to achieve
    optimal prediction outcomes. Moreover, the progressive increase in MSE, RMSE,
    and MAE from Group 1 (22 parameters) to Group 6 (6 parameters), juxtaposed with
    the relatively minor fluctuation in the R2 value (0.8482–0.8578), indicates the
    model’s tolerance to changes in parameter quantity. This implies that alterations
    in the number of parameters do not significantly impact the predictive capability
    of the model. This resilience may stem from the model’s GRU–Transformer hybrid
    neural network architecture, which adeptly extracts higher-order features of the
    parameters through multilayer nonlinear transformations, thereby enhancing its
    expressive and generalization abilities. Hence, even with a limited number of
    parameters, the model is capable of discerning potential interrelationships through
    neural network learning, facilitating accurate soil water content prediction.
    The high consistency in error metrics between Groups 1 and 2 may be attributed
    to the inclusion of comprehensive soil volumetric water content parameters and
    other critical parameters such as temperature, relative humidity, precipitation,
    and wind speed in these combinations. These parameters collectively encapsulate
    the soil’s physical, chemical, and biological attributes, as well as the soil–atmosphere
    interactions, thereby influencing the dynamic shifts in soil water content. Hence,
    they provide a wealth of information that enhances the predictive accuracy and
    stability of the model. Interestingly, even with Group 6, which comprises the
    least number of parameters focused solely on volumetric soil water content, the
    decline in predictive accuracy is not significantly pronounced. This implies that
    these parameters are direct indicators of soil water content and the primary factors
    influencing its variability. Additionally, as depicted in Figure 11, the correlation
    between different soil depths ranges from 0.65 to 0.95, offering synergistic features
    that bolster the stability of the model’s predictions. Consequently, the model
    achieves satisfactory predictive accuracies even when solely reliant on soil water
    content data. Figure 11. Characterization and interrelation of soil water content
    at diverse depths. 3.3. Comparative Analysis of Prediction Accuracy against Benchmark
    Models In assessing the performance for five-day-ahead predictions, this study
    scrutinizes the distinctions in the predictive accuracy of the newly devised GRU–Transformer
    model relative to other established models. This comparative evaluation encompasses
    typical machine learning models such as Support Vector Regression (SVR [18]),
    K-Nearest Neighbors (KNN [40]), Gradient Boosted Decision Trees (GBDT [41]), XGBoost
    [42], Random Forest [21]), and deep learning models like Deep Neural Networks
    (DNN [27]), Convolutional Neural Networks (CNN [4]), as well as independent GRU
    and Transformer branches. Table 6 delineates the soil water content prediction
    accuracies of these various models, showcasing a spectrum of performances with
    MSE values ranging from 10.31% to 31.40% and R2 values spanning 42.32% to 80.27%.
    These results highlight the diverse capabilities and adaptability of the different
    models in predicting soil water content. Table 6. Comparative analysis of prediction
    accuracy across various models for soil water content. Upon comparing the performances
    of these models, the GRU–Transformer model, as proposed in this study, emerged
    as the most proficient, recording an MSE of 10.31% and an R2 of 80.27%. This exemplifies
    its superior predictive capabilities in handling complex soil moisture data. In
    stark contrast, the traditional KNN model fared the poorest, with an MSE of 31.40%
    and an R2 of merely 42.32%. The XGBoost model, known for its efficacy and popularity,
    yielded an MSE of 12.69% and an R2 of 75.79%, outperforming most models but still
    falling short of the GRU–Transformer model’s proficiency. When comparing deep
    learning models against traditional machine learning models, it is observed that
    deep learning-based models (such as CNN, LSTM, independent GRU, and Transformer
    branches) generally surpass their traditional counterparts. Their MSE and R2 values
    lie in the range of 11% to 13% and 76% to 79%, respectively, underscoring the
    formidable capability of deep learning in processing complex datasets. Conversely,
    traditional machine learning models, including SVR and GBDT, exhibit comparatively
    lower predictive accuracy, with significantly higher MSE and MAE values than those
    of deep learning models. This dichotomy accentuates the burgeoning potential of
    deep learning approaches in the realm of complex data analysis and prediction.
    In the realm of soil water content prediction, the exemplary performance of the
    GRU-Transformer model underscores the formidable potential of deep learning technologies
    in processing environmental data. The model’s capacity to surpass both traditional
    machine learning and other deep learning models can be primarily attributed to
    its unique structural composition and its enhanced capability in handling complex
    datasets. The GRU–Transformer model ingeniously amalgamates two cutting-edge neural
    network architectures: the GRU and the Transformer. This combination allows for
    an effective capture of long-term dependencies and intricate spatial features
    within time-series data. The GRU component of the model is particularly adept
    at processing time-series data [4], proving especially potent in comprehending
    and predicting the dynamically evolving nature of soil water content. Meanwhile,
    the Transformer branch, through its self-attention mechanism [35], excels in deciphering
    complex interrelationships between different data points, thereby substantially
    elevating the model’s prediction accuracy. In contrast to conventional machine
    learning models like SVR and GBDT, deep learning models demonstrate a heightened
    ability to manage highly nonlinear and multi-dimensional data. This study reveals
    that deep learning models, such as CNNs and LSTM networks, generally outperform
    traditional machine learning approaches, highlighting deep learning’s prowess
    in capturing intricate data patterns and relationships [27]. However, the GRU–Transformer
    model elevates this capability to a higher echelon by synergizing the strengths
    of both GRU and Transformer architectures. By integrating these two powerful neural
    network structures, their individual advantages are mutually amplified [33]. This
    synergistic fusion not only allows the GRU–Transformer model to surpass the accuracy
    of individual deep learning models but also to outshine traditional machine learning
    methods. This enhancement is pivotal in the context of environmental data processing,
    where the complexity and variability of data demand sophisticated analytical approaches.
    The GRU–Transformer model, with its dual-architecture advantage, thus stands as
    a significant advancement in the field, pushing the boundaries of what can be
    achieved in soil water content prediction and environmental data analysis. 3.4.
    Limitations and Further Study We advocate the utilization of deep learning methodologies
    for the intricate processing of meteorological and soil data, with the aim of
    achieving precise predictions of soil moisture at various depths. This approach
    effectively harnesses the strengths of the two models to enhance predictive outcomes.
    Nevertheless, this study is not devoid of limitations, which present opportunities
    for refinement in future endeavors. A primary shortcoming is the relatively limited
    dataset size, encompassing merely eight consecutive years of data from eight locations.
    This constraint poses a potential risk of overfitting, potentially impairing the
    model’s generalization capabilities. Additionally, this study did not incorporate
    factors such as the growth stages of maize or other agricultural management practices,
    including irrigation and fertilization, all of which can significantly influence
    soil moisture dynamics. In light of these limitations, future research directions
    will focus on expansion and optimization in several key areas. (1) Enlarging the
    dataset: Future studies will aim to broaden the dataset’s scope, encompassing
    data from diverse regions, encompassing different years and maize varieties. This
    expansion will provide a more comprehensive and varied dataset, enhancing the
    robustness and applicability of the model. (2) Incorporating additional variables:
    The inclusion of variables such as the maize’s growth stage, various agricultural
    management practices, and soil types will be a focal point. These additions will
    offer a more holistic view of the factors impacting soil moisture, thus enriching
    the model’s predictive accuracy. (3) Model optimization: We plan to refine the
    structure and parameters of the model further. This will involve exploring various
    combination methods and fusion strategies, with an emphasis on enhancing the model’s
    efficiency and stability. Through these enhancements, we aim to not only address
    the current study’s limitations but also significantly advance the field of soil
    moisture prediction using deep learning techniques, ultimately contributing to
    more effective and informed agricultural management. Given its demonstrated accuracy
    and versatility, the GRU–Transformer model holds potential for application in
    a range of environmental contexts, including the prediction of flash droughts,
    thereby contributing valuable insights for proactive disaster management and environmental
    preservation. 4. Conclusions This research introduces a novel hybrid modeling
    approach that synergizes GRU and Transformer architectures, aiming to predict
    soil moisture content at varying depths, specifically within the maize root zone.
    Utilizing meteorological and soil moisture data from eight maize cultivation sites
    in Hebei Province, China, spanning from 2011 to 2018, the study meticulously evaluates
    the model’s predictive performance across diverse input combinations and varying
    forecast durations. This evaluation also includes comparative analysis with conventional
    machine learning and other deep learning models. The findings of this study reveal
    distinct prediction efficacies under varying conditions. The results showed that
    (1) the GRU–Transformer model exhibited significant advantages under different
    prediction delay days and soil depth conditions. The model demonstrated the highest
    accuracy in the short-term prediction of 1 to 2 days, in which the mean MSE was
    5.22% and the lowest reached 2.71% in the prediction with a 1-day delay, while
    the mean R2 was as high as 89.92%. The prediction accuracy decreased as the number
    of days of delay in prediction increased, but the overall performance remained
    stable. In addition, in the comparison of different soil depths, the model showed
    higher accuracy in predicting the water content of deeper soil layers, which was
    much better than the performance of shallow soil prediction. The methodology and
    experimental design adopted in the study fully considered the adaptability and
    robustness of the model under different environmental conditions. (2) By comparing
    the model performance under different combinations of input parameters, we found
    that the prediction error of the model rises with the decrease in parameters;
    however, even under the combination of only soil water content parameters, the
    model predicts the third day in the future with an average MSE of 0.59% and an
    average R2 of 98.86%, which reflects the high tolerance of the model to different
    combinations of parameters. (3) In comparative analysis, the GRU–Transformer model
    substantially outperformed a range of typical machine learning models (such as
    SVR, KNN, GBDT, XGBoost, and Random Forest) and deep learning models (including
    DNN, CNN, independent GRU, and Transformer branches). This superiority affirms
    the model’s exceptional capability in handling complex soil moisture data. Conclusively,
    this study presents a potent decision-support tool for agricultural irrigation
    management, contributing significantly to enhancing the efficiency and conservation
    of agricultural water resources. The GRU–Transformer model, with its robust predictive
    accuracy and adaptability, offers valuable insights for the sustainable development
    of agriculture, addressing critical needs in environmental data processing and
    agricultural resource management. Author Contributions Methodology, W.Z., J.Y.
    and K.Z.; investigation, K.Z. and L.G.; validation, K.Z. and J.Y.; formal analysis,
    J.Y.; resources, L.X.; data curation, K.Z. and L.G.; writing—original draft preparation,
    K.Z.; writing—review and editing, J.Y.; visualization, K.Z.; supervision, L.X.,
    R.L. and L.Z.; project administration, J.Y.; funding acquisition, L.Z. All authors
    have read and agreed to the published version of the manuscript. Funding This
    project was supported by the National Key Research and Development Program (2022YFD1900803),
    the Yunnan Provincial Basic Research Plan Project (202101AT070248), the Beijing
    Academy of Agriculture and Forestry Sciences Youth Research Fund (QNJJ202410),
    and the Earmarked Fund for CARS-02 and CARS-54. Institutional Review Board Statement
    Not applicable. Informed Consent Statement Not applicable. Data Availability Statement
    Data are contained within the article. Conflicts of Interest The authors declare
    no conflicts of interest. References Rigden, A.; Mueller, N.; Holbrook, N.; Pillai,
    N.; Huybers, P. Combined Influence of Soil Moisture and Atmospheric Evaporative
    Demand Is Important for Accurately Predicting US Maize Yields. Nat. Food 2020,
    1, 127–133. [Google Scholar] [CrossRef] [PubMed] China’s Corn Production Increases
    in 2021|World Grain. Available online: https://www.world-grain.com/articles/16188-chinas-corn-production-increases-in-2021
    (accessed on 13 January 2024). Li, L.; Li, X.; Zheng, X.; Li, X.; Jiang, T.; Ju,
    H.; Wan, X. The Effects of Declining Soil Moisture Levels on Suitable Maize Cultivation
    Areas in Northeast China. J. Hydrol. 2022, 608, 127636. [Google Scholar] [CrossRef]
    Yu, J.; Xin, Z.; Xu, L.; Dong, J.; Zhangzhong, L. A Hybrid CNN-GRU Model for Predicting
    Soil Moisture in Maize Root Zone. Agric. Water Manag. 2020, 245, 106649. [Google
    Scholar] [CrossRef] Babaeian, E.; Sadeghi, M.; Jones, S.; Montzka, C.; Vereecken,
    H.; Tuller, M. Ground, Proximal and Satellite Remote Sensing of Soil Moisture.
    Rev. Geophys. 2019, 57, 530–616. [Google Scholar] [CrossRef] Simunek, J.; Van
    Genuchten, M.T.; Šejna, M. HYDRUS: Model Use, Calibration, and Validation. Trans.
    ASAE Am. Soc. Agric. Eng. 2012, 55, 1261–1274. [Google Scholar] [CrossRef] Er-Raki,
    S.; Ezzahar, J.; Merlin, O.; Amazirh, A.; Ait Hssaine, B.; Kharrou, H.; Khabba,
    S.; Chehbouni, A. Performance of the HYDRUS-1D Model for Water Balance Components
    Assessment of Irrigated Winter Wheat under Different Water Managements in Semi-Arid
    Region of Morocco. Agric. Water Manag. 2020, 244, 106546. [Google Scholar] [CrossRef]
    Belmans, C.; Wesseling, J.; Feddes, R. Simulation Model of the Water Balance of
    a Cropped Soil Providing Different Types of Boundary Conditions (SWATRE); ICW:
    Wageningen, The Netherlands, 1981; Volume 63. [Google Scholar] Awan, Z.; Khaliq,
    T.; Akhtar, M.; Imran, A.; Irfan, M.; Ahmed, M.J.; Ahmad, A. Building Climate-Resilient
    Cotton Production System for Changing Climate Scenarios Using the DSSAT Model.
    Sustain. Sci. 2021, 131, 10495. [Google Scholar] [CrossRef] Wang, Z.; Ye, L.;
    Jiang, J.; Fan, Y.; Zhang, X. Review of Application of EPIC Crop Growth Model.
    Ecol. Model. 2022, 467, 109952. [Google Scholar] [CrossRef] Zheng, W.; Zhangzhong,
    L.; Xin, Z.; Wang, C.; Sun, S.; Niu, H. A Review on the Soil Moisture Prediction
    Model and Its Application in the Information System. In Proceedings of the 11th
    IFIP WG 5.14 International Conference, CCTA 2017, Jilin, China, 12–15 August 2017;
    Springer: Cham, Switzerland, 2019; pp. 352–364, ISBN 978-3-030-06136-4. [Google
    Scholar] Aguilera, H.; Moreno-Merino, L.; Wesseling, J.; Jiménez-Hernández, M.;
    Castaño Castaño, S. Soil Moisture Prediction to Support Management in Semiarid
    Wetlands during Drying Episodes. Catena 2016, 147, 709–724. [Google Scholar] [CrossRef]
    Acharya, U.; Daigh, A.; Oduor, P. Machine Learning for Predicting Field Soil Moisture
    Using Soil, Crop, and Nearby Weather Station Data in the Red River Valley of the
    North. Soil Syst. 2021, 5, 57. [Google Scholar] [CrossRef] Fang, H.; Zhang, Y.;
    Wei, S.; Li, W.; Ye, Y.; Sun, T.; Weiwei, L. Validation of Global Moderate Resolution
    Leaf Area Index (LAI) Products over Croplands in Northeastern China. Remote Sens.
    Environ. 2019, 233, 111377. [Google Scholar] [CrossRef] Ahansal, Y.; Bouziani,
    M.; Yaagoubi, R.; Sebari, I.; Sebari, K.; Kenny, L. Towards Smart Irrigation:
    A Literature Review on the Use of Geospatial Technologies and Machine Learning
    in the Management of Water Resources in Arboriculture. Agronomy 2022, 12, 297.
    [Google Scholar] [CrossRef] Chen, C.; Tan, J.; Yin, J.; Zhang, F.; Yao, J. Prediction
    for Soil Moisture in Tobacco Fields Based on PCA and RBF Neural Network. Nongye
    Gongcheng Xuebao/Trans. Chin. Soc. Agric. Eng. 2010, 26, 85–90. [Google Scholar]
    [CrossRef] Yang, X.; Zhang, C.; Cheng, Q.; Zhang, H.; Gong, W. A Hybrid Model
    for Soil Moisture Prediction by Using Artificial Neural Networks. Rev. De La Fac.
    De Ing. 2017, 32, 265–271. [Google Scholar] Fan, J.; Yue, W.; Wu, L.; Zhang, F.;
    Cai, H.; Xiukang, W.; Lu, X.; Xiang, Y. Evaluation of SVM, ELM and Four Tree-Based
    Ensemble Models for Predicting Daily Reference Evapotranspiration Using Limited
    Meteorological Data in Different Climates of China. Agric. For. Meteorol. 2018,
    263, 225–241. [Google Scholar] [CrossRef] Hong, Z.; Kalbarczyk, Z.; Iyer, R. A
    Data-Driven Approach to Soil Moisture Collection and Prediction. In Proceedings
    of the 2016 IEEE International Conference on Smart Computing (SMARTCOMP), St.
    Louis, MO, USA, 1 May 2016; pp. 1–6. [Google Scholar] Prasad, R.; Deo, R.; Li,
    Y.; Maraseni, T. Soil Moisture Forecasting by a Hybrid Machine Learning Technique:
    ELM Integrated with Ensemble Empirical Mode Decomposition. Geoderma 2018, 330,
    136–161. [Google Scholar] [CrossRef] Carranza, C.; Nolet, C.; Pezij, M.; Ploeg,
    M. Root Zone Soil Moisture Estimation with Random Forest. J. Hydrol. 2020, 593,
    125840. [Google Scholar] [CrossRef] Wu, L.; Fan, J. Comparison of Neuron-Based,
    Kernel-Based, Tree-Based and Curve-Based Machine Learning Models for Predicting
    Daily Reference Evapotranspiration. PLoS ONE 2019, 14, e0217520. [Google Scholar]
    [CrossRef] [PubMed] Chen, W.; Zheng, Z.; Yu, J.; Wang, C.; Huang, R. Data-Driven
    Calibration of Soil Moisture Sensor Considering Impacts of Temperature: A Case
    Study on FDR Sensors. Sensors 2019, 19, 4381. [Google Scholar] [CrossRef] [PubMed]
    Kim, T.-Y.; Cho, S.-B. Predicting Residential Energy Consumption Using CNN-LSTM
    Neural Networks. Energy 2019, 182, 72–81. [Google Scholar] [CrossRef] Khaki, S.;
    Wang, L.; Archontoulis, S. A CNN-RNN Framework for Crop Yield Prediction. Front.
    Plant Sci. 2020, 10, 1750. [Google Scholar] [CrossRef] [PubMed] Li, Q.; Zhu, Y.;
    Shangguan, W.; Wang, X.; Li, L.; Yu, F. An Attention-Aware LSTM Model for Soil
    Moisture and Soil Temperature Prediction. Geoderma 2022, 409, 115651. [Google
    Scholar] [CrossRef] Cai, Y.; Zheng, W.; Xin, Z.; Zhangzhong, L.; Xue, X. Research
    on Soil Moisture Prediction Model Based on Deep Learning. PLoS ONE 2019, 14, e0214508.
    [Google Scholar] [CrossRef] Sajedian, I.; Kim, J.; Rho, J. Finding the Optical
    Properties of Plasmonic Structures by Image Processing Using a Combination of
    Convolutional Neural Networks and Recurrent Neural Networks. Microsyst. Nanoeng.
    2019, 5, 27. [Google Scholar] [CrossRef] Yu, Y.; Si, X.; Hu, C.; Zhang, J. A Review
    of Recurrent Neural Networks: LSTM Cells and Network Architectures. Neural Comput.
    2019, 31, 1235–1270. [Google Scholar] [CrossRef] Chen, Y.; Bruzzone, L.; Jiang,
    L.; Sun, Q. ARU-Net: Reduction of Atmospheric Phase Screen in SAR Interferometry
    Using Attention-Based Deep Residual U-Net. IEEE Trans. Geosci. Remote Sens. 2020,
    59, 5780–5793. [Google Scholar] [CrossRef] Zhong, Z.; Li, Y.; Ma, L.; Li, J.;
    Zheng, W.-S. Spectral-Spatial Transformer Network for Hyperspectral Image Classification:
    A Factorized Architecture Search Framework. IEEE Trans. Geosci. Remote Sens. 2021,
    60, 1–15. [Google Scholar] [CrossRef] Shewalkar, A.N. Comparison of RNN, LSTM
    and GRU on Speech Recognition Data; North Dakota State University: Fargo, ND,
    USA, 2018. [Google Scholar] Zhang, Y.; Liu, S.; Zhang, P.; Li, B. GRU- and Transformer-Based
    Periodicity Fusion Network for Traffic Forecasting. Electronics 2023, 12, 4988.
    [Google Scholar] [CrossRef] Aloysius, N.; Madathilkulangara, G.; Nedungadi, P.
    Incorporating Relative Position Information in Transformer-Based Sign Language
    Recognition and Translation. IEEE Access 2021, 9, 145929–145942. [Google Scholar]
    [CrossRef] Chen, D.; Yongchareon, S.; Lai, E.; Yu, J.; Sheng, Q.; Li, Y. Transformer
    with Bidirectional GRU for Nonintrusive, Sensor-Based Activity Recognition in
    a Multiresident Environment. IEEE Internet Things J. 2022, 9, 23716–23727. [Google
    Scholar] [CrossRef] Yu, J.; Tang, S.; Zhangzhong, L.; Zheng, W.; Wang, L.; Wong,
    A.; Xu, L. A Deep Learning Approach for Multi-Depth Soil Water Content Prediction
    in Summer Maize Growth Period. IEEE Access 2020, 8, 199097–199110. [Google Scholar]
    [CrossRef] Zhai, C.; Zhou, H.; Zhao, J. Experimental Study on Inter-Annual Water
    Requirement and Water Consumption of Drip Irrigation Maize in North of Xinjiang.
    Sci. Agric. Sin. 2017, 50, 2769–2780. [Google Scholar] [CrossRef] Guo, J.-L.;
    Yin, G.-H.; Gu, J.; Liu, Z.-X. Determination of Irrigation Scheduling of Spring
    Maize in Different Hydrological Years in Fuxin, Liaoning Province Based on CROPWAT
    Model. Chin. J. Ecol. 2016, 35, 3428–3434. [Google Scholar] [CrossRef] Zhou, S.;
    Hu, X.; Wang, W.; Zhang, Y. Water-Saving and Stable Yield Effects of Regulation
    on Soil Wetted Depth in Different Growth Stage of Spring Maize. Trans. Chin. Soc.
    Agric. Eng. 2016, 32, 125–132. [Google Scholar] Ghawi, R.; Pfeffer, J. Efficient
    Hyperparameter Tuning with Grid Search for Text Categorization Using kNN Approach
    with BM25 Similarity. Open Comput. Sci. 2019, 9, 160–180. [Google Scholar] [CrossRef]
    Ahmadianfar, I.; Bozorg-Haddad, O.; Chu, X. Gradient-Based Optimizer: A New Metaheuristic
    Optimization Algorithm. Inf. Sci. 2020, 540, 131–159. [Google Scholar] [CrossRef]
    Chen, T.; Guestrin, C. XGBoost: A Scalable Tree Boosting System. In Proceedings
    of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data
    Mining, San Francisco, CA, USA, 13 August 2016; pp. 785–794. [Google Scholar]
    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all
    publications are solely those of the individual author(s) and contributor(s) and
    not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility
    for any injury to people or property resulting from any ideas, methods, instructions
    or products referred to in the content.  © 2024 by the authors. Licensee MDPI,
    Basel, Switzerland. This article is an open access article distributed under the
    terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Zheng, W.; Zheng, K.; Gao, L.; Zhangzhong, L.;
    Lan, R.; Xu, L.; Yu, J. GRU–Transformer: A Novel Hybrid Model for Predicting Soil
    Moisture Content in Root Zones. Agronomy 2024, 14, 432. https://doi.org/10.3390/agronomy14030432
    AMA Style Zheng W, Zheng K, Gao L, Zhangzhong L, Lan R, Xu L, Yu J. GRU–Transformer:
    A Novel Hybrid Model for Predicting Soil Moisture Content in Root Zones. Agronomy.
    2024; 14(3):432. https://doi.org/10.3390/agronomy14030432 Chicago/Turabian Style
    Zheng, Wengang, Kai Zheng, Lutao Gao, Lili Zhangzhong, Renping Lan, Linlin Xu,
    and Jingxin Yu. 2024. \"GRU–Transformer: A Novel Hybrid Model for Predicting Soil
    Moisture Content in Root Zones\" Agronomy 14, no. 3: 432. https://doi.org/10.3390/agronomy14030432
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations No citations
    were found for this article, but you may check on Google Scholar Article Access
    Statistics Article access statistics Article Views 23. Feb 28. Feb 4. Mar 9. Mar
    14. Mar 19. Mar 24. Mar 29. Mar 3. Apr 0 200 400 600 800 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Agronomy, EISSN 2073-4395, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Agronomy
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'GRU–Transformer: A Novel Hybrid Model for Predicting Soil Moisture Content
    in Root Zones'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Saini R.
  - Garg P.
  - Chaudhary N.K.
  - Joshi M.V.
  - Palaparthy V.S.
  - Kumar A.
  citation_count: '0'
  description: Plant disease detection and management is one of the pivotal areas
    in the agriculture sector, which needs attention to abate crop loss. The recent
    trends in machine learning and deep learning have played a significant role in
    reducing crop loss with the help of early plant disease detection. For plant disease
    detection prior information on soil moisture, ambient temperature, relative humidity,
    leaf wetness sensor (LWS), rainfall are crucial parameters. In this work, the
    objective is to identify the source of leaf wetness on the leaf canopy, which
    can arise due to irrigation, rainfall, or dew. To identify the source of wetness
    on the leaf canopy, either rainfall or humidity/mist sensors are used, which substantially
    increases the cost of the system. For this purpose, we have used the LWS, which
    is deployed in the field and various patterns for the irrigation, rainfall, or
    dew has been analyzed by using the in-house developed the Internet of Things (IoT)-enabled
    sensor system. The data collected from the field is used as a learning dataset
    for the proposed ensemble neural network (NN) developed to identify the source
    of leaf wetness. Short-time Fourier transform (STFT) has been employed to enhance
    data representation by transforming numerical data from the LWS into informative
    images. The provided ensemble model incorporates convolutional NN (CNN) and multilayer
    perceptron (MLP), which process image and numerical data (ambient temperature,
    relative humidity, leaf wetness duration, and maximum magnitude of frequency of
    images) as input. Their outputs combined in an artificial neural network (ANN)
    sub-model for precise leaf wetness event detection (dew, rainfall, or irrigation).
    The proposed model achieved an accuracy of 96.13% with average precision, recall,
    and F1 score for the leaf wetness events is about 84%, 85%, and 83%, respectively.
  doi: 10.1109/JSEN.2023.3343574
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Sensors Journal >Volume:
    24 Issue: 5 Identifying the Source of Water on Plant Using the Leaf Wetness Sensor
    and via Deep Learning-Based Ensemble Method Publisher: IEEE Cite This PDF Riya
    Saini; Pooja Garg; Naveen Kumar Chaudhary; Manjunath V. Joshi; Vinay S. Palaparthy;
    Ahlad Kumar All Authors 173 Full Text Views Abstract Document Sections I. Introduction
    II. Materials and Methods III. Data Preprocessing IV. Proposed Model for Classification
    V. Result and Discussion Show Full Outline Authors Figures References Keywords
    Metrics Media Abstract: Plant disease detection and management is one of the pivotal
    areas in the agriculture sector, which needs attention to abate crop loss. The
    recent trends in machine learning and deep learning have played a significant
    role in reducing crop loss with the help of early plant disease detection. For
    plant disease detection prior information on soil moisture, ambient temperature,
    relative humidity, leaf wetness sensor (LWS), rainfall are crucial parameters.
    In this work, the objective is to identify the source of leaf wetness on the leaf
    canopy, which can arise due to irrigation, rainfall, or dew. To identify the source
    of wetness on the leaf canopy, either rainfall or humidity/mist sensors are used,
    which substantially increases the cost of the system. For this purpose, we have
    used the LWS, which is deployed in the field and various patterns for the irrigation,
    rainfall, or dew has been analyzed by using the in-house developed the Internet
    of Things (IoT)-enabled sensor system. The data collected from the field is used
    as a learning dataset for the proposed ensemble neural network (NN) developed
    to identify the source of leaf wetness. Short-time Fourier transform (STFT) has
    been employed to enhance data representation by transforming numerical data from
    the LWS into informative images. The provided ensemble model incorporates convolutional
    NN (CNN) and multilayer perceptron (MLP), which process image and numerical data
    (ambient temperature, relative humidity, leaf wetness duration, and maximum magnitude
    of frequency of images) as input. Their outputs combined in an artificial neural
    network (ANN) sub-model for precise leaf wetness event detection (dew, rainfall,
    or irrigation). The proposed model achieved an accuracy of 96.13% with average
    precision, recall, and F1 score for the leaf wetness events is about 84%, 85%,
    and 83%, respectively. Published in: IEEE Sensors Journal ( Volume: 24, Issue:
    5, 01 March 2024) Page(s): 7009 - 7017 Date of Publication: 04 January 2024 ISSN
    Information: DOI: 10.1109/JSEN.2023.3343574 Publisher: IEEE Funding Agency: SECTION
    I. Introduction Crops and plants are prone to attack by various diseases and pests.
    These attacks are detrimental to the quality of crops produced and, subsequently,
    to the livelihood of the farmers. According to the literature, diseases, pests,
    and weeds contribute to 36% loss of crops [1]. The foremost cause of frequent
    plant diseases is a lack of supervision and monitoring. To overcome this challenge,
    advanced sensors based technology could be employed to install a supervision system
    in place. Internet of Things (IoT)-based sensor technology is one of the leading
    solutions to monitor and keep track of the plant growth environment. Sensor signals
    along with machine learning algorithms have been shown to create robust disease
    detection and prediction systems [2], [3], [4], [5], [6]. To abate crop loss due
    to diseases, researchers have proposed various disease warning systems. A few
    essential parameters for these models are leaf wetness duration (LWD), ambient
    temperature, and relative humidity [7], [8], [9]. The presence of water molecules
    on the surface of the leaves, paired with suitable ambient temperature and relative
    humidity, enables the germination of fungal diseases on the leaf canopy [10].
    Therefore, consistent measurement of LWD plays a crucial role in developing a
    sound disease prediction model. Researchers have explored various types of leaf
    wetness sensors (LWSs) out of which electronic LWS is deemed suitable for in situ
    measurements [10]. A lack of standard measurement practices has affected the in
    situ estimation of LWD values. In this work, an in-house affordable, temperature-compensated
    LWS has been used, which has been reported in our earlier works [11]. It highlights
    the key features of the novel LWS. The IoT-based sensor system enables remote
    sensing of the field parameters; thus, the system would work autonomously. The
    source of leaf wetness could be a valuable insight for predicting diseases. It
    would help farmers identify the cause of leaf wetness and enable them to take
    instant preventive measures. In a remote setting, the output from LWS can be used
    to determine the cause of moisture on the surface of the leaves. As suggested
    in [44], dew, rainfall, or irrigation are the plausible sources of wetness on
    the leaf canopy. In this work, these three causes of leaf wetness have been accounted
    for dew, rainfall, and irrigation. The LWS used in this work generates a frequency
    output corresponding to the presence of water on the leaf surface [44]. If water
    is present on the surface, the frequency declines from the baseline level and
    ascends again once the surface is dry [11]. As mentioned, each event produces
    a different frequency output when subjected to dew, rainfall, and irrigation.
    Therefore, the pattern generated through the frequency output of the LWS provides
    critical insight for detecting the source of wetness on the surface of leaves.
    Pattern recognition is a famous classification and detection technique. It is
    a process wherein the machine tries to classify the data according to the information
    gained from the regu- varieties observed in different types of data. There are
    several applications of pattern recognition like speech recognition, object identification,
    and classification of medical and explosive signals [13], [14], [15], [16], [17],
    [18]. In this work, pattern recognition has been explored for LWS data wherein
    the data points correspond to either dew, rainfall, or irrigation. Syntactic,
    template matching, and statistical models are used for pattern recognition [19].
    The rising popularity of neural networks (NNs) for feature extraction has driven
    researchers to explore NNs for pattern recognition [20]. NN is capable of feature
    extraction from numerical, image, and text-based datasets. Multilayer perceptrons
    (MLPs) are fully connected NN used for pattern recognition [21], [22], [23]. A
    class of NN called convolutional NN (CNN) is widely used for image classification
    [24], [25], [26], [27]. Networks like VGGNet [28], AlexNet [29], and GoogLeNet
    [30] are famous CNN structures used for pattern recognition from image datasets.
    In this work, an ensemble model is proposed, which takes the numerical and image
    data for classifying the source of wetness (dew, rainfall, or irrigation) on the
    plant. Based on the sensor data, this article aims to classify the leaf wetness
    events in one of the three categories: dew, rainfall, or irrigation. LWS data
    plays a crucial role in determining the source of leaf wetness. While the sensor
    produces time-series data, significant information can be extracted from the patterns
    observed in the frequency domain. Therefore, the time-series data has been converted
    to image form using short-time Fourier transform (STFT) and spectrogram representation.
    In addition to LWS, the disease prediction system uses other sensors like ambient
    temperature and relative humidity sensors [11]. These sensors monitor the environmental
    conditions. Rainfall and dew are natural phenomena and are characterized by distinct
    environmental conditions. SECTION II. Materials and Methods A. Sensors System
    and Field Deployment In this work, the LWS and IoT-enabled system have been used,
    which is reported in [11]. Fabricated LWS produces frequency output when subjected
    to the water molecule on its sensing surface. Further, for the temperature and
    humidity measurements, commercial sensors MCP 9710 and HIH 5030 are used, respectively.
    Subsequently, these sensors are interfaced with the in-house developed signal
    conditioning and processing circuits. The data collected from these sensors are
    uploaded to the ThingspeakTM server every 30 min. For the field measurement, fabricated
    LWS was deployed on the Mango tree at 45° angles, as shown in Fig. 1. Further,
    the field measurements are carried out for four months where approximately 5000
    data points are collected. Fig. 1. Deployment of the sensor on the leaves. Show
    All SECTION III. Data Preprocessing The primary focus is to prepare the data for
    classifying the source of wetness on the leaf, which can arise mainly due to dew,
    rainfall, and irrigation. This involves feature extraction to identify leaf wetness
    events caused by dew, rainfall, and irrigation. Further, data labeling is done
    for both numerical and image data. Numerical attributes are standardized and fed
    into the MLP model and subsequently image data is transformed into spectrograms,
    which are fed into the CNN model. Data augmentation techniques are applied to
    enhance dataset size and diversity. These processes collectively aim to facilitate
    the accurate classification of leaf wetness events in a dataset comprising 392
    instances of dew, rainfall, and irrigation events, which helps reduce overfitting
    and improve model accuracy. A. Feature Extraction The main objective of this work
    is to determine the cause of leaf wetness by analyzing the patterns generated
    by an LWS. Three distinct events, namely dew, irrigation, and rainfall, can make
    leaves wet. To apply a classification algorithm effectively, it’s crucial to isolate
    and extract these individual wetness events and create training and testing datasets.
    This is achieved by identifying specific points at the start and end of each event
    using the find_peaks function from the sciPy library. This function detects the
    highest values in a 1-D signal within a specified height range. Fig. 2 represents
    the signal with starting and ending points marked using orange and green colors.
    The resulting signal is then divided into separate events, leading to the creation
    of a dataset comprising 98 leaf wetness events, each marked by distinct starting
    and ending points. Fig. 2. Leaf wetness events marked with points. Show All B.
    Data Labeling 1) Tabular Data: In this work, a hybrid model is trained using both
    numerical and image data. Numerical data comprise data from sensors like ambient
    temperature sensors, relative humidity sensors, and LWS. Each wetness event is
    numerically characterized by four features, namely, LWD value, average ambient
    temperature, average relative humidity, and maximum magnitude of frequency. Average
    temperature and humidity values are calculated for the duration of each event,
    and the maximum magnitude of frequency is obtained from the output of LWS. LWD
    values are extracted from the frequency response of LWS after smoothening the
    signal. The procedure followed for calculating LWD values has been reported in
    our previous work [11]. The numerical features corresponding to a single-leaf
    wetness event vary broadly in magnitude. To avoid bias due to differences in the
    range of magnitude during the training process, the features are normalized using
    Minmaxscaler function available in scikit-learn library [33]. After normalization,
    all features would lie within a range of 0–1, eliminating any bias due to their
    magnitude. 2) Image Data: The dataset comprise individual frequency output responses
    corresponding to a particular event. To make it suitable for training a machine
    learning model, it has to be classified appropriately with the cause of the wetness.
    Three possible events are responsible for wetness on the leaves’ surface: dew,
    rainfall, and irrigation. For ease of classification, the signal is inverted about
    the y-axis, such that a rise in the magnitude of frequency above baseline frequency
    marks the events. This is denoted by ( ΔF ) as shown in Fig. 3. Fig. 3. Isolated
    events from the frequency response of leaf wetness sensor corresponding to (a)
    dew, (b) rainfall, and (c) irrigation. Show All In this work, the time-series
    numerical data from LWS is transformed into image format to leverage the 2-D CNN
    model. CNN is one of the most popular NNs for image classification due to its
    high accuracy [34]. The signal is converted into the frequency domain from the
    time domain using an STFT to convert the numerical data for LWS into image form.
    STFT captures the signal’s frequency components over a small window length of
    256, which is the function’s default size, and tracks them across the duration
    of the signal. STFT of the frequency output of LWS has been computed using the
    scipy library [32]. In doing so, an attempt is made to capture the salient features
    of the patterns observed in the sensor output. These patterns are observed when
    the sensor detects the presence of water on the surface. Fig. 4 represents the
    spectrograms of STFT of the LWS sensor signals. It is evident from the spectrograms,
    as depicted in Fig. 4 that the intensity of frequency components differs for the
    different categories of events viz., dew, rainfall, and irrigation. Therefore,
    these spectrograms could be used for training a CNN-based classification model.
    The images are resized and converted to binary to assist the edge-detection capacity
    of CNN. Fig. 4. STFT spectrograms of leaf wetness sensor data for (a) dew, (b)
    rainfall, and (c) irrigation. Show All The frequency magnitude is the first indicator
    of the possible event that could have caused leaf wetness [44]. Leaf wetness due
    to dew is characterized by a frequency output response with a maximum magnitude
    less than or equal to 4 kHz. Therefore, all events for which the rise in frequency
    ( ΔF ) is less than or equal to 4 kHz are labeled “Dew.” Out of 98 leaf wetness
    events and 13 events for Dew have been obtained. Apart from considering the magnitude
    of the frequency output of LWS, to differentiate between the events due to irrigation
    and rain, a second parameter, LWD has been used. The events with a maximum magnitude
    of frequency greater than 10 kHz or LWD more than 19 h have been labeled as “Rain.”
    Subsequently, the rest of the events were labeled as “Irrigation.” From the given
    signal, 48 events due to rain and 37 events due to irrigation has been observed.
    Fig. 3 shows five signals, each corresponding to the three natural phenomena discussed
    above. The magnitude on the y -axis is under the criteria used to classify the
    events in the appropriate categories. C. Data Augmentation Data augmentation is
    a crucial strategy to prevent overfitting in NNs due to limited data. This study
    is critical because leaf wetness events are uncontrollable. Techniques like horizontal
    flipping and adding random Gaussian noise are applied to image data while preserving
    original patterns. Numerical data are also augmented with Gaussian noise. After
    using these techniques, the dataset grows from 98 to 392 leaf wetness events,
    enhancing the dataset’s size and robustness for machine learning purposes. SECTION
    IV. Proposed Model for Classification In this work, artificial neural network
    (ANN) is an attractive choice because it ensembles NNs that can be built to deal
    with different types of data at the same time. In this work, NN is devolved that
    is capable of learning both numerical data and image data simultaneously. The
    sub-model trained to learn numerical data is an MLP and that trained using the
    image data is a CNN. The model proposed in this work, has been implemented using
    the tensorflow library [36]. A. Multilayer Perceptron MLP is a class of feed-forward
    NNs with fully connected layers. It comprises input and output layers connected
    between multiple hidden layers. In this work, the MLP is supplied by four input
    features—LWD values, average ambient temperature, average relative humidity, and
    maximum magnitude of frequency observed for the event. As mentioned, the three
    types of layers in MLP have neurons responsible for propagating the information
    to the following layer. Fig. 5 shows a descriptive diagram of an MLP (sub-model
    1). The input features are supplied to the input layer. In this work, four features
    are used namely, LWD value, average ambient temperature, average relative humidity,
    and maximum magnitude of frequency. Let the input vector be represented by X i
    for i∈[1,4] . The input is passed on to the hidden layer. The output of the ith
    neuron in the lth hidden layer of MLP, y m [l]i , is the weighted summation of
    its input provided from the preceding hidden layer. The process is called forward
    propagation, accomplished by the following equation [23]: y m [l])i =F( ∑ i=1
    n−1 w m [l]i . a m [l−1]i + b m [l]i ) (1) View Source where w m (l)i and b m
    (l)i are the weight and bias of the neuron, respectively, and a m (l−1)i is the
    activated neuron from the previous layer. The function F(x) is the activation
    function assigned to each layer. For the hidden layers, it is a linear function
    called rectified linear unit (ReLu). This function maximizes the speed of training
    due to less computation and avoids the vanishing gradient problem [37]. In case
    of the input layer a m [l−1]i is replaced with X i . The output vector of MLP
    (sub-model 1) is denoted by Y m . Fig. 5. Proposed model for leaf wetness events
    classification. Show All B. Convolutional Neural Network A CNN was implemented
    for training the image data due to its superior image classification performance.
    CNN models learn by identifying the edges of the images during the training process.
    The convolutional layer is composed of 2-D filters, i.e., kernels, traverse over
    the entire image depending on the size of the kernel. The kernel is a 2-D weight
    matrix. The layer performs convolution of the filter and overlapping input and
    extracts the features of the given image. CNN follows the same process of forward
    propagation, as described in MLP, to transfer the information through the network
    layers. However, in this case, the input images of spectrograms are convolved
    with the filters. It is a multiplication operation on the 2-D input matrices,
    i.e., image and kernel. The following equation defines the convolutional process
    [45]: y c [l]u,v =F( ∑ i=0 p−1 ∑ j=0 q−1 w c [l]i,j . a c (l−1)(u+i),(v+j) + b
    c [l]u,v ). (2) View Source y c (l)u,v is the output of the lth convolutional
    layer at the (u,v) position. The variables w c [l]i,j and a c [l−1](u+i),(v+j)
    are the kernel and input image, respectively. Here, the dimension of the kernel
    is (p×q) . The activation function, F(x) , for intermediate layers is ReLu [37].
    Furthermore, a max-pooling layer is used to prevent over-fitting. The data is
    down-sampled by replacing the output of the convolutional layer with the maximum
    value observed in a particular neighborhood. The MaxPooling2D layer from tensorflow
    implements the max-pooling function [36]. A window of size 3×3 with a stride of
    2 is employed. This operation reduces the dimensions of the data and makes the
    computation much more efficient. An additional layer was added to ensure an effective
    learning process called batchnormalization. The principal objective of this method
    is to normalize the input to the following layer. The batch normalization layer
    from the tensorflow library is added to the model to ensure that the inputs are
    normalized and smooth and that the learning does not suffer due to bias toward
    a specific input owing to nonuniform distribution. Y c denotes the output vector
    of CNN (sub-model 2). C. Training the Hybrid Model The main advantage of the dataset
    collected in this work is data availability from various sensors. While the pattern
    observed in the frequency output of LWS directly corresponds to identifying the
    event that caused wetness on the leaves, the other sensors measuring ambient temperature
    and relative humidity offer critical insights into the environmental conditions
    when the leaf wetness event occurred. These environmental factors could assist
    the model in making a decision. As discussed in Section III-A, the sensor data
    is preprocessed and organized in tabular format. The patterns observed in the
    LWS data are converted to images, as discussed in Section III-B. Fig. 5 illustrates
    the model used to predict the leaf wetness event. The tabular and image data are
    processed parallelly using the first two sub-models. Sub-model 1 is a multilayer
    perceptron described in Section IV-A. It has three hidden layers, each activated
    using a ReLu function. Sub-model 2 is a CNN, as Section IV-B describes, with two
    convolutional and max-pooling layers and a final batch-normalization layer. The
    convolutional layers are activated using the ReLu activation function. The output
    of the two sub-models is concatenated and provided as to the standard NN. The
    connected outcomes can be represented as C=[ Y m , Y c ] T . (3) View Source The
    input passes through the model via forward propagation as described in (1) and
    (2), depending on the sub-model. The two sub-models are responsible for feature
    extraction from the original data received from the sensors. The NNs are adept
    at feature extraction because of their densely connected structure [22]. The sub-model
    outputs are concatenated into a single vector and used further for training. The
    final sub-model denoted in Fig. 5 is responsible for the predictions. The outcome
    of the NN ensemble is obtained from the last layer of the final sub-model. It
    has three neurons corresponding to each leaf wetness event—dew, rainfall, and
    irrigation. The output is the probability of occurrence of the event based on
    the input features. This output is achieved by applying “softmax” as the activation
    function to the output layer [38]. The process finds the normalized exponential
    value for each class σ( c o )= e c o ∑ N j=1 e c j . (4) View Source In the above
    equation, c o is the output value of a neuron for a particular class. The exponential
    divided by the exponential of every neuron in the output layer. Thus, (4) calculates
    the probability of occurrence of one of the events. The model is trained by back-propagation.
    The method aims to minimize the cost function of the prediction by reassigning
    weights. The cost function chosen for training this model is “categorical cross-entropy”
    which is suitable for multiclass classification [38]. In the multiclass category,
    the events belong to only one of the possible classes. The following equation
    represents the loss function: Loss=− ∑ o=1 3 t o log( y o ) (5) View Source where
    t o is the class’s true value, and y o is the predicted probability from the output
    layer, which uses the softmax function. The model has been trained for 200 epochs
    with a batch size of 32 because of the small size of the dataset. This combination
    would converge to a loss value faster. The optimizer used is Adam because of its
    superior performance [39]. Fig. 5 shows the complete ensemble model used in this
    work. SECTION V. Result and Discussion A. Exploratory Data Analysis This section
    uses exploratory data analysis (EDA) to visualize data trends. A pie chart in
    Fig. 6 illustrates the distribution of leaf wetness causes, showing that rainfall
    is the most common (about half of the events), followed by irrigation (37.8%)
    and dew (13.3%). The June to October 2021 study aligns with the monsoon season,
    explaining the prevalence of rain-induced leaf wetness. Fig. 6. Pie chart distribution
    of leaf wetness events. Show All B. Model Performance The experiments are conducted
    for various hidden layers and neurons, and it has been found that the best accuracy
    achieved is around 96.13% for the ensemble model. Both model sub-model 1 (MLP)
    and sub-model 2 (CNN) were combined with another NN (final sub-model). As a result,
    the hidden layers are changed and neurons in sub-model 1, sub-model 2, and the
    final sub-model. It has been found that the best layers and neurons are three
    layers and 30-24-16 neurons for sub-model 1, four layers, and 128-64-24-12 neurons
    for sub-model 2 and four layers and 30-24-16 neurons for the final sub-model.
    Table I displays a comparison of many models. The recommended model outperformed
    several techniques in Table I, with an accuracy of 96.13%. TABLE I Comparison
    of Different Models As mentioned in Section IV-C, the ensemble model is trained
    for 200 epochs with a batch size of 32. Fig. 7(a) and (b) shows the training and
    validation accuracy and loss for the proposed model. In this work, the proposed
    model architecture learns from a combination of numerical data and image data.
    The MLP is responsible for learning the numerical tabular data, while the CNN
    learns the image data, as described in Section IV. Fig. 7(b) demonstrates the
    characteristic decline of the loss curve, which validates the learning process.
    The steady decline of the loss curve for validation data indicates learning and
    the absence of overfitting by the model. From Fig. 7(b), it can be observed that
    the ensemble model converges the fastest to the lowest loss value. Fig. 7. (a)
    Model accuracy, (b) cross-entropy loss, and (c) ROCs for dew, rainfall, and irrigation.
    Show All Fig. 7(c) shows the receiver operating characteristics (ROCs). This curve
    gives information about the classification capability of the trained model. The
    45° reference line shown in Fig. 7(c) denotes a model incapable of differentiating
    between positive and negative outputs. The area under the ROC curve (AUC) graph
    is a point where the true positive rate (TPR) is 1 and the false positive rate
    (FPR) is 0. A good ROC curve is closer to the top left corner and away from the
    45° line. Fig. 7(c) shows three ROC curves, one for each of the classes- dew,
    rainfall, and irrigation. The AUC is an insightful indicator of the model performance.
    AUC measures the model’s capability to differentiate between the classes. In this
    work, the AUC for dew, rainfall, and irrigation is 0.99, 0.95, and 0.97, respectively.
    The output layer of the NN ensemble described in Section IV uses softmax activation
    function which produces a probability of each possible outcome. These probabilities
    are converted to absolute values of 0 or 1, where 0 indicates negative output
    and 1 indicates a positive output. Further, the precision and recall have been
    calculated as tabulated in Table II. Precision is the fraction of predicted positive
    values, which are actually positive the following equation. On the other hand,
    recall is the fraction of actually positive values that have been correctly predicted
    the following equation [43]: Precision Recall = (True Positive) (True Positive+False
    Positive) = (True Positive) (True Positive+False Negative) . (6) (7) View Source
    TABLE II Evaluation Metrics for Classification of Dew, Rainfall, and Irrigation
    Table II gives the precision and recall values for all the events, along with
    the F1 score. The F1 score is the harmonic mean of precision and recall. It measures
    the model’s performance, accounting for the trade-off between precision and recall.
    From Table III, it can be observed that the version of the model is suitable for
    all the events. Slightly less memory is observed for dew. However, it is due to
    the limited number of samples. The average value of the F1 score is 0.8396, which
    signifies a good balance between precision and recall. The significance of a high
    F1 score is that the model can correctly identify the positive data samples. Table
    III presents a comparison of various ensemble models across different applications.
    Researchers have employed the CNN-LSTM model for applications in medical, robotics,
    pedestrian navigation, and e-commerce, while the Darknet19-CNN-LSTM model has
    been utilized for computer vision tasks. In this work, the MLP-CNN model has been
    adopted for agricultural applications and achieved an accuracy of 96.13%. TABLE
    III Comparison of Different Ensemble Models for Different Applications SECTION
    VI. Conclusion Agriculture plays a pivotal role in a country’s economy and methods
    to make it more efficient should be devised. In this work, with the motivation
    of reducing the cost of early plant disease prediction systems, the leaf wetness
    sensor is used to detect the LWS and also the source of wetness on the leaf canopy.
    For this purpose, the data is collected from LWS, ambient temperature sensor,
    and relative humidity sensor. The initial preprocessing and data engineering helped
    us create a dataset that could be used to train a machine-learning model capable
    of predicting the natural event responsible for leaf wetness. The sensors produced
    numerical time series data indicative of the three leaf wetness events- dew, rainfall,
    and irrigation. STFT is applied to the LWS data to obtain an image since the patterns
    obtained in the sensor output for different events are different. Further, an
    MLP-CNN model is built, which is capable of learning from tabular data as well
    as image data simultaneously. The MLP with numerical data produced a satisfactory
    accuracy of 92.86% while the CNN model with image data produced an accuracy of
    62.93% and the ensemble NN (MLP-CNN) classifier produced an accuracy of 96.13%.
    It has been observed that the final model classified the leaf wetness events with
    an average precision and recall of 0.84 and 0.85, respectively. Authors Figures
    References Keywords Metrics Media More Like This A portable node of humidity and
    temperature sensor for indoor environment monitoring 2018 3rd International Conference
    on Intelligent Green Building and Smart Grid (IGBSG) Published: 2018 Gsm based
    solar automatic irrigation system using moisture, temperature and humidity sensors
    2017 International Conference on Engineering Technology and Technopreneurship
    (ICE2T) Published: 2017 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Sensors Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Identifying the Source of Water on Plant Using the Leaf Wetness Sensor and
    via Deep Learning-Based Ensemble Method
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dong J.
  - Xing L.
  - Cui N.
  - Zhao L.
  - Guo L.
  - Wang Z.
  - Du T.
  - Tan M.
  - Gong D.
  citation_count: '2'
  description: Accurate reference crop evapotranspiration (ET0) estimation is essential
    for agricultural water management, crop productivity, and irrigation systems.
    As the standard ET0 estimation method, the Penman-Monteith equation has been widely
    recommended worldwide. However, its application is still restricted to comprehensive
    meteorological data deficiency, making the exploration of alternative simpler
    models for acceptable ET0 estimation highly meaningful. Concerning the aforementioned
    requirement, this study developed the novel deep learning model (MA-CNN-BiLSTM),
    which incorporates Multi-Head Attention mechanism (MA), Convolutional Neural Network
    (CNN), and Bidirectional Long Short-Term Memory network (BiLSTM) as intricate
    relationship processor, feature extractor, and regression component, to estimate
    ET0 based on radiation-based (Rn-based), humidity-based (RH-based), and temperature-based
    (T-based) input combinations at 600 stations during 1961–2020 throughout China
    under internal and external cross-validation strategies. Besides, through a comparative
    evaluation among MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, Multivariate Adaptive
    Regression Splines (MARS), and empirical models, the result indicated that MA-CNN-BiLSTM
    achieved superior precision, with values of Determination Coefficient (R2), Nash–Sutcliffe
    efficiency coefficient (NSE), Relative Root Mean Square Error (RRMSE), Root Mean
    Square Error (RMSE), and Mean Absolute Error (MAE) ranging 0.877–0.972, 0.844–0.962,
    0.129–0.292, 0.294–0.644 mm d−1, 0.244–0.566 mm d−1 for internal strategy and
    0.797–0.927, 0.786–0.920, 0.162–0.335, 0.409–0.969 mm d−1, 0.294–0.699 mm d−1
    for external strategy. Specifically, Rn-based MA-CNN-BiLSTM excelled in the temperate
    continental zone (TCZ) and mountain plateau zone (MPZ), while RH-based MA-CNN-BiLSTM
    yielded best precision in others. Furthermore, the internal strategy was superior
    to external strategy by 2.74–106.04% for R2, 1.11–120.49% for NSE, 1.41–40.27%
    for RRMSE, 1.68–45.53% for RMSE, and 1.21–38.87% for MAE, respectively. In summary,
    the main contribution of the present study is the proposal of a novel LSTM-type
    ET0 model (MA-CNN-BiLSTM) to cope with various data-missing scenarios throughout
    China, which can provide effective support for decision-making in regional agriculture
    water management.
  doi: 10.1016/j.agwat.2023.108665
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords Nomenclature 1. Introduction 2. Materials
    and methods 3. Results 4. Discussions 5. Conclusions and future works Supplementary
    data CRediT authorship contribution statement Declaration of Competing Interest
    Acknowledgment Appendix A. Supplementary material Data availability References
    Show full outline Cited by (2) Figures (11) Show 5 more figures Tables (6) Table
    1 Table 2 Table 3 Table 4 Table 5 Table 6 Extras (1) Supplementary material Agricultural
    Water Management Volume 292, 1 March 2024, 108665 Estimating reference crop evapotranspiration
    using improved convolutional bidirectional long short-term memory network by multi-head
    attention mechanism in the four climatic zones of China Author links open overlay
    panel Juan Dong a, Liwen Xing b, Ningbo Cui b, Lu Zhao b, Li Guo b, Zhihui Wang
    b, Taisheng Du c, Mingdong Tan b, Daozhi Gong d Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.agwat.2023.108665 Get rights and content Under
    a Creative Commons license open access Highlights • MA-CNN-BiLSTM model provides
    the highest accuracy for reference crop evapotranspiration estimation across China.
    • Machine learning and empirical models performed better with internal strategy
    than external strategy. • Radiation-based models excelled in temperate continental
    and mountain plateau zone, while humidity-based excelled in others. • Multi-head
    attention improved Long Short-Term Memory network type model as intricate relationship
    processor. Abstract Accurate reference crop evapotranspiration (ET0) estimation
    is essential for agricultural water management, crop productivity, and irrigation
    systems. As the standard ET0 estimation method, the Penman-Monteith equation has
    been widely recommended worldwide. However, its application is still restricted
    to comprehensive meteorological data deficiency, making the exploration of alternative
    simpler models for acceptable ET0 estimation highly meaningful. Concerning the
    aforementioned requirement, this study developed the novel deep learning model
    (MA-CNN-BiLSTM), which incorporates Multi-Head Attention mechanism (MA), Convolutional
    Neural Network (CNN), and Bidirectional Long Short-Term Memory network (BiLSTM)
    as intricate relationship processor, feature extractor, and regression component,
    to estimate ET0 based on radiation-based (Rn-based), humidity-based (RH-based),
    and temperature-based (T-based) input combinations at 600 stations during 1961–2020
    throughout China under internal and external cross-validation strategies. Besides,
    through a comparative evaluation among MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM,
    Multivariate Adaptive Regression Splines (MARS), and empirical models, the result
    indicated that MA-CNN-BiLSTM achieved superior precision, with values of Determination
    Coefficient (R2), Nash–Sutcliffe efficiency coefficient (NSE), Relative Root Mean
    Square Error (RRMSE), Root Mean Square Error (RMSE), and Mean Absolute Error (MAE)
    ranging 0.877–0.972, 0.844–0.962, 0.129–0.292, 0.294–0.644 mm d−1, 0.244–0.566
    mm d−1 for internal strategy and 0.797–0.927, 0.786–0.920, 0.162–0.335, 0.409–0.969
    mm d−1, 0.294–0.699 mm d−1 for external strategy. Specifically, Rn-based MA-CNN-BiLSTM
    excelled in the temperate continental zone (TCZ) and mountain plateau zone (MPZ),
    while RH-based MA-CNN-BiLSTM yielded best precision in others. Furthermore, the
    internal strategy was superior to external strategy by 2.74–106.04% for R2, 1.11–120.49%
    for NSE, 1.41–40.27% for RRMSE, 1.68–45.53% for RMSE, and 1.21–38.87% for MAE,
    respectively. In summary, the main contribution of the present study is the proposal
    of a novel LSTM-type ET0 model (MA-CNN-BiLSTM) to cope with various data-missing
    scenarios throughout China, which can provide effective support for decision-making
    in regional agriculture water management. Previous article in issue Next article
    in issue Keywords Hybrid deep learning modelMultivariate Adaptive Regression SplinesEmpirical
    modelLimited meteorological inputCross-validation strategy Nomenclature Abbreviations
    AI Artificial Intelligence ANN Artificial Neural Network BiLSTM Bidirectional
    Long Short-Term Memory network CMA China Meteorological Administration CNN-BiLSTM
    Convolutional bidirectional Long Short-Term Memory network CNN-LSTM Convolutional
    Long Short-Term Memory network DBN-LSTM Deep Belief Network-Long Short-Term Memory
    network DL Deep Learning Models ET Evapotranspiration ET0 Reference crop evapotranspiration
    FAO Food and Agriculture Organization of the United Nations GAN-LSTM Generative
    Adversarial Network-Long Short-Term Memory network GCV Generalized Cross-validation
    Criterion GEP Gene Expression Programming GPI Global Performance Indicator GRNN
    Generalized regression neural network HS Hargreaves-Samani model LSTM Long Short-Term
    Memory network MA Multi-Head Attention mechanism MA-CNN-BiLSTM CNN-BiLSTM model
    with Multi-Head Attention mechanism MAE Mean Absolute Error MARS Multivariate
    Adaptive Regression Splines ML Machine Learning models MLP Multilayer Perceptron
    MLSTM Multilayer Long Short-Term Memory neural network MPZ Mountain Pateau Zone
    NSE Nash–Sutcliffe efficiency coefficient PM Penman-Monteith equation PLS Partial
    Least Squares PT Priestley-Taylor R2 Determination coefficient RF Random Forest
    RMSE Root Mean Square Error RNN Recursive Neural Network Rom Romanenko model RRMSE
    Relative Root Mean Square Error SMZ Subtropical Monsoon Zone SVM Support Vector
    Machine SVR Support Vector Regression TCZ Temperate Continental Zone TML Traditional
    Machine Learning models TMZ Temperate Monsoon Zone XGBoost eXtreme Gradient Boosting
    Variables aPT, aRom, aHS, bHS The parameters of empirical ET0 model bn Bias vector
    bk The offset term of the convolution kernel C(M) Penalty function d The penalty
    for each basis function ea Actual vapor pressure es Saturation vapor pressure
    f Activation function Ft Forget gate. The output result of first convolution layer
    The output result of first pooling layer G Soil heat flux density GIj The normalized
    value of accuracy indicators GImedian The median of the GIj Hmt The input values
    of the current memory block It Input gate Kc Crop coefficient km The number of
    divisions of the basis function M The number of basis functions m The number of
    statistical indicators n Sunshine duration Ot Output gate P Atmospheric pressure
    Pre Precipitation Ra Extraterrestrial radiation ReLU The activation function RH
    Relative humidity Rn Net solar radiation Skm Indicator of the polarity of the
    step function St Cell state Ta Average air temperature tanh Hyperbolic tangent
    activation function Tmax Maximum air temperature Tmin Minimum air temperature
    Tdew Dew point temperature u2 Wind speed at 2 m Ut Update gate v(k,m) Risk factors
    W The weight matrix xi The daily ET0 values by PM equation at the i-th time step
    yi The daily ET0 values by other ET0 model at the i-th time step Yt The output
    variables of the current memory cell γ The psychometric constant Δ Slope of the
    saturation vapor pressure function σ Sigmoid activation function The iterative
    computation of forward layer The iterative computation of backward layer 1. Introduction
    Evapotranspiration (ET) plays a pivotal role in Earth''s water cycle, exerting
    profound effects on ecological and agricultural water management (Ma et al., 2023).
    However, the direct ET measurements are severely limited to enormous expenses
    and technical complexities (Gonzalez et al., 2023). As an alternative solution,
    the crop coefficient approach was proposed to quantify ET, and Penman-Monteith
    (PM) equation has been strongly recommended by Food and Agriculture Organization
    of the United Nations (FAO) as a standard reference crop evapotranspiration (ET0)
    model (Allen et al., 1998). Nevertheless, the application of PM is constrained
    by its heavy reliance on numerous meteorological variables (Lu et al., 2023).
    Therefore, it becomes imperative to investigate simpler methods to estimate ET0
    accurately with fewer data requirements. During the last few decades, numerous
    researchers have made efforts to establish simpler empirical ET0 methods using
    fewer meteorological variables, such as temperature-based (T-based), radiation-based
    (Rn-based), and humidity-based (RH-based) models, which provide viable alternatives
    to the PM equation (Kim et al., 2023, Valipour et al., 2023). Furthermore, the
    various types of empirical ET0 models have extensive applications, exhibiting
    substantial accuracy variations (Su et al., 2022). In addition, numerous research
    indicates that their applicability and accuracy are further influenced by geographical
    and climatic conditions due to their unilateral assumptions and simplified structure
    (Liu et al., 2017, Yang et al., 2021b). Thus, exploring and developing high-accuracy
    ET0 estimation models using limited meteorological variables is imperative, particularly
    in China with diverse geographical and complex climatic zones. With the rapid
    advancements of computer technology recently, estimating ET0 has been recognized
    as a complex nonlinear regression problem that can be addressed through various
    artificial intelligence models (AI models), including traditional machine learning
    models (TML) and deep learning models (DL) (Yaseen et al., 2019). Despite TML
    models having achieved successful application in this field, DL models performed
    better with multiple hidden layers and possess the capability to capture intricate
    nonlinear relationships between ET0 and meteorological variables (Fan et al.,
    2021b). However, the characteristics of time-series problem are insufficiently
    considered by most AI models, and historical meteorological information has not
    been fully utilized to solve the problem of ET0 estimation (Hua et al., 2019,
    Mehdizadeh et al., 2020). Notably, the Long Short-Term Memory network (LSTM) was
    specially developed to handle long time-series problems using the “memory cell”
    structure and four gate control mechanisms as the most famous main-stream DL model,
    which can selectively retain or forget historical information to capture long-term
    patterns and trends (Guo et al., 2023, Mandal and Chanda, 2023, Niu et al., 2023).
    Although the classical LSTM model has been widely applied in the fields of ET0
    estimation, it still suffers from challenges related to long-term dependencies
    and overfitting in practical applications (Datta and Faroughi, 2023, Yan et al.,
    2023). Remarkably, several LSTM-type variants have been proposed to tackle these
    limitations. Regarding structure refinements in the LSTM model, Joseph et al.
    (2023) developed the bidirectional LSTM (BiLSTM) model by incorporating the forward
    and backward propagation layer for wind speed prediction. Another variant pattern
    of LSTM involves coupling multiple modules to harness their unique strengths (Wan
    et al., 2023, Yao et al., 2023, Zha et al., 2022). Based on the Convolutional
    LSTM model (CNN-LSTM), Elmaz et al. (2021) predicated the indoor temperature predictions
    in Belgium, demonstrating superior performance over LSTM. Furthermore, it is noteworthy
    that the successful introduction of the Attention mechanism enables LSTM to concentrate
    on data segments relevant to the current task during the modification of LSTM
    (Ren et al., 2021). Evolving from the foundation of the attention mechanism, the
    Multi-Head Attention (MA) mechanism significantly enhanced modeling capabilities,
    effectively captured stronger long-range dependencies, and adaptability to multi-modal
    data (Lin et al., 2020, Niu et al., 2021). Moreover, the MA mechanism could allow
    LSTM to concentrate on different segments of the input sequence and acquisition
    interrelationships simultaneously, which facilitates the capture of long-range
    dependencies and global contextual information within the input sequence (Niu
    et al., 2021). Thus, it has been widely regarded as a pivotal highlight in LSTM
    modifications which hold significant practical value in addressing diverse complex
    sequence modeling problems. However, the technology of comprehensively integrating
    these excellent improvement patterns into LSTM for addressing multi-dimensional
    nonlinear regression problems has not yet emerged hitherto. In addition to the
    specific characteristic of the model itself, data preprocessing has a significant
    impact on the estimation results, which includes input selection and dataset partition
    (Choubin and Malekian, 2017). Mohammadi and Mehdizadeh (2020) once conducted highly
    appreciated research that various pre-processing techniques were applied to determine
    inputs for Support Vector Regression. In addition, another acceptable approach
    to selecting meteorological inputs is to align with empirical ET0 models to evaluate
    AI models under the same data deficiency scenario (Feng et al., 2016, Maroufpoor
    et al., 2020). Furthermore, the accuracy, reliability, and generalization of model
    heavily rely on available data, which relates to the dataset partition (Maier
    et al., 2023, Mohammadi and Mehdizadeh, 2020). Typically, the proportion between
    the train and test dataset was recommended as 4:1 or 3:2 (Addor and Melsen, 2019,
    Jiang et al., 2022), However, the specific proportion of the partitioning method
    leads to inefficient data utilization, and the partitioning bias and contingency
    significantly affect the reliability and stability (Martí and Gasque, 2010). Since
    larger training datasets bring more robust and accurate performance, an alternative
    but beyond approach for data-splitting is cross validation, where models are trained
    and tested on multiple data subsets, enabling each available data can be used
    for both development and validation at least once (Craven and Wahba, 1978). Generally,
    the cross validation method mainly includes internal and external cross validation
    strategies that split the entire dataset from a temporal and spatial perspective,
    respectively (Shiri et al., 2014). The internal strategy provided efficient data
    utilization forms for local feature estimation when there are only single sites
    or significant differences between sites (Roy and Saha, 2022). Notably, although
    the internal strategy generally excels in accuracy performance due to data-similarity
    characteristics at the same site, the external strategy brings better generalization
    and transferability (Fan et al., 2018, Mehdizadeh, 2018). Furthermore, the external
    strategy is particularly important when the local data is not available as input
    at the research station. Similarly, Mohammadi et al. (2020) also concluded that
    the nearby station can be used for temperature estimation at the desired station.
    Since both strategies have advantages and disadvantages due to different application
    values and scenarios, it is necessary to simultaneously employ them for testing
    ET0 models. Thus, the concern is justified regarding the comparison between internal
    and external strategies impute to the complex climatic regions of China, which
    is still not systematically studied nationwide. China boasts a world-leading population
    and agricultural scale as a developing country, but outdated water resource management
    significantly hampers agricultural productivity, food security, and sustainable
    development. In addition, the meteorological stations of China are extremely insufficient
    in contrast to complex climate conditions. As of 2022, China has approximately
    2000 National Meteorological Stations as low as two stations per 104 km2. There
    are only 90 stations observe solar radiation since 1994, but almost all have long-term
    historical data on air temperature and humidity (Fan et al., 2019). Given substantial
    disparities in climatic conditions and data across China, it is imperative to
    develop a highly precise, exceptionally adaptable, and readily accessible ET0
    model under internal and external cross validation strategies. Hence, the primary
    objectives of this study are as follows: (1) to analyze the spatiotemporal variations
    of average air temperature (Ta), sunshine duration (n), precipitation (Pre), relative
    humidity (RH), wind speed at 2 m (u2), and ET0; (2) to develop an LSTM-type ET0
    model (MA-CNN-BiLSTM), which incorporates Multi-Head Attention mechanism (MA),
    Convolutional Neural Network (CNN), and Bidirectional Long Short-Term Memory network
    (BiLSTM) as intricate relationship processor, feature extractor, and regression
    component; (3) to carry out a national-scale evaluation of empirical, MARS, LSTM,
    BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM models with limited meteorological inputs
    in estimating ET0 across four climatic zones of China; (4) to analyze the spatial
    accuracy of the highly recommended ET0 models utilizing incomplete meteorological
    inputs under internal and external cross validation strategies. Finally, this
    study could provide the best-recommended ET0 estimated method for agricultural
    water management under various meteorological data deficiency scenarios in the
    different climatic regions of China. Literature review reveals that the AI-based
    models have been extensively applied to estimate ET0, but the LSTM-type models
    which comprehensively consider structural modification, multi-module coupling,
    and attention mechanism have been rarely reported in this field. The main contribution
    of the present study is the proposal of a novel LSTM-type ET0 estimation model
    (MA-CNN-BiLSTM) to cope with various data-missing scenarios in different climatic
    zones of China. 2. Materials and methods 2.1. Site description and data collection
    China is divided into four climatic zones based on temperature, precipitation,
    and altitude (Fan et al., 2018), including the temperate continental zone (TCZ),
    mountain plateau zone (MPZ) temperate monsoon zone (TMZ), and subtropical monsoon
    zone (SMZ) (Song et al., 2011). In the TCZ, MPZ, TMZ, and SMZ, the average annual
    precipitation values are 269 mm, 382 mm, 585 mm, and 1320 mm, respectively, while
    the corresponding average annual pan evaporation values are 2148 mm, 1883 mm,
    1475 mm, and 1545 mm. And the corresponding average altitude is 912 m, 4236 m,
    288 m, and 611 m in these zones, respectively (Fan et al., 2018, Xing et al.,
    2023b). The China Meteorological Administration (CMA) has collected daily meteorological
    data, including maximum air temperature (Tmax), average air temperature (Ta),
    minimum air temperature (Tmin), air relative humidity (RH), sunshine duration
    (n), wind speed at 2 m (u2), precipitation (Pre) and atmospheric pressure (P),
    which has maintained strict quality control measures to ensure the precision and
    reliability of the observed meteorological data (Fan et al., 2021a, Shu et al.,
    2022). This study obtained the daily meteorological data in 600 stations from
    CMA during 1961–2020, with 90 stations in TCZ, 50 stations in MPZ, 175 stations
    in TMZ, and 285 stations in SMZ (Fig. 1). Additionally, the data underwent further
    quality control based on the methods described by Liu et al. (2009) and Fan et
    al. (2018), as well as the average rate of omissions in this dataset was 1.5%
    (Table S1 offers specific details regarding the 600 meteorological stations).
    Download : Download high-res image (346KB) Download : Download full-size image
    Fig. 1. The location of 600 meteorological stations in the four climatic zones
    of mainland China. Notes: TMZ, TCZ, MPZ, and SMZ are temperate monsoon, temperate
    continental, mountain plateau, and subtropical monsoon zone, respectively. 2.2.
    Penman-Monteith equation Based on the FAO-56, the Penman-Monteith (PM) equation
    was employed for computing reference crop evapotranspiration (ET0) in the following
    formula (Allen et al., 1998): (1) where Δ and γ represent the slope of the saturation
    vapor pressure function and the psychometric constant, kPa ℃−1; Rn and G refer
    to the net radiation and soil heat flux density, MJ m−2 d–1; Ta represents the
    average air temperature, °C; u2 is the wind speed at 2 m, m s−1; es and ea represent
    the saturation and actual vapor pressure, kPa. 2.3. Empirical ET0 models In order
    to analyze the performance of simplified empirical ET0 models in substituting
    PM, the present study employed the Priestley-Taylor (radiation-based), Romanenko
    (humidity-based), and Hargreaves-Samani (temperature-based) to estimate ET0 in
    four climatic zones of China. Their detailed information is presented as follows.
    Priestley-Taylor model: Priestley and Taylor (1972) proposed the physically-based
    Priestley-Taylor model (PT), expressed as follows: (2) where λ is the latent heat
    of vaporization that changes the unit of solar radiation from MJ m−2 day−1 to
    mm day−1; aPT refers to empirical parameters, which were initially set as 1.26.
    Romanenko model: Romanenko (1961) introduced the representative aerodynamic model
    for estimating ET0, expressed as follows: (3) where aRom was initially set as
    4.5. Hargreaves-Samani model: The widely applied Hargreaves-Samani model (HS)
    was proposed by Hargreaves and Samani (1985), expressed as follows: (4) where
    aHS and bHS were initially set as 0.0023 and 0.5, respectively. 2.4. Multivariate
    Adaptive Regression Splines Friedman (1991) proposed a data-driven Multivariate
    Adaptive Regression Splines (MARS) model, which reveals hidden non-linear patterns
    in datasets and presents regression equations to estimate response variables by
    combining simple linear regressions (Chen et al., 2022b). Furthermore, MARS involves
    forward and backward steps. Specifically, the forward step incorporated a substantial
    quantity of the basis functions, resulting in the generation of a complex over-fitted
    model. Subsequently, MARS prunes basis functions that may have less impact on
    the estimation process in the backward step (Mehdizadeh et al., 2019). In this
    study, we chose MARS as the representative of the traditional machine learning
    model, and its mathematical formulation can be described as follows: (5) (6) where
    y is the dependent variable estimated by the MARS; a0 and am represent the two
    parameters of the basis function; km denotes the number of divisions of the basis
    function; M refers to the number of the basis functions; the value of Skm is constrained
    to either + 1 or − 1, serving as an indicator of the polarity of the step function;
    v(k,m) and tm represent the risk factors and threshold of each basis function,
    respectively; q is the power of basis function; denotes the basis function. Since
    Friedman and Roosen (1995) pointed the maximum number of basis functions and maximum
    degree of interactions were primary user-specified hyperparameters that impact
    the performance of MARS, this study tuned them using the grid search method according
    to Fan et al. (2019). Specifically, the maximum number of basis functions and
    maximum degree of interactions were set as 45 and 6 in this study, respectively.
    Moreover, the optimum MARS model was selected based on the lowest value of the
    generalized cross-validation (GCV) criterion, which can be expressed as follows:
    (7) where yi is the target output; f(xi) represents the estimated output; n is
    the number of the dataset; and C(M) is the penalty function which is expressed
    as: (8) where d is the penalty for each basis function. 2.5. Deep learning models
    This study compared the accurate performance of the developed novel deep learning
    model (MA-CNN-BiLSTM) to the Long Short-Term Memory network (LSTM), Bidirectional
    Long Short-Term Memory network (BiLSTM), and Convolutional Bidirectional Long
    Short-Term Memory network (CNN-BiLSTM) for ET0 estimation using Rn-based, RH-based,
    and T-based incomplete meteorological input combinations in accordance with the
    independent variables utilized in the three types of empirical ET0 models across
    China. 2.5.1. LSTM model The LSTM model, proposed by Hochreiter and Schmidhuber
    (1997), represents a new type of Recursive Neural Network (RNN) designed to grasp
    enduring dependencies in sequences through feedback connections. The fundamental
    essence of the LSTM model resides within its basic memory cell which introduces
    multiple gating mechanisms, comprising the input gate, forgetting gate, update
    gate, and output gate (Xie et al., 2020). These “gates” govern the information
    flow, empowering the model with the ability to judiciously disregard, retain,
    and convey information. Fig. 2 illustrates the basic memory cell architecture.
    Download : Download high-res image (69KB) Download : Download full-size image
    Fig. 2. Basic memory cell within the Long Short-Term Memory network. Notes: It,
    Ft, Ut, Ot, St, Y, σ, and tanh represent input gate, forget gate, updated gate,
    output gate, cell state, output variable, sigmoid activation function, and hyperbolic
    tangent activation function, respectively. The input gate determines whether the
    input value should be utilized to update the current memory block state, contributing
    to the adaptive acquisition and information retention for LSTM. (9) (10) where
    It is the input gate; σ and tanh represent the sigmoid and hyperbolic tangent
    activation functions, respectively; Ut represents the update gate; W and b represent
    the corresponding weight and paranoid vector, respectively; and Yt represents
    input and output values, respectively. The forget gate distinguishes between which
    prior information to discard and which to retain, thus managing long-term dependencies.
    (11) where Ft is the forget gate. The update gate enables LSTM to effectively
    balance the impact of recent and previous information during sequence data processing,
    thereby enhancing its proficiency in capturing patterns and dependencies within
    sequences. (12) where Ut is the update gate; St is the memory cell state. The
    output gate employs the sigmoid function to decide which would be conveyed through
    the model. (13) (14) where Ot is the output gate. This study iteratively tuned
    the LSTM hyperparameters using the Grid Search method, and the learning Rate,
    Batch Size, Dropout, regularization method, and the number of hidden units were
    set as 0.001, 32, 0.1, L1-regularization, and 128, respectively. Consistent with
    Mehdizadeh et al. (2019), the present study chose Root Mean Square Error (RMSE)
    as the fitness function. 2.5.2. MA-CNN-BiLSTM model The present study proposed
    a novel deep learning model denoted as MA-CNN-BiLSTM, which not only improves
    the original LSTM structure but also couples CNN and MA modules, with the primary
    objective of estimating ET0. Specifically, it combines the ability of CNN to capture
    local features and the capability of BiLSTM to learn long-term dependencies as
    well as temporal dynamics within inputs, while also incorporating the strengths
    of the MA mechanism to process intricate relationships. Furthermore, MA-CNN-BiLSTM
    encompasses three key components. The initial component is the CNN layer that
    employs convolutional operations for pattern and feature detection across various
    positions, thus effectively capturing the inherent local features and structures
    within input data. Subsequently, the MA mechanism layer, constituting the second
    component, further enhances the extraction of diverse features and relationships.
    Besides, this layer comprises multiple attention heads, wherein each head is adept
    at focusing on different segments of the input sequence and learning their relationships,
    which contributes to the capture of long-range dependencies and global contextual
    information within the input sequence. Finally, the third component is the BiLSTM
    layer which is proficient in capturing the context and enduring dependencies within
    input variables through forward and backward propagation. Hence, MA-CNN-BiLSTM
    is capable of effectively extracting features from different levels and perspectives,
    thereby precisely capturing contextual information. The following section offers
    a brief introduction to the CNN layer, MA layer, and BiLSTM layer. The structure
    for MA-CNN-BiLSTM is illustrated in Fig. 3. Download : Download high-res image
    (684KB) Download : Download full-size image Fig. 3. The structure of Convolutional
    bidirectional Long Short-Term Memory network with Multi-Head Attention mechanism
    (MA-CNN-BiLSTM). Notes: Ft and Yt represent the input and output, respectively;
    represent the forward and backward memory cells, respectively; represent the matrix
    coefficients; represents the output result of the first convolution layer; represents
    the output result of the second convolution layer; represents the output of the
    first pooling layer; represents the output of the second pooling layer; represents
    the offset term of the convolution kernel of the first convolution layer; represents
    the weight item of the first convolution layer; represents the offset term of
    the convolution kernel of the second convolution layer; represents the weight
    item of the second convolution layer; ReLU represents the activation function;
    Q, K, and V represent the query, key, and value, respectively; Softmax, Contact,
    and Linear represent the normalization, concat, and linear function, respectively.
    (1) Convolutional Neural Network Layer. The Convolutional Neural Network (CNN)
    was initially proposed by Lecun et al. (1998) as a feed-forward neural network
    that integrates convolutional computations (Dong et al., 2022, Lin et al., 2022,
    Yao et al., 2023). The standard CNN architecture consists of the input layer,
    convolutional layer, activation function layer, pooling layer, and output layer.
    It centers on convolving input data with convolutional kernels of diverse weights
    within the convolutional layers, facilitating the extraction of inherent data
    features. For the input matrix X = [x1, x2,…, xn] at time node t (t = 1, 2, …,
    T) can be expressed as Xt = , and the first convolution layer can be calculated
    as follows: (15) (16) where represents the output result of first convolution
    layer; ReLU represents the activation function; represents the offset term of
    the convolution kernel of first convolution layer; represents the weight item.
    Maximum pooling was selected by the first pooling layer, which can reduce the
    network complexity and retain the main features after convolution. The expression
    for the output result of the first pooling is as follows: (17) where represents
    the output result of first pooling layer; is the vector in the output of the first
    convolution layer, d1 ∈ m1. After the second convolution, the eigenvector can
    be obtained from the output result of the first pooling layer, which is expressed
    as follows: (18) where is the offset term of the convolution kernel in the second
    convolution layer; is the weight item. The output result of the second pooling
    layer is calculated as follows: (19) where is the output of the second pooling
    layer; is the vector output of the second convolution layer, d1 ∈ m1. Finally,
    the output eigenvector after twice convolution and pooling can be expressed as
    follows: (20) (2) Multi-head Attention mechanism. Multi-head attention (MA) is
    the variant of the attention mechanism that could assign diverse weights to distinct
    positions or segments during the processing of sequential data (Li et al., 2018).
    Besides, it allows the model to simultaneously focus on the different information
    from unknown representation subspaces. In addition, the MA mechanism relies on
    the Scaled Dot Product Attention calculation part to obtain the attention weights
    and the reconstructed attention matrix, which operates on queries (Q), keys (K),
    and values (V). The expression is as follows: (21) where dk is the key dimensionality;
    the softmax is a normalization function that is applied to obtain an attentional
    weight matrix. Subsequently, the MA mechanism acquires the attention representation
    from each head and connects the alternation results that are fed into the feedforward
    layer for further computation. Specifically, the attention function is executed
    in parallel with the projected versions of each Q, K, and V to produce the output
    values (Fu et al., 2024, Zhang and Wang, 2023). These values are concatenated
    by the Concat function and projected again to obtain the final value. The expression
    is as follows: (22) (23) where , , and are weight matrices; is weight matrix utilized
    within linear output function; the headi is the attention value of the ith head.
    (3) Bidirectional Long Short-Term Memory network Layer. The bidirectional Long
    Short-Term Memory network (BiLSTM) Layer incorporates the bidirectional recurrent
    framework into LSTM, which facilitates the bidirectional processing of sequences
    of data (Joseph et al., 2023). Besides, it can effectively learn and capture dependencies
    in both forward and backward directions, whereas LSTM is confined to learning
    dependencies merely in the forward direction (Bottieau et al., 2023). The BiLSTM
    layer possesses the capability to integrate two hidden layers into a unified output.
    The iterative computation of forward ( ) and backward ( ) layer output sequences
    involves utilizing forward and reverse inputs, respectively. Subsequently, the
    obtained outputs (utp) are amalgamated before advancing to the next layer, following
    the formula provided below: (24) This study iteratively tuned the MA-CNN-BiLSTM
    hyperparameters using the Grid Search method, which is an automated hyperparameter
    optimization method that can comprehensively search for the optimal combination
    of hyperparameters for machine learning models in the solution space (Fan et al.,
    2019, Fayed and Atiya, 2019, Qu et al., 2021). In the CNN layer, the number of
    convolutional layers and filters were set as 2 and 16, respectively. Besides,
    the size of the kernel in the convolutional layer was set as 3 × 3, the size of
    pooling operations was set as 2 × 2, and the type of pooling layer was Average-Pooling.
    In the MA mechanism layer, the number of heads and dropout rate were set as 6
    and 0.3. In the BiLSTM layer, the hyperparameters in the forward and backward
    layers were tuned in the same manner as described for the LSTM above. Moreover,
    the RMSE was employed as the fitness function for the MA-CNN-BiLSTM model. 2.6.
    Model implementation Considering that the existing simplified empirical ET0 methods
    mainly include Rn-based, RH-based, and T-based models, this study built three
    types of meteorological input combination aligned with the independent variables
    of corresponding empirical models to evaluate the AI-based ET0 models under the
    same data-deficiency scenario in four climatic zones of China. The input combinations
    and abbreviations for AI models are depicted in Table 1. Table 1. Input meteorological
    variable combinations and abbreviations for Artificial Intelligence models employed
    in this study. Type Model Input variables MARS LSTM BiLSTM CNN-BiLSTM MA-CNN-BiLSTM
    Rn-based MARS1 LSTM1 BiLSTM1 CNN-BiLSTM1 MA-CNN-BiLSTM1 Tmax, Tmin, Ta, n RH-based
    MARS2 LSTM2 BiLSTM2 CNN-BiLSTM2 MA-CNN-BiLSTM2 Tmax, Tmin, Ta, RH T-based MARS3
    LSTM3 BiLSTM3 CNN-BiLSTM3 MA-CNN-BiLSTM3 Tmax, Tmin, Ta Notes: MARS, LSTM, BiLSTM,
    CNN-BiLSTM, and MA-CNN-BiLSTM represent Multivariate Adaptive Regression Splines,
    Long Short-Term Memory network, Bidirectional Long Short-Term Memory network,
    Convolutional bidirectional Long Short-Term Memory network, and Multi-Head Attention
    Convolutional bidirectional Long Short-Term Memory network, respectively; Tmax,
    Tmin, and Ta are maximum, minimum, and average temperature, respectively, °C;
    n is the sunshine duration, hours; RH is the relative humidity. This study adopted
    both internal and external K-fold cross validation strategies for the implementation
    of empirical and AI models as follows: (1) During the process of internal cross
    validation strategy, the 60-year dataset (1961–2020) of each meteorological station
    was partitioned into five identical segments, where one segment (12 years) was
    allocated for validation whereas the other four segments (48 years) were for development
    (training/calibration). (2) During the process of external cross validation strategy,
    the stations within the same climatic zone were partitioned into two subsets based
    on the “leave-one-out” method (Shiri et al., 2015), where one station was used
    for validation whereas others were for development. Ultimately, the average value
    of multiple validation results served as the assessment criteria for ET0 models.
    Besides, this study employed the Partial Least Squares method (PLS) for parameter
    calibration of empirical models under internal and external K-fold cross validation
    strategies, respectively, and the final results can be roughly considered as the
    temporal and spatial recommended values. 2.7. Model evaluation In this study,
    we accepted the calculated values by the FAO-PM equation as the benchmark since
    it is generally considered the most standard ET0 calculation method worldwide
    (Dong et al., 2022, Fan et al., 2021a, Feng et al., 2016, Martí et al., 2015,
    Xing et al., 2023b). Furthermore, this study employed six statistical accuracy
    indicators to comprehensively evaluate the estimation performance of the different
    ET0 models, including the Determination Coefficient (R2), Nash–Sutcliffe efficiency
    coefficient (NSE), Relative Root Mean Square Error (RRMSE), Root Mean Square Error
    (RMSE), Mean Absolute Error (MAE), and Global Performance Indicator (GPI), which
    can be expressed as follows: (25) (26) (27) (28) (29) (30) where xi and are the
    daily ET0 values computed using PM equation and corresponding mean values at the
    i-th time step, respectively; yi and are the daily ET0 values obtained by the
    other model and the corresponding mean values at ith time step; GIj refers to
    the normalized value of R2, NSE, RRMSE, RMSE, and MAE, respectively; GImedian
    denotes the median of the GIj; m denotes the number of statistical indicators;
    To calculate R2 and NSE, the value of αj is assigned 1, whereas, for RRMSE, RMSE,
    and MAE, it is assigned − 1. Using the GPI, the different ET0 models were ranked
    in terms of their overall accuracy. 3. Results 3.1. Spatiotemporal variations
    of meteorological features Fig. 4 presents the spatial distributions and temporal
    trends in the average annual values of Ta, n, Pre, RH, u2, and ET0 in China from
    1961–2020. To be specific, Fig. 4a shows that the averaged annual Ta generally
    increased from north to south, ranging from − 1.8 ℃ to 24.4 ℃. Temporally, Ta
    exhibited an increasing trend, with significant increasing trends, increasing
    trends, significant decreasing trends, and decreasing trends at 572, 21, 2, and
    5 stations, respectively. Conversely, the spatially averaged annual n decreased
    from north to south with values of 1010 − 3478 h (Fig. 4b). Temporally, n displayed
    a decreasing trend, with significant increasing trends, increasing trends, significant
    decreasing trends, and decreasing trends at 17, 58, 409, and 116 stations, respectively.
    Download : Download high-res image (890KB) Download : Download full-size image
    Fig. 4. Spatiotemporal trend in average annual meteorological features during
    1961–2020 throughout China. Notes: TMZ, TCZ, MPZ, and SMZ are temperate monsoon,
    temperate continental, mountain plateau, and subtropical monsoon zone, respectively;
    ▲, ▼, △, and ▽ represent significant increasement (P < 0.05), significant decreasement
    (P < 0.05), general increasement, and general decreasement, respectively. Fig.
    4c-d indicates that the spatially averaged annual Pre and RH increased from north
    to south, ranging from 17 − 2273 mm and 30 − 87%, respectively. Temporally, Pre
    showed an increasing trend, with 67 stations displaying significant increasing
    trends, 302 stations displaying increasing trends, 14 stations displaying significant
    decreasing trends, and 217 stations displaying decreasing trends. Conversely,
    the RH exhibited a decreasing trend, with significant increasing trends, increasing
    trends, significant decreasing trends, and decreasing trends at 41, 103, 276,
    and 180 stations, respectively. Fig. 4e illustrates that the highest averaged
    annual u2 values occurred in the northeast and northwest, whereas the lowest values
    occurred in the southwest, ranging from 0.52 − 5.46 m s−1. Temporally, u2 showed
    a decreasing trend, with significant increasing trends, increasing trends, significant
    decreasing trends, and decreasing trends at 50, 50, 413, and 87 stations. Moreover,
    the highest averaged annual ET0 values were observed in the northwest, whereas
    the lowest values were observed in the northeast and southwest, ranging from 560 − 1646 mm
    (Fig. 4f). Temporally, ET0 displayed a decreasing trend, with significantly increasing
    trends, increasing trends, significant decreasing trends, and decreasing trends
    at 97, 150, 159, and 194 stations, respectively. 3.2. Accuracy performance of
    radiation-based models For the empirical models, this study used the PLS method
    to locally calibrate their parameters at 600 stations in four climatic zones of
    China, as listed in Table 2. As shown in Table 3, Table 4, the median values of
    R2, NSE, RRMSE, RMSE, and MAE by calibrated PT under internal cross validation
    strategy were 0.613–0.809, 0.594–0.761, 0.318–0.529, 0.725–1.299 mm d−1, and 0.620–1.193 mm
    d−1, respectively. Furthermore, Fig. 5 illustrates the boxplots of R2, NSE, RRMSE,
    RMSE, and MAE values acquired by different Rn-based ET0 models to investigate
    accuracy disparities between empirical and AI models under internal strategy.
    Notably, the MA-CNN-BiLSTM1 was proven to be the best Rn-based ET0 model throughout
    China, with the R2, NSE, RRMSE, RMSE, and MAE ranging 0.932–0.972, 0.912–0.962,
    0.129–0.200, 0.294–0.442 mm d−1, and 0.244–0.363 mm d−1, respectively. Compared
    to other Rn-based models, the corresponding improvement values by MA-CNN-BiLSTM1
    ranging 1.15–52.57% for R2, 1.01–53.62% for NSE, 11.45–62.16% for RRMSE, 12.33–65.99%
    for RMSE, and 11.83–69.55% for MAE, respectively. Despite all LSTM-type models
    performing better than MARS and PT, the MA-CNN-BiLSTM1 was improved most by 13.64–52.57%
    for R2, 15.44–53.62% for NSE, 44.89–62.16% for RRMSE, 50.01–65.99% for RMSE, and
    48.71–69.55% for MAE, respectively. In addition, the MA-CNN-BiLSTM1 was superior
    to other LSTM-type models by 1.15–14.15% for R2, 1.04–15.95% for NSE, 11.45–43.91%
    for RRMSE, 12.33–46.45% for RMSE, and 11.83–45.02% for MAE, respectively. Besides,
    the results also illustrate that the BiLSTM performed better than the original
    version of LSTM, while BiLSTM was further significantly improved by the CNN module.
    Compared to original LSTM, the CNN-BiLSTM and BiLSTM were improved by 5.27–10.02%
    and 2.02–5.75% for R2, 5.75–10.76% and 2.18–6.33% for NSE, 16.70–28.26% and 4.13–20.42%
    for RRMSE, 20.35–26.91% and 9.74–17.17% for RMSE, and 18.94–29.11% and 4.19–19.46%
    for MAE, respectively. Table 2. The calibrated parameters of empirical models
    by PLS method under internal and external cross-validation strategies in the four
    climatic zones of China. Type Model Parameter Internal strategy External strategy
    TCZ MPZ SMZ TMZ TCZ MPZ SMZ TMZ Rn-based PT aPT 1.532 ± 0.074 0.93 ± 0.016 1.022 ± 0.060
    1.232 ± 0.123 1.512 ± 0.038 0.937 ± 0.030 1.100 ± 0.088 1.315 ± 0.117 RH-based
    Rom aRom 4.164 ± 0.213 4.291 ± 0.268 4.159 ± 0.226 4.460 ± 0.429 4.231 ± 0.258
    4.041 ± 0.152 4.471 ± 0.138 4.298 ± 0.348 T-based HS aHS 0.0025 ± 0.0001 0.0024 ± 0.0001
    0.0021 ± 0.0001 0.0023 ± 0.0001 0.0026 ± 0.0002 0.0025 ± 0.0001 0.0022 ± 0.0001
    0.0024 ± 0.0001 bHS 0.470 ± 0.017 0.486 ± 0.013 0.439 ± 0.011 0.452 ± 0.015 0.469 ± 0.019
    0.484 ± 0.012 0.450 ± 0.019 0.464 ± 0.014 Notes: TMZ, TCZ, MPZ, and SMZ are temperate
    monsoon, temperate continental, mountain plateau, and subtropical monsoon zone,
    respectively; a ± b represent the mean and standard deviation of empirical parameters
    across multiple stations; Rn, RH, and T represent solar radiation, air humidity,
    and air temperature, respectively. Table 3. Accuracy results for three types of
    ET0 models at 600 stations under internal cross-validation strategy in the TCZ
    and MPZ. Type Model TCZ MPZ R2 NSE RRMSE RMSE MAE GPI Rank R2 NSE RRMSE RMSE MAE
    GPI Rank Rn-based MA-CNN-BiLSTM1 0.972 0.962 0.147 0.383 0.309 2.000 1 0.957 0.949
    0.129 0.294 0.244 2.000 1 CNN-BiLSTM1 0.961 0.953 0.166 0.438 0.351 1.809 2 0.924
    0.901 0.165 0.370 0.292 1.507 3 BiLSTM1 0.931 0.915 0.206 0.541 0.427 1.341 4
    0.912 0.884 0.183 0.414 0.332 1.259 4 LSTM1 0.913 0.896 0.215 0.599 0.446 1.109
    6 0.874 0.852 0.230 0.500 0.412 0.722 8 MARS1 0.855 0.821 0.289 0.768 0.604 0.165
    13 0.806 0.783 0.271 0.601 0.500 -0.143 12 PT 0.809 0.761 0.362 0.980 0.739 -0.779
    16 0.746 0.735 0.318 0.725 0.620 -0.903 16 RH-based MA-CNN-BiLSTM2 0.946 0.934
    0.179 0.485 0.381 1.588 3 0.938 0.921 0.148 0.334 0.264 1.735 2 CNN-BiLSTM2 0.927
    0.904 0.208 0.586 0.437 1.227 5 0.901 0.887 0.195 0.427 0.353 1.169 5 BiLSTM2
    0.900 0.879 0.233 0.630 0.461 0.943 8 0.898 0.851 0.207 0.450 0.376 0.956 6 LSTM2
    0.882 0.868 0.240 0.657 0.505 0.736 9 0.861 0.825 0.240 0.529 0.445 0.522 9 MARS2
    0.842 0.811 0.307 0.796 0.633 -0.059 14 0.761 0.748 0.293 0.677 0.560 -0.631 14
    Rom 0.758 0.657 0.432 1.430 1.024 -2.000 18 0.679 0.648 0.393 0.895 0.776 -2.000
    18 T-based MA-CNN-BiLSTM3 0.907 0.890 0.226 0.618 0.457 1.029 7 0.896 0.844 0.221
    0.471 0.397 0.850 7 CNN-BiLSTM3 0.881 0.862 0.254 0.689 0.529 0.646 10 0.843 0.811
    0.248 0.547 0.456 0.313 10 BiLSTM3 0.874 0.858 0.272 0.709 0.558 0.541 11 0.841
    0.810 0.266 0.583 0.484 0.190 11 LSTM3 0.862 0.850 0.284 0.738 0.591 0.385 12
    0.764 0.757 0.283 0.647 0.531 -0.502 13 MARS3 0.824 0.808 0.330 0.834 0.677 -0.288
    15 0.755 0.749 0.304 0.694 0.581 -0.720 15 HS 0.773 0.688 0.417 1.295 0.934 -1.653
    17 0.692 0.662 0.354 0.787 0.690 -1.598 17 Notes: TCZ and MPZ represent the temperate
    continental zone and mountain plateau zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM,
    BiLSTM, LSTM, MARS, PT, Rom, and HS represent the Multi-Head Attention Convolutional
    bidirectional Long Short-Term Memory network, Convolutional bidirectional Long
    Short-Term Memory network, Bidirectional Long Short-Term Memory network, Long
    Short-Term Memory network, Multivariate Adaptive Regression Splines, Priestley-Taylor
    equation, Romanenko equation, and Hargreaves-Samani equation, respectively; R2,
    NSE, RRMSE, RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe
    efficiency coefficient, Relative Root Mean Square Error, Root Mean Square Error,
    Mean Absolute Error, and Global Performance Indicator, respectively. Table 4.
    Accuracy results for three types of ET0 models at 600 stations under internal
    cross-validation strategy in the SMZ and TMZ. Type Model SMZ TMZ R2 NSE RRMSE
    RMSE MAE GPI Rank R2 NSE RRMSE RMSE MAE GPI Rank Rn-based MA-CNN-BiLSTM1 0.932
    0.916 0.200 0.442 0.363 1.637 2 0.936 0.912 0.194 0.427 0.347 1.731 2 CNN-BiLSTM1
    0.900 0.875 0.280 0.620 0.506 1.065 4 0.902 0.879 0.234 0.588 0.460 1.172 5 BiLSTM1
    0.865 0.840 0.298 0.667 0.575 0.724 7 0.866 0.848 0.274 0.673 0.565 0.683 8 LSTM1
    0.818 0.790 0.336 0.778 0.624 0.255 11 0.820 0.810 0.317 0.797 0.631 0.163 11
    MARS1 0.766 0.741 0.380 1.042 0.811 -0.536 14 0.800 0.790 0.352 0.882 0.710 -0.277
    14 PT 0.650 0.600 0.529 1.299 1.193 -2.000 18 0.613 0.594 0.420 1.142 0.959 -2.000
    18 RH-based MA-CNN-BiLSTM2 0.960 0.930 0.158 0.318 0.254 2.000 1 0.962 0.948 0.182
    0.395 0.300 2.000 1 CNN-BiLSTM2 0.927 0.903 0.255 0.563 0.427 1.379 3 0.918 0.897
    0.212 0.527 0.406 1.443 4 BiLSTM2 0.897 0.874 0.285 0.632 0.556 0.986 5 0.891
    0.876 0.264 0.648 0.522 0.918 7 LSTM2 0.858 0.829 0.310 0.697 0.581 0.630 8 0.863
    0.850 0.282 0.702 0.588 0.608 9 MARS2 0.768 0.751 0.366 0.950 0.778 -0.367 13
    0.810 0.798 0.350 0.880 0.692 -0.214 13 Rom 0.695 0.625 0.454 1.200 1.014 -1.487
    16 0.757 0.720 0.385 0.967 0.768 -0.850 16 T-based MA-CNN-BiLSTM3 0.877 0.865
    0.292 0.644 0.566 0.872 6 0.921 0.901 0.208 0.491 0.396 1.512 3 CNN-BiLSTM3 0.847
    0.832 0.315 0.725 0.609 0.546 9 0.892 0.881 0.254 0.619 0.486 1.028 6 BiLSTM3
    0.816 0.810 0.341 0.800 0.636 0.275 10 0.860 0.848 0.302 0.755 0.613 0.469 10
    LSTM3 0.788 0.750 0.353 0.879 0.732 -0.199 12 0.813 0.803 0.325 0.860 0.673 -0.035
    12 MARS3 0.758 0.736 0.382 1.088 0.827 -0.635 15 0.785 0.762 0.368 0.921 0.731
    -0.519 15 HS 0.673 0.618 0.483 1.231 1.061 -1.678 17 0.644 0.621 0.407 1.089 0.824
    -1.709 17 Notes: SMZ and TMZ represent the subtropical monsoon zone and temperate
    monsoon zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, PT,
    Rom, and HS represent the Multi-Head Attention Convolutional bidirectional Long
    Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory
    network, Bidirectional Long Short-Term Memory network, Long Short-Term Memory
    network, Multivariate Adaptive Regression Splines, Priestley-Taylor equation,
    Romanenko equation, and Hargreaves-Samani equation, respectively; R2, NSE, RRMSE,
    RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe efficiency
    coefficient, Relative Root Mean Square Error, Root Mean Square Error, Mean Absolute
    Error, and Global Performance Indicator, respectively. Download : Download high-res
    image (485KB) Download : Download full-size image Fig. 5. Boxplots of accuracy
    indicators achieved by radiation-based models under internal K-fold cross-validation
    strategy throughout China. Notes: R2, NSE, RRMSE, RMSE, MAE, PT, MARS, LSTM, BiLSTM,
    CNN-BiLSTM, and MA-CNN-BiLSTM represent the abbreviations of Determination coefficient,
    Nash-Sutcliffe efficiency, Relative Root Mean Square Errors, Root Mean Square
    Error (mm d−1), Mean Absolute Error (mm d−1), Priestley-Taylor, Multivariate Adaptive
    Regression Splines, Long Short-Term Memory network, Bidirectional Long Short-Term
    Memory network, Convolutional bidirectional Long Short-Term Memory network, and
    Multi-Head Attention Convolutional bidirectional Long Short-Term Memory network,
    respectively. Regarding the external strategy, Fig. 6 presents the scatter density
    plots of daily ET0 values estimated by the PM equation against Rn-based models
    across four climatic zones in China. As shown in Fig. 6, the external Rn-based
    LSTM-type models exhibited a lower dispersion degree compared to the external
    MARS and PT models. In this case, the calibrated “aPT” was 1.512, 0.937, 1.100,
    and 1.315 in TCZ, MPZ, SMZ, and TMZ, respectively (Table 2). Similar to the results
    under internal strategy, the MA-CNN-BiLSTM1 achieved the best performance among
    external Rn-based ET0 models throughout China, and R2, NSE, RRMSE, RMSE, and MAE
    values ranged 0.905–0.926, 0.883–0.920, 0.162–0.224, 0.409–0.585 mm d−1, and 0.294–0.396 mm
    d−1, respectively (Table 5, Table 6). Correspondingly, the improvement in R2,
    NSE, RRMSE, RMSE, and MAE were 4.21–55.28%, 4.02–97.89%, 14.45–68.57%, 14.30–70.15%,
    and 7.09–74.15%, respectively, compared to other external Rn-based models. Besides,
    the external CNN-BiLSTM1 and BiLSTM1 were superior to original LSTM1 by 6.41–11.57%
    and 3.13–6.74% for R2, 7.18–12.12% and 1.56–6.59% for NSE, 18.63–24.85% and 8.99–13.74%
    for RRMSE, 18.63–25.34% and 8.72–13.01% for RMSE, as well as 17.96–29.17% and
    4.19–18.40% for MAE. Download : Download high-res image (2MB) Download : Download
    full-size image Fig. 6. Scatter density plots of daily ET0 values estimated by
    the PM equation against radiation-based models under external K-fold cross-validation
    strategy throughout China. Notes: The color bars depict the relative point density
    in a circle area with a 0.1 mm radius. Table 5. Accuracy results for three types
    of ET0 models at 600 stations under external cross-validation strategy in the
    TCZ and MPZ. Type Model TCZ MPZ R2 NSE RRMSE RMSE MAE GPI Rank R2 NSE RRMSE RMSE
    MAE GPI Rank Rn-based MA-CNN-BiLSTM1 0.926 0.920 0.202 0.585 0.396 2.000 1 0.908
    0.901 0.162 0.409 0.294 2.000 1 CNN-BiLSTM1 0.890 0.875 0.246 0.712 0.502 1.533
    3 0.869 0.866 0.193 0.489 0.317 1.769 3 BiLSTM1 0.862 0.834 0.276 0.799 0.586
    1.186 4 0.840 0.835 0.214 0.541 0.371 1.548 5 LSTM1 0.836 0.815 0.303 0.878 0.612
    0.935 6 0.807 0.799 0.240 0.606 0.428 1.295 8 MARS1 0.751 0.744 0.406 1.178 0.874
    -0.115 12 0.721 0.704 0.315 0.798 0.588 0.599 13 PT 0.717 0.559 0.461 1.334 1.108
    -1.071 16 0.648 0.645 0.405 1.026 0.816 -0.140 16 RH-based MA-CNN-BiLSTM2 0.899
    0.897 0.239 0.691 0.467 1.672 2 0.887 0.886 0.183 0.462 0.311 1.866 2 CNN-BiLSTM2
    0.849 0.823 0.290 0.838 0.601 1.046 5 0.855 0.850 0.200 0.506 0.332 1.682 4 BiLSTM2
    0.814 0.807 0.354 1.023 0.715 0.565 7 0.825 0.791 0.239 0.606 0.427 1.315 7 LSTM2
    0.777 0.762 0.402 1.169 0.826 0.067 10 0.795 0.777 0.281 0.711 0.544 1.013 10
    MARS2 0.699 0.577 0.413 1.202 0.915 -0.681 14 0.707 0.684 0.316 0.801 0.606 0.530
    14 Rom 0.612 0.427 0.500 1.455 1.096 -1.746 17 0.467 0.419 0.447 1.137 0.856 -0.988
    17 T-based MA-CNN-BiLSTM3 0.797 0.786 0.335 0.969 0.699 0.552 8 0.832 0.809 0.233
    0.591 0.415 1.385 6 CNN-BiLSTM3 0.794 0.766 0.397 1.149 0.721 0.285 9 0.796 0.778
    0.280 0.709 0.503 1.045 9 BiLSTM3 0.765 0.761 0.405 1.173 0.837 0.007 11 0.775
    0.764 0.287 0.727 0.553 0.925 11 LSTM3 0.754 0.599 0.412 1.193 0.895 -0.450 13
    0.733 0.733 0.310 0.784 0.537 0.745 12 MARS3 0.685 0.564 0.429 1.243 0.922 -0.813
    15 0.666 0.662 0.388 0.981 0.782 0.030 15 HS 0.572 0.496 0.523 1.521 1.152 -1.859
    18 0.336 0.300 0.569 1.445 1.083 -2.000 18 Notes: TCZ and MPZ represent the temperate
    continental zone and mountain plateau zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM,
    BiLSTM, LSTM, MARS, PT, Rom, and HS represent the Multi-Head Attention Convolutional
    bidirectional Long Short-Term Memory network, Convolutional bidirectional Long
    Short-Term Memory network, Bidirectional Long Short-Term Memory network, Long
    Short-Term Memory network, Multivariate Adaptive Regression Splines, Priestley-Taylor
    equation, Romanenko equation, and Hargreaves-Samani equation, respectively; R2,
    NSE, RRMSE, RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe
    efficiency coefficient, Relative Root Mean Square Error, Root Mean Square Error,
    Mean Absolute Error, and Global Performance Indicator, respectively. Table 6.
    Accuracy results for three types of ET0 models at 600 stations under external
    cross-validation strategy in the SMZ and TMZ. Type Model SMZ TMZ R2 NSE RRMSE
    RMSE MAE GPI Rank R2 NSE RRMSE RMSE MAE GPI Rank Rn-based MA-CNN-BiLSTM1 0.925
    0.900 0.219 0.557 0.388 1.834 2 0.905 0.883 0.224 0.563 0.379 1.807 2 CNN-BiLSTM1
    0.876 0.865 0.284 0.760 0.507 1.354 4 0.858 0.844 0.262 0.657 0.463 1.274 5 BiLSTM1
    0.838 0.823 0.308 0.825 0.602 1.013 7 0.817 0.800 0.301 0.766 0.534 0.743 8 LSTM1
    0.785 0.772 0.349 0.934 0.694 0.576 10 0.787 0.787 0.349 0.880 0.654 0.286 11
    MARS1 0.708 0.643 0.396 1.060 0.985 -0.291 14 0.739 0.723 0.370 0.935 0.753 -0.392
    14 PT 0.619 0.455 0.698 1.869 1.505 -2.000 18 0.583 0.504 0.482 1.216 0.847 -2.000
    18 RH-based MA-CNN-BiLSTM2 0.927 0.918 0.171 0.458 0.328 2.000 1 0.913 0.909 0.207
    0.518 0.359 2.000 1 CNN-BiLSTM2 0.890 0.880 0.265 0.709 0.498 1.476 3 0.880 0.872
    0.252 0.658 0.469 1.448 3 BiLSTM2 0.844 0.837 0.305 0.817 0.591 1.077 6 0.846
    0.842 0.296 0.743 0.520 0.987 6 LSTM2 0.802 0.789 0.326 0.873 0.640 0.758 9 0.810
    0.808 0.343 0.865 0.602 0.449 9 MARS2 0.715 0.645 0.374 1.001 0.793 -0.058 13
    0.762 0.756 0.361 0.906 0.702 -0.092 12 Rom 0.658 0.554 0.495 1.328 1.273 -1.078
    16 0.686 0.684 0.461 1.164 0.810 -1.092 16 T-based MA-CNN-BiLSTM3 0.868 0.851
    0.301 0.779 0.578 1.224 5 0.872 0.869 0.270 0.678 0.494 1.320 4 CNN-BiLSTM3 0.815
    0.785 0.321 0.859 0.616 0.819 8 0.822 0.811 0.300 0.754 0.522 0.815 7 BiLSTM3
    0.772 0.757 0.354 0.948 0.699 0.488 11 0.804 0.803 0.344 0.868 0.632 0.410 10
    LSTM3 0.762 0.756 0.366 0.982 0.735 0.398 12 0.762 0.739 0.356 0.899 0.692 -0.106
    13 MARS3 0.705 0.642 0.415 1.114 1.003 -0.474 15 0.748 0.735 0.401 1.013 0.773
    -0.486 15 HS 0.653 0.546 0.512 1.374 1.354 -1.214 17 0.639 0.604 0.465 1.175 0.819
    -1.465 17 Notes: SMZ and TMZ represent the subtropical monsoon zone and temperate
    monsoon zone, respectively; MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, PT,
    Rom, and HS represent the Multi-Head Attention Convolutional bidirectional Long
    Short-Term Memory network, Convolutional bidirectional Long Short-Term Memory
    network, Bidirectional Long Short-Term Memory network, Long Short-Term Memory
    network, Multivariate Adaptive Regression Splines, Priestley-Taylor equation,
    Romanenko equation, and Hargreaves-Samani equation, respectively; R2, NSE, RRMSE,
    RMSE, MAE, and GPI represent the Determination Coefficient, Nash–Sutcliffe efficiency
    coefficient, Relative Root Mean Square Error, Root Mean Square Error, Mean Absolute
    Error, and Global Performance Indicator, respectively. In summary, MA-CNN-BiLSTM1
    attained the highest precision among Rn-based ET0 models under internal and external
    cross validation strategies across four climatic zones of China. Moreover, the
    Rn-based LSTM-type models present better performance than PT and MARS, whereas
    the BiLSTM1 and CNN-BiLSTM1 significantly improved the LSTM1 model. 3.3. Accuracy
    performance of humidity-based models Table 2 lists the calibrated parameter and
    accuracy result of empirical ET0 models in the four climatic zones of China. As
    shown in Table 3, Table 4, the median values of the calibrated Rom model ranged
    0.679–0.758 for R2, 0.625–0.720 for NSE, and 0.385–0.454 for RRMSE, 0.895–1.430 mm
    d−1 for RMSE, and 0.768–1.024 mm d−1 for MAE throughout China, respectively. Fig.
    7 further illustrates the boxplots of statistical indicators by RH-based ET0 models
    under internal strategy in four climatic zones of China. As shown in Fig. 7, the
    MA-CNN-BiLSTM2 achieved best performance using RH-based input throughout China,
    with median values of R2, NSE, RRMSE, RMSE, and MAE ranging 0.938–0.962, 0.921–0.948,
    0.148–0.182, 0.318–0.485 mm d−1, and 0.254–0.381 mm d−1, respectively. Correspondingly,
    the improvement values were 2.05–38.14% for R2, 2.99–48.81% for NSE, 14.01–65.30%
    for RRMSE, 17.14–73.46% for RMSE, and 12.62–74.89% for MAE, respectively, compared
    to other RH-based model (Table 3, Table 4). Despite the MA-CNN-BiLSTM2 improved
    the MARS2 and Rom mostly, all other LSTM-type models also have a superior performance
    that the median values of R2, NSE, RRMSE, RMSE, and MAE were improved by 8.25–47.03%,
    7.34–48.07%, 21.62–54.14%, 22.70–55.33%, and 20.44–57.61%, respectively. Moreover,
    the CNN module and bidirectional framework significantly improved the original
    LSTM model by 4.65–8.04% and 2.04–4.55% for R2, 4.15–8.93% and 1.27–5.43% for
    NSE, and 13.22–24.94% and 2.96–13.75% for RRMSE, 10.75–25.01% and 4.08–14.81%
    for RMSE, as well as 13.47–30.98% and 4.29–15.62% for MAE throughout China, respectively.
    Download : Download high-res image (486KB) Download : Download full-size image
    Fig. 7. Boxplots of accuracy indicators achieved by humidity-based models under
    internal K-fold cross-validation strategy throughout China. Notes: R2, NSE, RRMSE,
    RMSE, MAE, Rom, MARS, LSTM, BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM represent the
    abbreviations of Determination coefficient, Nash-Sutcliffe efficiency, Relative
    Root Mean Square Errors, Root Mean Square Error (mm d−1), Mean Absolute Error
    (mm d−1), Romanenko, Multivariate Adaptive Regression Splines, Long Short-Term
    Memory network, Bidirectional Long Short-Term Memory network, Convolutional bidirectional
    Long Short-Term Memory network, and Multi-Head Attention Convolutional bidirectional
    Long Short-Term Memory network, respectively. Similarly, the MA-CNN-BiLSTM2 was
    most recommended RH-based ET0 model under external strategy in four climatic zones
    of China, with the median values of R2, NSE, RRMSE, RMSE, and MAE ranging 0.887–0.927,
    0.886–0.918, 0.171–0.239, 0.458–0.691 mm d−1, and 0.311–0.467 mm d−1, respectively
    (Table 5, Table 6). As shown in Fig. 8, external MA-CNN-BiLSTM2 generated a higher
    concentration of ET0 estimation around the 1:1 line in comparison to other RH-based
    models. Correspondingly, the improvement were 3.69–89.94% for R2, 4.18–111.46%
    for NSE, 8.51–65.42% for RRMSE, 8.66–65.69% for RMSE, and 6.26–74.27% for MAE
    (Table 5, Table 6). Furthermore, all external LSTM-type models were superior to
    Rom and MARS with lower dispersion degree in Fig. 8, and the R2, NSE, RRMSE, RMSE,
    and MAE were improved by 6.22–89.94%, 6.92–111.46%, 2.72–65.42%, 4.27–65.49%,
    and 9.77–74.27%. Consistent with internal strategy, the external CNN-BiLSTM2 and
    BiLSTM2 outperformed original external LSTM2 model with improved R2, NSE, RRMSE,
    RMSE, and MAE ranging 3.71–10.96%, 1.85–11.56%, 6.44–28.83%, 12.45–30.02%, and
    7.54–38.90%, respectively. Besides, the calibrated parameter and accuracy of Rom
    under external strategy were listed in Table 5, Table 6 that the median values
    of R2, NSE, RRMSE, RMSE, and MAE ranging 0.467–0.686, 0.419–0.684, 0.447–0.500,
    1.137–1.455 mm d−1, and 0.810–1.273 mm d−1 throughout China, respectively. Download
    : Download high-res image (2MB) Download : Download full-size image Fig. 8. Scatter
    density plots of daily ET0 values estimated by the PM equation against humidity-based
    models under external K-fold cross-validation strategy throughout China. Notes:
    The color bars depict the relative point density in a circle area with a 0.1 mm
    radius. In summary, MA-CNN-BiLSTM2 demonstrated the most outstanding accuracy
    among the RH-based models under both the internal and external K-fold cross validation
    strategies in ET0 estimation across all four climatic zones. Moreover, all RH-based
    LSTM-type models surpassed the empirical model (Rom) and machine learning model
    (MARS), whereas the BiLSTM2 and CNN-BiLSTM2 significantly improved LSTM2. 3.4.
    Accuracy performance of temperature-based models Fig. 9 presents boxplots showcasing
    the statistical indicators obtained by different T-based models under the internal
    cross validation strategy, which revealed significant accuracy variability existed
    across different regions of China. Notably, all internal T-based AI models consistently
    outperformed the internal HS model, as listed in Table 3, Table 4, showcasing
    substantial improvements of 0.879–3.221 for GPI across all climatic zones in China.
    Wherein the internal LSTM-type models demonstrated remarkable accuracy enhancements
    by 1.19–18.68%, 1.95–18.24%, 6.91–43.48%, 6.67–46.77%, and 7.93–45.82% throughout
    China, in comparison with internal MARS3. Besides, MA-CNN-BiLSTM3 exhibited the
    highest level of accuracy among internal LSTM-type models, supported by corresponding
    values ranging 0.877–0.921 for R2, 0.844–0.901 for NSE, 0.208–0.292 for RRMSE,
    0.471–0.644 mm d−1 for RMSE, and 0.396–0.566 mm d−1 for MAE, respectively. Correspondingly,
    internal MA-CNN-BiLSTM3 outperformed the other LSTM-type models with improvements
    values ranging 2.95–17.28% for R2, 2.27–15.28% for NSE, 7.30–35.99% for RRMSE,
    10.27–42.96% for RMSE, and 7.15–41.15% for MAE throughout China, respectively.
    Hence, the internal MA-CNN-BiLSTM3 stood out as the highly recommended internal
    ET0 estimating T-based model across all four climatic zones. Regarding calibrated
    HS equation as shown in Table 3, Table 4, the median values of R2, NSE, RRMSE,
    RMSE, and MAE ranged 0.644–0.773, 0.618–0.688, 0.354–0.483, 0.787–1.295 mm d−1,
    and 0.690–1.061 mm d−1, respectively, with the calibrated values of parameter
    “aHS” and “bHS” ranging 0.0021–0.0025 and 0.439–0.486 throughout China (Table
    2). Download : Download high-res image (482KB) Download : Download full-size image
    Fig. 9. Boxplots of accuracy indicators achieved by temperature-based models under
    internal K-fold cross-validation strategy throughout China. Notes: R2, NSE, RRMSE,
    RMSE, MAE, HS, MARS, LSTM, BiLSTM, CNN-BiLSTM, and MA-CNN-BiLSTM represent the
    abbreviations of Determination coefficient, Nash-Sutcliffe efficiency, Relative
    Root Mean Square Errors, Root Mean Square Error (mm d−1), Mean Absolute Error
    (mm d−1), Hargreaves-Samani, Multivariate Adaptive Regression Splines, Long Short-Term
    Memory network, Bidirectional Long Short-Term Memory network, Convolutional bidirectional
    Long Short-Term Memory network, and Multi-Head Attention Convolutional bidirectional
    Long Short-Term Memory network, respectively. Fig. 10 illustrates the scatter
    density plots of the daily ET0 values estimated by the PM equation against T-based
    models under the external K-fold cross validation strategy across four climatic
    zones. As shown in Fig. 10, the external T-based AI models exhibited a lower dispersion
    of data points compared to the external T-based empirical model (HS), and external
    T-based LSTM-type models showed a higher concentration of ET0 estimation closely
    aligned with the 1:1 line, outperforming external MARS3. Table 5, Table 6 list
    the specific statistical indexes for external T-based models, which further proved
    that the external T-based LSTM-type models displayed remarkable superiority over
    HS and MARS by 1.359–3.385 and 0.363–1.806 for GPI. Notably, the external MA-CNN-BiLSTM3
    obtained the best performance, with corresponding R2, NSE, RRMSE, RMSE, and MAE
    values ranging 0.797–0.872, 0.786–0.869, 0.233–0.335, 0.591–0.969 mm d−1, and
    0.415–0.699 mm d−1, respectively. Besides, the accuracy of external MA-CNN-BiLSTM3
    surpassed the three external T-based LSTM-type models by 1.13–14.51% for R2, 2.56–31.22%
    for NSE, 6.23–24.50% for RRMSE, 9.35–25.36% for RMSE, and 2.88–28.61% for MAE
    in TCZ throughout China, respectively. Regarding the comparison between the variant
    and original version, the CNN-BiLSTM3 and BiLSTM3 significantly improved the LSTM3
    model by 4.55–8.51% and 1.39–5.72% for R2, 3.77–27.88% and 1.44–26.08% for NSE,
    6.17–15.80% and 1.83–7.27% for RRMSE, 4.15–15.51% and 2.06–7.27% for RMSE, and
    6.36–24.65% and 2.85–8.68% for MAE, respectively. Besides, the calibrated “aHS”
    and “bHS” based on external strategy ranged 0.0022–0.0026 and 0.450–0.484 throughout
    China (Table 2). Download : Download high-res image (2MB) Download : Download
    full-size image Fig. 10. Scatter density plots of daily ET0 values estimated by
    PM equation against temperature-based models under external K-fold cross-validation
    strategy throughout China. Notes: The color bars depict the relative point density
    in a circle area with a 0.1 mm radius. In summary, MA-CNN-BiLSTM3 exhibited remarkable
    accuracy among T-based ET0 models under both internal and external K-fold cross
    validation strategies across four climatic zones. Furthermore, the T-based AI
    models exceeded the empirical model, and T-based LSTM-type models outperformed
    the T-based traditional machine learning model (MARS). 3.5. Cross–comparison among
    different types of ET0 models under two strategies Conducting the cross-comparison
    analysis among three types of ET0 estimating models is deemed necessary, as each
    one presents apparent advantages and disadvantages in different climatic conditions.
    Regarding the internal strategy, the accuracy of Rn-based outperformed RH- and
    T-based models in TCZ and MPZ by 1.51–14.40% for R2, 1.17–15.82% for NSE, 4.17–41.63%
    for RRMSE, 3.52–37.91% for RMSE, and 4.62–38.38% for MAE, respectively (Table
    3). Wherein internal MA-CNN-BiLSTM1 obtained the best performance, with the corresponding
    values ranging 0.957–0.972, 0.949–0.962, 0.129–0.147, 0.294–0.383 mm d−1, and
    0.244–0.309 mm d−1 in R2, NSE, RRMSE, RMSE, and MAE, respectively. Meanwhile,
    internal RH-based models exhibited better accuracy than internal Rn- and T-based
    models by 2.61–23.40% for R2, 1.13–21.28% for NSE, 3.69–46.04% for RRMSE, 2.53–50.58%
    for RMSE, and 2.65–54.98% for MAE in SMZ and TMZ, respectively (Table 4). Specifically,
    internal MA-CNN-BiLSTM2 gained the best precision in these zones, leading to the
    corresponding values ranging 0.960–0.962, 0.930–0.948, 0.158–0.182, 0.318–0.395 mm
    d−1, and 0.254–0.300 mm d−1 in R2, NSE, RRMSE, RMSE, and MAE, respectively. According
    to above results, internal MA-CNN-BiLSTM1, MA-CNN-BiLSTM2, and MA-CNN-BiLSTM3
    were the corresponding highly recommended Rn-, RH-, and T-based models, and their
    spatial distribution of specific statistical indexes was depicted in Fig. 11.
    Notably, internal MA-CNN-BiLSTM1 demonstrated a relatively good performance across
    China, except for certain areas with lower accuracy, including the northwestern
    of SMZ and southeastern of TMZ (Fig. 11a-e). Combined with sunshine duration spatial
    distribution in Fig. 4b, it can be inferred that internal MA-CNN-BiLSTM1 achieved
    higher accuracy in areas with long sunshine duration. Furthermore, internal MA-CNN-BiLSTM2
    showed lower accuracy in the northeastern TCZ and middle MPZ, but higher accuracy
    in the southeastern SMZ and southwestern TMZ (Fig. 11f-j). Considering the spatial
    distribution of RH in Fig. 4d confirmed that the internal MA-CNN-BiLSTM2 performed
    less accurately in the areas of MPZ, TCZ, and SMZ with lower RH, whereas showed
    a reverse trend in TMZ. In addition, internal MA-CNN-BiLSTM3 showed a decrease
    in accuracy from northeastern to southwestern (Fig. 11k-o). Taking into account
    the Ta spatial distribution in Fig. 4a, it can be deduced that the internal MA-CNN-BiLSTM3
    had inferior accuracy in the area of TCZ and MPZ with lower Ta, whereas the opposite
    trend was observed in SMZ and TMZ. Download : Download high-res image (730KB)
    Download : Download full-size image Fig. 11. Spatial distribution in accuracy
    indicators attained by MA-CNN-BiLSTM1 (Radiation-based), MA-CNN-BiLSTM2 (Humidity-based),
    and MA-CNN-BiLSTM3 (Temperature-based) under internal and external cross-validation
    strategies throughout China, respectively. Concerning the external strategy, Rn-based
    models exhibited superior accuracy than other types in TCZ and MPZ by 3.09–92.94%
    for R2, 2.57–114.83% for NSE, 1.85–39.71% for RRMSE, 1.93–39.63% for RMSE, and
    2.94–43.32% for MAE, respectively (Table 5). wherein external MA-CNN-BiLSTM1 demonstrated
    best performance, with median values of 0.908–0.926, 0.901–0.920, 0.162–0.202,
    0.409–0.585 mm d−1, and 0.294–0.396 mm d−1 for R2, NSE, RRMSE, RMSE, and MAE,
    respectively. Conversely, external RH- outperformed Rn- and T-based models by
    1.64–17.72% for R2, 2.62–35.79% for NSE, 1.74–43.13% for RRMSE, 1.26–41.17% for
    RMSE, and 1.78–43.37% for MAE in SMZ and TMZ, respectively (Table 6). In particular,
    external MA-CNN-BiLSTM2 achieved highest precision within these zones, as evidenced
    by corresponding values ranging 0.913–0.927, 0.909–0.918, 0.171–0.207, 0.458–0.518 mm
    d−1, and 0.328–0.359 mm d−1 for R2, NSE, RRMSE, RMSE, and MAE, respectively. Furthermore,
    according to Fig. 11p-t, the accuracy of external MA-CNN-BiLSTM1 exhibited a gradual
    decrease from central area to northeast and southwest. When considering sunshine
    duration spatial distribution (Fig. 4b), it can be inferred that external MA-CNN-BiLSTM1
    achieved higher precision in areas with the long sunshine duration of MPZ, while
    at TCZ, SMZ and TMZ were opposite. Meanwhile, the accuracy of external MA-CNN-BiLSTM2
    increased from northwest to southeast (Fig. 11u-y). The observed spatial distribution
    of RH in Fig. 4d provides evidence that external MA-CNN-BiLSTM2 exhibited lower
    accuracy in areas characterized by lower RH. Besides, external MA-CNN-BiLSTM3
    demonstrated higher accuracy in northeast and central areas of China, with superior
    performance in TMZ and SMZ than others (Fig. 11z-ad). Given the evident accuracy
    discrepancies among the ET0 models utilizing internal and external K-fold cross
    validation strategies, a cross-comparison analysis is deemed necessary. To be
    specific, the Rn-based models under internal strategy exhibited superior accuracy
    compared to those under external strategy, with improvements of 2.74–15.12%, 1.11–36.25%,
    1.41–32.54%, 1.68–38.53%, and 13.27–33.31% for R2, NSE, RRMSE, RMSE, and MAE,
    respectively (Table 3, Table 4, Table 5, Table 6). Agree with the Rn-based models,
    the corresponding improvements in RH-based models ranged 3.56–45.39% for R2, 1.32–54.65%
    for NSE, 2.13–40.27% for RRMSE, 1.77–43.81% for RMSE, and 6.09–38.87% for MAE,
    respectively (Table 3, Table 4, Table 5, Table 6). Similarly, the internal T-based
    models were superior to external ones by 3.11–106.04%, 1.65–120.49%, 1.86–37.74%,
    2.25–45.53%, and 1.21–36.23% for R2, NSE, RRMSE, RMSE, and MAE, respectively.
    In summary, when considering internal and external strategies simultaneously,
    Rn-based models showed higher accuracy in TCZ and MPZ, while RH-based models performed
    better in SMZ and TMZ. Specifically, MA-CNN-BiLSTM1 excelled in TCZ and MPZ, whereas
    MA-CNN-BiLSTM2 yielded better performance in others. Moreover, it is worth noting
    that three types of models demonstrated higher accuracy under internal strategy
    than external strategy. 4. Discussions 4.1. Reasons for accuracy discrepancies
    among different types of ET0 models Given the limited applications of PM, researchers
    have developed different types of models as alternatives to estimate ET0 and tested
    them globally, including empirical models that are based on nonlinear relationships
    between meteorological variables and ET0, the TML employs statistical patterns
    derived from meteorological variables to ET0, as well as the DL that utilize neural
    networks to learn complex mappings between meteorological variables and ET0. In
    the field of DL, LSTM has gained widespread attention due to the introduction
    of four crucial gating units, namely the input gate, forgetting gate, update gate,
    and output gate, which enable LSTM to effectively preserve and propagate useful
    information in long time-series data (Datta and Faroughi, 2023, Dong et al., 2023,
    Xing et al., 2023a, Xing et al., 2022b). However, there exist considerable accuracy
    discrepancies among different models due to structures. In this study, LSTM had
    a better ET0 estimation accuracy under internal and external strategies than MARS
    and empirical models by 1.19–118.35% for R2, 2.53–114.07% for NSE, 2.72–50.01%
    for RRMSE, 3.57–54.06% for RMSE, and 2.96–53.89% for MAE, respectively (Table
    3, Table 4, Table 5, Table 6). Consistently, Chen et al. (2020) conducted a comparative
    analysis of ET0 estimation accuracy between empirical models, TML, and DL, leading
    to the conclusion that LSTM achieved the best performance. This is mainly attributed
    to the fact that the DL, particularly LSTM, possesses a multi-layer neural network
    structure for progressive extraction and features combination between meteorological
    variables compared to empirical models and TML, thereby effectively capturing
    nonlinear relationships within the data (Pratama and Wang, 2019). Additionally,
    LSTM exhibits outstanding performance in managing long time-series data, showcasing
    the ability to autonomously extract features from meteorological variables while
    combining them across multiple time steps. It also can automatically adapt parameters
    based on meteorological variables, thereby enabling LSTM to demonstrate robust
    effectiveness across diverse environmental and geographical conditions. Therefore,
    owing to LSTM''s enhanced nonlinear modeling proficiency, adeptness in managing
    time series data, automated feature extraction, and adaptability to diverse conditions,
    it surpasses empirical models and MARS in ET0 estimation. However, LSTM still
    encounters challenges such as overfitting and gradient vanishing, prompting researchers
    to propose various LSTM-type variants to address these limitations (Valipour et
    al., 2023, Yan et al., 2023, Zhu and Xie, 2023). Besides, this study presented
    that the performance of CNN-BiLSTM and BiLSTM was better than LSTM, wherein CNN-BiLSTM
    outperformed BiLSTM. Consistently, Yin et al. (2020) showed that BiLSTM exhibited
    superior performance in ET0 estimation, with ranging 0.159–0.323 mm d–1 for RMSE,
    0.039–0.089 mm d–1 for MAE, 0.943–0.992 for Pearson''s correlation coefficient,
    and 0.982–0.988 for NSE, respectively. Zhu and Xie (2023) displayed that CNN-BiLSTM
    achieved superior performance in PM2.5 forecasting, yielding an R2 of 0.94. Longjam
    et al. (2023) demonstrated the efficacy of CNN-BiLSTM in accurately discerning
    the authenticity of handwritten signatures. Specifically, the BiLSTM improves
    the structure of the original LSTM by incorporating two directional hidden layers,
    one propagating forward and the other backward, thereby enabling the simultaneous
    utilization of both past and future information (Xiong et al., 2023). Moreover,
    it not only improves the original LSTM structure but also couples a CNN module
    by considering CNN-BiLSTM, enabling CNN to extract local features and efficiently
    transmit them to BiLSTM, thus enhancing the capture of both local and global features
    (Yang et al., 2021a). Furthermore, the parameter sharing and pooling operations
    within convolutional layers contribute to reducing model parameters, consequently
    mitigating the risk of overfitting. Additionally, the convolutional operations
    of CNN accommodate inputs of varying scales, rendering CNN-BiLSTM more flexible
    and applicable across diverse dimensions and sizes of input data (Wang et al.,
    2019). Hence, despite the superior performance of CNN-BiLSTM over BiLSTM, they
    have emerged as a highly effective tool among the LSTM-type variants in ET0 estimation.
    Furthermore, while there are several advantages associated with CNN-BiLSTM, its
    application is constrained by the potential redundancy in feature representation,
    where certain features extracted by CNN are still processed by BiLSTM, resulting
    in duplicated feature information (Lin et al., 2022, Zhou et al., 2022). To address
    these limitations and enhance model performance, incorporating the attention mechanism
    provides a sensible approach that allows models to focus on relevant segments
    of input data, reducing reliance on redundant information (Han et al., 2023).
    Datta and Faroughi (2023) also demonstrated that the accuracy of MA-LSTM outperformed
    LSTM in predicting soil moisture, improving RMSE by 23.53–54.21%. Nevertheless,
    the attention mechanism typically focuses on a single aspect of input data, potentially
    constraining their performance (Zhang et al., 2019). Consequently, the multi-head
    attention mechanism (MA) has been developed based on the foundation of the attention
    mechanism, which enhances model representational capacity by simultaneously computing
    multiple attention heads in parallel, enabling the model to better capture interrelationships
    and dependencies among input data (Essa and Abdelmaksoud, 2023). Therefore, this
    study integrated the advantages of the MA, CNN, and BiLSTM, resulting in the development
    of the novel MA-CNN-BiLSTM model, which modifies the original LSTM structure and
    synergistically integrates MA and CNN modules. Additionally, the MA-CNN-BiLSTM
    achieved the highest precision among the employed models in this study under internal
    and external K-fold cross validation strategies, with the corresponding values
    ranging 0.797–0.972 for R2, 0.786–0.962 for NSE, and 0.129–0.335 for RRMSE, 0.294–0.969 mm
    d−1 for RMSE, and 0.244–0.699 mm d−1 for MAE, respectively (Table 3, Table 4,
    Table 5, Table 6). To be specific, the CNN layer is utilized for extracting local
    features and structural information from the input data. Additionally, the MA
    mechanism allows the model to establish weighted connections between different
    parts of the input data, enabling the model to better process intricate relationships,
    thereby facilitating an understanding of the global structure and patterns (Bin
    et al., 2019). Furthermore, the MA is capable of learning multiple distinct points
    of focus, contributing to the enhancement of data representation learning. Each
    attention head can specialize in different aspects of the features, enabling the
    model to better discriminate between diverse information present in the input
    data. Moreover, the utilization of the MA mechanism permits the model to concurrently
    consider information from multiple attention heads, mitigating the risk of overfitting.
    Each head can concentrate on different facets of the data, thereby reducing the
    potential for excessive fitting to specific samples (Lin et al., 2020). Ultimately,
    the BiLSTM layer is employed to capture temporal dependencies in long time-series
    data, simultaneously considering both past and future information. Hence, through
    integrating the advantages of the Multi-Head Attention mechanism, MA-CNN-BiLSTM
    accomplishes a comprehensive improvement in model performance, establishing itself
    as an efficient model for ET0 estimation. To summarize, while LSTM demonstrates
    excellent performance in ET0 estimation due to the “gate” structure than empirical
    models and TML, the BiLSTM further modifies the limitations of LSTM by introducing
    the bidirectional structure. Moreover, this study enhances the feature extraction
    capability and automatic focus adjustment of BiLSTM by integrating CNN and MA.
    Therefore, the novel proposed MA-CNN-BiLSTM model, which incorporates the MA,
    CNN, and BiLSTM as the intricate relationship processor, feature extractor, and
    regression component, respectively, can be recommended as a reliable approach
    to addressing high-dimensional nonlinear time series problems and holds significant
    potential for applications in other domains. 4.2. Reasons for accuracy discrepancies
    among ET0 models using different inputs In addition to the influence of model
    structures, the different input meteorological variables combinations of models
    hold considerable significance during the ET0 estimation process. As the most
    crucial energy source within the atmospheric system of Earth, solar radiation
    plays a pivotal role in regulating and driving the process of evapotranspiration
    (Gleeson et al., 2020). Numerous studies have reported that the Rn–based models
    with input combination exhibited superior performance than other models. To be
    specific, Ahmadi and Javanbakht (2020) found that Rn-based outperformed T-based
    models in ET0 estimation, demonstrating improvements of 12.11–45.87%. Consistently,
    the Rn-based demonstrated superior accuracy than RH-based and T-based models under
    both internal and external strategies in TCZ and MPZ, with improvements ranging
    1.51–92.94% for R2, 1.17–114.83% for NSE, 1.85–41.63% for RRMSE, 1.93–39.63% for
    RMSE, and 2.94–43.32% for MAE, respectively (Table 3, Table 4, Table 5, Table
    6). In regions characterized by intense solar radiation, such as TCZ and MPZ,
    the ET0 is predominantly controlled by available solar radiation energy (Jiang
    and Zhu, 2023). Besides, the Rn-based model can accurately describe the energy
    transfer and conversion process, thereby enhancing ET0 estimation (He et al.,
    2017). Therefore, the superiority of the Rn- over T- and RH-based models is evident
    in TCZ and MPZ. However, apart from solar radiation, RH also exerts an influence
    on the rate of evaporation. Numerous prior research has demonstrated that RH-based
    models achieved superior performance in ET0 estimation. Ferreira et al. (2019)
    demonstrated a significant improvement in the accuracy of Artificial Neural Network
    (ANN) and Support Vector Machine (SVM) models by 7–24% when incorporating the
    RH variable for ET0 estimation in Brazil. Bashir et al. (2023) found that the
    RH-based ANN surpassed the T-based ANN by 34.86%. In this study, RH- exhibited
    superior performance compared to Rn- and T-based models under both internal and
    external strategies in SMZ and TMZ, exhibiting improvements by 1.64–23.40%, 1.13–35.79%,
    1.74–46.04%, 1.26–50.58%, and 1.78–54.98% for R2, NSE, RRMSE, RMSE, and MAE, respectively
    (Table 3, Table 4, Table 5, Table 6). This result can be attributed to the significant
    water vapor exchange leading to high humidity but relatively weak solar radiation
    in SMZ and TMZ, where RH stands as the predominant factor influencing ET0 (Fan
    et al., 2016). Additionally, RH exhibits significant variability within these
    zones. Hence, the superior accuracy of models employing RH-based input combinations
    compared to T-based and RH-based models becomes apparent in SMZ and TMZ. Moreover,
    despite the superior accuracy exhibited by Rn-based and RH-based models over T-based
    models in prior research, it should be noted that the availability of Rn and RH
    data is relatively limited compared to temperature data across various regions.
    Consequently, T-based models remain extensively utilized worldwide. Bellido-Jiménez
    et al. (2020) found that the accuracy of AI models utilizing T-based inputs exhibits
    superior performance for ET0 estimation in Spain. Feng et al. (2017b) discovered
    that the T-based Extreme Learning Machine exhibited superior performance in ET0
    estimation compared to T-based Generalized Regression Neural Network (GRNN) and
    HS models, achieving RRMSE of 0.198, MAE of 0.267 mm d–1, and NSE of 0.891. Similarly,
    this study showed that the internal MA-CNN-BiLSTM3 demonstrated superior accuracy
    within TMZ compared to its performance in the other three zones, yielding R2,
    NSE, RRMSE, RMSE, and MAE values of 0.921, 0.901, 0.208, 0.491 mm d−1, and 0.396 mm
    d−1, respectively (Table 4). Besides, the accuracy of external MA-CNN-BiLSTM3
    in SMZ and TMZ surpassed that of the model in TCZ and MPZ, achieving the corresponding
    values ranging 0.868–0.872 for R2, 0.851–0.869 for NSE, 0.269–0.301 for RRMSE,
    0.671–0.779 mm d−1 for RMSE, and 0.494–0.578 mm d−1 for MAE, respectively (Table
    5, Table 6). These findings can be attributed to higher temperatures and relatively
    weak solar radiation in TMZ and SMZ, highlighting the prominent influence of temperature
    as a primary driver of evapotranspiration. Thus, due to the relatively easy accessibility
    and higher accuracy of temperature data in many regions, the application of T-based
    ET0 models is more widespread. To summarize, Rn-based models achieved the best
    ET0 estimates in TCZ and MPZ, while RH-based models were better in other zones,
    which implies that the accuracy and reliability of ET0 models are highly dependent
    on meteorological inputs. It is worth noting that the selection about the types
    of input variables is a crucial process that requires comprehensive consideration
    of multiple factors, including geographical environment, data availability, and
    correlations. 4.3. Advantages and disadvantages between two cross validation strategies
    In the estimating ET0 process, besides model structures and input combinations,
    the model validation strategy also exerts a significant influence on estimation
    accuracy. The cross validation strategy is widely applied for assessing model
    performance, including internal cross validation strategy and external cross validation
    strategy, both of which play pivotal roles in enhancing model generalization capabilities
    (Roberts et al., 2017). Besides, the accuracy of models based on both internal
    and external cross validation strategies exhibits considerable variability. Feng
    et al. (2017a) compared RF and GRNN models for estimating ET0 under both internal
    and external cross validation strategies and found that internal Random Forests
    (RF) and GRNN outperformed external RF and GRNN models by 4.71–21.87%. Xing et
    al. (2022a) reported that the internal Deep Belief Network-Long Short-Term Memory
    network (DBN-LSTM) exhibited superior accuracy compared to the external DBN-LSTM,
    with an improvement ranging from 3.03–5.59%. Similarly, the Rn-, RH-, and T-based
    models using internal strategy displayed superior accuracy compared to those using
    external strategy in this study, with improvements of 2.74–106.04% for R2, 1.11–120.49%
    for NSE, 1.41–40.27% for RRMSE, 1.68–45.53% for RMSE, and 1.21–38.87% for MAE,
    respectively (Table 3, Table 4, Table 5, Table 6). Obviously, the internal strategy
    employs the same dataset for both training and validation compared to the external
    strategy, yielding a more stable estimate performance that is less susceptible
    to dataset variations. Besides, internal strategy enhances dataset utilization
    and contributes to reducing model overfitting by conducting multiple validations
    on distinct validation subsets within the same dataset (Hao et al., 2020). Hence,
    assessing the applicability of ET0 models using the internal strategy has the
    potential to fill data gaps and offer managers a practical alternative when utilizing
    fewer meteorological observation data, thereby enhancing decision-making accuracy
    in scenarios involving data scarcity. Moreover, despite the aforementioned advantages
    of the internal K-fold cross validation strategy, the application of the external
    K-fold cross validation strategy is extensively widespread (Shao et al., 2013).
    Chen et al. (2020) demonstrated that external DL, TML, and empirical models yielded
    in estimating ET0, with variations in RMSE ranging from 0.502–0.964 mm d–1, respectively.
    Mehdizadeh et al. (2017) estimated daily dew point temperature (Tdew) using meteorological
    data from the adjacent station, and they found that the meteorological data of
    the adjacent station can be used to predict Tdew. Martí et al. (2015) found that
    the external Gene Expression Programming (GEP) model achieved better accuracy
    for estimating ET0 in Spain, displaying RMSE and MAE ranging from 0.235–0.744 mm
    d–1 and 0.097–0.285 mm d–1, respectively. Identically, the ranges for external
    models were 0.336–0.927 for R2, 0.300–0.920 for NSE, 0.162–0.698 for RRMSE, 0.409–1.869 mm
    d−1 for RMSE, and 0.295–1.505 mm d−1 for MAE in this study, respectively (Table
    5, Table 6). Apparently, given that the model is trained on a subset while validated
    on a different one, the external cross validation strategy safeguards against
    any information leakage from validation set into training process, which mitigates
    the concern of overestimated model performance stemming from improper data processing.
    Besides, it also enables accurate evaluations of model performance on the absent
    dataset, ensuring a reliable assessment for the generalization capability of models
    (Breve et al., 2023). Particularly in China with diverse geographical and climatic
    conditions, there are only 629 nationwide meteorological stations that possess
    comprehensive historical observational meteorological data due to equipment malfunctions
    and external disruptions, with the spatial distribution of these stations being
    uneven. Therefore, the application of external strategy is necessary to verify
    the appropriateness of ET0 models in regions lacking complete historical meteorological
    observation data. To summarize, the Rn-, RH-, and T-based ET0 models using internal
    strategy presented superior accuracy compared to those using the external strategy,
    which highlights the crucial role of cross validation strategy as a key technique
    for developing excellent ET0 estimation models and underscores its importance
    in model evaluation, data utilization, and mitigating overfitting. 4.4. Analysis
    of uncertainties, limitations, and applications It is widely acknowledged that
    all models are subject to uncertainties and limitations (Refsgaard and Henriksen,
    2004). Despite the quality of meteorological data bringing uncertainty to ET0
    models during development (Cui et al., 2023), the selection of input variables
    significantly impacts the estimates by AI models impute to complex drive-response
    relationships (Xing et al., 2022a, Xing et al., 2023c). In addition, the lengths
    of training and testing datasets also exerted an inevitable impact on the generalization,
    robustness, and accuracy of the non-linear model (Mohammadi and Mehdizadeh, 2020).
    Beyond that, while the novel LSTM-type model developed based on sophisticated
    structure-enriched functionality, it also brings potential system errors and cumulative
    errors. Meanwhile, the hybrid structure of multiple models results in numerous
    hyperparameters, which became the main sources of uncertainties for the MA-CNN-BiLSTM
    model. Moreover, the MA-CNN-BiLSTM model demands substantial computational resources
    and runtime, thereby introducing difficulties concerning operational efficiency
    and maintenance. Another main methodology uncertainty is that the DL models are
    frequently regarded as “black boxes” owing to the complex structures and nonlinear
    transformations inherent, thereby there are potential challenges of interpretability
    and transparency to DL models (Tjoa and Guan, 2021). Through analyzing the sources
    of uncertainty in estimation results, it is revealed that the present study is
    mainly limited by the lack of preprocessing methods for input selection. We highly
    appreciate Mohammadi and Mehdizadeh (2020), who successfully determined the optimal
    input combinations for the SVR-based ET0 model using pre-processing approaches
    in Iran. Besides, Ahmadi et al. (2021) proposed the τ Kendall and entropy as pre-processing
    techniques to discern the effective climatic parameters for AI models. We sincerely
    agree that the above operation is necessary for improving the estimation accuracy
    of AI models, which this study did not touch on this field regretfully. Moreover,
    even if this study adopts the cross validation strategy to build the ET0 models,
    the fixed ratio between the training and testing sets is still limited to the
    research result, without considering the potential performance of other values.
    We also admire the research conducted by Hossein Kazemi et al. (2020) that different
    temporal data partitioning scenarios were assessed for ET0 estimation with machine
    learning techniques in arid regions. Moreover, the present study merely focuses
    on the accuracy performance of different ET0 models, without considering their
    operating efficiency and model complexity (Wang and Liu, 2006). Despite the aforementioned
    uncertainties and limitations, the main contribution of the present study is the
    proposal of a novel LSTM-type ET0 estimated model (MA-CNN-BiLSTM) to cope with
    various data-missing scenarios in different climatic zones of China, which can
    provide scientific support for decision-making in agricultural water resource
    management. By combining accurate ET0 estimates and crop coefficient (Kc), agricultural
    practitioners can formulate appropriate irrigation strategies based on actual
    water requirements (ET) to mitigate water wastage and prevent overexploitation
    of land resources (Mohammadi and Mehdizadeh, 2020, Yan et al., 2021). In addition,
    it is believed that its effective simulation can contribute to research on ecosystems,
    climate change, and environmental protection because the ET0 is a major component
    of the Earth''s water cycle (Ahmadi et al., 2021, Chen et al., 2022a, Ferreira
    and da Cunha, 2020). Regarding the MA-CNN-BiLSTM possesses excellent robustness
    in solving time series problems by incorporating the MA, CNN, and BiLSTM as the
    intricate relationship processor, feature extractor, and regression component,
    there is a reasonable prospect that it would adapt to similar fields such as financial
    issues, meteorological disasters, and runoff prediction, etc. 5. Conclusions and
    future works This study conducted a comprehensive assessment of the performance
    accuracy for MA-CNN-BiLSTM, CNN-BiLSTM, BiLSTM, LSTM, MARS, and three empirical
    models with limited meteorological data under internal and external k-fold cross
    validation strategies for ET0 estimation during 1961–2020 in four climatic zones
    of China, respectively. Based on the results and discussions, the main conclusions
    could be summarized as follows: (1) The MA-CNN-BiLSTM exhibited the highest accuracy
    in estimating ET0 using limited meteorological input combinations under both internal
    and external strategies in four climatic zones of China, with median values ranging
    0.797–0.972 for R2, 0.786–0.962 for NSE, and 0.129–0.335 for RRMSE, 0.294–0.969 mm
    d−1 for RMSE, and 0.244–0.699 mm d−1 for MAE, respectively. Besides, based on
    GPI, the accuracy of ET0 models can be ranked from best to worst: MA-CNN-BiLSTM,
    CNN-BiLSTM, BiLSTM, LSTM, MARS, and empirical models. (2) Under incomplete meteorological
    input combinations, the Rn-based demonstrated superior accuracy than RH-based
    and T-based models under both internal and external strategies in TCZ and MPZ,
    with improvements ranging 1.51–92.94% for R2, 1.17–114.83% for NSE, 1.85–41.63%
    for RRMSE, 1.93–39.63% for RMSE, and 2.94–43.32% for MAE, respectively. In contrast,
    RH-based outperformed Rn-based and T-based models in SMZ and TMZ, achieving improvements
    by 1.64–23.40%, 1.13–35.79%, 1.74–46.04%, 1.26–50.58%, and 1.78–54.98% for R2,
    NSE, RRMSE, RMSE, and MAE, respectively. Specifically, the MA-CNN-BiLSTM with
    Rn-based input combination excelled in TCZ and MPZ, while the MA-CNN-BiLSTM with
    RH-based input combination yielded the best performance in other zones. (3) The
    Rn-based, RH-based, and T-based models demonstrated higher accuracy when employing
    the internal cross validation strategy in comparison to the external strategy,
    with improvements values ranging 2.74–106.04% for R2, 1.11–120.49% for NSE, 1.41–40.27%
    for RRMSE, 1.68–45.53% for RMSE, and 1.21–38.87% for MAE, respectively. Nevertheless,
    employing external strategy carries higher practical importance, as it yields
    accuracies ranging from 0.336–0.927 for R2, 0.300–0.920 for NSE, 0.162–0.698 for
    RRMSE, 0.409–1.869 mm d−1 for RMSE, and 0.295–1.505 mm d−1 for MAE across the
    three types of models, respectively. Through the limitation discussion of model
    implementation and research method, we would propose the pre-processing approaches
    to analyze the importance of variables and construct input combinations of the
    model to expand the application value of AI models in the field of ET0 estimation
    using incomplete data (Mohammadi and Mehdizadeh, 2020). In addition, the introduction
    of different temporal data partitioning methods and model complexity index may
    be another important future work to improve the accuracy and robustness of the
    novel developed model in this study. Considering the substantial applications
    of this study, future research will be also conducted to enhance ET0 estimation
    by integrating meteorological data, satellite remote sensing data, and ground
    observation data. Future research could investigate the impacts of geospatial
    distribution and spatiotemporal dynamics on ET0 models, thus enabling more precise
    forecasting of ET0 trends across varying regions and periods. In the future, there
    will be potential to combine AI and empirical models to enhance both the interpretability
    and reliability of ET0 estimation, with a primary focus on constructing more physically
    meaningful models for a comprehensive understanding of ET0 fluctuations. Moreover,
    we believe that the application of the MA-CNN-BiLSTM should not be limited to
    ET0 estimation, but has broad prospects in fields such as new energy development,
    meteorological disaster prevention, and ecological environment protection, which
    was also one of our long-term work plans. Supplementary data Table S1 Basic information
    regarding the 600 meteorological stations in four climatic zones of China. CRediT
    authorship contribution statement Zhao Lu: Data curation. Guo Li: Validation,
    Supervision. Wang Zhihui: Investigation, Data curation. Du Taisheng: Validation,
    Supervision, Resources. Tan Mingdong: Data curation. Gong Daozhi: Validation.
    Dong Juan: Writing – original draft, Validation, Methodology, Formal analysis,
    Data curation. Xing Liwen: Writing – original draft, Supervision, Software, Resources,
    Project administration, Methodology, Funding acquisition, Data curation. Cui Ningbo:
    Writing – review & editing, Funding acquisition. Declaration of Competing Interest
    The authors declare that they have no known competing financial interests or personal
    relationships that could have appeared to influence the work reported in this
    paper. Acknowledgment This work was funded by National Natural Science Foundation
    of China (52309057, 52279041, 51922072, 51779161, and 51009101), National Key
    Research and Development Program of China (2021YFD1600803–1, 2022YFD1900805),
    Central University Basic Research Funding (2022YFQ0066, 2020CDDZ-19, 2019CDLZ-10,
    and 2018CDPZH10), and Sichuan Science and Technology Program (2024QYCX0389, 2023NZZJ0015).
    Appendix A. Supplementary material Download : Download spreadsheet (128KB) Supplementary
    material . Data availability The authors do not have permission to share data.
    References Addor and Melsen, 2019 N. Addor, L.A. Melsen Legacy, rather than adequacy,
    drives the selection of hydrological models Water Resour. Res., 55 (1) (2019),
    pp. 378-390, 10.1029/2018wr022958 View in ScopusGoogle Scholar Ahmadi et al.,
    2021 F. Ahmadi, S. Mehdizadeh, B. Mohammadi, Q.B. Pham, T.N.C. Doan, N.D. Vo Application
    of an artificial intelligence technique enhanced with intelligent water drops
    for monthly reference evapotranspiration estimation Agric. Water Manag., 244 (2021),
    Article 106622, 10.1016/j.agwat.2020.106622 View PDFView articleView in ScopusGoogle
    Scholar Ahmadi and Javanbakht, 2020 S.H. Ahmadi, Z. Javanbakht Assessing the physical
    and empirical reference evapotranspiration (ETo) models and time series analyses
    of the influencing weather variables on ETo in a semi-arid area J. Environ. Manag.,
    276 (2020), Article 111278, 10.1016/j.jenvman.2020.111278 View PDFView articleView
    in ScopusGoogle Scholar Allen et al., 1998 R.G. Allen, L.S. Pereira, D. Raes,
    M. Smith Crop Evapotranspirationguidelines for Computing Crop Water requirements-FAO
    Irrigation and Drainage Paper 56 FAO. Food and Agricultural Organization of the
    United Nations (FAO), Rome, Italy (1998), p. 326 pp. Google Scholar Bashir et
    al., 2023 R.N. Bashir, F.A. Khan, A.A. Khan, M. Tausif, M.Z. Abbas, M.M.A. Shahid,
    N. Khan Intelligent optimization of reference evapotranspiration (ETo) for precision
    irrigation J. Inf. Comput. Sci., 69 (2023), Article 102025, 10.1016/j.jocs.2023.102025
    View PDFView articleView in ScopusGoogle Scholar Bellido-Jiménez et al., 2020
    J.A. Bellido-Jiménez, J. Estévez, A.P. García-Marín New machine learning approaches
    to improve reference evapotranspiration estimates using intra-daily temperature-based
    variables in a semi-arid region of Spain Agric. Water Manag. (2020), Article 106558,
    10.1016/j.agwat.2020.106558 Google Scholar Bin et al., 2019 Y. Bin, Y. Yang, F.
    Shen, N. Xie, H.T. Shen, X. Li Describing video with attention-based bidirectional
    LSTM IEEE Trans. Cybern., 49 (7) (2019), pp. 2631-2641, 10.1109/TCYB.2018.2831447
    View in ScopusGoogle Scholar Bottieau et al., 2023 J. Bottieau, Y. Wang, Z. De
    Grève, F. Vallée, J.-F. Toubeau Interpretable transformer model for capturing
    regime switching effects of real-time electricity prices IEEE Trans. Power Syst.,
    38 (3) (2023), pp. 2162-2176, 10.1109/tpwrs.2022.3195970 View in ScopusGoogle
    Scholar Breve et al., 2023 B. Breve, G. Cimino, V. Deufemia Identifying security
    and privacy violation rules in trigger-action IoT platforms with NLP models IEEE
    Internet Things J., 10 (6) (2023), pp. 5607-5622, 10.1109/jiot.2022.3222615 View
    in ScopusGoogle Scholar Chen et al., 2022a H. Chen, J.J. Huang, S.S. Dash, Y.
    Wei, H. Li A hybrid deep learning framework with physical process description
    for simulation of evapotranspiration J. Hydrol., 606 (2022), Article 127422, 10.1016/j.jhydrol.2021.127422
    View PDFView articleView in ScopusGoogle Scholar Chen et al., 2022b W.-H. Chen,
    H.-J. Lo, R. Aniza, B.-J. Lin, Y.-K. Park, E.E. Kwon, H.-K. Sheen, L.A.D.R. Grafilo
    Forecast of glucose production from biomass wet torrefaction using statistical
    approach along with multivariate adaptive regression splines, neural network and
    decision tree Appl. Energy, 324 (2022), Article 119775, 10.1016/j.apenergy.2022.119775
    View PDFView articleView in ScopusGoogle Scholar Chen et al., 2020 Z. Chen, Z.
    Zhu, H. Jiang, S. Sun Estimating daily reference evapotranspiration based on limited
    meteorological data using deep learning and classical machine learning methods
    J. Hydrol., 591 (2020), Article 125286, 10.1016/j.jhydrol.2020.125286 View PDFView
    articleView in ScopusGoogle Scholar Choubin and Malekian, 2017 B. Choubin, A.
    Malekian Combined gamma and M-test-based ANN and ARIMA models for groundwater
    fluctuation forecasting in semiarid regions Environ. Earth Sci., 76 (15) (2017),
    Article 538, 10.1007/s12665-017-6870-8 View in ScopusGoogle Scholar Craven and
    Wahba, 1978 P. Craven, G. Wahba Smoothing noisy data with spline functions Numer.
    Math., 31 (1978), pp. 377-403 View in ScopusGoogle Scholar Cui et al., 2023 N.
    Cui, Z. He, S. Jiang, M. Wang, X. Yu, L. Zhao, R. Qiu, D. Gong, Y. Wang, Y. Feng
    Inter-comparison of the Penman-Monteith type model in modeling the evapotranspiration
    and its components in an orchard plantation of Southwest China Agric. Water Manag.,
    289 (2023), Article 108541, 10.1016/j.agwat.2023.108541 View PDFView articleView
    in ScopusGoogle Scholar Datta and Faroughi, 2023 P. Datta, S.A. Faroughi A multihead
    LSTM technique for prognostic prediction of soil moisture Geoderma, 433 (2023),
    Article 116452, 10.1016/j.geoderma.2023.116452 View PDFView articleView in ScopusGoogle
    Scholar Dong et al., 2022 J. Dong, Y. Zhu, X. Jia, Ma Shao, X. Han, J. Qiao, C.
    Bai, X. Tang Nation-scale reference evapotranspiration estimation by using deep
    learning and classical machine learning models in China J. Hydrol., 604 (2022),
    Article 127207, 10.1016/j.jhydrol.2021.127207 View PDFView articleView in ScopusGoogle
    Scholar Dong et al., 2023 J. Dong, L. Xing, N. Cui, L. Zhao, L. Guo, D. Gong Standardized
    precipitation evapotranspiration index (SPEI) estimated using variant long short-term
    memory network at four climatic zones of China Comput. Electron. Agric., 213 (2023),
    Article 108253, 10.1016/j.compag.2023.108253 View PDFView articleView in ScopusGoogle
    Scholar Elmaz et al., 2021 F. Elmaz, R. Eyckerman, W. Casteels, S. Latré, P. Hellinckx
    CNN-LSTM architecture for predictive indoor temperature modeling Build. Environ.,
    206 (2021), Article 108327, 10.1016/j.buildenv.2021.108327 View PDFView articleView
    in ScopusGoogle Scholar Essa and Abdelmaksoud, 2023 E. Essa, I.R. Abdelmaksoud
    Temporal-channel convolution with self-attention network for human activity recognition
    using wearable sensors Knowl. -Based Syst., 278 (2023), Article 110867, 10.1016/j.knosys.2023.110867
    View PDFView articleView in ScopusGoogle Scholar Fan et al., 2016 J. Fan, L. Wu,
    F. Zhang, Y. Xiang, J. Zheng Climate change effects on reference crop evapotranspiration
    across different climatic zones of China during 1956–2015 J. Hydrol., 542 (2016),
    pp. 923-937, 10.1016/j.jhydrol.2016.09.060 View PDFView articleView in ScopusGoogle
    Scholar Fan et al., 2018 J. Fan, W. Yue, L. Wu, F. Zhang, H. Cai, X. Wang, X.
    Lu, Y. Xiang Evaluation of SVM, ELM and four tree-based ensemble models for predicting
    daily reference evapotranspiration using limited meteorological data in different
    climates of China Agric. Meteorol., 263 (2018), pp. 225-241, 10.1016/j.agrformet.2018.08.019
    View PDFView articleView in ScopusGoogle Scholar Fan et al., 2019 J. Fan, L. Wu,
    F. Zhang, H. Cai, W. Zeng, X. Wang, H. Zou Empirical and machine learning models
    for predicting daily global solar radiation from sunshine duration: a review and
    case study in China Renew. Sust. Energ. Rev., 100 (2019), pp. 186-212, 10.1016/j.rser.2018.10.018
    View PDFView articleView in ScopusGoogle Scholar Fan et al., 2021a J. Fan, L.
    Wu, J. Zheng, F. Zhang Medium-range forecasting of daily reference evapotranspiration
    across China using numerical weather prediction outputs downscaled by extreme
    gradient boosting J. Hydrol., 601 (2021), Article 126664, 10.1016/j.jhydrol.2021.126664
    View PDFView articleView in ScopusGoogle Scholar Fan et al., 2021b J. Fan, J.
    Zheng, L. Wu, F. Zhang Estimation of daily maize transpiration using support vector
    machines, extreme gradient boosting, artificial and deep neural networks models
    Agric. Water Manag., 245 (2021), Article 106547, 10.1016/j.agwat.2020.106547 View
    PDFView articleView in ScopusGoogle Scholar Fayed and Atiya, 2019 H.A. Fayed,
    A.F. Atiya Speed up grid-search for parameter selection of support vector machines
    Appl. Softw. Comput., 80 (2019), pp. 202-210, 10.1016/j.asoc.2019.03.037 View
    PDFView articleView in ScopusGoogle Scholar Feng et al., 2016 Y. Feng, N. Cui,
    L. Zhao, X. Hu, D. Gong Comparison of ELM, GANN, WNN and empirical models for
    estimating reference evapotranspiration in humid region of Southwest China J.
    Hydrol., 536 (2016), pp. 376-383, 10.1016/j.jhydrol.2016.02.053 View PDFView articleView
    in ScopusGoogle Scholar Feng et al., 2017a Y. Feng, N. Cui, D. Gong, Q. Zhang,
    L. Zhao Evaluation of random forests and generalized regression neural networks
    for daily reference evapotranspiration modelling Agric. Water Manag., 193 (2017),
    pp. 163-173, 10.1016/j.agwat.2017.08.003 View PDFView articleView in ScopusGoogle
    Scholar Feng et al., 2017b Y. Feng, Y. Peng, N. Cui, D. Gong, K. Zhang Modeling
    reference evapotranspiration using extreme learning machine and generalized regression
    neural network only with temperature data Comput. Electron. Agric., 136 (2017),
    pp. 71-78, 10.1016/j.compag.2017.01.027 View PDFView articleGoogle Scholar Ferreira
    and da Cunha, 2020 L.B. Ferreira, F.F. da Cunha New approach to estimate daily
    reference evapotranspiration based on hourly temperature and relative humidity
    using machine learning and deep learning Agric. Water Manag., 234 (2020), Article
    106113, 10.1016/j.agwat.2020.106113 View PDFView articleView in ScopusGoogle Scholar
    Ferreira et al., 2019 L.B. Ferreira, F.F. da Cunha, R.A. de Oliveira, E.I. Fernandes
    Filho Estimation of reference evapotranspiration in Brazil with limited meteorological
    data using ANN and SVM – A new approach J. Hydrol., 572 (2019), pp. 556-570, 10.1016/j.jhydrol.2019.03.028
    View PDFView articleView in ScopusGoogle Scholar Friedman, 1991 J.H. Friedman
    Multivariate adaptive regression splines Ann. Stat., 19 (1) (1991), pp. 1-67,
    10.1214/aos/1176347963 Google Scholar Friedman and Roosen, 1995 J.H. Friedman,
    C.B. Roosen An introduction to multivariate adaptive regression splines Stat.
    Methods Med. Res., 4 (3) (1995), pp. 197-217, 10.1177/096228029500400303 View
    in ScopusGoogle Scholar Fu et al., 2024 R. Fu, H. Liang, S. Wang, C. Jia, G. Sun,
    T. Gao, D. Chen, Y. Wang Transformer-BLS: an efficient learning algorithm based
    on multi-head attention mechanism and incremental learning algorithms Expert Syst.
    Appl., 238 (2024), Article 121734, 10.1016/j.eswa.2023.121734 View PDFView articleView
    in ScopusGoogle Scholar Gleeson et al., 2020 T. Gleeson, L. Wang-Erlandsson, M.
    Porkka, S.C. Zipper, F. Jaramillo, D. Gerten, I. Fetzer, S.E. Cornell, L. Piemontese
    Illuminating water cycle modifications and Earth system resilience in the Anthropocene
    Water Resour. Res., 56 (4) (2020), Article 024957, 10.1029/2019wr024957 Google
    Scholar Gonzalez et al., 2023 Gonzalez, F. T, M.J. Pavek, Z.J. Holden, R. Garza
    Evaluating potato evapotranspiration and crop coefficients in the Columbia Basin
    of Washington state Agric. Water Manag., 286 (2023), Article 108371, 10.1016/j.agwat.2023.108371
    Google Scholar Guo et al., 2023 J. Guo, Y. Liu, Q. Zou, L. Ye, S. Zhu, H. Zhang
    Study on optimization and combination strategy of multiple daily runoff prediction
    models coupled with physical mechanism and LSTM J. Hydrol., 624 (2023), Article
    129969, 10.1016/j.jhydrol.2023.129969 View PDFView articleView in ScopusGoogle
    Scholar Han et al., 2023 K. Han, Y. Wang, H. Chen, X. Chen, J. Guo, Z. Liu, Y.
    Tang, A. Xiao, C. Xu, Y. Xu, Z. Yang, Y. Zhang, D. Tao A survey on vision transformer
    IEEE Trans. Pattern Anal. Mach. Intell., 45 (1) (2023), pp. 87-110, 10.1109/TPAMI.2022.3152247
    View in ScopusGoogle Scholar Hao et al., 2020 T. Hao, J. Elith, J.J. Lahoz-Monfort,
    G. Guillera-Arroita Testing whether ensemble modelling is advantageous for maximising
    predictive performance of species distribution models Ecography, 43 (4) (2020),
    pp. 549-558, 10.1111/ecog.04890 View in ScopusGoogle Scholar Hargreaves and Samani,
    1985 G.H. Hargreaves, Z.A. Samani Reference crop evapotranspiration from temperature
    Appl. Eng. Agric., 1 (2) (1985), pp. 96-99 Google Scholar He et al., 2017 R. He,
    Y. Jin, M. Kandelous, D. Zaccaria, B. Sanden, R. Snyder, J. Jiang, J. Hopmans
    Evapotranspiration estimate over an almond orchard using landsat satellite observations
    Remote Sens, 9 (5) (2017), p. 436, 10.3390/rs9050436 Google Scholar Hochreiter
    and Schmidhuber, 1997 S. Hochreiter, J. Schmidhuber Long short-term memory Neural
    Comput., 9 (8) (1997), pp. 1735-1780, 10.1162/neco.1997.9.8.1735 View in ScopusGoogle
    Scholar Hossein Kazemi et al., 2020 M. Hossein Kazemi, J. Shiri, P. Marti, A.
    Majnooni-Heris Assessing temporal data partitioning scenarios for estimating reference
    evapotranspiration with machine learning techniques in arid regions J. Hydrol.,
    590 (2020), Article 125252, 10.1016/j.jhydrol.2020.125252 View PDFView articleView
    in ScopusGoogle Scholar Hua et al., 2019 Y. Hua, Z. Zhao, R. Li, X. Chen, Z. Liu,
    H. Zhang Deep learning with long short-term memory for time series prediction
    IEEE Commun. Mag., 57 (6) (2019), pp. 114-119, 10.1109/mcom.2019.1800155 View
    in ScopusGoogle Scholar Jiang and Zhu, 2023 C. Jiang, Q. Zhu Evaluating the most
    significant input parameters for forecasting global solar radiation of different
    sequences based on Informer Appl. Energy, 348 (2023), Article 121544, 10.1016/j.apenergy.2023.121544
    View PDFView articleView in ScopusGoogle Scholar Jiang et al., 2022 W. Jiang,
    S. Liu, H. Zhang, X. Sun, S.H. Wang, J. Zhao, J. Yan CNNG: a convolutional neural
    networks with gated recurrent units for autism spectrum disorder classification
    Front. Aging Neurosci., 14 (2022), Article 948704, 10.3389/fnagi.2022.948704 View
    in ScopusGoogle Scholar Joseph et al., 2023 L.P. Joseph, R.C. Deo, R. Prasad,
    S. Salcedo-Sanz, N. Raj, J. Soar Near real-time wind speed forecast model with
    bidirectional LSTM networks Renew. Energy, 204 (2023), pp. 39-58, 10.1016/j.renene.2022.12.123
    View PDFView articleView in ScopusGoogle Scholar Kim et al., 2023 H.-J. Kim, S.
    Chandrasekara, H.-H. Kwon, C. Lima, T.-w Kim A novel multi-scale parameter estimation
    approach to the Hargreaves-Samani equation for estimation of Penman-Monteith reference
    evapotranspiration Agric. Water Manag., 275 (2023), Article 108038, 10.1016/j.agwat.2022.108038
    View PDFView articleView in ScopusGoogle Scholar Lecun et al., 1998 Y. Lecun,
    L. Bottou, Y. Bengio, P. Haffner Gradient-based learning applied to document recognition
    Proc. IEEE Inst. Electr. Electron Eng., 86 (11) (1998), pp. 2278-2324, 10.1109/5.726791
    Google Scholar Li et al., 2018 Y. Li, J. Zeng, S. Shan, X. Chen Occlusion aware
    facial expression recognition using CNN with attention mechanism IEEE Trans. Image
    Process (2018), pp. 2439-2450, 10.1109/TIP.2018.2886767 View in ScopusGoogle Scholar
    Lin et al., 2022 Y. Lin, K. Chen, X. Zhang, B. Tan, Q. Lu Forecasting crude oil
    futures prices using BiLSTM-Attention-CNN model with Wavelet transform Appl. Softw.
    Comput., 130 (2022), Article 109723, 10.1016/j.asoc.2022.109723 View PDFView articleView
    in ScopusGoogle Scholar Lin et al., 2020 Z. Lin, Z. Zhao, Z. Zhang, Z. Zhang,
    D. Cai Moment retrieval via cross-modal interaction networks with query reconstruction
    IEEE Trans. Image Process (2020), pp. 3750-3762, 10.1109/TIP.2020.2965987 View
    in ScopusGoogle Scholar Liu et al., 2009 X. Liu, X. Mei, Y. Li, Q. Wang, Y. Zhang,
    J.R. Porter Variation in reference crop evapotranspiration caused by the Ångström–Prescott
    coefficient: locally calibrated versus the FAO recommended Agric. Water Manag.,
    96 (7) (2009), pp. 1137-1145, 10.1016/j.agwat.2009.03.005 View PDFView articleView
    in ScopusGoogle Scholar Liu et al., 2017 X. Liu, C. Xu, X. Zhong, Y. Li, X. Yuan,
    J. Cao Comparison of 16 models for reference crop evapotranspiration against weighing
    lysimeter measurement Agric. Water Manag., 184 (2017), pp. 145-155, 10.1016/j.agwat.2017.01.017
    View PDFView articleView in ScopusGoogle Scholar Longjam et al., 2023 T. Longjam,
    D.R. Kisku, P. Gupta Writer independent handwritten signature verification on
    multi-scripted signatures using hybrid CNN-BiLSTM: a novel approach Expert Syst.
    Appl., 214 (2023), Article 119111, 10.1016/j.eswa.2022.119111 View PDFView articleView
    in ScopusGoogle Scholar Lu et al., 2023 Y. Lu, T. Li, H. Hu, X. Zeng Short-term
    prediction of reference crop evapotranspiration based on machine learning with
    different decomposition methods in arid areas of China Agric. Water Manag., 279
    (2023), Article 108175, 10.1016/j.agwat.2023.108175 View PDFView articleView in
    ScopusGoogle Scholar Ma et al., 2023 Y. Ma, S. Sun, C. Li, J. Zhao, Z. Li, C.
    Jia Estimation of regional actual evapotranspiration based on the improved SEBAL
    model J. Hydrol., 619 (2023), Article 129283, 10.1016/j.jhydrol.2023.129283 View
    PDFView articleView in ScopusGoogle Scholar Maier et al., 2023 H.R. Maier, F.
    Zheng, H. Gupta, J. Chen, J. Mai, D. Savic, R. Loritz On how data are partitioned
    in model development and evaluation: confronting the elephant in the room to enhance
    model generalization Environ. Modell. Softw., 167 (2023), Article 105779, 10.1016/j.envsoft.2023.105779
    View PDFView articleView in ScopusGoogle Scholar Mandal and Chanda, 2023 N. Mandal,
    K. Chanda Performance of machine learning algorithms for multi-step ahead prediction
    of reference evapotranspiration across various agro-climatic zones and cropping
    seasons J. Hydrol., 620 (2023), Article 129418, 10.1016/j.jhydrol.2023.129418
    View PDFView articleView in ScopusGoogle Scholar Maroufpoor et al., 2020 S. Maroufpoor,
    O. Bozorg Haddad, E. Maroufpoor Reference evapotranspiration estimating based
    on optimal input combination and hybrid artificial intelligent model: hybridization
    of artificial neural network with grey wolf optimizer algorithm J. Hydrol., 588
    (2020), Article 125060, 10.1016/j.jhydrol.2020.125060 View PDFView articleView
    in ScopusGoogle Scholar Martí and Gasque, 2010 P. Martí, M. Gasque Ancillary data
    supply strategies for improvement of temperature-based ETo ANN models Agric. Water
    Manag., 97 (7) (2010), pp. 939-955, 10.1016/j.agwat.2010.02.002 View PDFView articleView
    in ScopusGoogle Scholar Martí et al., 2015 P. Martí, P. González-Altozano, R.
    López-Urrea, L.A. Mancha, J. Shiri Modeling reference evapotranspiration with
    calculated targets. Assessment and implications Agric. Water Manag., 149 (2015),
    pp. 81-90, 10.1016/j.agwat.2014.10.028 View PDFView articleView in ScopusGoogle
    Scholar Mehdizadeh, 2018 S. Mehdizadeh Estimation of daily reference evapotranspiration
    (ETo) using artificial intelligence methods: offering a new approach for lagged
    ETo data-based modeling J. Hydrol., 559 (2018), pp. 794-812, 10.1016/j.jhydrol.2018.02.060
    View PDFView articleView in ScopusGoogle Scholar Mehdizadeh et al., 2017 S. Mehdizadeh,
    J. Behmanesh, K. Khalili Application of gene expression programming to predict
    daily dew point temperature Appl. Therm. Eng., 112 (2017), pp. 1097-1107, 10.1016/j.applthermaleng.2016.10.181
    View PDFView articleView in ScopusGoogle Scholar Mehdizadeh et al., 2019 S. Mehdizadeh,
    F. Fathian, M.J.S. Safari, J.F. Adamowski Comparative assessment of time series
    and artificial intelligence models to estimate monthly streamflow: a local and
    external data analysis approach J. Hydrol., 579 (2019), Article 124225, 10.1016/j.jhydrol.2019.124225
    View PDFView articleView in ScopusGoogle Scholar Mehdizadeh et al., 2020 S. Mehdizadeh,
    F. Ahmadi, A. Danandeh Mehr, M.J.S. Safari Drought modeling using classic time
    series and hybrid wavelet-gene expression programming models J. Hydrol., 587 (2020),
    Article 125017, 10.1016/j.jhydrol.2020.125017 View PDFView articleView in ScopusGoogle
    Scholar Mohammadi and Mehdizadeh, 2020 B. Mohammadi, S. Mehdizadeh Modeling daily
    reference evapotranspiration via a novel approach based on support vector regression
    coupled with whale optimization algorithm Agric. Water Manag., 237 (2020), Article
    106145, 10.1016/j.agwat.2020.106145 View PDFView articleView in ScopusGoogle Scholar
    Mohammadi et al., 2020 B. Mohammadi, S. Mehdizadeh, F. Ahmadi, N.T.T. Lien, N.T.T.
    Linh, Q.B. Pham Developing hybrid time series and artificial intelligence models
    for estimating air temperatures Stoch. Environ. Res. Risk Assess., 35 (6) (2020),
    pp. 1189-1204, 10.1007/s00477-020-01898-7 Google Scholar Niu et al., 2023 J. Niu,
    S. Li, W. Xu, F. Dong, F. Huang, H. Qiu An efficient LSTM network for predicting
    the tailing and multi-peaked breakthrough curves J. Hydrol., 624 (2023), Article
    129914, 10.1016/j.jhydrol.2023.129914 View PDFView articleView in ScopusGoogle
    Scholar Niu et al., 2021 Z. Niu, G. Zhong, H. Yu A review on the attention mechanism
    of deep learning Neurocomputing, 452 (2021), pp. 48-62, 10.1016/j.neucom.2021.03.091
    View PDFView articleGoogle Scholar Pratama and Wang, 2019 M. Pratama, D. Wang
    Deep stacked stochastic configuration networks for lifelong learning of non-stationary
    data streams Inf. Sci., 495 (2019), pp. 150-174, 10.1016/j.ins.2019.04.055 View
    PDFView articleView in ScopusGoogle Scholar Priestley and Taylor, 1972 C.H.B.
    Priestley, R.J. Taylor On the assessment of surface heat flux and evaporation
    using large-scale parameters Mon. Weather. Rev., 100 (1972), pp. 81-92, 10.1175/1520-0493(1972)100
    Google Scholar Qu et al., 2021 Z. Qu, J. Xu, Z. Wang, R. Chi, H. Liu Prediction
    of electricity generation from a combined cycle power plant based on a stacking
    ensemble and its hyperparameter optimization with a grid-search method Energy,
    227 (2021), Article 120309, 10.1016/j.energy.2021.120309 View PDFView articleView
    in ScopusGoogle Scholar Refsgaard and Henriksen, 2004 J.C. Refsgaard, H.J. Henriksen
    Modelling guidelines–terminology and guiding principles Adv. Water Res., 27 (1)
    (2004), pp. 71-82, 10.1016/j.advwatres.2003.08.006 View PDFView articleView in
    ScopusGoogle Scholar Ren et al., 2021 Q. Ren, M. Li, H. Li, Y. Shen A novel deep
    learning prediction model for concrete dam displacements using interpretable mixed
    attention mechanism Adv. Eng. Inform., 50 (2021), Article 101407, 10.1016/j.aei.2021.101407
    View PDFView articleView in ScopusGoogle Scholar Roberts et al., 2017 D.R. Roberts,
    V. Bahn, S. Ciuti, M.S. Boyce, J. Elith, G. Guillera-Arroita, S. Hauenstein Cross-validation
    strategies for data with temporal, spatial, hierarchical, or phylogenetic structure
    Ecography, 40 (8) (2017), pp. 913-929, 10.1111/ecog.02881 View in ScopusGoogle
    Scholar Romanenko, 1961 V.A. Romanenko Computation of the autumn soil moisture
    using a universal relationship for a large area Proc. Ukr. Hydrometeorol. Res.
    Inst., 3 (1961), pp. 12-25 Google Scholar Roy and Saha, 2022 J. Roy, S. Saha Ensemble
    hybrid machine learning methods for gully erosion susceptibility mapping: K-fold
    cross validation approach Artif. Intell., 3 (2022), pp. 28-45, 10.1016/j.aiig.2022.07.001
    View PDFView articleView in ScopusGoogle Scholar Shao et al., 2013 C. Shao, K.
    Paynabar, T.H. Kim, J. Jin, S.J. Hu, J.P. Spicer, H. Wang, J.A. Abell Feature
    selection for manufacturing process monitoring using cross-validation J. Manuf.
    Syst., 32 (4) (2013), pp. 550-555, 10.1016/j.jmsy.2013.05.006 View PDFView articleView
    in ScopusGoogle Scholar Shiri et al., 2014 J. Shiri, A.A. Sadraddini, A.H. Nazemi,
    O. Kisi, G. Landeras, A. Fakheri Fard, P. Marti Generalizability of Gene Expression
    Programming-based approaches for estimating daily reference evapotranspiration
    in coastal stations of Iran J. Hydrol., 508 (2014), pp. 1-11, 10.1016/j.jhydrol.2013.10.034
    View PDFView articleView in ScopusGoogle Scholar Shiri et al., 2015 J. Shiri,
    P. Marti, A.H. Nazemi, A. Fakheri Fard Local vs. external training of neuro-fuzzy
    and neural networks models for estimating reference evapotranspiration assessed
    through k-fold testing Hydrol. Res., 46 (1) (2015), pp. 72-88, 10.2166/nh.2013.112
    View in ScopusGoogle Scholar Shu et al., 2022 Z. Shu, Y. Zhou, J. Zhang, J. Jin,
    L. Wang, N. Cui, G. Wang, J. Zhang, H. Wu, Z. Wu, X. Chen Parameter regionalization
    based on machine learning optimizes the estimation of reference evapotranspiration
    in data deficient area Sci. Total Environ., 844 (2022), Article 157034, 10.1016/j.scitotenv.2022.157034
    View PDFView articleView in ScopusGoogle Scholar Song et al., 2011 Y. Song, C.
    Achberger, H.W. Linderholm Rain-season trends in precipitation and their effect
    in different climate regions of China during 1961–2008 Environ. Res. Lett., 6
    (3) (2011), Article 034025, 10.1088/1748-9326/6/3/034025 View in ScopusGoogle
    Scholar Su et al., 2022 Q. Su, V.P. Singh, R. Karthikeyan Improved reference evapotranspiration
    methods for regional irrigation water demand estimation Agric. Water Manag., 274
    (2022), Article 107979, 10.1016/j.agwat.2022.107979 View PDFView articleView in
    ScopusGoogle Scholar Tjoa and Guan, 2021 E. Tjoa, C. Guan A survey on explainable
    artificial intelligence (XAI): toward medical XAI IEEE Trans. Neural Netw. Learn
    Syst., 32 (11) (2021), pp. 4793-4813, 10.1109/TNNLS.2020.3027314 View in ScopusGoogle
    Scholar Valipour et al., 2023 M. Valipour, H. Khoshkam, S.M. Bateni, C. Jun, S.S.
    Band Hybrid machine learning and deep learning models for multi-step-ahead daily
    reference evapotranspiration forecasting in different climate regions across the
    contiguous United States Agric. Water Manag., 283 (2023), Article 108311, 10.1016/j.agwat.2023.108311
    View PDFView articleView in ScopusGoogle Scholar Wan et al., 2023 A. Wan, Q. Chang,
    K. Al-Bukhaiti, J. He Short-term power load forecasting for combined heat and
    power using CNN-LSTM enhanced by attention mechanism Energy, 282 (2023), Article
    128274, 10.1016/j.energy.2023.128274 View PDFView articleView in ScopusGoogle
    Scholar Wang et al., 2019 J. Wang, P. Fu, R.X. Gao Machine vision intelligence
    for product defect inspection based on deep learning and Hough transform J. Manuf.
    Syst., 51 (2019), pp. 52-60, 10.1016/j.jmsy.2019.03.002 View PDFView articleGoogle
    Scholar Wang and Liu, 2006 Y. Wang, Q. Liu Comparison of Akaike information criterion
    (AIC) and Bayesian information criterion (BIC) in selection of stock–recruitment
    relationships Fish. Res., 77 (2) (2006), pp. 220-225, 10.1016/j.fishres.2005.08.011
    View PDFView articleGoogle Scholar Xie et al., 2020 R. Xie, K. Hao, B. Huang,
    L. Chen, X. Cai Data-driven modeling based on two-stream λ gated recurrent unit
    network with soft sensor application IEEE Trans. Ind. Electron., 67 (8) (2020),
    pp. 7034-7043, 10.1109/tie.2019.2927197 View in ScopusGoogle Scholar Xing et al.,
    2022a L. Xing, N. Cui, L. Guo, T. Du, D. Gong, C. Zhan, L. Zhao, Z. Wu Estimating
    daily reference evapotranspiration using a novel hybrid deep learning model J.
    Hydrol., 614 (2022), Article 128567, 10.1016/j.jhydrol.2022.128567 View PDFView
    articleView in ScopusGoogle Scholar Xing et al., 2022b L. Xing, N. Cui, C. Liu,
    L. Zhao, L. Guo, T. Du, C. Zhan, Z. Wu, S. Wen, S. Jiang Estimation of daily apple
    tree transpiration in the Loess Plateau region of China using deep learning models
    Agric. Water Manag., 273 (2022), Article 107889, 10.1016/j.agwat.2022.107889 View
    PDFView articleView in ScopusGoogle Scholar Xing et al., 2023a L. Xing, N. Cui,
    L. Guo, D. Gong, S. Wen, Y. Zhang, M. Fan Predicting daily solar radiation using
    a novel hybrid long short-term memory network across four climate regions of China
    Comput. Electron. Agric., 212 (2023), 10.1016/j.compag.2023.108139 Google Scholar
    Xing et al., 2023b L. Xing, Y. Feng, N. Cui, L. Guo, T. Du, Z. Wu, Y. Zhang, S.
    Wen, D. Gong, L. Zhao Estimating reference evapotranspiration using Penman-Monteith
    equation integrated with optimized solar radiation models J. Hydrol., 620 (2023),
    Article 129407, 10.1016/j.jhydrol.2023.129407 View PDFView articleView in ScopusGoogle
    Scholar Xing et al., 2023c L. Xing, L. Zhao, N. Cui, C. Liu, L. Guo, T. Du, Z.
    Wu, D. Gong, S. Jiang Apple tree transpiration estimated using the Penman-Monteith
    model integrated with optimized jarvis model Agric. Water Manag., 276 (2023),
    Article 108061, 10.1016/j.agwat.2022.108061 View PDFView articleView in ScopusGoogle
    Scholar Xiong et al., 2023 J. Xiong, T. Peng, Z. Tao, C. Zhang, S. Song, M.S.
    Nazir A dual-scale deep learning model based on ELM-BiLSTM and improved reptile
    search algorithm for wind power prediction Energy, 266 (2023), Article 126419,
    10.1016/j.energy.2022.126419 View PDFView articleView in ScopusGoogle Scholar
    Yan et al., 2021 S. Yan, L. Wu, J. Fan, F. Zhang, Y. Zou, Y. Wu A novel hybrid
    WOA-XGB model for estimating daily reference evapotranspiration using local and
    external meteorological data: applications in arid and humid regions of China
    Agric. Water Manag., 244 (2021), Article 106594, 10.1016/j.agwat.2020.106594 View
    PDFView articleView in ScopusGoogle Scholar Yan et al., 2023 X. Yan, N. Yang,
    R. Ao, A. Mohammadian, J. Liu, H. Cao, P. Yin Deep learning for daily potential
    evapotranspiration using a HS-LSTM approach Atmos. Res., 292 (2023), Article 106856,
    10.1016/j.atmosres.2023.106856 View PDFView articleView in ScopusGoogle Scholar
    Yang et al., 2021a X. Yang, S. Feng, D. Wang, Y. Zhang Image-Text multimodal emotion
    classification via multi-view attentional network IEEE Trans. Multimed., 23 (2021),
    pp. 4014-4026, 10.1109/tmm.2020.3035277 View in ScopusGoogle Scholar Yang et al.,
    2021b Y. Yang, R. Chen, C. Han, Z. Liu Evaluation of 18 models for calculating
    potential evapotranspiration in different climatic zones of China Agric. Water
    Manag., 244 (2021), Article 106545, 10.1016/j.agwat.2020.106545 View PDFView articleView
    in ScopusGoogle Scholar Yao et al., 2023 Z. Yao, Z. Wang, D. Wang, J. Wu, L. Chen
    An ensemble CNN-LSTM and GRU adaptive weighting model based improved sparrow search
    algorithm for predicting runoff using historical meteorological and runoff data
    as input J. Hydrol., 625 (2023), Article 129977, 10.1016/j.jhydrol.2023.129977
    View PDFView articleView in ScopusGoogle Scholar Yaseen et al., 2019 Z.M. Yaseen,
    S.O. Sulaiman, R.C. Deo, K.-W. Chau An enhanced extreme learning machine model
    for river flow forecasting: State-of-the-art, practical applications in water
    resource engineering area and future research direction J. Hydrol., 569 (2019),
    pp. 387-408, 10.1016/j.jhydrol.2018.11.069 View PDFView articleView in ScopusGoogle
    Scholar Yin et al., 2020 J. Yin, Z. Deng, A.V.M. Ines, J. Wu, E. Rasu Forecast
    of short-term daily reference evapotranspiration under limited meteorological
    variables using a hybrid bi-directional long short-term memory model (Bi-LSTM)
    Agric. Water Manag., 242 (2020), Article 106386, 10.1016/j.agwat.2020.106386 View
    PDFView articleView in ScopusGoogle Scholar Zha et al., 2022 W. Zha, Y. Liu, Y.
    Wan, R. Luo, D. Li, S. Yang, Y. Xu Forecasting monthly gas field production based
    on the CNN-LSTM model Energy, 260 (2022), Article 124889, 10.1016/j.energy.2022.124889
    View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2019 C. Zhang,
    P. Patras, H. Haddadi Deep learning in mobile and wireless networking: a survey
    IEEE Commun. Surv. Tutor., 21 (3) (2019), pp. 2224-2287, 10.1109/comst.2019.2904897
    View in ScopusGoogle Scholar Zhang and Wang, 2023 Y.-M. Zhang, H. Wang Multi-head
    attention-based probabilistic CNN-BiLSTM for day-ahead wind speed forecasting
    Energy, 278 (2023), Article 127865, 10.1016/j.energy.2023.127865 View PDFView
    articleView in ScopusGoogle Scholar Zhou et al., 2022 D. Zhou, X. Zhuang, H. Zuo,
    J. Cai, X. Zhao, J. Xiang A model fusion strategy for identifying aircraft risk
    using CNN and Att-BiLSTM Reliab. Eng. Syst. Saf., 228 (2022), Article 108750,
    10.1016/j.ress.2022.108750 View PDFView articleView in ScopusGoogle Scholar Zhu
    and Xie, 2023 M. Zhu, J. Xie Investigation of nearby monitoring station for hourly
    PM2.5 forecasting using parallel multi-input 1D-CNN-biLSTM Expert Syst. Appl.,
    211 (2023), Article 118707, 10.1016/j.eswa.2022.118707 View PDFView articleView
    in ScopusGoogle Scholar Cited by (2) Coupling the remote sensing data-enhanced
    SWAT model with the bidirectional long short-term memory model to improve daily
    streamflow simulations 2024, Journal of Hydrology Show abstract Optimizing deficit
    drip irrigation to improve yield,quality, and water productivity of apple in Loess
    Plateau of China 2024, Agricultural Water Management Show abstract © 2024 The
    Author(s). Published by Elsevier B.V. Recommended articles Zero discharge: An
    optimized strategy to improve the hydric deficit in the Mediterranean area by
    pumped hydro storage. Case study of Alicante, Spain Agricultural Water Management,
    Volume 292, 2024, Article 108684 Modesto Pérez-Sánchez, …, Helena M. Ramos View
    PDF Response of winter wheat to different drought levels based on Google Earth
    Engine in the Huang-Huai-Hai Region, China Agricultural Water Management, Volume
    292, 2024, Article 108662 Junfang Zhao, …, Yuping Ma View PDF Dynamics of soil
    water and nitrate within the vadose zone simulated by the WHCNS model calibrated
    based on deep learning Agricultural Water Management, Volume 292, 2024, Article
    108653 Qinghua Guo, Wenliang Wu View PDF Show 3 more articles Article Metrics
    Captures Readers: 2 View details About ScienceDirect Remote access Shopping cart
    Advertise Contact and support Terms and conditions Privacy policy Cookies are
    used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Agricultural Water Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Estimating reference crop evapotranspiration using improved convolutional
    bidirectional long short-term memory network by multi-head attention mechanism
    in the four climatic zones of China
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dolaptsis K.
  - Pantazi X.E.
  - Paraskevas C.
  - Arslan S.
  - Tekin Y.
  - Bantchina B.B.
  - Ulusoy Y.
  - Gündoğdu K.S.
  - Qaswar M.
  - Bustan D.
  - Mouazen A.M.
  citation_count: '0'
  description: Irrigation plays a crucial role in maize cultivation, as watering is
    essential for optimizing crop yield and quality, particularly given maize’s sensitivity
    to soil moisture variations. In the current study, a hybrid Long Short-Term Memory
    (LSTM) approach is presented aiming to predict irrigation scheduling in maize
    fields in Bursa, Turkey. A critical aspect of the study was the use of the Aquacrop
    7.0 model to simulate soil moisture content (MC) data due to data limitations
    in the investigated fields. This simulation model, developed by the Food and Agriculture
    Organization (FAO), helped overcome gaps in soil sensor data, enhancing the LSTM
    model’s predictions. The LSTM model was trained and tuned using a combination
    of soil, weather, and satellite-based plant vegetation data in order to predict
    soil moisture content (MC) reductions. The study’s results indicated that the
    LSTM model, supported by Aquacrop 7.0 simulations, was effective in predicting
    MC reduction across various time phases of the maize growing season, attaining
    R2 values ranging from 0.8163 to 0.9181 for Field 1 and from 0.7602 to 0.8417
    for Field 2, demonstrating the potential of this approach for precise and efficient
    agricultural irrigation practices.
  doi: 10.3390/agriculture14020210
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Agriculture All Article Types Advanced   Journals
    Agriculture Volume 14 Issue 2 10.3390/agriculture14020210 Submit to this Journal
    Review for this Journal Propose a Special Issue Article Menu Academic Editor Yufeng
    Luo Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links
    Article Views 677 Table of Contents Abstract Introduction Materials and Methods
    Results and Discussion Conclusions Author Contributions Funding Institutional
    Review Board Statement Data Availability Statement Conflicts of Interest Appendix
    A References share Share announcement Help format_quote Cite question_answer Discuss
    in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article
    Reprints Open AccessArticle A Hybrid LSTM Approach for Irrigation Scheduling in
    Maize Crop by Konstantinos Dolaptsis 1, Xanthoula Eirini Pantazi 1,*, Charalampos
    Paraskevas 1, Selçuk Arslan 2, Yücel Tekin 3, Bere Benjamin Bantchina 4, Yahya
    Ulusoy 3, Kemal Sulhi Gündoğdu 2, Muhammad Qaswar 5, Danyal Bustan 5,6 and Abdul
    Mounem Mouazen 5 1 Laboratory of Agricultural Engineering, Faculty of Agriculture,
    Aristotle University of Thessaloniki, 54124 Thessaloniki, Greece 2 Department
    of Biosystems Engineering, Faculty of Agriculture, Bursa Uludag University, 16059
    Bursa, Turkey 3 Vocational School of Technical Sciences, Bursa Uludag University,
    16059 Bursa, Turkey 4 Department of Biosystems Engineering, Natural and Applied
    Sciences Institute, Bursa Uludag University, 16059 Bursa, Turkey 5 Department
    of Environment, Faculty of Bioscience Engineering, Ghent University, Coupure Links
    653, 9000 Gent, Belgium 6 Department of Electrical Engineering, Faculty of Electrical
    and Computer Engineering, Quchan University of Technology, Quchan 94771-67335,
    Iran * Author to whom correspondence should be addressed. Agriculture 2024, 14(2),
    210; https://doi.org/10.3390/agriculture14020210 Submission received: 30 November
    2023 / Revised: 10 January 2024 / Accepted: 23 January 2024 / Published: 28 January
    2024 (This article belongs to the Special Issue Applications of Data Analysis
    in Agriculture) Download keyboard_arrow_down     Browse Figures Versions Notes
    Abstract Irrigation plays a crucial role in maize cultivation, as watering is
    essential for optimizing crop yield and quality, particularly given maize’s sensitivity
    to soil moisture variations. In the current study, a hybrid Long Short-Term Memory
    (LSTM) approach is presented aiming to predict irrigation scheduling in maize
    fields in Bursa, Turkey. A critical aspect of the study was the use of the Aquacrop
    7.0 model to simulate soil moisture content (MC) data due to data limitations
    in the investigated fields. This simulation model, developed by the Food and Agriculture
    Organization (FAO), helped overcome gaps in soil sensor data, enhancing the LSTM
    model’s predictions. The LSTM model was trained and tuned using a combination
    of soil, weather, and satellite-based plant vegetation data in order to predict
    soil moisture content (MC) reductions. The study’s results indicated that the
    LSTM model, supported by Aquacrop 7.0 simulations, was effective in predicting
    MC reduction across various time phases of the maize growing season, attaining
    R2 values ranging from 0.8163 to 0.9181 for Field 1 and from 0.7602 to 0.8417
    for Field 2, demonstrating the potential of this approach for precise and efficient
    agricultural irrigation practices. Keywords: precision agriculture; artificial
    intelligence; long short-term memory; predictive control; deep learning; moisture
    content; water management; time series analysis 1. Introduction The increased
    demand for global food production inevitably leads to the increased irrigation
    and water use of several farming practices, leading to the consumption of 70%
    of the available freshwater globally [1]. Conventional irrigation scheduling is
    mostly based on the farmers’ estimations and experience resulting in the reduction
    of available water for irrigation and it usually takes place in an open-loop fashion,
    where the supplied irrigation volume and the prevailing soil water status are
    indirectly connected; consequently, they appear ineffective mostly due to their
    inability to take into account site-specific, spatially variable factors and weather
    conditions occurring in the irrigated area. For the above reasons, it is crucial
    to implement sustainable, yet effective water management practices towards the
    optimal crop health status, yield, and the minimization of water consumption and
    cost. Precision irrigation practices are based on the assessment of the accurate
    water volume and irrigation period required site-specific to each field, so as
    to enhance yield productivity while also reducing the farmers’ labor costs. The
    above tasks can be achieved through monitoring the soil moisture levels. Soil
    moisture is a critical variable in hydrological, climatic, and agricultural processes,
    influencing everything from plant growth to land-atmosphere interactions. The
    presence of soil moisture is beneficial for agricultural productivity, as it has
    the potential to enhance several physiological and biochemical processes associated
    with crop development and, subsequently, crop yield. Therefore, by acquiring knowledge
    about the soil moisture content, farmers can obtain valuable insights on optimal
    timing for sowing and growing crops, adequacy of soil infiltration, and sufficiency
    of the water supply needed to facilitate crop root growth. The realization and
    understanding of these procedures increases the need for the investigation of
    novel approaches that are capable of precisely estimating the level of soil MC
    in a specific location [2]. For the above reasons, continuous and accurate soil
    moisture records are very important for research and practical applications. However,
    obtaining such records can be challenging due to sensor malfunctions, data transmission
    errors, or environmental interferences [3]. For several decades, the assessment
    of irrigation needs in agricultural systems has relied on the application of conventional
    deterministic and empirical models. These models, rooted in established principles
    and equations, have served as the foundational framework for understanding and
    quantifying the water requirements essential for optimal crop growth. This approach
    has been instrumental in shaping irrigation strategies and resource management
    practices within the agricultural domain, contributing significantly to the sustainable
    development of crop cultivation methodologies. The applied models are typically
    based on already known relationships between key variables such as soil moisture,
    evapotranspiration (ET) rates, environmental conditions, and crop growth stages,
    however, they often fail to take into consideration some other important variables
    affecting irrigation needs, including spatial soil variability, which is attributed
    to natural variation in soil properties and characteristics even within the same
    investigated field. To overcome these limitations, the effective combination of
    deterministic and empirical models, coupled with advanced computational technologies
    such as machine learning (ML), can provide more accurate and adaptive irrigation
    management approaches. ML models can effectively predict key variables in irrigation,
    including ET and MC, with minimal human intervention by capturing their complex
    relationships, adapting to changing conditions, and incorporating nonlinear and
    interactive effects, elevating the potential to revolutionize the prediction of
    soil properties [4]. Wu et al. [5] developed a two-level ensemble model using
    ML models for the estimation of daily evapotranspiration (ETo). The first level
    included Random Forest (RF), Support Vector Regression (SVR), Multilayer Perceptron
    (MLP), and K-Nearest Neighbors (KNN), while the second layer contained the Linear
    Regression (LR) model, employed as the meta-learner for results extraction. The
    applied model demonstrated high accuracy, with coefficient of determination (R2)
    values ranging from 0.66 to 0.99. Other common ML approaches for the investigation
    and prediction of MC dynamics included the application of support vector machines
    (SVMs) [6] and adaptive neuro-fuzzy inference systems (ANFIS) [7] for simulating
    times series regarding soil MC, utilizing weather, precipitation, and crop coefficient
    data as input. The aforementioned traditional ML approaches demonstrated satisfactory
    performances compared to the deterministic and physical models, however they appeared
    sensitive to different environmental conditions, unstable in offering reliable
    predictions for the entire range of soil MC levels, and weak in providing insightful
    conclusions when employed in different regions than those that they were initially
    calibrated and developed in. In addition to the weaknesses of traditional ML models,
    the common ANNs models have been widely applied, but they are also limited in
    modelling dynamic data and approximating complex processes due to their tendency
    to lose previously attained and processed information, too [8]. There are some
    commonly applied techniques in order to enhance the performance of the traditional
    ANNs for time series prediction including the addition of extra steps during pre-processing
    [9] and parameters adjustment with the help of genetic algorithms [10]. However,
    preprocessing techniques are time-consuming due to their high dependency on time
    and frequency, and they negatively affect the models’ adaptability to unknown
    environments. The above ambiguities often pose disastrous results to the models’
    prediction performances especially when dealing with highly causal systems. One
    further technique to improve the performance of traditional ANNs is the employment
    of sliding windows. Sliding windows can be employed in an ANN by arranging sequential
    data into windows of defined length that can either overlap or not overlap with
    each other. These windows are then used as input for the model. However, these
    models lack inherent memory mechanisms to retain information from past inputs.
    Each window is treated independently, and the network does not naturally capture
    long-term dependencies in sequential data [11]. For the above reasons, robust
    and scalable data-driven models, in the form of Deep Learning (DL) models, such
    as convolutional neural networks (CNNs), radial basis function networks (RBFN),
    long short-term memory networks (LSTM), recurrent neural networks (RNN) and deep
    belief network (DBN) are employed. Their efficacy lays in their special design’s
    ability to recognize complex patterns through capturing and retaining information
    among large sequential data, and to manage high-dimensional and spatiotemporal
    data resulting in accurate predictions. Among the above-mentioned prediction algorithms,
    the RBFN and LSTM are regarded as highly effective computational tools utilized
    for learning sequential data and are more suitable for predicting time series.
    More specifically, the efficiency of the LSTM models can be attributed to their
    architecture; they are structured of recurrent connected block units that are
    composed of at least one memory cell in order to store and access the information
    for a certain period. The existence of at least one memory cell helps to raise
    their efficiency, while also lowering the gradient error [12]. The self-looped
    cells of the LSTM model are capable of learning long-term temporal dependencies
    in sequential data, simultaneously retaining the information from previous time
    steps [8]. Agyeman et al. [13] developed a predictive control model with discrete
    actuators for predicting irrigation scheduling. In this approach, the soil–water–atmosphere
    system is evaluated with the help of an LSTM model, aiming to assess the optimal
    water uptake in crops. Jetitha and Rajesh [14] proposed a novel approach for irrigation
    scheduling based on a deep bi-directional LSTM model Deep Data Logger and Irrigation
    Activator Unit (D2LIAU). The results indicated that the DBLSTM-based D2LIAU approach
    enables efficient irrigation scheduling with a significantly higher degree of
    reliability in irrigation monitoring since it manages to save water consumption
    from 21.96% to 63.05% when compared to other controlled irrigation practices.
    The main aim of the current study is to demonstrate a hybrid LSTM approach for
    irrigation scheduling prediction. The irrigation needs have been predicted taking
    into account soil, weather, and vegetation data. An LSTM model has been employed
    so as to investigate the predictive capabilities of soil MC reduction per day
    based on the acquired weather data including average daily air temperature, the
    total daily solar radiation (SR), the average daily relative humidity (RH), and
    also the Leaf Area Index (LAI) in two maize fields located in Bakırköy village
    in Karacabey, Turkey. Maize, a widely cultivated cereal crop, is particularly
    sensitive to variations in moisture levels [3]. The study employed an LSTM model
    that integrates data from three distinct sources, including soil sensors, a weather
    station, and satellite imagery. The data measurements from soil sensors, the weather
    station and satellite were acquired on a daily basis for the entire investigated
    period. In order to overcome the lack of MC missing values in Field 1 and the
    limited number of soil MC measurements obtained from only four soil sensors in
    Field 2, the water-driven model Aquacrop 7.0 has been used [15,16] in order to
    compute the daily MC and to acquire data from two extra locations within Field
    2 for the entire investigated period. The limited number of soil measurements
    during the investigated cultivation period has been attributed to some difficulties
    encountered in establishing a reliable and continuous data transmission channel
    between the sensors responsible for MC measurements and the data logger. These
    transmission issues significantly affected the quantity of the MC data collected.
    Aquacrop 7.0 is regarded as a reliable tool due to its proven capability of simulating
    successfully parameters used as input data. These types of data can include soil
    MC, evapotranspiration (ET), and yield in the occasion that they fail to be measured
    in a continuous and accurate manner during experimental field measurements [17].
    In the current study, the failure of acquiring continuous and accurate records
    is often attributed to sensor malfunctions and data transmission errors. However,
    the performance of the LSTM model reveals its significant potential in efficiently
    predicting the future MC reduction in maize fields, overcoming the model’s physical
    tendency to be influenced by the availability and quality of data which is attributed
    both to its architecture and the simulation effect of Aquacrop, introducing novel
    techniques towards more efficient and precise agricultural irrigation practices
    and patterns. Moreover, the current approach encourages the adoption of site-specific
    irrigation patterns that enable Variable Rate Irrigation (VRI), paving the way
    towards enhancing the annual production yields of grains. 2. Materials and Methods
    2.1. Study Area and Data Collection The experimental fields were located in Bakırköy
    village in Karacabey, Turkey (40°08′22.61′ N, 28°22′58.7′ E). An 8.2-ha field
    named Field 1 and a 2.5-ha field named Field 2 cultivated with maize were investigated
    (Figure 1). The type of soil in both fields is alluvial, while the soil texture
    characteristics differ since their percentage content varied between sand, clay,
    and loam clay. The determination of the mechanical composition of the soil was
    performed using the Bouyoucos hydrometer method. The results of this method are
    presented in Section 2.2.4 of this work. The field study was conducted during
    the 2022 growing season. The seeding took place on 16 May in Field 1 and on 11
    May in Field 2. The irrigation system that was utilized was the drip irrigation
    method. Figure 1. A view of the investigated maize fields (Field1 and Field 2).
    The irrigation water is supplied from the buried pressurized irrigation network.
    Field 1 was located in a 20-ha production field that was divided into five irrigation
    plots, each with a maximum area of 4.0 ha. Field 1 coincided with three of these
    plots. Deficit irrigation is common in the region, which was also used in this
    study. The row spacing of the maize crop was 0.7 m, irrigation lateral line spacing
    was 1.4 m, and the number of drippers was 18,000 per hectare during the irrigations.
    Inline linear drippers (Eurodrip -Eolos, Rivulis, Israel) were used in the irrigations
    with an irrigation intensity of 28.8 t/h-ha at an operating pressure of 3 bar.
    A manual valve was used to adjust the specified operating pressure (3.0 bar) of
    the drippers at the end of the secondary irrigation lines to ensure that the water
    pressure is not below 3.0 bar at the most distant lateral. An analog pressure
    gauge (Pakkens 0–6 bar) was used to measure the pressure at the end of the secondary
    (Field 1) and main lines (Field 2). For each irrigation, the farmer changed the
    irrigation time from 6 h to 10 h per irrigation. The farmer utilizes crop water
    demands given in the irrigation guide for the Bursa-Karacabey district and the
    weather station (Metos IMT280) data to determine the application rate for each
    irrigation. The frequency of the irrigations was affected not only by the technical
    data but also the availability of the labor since the irrigation system was not
    automatically controlled. In the early growth stages of the maize crop, the irrigations
    were done in 2–3 days whereas in the rest of the irrigation season the irrigations
    were done in 4–10 days depending on the aforementioned conditions. This type of
    pressurized irrigation system offers several advantages, including a high degree
    of linear control over the water application, optimal nutrient intake, the optimization
    of water usage, and the reduction of water resources waste [18,19]). The quantity
    and placement of the sensors were made according to the relative MZs constructed
    for irrigation. MZs were created based on the precise spatial data of predicted
    soil MC and clay. The aforementioned data were acquired on 28 June 2021 from visible
    and near-infrared spectral measurements, using the online multi-sensor platform
    developed by Mouazen [20]. The data for the development of the utilized LSTM model
    for soil moisture prediction were acquired from three distinct sources including
    soil sensors, a weather station, and satellite-based plant vegetation data. A
    cloud-based LoRA-WAN wireless network was used so that data from soil sensors
    could be constantly collected (Figure 2). The study involved the deployment of
    nine Dragino LSE01 soil sensors in various areas within Field 1, as well as four
    soil sensors in Field 2. The soil sensors were installed vertically at 30 cm depth
    to monitor the soil MC ((%) VWC), apparent electrical conductivity (ECa) (uS/cm),
    and soil temperature (°C). The sensors enable MC measurements using frequency
    domain reflectometry (FDR), and the accuracy of the MC sensors was reported to
    be ±3% by the manufacturer [21]. The accuracy of the sensors was checked during
    the irrigation season once by collecting soil samples at sensor locations, resulting
    in approximately 3–5% errors in soil moisture measurements. No further investigations
    were done to check or improve the measurement accuracy of MC sensors. The sensor
    network gateway was posed about 800 m away from the sensors in a clear view of
    sight. A commercial weather station (Metos IMT280) located near the farm center
    and 3.5 km away from the experimental field was used to collect weather data,
    including air temperature (°C), dew point temperature (°C), solar radiation (W/m2),
    vapor pressure (kPa), relative humidity (%), rainfall (mm), wind speed and instant
    wind speed (km/h), and daily evapotranspiration (mm). Figure 2. LoRa-WAN used
    for soil moisture collection. The availability of free-of-cost, high resolution
    satellite datasets (finer than 30 m) was obtained from sensors such as Sentinel-2
    and advanced open-source tools such as Sentinel Application Platform (SNAP). This
    tool offers accurate and consistent values of LAI. Sentinel-2 images at 10 m resolution
    were used to derive LAI using the built-in Biophysical processor, also called
    the Sentinel-2 Land bio-physical processor (SL2P), within the SNAP Toolbox. The
    Biophysical processor uses eight reflectance bands (B3, B4, B5, B6, B7, B8A, B11,
    and B12) [22]. The utilized Sentinel-2 product was Level-2A. The LAI values were
    obtained from satellite images captured on 23, 26 and 28 June, as well as on 1,
    3, 8, 13, 16, 18, 21, 23 and 26 July and 2 August 2022. It is worthy to note that
    deliberate emphasis has been placed on the selection of imagery acquired on days
    characterized by optimal meteorological conditions. Emphasis was also given to
    instances featuring clear skies, abundant sunlight, and an absence of cloud cover,
    in order to ensure the acquisition of high-quality satellite imagery, defining
    the basis for a precise and reliable extraction of the Leaf Area Index (LAI).
    Recognizing the necessity for a continuous dataset, a linear interpolation method
    was implemented for those days that satellite images were not available. The interpolation
    technique involved leveraging the acquired data points to estimate LAI values
    for the sensor location pixel for the non-captured days, providing a seamless
    and comprehensive analysis for the entire monitoring period and bridging any temporal
    gaps within the dataset. Finally, for the days before the 23 June 2022, the values
    of LAI were equal to 0 as the crop was at the initial stages of growth. LAI, as
    an essential biophysical parameter of vegetation, is a dimensionless variable
    representing the ratio of leaf area to per unit ground surface area. This ratio
    is associated with gas-vegetation exchange processes including photosynthesis,
    evaporation, transpiration, and rainfall interception [23]. 2.2. Methods 2.2.1.
    The Long Short-Term Memory Model (LSTM) Process In the current study, a long short-term
    memory recurrent neural network (LSTM RNN) has been developed. RNNs belong to
    a more complex and advanced type of ANNs networks that are well-suited for modeling
    sequential inputs, such as speech data and natural language data, among others.
    The structure of RNNs is similar to that of feed-forward neural networks or artificial
    neural networks (ANNs). However, RNNs differ from ANNs in that they possess cyclic
    connections, in contrast to the acyclic nature of ANNs. In a typical ANN, information
    tends to flow only in one direction, moving from the input layer through hidden
    layers to the output layer. However, the cyclic connections that characterize
    RNN correspond to the feedback connections between the neurons that allow information
    to be fed back from the output layer to the hidden layers. This special feedback
    design enhances the RNN networks’ capability to learn from their own predictions
    based on previously attained information and refine their representations and
    predictive performance over time. This kind of architecture can be particularly
    useful when dealing with tasks where temporal dependencies or context are crucial,
    like in the occasion of time-series data handling. The cyclic connections enable
    the network to capture and leverage feedback information, making it more effective
    in tasks like sequence modeling [24]. More specifically, in the occasion of a
    RNN, the neurons inside a layer have the capability to establish connections with
    one another, including the possibility of self-connections, a feature that was
    previously not allowed in artificial neural networks (ANNs). Due to their inherent
    cyclic structure, RNNs leverage past inputs to calculate outputs at each iteration,
    enabling them to retain a memory of prior events. This memory is utilized to facilitate
    subsequent predictions. The presence of cyclic links enables the integration of
    prior information into the decision-making process [25]. The diagram in Figure
    3 illustrates the architecture of a recurrent neural network. Figure 3. Structure
    of typical recurrent neural network. Each neuron forms connections with the neurons
    in its own layer, as well as with the neurons in the preceding and next layers,
    and with itself. The LSTM model has been introduced by Hochreiter, and belongs
    to the broader category of RNN models, but in a more revolutionized version. The
    main advantage of LSTM over typical RNNs lies in their short-term memory availability.
    Consequently, as we move on to the next layers, the gradients are preserved so
    that the weight factors are updated and in the occasion that the short-term memory
    is in bidirectional means, the information is preserved in both directions [26].
    Regarding its architecture, the LSTM model is composed of one block with three
    gates, namely the Input Gate, the Forget Gate and the Output Gate. Each gate’s
    activation probability ranges from 0 to 1 corresponding to an open gate and a
    closed gate, respectively. There are some cells capable of recalling information
    and forwarding it to the next gate, while the hidden layer unit in RNN is replaced
    by three gates. The main objective of an LSTM model is to get the output variable
    𝑂 𝑡 by utilizing the equations denoted in Equations (1)–(6). In order to control
    the information flow within the LSTM network, each LSTM unit consists of a hidden
    state vector ℎ 𝑡 , a cell memory state vector 𝐶 𝑡 , and three gates. The architecture
    of an LSTM is presented in Figure 4. Figure 4. Architecture of an LSTM cell, comprising
    three special gates: Input Gate (i), Forget Gate (f), and Output Gate (O). These
    gates control which information is going to be retained, forgotten, and maintained,
    and the volume of information. The first gate ( 𝑓 𝑡 ) is called the Forget Gate,
    which controls to what extent should specific information from the prior cell
    memory state ( 𝐶 𝑡−1 ) be disregarded. The Forget Gate’s output vector is represented
    in Equation (1) as follows: 𝑓 𝑡 =𝜎( 𝑤 𝑓 𝐼 𝑡 + 𝑧 𝑓 ℎ 𝑡−1 + 𝑏 𝑓 ), (1) where 𝑓 𝑡
    denotes the sigmoid activation function that takes values in the set {0,1}, 𝐼
    𝑡 is the input sequence, 𝑤 𝑓 and 𝑧 𝑓 are the adjustable weight parameters, and
    𝑏 𝑓 is the bias vector. At the initial time instant (t = 0), the variables ℎ 𝑡
    and 𝐶 𝑡 are initialized with a vector equal to zero as specified by the user-defined
    parameters of the network. Then, the cell memory state vector undergoes an update
    through the use of a hyperbolic tangent layer, namely the tanh function, which
    is mathematically demonstrated in Equation (2) as follows: 𝐶 𝑡 =𝑡𝑎𝑛ℎ( 𝑤 𝑐 𝐼 𝑡
    + 𝑧 𝑐 ℎ 𝑡−1 + 𝑏 𝑐 ), (2) where 𝐶 𝑡 ∈ {−1,1}, and 𝑤 𝑐 , 𝑧 𝑐 , and 𝑏 𝑐 are additional
    coefficients that can be learned. Furthermore, the output of the second gate,
    known as the Input Gate, regulates the information that is utilized so as to update
    the cell memory state 𝐶 𝑡 at the present time. This is expressed in Equation (3)
    as follows: 𝑖 𝑡 =𝜎( 𝑤 𝑖 𝐼 𝑡 + 𝑧 𝑖 ℎ 𝑡−1 + 𝑏 𝑖 ), (3) where 𝑖 𝑡 ∈{0,1} is sigmoid
    function, and 𝑤 𝑖 , 𝑧 𝑖 , 𝑏 𝑖 are another set of learnable coefficients for the
    input gate. Using the outcomes of Equations (1) and (3), the cell memory state
    vector is modified as follows: 𝐶 𝑡 = 𝑓 𝑡 ⊙ 𝐶 𝑡−1 + 𝑖 𝑡 ⊙ 𝐶 𝑡 , (4) where ⊙ represents
    the multiplication between the gate and cell memory state vector elements. The
    first term of Equation (4) can be interpreted as the information that must be
    forgotten from the previous cell memory state vector 𝐶 𝑡−1 and the information
    that must be stored 𝑓 𝑡 close to one). Similarly, the second term can be interpreted
    as the degree to which new input information must be stored ( 𝑖 𝑡 close to 1)
    and the information that can be neglected ( 𝑖 𝑡 close to 0). The third and final
    gate is the Output Gate ( 𝑂 𝑡 ), which regulates the volume of information acquired
    from the current cell memory state vector, transferred to the next hidden state
    ℎ 𝑡 , and is represented in Equation (5) as follows: 𝑂 𝑡 =𝜎( 𝑤 𝑜 𝐼 𝑡 + 𝑧 𝑜 ℎ 𝑡−1
    + 𝑏 𝑜 ), (5) where 𝑂 𝑡 ∈{0,1} is sigmoid function, and 𝑤 𝑜 , 𝑧 𝑜 , and 𝑏 𝑜 are
    the set of learnable coefficients for the output gate. In addition, the new hidden
    state ℎ 𝑡 is calculated using Equations (4) and (5), and it can be expressed as
    follows: ℎ 𝑡 =𝑡𝑎𝑛ℎ( 𝐶 𝑡 )⊙ 𝑂 𝑡 . (6) Then, the final output of the Long Short-Term
    Memory (LSTM) layer is forwarded to a completely connected dense layer that consists
    of a single neuron. The ultimate predicted output, denoted as 𝑦 𝑝𝑟𝑒𝑑 , is calculated
    by Equation (7): 𝑦 𝑝𝑟𝑒𝑑 = 𝑤 𝑑 ℎ 𝑘 + 𝑏 𝑑 , (7) where ℎ k is the output of the final
    LSTM layer, 𝑤 𝑑 and 𝑏 𝑑 are the weight coefficients and bias term of the fully
    connected dense layer [27]. 2.2.2. LSTM Model Training and Hyperparameter Tuning
    The soil measurements concerned the following variables: electrical conductivity
    (ECa), soil temperature, and moisture content (MC). In this study, MC has been
    solely utilized as the target variable that the model seeks to predict. More specifically,
    the daily MC reduction was determined through utilizing the value of MC for each
    sensor on a daily basis. The soil sensor data were acquired from mid-June to August
    3rd. However, sporadic missing values occurred as a result of transmission failures
    in the data logger. In order to address this issue and acquire a thorough dataset
    regarding the sowing dates, specifically on 11 May for Field 2 and on 16 May for
    Field 1, the Aquacrop program was employed to simulate the moisture content on
    a daily basis. Furthermore, in Field 2, due to the limited number of measurements
    obtained from the four soil sensors, the Aquacrop program was employed to acquire
    data from two extra locations inside the field throughout the entire period. The
    weather measurements were obtained by the utilization of a weather station. The
    meteorological data that was used consisted of the average daily air temperature,
    the total daily solar radiation, and the average daily relative humidity. Furthermore,
    the utilization of Sentinel-2 satellite images was employed to generate the leaf
    area vegetation index (LAI). The data (measured and interpolated) that were used
    for training the LSTM network are visually presented in Appendix A. The objective
    of the model is to forecast the reduction of MC for the next day using the MC
    reduction, the weather data, and Leaf Area Index (LAI) of the previous three days.
    The model underwent testing for a duration spanning from 18 June 2022 to 3 August
    of 2022, corresponding to four distinct phases. During the initial phase, the
    prediction of a decrease in MC between the 18th and 28th of June 2022 was made
    using data from the months of May (corresponding to the sowing date) up through
    to the 17 June, which were utilized for training purposes. Similarly, during the
    period from 29 June 2022 to 12 July 2022, the training process was conducted using
    data from May until 28 June. During the third phase, the model underwent training
    using data from the sowing date until the12 July 2022. The purpose of this training
    was to enable the model to generate predictions for the period between the 13
    and 24 July 2022. In the final phase, the entire available dataset was utilized
    to evaluate the performance of the model in predicting the MC reduction between
    the 25 July 2022 and the 3 August 2022 (Table 1). Table 1. Date periods throughout
    the investigated cultivating period divided into four district phases for training
    and testing of the LSTM model. During each phase, the available training dataset
    was divided into a window of three. The term “window of three” denotes that the
    model takes a sliding window of size three across the sequential data in order
    to predict the next target value. This window starts at the first data point and
    moves one step at a time through the sequence [26]. Furthermore, in each phase,
    the available dataset was partitioned into two subsets. Specifically, 80% of the
    dataset was assigned for training the model, while the remaining 20% was reserved
    for conducting an independent test. Through testing on unseen data, the model’s
    ability to generalize to the desired timeframe can be evaluated. In this study,
    the time series approach is essential because it accounts for temporal dependencies
    and seasonal variations that may affect irrigation requirements. By training and
    testing on discrete time periods, the model does not rely on future data during
    the training phase, preventing data leakage and obtaining objective performance
    metrics. Once the separation is completed, the data underwent pre-processing and
    fusion procedures prior to being fed to the model. Standardization was used to
    transform the features of the dataset so as to take a mean of 0 and a standard
    deviation of 1. Feature level fusion was selected due to the combination of features
    extracted from multiple sources. The selection of the appropriate hyperparameters
    used to train the model was also a significant issue that needed to be addressed,
    as they tend to have a substantial impact on the efficacy of the models. Tuning
    the hyperparameters is crucial, and can be accomplished through a variety of techniques,
    such as grid search, random search, and Bayesian optimization [28]. The grid search
    technique has been chosen for the tuning of hyperparameters. In this method, a
    variety of hyperparameters are evaluated, and finally the one with the highest
    performance on the validation set is chosen. The different hyperparameters that
    were tested (first layer size, second layer size, optimizer, dropout rate, number
    of epochs, batch size) for training each model are demonstrated in Table 2. Table
    2. Tested values of the different deep learning hyperparameters for their tuning
    by grid search. Regarding the selection of the optimization algorithm, the Adaptive
    Moment Estimation (Adam) algorithm appeared to be more performant compared to
    other tested algorithms, such as SGD (Stochastic Gradient Descent) and RMSprop
    (Root Mean Square Propagation), since the Adam’s learning rates can easily adjust
    to the varying gradients during the training of sequences when employing an LSTM
    model [29,30]. The selected Adam algorithm for training was set at a batch size
    of 16 and a total of 80 epochs. In addition, the optimal dropout rate was determined
    to be equal to 0, and the initial LSTM layer was selected with a size of 64, while
    the second LSTM layer was chosen to have a size of 32. An attention mechanism
    was placed between the two LSTM layers in order to enhance the model’s understanding
    of sequences. The method accomplishes this by computing relevance scores between
    a current time step and all other time steps. These scores are transformed into
    attention weights which were used to combine information from all time steps,
    creating an enriched dataset representation. This enriched information is integrated
    into the initial LSTM’s output and passed to the next LSTM layer. This process
    allows the model to emphasize important parts of the sequence, capture long-range
    dependencies, handle various sequence lengths, and produce more accurate predictions.
    The created attention mechanism tends to improve the model’s performance when
    dealing with sequence-related tasks through enabling the model to focus on relevant
    information and to interpret complex patterns [31]. Additionally, certain callbacks
    were involved to further optimize the Grid Search method and the overall performance
    of the training process. Under this framework, three primary callback functions
    were employed including Early Stopping, Model Checkpoint, and ReduceLROnPlateau.
    The Early Stopping callback has been chosen for monitoring the validation loss
    and also for finalizing the training process in case no progress is indicated
    throughout a specified period of epochs, also known as “patience”. In the current
    study, a patience level of 6 epochs has been selected. The Model Checkpoint callback
    was employed to store the model’s weights after each epoch, keeping the epoch
    with the highest validation accuracy, to ensure that the most optimal model will
    be used for future deployment. ReduceLROnPlateau was employed to dynamically adjust
    the learning rate of the optimizer based on the observed behavior of the loss
    function during training. In the current study, the learning rate was set equal
    to 0.0021. The data processing and models development have been implemented using
    the TensorFlow library (version 2.10) within a Python-based programming environment
    (Python version 3.9). 2.2.3. Evaluation Metrics for the LSTM Model The model was
    evaluated, using standard evaluation metrics that are commonly used in regression
    problems, such as the coefficient of determination ( 𝑅 2 ) and the root mean squared
    error ( 𝑅𝑀𝑆𝐸 ). 𝑅 2 ranges from 0 to 1 and it is interpreted as the percentage
    of the variation in the dependent variable that can be attributed to the independent
    variables in the model. The formula for the R2 metric, also known as the coefficient
    of determination, is given in Equation (8) as follows: 𝑅 2 =1−( 𝑆𝑆𝑅 𝑆𝑆𝑇 ), (8)
    where 𝑆𝑆𝑅 (Sum of Squared Residuals) represents the sum of the squared differences
    between the predicted values and the mean of the dependent variable. It measures
    the unexplained variation in the dependent variable by the regression model. On
    the other hand, 𝑆𝑆𝑇 (Total Sum of Squares) represents the total sum of squared
    differences between the actual values and the mean of the dependent variable.
    It measures the total variation in the dependent variable. 𝑅𝑀𝑆𝐸 represents the
    standard deviation of the residuals, i.e., the differences between the predicted
    and actual values. A lower 𝑅𝑀𝑆𝐸 value indicates better accuracy and a closer fit
    of the model to the data. The formula for the Root Mean Square Error ( 𝑅𝑀𝑆𝐸 )
    metric is given in Equation (9) as follows: 𝑅𝑀𝑆𝐸= ( 1 𝑛  ⋅ ∑ (𝑦_𝑝𝑟𝑒𝑑−𝑦_𝑎𝑐𝑡𝑢𝑎𝑙)
    2 ) − − − − − − − − − − − − − − − − − − − − − − − − − − − − √ , (9) where n is
    the total number of data points, 𝑦_𝑝𝑟𝑒𝑑 represents the predicted values from the
    mode and 𝑦_𝑎𝑐𝑡𝑢𝑎𝑙 represents the actual values of the dependent variable [32].
    2.2.4. AQUACROP Model Simulations Precision agriculture has gained momentum with
    the integration of simulation models and ML approaches. A precise estimation of
    maize’s water requirements can substantially augment water usage efficiency. In
    this work, Aquacrop v7.0 has been used [15] to simulate the soil MC so as to overcome
    the soils sensor’s failure to acquire constant or adequate measurements in the
    two investigated maize fields. The MC data derived from Aquacrop have been integrated
    to the existent MC datasets acquired from soil sensor measurements, then were
    employed for the training of the LSTM neural network to determine the maize’s
    water requirements. Aquacrop, developed by the Food and Agriculture Organization
    (FAO), Rome, Italy, of the United Nations, is a widely accepted deterministic
    model that primarily focuses on addressing water needs under different environmental
    conditions. The model is based on the balance between water availability and demand
    and is specialized in handling environments where water availability is limited.
    For maize, specific parameters such as root depth, canopy cover, and soil characteristics
    are used as input data into Aquacrop. The software has built-in templates for
    maize, but for better accuracy, it is essential to adjust settings based on local
    conditions [33,34]. One of the significant features of Aquacrop is its ability
    to utilize basic soil parameters and transform it into hydraulic properties with
    the help of pedotransfer functions, which are essential for performing accurate
    simulation regarding soil MC. The hydraulic properties required for AQUACROP v7.0
    were estimated using pedotransfer functions, derived from the soil texture data.
    In Table 3 and Table 4 the soil texture data and the hydraulic properties (residual
    soil water content θr, saturated soil water content θs, α and n empirical fitting
    parameters and saturated hydraulic conductivity Ks) were estimated using pedotransfer
    functions [35] for the investigated fields Field 1 and 2. These data are used
    to assess the water content of field capacity and permanent wilting point using
    the van Genuchten equation [36]. Table 3. Estimated soil texture and hydraulic
    parameters using pedotransfer functions in different soil sensor locations in
    Field 1. Table 4. Estimated soil texture and hydraulic parameters using pedotransfer
    functions in different soil sensor locations in Field 2. Clay loam soil has a
    balanced texture that includes a mixture of sand, silt, and clay particles. This
    balance allows it to retain moisture while still providing good drainage. Also,
    this type of soil generally has moderate to good infiltration properties. It can
    absorb water without excessive runoff, which is beneficial for crop growth. One
    of the strengths of clay loam soil is its ability to retain moisture. The fine
    clay particles help hold water in the soil, which can be advantageous during dry
    periods. Soil, crop, and meteorological parameters from both investigated fields
    were used as input data for Aquacrop (Table 3 and Table 4). The simulated MC data
    derived from Aquacrop have been integrated to the initial MC dataset acquired
    from the soil sensors, which was utilized for training the employed LSTM model.
    3. Results and Discussion In order to assess and predict the irrigation needs
    for each of the investigated fields, the reduction of MC within a defined period,
    from 18 June 2022 to 3 August 2022 needed to be assessed and predicted as well.
    The dataset was split into four distinct phases in response to fluctuations of
    crop irrigation needs and also to facilitate the repeated training and testing
    loops of the LSTM model to ensure that the developed model will be refined with
    the most pertinent data for every temporal interval, in order to yield the accurate
    predictions. The model predicts the decrease in MC in millimeters (mm) converting
    them using the volumetric water content (% VWC). Table 5 presents the results
    of the LSTM predictions for each of the four investigated phases regarding Field
    1. These findings reveal the model’s effectiveness in estimating the reduction
    in MC within the four designated time periods. Table 5. Coefficient of determination
    (R2) and Root Mean Square Error (RMSE) results of Field 1 on test data. The findings
    derived from the LSTM predictive model demonstrate promising performance in estimating
    the decrease in MC in maize in Field 1 across the four discrete phases. The obtained
    results demonstrate an upward trend in the efficacy of the model as we move through
    the phases, a phenomenon that can be attributed to the increasing size of the
    training dataset. During the initial phase, the coefficient determination (R-squared,
    R2) was determined to be 0.8264, which suggests a significant degree of reliability
    in forecasting the decrease in moisture content. This phase corresponds to the
    time period from16 May to 28 June. During this phase the daily reduction of MC
    was low and exhibited a steady trend. As a result, the model exhibited very good
    performance during this phase, as the patterns observed in the testing dataset
    closely mirrored those present in the training data. Moving to the second phase,
    the R2 remains similarly high to that at phase 1, at 0.8163. While this value
    is slightly lower than the first phase, it remains quite impressive, since during
    this period the reduction in MC was more variable, which can explain the minor
    reduction in performance compared to the first phase. In the third phase, the
    model’s performance improves more, with an R2 equal to 0.8422. This increase in
    performance may be attributed to the continued expansion of the training dataset,
    giving the model the opportunity to capture a wider range of MC reduction patterns.
    The final phase demonstrates the highest R2 of 0.9181. This substantial increase
    regarding the model’s predictive accuracy indicates that the model has become
    exceptionally adept at forecasting MC reduction, leading to the general observation
    that the larger training dataset, that conveyed data from all the three previous
    phases, contributed significantly to enhancing the model’s predictive ability
    for the fourth phase. Figure 5 illustrates the comparison between the observed
    values and the predicted values generated by the LSTM model for each of the nine
    soil sensor locations throughout the first phase in Field 1. Figure 5. Comparison
    between the actual and the predicted MC per location in Field 1 during 1st phase.
    As observed in Figure 5, the reduction in MC at each location is generally minimal,
    with the exception of the final (ninth) day. This phenomenon occurs due to the
    relatively low ET rates during these eight days, leading to a subtle reduction
    of MC. Consequently, the model exhibits a high performance across all locations
    throughout the initial eight-day period. On the contrary, on the ninth day of
    the first phase, a slight deviation between the observed and predicted MC value
    is indicated. In Figure 6 the comparison between the observed values and the predicted
    values derived from the LSTM model for each of the nine soil sensor locations
    during the second phase conducted in Field 1 are depicted. Each panel of the illustration
    portrays a comparison between the three sensors. Figure 6. (a) Comparison between
    actual and predicted MC for locations 2, 3 and 5 during 2nd phase; (b) Comparison
    between actual and predicted MC for locations 7, 9 and 10 during 2nd phase; (c)
    Comparison between actual and predicted MC for locations 12, 13 and 15 during
    2nd phase. The three panels in Figure 6 exhibit a noticeable variation between
    the observed and forecasted values for all sensors for the whole duration. In
    comparison to the first figure, it is evident from the graph depicting the MC
    reduction over the timeframe including 29 June 2022, to 12 July 2022, that there
    has been a notable decrease in MC. The considerable rate of MC reduction can be
    attributed to the significantly elevated levels of evapotranspiration that have
    been prevalent during this period. One particularly noteworthy observation is
    that on day 7, the most substantial decrease in MC from all the nine locations
    in the maize field was recorded. This day appears to have experienced conditions
    that contribute directly to MC reduction, including high temperatures, increased
    solar radiation, and lower relative humidity levels. Figure 7 depicts the comparison
    between the observed values and the predicted values of MC for the third phase.
    Figure 7. (a) Comparison between actual and predicted MC for locations 2, 3 and
    5 during 3rd phase; (b) Comparison between actual and predicted MC for locations
    7, 9 and 10 during 3rd phase; (c) Comparison between actual and predicted MC for
    locations 12, 13 and 15 during 3rd phase. The performance of the LSTM model in
    the third phase appears to be significantly high for all sensors, except sensor
    13. This notably abnormal behavior can be explained by the high content of clay
    in the soil, which contributed to the significant reduction of MC on a daily basis,
    and is comparatively lower in this particular location. The presented figure illustrates
    a consistent and significant daily decrease in MC across all locations. Figure
    8 presents a visual representation of the comparison conducted between actual
    and predicted MC for different locations during the fourth phase. Figure 8. (a)
    Comparison between actual and predicted MC for locations 2, 3 and 5 during 4th
    phase; (b) Comparison between actual and predicted MC for locations 7, 9 and 10
    during 4th phase; (c) Comparison between actual and predicted MC for locations
    12, 13 and 15 during 4th phase. As previously indicated, the estimated values
    closely align with the observed values in this phase. Moreover, it is noteworthy
    that the reduction in MC during this phase is of a higher magnitude compared to
    the previous phases (1st, 2nd and 3rd). The performance of the LSTM model on the
    testing dataset for Field 2 is shown in Table 6. Table 6. Coefficient of determination
    (R2) and Root Mean Square Error (RMSE) results of Field 2 on test data. In contrast
    to the results observed for Field 1, in the occasion of Field 2 the LSTM model
    exhibits lower precision in estimating MC reduction. This difference can be attributed
    to multiple factors, with the limitation of data availability being the main factor.
    Field 2 demonstrates a comparatively constrained dataset compared to Field 1,
    so it would be reasonable to assume that this would have an immediate negative
    impact on the model’s ability to accurately capture and extrapolate the patterns
    of MC reduction. However, it is noteworthy to mention that the performance trends
    observed in Field 2 seem to follow a similar pattern to those of Field 1. In the
    first phase, Field 2 exhibited an R2 value of 0.8392, which indicates a good level
    of reliability. This phase corresponds to a period from 11 May to 28 June, which
    is characterized by a small and steady reduction in MC, making it easier for the
    model to make accurate predictions. However, during the second phase, the value
    of R2 decreases to 0.7602. Such a decrease of R2 in Field 2 can possibly be attributed
    to the increased variability or to the complexity of MC reduction patterns during
    this period, similar to Field 1. In the third phase, the model’s performance improves
    slightly with an R2 equal to 0.7992. Finally, in the fourth phase, Field 2 demonstrates
    an R2 equal to 0.8417. The performance of this phase concerning Field 2 closely
    resembles that of Field 1, indicating the model’s improvement, attributed to the
    inclusion of a bigger training dataset that incorporates data from the three previous
    phases. Figure 9 illustrates the comparison between the observed values and the
    predicted values generated by the model for each of the six soil locations throughout
    the first phase in Field 2. Figure 9. MC comparison per location in Field 2 during
    phase 1. Figure 10 depicts the comparative outcomes between the actual and predicted
    MC after the second phase in Field 2. Figure 10. Comparison between actual and
    predicted MC for locations (a) 8, 11 and 14 during 2nd phase and (b) 16, 17 and
    18 during 2nd phase. At this phase, the model indicates satisfactory results in
    predicting the reduction of MC in locations 11, 14, and 18. For the other locations,
    the model appeared less accurate in predicting the MC reduction values for day
    eight. The uniformity in soil MC reduction during the initial five days, followed
    by variations in the subsequent four days across all six sensor locations, can
    be explained due to the occurrence of several interacting factors during the four
    different phases that contributed to the reduction of MC. More specifically, weather
    conditions, including but not limited to air temperature, humidity and solar radiation,
    hold a pivotal role over the rate of evapotranspiration, which captures both plant
    transpiration and soil evaporation. The constancy in moisture reduction during
    the first five days may be attributed at least partially to the consistent meteorological
    conditions prevailing during the investigated time period. Finally, the progressive
    growth of maize plants over time, followed by the extension and deepening of their
    root systems, contributes to the inevitable decrease of MC since the plants have
    a greater ability to capture water and nutrients from deeper soil layers. Consequently,
    the maize crop development tends to significantly alter the soil moisture kinetics
    patterns. Figure 11 and Figure 12 illustrate the comparison of the observed values
    and the predicted values produced by the model for each soil location during the
    third and fourth phases in Field 2. Figure 11. Comparison between actual and predicted
    MC for locations (a) 8, 11 and 14 during 3rd phase and (b) 16, 17 and 18 during
    3rd phase. Figure 12. Comparison between actual and predicted MC for locations
    (a) 8, 11 and 14 during 4th phase and (b) 16, 17 and 18 during 4th phase. Similar
    to Field 1, the daily changes are substantial due to the heightened evapotranspiration
    during these stages and the greater frequency of irrigation by the farmer. Additionally,
    the model’s performance exhibits improvement during phases 3 and 4, similar to
    what was observed in Field 1. In summary, it can be concluded that the LSTM model
    exhibited encouraging potential forecasting the reduction of MC in maize fields.
    The results validated that the performance of the LSTM model was greatly influenced
    by the availability and quality of data confirming previously conducted research
    in the field [37], which utilized a Bi-LSTM model, and demonstrated a notable
    R2 improvement, benefiting from a comprehensive dataset spanning 14 years. A more
    extended period of investigation would have ideally offered a vast array of data
    for model training through the extensive historical datasets [38] to ensure robust
    predictive capabilities. However, in the current study, irrigation needs have
    been effectively predicted despite the challenge that has been encountered due
    to the soil data measurements’ discontinuity, revealing that predictions for irrigation
    scheduling can be made without the existence of extensive historical datasets
    that often require a span of several years to decades to yield high predictive
    performances. The high performance of the LSTM model is attributed to its special
    asset among traditional RNNs, characterized by its special gates that are responsible
    for controlling the flow, the volume, and the type of the previously attained
    and processed information that is going to be maintained and forwarded from the
    memory cell to the next hidden state. The utilization of the Aquacrop 7.0 model
    to simulate soil MC data due to data limitations in the investigated fields, equipped
    the LSTM model with a consistent and adequate volume of data in order to perform
    precise predictions for irrigation scheduling in maize crops, confirming its effectiveness
    towards the accurate and reliable simulation of moisture content (MC) [17] that
    is also mirrored in our findings. For both investigated fields, the LSTM model
    becomes more efficient in predicting MC reduction as we move through the four
    investigated phases, since the dataset is enriched with data from previous phases.
    The high performance of the model has been assisted by the sufficient number of
    soil sensors which provided a satisfactory volume of measurements. Comparing the
    performance of the LSTM model between the two investigated fields, the results
    appear slightly lower for Field 2 compared to those for Field 1, indicating an
    R2 ranging from 0.7602 to 0.8417 can be explained by the limited data availability.
    However, Field 2 continues to show similar behavior in its predictive ability,
    close to that of the LSTM model demonstrated for Field 1. It is worth noting that
    despite the lack of a sufficient number of sensors, there were only six for Field
    2, the observed variations in MC reduction occur mostly due to the same factors
    that are mostly related to the weather conditions and the expected crop growth
    over time. Incorporating these methods into a comprehensive system, such as the
    predictive irrigation scheduling system we employed, underscores the value of
    integrating real-time data with advanced modelling techniques. This integration
    allows for more effective irrigation strategies, aligning with the broader goals
    of sustainable agriculture and water resource management. The employed LSTM model
    has been proven capable of maintaining its predictive accuracy, highlighting the
    potential for real-time, season-specific irrigation management. This advancement
    is particularly significant in precision agriculture, where timely and accurate
    predictions can lead to more efficient water usage and improved crop management
    strategies. The further enhancement of the Aquacrop model with more comprehensive
    field data, including precise measurements of root distribution and Leaf Area
    Index (LAI), could substantially elevate its accuracy in simulating crop water
    needs. This improvement will enable more precise irrigation scheduling, optimizing
    water usage while ensuring optimal crop growth and yield. In the future, additional
    studies will include the integration of detailed data regarding the root systems
    and canopy characteristics, that are expected to assist the model in reflecting
    the actual water uptake and evapotranspiration patterns of crops in a better and
    more detailed manner, leading to more precise predictions regarding the irrigation
    needs. 4. Conclusions The basis of the present study has been the soil moisture
    data which exhibited non-stationary time series, characterized by a regular periodic
    pattern with significant fluctuations. The above challenge has been faced through
    the application of the LSTM model. The LSTM model has been developed to forecast
    the reduction of soil MC, focusing on the needed amount of water so as to assess
    and cover the required irrigation needs in maize crops. The efficiency of the
    LSTM model has been evaluated based on its forecasting abilities on the impact
    of weather data and satellite extracted data on the reduction of MC in four distinct
    time phases. Based on the results demonstrated above, the performance of the proposed
    model has been estimated as high for both investigated fields despite the limited
    availability of soil sensors in Field 2 compared to Field 1. This demonstrates
    the fact that the LSTM model is a powerful tool for forecasting soil moisture
    dynamics in grain fields. Moreover, the LSTM’s adaptability and robustness in
    predicting the MC reduction, encourages its potential applicability to a variety
    of other precision agriculture practices that require effective handling of sequential
    data such as crop growth monitoring and crop yield prediction. The effectiveness
    of the LSTM model in accurately predicting the soil MC decrease holds the potential
    of revolutionizing agriculture, offering several benefits to farmers, agronomists,
    and policymakers. More specifically, through the adoption of such site-specific
    irrigation patterns enabled by RNN models, Variable Rate Irrigation (VRI) application
    schemes can be adopted, securing and enhancing yield annual productivity in grains.
    Through its integration to decision support systems (DSSs), the LSTM model can
    provide a variety of real-time recommendations in the precision agriculture domain,
    due to the model’s efficiency of taking into account a wide range of factors,
    such as weather conditions and historical data, enabling dynamic and efficient
    irrigation. The above-mentioned ability can be considered as a special asset of
    the LSTM model in securing and improving decision-making in the field of precision
    agriculture. Consequently, farmers can optimize their irrigation scheduling practices
    based on accurate forecasts and policymakers are given the opportunity to use
    these forecasts for evidence-based decisions towards efficient irrigation water
    management and sustainable agriculture in general. Based on the results of this
    study, future work could focus on the design of a predictive irrigation approach,
    where crucial components of crop growth are integrated so as to have a better
    understanding of the future irrigation needs of crops based on the growth stage.
    Author Contributions Conceptualization, K.D., X.E.P. and C.P.; methodology, K.D.
    and X.E.P.; software, K.D. and C.P.; validation, X.E.P.; formal analysis, K.D.,
    X.E.P. and C.P.; data curation, K.D. and C.P.; writing—original draft preparation,
    K.D., X.E.P. and C.P.; writing—review and editing, X.E.P., K.D., C.P., M.Q., D.B.
    and A.M.M.; supervision, X.E.P.; resources: S.A., Y.T., K.S.G., Y.U. and B.B.B.;
    investigation S.A. and Y.T.; project administration, A.M.M.; funding acquisition,
    A.M.M. All authors have read and agreed to the published version of the manuscript.
    Funding This research has been co-financed by the European Regional Development
    Fund (ERDF), the Greek national fund General Secretariat for Research and Innovation
    through the Partnership Agreement for the Development Framework 2014–2020 (Action:
    ERANETS—2021A), the Scientific and Technological Research Council of Turkey—TUBITAK
    (contract Nr: 120N787) and Fonds Wetenschappelijk Onderzoek (FWO) (Contract no.
    S007621N). Institutional Review Board Statement Not applicable. Data Availability
    Statement The data presented in this study are available upon request from the
    corresponding author. Conflicts of Interest The authors declare no conflicts of
    interest. Appendix A In the following figures the data (measured and interpolated)
    that were used for training the LSTM network are visually presented. Figure A1.
    Daily values of mean temperature (a), total solar radiation (b) and relative humidity
    (c), observed over the study period. Figure A2. Leaf Area Index measured and interpolated
    values for sensors 2, 3, 5, 7, 9, 10, 12, 13 and 15 (respectively a,b,c,d,e,f,g,h,i)
    of Field 1. Figure A3. Leaf Area Index measured and interpolated values for sensors
    8, 11, 14, 16, 17 and 18 (respectively a,b,c,d,e,f) of Field 2. Figure A4. Moisture
    Content difference using measured and simulated by AQUACROP values for sensors
    2, 3, 5, 7, 9, 10, 12, 13 and 15 (respectively a,b,c,d,e,f,g,h,i) of Field 1.
    Figure A5. Moisture Content difference using measured and simulated by AQUACROP
    values for sensors 8, 11, 14, 16, 17 and 18 (respectively a,b,c,d,e,f) of Field
    2. References Ramachandran, V.; Ramalakshmi, R.; Kavin, B.P.; Hussain, I.; Almaliki,
    A.H.; Almaliki, A.A.; Elnaggar, A.Y.; Hussein, E.E. Exploiting IoT and its enabled
    technologies for irrigation needs in agriculture. Water 2022, 14, 719. [Google
    Scholar] [CrossRef] Guan, Y.; Grote, K.; Schott, J.; Leverett, K. Prediction of
    soil water content and electrical conductivity using random forest methods with
    UAV multispectral and ground-coupled geophysical data. Remote Sens. 2022, 14,
    1023. [Google Scholar] [CrossRef] Dumedah, G.; Coulibaly, P. Evaluation of statistical
    methods for infilling missing values in high-resolution soil moisture data. J.
    Hydrol. 2011, 400, 95–102. [Google Scholar] [CrossRef] Lin, S.L. Application of
    machine learning to a medium Gaussian support vector machine in the diagnosis
    of motor bearing faults. Electronics 2021, 10, 2266. [Google Scholar] [CrossRef]
    Wu, T.; Zhang, W.; Jiao, X.; Guo, W.; Hamoud, Y.A. Evaluation of stacking and
    blending ensemble learning methods for estimating daily reference evapotranspiration.
    Comput. Electron. Agric. 2022, 184, 106039. [Google Scholar] [CrossRef] Karandish,
    F.; Šimůnek, J. A comparison of numerical and machine-learning modeling of soil
    water content with limited input data. J. Hydrol. 2016, 543, 892–909. [Google
    Scholar] [CrossRef] Hong, Z.; Kalbarczyk, Z.; Iyer, R.K. Using a wireless sensor
    network and machine learning techniques. In Proceedings of the 2016 IEEE International
    Conference on Smart Computing (SMARTCOMP), St. Louis, MO, USA, 18–20 May 2016.
    [Google Scholar] Adeyemi, O.; Grove, I.; Peets, S.; Domun, Y.; Norton, T. Dynamic
    neural network modelling of soil moisture content for predictive irrigation scheduling.
    Sensors 2018, 18, 3408. [Google Scholar] [CrossRef] Tsang, S.W.; Jim, C.Y. Applying
    artificial intelligence modeling to optimize green roof irrigation. Energy Build.
    2016, 127, 360–369. [Google Scholar] [CrossRef] Gu, J.; Yin, G.; Huang, P.; Guo,
    J.; Chen, L. An improved back propagation neural network prediction model for
    subsurface drip irrigation system. Comput. Electr. Eng. 2017, 60, 58–65. [Google
    Scholar] [CrossRef] Ramos, M.M.P.; Del Alamo, C.L.; Zapana, R.A. Forecasting of
    meteorolog1ical weather time series through a feature vector based on correlation.
    In Proceedings of the Computer Analysis of Images and Patterns: 18th International
    Conference, Salerno, Italy, 3–5 September 2019; Part I 18. Springer International
    Publishing: Berlin/Heidelberg, Germany, 2019; pp. 542–553. [Google Scholar] Farzad,
    M.; Shafieifar, M.; Azizinamini, A. Experimental and numerical study on bond strength
    between conventional concrete and Ultra High-Performance Concrete (UHPC). Eng.
    Struct. 2019, 186, 297–305. [Google Scholar] [CrossRef] Agyeman, B.T.; Naouri,
    M.; Appels, W.; Liu, J. Irrigation management zone delineation and optimal irrigation
    scheduling for center pivot irrigation systems. IFAC Pap. 2023, 56, 9906–9911.
    [Google Scholar] [CrossRef] Jenitha, R.; Rajesh, K. Intelligent irrigation scheduling
    scheme based on deep bi-directional LSTM technique. Int. J. Environ. Sci. Technol.
    2023, 21, 1905–1922. [Google Scholar] [CrossRef] FAO. AquaCrop Stand-Alone Program,
    Version 7.0. 2022; Food and Agriculture Organization of the United Nations, Land
    and Water Division: Rome, Italy, 2022; Available online: https://www.fao.org/aquacrop/software/aquacropplug-inprogramme/en/
    (accessed on 8 October 2022). Sandhu, R.; Irmak, S. Performance of AquaCrop model
    in simulating maize growth, yield, and evapotranspiration under rainfed, limited
    and full irrigation. Agric. Water Manag. 2019, 223, 105687. [Google Scholar] [CrossRef]
    Zhao, H.; Di, L.; Guo, L.; Zhang, C.; Lin, L. An Automated Data-Driven Irrigation
    Scheduling Approach Using Model Simulated Soil Moisture and Evapotranspiration.
    Sustainability 2023, 15, 12908. [Google Scholar] [CrossRef] Türkler, L.; Akkan,
    T.; Akkan, L.Ö. Detection of Water Leakage in Drip Irrigation Systems Using Infrared
    Technique in Smart Agricultural Robots. Sensors 2023, 23, 9244. [Google Scholar]
    [CrossRef] [PubMed] Sharu, E.H.; Ab Razak, M.S. Hydraulic Performance and Modelling
    of Pressurized Drip Irrigation System. Water 2020, 12, 2295. [Google Scholar]
    [CrossRef] Mouazen, A.M. Soil survey device. In International Publication Published
    under the Patent Cooperation Treaty (PCT); International Publication Number: WO2006/015463;
    World Intellectual Property Organization, International Bureau: Geneva, Switzerland,
    2006. [Google Scholar] Dragino. LSE01-LoRaWAN Soil Moisture & EC Sensor User Manual.
    Available online: https://www.dragino.com/products/agriculture-weather-station/item/277-se01-lb.html
    (accessed on 17 August 2023). Kganyago, M.; Mhangara, P.; Alexandridis, T.; Laneve,
    G.; Ovakoglou, G.; Mashiyi, N. Validation of sentinel-2 leaf area index (LAI)
    product derived from SNAP toolbox and its comparison with global LAI products
    in an African semi-arid agricultural landscape. Remote Sens. Lett. 2020, 11, 883–892.
    [Google Scholar] [CrossRef] Maimaitijiang, M.; Sagan, V.; Sidike, P.; Daloye,
    A.M.; Erkbol, H.; Fritschi, F.B. Crop monitoring using satellite/UAV data fusion
    and machine learning. Remote Sens. 2020, 12, 1357. [Google Scholar] [CrossRef]
    Bianchi, F.M.; Maiorino, E.; Kampffmeyer, M.C.; Rizzi, A.; Jenssen, R. Recurrent
    Neural Networks for Short-Term Load Forecasting: An Overview and Comparative Analysis;
    Springer: Cham, Switzerland, 2017. [Google Scholar] Nguyen, A.D.; Le Nguyen, P.;
    Vu, V.H.; Pham, Q.V.; Nguyen, V.H.; Nguyen, M.H.; Nguyen, T.H.; Nguyen, K. Accurate
    discharge and water level forecasting using ensemble learning with genetic algorithm
    and singular spectrum analysis-based denoising. Sci. Rep. 2022, 12, 19870. [Google
    Scholar] [CrossRef] Kratzert, F.; Klotz, D.; Brenner, C.; Schulz, K.; Herrnegger,
    M. Rainfall–runoff modelling using long short-term memory (LSTM) networks. Hydrol.
    Earth Syst. Sci. 2018, 22, 6005–6022. [Google Scholar] [CrossRef] Ishfaque, M.;
    Dai, Q.; Haq, N.U.; Jadoon, K.; Shahzad, S.M.; Janjuhah, H.T. Use of recurrent
    neural network with long short-term memory for seepage prediction at Tarbela Dam,
    KP, Pakistan. Energies 2022, 15, 3123. [Google Scholar] [CrossRef] Belete, D.M.;
    Huchaiah, M.D. Grid search in hyperparameter optimization of machine learning
    models for prediction of HIV/AIDS test results. Int. J. Comput. Appl. 2022, 44,
    875–886. [Google Scholar] [CrossRef] Yu, C.; Qi, X.; Ma, H.; He, X.; Wang, C.;
    Zhao, Y. LLR: Learning learning rates by LSTM for training neural networks. Neurocomputing
    2020, 394, 41–50. [Google Scholar] [CrossRef] Zhang, J.; Hu, F.; Li, L.; Xu, X.;
    Yang, Z.; Chen, Y. An adaptive mechanism to achieve learning rate dynamically.
    Neural Comput. Appl. 2019, 31, 6685–6698. [Google Scholar] [CrossRef] Yin, H.;
    Jin, D.; Gu, Y.H.; Park, C.J.; Han, S.K.; Yoo, S.J. STL-ATTLSTM: Vegetable price
    forecasting using STL and attention mechanism-based LSTM. Agriculture 2020, 10,
    612. [Google Scholar] [CrossRef] Achieng, K.O. Modelling of soil moisture retention
    curve using machine learning techniques: Artificial and deep neural networks vs.
    support vector regression models. Comput. Geosci. 2022, 133, 104320. [Google Scholar]
    [CrossRef] Kour, K.; Gupta, D.; Rashid, J.; Gupta, K.; Kim, J.; Han, K.; Mohiuddin,
    K. Smart Framework for Quality Check and Determination of Adulterants in Saffron
    Using Sensors and AquaCrop. Agriculture 2023, 13, 776. [Google Scholar] [CrossRef]
    Wang, F.; Xue, J.; Xie, R.; Ming, B.; Wang, K.; Hou, P.; Zhang, L.; Li, S. Assessing
    growth and water productivity for drip-irrigated maize under high plant density
    in arid to semi-humid climates. Agriculture 2022, 12, 97. [Google Scholar] [CrossRef]
    Schaap, M.G.; Leij, F.J.; van Genuchten, M.T. ROSETTA: A Computer Program for
    Estimating Soil Hydraulic Parameters with Hierarchical Pedotransfer Functions.
    J. Hydrol. 2001, 251, 163–176. [Google Scholar] [CrossRef] Van Genuchten, M.T.
    A Closed-Form Equation for Predicting the Hydraulic Conductivity of Unsaturated
    Soils. Soil Sci. Soc. Am. J. 1980, 44, 892–898. [Google Scholar] [CrossRef] Zhang,
    J.; Zhu, Y.; Zhang, X.; Ye, M.; Yang, J. Developing a Long Short-Term Memory (LSTM)
    based model for predicting water table depth in agricultural areas. J. Hydrol.
    2018, 561, 918–929. [Google Scholar] [CrossRef] Alibabaei, K.; Gaspar, P.D.; Lima,
    T.M. Modeling soil water content and reference evapotranspiration from climate
    data using deep learning method. Appl. Sci. 2021, 11, 5029. [Google Scholar] [CrossRef]
    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all
    publications are solely those of the individual author(s) and contributor(s) and
    not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility
    for any injury to people or property resulting from any ideas, methods, instructions
    or products referred to in the content.  © 2024 by the authors. Licensee MDPI,
    Basel, Switzerland. This article is an open access article distributed under the
    terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Dolaptsis, K.; Pantazi, X.E.; Paraskevas, C.;
    Arslan, S.; Tekin, Y.; Bantchina, B.B.; Ulusoy, Y.; Gündoğdu, K.S.; Qaswar, M.;
    Bustan, D.; et al. A Hybrid LSTM Approach for Irrigation Scheduling in Maize Crop.
    Agriculture 2024, 14, 210. https://doi.org/10.3390/agriculture14020210 AMA Style
    Dolaptsis K, Pantazi XE, Paraskevas C, Arslan S, Tekin Y, Bantchina BB, Ulusoy
    Y, Gündoğdu KS, Qaswar M, Bustan D, et al. A Hybrid LSTM Approach for Irrigation
    Scheduling in Maize Crop. Agriculture. 2024; 14(2):210. https://doi.org/10.3390/agriculture14020210
    Chicago/Turabian Style Dolaptsis, Konstantinos, Xanthoula Eirini Pantazi, Charalampos
    Paraskevas, Selçuk Arslan, Yücel Tekin, Bere Benjamin Bantchina, Yahya Ulusoy,
    Kemal Sulhi Gündoğdu, Muhammad Qaswar, Danyal Bustan, and et al. 2024. \"A Hybrid
    LSTM Approach for Irrigation Scheduling in Maize Crop\" Agriculture 14, no. 2:
    210. https://doi.org/10.3390/agriculture14020210 Note that from the first issue
    of 2016, this journal uses article numbers instead of page numbers. See further
    details here. Article Metrics Citations No citations were found for this article,
    but you may check on Google Scholar Article Access Statistics Article access statistics
    Article Views 28. Jan 2. Feb 7. Feb 12. Feb 17. Feb 22. Feb 27. Feb 3. Mar 8.
    Mar 13. Mar 18. Mar 23. Mar 28. Mar 2. Apr 0 200 400 600 800 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Agriculture, EISSN 2077-0472, Published by MDPI RSS
    Content Alert Further Information Article Processing Charges Pay an Invoice Open
    Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For
    Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Agriculture (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Hybrid LSTM Approach for Irrigation Scheduling in Maize Crop
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Goyal P.
  - Sharda R.
  - Saini M.
  - Siag M.
  citation_count: '1'
  description: Neural computing methods pose an edge over conventional methods for
    drought stress identification because of their ease of implementation, accuracy,
    non-invasive approach, cost-effectiveness, and ability to predict in real time.
    To ensure proper irrigation scheduling and prevent major yield losses, the objective
    was to develop a deep learning (DL)-based custom convolutional neural network
    (CNN) framework for in situ identification and classification of drought stress
    in maize crops. An original image dataset was created by acquiring 2703 RGB images
    of maize crops under natural daylight conditions to incorporate noise and varied
    backgrounds. The dataset was augmented and divided in a ratio of 7:2:1 for the
    training, validation, and test sets. A custom-CNN model was built using feature
    blocks, fully connected layers, and dense layers, and compared with five state-of-the-art
    CNN architectures, i.e. InceptionV3, Xception, ResNet50, DenseNet121 and EfficientNetB1.
    The results revealed that the custom CNN model achieved accuracies of 98.71% and
    98.53% on the training and test sets, respectively. In comparison, the ResNet50
    and EfficientNetB1 transfer-learned CNN architectures achieved an equivalent accuracy
    of 99.26% each, followed by DenseNet121 with a 98.90% accuracy on the test set.
    The Xception model performed the worst, with the highest accuracy of 91.91% on
    the test set. The results demonstrate that the developed custom CNN model should
    be adopted for real-time implementation on resource-constrained edge devices because
    of the lower number of parameters (0.65 million parameters) compared to other
    state-of-the-art architectures.
  doi: 10.1007/s00521-023-09219-z
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Neural Computing and Applications
    Article A deep learning approach for early detection of drought stress in maize
    using proximal scale digital images Original Article Published: 17 November 2023
    Volume 36, pages 1899–1913, (2024) Cite this article Download PDF Access provided
    by University of Nebraska-Lincoln Neural Computing and Applications Aims and scope
    Submit manuscript Pooja Goyal, Rakesh Sharda , Mukesh Saini & Mukesh Siag  314
    Accesses Explore all metrics Abstract Neural computing methods pose an edge over
    conventional methods for drought stress identification because of their ease of
    implementation, accuracy, non-invasive approach, cost-effectiveness, and ability
    to predict in real time. To ensure proper irrigation scheduling and prevent major
    yield losses, the objective was to develop a deep learning (DL)-based custom convolutional
    neural network (CNN) framework for in situ identification and classification of
    drought stress in maize crops. An original image dataset was created by acquiring
    2703 RGB images of maize crops under natural daylight conditions to incorporate
    noise and varied backgrounds. The dataset was augmented and divided in a ratio
    of 7:2:1 for the training, validation, and test sets. A custom-CNN model was built
    using feature blocks, fully connected layers, and dense layers, and compared with
    five state-of-the-art CNN architectures, i.e. InceptionV3, Xception, ResNet50,
    DenseNet121 and EfficientNetB1. The results revealed that the custom CNN model
    achieved accuracies of 98.71% and 98.53% on the training and test sets, respectively.
    In comparison, the ResNet50 and EfficientNetB1 transfer-learned CNN architectures
    achieved an equivalent accuracy of 99.26% each, followed by DenseNet121 with a
    98.90% accuracy on the test set. The Xception model performed the worst, with
    the highest accuracy of 91.91% on the test set. The results demonstrate that the
    developed custom CNN model should be adopted for real-time implementation on resource-constrained
    edge devices because of the lower number of parameters (0.65 million parameters)
    compared to other state-of-the-art architectures. Similar content being viewed
    by others Automatic Flood Detection from Sentinel-1 Data Using a Nested UNet Model
    and a NASA Benchmark Dataset Article Open access 12 March 2024 Plant disease detection
    using drones in precision agriculture Article Open access 28 March 2023 The improved
    YOLOv8 algorithm based on EMSPConv and SPE-head modules Article 02 January 2024
    1 Introduction Maize (Zea mays) or corn is the most widely cultivated and consumed
    crop throughout the world. The annual production of maize in the year 2021–22
    reached 1.2 billion metric tons, with the USA being the largest producer [1].
    It is the third most important cereal crop after wheat and rice, which contributes
    toward the global food security. However, maize crop is extremely sensitive to
    heat and drought stress [2] and its production will be significantly impacted
    by the climate change. Climate change will result in increased temperatures, change
    precipitation distribution patterns, and reduce the amount of rainfall received
    in a year, which will further accelerate the frequency of droughts worldwide [3].
    Maize, an extremely heat- and drought-sensitive crop [2], is one of the most negatively
    impacted crops [4]. In general, plant stress disrupts plant metabolism in many
    ways [5], resulting in reduced growth and significant crop yield reductions [6,7,8,9].
    Abiotic stress factors are also expected to become more frequent and intense as
    a result of climate change [10]. Among the various abiotic stresses, water/drought
    stress is the most prominent factor that severely impacts crop growth, physiology
    and ultimately affects crop yields. The physiological response of plants to an
    insufficient supply of water is referred to as drought stress. Drought was found
    to be responsible for an approximately 20–30% reduction in maize yield in China
    and India [11]. Another study reported a yield loss of 40% on a global scale [12].
    Drought stress resulted in 45–92% yield reductions in different crops [13]. The
    onset of drought varies with crop type, variety, and growth stage [14]. The identification
    of this stress is especially important for water-sensitive crops, such as maize
    [13]. Exposure of maize to drought conditions at the tasseling stage results in
    significant yield loss [15]. Maize crops may respond in either elastic (reversible)
    or plastic (irreversible) manner, depending on the degree of stress [10]. Therefore,
    it is pertinent to identify drought stress at a stage where the effects of stress
    can be reversed with timely irrigation to maximize the yield potential of the
    crop. However, identifying drought stress, particularly during the initial stages,
    is a challenging task. Traditionally, various direct and indirect methods have
    also been used for stress measurement. Lab-based methods that measure leaf water
    potential or leaf water content often involve destructive sampling. Other direct
    methods involve the installation of sophisticated intricate sensors in the field.
    These sensors are generally expensive and time-consuming, and the measurements
    are point-based and may not consider spatial variability in actual field conditions.
    The lack of continuous in situ monitoring has given way to indirect methods, such
    as remote or proximal sensing, which offer better alternatives for the precise
    and accurate identification of water stress. Imaging techniques offer a noninvasive
    and nondestructive method for plant stress detection. Depending on the range of
    the sensor, imaging can be either simple red-blue-green (RGB) imagery (acquired
    using digital cameras in the visible range of 400–700 nm) or thermal, multispectral,
    hyperspectral, or florescence imaging. Apart from visible-range imaging, other
    imaging options serve as expensive alternatives and are easily influenced by atmospheric
    variations. Digital RGB images captured on a proximal scale can be combined with
    advanced computer-vision methods to provide important insights into plant stress
    analyses. With recent advancements in the field of computer vision, artificial
    intelligence (AI)-based techniques such as machine learning (ML) and image processing
    techniques have been used widely for the detection and identification of different
    types of biotic and abiotic stresses using digital image-based datasets [16,17,18,19,20].
    Zhuang et al. [19], used SVM and GBDT to detect water stress in maize crop by
    creating a dataset comprising of three categories of images, i.e., well-watered,
    reduced water and drought stressed. The developed model achieved an accuracy of
    90.39% and gave comparable accuracy when tested on images from open-field conditions
    with variable illumination intensity. Although ML models have demonstrated great
    success in the recognition of plant stress, the process of manual feature extraction
    fails to generalize to a different task, causing a lack of automation. Therefore,
    the developed ML model is unsuitable for real-time field implementation. Deep
    learning (DL), which is essentially a subset of ML, simplifies the learning process
    by eliminating the need for manual feature extraction. Deep learning typically
    solves this problem by using various forms of neural networks. It performs hierarchical
    feature extraction using various convolution layers that automatically extract
    useful information from an image. Image classification saw a breakthrough through
    convolutional neural networks (CNN), a type of DL network, that has been used
    extensively for the identification and classification of different types of biotic
    and abiotic stresses using digital image datasets [21,22,23,24,25,26,27]. This
    network has alternate convolutional and pooling layers, followed by fully connected
    layers. This network extracts image features by dividing an image into small blocks
    and assigning individual weights. It has been documented that DL models generally
    provide higher accuracy than ML models. In a follow up study by [19], An et al.,
    [25], used transfer learning approach with ResNet50 and ResNet152 models to improve
    drought stress detection accuracy with the same dataset. The results revealed
    that the models trained from scratch took longer and were less accurate than the
    transfer-learned models. The transfer-learned ResNet50 and ResNet152 models achieved
    accuracies of 96% and 95.09%, respectively, and performed better than the SVM
    and GBDT. Azimi et al., [28] created a dataset of chickpea crop under controlled
    conditions to detect water stress at 3 stages, i.e., control, young seedling and
    before flowering. They utilized a variant of CNN-Long short-term memory (CNN-LSTM),
    which achieved an accuracy of 98.52% and 97.78% on the JG-62 and Pusa-372 varieties,
    respectively. Earlier studies leveraged freely available datasets to develop classification
    models for drought stress detection in different crops. However, most studies
    employed datasets that were built under strict imaging protocols, where the lighting,
    background, illumination, and angles were predefined. There is no doubt that these
    imaging protocols help reduce background noise and aid in enhancing accuracy,
    resulting in good models. However, these models lack robustness and perform poorly
    under actual field conditions, which limits the deployment of the developed model
    in real-time scenarios. Very few studies have reported the use of in situ image
    datasets with varied backgrounds and lighting intensities for plant stress detection
    [21, 29, 30]. The objective of this study was to develop a robust image classification
    model built on a maize crop dataset acquired in real field experiments to replicate
    actual field conditions. A custom CNN pipeline that can be used in real time will
    be built from scratch to detect drought stress in maize crops. Along with the
    custom CNN model, various state-of-the-art CNN architectures such as InceptionV3,
    Xception, ResNet50, DenseNet121, and EfficientNetB1 were transfer-learned and
    compared with our custom-CNN architecture to arrive at the best performing model.
    2 Methodology 2.1 Experimental setup The maize crop was planted in an open field
    environment at the Research Farm of the Department of Soil and Water Engineering,
    Ludhiana, during the spring (2021) and Kharif (2021) seasons. Seeds were sown
    on February 12, 2021, and July 3, 2021, for the spring and kharif seasons, respectively.
    The experimental fields were divided into four plots. Each main plot was further
    divided into sub-plots such that three different types of maize varieties (i.e.,
    PMH-08, PMH-10 and DKC-9108 in spring season and PMH-1, PMH-11, PMH-13 during
    Kharif season) were grown under full irrigation (100% of the recommended dose
    of irrigation) and deficit irrigation (20% deficit of the recommended dose of
    irrigation) under mulched conditions. The main plots were replicated four times.
    Surface drip irrigation was used to irrigate the raised beds. The seeds were planted
    on raised beds in paired rows. Different varieties of maize were sown manually
    using the dibbling method. The field soil was first tested for the available nutrients
    in the soil, and fertigation was applied in accordance with the package of practices
    recommended by PAU, Ludhiana. Full irrigation was applied in the initial stages
    of crop growth in both treatments to ensure normal sprouting. 2.2 Image acquisition
    Digital images were captured manually at regular intervals using a Sony DSC-HX400V
    RGB camera to capture healthy and drought-stressed images of maize crops under
    varied background and lighting conditions. The other camera specifications include
    an ISO of 80, shutter speed of 1/60, and aperture of f/5. For image acquisition,
    the camera angle was maintained at approximately 45° from the vertical axis of
    the plant. Because the images were captured in natural daylight conditions, the
    image background varied considerably from soil, mulch, sky, building, human subjects
    such as hands, dirt, etc., including the illumination intensity throughout the
    day. The incorporation of such varied backgrounds, along with sunlight intensity,
    would enhance the robustness of the proposed model and incorporate it directly
    without significant alterations. Most of the images were captured throughout the
    day, starting from the high-knee stage of the maize crop until the start of the
    tasseling stage. The crop growth period was selected based on the sensitivity
    of the maize crop to water stress during this stage. 2.3 Dataset preparation A
    total of 2704 images, each with a size of 5184 × 3888, belonging to two classes,
    the first being the healthy class (1421 images) and the second being the drought-stressed
    class (1283 images), were captured and labeled to create the original dataset.
    An image dataset comprising 1000 images per class is considered satisfactory for
    classification tasks using CNNs, as the world’s largest collection of datasets,
    called ‘ImageNet’, also consists of an average of 1000 images per class [31].
    [32] also used an original dataset comprising 656 original images to train a CNN
    model. The collected images were resized to (224 × 224) and rescaled to 1/255
    pixels for the custom CNN model. The entire dataset was divided in a ratio of
    7:2:1 for the training, validation, and test sets. The batch size was maintained
    at 32. The training set provides the data for the learning process to fit the
    model parameters, the validation set aids in feature selection, and fine-tunes
    the hyperparameters associated with the model. The developed model was then tested
    on the test set to obtain an unbiased evaluation of the developed model. The images
    in the training and validation sets were subjected to preprocessing techniques,
    as shown in Fig. 1. Some image augmentation techniques included horizontal and
    vertical flipping, rotation between 0–10 degrees, image zoom to the range of 20%,
    and width and height shift range maintained at 0.2, which shears the images to
    20% width and height. Augmentation was applied batch-wise on the fly. This means
    that each image in a training batch is subjected to random transformations and
    returns newly transformed data on the go. Data augmentation was applied to the
    training and validation sets, while the test set was not augmented. This process
    of applying random transformations makes the model robust and allows for multiprocessing,
    parallelization of the loading process, and faster computation. All models were
    run for 50 epochs. Fig. 1 Different types of pre-processing applied to the training
    and validation dataset Full size image 2.4 Development of the custom CNN framework
    The custom and other CNN architectures were written and executed in Python 3.8.8,
    using TensorFlow (2.8). TensorFlow is an open-source machine-learning library
    used to perform image classification using Keras. The software was run on a Windows
    PC with an Intel Core i5-6200U CPU 2.30 GHz and 8 GB RAM. The custom CNN framework
    is a sequential pipeline containing a stack of convolutional layers, which form
    the major building block of the CNN. It has a group of filters, also called kernels,
    that extract features, such as color, edges, or textures, which are useful for
    image characterization and form a feature or activation map. Activation functions
    add a nonlinear component to the output of the previous layer for faster convergence
    and to prevent the problem of vanishing gradients. A Rectified Linear Unit (ReLU)
    was used as an activation function in the CNN layers. Two convolutional layers
    were followed by a max-pooling layer, which selects the maximum value from each
    patch of the feature map generated by the convolutional filter. The output of
    this operation is a feature map that contains the most prominent features of the
    previous layers. This is followed by a dropout layer, which intentionally drops
    random information from the neurons of the previous layers before heading to the
    next layer to improve processing, reduce computational time, and avoid model overfitting.
    The dropped neurons were not updated during the backward pass. Thus, the custom
    CNN model consisted of four feature blocks, followed by a flattened layer. The
    flatten layer serves as a connection between the convolutional layers and the
    fully connected layer, which converts the resultant 2D arrays from the pooled
    feature maps to a single long continuous linear vector. Finally, the fully connected
    layers, also called dense layers, contain several neurons that receive input from
    all the neurons of the previous layer. The last dense layer contains two neurons,
    and it applies another activation function called “softmax” to assign the outputs
    of the previous layers to their specified target class. The Adaptive Moment Estimation
    (Adam), an advanced form of the stochastic gradient descent method, was used as
    an optimizer to adjust the learning rate (initially kept at 0.001) of the weights
    of the neural network. The sparse categorical cross-entropy loss function was
    used to calculate the model loss. This tends to minimize the difference between
    the actual and predicted outputs. For all models, the model weights were saved
    at every epoch when the validation accuracy improved. Similar architectures have
    been used by other researchers to customize CNN model architecture [32]. The custom-CNN
    model architecture used in this study is illustrated in Fig. 2. Fig. 2 Frame work
    of the custom CNN Model Full size image 2.5 Transfer learning architectures employed
    The custom CNN model was compared with five state-of-the-art CNN architectures:
    InceptionV3, Xception, ResNet50, DenseNet121, and EfficientNetB1. The transfer
    learning approach was used to leverage the learnings of these architectures trained
    on a ‘ImageNet’ dataset to solve a similar but different problem. In this approach,
    these pre-trained models are used as a starting point to solve the current problem
    instead of training the model from scratch. This approach improves the existing
    models for a specific use case and significantly reduces storage and computational
    resources to a great extent. The initial architecture is generally frozen to avoid
    any loss of information that these models have learned from previous tasks. Additional
    trainable layers were added on top of the frozen layers to apply the old features
    to the predictions of a new dataset. In our case, a max-pooling, flatten, and
    dense layer was added to the stack of frozen layers, and the models were then
    trained for 50 epochs. These CNN architectures employed for transfer learning
    require image size in specific formats (as mentioned in Table 1) and specific
    input data preprocessing, which were adjusted for individual models. The architecture
    of these models is briefly explained in the following paragraphs. Table 1 Key
    specifications of the architectures employed (obtained from the official Keras
    documentation) Full size table InceptionV3 is a 48-layer deep CNN model first
    introduced by [33]. This is an advanced version of GoogLeNet [34], which belongs
    to the family of Inception networks. InceptionV3 uses multiple convolution filters
    of different sizes that run in parallel layers, allowing it to extract input features
    at multiple scales. The factorized 7 × 7 convolutions, along with auxiliary classifiers,
    allow the propagation of label information down the network. The auxiliary classifiers
    as regularizers deal with the problem of vanishing gradients. Thus, InceptionV3
    allows efficient utilization of computational resources with efficient dimensionality
    reduction without compromising accuracy. Xception, also known as the extreme version
    of the Inception model, was first introduced by [35]. Its architecture comprises
    a linear stack of depth-wise separable convolutions with residual/skip connections.
    It first uses pointwise convolution to map the cross-channel correlations and
    maps the spatial correlations of every output channel separately. The ability
    of the model to look at the channel and spatial correlations independently in
    successive steps allows it to maintain cross-channel features along with a reduced
    parameter count. ResNet50 is a 50-layer deep CNN that uses residual connections
    to perform identity mapping [36]. The layers learn the residual functions with
    reference to the input layer instead of learning the unreferenced functions. The
    stacked residual layers that learn the residual mapping are added element-wise
    to form the network. Here, the state is passed from one ResNet module to another;
    ResNets can achieve higher accuracy, even at considerably high depths. DenseNets
    contain a series of densely connected blocks connected by transition layers. Each
    layer obtains “collective knowledge” from all preceding layers and passes on its
    own feature maps to all subsequent layers [37]. The feature maps of the previous
    maps were concatenated and used as inputs. Transition layers apply batch normalization,
    a 1 × 1 convolution and 2 × 2 pooling layers to downsample the information from
    the previous dense block. All layers, i.e., those within the same dense block
    and transition layers, spread their weights over multiple inputs which allows
    deeper layers to use features extracted early on. DenseNet-121 has 120 convolutions
    and 4 average pooling layers. Because of their unique connections between layers,
    they alleviate the problem of vanishing gradients with reduced number of parameters.
    EfficientNets are the latest developments in state-of-the-art CNN architectures.
    Originally proposed by [38], it uses a unique compound coefficient approach to
    uniformly scale all three dimensions of depth, width, and resolution instead of
    using a fixed set of scaling coefficients for optimal performance improvement.
    This architecture adjusts the layers of the network using scaling coefficients
    that are determined using a grid search method. The resulting coefficients were
    used to scale the baseline network to the desired target model size. This novel
    scaling in a structured manner renders its accuracy superior to that of other
    CNN architectures. The base EfficientNetB0 network is based on the mobile inverted
    bottleneck convolutions (MBConv), similar to MobileNetV2. The network used in
    this study was EfficientNetB1, which was obtained by scaling the EfficientNetB0
    network. A flowchart of the methodology used in this study is shown in Fig. 3.
    Fig. 3 Flowchart of the steps taken for classification of the drought stress in
    maize Full size image 2.6 Model evaluation metrics The performance of the custom
    and other CNN architectures employed was evaluated on the basis of evaluation
    metrics such as accuracy, sensitivity, specificity, precision, and F1-score. All
    these parameters are calculated in terms of true positives (TP), true negatives
    (TN), false positives (FP) and false negatives (FN). Here, TP and TN represent
    the number of correct predictions of the water-stressed and healthy maize crop,
    respectively. FP, also known as type 1 error, predicts the healthy maize class
    as being water stressed. FN, also known as type 2 error, predicts water-stressed
    maize plants to be healthy. The classification accuracy represents the ratio of
    the correct predictions of both stressed and healthy maize images to the total
    number of images in the test set, as given by Eq. (1). $${\\text{Accuracy}} =
    \\frac{{\\text{TP + TN}}}{{\\text{TP + TN + FP + FN}}}$$ (1) $${\\text{Precision}}
    = \\frac{{{\\text{TP}}}}{{\\text{TP + FP}}}$$ (2) $${\\text{Sensitivity}} = {\\text{Recall}}
    = \\frac{{{\\text{TP}}}}{{\\text{TP + FN}}}$$ (3) $${\\text{Specificity}} = \\frac{{{\\text{TN}}}}{{\\text{TN
    + FP}}}$$ (4) $$F1_{{{\\text{SCORE}}}} = \\frac{{2*{\\text{Precision}}*{\\text{Recall}}}}{{{\\text{Precision}}
    + {\\text{Recall}}}}$$ (5) The confusion matrix extends beyond the simple accuracy.
    It is a tabular representation of the model predictions versus the ground-truth
    labels. Here, each row represents the instances in the actual class whereas the
    columns represent the instances of the predicted class. In the case of binary
    classification, there is a 2 × 2 matrix and diagonal elements if the matrix represents
    the correct predictions in each category. A representation of the different elements
    of the confusion matrix for our problem is shown in Fig. 4. Precision evaluates
    the model based on positive predictions. It is the ratio of the correctly predicted
    stressed crop from the overall predictions of stressed crop. Recall or sensitivity
    refers to the ratio of the correct predictions of the stressed crop to the actual
    number of stressed crop images. Thus, the model was evaluated based on its ability
    to predict the stressed class. Specificity focuses on healthy class predictions.
    It measures the proportion of the healthy class correctly predicted as healthy.
    Both sensitivity and specificity are similar; however, sensitivity calculates
    the true stress rate, whereas specificity calculates the false stress rate. The
    F1-score represents the weighted average of precision and recall. It is a more
    useful measure for evaluating the accuracy of binary classification models, especially
    in the case of an imbalanced data distribution in the dataset. The best value
    for the F1-score is 1, and the worst is 0. All metrics are defined in Eqs. (1–5).
    Fig. 4 Different elements of the confusion matrix as represented in the result
    section Full size image 3 Results The results of the different models during the
    training and validation phases during the first 10 epochs are presented in Fig.
    5. The graphs show that almost all models had a smooth transition from low training
    accuracy during the first epoch to fairly high accuracy in the 10th epoch. Comparing
    the different models, the Xception and custom-CNN models started with lowest training
    accuracy of 61.66% and 69.55%, respectively, while the other 4 models started
    with comparatively higher initial accuracies. The DenseNet121, EfficientNetB1,
    InceptionV3 and ResNet50 models started with an initial training accuracy of 85.53%,
    89.03%, 91.40% and 93.33%, respectively, moving gradually to 98.92%, 99.09%, 98.93%
    and 98.82%, respectively, at the end of 10th epoch. Similar to the training accuracy
    trend, the training loss also decreased gradually with an increase in the number
    of epochs. The initial cross-entropy training loss was highest for the Xception
    model at 0.89, closely followed by DenseNet121, custom-CNN, ResNet50, InceptionV3
    and EffcientNetB1 having training losses of 0.62, 0.58, 0.56, 0.50, and 0.40,
    respectively. At the end of 10th epoch, the training loss was highest for Xception
    model at 0.30, followed by ResNet50, custom-CNN, InceptionV3, DenseNet121 and
    EfficientNetB1 where the training loss reduced to 0.15, 0.14, 0.04, 0.04 and 0.03,
    respectively. Fig. 5 Comparative performance of various DL models in terms of
    accuracy and loss during the training and validation phase for the first 10 epochs
    Full size image Despite the smooth transitions of accuracy and cross-entropy loss
    in the training phase, the validation accuracy and loss graphs were characterized
    by a fair share of peaks and troughs during the initial training phase of 10 epochs.
    Validation accuracy and validation loss kept fluctuating for Xception and custom-CNN
    models, while the other four models, i.e., ResNet50, InceptionV3, DenseNet121
    and EfficientNetB1 were relatively stable. Toward the end of 10th epoch, the validation
    accuracy was the highest for DenseNet121 at 99.61%, closely followed by InceptionV3,
    EfficientNetB1, ResNet50 and custom-CNN having validation accuracy of 98.82%,
    98.44%, 98.05% and 97.66%, respectively. Xception model had the least validation
    accuracy of 88.48% at the end of 10th epoch. A similar trend was observed for
    validation loss curves, where the validation loss was highest for Xception model
    at 0.277, followed by ResNet50, IncpetionV3, custom-CNN and EfficientNetB1 having
    validation loss of 0.20, 0.16, 0.083, 0.081 and 0.065, respectively. DenseNet121
    showed the least validation loss of 0.0112 at the end of the 10th epoch. The learning
    curves of all investigated models for the entire training duration of 50 epochs
    are shown in Fig. 6. Model checkpoints were added after every epoch to monitor
    the validation accuracy, and model weights were saved at every instance of increase
    in the validation accuracy. The graphs clearly show that the training and validation
    accuracy curves of all the models follow a smooth trend and are on an increasing
    trend after the 10th epoch. The training and validation accuracy curves of the
    custom-CNN, Xception, DenseNet121 and EfficientNetB1 were comparatively smoother
    than those of the InceptionV3 and ResNet50 models, which still had minor troughs
    as the training continued. The custom-CNN model achieved a train accuracy of 96.07%
    at the 13th epoch, followed by DenseNet121 (96.34% at 2nd epoch), InceptionV3
    (96.45% at 2nd epoch), EfficientNetB1 (97.79% at 2nd epoch) and ResNet50 (98.60%
    at 3rd epoch). The Xception model could not surpass an accuracy of 96% even after
    50 epochs. Owing to the model checkpoints, the best model was saved at the last
    increase in validation accuracy. Therefore, the last model weights for the model
    custom-CNN, Xception, ResNet50, InceptionV3, DenseNet121 and EfficientNetB1 were
    saved at 48th, 30th, 42nd, 38th, 25th and 26th epoch, respectively. These epochs
    correspond to a train-validation accuracy of (98.44–99.02%), (92.25–94.53%), (99.52–100%),
    (99.24–99.80%), (98.92–100%), (99.03–98.24%) for the custom-CNN, Xception, ResNet50,
    InceptionV3, DenseNet121 and EfficientNetB1 models, respectively. Fig. 6 Percentage
    change in accuracy and loss during the training and validation phase when the
    models were trained for 50 epochs a Custom-CNN, b Xception, c InceptionV3 d ResNet50,
    e DenseNet121 f EfficientNetB1 Full size image Upon close inspection, the learning
    curves for training and validation loss for the different models vary significantly
    from each other. The training and validation losses for the custom-CNN and Xception
    models decreased gradually over time with no major differences between them. Although,
    the training and validation loss were higher for Xception model, i.e. 0.18 and
    0.18 compared to the custom-CNN, i.e., 0.05 and 0.03, respectively, toward the
    end of 50th epoch, the training and validation loss for the InceptionV3 and ResNet50
    model did not decrease gradually. The graphs for both these models were characterized
    by higher peaks for the validation loss compared to the training loss, indicating
    instances of overfitting. The ResNet50 model showed higher instances of overfitting
    because of large gap between the train and validation loss, both in between the
    epochs and also toward the end of 50th epoch, compared to the InceptionV3 model.
    The train and validation loss at the end of the 50th epoch for the ResNet50 model
    was 0.03 and 0.27, making a generalization gap of 0.24 between the two loss curves.
    On the other hand, the training and validation loss for InceptionV3 model was
    0.08 and 0.09, respectively, much lesser gap than the ResNet50 model. The DenseNet121
    and EfficientNetB1 models were comparatively more stable and performed relatively
    better than the rest of the four models in terms of training and validation loss
    curves. The train and validation loss at the end of 50th epoch for DenseNet121
    was only 0.02 and 0.01, and for EfficientNetB1, it was 0.02 and 0.09, respectively.
    Although EfficientNetB1 showed higher training accuracy in the initial phases,
    it showed slight instances of overfitting as the plot for validation loss decreased
    initially but started increasing toward the end of the 50th epoch. Since the model
    weights for EfficientNetB1 were saved at 26th epoch, it was able to achieve lower
    training and validation loss. The generalization gap for EfficientNetB1 was also
    higher at 6.75% compared to DenseNet121, i.e.1.44%. From an overall perspective
    of both training and validation accuracy and loss curves, the DenseNet121 model
    achieved better performance compared to other networks. The trained models were
    evaluated on the test set containing 10% (272 images) of the total image dataset,
    which was not used previously in the model training process. The confusion matrices
    generated by the different models are shown in Fig. 7. The elements of the confusion
    matrix were in accordance with the representation shown in Fig. 4. Continuing
    a similar trend as exhibited by the previous graphs, the Xception model performed
    the worst on the test dataset, as it had the lowest predictions of TNs and TPs.
    The type-1 error, i.e., FP was also highest for Xception, followed by custom-CNN
    and DenseNet121, and nil for InceptionV3, ResNet50 and EfficientNetB1. In terms
    of type-2 error, i.e., FNs, was also highest for Xception, followed by InceptionV3
    and custom-CNN and least for ResNet50, DenseNet121 and EfficientNetB1 models.
    Different evaluation metrics were calculated from the generated confusion matrix
    on the test set, the values for which are given in Table 2. The test accuracy
    and F1-score were the highest for the ResNet50 and EfficientNetB1 models, followed
    by DenseNet121, custom-CNN, InceptionV3 and Xception models. The test accuracy
    and F1-score were the highest for the ResNet50 and EfficientNetB1 models, followed
    by DenseNet121, custom-CNN and InceptionV3. Xception achieved the lowest test
    accuracy of 91.91%. In terms of precision and specificity, which represent stressed
    crop and healthy class predictions, respectively, ResNet50 and EfficientNetB1
    scored the maximum percentage, followed by custom-CNN and DenseNet121 models.
    Xception model resulted in the least precision (97.35%) and specificity (97.90%)
    values. Recall/sensitivity was the highest for InceptionV3 model (98.53%), followed
    by ResNet50, DenseNet121 and EfficientNetB1, where the recall values were 98.45%
    each. Xception had the least specificity (85.27%). Although DenseNet121 performed
    better than the ResNet50 and EfficientNetB1 models on the training and validation
    datasets, the higher accuracies of the ResNet50 and EfficientNetB1 models can
    be attributed to the fact that the best model weights were saved whenever there
    was an improvement in the validation accuracy despite the peaked values in their
    validation loss curves. Fig. 7 Results of the confusion matrix as applied on the
    10% test dataset containing 272 images of the model a Custom-CNN b Xception c
    InceptionV3 d ResNet50 e DenseNet121 f EfficientNetB Full size image Table 2 Evaluation
    metrics of the different models Full size table Some of the sample predictions
    for the test set given by the custom-CNN model are shown in Fig. 8. The results
    showed that the custom-CNN model built from starch fairs well among the other
    transfer-learned architectures. Similar custom CNN models, which involve much
    lesser number of layers and have lower computational complexity have been developed
    by other authors as well, which performed well for the respective datasets. Zhuang
    et al. [39], used a shallow CNN with 6 convolutional layers to classify 3 categories
    of water stress recognition in maize. Similarly, a lightweight 6 layered CNN network
    was used by [40] to classify sick and healthy grapevine plants. Azimi et al. [27],
    also reported similar performance of the custom-CNN architecture with the VGG16
    and InceptionV3 models when applied for water stress detection in chickpea plant
    shoot images. The comparative evaluation metrics of the different models showed
    that the state-of-the-art transfer-learned architectures performed slightly better
    than the custom-CNN model. The results revealed that ResNet50 and EfficientNetB1
    models achieved highest F1-score of > 99% on the test sets. Different forms of
    ResNet architectures have been applied successfully in different studies and have
    achieved acceptable accuracies. ResNet50 achieved the highest accuracy among the
    seven CNN architectures employed for the classification of sugarcane lodged images
    from unlodged ones [41]. Esgario et al., [42] compared AlexNet, GoogleNet, VGG16,
    ResNet50 and MobileNetV2 for biotic stress classification and severity estimation
    in coffee leaves, where the ResNet50 architecture obtained the highest accuracy
    of 95.24% and 86.51%, respectively, on both the tasks and outperformed the rest
    of the architectures. Sunil et al. [43], used ResNet50 and VGG16 architectures
    to classify weeds from the crop under different backgrounds in greenhouse conditions,
    where the ResNet50 achieved higher average F1-score of 99% compared to the 92%
    in case of the VGG16 model. Fig. 8 Sample predictions of the custom-CNN model
    on the test set along with the confidence percentage Full size image EfficientNets
    are the most recent developments in the transfer-learning domain and have not
    been used extensively. In our study, although the EfficientNetB1 network became
    unstable during the later stages of the training, however, since the best weights
    were saved during the initial epochs, the model performance was better when applied
    to the test set. Atila et al. [44], compared VGG16, ResNet50, Inception V3 and
    all variants of EfficientNet (B0-B7) to classify 39 classes of Plant Village dataset,
    where the B4 and B5 variants of EfficientNet model outperformed the rest of the
    models under original as well as augmented dataset conditions. Candido-Mireless
    et al. [45], achieved an average accuracy and precision of 97.2% and 95.8% when
    the used EfficientNetB3 architecture to classify stressed images from healthy
    grape vineyard images in natural illumination conditions, compared to the other
    3 transfer learned architectures, i.e., VGG16, ResNet50 and InceptionV3. In addition,
    similar to our observations, the ResNet50 model showed higher variability during
    experimentation compared to other architectures. In another study, a variant of
    EfficientNet, called EfficientNetB4 was applied to classify nutritional deficiencies
    using RGB imagery in sugar beet and orange trees, where it achieved Top-1 accuracy
    of 98.65% and 98.52%, respectively, on both datasets [46]. Jung et al. [47], compared
    five different transfer learned architectures for crop classification, disease
    detection and disease classification in three different crops, out of which the
    EfficientNet model gave the best results. Shahoveisi et al., [48] classified rust
    disease in 3 field crops using Xception, ResNet50, EfficientNetB4, and MobileNet
    architectures, where the best results were attained by the EfficientNetB4 model
    (accuracy = 94.29%) followed by the ResNet50 (93.52%) model. In terms of stability,
    DenseNet121 was found to be the most stable model among all transfer-learned models
    used in this study. The performance of DenseNet121 (F1-score- 98.83%) was comparable
    to the best models in our use case. In another study, the accuracy of DenseNet121
    was second best (92.41%) after the ResNet50 (92.61%) on the test set, which achieved
    the highest accuracy among the 5 transfer-learned architectures for classification
    of biotic stresses in paddy crop [49]. DenseNets have also been found to perform
    well for leaf disease classification [50]. The results obtained after training
    the custom-CNN as well as other transfer-learned architectures reveal that all
    the models achieved an acceptable accuracy and precision levels for drought/water
    stress identification for maize crop and can be successfully deployed in real-time
    actual field conditions to quantify the maize stress in the form of an application
    on the IoT embedded and other mobile devices. However, since the majority of the
    IoT devices are characterized by constrained resources in terms of memory and
    computational requirements, the model selection for the deployment on these devices
    should also consider the size of the model. Figure 9 shows the number of trainable,
    non-trainable, and total parameters for the different CNN architectures evaluated
    in this study. The inference time of a deep learning model is directly proportional
    to the number of trainable parameters. By examining the trainable parameters,
    InceptionV3 had the lowest trainable parameters at 16,386, closely followed by
    DenseNet121 at 18,434 and EfficientNetB1 at 23,042. Custom-CNN had the highest
    number of trainable parameters, at 653,266, which was also the total number of
    parameters in this model. However, another factor to note from the graph is that
    the custom-CNN model has a significantly lower number of total parameters than
    the other transfer-learned architectures employed. Therefore, it is expected that
    although the inference time of the custom-CNN model might be slightly higher,
    it will require less energy and disk storage space in contrast to the other models
    which have a much higher number of parameters. The performance of a 23-layered
    simple custom-CNN architecture was comparable to ResNet and NasNet models, which
    are much larger in size for classification of three levels of nitrogen stress
    in sorghum crop [51]. Razfar et al. [52], also showed that a 5-layered custom
    CNN architecture showed higher detection accuracy (97.7%) with lower latency and
    memory usage for weed detection in soybean crops and were therefore recommended
    for edge-based vision systems. If the initial frozen layers of the employed state-of-the-art
    architectures were also fine-tuned instead of transfer learning, the number of
    trainable parameters in these architectures would have been much higher than that
    in the custom-CNN model. Also, the test accuracy of the best models, i.e., ResNet50
    and EfficientNetB1 was only higher by 1.03% compared to the custom-CNN model.
    Therefore, the developed custom-CNN model is a perfect fit for deployment on resource-constrained
    devices because it is small in size without much compromise on the accuracy front.
    Fig. 9 Graph showing the number of trainable, non-trainable and total parameters
    of the different CNN architectures Full size image One of the highlights of this
    study is that the dataset was acquired in actual field conditions and that too
    manually with a handheld camera; therefore, most of the images in the dataset
    do not possess a specific background or image of a particular plant at a fixed
    angle during different time steps. Variability in illumination intensity, background,
    and other objects surrounding the plant makes it suitable for mobile applications.
    The custom-CNN model can potentially achieve a high degree of automation. This
    will prove beneficial to potential farmers and researchers for timely intervention
    and mitigation of problems by applying proper crop management strategies that
    can effectively boost crop yields. 4 Conclusions The present work discusses the
    successful implementation of a custom-built CNN model from scratch with fewer
    layers having much fewer parameters and compares it against well-established transfer-learned
    architectures such as InceptionV3, Xception, ResNet50, DenseNet121, and EfficientNetB1
    to classify drought stress during the initial stages in a maize-crop dataset acquired
    during actual field experimentation under open conditions. This comprehensive
    assessment of different architectures helps us understand the superior model among
    the rest. Considering all the evaluation metrics applied to the test set, the
    best results were achieved by the InceptionV3, ResNet50, and EfficientNetB1 models.
    However, on the combined front of accuracy and stability, DenseNet121 was found
    to be a better choice among the rest of the models. The performance of Xception
    model was found to be the worst. The results exhibit that the performance of the
    custom-CNN model was equivalent to the other deeper and much heavier transfer-learned
    models, without significantly compromising on the accuracy front. The proposed
    custom-CNN model can be further integrated with real-time mobile applications
    to provide timely information regarding the onset of water stress. This study
    will be especially useful for farmer communities and irrigation managers, who
    can leverage this technology for drought stress detection at the field level in
    real time. Data availability Not applicable. References Anonymous (2022) https://www.statista.com/statistics/1156213/global-corn-production/#:~:text=In%202021%2F22%20marketing%20year,followed%20by%20China%20and%20Brazil
    Zhao F, Zhang D, Zhao Y, Wang W, Yang H, Tai F, Hu X (2016) The difference of
    physiological and proteomic changes in maize leaves adaptation to drought, heat,
    and combined both stresses. Front Plant Sci 7:1471. https://doi.org/10.3389/fpls.2016.01471
    Article   Google Scholar   Mukherjee S, Mishra A, Trenberth KE (2018) Climate
    change and drought: a perspective on drought indices. Current Climate Change Reports
    4(2):145–163 Article   Google Scholar   Tebaldi C, Lobell DJ (2018) Differences,
    or lack thereof, in wheat and maize yields under three low-warming scenarios.
    Environ Res Lett 13:065001 Article   Google Scholar   Zhang H, Sonnewald U (2017)
    Differences and commonalities of plant responses to single and combined stresses.
    Plant J 90:839–855. https://doi.org/10.1111/tpj.13557 Article   Google Scholar   Rejeb
    IB, Pastor V, Mauch-Mani B (2014) Plant responses to simultaneous biotic and abiotic
    stress: molecular mechanisms. Plants 3:458–475. https://doi.org/10.3390/plants3040458
    Article   Google Scholar   Pandey P, Irulappan V, Bagavathiannan MV, Senthil-Kumar
    M (2017) Impact of combined abiotic and biotic stresses on plant growth and avenues
    for crop improvement by exploiting physio–morphological traits. Front Plant Sci
    8:537. https://doi.org/10.3389/fpls.2017.00537 Article   Google Scholar   Ahmad
    B, Raina A, Khan S (2019) Impact of biotic and abiotic stresses on plants, and
    their responses. In: Wani S (ed) Disease resistance in crop plants. Springer,
    Cham, pp 1–20 Google Scholar   Cohen I, Zandalinas SI, Huck C, Fritschi FB, Mittler
    R (2021) Metaanalysis of drought and heat stress combination impact on crop yield
    and yield components. Physiol Plant 171:66–76. https://doi.org/10.1111/ppl.13203
    Article   Google Scholar   Salika R, Riffat J (2021) Abiotic stress responses
    in maize: a review. Acta Physiol Plantarum 43(9):130 Article   Google Scholar   Zaidi
    P, Yadav M, Maniselvan P, Khan R, Shadakshari T, Singh R, Pal D (2010) Morpho-physiological
    traits associated with cold stress tolerance in tropical maize (Zea mays L.).
    Maydica 55:201–208 Google Scholar   Daryanto S, Wang L, Jacinthe PA (2016) Global
    synthesis of drought effects on maize and wheat production. PLoS ONE 11:e0156362.
    https://doi.org/10.1371/journal.pone.0156362 Article   Google Scholar   Fahad
    S, Bajwa AA, Nazir U, Anjum SA, Farooq A., Zohaib A, Sadia S, Nasim W, Adkins
    S, Saud S, Ihsan M Z (2017) Crop production under drought and heat stress: plant
    responses and management options. Front Plant Sci p.1147. Demirevska K, Zasheva
    D, Dimitrov R, Simova-Stoilova L, Stamenova M, Feller U (2009) Drought stress
    effects on Rubisco in wheat: changes in the Rubisco large subunit. Acta Physiol
    Plant 31:1129–1138. https://doi.org/10.1007/s11738-009-0331-2 Article   Google
    Scholar   Anjum SA, Wang LC, Farooq M, Hussain M, Xue LL, Zou CM (2011) Brassinolide
    application improves the drought tolerance in maizethrough modulation of enzymatic
    antioxidants and leaf gas exchange. J Agron Crop Sci 197:177–185. https://doi.org/10.1111/j.1439-037X.2010.00459
    Article   Google Scholar   Singh AK, Ganapathysubramanian B, Singh AK, Sarkar
    S (2016) Machine learning for high throughput stress phenotyping in plants. Trends
    Plant Sci 21(2):110–124 Article   Google Scholar   Naik HS, Zhang J, Lofquist
    A, Assefa T, Sarkar S, Ackerman D, Singh A, Singh AK, Ganapathysubramanian B (2017)
    A real-time phenotyping framework using machine learning for plant stress severity
    rating in soybean. Plant Methods 13(1):1–2 Article   Google Scholar   Pantazi
    XE, Moshou D, Oberti R, West J, Mouazen AM, Bochtis D (2017) Detection of biotic
    and abiotic stresses in crops by using hierarchical self-organizing classifiers.
    Precis Agric 18(3):383–393 Article   Google Scholar   Zhuang S, Wang P, Jiang
    B, Li M, Gong Z (2017) Early detection of water stress in maize based on digital
    images. Comp Elect Agri 140:461–468 Article   Google Scholar   Anami BS, Malvade
    NN, Palaiah S (2020) Classification of yield affecting biotic and abiotic paddy
    crop stresses using field images. Info Process Agri 7(2):272–285 Google Scholar   Mohanty
    SP, Hughes DP, Salathe M (2016) Using deep learning for image-based plant disease
    detection. Front Plant Sci 7:1419 Article   Google Scholar   DeChant C, Wiesner-Hanks
    T, Chen S, Stewart EL, Yosinski J, Gore MA, Lipson H (2017) Automated identification
    of northern leaf blight-infected maize plants from field imagery using deep learning.
    Phytopathol 107(11):1426–1432 Article   Google Scholar   Ghosal S, Blystone D,
    Singh AK, Ganapathysubramanian B, Singh A, Sarkar S (2018) An explainable deep
    machine vision framework for plant stress phenotyping. Proc Natl Acad Sci 115(18):4613–4618
    Article   Google Scholar   Too EC, Yujian L, Njuki S, Yingchun L (2019) A comparative
    study of fine-tuning deep learning models for plant disease identification. Comp
    Elect Agri 161:272–279 Article   Google Scholar   An JY, Li WY, Li MS, Cui SR,
    Yue HR (2019) Identification and classification of maize drought stress using
    deep convolutional neural network. Symmetry 11(2):256 Article   Google Scholar   Picon
    A, Seitz M, Alvarez-Gila A, Mohnke P, Ortiz-Barredo A, Echazarra J (2019) Crop
    conditional convolutional neural networks for massive multi-crop plant disease
    classification over cell phone acquired images taken on real field conditions.
    Comp Elect Agri 167:105093 Article   Google Scholar   Anami BS, Malvade NN, Palaiah
    S (2020) Deep learning approach for recognition and classification of yield affecting
    paddy crop stresses using field images. Artif Intl Agri 4:12–20 Google Scholar   Azimi
    S, Wadhawan R, Gandhi TK (2021) Intelligent monitoring of stress induced by water
    deficiency in plants using deep learning. IEEE Trans Instrum Meas 70:1–13 Article   Google
    Scholar   Zhang X, Yue Q, Fanfeng M, Chengguo F, Mingming Z (2018) Identification
    of maize leaf diseases using improved deep convolutional neural networks. IEEE
    Access 6:30370–30377 Article   Google Scholar   Chandel NS, Chakraborty SK, Rajwade
    YA, Dubey K, Tiwari MK, Jat D (2020) Identifying crop water stress using deep
    learning models. Neural Comput Appl 17:1–15 Google Scholar   Deng J, Dong W, Socher
    R, Li L J, Li K, Fei-Fei L (2009) ImageNet: A large-scale hierarchical image database.
    In: Proceedings of the IEEE conference on computer vision and pattern recognition.
    Miami, FL, USA, pp 248–255 Zhuang S, Wang P, Jiang B, Li M (2020) Learned features
    of leaf phenotype to monitor maize water status in the fields. Comp Elect Agri
    172:105347 Article   Google Scholar   Szegedy C, Vanhoucke V, Ioffe S, Shlens
    J, Wojna Z (2016) Rethinking the inception architecture for computer vision. In:
    Proceedings of the IEEE conference on computer vision and pattern recognition,
    pp 2818–2826 Szegedy C, Liu W, Jia Y, Sermanet P, Reed S, Anguelov D, Rabinovich
    A (2015) Going deeper with convolutions. In: Proceedings of the IEEE conference
    on computer vision and pattern recognition, pp 1–9 Chollet F (2017) Xception:
    deep learning with depthwise separable convolutions. In: Proceedings of the IEEE
    conference on computer vision and pattern recognition, 1251–1258 He K, Zhang X,
    Ren S, Sun J (2016) Deep residual learning for image recognition. In: Proceedings
    of the IEEE conference on computer vision and pattern recognition, pp 770–778
    Huang G, Liu Z, Van Der Maaten L, Weinberger K Q (2017) Densely connected convolutional
    networks. In: Proceedings of the IEEE conference on computer vision and pattern
    recognition, pp 4700–4708 Tan M, Le Q (2019) Efficientnet: rethinking model scaling
    for convolutional neural networks. In: International conference on machine learning,
    pp 6105–6114. PMLR Zhuang S, Ping W, Boran J, Maosong L (2020) Learned features
    of leaf phenotype to monitor maize water status in the fields. Comp Elect Agri
    172:105347 Article   Google Scholar   Nagi R, Tripathy SS (2022) Deep convolutional
    neural network based disease identification in grapevine leaf images. Multimed
    Tools Appls 81(18):24995–25006 Article   Google Scholar   Modi RU, Chandel AK,
    Chandel NS, Dubey K, Subeesh A, Singh AK, Kancheti M (2023) State-of-the-art computer
    vision techniques for automated sugarcane lodging classification. Field Crops
    Res 291:108797 Article   Google Scholar   Esgario JG, Krohling RA, Ventura JA
    (2020) Deep learning for classification and severity estimation of coffee leaf
    biotic stress. Comp Elect Agri 169:105162 Article   Google Scholar   Sunil GC,
    Koparan C, Ahmed MR, Zhang Y, Howatt K, Sun X (2022) A study on deep learning
    algorithm performance on weed and crop species identification under different
    image background. Artif Intell Agri 6:242–256 Google Scholar   Atila U, Ucar M,
    Akyol K, Ucar E (2021) Plant leaf disease classification using EfficientNet deep
    learning model. Ecol Inform 61:101182. https://doi.org/10.1016/j.ecoinf.2020.101182
    Article   Google Scholar   Candido-Mireles M, Hernandez-Gama R, Salas J (2023)
    Detecting vineyard plants stress in situ using deep learning. Comp Elect Agri
    210:107837 Article   Google Scholar   Espejo-Garcia B, Malounas I, Mylonas N,
    Kasimati A, Fountas S (2022) Using EfficientNet and transfer learning for image-based
    diagnosis of nutrient deficiencies. Comp Elect Agri 196:106868 Article   Google
    Scholar   Jung M, Song JS, Shin AY, Choi B, Go S, Kwon SY, Park J, Park SG, Kim
    YM (2023) Construction of deep learning-based disease detection model in plants.
    Sci Rep 13(1):7331 Article   Google Scholar   Shahoveisi F, Taheri Gorji H, Shahabi
    S, Hosseinirad S, Markell S, Vasefi F (2023) Application of image processing and
    transfer learning for the detection of rust disease. Sci Rep 13(1):5133 Article   Google
    Scholar   Malvade NN, Yakkundimath R, Saunshi G, Elemmi MC, Baraki P (2022) A
    comparative analysis of paddy crop biotic stress classification using pre-trained
    deep neural networks. Artif Intell Agri 6:167–175 Google Scholar   Sai Reddy B,
    Neeraja S (2022) Plant leaf disease classification and damage detection system
    using deep learning models. Multimed Tools Appl 81(17):24021–24040 Article   Google
    Scholar   Azimi S, Kaur T, Gandhi TK (2021) A deep learning approach to measure
    stress level in plants due to Nitrogen deficiency. Measurement 173:108650 Article   Google
    Scholar   Razfar N, True J, Bassiouny R, Venkatesh V, Kashef R (2022) Weed detection
    in soybean crops using custom lightweight deep learning models. J Agri Food Res
    8:100308 Google Scholar   Download references Acknowledgements This research was
    supported by IIT Ropar Technology and Innovation Foundation (iHub – AWaDH) for
    Agriculture and Water Technology Development Hub, established by the Department
    of Science & Technology (DST), Government of India, at the Indian Institute of
    Technology, Ropar in the framework of National Mission on Interdisciplinary Cyber
    Physical Systems (NM – ICPS). Author information Authors and Affiliations Department
    of Soil and Water Engineering, Punjab Agricultural University (PAU), Ludhiana,
    India Pooja Goyal, Rakesh Sharda & Mukesh Siag Department of Computer Science
    and Engineering, IIT Ropar, Rupnagar, India Mukesh Saini Corresponding author
    Correspondence to Rakesh Sharda. Ethics declarations Conflict of interest The
    authors declare that they have no known competing financial interests or personal
    relationships that could influence the work reported in this study. Additional
    information Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Springer Nature or its licensor (e.g. a society or other partner) holds exclusive
    rights to this article under a publishing agreement with the author(s) or other
    rightsholder(s); author self-archiving of the accepted manuscript version of this
    article is solely governed by the terms of such publishing agreement and applicable
    law. Reprints and permissions About this article Cite this article Goyal, P.,
    Sharda, R., Saini, M. et al. A deep learning approach for early detection of drought
    stress in maize using proximal scale digital images. Neural Comput & Applic 36,
    1899–1913 (2024). https://doi.org/10.1007/s00521-023-09219-z Download citation
    Received 30 May 2023 Accepted 21 October 2023 Published 17 November 2023 Issue
    Date February 2024 DOI https://doi.org/10.1007/s00521-023-09219-z Share this article
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Keywords CNN Transfer learning Abiotic stress Computer vision Image classification
    Use our pre-submission checklist Avoid common mistakes on your manuscript. Sections
    Figures References Abstract Introduction Methodology Results Conclusions Data
    availability References Acknowledgements Author information Ethics declarations
    Additional information Rights and permissions About this article Advertisement
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Neural Computing and Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A deep learning approach for early detection of drought stress in maize using
    proximal scale digital images
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mahesh N.
  - Babu J.J.
  - Nithya K.
  - Arunmozhi S.A.
  citation_count: '0'
  description: 'Predicting water quality is a significant area of study in the field
    of smart water technology, since it may provide valuable assistance in managing
    and mitigating water pollution. Due to the increasing global population and the
    need for effective methods of agriculture and irrigation, there is a continuous
    increase in the demand for water, which lead to a scarcity of water resources.
    Consequently, smart water management systems have been created with the objective
    of enhancing the effectiveness of water management. Nevertheless, conventional
    water quality prediction models mostly use data-driven approaches and only depend
    on diverse sensor data. In recent research, deep learning algorithms have been
    extensively used for water quality prediction due to their robust ability to map
    highly nonlinear connections while maintaining acceptable computational efficiency.
    Therefore, the LSTM-CN model presented in this paper integrates the benefits of
    three normalisation calculation methods: z-score, Interval, and Max. This allows
    for adaptive processing of multi-factor data while preserving the data''s inherent
    characteristics. Ultimately, the model collaborates with the codec to learn the
    data''s characteristics and generate accurate prediction results. When compared
    with existing water quality prediction methods in terms of various parameters
    the proposed LSTM-CN methods achieves 99.3% of accuracy,95% of precision, 93.6%
    of recall, 18% of MSE and 11.45% of RMSE.'
  doi: 10.1016/j.dwt.2024.100183
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related works 3. Materials and methods
    4. Result and discussion 5. Conclusion Declaration of Competing Interest Data
    availability References Show full outline Figures (7) Show 1 more figure Tables
    (1) Table 1 Desalination and Water Treatment Volume 317, January 2024, 100183
    Water quality prediction using LSTM with combined normalizer for efficient water
    management Author links open overlay panel N. Mahesh a, J. Jagan Babu b, K. Nithya
    c, S.A. Arunmozhi d Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.dwt.2024.100183
    Get rights and content Under a Creative Commons license open access Abstract Predicting
    water quality is a significant area of study in the field of smart water technology,
    since it may provide valuable assistance in managing and mitigating water pollution.
    Due to the increasing global population and the need for effective methods of
    agriculture and irrigation, there is a continuous increase in the demand for water,
    which lead to a scarcity of water resources. Consequently, smart water management
    systems have been created with the objective of enhancing the effectiveness of
    water management. Nevertheless, conventional water quality prediction models mostly
    use data-driven approaches and only depend on diverse sensor data. In recent research,
    deep learning algorithms have been extensively used for water quality prediction
    due to their robust ability to map highly nonlinear connections while maintaining
    acceptable computational efficiency. Therefore, the LSTM-CN model presented in
    this paper integrates the benefits of three normalisation calculation methods:
    z-score, Interval, and Max. This allows for adaptive processing of multi-factor
    data while preserving the data''s inherent characteristics. Ultimately, the model
    collaborates with the codec to learn the data''s characteristics and generate
    accurate prediction results. When compared with existing water quality prediction
    methods in terms of various parameters the proposed LSTM-CN methods achieves 99.3%
    of accuracy,95% of precision, 93.6% of recall, 18% of MSE and 11.45% of RMSE.
    Previous article in issue Next article in issue Keywords Water quality IndexCombined
    normalizerLong Short Term Memory (LSTM)Water managementPreprocessingNormalization
    1. Introduction Water pollution refers to the introduction of harmful substances,
    such as chemicals, diseases, and physical waste, into water bodies such as lakes,
    rivers, oceans, and groundwater, resulting in their contamination. Water contamination
    may arise either from natural causes or from human activity. The survival of humanity
    relies on surface water, which is limited in quantity and cannot be replenished.
    Nevertheless, the expansion of human industry and urbanisation is causing significant
    destruction to the natural environment. The chronic pollution and deterioration
    of the surface water environment pose major threats to human health [1], [2].
    Furthermore, the aforementioned difficulties are exacerbated by the deterioration
    of the surface water environment [3]. Hence, it is important to monitor and forecast
    the quality of surface water. Based on the findings of the water quality prediction,
    it shows that humans depends on past environmental indicators to alert us about
    future ecological contamination [4]. Water quality indication is challenging due
    to its complex data. Utilizing artificial intelligence (AI) technology is a significant
    approach to improve the water quality prediction. The use of AI to improve the
    quality of human existence is becoming more prevalent across several sectors [5],
    [6]. The main domains for water quality predicting employing the grey system theory,
    neural networks, statistical analytic methods, and time series models include
    lakes, rivers, reservoirs, estuaries, and other extensive bodies of water. Machine
    learning has been employed to provide solution for a range of water treatment
    and management challenges, also considering the monitoring of water quality in
    real-time, predicting future conditions, identifying the origin of contaminants,
    calculating their levels, allocating water resources, and developing water treatment
    methods. Urban water contamination is mostly attributed to the discharge of wastewater
    from cities and industry [7]. Machine learning has been a central focus in recent
    surface water quality research [8], [9]. Various methodologies have been devised
    to examine and predict the quality of surface water. Numerous endeavours have
    been undertaken to improve the precision of forecasts generated by machine-learning
    algorithms. Collecting relevant data is a fundamental aspect of developing efficient
    machine-learning models [10], [11], [12]. Environmental agencies often use traditional
    ecological monitoring methods. Conventional techniques for on-site monitoring
    are subject to practical constraints [13], [14]. Remote sensing technology is
    capable of meeting the requirements for continuous and extensive water quality
    monitoring. Furthermore, they may provide light on the elusive migratory and dispersion
    patterns of pollutants, which can only be detected by these methods. Various techniques,
    such as Artificial Neural Networks (ANN), Bayesian Neural Networks, Adaptive Neurofuzzy,
    Decision Support System (DSS), and Autoregressive Moving Average (ARMA), have
    been used to analyse and forecast the Water Quality (WQ) of groundwater [15],
    [19]. Nevertheless, these imitative models possess some constraints. Nevertheless,
    the present study''s contributions may be succinctly summarised as: • The use
    of db5 wavelet analysis allows for the assessment of the modelling of both the
    first- and second-order statistics of large-scale fading based on signal strength
    measurements. • A novel architecture is suggested for predicting several factors
    of wastewater pollution indicators, which combines a normalised encoder and decoder.
    This structure integrates the benefits of normalisation techniques, which may
    dynamically normalise and encode pollutant index data of varying magnitudes, streamline
    intricate index data processing procedures, and enhance the data processing capacity
    in multi-factor prediction. • The model can recognise the nonlinear connection
    between complicated time-level inputs and efficiently gather complete water quality
    information via collaboration across sections, therefore enhancing the forecast
    accuracy. 2. Related works A multitude of researchers have used deep learning
    techniques to address a wide range of problems in water treatment and management
    systems. These problems include real-time monitoring, forecasting, identifying
    the origin of pollutants, calculating pollutant concentrations, allocating water
    resources, and optimizing water treatment methodologies. Data collecting is an
    essential and foundational process in the development of ML models. The standards
    in water system management are served by combining the periodic water quality
    monitoring outcomes. Environmental authorities often use conventional techniques
    for environmental monitoring. Nevertheless, the conventional techniques for on-site
    monitoring are constrained by practical challenges. Therefore, this section will
    cover many deep learning algorithms. The paper [16] introduces a DL model called
    Graph Convolutional Network with Feature and Temporal Attention (FTGCN) that is
    capable of predicting water quality data which is having multiple variables. To
    begin with, a feature attention mechanism is devised using multi-head self-attention
    to effectively capture the possible connections among water alarms. Next, a module
    for predicting future events is developed. This module incorporates temporal convolution
    and bidirectional GRU, together with a temporal attention mechanism, to effectively
    handle the relationships between different time points in a time series. The study
    implemented the Adaptive Evolutionary Artificial Bee Colony (AEABC) algorithm
    [17] by combining three adaptive evolutionary strategies, namely dynamic adaptive
    factors, probability selection, and gradient initialization, with the Back Propagation
    Neural Network (BPNN) model. The study presented in [18] introduces an ensemble
    EMD-LSTM model that merges a data preprocessing method which is based on empirical
    mode decomposition (EMD) with a prediction module using long short-term memory
    (LSTM) neural network. The aim is to enhance the accuracy of modeling-based detection
    approaches. The LASSO (Least Absolute Shrinkage and Selection Operator) Regression
    and Random Forest are two techniques used in machine learning. Additionally, there
    is a programme called TPOT (Tree-based Pipeline Optimisation programme) that is
    used for optimising machine learning pipelines. In addition, a multivariate autoregressive
    model, known as VAR (Vector Autoregression), was added. The models using several
    predictors outperformed the univariate models. RF and TPOT exhibited superior
    performance, but with a propensity towards overfitting. The water temperature,
    concentrations of microorganisms upstream and at the water intake, and upstream
    precipitation were identified as significant predictors. The method provided in
    [20] focus on to improve the efficiency of monitoring drinking water to maintain
    the green environment. The main aim of this study was to develop an algorithm,
    adaptive neuro-fuzzy inference system (ANFIS) to analyze the WQI. The classification
    of water quality was conducted, employing a feed-forward neural network (FFNN)
    and the K-nearest neighbours algorithm. The dataset consists of eight parameters,
    however, only seven parameters were found to exhibit significant values. The author
    in [21] presents an ensemble model that combines a long short-term memory-based
    encoder-decoder neural network with a Savitzky-Golay filter. This filter is effective
    in removing potential noise from water quality time series, whereas the long short-term
    memory model can analyse nonlinear properties in complex water environments. Two
    innovative ensemble machine learning models, rely on decision trees are introduced
    in [22] to provide more precise predictions for short-term water quality. The
    primary variants of the two hybrid models consist of extreme gradient boosting
    (XGBoost) and random forest (RF). These models use a sophisticated data denoising
    approach called as complete ensemble empirical mode decomposition with adaptive
    noise (CEEMDAN). The article [24] infers the preparatory model establishment and
    analysis study on Removal of boron in desalinated seawater by magnetic metal-organic
    frame-based composite materials: Modeling and optimizing based on methodologies
    of response surface and artificial neural network. The author in [25] proposes
    a simple architecture of neural networks which is more efficient and accurate
    and can work for predicting both water quality and water consumption. An artificial
    neural network (ANN) consisting of one hidden layer and a couple of dropout and
    activation layers is utilized in this regard. The authors in [26] presented a
    deep learning-based approach to reconstruct these seven parameters from four parameters
    (temperature, electrical conductivity, potential of hydrogen, and total dissolved
    solids) in order to estimate the water quality index. In [27] proposes a nine-layer
    multilayer perceptron (MLP) which is used with a K-nearest neighbor (KNN) imputer
    to deal with the problem of missing values. Experiments are performed, and performance
    is compared with seven machine learning algorithms. VBAED, an integrated forecasting
    technique, is proposed in [28] to forecast the water quality time series. Variational
    mode decomposition (VMD), a bidirectional input attention mechanism, a bidirectional
    LSTM (BiLSTM) encoder, and a bidirectional temporal attention mechanism and BiLSTM
    decoder are all combined into VBAED. The study conducted in [29] employed the
    Adaptive Neuro-fuzzy Inference System (ANFIS) to forecast six distinct categories
    of river water quality metrics at the Langat River in Malaysia. Additionally,
    it produced the relatively small RMSE scores for the set used for training, testing,
    and verifying data sets, namely 0.0023, 0.0145, and 0.0922, correspondingly. Using
    a Bidirectional Gated Recurrent Unit (BiGRU) in conjunction with Gaussian Progress
    Regression (GPR) and optimised by a Tree-structured Parzen Estimator (TPE), [30]
    presents a water-based quality soft-sensor forecasting approach. Its dependability
    as a model for anaerobic procedures is evaluated using dependable evaluation and
    likelihood projection. Utilising a variety of training data settings and model
    architectures, [31] builds predictive models for effluent variables using basic
    RNNs and LSTM architecture, then methodically evaluates the models'' effectiveness.
    At present, the evaluation of water quality involves expensive and time-consuming
    procedures involving laboratory tests and statistical analyses [32]. These procedures
    require the collection and transportation of samples to laboratories, as well
    as significant time and calculations. However, this approach is not very effective
    due to the fact that water is a highly mobile medium and timely detection is crucial
    in identifying contamination from disease-causing waste [33]. The dire repercussions
    of water pollution need a more expedient and cost-effective option. A real time
    system is developed to analyze an alternate method that utilizes powerful AI techniques
    for modelling and forecasting water quality. Nevertheless, these imitative models
    encounter some obstacles[34]. For instance, they fail to consider the variables
    that affect the water quality. In order to predict the Water Quality Index (WQI),
    this work introduces a sophisticated AI model called LSTM-CN (Long Short-Term
    Memory with combined normalizer). The very effective state-of-the-art AI may be
    extrapolated and then used to predict the progression of water contamination,
    hence assisting decision-makers in formulating timely strategies [35]. 3. Materials
    and methods 3.1. System model Initially, the water sample dataset is loaded which
    consists of 30 no. of stations, 10 no. of features which is splitted in to X and
    Y for both training and testing data. Initially, the X train and Xtest is given
    to normalization followed by time series acquisition using db5 wavelet. The output
    from decomposition process is given to LSTM-CN for efficient water quality prediction
    as shown in Fig 1. Download : Download high-res image (166KB) Download : Download
    full-size image Fig. 1. System Model. 3.2. Dataset details Using past data from
    different water-measurement indices, we will anticipate the spatiotemporal water
    quality for the next day in terms of the \"power of hydrogen (pH)\" value. This
    dataset is published by the United States Geological Survey [23]. High-level previous
    spatial information is provided based on the water system to which they belong,
    such as the Atlanta water system or the Savannah River''s watershed. The dataset
    consists of training data gathered over a period of 423 days, from December 1,
    2014, to January 28, 2016. Additionally, it includes testing data acquired over
    a span of 282 days, from March 25, 2017, to January 1, 2018. The input data consists
    of daily samples collected from 37 water stations in Georgia, USA, which were
    used to compute the pH values. The spatial connectivity, which refers to the specific
    links between each site via water streams, remains unclear due to the intricate
    nature of the water system. The pH value for each water station is predicted using
    eleven standard factors, which include temperature, specific conductance, and
    the volume of dissolved oxygen. The present input data is arranged in a 37-row,
    11-column matrix. Rows indicate water stations, whereas columns reflect pH-affecting
    factors. Therefore, the training input data is (423 × 37 × 11) and consists of
    423 consecutive days of spatial matrices. Also, the test input data dimensions
    are (282 × 37 × 11). The output is daily pH measurements for 37 water stations.
    Thus, the training and test output data dimensions are (423 × 37) and (282 × 37),
    correspondingly. 3.3. Time series data acquisition During the gathering of time-series
    data, many sources of noise such as observation error and systematic error might
    introduce inaccuracies. These noise factors can significantly impact the outcomes
    of data processing. Hence, during the data preparation phase, it is important
    to choose appropriate techniques for removing noise from the data based on the
    specific kind of noise present. The fundamental concept of wavelet transform is
    to dynamically modify the time-frequency window based on the signal, breaking
    down the original signal into a sequence of sub-band signals with varying spatial
    resolutions, frequency attributes, and directional properties through stretching
    and translating. The sub-bands possess favourable local attributes in both the
    temporal and spectral domains, making them suitable for capturing the local attributes
    of the original signal. This allows for precise localization of the signal in
    both time and frequency. This approach has the ability to surpass the constraints
    of Fourier analysis when it comes to handling signals that are not smooth and
    pictures that are complicated. A wavelet is mathematically defined as: Let , which
    is typically either 0 or K. φ also fulfils the equation . In this context, φ is
    referred to as the wavelet, where is the Fourier transform of the function φ.
    The wavelet transform is ten times quicker than the fast Fourier transform. The
    computational difficulty of the Fourier transform is when the signal length is
    M. On the other hand, the computational complexity of the wavelet transform is
    . The two types of wavelet transform are continuous wavelet transform (CWT) and
    discrete wavelet transform (DWT). The continuous wavelet transform may be expressed
    using the following formula: (1) Where the continuous wavelet coefficient, denoted
    as , is calculated using the scaling factor a, the translation factor b, the conjugate
    function , and the original data represented by . The size of the wavelet transform
    may be adjusted by manipulating the values of parameters a and b, allowing for
    adaptive analysis of signals in the time-frequency domain. The formula for the
    discrete wavelet transform is as follows: (2) In this context, refers to the discrete
    wavelet coefficient, whereas represents the original data. The dbn wavelet is
    widely used in discrete wavelet transform, being the most prevalent wavelet transform.
    When finite-length wavelets are used in the fast wavelet transform, a sequence
    consisting of two real numbers will be generated. There are two coefficients in
    this context. The first one is the wavelet filter, which is responsible for the
    high-pass filtering. The second one is the adjustment filter, which is responsible
    for the low-pass filtering. The wavelet transform first breaks down the original
    data into two sets of coefficients: the low-frequency wavelet coefficient and
    the high-frequency wavelet coefficients . This is achieved by applying a low-pass
    filter and a high-pass filter, correspondingly. Within this set, the low-frequency
    wavelet coefficient may undergo further decomposition and several iterations until
    the maximum decomposition limit is achieved. Ultimately, the decomposed low-frequency
    signal and high-frequency signal of the wavelet are combined to achieve wavelet
    reconstruction. The equation is as follows: (3) Where the restored signal, , is
    obtained using the low-pass filter, , and the high-pass filter, . The low-frequency
    wavelet coefficient is denoted as , while the high-frequency wavelet coefficient
    is represented as . The choice of the mother wavelet type and the amount of decomposition
    are the two primary concerns in wavelet analysis. The primary reason for employing
    db5 wavelet in this analysis is: 1. Initially, sequences which are stable are
    operates well with db wavelets 2. Then the db5 wavelet is employed for the datasets
    which are smoother features. This analysis was selected for the investigation
    because of its capacity to effectively handle the inherent smoothing characteristics
    of water quality data. The maximum count of decomposition levels for a wavelet
    is (4) Where denotes the length of the low-pass filter employed in the wavelet
    decomposition, whereas is the length of the data. For this analysis, = 13 and
    = 249 are utilized. Then the computed in such a way that the count of wavelet
    decomposition layers was 3. 3.4. Normalization of data The original data is standardised
    to ensure that the indicators are of same size, facilitating complete comparison
    and assessment. Minimum-maximum normalisation, sometimes referred to as outlier
    normalisation, is a linear conversion of the initial data that ensures the output
    values are scaled within the range of 0 to 1. Additionally, there are other techniques
    for data normalisation, such as the Z-score standardisation approach. Nevertheless,
    the use of Z-scores also entails potential hazards. Initially, the calculation
    of the Z-score necessitates the determination of the mean and variance of the
    whole dataset, which proves challenging to acquire in practical analysis and mining.
    Typically, it is substituted by the sample mean and standard deviation. Additionally,
    the computation of Z-score necessitates certain criteria for data distribution,
    with normal distribution being the most favourable. Thus, we opted for the min-max
    normalisation technique. It is better appropriate for data that has values that
    are reasonably close together. The transformation function used for min-max normalisation
    in this research is as follows: (5) x(max) represents the highest value in the
    sample data, whereas x(min) represents the lowest value in the sample data. 3.5.
    Decomposition of pollutant sequence A model cannot accurately capture all the
    features of a pollutant sequence due to its instability and unpredictability,
    resulting in poor fitting and prediction accuracy. Therefore, the Complete Ensemble
    Empirical Mode Decomposition (CEEMD) method was employed to decompose water pollution
    prediction sequences into stable components and residual terms before building
    the prediction model. By adding two white noise signals with opposite signs to
    the data decomposition process, modal aliasing and iterations are reduced. Decomposing
    the water pollution prediction sequence using CEEMD is presented in (6), (7),
    (8). • Introduce a pair of white noise variables representing the sign into a
    given series of pollutant concentrations . (6) • Apply the CEEMD method to deconstruct
    each original water pollution sequence by adding white noise. This will result
    in obtaining m IMF components and one residual component. (7) represents the j-th
    modal component of the i-th sequence after the application of CEEMD. • Compute
    the mean value of all IMF constituents in order to get the ultimate modal component
    group using Eq. (8). (8) 3.6. Water quality prediction process Fig. 2 displays
    the constructed framework for water quality prediction. The architecture consists
    of two convolutional layers, a max-pooling layer, and one fully-connected (dense)
    layer, as seen in figure-2. The incoming data is organised in a three-dimensional
    matrix. The dimensions of the training and test data are (400 × 32 × 10) and (221 ×
    36 × 19) correspondingly. Therefore, the data is analysed using 2D convolution
    and 2D max-pooling layers. The first convolution layer employs 20 kernel functions
    with size of (3 ×3) to extract the primary features. The output at the th row
    and th column of the th layer is obtained by convolving the kernel with the preceding
    layer as follows: (9) Download : Download high-res image (198KB) Download : Download
    full-size image Fig. 2. Architecture of LSTM with combined normalizer (LSTM-CN).
    The first convolution layer outputs (35 × 9 × 20) due to a drop of 2 in the first
    two dimensions via kernel convolution. Finally, the Third dimension equals kernel
    function count. Zero-padding does not erase unnecessary data and creates a network
    bottleneck early, enabling only important features to continue. LSTMs are built
    via max pooling. It receives a two-dimensional vector with time series attributes
    and the prior state . The cyclic unit structure is trained using these inputs.
    The activation function (sigmoid function σ) calculates gated signals of three
    gates and the candidate state . The methodology for calculating the three gates
    is as follows: (10) (11) (12) are the input weights of the matrix, and are the
    bias weights. denotes the current time state, and X refers the input information.
    The function ) determines the amount of information to be discarded from the prior
    internal state at the previous time step. As F(t) approaches 0, more information
    is lost, whereas as it approaches 1, more information is retained. Thus, determines
    that the LSTM model will selectively exclude some historical COD data and other
    factor information. Similarly, determines the amount of COD data and other factor
    information that should be stored in the candidate state at the present time.
    3.6.1. Combined normalized encoder The combined normalisation encoder incorporates
    the combined normalisation layer onto the standard encoder. By enhancing the normalisation
    procedure, it may integrate the computational outcomes of several normalisations,
    leading to an overall improvement in the encoder''s feature encoding capabilities.
    The combined normalisation layer uses three normalisation techniques: z-score,
    Interval, and Max. These methods are computed as follows: (13) (14) (15) Where
    be the original data and denote the calculated result. The minimum, maximum, mean,
    and variance of the original data are represented by min, max, mean, and variance,
    respectively. The normalised interval is denoted by . Δ denotes a constant, diminutive
    positive value. 3.6.2. Attention mechanism The combined normalised coder gives
    us feature vectors that are then run through three separate linear layers to get
    the question vector Q, the key vector K, and the value vector V. Initially, the
    dot product operation is performed on Q and K to get the similarity matrix of
    Q and K. Subsequently, the similarity matrix undergoes scaling. Next, the attention
    weights are derived by normalising the values of the similarity matrix by the
    use of the Softmax function. The primary objective of using the Softmax function
    is to guarantee that the cumulative value of the weights equals 1. Next, the attention
    weights and V are calculated by taking the dot product, resulting in the final
    outcome. The computation method proceeds as follows: (16) Where the scaling multiplier
    is represented by '' '', the query vector, key vector, and value vector are denoted
    by , and accordingly. The Softmax function is represented by ''Softmax'', and
    the final result is denoted as '' ''. 3.6.3. Combined normalized decoder The output
    characteristics of the attention mechanism are first processed by a decoder composed
    of many layers of LSTMs. This decoder converts the characteristics into normalised
    predicted values. To get the precise anticipated value, it is necessary to treat
    this value using a renormalization layer that combines many techniques. The adaptive
    merging and renormalization layer consists of three renormalization computations,
    which are computed in accordance with the normalisation calculation: (17) (18)
    (19) where x denote the data after renormalization, denote the data without renormalization,
    and min, max, mean, and σ2 denote the maximum, minimum, mean, and variance values
    of the input data, correspondingly. These statistics are shared among the normalisation
    calculation and are updated with different batches of values. a and b, conversely,
    denote the range established by the renormalization technique, whereas Δ denotes
    a predetermined lower positive value. 3.6.4. Loss function This study introduces
    prediction tasks with equal task weights. represents the training set for task
    n, and is the count of training samples for that task. The training set may be
    represented as (20) and denote the th sample and its corresponding label in the
    nth task. Within this paradigm, the simultaneous execution of several prediction
    tasks results in the presence of numerous output values and real values, hence
    necessitating the use of multiple loss functions. A weighted combination of the
    loss functions of multiple tasks determines the overall optimisation loss function.
    By working together, we can optimise the model via the backpropagation technique.
    Our method for obtaining the output values for various prediction tasks involves
    recurrent training and error correction. The study focuses on the numerical regression
    issue of predicting water quality. In the regression prediction model''s gradient
    descent calculation, the MSE is employed loss function. The loss function of the
    th segment is represented as (21) indicates the expected value of task at time
    . It is calculated using the function , where θ indicates all parameter sets,
    including both the shared layer and the particular layer. All tasks in the model
    have equal significance. By summing the loss functions for each task linearly
    with weights, the joint objective function of multi-task learning may be found.
    The total model''s joint optimisation loss function is denoted as ∀: (22) Where
    the weight of the m-th task is denoted as . This model effectively avoids the
    danger of overfitting by including all tasks. 3.7. Performance analysis We used
    an Nvidia Geforce 2080 GPU with a memory capacity of 8 GB for training the model.
    The training process included the use of 100 epochs and a batch size of 8. The
    processing system used in this study consists of a personal computer (PC) equipped
    with an Intel Core i3 CPU and 8 gigabytes (GB) of memory. The program used in
    this context for the purposes of categorization and optimisation is Python 3.9.7.
    Performance matrix- The assessment of water quality prediction may be conducted
    using several performance criteria. The suggested model''s capacity to predict
    the WQ was evaluated using performance evaluation methodologies such as accuracy,
    precision, recall, MSE, and RMSE. The statistical approaches are precisely delineated
    as, • Mean square error(MSE): (23) • Root mean square error (RMSE): (24) • Accuracy
    (25) • Precision (26) • Recall (27) 4. Result and discussion 4.1. Comparative
    analysis The comparison is done by using above mentioned parameters with the methods
    such as Graph Convolutional Network with Feature and Temporal Attention (FTGCN)
    [16], Back Propagation Neural Network (BPNN) [17], adaptive neuro-fuzzy inference
    system (ANFIS) [20]. The Fig. 3 shows the calculation of MSE in % where x-axis
    indicated the count of epochs and y-axis indicates the MSE value in %. At 500
    epochs, the propose method LSTM-CN achieved the minimum error of 18% whereas the
    existing method of BPNN has achieved the highest error about 35% followed by FTGCN
    about 23.4% and the ANFIS achieved second minimum error of 21.5%. Hence, the proposed
    LSTM-CN obtained the minimum error due to the capacity to process and understand
    the sequences properly. Download : Download high-res image (65KB) Download : Download
    full-size image Fig. 3. Comparison of MSE. The above Fig. 4 shows the Calculation
    of the RMSE in % with the existing methods FTGCN, BPNN, ANFIS and the proposed
    method LSTM-CN. Due to its adeptness in capturing sequential patterns, the proposed
    LSTM-CN has minimum error value about 11.5%. But the existing method FTGCN has
    the highest error of 34.4% among the methods, followed by BPNN which dropped slowly
    and has the error of 31%. Finally, the ANFIS has the second minimum error of 26%
    which is 15% percent higher than the proposed LSTM_CN method. Download : Download
    high-res image (65KB) Download : Download full-size image Fig. 4. Comparison of
    RMSE. The Fig. 5 shows the accuracy of the four models FTGCN, BPNN, ANFIS and
    LSTM-CN (proposed) where x-axis is number of epochs and y-axis is the accuracy
    in %. The integration of LSTM and CN layer are employed to extract the appropriate
    features. This increases the accuracy level of the proposed method LSTM-CN to
    99.3%. The existing method FTGCN, BPNN, ANFIS reduced the accuracy about 78%,
    85.3% and 72% respectively. Download : Download high-res image (64KB) Download
    : Download full-size image Fig. 5. Comparison of Accuracy. The above Fig. 6 shows
    the performance of precision for the existing FTGCN, BPNN, ANFIS and the Proposed
    Method LSTM-CN. Due to the special ability of LSTM-CN to handle the sequential
    data which helps to allowing it to get the temporal patterns. This characteristics
    helps to increase the precision of the proposed LSTM-CN method about 95%. The
    existing method FTGCN, BPNN, and ANFIS has achieved the minimum precision of 68.3%,
    73.6% and 79%. Fig 7. Download : Download high-res image (82KB) Download : Download
    full-size image Fig. 6. Comparison of Precision. Download : Download high-res
    image (78KB) Download : Download full-size image Fig. 7. Comparison of Recall.
    The above figure shows the comparative performance of the recall for the existing
    method and the proposed method LSTM-CN. Generally LSTM has the adaptability learning
    method which helps to retain or discard information. This characteristics increase
    the recall metric of the proposed LSTM-CN about 936%. The existing method FTGCN
    has the second highest recall value of 87.9%, followed by BPNN has 86.1%. Then
    the minimum recall value is achieved by ANFIS about 75%. Table 1, provides the
    overall performance analysis of the Existing method of FTGCN, BPNN, ANFIS and
    proposed LSTM-CN method. Table 1. Overall Performance Analysis of Existing method
    and proposed method. Parameters FTGCN BPNN ANFIS LSTM-CN (proposed) MSE (%) 23.4
    35 21.5 18 RMSE (%) 34.4 31 26 11.5 Accuracy (%) 78 85.3 72 99.3 Precision (%)
    68.3 73.6 79 95 Recall (%) 87.9 86.1 75 93.6 5. Conclusion For environmental protection,
    it is crucial to use AI algorithms for water quality modelling and forecasting.
    The AI models were developed to forecast and classify the portability of water
    by using data from rivers gathered from various states in India. The WQ method
    was used to assess many factors, which were identified as important indicators
    of water quality. Implementing novel techniques with the powerful LSTM-CN algorithm
    may effectively guarantee a secure environment. The suggested approach underwent
    statistical evaluation and testing. This solution has the potential to enhance
    water quality in many aquatic environments by addressing water pollution. The
    proposed model''s robustness and efficacy in WQI forecasting may be examined in
    further research. The quality of different types of water can be predicted in
    India may be done using the existing models. Declaration of Competing Interest
    The authors declare that they have no known competing financial interests or personal
    relationships that could have appeared to influence the work reported in this
    paper. Data availability Data will be made available on request. References [1]
    C.J. Vörösmarty, P.B. McIntyre, M.O. Gessner, et al. Global threats to human water
    security and river biodiversity Nature, 467 (2010), pp. 555-561 CrossRefView in
    ScopusGoogle Scholar [2] J. Wang, A.V. Nguyen A review on data and predictions
    of water dielectric spectra for calculations of van der Waals surface forces Adv
    Colloid Interface Sci, 250 (2017), pp. 54-63 View PDFView articleView in ScopusGoogle
    Scholar [3] Y. Sun, Z. Chen, G. Wu, et al. Characteristics of water quality of
    municipal wastewater treatment plants in China: implications for resources utilization
    and management J Clean Prod, 131 (2016), pp. 1-9 View PDFView articleGoogle Scholar
    [4] Z. Ghahramani Probabilistic machine learning and artificial intelligence Nature,
    521 (2015), pp. 452-459 CrossRefView in ScopusGoogle Scholar [5] M. Rezaie-Balf,
    N.F. Attar, A. Mohammadzadeh, et al. Physicochemical parameters data assimilation
    for efficient improvement of water quality index prediction: comparative assessment
    of a noise suppression hybridization approach J Clean Prod, 271 (2020), Article
    122576 View PDFView articleView in ScopusGoogle Scholar [6] S. Zhao, S. Zhang,
    J. Liu, et al. Application of machine learning in intelligent fish aquaculture:
    a review Aquaculture, 540 (2021), Article 736724 View PDFView articleView in ScopusGoogle
    Scholar [7] R. Mohammadpour, S. Shaharuddin, C.K. Chang, N.A. Zakaria, A.A. Ghani,
    N.W. Chan Prediction of water quality index in constructed wetlands using support
    vector machine Environ Sci Pollut Res, 22 (2015), pp. 6208-6219 CrossRefView in
    ScopusGoogle Scholar [8] T.M. Tiyasha, Tung, Z.M. Yaseen A survey on river water
    quality modeling using artificial intelligence models: 2000–2020. J Hydrol, 585
    (2020), Article 124670 View in ScopusGoogle Scholar [9] N. Sharma, R. Sharma,
    N. Jindal Machine learning and deep learning applications—a vision Glob Transit
    Proc, 2 (1) (2021), pp. 24-28 View PDFView articleGoogle Scholar [10] K. Elbaz,
    A. Zhou, S.-L. Shen Deep reinforcement learning approach to optimize the driving
    performance of shield tunneling machines. Tunn Undergr Space Technol, 136 (2023),
    Article 105104 View PDFView articleView in ScopusGoogle Scholar [11] K. Elbaz,
    W.M. Shaban, A. Zhou, S.-L. Shen Real-time image-based air quality forecasts using
    a 3D-CNN approach with an attention mechanism Chemosphere, 333 (2023), Article
    138867 View PDFView articleView in ScopusGoogle Scholar [12] J. Du, J. Zhang,
    D. Castro-Lacouture, Y. Hu Lean manufacturing applications in prefabricated construction
    projects Autom Constr, 150 (2023), Article 104790 View PDFView articleView in
    ScopusGoogle Scholar [13] W. Li, H. Fang, G. Qin, et al. Concentration estimation
    of dissolved oxygen in Pearl River basin using input variable selection and machine
    learning techniques Sci Total Environ, 731 (2020), Article 139099 View PDFView
    articleView in ScopusGoogle Scholar [14] S. Maiti, R.K. Tiwari A comparative study
    of artificial neural networks, Bayesian neural networks, and adaptive neuro-fuzzy
    inference system in groundwater level prediction. Environ Earth Sci, 71 (7) (2014),
    pp. 3147-3160 CrossRefView in ScopusGoogle Scholar [15] C. Min An improved recurrent
    support vector regression algorithm for water quality prediction J Comput Inf,
    12 (2011), pp. 4455-4462 Google Scholar [16] Q. Ni, X. Cao, C. Tan, W. Peng, X.
    Kang An improved graph convolutional network with feature and temporal attention
    for multivariate water quality prediction Environ Sci Pollut Res, 30 (5) (2023),
    pp. 11516-11529 View in ScopusGoogle Scholar [17] L. Chen, T. Wu, Z. Wang, X.
    Lin, Y. Cai A novel hybrid BPNN model based on adaptive evolutionary Artificial
    Bee Colony Algorithm for water quality index prediction Ecol Indic, 146 (2023),
    Article 109882 View PDFView articleView in ScopusGoogle Scholar [18] Y. Zhang,
    C. Li, Y. Jiang, L. Sun, R. Zhao, K. Yan, W. Wang Accurate prediction of water
    quality in the urban drainage network with an integrated EMD-LSTM model J Clean
    Prod, 354 (2022), Article 131724 View PDFView articleView in ScopusGoogle Scholar
    [19] E. Sokolova, O. Ivarsson, A. Lillieström, N.K. Speicher, H. Rydberg, M. Bondelind
    Data-driven models for predicting microbial water quality in the drinking water
    source using E. coli monitoring and hydrometeorological data Sci Total Environ,
    802 (2022), Article 149798 View PDFView articleView in ScopusGoogle Scholar [20]
    M. Hmoud Al Adhaileh, F. Wasellalah Alsaade Modeling and prediction of water quality
    by using artificial intelligence Sustainability, 13 (8) (2021), p. 4259 CrossRefGoogle
    Scholar [21] J. Bi, Y. Lin, Q. Dong, H. Yuan, M. Zhou Large-scale water quality
    prediction with an integrated deep neural network Inf Sci, 571 (2021), pp. 191-205
    View PDFView articleView in ScopusGoogle Scholar [22] H. Lu, X. Ma Hybrid decision
    tree-based machine learning models for short-term water quality prediction Chemosphere,
    249 (2020), Article 126169 View PDFView articleView in ScopusGoogle Scholar [23]
    L. Zhao, O. Gkountouna, D. Pfoser Spatial Auto-regressive Dependency Interpretable
    Learning Based on Spatial Topological Constraints ACM Trans Spat Algorithms Syst,
    5 (2019), pp. 1-28 View in ScopusGoogle Scholar [24] Zi-jie Wang, Yan-nan Jia,
    Xing-gang Liu, Li-sha Liao, Zi-chuang Wang, Zheng Wang Removal of boron in desalinated
    seawater by magnetic metal-organic frame-based composite materials: Modeling and
    optimizing based on methodologies of response surface and artificial neural network
    J Mol Liq, 349 (2022), Article 118090 View PDFView articleView in ScopusGoogle
    Scholar [25] F. Rustam, A. Ishaq, S.T. Kokab, I. de la Torre Diez, J.L.V. Mazón,
    C.L. Rodríguez, I. Ashraf An Artificial Neural Network Model for Water Quality
    and Water Consumption Prediction Water, 14 (21) (2022), p. 3359 CrossRefView in
    ScopusGoogle Scholar [26] H. Moeinzadeh, P. Jegakumaran, K.T. Yong, A. Withana
    Efficient water quality prediction by synthesizing seven heavy metal parameters
    using deep neural network J Water Process Eng, 56 (2023), Article 104349 View
    PDFView articleView in ScopusGoogle Scholar [27] A. Juna, M. Umer, S. Sadiq, H.
    Karamti, A.A. Eshmawi, A. Mohamed, I. Ashraf Water quality prediction using KNN
    imputer and multilayer perceptron Water, 14 (17) (2022), p. 2592 CrossRefView
    in ScopusGoogle Scholar [28] J. Bi, Z. Chen, H. Yuan, J. Zhang Accurate water
    quality prediction with attention-based bidirectional LSTM and encoder–decoder
    Expert Syst Appl, 238 (2024), Article 121807 View PDFView articleView in ScopusGoogle
    Scholar [29] N.N.M. Rizal, G. Hayder, S. Yussof River Water Quality Prediction
    and Analysis–Deep Learning Predictive Models Approach Sustainability Challenges
    and Delivering Practical Engineering Solutions: Resources, Materials, Energy,
    and Buildings, Springer International Publishing,, Cham (2023), pp. 25-29 CrossRefView
    in ScopusGoogle Scholar [30] J. Li, Z. Chen, X. Li, X. Yi, Y. Zhao, X. He, M.
    Huang Water quality soft-sensor prediction in anaerobic process using deep neural
    network optimized by Tree-structured Parzen Estimator Front Environ Sci Eng, 17
    (6) (2023), p. 67 Google Scholar [31] P. Wongburi, J.K. Park Prediction of wastewater
    treatment plant effluent water quality using Recurrent Neural Network (RNN) models
    Water, 15 (19) (2023), p. 3325 CrossRefView in ScopusGoogle Scholar [32] Vivek
    S, Ganesh Prabhu G, Umamaheswari R , Subashree P , Rajakumar S , Mukesh P , Priya
    V , Sampathkumar V , Logesh N, Study on groundwater pollution and its human impact
    analysis using geospatial techniques in semi-urban of south India, Environmental
    Research, https://doi.org/10.1016/j.envres.2023.117532. Google Scholar [33] Vivek
    Sivakumar Shanmuharajan Meenakshi Balasubramaniana,*, Aparna S. Bhaskara, Block
    level assessment of groundwater potential zones using hydrogeological and remote
    sensing and GIS data’s: a scientific approach to prevent water scarcity problems,
    Desalination and Water Treatment, https://doi.org/10.5004/dwt.2023.29581. Google
    Scholar [34] Vivek Sivakumar, Motrih Al-Mutiry, Hazem Ghassan Abdo, Venkada Lakshmi
    Ramamoorthy, Uma Maguesvari Muthaiyan, Kaliyappan Shumugapriya, Gokulan Ravindiran,
    Sethuraman Shanmugam, Priya Velusamy, Logesh Natarajan, Hussein Almohamad Assessing
    Groundwater Quality for Sustainable Drinking and Irrigation: A GIS-Based Hydro-Chemical
    and Health Risk Study in Kovilpatti Taluk. Water: Tamil Nadu. https://doi.org/10.3390/w15223916.
    Google Scholar [35] S. Vivek, Ismail Warad E.B. Priyanka, S. Thangavel , V. Sampathkumar
    , Nabil Al-Zaqri, Forecasting and meta-features estimation of wastewater and climate
    change impacts in coastal region using manifold learning, Environmental Research,
    https://doi.org/10.1016/j.envres.2023.117355. Google Scholar Cited by (0) © 2024
    The Authors. Published by Elsevier Inc. Recommended articles Production of waste
    soybean oil biodiesel with various catalysts, and the catalyst role on the CI
    engine behaviors Energy, Volume 290, 2024, Article 130157 Ümit Ağbulut, …, R.
    Saravanan View PDF Hybrid optimization approach for power scheduling with PV-battery
    system in smart grids Energy, Volume 290, 2024, Article 130051 Revathi R, …, Kumar
    Chinnaiyan V View PDF Synthesis of lead sulphide nanoparticles from egg shell
    membrane and its relevances Desalination and Water Treatment, Volume 317, 2024,
    Article 100098 Pongayi Ponnusamy Selvi, …, S. Gokila View PDF Show 3 more articles
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Desalination and Water Treatment
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Water quality prediction using LSTM with combined normalizer for efficient
    water management
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Patil J.S.
  - Mailaram A.
  - Basa P.N.K.
  - Sai Sravya A.
  - Yadam B.
  citation_count: '0'
  description: This study proposes a water quality detection system that combines
    image processing and Convolutional Neural Network (CNN) models to accurately identify
    and classify water quality based on visual features. The quality of water has
    significant impacts on a variety of areas, such as the survival of aquatic creatures,
    agricultural irrigation, and human health. It is also a crucial factor in global
    economic development. Therefore, there is a great importance to develop a monitoring
    system that is simple, quick, low-cost, and reliable. There are certain drawbacks
    associated with using automatic water quality sensors, including their high cost
    and the challenges involved in maintaining them. Water colour is a crucial indicator
    of water quality in lakes or ponds, as it reflects the unique characteristics
    of the water. The proposed system captures images of water bodies and extracts
    features such as color, texture, and turbidity, using image processing techniques.
    These features are used as input to the trained CNN models for water quality prediction
    and classification. The proposed system is evaluated using a real-world water
    quality dataset, and the results demonstrate that the proposed system achieves
    great precision in water quality detection. The system's ability to detect visual
    anomalies in water quality can provide early warning signals for potential health
    and environmental hazards.
  doi: 10.1007/978-981-99-7137-4_77
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Communications
    and Cyber Physical Engineering 2018 ICCCE 2024: Proceedings of the 6th International
    Conference on Communications and Cyber Physical Engineering pp 795–804Cite as
    Home Proceedings of the 6th International Conference on Communications and Cyber
    Physical Engineering Conference paper Integrating Image Processing and Convolution
    Neural Networks for Water Quality Detection Jayashree S. Patil, Akhila Mailaram,
    Pavani Naga Kumari Basa, A. Sai Sravya & Banvita Yadam  Conference paper First
    Online: 05 February 2024 114 Accesses Part of the book series: Lecture Notes in
    Electrical Engineering ((LNEE,volume 1096)) Abstract This study proposes a water
    quality detection system that combines image processing and Convolutional Neural
    Network (CNN) models to accurately identify and classify water quality based on
    visual features. The quality of water has significant impacts on a variety of
    areas, such as the survival of aquatic creatures, agricultural irrigation, and
    human health. It is also a crucial factor in global economic development. Therefore,
    there is a great importance to develop a monitoring system that is simple, quick,
    low-cost, and reliable. There are certain drawbacks associated with using automatic
    water quality sensors, including their high cost and the challenges involved in
    maintaining them. Water colour is a crucial indicator of water quality in lakes
    or ponds, as it reflects the unique characteristics of the water. The proposed
    system captures images of water bodies and extracts features such as color, texture,
    and turbidity, using image processing techniques. These features are used as input
    to the trained CNN models for water quality prediction and classification. The
    proposed system is evaluated using a real-world water quality dataset, and the
    results demonstrate that the proposed system achieves great precision in water
    quality detection. The system''s ability to detect visual anomalies in water quality
    can provide early warning signals for potential health and environmental hazards.
    Keywords Convolution neural networks Image processing Turbidity Anomalies Precision
    Access provided by University of Nebraska-Lincoln. Download conference paper PDF
    1 Introduction Water quality is a critical aspect of human health and environmental
    sustainability. Water bodies can become contaminated with various pollutants [1],
    such as chemicals, pathogens, and algae, which can have adverse effects on human
    health and aquatic ecosystems. The recent rise in waterborne diseases is a cause
    for concern. According to the World Health Organization (WHO), more than 79% of
    health issues in developing nations are linked to inadequate water quality, leading
    to approximately 25% mortality [2]. Therefore, monitoring and maintaining water
    quality is essential to prevent potential health hazards and ecological damage.
    The conventional method of water quality detection, which is widely used, involves
    laboratory testing that is tedious, prolonged and requires experienced personnel
    to carry out appropriate chemical tests using specialized substances. The digital
    image processing technique is increasingly popular and has been extensively adopted
    in various industries due to its affordability, visual nature, and contactless
    approach [3]. To address the limitations of conventional methods, image processing
    methods have been utilized in this study. Deep learning algorithms like Convolutional
    Neural Networks (CNNs) can be trained to identify patterns and anomalies in water
    quality data, providing accurate predictions and classifications. Image processing
    techniques can be used to detect visual changes in water quality, such as color,
    turbidity, and algae growth, and provide a visual representation of water quality.
    By providing timely and accurate information about water quality, the water quality
    detection system enables stakeholders to take necessary actions to mitigate potential
    health and environmental risks. 2 Related Work Water quality detection systems
    have been a subject of extensive research in recent trends as a response to the
    growing concern about water pollution. Numerous studies have been carried out
    to develop effective and reliable water quality detection systems using various
    techniques and technologies. Here are some examples of related work in this field:
    Machine learning algorithms have been widely used in water quality detection systems.
    For instance, in one study, [4] a Support Vector Machine (SVM) model was developed
    to detect the presence of heavy metals in water samples based on various water
    quality parameters. In another study, [5] a deep learning model was developed
    to classify water quality based on physical, chemical, and biological parameters
    [6]. The Internet of Things (IOT) technology has been extensively used to develop
    water quality detection systems. Optical sensors are an emerging technology for
    water quality detection [7]. These sensors use light to measure various water
    quality parameters such as turbidity, chlorophyll, and dissolved organic matter
    [8]. Biosensors are another technology used in water quality detection. These
    sensors use biological components such as enzymes, antibodies, or microorganisms
    to detect specific pollutants in water. Many studies have used a combination of
    different techniques and technologies to develop water quality detection systems.
    For instance, [9] in one study, a hybrid system combining IoT-based sensors and
    machine learning algorithms was developed for real-time water quality monitoring
    [10]. Another study developed a system that combines optical sensors and machine
    learning algorithms for detecting microplastics in water. 3 Methodology 3.1 Data
    Acquisition About 2100 sample images are collected from standard websites such
    as Google earth engine, Shutter stock [11, 12], etc. were as illustrated in Fig.
    1. All of the collected images were classified into categories based on expert
    knowledge and saved in the JPG format [13]. There are four categories in total
    for the water quality samples, each with a certain number of images. These categories
    represent different grades of water quality, based on water color, including dark
    green, yellow, brown, blue, black and light green [14]. These grades have been
    classified as algae water, clean water, mud water and polluted water respectively.
    The images are resized to 150 × 150 pixels to fit the model for subsequent calculations.
    Fig. 1 Samples collected and categorized Full size image 3.2 Overview The following
    is an overview of the water quality monitoring approach, as shown in Fig. 2. The
    first step involves collecting suitable water sample images and using image incision
    technology to isolate representative portions [14]. The sample images are categorized
    based on expert knowledge and labelled to form a sample library for modelling.
    The samples are input into proposed CNN models, to train the data. CNN models
    evaluate the output through different layers of the network by using a process
    called feature extraction [15]. The network consists of multiple layers, each
    performing a specific function. Fig. 2 Architecture of proposed system Full size
    image During each layer''s operation, the CNN model extracts important features
    from the input image, such as color, edges, corners, and textures. These features
    become increasingly complex as they move deeper into the network [16]. The output
    of each layer is assessed according to its capacity to detect the features it
    was designed to identify. To evaluate the output of each layer, CNN models use
    a technique called activation mapping. Activation mapping involves visualizing
    the output of each layer as a heatmap, where the brightest areas indicate the
    most significant features detected by that layer. Overall, CNN models use feature
    extraction and activation mapping to evaluate the output through different layers
    of the network, allowing for the identification of significant features in the
    input data and improving the model''s performance. The subsequent sections provide
    detailed descriptions of each phase. 4 Proposed Approach 4.1 Image Acquisition
    and Pre-processing Image acquisition and pre-processing are essential steps in
    preparing data for CNN models. Here are the typical steps involved in image acquisition
    and pre-processing: Image acquisition- the first step is to acquire high-quality
    images that represent the target object or scene. This is done by collecting around
    2100 images from standard websites from google. Image resizing- most CNN models
    require images of a specific size for optimal performance [17]. Therefore, it
    is essential to resize the images to the required dimensions to 150 × 150. Image
    normalization- it involves transforming the pixel values of the image to a standard
    range. This helps to reduce the impact of differences in image brightness, contrast,
    and color balance, which could affect the CNN model''s performance. 4.2 Data Augmentation
    Data augmentation is a method used in deep learning to increase the amount of
    data available for training a model by creating new, altered versions of pre-existing
    data as shown in Fig. 3. The idea behind data augmentation is to introduce variations
    in the original data, such as rotation, scaling, translation, flipping, or adding
    noise. This allows the model to learn more robust and generalized features, which
    can improve its performance on new and unseen data. For example, rotating an image
    by a certain angle can create a new sample that is similar to the original but
    with a slightly different viewpoint, so the collected water images have been rotated
    by 90°, 180° and 270°. Flipping an image horizontally can create another new sample
    that is a mirror image of the original and here the images have been flipped horizontally
    as well as vertically. Adding noise to an image can create new samples that simulate
    different lighting or atmospheric conditions [5]. Fig. 3 Modified versions of
    algae content water using data augmentation Full size image Data augmentation
    is especially useful when the amount of available training data is limited. By
    generating more data from the existing samples, the model can learn a wider range
    of variations and improve its ability to generalize to new data. Moreover, data
    augmentation can also help to prevent overfitting. 4.3 Proposed CNN Model A typical
    CNN-based image processing system architecture includes input layer, convolutional
    layers, pooling layers, activation function, fully connected layers, and output
    layer, allowing the network to learn complex features and relationships between
    them for accurate image classification or other image processing tasks [18]. There
    is no one CNN architecture that fits water quality classification. To determine
    the best model, the existing architectures should be tested, and the most appropriate
    one should be chosen based on the particular scenario. The pre-trained models
    are initialized with pre-existing weights from ImageNet and the upper layers are
    redefined to serve the purpose of classification. In order to assess whether a
    trained model is appropriate for its intended purpose, it is essential to test
    it for both underfitting and overfitting. To prevent overfitting, data augmentation
    techniques have been proposed. The pre-trained models utilized Adam optimizer
    to minimize the loss function. The global average pooling layer is added to every
    model, which reduces the dimensionality of the output from the previous layers.
    A dropout layer is added to the model, which randomly drops out a portion of the
    activations during training to prevent overfitting. A fully connected output layer
    is added with 4 nodes (one for each class), using the softmax activation function
    to output a probability distribution over the classes. Finally, various CNN approaches
    are utilized to train and validate the models on the water quality image dataset.
    The pretrained models used are InceptionV3, VGG16, ResNet50, DenseNet201 and MobileNet.
    5 Results and Discussion The models were trained using a batch-size of 10 for
    30 epochs. The complete dataset was randomly divided into training and testing
    data in a 80–20 ratio. The ModelCheckpoint callback is defined to save the best
    model weights based on validation loss during training. It will save the weights
    of the model to a file with a specified format, including the epoch number, validation
    loss, and validation accuracy. The EarlyStopping callback is defined to stop training
    early if there is no significant improvement in validation loss for a designated
    number of learning cycles. The ReduceLROnPlateau callback is defined to reduce
    the learning rate if there is no significant improvement in validation loss for
    a designated number of epochs. Figures 5, 6, 7, 8 and 9 show the variation in
    accuracies and losses of the training data and validation data when data has been
    trained under different pre-trained cnn models. The x-axis indicates the number
    of epochs, and the y-axis denotes the accuracy rate in the chart. Fig. 5 ResNet-50,
    accuracy is shown on the left, while the right displays its loss Full size image
    Fig. 6 InceptionV3, accuracy is shown on the left, while the right displays its
    loss Full size image Fig. 7 VGG16, accuracy is shown on the left, while the right
    displays its loss Full size image Fig. 8 DenseNet-201, accuracy is shown on the
    left, while the right displays its loss Full size image Fig. 9 MobileNet, accuracy
    is shown on the left, while the right displays its loss Full size image The accuracies
    and losses of the trained and validation data and the testing accuracies (obtained
    when the model has been tested on unseen images) are as shown in Table1. Observing
    Figs. 5, 6, 7, 8 and 9 and Table 1, our evaluation indicates that the DenseNet
    model outperforms all others in terms of training performance, achieving the highest
    validation accuracy. Based on these results, we selected DenseNet for further
    testing on unseen images and achieved an accuracy of 91.75%. The precision, recall
    and f1-score values across all categories are as shown in Table 2. Table 1 Comparing
    various techniques based on their accuracy and loss metrics Full size table Table
    2 Evaluation indicators of DenseNet201 class prediction Full size table Due to
    the limited amount of data available, the DenseNet model did not yield reliable
    prediction results, despite implementing data augmentation techniques during model
    training. However, it has shown a notable ability to classify features within
    the dataset, making it a viable option for water quality evaluation, even with
    a limited dataset. 6 Conclusion In this paper, we presented a water quality monitoring
    approach that leverages image processing and deep learning techniques. Then image
    classification is performed for water quality evaluation. Different experiments
    are conducted and compared the results with the state-of-the-art CNNs, the pre-trained
    models for image recognition. Notably, DenseNet201 model achieved higher classification
    accuracy i.e. 96.26% even in the absence of massive training samples. Further
    research can be conducted to explore the systems scalability and reliability in
    real-world scenarios, paving the way for sustainable and effective water quality
    management. References Seetha M (2018) Accuracy assessment of rough set based
    SVM Technique for spatial image classification. Int J Knowl Learn 12(3):269–274,
    Scopus 1741-1009 Google Scholar   Palsodkar P, Palsodkar P, Gokhale A, Dorge P,
    Gurjar A (2022) Fuel Larceny and leakage indication system using IoT. In: Mukherjee
    S, Muppalaneni NB, Bhattacharya S, Pradhan AK (eds) Intelligent systems for social
    good. Advanced technologies and societal change. Springer, Singapore. https://doi.org/10.1007/978-981-19-0770-8_7
    Agarwal S (2022) IoT applications for health care. In: Mukherjee S, Muppalaneni
    NB, Bhattacharya S, Pradhan AK (eds) Intelligent systems for social good. Advanced
    technologies and societal change. Springer, Singapore. https://doi.org/10.1007/978-981-19-0770-8_8
    Aryafar A, Gholami R, Rooki R, Ardejani F (2012) Heavy metal pollution assessment
    using support vector machine in the Shur River, Sarcheshmeh copper mine, Iran.
    Environ Earth Sci 67. https://doi.org/10.1007/s12665-012-1565-7 Bhuvaneswari Amma
    NG, Akshay Madhavaraj R (2023) Malware analysis using machine learning tools and
    techniques in IT Industry. In: Sarveshwaran V, Chen JIZ, Pelusi D (eds) Artificial
    intelligence and cyber security in Industry 4.0. Advanced technologies and societal
    change. Springer, Singapore. https://doi.org/10.1007/978-981-99-2115-7_8 Mukherjee
    S, Nath SS, Singh GK, Banerjee S (2022) FACEIFY: intelligent system for text to
    image translation. In: Mukherjee S, Muppalaneni NB, Bhattacharya S, Pradhan AK
    (eds) Intelligent systems for social good. Advanced technologies and societal
    change. Springer, Singapore. https://doi.org/10.1007/978-981-19-0770-8_5 Gunjan
    VK, Singh N, Shaik F, Roy S (2022) Detection of lung cancer in CT scans using
    grey wolf optimization algorithm and recurrent neural network. Heal Technol 12(6):1197–1210
    Article   Google Scholar   Gaddam DKR, Ansari MD, Vuppala S, Gunjan VK, Sati MM
    (2022) Human facial emotion detection using deep learning. In: ICDSMLA 2020: Proceedings
    of the 2nd international conference on data science, machine learning and applications.
    Springer Singapore, pp 1417–1427 Google Scholar   Ahmed M, Ansari MD, Singh N,
    Gunjan VK, BV SK, Khan M (2022). Rating-based recommender system based on textual
    reviews using IOT smart devices. Mob Inf Syst 2022 Google Scholar   Das P, Saif
    S (2023) Intrusion detection in IoT-based healthcare using ML and DL approaches:
    a case study. In: Sarveshwaran V, Chen JIZ, Pelusi D (eds) Artificial intelligence
    and cyber security in Industry 4.0. Advanced technologies and societal change.
    Springer, Singapore. https://doi.org/10.1007/978-981-99-2115-7_12 Fantin Irudaya
    Raj E, Appadurai M (2022). Internet of Things-based smart transportation system
    for smart cities. In: Mukherjee S, Muppalaneni NB, Bhattacharya S, Pradhan AK
    (eds) Intelligent systems for social good. Advanced technologies and societal
    change. Springer, Singapore. https://doi.org/10.1007/978-981-19-0770-8_4 Margatama
    L (2021). Reducing energy consumption in green cloud computing. Helix—Sci Explorer
    | Peer Reviewed Bimonthly Int J 11(2):6–15 Google Scholar   Ojha N, Kumar A, Tyagi
    N, Ranjan P, Vaish A (2023) Use of machine learning in forensics and computer
    security. In: Sarveshwaran V, Chen JIZ, Pelusi D (eds) Artificial intelligence
    and cyber security in Industry 4.0. Advanced technologies and societal change.
    Springer, Singapore. https://doi.org/10.1007/978-981-99-2115-7_9 Manasa K, Leo
    Joseph LMI (2023) IoT Security Vulnerabilities and Defensive Measures in Industry
    4.0. In: Sarveshwaran V, Chen JIZ, Pelusi D (eds) Artificial intelligence and
    cyber security in Industry 4.0. Advanced technologies and societal change. Springer,
    Singapore. https://doi.org/10.1007/978-981-99-2115-7_4 Singh N, Gunjan VK, Nasralla
    MM (2022) A parametrized comparative analysis of performance between proposed
    adaptive and personalized tutoring system “seis tutor” with existing online tutoring
    system. IEEE Access 10:39376–39386 Article   Google Scholar   Singh HK, Geete
    SS, Tiwari MS, Rajurkar VJ (2020) Review of limit equilibrium methods for stability
    analysis of dump slope. Helix—Sci Explorer | Peer Reviewed Bimonthly Int J 10(01):89–97
    Google Scholar   Gunjan VK, Vijayalata Y, Valli S, Kumar S, Mohamed MO, Saravanan
    V (2022) Machine learning and cloud-based knowledge graphs to recognize suicidal
    mental tendencies. Comput Intell Neurosci 2022 Google Scholar   Uudeberg K, Aavaste
    A, Kõks K-L, Ansper A, Uusõue M, Kangro K, Ansko I, Ligi M, Toming K, Reinart
    A (2020) Optical water type guided approach to estimate optical water quality
    parameters. Remote Sens 12:931. https://doi.org/10.3390/rs12060931 Article   Google
    Scholar   Download references Author information Authors and Affiliations G. Narayanamma
    Institute of Technology and Science (for Women), Shaikpet, Hyderabad, Telangana,
    India Jayashree S. Patil, Akhila Mailaram, Pavani Naga Kumari Basa, A. Sai Sravya
    & Banvita Yadam Corresponding author Correspondence to Akhila Mailaram . Editor
    information Editors and Affiliations BioAxis DNA Research Centre (P) Ltd., Hyderabad,
    India Amit Kumar Dynexsys, Sydney, NSW, Australia Stefan Mozar Rights and permissions
    Reprints and permissions Copyright information © 2024 The Author(s), under exclusive
    license to Springer Nature Singapore Pte Ltd. About this paper Cite this paper
    Patil, J.S., Mailaram, A., Basa, P.N.K., Sai Sravya, A., Yadam, B. (2024). Integrating
    Image Processing and Convolution Neural Networks for Water Quality Detection.
    In: Kumar, A., Mozar, S. (eds) Proceedings of the 6th International Conference
    on Communications and Cyber Physical Engineering . ICCCE 2024. Lecture Notes in
    Electrical Engineering, vol 1096. Springer, Singapore. https://doi.org/10.1007/978-981-99-7137-4_77
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-99-7137-4_77
    Published 05 February 2024 Publisher Name Springer, Singapore Print ISBN 978-981-99-7136-7
    Online ISBN 978-981-99-7137-4 eBook Packages Engineering Engineering (R0) Share
    this paper Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Publish with us Policies and ethics Download book PDF Download book
    EPUB Sections Figures References Abstract Introduction Related Work Methodology
    Proposed Approach Results and Discussion Conclusion References Author information
    Editor information Rights and permissions Copyright information About this paper
    Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Electrical Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Integrating Image Processing and Convolution Neural Networks for Water Quality
    Detection
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ambade S.D.
  - Mishra R.
  citation_count: '0'
  description: With the increasing demands on global agriculture, there is an imperative
    need to optimize crop yields and promote sustainable agricultural practices. Real-time
    monitoring and accurate predictions of soil health and crop yields have significant
    implications for farmers, agronomists, and policymakers. While existing soil analysis
    models offer certain predictive capabilities, their efficiency is often hindered
    by issues related to energy consumption, prediction delay, and accuracy levels.
    Contemporary soil models primarily fall short in addressing the multifaceted nature
    of soil attributes and their dynamic interactions. These models also struggle
    to provide real-time insights, frequently leading to delayed interventions, misallocated
    resources, and suboptimal yields. In this paper, we introduce an advanced, low-cost,
    and energy-aware multiparametric IoT-based soil analysis model designed to overcome
    the prevailing limitations. Our system harnesses the synergy of N, P, K, Humidity,
    and Temperature sensors, augmented with temporal datasets to offer a comprehensive
    view of the soil's current state. At the core of our analysis, an ensemble learning
    model combines the strengths of Naive Bayes, Logistic Regression, SVM, MLP, and
    1D CNN methods, streamlining accurate yield level predictions. To further refine
    the model's efficiency, a Q Learning approach is integrated, ensuring both energy
    conservation and heightened prediction accuracy. When deployed in various agronomic
    scenarios, the proposed model manifested a marked improvement in prediction metrics.
    Notably, we observed a 10.5% enhancement in precision, 9.4% in accuracy, 8.5%
    in recall, and 4.5% in AUC. Moreover, the model reduced the prediction delay by
    9.5% compared to its counterparts. These advancements underscore the potential
    of our model to revolutionize soil analysis techniques, paving the way for smarter,
    energy-efficient, and productive agricultural practices.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Journal of Intelligent Systems and Applications in Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'LEIFMCY: Deployment of an Efficient Low-Cost &amp; Energy-Aware Multiparametric
    IoT-Based Fertilization and Irrigation Monitoring Model for Cotton Yield Analysis'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Rathore N.
  - Rajavat A.
  citation_count: '0'
  description: In today’s digital age, the Internet of Things (IoT) is gaining popularity.
    IoT has made everything smart, for example, smart cities (smart buildings and
    smart homes), smart healthcare (personal monitoring, smart wearables), industrial
    automation (especially manufacturing), commercial (shopping systems, retail),
    and even that agriculture too. IoT is becoming increasingly important in today’s
    digital age, resulting in a rapid rise in the number of devices connected to it.
    Massive amounts of data will be produced by such widely distributed IoT devices
    at the network’s edge. Processing these massive amounts of data in the centralized
    cloud is expected to result in increased 400bandwidth utilization, latency, and
    network congestion. Edge computing has become a popular paradigm in recent years
    for reducing network congestion and serving real-time IoT applications by providing
    services close to enduser devices. Agriculture is the foundation of the economy
    of any nation in the world. By 2050, the world population will need a 70% increase
    in food production to feed an estimated global population of more than 9 billion
    people. Potatoes are consumed all over the world and its production plays an important
    role in agriculture. The two primary diseases that adversely affect the yield
    of potato crop production are early blight and late blight. Therefore, in this
    work, we used containerized microservices to deploy machine learning models to
    resource restricted edge nodes on agricultural land for real-time disease and
    irrigation water requirement prediction in potato crops. Containers are lightweight
    and easy to deploy, making them the ideal choice for running machine learning
    models on resource-constrained edge nodes. We examined AlexNet, MobileNet, and
    VGG16, three deep convolutional neural networks (CNN), to detect these diseases
    automatically. A dataset of 7128 images containing healthy and diseased leaves
    of potato plants was used to train all three CNN models on the cloud. Even if
    training is outsourced, trained models need a lot of RAM; hence, the first aim
    of this study is to find a lightweight CNN model that can easily fit into resource-constrained
    devices. To improve potato crop yield and reduce economic losses, we found and
    deployed lightweight CNN model at the edge node to identify diseases in real time
    using leaf pictures recorded by in-place camera devices. The advantage of the
    developed technique is that by classifying potato leaf pictures in real time on-premises,
    there is no need to transfer images to the cloud for probable disease identification,
    which increases network congestion. The lightweight CNN model achieved 99.87%
    accuracy for both train and test images, according to the results. Precision (P),
    Recall (R), and F1 score (F1) are also displayed, to visualize the model’s efficiency.
    Similarly for real-time prediction of irrigation water requirement in potato crop,
    we trained two machine learning models, Support Vector Machine (SVM) and Logistic
    Regression (LR) on 100,000 values of records. Each record has four input parameters
    (soil moisture, temperature, humidity, and how many days the crop was planted
    before). With four input parameters in each record (soil moisture, temperature,
    humidity, and how many days before the crop was planted), the model decides whether
    the water pump should be turned on or off. The SVM model and the LR model attained
    92 and 73% accuracy, respectively, in determining whether the water pump should
    be turned ON or OFF.
  doi: 10.1201/9781003435228-24
  full_citation: '>'
  full_text: '>

    "Access Provided By:University of Nebraska-Lincoln T&F eBooks ‍ Advanced Search
    Login About Us Subjects Browse Products Request a trial Librarian Resources What''s
    New!! HomeEnvironment & AgricultureAgriculture & Environmental SciencesAgriculturePrecision
    Agriculture for SustainabilitySmart Farming Based on IOT-Edge Computing: Applying
    Machine Learning Models For Disease And Irrigation Water Requirement Prediction
    In Potato Crop Using Containerized Microservices Chapter Smart Farming Based on
    IOT-Edge Computing: Applying Machine Learning Models For Disease And Irrigation
    Water Requirement Prediction In Potato Crop Using Containerized Microservices
    ByNitin Rathore, Anand Rajavat Book Precision Agriculture for Sustainability Edition
    1st Edition First Published 2024 Imprint Apple Academic Press Pages 26 eBook ISBN
    9781003435228 Share ABSTRACT In today’s digital age, the Internet of Things (IoT)
    is gaining popularity. IoT has made everything smart, for example, smart cities
    (smart buildings and smart homes), smart healthcare (personal monitoring, smart
    wearables), industrial automation (especially manufacturing), commercial (shopping
    systems, retail), and even that agriculture too. IoT is becoming increasingly
    important in today’s digital age, resulting in a rapid rise in the number of devices
    connected to it. Massive amounts of data will be produced by such widely distributed
    IoT devices at the network’s edge. Processing these massive amounts of data in
    the centralized cloud is expected to result in increased 400bandwidth utilization,
    latency, and network congestion. Edge computing has become a popular paradigm
    in recent years for reducing network congestion and serving real-time IoT applications
    by providing services close to enduser devices. Agriculture is the foundation
    of the economy of any nation in the world. By 2050, the world population will
    need a 70% increase in food production to feed an estimated global population
    of more than 9 billion people. Potatoes are consumed all over the world and its
    production plays an important role in agriculture. The two primary diseases that
    adversely affect the yield of potato crop production are early blight and late
    blight. Therefore, in this work, we used containerized microservices to deploy
    machine learning models to resource restricted edge nodes on agricultural land
    for real-time disease and irrigation water requirement prediction in potato crops.
    Containers are lightweight and easy to deploy, making them the ideal choice for
    running machine learning models on resource-constrained edge nodes. We examined
    AlexNet, MobileNet, and VGG16, three deep convolutional neural networks (CNN),
    to detect these diseases automatically. A dataset of 7128 images containing healthy
    and diseased leaves of potato plants was used to train all three CNN models on
    the cloud. Even if training is outsourced, trained models need a lot of RAM; hence,
    the first aim of this study is to find a lightweight CNN model that can easily
    fit into resource-constrained devices. To improve potato crop yield and reduce
    economic losses, we found and deployed lightweight CNN model at the edge node
    to identify diseases in real time using leaf pictures recorded by in-place camera
    devices. The advantage of the developed technique is that by classifying potato
    leaf pictures in real time on-premises, there is no need to transfer images to
    the cloud for probable disease identification, which increases network congestion.
    The lightweight CNN model achieved 99.87% accuracy for both train and test images,
    according to the results. Precision (P), Recall (R), and F1 score (F1) are also
    displayed, to visualize the model’s efficiency. Similarly for real-time prediction
    of irrigation water requirement in potato crop, we trained two machine learning
    models, Support Vector Machine (SVM) and Logistic Regression (LR) on 100,000 values
    of records. Each record has four input parameters (soil moisture, temperature,
    humidity, and how many days the crop was planted before). With four input parameters
    in each record (soil moisture, temperature, humidity, and how many days before
    the crop was planted), the model decides whether the water pump should be turned
    on or off. The SVM model and the LR model attained 92 and 73% accuracy, respectively,
    in determining whether the water pump should be turned ON or OFF. Previous Chapter
    Next Chapter Your institution has not purchased this content. Please get in touch
    with your librarian to recommend this.  To purchase a print version of this book
    for personal use or request an inspection copy  GO TO ROUTLEDGE.COM  Policies
    Privacy Policy Terms & Conditions Cookie Policy Journals Taylor & Francis Online
    Corporate Taylor & Francis Group Help & Contact Students/Researchers Librarians/Institutions
    Connect with us Registered in England & Wales No. 3099067 5 Howick Place | London
    | SW1P 1WG © 2024 Informa UK Limited"'
  inline_citation: '>'
  journal: 'Precision Agriculture for Sustainability: Use of Smart Sensors, Actuators,
    and Decision Support Systems'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'SMART FARMING BASED ON IOT-EDGE COMPUTING: APPLYING MACHINE LEARNING MODELS
    FOR DISEASE AND IRRIGATION WATER REQUIREMENT PREDICTION IN POTATO CROP USING CONTAINERIZED
    MICROSERVICES'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Vizi Z.
  - Batki B.
  - Rátki L.
  - Szalánczi S.
  - Fehérváry I.
  - Kozák P.
  - Kiss T.
  citation_count: '1'
  description: 'Background: Precisely predicting the water levels of rivers is critical
    for planning and supporting flood hazard and risk assessments and maintaining
    navigation, irrigation, and water withdrawal for urban areas and industry. In
    Hungary, the water level of rivers has been recorded since the early nineteenth
    century, and various water level prediction methods were developed. The Discrete
    Linear Cascade Model (DLCM) has been used since 1980s. However, its performance
    is not always reliable under the current climate-driven hydrological changes.
    Therefore, we aimed to test machine learning algorithms to make 7-day ahead forecasts,
    choose the best-performing model, and compare it with the actual DLCM. Results:
    According to the results, the Long Short-Term Memory (LSTM) model provided the
    best results in all time horizons, giving more precise predictions than the Baseline
    model, the Linear or Multilayer Perceptron Model. Despite underestimating water
    levels, the validation of the LSTM model revealed that 68.5‒76.1% of predictions
    fall within the required precision intervals. Predictions were relatively accurate
    for low (≤ 239 cm) and flood stages (≥ 650 cm), but became less reliable for medium
    stages (240–649 cm). Conclusions: The LSTM model provided better results in all
    hydrological situations than the DLCM. Though, LSTM is not a novel concept, its
    encoder–decoder architecture is the best option for solving multi-horizon forecasting
    problems (or “Many-to-Many” problems), and it can be trained effectively on vast
    volumes of data. Thus, we recommend testing the LSTM model in similar hydrological
    conditions (e.g., lowland, medium-sized river with low slope and mobile channel)
    to get reliable water level forecasts under the rapidly changing climate and various
    human impacts. Graphical Abstract: [Figure not available: see fulltext.].'
  doi: 10.1186/s12302-023-00796-3
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Search Get published
    Explore Journals Books About Login Environmental Sciences Europe About Articles
    Submission Guidelines Submit manuscript Research Open access Published: 04 November
    2023 Water level prediction using long short-term memory neural network model
    for a lowland river: a case study on the Tisza River, Central Europe Zsolt Vizi,
    Bálint Batki, Luca Rátki, Szabolcs Szalánczi, István Fehérváry, Péter Kozák &
    Tímea Kiss  Environmental Sciences Europe  35, Article number: 92 (2023) Cite
    this article 1365 Accesses 1 Citations Metrics Abstract Background Precisely predicting
    the water levels of rivers is critical for planning and supporting flood hazard
    and risk assessments and maintaining navigation, irrigation, and water withdrawal
    for urban areas and industry. In Hungary, the water level of rivers has been recorded
    since the early nineteenth century, and various water level prediction methods
    were developed. The Discrete Linear Cascade Model (DLCM) has been used since 1980s.
    However, its performance is not always reliable under the current climate-driven
    hydrological changes. Therefore, we aimed to test machine learning algorithms
    to make 7-day ahead forecasts, choose the best-performing model, and compare it
    with the actual DLCM. Results According to the results, the Long Short-Term Memory
    (LSTM) model provided the best results in all time horizons, giving more precise
    predictions than the Baseline model, the Linear or Multilayer Perceptron Model.
    Despite underestimating water levels, the validation of the LSTM model revealed
    that 68.5‒76.1% of predictions fall within the required precision intervals. Predictions
    were relatively accurate for low (≤ 239 cm) and flood stages (≥ 650 cm), but became
    less reliable for medium stages (240–649 cm). Conclusions The LSTM model provided
    better results in all hydrological situations than the DLCM. Though, LSTM is not
    a novel concept, its encoder–decoder architecture is the best option for solving
    multi-horizon forecasting problems (or “Many-to-Many” problems), and it can be
    trained effectively on vast volumes of data. Thus, we recommend testing the LSTM
    model in similar hydrological conditions (e.g., lowland, medium-sized river with
    low slope and mobile channel) to get reliable water level forecasts under the
    rapidly changing climate and various human impacts. Graphical Abstract Highlights
    The actual use of the DLCM predicts water stages less precisely than the LSTM
    model. The LSTM underestimates water stages on each predicted horizon (1–7 days).
    The LSTM model reacts too late or incorrectly in certain hydrological situations
    (rising limb of floods, medium stages). The most precise forecast was given for
    low stages, followed by floods. The lowest accuracy was provided for medium stages.
    Introduction The precise prediction of river stages is fundamental to supporting
    flood protection, navigation, and water withdrawal. The first stage predictions
    were based on regression curves between water levels at neighbouring gauging stations
    [15, 40], their accuracy was subsequently improved using stage data from tributaries
    [35]. Their reliability is influenced by impoundment, slope changes during a flood
    [22, 23], changes in channel morphology and roughness [11, 14],or the changing
    nature of hydrological events [3, 5]. The Discrete Linear Cascade Model (DLCM)
    is widely used to predict water stages [7, 30, 34, 36]. It is based on mass and
    energy conservation principles, with interconnected compartments representing
    an element of the hydrological system and incorporating the concept of time lags
    [16, 29, 31, 37]. Statistical methods (i.e., regression or maximum likelihood
    estimation [34, 38], are used to estimate its parameters. The DLCM is simple with
    low computational efficiency [30, 34], it does, however, assume linear correlations
    between the hydrological components [7, 31], though hydrological systems are often
    nonlinear and exhibit time-varying behaviour, especially under extreme events
    [13, 16]. Besides, the DLCM cannot handle downstream disturbances, such as hydraulic
    structures, tributaries, or impoundments [34]. Therefore, numerically based water
    level forecast models were developed [6, 39], applying predefined upper and lower
    boundary conditions. Their accuracy is highly dependent on the available elevation
    and roughness data. Most machine learning (ML) algorithms perform a transformation
    on the input data, extracting the underlying information and then predict the
    water stages using even a simple regression model. Moradkhani et al. [26] achieved
    excellent one-step-ahead prediction by applying a neural network approach with
    a nonlinear relationship between the input and output data and a proper cross-validation
    framework. Forecasts based on data-driven algorithms open up new perspectives
    in hydrology. Though at-a-site measurements produce a massive amount of data,
    only a small portion is processed for forecasting. To predict water levels, data-driven
    methods use orders of magnitude more data. As the relationships between the data
    change (due to climate or human-driven morphological or hydrological alteration),
    these methods refine the network of relationships; thus, the forecast is based
    on the most accurate relationships. Mosavi et al. [27] highlighted that ML models
    could outperform physics-based or statistical models. They are cost-effective
    and can help find the optimal parametrization of a data-driven model to support
    forecasts [9, 33]. The artificial neural network (ANN) could predict water stages
    using one hidden layer. The trained model of Chen et al. [10] was compared with
    2D and 3D hydrodynamic models, proving that the data-driven models provided reliable
    results. Wei et al. [42] used the ANN with other simple (“lazy”) and complex (“eager”)
    models to predict hourly hydrological data. It was determined that the more complex
    models produced more precise results, and the ANN approach provided accurate results
    at the expense of lower computational efficiency during the parameter optimization.
    An ensemble of multilayer perceptron (MLP) models was used for a one-step-ahead
    forecast [25]. First, a singular spectrum analysis of the multi-dimensional input
    (multiple time series) was performed. Then, trained models were selected based
    on accuracy and diversity, and average predictions were calculated. However, the
    proposed methodology needs to be tested for multi-step ahead forecasts. The combination
    of the autoregressive integrated moving average (ARIMA) model and ML models, such
    as the random forest (RF), support vector regression (SVR), recurrent neural network
    (RNN), and long short-term memory model (LSTM), led to reliable hourly water stage
    prediction [32]. The main idea behind the hybrid model was that the ARIMA model
    could handle the linear components of the data, whereas the ML models used nonlinear
    relations. Several authors compared the accuracy of water level forecasts produced
    by various models. Kim et al. [20] compared ML and classical approaches, concluding
    that the LSTM-RNN model gave the best flood forecast, outperforming the support
    vector machine (SVM) and gradient boosting (GB) models. Adikari et al. [1] used
    convolutional neural network (CNN), LSTM, and wavelet decomposition (WD) functions
    combined with the adaptive neuro-fuzzy interface system (ANFIS). Their findings
    indicate that the CNN model, which deals with complex data dependencies, could
    be used for short-term hydrological predictions. Ahmed et al. [2] developed 7-day,
    14-day, and 28-day forecasts. The input data were fed to a CNN encoder and a bi-directional
    LSTM decoder. They concluded that the recursive encoder–decoder model provided
    accurate short-term prediction, but failed at longer time horizons due to the
    cumulative error in the recursive process [12]. Hungarian hydrologists have recently
    been confronted by end-users with the issue of the inaccuracy of the Discrete
    Linear Cascade Model (DLCM), which has been used to predict stages of Hungarian
    rivers since the 1980s [4]. The predictions on the Tisza River are especially
    incorrect due to deteriorating slope conditions, periodical channel changes, hydrological
    extremities, and frequent impoundments [14, 23, 24, 41]. The combination of rising
    flood levels and long-duration floods exposes the population to greater flood
    risk [24],hence, predicting water levels, particularly peak flood levels, is crucial
    for flood hazard management and warning systems. Therefore, the primary aim of
    the research was to assess the applicability of the LSTM model under various hydrological
    situations and prediction horizons to estimate water levels. To understand the
    limitations of the LSTM model, its performance was compared to a naive (Baseline)
    model and simpler ML models (Linear and MLP). Our specific goals are as follows:
    (1) test various ML algorithms to make a 7-day-ahead water level forecast; (2)
    analyse and compare their results; (3) assess the performance of the best algorithm
    in predicting recent floods; and (4) compare the results of the best algorithm
    with the predictions of the DLCM used by authorities. Although LSTM is not a novel
    concept, its encoder–decoder architecture is the most effective at solving multi-horizon
    forecasting (“Many-to-Many”) challenges. Still, the LSTM model is cutting-edge
    in time-series forecasting: newer transformer models do not outperform cell-based
    RNNs in performance, because they can be trained on large amounts of data and
    lack memory (which is required to incorporate patterns from the past). The novelty
    of the research is that in specific fluvial environments (i.e., very low slope
    conditions, frequent impoundments, hydrological extremities), the performance
    of the model has not been tested yet, and the Tisza River, with its new hydrological
    challenges, provides a great opportunity for that. The proposed LSTM-LSTM model
    is not an existing model. The approach of building the LSTM model is well-known
    since encoder–decoder architectures are the current best practices in all fields
    using deep learning, and the model''s final structure and hyperparameters allow
    for an understanding of the patterns in the time series data for such a lowland
    river, like the Tisza River. Study area The Tisza River is a Danube tributary
    (length: 962 km), that drains an area of approximately 157.200 km2 in Central
    Europe (Fig. 1). The Tisza River has a lowland character, as its mean water slope
    is just 2 cm/km; thus, the flow velocity is 0.6‒1.3 m/s. The slope has a declining
    trend, as the mean slope was 2.1 cm/km in 1900–1910 and 1.4 cm/km in 2000–2010
    [23]. The discharge of the Tisza varies between 58 and 4346 m3/s at Szeged (mean
    825 m3/s). Based on daily water level measurements since 1 January 1900, the absolute
    water level change at the Szeged gauging station is 12.59 m (varying between −
    250 and + 1009 cm). The bankfull level at Szeged is 550 cm; however, the flood
    warning levels are 650, 750, and 850 cm. Floods have been recorded 80 years since
    1900, with a mean duration of 45 days, but the longest flood lasted for 173 days
    [23]. Fig. 1 The study area is the Tisza River in Central Europe. The input data
    of the model created for Szeged originate from 11 upstream and downstream gauging
    stations Full size image Flood levels have increased by over 4 m since 1900, due
    to catchment-scale run-off changes [18] and decreasing flood conductivity [21,
    24]. Thus, in 120 years, six new record flood levels were set at Szeged in 1907,
    1913, 1919, 1932, 1970, and 2006 [23]. However, climate change has also an impact
    on hydrology. High and long lasting floods occurred at the beginning of the 2first
    century (1998‒2006), but since then, only two small overbank floods have been
    recorded (2010 and 2013), and only below-bankfull flood waves have developed.
    Impoundment also has an impact on flood levels. The Danube and the largest tributary
    of the Tisza, the Maros, can block the floods on the Tisza. This impoundment increases
    the flood levels by 30‒40 cm, and it lasts until the water level of the Danube
    or Maros drops [41]. The impoundment influences the Tisza along its 300‒350 km
    long section (from its confluence with the Danube to Szolnok). The floods in 2006
    and 2013 were impounded ones [24], therefore, though the 2006 flood was the highest
    on record (H: 1009 cm, it had a lower peak discharge (Q: 3780 m3/s) than the second
    largest flood in 1970 (H: 959 cm; Q: 3820 m3/s). Another essential feature of
    the Tisza that influences the stages is its intense cross-sectional area change
    during floods. The channel is sand-bedded and deeply incised. Therefore, during
    the rising limb of the floods the channel incises up to 1.5‒3 m, giving it a maximum
    depth of 18.5‒19.1 m. However, when the flow velocity drops during the flood’s
    peak (due to impoundment), large amount of sand is deposited on the bottom, reducing
    the maximum depth to 17.6 m and the cross-sectional area by approximately 10%.
    As the impoundment terminates, the flow velocity increases, and the channel slightly
    incises again thus during the falling limb. These cross-sectional changes influence
    the discharge-stage curves: during the rising stages, the incision results in
    a lower stage of a given discharge than during flood peak or falling stages, when
    the in-channel aggradation results in water level increase of the same discharge
    [23]. Methods Data The models were created for the Szeged gauging station (173
    river km). The present study employed daily water levels measured at 12 gauging
    stations along the Tisza and its two tributaries (Körös and Maros) near the Szeged
    station (Fig. 1), see list of the gauging station in Additional file 1: S1 . The
    water level is measured using fluviometers, with the “0” point set arbitrarily.
    The daily measured water stage data between 1 January 1951 and 31 December 2020
    were used in the modelling. It is a common approach to divide the data into two
    parts to track the performance of a model on unseen data [8]. The general approach
    for data without a temporal component is to keep 80% of the data randomly selected
    for finding the best parametrization of the model (training dataset) and the remaining
    20% for testing the predicting ability (validation dataset). However, randomly
    slicing time-dependent data would cause issues. First, it separates time essential
    properties such as trend and seasonality. Second, it may cause look-ahead bias,
    which is associated with using data from the future. Thus, the correct method
    for splitting time-series data is to choose a date, for which the previous values
    are used in the parameter search (training), and the dates after that day serve
    as validation. We selected 21 April 2004, as the splitting point because we wanted
    to include the flood in 2006 in the validation (Fig. 2). Thus, 76% of the data
    (1 January 1951–21 April 2004) was used for parametrization and 23% for validation
    (1 January 2005–31 December 2020), and a gap was introduced between the training
    and validation sets, as suggested by Cerqueira et al. [8]. In this way, floods
    appeared both in the parametrization period (in 1970, 2000 and 2001) and the validation
    period (in 2006 and 2013). Finally, we normalized each gauging station’s dataset
    separately, and normalization parameters were calculated from the training set
    and then applied to both the training and validation sets. Since the validation
    set is assumed to be unknown to the model, we cannot consider normalization parameters
    from the validation set. Fig. 2 Water stages measured at Szeged between 1951 and
    2020. The data were split to training and validation datasets with a gap in between
    Full size image Modelling The modelling’s main challenge was to map the input
    multivariate sequence (time-series of multiple features) to the target univariate
    sequence (time-series of a single feature). Thus, a suitable model should have
    considered the temporal nature of the data, handled multivariate time series and
    have been able to forecast for multiple horizons ahead. Classical ML models, such
    as feedforward neural networks cannot preserve the sequence’s temporal structure.
    Statistical models, such as Autoregressive Integrated Moving Average (ARIMA),
    typically provide a robust solution for univariate problems but cannot handle
    multivariate time series. Recurrent Neural Networks (RNNs) meanwhile, are well-suited
    for our problem because they have a built-in memory mechanism that allows them
    to maintain context and retain information about previous elements in the sequence.
    Moreover, processing multivariate (variable-length) input data is straightforward
    and arbitrarily long predictions are produced iteratively in RNNs. Long Short-Term
    Memory (LSTM) is a cell-based RNN model [17], described in more detail in Additional
    file 1: S1. We built a multilayer LSTM model by stacking multiple LSTM cells.
    Thus, the layers are LSTM cells, receiving the output from the previous layer
    as its input and generating its own output. This allows the model to learn more
    complicated data representations. More specifically, we implemented an LSTM encoder–decoder
    architecture [28], where a stacked LSTM model processed the input data (encoder)
    and another stacked LSTM model generated the predictions (decoder), as shown in
    Fig. 3. We will refer to the LSTM-based encoder–decoder model later as the LSTM
    model. Fig. 3 Architecture of the LSTM encoder–decoder model. is the number of
    past data, is the length of the prediction (forecast horizon). The is the real
    (known) target data at the t‒1 time point, and is the prediction given at the
    time t‒1 for the date t + i Full size image The encoder receives the historical
    data as input vectors ( ), where is the number of data points used from the past
    for one prediction. The encoder is responsible for learning complex patterns in
    the input and providing the decoder with valuable, condensed information through
    the hidden states of the LSTM cells. The decoder is expected to decode the encoded
    information and provide predictions ( ), where is the length of the prediction
    ( -step ahead forecast). The decoder’s input in the first time step is the known
    target value from the previous time step ( ). The decoder’s subsequent inputs
    are the predictions from the previous time step ( ). In addition to the LSTM model,
    we developed simpler models to compare their performance. The Baseline model was
    developed to assess the performance of more advanced ML models by providing a
    constant extrapolated forecast based on the most recent water level observation
    at the Szeged gauging station. The Linear model is based on the long-term data
    of 12 gauging stations, taking all feature values from the past time window (15
    days), flattening this data, and then applying a transformation (matrix multiplication)
    to obtain the 7-day ahead forecast. The Multilayer Perceptron (MLP) model was
    also developed as a third model, which transforms data using a neural network
    with two hidden layers (256 and 128 units) and ReLU activation functions. More
    details on the model and training are described in Additional file 1: S2. Statistical
    analysis The global performance of different models was evaluated based on four
    evaluation metrics: the mean absolute error (MAE in cm), root mean square error
    (RMSE in cm), R2 correlation, and Willmott’s Index (WI). Smaller MAE and RMSE
    values, as well as R2 and WI values closer to 1.0, indicate to a better fit. To
    compare each prediction with the measured data at the Szeged gauging station,
    quantile–quantile (QQ) plots were applied. The suitability of the model was evaluated
    for low (≤ 239 cm), medium (240‒649 cm) and high (≥ 650 cm) water levels (650
    cm is the lowest threshold of the warning system). The required precisions for
    the 7-day ahead forecast on its first day is ± 5 cm, on its third day is ± 15
    cm, and on the fifth and seventh days are ± 25 and ± 35 cm, respectively. These
    precision intervals were specified by hydrologist and field experts. The project’s
    ultimate goal was to develop models for precise flood forecasting. Thus, measured
    and forecasted water levels for the 2006 and 2013 floods were compared. The forecast
    on the first, third, fifth, and seventh days of the 7-day ahead forecast was compared
    to the measured water level. The confidence intervals of the π-day before predictions
    for each day [denoted by ] were calculated according to the following formula:
    (1) The absolute differences between the -day before forecast value for day [denoted
    by ] and the measured data for the day [i.e., ] were averaged over the past 15
    days. Thus, the confidence interval is the average performance of the model for
    the last 15 days. Finally, the performance of the best model was compared to the
    results of the official prediction (DLCM) made by the Hungarian Directorate of
    Water Management (OVF). The DLCM predictions were available for 2014‒2019. The
    DLCM provides a 6-day forecast with a 6-h frequency [4]. As our models provide
    one data per day, the predictions for 6:00 am were selected from the DLCM and
    compared with the results of our best-performing model. Results Comparison of
    different models The performance of the applied models was evaluated for the 2006‒2020
    period (Fig. 4 and Table 1). As the forecast moves further ahead, the Baseline
    model’s performance deteriorates. For example, the MAE is 9.7 cm on the first
    day, while it is 51.1 cm on the seventh day. The Linear model is based on long-term
    data from several gauging stations. As a result, compared to the Baseline model,
    there is a significant improvement based on all four metrics, particularly for
    the longer-term forecasts. However, there was only a slight improvement on the
    first day of the 7-day ahead forecast (MAE: 7.7 cm). Fig. 4 Performance of the
    7-day ahead forecasts using the LSTM, MLP, Linear and Baseline models on the test
    set over different forecast horizons (1‒7 days) using different evaluation metrics:
    A MAE, B RMSE, C R2 correlation and D WI Full size image Table 1 Performance of
    the 7-day ahead forecasts using the LSTM, MLP, Linear and Baseline models on the
    test set over different forecasting horizons (1‒7 days) using different evaluation
    metrics: MAE, RMSE, R2 correlation, and WI Full size table The MLP model resulted
    in further refinement on the third‒seventh days of the 7-day ahead forecast (e.g.,
    MAE is between 14.9 and 38.4 cm, respectively). However, it resulted in a less
    precise forecast on the first and second days (e.g., the MAE was higher than in
    the case of the Linear model, as it was 9.9 and 12.3 cm, respectively). When compared
    to other models, the LSTM model’s excellent performance on the first and second
    days of the 7-day ahead forecasts (e.g., MAE: 4.2 and 7.6 cm, respectively). Besides,
    the MAE was not only the lowest on the first day but also throughout the forecasted
    horizons, remaining 34.7 cm on the seventh day. Aside from the easily interpretable
    MAE, which describes the average magnitude of the errors, the other values showed
    similar trends. RMSE, which gives a higher weight to larger errors and thus emphasizes
    outliers, showed higher values but similar trends as MAE. The R2, which measures
    how much of the total variance of the data is explained by the model, and the
    Willmott’s Index (WI), which represents the ratio of the mean square error and
    the potential error, were almost identical until the fifth day of the 7-day forecasts
    and only slightly differed on the sixth and seventh days. Compared to the Baseline
    model, the LSTM model improved the R2 and WI values similarly: from 0.992 to 0.999
    on the first day and from 0.79 to 0.89 on the seventh day of the forecast. Global
    performance of the LSTM model The validation dataset contained 5471 days (between
    01 January 2005 and 24 December 2019). Considering all days, 68.4‒76.2% of the
    predicted data fall within the required precision intervals on given days of the
    7-day ahead forecast (Table 2). The best performance was found on the third day
    of the forecast. The model generally tends to underestimate the water stages on
    each predicted horizon, as 14.1‒20.1% of the data were underestimated; however,
    only 9.7‒13.0% of the data were overestimated by as much as 334 cm. Table 2 Precision
    of the prediction made by the LSTM model for the validation period (01 January
    2005–24 December 2019) Full size table The global performance of the LSTM model
    was further investigated based on general quantile–quantile (QQ) plots (Fig. 5)
    and violin plots (Fig. 6A). There was no significant deviation in the slopes of
    linear fits (Fig. 5: red line) on the first and third days of the 7-days ahead
    forecasts, and the R2 values were close to 1.0. On the contrary, the predicted
    data were underestimated in some cases at the fifth and seventh day ahead horizons,
    where the slopes of fitted lines were 0.97 and 0.92, respectively (Fig. 5). Fig.
    5 General quantile–quantile (QQ) plots of the 7-day ahead forecasts obtained using
    the LSTM model on the test set over different forecasting horizons (1‒7 days).
    The gray band indicates the required precision of a given day’s forecast, and
    the red linear fit indicates the average deviation of the predicted data from
    the observed data Full size image Fig. 6 Probability density of the results of
    the 7-day ahead forecasts obtained using the LSTM model over different forecasting
    horizons (1‒7 days) for the entire test set (A), for low stages (B), medium stages
    (C), and floods (D). Green stripes indicate the required precision of a given
    day’s forecast Full size image The performance of the LSTM model was also evaluated
    in term of view of various hydrological situations. The Tisza at Szeged is dominated
    by low stages (≤ 239 cm), accounting for 69% of all data. The results show that
    76.7–83.2% of the predicted low-level data fall within the required precision
    intervals (Table 3, Fig. 6B). The best results were achieved on the third and
    fifth days of the 7-day ahead forecasts. In the case of low stages, the underestimation
    of the water levels is almost three times more common (12.6‒17.4%) than overestimation
    (4.0‒7.9%). Although the median absolute difference between predicted and measured
    stages is only 2.5‒12.7 cm, the maximum difference could be as high as 43‒304
    cm. Table 3 Precision of the prediction of low stages (< 240 cm) obtained using
    LSTM model for the validation period (1 January 2005–24 December 2019) Full size
    table Medium stages (240‒649 cm) were less common than low stages, accounting
    for only 27% of all data during the validation period. The prediction of these
    stages was the least precise, as only 44.7‒57.6% of the data fell within the acceptable
    intervals (Table 4, Fig. 6C). The prediction of medium stages was the best on
    the first and third days of the forecast. Furtermore, the underestimation (17.8‒26.6%)
    was slightly less common than overestimation (24.1‒28.6%). The median errors of
    the estimated stages (4.4‒40.6 cm) and their maxima (51‒335 cm) were the highest
    of the entire dataset. Table 4 Precision of the prediction of medium stages (240‒649
    cm) obtained using the LSTM model for the validation period (01 January 2005–24
    December 2019) Full size table Only 4% of all validation data exceeds the warning
    level (≥ 650 cm), and 60.1‒73.7% of the predicted flood stages fall within the
    required precision interval (Table 5, Fig. 6D). The forecast was most precise
    on the third day and became less precise on the subsequent horizons. The proportion
    of overestimated and underestimated data was similar (12.3‒16.2%) in the first
    half of the 7-day ahead prediction; however, underestimation became dominant in
    its second half. The median absolute differences between the predicted and actual
    high stages (3.2‒26.2 cm) were significantly higher than for the medium stages,
    particularly in the later days of the forecast. Furthermore, the maximum error
    has decreased, indicating that the model performs well. Table 5 Precision of the
    prediction of high stages (> 650 cm) obtained using the LSTM model for the validation
    period (01 January 2005–24 December 2019) Full size table Forecast of flood levels
    of selected flood events The highest water level on record at Szeged was measured
    in 2006, and since this period was not included in the training data, it gave
    us a challenging test case to evaluate the model. In addition, the flood in 2013
    was thoroughly investigated, though it only reached the II level of the flood
    warning at Szeged. In the case of the 2006 flood, the model systematically underestimated
    the water levels, particularly during the rising limb of the flood (Fig. 7). Thus,
    on every day of the 7-day ahead forecast for the rising limb of the flood wave
    (< 980 cm, until 18 April 2006), the modelled water levels were below the required
    precision (Table 6). However, for the peak of the flood (≥ 980 cm, between 18
    and 29 April 2006), the prediction was within the required precision range on
    the first and third days of the 7-day ahead forecast, and slightly below in the
    second half (fifth‒seventh days) of the forecast. Despite the underestimation,
    much better precision was obtained during flood’s peak than during its rising
    limb, as evidenced by the overlap of the confidence interval and the required
    precision (Fig. 7). In contrast to the rising limb or peak phase of the flood,
    the descending water levels (falling limb, after 29 April, 2006) were predicted
    with greater accuracy on each day of the 7-day ahead forecast (Table 6), and the
    prediction overlaps with the required precision interval of the measured data
    on most days. Fig. 7 Hydrograph and the time-series forecast obtained using the
    LSTM model for the 2006 flood Full size image Table 6 Mean absolute error of the
    prediction for the different hydrological phases of the record-breaking 2006 flood
    and the flood in 2013 Full size table While the 2006 flood reached the highest
    stage in history (1009 cm), the 2013 flood was much smaller (762 cm), and it was
    also much shorter, as 55 days were above 600 cm in 2006, and only 34 days in 2013.
    During the training period, several similar floods as the 2013 one occurred (in
    1958, 1962‒1967, 1970, 1974, 1977, 1979–1982, and 1999‒2000), and accordingly,
    a fairly precise forecast was given for the 2013 flood (Table 6). During the rising
    limb of the 2013 flood (< 700 cm, until 4 April 2013), the LSTM model slightly
    underestimated the stages (Fig. 8), comparable to the prediction of the 2006 flood.
    However, during the peak phase (≥ 700 cm, from 4 April until 3 May 2013) and in
    the falling limb, the prediction remained within the required precision interval
    on each day of the 7-day ahead forecast, with minor overshoot. Furthermore, the
    precision of the peak and falling stage prediction in 2013 was much better than
    in 2006 across all forecast horizons. Fig. 8 Hydrograph of the 2013 flood and
    its forecast obtained using the LSTM model. Forecasting horizons: A first day;
    B third day; C fifth day; D seventh day Full size image Comparison of the LSTM
    model to the DLCM used by the Hungarian authorities For 2014‒2019, the predictions
    generated by our LSTM model and the official DLCM were compared. It must be noted
    that within these 6 years, no high stages (≥ 650 cm) appeared (max. stage was
    616 cm); thus, the assessment of the models is valid just for low (≤ 239 cm) and
    medium stages (240‒649 cm). The statistical metrics (MAE, RMSE, R2 and WI) reflect
    that the LSTM model outperformed the DLCM on the first‒fourth days of the prediction
    (Fig. 9). On the fifth day, our LSTM model still had a lower MAE than the DLCM;
    however, the other three metrics showed better performance of the DLC model. The
    DLCM was more accurate on all four metrics on the sixth day of the forecast. Fig.
    9 Comparison of the performance of the LSTM model (7-day ahead forecast) and the
    DLCM (6-day ahead forecast) for 2014‒2019. The evaluation metrics were calculated
    for different forecast horizons (first-sixth days). A MAE, B RMSE, C R2 correlation
    and D WI Full size image Based on general quantile–quantile (QQ) plots, the LSTM
    model’s global performance was compared to that of the DLCM (Fig. 10). On each
    day of the 6-day head forecast, our LSTM model outperformed the DLCM, as 74.9‒79.9%
    of all data fell within the required precision interval for the LSTM model, whereas
    it was only 64.1‒73.7% for the DLCM. Fig. 10 General quantile–quantile (QQ) plots
    for water stages measured at Szeged (2014‒2019) and predicted using the LSTM model
    and DLCM. The comparisons were made for the first, third and fifth days of the
    7- and 6-day ahead forecasts Full size image The LSTM model generated excellent
    results for lower stages (< 240 cm), with 78.9‒84.2% of the data falling within
    the required precision interval, compared to just 70.4‒80.2% for the DLCM (Table
    7). Similar to the general data, underestimation was more common than overshooting
    in both models. However, it was more common in the case of the DLCM, particularly
    on the first days of the forecast. Meanwhile, both models struggled with the prediction
    of medium stages (240‒649 cm), as only 53.8‒62.6% of the predicted data by the
    LSTM model fell within the required precision ranges, though it was even worse
    for the DLCM (39.1‒48.2%). It is also worth noting that both models overestimated
    the actual situation in the case of medium stages, and the median absolute differences
    of the models were also similar (LSTM model: 4.2‒28.1 cm; DLCM: 7.0‒29.0 cm),
    gradually increasing on the latter days of the forecast. Table 7 Proportion (%)
    of the modelled data relative to the required precision intervals for the prediction
    of low and medium stages obtained using the LSTM model and DLCM for the validation
    period (2014–2019) Full size table Though no overbank floods occurred during the
    comparison period (2014‒2019), some subsequent, at/below-bankfull level flood
    waves appeared in 2019 (Fig. 11). The hydrograph shows a typical flood-wave sequence:
    small flood peaks with gradually increasing heights appeared (on 7 May: 348 cm
    and on 14 May: 477 cm), with relatively rapid rising and falling limbs, and the
    last, largest flood-wave had a peak phase (from 7 to 11 June 2019) when the flood
    level remained almost the same (603‒615 cm). Fig. 11 Comparison of time-series
    forecasts of the LSTM model and the DLCM for the 2019 floods up to the sixth day
    of the 7- and 6-day ahead forecast horizons Full size image Both models made similar
    prediction errors, but to varying degrees. Their forecasts were hampered by delays,
    so the rising, peak and falling stages were all predicted for later. For the days
    of the observed peak of the first two flood waves, the performance of both models
    were moderately good: some predictions were better for the DLCM, some were more
    precise for the LSTM model (similar trend can be seen in Fig. 9). Both models
    performed well in the case of the largest, bankfull flood, though our model had
    much smaller errors. Discussions Performance of the tested models According to
    the models evaluation metrics, the very simple Baseline model was slightly outperformed
    by the Linear model on the first and last days of the 7-day ahead forecast, while
    the Linear model provided more precise forecast on the other days. The results
    of the Linear model indicate that data from previous observations at various points
    along the river contain relevant information for the forecast. Unlike the Linear
    model, the MLP model can detect nonlinear connections in data owing to its nonlinear
    ReLU activation functions, which is very useful in case of lowland rivers, where
    previously unpredictable impoundments can occur. The MLP model produced good results
    for the third‒seventh days of the forecast, but the results for the first and
    second days of the 7-day ahead forecast were quite inaccurate. This could be because
    the training loss function included all seven forecasts with equal weights, and
    while the MLP model generally performed better than the Linear model, the focus
    was slightly shifted to longer time horizons. The best results were obtained using
    the LSTM model regarding all time horizons. Setting the last observation of the
    water level at Szeged as the first input of the decoder, was a significant contribution
    to this achievement, forcing the model to use this essential information. Therefore,
    the MAE was not only the lowest on the first day but also throughout the forecasted
    horizons. Similar good performance of the LSTM model was described by Adikari
    et al. [1], Cui et al. [12] and Kim et al. [20], especially for extreme hydrological
    conditions. The LSTM model tends to underestimate the water stages on each predicted
    horizon. The median differences on each day were within the required precision.
    However, the largest absolute differences increase in the different horizons:
    on the first day of the forecast, the maximum difference was half meter, but on
    the seventh day it could be over three meters. Forecasts were more consistent
    on the first and third day of the 7 days ahead forecast, while predictions began
    to fail more on the fifth and seventh days. Since the LSTM model is especially
    well-suited to predict low stages, even in later (third and fifth days) forecast
    horizons, it is an useful tool for predicting water stages during droughts. As
    droughts become more often and more severe in Europe, it will become increasingly
    vital to predict low water stages precisely to facilitate water withdrawal, and
    our LSTM model could serve this purpose. Forecast of floods by the LSTM model
    The hydrologists are particularly interested in medium-term flood prediction,
    as they need 3‒5 days to prepare adequate flood protection. Thus, they need an
    exact forecast on the fifth‒seventh days of the 7-day ahead forecast, as they
    would like to know the peak level of a flood or its duration. Therefore, the performance
    of the LSTM model was studied for selected flood events (2006 and 2013). The record
    high 2006 flood was higher (1009 cm) than any previous flood (e.g., the previous
    largest was in 1970 with 961 cm); hence, such an extreme event was not included
    in the training dataset. However, during the peak of the flood, our predictions
    were within the required precision interval on the first‒fourth days of the 7-day
    ahead forecasts, but not on the fifth‒seventh days. Meanwhile, the prediction
    of the 2013 flood was much more precise, as the model was trained for such a hydrological
    event by several previous similar flood events. Therefore, if the model will be
    used for flood-level prediction in the future, a better performance for flood
    waves could be expected if the training period includes similar flood events.
    In the case of floods, the LSTM model consistently underestimated the stages during
    the rising; however, the peak was precisely predicted, and the prediction of the
    falling limb was the most accurate. It implies that the model cannot handle periods
    of such rapid water level increase (18‒27 cm/day) as it occurred during the rising
    limbs (the drop of the falling limb was only 10‒13 cm/day). However, the model
    performs much better under even conditions, as in the case of the Tisza the flood-peak
    lasted 12 days in 2006, and only minor stage fluctuations (< 7 cm) happened since
    the Danube impounded the Tisza. Performance of the LSTM model and the DLCM used
    in practice The DLCM has been used to predict the stages of the Hungarian rivers
    since the 1980s, but due its unreliability, we compared its performance with our
    LSTM model. The LSTM model outperformed the DLCM just on the first four days of
    the prediction, on the fifth day, they provided similar results; however, later
    on, the DLCM turned out to be more accurate. Both models tended to slightly underestimate
    the water stages, though it was more dominant for the DLCM (LSTM: 11.0‒14.3%;
    DLCM: 15.4‒18.6%). The forecast of low stages by the LSTM model was more precise
    than those by the DLCM; 78.9‒84.2% of the data fell into the required precision
    interval in the case of the LSTM model, though it was only 70.4‒80.2% for the
    DLCM. However, both models had problems predicting medium stages, as they usually
    overshoot. The LSTM and the DLC models provided acceptable general performance
    as they captured the main trends during the investigated period, especially during
    higher water levels. The results indicate that the LSTM model (7-day ahead forecast)
    is more precise than the DLC model (6-day ahead forecast) up to the fifth day
    of the forecast, and the DLC model is more accurate only on the sixth day of the
    forecast. Conclusions The advantage of the developed LSTM-based encoder–decoder
    model to predict the water stages of a lowland river (Tisza) is that it outperforms
    other models (i.e., Baseline, Linear, MLP and DLCM). However, its disadvantage
    is that the model tends to underestimate water levels; though, most of the predictions
    are within the required precision interval. Another benefit of the usage of the
    model that satisfactory results could be achieved on the first three days of a
    7-day ahead forecasts. Therefore, hydrologists are advised to use this ML algorithm
    in hydrological predictions. The model likely works well in hydrological conditions
    similar to the Tisza River, thus it is suitable to predict the stages of lowland
    rivers with low slopes, large water level fluctuations, long duration of floods,
    and dry periods. The proposed LSTM model can achieve satisfactory performance
    on low-stage and flood data but has difficulties forecasting medium-stage data.
    Thus, during hydrological predictions, simplification steps must be performed
    to avoid very complicated and not tractable models, as there is a maximum complexity
    that a given model can handle. Therefore, we suggest building separated models
    for long-lasting hydrological situations (e.g., drought, flood) and for periods
    with medium stages when rapid water level changes occur. An opportunity to reduce
    the loss value in medium-stage data is to introduce a more elaborated loss function
    in the training procedure, which gives more weight to the medium-stage water levels.
    Availability of data and materials Hydrological data are available at the Lower
    Tisza Hydrological Institution (ATIVIZIG) on request (titkarsag@ativizig.hu).
    The code needed for generating plots of the Results and Discussion chapters (along
    with the data used for the validation) can be found at: https://github.com/zsvizi/water-prediction-lstm-tisza.
    References Adikari KE, Shrestha S, Ratnayake DT, Budhathoki A, Mohanasundaram
    S, Dailey MN (2021) Evaluation of artificial intelligence models for flood and
    drought forecasting in arid and tropical regions. Environ Model Softw 144:105136
    Article   Google Scholar   Ahmed AAM, Deo RC, Ghahramani A, Feng Q, Raj N, Yin
    Z, Yang L (2022) New double decomposition deep learning methods for river water
    level forecasting. Sci Total Environ 831:154722 Article   CAS   Google Scholar   Bartha
    P, Bálint G, Gauzer B (1998) Expected evolution of the Tisza flood wave. VITUKI
    Hungary Ltd, Budapest, p 22 Google Scholar   Bartha P, Szöllősi-Nagy A, Harkányi
    K (1983) Hydrological data collection and forecasting system. Danube Vízügyi Közlemények
    45(3):373–388 Google Scholar   Bálint G, Bartha P (1982) Large-scale assessment
    of snow resources for forecasting spring flow. Hydrological Aspects of Alpine
    and High-Mountain Areas. Int Assoc Hydrol Sci 138:203–208 Google Scholar   Bezak
    N, Petan S, Kobold M, Brilly M, Bálint Z, Balabanova S, Cazac V, Csík A, Godina
    R, Janál P, Klemar Z, Kopáciková L, Liedl P, Matreata M, Korniienko V, Vladikovic
    D, Šraj M (2021) A catalogue of the flood forecasting practices in the Danube
    River Basin. River Res Appl 37(7):909–918 Article   Google Scholar   Camacho LA,
    Lees MJ (1999) Multilinear discrete lag-cascade model for channel routing. J Hydrol
    226(1–2):30–47 Article   Google Scholar   Cerqueira V, Torgo L, Mozetič I (2020)
    Evaluating time series forecasting models: an empirical study on performance estimation
    methods. Mach Learn 109(11):1997–2028 Article   Google Scholar   Chau KW (2006)
    Particle swarm optimization training algorithm for ANNs in stage prediction of
    Shing Mun River. J Hydrol 329(3–4):363–367 Article   Google Scholar   Chen WB,
    Liu WC, Hsu MH (2012) Comparison of ANN approach with 2D and 3D hydrodynamic models
    for simulating estuary water stage. Adv Eng Softw 45(1):69–79 Article   CAS   Google
    Scholar   Clark JJ, Wilcock PR (2000) Effects of land-use change on channel morphology
    in northeastern Puerto Rico. Geol Soc Am Bull 112(12):1763–1777 Article   Google
    Scholar   Cui Z, Zhou Y, Guo S, Wang J, Xu CY (2022) Effective improvement of
    multi-step-ahead flood forecasting accuracy through encoder-decoder with an exogenous
    input structure. J Hydrol 609:127764 Article   Google Scholar   Dutta R, Maity
    R (2021) Time-varying network-based approach for capturing hydrological extremes
    under climate change with application on drought. J Hydrol 603(B):126958 Article   Google
    Scholar   Fehérváry I, Kiss T (2020) Identification of riparian vegetation types
    with machine learning based on LiDAR point-cloud made along the lower Tisza’s
    floodplain. J Environ Geogr 13:53–61 Article   Google Scholar   Fu JC, Huang HY,
    Jang JH (2019) River stage forecasting using multiple additive regression trees.
    Water Resour Manage 33:4491–4507 Article   Google Scholar   Herman JD, Reed PM,
    Wagener T (2013) Time-varying sensitivity analysis clarifies the effects of watershed
    model formulation on model behaviour. Water Resour Res 49:1400–1414 Article   Google
    Scholar   Hochreiter S, Schmidhuber J (1997) Long short-term memory. Neural Comput
    9(8):1735–1780 Article   CAS   Google Scholar   Illés L, Konecsny K (2000) Hydrological
    effect of forests on flood development in the upper Tisza catchment. Vízügyi Közlemények
    82(2):167–199 Google Scholar   Imambi S, Prakash KB, Kanagachidambaresan GR (2021)
    PyTorch. Progr TensorFlow Solut Edge Comput Appl. https://doi.org/10.1007/978-3-030-57077-4
    Article   Google Scholar   Kim D, Lee J, Kim J, Lee M, Wang W, Kim HS (2022) Comparative
    analysis of long short-term memory and storage function model for flood water
    level forecasting of Bokha stream in NamHan River. Korea J Hydrol 606:127415 Article   Google
    Scholar   Kiss T, Fiala K, Gy S (2008) Altered meander parameters due to river
    regulation works, Lower Tisza. Hungary Geomorphol 98(1–2):96–110 Article   Google
    Scholar   Kiss T, Vágás I (2015) Flood hysteresis curves. Hidrológiai Közlöny
    95(4):75–80 Google Scholar   Kiss T, Fiala K, Gy S, Szatmári G (2019) Long-term
    hydrological changes after various river regulation measures: are we responsible
    for flow extremes? Hydrol Res 50(2):417–430 Article   Google Scholar   Kiss T,
    Nagy J, Fehérváry I, Amissah G, Fiala K, Gy S (2021) Increased flood height driven
    by local factors on a regulated river with a confined floodplain, Lower Tisza.
    Hungary Geomorphology 389:107858 Article   Google Scholar   Li Y, Shi H, Liu H
    (2020) A hybrid model for river water level forecasting: cases of Xiangjiang River
    and Yuanjiang River. China J of Hydrology 587:124934 Article   Google Scholar   Moradkhani
    H, Hsu KL, Gupta HV, Sorooshian S (2004) Improved streamflow forecasting using
    self-organizing radial basis function artificial neural networks. J of Hydrology
    295(1–4):246–262 Article   Google Scholar   Mosavi A, Ozturk P, Chau KW (2018)
    Flood prediction using machine learning models: literature review. Water 10(11):1536
    Article   Google Scholar   Ñeco RP, Forcada ML (1997) Asynchronous translations
    with recurrent neural nets. Proc Int Conf Neural Netw 4:2535–2540 Article   Google
    Scholar   O’Connor MK (1976) A discrete linear cascade model for hydrology. J
    of Hydrology 29(3–4):203–241 Article   Google Scholar   Perumal M (1994) Multilinear
    discrete cascade model for channel routing. J Hydrol 158(1–2):135–150 Article   Google
    Scholar   Perumal M, Moramarco T, Melone A (2007) A caution about the multilinear
    discrete lag-cascade model for flood routing. J of Hydrology 338(3–4):308–314
    Article   Google Scholar   Phan TTH, Nguyen XH (2020) Combining statistical machine
    learning models with ARIMA for water level forecasting: the case of the Red River.
    Adv in Water Resources 142:103656 Article   Google Scholar   Rumelhart DE, Hinton
    GE, Williams RJ (1986) Learning representations by back-propagating errors. Nature
    323(6088):533–536 Article   Google Scholar   Sahoo B, Perumal M, Moramarco T,
    Barbetta S, Sahoo S (2020) A multilinear discrete Nash-cascade model for stage-hydrograph
    routing in compound river channels. Hydrol Sci J 65(3):335–347 Article   Google
    Scholar   Saleh F, Ducharne A, Flipo N, Oudin L, Ledoux E (2013) Impact of river
    bed morphology on discharge and water levels simulated by a 1D Saint-Venant hydraulic
    model at regional scale. J Hydrol 476(D24):169–177 Article   Google Scholar   Serinaldi
    F (2010) Multifractality, imperfect scaling and hydrological properties of rainfall
    time series simulated by continuous universal multifractal and discrete random
    cascade models. Nonlinear Process Geophys 17(6):697–714 Article   Google Scholar   Szöllősi-Nagy
    A (1982) The discretization of the continuous linear cascade by means of state
    space analysis. J of Hydrology 58(3–4):223–236 Article   Google Scholar   Szöllősi-Nagy
    A (1987) Input detection by the discrete linear cascade model. J of Hydrology
    89(3–4):353–370 Article   Google Scholar   Troin M, Arsenault R, Wood AW, Brissette
    F, Martel J (2020) Generating Ensemble Streamflow Forecasts: A Review of Methods
    and Approaches Over the Past 40 Years. Water Resources Research. https://doi.org/10.1029/2020WR028392
    Article   Google Scholar   Vapnik NV (1995) Setting of the learning problem. In:
    Vapnik NV (ed) The nature of statistical learning theory. Springer, New York,
    pp 17–33 Chapter   Google Scholar   Vágás I (1982) Floods of the Tisza River.
    Vízügyi Dokumentációs és Továbbképző Intézet, Budapest, p 283 Google Scholar   Wei
    CC (2015) Comparing lazy and eager learning models for water level forecasting
    in river-reservoir basins of inundation regions. Environ Model Softw 63:137–155
    Article   Google Scholar   Download references Funding Open access funding provided
    by University of Szeged. Not applicable. Author information Authors and Affiliations
    Department of Mathematics, University of Szeged, Aradi Vértanúk Tere 1, Szeged,
    6720, Hungary Zsolt Vizi & Luca Rátki Centre for Energy Research, Konkoly-Thege
    Miklós u. 29-33, Budapest, 1121, Hungary Bálint Batki Department of Geoinformatics,
    Physical and Environmental Geography, University of Szeged, Egyetem u. 2-6, Szeged,
    6722, Hungary István Fehérváry & Tímea Kiss Water Management Directorate of Alsó-Tisza,
    Stefánia 4, Szeged, 6720, Hungary István Fehérváry & Péter Kozák Smart Software
    Consulting Ltd, Alföldi u. 17, Szeged, 6725, Hungary Bálint Batki & Szabolcs Szalánczi
    Contributions VZ: conceptualization, formal analysis, methodology, supervision,
    validation, writing the original draft; BB: formal analysis, methodology, software,
    validation, writing, review and editing; RL: software, validation, visualization;
    SS: software, validation; FI: data curation, writing the original draft; KP: resources,
    supervision. KT: conceptualization, writing, review and editing. Corresponding
    author Correspondence to Zsolt Vizi. Ethics declarations Ethics approval and consent
    to participate Not applicable. Consent for publication Not applicable. Competing
    interests The authors declare that they have no competing interests. Additional
    information Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Supplementary Information
    Additional file 1: S1. Research data. S2. LSTM cell details. Figure S2. The Long
    Short-Term Memory (LSTM) cell and its structure. The red rectangles indicate a
    neural network with σ (sigmoid) or hyperbolic tangent activation function. The
    light circles indicate element-wise methods (⨂ for element-wise multiplication
    and ⨁ addition). S3. Model and training. S4. Baseline models. Rights and permissions
    Open Access This article is licensed under a Creative Commons Attribution 4.0
    International License, which permits use, sharing, adaptation, distribution and
    reproduction in any medium or format, as long as you give appropriate credit to
    the original author(s) and the source, provide a link to the Creative Commons
    licence, and indicate if changes were made. The images or other third party material
    in this article are included in the article''s Creative Commons licence, unless
    indicated otherwise in a credit line to the material. If material is not included
    in the article''s Creative Commons licence and your intended use is not permitted
    by statutory regulation or exceeds the permitted use, you will need to obtain
    permission directly from the copyright holder. To view a copy of this licence,
    visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About
    this article Cite this article Vizi, Z., Batki, B., Rátki, L. et al. Water level
    prediction using long short-term memory neural network model for a lowland river:
    a case study on the Tisza River, Central Europe. Environ Sci Eur 35, 92 (2023).
    https://doi.org/10.1186/s12302-023-00796-3 Download citation Received 25 April
    2023 Accepted 21 October 2023 Published 04 November 2023 DOI https://doi.org/10.1186/s12302-023-00796-3
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Discrete Linear Cascade Model Long short-term memory Multilayer
    Perceptron Model Linear Model Underestimation Download PDF Sections Figures References
    Abstract Highlights Introduction Study area Methods Results Discussions Conclusions
    Availability of data and materials References Funding Author information Ethics
    declarations Additional information Supplementary Information Rights and permissions
    About this article Advertisement Support and Contact Jobs Language editing for
    authors Scientific editing for authors Leave feedback Terms and conditions Privacy
    statement Accessibility Cookies Follow SpringerOpen By using this website, you
    agree to our Terms and Conditions, Your US state privacy rights, Privacy statement
    and Cookies policy. Your privacy choices/Manage cookies we use in the preference
    centre. © 2024 BioMed Central Ltd unless otherwise stated. Part of Springer Nature."'
  inline_citation: '>'
  journal: Environmental Sciences Europe
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Water level prediction using long short-term memory neural network model
    for a lowland river: a case study on the Tisza River, Central Europe'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Huang H.
  - Song Y.
  - Fan Z.
  - Xu G.
  - Yuan R.
  - Zhao J.
  citation_count: '0'
  description: To solve the problems of low accuracy of crop evapotranspiration (ETc)
    estimates in arid areas and to optimise ETc for precision irrigation in agriculture.Taking
    walnut in Wensu County, Aksu Region, Xinjiang as the research object, based on
    the multivariate time series data of walnut fertility, deep learning sequence
    models such as LSTM, GRU and BiLSTM were utilized to estimate the crop evapotranspiration
    (ETc) of walnut in arid zones under different micro-irrigation techniques. The
    results showed that the coefficient of determination (R2) of the LSTM, GRU and
    BiLSTM models were up to greater than 0.95 for both microirrigation techniques,
    and the BiLSTM model was relatively optimal. For the 3 g microirrigation technique,
    the R2, RMSEV and RPDV of the BiLSTM model were 0.978, 0.294 and 6.965 mm/d respectively.
    For the Hg microirrigation technique, the R2, RMSEV and RPDV of the BiLSTM model
    were 0.970, 0.339 and 6.026 mm/d respectively.With different scenarios of missing
    meteorological environmental variables, the BiLSTM model was used to estimate
    R2 > 0.98 for walnut crop evapotranspiration under different microirrigation techniques,
    with a range from 0.958 to 0. 986 under 3 g microirrigation technique, RMSEV ranged
    from 0.235 to 0.412 and RPDV ranged from 5.028 to 8.494. Under Hg microirrigation
    technique, R2 ranged from 0.942 to 0.979, RMSEV ranged from 0.288 to 0.477 and
    RPDV ranged from 4.253 to 6.905. Using the deep learning BiLSTM model, we can
    efficiently estimate the evapotranspiration of the walnut crop in arid zones with
    different micro-irrigation technologies. The evapotranspiration can provide a
    scientific theoretical reference for intelligent irrigation of walnut and agricultural
    water management.
  doi: 10.1016/j.rinam.2023.100412
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. Results and analyses 4. Conclusion Declaration of Competing Interest Acknowledgement
    Data availability References Show full outline Figures (4) Tables (7) Table 1
    Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Results in Applied Mathematics
    Volume 20, November 2023, 100412 Estimation of walnut crop evapotranspiration
    under different micro-irrigation techniques in arid zones based on deep learning
    sequence models Author links open overlay panel Hua Huang a c, Yanping Song a,
    Zimiao Fan a, Ganggang Xu a, Rurui Yuan b c, Jinghua Zhao b c Show more Add to
    Mendeley Share Cite https://doi.org/10.1016/j.rinam.2023.100412 Get rights and
    content Under a Creative Commons license open access Highlights • Based on the
    multivariate time series data of the walnut fertility period, we utilized LSTM,
    GRU and BiLSTM models to predict the evapotranspiration of the walnut crop under
    two micro-irrigation technologies. All models achieved satisfactory results, with
    the BiLSTM model being the most optimal. The results showed that the coefficient
    of determination (R2) of the LSTM, GRU and BiLSTM models were up to greater than
    0.95 for both microirrigation techniques, and the BiLSTM model was relatively
    optimal. For the 3 g microirrigation technique, the R2, RMSEV and RPDV of the
    BiLSTM model were 0.978, 0.294 and 6.965 mm/d respectively. For the hg microirrigation
    technique, the R2, RMSEV and RPDV of the BiLSTM model were 0.970, 0.339 and 6.026
    mm/d respectively. • The BiLSTM models, which utilized 16 combinations of meteorological
    factors and crop coefficients, proved successful in predicting the evapotranspiration
    levels of walnut crops across varying micro-irrigation techniques and different
    scenarios with incomplete meteorological data. The BiLSTM model was used to estimate
    R2 > 0.98 for walnut crop evapotranspiration under different microirrigation techniques,
    with a range from 0.958 to 0. 986 under 3 g microirrigation technique, RMSEV ranged
    from 0.235 to 0.412 and RPDV ranged from 5.028 to 8.494. Under hg microirrigation
    technique, R2 ranged from 0.942 to 0.979, RMSEV ranged from 0.288 to 0.477 and
    RPDV ranged from 4.253 to 6.905. • Based on the multivariate time series data
    of the walnut reproductive period, the BiLSTM deep learning model can successfully
    and efficiently estimate walnut crop evapotranspiration under different micro-irrigation
    techniques in arid areas. This includes cases where meteorological environmental
    variables are absent. This provides a scientific reference for the intelligent
    irrigation and agricultural water management of walnuts. Abstract To solve the
    problems of low accuracy of crop evapotranspiration (ETc) estimates in arid areas
    and to optimise ETc for precision irrigation in agriculture.Taking walnut in Wensu
    County, Aksu Region, Xinjiang as the research object, based on the multivariate
    time series data of walnut fertility, deep learning sequence models such as LSTM,
    GRU and BiLSTM were utilized to estimate the crop evapotranspiration (ETc) of
    walnut in arid zones under different micro-irrigation techniques. The results
    showed that the coefficient of determination (R2) of the LSTM, GRU and BiLSTM
    models were up to greater than 0.95 for both microirrigation techniques, and the
    BiLSTM model was relatively optimal. For the 3 g microirrigation technique, the
    R2, RMSEV and RPDV of the BiLSTM model were 0.978, 0.294 and 6.965 mm/d respectively.
    For the Hg microirrigation technique, the R2, RMSEV and RPDV of the BiLSTM model
    were 0.970, 0.339 and 6.026 mm/d respectively.With different scenarios of missing
    meteorological environmental variables, the BiLSTM model was used to estimate
    R2 > 0.98 for walnut crop evapotranspiration under different microirrigation techniques,
    with a range from 0.958 to 0. 986 under 3 g microirrigation technique, RMSEV ranged
    from 0.235 to 0.412 and RPDV ranged from 5.028 to 8.494. Under Hg microirrigation
    technique, R2 ranged from 0.942 to 0.979, RMSEV ranged from 0.288 to 0.477 and
    RPDV ranged from 4.253 to 6.905. Using the deep learning BiLSTM model, we can
    efficiently estimate the evapotranspiration of the walnut crop in arid zones with
    different micro-irrigation technologies. The evapotranspiration can provide a
    scientific theoretical reference for intelligent irrigation of walnut and agricultural
    water management. Previous article in issue Next article in issue Keywords WalnutIrrigation
    technologyArid zoneCrop evapotranspirationDeep learning 1. Introduction As a result
    of global population growth, economic and social development and global climate
    change, water resources around the world are under increasing threat and water
    scarcity is a serious constraint on agricultural development. China, the world''s
    largest producer of walnuts, is located in the arid and semi-arid region of Xinjiang.
    Due to low rainfall and high evaporation, water-saving irrigation and efficient
    use of water resources for walnut cultivation are key issues. To achieve sustainable
    agricultural development, it is necessary to develop advanced water-saving irrigation
    technology, accurately estimate the water demand of walnut crops, precisely manage
    walnut irrigation water, and improve the efficiency of agricultural water use.
    Crop water use efficiency (WUE) is an important index for evaluating the efficient
    use of water in agriculture, and crop evapotranspiration (ETc) is an important
    parameter for characterising WUE, so accurate estimation of ETc is of great significance
    and practical value for precision irrigation in agriculture and optimal allocation
    of regional water resources. Therefore, accurate estimation of ETc is of great
    significance and practical value for agricultural precision irrigation and optimal
    regional water allocation. Currently, the commonly used method is to estimate
    the reference crop evapotranspiration (ET0) multiplied by crop coefficients (Kc).
    To estimate the reference crop evapotranspiration, researchers have proposed many
    empirical equations based on meteorological data, such as the FAO-56 Penman-Monteith
    formula proposed by the Food and Agriculture Organization of the United Nations
    (FAO), which has a good generality. However, the Penman-Monteith formula is more
    complicated, requires more climatic environmental factors and has a complicated
    calculation process. Based on this, some researchers have proposed various simplified
    formulas, such as Hargreaves [1], Priestley-Taylor [2], Makkink [3], Jensen-Haise
    [4] and Irmark-Allen [5]. In many research areas, the estimation of ET0 using
    empirical equations requires high quality and appropriate station meteorological
    environment data, but these data are not always available from meteorological
    stations, and there are often missing meteorological environment variables and
    key parameters are not available or not fully available, which restricts the application
    and promotion of these empirical equations. Therefore, some scientists have successfully
    used artificial intelligence models, such as machine learning and deep learning,
    to estimate ET0. For example, Extreme Learning Machine (ELM) [6], Artificial Neural
    Network (ANN), Wavelet Neural Network (WNN) [7], Random Forest (RF) [8], Support
    Vector Machine (SVM) [9], Nonlinear Autoregressive Network (NARX) [10], eXtreme
    Gradient Boosting (XGB) [11], Long Short Term Memory (LSTM) [12], Bi-directional
    Long Short Term Memory (Bi-LSTM) [13], and so on [14], [15], [16], [17], [18].
    In addition, many scholars have directly used artificial intelligence models to
    estimate ETc. Hashemi et al. used artificial neural network model and FAO-56 Penman-Monteith
    model to estimate wheat ETc and showed that neural networks have better applicability
    and accuracy [19]. Saggi et al. found that fuzzy genetic regularised random forest
    model was better in estimating ETc of maize and wheat [20]. Fan et al. used SVM,
    XGB, ANN and deep neural network (DNN) models to estimate daily transpiration
    of maize and pointed out that DNN model had better accuracy in estimating ETc
    of maize [21]. Yamaç et al. used KNN, SVM, RF and adaptive enhancement (AB) models
    based on eight input combinations to predict daily ETc of sugar beet and found
    that SVM had higher accuracy than KNN, RF and AB models [22].Yama et al. estimated
    daily evapotranspiration of potato crop using three different machine learning
    algorithms and four available meteorological data scenarios [23]. Li et al. used
    LSTM and RF-GRU models to predict tomato evapotranspiration using tomato as a
    research object [24,25]. Xie et al. used LSTM, Extreme Learning Machine and Generalised
    Regression Neural Network to establish a prediction model for evapotranspiration
    in a large citrus orchard based on a meteorological data set and verified its
    accuracy, and the results showed that the LSTM model was optimal [26]. Liu et
    al. constructed a GA-SVM model for predicting water demand of green pepper crop
    under MFR-DI cropping pattern using canopy temperature and meteorological factors
    as input factors [27]. It has been shown that the ETc of wheat, maize, sugar beet,
    potato, apple, citrus and green pepper crops can be directly estimated using AI
    models with relatively satisfactory results, but few studies have been conducted
    on the direct estimation of ETc of walnut crops using AI models. In this study,
    the walnut crop in Wensu County, Aksu Region, Xinjiang was selected as the research
    crop, and based on the multivariate time series data of walnut fertility, LSTM,
    GRU and BiLSTM models were used to estimate the walnut crop evapotranspiration
    under different micro-irrigation technologies in arid zones, and deep learning
    sequential models with high prediction accuracy were screened out, and a BiLSTM
    model was established based on the different combinations of meteorological factors
    and crop coefficients to study the estimation of walnut crop evapotranspiration
    under the scenario of the absence of meteorological environmental variables, with
    the aim of providing scientific basis for the intelligent irrigation of walnut
    and the management of agricultural water use. 2. Materials and methods 2.1. Overview
    of the experimental area The experimental area is located in the walnut forest
    of Wensu county, Aksu region, Xinjiang, China, at a geographical location of 80°14′E,
    41°16′N, and an elevation of 1133 m. The experimental area is located at the northern
    edge of the Tarim Basin and has a temperate continental climate, with an average
    annual temperature of 10.1 °C, an average annual sunshine duration of about 2748
    h, an average annual precipitation of 65.4 mm, and an average annual frost-free
    period of 185 days. The research object was a 10-year-old walnut tree planted
    in 1999, the variety was Wen 185, the row spacing was 3m×5 m, the height of the
    plant was 3∼3.5 m, the depth of the groundwater was less than 6 m, and the pH
    value of the soil from 0∼120 cm below the ground was 8.06∼8.37. 2.2. Experimental
    design and data sources The experimental site was selected from six plots of walnut
    forest field, each plot area 75 m2, using two microirrigation techniques to irrigate
    walnut trees, including 3-pipe and ring irrigation (abbreviated as 3 g, Hg). Each
    microirrigation technique has three replications, and each treatment was selected
    from five walnut trees in a plot with uniform tree strength. The drip irrigation
    pipe used in the experiment was 16 mm in diameter, with a drip head flow rate
    of 3.75 L/h and a drip head spacing of 50 cm, and the specific treatments of the
    experiment are shown in Fig. 1 The experiment was irrigated using the irrigation
    system of fixed irrigation cycle and variable irrigation quota. Download : Download
    high-res image (305KB) Download : Download full-size image Fig. 1. Layout of different
    microirrigation techniques in the test area. The study utilized a miniature evapotranspiration
    metre to record topsoil evaporation between soil trees. This metre comprised a
    110 mm diameter black PVC plastic pipe standing at 150 cm height, which was sealed
    at the lower end, and horizontally encased by a 160 mm diameter black PVC plastic
    pipe measuring 20 cm in height. The latter was buried beforehand in the soil.
    Four mini evapotranspirometers were positioned close to each walnut tree neighbouring
    the Trime tube. The soil was regularly weighed every day and changed every 3–5
    days during the observation period that spanned from 3rd April 2009 to 23rd September
    2009. Additionally, a fully automated mini weather station was installed 300 m
    southwest of the experimental site. This provided the primary meteorological data
    for the experimental area, including daily maximum and minimum temperatures, wind
    speed and direction, relative humidity, solar radiation, rainfall, and other meteorological
    indicators. The observation period for this station was from 1st April 2009 to
    30th September 2010. 2.3. Research methodology 2.3.1. FAO-56 penman-monteith equation
    The FAO-56 Penman-Monteith formula was utilised in this study to determine reference
    crop transpiration. (1) Where refers to the value of reference crop transpiration
    (mm/day), Δ is the slope of the saturated water vapour pressure versus temperature
    curve (kPa/ °C), is the net radiation on the surface of the crop (MJ/m2-day),
    is the soil heat flux (MJ/m2-day), is the psychrometric constant (kPa/ °C), is
    wind speed at 2 m above the surface (m/s), is the average daily air temperature
    at a height of 2 m ( °C), is saturation vapour pressure (kPa), and is actual vapour
    pressure (kPa). 2.3.2. Crop coefficient formula The crop coefficient is the actual
    crop evapotranspiration divided by the reference crop transpiration. (2) Where
    represents the reference crop transpiration (mm/d); denotes the crop evapotranspiration
    (mm/d) throughout each reproductive period of the crop; and is the crop coefficient,
    which is usually dependant on the crop type, variety, crop population, and leaf
    area index. 2.3.3. LSTM neural networks The Long Short Term Memory (LSTM) neural
    network is a special type of Recurrent Neural Network (RNN) developed by Hochreiter
    and Schmidhuber. This type of network is capable of learning long-term dependencies,
    and its internal structure can be found in [12,24,26]. It comprises four components
    - input gate , forgetting gate , output gate and internal memory unit , which
    can be defined through the following equation. (3) (4) (5) (6) (7) (8) Where represents
    the input, denotes the neuron state, and are the weight coefficient matrices of
    each gate structure, represents the bias, represents the cell state, and the excitation
    function is usually sigmoid, represents the current state of the current unit.
    2.3.4. BiLSTM neural network The Bidirectional Long Short-Term Memory(BiLSTM)
    neural network, which is an extension of the LSTM proposed by Jürgen Schmidhuber
    and Sepp Hochreiter, comprises of both Forward and Reverse LSTM neural networks.
    An internal schematic can be found in [13]. 2.3.5. Gated recurrent units neural
    network The Gated Recurrent Units (GRU) is a gating mechanism in recurrent neural
    networks that was introduced by Kyunghyun Cho et al. Its internal structure can
    be visualized through a diagram that can be found in [25]. GRU is a variant of
    LSTM; however, it has a reset and an update gate. Its formula can be described
    as follows: (9) (10) (11) (12) 2.4. Evaluation of model accuracy index The model''s
    performance is evaluated using the coefficient of determination, root mean square
    error and relative analysis error for both the training set and the test set.
    Here are the formulae for the coefficient of determination, root mean square error
    and relative analysis error. (13) (14) (15) Where represents the measured value,
    represents the predicted value, is the mean of the measured value, is the mean
    of the predicted value, is the sample size, and is the sample standard deviation.
    Generally, if is greater than 0.8, it implies a better model fitting or prediction
    effect. If RPD is greater than 2, this indicates the model has a high degree of
    reliability and can be used for model analysis. 3. Results and analyses 3.1. Division
    of walnut fertility period Based on the observation of walnut fertility traits
    in the experimental area and field research, the walnut fertility period may be
    divided into five stages: the budding period (end of March to early April), the
    blossoming and fruiting period (mid-April to early May), the fruit expansion period
    (early May to early June), the hardening and oil transformation period (mid-June
    to late August), and the ripening period (early September to late September).
    3.2. Calculation of reference crop evapotranspiration The reference crop evapotranspiration
    for the experimental site was calculated in accordance with the FAO-56 Penman-Monteith
    formula, using the meteorological data obtained from the Watchdog fully automated
    small weather station. It is important to note that these figures are based on
    objective data. The reference crop evapotranspiration during the reproductive
    period of walnut in 2009 and 2010 for the experimental site can be seen in Figs.
    2 and 3, respectively. Download : Download high-res image (242KB) Download : Download
    full-size image Fig. 2. during walnut fertility in 2009. Download : Download high-res
    image (254KB) Download : Download full-size image Fig. 3. during walnut fertility
    in 2010. Furthermore, was computed for each fertility period in the corresponding
    year using data from the testing location during the 2009 and 2010 walnut fertility
    periods, as presented in Table 1. Table 1. Reference crop evapotranspiration was
    measured at the experimental site during walnut fertility in 2009 and 2010. Year
    (mm/d) Budding period Blossoming and fruiting period Fruit expansion period Hardening
    and oil transformation period Ripening period 2009 4.785 3.656 3.942 5.029 2.714
    2010 4.638 3.995 4.146 5.093 2.743 3.3. Calculation of walnut crop coefficient
    Firstly, the study measured the evaporation data of topsoil between soil trees
    using a micro evapotranspiration metre. The crop evapotranspiration of adult walnuts
    under different micro-irrigation technologies was calculated during each fertility
    period in 2009. Based on the reference crop evapotranspiration and walnut crop
    evapotranspiration in 2009, the crop coefficients for walnut at different fertility
    periods under different micro-irrigation technologies were determined using the
    crop coefficient calculation formula. Table 2 displays the results. Table 2. Evapotranspiration
    and crop coefficients of walnut crops at different fertility stages under different
    irrigation techniques. Treatment Budding period Blossoming and fruiting period
    Fruit expansion period Hardening and oil transformation period Ripening period
    ` 3 g 4.690 0.98 4.095 1.12 4.730 1.20 5.884 1.17 2.606 0.96 Hg 5.599 1.17 4.972
    1.36 5.203 1.32 6.085 1.21 2.959 1.09 3.4. Estimation of walnut crop evapotranspiration
    The FAO-56 Penman-Monteith formula establishes a relationship between walnut crop
    evapotranspiration, the crop coefficien , and reference crop evapotranspiration
    , as well as meteorological indicators including temperature ( , ), net radiation
    ( ), wind speed ( ), and relative humidity ( ). Therefore, this section estimates
    walnut crop evapotranspiration under two micro-irrigation techniques using deep
    learning sequential models such as LSTM. The models use maximum and minimum air
    temperature, maximum and minimum relative humidity, wind speed, net radiation
    and crop coefficients as inputs, and walnut crop evapotranspiration as outputs.
    Technical term abbreviations are explained upon first use. Based on training samples
    from 2009 and test samples from 2010, the study utilised GRU and BiLSTM models
    to estimate walnut crop evapotranspiration with missing meteorological environmental
    variables. Utilising 16 combinations of meteorological factors and crop coefficients,
    objective estimates were obtained through the application of the BiLSTM model.
    3.4.1. Estimation of walnut crop evapotranspiration under different micro-irrigation
    techniques using deep learning sequence models In this study, we used the LSTM,
    GRU and BiLSTM models were utilised to approximate the evapotranspiration of a
    peach crop under two micro-irrigation techniques (3 g, Hg) respectively. The model
    parameters were established with a time step of 3. The number of neuron nodes
    in the hidden layer were designated as 16, 32, 48, 64 and 80, respectively. The
    optimisation algorithm implemented was the Adam gradient descent algorithm. The
    maximum number of training times was set at 500 with an initial learning rate
    of 0.009. The learning rate decrease factor was also set at 0. After 400 rounds
    of training, the learning rate was 0.005, and the regularisation parameter was
    0.007. The three types of deep learning sequential models were trained using the
    training samples from 2009, followed by using the trained models to predict the
    walnut crop evapotranspirations in the subsequent year (2010). To evaluate the
    durability, consistency, and transferability of the model, we conducted 100 experiments
    and calculated the coefficient of determination, root mean square error, and relative
    analytical error for the training and test sets. Our findings are presented in
    Table 3. The results demonstrate that both micro-irrigation techniques (3 g, Hg)
    produced satisfactory estimates of evapotranspiration for walnut crops using LSTM,
    GRU, and BiLSTM models, as shown in Table 3 and Table 4. Table 3. Comparison of
    results of different deep learning sequence models for estimating walnut crop
    evapotranspiration (3 g). Micro-irrigation technology Model Hidden layer neural
    number nodes Training set Test set R2c RMSEC RPDC R2v RMSEV RPDV 3 g LSTM 16 0.959±0.006
    0.392±0.031 4.994±0.429 0.927±0.023 0.534±0.075 3.826±0.402 32 0.964±0.006 0.368±0.035
    5.338±0.595 0.924±0.021 0.548±0.070 3.727±0.402 48 0.965±0.006 0.365±0.033 5.393±0.511
    0.927±0.018 0.538±0.060 3.778±0.359 64 0.965±0.007 0.364±0.037 5.431±0.620 0.930±0.013
    0.527±0.047 3.841±0.303 80 0.964±0.006 0.368±0.029 5.337±0.442 0.930±0.013 0.528±0.046
    3.828±0.295 GRU 16 0.960±0.005 0.389±0.023 5.012±0.317 0.933±0.013 0.516±0.047
    3.916±0.306 32 0.966±0.005 0.358±0.030 5.472±0.494 0.925±0.022 0.541±0.068 3.750±0.373
    48 0.970±0.006 0.333±0.036 5.920±0.699 0.917±0.018 0.572±0.061 3.547±0.355 64
    0.974±0.006 0.308±0.040 6.428±0.930 0.908±0.021 0.604±0.068 3.367±0.369 80 0.978±0.006
    0.284±0.040 7.008±1.139 0.901±0.019 0.627±0.059 3.234±0.296 BiLSTM 16 0.985±0.008
    0.233±0.059 8.888±2.153 0.963±0.014 0.376±0.070 5.531±0.965 32 0.988±0.006 0.203±0.050
    10.161±2.507 0.968±0.018 0.348±0.083 6.035±1.173 48 0.990±0.005 0.186±0.050 11.178±2.950
    0.970±0.014 0.335±0.074 6.257±1.226 64 0.990±0.004 0.186±0.042 10.977±2.499 0.975±0.011
    0.311±0.061 6.669±1.163 80 0.990±0.004 0.195±0.038 10.381±2.078 0.978±0.009 0.294±0.050
    6.965±0.924 Table 4. Comparison of results of different deep learning sequence
    models for estimating walnut crop evapotranspiration (Hg). Micro-irrigation technology
    Model Hidden layer neural number nodes Training set Test set R2c RMSEC RPDC R2v
    RMSEV RPDV Hg LSTM 16 0.949±0.007 0.434±0.032 4.482±0.338 0.914±0.015 0.582±0.050
    3.465±0.259 32 0.958±0.007 0.395±0.031 4.929±0.398 0.904±0.021 0.615±0.064 3.297±0.306
    48 0.960±0.009 0.384±0.044 5.129±0.707 0.904±0.026 0.612±0.077 3.322±0.354 64
    0.960±0.009 0.383±0.047 5.168±0.802 0.903±0.025 0.616±0.075 3.301±0.339 80 0.960±0.009
    0.385±0.045 5.125±0.638 0.904±0.025 0.612±0.076 3.335±0.354 GRU 16 0.953±0.008
    0.416±0.034 4.679±0.406 0.911±0.014 0.591±0.045 3.40±0.244 32 0.962±0.008 0.373±0.045
    5.280±0.744 0.902±0.022 0.618±0.066 3.267±0.317 48 0.967±0.007 0.35±0.0410 5.613±0.712
    0.896±0.024 0.637±0.070 3.179±0.319 64 0.972±0.007 0.321±0.042 6.145±0.881 0.887±0.024
    0.667±0.069 3.028±0.308 80 0.977±0.007 0.287±0.043 6.908±1.149 0.878±0.027 0.692±0.075
    2.919±0.296 BiLSTM 16 0.984±0.009 0.235±0.063 8.841±2.420 0.953±0.036 0.416±0.117
    5.084±1.046 32 0.986±0.006 0.220±0.047 9.222±2.079 0.962±0.020 0.378±0.085 5.515±0.982
    48 0.990±0.005 0.187±0.048 10.96±2.571 0.965±0.017 0.362±0.081 5.776±1.185 64
    0.990±0.005 0.188±0.046 10.928±2.831 0.968±0.014 0.348±0.067 5.938±0.976 80 0.989±0.005
    0.194±0.047 10.567±2.490 0.970±0.010 0.339±0.054 6.026±0.845 Amongst them, the
    LSTM model with 64 neuron nodes in the hidden layer demonstrated superior performance
    under 3 g microirrigation technology, with R2, RMSEV, and RPDV values of 0.930,
    0.527, and 3.841, respectively. The GRU model with 16 neuron nodes in the hidden
    layer also showed better results, with R2, RMSEV, and RPDV values of 0.933, 0.516,
    and 3.916, respectively. Additionally, the BiLSTM model with 80 neuron nodes in
    the hidden layer outperformed other models, and the BiLSTM model with 0.516 neuron
    nodes in the hidden layer was also effective. The BiLSTM model outperformed with
    R2, RMSEV, and RPDV values of 0.978, 0.294, and 6.965 correspondingly. The LSTM
    model showed superiority under Hg micro-irrigation technique, with the number
    of neuron nodes in the hidden layer being 16, with R2, RMSEV, and RPDV values
    of 0.914, 0.582, and 3.465 respectively. The GRU model proved superior with R2,
    RMSEV, and RPDV values of 0.911, 0.591, and 3. A comparison was made between the
    performance of the LSTM, GRU, and BiLSTM models with respect to estimating the
    evapotranspiration of a walnut crop under two different micro-irrigation techniques.
    The BiLSTM model, featuring an 80-neuron node hidden layer, outperformed the other
    models by achieving R2, RMSEV, and RPDV values of 0.970, 0.339, and 6.026, respectively.
    These findings suggest that the BiLSTM model is optimal for estimating evapotranspiration
    in walnut crops. 3.4.2. Estimation of walnut crop evapotranspiration in the absence
    of meteorological environment variables Sixteen combinations were constructed
    based on meteorological factors and crop coefficients (as shown in Table 5), and
    then the corresponding BiLSTM models were established, and the experimental data
    under 3 g and Hg micro-irrigation techniques were used for model training and
    prediction, respectively, and the results are shown in Table 6. Table 5. 16 combinations
    of meteorological factors and crop coefficients. No. Model Combination of input
    variables 1 BiLSTM1 2 BiLSTM2 , , 3 BiLSTM3 , , 4 BiLSTM4 , 5 BiLSTM5 , 6 BiLSTM6
    , , , , 7 BiLSTM7 , , , 8 BiLSTM8 , , , 9 BiLSTM9 , , , 10 BiLSTM10 , , , 11 BiLSTM11
    , , 12 BiLSTM12 , , , , , 13 BiLSTM13 , , , , , 14 BiLSTM14 , , , , 15 BiLSTM15
    , , , , 16 BiLSTM16 , , , , , , Table 6. Comparison of results of different BiLSTM
    models under different micro-irrigation techniques (3 g). Micro-irrigation technology
    Model Hidden layer neural number nodes Training set Test set R2c RMSEC RPDC R2v
    RMSEV RPDV 3 g BiLSTM1 32 0.996 0.121 16.095 0.975 0.316 6.331 BiLSTM2 48 0.998
    0.077 25.239 0.981 0.274 7.323 BiLSTM3 48 0.999 0.054 36.171 0.962 0.388 5.238
    BiLSTM4 48 0.999 0.057 34.231 0.979 0.291 6.874 BiLSTM5 48 0.995 0.136 14.250
    0.981 0.274 7.283 BiLSTM6 80 0.995 0.136 14.333 0.980 0.286 7.057 BiLSTM7 64 0.997
    0.101 19.207 0.958 0.412 5.028 BiLSTM8 64 0.998 0.078 25.009 0.980 0.282 7.262
    BiLSTM9 64 0.999 0.052 37.256 0.979 0.292 7.000 BiLSTM10 64 0.988 0.212 9.153
    0.978 0.299 6.688 BiLSTM11 64 0.982 0.263 7.386 0.979 0.292 6.834 BiLSTM12 80
    0.998 0.077 25.387 0.984 0.250 8.047 BiLSTM13 80 0.998 0.087 22.366 0.983 0.258
    7.776 BiLSTM14 80 0.997 0.101 19.230 0.986 0.235 8.494 BiLSTM15 80 0.998 0.095
    20.526 0.983 0.259 7.741 BiLSTM16 80 0.993 0.160 12.160 0.986 0.240 8.347 From
    Table 6, we can observe that when the temperature, net radiation, and wind speed
    data are absent in the 3 g micro-irrigation method, the BiLSTM model (BiLSTM3)
    can be used to estimate. The hidden layer in this model has 48 nodes, and the
    R2c values for the training set are 0.999 with an RMSEC of 0.054 and an RPDC of
    36.171. Fig. 4.(1) displays the comparison of the prediction effects. Meanwhile,
    the R2v value is 0.962 with an RMSEV of 0.388 and an RPDV of 5.28 for the test
    set. When temperature and relative humidity data are unavailable, we estimate
    them utilizing the BiLSTM technique (BiLSTM11), which has a hidden layer with
    64 nodes. The training set''s R2c is 0.982, with an RMSEC of 0.263 and an RPDC
    of 7.386, while the test set''s R2v is 0.979, with an RMSEV of 0.299 and an RPDV
    of 6.688. The training set''s R2c is 0.982, with an RMSEC of 0.263 and an RPDC
    of 7.386, while the test set''s R2v is 0.979, with an RMSEV of 0.299 and an RPDV
    of 6.688. The training set''s R2c is 0.982, with an RMSEC of 0.263 and an RPDC
    of 7.386, while the test set''s R2v is 0.979, with an RMSEV of 0.299 and an RPDV
    of 6.688. Fig. 4.(2) presents a comparison of the predicted results. Download
    : Download high-res image (1MB) Download : Download full-size image Fig. 4. Comparison
    of the prediction effect of BiLSTM model. From Table 7, under the Hg micro-irrigation
    technique, the BiLSTM2 model with 48 nodes in the hidden layer is used to estimate
    missing net radiation, wind speed, and relative humidity data. Fig. 4.(3) shows
    the comparison of the prediction effect. The training set achieves an R2c of 0.998,
    RMSEC of 0.077, and RPDC of 25.235, while the test set achieves an R2c of 0.962,
    RMSEV of 0.390, and RPDV of 5.107. When the relative humidity data is absent,
    the BiLSTM15 model with 80 hidden layer nodes is utilised to estimate values.
    The BiLSTM model was trained with an R2c of 0.997, RMSEC of 0.098, and RPDC of
    19.780. Additionally, the R2v of the test set is 0.972, RMSEV is 0.333, and RPDV
    is 5.989. A comparison of the forecast results is depicted in Fig. 4.(4). Table
    7. Comparison of results of different BiLSTM models under different micro-irrigation
    techniques (Hg). Micro-irrigation technology Model Hidden layer neural number
    nodes Training set Test set R2c RMSEC RPDC R2v RMSEV RPDV Hg BiLSTM1 32 0.995
    0.139 13.946 0.966 0.367 5.436 BiLSTM2 48 0.998 0.077 25.235 0.962 0.390 5.107
    BiLSTM3 48 0.999 0.063 30.526 0.942 0.477 4.253 BiLSTM4 48 0.996 0.124 15.602
    0.971 0.340 5.853 BiLSTM5 48 0.995 0.135 14.325 0.974 0.319 6.254 BiLSTM6 80 0.998
    0.08 24.192 0.961 0.394 5.119 BiLSTM7 64 0.992 0.175 11.065 0.970 0.342 6.016
    BiLSTM8 64 0.992 0.171 11.288 0.971 0.336 5.962 BiLSTM9 64 0.997 0.101 19.110
    0.970 0.342 5.819 BiLSTM10 64 0.994 0.148 13.049 0.979 0.288 6.905 BiLSTM11 64
    0.997 0.110 17.636 0.977 0.301 6.630 BiLSTM12 80 0.997 0.106 18.233 0.969 0.351
    5.674 BiLSTM13 80 0.994 0.145 13.344 0.975 0.312 6.404 BiLSTM14 80 0.990 0.195
    9.911 0.977 0.303 6.575 BiLSTM15 80 0.997 0.098 19.780 0.972 0.333 5.989 BiLSTM16
    80 0.993 0.162 11.931 0.981 0.276 7.230 In instances where all meteorological
    environment variables were absent, the BiLSTM1 model with solely crop coefficients
    as inputs was able to accurately estimate walnut crop evapotranspiration. From
    Table 6, the model displayed an R2 value of 0.975, alongside an RMSEV of 0.316
    and an RPDV of 6.331, under the 3 g micro-irrigation technique. Fig. 4.(5) displays
    the comparison diagram demonstrating the efficacy of these predictions. From Table
    7, the BiLSTM model (BiLSTM1) with 16 nodes in the hidden layer achieved R2, RMSEV,
    and RPDV values of 0.966, 0.367, and 5.436, respectively, under the Hg micro-irrigation
    technique. Fig. 4.(6) displays the comparison diagram of the prediction effect.
    Taken collectively, the aforementioned experimental findings exhibit that the
    computation of walnut crop evapotranspiration under 3 g and Hg micro-irrigation
    techniques utilizing the BiLSTM model in various situations of inadequacies in
    meteorological environmental variables can attain satisfactory outcomes. 4. Conclusion
    The study concluded that the estimation of walnut crop evapotranspiration under
    various micro-irrigation techniques in arid regions using deep learning sequence
    models like LSTM, GRU and BiLSTM is feasible. Based on the multivariate time series
    data of the walnut fertility period, we utilized LSTM, GRU and BiLSTM models to
    predict the evapotranspiration of the walnut crop under two micro-irrigation technologies.
    All models achieved satisfactory results, with the BiLSTM model being the most
    optimal. The BiLSTM models, which utilized 16 combinations of meteorological factors
    and crop coefficients, proved successful in predicting the evapotranspiration
    levels of walnut crops across varying micro-irrigation techniques and different
    scenarios with incomplete meteorological data. Based on the multivariate time
    series data of the walnut reproductive period, the BiLSTM deep learning model
    can successfully and efficiently estimate walnut crop evapotranspiration under
    different micro-irrigation techniques in arid areas. This includes cases where
    meteorological environmental variables are absent. This provides a scientific
    reference for the intelligent irrigation and agricultural water management of
    walnuts. Declaration of Competing Interest All authors do not have any conflicts
    of interest to declare. Acknowledgement This work was supported by the Natural
    Science Foundation of Xinjiang Uygur Autonomous Region (2022D01A181), the Open
    Research Fund of Xinjiang Key Laboratory of Hydraulic Engineering Safety and Water
    Disaster Prevention (ZDSYS-JS-2022-11). Data availability The authors are unable
    or have chosen not to specify which data has been used. References [1] G.H. Hargreaves,
    R.G Allen History and evaluation of hargreaves evapotranspiration equation J Irrigat
    Drain Eng, 129 (1) (2003) 53-11 Google Scholar [2] C.H.B. Priestley, R.J. Taylor
    On the assessment of the surface heat flux and evaporation using large-scale parameters
    Mon Weather Rev, 100 (2) (1972) 81-12 Google Scholar [3] G.F Makkink Testing the
    Penman formula by means of lysimeters J Instit Water Eng, 11 (3) (1957) 277-12
    Google Scholar [4] M.E. Jensen, H.R. Haise Estimating evapotranspiration from
    solar radiation J Irrigat Drain Divi, 89 (4) (1963), pp. 15-41 CrossRefGoogle
    Scholar [5] S. Irmak, A. Irmak, R.G. Allen, J.W Jones Solar and net radiation-based
    equations to estimate reference evapotranspiration in humid climates J Irrigat
    Drain Eng, 129 (5) (2003) 336-12 Google Scholar [6] S.S. Abdullah, M.A. Malek,
    N.S. Abdullah, O. Kisi, K.S. Yap Extreme Learning Machines: a new approach for
    prediction of reference evapotranspiration J Hydrol (Amst), 527 (2015) 184-12
    Google Scholar [7] Y. Feng, N. Cui, L. Zhao, X. Hu, D. Gong Comparison of elm,
    gann, wnn and empirical models for estimating reference evapotranspiration in
    humid region of southwest china J Hydrol (Amst), 536 (2016), pp. 376-378 View
    in ScopusGoogle Scholar [8] S. Karimi, J. Shiri, P. Marti Supplanting missing
    climatic inputs in classical and random forest models for estimating reference
    evapotranspiration in humid coastal areas of iran Comput Electron Agric, 176 (11)
    (2020), Article 105633 View PDFView articleView in ScopusGoogle Scholar [9] S.
    Gavili, H. Sanikhani, O. Kisi, M.H Mahmoudi Evaluation of several soft computing
    methods in monthly evapotranspiration modelling Meteorol Appl, 25 (1) (2018),
    pp. 128-138 CrossRefView in ScopusGoogle Scholar [10] S. Yan, L. Wu, J. Fan, F.
    Zhang, Y. Zou, Y. Wu A novel hybrid WOA-XGB model for estimating daily reference
    evapotranspiration using local and external meteorological data: applications
    in arid and humid regions of China Agric Water Manage, 244 (1) (2021), Article
    106594 View PDFView articleView in ScopusGoogle Scholar [11] Z. Wu, N. Cui, X.
    Hu, D. Gong, Y. Wang, Y. Feng, S. Jiang, M. Lv, L. Han, L. Xing, S. Zhu, B. Zhu,
    Y. Zhang, Q. Zou Ziling He. Optimization of extreme learning machine model with
    biological heuristic algorithms to estimate daily reference crop evapotranspiration
    in different climatic regions of China J Hydrol (Amst), 603 (2021), Article 127028
    View PDFView articleView in ScopusGoogle Scholar [12] M. Karbasi, M. Jamei, M.
    Ali, A. Malik, Z.M Yaseen Forecasting weekly reference evapotranspiration using
    Auto Encoder Decoder Bidirectional LSTM model hybridized with a Boruta-CatBoost
    input optimizer Comput Electron Agric, 198 (2022), Article 107121 View PDFView
    articleView in ScopusGoogle Scholar [13] J. Yin, Z. Deng, V. Amor, J.B. Wu, R.
    Eeswaran Forecast of short-term daily reference evapotranspiration under limited
    meteorological variables using a hybrid bi-directional long short-term memory
    model (Bi-LSTM) Agric Water Manage, 242 (2020), Article 106386 View PDFView articleView
    in ScopusGoogle Scholar [14] F. Granata, F.D Nunno Forecasting evapotranspiration
    in different climates using ensembles of recurrent neural networks Agric Water
    Manage, 255 (2021), Article 107040 View PDFView articleView in ScopusGoogle Scholar
    [15] R.N. Bashir, F.A. Khan, A.A. Khan, M. Tausif, M.Z. Abbas, M.M.A. Shahid,
    N. Khan Intelligent optimization of Reference Evapotranspiration (ETo) for precision
    irrigation J Comput Sci, 69 (2023), Article 102025 View PDFView articleView in
    ScopusGoogle Scholar [16] C.D. Ren, Z.Z. Wang, Z. Ma, M. Zhang Estimation of reference
    crop evapotranspiration in Shandong Province based on deep learning and traditional
    machine learning model Water Sav Irrigat (03) (2022), pp. 67-68 Google Scholar
    [17] Z.H. Pan, Z.H. Liu, X. Shen, Z.L. Zhang, K.L. Shi, S.R. Zhang Prediction
    model of reference crop evapotranspiration based on deep learning J Shanxi Agricult
    Sci, 51 (8) (2023) 942-11 Google Scholar [18] Z.J. Wu, N.B. Cui, D.Z. Gong, F.Y.
    Zhu, L.W. Xing, B. Zhu, X. Chen, S.L. Wen, Q.S Liu Simulation of daily maize evapotranspiration
    at different growth stages using four machine learning models in semi-humid regions
    of northwest China J Hydrol (Amst), 617 (PA) (2023), Article 128947 View PDFView
    articleView in ScopusGoogle Scholar [19] M. Hashemi, A.R. Sepaskhah Evaluation
    of artificial neural network and Penman-Monteith equation for the prediction of
    barley standard evapotranspiration in a semi-arid region Theor Appl Climatol,
    139 (1–2) (2020) 275–11 Google Scholar [20] M.K. Saggi, S. Jain Application of
    fuzzy-genetic and regularization random forest (FG-RRF): estimation of crop evapotranspiration
    (ETc) for maize and wheat crops Agric Water Manage, 229 (2020), Article 105907
    View PDFView articleView in ScopusGoogle Scholar [21] J.L. Fan, J. Zheng, L.F.
    Wu, F.C Zhang Estimation of daily maize transpiration using support vector machines,
    extreme gradient boosting, artificial and deep neural networks models Agric Water
    Manage, 245 (2021), Article 106547 View PDFView articleView in ScopusGoogle Scholar
    [22] S.S Yamaç Artificial intelligence methods reliably predict crop evapotranspiration
    with different combinations of meteorological data for sugar beet in a semiarid
    area Agric Water Manage, 254 (2021), Article 106968 View PDFView articleView in
    ScopusGoogle Scholar [23] S.S. Yamaç, M. Todorovic Estimation of daily potato
    crop evapotranspiration using three different machine learning algorithms and
    four scenarios of available meteorological data Agric Water Manage, 228 (2020),
    Article 105875 View PDFView articleView in ScopusGoogle Scholar [24] L. Li, W.J.
    Li, D.X. Ma, C.F. Yang, F.J. Meng Prediction model of transpiration of greenhouse
    tomato based on LSTM Transact Chin Soc Agricult Mach, 52 (10) (2021) 369-8 Google
    Scholar [25] L. Li, W. Li, L. Geng, W.J. Li, Q. Sun, N.A Sigrimis Prediction method
    of greenhouse tomato transpiration in early fruiting stage based on RF- GRU Transact
    Chin Soc Agricult Mach, 53 (03) (2022), pp. 368-369 CrossRefView in ScopusGoogle
    Scholar [26] J.X. Xie, P. Gao, D.Z. Sun, W.B. Chen, S.N. Chen, W.X Wang Modeling
    on prediction of evapotranspiration of citrus orchard based on LSTM Transact Chin
    Soc Agricult Mach, 51 (S2) (2020), pp. 351-356 CrossRefGoogle Scholar [27] J.R.
    Liu, X. Liu, H.X. Wu, H. Deng, Z.P Li Application of support vector machine model
    based on GA optimization in water consumption prediction of green peppers Water
    Sav Irrigat (01) (2021), pp. 70-77 CrossRefGoogle Scholar Cited by (0) © 2023
    The Authors. Published by Elsevier B.V. Recommended articles Ensemble learning-based
    estimation of reference evapotranspiration (ET ) Internet of Things, Volume 24,
    2023, Article 100973 Muhammad Tausif, …, Rab Nawaz Bashir View PDF A numerical
    method for a backward problem of a linear stochastic Kuramoto-Sivashinsky equation
    Results in Applied Mathematics, Volume 19, 2023, Article 100383 Zewen Wang, Bin
    Wu View PDF Existence theory and numerical simulations of variable order model
    of infectious disease Results in Applied Mathematics, Volume 19, 2023, Article
    100395 Samia Bushnaq, …, Hussam Alrabaiah View PDF Show 3 more articles Article
    Metrics Captures Readers: 3 View details About ScienceDirect Remote access Shopping
    cart Advertise Contact and support Terms and conditions Privacy policy Cookies
    are used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Results in Applied Mathematics
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Estimation of walnut crop evapotranspiration under different micro-irrigation
    techniques in arid zones based on deep learning sequence models
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Hosseini F.S.
  - Seo M.B.
  - Razavi-Termeh S.V.
  - Sadeghi-Niaraki A.
  - Jamshidi M.
  - Choi S.M.
  citation_count: '0'
  description: 'This study aims to predict vital soil physical properties, including
    clay, sand, and silt, which are essential for agricultural management and environmental
    protection. Precision distribution of soil texture is crucial for effective land
    resource management and precision agriculture. To achieve this, we propose an
    innovative approach that combines Geospatial Artificial Intelligence (GeoAI) with
    the fusion of satellite imagery to predict soil physical properties. We collected
    317 soil samples from Iran’s Golestan province for dependent data. The independent
    dataset encompasses 14 parameters from Landsat-8 satellite images, seven topographic
    parameters from the Shuttle Radar Topography Mission (SRTM) DEM, and two meteorological
    parameters. Using the Random Forest (RF) algorithm, we conducted feature importance
    analysis. We employed a Convolutional Neural Network (CNN), RF, and our hybrid
    CNN-RF model to predict soil properties, comparing their performance with various
    metrics. This hybrid CNN-RF network combines the strengths of CNN networks and
    the RF algorithm for improved soil texture prediction. The hybrid CNN-RF model
    demonstrated superior performance across metrics, excelling in predicting sand
    (MSE: 0.00003%, RMSE: 0.006%), silt (MSE: 0.00004%, RMSE: 0.006%), and clay (MSE:
    0.00005%, RMSE: 0.007%). Moreover, the hybrid model exhibited improved precision
    in predicting clay (R2: 0.995), sand (R2: 0.992), and silt (R2: 0.987), as indicated
    by the R2 index. The RF algorithm identified MRVBF, LST, and B7 as the most influential
    parameters for clay, sand, and silt prediction, respectively, underscoring the
    significance of remote sensing, topography, and climate. Our integrated GeoAI-satellite
    imagery approach provides valuable tools for monitoring soil degradation, optimizing
    agricultural irrigation, and assessing soil quality. This methodology has significant
    potential to advance precision agriculture and land resource management practices.'
  doi: 10.3390/su151914125
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sustainability All Article Types Advanced   Journals
    Sustainability Volume 15 Issue 19 10.3390/su151914125 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editors Antonio
    Miguel Martínez-Graña Hui Wang Xiang Que Subscribe SciFeed Recommended Articles
    Related Info Link More by Authors Links Article Views 2591 Table of Contents Abstract
    Introduction Materials and Methods Results Discussion Conclusions and Recommendations
    Author Contributions Funding Institutional Review Board Statement Informed Consent
    Statement Data Availability Statement Conflicts of Interest Appendix A References
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessArticle Geospatial Artificial Intelligence (GeoAI) and Satellite Imagery
    Fusion for Soil Physical Property Predicting by Fatemeh Sadat Hosseini 1, Myoung
    Bae Seo 2,3, Seyed Vahid Razavi-Termeh 2, Abolghasem Sadeghi-Niaraki 2, Mohammad
    Jamshidi 4 and Soo-Mi Choi 2,* 1 Geoinformation Technology Center of Excellence,
    Faculty of Geodesy and Geomatics Engineering, K.N. Toosi University of Technology,
    Tehran 19697, Iran 2 Department of Computer Science & Engineering and Convergence
    Engineering for Intelligent Drone, XR Research Center, Sejong University, Seoul
    05006, Republic of Korea 3 Future & Smart Constrction Division, Korea Institute
    of Civil Engineering and Building Technology, Goyang-si 10223, Republic of Korea
    4 Soil and Water Research Institute (SWRI), Agricultural Research, Education and
    Extension Organization (AREEO), Karaj 31785-311, Iran * Author to whom correspondence
    should be addressed. Sustainability 2023, 15(19), 14125; https://doi.org/10.3390/su151914125
    Submission received: 21 July 2023 / Revised: 13 September 2023 / Accepted: 21
    September 2023 / Published: 24 September 2023 (This article belongs to the Special
    Issue Sustainability in Geospatial Analysis and Geographic Information Science
    Application) Download keyboard_arrow_down     Browse Figures Review Reports Versions
    Notes Abstract This study aims to predict vital soil physical properties, including
    clay, sand, and silt, which are essential for agricultural management and environmental
    protection. Precision distribution of soil texture is crucial for effective land
    resource management and precision agriculture. To achieve this, we propose an
    innovative approach that combines Geospatial Artificial Intelligence (GeoAI) with
    the fusion of satellite imagery to predict soil physical properties. We collected
    317 soil samples from Iran’s Golestan province for dependent data. The independent
    dataset encompasses 14 parameters from Landsat-8 satellite images, seven topographic
    parameters from the Shuttle Radar Topography Mission (SRTM) DEM, and two meteorological
    parameters. Using the Random Forest (RF) algorithm, we conducted feature importance
    analysis. We employed a Convolutional Neural Network (CNN), RF, and our hybrid
    CNN-RF model to predict soil properties, comparing their performance with various
    metrics. This hybrid CNN-RF network combines the strengths of CNN networks and
    the RF algorithm for improved soil texture prediction. The hybrid CNN-RF model
    demonstrated superior performance across metrics, excelling in predicting sand
    (MSE: 0.00003%, RMSE: 0.006%), silt (MSE: 0.00004%, RMSE: 0.006%), and clay (MSE:
    0.00005%, RMSE: 0.007%). Moreover, the hybrid model exhibited improved precision
    in predicting clay (R2: 0.995), sand (R2: 0.992), and silt (R2: 0.987), as indicated
    by the R2 index. The RF algorithm identified MRVBF, LST, and B7 as the most influential
    parameters for clay, sand, and silt prediction, respectively, underscoring the
    significance of remote sensing, topography, and climate. Our integrated GeoAI-satellite
    imagery approach provides valuable tools for monitoring soil degradation, optimizing
    agricultural irrigation, and assessing soil quality. This methodology has significant
    potential to advance precision agriculture and land resource management practices.
    Keywords: machine learning; deep learning soil texture; satellite imagery; geospatial
    analysis; land resource management 1. Introduction Soil is a crucial component
    of climate and ecosystem regulation and a fundamental factor in producing 97%
    of human food [1]. Soil also significantly impacts agricultural productivity,
    watershed protection, the environment, and wildlife [2]. Soil texture is critical
    in soil erosion, water transfer, quality control, and productivity. The particle
    size classification of soil texture includes sand (2–0.05 mm), silt (0.05–0.002
    mm), and clay (<0.002 mm) [3]. Among the significant challenges facing soil are
    soil erosion and rainfall erosion at different scales, which can alter soil properties,
    and particularly its texture [4]. Therefore, spatial prediction of soil properties
    is crucial for evaluating soil quality that human use affects [2]. Remote sensing
    (RS) data are a globally available and abundant source of information that is
    highly valuable in agriculture. Advances in RS technology have significantly improved
    data processing at large spatial and temporal scales [4]. Aerial images and digital
    image processing were previously used to monitor agricultural land. However, RS
    now allows for reducing collected field data while improving estimates’ accuracy
    and efficiency [5]. In conjunction with Geographic Information Systems (GIS),
    RS can increase the efficiency of collection, storage, analysis, and modeling
    in terms of cost, time, and human resources [6]. Additionally, GIS provides various
    tools for combining spatial information and environmental parameters to aid spatial
    prediction. It is also an effective analysis tool for mapping, data management,
    and spatial analysis [7]. RS and GIS data can be used as predictive variables
    for the spatial modeling of a phenomenon [8]. Recent years have seen significant
    advancements in using spatial information systems and RS tools or features in
    predicting soil properties [9]. Various statistical and geostatistical methods,
    such as kriging [10], multiple stepwise regression [11], partial least squares
    regression [12], and cokriging [11], have been previously used to predict the
    spatial distribution of soil texture. However, these methods heavily rely on statistical
    assumptions and become computationally intensive with increasing data size [13].
    Machine Learning (ML) algorithms have been applied to predict soil texture properties
    to overcome these limitations. ML algorithms, such as regression trees [14], Boosted
    Regression Trees (BRT) [15], Random Forest (RF) [16], and Support Vector Machine
    (SVM) [15], have demonstrated their capability in mapping soil texture properties.
    ML algorithms offer significant advantages in managing high-dimensional and multi-variable
    data by discovering and identifying implicit relationships [17]. However, despite
    their benefits, these algorithms are prone to problems such as providing only
    locally optimal solutions, decreased performance when training time is extended,
    and difficulty finding the optimal learning rate [18]. While some ML algorithms
    may exhibit saturation in performance as the data volume increases, the relationship
    between data volume and algorithm performance is influenced by various factors,
    including the heterogeneity and relevance of the data. In cases where data are
    diverse and contain valuable information across different scales and contexts,
    increasing data volume can enhance model performance. However, it is essential
    to carefully curate and preprocess the data to ensure that the additional volume
    contributes meaningfully to model training and generalization. Moreover, ML algorithms
    cannot detect irrelevant and redundant information, which negatively impacts their
    performance [17]. While ML can handle complex data, excessive hidden layers can
    lead to issues such as overfitting and vanishing gradients [19,20]. DL, with its
    strong predictive accuracy, outperforms ML in spatial prediction. To tackle intricate
    soil challenges, sophisticated algorithms such as Convolutional Neural Network
    (CNN), rooted in DL, are used to boost accuracy and reduce uncertainty [21,22].
    Additionally, DL networks offer automatic information extraction capabilities
    not present in ML models [23]. Overall, DL addresses the shortcomings of ML by
    providing enhanced performance, automatic feature extraction, and improved scalability.
    Various researchers have utilized DL models to address soil science problems such
    as predicting soil texture [24,25] and soil salinity [26] using the CNN algorithm
    and predicting soil moisture using the LSTM algorithm [27]. While DL models have
    several advantages, they are also associated with drawbacks such as computational
    complexity [28] and overfitting [29]. Researchers have proposed combining DL models
    with ML algorithms to overcome these limitations. In such combined networks, the
    hierarchical nature of DL models enables them to automatically extract essential
    features from raw data, while ML algorithms process regression operations more
    efficiently than DL models, thus solving the disadvantages of each [30,31]. Despite
    the pros and cons associated with ML and DL models, the amalgamation of these
    two approaches has been widely employed across various research domains. For instance,
    CNNs and RF combinations have been applied in early earthquake warning systems
    [32] and poverty estimation using satellite imagery [33]. Additionally, ML algorithms
    have been integrated with DL neural networks to estimate flood potential [34],
    while CNNs have been combined with support vector machine, RF, and logical regression
    to evaluate landslide susceptibility [35], leading to improved performance and
    accuracy of results. Therefore, in this research, a combination of two algorithms,
    RF and CNN, has been utilized to enhance the accuracy in the spatial prediction
    of soil texture properties. In addition to overcoming overfitting, the RF algorithm
    exhibits acceptable accuracy compared to other ML algorithms in spatial modeling
    [36]. On the other hand, the CNN algorithm can automatically extract various features,
    particularly spatial features, by processing information through convolution layers
    [37,38]. 2. Materials and Methods 2.1. Study Area The study area in the Golestan
    province of Iran spans from latitude 36°56′ to 37°35′ and from longitude 54°58′
    to 55°42′ (Figure 1). Most of the region, including its central and northwestern
    parts, is dedicated to wheat cultivation, while the southern and northeastern
    areas are primarily used for grazing. The highest and lowest elevations in the
    area are 1722 and 0 meters above sea level, respectively. The average annual rainfall
    and air temperature in the study area are 456 mm and 21 °C, respectively. Our
    study aims to predict soil physical properties using a fusion of methods and data
    sources, focusing on the unique challenges the study area poses. The target spatial
    resolution for our predictions is 30 × 30 m, which reflects the scale at which
    we aim to generate predictive maps. Figure 1. Study area location, distribution
    of soil samples, and meteorological stations. 2.2. Soil Samples This study’s soil
    sample data consist of 317 samples (0–30 cm) collected by the Iran Water and Soil
    Research Institute, including the three properties of clay, sand, and silt. The
    sampling was conducted using the grid sampling method, with each grid covering
    an area of 1 km2 and the precise coordinates of the soil samples determined using
    the Global Positioning System (GPS). In total, 317 soil samples were distributed
    across various landcover classes (Figure 2). Specifically, 73% of the samples
    belonged to agricultural land, 13% to range land, 9% to uncovered plain, 3% to
    residential areas, 1% to forest, and 1% to water bodies. Out of all the soil samples,
    approximately 75% were situated at altitudes below 200 m, while the remaining
    25% were located at altitudes above 200 m. Figure 2. Landcover classes in the
    study area. The hydrometer method [39] was used to analyze soil texture properties,
    including sand, silt, and clay. Table 1 presents the soil texture properties’
    minimum, maximum, mean, and standard deviation values. Table 1. Statistical summary
    of soil texture. Table 2 presents a summary of the statistical data for each type
    of soil texture after removing any outliers from the dataset using Theil–Sen regression.
    The original dataset consisting of 317 soil samples was reduced to 179, 144, and
    155 samples for sand, silt, and clay, respectively. Table 2. Statistical summary
    of soil texture after outlier removal. 2.3. Environmental Parameters Based on
    previous studies [22,40,41], expert opinions, and the specific conditions of the
    studied area, three groups of environmental parameters were used. These included
    RS variables such as Band 1 (B1) to Band 5 (B5) and Band 7 (B7) of Landsat-8,
    Brightness Index (BI), Coloration Index (CI), Clay Index (CLI), Enhanced Vegetation
    Index (EVI), Land Surface Temperature (LST), Hue Index (HI), Normalized Difference
    Vegetation Index (NDVI), Redness Index (RI), and Saturation Index (SI). Climate
    variables such as air temperature and rainfall were also included, along with
    topographic variables including aspect, elevation, slope, duration radiation (DR),
    the Multi-Resolution index of Valley Bottom Flatness (MRVBF), the Multi-Resolution
    Ridgetop Flatness index (MRRTF), and the Topographic Wetness Index (TWI). In this
    study, dependent parameters represent soil texture properties, which are treated
    as target variables, and independent parameters encompass various environmental
    parameters (Table 3). Table 3. The parameters that impact the properties of soil
    texture. 2.3.1. RS Parameters For this study, 14 RS parameters were extracted
    from Landsat 8 satellite images, as listed in Table 4. The RS images utilized
    were collected between 1 January and 30 December 2020. The image locations correspond
    to path 162, row 34, path 162, row 35, and path 163, row 34 of the Landsat global
    reference system. The Landsat 8 OLI sensor images were radiometrically and geometrically
    corrected in Google Earth and projected to WGS84-Zone 40 N. Table 4. RS parameters.
    2.3.2. Topographic Parameters The topographic parameters used in this study were
    extracted from the Shuttle Radar Topography Mission (SRTM) digital terrain model,
    with a spatial resolution of 30 × 30 m, using the Google Earth Engine system and
    ArcGIS 10.8 and SAGA 8.2.1 software. These parameters included aspect, elevation,
    slope, Duration Radiation (DR), Multi-Resolution index of Valley Bottom Flatness
    (MRVBF), Multi-Resolution Ridgetop Flatness index (MRRTF), and Topographic Wetness
    Index (TWI). TWI was calculated using Equation (1), TWI=ln 𝐴 𝑠 tan𝛽 (1) where
    As is the catchment area index and β is the slope angle [48]. 2.3.3. Climatic
    Parameters The climatic parameters used in this study were obtained from the annual
    average (2014–2020) data of 10 Meteorological stations in Golestan province, as
    shown in Figure 1. Various interpolation methods were applied to the data using
    ArcGIS 10.8 software. The local polynomial method was the most accurate for generating
    maps of air temperature and rainfall, based on the RMSE index. 2.4. Prediction
    Models 2.4.1. RF Algorithm The RF algorithm, developed by Breiman, is an ensemble
    learning technique that combines the prediction results of multiple decision trees
    to achieve higher accuracy [49]. This algorithm has been widely used in various
    fields and has shown excellent performance in solving classification, regression,
    and unsupervised learning problems [50]. In an RF, a set of tree predictors  ℎ(𝑥;
    𝜃 𝑘 ), 𝑘=1,…,𝐾  is used, where  𝑥  represents the input vector of observations
    (variables) and  𝜃 𝑘  are independent and identically distributed random vectors
    [51]. Each  𝜃 𝑘 , which replaces the original data set, is fitted into a regression
    tree. A small set of input variables is randomly considered for each node in each
    tree. The tree division criterion is based on selecting the input variable with
    the lowest Gini index [52]. Finally, the output of the RF prediction in regression
    problems is the unweighted average of the entire set of decision trees (Equation
    (2)) [53]. ℎ(𝑥)=( 1 𝑘 / ) ∑ 𝐾 𝑘=1 ℎ(𝑥; 𝜃 𝑘 ) (2) The overall flowchart of the
    RF is shown in Figure 3. Figure 3. Architecture of the RF algorithm. 2.4.2. CNN
    A CNN is an architecture for DL inspired by living organisms’ visual perception
    mechanism [54]. It consists of several layers: convolution, maximum pooling, dropout,
    concatenate, and fully connected [55]. The convolution layer contains several
    kernels that calculate different features from the input data [54]. The top pooling
    layer sends the maximum number of features of each region as input to the next
    layer, reducing the dimensionality of the matrix and avoiding overfitting [56].
    Dropout is another way to prevent overfitting [57]. Equation (3) calculates the
    output Cj of the convolution layer, where  𝑥 𝑖  is the ith feature of the input
    vector of the CNN network, Wij is the weight between  𝑥 𝑖   and the jth kernel
    of the convolution layer with bias b, and k and n are the number of kernels and
    the number of features of the input vector to the convolution layer, respectively
    [58]. The activation function f can be sigmoid, tanh, or ReLU, among others. 𝐶
    𝑗 =𝑓 ⎛ ⎝ ⎜ ⎜ ⎜ ⎜  𝑏+ ∑ 𝑖 𝑛 conv1D( 𝑊 𝑖𝑗 ,  𝑥 𝑖 )  ⎞ ⎠ ⎟ ⎟ ⎟ ⎟  , 𝑗=1,2,…,𝑘 (3)
    Figure 4 depicts the CNN architecture. Figure 4. Architecture of the CNN model.
    2.4.3. CNN-RF In this study, a hybridized network of DL and ML is used to leverage
    the capabilities of both CNN networks and the RF algorithm to achieve higher performance
    in the spatial prediction of soil texture and overcome the limitations of these
    stand-alone models. The hybrid CNN-RF network architecture is shown in Figure
    5. The input matrix assumes an m × n structure, where m signifies the quantity
    of soil samples and n represents the number of parameters influencing each soil
    texture property. The input information is first processed through the hidden
    layers of the CNN model, which extracts the relevant features including the spatial
    patterns and contextual information from the input dataset [59]. These features
    are then fed into the RF algorithm for regression analysis. Finally, the output
    layer returns the predicted value. Figure 5. Architecture of the CNN-RF algorithm.
    2.5. Models Evaluation The efficiency of the model is evaluated using three metrics:
    Root Mean Squared Error (RMSE), Mean Squared Error (MSE), and coefficient of determination
    (R2) (Equations (4)–(6)). Lower MSE and RMSE values indicate a higher modeling
    accuracy. R2 illustrates the goodness of fit between the data and the regression
    model. The value of R2 ranges from 0 to 1, with values closer to 1 indicating
    better model performance [60,61]. 𝑀𝑆𝐸= 1 𝑛 ∑ 𝑖=1 𝑛 ( 𝑦 𝑖 − 𝑦 ̂ 𝑖 ) 2 (4) 𝑅𝑀𝑆𝐸=
    1 𝑛 ∑ 𝑖=1 𝑛 ( 𝑦 𝑖 − 𝑦 ̂ 𝑖 ) 2 − − − − − − − − − − − − − −  ⎷   (5) 𝑅 2 =1−
    𝑀𝑆𝐸 1 𝑛 ∑ 𝑛 𝑖=1 ( 𝑦 𝑖 − 𝑦 ̲ ) 2 (6) In these equations,  𝑦 𝑖  represents the measured
    value,  𝑦 ̂ 𝑖  represents the predicted value,  𝑦 ̲  represents the mean of the
    actual values, and  𝑛  is the number of observations. Another effective way to
    display the relationship between statistical indicators and to visualize the difference
    in model performance in predicting soil properties is to use a Taylor diagram
    [62]. Taylor diagrams show the degree of agreement between predicted and observed
    values regarding correlation and the standard deviation error. Additionally, a
    box plot is used to compare the minimum and maximum values of the range, the upper
    and lower quartiles, and the median of the predicted values and the actual data.
    This set of values provides a concise summary of the distribution of the dataset
    [63]. 2.6. K-Fold Cross-Validation Cross-validation is a technique used to assess
    the performance of a machine and deep learning models in a robust and unbiased
    manner [64]. In 10-fold cross-validation, the dataset is divided into 10 folds
    of approximately equal size. The dataset is randomly divided into 10 subsets,
    each containing an equal number of samples. This ensures that the distribution
    of data across the folds is representative of the entire dataset [64]. The cross-validation
    process is then performed iteratively, with each fold being used as the testing
    set while the remaining nine folds are used for training the model. The performance
    metrics are calculated for each iteration based on the model’s predictions. 2.7.
    Workflow for Soil Texture Prediction The workflow for spatial prediction of soil
    texture properties is illustrated in Figure 6. The first step involves creating
    a spatial database using parameters extracted from satellite images and data collected
    from the study area. In the second step, the extracted parameters are used as
    independent data to determine feature importance through the RF algorithm. In
    the third step, soil texture properties are modeled using the RF, CNN, and CNN-RF
    algorithms. In the fourth step, prediction maps of soil texture properties are
    generated using the models. Finally, the results are evaluated using five metrics:
    MSE, RMSE, R2, box plot, and Taylor diagram. Figure 6. Research flowchart. 3.
    Results 3.1. Correlation Analysis In this study, the Pearson correlation coefficient
    was used to investigate the relationship between soil texture and environmental
    parameters (Figure 7). According to Figure 7, The correlation coefficient of 0.2
    between MRVBF and clay suggests a comparatively stronger relationship between
    these variables compared to other parameters, while the correlation coefficient
    of −0.26 between B7 and clay indicates that their relationship in the opposite
    direction is also relatively stronger than that of other parameters. By contrast,
    the association between clay and RI, as well as clay and aspect, was considered
    weak, with absolute correlation coefficients of 0.021 and −0.034, respectively.
    Based on Figure 7, the correlation coefficients of −0.18 between sand and LST,
    and 0.12 between sand and B5, demonstrate a comparatively stronger association
    compared to other parameters. Among all the parameters, MRVBF and CI exhibited
    the weakest correlation with sand. The Pearson correlation coefficient matrix
    in Figure 7 shows that the correlation coefficient of 0.2 between elevation and
    silt indicates a relatively stronger positive relationship compared to other parameters.
    Additionally, the correlation coefficient of −0.17 between NDVI and silt suggests
    a relatively stronger negative relationship. However, the associations between
    silt and B5, as well as silt and RI, were considered weak, with correlation coefficients
    of 0.013 and −0.033, respectively. Figure 7. The correlation coefficients between
    environmental parameters and soil texture. 3.2. Feature Importance An RF algorithm
    was utilized to determine features importance in the modeling process. The importance
    of parameters is demonstrated in Figure 8. The results indicate that B7 (0.123),
    CI (0.089), and TWI (0.084) are among the parameters that show a higher association
    with silt content (Figure 8a). In the case of Sand, LST (0.164), B5 (0.089), and
    elevation (0.084) exhibit relatively higher importance (Figure 8c). Similarly,
    MRVBF (0.119), B7 (0.140), and TWI (0.096) are identified as significant factors
    influencing soil clay (Figure 8e). Figure 8. Feature importance based on the RF
    algorithm for soil texture: (a) clay, (c) sand, and (e) silt; and the portion
    of each environmental category in the input data: (b) clay, (d) sand, and (f)
    silt. According to Figure 8, the model input parameters for clay and sand are
    mainly influenced by RS, topography, and climatic parameters. Among these parameters,
    RS parameters significantly impact soil texture more than topography and climatic
    parameters. However, as illustrated in Figure 8f, climatic parameters do not play
    a role in determining soil silt. Among the climatic parameters, rainfall, while
    among the RS parameters, NDVI and B7 have the most significant impact on soil
    texture. In addition, among the topographic parameters, TWI, MRVBF, and MRRTF
    have the most significant effect on soil texture properties. 3.3. Model Development
    Using the Python programming language for spatial modeling, the ML and DL models
    were employed in the Google colab environment (colab.research.google.com, 20 March
    2020). The computer for developing models and processing information had an Intel
    Core with i7 CPU @2.80 GHz and 16 GB of RAM. Various libraries such as Keras,
    TensorFlow, Numpy, CSV, Scikit-learn, and Matplotlib were utilized for implementing
    models and generating graphs. The data pre-processing step involved normalization,
    followed by cross-validation and determination of hyperparameters using the GridSearch
    method. Equation (7) was employed for normalization, with X denoting the value
    of each feature. The optimized hyperparameters and layers for the models are listed
    in Table 5. Data were split using 10-fold cross-validation. The data were split
    into 10 equal parts, and then one fold was used for the validation set and nine
    remaining folds were used for the training set. For each fold, the models were
    trained using the training set and evaluated by the testing set. Table 5. The
    optimized hyperparameters and layers for each model. “✓” signifies the inclusion
    of specific layers in the model. For modeling, the CNN, RF, and CNN-RF models
    were used. The input matrix for each model was an m × n matrix, where m represents
    the number of soil samples and n indicates the number of parameters affecting
    each soil texture property. 𝑋 𝑛𝑒𝑤 =( 𝑋 𝑖 −𝑀𝑖𝑛(𝑋))/(𝑀𝑎𝑥(𝑋)−𝑀𝑖𝑛(𝑋)) (7) 3.4. Comparison
    of Prediction Models To spatially model soil texture, a combination of the CNN
    DL model and the RF ML algorithm was utilized. To evaluate the performance of
    these models, three evaluation metrics, namely MSE, RMSE, and R2, were employed,
    and the evaluation results are presented in Table 6. The results indicate that
    for clay, the CNN, RF, and CNN-RF algorithms yielded MSE values of 0.00016%2,
    0.00079%2, and 0.00005%2, RMSE values of 0.013%, 0.028%, and 0.007%, and R2 values
    of 0.981, 0.910, and 0.995 in the training phase, and MSE values of 0.00038%2,
    0.00407%2, and 0.00010%2, RMSE values of 0.019%, 0.064%, 0.010%, and R2 values
    of 0.966, 0.636, 0.982 in the testing phase. Regarding sand, the CNN model produced
    MSE values of 0.00029%2 and 0.00046%2, RMSE values of 0.017% and 0.022%, and R2
    values of 0.928 and 0.908 in the training and testing phases, respectively. Additionally,
    for this property, the RF algorithm generated MSE values of 0.00034%2 and 0.00135%2,
    RMSE values of 0.018% and 0.037%, and R2 values of 0.917 and 0.683, while the
    combined CNN-RF model produced MSE values of 0.00003%2 and 0.00007%2, RMSE values
    of 0.006% and 0.008%, and R2 values of 0.992 and 0.976 in the training and testing
    phases, respectively. Furthermore, for silt, the CNN model yielded MSE, RMSE,
    and R2 values of 0.00024%2, 0.016%, and 0.920, respectively, during the training
    phase, and 0.00040%2, 0.020%, and 0.913, respectively, during the testing phase.
    Moreover, the RF algorithm generated MSE values of 0.00022%2 and 0.00060%2, RMSE
    values of 0.00060% and 0.024%, and R2 values of 0.935 and 0.676 for this property
    during the testing and training phases, respectively. In comparison, the combined
    CNN-RF model produced MSE, RMSE, and R2 values of 0.00004%2, 0.006, and 0.987
    during the training phase and 0.00009%2, 0.010%, and 0.980 during the testing
    phase, respectively. Table 6. Evaluation results. The runtime analysis of the
    three models (Table 6) revealed varying performance when fitting the dataset.
    Specifically, the CNN model for clay and sand exhibited the longest runtime, followed
    by RF and CNN-RF. Conversely, when fitting the silt data, the runtime of CNN-RF
    was found to be longer compared to RF, with CNN once again exhibiting the longest
    runtime among all soil texture models. Overall, the results indicate that the
    hybrid CNN-RF algorithm performs better than the other models in both the testing
    and training phases for all soil texture properties. After the hybrid CNN-RF algorithm,
    the CNN model is more accurate than the RF algorithm. Based on the MSE evaluation
    metric, the sand, silt, and clay properties of soil texture are the most accurate.
    The prediction error plots for the testing and training phases are presented in
    Appendix A. Across all three soil texture properties, the CNN-RF model exhibits
    lower error rates or differences between the observed and predicted values than
    the stand-alone models. The RF and CNN models demonstrate a better fit between
    the actual and predicted value plots. Figure 9 displays box plots that compare
    the values predicted by all three prediction models, namely CNN, RF, and CNN-RF,
    with the actual soil sample values in terms of statistics and data distribution.
    The lines outside the boxes extend up to 1.5 times the interquartile range to
    identify any outliers (hollow circles) that lie beyond this range [63]. The median
    is depicted using a yellow line in the center of the box. As shown in Figure 9,
    the box plot of values predicted by the CNN-RF model for all three soil texture
    properties is more similar to the box plot of the observed values. The distribution
    of actual values of all data is nearly symmetrical, and the predicted values for
    all three prediction models are also symmetrically distributed. Furthermore, the
    CNN-RF and CNN models are better at detecting and predicting outlier data than
    the RF model. Figure 9. Box plots for comparison of the hybrid CNN-RF, RF, and
    CNN models for soil properties: (a) clay, (b) sand, (c) silt. Taylor diagrams
    were employed to assess the accuracy of the CNN, RF, and CNN-RF models, as depicted
    in Figure 10. A smaller distance from the purple reference point in Taylor diagrams
    indicates a higher model accuracy [62]. Consequently, a model’s accuracy is determined
    based on the distance of the corresponding point from the purple reference point.
    According to the Taylor diagrams in Figure 10, the hybrid CNN-RF model exhibits
    the most accurate prediction for all three soil texture properties followed by
    the CNN and RF models, sequentially. Figure 10. Taylor diagrams for comparison
    of model performance: (a) clay, (b) sand, (c) silt. 3.5. Spatial Prediction of
    Soil Properties The modeling results for each soil texture parameter were generalized
    to the entire study area, and prediction maps with a spatial resolution of 30
    × 30 m were generated using ArcGIS 10.8 software. Figure 11 illustrates the prediction
    maps for all three models for each soil texture property. Figure 11. Digital maps
    of soil properties: (a–c) clay, (d–f) sand, (g–i) silt. The amount of clay in
    the RF model prediction map decreases with increasing elevation. The prediction
    maps of the CNN and CNN-RF models are similar, with the central and southwestern
    points exhibiting higher amounts of clay in the CNN and CNN-RF models, respectively.
    The range of variation in clay content in the RF prediction map is smaller than
    that of the other models. The prediction maps of the RF and CNN models are generally
    similar, except that the CNN map predicts slightly higher amounts of sand in the
    southwest and central regions than the RF model. Additionally, the range of sand
    content variation in the CNN-RF model prediction map is closer to the range of
    observed values compared to other models. The amount of silt in the CNN prediction
    map decreases with decreasing elevation. In contrast to the RF model, the percentage
    of sand in the soil of the studied area does not exhibit a transparent relationship
    with elevation. In the prediction map of the hybrid CNN-RF model, the silt content
    is the highest in small parts of the southern and northeastern parts of the study
    area. Overall, the range of texture fractions for all soil texture properties
    is closer to the maximum and minimum of actual values in the three prediction
    maps of the CNN-RF model compared to the stand-alone models. Additionally, there
    are more similarities between the prediction maps of RF and CNN than between the
    CNN-RF and RF models or between the CNN-RF and CNN models, except for clay, which
    exhibits slightly more similarity between the CNN-RF and CNN models. Soil samples
    that were not utilized during the training phase were employed for the purpose
    of external validation. The soil texture maps were generated, and then the values
    extracted from each soil map were compared with the corresponding observed values
    to calculate the MSE. The evaluation results are presented in Table 7. Table 7.
    Maps evaluation result. The statistical assessment of predicted values for each
    soil property across various land cover categories is documented in Table 8, Table
    9 and Table 10. Table 8. The statistical parameters of the modeled soil texture
    on agricultural and forest land. Table 9. The statistical parameters of the modeled
    soil texture on residential areas and uncovered plains. Table 10. The statistical
    parameters of the modeled soil texture on water bodies and range land. 4. Discussion
    4.1. Analysis of Parameters Affecting Soil Texture In the RFE algorithm, the most
    influential parameter for soil clay was found to be MRVBF, which provides a better
    description of the region by identifying valley bottoms of various sizes and slopes
    [65]. MRVBF contains information about the location of the area that is directly
    related to clay [66], where the clay content increases from highlands to plains,
    similar to MRVBF. For soil sand, the most effective parameter was found to be
    LST, which depends on the amount of solar energy absorbed by land cover types
    and local environmental conditions [67]. Sandy and agricultural areas absorb the
    highest temperatures due to the structure of the land cover [68]. The second parameter
    affecting sand was found to be B5, where areas with water dams had the highest
    amount of sand, and the amount of B5 reflection was the lowest. This is because
    water absorbs near-infrared the most [69], thus causing an opposite relationship
    between the B5 parameter and the amount of sand in the studied area. The study’s
    results indicate that B7 was the most important environmental parameter in predicting
    soil silt. SWIR bands play a crucial role in predicting and estimating soil texture
    properties, and particularly silt [70]. Furthermore, silt is one of the factors
    that influence the intensity of reflection and absorption of SWIR bands [71].
    After determining feature importance, it was found that RS parameters had the
    most significant contribution to predicting each soil texture property. RS provides
    these parameters with proper spatial and temporal accuracy [72]. The selected
    RS parameters included seven parameters, including RI, B7, SI, CI, B5, NDVI, and
    CLI, with B7 and NDVI having the most significant influence. NDVI is one of the
    most widely used vegetation indices that reduces the influence of atmosphere and
    soil background in spectral measurements [5]. SI, CI, and RI are parameters extracted
    from the three visible bands of Landsat 8 (B2, B3, and B4) (Table 4) and have
    a significant impact on predicting soil properties [73]. These parameters are
    obtained from Landsat 8 data with advantages such as short periodicity, good spatial
    resolution and coverage, and a wide range of spectral ranges including visible,
    B5, and SWIR [74]. Several studies have demonstrated that incorporating RS variables
    improves prediction accuracy [40,75,76]. 4.2. Model Comparison and Analysis Based
    on the findings, the hybrid CNN-RF model exhibited greater precision compared
    to the individual CNN and RF models. The convolutional layers employed at the
    outset of the modeling process enabled the extraction and organization of input
    data features [77]. Conversely, a CNN’s employment of a fully connected layer
    for the final regression decision often leads to overfitting [78]. Consequently,
    incorporating the RF algorithm enhanced the accuracy of the results [79]. In recent
    years, numerous studies have applied CNN and RF algorithms across different domains.
    For instance, the fused CNN-RF model has been employed to detect electricity theft
    [80], yielding improved accuracy in comparison to the individual CNN and RF models.
    Furthermore, for tree species classification, a fusion of CNN and RF algorithms
    outperformed stand-alone CNN, SVM, and RF models [81]. Additionally, for product
    classification using satellite images, the combined one-dimensional CNN approach
    with RF achieved greater accuracy in contrast to the CNN-1D networks and the fused
    LSTM-RF network [78]. Li et al. (2022) demonstrated the superiority of the CNN-RF
    hybrid model for estimating actual evapotranspiration compared to the CNN-SVM
    and individual CNN an RF models [82]. 4.3. Strengths and Weaknesses The current
    study exhibits several strengths, including the hybridization of the RF ML algorithm
    and CNN DL neural network for the spatial prediction of soil texture, leading
    to increased accuracy compared to the individual CNN and RF models. Moreover,
    the use of RS data has enabled the extraction of multiple variables that influence
    soil texture at a suitable scale and with reduced costs. However, the lack of
    soil samples at high altitudes and the use of feature importance instead of a
    meta-heuristic algorithm or the wrapper method for feature selection are limitations
    of this research. 5. Conclusions and Recommendations The objective of the present
    study was to compare and evaluate the performance of CNN, RF, and CNN-RF algorithms
    for spatial prediction of soil texture properties. Satellite images were employed
    due to their appropriate spatial and temporal accuracy in preparing indicators
    that impact soil texture. The study yielded the following outcomes: (1) The RF
    algorithm identified MRVBF, LST, and B7 as the most effective parameters for clay,
    sand, and silt, respectively. (2) Among the effective parameters, the RS variables
    had the largest contribution to the modeling input. Specifically, NDVI, B7, SI,
    B5, CI, RI, and CLI were found to be the critical RS parameters influencing soil
    texture. (3) The hybrid CNN-RF model demonstrated the highest accuracy in predicting
    soil texture properties, as indicated by the evaluation results. (4) Sand, silt,
    and clay exhibited greater accuracy based on the MSE evaluation metric. The prediction
    maps generated via the hybrid CNN-RF model can aid agricultural management, soil
    erosion monitoring, and irrigation. Potential areas for future research include:
    (1) Utilizing a meta-heuristic algorithm in lieu of the RFE algorithm to improve
    modeling accuracy. (2) Extracting variables such as homogeneity, contrast, dissimilarity,
    and entropy in the studied area using the gray-level cooccurrence matrix to enhance
    soil texture prediction accuracy. (3) Exploring the integration of additional
    ML and DL models. Author Contributions Conceptualization, F.S.H. and S.V.R.-T.;
    Data curation, F.S.H. and M.J.; Formal analysis, F.S.H., S.V.R.-T. and M.B.S.;
    Funding acquisition, A.S.-N. and S.-M.C.; Investigation, S.V.R.-T.; Methodology,
    F.S.H. and M.B.S.; Project administration, A.S.-N. and S.-M.C.; Resources, M.B.S.;
    Software, F.S.H. and M.B.S.; Supervision, A.S.-N. and S.-M.C.; Validation, M.B.S.
    and M.J.; Visualization, F.S.H.; Writing—original draft, F.S.H.; Writing—review
    and editing, S.V.R.-T., M.B.S., A.S.-N., M.J. and S.-M.C. All authors have read
    and agreed to the published version of the manuscript. Funding This work was supported
    in part by an Institute of Information and communications Technology Planning
    and Evaluation (IITP) grant funded by the Korea government (MSIT) (no. IITP-2023-RS-2022-00156354),
    in part by the Ministry of Trade, Industry, and Energy (MOTIE) and the Korea Institute
    for Advancement of Technology (KIAT) (no. P0016038), and in part by a National
    Research Council of Science and Technology (NST) grant by the Korea government
    (MSIT) (No. CRC21011). Institutional Review Board Statement Not applicable. Informed
    Consent Statement Not applicable. Data Availability Statement The data that support
    the findings of this study are available from the corresponding author, Soo-Mi
    Choi, upon reasonable request. Conflicts of Interest The authors declare no conflict
    of interest. Appendix A Figure A1. Scatter plots of all the proposed models for
    clay: (a,b) CNN-RF, (c,d) CNN, (e,f) RF. Figure A2. Scatter plots of all the proposed
    models for sand: (a,b) CNN-RF, (c,d) CNN, (e,f) RF. Figure A3. Scatter plots of
    all the proposed models for silt: (a,b) CNN-RF, (c,d) CNN, (e,f) RF. References
    Elramady, H.; Brevik, E.C.; Elsakhawy, T.; Omara, A.E.-D.; Amer, M.M.; Abowaly,
    M.; El-Henawy, A.; Prokisch, J. Soil and Humans: A Comparative and A Pictorial
    Mini-Review. Egypt. J. Soil Sci. 2022, 62, 101–122. [Google Scholar] [CrossRef]
    Tahat, M.M.; Alananbeh, K.M.; Othman, Y.A.; Leskovar, D.I. Soil health and sustainable
    agriculture. Sustainability 2020, 12, 4859. [Google Scholar] [CrossRef] Polakowski,
    C.; Ryżak, M.; Sochan, A.; Beczek, M.; Mazur, R.; Bieganowski, A. Particle size
    distribution of various soil materials measured by laser diffraction—The problem
    of reproducibility. Minerals 2021, 11, 465. [Google Scholar] [CrossRef] Liakos,
    L.; Panagos, P. Challenges in the Geo-Processing of Big Soil Spatial Data. Land
    2022, 11, 2287. [Google Scholar] [CrossRef] Shanmugapriya, P.; Rathika, S.; Ramesh,
    T.; Janaki, P. Applications of remote sensing in agriculture—A Review. Int. J.
    Curr. Microbiol. Appl. Sci 2019, 8, 2270–2283. [Google Scholar] [CrossRef] Shafapour
    Tehrany, M.; Shabani, F.; Neamah Jebur, M.; Hong, H.; Chen, W.; Xie, X. GIS-based
    spatial prediction of flood prone areas using standalone frequency ratio, logistic
    regression, weight of evidence and their ensemble techniques. Geomat. Nat. Hazards
    Risk 2017, 8, 1538–1561. [Google Scholar] [CrossRef] Mousavi, S.Z.; Kavian, A.;
    Soleimani, K.; Mousavi, S.R.; Shirzadi, A. GIS-based spatial prediction of landslide
    susceptibility using logistic regression model. Geomat. Nat. Hazards Risk 2011,
    2, 33–50. [Google Scholar] [CrossRef] Zeraatpisheh, M.; Garosi, Y.; Owliaie, H.R.;
    Ayoubi, S.; Taghizadeh-Mehrjardi, R.; Scholten, T.; Xu, M. Improving the spatial
    prediction of soil organic carbon using environmental covariates selection: A
    comparison of a group of environmental covariates. Catena 2022, 208, 105723. [Google
    Scholar] [CrossRef] Ye, C.-M.; Wei, R.-L.; Ge, Y.-G.; Li, Y.; Junior, J.M.; Li,
    J. GIS-based spatial prediction of landslide using road factors and random forest
    for Sichuan-Tibet Highway. J. Mt. Sci. 2022, 19, 461–476. [Google Scholar] [CrossRef]
    Dobarco, M.R.; Orton, T.G.; Arrouays, D.; Lemercier, B.; Paroissien, J.-B.; Walter,
    C.; Saby, N.P. Prediction of soil texture using descriptive statistics and area-to-point
    kriging in Region Centre (France). Geoderma Reg. 2016, 7, 279–292. [Google Scholar]
    [CrossRef] Liao, K.; Xu, S.; Wu, J.; Zhu, Q. Spatial estimation of surface soil
    texture using remote sensing data. Soil Sci. Plant Nutr. 2013, 59, 488–500. [Google
    Scholar] [CrossRef] Costa, J.J.F.; Giasson, E.; da Silva, E.B.; Coblinski, J.A.;
    Tiecher, T. Use of color parameters in the grouping of soil samples produces more
    accurate predictions of soil texture and soil organic carbon. Comput. Electron.
    Agric. 2020, 177, 105710. [Google Scholar] [CrossRef] Wadoux, A.M.-C. Using deep
    learning for multivariate mapping of soil with quantified uncertainty. Geoderma
    2019, 351, 59–70. [Google Scholar] [CrossRef] Ließ, M.; Glaser, B.; Huwe, B. Uncertainty
    in the spatial prediction of soil texture: Comparison of regression tree and Random
    Forest models. Geoderma 2012, 170, 70–79. [Google Scholar] [CrossRef] Gholizadeh,
    A.; Borůvka, L.; Saberioon, M.; Vašát, R. A memory-based learning approach as
    compared to other data mining algorithms for the prediction of soil texture using
    diffuse reflectance spectra. Remote Sens. 2016, 8, 341. [Google Scholar] [CrossRef]
    Curcio, D.; Ciraolo, G.; D’Asaro, F.; Minacapilli, M. Prediction of soil texture
    distributions using VNIR-SWIR reflectance spectroscopy. Procedia Environ. Sci.
    2013, 19, 494–503. [Google Scholar] [CrossRef] Wuest, T.; Weimer, D.; Irgens,
    C.; Thoben, K.-D. Machine learning in manufacturing: Advantages, challenges, and
    applications. Prod. Manuf. Res. 2016, 4, 23–45. [Google Scholar] [CrossRef] Ray,
    S. A quick review of machine learning algorithms. In Proceedings of the 2019 International
    Conference on Machine Learning, Big Data, Cloud and Parallel Computing (COMITCon),
    Faridabad, India, 14–16 February 2019; pp. 35–39. [Google Scholar] Barzegar, R.;
    Aalami, M.T.; Adamowski, J. Coupling a hybrid CNN-LSTM deep learning model with
    a Boundary Corrected Maximal Overlap Discrete Wavelet Transform for multiscale
    Lake water level forecasting. J. Hydrol. 2021, 598, 126196. [Google Scholar] [CrossRef]
    Zhang, Y.; Le, J.; Liao, X.; Zheng, F.; Li, Y. A novel combination forecasting
    model for wind power integrating least square support vector machine, deep belief
    network, singular spectrum analysis and locality-sensitive hashing. Energy 2019,
    168, 558–572. [Google Scholar] [CrossRef] Alygizakis, N.; Giannakopoulos, T.;
    Τhomaidis, N.S.; Slobodnik, J. Detecting the sources of chemicals in the Black
    Sea using non-target screening and deep learning convolutional neural networks.
    Sci. Total Environ. 2022, 847, 157554. [Google Scholar] [CrossRef] Taghizadeh-Mehrjardi,
    R.; Khademi, H.; Khayamim, F.; Zeraatpisheh, M.; Heung, B.; Scholten, T. A comparison
    of model averaging techniques to predict the spatial distribution of soil properties.
    Remote Sens. 2022, 14, 472. [Google Scholar] [CrossRef] Feng, D.; Chen, H. A small
    samples training framework for deep Learning-based automatic information extraction:
    Case study of construction accident news reports analysis. Adv. Eng. Inform. 2021,
    47, 101256. [Google Scholar] [CrossRef] Azadnia, R.; Jahanbakhshi, A.; Rashidi,
    S.; Bazyar, P. Developing an automated monitoring system for fast and accurate
    prediction of soil texture using an image-based deep learning network and machine
    vision system. Measurement 2022, 190, 110669. [Google Scholar] [CrossRef] Taghizadeh-Mehrjardi,
    R.; Mahdianpari, M.; Mohammadimanesh, F.; Behrens, T.; Toomanian, N.; Scholten,
    T.; Schmidt, K. Multi-task convolutional neural networks outperformed random forest
    for mapping soil particle size fractions in central Iran. Geoderma 2020, 376,
    114552. [Google Scholar] [CrossRef] Garajeh, M.K.; Malakyar, F.; Weng, Q.; Feizizadeh,
    B.; Blaschke, T.; Lakes, T. An automated deep learning convolutional neural network
    algorithm applied for soil salinity distribution mapping in Lake Urmia, Iran.
    Sci. Total Environ. 2021, 778, 146253. [Google Scholar] [CrossRef] Celik, M.F.;
    Isik, M.S.; Yuzugullu, O.; Fajraoui, N.; Erten, E. Soil Moisture Prediction from
    Remote Sensing Images Coupled with Climate, Soil Texture and Topography via Deep
    Learning. Remote Sens. 2022, 14, 5584. [Google Scholar] [CrossRef] Baskakov, D.;
    Arseniev, D. On the computational complexity of deep learning algorithms. In Proceedings
    of the International Scientific Conference on Telecommunications, Computing and
    Control: TELECCON 2019, St. Petersburg, Russia, 18–19 November 2019; pp. 343–356.
    [Google Scholar] Bejani, M.M.; Ghatee, M. A systematic review on overfitting control
    in shallow and deep neural networks. Artif. Intell. Rev. 2021, 54, 6391–6438.
    [Google Scholar] [CrossRef] Bailly, A.; Blanc, C.; Francis, É.; Guillotin, T.;
    Jamal, F.; Wakim, B.; Roy, P. Effects of dataset size and interactions on the
    prediction performance of logistic regression and deep learning models. Comput.
    Methods Programs Biomed. 2022, 213, 106504. [Google Scholar] [CrossRef] Khan,
    M.; Jan, B.; Farman, H.; Ahmad, J.; Farman, H.; Jan, Z. Deep Learning Methods
    and Applications; Springer: Berlin/Heidelberg, Germany, 2019; pp. 31–42. [Google
    Scholar] Adhaityar, B.Y.; Sahara, D.P.; Pratama, C.; Wibowo, A.; Heliani, L.S.
    Multi-Target Regression Using Convolutional Neural Network-Random Forests (CNN-RF)
    for Early Earthquake Warning System. In Proceedings of the 2021 9th International
    Conference on Information and Communication Technology (ICoICT), Yogyakarta, Indonesia,
    3–5 August 2021; pp. 31–36. [Google Scholar] Zhao, X.; Yu, B.; Liu, Y.; Chen,
    Z.; Li, Q.; Wang, C.; Wu, J. Estimation of poverty using random forest regression
    with multi-source data: A case study in Bangladesh. Remote Sens. 2019, 11, 375.
    [Google Scholar] [CrossRef] Costache, R.; Arabameri, A.; Moayedi, H.; Pham, Q.B.;
    Santosh, M.; Nguyen, H.; Pandey, M.; Pham, B.T. Flash-flood potential index estimation
    using fuzzy logic combined with deep learning neural network, naïve Bayes, XGBoost
    and classification and regression tree. Geocarto Int. 2022, 37, 6780–6807. [Google
    Scholar] [CrossRef] Fang, Z.; Wang, Y.; Peng, L.; Hong, H. Integration of convolutional
    neural network and conventional machine learning classifiers for landslide susceptibility
    mapping. Comput. Geosci. 2020, 139, 104470. [Google Scholar] [CrossRef] Zhou,
    X.; Lu, P.; Zheng, Z.; Tolliver, D.; Keramati, A. Accident prediction accuracy
    assessment for highway-rail grade crossings using random forest algorithm compared
    with decision tree. Reliab. Eng. Syst. Saf. 2020, 200, 106931. [Google Scholar]
    [CrossRef] Kwak, G.-H.; Park, C.-W.; Lee, K.-D.; Na, S.-I.; Ahn, H.-Y.; Park,
    N.-W. Potential of hybrid CNN-RF model for early crop mapping with limited input
    data. Remote Sens. 2021, 13, 1629. [Google Scholar] [CrossRef] Nijhawan, R.; Das,
    J.; Balasubramanian, R. A hybrid CNN+ random forest approach to delineate debris
    covered glaciers using deep features. J. Indian Soc. Remote Sens. 2018, 46, 981–989.
    [Google Scholar] [CrossRef] Bouyoucos, G.J. Hydrometer method improved for making
    particle size analyses of soils 1. Agron. J. 1962, 54, 464–465. [Google Scholar]
    [CrossRef] Fathololoumi, S.; Vaezi, A.R.; Alavipanah, S.K.; Ghorbani, A.; Saurette,
    D.; Biswas, A. Improved digital soil mapping with multitemporal remotely sensed
    satellite data fusion: A case study in Iran. Sci. Total Environ. 2020, 721, 137703.
    [Google Scholar] [CrossRef] Shahriari, M.; Delbari, M.; Afrasiab, P.; Pahlavan-Rad,
    M.R. Predicting regional spatial distribution of soil texture in floodplains using
    remote sensing data: A case of southeastern Iran. Catena 2019, 182, 104149. [Google
    Scholar] [CrossRef] Khanal, S.; Fulton, J.; Klopfenstein, A.; Douridas, N.; Shearer,
    S. Integration of high resolution remotely sensed data and machine learning techniques
    for spatial prediction of soil properties and corn yield. Comput. Electron. Agric.
    2018, 153, 213–225. [Google Scholar] [CrossRef] Yang, H.; Zhang, X.; Xu, M.; Shao,
    S.; Wang, X.; Liu, W.; Wu, D.; Ma, Y.; Bao, Y.; Zhang, X. Hyper-temporal remote
    sensing data in bare soil period and terrain attributes for digital soil mapping
    in the Black soil regions of China. Catena 2020, 184, 104259. [Google Scholar]
    [CrossRef] Forkuor, G.; Hounkpatin, O.K.; Welp, G.; Thiel, M. High resolution
    mapping of soil properties using remote sensing variables in south-western Burkina
    Faso: A comparison of machine learning and multiple linear regression models.
    PLoS ONE 2017, 12, e0170478. [Google Scholar] [CrossRef] Dharumarajan, S.; Hegde,
    R.; Singh, S. Spatial prediction of major soil properties using Random Forest
    techniques–A case study in semi-arid tropics of South India. Geoderma Reg. 2017,
    10, 154–162. [Google Scholar] [CrossRef] Shafizadeh-Moghadam, H.; Minaei, F.;
    Talebi-khiyavi, H.; Xu, T.; Homaee, M. Synergetic use of multi-temporal Sentinel-1,
    Sentinel-2, NDVI, and topographic factors for estimating soil organic carbon.
    Catena 2022, 212, 106077. [Google Scholar] [CrossRef] Sahabiev, I.; Smirnova,
    E.; Giniyatullin, K. Spatial Prediction of Agrochemical Properties on the Scale
    of a Single Field Using Machine Learning Methods Based on Remote Sensing Data.
    Agronomy 2021, 11, 2266. [Google Scholar] [CrossRef] Razavi-Termeh, S.V.; Seo,
    M.; Sadeghi-Niaraki, A.; Choi, S.-M. Application of genetic algorithm in optimization
    parallel ensemble-based machine learning algorithms to flood susceptibility mapping
    using radar satellite imagery. Sci. Total Environ. 2023, 873, 162285. [Google
    Scholar] [CrossRef] [PubMed] Breiman, L. Random forests. Mach. Learn. 2001, 45,
    5–32. [Google Scholar] [CrossRef] Razavi-Termeh, S.V.; Sadeghi-Niaraki, A.; Farhangi,
    F.; Choi, S.-M. COVID-19 risk mapping with considering socio-economic criteria
    using machine learning algorithms. Int. J. Environ. Res. Public Health 2021, 18,
    9657. [Google Scholar] [CrossRef] [PubMed] Sahani, N.; Ghosh, T. GIS-based spatial
    prediction of recreational trail susceptibility in protected area of Sikkim Himalaya
    using logistic regression, decision tree and random forest model. Ecol. Inform.
    2021, 64, 101352. [Google Scholar] [CrossRef] Farhangi, F.; Sadeghi-Niaraki, A.;
    Razavi-Termeh, S.V.; Choi, S.-M. Evaluation of tree-based machine learning algorithms
    for accident risk mapping caused by driver lack of alertness at a national scale.
    Sustainability 2021, 13, 10239. [Google Scholar] [CrossRef] Segal, M.R. Machine
    Learning Benchmarks and Random Forest Regression; Kluwer Academic Publisher: Dordrecht,
    The Netherlands, 2004. [Google Scholar] Gu, J.; Wang, Z.; Kuen, J.; Ma, L.; Shahroudy,
    A.; Shuai, B.; Liu, T.; Wang, X.; Wang, G.; Cai, J. Recent advances in convolutional
    neural networks. Pattern Recognit. 2018, 77, 354–377. [Google Scholar] [CrossRef]
    Li, Z.; Liu, F.; Yang, W.; Peng, S.; Zhou, J. A survey of convolutional neural
    networks: Analysis, applications, and prospects. IEEE Trans. Neural Netw. Learn.
    Syst. 2021, 33, 6999–7019. [Google Scholar] [CrossRef] [PubMed] Wang, Y.; Fang,
    Z.; Hong, H. Comparison of convolutional neural networks for landslide susceptibility
    mapping in Yanshan County, China. Sci. Total Environ. 2019, 666, 975–993. [Google
    Scholar] [CrossRef] [PubMed] Ng, W.; Minasny, B.; McBratney, A. Convolutional
    neural network for soil microplastic contamination screening using infrared spectroscopy.
    Sci. Total Environ. 2020, 702, 134723. [Google Scholar] [CrossRef] Zhang, Z.;
    Tian, J.; Huang, W.; Yin, L.; Zheng, W.; Liu, S. A haze prediction method based
    on one-dimensional convolutional neural network. Atmosphere 2021, 12, 1327. [Google
    Scholar] [CrossRef] Elbaz, K.; Shaban, W.M.; Zhou, A.; Shen, S.-L. Real time image-based
    air quality forecasts using a 3D-CNN approach with an attention mechanism. Chemosphere
    2023, 333, 138867. [Google Scholar] [CrossRef] Razavi-Termeh, S.V.; Sadeghi-Niaraki,
    A.; Choi, S.-M. Spatial modeling of asthma-prone areas using remote sensing and
    ensemble machine learning algorithms. Remote Sens. 2021, 13, 3222. [Google Scholar]
    [CrossRef] Farahani, M.; Razavi-Termeh, S.V.; Sadeghi-Niaraki, A. A spatially
    based machine learning algorithm for potential mapping of the hearing senses in
    an urban environment. Sustain. Cities Soc. 2022, 80, 103675. [Google Scholar]
    [CrossRef] Taylor, K.E. Summarizing multiple aspects of model performance in a
    single diagram. J. Geophys. Res. Atmos. 2001, 106, 7183–7192. [Google Scholar]
    [CrossRef] Potter, K.; Hagen, H.; Kerren, A.; Dannenmann, P. Methods for presenting
    statistical information: The box plot. In Proceedings of the VLUDS, 2006. pp.
    97–106. Available online: https://sci.utah.edu/~kpotter/publications/potter-2006-MPSI.pdf
    (accessed on 20 July 2023). Lopez-del Rio, A.; Nonell-Canals, A.; Vidal, D.; Perera-Lluna,
    A. Evaluation of cross-validation strategies in sequence-based binding prediction
    using deep learning. J. Chem. Inf. Model. 2019, 59, 1645–1657. [Google Scholar]
    [CrossRef] [PubMed] Gallant, J.C.; Dowling, T.I. A multiresolution index of valley
    bottom flatness for mapping depositional areas. Water Resour. Res. 2003, 39, 1347.
    [Google Scholar] [CrossRef] Jones, E.J.; Filippi, P.; Wittig, R.; Fajardo, M.;
    Pino, V.; McBratney, A.B. Mapping soil slaking index and assessing the impact
    of management in a mixed agricultural landscape. Soil 2021, 7, 33–46. [Google
    Scholar] [CrossRef] Zhao, W.; Li, Z.-L. Sensitivity study of soil moisture on
    the temporal evolution of surface temperature over bare surfaces. Int. J. Remote
    Sens. 2013, 34, 3314–3331. [Google Scholar] [CrossRef] Şekertekin, A.; Kutoglu,
    Ş.; Kaya, S.; Marangoz, A. Analysing the effects of different land cover types
    on land surface temperature using satellite data. Int. Arch. Photogramm. Remote
    Sens. Spat. Inf. Sci. 2015, 40, 665–667. [Google Scholar] [CrossRef] Przybylek,
    P. Application of Near-Infrared Spectroscopy to Measure the Water Content in Liquid
    Dielectrics. Energies 2022, 15, 5907. [Google Scholar] [CrossRef] Casa, R.; Castaldi,
    F.; Pascucci, S.; Palombo, A.; Pignatti, S. A comparison of sensor resolution
    and calibration strategies for soil texture estimation from hyperspectral remote
    sensing. Geoderma 2013, 197, 17–26. [Google Scholar] [CrossRef] Taghdis, S.; Farpoor,
    M.H.; Mahmoodabadi, M. Pedological assessments along an arid and semi-arid transect
    using soil spectral behavior analysis. Catena 2022, 214, 106288. [Google Scholar]
    [CrossRef] Radočaj, D.; Jurišić, M.; Gašparović, M. The role of remote sensing
    data and methods in a modern approach to fertilization in precision agriculture.
    Remote Sens. 2022, 14, 778. [Google Scholar] [CrossRef] Kalambukattu, J.G.; Kumar,
    S.; Arya Raj, R. Digital soil mapping in a Himalayan watershed using remote sensing
    and terrain parameters employing artificial neural network model. Environ. Earth
    Sci. 2018, 77, 203. [Google Scholar] [CrossRef] Fang, Y.; Xu, L.; Wong, A.; Clausi,
    D.A. Multi-temporal landsat-8 images for retrieval and broad scale mapping of
    soil copper concentration using empirical models. Remote Sens. 2022, 14, 2311.
    [Google Scholar] [CrossRef] Duan, M.; Guo, Z.; Zhang, X.; Wang, C. Influences
    of different environmental covariates on county-scale soil type identification
    using remote sensing images. Ecol. Indic. 2022, 139, 108951. [Google Scholar]
    [CrossRef] Neinavaz, E.; Darvishzadeh, R.; Skidmore, A.K.; Abdullah, H. Integration
    of Landsat-8 thermal and visible-short wave infrared data for improving prediction
    accuracy of forest leaf area index. Remote Sens. 2019, 11, 390. [Google Scholar]
    [CrossRef] Kavitha, M.; Gayathri, R.; Polat, K.; Alhudhaif, A.; Alenezi, F. Performance
    evaluation of deep e-CNN with integrated spatial-spectral features in hyperspectral
    image classification. Measurement 2022, 191, 110760. [Google Scholar] [CrossRef]
    Yang, S.; Gu, L.; Li, X.; Jiang, T.; Ren, R. Crop classification method based
    on optimal feature selection and hybrid CNN-RF networks for multi-temporal remote
    sensing imagery. Remote Sens. 2020, 12, 3119. [Google Scholar] [CrossRef] Natras,
    R.; Soja, B.; Schmidt, M. Ensemble Machine Learning of Random Forest, AdaBoost
    and XGBoost for Vertical Total Electron Content Forecasting. Remote Sens. 2022,
    14, 3547. [Google Scholar] [CrossRef] Li, S.; Han, Y.; Yao, X.; Yingchen, S.;
    Wang, J.; Zhao, Q. Electricity theft detection in power grids with deep learning
    and random forests. J. Electr. Comput. Eng. 2019, 2019, 4136874. [Google Scholar]
    [CrossRef] Knauer, U.; von Rekowski, C.S.; Stecklina, M.; Krokotsch, T.; Pham
    Minh, T.; Hauffe, V.; Kilias, D.; Ehrhardt, I.; Sagischewski, H.; Chmara, S. Tree
    species classification based on hybrid ensembles of a convolutional neural network
    (CNN) and random forest classifiers. Remote Sens. 2019, 11, 2788. [Google Scholar]
    [CrossRef] Li, Y.; Wang, W.; Wang, G.; Tan, Q. Actual evapotranspiration estimation
    over the Tuojiang River Basin based on a hybrid CNN-RF model. J. Hydrol. 2022,
    610, 127788. [Google Scholar] [CrossRef]    Disclaimer/Publisher’s Note: The statements,
    opinions and data contained in all publications are solely those of the individual
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to people or property resulting
    from any ideas, methods, instructions or products referred to in the content.  ©
    2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open
    access article distributed under the terms and conditions of the Creative Commons
    Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share
    and Cite MDPI and ACS Style Hosseini, F.S.; Seo, M.B.; Razavi-Termeh, S.V.; Sadeghi-Niaraki,
    A.; Jamshidi, M.; Choi, S.-M. Geospatial Artificial Intelligence (GeoAI) and Satellite
    Imagery Fusion for Soil Physical Property Predicting. Sustainability 2023, 15,
    14125. https://doi.org/10.3390/su151914125 AMA Style Hosseini FS, Seo MB, Razavi-Termeh
    SV, Sadeghi-Niaraki A, Jamshidi M, Choi S-M. Geospatial Artificial Intelligence
    (GeoAI) and Satellite Imagery Fusion for Soil Physical Property Predicting. Sustainability.
    2023; 15(19):14125. https://doi.org/10.3390/su151914125 Chicago/Turabian Style
    Hosseini, Fatemeh Sadat, Myoung Bae Seo, Seyed Vahid Razavi-Termeh, Abolghasem
    Sadeghi-Niaraki, Mohammad Jamshidi, and Soo-Mi Choi. 2023. \"Geospatial Artificial
    Intelligence (GeoAI) and Satellite Imagery Fusion for Soil Physical Property Predicting\"
    Sustainability 15, no. 19: 14125. https://doi.org/10.3390/su151914125 Note that
    from the first issue of 2016, this journal uses article numbers instead of page
    numbers. See further details here. Article Metrics Citations No citations were
    found for this article, but you may check on Google Scholar Article Access Statistics
    Article access statistics Article Views 8. Jan 18. Jan 28. Jan 7. Feb 17. Feb
    27. Feb 8. Mar 18. Mar 28. Mar 0k 1k 2k 3k For more information on the journal
    statistics, click here. Multiple requests from the same IP address are counted
    as one view.   Sustainability, EISSN 2071-1050, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Sustainability (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Geospatial Artificial Intelligence (GeoAI) and Satellite Imagery Fusion for
    Soil Physical Property Predicting
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh N.
  - Ajaykumar K.
  - Dhruw L.K.
  - Choudhury B.U.
  citation_count: '3'
  description: The conventional sprinkler irrigation time calculation does not consider
    current soil moisture, leading to inadequate or excess irrigation due to daily
    weather changes. In present study, a new approach for calculating sprinkler irrigation
    time was proposed, which used in-field soil moisture values obtained by a convolutional
    neural network (CNN). To enhance accuracy and limit its size, the CNN architecture
    incorporated depth-wise separable convolution and residual connections. A deep-learning-based
    mobile application was developed, which predicted soil moisture class via in-field
    soil images, crop factors, and sprinkler system details. The system was assessed
    based on soil moisture class prediction accuracy, energy usage, water savings,
    and water productivity. The CNN model had an average classification accuracy of
    97.10%, precision of 85.50%, recall of 86.80%, F1-score of 85.80%, and true prediction
    score of 75.30%. The developed mobile application saved 27.59% water and 27.42%
    energy by accurately estimating irrigation time using the predicted soil moisture
    class. The developed system corrected conventional irrigation depth in some instances,
    thereby reducing crop yield losses due to inadequate water supply. Compared to
    conventional sprinkler irrigation, the developed system increased water productivity
    by 32.75%. Thus, the system has the potential to conserve water and energy while
    improving crop yield.
  doi: 10.1016/j.atech.2023.100305
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. Results 4. Discussion 5. Conclusions Declaration of Competing Interest Acknowledgments
    Data availability References Show full outline Cited by (3) Figures (9) Show 3
    more figures Tables (7) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all
    tables Smart Agricultural Technology Volume 5, October 2023, 100305 Optimization
    of irrigation timing for sprinkler irrigation system using convolutional neural
    network-based mobile application for sustainable agriculture Author links open
    overlay panel Naseeb Singh a, Kethavath Ajaykumar a, L.K. Dhruw b, B.U. Choudhury
    a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.atech.2023.100305
    Get rights and content Under a Creative Commons license open access Highlights
    • Optimization of sprinkler irrigation system timing using CNN model. • CNN model
    achieved true prediction score over 75.0%. • Mobile application predicts current
    soil moisture through in-field images. • Developed novel irrigation system saves
    27.59% water and 27.42% energy. • Developed irrigation system increases water
    productivity by 32.75%. Abstract The conventional sprinkler irrigation time calculation
    does not consider current soil moisture, leading to inadequate or excess irrigation
    due to daily weather changes. In present study, a new approach for calculating
    sprinkler irrigation time was proposed, which used in-field soil moisture values
    obtained by a convolutional neural network (CNN). To enhance accuracy and limit
    its size, the CNN architecture incorporated depth-wise separable convolution and
    residual connections. A deep-learning-based mobile application was developed,
    which predicted soil moisture class via in-field soil images, crop factors, and
    sprinkler system details. The system was assessed based on soil moisture class
    prediction accuracy, energy usage, water savings, and water productivity. The
    CNN model had an average classification accuracy of 97.10%, precision of 85.50%,
    recall of 86.80%, F1-score of 85.80%, and true prediction score of 75.30%. The
    developed mobile application saved 27.59% water and 27.42% energy by accurately
    estimating irrigation time using the predicted soil moisture class. The developed
    system corrected conventional irrigation depth in some instances, thereby reducing
    crop yield losses due to inadequate water supply. Compared to conventional sprinkler
    irrigation, the developed system increased water productivity by 32.75%. Thus,
    the system has the potential to conserve water and energy while improving crop
    yield. Previous article in issue Next article in issue Keywords IrrigationMobile
    applicationConvolutional neural networksDeep learningSoil moistureSoil classification
    1. Introduction Irrigation is the agricultural activity of applying water artificially
    to meet crop water requirements. Some typical irrigation methods include manual
    irrigation, surface irrigation, sprinkler irrigation, drip irrigation, bubbler
    irrigation, and localized irrigation, with sprinkler irrigation being the most
    often used worldwide [1] because of its higher water application efficiency [2].
    This method of irrigation is equivalent to rainfall in which water is delivered
    to plants in the form of small droplets using sprayers, resulting in more than
    50.0% water savings than surface irrigation [3] and is easy to install in agricultural
    fields. Studies have shown that sprinkler irrigation can increase water productivity
    (ratio of yield to crop ETc) by 18.0–57.0%, improve irrigation water productivity
    (ratio of yield to irrigation water) by 21.0–82.0%, and considerably increase
    crop yield compared to surface irrigation [4], [5], [6], due to which sprinkler-irrigated
    fields comprise 47.1%, 10.5%, and 8.4% of the total irrigation area in developed
    countries, developing countries, and least developed countries, respectively [7].
    Due to water scarcity issues in many regions of India, there has been a significant
    increase in the adoption of micro-irrigation systems, including sprinkler and
    drip irrigation. The area of land using these systems has increased from 2.24
    Mha in 2005-06 to 11.41 Mha in 2018-19, with sprinkler irrigation accounting for
    53.1% of the total area [8]. In addition to multiple parameters such as sprinkler
    type, diameter of sprinkler nozzle, sprinkler spacing, operating pressure, sprinkler
    height, etc., the efficiency of a sprinkler irrigation system also depends greatly
    on irrigation time [3]. Irrigation time is the amount of time a sprinkler irrigation
    system must run to replenish evapotranspiration and was calculated as shown in
    Eq. (1) [9]. (1) Where, T = irrigation time, (min) I = Watering interval of sprinkler
    irrigation system, (days) W = Crop water use (cm/day) AR = Application rate of
    sprinkler irrigation system, (cm/h) E = Efficiency of sprinkler irrigation system,
    (as a decimal) Sprinkler system efficiencies range from 60.0 to 90.0%, with an
    average of 75.0% [10], therefore, 75.0% value as irrigation efficiency was used
    for calculating irrigation time in Eq. (1). Crop water use, accounting in Eq.
    (1), is the amount of water required by a crop to grow, and it is driven by weather
    conditions, soil moisture content, crop species, and stage of growth [11]. As
    a result, it might vary significantly depending on the weather as well as the
    plant''s canopy, for instance, crop water use for a hot and windy day as against
    a cool and cloudy day or a small plant''s canopy against a large plant''s canopy.
    Ritchie and Basso [12] demonstrate that crop water use efficiency [13] is not
    constant when the crop water supply is fixed. Traditionally, empirical engineering
    approaches calculated crop water use through crop coefficients and reference evapotranspiration
    [14]; however, the spatial limitations of these empirical approaches may result
    in imprecise crop water use determination. Consequently, irrigation time calculated
    using the crop water use (Eq. (1)) will also be inaccurate which may result in
    under or over-irrigation. Therefore, an accurate method is needed which can calculate
    the exact irrigation time based on in-situ field moisture content in real-time.
    One approach to obtaining the in-situ moisture content of the soil is the use
    of moisture sensors in the field. But the installation of these sensors in the
    field has certain drawbacks, for instance, non-linearity in readings [15,16],
    non-repeatability of sensor values [17,18], decay with time due to corrosion [19],
    create hindrance in agricultural operations like weeding, spraying, as well as
    sensors required continuous monitoring. As a result, an alternate approach is
    required that does not physically interact with soil and should not obstruct the
    various agricultural operations carried out in the field during crop cultivation.
    In recent times, numerous researchers used a deep learning-based approach to determine
    the various soil properties [20], [21], [22], [23], [24], [25], [26] including
    soil moisture content [27], [28], [29], [30], [31]. A convolutional neural network
    is such kind of deep learning method that automatically extract the complex low-level
    features from the input images and thus, in recent time, applied by multiple researchers
    in complicated soil moisture-related tasks successfully [27], [28], [29]. Hegazi
    et al. [29] predicts soil moisture from Sentinel-1 SAR images using a convolutional
    neural network and achieved a coefficient of determination (R2) value greater
    than 85.0%. Using multispectral and infrared (IR) images as input in the convolutional
    neural network, Seo et al. [30] developed a soil moisture retrieval model with
    an error rate of less than 6.0%. Adeyemi et al. [32] developed a dynamic neural
    network model to predict soil moisture for improved irrigation scheduling with
    which they saved 20–46% of water. Sobayo et al. [31] used thermal images as input
    in the convolutional neural network to estimate the moisture content and achieved
    an R2 value as high as 0.99 for the pasture field. Intending to alleviate the
    deficit or excess application of water to crops through the sprinkler irrigation
    method, in the present study, we aim to develop a convolutional neural network-assisted
    mobile application. This proposed mobile app will recommend the precise irrigation
    run time for sprinkler irrigation methods based on soil moisture present in the
    field before irrigation. For this, a convolutional neural network that will be
    deployed on the Android mobile platform will predict the soil moisture class from
    the in-situ field images. Based on provided soil, crop, and irrigation system
    properties, the developed mobile application will recommend the irrigation run
    time. Compared to conventionally calculated irrigation run time, the proposed
    deep learning-based system is intended to reduce energy and water usage in case
    of excess irrigation and reduce crop yield losses [33] in case of inadequate irrigation.
    The performance of the trained CNN model in the prediction of soil moisture class
    was evaluated in terms of accuracy, precision, recall, and F1 score. The performance
    of the developed mobile application was evaluated with real-time field images
    and the evaluation of the proposed system was quantified in terms of water and
    energy saving. The remaining sections of the paper are organized as follows. Section
    2 details the procedures for acquiring soil moisture image datasets, CNN architecture,
    CNN training, and performance assessment metrics. Section 3 provides the results
    of CNN''s trained classification as well as the real-time field performance of
    the mobile application. Section 4 presents a discussion of the results, the limitations
    of the current study, and the scope for future research in this area. Section
    5 concluded the outcomes of the present research. 2. Materials and methods 2.1.
    Experimental site The experiment was conducted in the ICAR RC for NEH Region''s
    experimental field situated at Meghalaya, India. The agro-climatic zone of the
    region is a subtropical hill zone with an altitude range of 400.0–1200.0 m AMSL.
    As illustrated in Fig. 1, it lies between 25°41′31.59″N and 91°55′28.57″E. The
    experimental site received 2450 mm of rainfall on average per year. The monthly
    mean temperature ranges from 6.56 °C to 20.85 °C for the minimum and 20.01 °C
    to 28.64 °C for the maximum. The physical properties of the soil under study are
    given in Table 1. Download : Download high-res image (644KB) Download : Download
    full-size image Fig. 1. Location of experimental site. Table 1. Physical properties
    of soil of the experimental field. Soil property Value Texture Sandy loam pH 4.23–4.91
    Field capacity, % 31.4 Permanent wilting point, % 12.3 Saturation capacity, %
    43.5 Bulk density 1.29 mg/m3 A soil sampler was used to collect soil samples from
    different parts of the field, up to a depth of 5.0 cm, during the period from
    May to June 2022. The collected soil samples were cleaned of major clods and foreign
    material, after which it was dried for 24 hours in a mechanical oven set at 105
    °C. The soil sample was subjected to drying to allow for the addition of a specific
    quantity of water that would maintain its moisture content within the required
    class range. 2.2. Crop details The green pea (Pisum sativum L.) was sown on 1st
    December 2022 with 30.0 cm plant-to-plant and row-to-row spacing in a field under
    study. The manual single-wheel hoe was used to control weeds on 22, 43, and 59
    DAS (days after sowing). The average crop water requirement of 27.20 cm [34,35]
    was considered for green peas in addition to evapotranspiration. In their study,
    Kanta et al. [34] stated that crop water consumption for peas during the middle
    growth stage will be approximately 115.0 mm, or 3.26 mm/day assuming the middle
    growth stage period of 35 days. The depth of water (irrigation depth) that needs
    to be applied has been estimated to be 26.10 mm using six days as the irrigation
    interval and a sprinkler irrigation efficiency of 75.0% [10]. To interpret the
    results of trials convincingly, the observations of these trials are presented
    along with additional water applied or water saved as compared to the conventional
    spraying system. 2.3. Sprinkler irrigation system details A sprinkler irrigation
    system utilizes a pump to apply water under high pressure. Water is released in
    a regulated manner, identical to rainfall, through a network of pumps, valves,
    pipes, and sprinklers. The sprinkler irrigation system of the present study consists
    of a single-phase centrifugal-type water pump with a power rating of 1.5 kW and
    a maximum discharge rate of 28.0 m3/h. A total of eight sprinklers having a flow
    rate of 2.82 m3/h, an operating pressure of 2.0–4.0 kg/m2, and a wetted diameter
    of 26.0–29.0 m were used. The spacing between the sprinklers on laterals pipe
    having a diameter of 10.0 cm was kept at 60.0% of the wetted diameter [9]. The
    application rate of the sprinkler irrigation system comes out to be 6.5 mm/h.
    2.4. Derive the soil moisture class ranges The amount of soil water accessible
    for the absorption of plants is determined by the difference in soil moisture
    content between field capacity (FC) and the permanent wilting point (PWP) [36].
    Soil moisture content in the root zone should be between field capacity and the
    permanent wilting point for good plant growth [37], and this moisture content
    can be used to determine the amount of irrigation water required. In the present
    study, the difference between the field capacity and the permanent wilting point
    is divided into ten moisture ranges that act as classes of soil moisture content.
    There are different moisture ranges for each class, which indicate how much water
    is in the soil. The field capacity and permanent wilting point of soil under study
    were determined experimentally and found to be 31.4% and 12.3%, respectively.
    By using field capacity and permanent wilting point values in Eq. (2), the soil
    moisture class interval (SMCI) was decided, which comes out to be 2.0%. Using
    this determined SMCI, ten ranges of soil moisture classes were derived as shown
    in Table 2. (2) Where SMCI is soil moisture class interval in percentage. Table
    2. Derived soil moisture class ranges with a class interval of 2.0%. Class Moisture
    content range, % C1 < 14.0 C2 14.1–16.0 C3 16.1–18.0 C4 18.1–20.0 C5 20.1–22.0
    C6 22.1–24.0 C7 24.1–26.0 C8 26.1–28.0 C9 28.1–30.0 C10 > 30.1 2.5. Image acquisition
    procedure The images were captured using a smartphone that had a camera with a
    Sony IMX789 sensor of size 1/1.43″ because the proposed CNN model will be deployed
    on a smartphone to predict in-situ soil moisture class. The camera had a 1.12
    µm pixel size, a focal length (f) of 23.0 mm, and an aperture of f/1.8. For capturing
    the images of soil with different moisture content, a measured amount of water
    was manually added to bone-dry soil of known weight. It mainly includes the mobile
    stand at a predefined height, the platform on which the soil sample was placed
    during image capturing, a manually operated hand-held sprayer with a solid cone-type
    nozzle for spraying water uniformly over the soil sample, weighing balance to
    measure the weight of soil sample, glass measuring cylinder to precisely measure
    the volume of water, etc. The complete procedure used for image acquisition is
    shown in Fig. 2. Download : Download high-res image (649KB) Download : Download
    full-size image Fig. 2. Image acquisition procedure followed in the present study.
    (A) Collected soil moisture was dried in a hot air oven at 105 °C for 24 h. (B)
    Organic matter as well as major clods were manually removed from the soil sample.
    (C) A cleaned soil sample of 500.0 g was taken after weighting. (D) Evenly spraying
    of water over soil sample using full cone nozzle. (E) Capturing the images of
    soil samples using a smartphone at a pre-defined height. (F) Captured images of
    soil samples. From a soil sample that was dried at 105 °C for 24 h in a mechanical
    oven and cleaned from foreign matters as well as major clods, approx. 500.0 g
    (502.0 g ± 25.0 g) of soil was weighted and spread evenly into a tray on which
    a pre-defined volume of water will be sprayed so that the moisture content of
    this sample reached a desired level. The amount of water sprayed for each class
    depends on the upper and lower moisture limit of that class, and the volume of
    water for a given class range that needs to be sprayed on the soil sample was
    sprayed in two equal installments. For example, for a bone-dry soil sample of
    500.0 g, the water present in the soil sample up to the fourth class will be 90.0
    ml (up to this class, the total weight of the soil sample will become 590.0 g).
    To capture the images of the fifth class, the total volume of water that needs
    to be sprayed will be 10.0 ml. In the present study, instead of spraying 10.0
    ml of water in one go, this volume of water was sprayed in two equal installments
    of 5.0 ml. Due to this, theoretically, we got images with a moisture content of
    18.1–19.0%, and 19.1–20.0%, because of which model will be more generalized in
    the classification of images with different moisture content. The amount of water
    added for each moisture class was calculated using Eq. (3). (3) Where, Wadd =
    amount of water that needs to be added, ml WBDS = Weight of bone-dry soil sample,
    g MCr = required level of moisture content in soil sample, % Table 3 shows the
    exemplar for the volume of water added to the soil sample for each class. After
    spraying the water over the soil sample, it was left to absorb the moisture in
    a transverse as well as lateral direction for five minutes. To achieve higher
    accuracy, the CNN model needs to be trained with a large volume of images [38].
    With the purpose to increase the volume of the image dataset for training, multiple
    researchers [39], [40], [41], [42] effectively used the image augmentation technique
    which a method to create synthetic images by applying various operations like
    rotation, shifting, flipping, etc. on original images. Table 3. The exemplar values
    for the volume of water added to the soil sample for each class. Class Class range
    Weight of soil sample⁎, g Volume of water needs to be added, ml First spray, ml
    Second spray, ml Final weight, g C1 < 14.0 500.0 70.0 35.0 35.0 570.0 C2 14.1–16.0
    570.0 10.0 5.0 5.0 580.0 C3 16.1–18.0 580.0 10.0 5.0 5.0 590.0 C4 18.1–20.0 590.0
    10.0 5.0 5.0 600.0 C5 20.1–22.0 600.0 10.0 5.0 5.0 610.0 C6 22.1–24.0 610.0 10.0
    5.0 5.0 620.0 C7 24.1–26.0 620.0 10.0 5.0 5.0 630.0 C8 26.1–28.0 630.0 10.0 5.0
    5.0 640.0 C9 28.1–30.0 640.0 10.0 5.0 5.0 650.0 C10 > 30.1 650.0 10.0 10.0 10.0
    670.0 ⁎ Bone-dry weight of soil sample; This value changes with an average of
    502.0 g and a standard deviation of 25.0 g. In the present study, three images
    were captured by randomly rotating the soil sample tray for each level of moisture
    content to increase the volume of image data without generating synthetic images.
    Such tray rotation for each moisture level will serve as an alternative for the
    data augmentation technique. Following each spraying, two images including rotation
    were captured, hence, for each class total of four images were captured (water
    was sprayed in two equal installments for each class). As a result, 40 images
    (ten classes with four images per class) were captured for each soil sample. A
    total of 83 soil samples were collected from the experimental field, resulting
    in a total of 3320 images being acquired. Fig. 3 illustrates the sample of captured
    images of each class. Download : Download high-res image (1MB) Download : Download
    full-size image Fig. 3. Sample images of different soil moisture classes corresponding
    to a single soil sample. Training and running a CNN model is computationally expensive
    and computational power requirement increased with the increase in the size of
    an input image [43], [44], [45]. Therefore, to limit the computational power requirement
    as well as to reduce the model inference time, acquired images were cropped from
    the center to a size of 299 × 299 pixels. 2.6. Development of deep learning model
    In this study, soil moisture was classified using the CNN model for which images
    of soil, free from clods and other foreign matter, were used as input. An input
    layer, convolution layers, non-linear layers, pooling layers, fully connected
    layers, and an output layer are the basic components of a standard CNN architecture
    built for image classification. Using convolution operations, a convolutional
    layer extracts spatial features, referred to as feature maps, from the input matrix.
    Aside from reducing the spatial size of feature maps and hence the computational
    power, the usage of a pooling layer in CNN incorporates translation invariance
    in the network [46]. CNN employs a non-linear layer to bring non-linearity into
    the network, hence enhancing the network''s representational potential. Fully
    connected layers are inserted at the end of the last convolutional or pooling
    layer in a network to classify the features obtained using the convolutional layer
    into several classes [47]. This is a feed-forward neural network, often known
    as a classifier in the CNN paradigm. The output layer is the final layer in CNN
    and is responsible for determining the probability that input data belongs to
    a particular class. Using above mentioned basic layers, numerous CNN architectures
    were developed by researchers [[27], [28], [29], [30], [31],26] and achieved desirable
    accuracy for different soil properties. Hegazi et al. [29] predict soil moisture
    from Sentinel-1 images using the CNN model which is composed of six convolutional
    layers, one max-pooling layer, one flattens layer, and one fully connected layer.
    With similar CNN architecture, Ge et al. [28] estimate the soil moisture from
    satellite observations. Chen et al. [27] estimate the soil moisture using a 1-D
    convolutional layer in which the input layer was the spectral data, whereas Zhong
    et al. [26] measured various soil properties including soil moisture through 1-D
    convolutional neural network using the spectral data. Seo et al. [30] and Sobayo
    et al. [31] estimate soil moisture through 2-D convolutional for which they used
    multispectral infrared and thermal infrared images, respectively. A simple CNN
    architecture with few convolutional layers, a max-pooling layer, and a fully connecting
    layer was constructed in these studies for soil moisture estimation. Considering
    the desirable results achieved by the above-stated researchers, a CNN architecture
    was built in the present study. To keep the model light weighted, inspired by
    MobileNet [45] and ResNet [48] CNN architectures, a simple CNN architecture was
    formed as shown in Fig. 4. Download : Download high-res image (864KB) Download
    : Download full-size image Fig. 4. Architecture of CNN model developed for moisture
    class classification (Light green color represents the output size of the layer).
    In this architecture, one shortcut was inserted from the input of the 6th layer
    (next layer after two depth-wise separable convolution operations) to the output
    of the 14th layer. This shortcut will bring low-level features to the higher abstraction
    features which helps a deeper model to converge [48]. To concatenate these two
    layers (6th and 14th), a max-pooling operation was carried out on the 6th layer
    with a kernel size of 4 × 4, and stride of one while padding remains the same.
    The depth-wise separable convolutional operations were carried out using 3 × 3
    kernel size with different stride values of one as well as two. Each depth-wise
    separable convolutional operation was followed by a point-wise convolutional operation
    with a 1 × 1 kernel having a stride value of one only. A Rectified Linear Unit
    (ReLU) [49] activation function was used after each convolution operation to induce
    non-linearity in the network, while in the output layer, the SoftMax activation
    function was used to determine the probability for each class to which the input
    image may belong to. The soil moisture image dataset was divided into training,
    validation, and testing sub-datasets in proportions of 70:20:10 for training the
    structured model. The batch size, number of epochs, optimizer, loss function,
    etc., are some important hyperparameters that need to be tuned for training a
    deep learning model. In the present study, an iterative optimizer called adaptive
    moment estimation (Adam) [50] was used to revise the weights and biases based
    on loss function value. To scale the weights and biases which were initialized
    using the He initialization technique [48], a learning rate of 0.001 was applied.
    During the training, at once, 16 images were passed to the model before updating
    the weights and getting trained for 317 epochs after which the loss function showed
    no significant changes in its value. A categorical cross-entropy loss function
    was used in the present study, an ideal value for which is zero. To train the
    CNN model, Keras [51], an open-source machine learning library with TensorFlow
    [52] as the backend, was used. A Jupyter Notebook environment named Google Colaboratory
    (Google [53]), which runs entirely in the cloud was used to train the model through
    the browser. An Nvidia Tesla K80 graphics processing unit (GPU) having 2496 Compute
    Unified Device Architecture (CUDA) cores was used during training with 25 GB of
    available random-access memory (RAM). 2.7. Evaluation of developed deep learning
    model In the proposed investigation, five matrices - accuracy, precision, recall,
    F1-score, and true predictions which previously used by multiple researchers [54,23,55,25,41]
    in their similar studies, are applied to quantify the classification performance
    of the proposed convolutional neural network for the prediction of soil moisture
    class. Mathematically, accuracy, precision, recall, F1-score, and true predictions
    metrics can be expressed by (4), (8), (9), (10). The effectiveness of the model
    for the correct predictions of true positive cases was calculated using Eq. (8).
    The higher the percentage of correct predictions, the more accurate the model
    is in true positive predictions. The true predictions percentage of 100.0% will
    represent the ideal model. (4) (5) (6) (7) (8) where true positive (TPi) are images
    that belong to class i that are classified correctly, false positive (FPi) are
    images that are incorrectly classified as class i, false negative (FNi) are images
    that belong to class i but are incorrectly classified as another class and true
    negative (TNi) are images which does not belong to class i and correctly classified
    as its true class by the classifier. While describing the classification performance
    of a classifier on a test dataset for which the true classes are essentially known,
    a confusion matrix which is an m × m matrix (m is the number of classes) as well
    as receiver operating characteristics (ROC) curve is commonly used. Using the
    Receiver Operating Characteristics (ROC) curve, the discriminating ability of
    a classifier may be visually assessed. It''s determined by plotting a line between
    the true positive rate and the false positive rate. The area under the receiver
    operating characteristic (ROC) curve (AUC) is a statistical measure of the accuracy
    with which an algorithm can differentiate between classes. Hence, in the present
    study, the performance of the developed model was also quantified using these
    criteria. 2.8. Determination of irrigation time through predicted moisture class
    The time required to irrigate agricultural land depends on soil properties, irrigation
    system, crop type, crop root zone, agronomical practices, etc. A relationship
    between irrigation time and dependent variables can be expressed by Eq. (9) [9].
    (9) where, It = Irrigation time, min Id = net irrigation requirement, m Af = area
    of the agricultural field to irrigate, m2 n = number of spraying nozzles q = flow
    rate of each nozzle, m3/min η = irrigation efficiency For the sprinkler irrigation
    system, the irrigation efficiency of 0.75 [10] was considered in the present study
    to calculate irrigation time. The amount of irrigation water required to bring
    the soil moisture level in the effective root zone to field capacity is commonly
    referred to as the net irrigation requirement which was determined by Eq. (10)
    [9] in the present study. (10) where, Id = net irrigation requirement, cm Mfc
    = field capacity moisture content of the soil, % Mb = pre-irrigation moisture
    content of the soil, % A = bulk density of the soil, g/cm3 D = depth of crop root
    zone, cm The developed deep learning model predicts the class of soil moisture,
    whereas pre-irrigation moisture content of soil (Mb) in percent is required as
    shown in Eq. (10). Therefore, in the present study, the mean of the upper and
    lower moisture bounds of the predicted class was taken into account as the soil''s
    pre-irrigation moisture content (Mb) for the calculation of the net irrigation
    requirement, which was then used to estimate the irrigation time in Eq. (9). As
    for green pea crops, more than 75.0% of the root biomass is within 61.0 cm of
    the soil surface [56], therefore, a root zone depth (D) of 61.0 cm was considered
    in the present study. For a given agricultural field, crop, and irrigation system,
    other parameters like soil bulk density, root zone, irrigation efficiency, etc.
    were considered to be invariant during the irrigation time determination. 2.9.
    Development of a mobile application for the prediction of moisture class The deep
    learning model developed to classify the soil moisture was transformed into a
    flat buffer using the TensorFlow Lite [52] converter for an Android application
    that was devised to readily estimate the soil moisture of agriculture fields utilizing
    mobile devices. The TensorFlow Lite model was integrated into the programming
    environment using the [57]. The Java programming language and the Android SDK
    23 [57] were used to develop the Android application. Both the hardware device
    and android-based Virtual Devices were used to test the developed mobile application.
    Subsequently, an Android Package (APK) file for this application was created and
    examined on several Android devices to ensure its functionality. The designed
    mobile application''s graphical user interface is shown in Fig. 5. On the first
    screen, details regarding the area of the agricultural field, number of nozzles,
    the flow rate per nozzle, bulk density of soil, field capacity of the soil, and
    root zone depth needs to be provided, while on subsequent screen a push button
    labeled ‘Load image’ is made available to upload images of soil samples from the
    device''s storage. The application will identify the class of soil sample and
    display it on the screen as shown in Fig. 8 by pressing the ‘Predict’ push button.
    To get the irrigation time, the ‘Irrigation Time’ button available below the ‘Predict’
    button needs to be pressed. Using the ‘Back’ or ‘Exit’ push buttons, a user can
    go to the previous screen or can exit, respectively. In the present study, to
    alleviate the spatial variability in soil moisture content, the average irrigation
    time for ten random locations was considered. Download : Download high-res image
    (276KB) Download : Download full-size image Fig. 5. Graphical user interface of
    the developed mobile application. 2.10. Evaluation of the developed system 2.10.1.
    Evaluation of developed mobile application using in-field soil images To evaluate
    the performance of the developed deep learning-based mobile application in the
    prediction of accurate moisture class, images of in-field soil were captured,
    and moisture classes were predicted using the developed mobile application. From
    the same locations, soil samples were also collected and the moisture content
    of these samples was determined. If the moisture content value lies in-between
    the range of the predicted moisture class, then it was considered a true prediction
    by the model, else it was considered a false prediction. A confusion matrix was
    generated to illustrate and evaluate the performance of the soil moisture classifier.
    The evaluation matrices, accuracy, precision, recall, F1-score, and true predictions
    as given in (4), (8), (9), (10), (11) were used to evaluate the performance of
    the developed mobile application. 2.10.2. Evaluation of developed system based
    on water saved To irrigate the field, based on available moisture content, a developed
    mobile application was used to predict the moisture class of the field under study.
    To decide the irrigation time, in-situ field images of 10 random locations were
    captured using the smartphone and fed to the deep learning-assisted mobile application
    named IrrTime to predict the irrigation time based on soil moisture class. Along
    with soil images, other soil and crop-related details as shown in Fig. 5 were
    also provided to the developed mobile app. For the calculation of the net irrigation
    requirement, the mean of the upper and lower moisture bounds of the predicted
    class was taken as the pre-irrigation moisture content (Mb) of soil, which was
    then used to estimate the irrigation time using Eq. (9). The predicted irrigation
    time for each input image to the CNN model was recorded and an average of these
    ten timing values was considered as the required irrigation time. Additionally,
    using Eq. (1), the theoretical irrigation time required for the conventional sprinkler
    irrigation approach was also calculated. Using the application rate of the sprinkler
    system and the total run time of the system, the theoretical depth of water applied
    was determined. The difference in these two values was considered as the amount
    of water saved. 2.10.3. Evaluation of developed system based on energy saved This
    study also determined energy savings alongside water conservation. In this study,
    energy saving is deemed to be achieved when the proposed irrigation method demonstrates
    a decrease in pump running time as compared to the conventional irrigation method.
    For this, using Eq. (9), the time require to irrigate the field without the prior
    information of moisture class (T1) and with prior information of moisture class
    (T2) was calculated. The difference in these two calculated irrigation times was
    used to determine the saving in energy by using Eq. (11). (11) Where, P = power
    of water pump, kW ΔT = T1-T2, difference in running time of water pump, h 2.10.4.
    Analyzing water productivity of developed vs. conventional irrigation system The
    ratio of crop production to the amount of water used is known as water productivity
    [58] that generally expressed in kg m−3 or kg ha−1 mm−1 [59,60]. In the current
    study, the water productivity of the conventional system and the developed system
    were compared by implementing similar treatments in two different fields. One
    field was irrigated using conventional methods while the other was irrigated using
    the developed system. 3. Results 3.1. Accuracy of the CNN model The proposed CNN
    was trained for 150 epochs using 70% of the soil moisture dataset, and validation
    on 20% of the dataset was carried out while it was being trained. From the remaining
    10% of the soil moisture dataset that was referred to as the test dataset, 25
    images from each class were randomly selected. The images were then classified
    using the trained model to perform an appropriate assessment of the trained CNN
    with a balanced dataset. The ROC curves, together with the area under the curves
    for each class, are depicted in Fig. 6. A score of 0.5 for the area-under-curve
    (AUC) metric shows that the images are being classified randomly by the classifier,
    whereas a value of 1.0 for AUC suggests that the classifier is performing perfectly.
    In each of the classes, the area under the curve (AUC) has a value that is more
    than 0.70, as shown in Fig. 6. As a result, the CNN model that has been developed
    can differentiate between the positive and negative classes with more consistency.
    Download : Download high-res image (287KB) Download : Download full-size image
    Fig. 6. Receiver operating curves (ROC) along with the area under the curve (AUC)
    for the developed model. The confusion matrix is depicted in Fig. 7, and it is
    structured such that each row represents the occurrences that belong to an actual
    class, while each column represents the occurrences that belong to a predicted
    class. It can be determined between which classes the model is confused by doing
    an analysis using a confusion matrix. For instance, out of 24 images that belong
    to C1 class, the CNN model classified 20 images correctly, while four images were
    falsely classified as C2 and C3 classes. Also, four images that belong to C2,
    C3, and C4 classes were misclassified as C1 class. It can be observed from the
    confusion matrix as shown in Fig. 7 that in a few cases, the CNN model falsely
    classified the classes of images with their adjacent classes, which is rather
    evident given that there is sometimes no discernible visual difference between
    such images due to close moisture content. Download : Download high-res image
    (227KB) Download : Download full-size image Fig. 7. Confusion matrix of the developed
    model. Table 4 presents a quantitative analysis of the classification results
    for each class in terms of accuracy, precision, recall, F1-score, and true predictions
    which were achieved using the developed CNN. The findings are shown in terms of
    how well each classification performed. We obtained the highest accuracy, precision,
    recall, F1-score, and true predictions values of 97.50% (for C10), 88.00% (for
    C9 and C10), 88.00% (for C10), 88.00% (for C10), and 78.60% (for C10), respectively.
    The proposed CNN achieved an average classification accuracy of 96.70% (±0.50%),
    with an average precision, recall, and F1-score value of 83.20% (±3.40%), 83.50%
    (±3.0%), and 83.30% (±2.40%), respectively, and an average true prediction value
    of 71.40% (±3.60%). Table 4. Quantitative evaluation of classification results
    obtained using the proposed convolutional neural. Class TP FN FP TN Accuracy,
    % Precision, % Recall, % F1-Score, % True Prediction, % 1 20 4 4 215 96.7 83.3
    83.3 83.3 71.4 2 19 4 4 216 96.7 82.6 82.6 82.6 70.4 3 21 4 5 213 96.3 80.8 84.0
    82.4 70.0 4 21 4 6 212 95.9 77.8 84.0 80.8 67.7 5 18 4 4 217 96.7 81.8 81.8 81.8
    69.2 6 20 3 5 215 96.7 80.0 87.0 83.3 71.4 7 20 6 4 213 95.9 83.3 76.9 80.0 66.7
    8 19 4 3 217 97.1 86.4 82.6 84.4 73.1 9 22 4 3 214 97.1 88.0 84.6 86.3 75.9 10
    22 3 3 215 97.5 88.0 88.0 88.0 78.6 3.2. Accuracy of developed CNN-based mobile
    application using in-field soil images A total of 108 images were captured and
    corresponding classes were predicted using the proposed deep learning-based mobile
    application. Soil moisture classes of the corresponding locations were also determined
    using the gravimetric method. Fig. 8 illustrates the confusion matrix which reveals
    the actual and predicted soil moisture classes. Table 5 presents a quantitative
    analysis of the classification results for each class in terms of accuracy, precision,
    recall, F1-score, and true predictions which were achieved using the developed
    CNN. The findings are shown in terms of how well each classification performed.
    Download : Download high-res image (219KB) Download : Download full-size image
    Fig. 8. Confusion matrix for developed mobile application. Table 5. Quantitative
    evaluation of classification results obtained using the developed mobile application.
    Class TP FN FP TN Accuracy, % Precision, % Recall, % F1-Score, % True Prediction,
    % 1 7 1 2 95 97.1 77.8 87.5 82.4 70.0 2 8 1 2 94 97.1 80.0 88.9 84.2 72.7 3 10
    2 1 92 97.1 90.9 83.3 87.0 76.9 4 11 2 2 90 96.2 84.6 84.6 84.6 73.3 5 7 0 2 96
    98.1 77.8 1.00 87.5 77.8 6 8 2 1 94 97.1 88.9 80.0 84.2 72.7 7 11 2 2 90 96.2
    84.6 84.6 84.6 73.3 8 9 2 1 93 97.1 90.0 81.8 85.7 75.0 9 10 3 1 91 96.2 90.9
    76.9 83.3 71.4 10 9 0 1 95 99.0 90.0 1.00 94.7 90.0 We obtained the highest accuracy,
    precision, recall, F1-score, and true predictions values of 99.0% (for C10), 90.90%
    (for C3, and C9), 100.00% (for C2, C5, and C10), 94.7% (for C10), and 90.0% (for
    C10), respectively. The developed CNN-based mobile application obtained an average
    classification accuracy of 97.1% (±0.90%), and an average precision value of 85.50%
    (±5.40%). It also had an average recall of 86.80% (±7.80%), an F1-score of 85.80%
    (±3.50%), and a true prediction of 75.30% (±5.70%). In comparison to the developed
    CNN model, the standard deviation value for average accuracy, average precision,
    average recall, average F1-score, and average true prediction value get reduced
    by 0.37%, 1.99%, 4.76%, 1.07%, and 2.05%, respectively for the developed mobile
    application. This is because we applied the quantization technique on the developed
    CNN model to reduce its size so that it can be deployed to the mobile. As a result
    of model quantization, model latency, and size get reduced, but one of the primary
    disadvantages of this approach is a slight reduction in accuracy, which is insignificant
    in the present study. 3.3. Amount of water saved During the period of the experimental
    trial, water through sprinkler irrigation was applied for a time duration suggested
    by a developed mobile application in a three-day interval to the green pea crop
    as shown in Fig. 9. During the irrigation period, the average maximum temperature
    and average minimum humidity was 22.45 °C and 53.1%. Download : Download high-res
    image (407KB) Download : Download full-size image Fig. 9. Sprinkler system was
    operated for running time as suggested by the developed system. (A) Capturing
    of in-situ soil images. (B) Operation of sprinkler system for period suggested
    by developed deep-learning based application. (C) Moisture condition of the field
    after completion of irrigation. The theoretical depth of water required for the
    conventional sprinkler irrigation approach comes out to be 2.61 cm for which the
    sprinkler irrigation system should be run for 4.012 h. This value will be used
    to compare the conventional sprinkler irrigation approach against the proposed
    deep learning-assisted sprinkler irrigation approach. The amount of water saved
    between these two approaches is given in Table 6. The amount of water saved was
    found to be 7.2 mm in the proposed approach as compared to the conventional sprinkler
    irrigation approach. In the present study, as shown in Table 6, as high as 27.59%
    of water was saved using the deep learning-based approach of irrigation. In the
    third case, an 8.6 mm depth of extra water was applied against the irrigation
    depth calculated through the conventional approach. This is because, the actual
    crop water requirement in the third case was determined to be 3.47 cm using the
    developed mobile application, while by a conventional method of irrigation, it
    comes out to only 2.61 cm. The crop will be under water stress if irrigation was
    applied based on conventional irrigation timing. Thus, in comparison to the conventional
    sprinkler irrigation method against our proposed system, an extra depth of 8.6
    mm of irrigation water was applied in the third case. Therefore, the negative
    sign in Table 6 indicates the excess amount of water applied with the proposed
    approach as compared to the conventional sprinkler irrigation approach. Table
    6. Comparison of water saved using the developed system. Empty Cell Predicted
    Moisture Class MC at Field Capacity, % (Mfc) Considered pre-irrigation moisture,
    % (Mb) Required Irrigation depth, cm (Id) Depth of water saved, mm Water saved,
    % Prior moisture information C9 31.4 29.00 1.89 7.2† 27.59† C9 31.4 29.00 1.89
    7.2† 27.59† C8 31.4 27.00 3.47 -8.6* -32.95* ⁎ Negative sign indicates more quantity
    applied to crops as compared to the traditional method. †Indicates saving in water.
    3.4. Amount of energy saved In the present study, a single-phase centrifugal-type
    water pump with a power rating of 1.50 kW was used for the sprinkler irrigation
    system. In the conventional sprinkler irrigation method, the water pump needs
    to be run for 4.01 h, energy consumption for which comes out to be 6.02 kWh, as
    calculated using Eq. (11). On comparison between, the conventional sprinkler irrigation
    approach and the approach of sprinkler irrigation proposed in the present study,
    as high as 1.10 h of pump running time was saved which leads to the saving of
    1.65 kWh of electric energy as shown in Table 7. Table 7. Amount of energy saved
    using the developed system. Irrigation Pump running time (It), h Energy consumption,
    kWh Time saved, h Energy saved, kWh Energy saved, % 1 2.91 4.37 1.10 1.65 27.42
    2 2.91 4.37 1.10 1.65 27.42 3 5.34 8.01 -1.33* -1.20* -19.94* ⁎ Indicate excess
    quantity as compared to the conventional sprinkler irrigation approach. Using
    our proposed deep learning-assisted mobile application to suggest irrigation time,
    we were able to save up to 27.42% of energy as compared to the conventional sprinkler
    irrigation approach. As the water requirement decided based on the developed mobile
    application was higher in comparison to conventional sprinkler irrigation timing
    in the third case, therefore, in the third case, the irrigation system was operated
    for more time, so the additional energy (19.94%) was utilized as shown in Table
    7. 3.5. Comparison of water productivity for developed and conventional irrigation
    system In the current study, the productivity of green pea crops was evaluated
    in two fields, one irrigated using a developed irrigation system and the other
    using conventional sprinkler irrigation. The field irrigated using the developed
    system resulted in crop productivity of 2140.0 kg/ha with a total water consumption
    of 310.00 mm depth. On the other hand, the field irrigated with the conventional
    sprinkler irrigation system resulted in a crop productivity of 2033.34 kg/ha while
    consuming 390.0 mm depth of irrigation water. Based on these results, it was found
    that the water productivity of the developed system was 0.69 kg/m3, whereas the
    water productivity of the conventional sprinkler irrigation system was 0.52 kg/m3.
    Therefore, it can be concluded that the implementation of the developed irrigation
    system increased water productivity by 32.75% as compared to the conventional
    sprinkler irrigation system. 4. Discussion 4.1. Discussion on results In a conventional
    sprinkler irrigation system, a sprinkler system is used to operate up to a pre-defined
    time duration which sometimes may lead to under or over-irrigation based on pre-irrigation
    soil moisture content. But this study has presented an alternative approach in
    which a deep learning-assisted mobile application is proposed that will suggest
    the precise irrigation time by analyzing the in-situ soil moisture content of
    the field. As shown in Table 5, true predictions by the developed mobile application
    were greater than 70.0%, moreover, the F1-score for the same was above 82.0% which
    indicated that CNN models can be successfully applied to predict the soil moisture
    classes using in-situ field images. Chen et al. [27] achieved an R2 value as high
    as 0.62 in soil moisture measurement under different measurement conditions using
    visible near-infrared reflectance data as input to the 1D-CNN model, while Hegazi
    et al. [29] attained an R2 value of 0.86 using Sentinel-1 images as input to the
    convolutional neural network. Using past soil moisture, precipitation, and climatic
    measurements as input in Long Short-Term Memory (LSTM) network, Adeyemi et al.
    [32] predict soil moisture with R2 value greater than 0.94. In the present study,
    the major constraint in enhancing the true predictions score of the CNN model
    was the horizontal heterogeneity of soil which is a challenging task to detect
    using RGB images. As proposed in the present study, a smartphone will be used
    to detect the soil moisture class, that''s why RGB images were considered for
    the soil moisture prediction. However, the moisture content of soil depends on
    multiple factors such as texture, structure, organic matter, the density of soil,
    etc. which sometimes confuses the trained CNN model. The present study aimed to
    propose a novel approach to suggest the irrigation time considering the present
    moisture level using deep learning-based models. As can be inferred from Tables
    6 and 7, the present study impressively achieved its aim. Using the proposed deep
    learning approach to predict the irrigation time, as high as 27.59% and 27.42%
    of water and energy, respectively was saved, as shown in Tables 6 and 7. Adeyemi
    et al. [32] developed a dynamic neural network for irrigation scheduling with
    which they achieved water saving above 20.0%. In the present study, using the
    proposed approach, the sprinkler irrigation system is operated for 2.91 h against
    the 4.01 h in the case of the conventional sprinkler irrigation system, which
    results in a time saving of 1.10 h as shown in Table 7. In one test case, the
    amount of water applied and energy consumed increased by 32.95%, and 19.94%, respectively
    against the conventional sprinkler irrigation system, because the crop water requirement
    predicted by mobile application was higher than the requirement determined using
    the conventional sprinkler irrigation method. It was observed that in the present
    study, compared to the conventional sprinkler irrigation system, the implementation
    of the developed irrigation system resulted in a 32.75% increase in water productivity.
    Liao et al. [61] used 70.0% and 90.0% of the field capacity as lower and upper
    limits, respectively during each irrigation to ensure an available soil moisture
    condition. Since the field capacity of the studied area at present was measured
    to be 31.4%, the corresponding lower and upper limits were determined to be 21.98%
    (C6 class) and 28.26% (C9 class), respectively. As a result, it is recommended
    that the growers initiate irrigation when the soil moisture level reaches the
    C6 class threshold and cease irrigation when the moisture level reaches the C9
    class threshold. This approach ensures a more scientific and precise irrigation
    management strategy, promoting efficient water usage and optimizing crop growth
    and productivity. 4.2. Discussion on limitations The present study proved that
    deep learning-assisted mobile applications can be used to precisely determine
    the irrigation time, thus helping in saving water as well as energy. But it has
    certain limitations as discussed below. 1 The true prediction score of our developed
    CNN model lies between 70.0% and 80.0% which needs to be improved. Although, true
    predictions by the CNN model can be improved by increasing the number of images
    and incorporating the complexity in the CNN model that required high computational
    and human resources. The scope of the present study was to establish a novel approach
    to predict the precise irrigation time, and hence further increase in accuracy
    will be considered in future research by the authors. 2 The developed CNN model
    is providing the moisture class and not the exact moisture content of the soil.
    Getting the exact moisture content of soil using the in-situ field images is very
    challenging due to the horizontal heterogeneity of soil such as texture, structure,
    color, organic matter, etc. which results in spatial variability in moisture content.
    3 We developed a proposed mobile application for a field of defined size with
    given soil properties which limits its application to areas similar to that field
    only. To apply it to a broader area, sample images should be collected from different
    areas of varying soil, which will incorporate the generalization in the CNN model
    during its training. 4 The Working of the proposed deep learning-based approach
    depends on user intuition also as a user should capture images that truly depict
    the actual field moisture conditions. 4.3. Discussion on future work In the future,
    we will include soil samples with larger variations in texture, structure, color,
    organic matter, etc. so that the scope of the proposed mobile application can
    be extended from a local field to a larger area. In addition to this, our future
    work would aim to develop such a CNN architecture with which true predictions
    of soil moisture classes get increased while keeping the model size as low as
    possible. 5. Conclusions Traditionally, irrigation time with sprinkler irrigation
    systems was calculated without taking the present soil moisture into account.
    In a few instances, this results in inadequate or excessive irrigation since crop
    water usage is influenced by daily meteorological parameters [62]. In the current
    study, a novel approach to taking current soil moisture into account when determining
    irrigation duration is proposed. To do this, a mobile application integrated with
    deep learning was developed to predict the soil moisture class before irrigation.
    The in-situ soil images have to be captured by the user and provided to the deep
    learning-based mobile application system. The depth-wise separable convolution
    [45] and residual connections [48] were incorporated in the developed CNN architecture
    to enhance classification accuracy and limits its size. The predicted soil moisture
    class, crop parameters, and sprinkler system information were used to calculate
    the irrigation time for the sprinkler irrigation system. The efficacy of the deep
    learning model in predicting the accurate soil moisture class, the decrease in
    energy usage, and the water savings were taken into account to evaluate the proposed
    system. The developed deep learning model successfully classifies the different
    classes of soil moisture, with an average true prediction score of 75.30% and
    a standard deviation of 5.7%. However, the model occasionally produces erroneous
    predictions when the soil sample moisture is near to that of subsequent classes.
    It was observed that our proposed system determines the true irrigation time using
    the predicted soil moisture class, thus, saving 27.59% of water and reducing energy
    usage by 27.42%. In one instance, the traditional irrigation depth was found to
    be less than the required irrigation depth. This discrepancy was addressed using
    this developed system, and so in such cases, the crop yield losses can be reduced
    by supplying adequate water to the crop [33]. Water productivity was improved
    by 32.75% through the use of the developed irrigation system in comparison to
    the conventional sprinkler irrigation system. Thus, the proposed deep learning-based
    system for the determination of true irrigation time for sprinkler systems shows
    a high potential to save water, reduce energy consumption, and increase crop yield.
    Therefore, the novel approach proposed in the present study can be used to determine
    the exact irrigation time based on the current moisture content of the soil with
    a greater generalized deep learning-based model on a large soil image dataset.
    Declaration of Competing Interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. Acknowledgments The authors are
    thankful to the ICAR-AICRP on PEASEM, Ludhiana, India, and ICAR RC for NEH Region,
    Umiam, Meghalaya, India for providing the necessary facilities for conducting
    the study. Data availability Data will be made available on request. References
    [1] H. Yan, X. Hui, M. Li, Y. Xu Development in sprinkler irrigation technology
    in China Irrig. Drain., 69 (2020), pp. 75-87, 10.1002/ird.2435 View in ScopusGoogle
    Scholar [2] M.S. Al-Jamal, S. Ball, T.W. Sammis Comparison of sprinkler, trickle
    and furrow irrigation efficiencies for onion production Agric. Water Manag., 46
    (2001), pp. 253-266, 10.1016/S0378-3774(00)00089-5 View PDFView articleView in
    ScopusGoogle Scholar [3] M.A. Mattar, D.K. Roy, H.M. Al-Ghobari, A.Z. Dewidar
    Machine learning and regression-based techniques for predicting sprinkler irrigation''s
    wind drift and evaporation losses Agric. Water Manag., 265 (2022), Article 107529,
    10.1016/j.agwat.2022.107529 View PDFView articleView in ScopusGoogle Scholar [4]
    G. Fei, C. Fu, Y. Xiaoguang Effects of Sprinkle Irrigation on Water Use of Winter
    Wheat Zhongguo Nongye Daxue Xuebao, China (2001) Google Scholar [5] J. Li, Z.
    Zhang, Y. Liu, C. Yao, W. Song, X. Xu, M. Zhang, X. Zhou, Y. Gao, Z. Wang, Z.
    Sun, Y. Zhang Effects of micro-sprinkling with different irrigation amount on
    grain yield and water use efficiency of winter wheat in the North China Plain
    Agric. Water Manag., 224 (2019), Article 105736, 10.1016/j.agwat.2019.105736 View
    PDFView articleView in ScopusGoogle Scholar [6] H.J. Liu, Y. Kang, S.M. Yao, Z.Q.
    Sun, S.P. Liu, Q.G. Wang Field evaluation on water productivity of winter wheat
    under sprinkler or surface irrigation in the North China Plain Irrig. Drain.,
    62 (2013), pp. 37-49, 10.1002/ird.1712 View in ScopusGoogle Scholar [7] X. Feng,
    H. Liu, D. Feng, X. Tang, L. Li, J. Chang, J. Tanny, R. Liu Quantifying winter
    wheat evapotranspiration and crop coefficients under sprinkler irrigation using
    eddy covariance technology in the North China Plain Agric. Water Manag., 277 (2023),
    Article 108131, 10.1016/j.agwat.2022.108131 View PDFView articleView in ScopusGoogle
    Scholar [8] Chand, S., Kishore, P., Kumar, S., Srivastava, S.K., 2020. Potential,
    adoption and impact of micro irrigation in Indian agriculture. Policy Paper -
    National Centre for Agricultural Economics and Policy Research. Google Scholar
    [9] A.M. Michael Irrigation Theory and Practice-2nd Edition: Theory and Practice
    Vikas publishing house (2009) Google Scholar [10] J.R. Gilley, D.G. Watts, W.
    Lockeretz Energy reduction through improved irrigation practices Agriculture and
    Energy, Academic Press (1977), pp. 187-203, 10.1016/B978-0-12-454250-1.50019-8
    View PDFView articleGoogle Scholar [11] M.M. Al-Kaisi, I. Broner Crop Water Use
    and Growth Stages Colorado State University Extension, Fort Collins, CO, USA (2009)
    Google Scholar [12] J.T. Ritchie, B. Basso Water use efficiency is not constant
    when crop water supply is adequate or fixed: the role of agronomic management
    Eur. J. Agron., 28 (2008), pp. 273-281, 10.1016/j.eja.2007.08.003 View PDFView
    articleView in ScopusGoogle Scholar [13] M.B. Kirkham Water Use Efficiency, In:
    Encyclopedia of Soils in the Environment Elsevier (2005), pp. 315-322, 10.1016/B0-12-348530-4/00441-0
    View PDFView articleGoogle Scholar [14] R.J. Lascano A general system to measure
    and calculate daily crop water use Agron. J., 92 (2000), pp. 821-832, 10.2134/agronj2000.925821x
    View in ScopusGoogle Scholar [15] B. Cardenas-Lailhacar, M.D. Dukes Precision
    of soil moisture sensor irrigation controllers under field conditions Agric. Water
    Manag., 97 (2010), pp. 666-672, 10.1016/j.agwat.2009.12.009 View PDFView articleView
    in ScopusGoogle Scholar [16] K.X. Soulis, S. Elmaloglou, N. Dercas Investigating
    the effects of soil moisture sensors positioning and accuracy on soil moisture
    based drip irrigation scheduling systems Agric. Water Manag., 148 (2015), pp.
    258-268, 10.1016/j.agwat.2014.10.015 View PDFView articleView in ScopusGoogle
    Scholar [17] T. Kanso, M.C. Gromaire, D. Ramier, P. Dubois, G. Chebbo An investigation
    of the accuracy of EC5 and 5TE capacitance sensors for soil moisture monitoring
    in urban soils-laboratory and field calibration Sensors, 20 (2020), p. 6510, 10.3390/s20226510
    Google Scholar [18] I.M. Kulmány, Á. Bede-Fazekas, A. Beslin, Z. Giczi, G. Milics,
    B. Kovács, M. Kovács, B. Ambrus, L. Bede, V. Vona Calibration of an Arduino-based
    low-cost capacitive soil moisture sensor for smart agriculture J. Hydrol. Hydromech.,
    70 (2022), pp. 330-340, 10.2478/johh-2022-0014 View in ScopusGoogle Scholar [19]
    S. Adla, N.K. Rai, S.H. Karumanchi, S. Tripathi, M. Disse, S. Pande Laboratory
    calibration and performance evaluation of low-cost capacitive and very low-cost
    resistive soil moisture sensors Sensors, 20 (2020), p. 363, 10.3390/s20020363
    View in ScopusGoogle Scholar [20] P. Alirezazadeh, F. Rahimi-Ajdadi, Y. Abbaspour-Gilandeh,
    N. Landwehr, H. Tavakoli Improved digital image-based assessment of soil aggregate
    size by applying convolutional neural networks Comput. Electron. Agric., 191 (2021),
    Article 106499, 10.1016/j.compag.2021.106499 View PDFView articleView in ScopusGoogle
    Scholar [21] A. Azizi, Y.A. Gilandeh, T. Mesri-Gundoshmian, A.A. Saleh-Bigdeli,
    H.A. Moghaddam Classification of soil aggregates: a novel approach based on deep
    learning Soil Tillage Res., 199 (2020), Article 104586, 10.1016/j.still.2020.104586
    View PDFView articleView in ScopusGoogle Scholar [22] A. Beucher, C.B. Rasmussen,
    T.B. Moeslund, M.H. Greve Interpretation of convolutional neural networks for
    acid sulfate soil classification Front. Environ. Sci., 9 (2022), Article 809995,
    10.3389/fenvs.2021.809995 View in ScopusGoogle Scholar [23] H. Channareddy, P.
    Barnala, M. durga, Kandukuri, S. Kuchibhotla Classification of soil types using
    convolution neural network Proceedings of the 4th International Conference on
    Materials Engineering & Science: Insight on the Current Research in Materials
    Engineering and Science, Iraq, Duhok, Kurdistan Region (2022), Article 020046,
    10.1063/5.0112044 View in ScopusGoogle Scholar [24] K. Chatterjee, M.S. Obaidat,
    D. Samanta, B. Sadoun, S.H. Islam, R. Chatterjee Classification of soil images
    using convolution neural networks Proceedings of the International Conference
    on Communications, Computing, Cybersecurity, and Informatics (CCCI), Beijing,
    China, IEEE (2021), pp. 1-5, 10.1109/CCCI52664.2021.9583192 Proceedings of the
    2021 International Conference on Communications, Computing, Cybersecurity, and
    Informatics (CCCI) Google Scholar [25] M.G. Lanjewar, O.L. Gurav Convolutional
    Neural Networks based classifications of soil images Multimed. Tools Appl., 81
    (2022), pp. 10313-10336, 10.1007/s11042-022-12200-y View in ScopusGoogle Scholar
    [26] L. Zhong, X. Guo, Z. Xu, M. Ding Soil properties: Their prediction and feature
    extraction from the LUCAS spectral library using deep convolutional neural networks
    Geoderma, 402 (2021), Article 115366, 10.1016/j.geoderma.2021.115366 View PDFView
    articleView in ScopusGoogle Scholar [27] Y. Chen, L. Li, M. Whiting, F. Chen,
    Z. Sun, K. Song, Q. Wang Convolutional neural network model for soil moisture
    prediction and its transferability analysis based on laboratory Vis-NIR spectral
    data Int. J. Appl. Earth Obs. Geoinf., 104 (2021), Article 102550, 10.1016/j.jag.2021.102550
    View PDFView articleView in ScopusGoogle Scholar [28] L. Ge, R. Hang, Y. Liu,
    Q. Liu Comparing the performance of neural network and deep convolutional neural
    network in estimating soil moisture from satellite observations Remote Sens.,
    10 (2018), p. 1327, 10.3390/rs10091327 View in ScopusGoogle Scholar [29] E.H.
    Hegazi, L. Yang, J. Huang A convolutional neural network algorithm for soil moisture
    prediction from sentinel-1 SAR images Remote Sens., 13 (2021), p. 4964, 10.3390/rs13244964
    View in ScopusGoogle Scholar [30] M.G. Seo, H.S. Shin, A. Tsourdos Soil moisture
    retrieval from airborne multispectral and infrared images using convolutional
    neural network IFAC PapersOnLine 21st IFAC World Cong., 53 (2020), pp. 15852-15857,
    10.1016/j.ifacol.2020.12.240 View PDFView articleView in ScopusGoogle Scholar
    [31] R. Sobayo, H.H. Wu, R. Ray, L. Qian Integration of convolutional neural network
    and thermal images into soil moisture estimation Proceedings of the 1st International
    Conference on Data Intelligence and Security (ICDIS) (2018), pp. 207-210, 10.1109/ICDIS.2018.00041
    Presented at the 2018 1st International Conference on Data Intelligence and Security
    (ICDIS) View in ScopusGoogle Scholar [32] O. Adeyemi, I. Grove, S. Peets, Y. Domun,
    T. Norton Dynamic neural network modelling of soil moisture content for predictive
    irrigation scheduling Sensors, 18 (2018), p. 3408, 10.3390/s18103408 View in ScopusGoogle
    Scholar [33] S. Irmak, L. Odhiambo, W.L. Kranz, D. Eisenhauer Irrigation efficiency
    and uniformity, and crop water use efficiency Biol. Syst. Eng. Pap. Publ. (2011)
    Google Scholar [34] L.S. Kanta, I. Bhupenchandra, S.R. Devi Assessment of crop
    water requirement of field pea (Pisum sativum L.) in foothills valley areas of
    Manipur, North East India J. Agrometeorol., 23 (2021), pp. 306-309, 10.54386/jam.v23i3.34
    Google Scholar [35] K.V. Ramana Rao, S. Gangwar, A. Bajpai, R. Keshri, L. Chourasia,
    K. Soni Performance of pea under different irrigation systems LR (2016), 10.18805/lr.v0iOF.4482
    Google Scholar [36] D.K. Cassel, D.R. Nielsen, A. Klute Field capacity and available
    water capacity SSSA Book Series. Soil Science Society of America, American Society
    of Agronomy, Madison, WI, USA (2018), pp. 901-926, 10.2136/sssabookser5.1.2ed.c36
    View in ScopusGoogle Scholar [37] R.K. Sidhu, R. Kumar, P.S. Rana, M.L. Jat Automation
    in drip irrigation for enhancing water use efficiency in cereal systems of South
    Asia: status and prospects Advances in Agronomy, Elsevier (2021), pp. 247-300,
    10.1016/bs.agron.2021.01.002 View PDFView articleView in ScopusGoogle Scholar
    [38] B. Zoph, E.D. Cubuk, G. Ghiasi, T.Y. Lin, J. Shlens, Q.V. Le, Learning data
    augmentation strategies for object detection (2019). https://doi.org/10.48550/arXiv.1906.11172.
    Google Scholar [39] A. Azizi, Y. Abbaspour-Gilandeh, E. Vannier, R. Dusséaux,
    T. Mseri-Gundoshmian, H.A. Moghaddam Semantic segmentation: a modern approach
    for identifying soil clods in precision farming Biosyst. Eng., 196 (2020), pp.
    172-182, 10.1016/j.biosystemseng.2020.05.022 View PDFView articleView in ScopusGoogle
    Scholar [40] C. Chen, B. Li, J. Liu, T. Bao, N. Ren Monocular positioning of sweet
    peppers: an instance segmentation approach for harvest robots Biosyst. Eng., 196
    (2020), pp. 15-28, 10.1016/j.biosystemseng.2020.05.005 View PDFView articleGoogle
    Scholar [41] N. Singh, V.K. Tewari, P.K. Biswas, L.K. Dhruw, C.M. Pareek, H.D.
    Singh Semantic segmentation of in-field cotton bolls from the sky using deep convolutional
    neural networks Smart Agric. Technol., 2 (2022), Article 100045, 10.1016/j.atech.2022.100045
    View PDFView articleView in ScopusGoogle Scholar [42] K. Zou, X. Chen, Y. Wang,
    C. Zhang, F. Zhang A modified U-Net with a specific data argumentation method
    for semantic segmentation of weed images in the field Comput. Electron. Agric.,
    187 (2021), Article 106242, 10.1016/j.compag.2021.106242 View PDFView articleView
    in ScopusGoogle Scholar [43] L. Alzubaidi, J. Zhang, A.J. Humaidi, A. Al-Dujaili,
    Y. Duan, O. Al-Shamma, J. Santamaría, M.A. Fadhel, M. Al-Amidie, L. Farhan Review
    of deep learning: concepts, CNN architectures, challenges, applications, future
    directions J. Big Data, 8 (2021), p. 53, 10.1186/s40537-021-00444-8 View in ScopusGoogle
    Scholar [44] G. Habib, S. Qureshi Optimization and acceleration of convolutional
    neural networks: a survey J. King Saud Univ. Comput. Inf. Sci., 34 (2022), pp.
    4244-4268, 10.1016/j.jksuci.2020.10.004 View PDFView articleView in ScopusGoogle
    Scholar [45] A.G. Howard, M. Zhu, B. Chen, D. Kalenichenko, W. Wang, T. Weyand,
    M. Andreetto, H. Adam, MobileNets: Efficient convolutional neural networks for
    mobile vision applications (2017). https://doi.org/10.48550/arXiv.1704.04861.
    Google Scholar [46] R. Yamashita, M. Nishio, R.K.G. Do, K. Togashi Convolutional
    neural networks: an overview and application in radiology Insights Imaging, 9
    (2018), pp. 611-629, 10.1007/s13244-018-0639-9 View in ScopusGoogle Scholar [47]
    K. Simonyan, A. Zisserman, Very deep convolutional networks for large-scale image
    recognition (2015). https://doi.org/10.48550/arXiv.1409.1556. Google Scholar [48]
    K. He, X. Zhang, S. Ren, J. Sun, Deep residual learning for image recognition
    (2015). https://doi.org/10.48550/arXiv.1512.03385. Google Scholar [49] X. Glorot,
    A. Bordes, Y. Bengio Deep sparse rectifier neural networks Proceedings of the
    14th International Conference on Artificial Intelligence and Statistics (2011),
    pp. 315-323 Presented at the Proceedings of the Fourteenth International Conference
    on Artificial Intelligence and Statistics, JMLR Workshop and Conference Proceedings
    View in ScopusGoogle Scholar [50] D.P. Kingma, J. Ba, Adam: a method for stochastic
    optimization, 2017. https://doi.org/10.48550/arXiv.1412.6980. Google Scholar [51]
    Chollet, F., 2015. Keras.GitHub. Retrieved from https://github.com/fchollet/keras.
    Google Scholar [52] TensorFlow Developers, 2021. TensorFlow. 10.5281/ZENODO.4724125.
    Google Scholar [53] Google Colaboratory, 2021. Google colaboratory [WWW document
    URL https://colab.research.google.com/notebooks/basic_features_overview.ipynb
    (accessed 11.14.21). Google Scholar [54] A.N. Alves, W.S.R. Souza, D.L. Borges
    Cotton pests classification in field-based images using deep residual networks
    Comput. Electron. Agric., 174 (2020), Article 105488, 10.1016/j.compag.2020.105488
    View PDFView articleView in ScopusGoogle Scholar [55] M. Dyrmann, H. Karstoft,
    H.S. Midtiby Plant species classification using deep convolutional neural network
    Biosyst. Eng., 151 (2016), pp. 72-80, 10.1016/j.biosystemseng.2016.08.024 View
    PDFView articleView in ScopusGoogle Scholar [56] Endres, G., Kandel, H., 2021.
    Field Pea Production [WWW Document]. NDSU agriculture and extension. URL https://www.ag.ndsu.edu:8000/agriculture/ag-hub/publications/field-pea-production
    (accessed 2.22.23). Google Scholar [57] Android Studio and SDK tools [WWW Document],
    2022. Android developers. URL https://developer.android.com/studio (accessed 4.10.22).
    Google Scholar [58] D. Molden, T. Oweis, P. Steduto, P. Bindraban, M.A. Hanjra,
    J. Kijne Improving agricultural water productivity: between optimism and caution
    Agric. Water Manag., 97 (2010), pp. 528-535, 10.1016/j.agwat.2009.03.023 View
    PDFView articleView in ScopusGoogle Scholar [59] P. Paredes, L.S. Pereira, G.C.
    Rodrigues, N. Botelho, M.O. Torres Using the FAO dual crop coefficient approach
    to model water use and productivity of processing pea (Pisum sativum L.) as influenced
    by irrigation strategies Agric. Water Manag., 189 (2017), pp. 5-18, 10.1016/j.agwat.2017.04.010
    View PDFView articleView in ScopusGoogle Scholar [60] L.I.P. Ray, K. Swetha, A.K.
    Singh, N.J. Singh Water productivity of major pulses – a review Agric. Water Manag.,
    281 (2023), Article 108249, 10.1016/j.agwat.2023.108249 View PDFView articleView
    in ScopusGoogle Scholar [61] R. Liao, S. Zhang, X. Zhang, M. Wang, H. Wu, L. Zhangzhong
    Development of smart irrigation systems based on real-time soil moisture data
    in a greenhouse: proof of concept Agric. Water Manag., 245 (2021), Article 106632,
    10.1016/j.agwat.2020.106632 View PDFView articleView in ScopusGoogle Scholar [62]
    D.H. Rogers, J. Aguilar, I. Kisekka, P.L. Barnes, F.R. Lamm Agricultural Crop
    Water Use Kansas State University, Agricultural Experiment Station and Cooperative
    (2015) Google Scholar Cited by (3) Long-term low carbon strategy of Morocco: A
    review of future scenarios and energy measures 2024, Results in Engineering Show
    abstract Detection of explosives in dustbins using deep transfer learning based
    multiclass classifiers 2024, Applied Intelligence Salinization of irrigated agricultural
    lands in the Altai Territory 2023, Sustainable Development of Mountain Territories
    © 2023 The Authors. Published by Elsevier B.V. Recommended articles Improved frost
    forecast using machine learning methods Artificial Intelligence in Geosciences,
    Volume 4, 2023, pp. 164-181 José Roberto Rozante, …, Gabriela Rozante View PDF
    Developing an extreme learning machine based approach to weed segmentation in
    pastures Smart Agricultural Technology, Volume 5, 2023, Article 100288 Jonathan
    Ford, …, David Paul View PDF Secured telemetry based on time-variant sensing matrix
    – An empirical study of spectroscopic profiling Smart Agricultural Technology,
    Volume 5, 2023, Article 100268 Yinsheng Zhang, Menglei Liu View PDF Show 3 more
    articles Article Metrics Citations Citation Indexes: 2 Captures Readers: 32 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Smart Agricultural Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Optimization of irrigation timing for sprinkler irrigation system using convolutional
    neural network-based mobile application for sustainable agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Raouhi E.M.
  - Zouizza M.
  - Lachgar M.
  - Zouani Y.
  - Hrimech H.
  - Kartit A.
  citation_count: '0'
  description: In recent years, precision agriculture has gained significant attention
    as a result of the rising demand for food and water by the world population and
    the increasing impact of climate change. This highlights the need for innovative
    solutions to address this critical challenge. Farmers are facing a shortage of
    water and fertile land, which demands a new approach to their work. Intelligent
    irrigation is crucial to improve yields and maximize the use of resources. Various
    machine learning-based irrigation models have been proposed to minimize water
    wastage. This paper introduces AIDSII, an AI-powered digital application that
    leverages IoT-based precision agriculture and CNN-LSTM models. It offers a comprehensive
    feedback system through mobile and web technologies, enabling farmers to automate,
    optimize, and streamline their irrigation processes.
  doi: 10.1016/j.simpa.2023.100574
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. System description 3.
    Impact overview 4. Limitations and future work 5. Conclusion Declaration of competing
    interest Appendix A. Supplementary data References Show full outline Cited by
    (1) Figures (1) Tables (1) Table Extras (2) Download all Video S1 Video S2 Software
    Impacts Volume 17, September 2023, 100574 Original software publication AIDSII:
    An AI-based digital system for intelligent irrigation Author links open overlay
    panel El Mehdi Raouhi a, Mohamed Zouizza b, Mohamed Lachgar a, Younes Zouani c,
    Hamid Hrimech d, Ali Kartit a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.simpa.2023.100574
    Get rights and content Under a Creative Commons license open access Highlights
    • AIDSII is a cutting-edge digital system that leverages artificial intelligence
    (AI) to optimize irrigation processes. • The system utilizes artificial intelligence
    (AI) for the analysis of environmental, soil, weather, and crop data. • AIDSII
    provides real-time monitoring of key irrigation parameters, allowing farmers to
    enhance their irrigation operations. • AIDSII aids in conserving water resources
    by minimizing needless water consumption and reducing wastage. • The functionalities
    of AIDSII boost both crop productivity and quality while promoting sustainable
    agricultural practices. Abstract In recent years, precision agriculture has gained
    significant attention as a result of the rising demand for food and water by the
    world population and the increasing impact of climate change. This highlights
    the need for innovative solutions to address this critical challenge. Farmers
    are facing a shortage of water and fertile land, which demands a new approach
    to their work. Intelligent irrigation is crucial to improve yields and maximize
    the use of resources. Various machine learning-based irrigation models have been
    proposed to minimize water wastage. This paper introduces AIDSII, an AI-powered
    digital application that leverages IoT-based precision agriculture and CNN-LSTM
    models. It offers a comprehensive feedback system through mobile and web technologies,
    enabling farmers to automate, optimize, and streamline their irrigation processes.
    Previous article in issue Next article in issue Keywords IrrigationMobileWebConvolutional
    neural networkLong Short-Term Memory Code metadata Current code version V1 Permanent
    link to code/repository used for this code version https://github.com/SoftwareImpacts/SIMPAC-2023-296
    Code versioning system used Git (used to track changes and collaborate on code
    development) Software code languages, tools and services used Java, HTML, CSS,
    JS, Spring Boot, Spring Security, Thymeleaf, Bootstrap, JQuery, Android, C, MySql
    Compilation requirements, operating environments and dependencies Java 9 or higher,
    Java compiler version, Spring Framework, Maven, Java Development Kit If available,
    link to developer documentation https://github.com/raouhi/smart_wateringmaster/README.md
    Support email for questions raouhi@gmail.com lachgar.m@gmail.com 1. Introduction
    The Internet of Things (IoT) refers to the growing network of physical devices,
    vehicles, home appliances, and other objects that are embedded with electronics,
    software, sensors, and connectivity which enables these objects to collect and
    exchange data [1]. IoT technology allows these objects to be connected and controlled
    remotely, enabling a new level of automation and control in various industries
    and aspects of daily life. In the context of IoT, devices and objects can be equipped
    with sensors that collect data on things like temperature, humidity, and motion,
    and then send that data over the internet to be analyzed and used for various
    purposes. This data can be used to trigger automated actions, such as turning
    on a light when someone enters a room, or to provide valuable insights for businesses
    and individuals, such as tracking the usage patterns of a piece of equipment [2],
    [3], [4]. The potential applications of IoT are vast and span across multiple
    industries, including agriculture, healthcare, manufacturing, transportation,
    and energy, among others. In agriculture, for example, IoT can be used to monitor
    soil moisture levels, track the health of crops, and manage irrigation systems.
    In the healthcare industry, IoT devices can be used to monitor vital signs and
    provide real-time health data to medical professionals. Overall, the IoT is transforming
    the way that people live, work, and interact with the world around them, providing
    new levels of automation and control that were previously not possible [5], [6],
    [7], [8], [9]. Water is one of the most essential resources for all forms of life,
    as well as for human activities such as agriculture, industry, and daily life.
    It is a finite resource, and access to clean, safe water is becoming increasingly
    important as populations grow and demands on water resources increase. Intelligent
    irrigation refers to the use of advanced technologies and techniques to manage
    and optimize the watering of crops or plants [10]. This can include using sensors
    to monitor soil moisture levels, weather forecasts to predict precipitation, and
    automatic control systems to regulate the amount and timing of water applied to
    the plants. The goal of intelligent irrigation is to maximize crop yields while
    minimizing water waste, energy use, and other resources. Some of the benefits
    of intelligent irrigation systems include improved crop health, reduced water
    usage, and cost savings on energy and water bills. By using real-time data to
    inform irrigation decisions, these systems can also help reduce the risk of water
    scarcity and environmental degradation associated with traditional irrigation
    methods [11]. There are many different types of intelligent irrigation systems
    available, ranging from simple timers and controllers to more advanced systems
    that use artificial intelligence to make irrigation decisions. Regardless of the
    type of system used, the key to successful intelligent irrigation is to carefully
    analyze the unique needs of each individual crop and to adjust the system accordingly
    [12]. Download : Download high-res image (651KB) Download : Download full-size
    image Fig. 1. High level architecture: AI-based digital application for intelligent
    irrigation. In this paper, we delve into the implementation details of this software
    and examine its tangible impact in the real world. Our primary focus centers around
    elucidating the design concepts of the software architecture and providing intricate
    insights into the engineering considerations involved and exploring the profound
    effects it has on agricultural practices. 2. System description 2.1. Software
    architecture This section provides a comprehensive description of the software,
    including its components and layers: Application layer, Intelligence layer, and
    Hardware layer. The architecture of the AI-based digital system for intelligent
    irrigation, which encompasses both hardware and Artificial Intelligence (AI) components,
    is depicted in Fig. 1. 3. Impact overview The AIDSII system primarily focuses
    on enhancing irrigation practices. However, the implemented source code can be
    extended to support various other applications [13]. The main concept of this
    software is to optimize water distribution by targeting specific areas and employing
    advanced techniques for efficient irrigation. The versatility of our system allows
    for the implementation of additional features, such as soil moisture monitoring
    and crop yield prediction. Users can then retrain our model accordingly. The resulting
    model can be tested using specific irrigation zones, such as fields or individual
    plants, to generate optimized irrigation plans. Therefore, it can also be used
    to support farmers in making informed decisions and maximizing crop productivity.
    This would facilitate better understanding and discussion of irrigation practices
    among stakeholders. In continuation of the work undertaken for the implementation
    of an integrated system for a smart farm [14], specifically for olive crops, the
    AI-powered irrigation system revolutionizes farming practices by providing farmers
    with real-time data analysis and predictive insights to optimize crop production
    and conserve water resources. Through advanced algorithms, the app enables precise
    water management by considering factors such as soil moisture levels, weather
    conditions, and crop requirements, resulting in optimal irrigation schedules and
    minimized water wastage. Additionally, the app offers smart water allocation,
    proactive monitoring with alerts, and historical analysis for informed decision-making.
    By empowering farmers with intelligent tools, the app facilitates sustainable
    agriculture practices, maximizing crop yields while minimizing the environmental
    impact of irrigation. 4. Limitations and future work Nonetheless, it is essential
    to recognize specific limitations within the AIDSII system. The effectiveness
    of the AI model relies heavily on the quality and precision of sensor input data;
    potential inaccuracies could result in suboptimal irrigation choices. Furthermore,
    despite providing room for additional features, the system’s implementation might
    pose a challenge for users who are less familiar with AI. To address these concerns,
    future research could concentrate on refining AI algorithms to adeptly handle
    noisy or incomplete data, enhancing the user interface for intuitive ease-of-use
    and improved accessibility, and exploring the integration of AI-powered pest and
    disease prediction models for a comprehensive agricultural management solution.
    By effectively addressing these constraints and remaining committed to these anticipated
    advancements, the AIDSII system holds the potential to evolve into an even more
    resilient and indispensable tool within the precision agriculture domain. 5. Conclusion
    In this study, a smart irrigation system based on the CNN-LSTM model is proposed.
    It aims to address the key requirements of agricultural irrigation, such as water
    supply and irrigation timing, by controlling the irrigation scheduling function.
    The proposed system was validated through tests utilizing various environmental
    factors like temperature and humidity collected from sensors. The AIDSII, an AI-based
    digital system for intelligent irrigation, has been developed using the CNN-LSTM
    model. This application is well-suited for classifying, processing, and making
    predictions from data obtained from IoT sensors. In future research, the aim is
    to design predictive irrigation schedules that can predict rainfall depth and
    soil moisture, resulting in better water storage by enhancing rainfall depth.
    Declaration of competing interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. Appendix A. Supplementary data Download
    all supplementary files included with this article What’s this? The following
    is the Supplementary material related to this article. Play Restart Rewind Forward
    Slower Faster Preferences Enter full screen 0:00 / 0:45 Speed: 1x Stopped Download
    : Download video (7MB) Video S1. . Play Restart Rewind Forward Slower Faster Preferences
    Enter full screen 0:00 / 1:54 Speed: 1x Stopped Download : Download video (12MB)
    Video S2. . References [1] Saiz-Rubio V., Rovira-Más F. From smart farming towards
    agriculture 5.0: A review on crop data management Agronomy, 10 (2020), 10.3390/agronomy10020207
    Google Scholar [2] Boursianis A.D., Papadopoulou M.S., Gotsis A., Wan S., Sarigiannidis
    P., Nikolaidis S., Goudos S.K. Smart irrigation system for precision agriculture
    - the AREThOU5A IoT platform IEEE Sens. J., 21 (2021), pp. 17539-17547, 10.1109/JSEN.2020.3033526
    View in ScopusGoogle Scholar [3] Bhattacharya M., Roy A., Pal J. Smart Irrigation
    System using Internet of Things Springer Singapore (2021), 10.1007/978-981-15-6198-6_11
    Google Scholar [4] AngelinBlessy J., Kumar A. Smart irrigation system techniques
    using artificial intelligence and IoT Proc. 3rd Int. Conf. Intell. Commun. Technol.
    Virtual Mob. Networks, ICICV 2021 (2021), pp. 1355-1359, 10.1109/ICICV50876.2021.9388444
    View in ScopusGoogle Scholar [5] Loua L.R., Budihardjo M.A., Sudarno S. A review
    on a machine learning approach of an intelligent irrigation monitoring system
    with edge computing and the internet of things IOP Conf. Ser. Earth Environ. Sci.,
    896 (2021), pp. 0-9, 10.1088/1755-1315/896/1/012029 Google Scholar [6] Karar M.E.,
    Alotaibi F., Al Rasheed A., Reyad O. A pilot study of smart agricultural irrigation
    using unmanned aerial vehicles and IoT-based cloud system Inf. Sci. Lett., 10
    (2021), pp. 131-140, 10.18576/isl/100115 View in ScopusGoogle Scholar [7] Jha
    K., Doshi A., Patel P. Intelligent irrigation system using artificial intelligence
    and machine learning: A comprehensive review Int. J. Adv. Res., 6 (2018), pp.
    1493-1502, 10.21474/ijar01/7959 Google Scholar [8] Oruma S.O., Misra S., Fernandez-Sanz
    L. Agriculture 4.0: An implementation framework for food security attainment in
    Nigeria’s post-Covid-19 era IEEE Access, 9 (2021), pp. 83592-83627, 10.1109/ACCESS.2021.3086453
    View in ScopusGoogle Scholar [9] Street F. a Dvancing I Nstitutional T Ransformation
    for M Inority W Omen in a Cademia (2011), pp. 20-25 October Google Scholar [10]
    Rawal S. IOT based smart irrigation system IOT based smart irrigation system (2019),
    10.5120/ijca2017913001 Google Scholar [11] Munir M.S., Bajwa I.S., Ashraf A.,
    Anwar W., Rashid R. Intelligent and smart irrigation system using edge computing
    and IoT Complexity, 2021 (2021), 10.1155/2021/6691571 Google Scholar [12] Jha
    K., Doshi A., Patel P. Intelligent irrigation system using artificial intelligence
    and machine learning: A comprehensive review Int. J. Adv. Res., 6 (2018), pp.
    1493-1502, 10.21474/ijar01/7959 Google Scholar [13] Yang X., et al. A survey on
    smart agriculture: Development modes, technologies, and security and privacy challenges
    IEEE/CAA J. Autom. Sin., 8 (2) (2021), pp. 273-302, 10.1109/JAS.2020.1003536 View
    in ScopusGoogle Scholar [14] Raouhi E.M., Lachgar M., Hrimech H., Kartit A. Optimization
    techniques in deep convolutional neuronal networks applied to olive diseases classification
    Artif. Intell. Agric., 6 (2022), pp. 77-89, 10.1016/j.aiia.2022.06.001 View PDFView
    articleView in ScopusGoogle Scholar Cited by (1) Latest Trends and Challenges
    in Digital Agriculture for Crop Production 2023, SSRN © 2023 The Authors. Published
    by Elsevier B.V. Recommended articles The Inverse Transparency Toolchain: A Fully
    Integrated and Quickly Deployable Data Usage Logging Infrastructure Software Impacts,
    Volume 17, 2023, Article 100554 Valentin Zieglmeier View PDF SOM-QE ANALYSIS:
    A biologically inspired technique to detect and track meaningful changes within
    image regions Software Impacts, Volume 17, 2023, Article 100568 John Mwangi Wandeto,
    Birgitta Dresp-Langley View PDF Unknown Building Exploration Simulator (UBES)
    Software Impacts, Volume 18, 2023, Article 100576 Christopher Allred, …, Mario
    Harper View PDF Show 3 more articles Article Metrics Captures Readers: 17 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Software Impacts
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'AIDSII: An AI-based digital system for intelligent irrigation'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Li Z.
  - Chen Z.
  - Cheng Q.
  - Fei S.
  - Zhou X.
  citation_count: '3'
  description: Timely and accurate monitoring of winter wheat yields is beneficial
    for the macro-guidance of agricultural production and for making precise management
    decisions throughout the winter wheat reproductive period. The accuracy of crop
    yield prediction can be improved by combining unmanned aerial vehicle (UAV)-based
    multispectral data with deep learning algorithms. In this study, 16 yield-sensitive
    vegetation indices were constructed, and their correlations were analyzed based
    on UAV multispectral data of winter wheat at the heading, flowering, and filling
    stages. Seven input variable sets were obtained based on the combination of data
    from these three periods, and four generalized machine learning algorithms (Random
    Forest (RF), K-Nearest Neighbor (KNN), Bagging, and Gradient Boosting Regression
    (GBR)) and one deep learning algorithm (1D Convolutional Neural Network (1D-CNN))
    were used to predict winter wheat yield. The results showed that the RF model
    had the best prediction performance among the generalised machine learning models.
    The CNN model achieved the best prediction accuracy based on all seven sets of
    input variables. Generalised machine learning models tended to underestimate or
    overestimate yields under different irrigation treatments, with good prediction
    performance for observed yields < 7.745 t·ha−1. The CNN model showed the best
    prediction performance based on most input variable groups across the range of
    observed yields. Most of the differences between observed and predicted values
    (Yi) for the CNN models were distributed between −0.1 t·ha−1 and 0.1 t·ha−1, and
    the model was relatively stable. Therefore, the CNN model is recommended in this
    study for yield prediction and as a reference for future precision agriculture
    research.
  doi: 10.3390/drones7080505
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Drones All Article Types Advanced   Journals
    Drones Volume 7 Issue 8 10.3390/drones7080505 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Fei Liu Subscribe
    SciFeed Recommended Articles Related Info Link More by Authors Links Article Views
    1267 Citations 5 Table of Contents Abstract Introduction Materials and Methods
    Results Discussion Conclusions Author Contributions Funding Data Availability
    Statement Conflicts of Interest References share Share announcement Help format_quote
    Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessArticle Deep Learning Models Outperform
    Generalized Machine Learning Models in Predicting Winter Wheat Yield Based on
    Multispectral Data from Drones by Zongpeng Li 1, Zhen Chen 1, Qian Cheng 1, Shuaipeng
    Fei 2 and Xinguo Zhou 1,* 1 Institute of Farmland Irrigation, Chinese Academy
    of Agricultural Sciences, Xinxiang 453002, China 2 College of Land Science and
    Technology, China Agricultural University, Beijing 100193, China * Author to whom
    correspondence should be addressed. Drones 2023, 7(8), 505; https://doi.org/10.3390/drones7080505
    Submission received: 28 May 2023 / Revised: 28 July 2023 / Accepted: 30 July 2023
    / Published: 2 August 2023 (This article belongs to the Special Issue Advances
    of UAV Remote Sensing for Plant Phenology) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract Timely and accurate monitoring of winter wheat
    yields is beneficial for the macro-guidance of agricultural production and for
    making precise management decisions throughout the winter wheat reproductive period.
    The accuracy of crop yield prediction can be improved by combining unmanned aerial
    vehicle (UAV)-based multispectral data with deep learning algorithms. In this
    study, 16 yield-sensitive vegetation indices were constructed, and their correlations
    were analyzed based on UAV multispectral data of winter wheat at the heading,
    flowering, and filling stages. Seven input variable sets were obtained based on
    the combination of data from these three periods, and four generalized machine
    learning algorithms (Random Forest (RF), K-Nearest Neighbor (KNN), Bagging, and
    Gradient Boosting Regression (GBR)) and one deep learning algorithm (1D Convolutional
    Neural Network (1D-CNN)) were used to predict winter wheat yield. The results
    showed that the RF model had the best prediction performance among the generalised
    machine learning models. The CNN model achieved the best prediction accuracy based
    on all seven sets of input variables. Generalised machine learning models tended
    to underestimate or overestimate yields under different irrigation treatments,
    with good prediction performance for observed yields < 7.745 t·ha−1. The CNN model
    showed the best prediction performance based on most input variable groups across
    the range of observed yields. Most of the differences between observed and predicted
    values (Yi) for the CNN models were distributed between −0.1 t·ha−1 and 0.1 t·ha−1,
    and the model was relatively stable. Therefore, the CNN model is recommended in
    this study for yield prediction and as a reference for future precision agriculture
    research. Keywords: 1D-CNN; irrigation treatments; observed; precision agriculture
    1. Introduction Winter wheat is a vital food crop in both northern China and worldwide,
    where the demand for winter wheat is increasing due to the growing world population
    and rapid economic development [1]. Therefore, accurate winter wheat yield predictions
    are crucial to ensuring food security and promoting agricultural production. Winter
    wheat yield forecasting has long been an important area of research in agriculture.
    Traditional yield forecasting methods are mainly based on manual surveys and statistics.
    This involves collecting a range of information, including growth and meteorological
    data, followed by data analysis and modelling [2]. This approach is not only time-consuming
    and laborious but also challenging to ensure accuracy. In recent years, the continuous
    progress of science and technology has opened up new opportunities for winter
    wheat yield prediction with the application of new technologies such as remote
    sensing technology, which has great potential in this field. Compared with traditional
    methods, remote sensing technology has great potential for winter wheat yield
    prediction. With the continuous development of modern technology, remote sensing
    technology is being increasingly used in various fields, such as environmental
    monitoring [3] and agricultural precision management [4]. Manual methods of remote
    sensing data collection are not only inefficient but also costly [5]. Satellite
    remote sensing has advantages such as a wide collection area and good resolution;
    however, its actual impact is often unsatisfactory due to its long acquisition
    time and susceptibility to weather, cloud cover, and sensor technology [6]. In
    contrast, the emerging technology of UAV remote sensing platforms can carry a
    variety of sensors with high resolution, flexibility, convenience, and low cost.
    These platforms can overcome the limitations of satellite remote sensing technology
    and quickly and efficiently obtain data on the growth status [7] and soil moisture
    [8] of winter wheat at different fertility stages. Artificial intelligence and
    big data analysis can be used to process and analyse the data [9], resulting in
    more accurate yield predictions. The UAV remote sensing platform with multispectral
    sensors has been used to non-destructively assess LAI [10], biomass [11], yield
    [12], chlorophyll content [13], and N-use efficiency [14] of different materials
    with good results. Machine learning algorithms are widely used in agriculture,
    using mathematical and statistical methods to enable computers to learn from data
    and improve performance without explicit instruction [15]. For maize yield prediction,
    the RF algorithm has demonstrated high accuracy, outperforming support vector
    machines and artificial neural network models [16]. At the tuber formation stage
    for potatoes, the RF algorithm performed best in predicting above-ground biomass
    while providing satisfactory accuracy at the tuber expansion stage [17]. The K-Nearest
    Neighbor algorithm has also shown good predictive performance for cassava yield
    prediction [18]. In the study of chlorophyll content in winter wheat, the Bagging
    model demonstrated significant accuracy, although it did not perform the best
    in prediction performance [19]. In addition, the GBR model has shown the best
    performance in predicting daily evapotranspiration for irrigation planning, providing
    new ideas for future agricultural water management allocation [20]. Given the
    demonstrated success of these machine learning algorithms in previous studies,
    they are well suited for use in winter wheat yield prediction. Deep learning models,
    especially 1D CNN models, have gained popularity in various scientific fields
    [21]. 1D CNN models have the capability of representational learning, which allows
    them to perform translation invariant classification through the hierarchical
    structure of the input information [22]. They can be utilised for lossless maize
    yield prediction and are well-suited for feature extraction and classification
    [23]. CNNs can also extract effective feature structures from complex spectral
    data, providing greater model expressiveness and higher performance than traditional
    models [24]. These characteristics make CNNs highly promising for improving the
    precision of winter wheat yield prediction, especially during the heading stage,
    which is a suitable time for data collection [25]. 1D CNNs have been shown to
    be a promising approach for the detection of water pH, offering higher prediction
    accuracy and better modelling convenience compared to traditional algorithms without
    the need for complex pre-processing of input variables [26]. In soil phosphorus
    content prediction, 1D-CNN is also expected to significantly improve the ability
    to predict effective phosphorus in soil [27]. Therefore, the 1D-CNN model was
    chosen for the winter wheat yield prediction. Although many studies have been
    conducted on winter wheat yield, few have investigated the construction of winter
    wheat yield prediction models by combining data from multiple fertility stages
    and using different machine learning and deep learning algorithms. Therefore,
    the main objectives of this study were: (1) to evaluate the feasibility of yield
    prediction using vegetation index data from three fertility stages; (2) to evaluate
    the predictive performance of yield prediction models based on combinations of
    vegetation indices from different fertility stages; and (3) to analyse the stability
    of different models by examining the distribution of differences between observed
    and predicted yield values Yi. The results of this study will demonstrate the
    reliability of using different fertility vegetation indices as input variables
    for yield prediction, providing an efficient and economical method for future
    yield prediction research. 2. Materials and Methods 2.1. Experimental Area and
    Design This study was conducted at the comprehensive experimental base of the
    Chinese Academy of Agricultural Sciences in Xinxiang County, Xinxiang City, Henan
    Province (Figure 1). The study area is located at 113°45′38″ N longitude and 35°8′10″
    N latitude, with an altitude of 88 m above sea level and a subtropical monsoon
    climate characterised by an average annual temperature of 14 °C and an average
    annual rainfall of 650 mm. Figure 1. Test area and plots. The trial was conducted
    during the 2021–2022 season and consisted of 180 test plots with six irrigation
    treatments: IT1 (300 mm, full irrigation water), IT2 (240 mm, 80% full irrigation
    water), IT3 (180 mm, 60% full irrigation water), IT4 (120 mm, 40% full irrigation
    water), IT5 (60 mm, 20% full irrigation water), and IT6 (rainfed). These treatments
    corresponded to plot serial numbers 1–30, 31–60, 61–90, 91–120, 121–150, and 151–180.
    Ten wheat varieties commonly grown in the North China Plain were planted, with
    three replications of each variety set up for each treatment. Each treatment consisted
    of 30 test plots, measuring 4 m long and 1.4 m wide, with adjacent plots spaced
    0.4 m apart to the left and right and 1 m apart to the front and back. The trial
    was sown at the end of October 2021 and harvested by test plot on 5 June 2022,
    with yield data collected for a total of 180 plots. 2.2. Spectral Data Acquisition
    and Processing The spectral data used in the experiment were obtained from a DJI
    M210 equipped with the Micasense RedEdgeMX multispectral camera (Figure 2a,b).
    The DJI M210 is a four-axis multi-rotor vehicle with good stability and flight
    control, an average endurance of about 30 min, and a maximum horizontal flight
    speed of 18 m/s. The Red-Edge MX sensor on board the UAV captures five wavelength
    bands (red, green, blue, near-infrared, and red edge) with centre wavelengths
    of 668 nm, 560 nm, 475 nm, 840 nm, and 717 nm, respectively. The sensor has a
    resolution of 1280 × 960 for each band and a field of view of 47.2°. To account
    for possible cloud and light intensity variations during the mission, the multispectral
    camera is equipped with a radiometric calibration whiteboard (Figure 2c) and an
    on-board irradiance sensor, which are used for sensor calibration during post-image
    processing. The data used in the study were acquired at three fertility stages:
    heading stage, flowering stage, and filling stage, on 20 April, 6 May, and 26
    May, respectively. The missions were flown between 11:00 a.m. and 2:00 p.m. to
    avoid shadow interference and at an altitude of 30 m with a heading overlap rate
    of 85% and a bypass rate of 80%. 12 ground control points (Figure 2d) were established
    for easy later geo-correction, and the sensors used a vertical ground plane with
    an equal time interval photo mode to collect data. Figure 2. UAV remote sensing
    platform and ground control point. (a) DJI M210, (b) Red-Edge MX multispectral
    sensor, (c) Radiation calibrated whiteboard, (d) ground control point (GCP). 2.3.
    UAV Image Pre-Processing In this study, multispectral data were collected at three
    different stages (T1, T2, and T3) of the crop growth cycle, corresponding to the
    heading, flowering, and filling periods, respectively. The collected data for
    each period was then transferred to a computer and imported into Pix4DMapper Pro
    software (version 4.4.12) (Pix4D S.A., Prilly, Switzerland), where three projects
    were created. Project parameters were set to align the images using a feature
    point-matching algorithm. First, a sparse point cloud of the flight area was generated
    from the UAV image and position data. A spatial grid was then created based on
    the sparse point cloud, and the spatial coordinate information of the 12 GCPs
    was added. Next, a sparse point cloud with precise positions was generated, and
    the surface geometry of the flight area was reconstructed. Finally, a high-resolution
    digital orthophoto (DOM) and a digital surface model (DSM) of the flight area
    were generated, and the processed images were exported as TIFF files. The multispectral
    HD digital orthophotography was divided into plots using ArcMap 10.5 (Environmental
    Systems Research, Inc., Redlands, CA, USA). A shapefile was created, divided into
    180 plots with IDs corresponding to the number of each experimental plot. Using
    the Zonal Statistics as Table function in the ArcMap software (version 10.8),
    the average value of each plot was calculated for each of the five bands, and
    the five spectral bands corresponding to each plot were identified and exported.
    2.4. Acquisition of Vegetation Index Spectral reflectance alone cannot directly
    reflect the growth condition and health status of vegetation, as it is simply
    the ratio of the intensity of reflected light to the intensity of incident light
    from vegetation. However, vegetation indices can better reflect the growth condition
    and health status of vegetation by combining waveband information according to
    different spectral reflectances. Many vegetation indices have been widely used
    with high reproducibility and accuracy. In this study, we calculated 16 vegetation
    indices based on the UAV multispectral data we acquired for three fertility periods,
    which are sensitive to the yield of winter wheat. All feature information can
    be found in Table 1. Table 1. Information about the Vegetation Index. 2.5. Framework
    for Yield Prediction Models After obtaining the necessary data for this study,
    suitable deep learning and generalised machine learning models were selected to
    predict winter wheat yields (Figure 3). First, the multispectral vegetation index
    data collected during the three fertility periods were standardised, and the correlation
    between these indices and yield was analysed. In this study, minimum-maximum scaling
    is used to find the period maximum and minimum values for each feature, and the
    range of values of the data is scaled to between [0, 1] using the following formula:
    𝑥=(𝑥− 𝑥 min )/( 𝑥 max − 𝑥 min ) where x is the original data feature, xmin is
    the minimum value of the feature, and xmax is the maximum value of the feature.
    Figure 3. Winter Wheat Yield Prediction Flowchart. G1—Gn are the yield observation
    data series; V1—Vn are the input variable data series; and P1—Pn are the final
    predicted output data series. Based on the correlation and significant characteristics
    of each vegetation index, all 16 vegetation indices constructed had a good correlation
    with yield and could be used as input variables for the predictive models. In
    addition, different combinations of fertility vegetation indices were investigated
    in the construction of the prediction model, and the three fertility vegetation
    index datasets were combined as input variables for the model based on the research
    needs. To evaluate the performance of the models, the input variables were randomly
    divided using a five-fold cross-validation method, where each fold was used as
    the validation set and the remaining four folds were used as the training set.
    All the acquired data were used as training and validation samples, and the final
    accuracy of the model was determined by calculating the mean value of the five
    results. Further details of the generalised machine learning and deep learning
    yield prediction models can be found in the flowchart. The yield prediction models
    were constructed using Python 3.8. In this study, grid search was chosen to screen
    the hyperparameters of the model by combining the defined hyperparameters and
    candidate values in a grid, also known as a Cartesian product, and then using
    cross-validation to evaluate the performance of each hyperparameter combination
    and selecting the best performing hyperparameter combination as the optimal combination
    to train the model to obtain the final model performance metrics. 2.5.1. Generalized
    Machine Learning Models According to the results of previous research, we found
    that RF, KNN, GBR, Bagging, and CNN have shown the best predictive performance
    in prediction research in the field of agriculture, respectively, which is recognised
    by the public, so these five algorithms were chosen to construct yield prediction
    models in this study. RF is an ensemble learning method based on decision trees.
    It works by constructing multiple decision trees, each trained with a random subset
    of features and datasets, and then combining the predictions of all the trees
    to obtain the final prediction [39,40,41]. RF is widely used in many machine learning
    applications due to its ability to automatically select features, handle high-dimensional
    data, and provide good robustness and interpretability. KNN is a non-parametric
    regression algorithm based on distance metrics [42]. Its core idea is to predict
    the target value by finding the K nearest neighbours in the feature space. The
    performance of KNN depends on the choice of K value and the distance metric used.
    KNN works well with small datasets but can become less efficient when dealing
    with larger datasets [43]. GBR is an iterative integrated learning method that
    improves prediction performance by training multiple weak regression models and
    combining them [44]. GBR first trains a simple regression model, and then in each
    iteration, it trains a new regression model based on the error of the previous
    one. It then combines the output of all the models by weighting and averaging
    them to obtain the final prediction result, which is highly flexible and accurate
    [45]. Bagging is an integrated learning method based on the bootstrap sampling
    method. It trains multiple models by randomly sampling the training dataset and
    averaging their outputs to obtain the final prediction [46]. Bagged regression
    is effective in reducing model variance and generalisation error and performs
    well on large datasets [47]. The sampling technique allows a sample to be resampled
    multiple times with a replacement. 2.5.2. Deep Learning Models A 1D CNN is a deep
    learning model based on convolutional operations and composed of several types
    of layers suitable for processing one-dimensional data [48]. The network typically
    includes an input layer, a convolutional layer, a pooling layer, a fully connected
    layer, a hidden layer, and an output layer, along with additional hidden layers
    such as batch normalisation, activation functions, and dropout. The convolutional
    layer is the core layer that extracts features from the input data by performing
    convolutional operations and contains a convolutional kernel whose size is usually
    a positive integer. In addition, the convolutional layer contains N filters of
    the same size. Pooling is used to reduce the dimensionality of the features in
    a 1D CNN, which reduces computational complexity and improves network robustness
    while preventing overfitting [49]. In a 1D CNN, the pooling layer typically follows
    the convolutional layer. The fully connected layer is a common neural network
    layer used to map the network output into a specific output space. Every neuron
    in a fully connected layer is connected to all the neurons in the previous layer.
    The batch normalisation layer is an optimisation method that normalises the input
    data of each batch, which speeds up the training process of the network. The activation
    function layer maps the linear output of the neural network into a non-linear
    space, which improves the performance of the network [50]. In a 1D CNN, the Dropout
    layer is a regularisation method used to prevent overfitting by randomly dropping
    a percentage of neurons in the network [51]. In this study, we constructed a 1D
    CNN model to predict winter wheat yield. The model architecture consists of 1
    input layer, 2 convolutional layers, 2 batch normalisation layers, 2 activation
    function layers, 1 flattening layer, 1 dropout layer, 2 average pooling layers,
    1 fully connected layer, and 1 output layer, as shown in Figure 4. The input to
    the 1D CNN model is one-dimensional vegetation index data. The number of filters
    in the two convolutional layers is 2 and 4, respectively, and the size of the
    convolutional kernel is 3. The batch normalisation layer is used to normalise
    small batches of data and normalise the output to a standard normal distribution,
    which prevents overfitting of the model and improves computational speed. We added
    a dropout layer that randomly drops nodes to further reduce model overfitting.
    The pool size is set to 2 × 1 with a step size of 1. The activation function used
    for the two activation function layers is ReLU. The output layer is a fully connected,
    dense layer with 1 node. Figure 4. 1D-CNN Process. 2.6. Model Evaluation Indicators
    In this study, we used Pearson’s correlation coefficient to assess the relationship
    between vegetation indices and yield at each fertility period. In addition, we
    used the coefficient of determination (R2) and the root mean square error (RMSE),
    which are commonly used indicators to evaluate the performance of regression models,
    to assess the accuracy of our prediction models. In general, a higher Pearson
    correlation coefficient indicates a stronger correlation between yield and vegetation
    index, while a larger R2 value (closer to 1) indicates a better ability of the
    model to explain the data. A smaller RMSE (closer to 0) indicates a better predictive
    ability of the model, which means that there is less error between the observed
    and predicted values. The formula for calculating R2 and RMSE is shown below:
    𝑟 (𝑋,𝑌) = 𝐶𝑜𝑣(𝑋,𝑌) 𝑉𝑎𝑟(𝑋)𝑉𝑎𝑟(𝑌) − − − − − − − − − − − − √ (1) where 𝐶𝑜𝑣(𝑋,𝑌) represents
    the covariance of 𝑋 and 𝑌 , 𝑉𝑎𝑟(𝑋) is the variance of 𝑋 , and 𝑉𝑎𝑟(𝑌) is the variance
    of 𝑌 . 𝑅 2 =1− ∑ 𝑛 𝑖=1 ( 𝑦 ⌢ 𝑖 − 𝑦 𝑖 ) 2 ∑ 𝑛 𝑖=1 ( 𝑦 𝑖 − 𝑦 ̲ ) 2 (2) 𝑅𝑀𝑆𝐸= ∑ 𝑛
    𝑖=1 ( 𝑦 ̂  𝑖 − 𝑦 𝑖 ) 2 𝑁 − − − − − − − − − − − − −  ⎷   (3) where 𝑦 𝑖 is the
    observed value, 𝑦 ̂  𝑖 is the predicted value, 𝑦 ̲ is the mean of the observed
    values, and N is the sample size. 3. Results 3.1. Correlation Analysis and Acquisition
    of Input Variable Sets In this study, we selected 16 vegetation indices that showed
    a significant correlation with yield (Figure 5) and analysed the relationship
    between yield and the vegetation index variables of the three fertility periods
    in an integrated manner using a correlation matrix. The upper triangle of the
    matrix shows the correlation coefficients between yield and each of the 16 vegetation
    indices, while the lower triangle shows the amount of change in the correlation
    between yield and the 16 vegetation indices. As shown in Figure 5, it was observed
    that the correlation between yield and each vegetation index increased as the
    fertility stage of winter wheat progressed from the heading stage to the filling
    stage. ATSAVI and WDRVI had the best correlation with yield at the heading stage
    (Figure 5a), both reaching a value of 0.42, followed by NDVI, NDRE, TVI, RRI1,
    RRI2, and CIre, all with absolute correlation values with yield above 0.4. During
    flowering (Figure 5b), the correlation between vegetation indices and yield increased,
    except for RGR, which had an absolute correlation value of 0.58. The correlation
    between all vegetation indices and yield was above 0.62, with SARVI showing the
    best correlation with yield at 0.7. During the filling stage (Figure 5c), the
    correlation between vegetation indices and yield increased significantly, with
    absolute values above 0.76. CI, RGR, and RRI2 of the 16 vegetation indices showed
    a negative correlation with yield, while the rest of the vegetation indices showed
    a positive correlation with yield. Figure 5. Correlation analysis between vegetation
    index and yield. (a) heading stage, (b) flowering stage, (c) grain filling stage.
    The multispectral features acquired at different fertility periods are complementary,
    and the sensitivity of vegetation indices constructed based on the reflectance
    of different spectral bands of the multispectral spectrum at different fertility
    periods varies. By analysing the spectra of different fertility periods, the complementarity
    between the spectra can be used to improve the accuracy of UAV remote sensing
    monitoring. Therefore, in this study, the vegetation indices of three fertility
    periods were used as input variable groups, and then the vegetation indices of
    two fertility periods were combined to obtain a total of seven input variable
    groups: (a) T1; (b) T2; (c) T3; (d) T1 and T2; (e) T1 and T3; (f) T2 and T3; (g)
    T1, T2, and T3. 3.2. The Performance of Five Models on Yield Prediction The RF
    model had the highest R2 of 0.703 for input variable group g (T1, T2, and T3)
    (Figure 6); however, the lowest RMSE of 0.409 t·ha−1 for input variable group
    f (T2 and T3) (Table 2). In general, R2 increased as the number of input variables
    increased, and RMSE tended to decrease before increasing, as shown in Figure 6.
    However, except for input variable group d (T1 and T2), where the prediction accuracy
    was lower than that of input variable group c (T3), the inclusion of too many
    input variables had a negative impact on the prediction accuracy of the RF model.
    Figure 6. Performance of the best yield prediction model for each model. Table
    2. Yield prediction model accuracy ((a) T1; (b) T2; (c) T3; (d) T1 and T2; (e)
    T1 and T3; (f) T2 and T3; (g) T1, T2, and T3). The KNN model showed the highest
    yield prediction R2 of 0.664 (Figure 6) for the input variable group g (T1, T2,
    and T3) and the lowest RMSE of 0.477 t·ha−1 for input variable group f (T2 and
    T3) (Table 2). However, the RMSE was higher for both input variable groups d (T1
    and T2) and e (T1 and T3) with larger errors, indicating that the combination
    of two fertility data sets had an effect on the predictions of the KNN model.
    The Bagging model gave the highest yield prediction accuracy (R2 = 0.665, RMSE
    = 0.513 t·ha−1) for input variable group g (T1, T2, and T3) (Table 2). While input
    variable group d (T1 and T2) had a higher R2 than input variable groups a (T1)
    or b (T2), its RMSE was higher than input variable group b (T2) (RMSE = 0.566
    t·ha−1), indicating a larger error. Similarly, input variable group e (T1 and
    T3) had a higher R2 than input variable groups a (T1) or b (T3), but its RMSE
    was higher than that of input variable group b (T3) (RMSE = 0.556 t·ha−1), indicating
    that increasing the number of input variables also negatively affected the predictive
    accuracy of the Bagging model. The GBR model produced a maximum R2 and minimum
    RMSE of 0.698 and 0.442 t·ha−1 for input variable group g (T1, T2, and T3), respectively
    (Table 2). It can be observed that the accuracy of the model gradually improved
    with increasing fertility, with the highest accuracy at input variable group c
    (T3), where R2 improved to 0.601 and RMSE reduced to 0.586 t·ha−1, as input variable
    groups progressed from a (T1), b (T2), or c (T3). However, input variable groups
    d (T1 and T2) or e (T1 and T3) both had a higher RMSE than variable group c (T3),
    indicating that combining two fertility data sets as input features to the GBR
    model resulted in a larger error (Figure 6). As for the CNN model, the best yield
    prediction accuracy (R2 = 0.752, RMSE = 0.404 t·ha−1) was obtained for the input
    variable group g (T1, T2, and T3) (Table 2). In general, the R2 of the CNN model
    increased with increasing input variables, and the RMSE gradually decreased, indicating
    a gradient improvement in the accuracy of the model (Figure 6). The mean values
    of R2 and RMSE were calculated for different input variable groups to observe
    the predictive performance of different models (Table 2). The mean value of R2
    for input variable group g (T1, T2, and T3) was the highest at 0.697, and the
    mean value of RMSE was also the lowest at 0.476 t·ha−1 (Table 2). In conclusion,
    all five models had the best prediction accuracy for input variable groups g (T1,
    T2, and T3), and the CNN models obtained the best model accuracy for different
    input variable groups. The average accuracy of the five models based on different
    input variable groups was then calculated (Table 2). It was found that the average
    ranking of the predicted R2 for each model was: CNN > RF > GBR > Bagging > KNN,
    and the mean ranking of the predicted RMSE for each model was: CNN < RF < Bagging
    < KNN < GBR. The CNN model was still found to have the best accuracy, with the
    RF model having the second-best accuracy. The GBR model had the largest RMSE and
    produced a larger error. By comparing the RMSEs under different input variable
    groups, it was found that larger errors were produced under input variable groups
    a (T1) or b (T2) with RMSEs of 0.842 t·ha−1 and 0.676 t·ha−1, respectively, indicating
    the poor performance of GBR in predicting individual early fertility stages of
    winter wheat, as also evidenced by the RMSEs for input variable groups d (T1 and
    T2). Thus, RF was shown to be a suitable generalised machine learning model when
    different-sized input variable groups were considered to construct the prediction
    model, while the prediction performance of the deep learning CNN model was shown
    to be superior to that of the machine learning models. In summary, both the generalised
    machine learning-based model and the deep learning model obtained the best prediction
    accuracy with the input (g) combination of variables as shown in Table 3. It was
    found that the RF, Bagging, GBR, KNN, and CNN models obtained the highest accuracy
    at IT5, IT4, IT4, IT5, and IT6, respectively, indicating that the models were
    more capable of predicting yield under moisture deficit conditions and were more
    suitable for yield prediction. Table 3. Accuracy of each irrigation treatment
    for the optimal yield prediction model. 3.3. Analyzing the Dynamics of Predicting
    Yield The different models did not consistently predict winter wheat yield dynamics,
    especially for wheat under different treatments (Figure 7, Figure 8, Figure 9,
    Figure 10 and Figure 11). The RF, KNN, and GBR models predicted significantly
    lower yield values than observed values in the range of 1–120 plots (IT1, IT2,
    IT3, and IT4) and significantly higher yield values in the range of 121–180 plots
    (IT5 and IT6). In addition, the RF model predicted higher yield values for input
    variable group d (T1). The Bagging model showed less volatility and fluctuated
    within the range of 1–180 plots. The CNN model outperformed the other prediction
    models in terms of yield prediction under different irrigation treatments, regardless
    of the variation in the input variable groups. Figure 7. Comparison of observed
    and predicted values of RF models based on different combinations of input variables
    under the test area series. Indicators (a–g) denote (a) T1; (b) T2; (c) T3; (d)
    T1 and T2; (e) T1 and T3; (f) T2 and T3; (g) T1, T2, and T3. The green line represents
    the predicted yield, and the black line represents the observed yield. Figure
    8. Comparison of observed and predicted values of KNN models based on different
    combinations of input variables in the test area series. Indicators (a–g) denote
    (a) T1; (b) T2; (c) T3; (d) T1 and T2; (e) T1 and T3; (f) T2 and T3; (g) T1, T2,
    and T3. The purple line represents the predicted yield, and the black line represents
    the observed yield. Figure 9. Comparison of observed and predicted values of Bagging
    models based on different combinations of input variables under test area series.
    Indicators (a–g) denote (a) T1; (b) T2; (c) T3; (d) T1 and T2; (e) T1 and T3;
    (f) T2 and T3; (g) T1, T2, and T3. The blue line represents the predicted yield,
    and the black line represents the observed yield. Figure 10. Comparison of observed
    and predicted values of GBR models based on different combinations of input variables
    under the test area series. Indicators (a–g) denote (a) T1; (b) T2; (c) T3; (d)
    T1 and T2; (e) T1 and T3; (f) T2 and T3; (g) T1, T2, and T3. The yellow line represents
    the predicted yield, and the black line represents the observed yield. Figure
    11. Comparison of observed and predicted values of 1D CNN models based on different
    combinations of input variables under the test area series. Indicators (a–g) denote
    (a) T1; (b) T2; (c) T3; (d) T1 and T2; (e) T1 and T3; (f) T2 and T3; (g) T1, T2,
    and T3. The red line represents the predicted yield, and the black line represents
    the observed yield. To evaluate the dynamic prediction performance of yields in
    different yield ranges, the observed yield data were divided into three groups:
    the upper quartile (observed yield > 8.865 t·ha−1), the middle quartile (7.745
    t·ha−1 < observed yield < 8.865 t·ha−1), and the lower quartile (observed yield
    < 7.745 t·ha−1). Analyzing the variation of R2 and RMSE for the five models (Figure
    12), the CNN model showed the best prediction performance when the observed yield
    was below 7.745 t·ha−1, except for the input variable group (b). The generalised
    machine learning model, GBR, performed second best and showed good yield prediction
    performance, except for the input variable group (a). The RF, KNN, and Bagging
    models, although not showing the best prediction performance, also showed good
    prediction performance when predicting lower observed yields. Therefore, the CNN
    model is more suitable for predicting lower observed yields, while the GBR is
    the most suitable generalised machine learning model for predicting lower observed
    yields. Figure 12. Performance of five models in predicting yield dynamics during
    the model testing phase. The observed yield values were sorted and classified
    into three ranges: (a,b) observed yield > 8.865 t·ha−1, upper quartile; (c,d)
    7.745 t·ha−1 < observed yield < 8.865 t·ha−1, (e,f) middle; observed yield < 7.745
    t·ha−1, lower quartile. (a,c,e) denote R2, and (b,d,f) denote RMSE. The CNN showed
    the best prediction performance for observed yields between 7.745–8.865 t·ha−1,
    except for input variable groups (b) and (c), while the GBR had the second-best
    prediction performance. The CNN model achieved the lowest RMSE of 0.103 t·ha−1
    for the input variable group (g). Therefore, the CNN model is more suitable for
    predicting observed yields in the middle range of the data. For observed yields
    > 8.865 t·ha−1 (quadratic precision plots c and d), the CNN model had the highest
    R2 for the input variable group (g) and the lowest RMSE for the input variable
    group (e) among the CNN models. Among the generalised machine learning models,
    the GBR showed better prediction performance for input variable groups (a), (b),
    and (g); the Bagging model showed better prediction performance for input variable
    group (c); and the RF model showed better prediction performance for input variable
    groups (d), (e), and (f). Overall, the CNN models showed the best prediction performance
    for different observed yield ranges based on most input variables and can be used
    to predict yields in different ranges of winter wheat. In addition, the generalised
    machine learning models showed good prediction performance at lower observed yields,
    with the second-best prediction performance in the medium yield range and unsatisfactory
    prediction performance at higher observed yields. This suggests that the generalised
    machine learning models are not suitable for predicting higher observed yields
    (observed yields > 8.865 t·ha−1). 3.4. Distribution of Differences between Observed
    and Predicted Yields This study shows the distribution of differences between
    predicted and observed yields (Yi = observed yield value-predicted yield value)
    for different groups of variables and models (Figure 13). The Yi density of the
    generalised machine learning models increased significantly in the range of −0.1
    to 0.1 t·ha−1 as the wheat growth stage progressed when using individual fertility
    data as input variables. In input variable group (c), the GBR model had a significantly
    higher Yi density (48.89%) than the RF (27.22%), KNN (20%), and Bagging (35%),
    with the CNN model at 52.22%, all higher than the generalised machine learning
    model. In input variable group (e), the deep learning model (88.89% for CNN) had
    a significantly higher kernel density between −0.1 and 0.1 t·ha−1 than the generalised
    machine learning models (27.78% for RF, 20.26% for KNN, 45.56% for Bagging, and
    66.11% for GBR). For the input variable group (g), the deep learning model (82.78%
    for CNN) also had higher Yi densities in both the −0.1 and 0.1 t·ha−1 ranges than
    the generalised machine learning models (28.89% for RF, 23.89% for KNN, 41.67%
    for Bagging, and 60% for GBR). Mean values of Yi densities were calculated for
    different sets of input variables and models, and the deep learning models (66.27%
    for CNN) showed significantly better Yi densities in the range of −0.1 and 0.1
    t·ha−1 ranges than the generalised machine learning models (26.19% for RF, 17.06%
    for KNN, 35.47% for Bagging, and 50.32% for GBR). In summary, the deep learning
    models outperformed the generalised machine learning models for all prediction
    models constructed using different numbers of input variables, and the CNN models
    were closer to the actual values. Figure 13. Distribution of observed/predicted
    yield differences based on five different models (RF, KNN, Bagging, GBR, and CNN)
    for eight different input combinations. Indicators (a–g) denote (a) T1; (b) T2;
    (c) T3; (d) T1 and T2; (e) T1 and T3; (f) T2 and T3; (g) T1, T2, and T3. The x-axis
    represents the difference between the predicted value and the observed value (Yi
    = observed - predicted), and the y-axis represents the frequency density for different
    Yi values. The two vertical dashed lines show Yi values of −0.1 and 0.1. The density
    of Yi lies between 0 and 1. 4. Discussion Winter wheat yield trends show variability
    over time and are influenced by various factors such as water availability, climate
    conditions, soil type, geographical region, and the growing demand for grain production
    to feed a growing population. Predicting future wheat yield trends is a challenging
    task. In this study, 16 multispectral vegetation indices were selected as input
    variables for yield prediction models that have high yield sensitivity during
    the heading, flowering, and filling stages. Instead of using multispectral band
    reflectance directly, vegetation indices were preferred as input variables because
    they are widely used to study vegetation growth status and change and have high
    application value and accuracy. The absolute values of the correlations between
    the vegetation indices selected for this study and yield gradually increased with
    the development of the reproductive period. At the filling stage, all the vegetation
    indices showed extremely strong correlations, with the absolute values of the
    correlations between NDVI, BNDVI, TVI, RGR, and ATSAVI all reaching more than
    0.8, which is consistent with the findings of Jewan [52]. The yield prediction
    model constructed from the vegetation indices of a single fertility period showed
    that the higher the correlation between vegetation indices and yield, the higher
    the accuracy of the constructed model. The correlation between vegetation indices
    and yield at the filling stage was above 0.7, and the maximum value of R2 of the
    model reached 0.627, which is larger than the maximum R2 of 0.472 of the model
    at the heading stage, consistent with the findings of Bian [15]. These results
    indicate that the best predictions for individual growth stages occur at the filling
    stage. It is also noteworthy that the correlation between ATSAVI and yield was
    poor at 0.289 at the heading stage but above 0.7 at both the flowering and filling
    stages. This may be due to the limited canopy cover of wheat at the heading stage,
    where spectral reflectance is disturbed by background factors such as bare soil,
    resulting in a low correlation with the constructed vegetation index. Generalised
    machine learning models are widely used in precision agriculture, particularly
    in predicting phenotypic information about crops, such as crop yield [53]. This
    study shows that generalised machine learning models are not only influenced by
    different crop fertility periods but also by the number of input variables. Overall,
    the RF model showed the best prediction performance among the four generalised
    machine learning models, while the KNN model showed the worst performance. As
    shown in the accuracy table, when a single fertility vegetation index was used
    as an input variable for three fertility periods, the RF model improved the mean
    R2 value by 6.36%, 5.75%, and 10.04% compared to the Bagging, GBR, and KNN models,
    respectively. When two fertility vegetation indices were used as the input variable
    set, the RF model had mean R2 values of 5.3%, 3.09%, and 8.5% higher than the
    Bagging, GBR, and KNN models, respectively. However, the GBR model outperformed
    the RF model in predicting yield and observed yield when the range 8.865 t·ha−1
    > observed yield > 7.745 t·ha−1 was considered. The GBR model also showed good
    accuracy in the range of observed yield > 8.865 t·ha−1. This is probably due to
    the fact that this experiment included six irrigation treatments and the data
    distribution had some regularity, resulting in a high accuracy of the regression
    between the model predicted and observed values (Fig.). RF models are often able
    to capture non-parametric or non-linear relationships between predictors or yields
    and input variables, making their predictions more stable and reliable. Therefore,
    the RF model is a more desirable model for yield prediction in generalised machine
    learning models [54]. In his study, Zhong found that the R2 of both the RF model
    and the Bagging model was above 0.91; however, the error of the RF model was lower
    than that of the Bagging model [55]. In a study to predict the yield of alfalfa
    in the current season, Feng showed that the accuracy of the RF model was better
    than that of the KNN model, and the R2 of both models was above 0.8 [53]. However,
    in our study, the mean R2 of the RF model was 7.57%, 5.43%, and 10.49% higher
    than that of the Bagging, GBR, and KNN models, respectively. The mean R2 values
    were in the range of 0.55–0.62, indicating that the GBR model outperformed the
    Bagging and KNN models. This highlights that the prediction accuracy of generalised
    machine learning models is affected by different application scenarios and datasets.
    In this study, both generalised machine learning models and CNN models from deep
    learning were used to predict winter wheat yield. The CNN model showed the best
    prediction performance for all seven sets of input variables, ranging from single
    fertility data as input variables to a combination of three fertility data as
    input variables. Compared to the best-performing generalised machine learning
    model with the same combination of inputs, the R2 of the CNN model improved by
    3.11%, 6.6%, 2.08%, and 6.91%, respectively. These results are consistent with
    Ghanbari [56], who found in his study on sediment core size mapping that the CNN
    model outperformed the best RF model in the generalised machine learning model
    in terms of prediction performance. When the observed yield was <7.745 t·ha−1,
    each generalised machine learning model showed better prediction accuracy, and
    overall, the CNN model still had the best prediction performance. These results
    are consistent with those of He [57], who found similar results when predicting
    the minimum greenhouse temperature, both showing that the deep learning model
    had the best prediction performance among the machine learning models. In their
    study on winter wheat yield prediction, Tanabe [25] found that the CNN model they
    constructed outperformed the linear regression model and performed best at the
    heading stage, which was considered to be the most appropriate data collection
    stage for winter wheat. However, our experimental results showed that the prediction
    accuracy of the model was better at the filling stage than at the heading and
    flowering stages, indicating that the results of the prediction model may be influenced
    by the variety of winter wheat, the region, the climate, and the experimental
    conditions. Srivastava [58] analysed the performance of machine learning and deep
    learning methods in winter wheat yield prediction and found that the CNN model
    outperformed all other baseline models (with a 7–14% reduction in RMSE), which
    was also demonstrated in our study. However, the reduction in RMSE of the CNN
    model varied from 1.44–18.77%, further illustrating that the performance of the
    prediction models in winter wheat yield prediction is influenced by a number of
    factors. This experiment suggests that the RF, KNN, and GBR models underestimate
    yield in the 1–120 plot range and overestimate yield in the 121–180 plot range.
    Furthermore, for the 4 irrigation treatments IT1, IT2, IT3, and IT4 in the 1–120
    plot range, it is shown that the RF, KNN, and GBR models underestimate yield for
    treatments with more than 40% adequate irrigation and overestimate yield for treatments
    with less than 40% adequate irrigation. In a separate study, He [59] also found
    that the spatial downscaling method for precipitation in an adaptive random forest
    underestimates extreme precipitation. This suggests that different experimental
    settings and machine learning methods may lead to over- or underestimation of
    monitoring metrics. The difference between observed and predicted yields, denoted
    as Yi, reflects the accuracy of a model’s prediction. The smaller the value of
    Yi, the closer the predicted yield value is to the observed yield value, and the
    better the model matches the actual situation. Hu [60] developed a yield prediction
    model based on a non-linear function that relates infrared water stress indicators
    to winter wheat yield. The error between the predicted yield values and the actual
    yield values was small, demonstrating the feasibility of the model in predicting
    yield. Our experiments showed that the CNN model constructed with seven input
    variables had the highest percentage, reaching up to 88.89% when Yi was in the
    range of −0.1 and 0.1 t·ha−1. However, the generalised machine learning model
    did not perform well in this error range, indicating that the CNN model had the
    best prediction accuracy as the error between its predicted yield values and the
    observed yield values was small. Nevertheless, the GBR model also improved the
    percentage of Yi in the range of −0.1 and 0.1 as the input variable set data increased,
    achieving a maximum of 66.11%, thereby improving the prediction accuracy of the
    model. This result demonstrated the good predictive ability of the GBR model in
    the generalised machine learning model. Leng [61] demonstrated that in predicting
    and optimising the specific surface area of biochar, the nitrogen content of biochar,
    and biochar yield, the GBR model generally had better predictive ability than
    the RF model. Although the RF model slightly outperformed the GBR model in this
    study, the predictive ability of the GBR model was more stable in terms of the
    distribution of Yi. This stability may be due to the fact that the GBR model automatically
    adjusts the error through continuous iteration during the training process, thereby
    reducing the influence of outliers on the results, resulting in high accuracy
    and generalisation ability for the GBR model. In this study, only one deep learning
    model, CNN, was investigated. Future research will consider the inclusion of recurrent
    neural network models and long- and short-term memory network models for yield
    prediction. In addition, this study only used UAV multispectral data to construct
    vegetation indices as input variables for the model. In the next study, the inclusion
    of hyperspectral, RGB, and thermal infrared data for multi-source data fusion
    may be considered to improve yield prediction. 5. Conclusions This study investigated
    the accuracy and potential of four generalised machine learning models and one
    deep learning model for winter wheat yield prediction. Seven different sets of
    input variables consisting of multispectral data from three fertility stages were
    used as input features for the models. The results showed that multi-fertility
    data fusion improved the predictive performance of the models, with the CNN model
    having better performance in yield prediction. Furthermore, the generalised machine
    learning models showed a tendency to overestimate or underestimate yield under
    different irrigation treatments, generating large errors. In contrast, the difference
    between observed and predicted values (Yi) of the deep learning model (CNN) was
    relatively stable and remained within a high percentage of the error range of
    −0.1 to 0.1 t·ha−1. Therefore, the CNN model is recommended for yield prediction
    in this study. Overall, the CNN model successfully estimated the winter wheat
    yield under different irrigation treatments and provided a basis for future evaluation
    of the winter wheat yield under different conditions. Future work should consider
    experimenting with different growing environments to improve the stability and
    usefulness of the method. In addition, the inclusion of recurrent neural network
    models and long- and short-term memory network models, as well as the fusion of
    multiple data sources, such as hyperspectral, RGB, and thermal infrared data,
    should be considered for further research. Author Contributions Conceptualisation:
    Z.C., X.Z. and S.F.; trial management and data collection and analysis: Z.L.,
    Q.C., S.F. and Z.C.; writing under the supervision of Z.C. and X.Z.; editing:
    Z.L., Z.C., S.F., X.Z. and Q.C. All authors have read and agreed to the published
    version of the manuscript. Funding This research was supported by the Key Grant
    Technology Project of Henan (221100110700), Central Public-interest Scientific
    Institution Basal Research Fund (No. IFI2023-29, IFI2023-01), the Intelligent
    Irrigation Water and Fertilizer Digital Decision System and Regulation Equipment
    (2022YFD1900404), the Key Grant Technology Project of Henan (221100110700), and
    the Agricultural Science and Technology Innovation Program (ASTIP No. CAAS-ZDRW202201).
    Data Availability Statement The datasets used in this study are available from
    the corresponding author upon reasonable request. Conflicts of Interest The authors
    assert that they have no conflict of interest regarding this study. References
    Shen, Y.; Mercatoris, B.; Cao, Z.; Kwan, P.; Guo, L.; Yao, H.; Cheng, Q. Improving
    Wheat Yield Prediction Accuracy Using LSTM-RF Framework Based on UAV Thermal Infrared
    and Multispectral Imagery. Agriculture 2022, 12, 8926. [Google Scholar] [CrossRef]
    Deng, C.; Froese, R.E.; Zhang, S.; Lu, Y.; Xu, X.; Li, Q. Development of improved
    and comprehensive growth and yield models for genetically improved stands. Ann.
    For. Sci. 2020, 77, 89. [Google Scholar] [CrossRef] Wang, X.; Chen, R.; Kan, H.
    Application of remote sensing technology in atmospheric pollutant monitoring:
    A review of recent studies. J. Environ. Health 2011, 28, 924–927. [Google Scholar]
    Huang, Y.; Chen, Z.; Yu, T.; Huang, X.; Gu, X. Agricultural remote sensing big
    data: Management and applications. J. Integr. Agric. 2018, 17, 1915–1931. [Google
    Scholar] [CrossRef] Tunca, E.; Koksal, E.S.; Cetin, S.; Ekiz, N.M.; Balde, H.
    Yield and leaf area index estimations for sunflower plants using unmanned aerial
    vehicle images. Environ. Monit. Assess. 2018, 190, 68211. [Google Scholar] [CrossRef]
    Sha, Z.; Wang, Y.; Bai, Y.; Zhao, Y.; Jin, H.; Na, Y.; Meng, X. Comparison of
    leaf area index inversion for grassland vegetation through remotely sensed spectra
    by unmanned aerial vehicle and field-based spectroradiometer. J. Plant Ecol. 2019,
    12, 395–408. [Google Scholar] [CrossRef] [Green Version] Zhu, H.; Liu, H.; Xu,
    Y.; Yang, G. UAV-based hyperspectral analysis and spectral indices constructing
    for quantitatively monitoring leaf nitrogen content of winter wheat. Appl. Optics
    2018, 57, 7722–7732. [Google Scholar] [CrossRef] Chen, S.; Chen, J.; Zhang, Z.;
    Bian, J.; Wang, Y.; Shi, S. Retrieving soil water content of winter wheat during
    heading period by multi-spectral remote sensing of unmanned aerial vehicle (UAV).
    Water Sav. Irrig. 2018, 5, 39–43. [Google Scholar] Heidarian Dehkordi, R.; El
    Jarroudi, M.; Kouadio, L.; Meersmans, J.; Beyer, M. Monitoring Wheat Leaf Rust
    and Stripe Rust in Winter Wheat Using High-Resolution UAV-Based Red-Green-Blue
    Imagery. Remote Sens. 2020, 12, 3696. [Google Scholar] [CrossRef] Revill, A.;
    Florence, A.; MacArthur, A.; Hoad, S.; Rees, R.; Williams, M. Quantifying Uncertainty
    and Bridging the Scaling Gap in the Retrieval of Leaf Area Index by Coupling Sentinel-2
    and UAV Observations. Remote Sens. 2020, 12, 184311. [Google Scholar] [CrossRef]
    Wang, D.; Li, R.; Zhu, B.; Liu, T.; Sun, C.; Guo, W. Estimation of Wheat Plant
    Height and Biomass by Combining UAV Imagery and Elevation Data. Agriculture 2023,
    13, 9. [Google Scholar] [CrossRef] Zhang, J.; Wang, W.; Krienke, B.; Cao, Q.;
    Zhu, Y.; Cao, W.; Liu, X. In-season variable rate nitrogen recommendation for
    wheat precision production supported by fixed-wing UAV imagery. Precis. Agric.
    2022, 23, 830–853. [Google Scholar] [CrossRef] Yang, X.; Yang, R.; Ye, Y.; Yuan,
    Z.; Wang, D.; Hua, K. Winter wheat SPAD estimation from UAV hyperspectral data
    using cluster-regression methods. Int. J. Appl. Earth Obs. Geoinf. 2021, 105,
    102618. [Google Scholar] [CrossRef] Sahoo, R.N.; Gakhar, S.; Rejith, R.G.; Ranjan,
    R.; Meena, M.C.; Dey, A.; Mukherjee, J.; Dhakar, R.; Arya, S.; Daas, A.; et al.
    Unmanned Aerial Vehicle (UAV)-Based Imaging Spectroscopy for Predicting Wheat
    Leaf Nitrogen. Photogramm. Eng. Remote Sens. 2023, 89, 107–116. [Google Scholar]
    [CrossRef] Bian, C.; Shi, H.; Wu, S.; Zhang, K.; Wei, M.; Zhao, Y.; Sun, Y.; Zhuang,
    H.; Zhang, X.; Chen, S. Prediction of Field-Scale Wheat Yield Using Machine Learning
    Method and Multi-Spectral UAV Data. Remote Sens. 2022, 14, 1474. [Google Scholar]
    [CrossRef] Marques Ramos, A.P.; Osco, L.P.; Garcia Furuya, D.E.; Goncalves, W.N.;
    Santana, D.C.; Ribeiro Teodoro, L.P.; Da Silva Junior, C.A.; Capristo-Silva, G.F.;
    Li, J.; Rojo Baio, F.H.; et al. A random forest ranking approach to predict yield
    in maize with uav-based vegetation spectral indices. Comput. Electron. Agric.
    2020, 178, 105791. [Google Scholar] [CrossRef] Yang, H.; Li, F.; Wang, W.; Yu,
    K. Estimating Above-Ground Biomass of Potato Using Random Forest and Optimized
    Hyperspectral Indices. Remote Sens. 2021, 13, 2339. [Google Scholar] [CrossRef]
    Selvaraj, M.G.; Valderrama, M.; Guzman, D.; Valencia, M.; Ruiz, H.; Acharjee,
    A. Machine learning for high-throughput field phenotyping and image processing
    provides insight into the association of above and below-ground traits in cassava
    (Manihot esculenta Crantz). Plant Methods 2020, 16, 871. [Google Scholar] [CrossRef]
    Wang, W.; Cheng, Y.; Ren, Y.; Zhang, Z.; Geng, H. Prediction of Chlorophyll Content
    in Multi-Temporal Winter Wheat Based on Multispectral and Machine Learning. Front.
    Plant Sci. 2022, 13, 896408. [Google Scholar] [CrossRef] Ponraj, A.S.; Vigneswaran,
    T. Daily evapotranspiration prediction using gradient boost regression model for
    irrigation planning. J. Supercomput. 2020, 76, 5732–5744. [Google Scholar] [CrossRef]
    Lee, C.C.; Koo, V.C.; Lim, T.S.; Lee, Y.P.; Abidin, H. A multi-layer perceptron-based
    approach for early detection of BSR disease in oil palm trees using hyperspectral
    images. Heliyon 2022, 8, e092524. [Google Scholar] [CrossRef] [PubMed] Hu, M.;
    Pan, Y.; Zhang, N.; Xu, X. A Review on Zernike Coefficient-Solving Algorithms
    (CSAs) Used for Integrated Optomechanical Analysis (IOA). Photonics 2023, 10,
    177. [Google Scholar] [CrossRef] Yang, W.; Nigon, T.; Hao, Z.; Paiao, G.D.; Fernandez,
    F.G.; Mulla, D.; Yang, C. Estimation of corn yield based on hyperspectral imagery
    and convolutional neural network. Comput. Electron. Agric. 2021, 184, 106092.
    [Google Scholar] [CrossRef] Wang, C.; Wu, X.; Li, L.; Wang, Y.; Li, Z. Convolutional
    Neural Network Application in Prediction of Soil Moisture Content. Spectrosc.
    Spectr. Anal. 2018, 38, 36–41. [Google Scholar] Tanabe, R.; Matsui, T.; Tanaka,
    T.S.T. Winter wheat yield prediction using convolutional neural networks and UAV-based
    multispectral imagery. Field Crop. Res. 2023, 291, 108786. [Google Scholar] [CrossRef]
    Li, D.; Li, L. Detection of Water pH Using Visible Near-Infrared Spectroscopy
    and One-Dimensional Convolutional Neural Network. Sensors 2022, 22, 5809. [Google
    Scholar] [CrossRef] Kawamura, K.; Nishigaki, T.; Andriamananjara, A.; Rakotonindrina,
    H.; Tsujimoto, Y.; Moritsuka, N.; Rabenarivo, M.; Razafimbelo, T. Using a One-Dimensional
    Convolutional Neural Network on Visible and Near-Infrared Spectroscopy to Improve
    Soil Phosphorus Prediction in Madagascar. Remote Sens. 2021, 13, 1519. [Google
    Scholar] [CrossRef] Dang, Y.P.; Pringle, M.J.; Schmidt, M.; Dalal, R.C.; Apan,
    A. Identifying the spatial variability of soil constraints using multi-year remote
    sensing. Field Crop. Res. 2011, 123, 248–258. [Google Scholar] [CrossRef] Ehammer,
    A.; Fritsch, S.; Conrad, C.; Lamers, J.; Dech, S. Statistical derivation of fPAR
    and LAI for irrigated cotton and rice in arid Uzbekistan by combining multi-temporal
    RapidEye data and ground measurements. In Remote Sensing for Agriculture, Ecosystems,
    and Hydrology Xii; SPIE: Toulouse, France, 2010; Volume 7824, p. 782409. [Google
    Scholar] Hancock, D.W.; Dougherty, C.T. Relationships between blue- and red-based
    vegetation indices and leaf area and yield of alfalfa. Crop Sci. 2007, 47, 2547–2556.
    [Google Scholar] [CrossRef] Wang, F.; Huang, J.; Tang, Y.; Wang, X. New Vegetation
    Index and Its Application in Estimating Leaf Area Index of Rice. Rice Sci. 2007,
    14, 195–203. [Google Scholar] [CrossRef] Saha, S.K.; Tiwari, S.K.; Kumar, S. Integrated
    Use of Hyperspectral Remote Sensing and Geostatistics in Spatial Prediction of
    Soil Organic Carbon Content. J. Indian Soc. Remote Sens. 2022, 50, 129–141. [Google
    Scholar] [CrossRef] Hunt, E.R., Jr.; Daughtry, C.S.T.; Eitel, J.U.H.; Long, D.S.
    Remote Sensing Leaf Chlorophyll Content Using a Visible Band Index. Agron. J.
    2011, 103, 1090–1099. [Google Scholar] [CrossRef] [Green Version] Ahamed, T.;
    Tian, L.; Zhang, Y.; Ting, K.C. A review of remote sensing methods for biomass
    feedstock production. Biomass Bioenerg. 2011, 35, 2455–2469. [Google Scholar]
    [CrossRef] Gitelson, A.A.; Kaufman, Y.J.; Stark, R.; Rundquist, D. Novel algorithms
    for remote estimation of vegetation fraction. Remote Sens. Environ. 2002, 80,
    76–87. [Google Scholar] [CrossRef] [Green Version] Gamon, J.A.; Surfus, J.S. Assessing
    leaf pigment content and activity with a reflectometer. New Phytol. 1999, 143,
    105–117. [Google Scholar] [CrossRef] Lymburner, L.; Beggs, P.J.; Jacobson, C.R.
    Estimation of canopy-average surface-specific leaf area using Landsat TM data.
    Photogramm. Eng. Remote Sens. 2000, 66, 183–191. [Google Scholar] He, Y.; Guo,
    X.; Wilmshurst, J.F. Comparison of different methods for measuring leaf area index
    in a mixed grassland. Can. J. Plant Sci. 2007, 87, 803–813. [Google Scholar] [CrossRef]
    Bali, N.; Singla, A. Deep Learning Based Wheat Crop Yield Prediction Model in
    Punjab Region of North India. Appl. Artif. Intell. 2021, 35, 1304–1328. [Google
    Scholar] [CrossRef] Elavarasan, D.; Vincent, D.R.; Sharma, V.; Zomaya, A.Y.; Srinivasan,
    K. Forecasting yield by integrating agrarian factors and machine learning models:
    A survey. Comput. Electron. Agric. 2018, 155, 257–282. [Google Scholar] [CrossRef]
    Ren, L.; Yang, L.; Wang, H.; Yang, F.; Chen, W.; Zhang, L.; Xu, J. Spatial prediction
    of soil organic matter in apple region based on random forest. J. Arid Land Resour.
    Environ. 2018, 32, 141–146. [Google Scholar] Gonzalez-Sanchez, A.; Frausto-Solis,
    J.; Ojeda-Bustamante, W. Predictive ability of machine learning methods for massive
    crop yield prediction. Span. J. Agric. Res. 2014, 12, 313–328. [Google Scholar]
    [CrossRef] [Green Version] Uddin, S.; Haque, I.; Lu, H.; Moni, M.A.; Gide, E.
    Comparative performance analysis of K-nearest neighbour (KNN) algorithm and its
    different variants for disease prediction. Sci. Rep. 2022, 12, 62561. [Google
    Scholar] [CrossRef] [PubMed] Liu, J.; Xiao, A.; Lei, G.; Dong, G.; Wu, M. Intelligent
    predicting of salt pond’s ion concentration based on support vector regression
    and neural network. Neural Comput. Appl. 2020, 32, 16901–16915. [Google Scholar]
    [CrossRef] Weleszczuka, J.; Kosinska-Selbi, B.; Cholewinskaa, P. Prediction of
    Polish Holstein’s economical index and calving interval using machine learning.
    Livest. Sci. 2022, 264, 105039. [Google Scholar] [CrossRef] Sirsat, M.S.; Cernadas,
    E.; Fernandez-Delgado, M.; Barro, S. Automatic prediction of village-wise soil
    fertility for several nutrients in India using a wide range of regression methods.
    Comput. Electron. Agric. 2018, 154, 120–133. [Google Scholar] [CrossRef] Suen,
    Y.L.; Melville, P.; Mooney, R.J. Combining bias and variance reduction techniques
    for regression trees. In Machine Learning: ECML 2005, Proceedings of the 16th
    European Conference on Machine Learning, Porto, Portugal, 3–7 October 2005; Gama,
    J., Camacho, R., Brazdil, P., Jorge, A., Torgo, L., Eds.; Springer: Berlin/Heidelberg,
    Germany, 2005; Volume 3720, pp. 741–749. [Google Scholar] Olmos-de-Aguilera, C.;
    Campos, P.G.; Risso, N. Error reduction in long-term mine planning estimates using
    deep learning models. Expert Syst. Appl. 2023, 217, 119487. [Google Scholar] [CrossRef]
    Huang, Y.; Yuan, B.; Wang, X.; Dai, Y.; Wang, D.; Gong, Z.; Chen, J.; Shen, L.;
    Fan, M.; Li, Z. Industrial wastewater source tracing: The initiative of SERS spectral
    signature aided by a one-dimensional convolutional neural network. Water Res.
    2023, 232, 119662. [Google Scholar] [CrossRef] Bera, S.; Shrivastava, V.K.; Satapathy,
    S.C. Advances in Hyperspectral Image Classification Based on Convolutional Neural
    Networks: A Review. CMES-Comp. Model. Eng. Sci. 2022, 133, 219–250. [Google Scholar]
    [CrossRef] Zhu, J.; Jiang, X.; Rong, Y.; Wei, W.; Wu, S.; Jiao, T.; Chen, Q. Label-free
    detection of trace level zearalenone in corn oil by surface-enhanced Raman spectroscopy
    (SERS) coupled with deep learning models. Food Chem. 2023, 414, 135705. [Google
    Scholar] [CrossRef] Jewan, S.Y.Y.; Pagay, V.; Billa, L.; Tyerman, S.D.; Gautam,
    D.; Sparkes, D.; Chai, H.H.; Singh, A. The feasibility of using a low-cost near-infrared,
    sensitive, consumer-grade digital camera mounted on a commercial UAV to assess
    Bambara groundnut yield. Int. J. Remote Sens. 2022, 43, 393–423. [Google Scholar]
    [CrossRef] Feng, L.; Zhang, Z.; Ma, Y.; Du, Q.; Williams, P.; Drewry, J.; Luck,
    B. Alfalfa Yield Prediction Using UAV-Based Hyperspectral Imagery and Ensemble
    Learning. Remote Sens. 2020, 12, 2028. [Google Scholar] [CrossRef] Sun, Y.; Zhang,
    Y.; Lu, L.; Wu, Y.; Zhang, Y.; Kamran, M.A.; Chen, B. The application of machine
    learning methods for prediction of metal immobilization remediation by biochar
    amendment in soil. Sci. Total Environ. 2022, 829, 154668. [Google Scholar] [CrossRef]
    Zhong, K.; Xiao, Y.; Zhao, X.; Yin, L.; Shu, C.; Tian, Y. Predictive ability of
    four statistical models for determining the influence of coal thermophysical properties
    during the initial phase of coal spontaneous combustion. Fuel 2021, 292, 120348.
    [Google Scholar] [CrossRef] Ghanbari, H.; Antoniades, D. Convolutional neural
    networks for mapping of lake sediment core particle size using hyperspectral imaging.
    Int. J. Appl. Earth Obs. Geoinf. 2022, 112, 102906. [Google Scholar] [CrossRef]
    He, Z.; Jiang, T.; Jiang, Y.; Luo, Q.; Chen, S.; Gong, K.; He, L.; Feng, H.; Yu,
    Q.; Tan, F.; et al. Gated recurrent unit models outperform other Machine learning
    models in prediction of minimum temperature in greenhouse Based on local weather
    data. Comput. Electron. Agric. 2022, 202, 107416. [Google Scholar] [CrossRef]
    Srivastava, A.K.; Safaei, N.; Khaki, S.; Lopez, G.; Zeng, W.; Ewert, F.; Gaiser,
    T.; Rahimi, J. Winter wheat yield prediction using convolutional neural networks
    from environmental and phenological data. Sci. Rep. 2022, 12, 32151. [Google Scholar]
    [CrossRef] He, X.; Chaney, N.W.; Schleiss, M.; Sheffield, J. Spatial downscaling
    of precipitation using adaptable random forests. Water Resour. Res. 2016, 52,
    8217–8237. [Google Scholar] [CrossRef] Hu, Z.; Zhang, L.; Wang, Y.; Shamaila,
    Z.; Zeng, A.; Song, J.; Liu, Y.; Wolfram, S.; Joachim, M.; He, X. Application
    of BP Neural Network in Predicting Winter Wheat Yield Based on Thermography Technology.
    Spectrosc. Spectr. Anal. 2013, 33, 1587–1592. [Google Scholar] Leng, L.; Yang,
    L.; Lei, X.; Zhang, W.; Ai, Z.; Yang, Z.; Zhan, H.; Yang, J.; Yuan, X.; Peng,
    H.; et al. Machine learning predicting and engineering the yield, N content, and
    specific surface area of biochar derived from pyrolysis of biomass. Biochar 2022,
    4, 631. [Google Scholar] [CrossRef]  Disclaimer/Publisher’s Note: The statements,
    opinions and data contained in all publications are solely those of the individual
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to people or property resulting
    from any ideas, methods, instructions or products referred to in the content.  ©
    2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open
    access article distributed under the terms and conditions of the Creative Commons
    Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share
    and Cite MDPI and ACS Style Li, Z.; Chen, Z.; Cheng, Q.; Fei, S.; Zhou, X. Deep
    Learning Models Outperform Generalized Machine Learning Models in Predicting Winter
    Wheat Yield Based on Multispectral Data from Drones. Drones 2023, 7, 505. https://doi.org/10.3390/drones7080505
    AMA Style Li Z, Chen Z, Cheng Q, Fei S, Zhou X. Deep Learning Models Outperform
    Generalized Machine Learning Models in Predicting Winter Wheat Yield Based on
    Multispectral Data from Drones. Drones. 2023; 7(8):505. https://doi.org/10.3390/drones7080505
    Chicago/Turabian Style Li, Zongpeng, Zhen Chen, Qian Cheng, Shuaipeng Fei, and
    Xinguo Zhou. 2023. \"Deep Learning Models Outperform Generalized Machine Learning
    Models in Predicting Winter Wheat Yield Based on Multispectral Data from Drones\"
    Drones 7, no. 8: 505. https://doi.org/10.3390/drones7080505 Article Metrics Citations
    Crossref   5 Scopus   3 Web of Science   1 Google Scholar   [click to view] Article
    Access Statistics Article access statistics Article Views 8. Jan 18. Jan 28. Jan
    7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0 500 1000 1500 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Drones, EISSN 2504-446X, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Drones
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Deep Learning Models Outperform Generalized Machine Learning Models in Predicting
    Winter Wheat Yield Based on Multispectral Data from Drones
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - El-Ghamry A.
  - Darwish A.
  - Hassanien A.E.
  citation_count: '18'
  description: Smart farming is a well-known and superior method of managing a farm,
    becoming more prevalent in today's contemporary agricultural practices. Crops
    are monitored for their overall health and productivity using various information
    and agricultural technology. This involves monitoring the state of the field crops
    and looking at various other indicators. The ultimate objective of smart farming
    is to decrease the amount of money spent on agricultural inputs while maintaining
    the same level of quality in the final result. The Internet of Things has enabled
    smart farming via different data collecting and storage methods. For example,
    intelligent sensor networks gather field data for optimum plant irrigation in
    contemporary irrigation systems. As the dependency of smart farming on the IoT
    environment increases, they become more vulnerable to cyber-attacks. The reason
    is that IoT networks include so many nodes with few resources available, making
    securing them a challenging problem. Therefore, the need for an intrusion detection
    system (IDS) that can adapt to such difficulties is of the utmost importance.
    This paper proposes a new system that detects intrusions in IoT networks used
    in agriculture. The NSL KDD data set is used to evaluate the proposed method,
    which starts by performing several pre-processing steps on the original feature
    set. Important features are selected using recursive feature elimination, then
    converted into square color images. Now input images are suitable to be learned
    by different CNN architectures such as VGG16, Inception, and Xception models.
    Performance comparisons of CNN models with classical machine learning algorithms
    are evaluated using accuracy, F1 Score, Recall, and precision metrics.
  doi: 10.1016/j.iot.2023.100709
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Cyber attacks in smart farming systems
    3. Related work 4. Methodology of intrusion detection in the smart farm environment
    5. Evaluation and discussion 6. Conclusion and future work Declaration of Competing
    Interest Data availability References Show full outline Cited by (21) Figures
    (7) Show 1 more figure Tables (12) Table 1 Table 2 Algorithm 1 Table 3 Table 4
    Table 5 Show all tables Internet of Things Volume 22, July 2023, 100709 An optimized
    CNN-based intrusion detection system for reducing risks in smart farming Author
    links open overlay panel Amir El-Ghamry a d e 1, Ashraf Darwish b 1, Aboul Ella
    Hassanien c 1 Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.iot.2023.100709
    Get rights and content Abstract Smart farming is a well-known and superior method
    of managing a farm, becoming more prevalent in today''s contemporary agricultural
    practices. Crops are monitored for their overall health and productivity using
    various information and agricultural technology. This involves monitoring the
    state of the field crops and looking at various other indicators. The ultimate
    objective of smart farming is to decrease the amount of money spent on agricultural
    inputs while maintaining the same level of quality in the final result. The Internet
    of Things has enabled smart farming via different data collecting and storage
    methods. For example, intelligent sensor networks gather field data for optimum
    plant irrigation in contemporary irrigation systems. As the dependency of smart
    farming on the IoT environment increases, they become more vulnerable to cyber-attacks.
    The reason is that IoT networks include so many nodes with few resources available,
    making securing them a challenging problem. Therefore, the need for an intrusion
    detection system (IDS) that can adapt to such difficulties is of the utmost importance.
    This paper proposes a new system that detects intrusions in IoT networks used
    in agriculture. The NSL KDD data set is used to evaluate the proposed method,
    which starts by performing several pre-processing steps on the original feature
    set. Important features are selected using recursive feature elimination, then
    converted into square color images. Now input images are suitable to be learned
    by different CNN architectures such as VGG16, Inception, and Xception models.
    Performance comparisons of CNN models with classical machine learning algorithms
    are evaluated using accuracy, F1 Score, Recall, and precision metrics. Previous
    article in issue Next article in issue Keywords Agriculture 4.0Cyber securityIntrusion
    detection systemMachine learning approachesDeep learningSmart agricultureSmart
    farming 1. Introduction Over the past century, humanity''s population has grown
    exponentially. By 2100 [1], it is predicted to reach a maximum of 10.9 billion.
    In the last fifty years, technical advancements in genetic engineering have greatly
    contributed to an increase in the quality and quantity of the world''s food supplies.
    Plants and seeds improved through genetic engineering can help feed a growing
    population while using less water. The next technological advance in agriculture
    will be \"smart farming\", which will allow for the long-term sustainability of
    food production [2]. Smart farming is a mix of various emerging technologies like
    Blockchain, 5 G communications, artificial intelligence (AI), drones, the Internet
    of Things (IoT), edge/fog computing, cloud computing, software-defined networking
    (SDN), smart grids, etc. [3]. In the rest of the sections, smart farming, agriculture
    4, IoT enabled agriculture are used interchangeably. In smart farming, data must
    be shared between various smart devices, which is why intelligent agriculture
    devices use the wireless network to send information to the Edge/Fog node and
    sink node [3]. This wireless network can take many forms, including the mesh network
    (ZigBee based), the GSM network (4 G/5 G based), the star network (LoRa based),
    and the software-defined networking. Since many IoT devices are deployed in public
    air, the biggest obstacle to establishing smart farming is ensuring users'' security
    and privacy. Several privacy and security concerns are linked to each layer of
    the IoT architecture because smart devices rely mainly on wireless networks to
    communicate [4]. For instance, an adversary might launch a wide variety of cyberattacks,
    such as distributed denial of service (DDoS) attacks, to render a service inaccessible
    and then insert fake data, which has consequences for food security and the effectiveness
    of agri-food supply chain and agricultural output. Additionally, systems developed
    for the heating and ventilation of a vertical farm or a drone used for spraying
    crops might be compromised in a cyberattack that targets smart farming. Some recent
    high-profile cyberattacks include those on the water system in Florida [5], a
    beverage company in Australia called ion which deals in dairy and drinks, and
    the wool broker software that is considered the largest meatpacker in the world
    [6]. Protecting advanced IoT networks increasingly requires the use of intrusion
    detection systems. Intrusion detection systems (IDSs) are crucial for identifying
    malicious actions. Intrusion detection systems (IDS) are network security technology
    that monitors and analyze internal system events for signs of intrusion [7]. An
    intrusion detection system can recognize a network or operating system''s protocol
    failure. The IDS may be used in tandem with other security technologies, such
    as encryption methods, authentication, authorization, and Blockchain, to further
    protect smart farming systems against cyber-attacks [8,9]. While developing an
    IDS, many researchers turn to AI-based methods, including deep learning, hierarchical
    strategies, reinforcement learning, and voting-based extreme learning machines.
    Applying deep learning to the issue of network intrusion detection is a newer
    field of study. With the right data and training, deep learning can significantly
    improve large datasets'' representation extraction and result quality. And recently,
    deep learning has seen major advances thanks to the convolutional neural networks
    (CNNs) work. Agricultural IoT networks, like any other IoT network, have the same
    security and privacy concerns as any other IoT application. This paper presents
    a methodology to detect attacks on smart farming systems and agricultural IoT
    networks. The NSL KDD data set [10], developed to solve the problem of the KDD''99
    data set, which is mentioned in [11], is utilized as the input data set for this
    methodology. Data from NSL-KDD are pre-processed, all symbolic characteristics
    are converted to numerical ones, and all numerical ones are subsequently transformed
    into symbols. The principal component analysis is used to extract characteristics
    from a dataset. The pre-processed dataset is then fed to machine learning techniques,
    including linear regression (LR), support vector machine (SVM), and random forest
    (RF), to establish its categorization. Measures of accuracy, Precision, and Recall
    are used to evaluate the efficacy of various machine learning (ML) algorithms.
    Not only are security and privacy crucial for IoT networks related to agriculture,
    but also for all different IoT applications. This paper proposes a system for
    identifying intrusions into agricultural-based Internet of Things networks that
    depends on CNN models in the detection task. A publicly available data set (NSL
    KDD) is utilized for evaluation purposes as input in the proposed approach. The
    data is first processed to obtain accurate results. Following this data-cleaning
    operation, the pre-processed dataset will be sent into the feature selection step.
    A recursive feature elimination (RFE) technique will cut down the total number
    of features and ensure that only discriminative features are passed on to the
    classification phase. At the next stage, the input data are converted from tabular
    format to images using a predetermined number of attributes. Then, image data
    were classified using several CNN models (VGG16, Xception, Inception), and we
    measured how well they performed using performance indicators such as accuracy,
    Precision, F1 Score, and Recall measurements. Finally, the best-performing CNN
    model is chosen for hyperparameters optimization to achieve an optimal fit between
    the dataset and this model. This paper has the following contributions: • Constructed
    an efficient IDS that applies a deep learning approach to provide accurate intrusion
    detection with a reduced feature set. • Propose a hyperparameter tuning for deep
    learning pre-trained models using a PSO optimizer that allows the proposed model
    to improve the evaluation metrics compared with the model without hyperparameter
    tuning. • Evaluated the proposed method using the NSL-KDD dataset and used multiple
    performance indicators, which show that the results of our method outperform existing
    approaches. • Critically evaluate the existing literature on cyber threats on
    the NSL KDD dataset. • Presented details of threats to smart farming and their
    implications. The remainder of the paper is organized as follows. Section 2 defines
    details of possible attacks on smart farming systems. Section 3 presents existing
    intrusion detection systems applied to the NSL KDD dataset. Section 4 explains
    the proposed methodology to detect intrusions in a smart farming environment.
    Section 5 shows and discusses our approach''s experimental results and compares
    them with state of the art. Section 6 presents the conclusions and future steps
    of our work. 2. Cyber attacks in smart farming systems An agricultural product
    requires a combination of various technologies to execute certain activities.
    For example, an irrigation system contains smart sensors, different actuators,
    several software modules, communication protocols, and human involvement. These
    complicated systems are generally outsourced from multiple suppliers, which increases
    the attack surface. Cybercriminals can exploit weaknesses to hack agricultural
    applications. Some attacks are comparable to those that target IoT networks, while
    others are unique to smart farming. There are different forms of threats in a
    smart farming environment. One form occurs because the Investment in a smart farming
    system is often substantial, and the systems may remain in use for years. Technicians,
    farmers, merchants, service providers, and others utilize them often during their
    careers. Users'' private information may be at risk if they access the system,
    opening the door to identity theft. Commercially sensitive information is another
    risk. Theft of data results in the disclosure of private business information,
    which may compromise both local and international business dealings (farmer to
    a service provider or international trade). There are many ways to categorize
    commercially sensitive data. Production efficiency data are used by competitors
    in trade choices, giving them an edge over primary producers. Furthermore, growth
    data might lead to focused study and IP theft attempts. Competitors may get an
    advantage in negotiations by acquiring access to sensitive information such as
    a farm''s land value, price information, trade volume, selling patterns, and growth
    statistics. These firms become weak links in a network that hackers may exploit.
    Another attack form to smart farming systems is compromising sensors, actuators,
    or robots, which causes their malfunction. Fields may be destroyed, unauthorised
    products transported, crimes committed, or physical assaults made by smashing
    heavy tractors or drones into the target. Hazardous attacks may be launched using
    GPS spoofing, side-channel attacks, and wireless communication flaws. There are
    also risks associated with the data while they are transmitted, which involve
    the devices and protocols used by networks. It is possible to exploit vulnerabilities
    to sniff out and access data, which can lead to various attacks. These attacks
    include denial of service attacks, man-in-the-middle attacks, and routing attacks.
    On the other hand, there are risks associated with data not actively being used,
    regardless of whether it is stored on the cloud or locally. The theft of IP might
    result from the breach of data. Examples of these breaches include SQL injection
    and flooding attacks [12]. The proliferation of cyberattacks on the components
    of smart farming systems has led to the necessity of developing effective and
    efficient IDSs to face the catastrophic effects of cybercrimes. The procurement
    of software, hardware, and other services from a variety of suppliers introduces
    security concerns, which have to be taken into consideration during the design
    of smart agricultural systems. There is also the possibility of a disruption in
    the supply chain, resulting in malfunctions in product design, engineering, manufacture,
    and distribution of products and services from suppliers to consumers [13]. Table
    1 summarizes different categories for cyber attacks in smart Farming systems and
    the affected security aspect of each category, supported by their related work.
    Table 1. Classification of attacks in smart farming systems. Attack Target Attack
    Category Violated Security Aspect References Smart Farming Hardware Side Channel
    Attack Confidentiality [14] RF jamming Availability [14,15] Smart Farming Network
    Denial of Service Confidentiality, Privacy [16,17] Man-In-The-Middle Attacks Confidentiality,
    Integrity [14,18] Botnets Availability, Integrity, Trust [14,19] Cloud Computing
    Attacks Trust, Integrity [14] Smart Farming Data Data Leakage Confidentiality
    [14,20] Ransomware Privacy, Trust, Integrity [18,21] Cloud Data Leakage Privacy
    [20,22] False Data Injection Integrity [14,23] Misconfiguration Integrity [14]
    Smart Farming Applications Software Update Attacks Integrity, Availability [14]
    Malware Injection Integrity [18] Buffer overflow Availability [18] SQL Injection
    attack Trust [14,24] 3. Related work The IDSs for smart farming environments can
    be implemented using classical machine learning, deep learning, and hybrid Machine
    Learning. This paper tested the proposed method on one of the most cited and popular
    IDS datasets and NSL-KDD. Various classical machine learning algorithms were explored
    and evaluated for anomaly-based IDS on the NSL-KDD dataset, such as Logistic regressions
    (LR), Artificial Neural networks (ANN), Naïve Bayes (NB), decision trees (DT),
    support vector machines (SVM), and random forest (RF). On the other hand, many
    works applied deep learning algorithms such as Convolution neural networks (CNN),
    deep belief networks (DBN), recurrent neural networks (RNN), and autoencoders
    (AE) for IDSs in IoT networks. In this section, recent related IDSs that used
    classical machine learning algorithms and deep learning-based approaches have
    been explored and conducted on the NSL-KDD dataset. Wang et al. [25] proposed
    an intrusion detection system that leverages both supervised and unsupervised
    learning capabilities to increase the detection process''s performance. The k-Means
    algorithm is used to enhance the classification ability of the KNN classifier
    by changing the way the nearest neighbors are selected. The developed model achieved
    comparable results in classifying the four attacks in the NSL KDD dataset. Using
    DNN for IDSs in SDNs, Rawat et al. [26] found the best hyperparameters and network
    configurations in the DNN, resulting in an accuracy of 75.9%. A Localized Evolving
    Based Anomaly Detection Scheme that belongs to Semi-Supervised Learning was introduced
    by Wang et al. [27]. Self-evolution was enabled during anomaly detection by combining
    offline and online learning with a semi-supervised training approach in contrasting
    pessimistic likelihood estimation (CPLE). As a result, the unlabeled data is given
    a strict label during self-training, which makes the model less accurate and leads
    to more misclassification. In CPLE-based models, unlabeled data is soft-labeled.
    Semi-supervised training with 500 labeled and 120,000 unlabeled data points was
    used to create the model. When all features in the dataset are utilized, the recommended
    method achieves an accuracy of 80.93% using NSL-KDD, whereas when just six features
    are used, it achieves an accuracy of 77.26%. Applying ML methods to SDN architecture,
    Dey et al. [28] proposed an OpenFlow controller-based flow-based anomaly detection
    solution. The foundation of their study is the NSL-KDD, which consists of 41 individual
    traits. The dataset was pre-processed using various feature selection strategies,
    such as the Chi-square test, Gain Ratio, Correlation-based Feature Selection (CFS)
    attribute subset evaluator, Info Gain, and Symmetric Uncertainty to improve classifier
    output. All feature selection methods retrieved 15 features, except for the CFS
    Subset Evaluator, which only extracted 9. We next apply several classifiers on
    the smaller dataset (10-fold cross-validation is used to aggregate findings from
    J48, Bayes Net, Naive Bayes, Decision Tree, and Random Forest). This study obtained
    an accuracy of 82% when Gain was utilized as a Ratio feature selector, and Random
    Forest was utilized as a classifier. Latah and Toker [29] examined a variety of
    anomaly-based intrusion detection algorithms and rated their performance using
    a variety of metrics. They focused on developing supervised machine learning algorithms
    that use the following classifiers: Naïve Bayes, Decision trees, Random Forest,
    Support Vector Machines, K-Nearest-Neighbor, Neural networks, Bagging Trees, different
    boosting algorithms, and Linear Discriminant Analysis. Principal Component Analysis
    was used to de-dimensionalize the data, and the researchers did this by concentrating
    on only six SDN characteristics. The Decision Tree, which has a rate of accuracy
    of 83.24 percent and an f-score of 89.38 percent, produced the most significant
    results. Tang et al. [30] trained a DNN for flow-based anomaly detection in a
    software-defined network (SDN) model for IDSs. They built a DNN with one input
    layer, three hidden layers, and an output layer. They used six features that fed
    to input neurons. These SDN features include basic and traffic-based features.
    Model output is a binary classifier. They employed 12–6-3 hidden layers of neurons.
    The model start settings are ten batches and 100 epochs. The experiments were
    75.7% accurate. Latah and Toker [31] developed a classification approach consisting
    of five-layer that employs KNN, Extreme Learning Machines (ELM), and a hierarchical
    model of ELM (H-ELM) for the first, second, and subsequent layers of the classification.
    The technique takes as input a total of six flow attributes. They used the controller''s
    top-level six flow parameters. Using the NSL-KDD dataset, they discovered that
    their multilayer approach improved system accuracy by 84.29%. A major adaptive
    component, or A-PCA, was introduced by Gao et al. [32] for an IDS that is an improved
    version of ELM, which is the Incremental Extreme Learning Machine (I-ELM). The
    critical parts of network traffic are selectively chosen using an adaptive process.
    As a result, the I-ELM achieves the best detection accuracy possible. The A-PCA
    is responsible for automatically extracting features based on the restrictions
    of the parameters, while the I-ELM is in charge of determining whether or not
    an attack was malicious. The NSL-KDD dataset was used to analyze how well this
    approach performed. A detection rate of 96.1% was achieved during this experiment,
    and they had an accuracy of 81.22%. Zheng et al. [33] suggested an enhanced Extreme
    Learning Machine Classification based on Linear Discriminant analysis as an intrusion
    detection system. By adding a function that measures spatial similarity as a weight
    to LDA, they were able to enhance the between-class scatter matrix, obtain the
    optimal transformation matrix for spatially separating high-dimensional data,
    and use it to shorten the feature set used in the classification phase. They used
    ELM with the single hidden layer NN approach to recognize the data after its dimensions
    were reduced. Evaluation results showed that the proposed ILECA improved generalization
    features and achieved a 92.35% accuracy rate. Rani [34] built an intrusion detection
    system using DNN and a technique based on classifier-level class imbalance. After
    the network data have been pre-processed via data conversion, the data are normalized
    using the min-max approach. After the information has been normalized, it is input
    into an artificial neural network, which subsequently alters the cross-entropy
    function to deal with the imbalanced dataset. The class labels are given weights
    during the training process. The accuracy of the system was measured at 85.56%.
    By combining a long-term memory with a short-term memory in a bidirectional LSM,
    Imrana et al. [35] created an IDS (BiDLSTM). On the NSL-KDD dataset, the BiDLSTM
    method was shown to be more effective than the regular LSTM. Compared to baseline
    LSTM''s 87.26% accuracy, it performed at 91.93%. Table 2 reviews the latest research
    works pertinent to the network traffic categorization test on the NSL-KDD dataset.
    Table 2. IDS review work on the NSL KDD dataset. Reference Year # of classes #
    of Features Feature engineering method Detection Model Features type Performance
    indicator Limitations [36] 2018 2,4 Not mentioned CNN CNN The character encoding
    of 256-bit each Acc = 85.07 Low accuracy rate, not consider high-level features
    [37] 2018 2 Pre-processed Feature set Deep Feature Embedding Learning (DFEL) DFEL+GBT
    DFEL+KNN DFEL+DT DFEL+LR DFEL+SVM Numerical Acc = 99.29 Doesn''t mention the number
    or names of reduced feature set [38] 2019 2,4 8 None DNN Numerical Acc = 78.10
    Low accuracy rate [39] 2019 2 Pre-processed Feature set None MLP, CNN, DNN, AE
    Numerical Acc = 99.24 No feature selection applied nor balancing [40] 2019 4 Pre-processed
    Feature set None GA optimized DBN Numerical Acc = 99.45 Imbalanced data set and
    no feature selection [41] 2019 4 Pre-processed Feature set kernel approximation
    MLP, CNN Numerical Acc = 82.60 Low detection rate [42] 2020 4 Pre-processed Feature
    set None Multi Agent Reinforcement Learning using Deep Q-Learning (AE-DQN) Numerical
    Acc = 79.00 Low detection rate [43] 2020 2 26 constant-valued attributes removal
    RNN Acc = 92.18 Low detection rate [44] 2020 2,4 Pre-processed Feature set None
    CNN Images Acc = 86.95 (2-class) Acc = 81.33 (4-class) Low detection rate [45]
    2020 4 Pre-processed Feature set None DNN Numerical Acc = 97.64 Deal with imbalanced
    data, No feature selection [46] 2021 4 Not mentioned DBN feature dimensionality
    reduction DBN Numerical Acc = 97.10 Doesn''t mention the numbers or names of reduced
    feature set [47] 2021 4 Not mentioned CNN LSTM Spatial features Acc = 90.67 Low
    detection rate [34] 2022 4 Pre-processed Feature set None DNN Numerical Acc =
    85.56 Low detection rate [48] 2022 2 15 Principal Component analysis (PCA) DNN
    Numerical ACC= 75.9 Low accuracy rate [49] 2022 4 20 Spider monkey optimization
    Stacked-deep polynomial network Numerical Acc = 99.02 Based on unbalanced feature
    set Long short-term memory (LSTM) approaches for traffic classification. An examination
    of prior research demonstrates that thanks to deep learning developments, CNN-based
    techniques are gaining popularity. Most studies present a collection of pre-processed
    data to the applicable classifiers, and most research has focused on developing
    end-to-end models using deep neural networks (DNN) architectures such as Convolution
    neural network (CNN). Using these models can lead to useful outcomes, such as
    reduced complexity in the data and enhanced ability to classify it. However, there
    are two major flaws in the majority of the works that have been reviewed: The
    first is that the class-imbalance problem isn''t being addressed by most recent
    efforts, which instead focus on various deep learning methodologies to address
    performance constraints in this domain. Second, the models that do not apply feature
    selection procedures employ features not discriminated against for final decision-making.
    As a result, only a select few papers have addressed these two pressing issues.
    Additionally, most of the analyzed work use features in numerical format, which
    is not the best format for using CNN models that work perfectly with image data.
    The proposed method''s first feature is pre-processing, followed by data balancing.
    After that, numerical features are transformed into images for the best use of
    CNN model capabilities. 4. Methodology of intrusion detection in the smart farm
    environment In this section, we introduce our methodology, which aims to enhance
    the performance of systems that detect intrusions in smart farming environments.
    The proposed wireless network IDS can be applied in a smart farm, as shown in
    Fig. 1, where sensors on Framing and watering components collect Wi-Fi frames
    and send them to the proposed IDS for attack detection. The proposed algorithm
    includes seven stages, as shown in Fig. 2. Firstly, data is collected for experimental
    purposes. In this work, we used the NSL-KDD dataset [10]. Secondly, the data is
    pre-processed to achieve a high-performance model. The number of features produced
    after the data cleaning process is 11 features. Thirdly, the pre-processed dataset
    will be the input to the feature selection stage, which includes applying a recursive
    feature elimination algorithm to reduce the number of features and guarantee that
    only discriminative features will be used in the classification stage—applying
    recursive feature elimination algorithm help to cut the feature set to 9 features.
    In the fourth step, tabular data is transformed into images based on the number
    of selected features so that input images can fit the CNN models. In the sixth
    step, the classification process is implemented using different CNN models (VGG16,
    Xception, Inception), and the model was assessed using different performance indicators.
    Finally, the CNN model with the best performance (VGG16) is selected for the hyperparameters
    optimization stage to fit the dataset with this model for superior results. Download
    : Download high-res image (396KB) Download : Download full-size image Fig. 1.
    The proposed architecture of intrusion detection system in smart farms. Download
    : Download high-res image (723KB) Download : Download full-size image Fig. 2.
    The proposed methodology for intrusion detection systems in smart farms. 4.1.
    Pre-processing phase For our study, we are only interested in detecting the intrusion.
    That is, the proposed approach aims to determine whether any intrusion has occurred
    in the network system. So this problem is considered as a binary classification
    problem. The first step in the proposed methodology is data pre-processing which
    consider a crucial stage in most machine learning pipelines. In this step, several
    operations are performed on raw data, such as dealing with missing values and
    dimension reduction for faster processing and better performance. Algorithm 1
    shows the performed pre-processing steps. Algorithm 1. Pre-processing stage. 1.Check
    NULL values present in Train set and Test set 2.Convert categorical features to
    numerical using One-Hot encoding technique 3.Check number of 0 s in the Target
    Column in Train set and Test set 4.Target Encoding normal to 0, all attacks to
    1 in new column \"is_intrusion\" 5.Drop the redundant label columns [''attack'',
    ''intrusion'', ''level''] and use only [''is_intrusion''] 6.Removing features
    where variation is 0 7.Drop redundant and meaningless input features 8.Compute
    the standard correlation between attributes and Target column 9.Select a set of
    features that are highly correlated with the Target column 10.Remove high correlated
    feature by checking collinearity The pre-processing algorithm starts by checking
    the data for null values and then removing the data row containing any missing
    value due to the abundance of data. Since the feature set contains both Numeric
    and Categorical fields. The second step is to convert categorical data into numbers
    using one-hot encoding to be ready for further processing by the machine learning
    algorithms. Thirdly, the label column is encoded into two values: 0 denotes no
    intrusion, and all other attack values as 1, which denotes that there has been
    an intrusion. A new column named “is intrusion” is added, containing the flags
    above for each record. The column intrusion is now set as our target column. In
    the fourth step, the columns with zero variations are removed since they won''t
    contribute to the classification process as they lack meaningfulness and discrimination
    abilities. In the fifth step, a statistical approach is used to study the input
    features'' relationship with the target column. The correlations of the input
    features with the target column are calculated. Columns that have a very high
    (> 0.9) or a very low (near 0) correlation with the target column are removed
    from the feature set such as [ (num_outbound_cmds), (srv_count), (dst_bytes),
    (src_bytes), (land), (is_host_login), (urgent), (num_failed_logins), (num_shells)].
    Then, the top 20 features that are most correlated with the target column ordered
    by their absolute value are selected, as shown in Table 3. The sixth step is to
    check for collinearity between input features and remove or combine highly correlated
    features such as [ (flag)_(S0), (dst)_(host)_(srv)_(serror)_(rate), (dst)_(host)_(serror)_(rate),
    (dst)_(host)_(same)_(srv)_(rate)]. The resulting feature set after pre-processing
    phase is shown in Table 4. Table 3. Top 20 feature sets of high correlation with
    target. Index Feature Name Correlation with Target 1 (flag)_(SF) 0.756285 2 (same)_(srv)_(rate)
    0.751912 3 (dst)_(host)_(srv)_(count) 0.722546 4 (dst)_(host)_(same)_(srv)_(rate)
    0.693813 5 (logged)_(in) 0.690181 6 (dst)_(host)_(srv)_(serror)_(rate) 0.654984
    7 (dst)_(host)_(serror)_(rate) 0.651840 8 (serror)_(rate) 0.650651 9 (flag)_(S0)
    0.650205 10 (srv)_(serror)_(rate) 0.648287 11 (count) 0.576442 12 (service)_(http)
    0.562320 13 (service)_(private) 0.449718 14 (dst)_(host)_(count) 0.375051 15 (service)_(domain)_(u)
    0.258930 16 (srv)_(rerror)_(rate) 0.253502 17 (dst)_(host)_(srv)_(rerror)_(rate)
    0.253428 18 (rerror)_(rate) 0.253395 19 (dst)_(host)_(rerror)_(rate) 0.252562
    20 (dst)_(host)_(diff)_(srv)_(rate) 0.242897 Table 4. Feature set after pre-processing
    stage. Index Feature Name 1 (flag)_(SF) 2 (same)_(srv)_(rate) 3 (dst)_(host)_(srv)_(count)
    4 (logged)_(in) 5 (serror)_(rate) 6 (count) 7 (service)_(http) 8 (service)_(private)
    9 (dst)_(host)_(count) 10 (service)_(domain)_(u) 11 (srv)_(rerror)_(rate) 4.2.
    Data balancing stage After cleaning and pre-processing, the resulting dataset
    includes two classes: 0 for the Benign class and 1 for the attack class. The ratio
    of the number of records for each class in the training and testing dataset is
    shown in Fig. 3. The Figure shows that the resulting dataset suffers from an imbalance
    problem since the number of records belonging to the Normal class is larger (67,342)
    compared to that of instances in the attack class (58,630). To address this problem,
    Synthetic Minority Over-sampling Technique Evaluation (SMOTE) is applied to handle
    the imbalance classes problem. SMOTE is one of the most successful methods used
    in different practical applications. SMOTE generates new records of the minority
    class by interpolation, it uses the average of some instances in the normal class
    for the creation of new samples for that class. After this step, we can ensure
    that the percentage of the normal attack classes is 1 to 1. Download : Download
    high-res image (208KB) Download : Download full-size image Fig. 3. Class distribution
    in Training and Testing set. 4.3. Feature selection stage Feature selection is
    a crucial stage in detecting malicious network flow more accurately. If the feature
    selector module is ignored from machine learning pipelines, wrong classification
    and long training time would be possible. Deep discussions regarding the cruciality
    of the feature selection process for attack detection are shown in [50]. The authors
    reported that applying feature selection helped to reduce training and testing
    time and increase the performance of models. Recursive feature elimination (RFE)
    is adopted in this work to select the most discriminative feature set. RFE algorithm
    belongs to the wrapper-based attribute selection approach. It works by adopting
    a search mechanism to make the feature set the most minimum while preserving the
    discrimination ability of the features. The RFE technique starts by learning an
    initial feature set, then weights are assigned to the trained features, and finally,
    features whose weights value are minimum are ignored. This process is repeated
    until the algorithm reaches the most discriminating set of attributes. The resulting
    feature set can produce the best performance of the proposed model while consuming
    the least computation time. In each iteration of the RFE algorithm, an ML model
    is applied for record partitioning. Selecting the appropriate model to enhance
    the stability of the selection process. This work applies a random forest classifier
    because the features are related to the target in a non-linear form. Finally,
    RFE partition records of the dataset depending on the column of the class label
    [51]. The RFE algorithm reduces the feature set to 9 input features, shown in
    Table 5. Table 5. Reduced feature set after applying the RFE algorithm. Index
    Feature Name 1 (flag)_(SF) 2 (same)_(srv)_(rate) 3 (dst)_(host)_(srv)_(count)
    4 (logged)_(in) 5 (serror)_(rate) 6 (count) 7 (service)_(http) 8 (service)_(domain)_(u)
    9 (srv)_(rerror)_(rate) 4.4. Tabular transformation into images This stage aims
    to generate an appropriate input for the intrusion detector module as the NSL-KDD
    dataset contains tabular data. The proposed methodology uses CNN models for the
    detection process. The network traffic needs to be transformed to images that
    are the most proper input format for CNN architectures [52]. First, data is normalized
    to the pixel range to be ready for data transformation. The data is normalized
    by converting features such that the values should also be normalized into the
    scale of 0–255 because image pixels range from 0 to 255. The data samples are
    chunked depending on the feature sizes of network traffic datasets after data
    normalization. As the used NSL-KDD dataset contains nine essential features, 27
    consecutive records, each with nine features (27×9 = 243 feature values in total)
    is converted into an image with the dimensions 9 × 9 × 3. Thus, each modified
    picture is a three-channel square color image (red, green, and blue). After that,
    the transformed images are labeled depending on the attack patterns in the data
    chunks. This image is called \"Normal\" if all chunk samples are normal. If not,
    the image is marked as a threat to the chunk. The final sets of modified images
    are used as input for CNN models. Fig. 4 depicts the typical samples for each
    of the two groups in the NSL KDD dataset. Download : Download high-res image (211KB)
    Download : Download full-size image Fig. 4. The representative sample images of
    each class. 4.5. CNN classification stage After tabular data is converted to images,
    different CNN models are applied to the produced images without any additional
    processing. Fig. 5 shows a general architecture of CNN that can be applied to
    the transformed input images. The typical CNN architecture comprises a series
    of convolution-pooling layers that end with fully connected layers. The convolutional
    layers automatically extract features representing normal and attack network flow
    from the images. The pooling layers help reduce data while preserving important
    features and avoiding the overfitting problem of the CNN models. Finally, fully-connected
    layers connect all features and apply activation functions (sigmoid or softmax)
    to produce either normal or attached output classes. Download : Download high-res
    image (315KB) Download : Download full-size image Fig. 5. A general CNN architecture
    for intrusion detection after tabular conversion to images. The proposed IDS architecture
    applied CNN models that are based on learning transfer. The selected CNN models
    are pre-trained on the ImageNet dataset. Three different models are selected:
    VGG16, Exception, and Inception model, because of their success in different image
    classification tasks [53]. The VGG16 network contains five blocks of convolutional
    layers and three fully connected layers. The Inception model extracts features
    that combine different contexts to form various feature patterns. The Exception
    model extends the Inception network that changes the conventional convolution
    layers to different convolutions that are depth-wise and separable. 4.6. PSO for
    optimizing CNN hyperparameters CNN models have a set of hyperparameters which
    is crucial to tune to get a high-performance detection model and affect the structure
    of the applied CNN models. There are two categories of hyperparameters. The hyperparameters
    in the first category are adapted while designing the model, such as the number
    of frozen layers, the dropout ratio, and the learning rate. However, the hyperparameters
    in the second category are considered the keys to improving performance while
    decreasing training time, such as the number of epochs, early stop patience, and
    batch size. One of the Common hyperparameter optimization algorithms is Particle
    swarm optimization (PSO) which can be categorized as a population-based and meta-heuristic
    optimization technique. It has fast convergence (time complexity is O(NlogN))
    and enables parallelization because particles operate independently. It is based
    on information sharing and cooperation between particles in a swarm. Additionally,
    PSO is applicable for various types of hyper-parameters, which makes it an appropriate
    choice in the proposed methodology. Fig. 6 shows the steps of applying the PSO
    technique for optimizing the hyperparameters of the VGG16 model. Download : Download
    high-res image (549KB) Download : Download full-size image Fig. 6. The flowchart
    of PSO-based hyperparameters optimization of the VGG16 model. In PSO, a particle
    group scans the search space semi-randomly. Each particle in the swarm has three
    attributes: current particle position, current velocity, and best particle position.
    The particles in the PSO algorithm need initialization of the position and velocity,
    which is an important factor for avoiding the local minimum problem. After that,
    the algorithm calculates two attributes for each particle: current particle position
    and performance score, which are used to update the velocity of each particle,
    and results in their moving according to the updated velocity vectors. The PSO
    works in an iterative way where the previously mentioned steps continue until
    a particularly accepted convergence [54]. Finally, the particles get closer to
    the promising regions, then stop when a global optimum is reached. 5. Evaluation
    and discussion This paper uses the”NSL-KDD” dataset to evaluate the proposed model.
    We calculated various performance metrics such as accuracy, F1 Score, Precision,
    and Recall which are given below. The evaluation experiments have been run on
    MacBook Pro with 2.6 GHz Intel Core i7 (4 cores, 6 MB cache) processing units,
    Radeon Pro 450 2048 MB, and Intel HD Graphics 530 with 1536 MB graphics and has
    16GB DDR3 (2133 MHz) of RAM(Random Access Memory). 5.1. Dataset description The
    experiments in this study are based on (the NSL-KDD) dataset, which consists of
    internet traffic samples encountered by a real Intrusion Detection System. The
    dataset is a refined version of the KDD‘99 Dataset. It is used as benchmark data
    to evaluate various intrusion detection methods on modern-day network systems.
    The dataset contains four subsets: KDDTrain+, KDDTest+, KDDTrain+_20Percent, and
    KDDTest+_20Percent. The first two subsets contain all the train and test sets,
    while the latter contains only 20% of the train and test sets. For this experiment,
    we will use the KDDTrain+ and KDDTest+ datasets. The dataset presents 43 columns,
    out of which the ‘attack’ field contains the type of attacks detected in the network.
    The score is a field denoting the difficulty level and a binary class attack that
    classifies if there has been any attack on the traffic input. There are 22 types
    and a normal value for no attack, as shown in Table 6. Each attack type is classified
    into four categories: DOS, Probe, Privilege, and Access. The classifications are
    shown in Table 6. Table 6, we can notice that the Denial of Service attack is
    the most popular post popular with higher frequency. Table 6. Types of network
    attacks. Index Attack Type Number of instances Attack category 0 Normal flow 67,342
    None 1 neptune 41,214 DOS 2 Satan 3633 Probe 3 ipsweep 3599 Probe 4 portsweep
    2931 Probe 5 Smurf 2646 DOS 6 Nmap 1493 Probe 7 Back 956 DOS 8 teardrop 892 DOS
    9 warezclient 890 Access 10 Pod 201 DOS 11 guess passwd 53 Access 12 buffer overflow
    30 Privilege 13 warezmaster 20 Access 14 Land 18 DOS 15 Imap 11 Access 16 rootkit
    10 Privilege 17 loadmodule 9 Privilege 18 ftp write 8 Access 19 Multihop 7 Access
    20 Phf 4 Access 21 Perl 3 Privilege 22 Spy 2 Access 5.2. Evaluation indicators
    The confusion matrix is used as the classification metric of the applied models.
    The confusion matrix consists of four values: True Positive (TP), False Negative
    (FN), False Positive (FP), and True Negative (TN). They are defined as follows:
    1 True Positive (TP): represent the evaluation result that detects the intrusion
    in the smart farm network if the intrusion exists. The TP value is at the entry
    [0][0] in the confusion matrix. 2 False Negative (FN): represent the evaluation
    result that does not detect the intrusion even if the intrusion does not exist
    in the smart farm network. The FN value is at the entry [1][0] in the confusion
    matrix 3 False Positive (FP) (AKA False Alarm rate): represent the evaluation
    result that detects the intrusion in the smart farm network when the intrusion
    does not exist. The FP value is at the entry [0][1] in the confusion matrix. 4
    True Negative (TN): represent the evaluation result that does not detect the intrusion
    even if there is no intrusion in the smart farm network. The TN value is in the
    confusion matrix''s entry [1][1]. The Performance of the proposed network IDS
    in smart farming architecture can be measured using accuracy (A), Precision (P),
    Recall (R), and F1 Score (F1) as the performance indicators for the proposed classification
    method 1 Accuracy (A). The proportion of the total number of correct predictions.
    The formula of accuracy is calculated by: (1) 2 Recall (R) (AKA Sensitivity and
    True Positive Rate) The ratio of the total number of attack samples that are correctly
    recognized divided by the total number of attack samples. It is an appropriate
    metric to use to reduce false negatives. The formula of Recall is given by: (2)
    1 Precision (P). Calculated by dividing the number of true positives by adding
    the number of true positives and the number of false positives. It is a good indicator
    to use when focusing on limiting false positives. The formula of Precision is
    given by: (3) 2 F1 Score (F1). The harmonic mean of the Recall and Precision.
    It analyzes false positives and false negatives. It gives good results when dealing
    with an imbalanced dataset. The formula for the F1 score is given by: (4) 5.3.
    Discussion, results and analysis The detection capability of the proposed framework
    is first evaluated by applying different base CNN models (VGG16, Xception, Inception)
    with default hyperparameter values. The results of evaluating the three applied
    CNN models on the NSL-KDD dataset are shown in Table 7. As shown in Table 7, the
    VGG16 method shows the best performance by achieving 97.89% accuracy with 3.61%
    and 41.3% accuracy improvement compared to Inception and Xception models. Additionally,
    results obtained by applying VGG16 achieve 97.88% F1-score with 3.67% and 47.38%
    superiority, contrasting with the Inception and Xception models. Fig. 7 shows
    the confusion matrix of each of the applied three CNN models on the converted
    images with default hyperparameters values. Table 7. Evaluation of base CNN models
    with default hyperparameter values. Model Accuracy Precision recall f1 VGG16 0.9789
    0.9796 0.9789 0.9788 Inception 0.9428 0.9480 0.9428 0.9421 Xception 0.5659 0.7838
    0.5659 0.5050 Download : Download high-res image (372KB) Download : Download full-size
    image Fig. 7. Confusion matrices of base CNN models with default hyperparameter
    values. To build optimal models, the major hyper-parameters of the VGG16 model
    were optimized since it achieves the highest using random search and PSO optimization
    techniques. Tables 8 and 9 illustrate the initial search range in the form of
    (Min, Max, Step) and the optimal values of the hyperparameters using random search
    and PSO, respectively. Table 8. Initial (Min, Max, Step) values and optimal values
    of the hyperparameters using random search. Parameter Min Max Step Optimized Frozen
    15 18 1 16 Epochs 1 20 1 15 Patience 2 4 1 3 Learning rate 0.001 0.006 0.001 0.002
    Dropout rate 0.3 0.6 0.1 0.6 Table 9. initial (Min, Max, Step) values and optimal
    values of the hyperparameters using the PSO algorithm. Parameter Min Max Step
    Optimized Frozen 15 18 1 17 Epochs 1 20 1 15 Patience 2 4 1 4 Learning rate 0.001
    0.006 0.001 0.002 Dropout rate 0.3 0.6 0.1 0.4 After Parameter optimization, the
    optimized VGG16 model was used as the base learner to build the proposed detection
    model. The results of the optimized VGG16 model are shown in Table 10. As shown
    in Table 10, the optimized VGG16 model achieves high accuracy, Precision, and
    Recall of 99.99% and 100% F1-scores after data is transformed. Then PSO algorithm
    is applied. Moreover, the results in the Table indicate that the optimized VGG16
    model has at least 2.1% superiority in both accuracy and F1 score compared to
    the VGG16 model with default parameters. Additionally, Among the two models shown
    in Table 8, the proposed optimized VGG16-PSO method gives the best performance
    by achieving at least 1.73% and 1.74% accuracy and F1-score improvements, respectively,
    compared with optimized VGG16 using the Random Search algorithm. that means the
    optimized VGG16 model with PSO algorithm outperform both the conventional VGG16
    model and the optimized VGG16 model with random search method. Table 10. Evaluation
    of optimized VGG16 model using random search and PSO algorithms. Model accuracy
    precision recall f1 VGG16-RandomSearch 0.9826 0.9830 0.9826 0.9826 VGG16-PSO 0.9999
    0.9999 0.9999 0.100 5.4. Comparison with literature A comparison with existing
    work has been made on the test set of the NSL-KDD dataset using accuracy, Precision,
    Recall, and the F1 score in Table 11. The proposed approach has obtained satisfactory
    results, and class imbalance, feature selection, feature transformation, and parameter
    tuning play a crucial role in achieving high performance. Most previous works
    have not addressed the issues of the imbalanced dataset and dealing with the full
    feature set, thereby being unable to get high performance on the specified dataset.
    Most of the earlier results reported accuracy ranging from 80% to 91%, as shown
    in Table 11. Table 11. Accuracy of different models in literature and Proposed
    VGG16-PSO. Reference Year Applied Model Accuracy Precision Recall F1 Score [55]
    2018 CNN 80.13 – – – [30] 2019 Adaptive Ensemble 85.20 86.50 86.50 85.20 [56]
    2019 TES-IDS 85.79 88.00 86.80 87.39 [57] 2020 BAT-MC 84.25 – – – [58] 2020 JSAE-FSVM
    85.80 91.90 78.50 84.70 [59] 2020 AE 84.21 87.00 80.37 81.98 [60] 2020 NIDeMFO
    84.14 – – 87.34 [61] 2020 CNN + BiLSTM 83.58 85.82 84.49 85.14 [62] 2020 Hybrid
    of C5 DT + OC-SVM 83.24 – – 83.25 [63] 2021 FL-NIDS + CNN 84.89 84.47 85.02 83.92
    [64] 2021 DLHA 87.55 88.16 90.14 89.19 [32] 2022 DLNID 90.73 86.38 93.17 89.65
    [65] 2022 CS-NN 85.56 97.09 76.94 85.85 [24] 2022 PCA + DNN 75.9 – – – Proposed
    Method VGG16-PSO 0.9999 0.9999 0.9999 0.100 6. Conclusion and future work Agriculture
    is essential to the country''s economic health since it is the main food source
    for everyone. It links a wide range of businesses around the country. A country
    with a large agricultural industry is considered economically and socially prosperous.
    In the majority of nations, agriculture is an essential source of employment.
    Smart farming [66] is the latest technological breakthrough for the agricultural
    sector''s sustainable food production. Smart farms become possible only with the
    emergence of the IoT and ML [67]. Numerous advantages emerge from the IoT network,
    such as improved efficiency, cost optimization, optimum energy use, forecasting,
    and public comfort. The variety of data processing technologies and processes
    causes reliability and security concerns, hampering the widespread application
    of the Internet of things in farming. This paper presents a technique for detecting
    intrusions into agricultural IoT networks using image-based features and deep
    learning models. An optimized VGG 16 model has a Precision F1 score, and accuracy
    is better than 99%. In the future, we will consider using different DNN models
    with different architectures to evaluate the proposed method rather than pre-trained
    models. Additionally, we will consider different recent datasets for analyzing
    different feature sets. Declaration of Competing Interest There is NO conflict
    of Interest. Data availability Data will be made available on request. References
    [1] U. Desa United Nations, Department of Economic and Social Affairs, Population
    Division World Population Prospects, United Nations: New York, NY, USA (2019)
    Available online: https://population.un.org/wpp/Publications/Files/WPP2019_10KeyFindings.pdf
    (accessed on 15 January 2022) Google Scholar [2] B. Basso, J. Antle Digital agriculture
    to design sustainable agricultural systems Nature Sustain., 3 (4) (2020 Apr),
    pp. 254-256 CrossRefView in ScopusGoogle Scholar [3] O. Friha, M.A. Ferrag, L.
    Shu, M. Nafa A robust security framework based on Blockchain and SDN for fog computing
    enabled agricultural Internet of things In2020 International Conference on Internet
    of Things and Intelligent Applications (ITIA), IEEE (2020), pp. 1-5 CrossRefGoogle
    Scholar [4] A. Tewari, B.B. Gupta Security, privacy and trust of different layers
    in Internet-of-Things (IoTs) framework Future Gener. Comput. Syst., 108 (2020
    Jul 1), pp. 909-920 View PDFView articleView in ScopusGoogle Scholar [5] Mathews
    L. Florida water plant hackers exploited old software and poor password habits.
    Available online:https://www.forbes.com/sites/leemathews/2021/02/15/florida-water-plant-hackers-exploited-old-software-and-poorpassword-habits/?sh=78dd125c334e
    (accessed on 19 December 2021). Google Scholar [6] R. Musotto, M. Nasar Ransomware
    attack on sheep farmers shows there''s no room for woolly thinking in cyber security
    The Conversation (2020) Available online: https://theconversation.com/ransomware-attack-on-sheep-farmers-shows-theres-no-room-for-woollythinking-in-cyber-security-132882
    (accessed on 19 December 2021) Google Scholar [7] W. Zhu, M. Deng, Q. Zhou An
    intrusion detection algorithm for wireless networks based on ASDL IEEE/CAA J.
    Autom. Sin., 5 (1) (2017), pp. 92-107 Google Scholar [8] Othmane Friha, Mohamed
    Amine Ferrag, Lei Shu, Leandros Maglaras, Kim-KwangRaymond Choo, Mehdi Nafaa FELIDS:
    federated learning-based intrusion detection system for agricultural Internet
    of Things J. Parallel Distrib. Comput., 165 (2022), pp. 17-31, 10.1016/j.jpdc.2022.03.003
    View PDFView articleView in ScopusGoogle Scholar [9] Amit Kumar Tyagi, N. Sreenath
    Cyber physical systems: analyses, challenges and possible solutions Internet Things
    Cyber-Phys. Syst., 1 (2021), pp. 22-33, 10.1016/j.iotcps.2021.12.002 Google Scholar
    [10] www: https://www.unb.ca/cic/datasets/nsl.html. Google Scholar [11] M. Tavallaee,
    E. Bagheri, W. Lu, A.A. Ghorbani A detailed analysis of the KDD CUP 99 data set
    In2009 IEEE symposium on computational intelligence for security and defense applications
    (2009), pp. 1-6 CrossRefGoogle Scholar [12] J. Borchi, M. Woodcock, M. Redshaw,
    B. Raniga Cyber Security Threats—Are We Prepared? A Threat-Based Assessment of
    the Cyber Resilience of the Australian Agricultural Sector AgriFutures Australia,
    Wagga Wagga, NSW, Australia (2021) Tech. Rep.Jun:21-070 Google Scholar [13] M.H.
    Ronaghi A blockchain maturity model in agricultural supply chain Inf. Process.
    Agric., 8 (3) (2021), pp. 398-408 View PDFView articleView in ScopusGoogle Scholar
    [14] M. Gupta, M. Abdelsalam, S. Khorsandroo, S. Mittal Security and privacy in
    smart farming: challenges and opportunities IEEE Access, 8 (2020), pp. 34564-34584
    CrossRefView in ScopusGoogle Scholar [15] A.N. Jahromi, H. Karimipour, A. Dehghantanha,
    K.K. Choo Toward detection and attribution of cyber-attacks in iot-enabled cyber–physical
    systems IEEE Internet Things J., 8 (17) (2021), pp. 13712-13722 CrossRefView in
    ScopusGoogle Scholar [16] C. Kolias, G. Kambourakis, A. Stavrou, J. Voas DDoS
    in the IoT: Mirai and other botnets Computer (Long Beach Calif), 50 (7) (2017),
    pp. 80-84 View in ScopusGoogle Scholar [17] M. Antonakakis, T. April, M. Bailey,
    M. Bernhard, E. Bursztein, J. Cochran, Z. Durumeric, J.A. Halderman, L. Invernizzi,
    M. Kallitsis, D Kumar Understanding the mirai botnet In26th USENIX security symposium
    (USENIX Security 17) (2017), pp. 1093-1110 Google Scholar [18] D. Ye, T.Y. Zhang
    Summation detector for false data-injection attack in cyber-physical systems IEEE
    Trans. Cybern., 50 (6) (2019), pp. 2338-2345 Google Scholar [19] A. Al Shorman,
    H. Faris, I Aljarah Unsupervised intelligent system based on one class support
    vector machine and Grey Wolf optimization for IoT botnet detection J. Ambient
    Intell. Humaniz. Comput., 11 (7) (2020), pp. 2809-2825 CrossRefView in ScopusGoogle
    Scholar [20] A.R. Javed, M.A. Hassan, F. Shahzad, W. Ahmed, S. Singh, T. Baker,
    T.R. Gadekallu Integration of blockchain technology and federated learning in
    vehicular (iot) networks: a comprehensive survey Sensors, 22 (12) (2022), p. 4394
    CrossRefView in ScopusGoogle Scholar [21] P.N. Bahrami, A. Dehghantanha, T. Dargahi,
    R.M. Parizi, K.K. Choo, H.H. Javadi Cyber kill chain-based taxonomy of advanced
    persistent threat actors: analogy of tactics, techniques, and procedures J. Inf.
    Process. Syst., 15 (4) (2019), pp. 865-889 View in ScopusGoogle Scholar [22] S.K.
    Nayak, A.C. Ojha Data leakage detection and prevention: review and research directions
    Mach. Learn. Inf. Process. (2020), pp. 203-212 CrossRefView in ScopusGoogle Scholar
    [23] A.S. Musleh, G. Chen, Z.Y. Dong A survey on the detection algorithms for
    false data injection attacks in smart grids IEEE Trans. Smart Grid., 11 (3) (2019),
    pp. 2218-2234 Google Scholar [24] T. Gaber, A. El-Ghamry, A.E. Hassanien Injection
    attack detection using machine learning for smart IoT applications Phys. Commun.,
    52 (2022), Article 101685 View PDFView articleView in ScopusGoogle Scholar [25]
    H. Wang, B. Han, J. Su, X. Wang A high-performance intrusion detection method
    based on combining supervised and unsupervised learning 2018 IEEE SmartWorld,
    Ubiquitous Intelligence & Computing, Advanced & Trusted Computing, Scalable Computing
    & Communications, Cloud & Big Data Computing, Internet of People and Smart City
    Innovation, IEEE (2018), pp. 1803-1810 SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI
    CrossRefView in ScopusGoogle Scholar [26] S. Rawat, A. Srinivasan, V. Ravi, U.
    Ghosh Intrusion detection systems using classical machine learning techniques
    vs integrated unsupervised feature learning and deep neural network Internet Technol.
    Lett., 5 (1) (2022), p. e232 View in ScopusGoogle Scholar [27] B. Wang, Y. Sun,
    C. Yuan, X. Xu LESLA: a smart solution for SDN-enabled mMTC E-health monitoring
    system Proceedings of the 8th ACM MobiHoc 2018 Workshop on Pervasive Wireless
    Healthcare Workshop (2018), pp. 1-6 Google Scholar [28] S.K. Dey, M.M. Rahman,
    M.R. Uddin Detection of flow based anomaly in openflow controller: machine learning
    approach in software defined networking 2018 4th International Conference on Electrical
    Engineering and Information & Communication Technology (iCEEiCT, IEEE (2018),
    pp. 416-421 CrossRefView in ScopusGoogle Scholar [29] M. Latah, L. Toker Towards
    an efficient anomaly-based intrusion detection for software-defined networks IET
    Netw., 7 (6) (2018), pp. 453-459 CrossRefView in ScopusGoogle Scholar [30] T.A.
    Tang, L. Mhamdi, D. McLernon, S.A. Zaidi, M. Ghogho Deep recurrent neural network
    for intrusion detection in SDN-based networks 2018 4th IEEE Conference on Network
    Softwarization and Workshops (NetSoft, IEEE (2018), pp. 202-206 CrossRefGoogle
    Scholar [31] M. Latah, L. Toker An efficient flow-based multi-level hybrid intrusion
    detection system for software-defined networks CCF Trans. Netw., 3 (3) (2020),
    pp. 261-271 CrossRefGoogle Scholar [32] J. Gao, S. Chai, B. Zhang, Y. Xia Research
    on network intrusion detection based on incremental extreme learning machine and
    adaptive principal component analysis Energies, 12 (7) (2019), p. 1223 CrossRefView
    in ScopusGoogle Scholar [33] D. Zheng, Z. Hong, N. Wang, P. Chen An improved LDA-based
    ELM classification for intrusion detection algorithm in IoT application Sensors,
    20 (6) (2020), p. 1706 CrossRefView in ScopusGoogle Scholar [34] M. Rani Effective
    network intrusion detection by addressing class imbalance with deep neural networks
    multimedia tools and applications Multimed. Tools Appl., 81 (6) (2022), pp. 8499-8518
    CrossRefView in ScopusGoogle Scholar [35] Y. Imrana, Y. Xiang, L. Ali, Z. Abdul-Rauf
    A bidirectional LSTM deep learning approach for intrusion detection Expert Syst.
    Appl., 185 (2021), Article 115524 View PDFView articleView in ScopusGoogle Scholar
    [36] S.Z. Lin, Y. Shi, Z. Xue Character-level intrusion detection based on convolutional
    neural networks 2018 International Joint Conference on Neural Networks (IJCNN,
    IEEE (2018), pp. 1-8 View in ScopusGoogle Scholar [37] Y. Zhou, M. Han, L. Liu,
    J.S. He, Y. Wang Deep learning approach for cyberattack detection IEEE INFOCOM
    2018-IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS (2018),
    pp. 262-267 View in ScopusGoogle Scholar [38] R. Vinayakumar, M. Alazab, K.P.
    Soman, P. Poornachandran, A. Al-Nemrat, S. Venkatraman Deep learning approach
    for intelligent intrusion detection system IEEE Access, 7 (2019), pp. 41525-41550
    CrossRefView in ScopusGoogle Scholar [39] A. Nagisetty, G.P. Gupta Framework for
    detection of malicious activities in IoT networks using keras deep learning library
    2019 3rd international conference on computing methodologies and communication
    (ICCMC) (2019), pp. 633-637 CrossRefView in ScopusGoogle Scholar [40] Y. Zhang,
    P. Li, X. Wang Intrusion detection for IoT based on improved genetic algorithm
    and deep belief network IEEE Access, 7 (2019), pp. 31711-31722 CrossRefView in
    ScopusGoogle Scholar [41] M. Lopez-Martin, B. Carro, A. Sanchez-Esguevillas, J.
    Lloret Shallow neural network with kernel approximation for prediction problems
    in highly demanding data networks Expert Syst. Appl., 124 (2019), pp. 196-208
    View PDFView articleView in ScopusGoogle Scholar [42] E. Suwannalai, C. Polprasert
    Network intrusion detection systems using adversarial reinforcement learning with
    deep Q-network 2020 18th International Conference on ICT and Knowledge Engineering
    (ICT&KE) (2020), pp. 1-7 CrossRefGoogle Scholar [43] M. Almiani, A. AbuGhazleh,
    A. Al-Rahayfeh, S. Atiewi, A. Razaque Deep recurrent neural network for IoT intrusion
    detection system Simul. Modell. Pract. Theory, 101 (2020), Article 102031 View
    PDFView articleView in ScopusGoogle Scholar [44] Y. Li, Y. Xu, Z. Liu, H. Hou,
    Y. Zheng, Y. Xin, Y. Zhao, L. Cui Robust detection for network intrusion of industrial
    IoT based on multi-CNN fusion Measurement, 154 (2020), Article 107450 View PDFView
    articleView in ScopusGoogle Scholar [45] A. Rezaeipanah, E. Afsoon, G. Ahmadi
    Improving the performance of intrusion detection systems using the development
    of deep neural network parameters 2020 10th International Conference on Computer
    and Knowledge Engineering (ICCKE) (2020), pp. 278-283 CrossRefView in ScopusGoogle
    Scholar [46] Z. Wang, Y. Zeng, Y. Liu, D. Li Deep belief network integrating improved
    kernel-based extreme learning machine for network intrusion detection IEEE Access,
    9 (2021), pp. 16062-16091 CrossRefView in ScopusGoogle Scholar [47] P.R. Kanna,
    P. Santhi Unified deep learning approach for efficient intrusion detection system
    using integrated spatial–temporal features Knowl. Based Syst., 226 (2021), Article
    107132 Google Scholar [48] Rawat S., Srinivasan A. Intrusion detection systems
    using classical machine learning techniques versus integrated unsupervised feature
    learning and deep neural network. arXiv preprint arXiv:1910.01114.2019. Google
    Scholar [49] Y. Otoum, D. Liu, A. Nayak DL-IDS: a deep learning–based intrusion
    detection framework for securing IoT Trans. Emerg. Telecommun. Technol., 33 (3)
    (2022), p. e3803 View in ScopusGoogle Scholar [50] A. Alazab, M. Hobbs, J. Abawajy,
    M. Alazab Using feature selection for intrusion detection system 2012 international
    symposium on communications and information technologies (ISCIT) (2012), pp. 296-301
    CrossRefView in ScopusGoogle Scholar [51] B.F. Darst, K.C. Malecki, C.D. Engelman
    Using recursive feature elimination in random forest to account for correlated
    variables in high dimensional data BMC Genet., 19 (1) (2018), pp. 1-6 Google Scholar
    [52] F. Hussain, S.G. Abbas, M. Husnain, U.U. Fayyaz, F. Shahzad, G.A. Shah IoT
    DoS and DDoS attack detection using ResNet 2020 IEEE 23rd International Multitopic
    Conference (INMIC) (2020), pp. 1-6 Google Scholar [53] Petrov D., Hospedales T.M.
    Measuring the transferability of adversarial examples. arXiv preprint arXiv:1907.06291.
    2019 Jul 14. Google Scholar [54] L. Chuan, F. Quanyuan The standard particle swarm
    optimization algorithm convergence analysis and parameter selection Proceedings
    of the Third International Conference on Natural Computation (ICNC 2007), Haikou,
    China, 24–27 August, 3 (2007), pp. 823-826 CrossRefGoogle Scholar [55] Y. Ding,
    Y. Zhai Intrusion detection system for NSL-KDD dataset using convolutional neural
    networks InProceedings of the 2018 2nd International Conference on Computer Science
    and Artificial Intelligence (2018), pp. 81-85 CrossRefView in ScopusGoogle Scholar
    [56] B.A. Tama, M. Comuzzi, K.H. Rhee TSE-IDS: a two-stage classifier ensemble
    for intelligent anomaly-based intrusion detection system IEEE Access, 7 (2019),
    pp. 94497-94507 CrossRefView in ScopusGoogle Scholar [57] T. Su, H. Sun, J. Zhu,
    S. Wang, Y. Li BAT: deep learning methods on network intrusion detection using
    NSL-KDD dataset IEEE Access, 8 (2020), pp. 29575-29585 CrossRefView in ScopusGoogle
    Scholar [58] Y. Wu, W.W. Lee, X. Gong, H. Wang A hybrid intrusion detection model
    combining SAE with kernel approximation in Internet of things Sensors, 20 (19)
    (2020), p. 5710 CrossRefGoogle Scholar [59] C. Ieracitano, A. Adeel, F.C. Morabito,
    A. Hussain A novel statistical analysis and autoencoder driven intelligent intrusion
    detection approach Neurocomputing, 387 (2020), pp. 51-62 View PDFView articleView
    in ScopusGoogle Scholar [60] H.S. Alsaadi, R. Hedjam, A. Touzene, A. Abdessalem
    Fast binary network intrusion detection based on matched filter optimization 2020
    IEEE International Conference on Informatics, IoT, and Enabling Technologies (ICIoT)
    (2020), pp. 195-199 CrossRefView in ScopusGoogle Scholar [61] K. Jiang, W. Wang,
    A. Wang, H. Wu Network intrusion detection combined hybrid sampling with deep
    hierarchical network IEEE Access, 8 (2020), pp. 32464-32476 CrossRefView in ScopusGoogle
    Scholar [62] A. Khraisat, I. Gondal, P. Vamplew, J. Kamruzzaman, A. Alazab Hybrid
    intrusion detection system based on the stacking ensemble of c5 decision tree
    classifier and one class support vector machine Electronics, 9 (1) (2020), p.
    173 CrossRefView in ScopusGoogle Scholar [63] M. Mulyanto, M. Faisal, S.W. Prakosa,
    J.S. Leu Effectiveness of focal loss for minority classification in network intrusion
    detection systems Symmetry, 13 (1) (2020), p. 4 CrossRefGoogle Scholar [64] T.
    Wisanwanichthan, M. Thammawichai A double-layered hybrid approach for network
    intrusion detection system using combined naive bayes and SVM IEEE Access, 9 (2021),
    pp. 138432-138450 CrossRefView in ScopusGoogle Scholar [65] Y. Fu, Y. Du, Z. Cao,
    Q. Li, W.A. Xiang Deep learning model for network intrusion detection with imbalanced
    data Electronics, 11 (6) (2022), p. 898 CrossRefView in ScopusGoogle Scholar [66]
    Vivek Sharma, Ashish Kumar Tripathi, Himanshu Mittal Technological revolutions
    in smart farming: current trends, challenges &future directions Comput. Electron
    Agric., 201 (2022), Article 107217, 10.1016/j.compag.2022.107217 View PDFView
    articleView in ScopusGoogle Scholar [67] Murtaza Cicioglu, Ali Çalhan Smart agriculture
    with Internet of things in cornfields Comput. Electr. Eng., 90 (2021), Article
    106982, 10.1016/j.compeleceng.2021.106982 View PDFView articleView in ScopusGoogle
    Scholar Cited by (21) IoT-based agriculture management techniques for sustainable
    farming: A comprehensive review 2024, Computers and Electronics in Agriculture
    Show abstract Optimizing intrusion detection using intelligent feature selection
    with machine learning model 2024, Alexandria Engineering Journal Show abstract
    Deep learning for cyber threat detection in IoT networks: A review 2024, Internet
    of Things and Cyber-Physical Systems Show abstract Dependable intrusion detection
    system using deep convolutional neural network: A Novel framework and performance
    evaluation approach 2023, Telematics and Informatics Reports Show abstract Detection
    of cyber-attacks on smart grids using improved VGG19 deep neural network architecture
    and Aquila optimizer algorithm 2024, Signal, Image and Video Processing Improved
    Elman Deep Learning Model for Intrusion Detection System in Internet of Things
    2024, Journal of Internet Services and Information Security View all citing articles
    on Scopus 1 Scientific Research Group in Egypt (SRGE), Egypt, www.egyptscience.net.
    View Abstract © 2023 Elsevier B.V. All rights reserved. Recommended articles A
    lightweight and secure sensing model for body area networks in the Internet of
    Things in biological warfare applications Internet of Things, Volume 22, 2023,
    Article 100717 Sobhan Esmaeili, Raziyeh Shamsi View PDF AEDS-IoT: Adaptive clustering-based
    Event Detection Scheme for IoT data streams Internet of Things, Volume 22, 2023,
    Article 100704 Ashwin Raut, …, Manish Kumar View PDF Location-based activity behavior
    deviation detection for nursing home using IoT devices Internet of Things, Volume
    22, 2023, Article 100702 Billy Pik Lik Lau, …, Mui Liang Low View PDF Show 3 more
    articles Article Metrics Citations Citation Indexes: 16 Captures Readers: 70 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An optimized CNN-based intrusion detection system for reducing risks in smart
    farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Qian X.
  - Qi H.
  - Shang S.
  - Wan H.
  - Rahman K.U.
  - Wang R.
  citation_count: '1'
  description: Flood irrigation is widely applied in harvested croplands of arid regions
    and can be classified as autumn/winter irrigation (AI) depending on the time of
    application. Due to its high water consumption, real-time monitoring of the AI
    extent is crucial to improve its scheduling. We proposed a remote sensing-based
    long short-term memory (LSTM) model for near-real-time monitoring of AI extent
    at sub-pixel scale. The model loosely coupled MODIS data with Sentinel-2 data
    to solve the mixed pixel issue of MODIS data, and calibrated Sentinel-2 thresholds
    for AI identification by a random forest (RF) module to extract large-scale reference
    data with high temporal frequencies. The variable importance estimated by RF is
    used as a reference for feature screening in the LSTM model. As Sentinel-2 images
    are not available daily, LSTM models trained with incomplete sequences were validated
    using multiple validation approaches. The model was applied to the Hetao Irrigation
    District, the largest irrigation district in arid region of China, and delivered
    reasonable performance with coefficient of determination of over 0.82 and mean
    absolute error of around 10.7%. Classification of irrigation patterns using simulated
    time series of irrigation area fractions revealed eight different irrigation patterns
    from 2010 to 2020 in the study region. Results indicate that the maximum fraction
    of AI area upstream is closely related to the cropland distribution pattern. The
    AI patterns changed significantly over the 11 years, with a more pronounced reduction
    in irrigation duration for individual pixels in the downstream area. These changes
    are associated with two important land policies implemented in many regions of
    China, land consolidation and land transfer. The proposed model demonstrates the
    potential for near-real-time monitoring of autumn irrigation extent within large
    irrigation districts, which can aid in AI scheduling and provide insight into
    irrigation patterns and practices.
  doi: 10.1016/j.agwat.2023.108335
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Study area and datasets
    3. Methodology 4. Results 5. Discussion 6. Conclusions Declaration of Competing
    Interest Acknowledgments Appendix A. Determination method of points A and C in
    the MBWI curve Appendix B. Land use mapping and statistics of land cover fractions
    Appendix C. Input features for the RF and LSTM models Data availability References
    Show full outline Cited by (1) Figures (12) Show 6 more figures Tables (10) Table
    1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Agricultural Water Management
    Volume 284, 30 June 2023, 108335 Deep Learning-based Near-real-time Monitoring
    of Autumn Irrigation Extent at Sub-pixel Scale in a Large Irrigation District
    Author links open overlay panel Ximin Qian a, Hongwei Qi a, Songhao Shang a, Heyang
    Wan a, Khalil Ur Rahman a, Ruiping Wang b Show more Add to Mendeley Share Cite
    https://doi.org/10.1016/j.agwat.2023.108335 Get rights and content Under a Creative
    Commons license open access Highlights • We proposed a novel model to monitor
    autumn irrigation extent at sub-pixel scale. • We proposed a new method for threshold
    calibration with incomplete images. • Multi-fraction irrigation mapping allows
    MODIS to detect small irrigated fields. • Deep learning-based models enabled near-real-time
    monitoring of irrigation extent. • The produced maps highlighted 8 autumn irrigation
    patterns from 2010 to 2020. Abstract Flood irrigation is widely applied in harvested
    croplands of arid regions and can be classified as autumn/winter irrigation (AI)
    depending on the time of application. Due to its high water consumption, real-time
    monitoring of the AI extent is crucial to improve its scheduling. We proposed
    a remote sensing-based long short-term memory (LSTM) model for near-real-time
    monitoring of AI extent at sub-pixel scale. The model loosely coupled MODIS data
    with Sentinel-2 data to solve the mixed pixel issue of MODIS data, and calibrated
    Sentinel-2 thresholds for AI identification by a random forest (RF) module to
    extract large-scale reference data with high temporal frequencies. The variable
    importance estimated by RF is used as a reference for feature screening in the
    LSTM model. As Sentinel-2 images are not available daily, LSTM models trained
    with incomplete sequences were validated using multiple validation approaches.
    The model was applied to the Hetao Irrigation District, the largest irrigation
    district in arid region of China, and delivered reasonable performance with coefficient
    of determination of over 0.82 and mean absolute error of around 10.7%. Classification
    of irrigation patterns using simulated time series of irrigation area fractions
    revealed eight different irrigation patterns from 2010 to 2020 in the study region.
    Results indicate that the maximum fraction of AI area upstream is closely related
    to the cropland distribution pattern. The AI patterns changed significantly over
    the 11 years, with a more pronounced reduction in irrigation duration for individual
    pixels in the downstream area. These changes are associated with two important
    land policies implemented in many regions of China, land consolidation and land
    transfer. The proposed model demonstrates the potential for near-real-time monitoring
    of autumn irrigation extent within large irrigation districts, which can aid in
    AI scheduling and provide insight into irrigation patterns and practices. Previous
    article in issue Next article in issue Keywords Flood irrigationIrrigation area
    fractionTransient water bodiesSub-pixel algorithmLong short-term memory networkRandom
    forest 1. Introduction Autumn/winter irrigation (AI), or flood irrigation in harvested
    croplands, is widely applied in late autumn to early winter in arid regions, such
    as the Hetao Irrigation District (HID) in Northwest China (Li et al., 2012). AI
    is effective to leach excess soil salt, increase soil moisture, regulate soil
    temperature, loosen the soil, and/or reduce cropland pests (Chang et al., 2019,
    Feng et al., 2005, Negri et al., 2020, Xiong et al., 2021). To achieve these purposes,
    large areas of cropland need to be irrigated with large amounts of water (Gao
    et al., 2015). Consequently, pieces of surface water ponding form and last for
    several days after AI, which has a great influence on water cycling, energy transfer,
    and salt transport processes in the irrigation district (Wu et al., 2019, Wen
    et al., 2023). The extent, timing, and amount of AI are influenced by many factors,
    and vary with year and irrigation district. The conflict between water conservation
    policy in large irrigation districts and soil salinization control practice makes
    the AI problem more complex. Although the local irrigation management authority
    has a general AI plan, the AI application depends highly on farmers’ desire for
    AI and irrigation water availability (Ren et al., 2016). In recent years, irrigation
    costs, climate change, and changes in cropping patterns have introduced uncertainties
    about whether and when farmers irrigate in autumn (Ren et al., 2017, Li et al.,
    2022). Therefore, timely information about where, when, and how much AI is applied
    will benefit both hydrological studies and irrigation management. In irrigation
    management practices, this AI information helps irrigation administrations to
    improve irrigation schedules, which is crucial for rational water allocation and
    control of soil salinization (Bwambale et al., 2022). Furthermore, these pieces
    of information are fundamental inputs to agro-hydrological models for irrigation
    districts, which is essential to quantify the impact of AI on soil moisture, soil
    salinity, and crop growth (Lu et al., 2019, Wen et al., 2022, Wen et al., 2023).
    In practice, information about irrigation (including AI) is generally obtained
    from statistical results of different levels of irrigation administrations, where
    detailed spatiotemporal information on irrigation application is normally unavailable.
    As an alternative, satellite remote sensing has proven to be a valuable data source
    to extract detailed irrigation information at large scales both during crop growth
    (Karthikeyan et al., 2020) and AI after crop harvest (Qian et al., 2022). Specifically,
    optical remote sensing is highly effective in determining irrigation extent by
    identifying differences in the spectral indices of irrigated and non-irrigated
    cropland (Ozdogan et al., 2010, Yao et al., 2022). Due to advances in the spatial
    resolution of optical remote sensing, the precision of irrigation mapping during
    the crop growing season has improved significantly, which has increased from 500
    m (Pervez et al., 2014) using the Moderate Resolution Imaging Spectroradiometer
    (MODIS) to 30 m using Landsat (Xie et al., 2019) and even to 10 m using Sentinel-2
    (Zurqani et al., 2021). Despite the notable progress in identifying irrigation
    during the crop-growing season, identifying autumn irrigation remains rare (Qian
    et al., 2022). The primary challenge in identifying autumn irrigation lies in
    the need for high temporal resolution remote sensing data. As the surface water
    ponding caused by irrigation typically lasts for only a few days, current identification
    methods primarily rely on MODIS data with daily temporal resolution (Wang et al.,
    2021, Qian et al., 2022). However, the moderate spatial resolution of MODIS can
    lead to significant uncertainties in precise mapping of smaller irrigated lands
    (Pervez et al., 2014). To overcome this limitation, researchers have proposed
    using multi-sensor data, such as combining Sentinel-2/Landsat and MODIS data,
    to provide complementary information that can be used to improve the accuracy
    of irrigation identification (Dao et al., 2019, Xiao et al., 2022). For example,
    Qian et al. (2022) used Sentinel-2 data to assess the accuracy of MODIS-based
    AI detection, but the mixed pixel issue remained unsolved. Another option is to
    use spatiotemporal fusion models to spatially downscale the MODIS imagery (Chen
    et al., 2018a). However, their usage is generally restricted to small areas, short
    periods, and low temporal resolutions due to the high computational requirements
    (Fuentes et al., 2019). Therefore, an alternative approach is to estimate autumn
    irrigation area fractions (AIAFs, in %) in each MODIS pixel from the corresponding
    Sentinel-2 data. This approach can ameliorate the mixed pixel issue of MODIS and
    is more suitable for addressing long-term, large-scale, and less location-specific
    problems (Liu et al., 2018). The goal of real-time monitoring of irrigation extent
    can be achieved by continuously observing changes in the AIAF for each pixel across
    the irrigation district. The basis to accurately acquire AIAFs in a MODIS pixel
    from Sentinel-2 images is to classify Sentinel-2 pixels into AI and non-AI pixels
    (Thenkabail et al., 2007). The use of water indices and thresholds is a common
    classification method because AI lands are similar to small and shallow water
    bodies. The classification accuracy depends on the optimal threshold value, which
    can be determined manually or using automated methods (Casal, 2022). Automated
    methods are more suitable for classifications that need to be performed at large
    spatial scales and frequent time intervals. However, automated methods based on
    image segmentation, such as the Otsu thresholding method (Otsu et al., 1979),
    are not suitable for AI classification due to the lack of distinct spectral contrast
    between small wetlands and autumn-irrigated lands (Ludwig et al., 2019) and the
    difficulty in forming a bimodal probability density distribution in the early
    AI period. Automated methods based on statistical area data calibration (Xie and
    Lark, 2021) do not have these limitations but require all pixels to have feature
    values for discrimination. Due to the revisit cycle of 2–5 days for Sentinel-2
    and cloud issues, many AI lands were not presented in the limited Sentinel-2 images.
    Consequently, the availability of directly calculated AIAFs is restricted to a
    finite number of dates and regions, and the statistical AI area cannot be used
    directly to calibrate the automated methods. This, therefore, calls for a novel
    approach to use statistical data to set thresholds for water surface identification
    at irrigation district scale in case of insufficient images. To estimate daily
    AIAFs at irrigation district scale, it is necessary to develop a regression relationship
    between available AIAF data and daily MODIS series. Long short-term memory (LSTM)
    network in the field of deep learning has already been widely used to handle time-series
    data (Van Houdt et al., 2020). It can address sequence-to-sequence regression
    problems and is therefore well suited to capture the AI dynamic. Currently, the
    application of LSTM models to irrigation-related problems is still in its infancy,
    which is mainly used to simulate yield (Cao et al., 2021), groundwater table (Zhang
    et al., 2018), and evapotranspiration (Yin et al., 2020) to support irrigation
    management. These studies can be further classified into station-scale sequence-to-sequence
    regression (Yin et al., 2020) and pixel-scale sequence-to-one regression (Cao
    et al., 2021). However, the problem of daily AIAFs estimation is the pixel-scale
    sequence-to-sequence regression problem since individual field or pixel-based
    monitoring helps to understand how changes in AI extent respond to changes in
    management and environment (Jeong et al., 2022). The desired regression model
    should have a stronger spatial-temporal generalization and can be applied across
    pixels with different attributes. Main objective of this study is to propose a
    novel model for near-real-time (NRT) monitoring of the evolution of AI extent
    at sub-pixel scale, which is applied to five sub-irrigation districts of the HID.
    NRT is defined here as a lag of no more than one day from the time of irrigation
    application to the time of being monitored (Shen et al., 2019). This work overcomes
    several key challenges in mapping AIAF series, including accurate extraction of
    AIAFs from Sentinel-2 data based on automatically calibrated thresholds by indirectly
    using statistical AI area and the random forest (RF) algorithm, and screening
    features as LSTM input based on the variable importance calculated by RF so that
    the LSTM model can better handle time series regression problems. Besides NRT
    monitoring of irrigation extent, we also divided different AI patterns in HID
    according to the irrigation procedure curves of different years, which will help
    to further understand the irrigation practices in different areas. 2. Study area
    and datasets 2.1. Study area The Hetao irrigation district (HID) located upstream
    of the Yellow River (Fig. 1) is the largest irrigation district in arid region
    of China. It is characterized by scarce precipitation and strong potential evaporation
    due to its arid to semi-arid continental climate. Therefore, irrigation is critical
    for agriculture in HID. The whole HID is composed of five sub-irrigation districts,
    Wulanbuhe (WLBH), Jiefangzha (JFZ), Yongji (YJ), Yichang (YC), and Wulate (WLT)
    from southwest to northeast (Fig. 1). Download : Download high-res image (377KB)
    Download : Download full-size image Fig. 1. Geographical distribution of sub-irrigation
    districts and counties in the Hetao Irrigation District. WLBH, JFZ, YJ, YC, and
    WLT represent Wulanbuhe, Jiefangzha, Yongji, Yichang, and Wulate sub-irrigation
    districts, respectively. DK, HH, LH, WY, and WLTQ represent Dengkou, Hangjinhouqi,
    Linhe, Wuyuan, and Wulateqianqi counties, respectively. The HID is about 1.189
    million ha, of which 62% is irrigated cropland mainly cultivated with corn, sunflower,
    and wheat. Because of the special household contract responsibility system for
    farmland use in China, agricultural land is divided into pieces of small household
    farms, resulting in fragmented cropping patterns in HID (Ren et al., 2016). Meanwhile,
    cultivation, field management, and irrigation vary greatly among different crops
    and years (Ren et al., 2016). Therefore, multiple irrigation water use patterns
    may exist simultaneously even at small scales. The groundwater table depth varies
    greatly from 0.5 m to 3.0 m annually, resulting in frequent water-salt exchanges
    between soil and groundwater and consequently soil salinization in many parts
    of the HID. Therefore, a large amount of AI is required to leach soil salt and
    increase soil water storage in the HID, which accounts for approximately 1/3 of
    the total irrigation water diversion (Lu et al., 2019). Consequently, AI is one
    of the main factors affecting soil moisture, soil salinity, and groundwater table
    in the HID. 2.2. Data and preprocessing Data used in this study mainly include
    MODIS data from 2010 to 2020 and Sentinel-2 data from 2016 to 2020, land use maps
    in 2010 and 2020, statistical AI area for different sub-irrigation districts from
    2010 to 2020, and field survey data in 2019 and 2020. Remote sensing data include
    the MODIS surface reflectance product MOD09GA and the Sentinel-2 TOA (top-of-atmosphere)
    reflectance product. The MOD09GA has spatial and temporal resolutions of 463 m
    and 1 day, respectively, which is available from https://ladsweb.modaps.eosdis.nasa.gov/.
    Meanwhile, Sentinel-2 has spatial and temporal resolutions of 10–60 m and 2–5
    days, respectively, and can be downloaded from GEE (Google Earth Engine) (Gorelick
    et al., 2017). Because the surface reflectance data of Sentinel-2 is available
    for a very limited time on GEE, we used TOA data that has been widely used in
    detecting surface water inundation (Du et al., 2016, Seaton et al., 2020, Qian
    et al., 2022). We retained the original projection of the MODIS images to avoid
    loss of information (Chen et al., 2016), and the Sentinel-2 images were reprojected
    to the same as the MODIS images. The Sentinel-2 images were resampled to a suitable
    resolution that both approximates the original resolution and facilitates subsequent
    AIAF calculations for MODIS. For both MODIS and Sentinel-2 images, clouds, cloud
    shadows, and snow were masked. An adaptive weighted Savitzky-Golay (S-G) filter
    and a moving average with a window size of three days were applied to the MODIS
    band/index series to reduce noise and smooth the curves. Weights of bands/indices
    on different days were assigned based on quality control parameters of the MOD09GA
    products (Qian et al., 2022). Globeland30 (http://globallandcover.com/) is a high-precision
    global land cover product developed by Ministry of Natural Resources of China,
    which was used to generate land use maps of the HID for 2010 and 2020 (Fig. 2(a)
    and (b)). The Globeland30 has a high cropland mapping precision in the HID (Qian
    et al., 2022), and is therefore suitable for AIAF simulation. Download : Download
    high-res image (453KB) Download : Download full-size image Fig. 2. Land use maps
    in 2010 (a) and 2020 (b), and field survey points used in 2019 (c) and 2020 (d)
    in the Hetao Irrigation District. AIL and NAILS refer to Autumn irrigation land
    and Non-Autumn irrigation land up to the survey day, respectively. Statistical
    AI area for different sub-irrigation districts from 2010 to 2020 was obtained
    from the Water Resources Development Center of Hetao Irrigation District and the
    Bayannur Institute of Water Conservancy Research. Field surveys were conducted
    on October 19–24 in 2019 and October 21–25 in 2020 to collect sampling points
    for validation. The survey fields are classified into autumn irrigation land (AIL)
    and non-autumn irrigation land (NAIL). NAIL can be subdivided into fields that
    were not irrigated up to the surveying day (NAILS) and during the whole AI period
    (NAILP). Each survey field was pinpointed by recording the latitude and longitude
    of the four vertices using a Juno SA Handheld Computer with GNSS (Global Navigation
    Satellite System) (Trimble, USA). Due to the Sentinel-2 revisit cycle and cloud
    issues, only one or two Sentinel-2 images are available during a sampling period,
    and only about a dozen images are available in the whole AI period from late September
    to middle November. Moreover, these images may not cover the whole study region.
    Therefore, not all sampling points can be used for validation. As shown in Fig.
    2(c) and (d), 58/589 AIL sampling points and 45/457 NAILS sampling points are
    available for validation in 2019/2020, respectively. The total number of AIL/NAILS
    Sentinel-2 pixels extracted from sampling points in 2019 and 2020 are 2593/2683
    and 72550/152684, respectively. 3. Methodology The NRT monitoring of AI extent
    includes two core modules (Fig. 3), i.e., one RF module to simulate the final
    AIAFs (FAIAFs) and one LSTM module to simulate the AIAF time series. The first
    module uses the RF algorithm due to its satisfactory performance in regression
    models (Masiliūnas et al., 2021) and its ability to handle high-dimensional and
    multi-collinear variables (Xie and Lark, 2021). It is used to select suitable
    AI thresholds for Sentinel-2 images to extract reference data at a large scale
    and high frequency and to identify important features for the LSTM module. The
    second module uses the LSTM algorithm, as it can capture complex time dependencies
    of the sequence and is easier to train and scale than other recurrent neural networks
    (Yin et al., 2020). It aims to obtain a well-performing model for NRT AIAF simulations.
    Download : Download high-res image (377KB) Download : Download full-size image
    Fig. 3. Flowchart of the model for near-real-time monitoring of autumn irrigation
    extent. Same as Qian et al. (2022), all the croplands and grasslands in 2010 and
    2020 land use maps in the north of the flood bank of the Yellow River were taken
    as potential croplands. All pixels with the area fraction of potential cropland
    greater than zero were used for further detection of AI events. The simulation
    was conducted on each sub-irrigation district since sub-districts have different
    soil textures, landscape characteristics, cropping patterns, and locations that
    can lead to different irrigation decisions. 3.1. Brief introductions to RF and
    LSTM network 3.1.1. RF The RF is an ensemble model consisting of multiple decision
    trees (classification and regression trees, CART) (Breiman, 2001), which is widely
    used to solve classification and regression problems. The RF approach involves
    three main steps: (1) Training sets generation: the training set for each decision
    tree is generated using the bootstrapping method. (2) Decision trees generation:
    For each decision tree, a subset of features is randomly selected as splitting
    features for each internal node, and the nodes are split using the best splitting
    feature and cutting point that can locally maximize the Gini index according to
    the selected features. The branches of each tree are not pruned back. (3) Results
    generation: The final output is obtained using a majority vote scheme for classification
    problems or an average of the outputs of all decision trees for regression problems.
    3.1.2. LSTM network The LSTM network (Hochreiter and Schmidhuber, 1997) is an
    improved application of recurrent neural networks that can handle long-term dependencies.
    An LSTM network has two main layers, where the sequence input layer feeds sequence
    data into the network, and the LSTM layer learns long-term dependencies of sequence
    data and time series between time steps. The LSTM layer consists of two types
    of states, the cell state, and the hidden or output state. The cell state carries
    the information along with all the timestamps (long-term memory), while the hidden
    state carries information from the immediately previous step (short-term memory).
    The layer adds information to or removes information from the cell state at each
    time step by using three multiplicative gates, forget gate, input gate, and output
    gate. They work with the cell candidate to update the current state of the cell.
    Formulations of the LSTM structure are given by Hochreiter and Schmidhuber (1997)
    (Fig. 4). The matrices of input weights (W), recurrent weights (R), and bias of
    each component (b) for the LSTM network are concatenated as follows: (1) where
    subscripts i, f, g, and o refer to the input gate, forget gate, cell candidate,
    and output gate, respectively. Download : Download high-res image (135KB) Download
    : Download full-size image Fig. 4. Illustration of LSTM structure. represents
    element-wise multiplication and + represents element-wise summation; ft, it, gt,
    and ot are input gate, forget gate, cell candidate, and output gate at time step
    t, respectively; σc and σg denote the state and gate activation functions; b refers
    to bias; subscripts i, f, g, and o refer to the input gate, forget gate, cell
    candidate, and output gate, respectively. The cell state at time step t is given
    by (2) where ct, ft, it, and gt, are cell state, forget gate, input gate, and
    cell candidate at time step t, respectively; and refers to the Hadamard product
    (element-wise multiplication of vectors). The hidden state at time step t is given
    by (3) where ht, ot and σc denote the hidden state and output gate at time step
    t and state activation function, respectively. This study uses the hyperbolic
    tangent function (tanh) as the state activation function. The components at time
    step t are described by (4) (5) (6) (7) where xt is the input vector at time step
    t and σg denotes the gate activation function. This study uses the sigmoid function
    as the gate activation function. Finally, the output at time step t (yt) can be
    obtained from (8) 3.2. RF model development Qian et al. (2022) found that Multi-Band
    Water Index (MBWI) (Wang et al., 2018) performed better for AI detection using
    MODIS data, which was also chosen for AI detection using Sentinel-2 data in this
    study. However, the thresholding method used in Qian et al. (2022) for MODIS data
    does not apply to Sentinel-2 data because Sentinel-2 data are not available on
    a daily scale. Therefore, an appropriate model is required to select the appropriate
    threshold for Sentinel-2 data. Here, we used the statistical AI area to calibrate
    the threshold through a serial RF module. FAIAFs at MODIS pixels with Sentinel-2
    data can be estimated using a specified threshold for Sentinel-2 MBWI (MBWIST),
    which are then used to train the RF regression model for each sub-irrigation district.
    The trained RF models are then used to estimate the FAIAFs at MODIS pixels and
    AI areas in the sub-irrigation district. The optimal threshold for each sub-irrigation
    district is finally calibrated based on statistical AI area in the calibration
    period. 3.2.1. Input features Four groups of features, including temporal features,
    spectral features, land use and land cover (LULC) features, and soil texture features,
    were considered in the regression model (Table C1). Temporal features were extracted
    from the MODIS MBWI and NDVI time series. According to Qian et al. (2022), five
    characteristic points divide the curve into different characteristic periods in
    the MBWI curve filtered by an adaptive weighted Savitzky-Golay filter (Fig. 5).
    Point A represents the valley of the smoothed MBWI curve before AI, Points B and
    D represent the threshold value of MODIS data (MBWIMT) in the increasing and decreasing
    segments of the MBWI curve after AI, Point C represents peak value of the smoothed
    MBWI curve, and Point E represents the first valley of the smoothed MBWI curve
    after AI. MBWIMT was calibrated for each sub-irrigation district in Qian et al.
    (2022) using the statistical AI area. The dates and MBWI values of points A, B,
    and C were used as temporal features, excluding the date of point B which is not
    available for some pixels. Details about the method to determine points A and
    C can be found in Appendix A. In addition, the MBWI values of the filtered curve
    (without moving average) need to be considered because the three-day moving average
    may miss the accurate AIAF information. The date of point C and the filtered MBWI
    values on its previous and next days were selected. Considering that the antecedent
    moisture conditions also affect the detection of actual AIAF, the maximum, minimum,
    mean, and standard deviation of MBWI values from August 1 to September 10 were
    calculated as representative of the antecedent moisture conditions for each pixel
    and used as input features for the RF model. This period contains the last irrigation
    of the crop growth period and precedes the autumn irrigation. Besides, crop phenology
    information is a strong indicator of crop types that influence AI schedule (Feng
    et al., 2005), and we extracted the start of season (SOS), end of season (EOS),
    and the maximum NDVI from NDVI time series (Chen et al., 2018b) during the growing
    season before AI as input features for the RF model. Download : Download high-res
    image (233KB) Download : Download full-size image Fig. 5. Original, adaptive weighted
    Savitzky-Golay filtered, and 3-day moving average MBWI curves and the characteristic
    points in the curve for one selected irrigated pixel in the Hetao Irrigation District
    in 2019. DOY represents the Day of the Year, and weights assigned to different
    points were determined from quality flags of the MOD09GA product (Qian et al.,
    2022). Spectral features are the band/index values except MBWI associated with
    point C, including the commonly used Normalized Difference Water Index (NDWI),
    Vegetation Index, Drought Index, and Built-up Index, as well as Green Band (Table
    B1). Land use features are land cover fractions of MODIS pixels, where the fractions
    of water bodies, impervious surfaces, bare land, and potential cropland are mainly
    considered. Water bodies and impervious surfaces also have high water index values,
    which can be easily confused with the AI phenomenon (Wang et al., 2018). Bare
    land and vegetation in a pixel result in decreased water index values of the mixed
    pixel. The potential-cropland fraction in a pixel indicates the maximum possible
    AI fraction. Since land use maps are only available for 2010 and 2020, they do
    not adequately cover the years between 2010 and 2020. We created annual land cover
    fraction maps based on the two existing land use products by using a simple index
    threshold method (see Appendix B for details). Soil texture features were obtained
    from the Harmonized World Soil Database with a scale of 1:1,000,000 within China.
    The information about fractions of clay, sand, and silt along with soil salinity
    of the topsoil was used. Finally, 34 input features (Table C1) were chosen, which
    were resampled to the MODIS resolution for further use. 3.2.2. Assumption and
    sample generation Data sparsity is a major challenge for mapping irrigation area
    fractions. Since regression favors the mean, it is difficult for regression models
    to accurately predict 0% and 100% fractions (Masiliūnas et al., 2021). Therefore,
    only pixels with non-zero cropland fractions can be used as model input. Moreover,
    AIAF was calculated as the ratio of irrigated area to total pixel area rather
    than to cropland area to reduce the probability of 100% fraction. Samples were
    selected by assuming that FAIAF corresponds to the AIAF of the peak (point C)
    in the MBWI curve. According to Qian et al. (2022), the MBWI curve can reflect
    the AIAF dynamics. In segment AC of the curve (Fig. 5), irrigation continues to
    be applied within the pixel under consideration. Although parts of the irrigated
    fields may no longer be wet during AC period that they cannot be identified as
    irrigated land, their areas are negligible. This is because it takes a long time
    from the start of irrigation to the complete drying of the ground. Therefore,
    only fields that were irrigated early and with shallower water are likely to dry
    up. The irrigation stops in segment CD of the curve. Therefore, Point C is assumed
    to correspond to the final and maximum AIAF. Moreover, this assumption is also
    a special case of the assumption in the linear spectral mixture model (Singer
    and Mccord, 1979) that the reflectance of an individual pixel is linearly related
    to its endmember reflectance because MBWI is a linear combination of multiple
    bands reflectance. Therefore, an increase in the AIAF will lead to an increase
    in MBWI value and maximum AIAF (FAIAF) corresponds to the peak MBWI. This assumption
    will be further validated in the following analysis. Consequently, pixels that
    have Sentinel-2 data on the corresponding date of point C were selected as the
    samples. Based on the spatial relationship between MODIS and Sentinel-2 pixels,
    AIAF of the sample was calculated by the number of Sentinel-2 pixels that are
    irrigated at a MODIS pixel by comparing the MBWI value of Sentinel-2 with the
    threshold (MBWIST). 3.2.3. Model calibration, accuracy assessment, and variable
    importance We used a fixed MBWIST for each sub-irrigation district from 2016 to
    2020 because the application of fixed thresholds to water indices remains an effective
    method for delineating aquatic ecosystems (Borro et al., 2014, Lefebvre et al.,
    2019). Statistical AI area data from 2016 to 2020 (consistent with the years with
    available Sentinel-2 data) were used to calibrate MBWIST and those from 2010 to
    2015 for validation. The identified AI areas from Qian et al. (2022) were used
    to calibrate the model of WLT because the statistical data from 2016 to 2020 for
    WLT was incongruent with other years. Stratified random sampling method with a
    4:1 ratio was used to obtain the training and testing datasets during the initial
    calibration round. These divided samples were then used in the subsequent calibration
    process to ensure that sample selection does not affect the calibration. MBWIST
    corresponding to the minimum mean absolute relative error (MARE) between the simulated
    and statistical area in the calibration period was selected and applied to the
    validation period. It is necessary to determine whether the differences in MARE
    of different RFs are due to different parameters (thresholds) or associated with
    poor simulation of the RFs themselves. Therefore, the accuracies of different
    RFs for AIAF simulation during training and testing periods should be compared,
    which were assessed using three metrics, including coefficient of determination
    (R2AIAF), root-mean-square error (RMSE), and mean absolute error (MAE) between
    simulated and reference AIAFs ((9), (10), (11), (12)). Additionally, the Sentinel-2
    AI distribution maps generated under the calibrated MBWIST were also validated
    against field sampling points using overall accuracy (OA) (Eq. (13)). Specifically,
    AIL was used to validate the distributions of AI corresponding to the sampling
    dates, whereas NAILS was used to validate the distributions of AI up to the sampling
    dates. (9) (10) (11) (12) (13) where and are the simulated and statistical AI
    area at the year m, t is the total number of years. and are the simulated and
    reference AIAFs for sample i, n is the total number of samples. and are the average
    values of simulated and reference AIAFs for n samples. and are the number of correctly
    classified points for AIL and NAILS. N is the total number of all samples. Variable
    importance was calculated by permutated variable importance measure (PVIM) (Breiman,
    2001) to identify the relative contribution of input features to regression accuracy.
    PVIM is one of the most widely used variable importance measures to date. It measures
    the importance of a feature by calculating the average reduction in OOB (out-of-bag)
    accuracy after randomly permuting the feature across all decision trees. The more
    decrease in OOB accuracy, the more important the feature is. We specified the
    interaction test to account for predictor interactions and identify important
    variables in cases when there are variables that have relatively fewer distinct
    values or there are many irrelevant variables (Loh, 2002). 3.3. LSTM model development
    3.3.1. Model settings The input features for LSTM were mainly selected from the
    top-ranked features in terms of PVIM calculated by the above RF model. To estimate
    daily AIAF, features corresponding to the date of point C were replaced with the
    features corresponding to the day of irrigation. Besides, three other principles
    were also considered in selecting the input features. First, although correlated
    variables provide important complementary information that facilitates model learning,
    it can also lead to multicollinearity that biases the variable importance metrics
    (Molnar, 2019). It has been shown that multicollinearity affects only the specific
    independent variables that are correlated (Frost, 2019). Therefore, when selecting
    features, feature importance by group can be evaluated first (Xie et al., 2019),
    followed by intra-group features that may be correlated to each other. Second,
    features associated with dates or time intervals need to be retained. The revisit
    cycle of Sentinel 2 and cloud cover make the sample series have missing values
    at irregular time intervals. The ability of LSTM to construct regression models
    directly on incomplete data can be enhanced by adding features about the time
    intervals between missing values (Weerakody et al., 2021). Third, features whose
    values are only available at the end of the irrigation period are removed to achieve
    the goal of NRT simulation. AIAF series of the samples were calculated by dividing
    the number of Sentinel-pixels whose MBWI values are above the calibrated MBWIST
    by the total number of Sentinel-pixels within each MODIS pixel for dates with
    Sentinel-2 data. Samples with a time series length greater than or equal to 3
    for JFZ and 2 for other sub-irrigation districts and with at least one positive
    AIAF were chosen as representative samples since a large number of samples are
    required for the training of LSTM models (Cao et al., 2021). Similar to the RF
    model, all samples were divided into training and testing datasets in a 4:1 ratio
    using stratified random sampling. The LSTM model was trained from the training
    datasets using Adam optimizer and further tested with testing datasets. 3.3.2.
    Accuracy assessment The model is validated from two aspects, one is the training
    and testing accuracies of the model trained with incomplete sequence input (feature
    vector concatenation matrix corresponding to the dates when Sentinel-2 data is
    available), and the second is the validation results of feeding complete sequence
    input (daily continuous feature vector concatenation matrix) into the model. The
    complete sequence input is fed into the model to simulate daily AIAF time series
    of each pixel in different years. We compared the AIAF extracted by Sentinel-2
    with the AIAF of the same date in the complete AIAF time series using R2AIAF,
    RMSE, and MAE to demonstrate the ability of the model to handle incomplete sequence
    input. Additionally, the last value of AIAF time series as FAIAF is also compared
    with the reference values extracted by Sentinel-2 and the results of RF model
    simulation, and the calculated AI area is also compared with the statistical AI
    area. 3.4. Classification of autumn irrigation patterns The complete AIAF time
    series at pixel scale obtained from LSTM simulations are classified to identify
    different AI patterns. The classification features include FAIAF, irrigation duration,
    irrigation concentration, and the period of irrigation concentration. Irrigation
    concentration is measured by irrigation frequency from the start of AI to cumulative
    AIAF reaching 75% FAIAF and the interval between irrigations. Less frequent and
    shorter irrigation intervals represent more concentrated irrigation. The period
    of irrigation concentration is defined as the number of days from the start of
    irrigation to the occurrence of the first/second/third largest daily AIAFs divided
    by the length of entire time series. K-means cluster (McQueen, 1967) was applied
    to principal components of the feature variables extracted using principal component
    analysis (Vidal et al., 2016) for the automatic identification of different irrigation
    patterns. 4. Results 4.1. Performance of RF model for FAIAF simulation 4.1.1.
    Threshold estimation, quality of training samples, and accuracy assessment Based
    on the sample generation rule, 2971, 6831, 3810, 3643 and 2671 samples were generated
    in WLBH, JFZ, YJ, YC, and WLT, respectively. Fig. 6 shows that MBWIST has less
    influence on the training and testing accuracies of the RF model compared to the
    reference data extracted from Sentinel-2, indicating that the RF model accuracy
    has little effect on the selection of MBWIST. From performance metrics of the
    models corresponding to the calibrated MBWIST values shown in Table 1, the calibrated
    model performs well in each sub-irrigation district, with MAE less than 11% and
    R2AIAF more than 0.80 during the testing period for all sub-irrigation districts.
    It can also be found from Table 1 that calibrated thresholds for Sentinel-2 (MBWIST)
    is generally equal to or slightly greater than those for MODIS (MBWIMT) in the
    same sub-irrigation district because the smaller pixel size of Sentinel-2 makes
    it more likely to be pure water or bare soil pixel. However, the differences between
    MBWIST and MBWIMT are small, which is mainly caused by different feature variables
    used in MODIS and Sentinel-2 classification. MODIS uses the maximum MBWI value,
    which is mainly used for detecting deeper water bodies. Sentinel-2, on the other
    hand, uses MBWI values for a specified date to detect all water bodies, including
    very shallow ones. Another reason for the difference in thresholds is that Sentinel-2
    uses TOA reflectance, while MODIS uses surface reflectance. Download : Download
    high-res image (140KB) Download : Download full-size image Fig. 6. The RF model
    accuracy corresponding to different thresholds of Sentinel-2 (MBWIST). Table 1.
    Average and standard deviation (Std) of MODIS thresholds (MBWIMT) (Qian et al.,
    2022), the range and calibrated threshold of Sentinel-2 (MBWIST), and model accuracy
    corresponding to the calibrated MBWIST from 2016 to 2020 for each sub-irrigation
    district. Sub-irrigation district MODIS thresholds (MBWIMT) Sentinel-2 thresholds
    (MBWIST) Training period Testing period Average Std Calibration range Calibrated
    value R2AIAF RMSE (%) MAE (%) R2AIAF RMSE (%) MAE (%) WLBH −0.47 0.02 −0.55 to
    −0.35 −0.43 0.98 5.38 3.79 0.88 12.30 8.82 JFZ −0.36 0.02 −0.51 to −0.31 −0.36
    0.97 5.43 4.01 0.82 12.71 9.51 YJ −0.44 0.01 −0.58 to −0.38 −0.43 0.97 5.76 4.19
    0.85 12.93 9.44 YC −0.33 0.02 −0.48 to −0.28 −0.33 0.97 6.01 4.55 0.80 13.72 10.39
    WLT −0.33 0.02 −0.44 to −0.24 −0.32 0.97 5.53 3.90 0.86 12.87 8.88 By comparing
    the AI area calculated using FAIAF with statistical data, MAREs for the validation
    period from 2010 to 2015 ranged from 2.66% to 12.7% with an average value of 8.62%
    for the five sub-irrigation districts (Table 2). The obtained results suggest
    a good performance for FAIAF simulation in HID. The MARE for JFZ is significantly
    lower than other sub-irrigation districts, which may be caused by the large AI
    area in JFZ. The MARE for WLBH is the greatest, but it is less than 10% and acceptable.
    Fragmented cropland, large areas of sandy soils, and the abrupt appearance and
    disappearance of lakes in recent years in WLBH (Wang et al., 2020) have made the
    precision simulation of AI area more difficult in WLBH as compared with other
    sub-irrigation districts. Overall, the MAREs ranged from 4.1% to 9.6% in different
    sub-irrigation districts from 2010 to 2020. Therefore, the trained RF model can
    be applied to simulate FAIAF with satisfactory accuracy. Table 2. Relative errors
    (%) of estimated AI area relative to statistical area in different sub-irrigation
    districts from 2010 to 2020. Year WLBH JFZ YJ YC WLT 2010 −17.6 −6.4 −9.9 −13.4
    −3.3 2011 −13.0 0.3 −11.8 −3.7 5.3 2012 −12.7 0.3 −6.4 0.8 16.9 2013 −9.3 0.2
    −8.5 6.9 5.4 2014 10.3 5.5 13.6 17.0 23.0 2015 13.4 3.3 5.3 −7.5 7.6 2016 −10.1
    −0.6 −11.5 −7.0 −4.1 2017 1.7 −8.6 −6.5 −8.6 −3.7 2018 −1.0 13.0 1.7 5.1 −1.7
    2019 −8.9 0.2 0.0 −1.8 1.6 2020 7.5 −6.6 3.3 0.6 11.5 MARE (%) 9.6 4.1 7.1 6.6
    7.7 The overall accuracies of AI distribution maps derived from Sentinel-2 using
    the calibrated MBWIST values are greater than 98% across different sub-irrigation
    districts (Table 3) against sampling points. Due to Sentinel-2 revisit cycles
    and cloud issues, only a few distribution maps were validated. However, since
    the sampling points were distributed evenly throughout the irrigation district
    and were marked against the boundaries of irrigated and non-irrigated fields,
    the high accuracy validation results demonstrate the ability of Sentinel-2 to
    extract AI information accurately. Table 3. Overall accuracy (OA) of AI distribution
    maps derived from Sentinel-2 in 2019 and 2020. Identified class Actual class WLBH
    JFZ YJ YC WLT AIL NAILS AIL NAILS AIL NAILS AIL NAILS AIL NAILS AIL 4188 8 9582
    0 6841 443 30072 78 23131 7 NAILS 132 8885 125 14099 39 18051 445 66480 588 47852
    OA 98.9% 99.5% 98.1% 99.5% 99.2% Note: AIL-Autumn irrigation land, NAILS-Non-Autumn
    irrigation land up to the survey day. 4.1.2. Variable importance Generally, there
    are similarities in the variable importance rankings for each sub-irrigation district,
    with a significant overlap in the top-ranked variables (Fig. 7). Fractions of
    cropland (Fcrop) and impervious surfaces (Fimp) are usually the most important
    variables. The fraction of cropland determines the upper limit of FAIAF and is
    even directly related to the fraction of irrigation in HID to some extent. Notably,
    fractions of cropland appear to play a more important role in WLBH, JFZ, and YJ
    than in YC and WLT, which is mainly caused by the difference in cropping patterns.
    In YC and WLT where a higher proportion of sunflowers are planted (Wen et al.,
    2019), the fraction of cropland is not as significant as in other sub-irrigation
    districts because sunflowers are rarely autumn-irrigated in the previous year.
    Impervious surfaces also have high water index values, which may be confused with
    the AI phenomenon. Although water bodies can cause the same problem, they are
    of less importance. This is mainly because cropland borders more on urban (rural)
    areas, and therefore, impervious surfaces dominate over water bodies in the mixed
    pixels we studied. Soil texture variables are of little significance for all sub-irrigation
    districts, most likely because their coarser spatial resolution (1000 m) fails
    to capture detailed AI information at smaller cropland scale. Download : Download
    high-res image (280KB) Download : Download full-size image Fig. 7. Sub-irrigation
    district-level variable importance ranking and variable importance by group. More
    important variables are shown at the top of the chart. Details of the variables
    are given in Table C1. The MBWI of point C was found to be the most significant
    temporal and spectral feature for all sub-irrigation districts. This suggests
    that MBWI is more effective than other water indices (e.g., NDWI42 and NDWI46)
    in estimating AIAF, although the higher correlation between these indices makes
    their relative importance difficult to quantify conclusively. The remaining spectral
    and temporal features play low to moderate roles with little spatial variability.
    Most features contribute less to the regression of WLBH and WLT, indicating the
    complexity in estimating AIAF in these two sub-irrigation districts and the necessity
    of combining MODIS-derived and other features to obtain better regression results.
    4.2. Performance of LSTM network for AIAF time series simulation According to
    the principles described in Section 3.3.1, approximately ten features were selected
    for the LSTM model for each sub-irrigation district (Table C2). The hyperparameters
    of the LSTM used are also shown in Table C2. The AIAF time series simulation for
    four randomly selected pixels in each sub-irrigation district are depicted in
    Fig. 8. Qualitative assessment showed that the simulated time series can well
    reflect the general trend of the actual AIAF time series and can capture the key
    turning point. However, it can be noticed that the model tends to slightly underestimate
    high values and overestimate low values, thus produces smooth predictions with
    less variation compared to the actual irrigation patterns. Download : Download
    high-res image (555KB) Download : Download full-size image Fig. 8. Comparison
    of reference and estimated autumn irrigation area fractions for both incomplete
    and complete sequences as input for the LSTM model in the testing period. The
    quantitative results of LSTM model accuracies for each sub-irrigation district
    are shown in Table 4. The results show that accuracy metrics between the simulation
    and reference AIAFs extracted from Sentinel-2 in all sub-irrigation districts
    during training and testing periods are all in satisfactory range, with R2AIAF
    of more than 0.82, RMSE of less than 14%, and MAE of less than 13%. The average
    MAE for all sub-irrigation districts during the testing period is 10.7%. This
    suggests that LSTM model has the potential to monitor AI dynamics. The model accuracy
    of JFZ is slightly lower than other sub-irrigation districts because the sequences
    of samples put into the LSTM model of JFZ are longer and therefore, the time dependence
    between the series is more complicated. Table 4. Model training and testing with
    incomplete sequence input, and validation results on the complete sequence input
    for different sub-irrigation districts. Sub-irrigation district Period R2AIAF
    RMSE (%) MAE (%) Wulanbuhe Training 0.89 10.31 9.11 Testing 0.88 10.29 9.06 Complete
    sequence 0.87 11.15 9.83 Jiefangzha Training 0.82 12.09 10.36 Testing 0.82 12.17
    10.41 Complete sequence 0.82 12.11 10.38 Yongji Training 0.87 12.73 11.21 Testing
    0.87 12.95 11.41 Complete sequence 0.86 12.83 11.29 Yichang Training 0.91 12.17
    10.70 Testing 0.92 12.38 10.89 Complete sequence 0.90 13.37 11.69 Wulate Training
    0.85 12.42 10.84 Testing 0.86 12.45 10.87 Complete sequence 0.84 14.57 12.75 The
    simulation from complete input was validated using the same reference data as
    used in the testing period for the LSTM model. The results show that accuracy
    is slightly decreased for WLBH, YC and WLT compared with that in the model testing
    period. This suggests that the model accuracy is affected by incomplete input
    training, which is expected since it is a data-based regression model. However,
    the decrease in accuracy is within an acceptable range. The MAE is still around
    10% and the highest MAE is 12.75% (Table 4). The model accuracy varies the least
    for JFZ because the sequence length of its training samples is longer and therefore
    closer to the complete sequences. From the comparisons of simulated FAIAF values
    simulated with RF and LSTM network models, their coefficients of determination
    are all greater than 0.92 for WLBH, JFZ, YC, and WLT, while slightly lower (0.86)
    for YJ. These results indicate that these two models are in good agreement to
    simulate FAIAF. However, according to the comparisons with Sentinel-2 reference
    data, the RF model provides more accurate simulations of FAIAFs (Table 5) than
    LSTM, where the R2AIAF and RMSE for the LSTM model are ranging from 0.77% to 0.85%
    and 14.07–16.72%, respectively. Meanwhile, we can also obtain the AI area calculated
    by FAIAF derived from LSTM simulation. So far, we have obtained the AI area calculated
    using three models, i.e., threshold-based model (Qian et al., 2022), RF model,
    and LSTM model. Overall, a good agreement is observed across all sub-irrigation
    districts in different years for the three models, where no model significantly
    over- and/or underestimated the AI area compared with statistics through zero-crossing
    linear regression (Table 5). The RF model gives the highest coefficients of determination
    (from 0.94 to 1.00) between simulated and statistical AI area (R2S), followed
    by the threshold-based model (R2S from 0.93 to 1.00). These two models give similar
    results across all sub-irrigation districts in different years. However, the LSTM
    model has lower accuracy in estimating irrigated area during small water diversion
    years. Besides the LSTM model itself, another possible reason for such results
    is that both the threshold-based model and the RF model are generated through
    statistical-based optimization, while the LSTM is not. The overall accuracy assessment
    results show that the LSTM model trained with incomplete sequences is capable
    of acquiring accurate and comprehensive information about AIAF dynamics. Table
    5. Regression results of AI areas simulated using the three models against statistical
    AI area. Year Threshold-based RF LSTM Slope R2S Slope R2S Slope R2S 2010 0.89
    0.97 0.89 0.99 0.95 0.97 2011 0.94 0.99 0.96 0.98 1.01 0.99 2012 0.99 1.00 0.99
    0.97 1.09 0.99 2013 1.04 0.99 1.00 0.97 1.07 0.98 2014 1.11 0.99 1.12 0.98 1.17
    0.98 2015 0.98 0.94 1.00 0.96 1.01 0.87 2016 0.99 0.99 0.94 0.98 0.99 0.98 2017
    1.02 0.99 0.92 1.00 0.96 0.97 2018 1.10 0.97 1.06 0.98 1.11 0.99 2019 1.01 0.93
    0.99 1.00 1.07 0.90 2020 0.97 0.98 0.99 0.94 1.06 0.84 Note: Slope values greater
    than 1 are underlined. 4.3. Assumption validation The above method assumes that
    AIAF is essentially rising until point C and no longer rising after it, i.e.,
    AIAF at point C is the FAIAF. The assumption is considered valid if the difference
    between AIAF corresponding to point C and the maximum value of simulated AIAF
    series is within 2% because of inherent fluctuations in the model simulation.
    To verify this assumption, we extended the length of simulated sequence to three
    days after point C to get FAIAF. We calculated the proportion of pixels in each
    sub-irrigation district that did not meet the assumption (P), the mean difference
    (MD) between the AIAF of point C and the maximum AIAF for pixels that did not
    meet the assumption, and the product of P and MD (Serror), which are used to quantify
    the error introduced by using statistical AI area to calibrate MBWIST (Table 6).
    It is observed that the proportion of pixels satisfying the assumption (1 −P)
    across each sub-irrigation district is mostly above 80%, while the MD and Serror
    values are approximately 5.0% and less than 1%, respectively. Therefore, the results
    show that the assumption is approximately valid and subsequent calibration of
    MBWIST with statistical AI area is feasible. Table 6. The proportion of pixels
    in each sub-irrigation district that did not meet the assumption (P), the mean
    difference (MD) between AIAF of point C and the maximum AIAF for pixels that did
    not meet the assumption, and the product of P and MD (Serror) from 2010 to 2020.
    Sub-irrigation district Metrics (%) 2010 2011 2012 2013 2014 2015 2016 2017 2018
    2019 2020 Average Wulanbuhe P 21.0 14.0 16.0 13.0 10.0 15.0 20.0 14.0 14.0 17.0
    16.0 15.5 MD 5.9 6.4 5.2 4.6 4.9 5.3 5.2 5.4 4.7 5.0 4.8 5.2 Serror 1.2 0.9 0.8
    0.6 0.5 0.8 1.0 0.8 0.7 0.8 0.8 0.8 Jiefangzha P 8.0 10.0 6.0 11.0 9.0 12.0 7.0
    9.0 9.0 6.0 11.0 9.0 MD 4.5 5.3 4.2 4.5 4.6 5.5 4.4 4.8 4.4 4.0 4.6 4.6 Serror
    0.4 0.5 0.2 0.5 0.4 0.7 0.3 0.4 0.4 0.2 0.5 0.4 Yongji P 8.0 10.0 6.0 12.0 15.0
    21.0 17.0 12.0 10.0 12.0 14.0 12.0 MD 4.6 4.9 4.4 4.1 4.7 6.4 4.9 4.8 4.9 4.5
    5.5 4.9 Serror 0.4 0.5 0.3 0.5 0.7 1.3 0.8 0.6 0.5 0.5 0.8 0.6 Yichang P 22.0
    17.0 17.0 13.0 13.0 20.0 18.0 27.0 15.0 17.0 21.0 18.0 MD 5.2 5.8 5.2 4.9 5.2
    4.7 5.1 5.7 5.0 5.2 5.8 5.2 Serror 1.2 1.0 0.9 0.6 0.7 0.9 0.9 1.5 0.7 0.9 1.2
    0.9 Wulate P 9.0 9.0 17.0 12.0 11.0 13.0 10.0 15.0 11.0 16.0 22.0 13.0 MD 4.0
    3.9 5.1 4.1 4.2 4.7 3.9 4.3 4.0 4.8 5.1 4.4 Serror 0.4 0.4 0.9 0.5 0.5 0.6 0.4
    0.6 0.4 0.8 1.1 0.6 4.4. Autumn irrigation trends in HID 4.4.1. Spatial-temporal
    distribution of final autumn-irrigation area fraction The RF model produced annual
    FAIAF maps from 2010 to 2020 across the HID (Fig. 9). FAIAF maps showed similar
    distribution patterns to the AI extent maps of Qian et al. (2022), but it provided
    more pixels with low irrigation fractions that are easily ignored when using a
    simple threshold-based model to classify a pixel into irrigated/non-irrigated
    one. Download : Download high-res image (709KB) Download : Download full-size
    image Fig. 9. Spatial distributions of autumn irrigation area fractions in the
    HID from 2010 to 2020. The annual FAIAF distribution maps revealed the characteristics
    and areal trends of AI in sub-irrigation districts across time. FAIAF is manually
    divided into four levels by the quartiles, i.e., low (0–25%), medium-low (25%–50%),
    medium-high (50%–75%), and high (75%–100%). The cropland distribution pattern
    has a significant influence on the proportion of FAIAF at each level for the upstream
    sub-irrigation districts. The low-level FAIAF is more than 60% for WLBH (Fig.
    10) due to its fragmented cropland distribution pattern surrounded by desert (Fig.
    2). In contrast, the medium-high and above levels of FAIAF in JFZ exceeds 60%
    because of its highly concentrated cropland, especially corn that requires AI.
    The proportion of FAIAF across the whole HID at each level showed no significant
    change from 2010 to 2020, with an average of 38%, 19%, 21%, and 22% for the four
    levels, respectively. However, the proportion of low-level FAIAF in JFZ and YC
    showed an increasing trend in recent years, which may be caused by the increase
    in sunflower planting area in JFZ and YC in recent years (Wen et al., 2019). Download
    : Download high-res image (273KB) Download : Download full-size image Fig. 10.
    Inter-annual variations in the proportions of the final autumn irrigation area
    fractions at different levels across the HID from 2010 to 2020. 4.4.2. Spatial-temporal
    distribution of autumn-irrigation patterns The AI patterns in HID were finally
    classified into eight classes based on the elbow criterion (Syakur et al., 2018)
    and the comparison of classification results for different classification numbers.
    The mean values of the feature variables of the eight classes varied in wide ranges
    (Table 7). According to the mean values, FAIAF can be divided into three categories,
    i.e., high, medium, and low. Both the duration and irrigation concentration can
    be divided into two categories, i.e., long and short durations and concentrated
    and scattered irrigations. The concentration-time can be divided into four categories,
    i.e., early, early and late, medium and late, and late. Therefore, the eight classes
    represent eight categories of irrigation patterns given in detail in Table 7.
    Table 7. Mean values of the feature variables of the eight classification results
    and their corresponding irrigation pattern categories. NA represents Not available.
    Classification results FAIAF (%) Irrigation duration (day) Irrigation times to
    reach 75% FAIAF Average time interval between irrigations (day) Relative time
    of the largest AIAF Relative time of the second largest AIAF Relative time of
    the third largest AIAF Irrigation pattern 1 74.5 24.1 2.5 5.8 0.31 0.43 0.10 HLCE
    (high, long, concentrated, early) 2 74.3 17.1 1.0 0.0 0.46 NA NA HSCE (high, short,
    concentrated, early) 3 46.7 29.3 2.2 17.7 0.36 0.75 0.08 MLSEL (medium, long,
    scattered, early and late) 4 61.6 25.0 3.3 6.9 0.54 0.50 0.74 MLCML (medium, long,
    concentrated, medium and late) 5 51.5 16.3 2.3 6.5 0.80 0.69 0.05 MSCL (medium,
    short, concentrated, late) 6 24.0 10.4 2.1 5.1 0.14 0.70 0.02 LLSEL (low, long,
    scattered, early and late) 7 18.8 6.1 1.0 0.0 0.23 NA NA LSCE (low, short, concentrated,
    early) 8 26.2 7.2 1.4 1.4 0.80 0.06 0.01 LSCL (low, short, concentrated, late)
    Fig. 11 depicts the distribution of AI patterns in HID. Irrigation patterns were
    mainly influenced by the local irrigation systems and agricultural management
    practices, thus there was no obvious spatial distribution pattern. However, a
    concentrated pattern dominates because the suitable time for AI application is
    after crop harvest. In general, WLBH is dominated by LSCE and LLSEL patterns,
    JFZ by HLCE and HSCE patterns, YJ by HLCE and LSCE patterns, YC by LSCE pattern,
    and WLT by LSCE and LSCL patterns. In recent years, there have been significant
    changes in irrigation patterns (Fig. 12). The area of SC (short, concentrated)
    pattern tends to increase, while that of LC (long, concentrated) tends to decrease
    except in 2015 due to the construction of water projects (Liu, 2017) and significant
    changes in cropping patterns (Wen et al., 2019). The regions with significant
    changes in AI patterns are mainly concentrated downstream of the HID, including
    WLT, eastern and southern YC, and northern YJ. The change in irrigation patterns
    is strongly linked to the advancement of land policy reform in China. Overall,
    the detailed dynamic irrigation patterns shown in maps can help in better water
    management practices in HID. Download : Download high-res image (703KB) Download
    : Download full-size image Fig. 11. Spatial distributions of autumn irrigation
    patterns in the Hetao Irrigation District from 2010 to 2020. Download : Download
    high-res image (162KB) Download : Download full-size image Fig. 12. Inter-annual
    variations in the proportions of autumn irrigation patterns across the HID from
    2010 to 2020. 5. Discussion In this study, we proposed a model that can monitor
    NRT changes in flood irrigation extent at the sub-pixel scale over a large irrigation
    district. The model includes two main modules, which use RF and LSTM algorithms
    to achieve the goals of extracting large-scale training samples and simulating
    AIAF time series in NRT, respectively. In general, the proposed model performs
    well in each of the five sub-irrigation districts of HID. However, the model also
    has some drawbacks that need to be improved in further studies. There are two
    main drawbacks to the RF module. First, we used a threshold method to automatically
    extract reference information at large scale and frequent time scale, which were
    used as training samples in the RF model. The RF algorithm is combined with the
    common calibration process to calibrate the thresholds (MBWIST) given the image
    incompleteness. A static threshold was used to allow the model to be used in multi-years,
    especially for years/regions without Sentinel-2 records, as well as to achieve
    near real-time simulations in all subsequent years. This may result in some loss
    of model accuracy (Ludwig et al., 2019), but our results show that the accuracy
    is satisfactory. Second, correlations exist between the feature variables of the
    model as in many other irrigated land identification models (Deines et al., 2019).
    Multicollinearity reduces the capacity of the model to identify independent variables
    that are statistically significant and weakens the data interpretability of the
    model, although regression remains robust for these correlations (Molnar, 2019).
    However, there is still no relatively perfect way to deal with this problem (Frost,
    2019). Moreover, the influence of correlation on variable importance can be complex.
    Some studies concluded that correlation tends to rank the correlated variables
    higher (Strobl et al., 2007, Zhang and Yang, 2020), while others argued that the
    importance of associated features decreases when a correlated feature is added,
    because the importance is split between correlated features (Molnar, 2019). Variable
    importance ranking (Fig. 7) shows that none of the spectral features stand out
    in importance, although they are indispensable for the model. This could be attributed
    to the splitting of importance among highly correlated spectral features. In summary,
    the variable importance ranking results highlight some promising features that
    may be useful for AI detection in large-scale or data-scarce regions. In the LSTM
    module, the main weakness is the problems inherent to the model itself. For example,
    LSTM model tends to generate smoothed simulations (Fig. 8) as other regression
    methods, which results in a lower variation range compared to actual AI patterns
    (Nguyen and Bae, 2020). Moreover, multi-step regression with a standard LSTM model
    is subject to error accumulation (Zhang et al., 2021), which can explain why the
    LSTM model is not as effective as RF for FAIAFs simulations (Table 5). Last but
    not least, the LSTM model (as with any deep learning model) has a data-intensive
    nature that may limit its use in data-scarce problems (Tian et al., 2021). The
    lack of Sentinel-2 reference data in this study makes the LSTM model learn insufficient
    information during the training process. Although we increased the number of samples
    by reducing the requirements for sample sequence length, the quality of samples
    may deteriorate (Li et al., 2021). The model can be further improved with more
    Sentinel-2 reference data accumulated in the future, allowing the LSTM model to
    learn more from more learning samples. The model can provide us with daily inundation
    extent that can be used as input to the agro-hydrological models, facilitating
    our understanding of the hydrological processes influenced by AI, especially the
    lateral groundwater flow that is an important channel for water and salt exchange
    between irrigated and non-irrigated lands (Wen et al., 2022). This is important
    for the determination of water conservation intensity and control of salinity
    levels (Ren et al., 2016). In addition, this model can be applied to other studies
    that require real-time monitoring of inundation extent, such as monitoring of
    flood hazards extent and agricultural managed aquifer recharge extent (Ganot and
    Dahlke, 2021). These studies rely heavily on detecting surface water bodies that
    are usually large-scale and short-term, similar to those formed by AI (Sakamoto
    et al., 2007). The present model can address the problem of suboptimal representation
    of the instantaneous distribution of floods provided by MODIS only (Mohammadi
    et al., 2017). Irrigation patterns classified by features extracted from AIAF
    time series revealed some new patterns of AI in HID. The significant changes in
    irrigation patterns in HID over recent years provided evidence for the implementation
    of land consolidation policy and land transfer policy. The land consolidation
    project of HID was launched by an agreement signed by the provincial government
    and the Ministry of Finance of China in January 2008. Meanwhile, orderly land
    transfer has been supported and encouraged on all scales since 2008 in China (Xu
    et al., 2018). Land consolidation forms more rational landholdings by rearranging
    fragmented land plots and their ownership, while land transfer to large professional
    operators can promote moderate-scale rural land management. Furthermore, land
    consolidation can promote the transfer of land management rights (Jiang et al.,
    2022), as it allows larger areas of highly productive land to be used together.
    These two policies have resulted in more concentrated crop distribution patterns
    and led to a gradual change in irrigation water use from scattered, small-scale,
    and sloppy to concentrated, large-scale, and specialized. Moreover, they are of
    greater importance for downstream areas, because the cropland downstream was initially
    more uneven and disorganized. Last but not least, significant changes in AI patterns
    can have an impact on groundwater tables and water/salt transport from irrigated
    land to non-irrigated lands. Therefore, cropping patterns and AI patterns should
    be given priority when implementing water-saving measures that have requirements
    for groundwater table and soil salinization control. 6. Conclusions This study
    addressed the scientific and practical needs to monitor autumn irrigation extent
    in near-real-time at an appropriate spatial resolution, which helps to capture
    irrigation dynamics and water use, and thus develop dynamic irrigation schedules
    and assess associated environmental issues. To address the gaps in knowledge and
    data, we applied two models, including LSTM models and RF models. The LSTM model
    was applied to irrigation monitoring and to solve the problem of mixed pixels
    of MODIS data by loosely coupling MODIS with Sentinel-2 data. The RF module was
    used to solve the problem caused by incomplete image series and to select features
    for the LSTM model. The model performance was tested with reference data at pixel
    scale (R2AIAF over 0.82, MAE around 10.7%) and statistical AI area at sub-irrigation
    district scale (R2S of 0.84–0.99), respectively, indicating that the model precision
    was satisfactory. We generated annual FAIAF distributions, as well as annual AI
    pattern distributions based on simulated AIAF time series classifications from
    2010 to 2020. Based on these 11 years of data, we found that for the upstream
    of irrigation district, FAIFA is closely related to the cropland distribution
    pattern. Meanwhile, we found an increase in areas with short-duration and concentrated
    irrigation, and a decrease in areas with long-duration and concentrated irrigation.
    The regions with significant changes in AI patterns are mainly concentrated downstream
    of the HID. Changes in irrigation patterns reflect the effect of two important
    land policies (land consolidation and land transfer) implemented in China and
    can have a significant impact on the groundwater table and water/salt redistribution
    between irrigated/non-irrigated fields. Finally, the model is temporally applicable
    to other years and expected to perform better with more Sentinel-2 data accumulation.
    Declaration of Competing Interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. Acknowledgments This research was
    funded by National Natural Science Foundation of China (grant numbers 52279038,
    51839006, and 51779119) and Research Program of the State Key Laboratory of Hydroscience
    and Engineering, Tsinghua University (grant number 2020-KY-01). Appendix A. Determination
    method of points A and C in the MBWI curve To determine point C in the MBWI curve
    (Fig. 5), Qian et al. (2022) provided detailed instructions for pixels with maximum
    MBWI value exceeding MBWIMT. While for pixels with maximum MBWI value smaller
    than MBWIMT, point C is taken as the peak point of the curve. The determination
    of point A is also divided into two cases depending on whether maximum MBWI value
    exceeds MBWIMT or not. The difference between the two cases is the choice of the
    reference point, i.e., point B has to be selected if MBWIMT is exceeded, otherwise
    point C has to be selected. Once a reference point is fixed, point A can be determined
    by finding the first point from the reference point such that it satisfies the
    following specified conditions. (1) The MBWI value of the point needs to be less
    than or equal to the average MBWI value from August 1 to September 10 and the
    distance between the point and the reference point is less than 40 days. (2) If
    the point satisfying (1) does not exist, the MBWI value of the point needs to
    be less than or equal to the maximum MBWI value from August 1 to September 10.
    (3) If the above two conditions still fail to find point A, then if the MBWI value
    on September 10 is less than the MBWI value of point B, point A will be designated
    as the point on September 10; otherwise, point A is considered to overlap with
    point B. Appendix B. Land use mapping and statistics of land cover fractions The
    main steps for land cover fractions calculation are: (1) Completing approximate
    land use maps from 2011 to 2019 based on the GlobeLand30 datasets in 2010 and
    2020, and MODIS-derived indices; (2) Calculating the area ratios of five land
    cover types (i.e., potential-cropland, other vegetation types, bare land, impervious
    surfaces, and water bodies) contained in each MODIS pixel based on the spatial
    correspondence between MODIS and land use maps. Given the desire for a simple,
    fast, and accurate method of completing land use maps for multiple years, we assumed
    that the merged extent of a land use type in GlobeLand30 in 2010 and 2020 represents
    the full extent to which the land use type may change between 2010 and 2020. In
    addition, we only consider when a pixel in the merged extent of a particular land
    use type becomes and stops becoming that particular land use type, and do not
    consider that pixel becoming any other land use type. This may result in the calculated
    area fractions of various land use types not summing to one, but this does not
    have much effect on the simulation in the RF model since the relative magnitudes
    of the values are still meaningful. Commonly used indices with stable thresholds
    were selected for different land use types (indices underlined in Table B1). For
    bare land, we assume that one pixel is no longer bare land when its average NDVI
    value from August 1 to September 10 is greater than 0.2 (Spadoni et al., 2020),
    and remains a bare land pixel otherwise. For impervious surfaces, it was assumed
    that the process of impervious surface transformation was irreversible. Therefore,
    the pixel is considered a permanently impervious-surface pixel since the year
    when the Normalized Difference Built-up Index (NDBI) value is greater than 0 (Zha
    et al., 2003). For water bodies, since water surfaces are highly susceptible to
    precipitation and human activities, and can appear and disappear abruptly (Wang
    et al., 2020), we only care about the average NDWI46 value of the pixels from
    August 1 to September 10. If it is less than 0, it is considered a water pixel
    (Xu, 2006). For potential cropland, the combined extent of cropland and grassland
    in land use for the years 2010 and 2020 is considered to be the potential-cropland
    extent, and its fraction is treated as a constant. The lack of distinction between
    grassland and cropland has little effect on the result as grassland will not be
    autumn-irrigated. Forest and shrubland are used to calculate other vegetation
    cover fractions. Table B1. Seven indices used in this study. The input is surface
    reflectance (ρ) for bands b1 (ρb1) to b7 (ρb7) derived from the MODIS multi-spectral
    bands. Index Equation Type NDWI17 Normalized Difference Water Index NDWI42 Normalized
    Difference Water Index NDWI46 Normalized Difference Water Index MBWI Multi-Band
    water index NDVI Normalized Difference Vegetation Index NMDI Normalized Difference
    Drought Index NDBI Normalized Difference Built-up Index After obtaining rough
    land use maps for the 11 years, the 30 m resolution land use maps were resampled
    to be suitable for fraction calculations and the corresponding window of MODIS
    to land use maps was identified according to their geolocations. The fraction
    of each of the five land cover types within each MODIS pixel was calculated separately.
    Appendix C. Input features for the RF and LSTM models Table C1, Table C2 list
    input features for the RF model and input features and hyperparameters for the
    LSTM model, respectively. Table C1. Input features used for final autumn irrigation
    area fractions regression in RF. Group Input Features Variable names Calculation
    Temporal features DOY of points A and C DOY_A, DOY_C See Appendix A Duration from
    points A to C Dur_AC DOY_C−DOY_A MBWI of points A and C MBWI_A, MBWI_C Difference
    of MBWI between points A and C; Difference of MBWI between points B and C Diff_AC,
    Diff_BC MBWI_C−MBWI_A, MBWI_C−MBWI_B Difference between MBWI (filtered only) of
    DOY_C and MBWI of point B (MBWI_B); Difference between MBWI (filtered only) of
    the day before DOY_C and MBWI_B; Difference between MBWI (filtered only) of the
    day after DOY_C and MBWI_B DiffOF_BC, DiffOF_BCb, DiffOF_BCa Maximum/Minimum/Mean/
    Standard deviation of MBWI from harvest to AI Max_agu, Min_agu, Mean_agu, Std_agu
    Max/Min/Mean/Standard deviation of MBWI from August 1 to September 10 Maximum
    NDVI NDVI_max Start/End of season SOS, EOS Time difference between point A and
    end of season Time_pre DOY_A−EOS Spectral features NDWI17 of DOY_C NDWI42 of DOY_C
    NDWI46 of DOY_C NDBI of DOY_C NMDI of DOY_C NDVI of DOY_C Green band of DOY_C
    NI17_C N42_C N46_C NDBI_C NMDI_C NDVI_C G_C SeeTable B1 for index calculation
    formula LULC features Potential-cropland/Vegetation/Bare land/ Impervious surfaces/Water
    bodies fractions Fcrop, Fveg, Fbare,Fimp, Fwater See Appendix B Soil texture features
    Topsoil Clay/Sand/Silt Fraction T_CLAY, T_SAND, T_SILT Topsoil Salinity T_ECE
    Note: DOY-Day of the year. Table C2. Input features and hyperparameters of the
    LSTM model used in this study. Item Feature Wulanbuhe Jiefangzha Yongji Yichang
    Wulate Variable names DOY_A √ √ √ √ DOY_P √ √ √ √ √ MBWI_A √ MBWI_P √ √ √ √ √
    Diff_PA (MBWI_P−MBWI_A) √ Min_agu √ √ Mean_agu √ N17_P √ √ √ √ N42_P √ √ NDVI_P
    √ √ √ √ NDBI_P √ √ √ √ B4_P √ √ √ √ √ Fcrop √ √ √ √ √ Fimp √ √ √ √ √ Fbare √ NDVI_max
    √ √ √ √ √ Hyperparameter NumHiddenUnits 60 40 40 40 80 DropoutLayer 0.5 0.5 0.5
    0.5 0 MaxEpochs 200 200 200 200 200 MiniBatchSize 500 1000 500 500 500 InitialLearnRate
    0.001 0.001 0.001 0.001 0.001 LearnRateDropPeriod 100 100 100 100 100 LearnRateDropFactor
    0.2 0.2 0.2 0.2 0.2 Note: DOY-Day of the year. The marker P stands for point P
    and refers to the point of the present day. Data availability Data will be made
    available on request. References Borro et al., 2014 M. Borro, N. Morandeira, M.
    Salvia, P. Minotti, P. Perna, P. Kandus Mapping shallow lakes in a large South
    American floodplain: a frequency approach on multitemporal Landsat TM/ETM data
    J. Hydrol., 512 (2014), pp. 39-52, 10.1016/j.jhydrol.2014.02.057 View PDFView
    articleView in ScopusGoogle Scholar Breiman, 2001 L. Breiman Random forests Mach.
    Learn, 45 (2001), pp. 5-32, 10.1023/A:1010933404324 Google Scholar Bwambale et
    al., 2022 E. Bwambale, F.K. Abagale, G.K. Anornu Smart irrigation monitoring and
    control strategies for improving water use efficiency in precision agriculture:
    a review Agric. Water Manag, 260 (2022), Article 107324, 10.1016/j.agwat.2021.107324
    View PDFView articleView in ScopusGoogle Scholar Cao et al., 2021 J. Cao, Z. Zhang,
    Y. Luo, L. Zhang, J. Zhang, Z. Li, F. Tao Wheat yield predictions at a county
    and field scale with deep learning, machine learning, and google earth engine
    Eur. J. Agron., 123 (2021), Article 126204, 10.1016/j.eja.2020.126204 View PDFView
    articleView in ScopusGoogle Scholar Casal, 2022 G. Casal Assessment of Sentinel-2
    to monitor highly dynamic small water bodies: the case of Louro lagoon (Galicia,
    NW Spain) Oceanologia, 64 (2022), pp. 88-102, 10.1016/j.oceano.2021.09.004 View
    PDFView articleView in ScopusGoogle Scholar Chang et al., 2019 X. Chang, Z. Gao,
    S. Wang, H. Chen Modelling long-term soil salinity dynamics using SaltMod in Hetao
    Irrigation District, China Comput. Electron. Agric., 156 (2019), pp. 447-458,
    10.1016/j.compag.2018.12.005 View PDFView articleView in ScopusGoogle Scholar
    Chen et al., 2016 Y. Chen, X. Song, S. Wang, J. Huang, L.R. Mansaray Impacts of
    spatial heterogeneity on crop area mapping in Canada using MODIS data ISPRS J.
    Photogramm. Remote Sens., 119 (2016), pp. 451-461, 10.1016/j.isprsjprs.2016.07.007
    View PDFView articleView in ScopusGoogle Scholar Chen et al., 2018a Y. Chen, D.
    Lu, L. Luo, Y. Pokhrel, K. Deb, J. Huang, Y. Ran Detecting irrigation extent,
    frequency, and timing in a heterogeneous arid agricultural region using MODIS
    time series, Landsat imagery, and ancillary data Remote Sens. Environ., 204 (2018),
    pp. 197-211, 10.1016/j.rse.2017.10.030 View PDFView articleView in ScopusGoogle
    Scholar Chen et al., 2018b Y. Chen, D. Lu, E. Moran, M. Batistella, L.V. Dutra,
    I.D.A. Sanches, R.F.B. da Silva, J. Huang, A.J.B. Luiz, M.A.F. de Oliveira Mapping
    croplands, cropping patterns, and crop types using MODIS time-series data Int.
    J. Appl. Earth Obs. Geoinf., 69 (2018), pp. 133-147, 10.1016/j.jag.2018.03.005
    View PDFView articleView in ScopusGoogle Scholar Dao et al., 2019 P.D. Dao, N.T.
    Mong, H.-P. Chan Landsat-MODIS image fusion and object-based image analysis for
    observing flood inundation in a heterogeneous vegetated scene GIScience Remote
    Sens., 56 (2019), pp. 1148-1169, 10.1080/15481603.2019.1627062 View in ScopusGoogle
    Scholar Deines et al., 2019 J.M. Deines, A.D. Kendall, M.A. Crowley, J. Rapp,
    J.A. Cardille, D.W. Hyndman Mapping three decades of annual irrigation across
    the US High Plains Aquifer using Landsat and Google Earth Engine Remote Sens.
    Environ., 233 (2019), Article 111400, 10.1016/j.rse.2019.111400 View PDFView articleView
    in ScopusGoogle Scholar Du et al., 2016 Y. Du, Y. Zhang, F. Ling, Q. Wang, W.
    Li, X. Li Water bodies’ mapping from Sentinel-2 imagery with Modified Normalized
    Difference Water Index at 10-m spatial resolution produced by sharpening the SWIR
    band Remote Sens., 8 (2016), p. 354, 10.3390/rs8040354 Google Scholar Feng et
    al., 2005 Z.-Z. Feng, X.-K. Wang, Z.-W. Feng Soil N and salinity leaching after
    the autumn irrigation and its impact on groundwater in Hetao Irrigation District,
    China Agric. Water Manag., 71 (2005), pp. 131-143, 10.1016/j.agwat.2004.07.001
    View PDFView articleView in ScopusGoogle Scholar Frost, 2019 Frost, J., 2019.
    Regression Analysis: An Intuitive Guide for Using and Interpreting Linear Models.
    E-book at 〈https://statisticsbyjim.com/regression/regression-analysis-intuitive-guide/〉.
    Google Scholar Fuentes et al., 2019 I. Fuentes, J. Padarian, F. Van Ogtrop, R.
    Willem Vervoort Spatiotemporal evaluation of inundated areas using MODIS imagery
    at a catchment scale J. Hydrol., 573 (2019), pp. 952-963, 10.1016/j.jhydrol.2019.03.103
    View PDFView articleView in ScopusGoogle Scholar Ganot and Dahlke, 2021 Y. Ganot,
    H.E. Dahlke A model for estimating Ag-MAR flooding duration based on crop tolerance,
    root depth, and soil texture data Agric. Water Manag, 255 (2021), Article 107031,
    10.1016/j.agwat.2021.107031 View PDFView articleView in ScopusGoogle Scholar Gao
    et al., 2015 X. Gao, Z. Huo, Y. Bai, S. Feng, G. Huang, H. Shi, Z. Qu Soil salt
    and groundwater change in flood irrigation field and uncultivated land: a case
    study based on 4-year field observations Environ. Earth Sci., 73 (2015), pp. 2127-2139,
    10.1007/s12665-014-3563-4 View in ScopusGoogle Scholar Gorelick et al., 2017 N.
    Gorelick, M. Hancher, M. Dixon, S. Ilyushchenko, D. Thau, R. Moore Google earth
    engine: planetary-scale geospatial analysis for everyone Remote Sens. Environ.,
    202 (2017), pp. 18-27, 10.1016/j.rse.2017.06.031 View PDFView articleView in ScopusGoogle
    Scholar Hochreiter and Schmidhuber, 1997 S. Hochreiter, J. Schmidhuber Long short-term
    memory Neural Comput., 9 (1997), pp. 1735-1780, 10.1162/neco.1997.9.8.1735 View
    in ScopusGoogle Scholar Jeong et al., 2022 S. Jeong, J. Ko, J.M. Yeom Predicting
    rice yield at pixel scale through synthetic use of crop and deep learning models
    with satellite data in South and North Korea Sci. Total Environ., 802 (2022),
    Article 149726, 10.1016/j.scitotenv.2021.149726 View PDFView articleView in ScopusGoogle
    Scholar Jiang et al., 2022 Y. Jiang, Y.-T. Tang, H. Long, W. Deng Land consolidation:
    a comparative research between Europe and China Land Use Policy, 112 (2022), Article
    105790, 10.1016/j.landusepol.2021.105790 View PDFView articleView in ScopusGoogle
    Scholar Karthikeyan et al., 2020 L. Karthikeyan, I. Chawla, A.K. Mishra A review
    of remote sensing applications in agriculture for food security: Crop growth and
    yield, irrigation, and crop losses J. Hydrol., 586 (2020), Article 124905, 10.1016/j.jhydrol.2020.124905
    View PDFView articleView in ScopusGoogle Scholar Lefebvre et al., 2019 G. Lefebvre,
    A. Davranche, L. Willm, J. Campagna, L. Redmond, C. Merle, A. Guelmami, B. Poulin
    Introducing WIW for detecting the presence of water in wetlands with landsat and
    sentinel satellites Remote Sens, 11 (19) (2019), pp. 10-14, 10.3390/rs11192210
    Google Scholar Li et al., 2012 R. Li, H. Shi, G.N. Flerchinger, T. Akae, C. Wang
    Simulation of freezing and thawing soils in Inner Mongolia Hetao Irrigation District,
    China Geoderma, 173–174 (2012), pp. 28-33, 10.1016/j.geoderma.2012.01.009 View
    PDFView articleView in ScopusGoogle Scholar Li et al., 2021 W. Li, N. Sengupta,
    P. Dechent, D. Howey, A. Annaswamy, D.U. Sauer Online capacity estimation of lithium-ion
    batteries with deep long short-term memory networks J. Power Sources, 482 (2021),
    Article 228863, 10.1016/j.jpowsour.2020.228863 View PDFView articleView in ScopusGoogle
    Scholar Li et al., 2022 X. Li, B.A. Engel, P. Duan, S. Sun, Y. Wang Developing
    an agricultural water pricing model considering both physical and virtual water:
    a case study of an irrigation district in China J. Clean. Prod., 368 (2022), Article
    133043, 10.1016/j.jclepro.2022.133043 View PDFView articleView in ScopusGoogle
    Scholar Liu et al., 2018 W. Liu, J. Dong, K. Xiang, S. Wang, W. Han, W. Yuan A
    sub-pixel method for estimating planting fraction of paddy rice in Northeast China
    Remote Sens. Environ., 205 (2018), pp. 305-314, 10.1016/j.rse.2017.12.001 View
    PDFView articleGoogle Scholar Liu, 2017 Y.C. Liu An analysis of the role of autumn
    irrigation and water saving potential of autumn irrigation in Hetao Irrigation
    District in Inner Mongolia. Inner Mongolia Water Resour., 5 (2017), pp. 51-52
    CrossRefView in ScopusGoogle Scholar Loh, 2002 W.Y. Loh Regression trees with
    unbiased variable selection and interaction detection Stat. Sin., 12 (2002), pp.
    361-386 View in ScopusGoogle Scholar Lu et al., 2019 X. Lu, R. Li, H. Shi, J.
    Liang, Q. Miao, L. Fan Successive simulations of soil water-heat-salt transport
    in one whole year of agriculture after different mulching treatments and autumn
    irrigation Geoderma, 344 (2019), pp. 99-107, 10.1016/j.geoderma.2019.03.006 View
    PDFView articleView in ScopusGoogle Scholar Ludwig et al., 2019 C. Ludwig, A.
    Walli, C. Schleicher, J. Weichselbaum, M. Riffler A highly automated algorithm
    for wetland detection using multi-temporal optical satellite data Remote Sens.
    Environ., 224 (2019), pp. 333-351, 10.1016/j.rse.2019.01.017 View PDFView articleView
    in ScopusGoogle Scholar Masiliūnas et al., 2021 D. Masiliūnas, N.E. Tsendbazar,
    M. Herold, M. Lesiv, M. Buchhorn, J. Verbesselt Global land characterisation using
    land cover fractions at 100 m resolution Remote Sens. Environ., 259 (2021), Article
    112409, 10.1016/j.rse.2021.112409 View PDFView articleView in ScopusGoogle Scholar
    McQueen, 1967 J. McQueen Some methods for classification and analysis of multivariate
    observations Comput. Chem., 4 (1967), pp. 257-272 Google Scholar Mohammadi et
    al., 2017 A. Mohammadi, J.F. Costelloe, D. Ryu Application of time series of remotely
    sensed normalized difference water, vegetation and moisture indices in characterizing
    flood dynamics of large-scale arid zone floodplains Remote Sens. Environ., 190
    (2017), pp. 70-82, 10.1016/j.rse.2016.12.003 View PDFView articleView in ScopusGoogle
    Scholar Molnar, 2019 Molnar, C., 2019. Interpretable machine learning: A guide
    for making black box models explainable. E-book at 〈https://christophm.github.io/interpretable-ml-book/〉.
    Google Scholar Negri et al., 2020 C. Negri, E. Chiaradia, M. Rienzner, A. Mayer,
    C. Gandolfi, M. Romani, A. Facchi On the effects of winter flooding on the hydrological
    balance of rice areas in northern Italy J. Hydrol., 590 (2020), Article 125401,
    10.1016/j.jhydrol.2020.125401 View PDFView articleView in ScopusGoogle Scholar
    Nguyen and Bae, 2020 D.H. Nguyen, D.-H. Bae Correcting mean areal precipitation
    forecasts to improve urban flooding predictions by using long short-term memory
    network J. Hydrol., 584 (2020), Article 124710, 10.1016/j.jhydrol.2020.124710
    View PDFView articleView in ScopusGoogle Scholar Otsu et al., 1979 N. Otsu, P.L.
    Smith, D.B. Reid, C. Environment, L. Palo, P. Alto, P.L. Smith A threshold selection
    method from gray-level histograms IEEE Trans. Syst. Man. Cybern., 9 (1) (1979),
    pp. 62-66, 10.1109/TSMC.1979.4310076 Google Scholar Ozdogan et al., 2010 M. Ozdogan,
    Y. Yang, G. Allez, C. Cervantes Remote sensing of irrigated agriculture: opportunities
    and challenges Remote Sens, 2 (9) (2010), pp. 2274-2304, 10.3390/rs2092274 View
    in ScopusGoogle Scholar Pervez et al., 2014 M.S. Pervez, M. Budde, J. Rowland
    Mapping irrigated areas in Afghanistan over the past decade using MODIS NDVI Remote
    Sens. Environ., 149 (2014), pp. 155-165, 10.1016/j.rse.2014.04.008 Google Scholar
    Qian et al., 2022 X. Qian, H. Qi, S. Shang, H. Wan, R. Wang Multi-year mapping
    of flood autumn irrigation extent and timing in harvested croplands of arid irrigation
    district GIScience Remote Sens., 59 (2022), pp. 1598-1623, 10.1080/15481603.2022.2126342
    View in ScopusGoogle Scholar Ren et al., 2016 D. Ren, X. Xu, Y. Hao, G. Huang
    Modeling and assessing field irrigation water use in a canal system of Hetao,
    upper Yellow River basin: Application to maize, sunflower and watermelon J. Hydrol.,
    532 (2016), pp. 122-139, 10.1016/j.jhydrol.2015.11.040 View PDFView articleView
    in ScopusGoogle Scholar Ren et al., 2017 D. Ren, X. Xu, T.B. Ramos, Q. Huang,
    Z. Huo, G. Huang Modeling and assessing the function and sustainability of natural
    patches in salt-affected agro-ecosystems: Application to tamarisk (Tamarix chinensis
    Lour.) in Hetao, upper Yellow River basin J. Hydrol., 552 (2017), pp. 490-504,
    10.1016/j.jhydrol.2017.04.054 View PDFView articleView in ScopusGoogle Scholar
    Sakamoto et al., 2007 T. Sakamoto, N. Van Nguyen, A. Kotera, H. Ohno, N. Ishitsuka,
    M. Yokozawa Detecting temporal changes in the extent of annual flooding within
    the Cambodia and the Vietnamese Mekong Delta from MODIS time-series imagery Remote
    Sens. Environ., 109 (2007), pp. 295-313, 10.1016/j.rse.2007.01.011 View PDFView
    articleView in ScopusGoogle Scholar Seaton et al., 2020 D. Seaton, T. Dube, D.
    Mazvimavi Use of multi-temporal satellite data for monitoring pool surface areas
    occurring in non-perennial rivers in semi-arid environments of the Western Cape,
    South Africa ISPRS J. Photogramm. Remote Sens., 167 (2020), pp. 375-384, 10.1016/j.isprsjprs.2020.07.018
    View PDFView articleView in ScopusGoogle Scholar Shen et al., 2019 X. Shen, E.N.
    Anagnostou, G.H. Allen, G. Robert Brakenridge, A.J. Kettner Near-real-time non-obstructed
    flood inundation mapping using synthetic aperture radar Remote Sens. Environ.,
    221 (2019), pp. 302-315, 10.1016/j.rse.2018.11.008 View PDFView articleView in
    ScopusGoogle Scholar Singer and Mccord, 1979 R. Singer, T. Mccord Mars - Large
    scale mixing of bright and dark surface materials and implications for analysis
    of spectral reflectance Proc. Lunar Planet. Sci. Conf. (1979), pp. 1835-1848 10th.
    2 Google Scholar Spadoni et al., 2020 G.L. Spadoni, A. Cavalli, L. Congedo, M.
    Munafò Analysis of Normalized Difference Vegetation Index (NDVI) multi-temporal
    series for the production of forest cartography Remote Sens. Appl. Soc. Environ.,
    20 (2020), Article 100419, 10.1016/j.rsase.2020.100419 View PDFView articleView
    in ScopusGoogle Scholar Strobl et al., 2007 C. Strobl, A.-L. Boulesteix, A. Zeileis,
    T. Hothorn Bias in random forest variable importance measures: Illustrations,
    sources and a solution BMC Bioinforma., 8 (2007), p. 25, 10.1186/1471-2105-8-25
    View in ScopusGoogle Scholar Syakur et al., 2018 M.A. Syakur, B.K. Khotimah, E.M.S.
    Rochman, B.D. Satoto Integration K-means clustering method and elbow method for
    identification of the best customer profile cluster IOP Conf. Ser. Mater. Sci.
    Eng., 336 (2018), Article 012017, 10.1088/1757-899X/336/1/012017 View in ScopusGoogle
    Scholar Thenkabail et al., 2007 P.S. Thenkabail, C.M. Biradar, P. Noojipady, X.
    Cai, V. Dheeravath, Y. Li, M. Velpuri, M.K. Gumma, S. Pandey Sub-pixel area calculation
    methods for estimating irrigated areas Sensors, 7 (11) (2007), pp. 2519-2538,
    10.3390/s7112519 View in ScopusGoogle Scholar Tian et al., 2021 H. Tian, P. Wang,
    K. Tansey, J. Zhang, S. Zhang, H. Li An LSTM neural network for improving wheat
    yield estimates by integrating remote sensing data and meteorological data in
    the Guanzhong Plain, PR China Agric. . Meteorol., 310 (2021), Article 108629,
    10.1016/j.agrformet.2021.108629 View PDFView articleView in ScopusGoogle Scholar
    Van Houdt et al., 2020 G. Van Houdt, C. Mosquera, G. Nápoles A review on the long
    short-term memory model Artif. Intell. Rev., 53 (2020), pp. 5929-5955, 10.1007/s10462-020-09838-1
    View in ScopusGoogle Scholar Vidal et al., 2016 R. Vidal, Y. Ma, S.S. Sastry Principal
    component analysis Interdiscip. Appl. Math., 40 (2016), pp. 25-62, 10.1007/978-0-387-87811-9_2
    View in ScopusGoogle Scholar Wang et al., 2020 L.X. Wang, M.Y. Cai, X.L. BAI,
    R.R. Qiao, S.X. Ji, X.L. Chang Lake fluctuation and driving factors in the Wulanbuhe
    Desert of China. J. Desert Research, 40 (02) (2020), pp. 59-67 View in ScopusGoogle
    Scholar Wang et al., 2021 L.X. Wang, M.Y. Cai, X.L. Bai, S.X. Ji, B. Jia, X.W.
    Feng, X.L. Chang Estimation of irrigation area in hetao irrigation district based
    on MODIS analysis (In Chinese with English abstract) J. Inn. Mong. Norm. Univ.
    (Nat. Sci. Ed. ), 50 (1) (2021), pp. 44-52, 10.3969/j.issn.1001-8735.2021.01.007
    Google Scholar Wang et al., 2018 X. Wang, S. Xie, X. Zhang, C. Chen, H. Guo, J.
    Du, Z. Duan A robust multi-band water index (MBWI) for automated extraction of
    surface water from Landsat 8 OLI imagery Int. J. Appl. Earth Obs. Geoinf., 68
    (2018), pp. 73-91, 10.1016/j.jag.2018.01.018 View PDFView articleView in ScopusGoogle
    Scholar Weerakody et al., 2021 P.B. Weerakody, K.W. Wong, G. Wang, W. Ela A review
    of irregular time series data handling with gated recurrent neural networks Neurocomputing,
    441 (2021), pp. 161-178, 10.1016/j.neucom.2021.02.046 View PDFView articleView
    in ScopusGoogle Scholar Wen et al., 2019 Y. Wen, S. Shang, K.U. Rahman Pre-constrained
    machine learning method for multi-year mapping of three major crops in a large
    irrigation district Remote Sens, 11 (3) (2019), p. 242, 10.3390/rs11030242 View
    PDFView articleGoogle Scholar Wen et al., 2022 Y. Wen, H. Wan, S. Shang, K.U.
    Rahman A monthly distributed agro-hydrological model for irrigation district in
    arid region with shallow groundwater table J. Hydrol., 609 (2022), Article 127746,
    10.1016/j.jhydrol.2022.127746 View PDFView articleView in ScopusGoogle Scholar
    Wen et al., 2023 Y. Wen, H. Wan, S. Shang A monthly distributed water and salt
    balance model in irrigated and non-irrigated lands of arid irrigation district
    with shallow groundwater table J. Hydrol., 616 (2023), Article 128811, 10.1016/j.jhydrol.2022.128811
    View PDFView articleView in ScopusGoogle Scholar Wu et al., 2019 M. Wu, J. Wu,
    X. Tan, J. Huang, P.-E. Jansson, W. Zhang Simulation of dynamical interactions
    between soil freezing/thawing and salinization for improving water management
    in cold/arid agricultural region Geoderma, 338 (2019), pp. 325-342, 10.1016/j.geoderma.2018.12.022
    View PDFView articleView in ScopusGoogle Scholar Xiao et al., 2022 D. Xiao, H.
    Niu, F. Guo, S. Zhao, L. Fan Monitoring irrigation dynamics in paddy fields using
    spatiotemporal fusion of Sentinel-2 and MODIS Agric. Water Manag, 263 (2022),
    Article 107409, 10.1016/j.agwat.2021.107409 View PDFView articleView in ScopusGoogle
    Scholar Xie and Lark, 2021 Y. Xie, T.J. Lark Mapping annual irrigation from Landsat
    imagery and environmental variables across the conterminous United States Remote
    Sens. Environ., 260 (2021), Article 112445, 10.1016/j.rse.2021.112445 View PDFView
    articleView in ScopusGoogle Scholar Xie et al., 2019 Y. Xie, T.J. Lark, J.F. Brown,
    H.K. Gibbs Mapping irrigated cropland extent across the conterminous United States
    at 30 m resolution using a semi-automatic training approach on Google Earth Engine
    ISPRS J. Photogramm. Remote Sens, 155 (2019), pp. 136-149, 10.1016/j.isprsjprs.2019.07.005
    View PDFView articleGoogle Scholar Xiong et al., 2021 L. Xiong, X. Xu, B. Engel,
    Q. Huang, Z. Huo, Y. Xiong, W. Han, G. Huang Modeling agro-hydrological processes
    and analyzing water use in a super-large irrigation district (Hetao) of arid upper
    Yellow River basin J. Hydrol., 603 (2021), Article 127014, 10.1016/j.jhydrol.2021.127014
    View PDFView articleView in ScopusGoogle Scholar Xu, 2006 H. Xu Modification of
    normalised difference water index (NDWI) to enhance open water features in remotely
    sensed imagery Int. J. Remote Sens., 27 (2006), pp. 3025-3033, 10.1080/01431160600589179
    View in ScopusGoogle Scholar Xu et al., 2018 Y. Xu, X. Huang, H.X.H. Bao, X. Ju,
    T. Zhong, Z. Chen, Y. Zhou Rural land rights reform and agro-environmental sustainability:
    Empirical evidence from China Land Use Policy, 74 (2018), pp. 73-87, 10.1016/j.landusepol.2017.07.038
    View PDFView articleView in ScopusGoogle Scholar Yao et al., 2022 Z. Yao, Y. Cui,
    X. Geng, X. Chen, S. Li Mapping irrigated area at field scale based on the optical
    TRApezoid Model (OPTRAM) using landsat images and google earth engine IEEE Trans.
    Geosci. Remote Sens., 60 (2022), p. 4409011, 10.1109/TGRS.2022.3148274 View in
    ScopusGoogle Scholar Yin et al., 2020 J. Yin, Z. Deng, A.V.M. Ines, J. Wu, E.
    Rasu Forecast of short-term daily reference evapotranspiration under limited meteorological
    variables using a hybrid bi-directional long short-term memory model (Bi-LSTM)
    Agric. Water Manag, 242 (2020), Article 106386, 10.1016/j.agwat.2020.106386 View
    PDFView articleView in ScopusGoogle Scholar Zha et al., 2003 Y. Zha, J. Gao, S.
    Ni Use of normalized difference built-up index in automatically mapping urban
    areas from TM imagery Int. J. Remote Sens, 24 (3) (2003), pp. 583-594, 10.1080/01431160304987
    View in ScopusGoogle Scholar Zhang and Yang, 2020 F. Zhang, X. Yang Improving
    land cover classification in an urbanized coastal area by random forests: the
    role of variable selection Remote Sens. Environ., 251 (2020), Article 112105,
    10.1016/j.rse.2020.112105 View PDFView articleView in ScopusGoogle Scholar Zhang
    et al., 2018 J. Zhang, Y. Zhu, X. Zhang, M. Ye, J. Yang Developing a long short-term
    memory (LSTM) based model for predicting water table depth in agricultural areas
    J. Hydrol., 561 (2018), pp. 918-929, 10.1016/j.jhydrol.2018.04.065 View PDFView
    articleView in ScopusGoogle Scholar Zhang et al., 2021 L. Zhang, P. Liu, L. Zhao,
    G. Wang, W. Zhang, J. Liu Air quality predictions with a semi-supervised bidirectional
    LSTM neural network Atmos. Pollut. Res, 12 (2021), pp. 328-339, 10.1016/j.apr.2020.09.003
    View PDFView articleView in ScopusGoogle Scholar Zurqani et al., 2021 H.A. Zurqani,
    J.S. Allen, C.J. Post, C.A. Pellett, T.C. Walker Mapping and quantifying agricultural
    irrigation in heterogeneous landscapes using Google Earth Engine Remote Sens.
    Appl. Soc. Environ., 23 (2021), Article 100590, 10.1016/j.rsase.2021.100590 View
    PDFView articleView in ScopusGoogle Scholar Cited by (1) Spatiotemporal patterns
    and main driving factors of drainage water quality of an arid irrigation district
    with shallow groundwater table 2023, Environmental Science and Pollution Research
    © 2023 The Author(s). Published by Elsevier B.V. Recommended articles The effect
    of time scales on the distribution of evapotranspiration and driving factors in
    desert grasslands Agricultural Water Management, Volume 284, 2023, Article 108348
    Xin Han, …, Zheng Che View PDF Optimizing surface fertigation practices for application
    in farmers’ field in the North China Plain Agricultural Water Management, Volume
    284, 2023, Article 108342 Xiulu Sun, …, Henk Ritzema View PDF A call to action
    for global research on the implications of waterlogging for wheat growth and yield
    Agricultural Water Management, Volume 284, 2023, Article 108334 Rogério de S.
    Nóia Júnior, …, Matthew Tom Harrison View PDF Show 3 more articles Article Metrics
    Citations Citation Indexes: 1 Captures Readers: 11 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Agricultural Water Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Deep Learning-based Near-real-time Monitoring of Autumn Irrigation Extent
    at Sub-pixel Scale in a large Irrigation Districth
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Blessy A.
  - Kumar A.
  - A P.
  - Md A.Q.
  - Alharbi A.I.
  - Almusharraf A.
  - Khan S.B.
  citation_count: '4'
  description: Irrigation systems are a crucial research area because it is essential
    to conserve fresh water and utilize it wisely. As a part of this study, the reliability
    of predicting the usage of water in the present and future is investigated in
    order to develop an effective prediction model to communicate demand. In order
    to improve prediction, we develop a prediction model and share the updated model
    with nearby farmers. In order to forecast the irrigation requirements, the recommended
    model utilizes the Internet of Things (IoT), k-nearest neighbours (KNN), cloud
    storage, long short-term memory (LSTM), and adaptive network fuzzy inference system
    (ANFIS) techniques. By collecting real-time environmental data, KNN identifies
    the closest water requirement from the roots and its surrounding. In order to
    predict short-term requirements, ANFIS is used. To transfer the new requirements
    for better prediction, transfer learning is used. Time-series-data updates are
    predicted using LSTM for future forecasting, and the integrated model is shared
    with other farmers using cloud environments to enhance forecasting and analysis.
    For implementation, a period of nine to ten months of data was collected from
    February to December 2021, and banana tree was used to implement the planned strategy.
    Four farms, with measurements, were considered at varying intervals to determine
    the minimum and maximum irrigation needs. The requirements of farms were collected
    over time and compared to the predictions. Future requirements at 8, 16, 24, 32,
    and 48 h were also anticipated. The results indicated were compared to manual
    water pouring, and, thus, the entire crop used less water, making our prediction
    model a real-world option for irrigation. The prediction model was evaluated using
    R2, MSLE and the average initial prediction value of R2 was 0.945. After using
    transfer learning, the prediction of the model of Farm-2, 3 and 4 were 0.951,
    0.958 and 0.967, respectively.
  doi: 10.3390/su15108260
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sustainability All Article Types Advanced   Journals
    Sustainability Volume 15 Issue 10 10.3390/su15108260 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editor Juan Miguel
    Navarro Subscribe SciFeed Recommended Articles Related Info Link More by Authors
    Links Article Views 1279 Citations 4 Table of Contents Abstract Introduction Related
    Work Materials and Method Result and Discussion Conclusions Author Contributions
    Funding Institutional Review Board Statement Informed Consent Statement Data Availability
    Statement Acknowledgments Conflicts of Interest References share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessArticle
    Sustainable Irrigation Requirement Prediction Using Internet of Things and Transfer
    Learning by Angelin Blessy 1, Avneesh Kumar 1, Prabagaran A 2, Abdul Quadir Md
    3, Abdullah I. Alharbi 4, Ahlam Almusharraf 5,* and Surbhi B. Khan 6,7,* 1 School
    of Computer Science and Engineering, Galgotias Univeristy, Greater Noida 201310,
    India 2 Visa Consolidated Support Services India Pvt. Ltd., Bangalore 560048,
    India 3 School of Computer Science and Engineering, Vellore Institute of Technology,
    Chennai 600127, India 4 Department of Computer Science, Faculty of Computing and
    Information Technology, King Abdulaziz University, Rabigh 21911, Saudi Arabia
    5 Department of Business Administration, College of Business and Administration,
    Princess Nourah bint Abdulrahman University, P.O. Box 84428, Riyadh 11671, Saudi
    Arabia 6 Department of Electrical and Computer Engineering, Lebanese American
    University, Byblos P.O. Box 36/S-12, Lebanon 7 Department of Data Science, School
    of Science, Engineering and Environment, University of Salford, Manchester M5
    4WT, UK * Authors to whom correspondence should be addressed. Sustainability 2023,
    15(10), 8260; https://doi.org/10.3390/su15108260 Submission received: 3 April
    2023 / Revised: 9 May 2023 / Accepted: 10 May 2023 / Published: 18 May 2023 (This
    article belongs to the Section Sustainable Water Management) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract Irrigation systems are a crucial research area
    because it is essential to conserve fresh water and utilize it wisely. As a part
    of this study, the reliability of predicting the usage of water in the present
    and future is investigated in order to develop an effective prediction model to
    communicate demand. In order to improve prediction, we develop a prediction model
    and share the updated model with nearby farmers. In order to forecast the irrigation
    requirements, the recommended model utilizes the Internet of Things (IoT), k-nearest
    neighbours (KNN), cloud storage, long short-term memory (LSTM), and adaptive network
    fuzzy inference system (ANFIS) techniques. By collecting real-time environmental
    data, KNN identifies the closest water requirement from the roots and its surrounding.
    In order to predict short-term requirements, ANFIS is used. To transfer the new
    requirements for better prediction, transfer learning is used. Time-series-data
    updates are predicted using LSTM for future forecasting, and the integrated model
    is shared with other farmers using cloud environments to enhance forecasting and
    analysis. For implementation, a period of nine to ten months of data was collected
    from February to December 2021, and banana tree was used to implement the planned
    strategy. Four farms, with measurements, were considered at varying intervals
    to determine the minimum and maximum irrigation needs. The requirements of farms
    were collected over time and compared to the predictions. Future requirements
    at 8, 16, 24, 32, and 48 h were also anticipated. The results indicated were compared
    to manual water pouring, and, thus, the entire crop used less water, making our
    prediction model a real-world option for irrigation. The prediction model was
    evaluated using R2, MSLE and the average initial prediction value of R2 was 0.945.
    After using transfer learning, the prediction of the model of Farm-2, 3 and 4
    were 0.951, 0.958 and 0.967, respectively. Keywords: sustainable irrigation system;
    IoT; LSTM; ANFIS; soil sensing; transfer learning 1. Introduction With increasing
    population growth and the need for food production, the agriculture sector utilizes
    around 70% of fresh water [1]. A huge amount of water and energy is wasted in
    irrigation systems. A total of 40% [2,3] of water is wasted because of evaporation,
    poor water management and poor irrigation systems. The water–energy–food (WEF)
    nexus is an interdependent approach which provides mutual integration for a sustainable
    ecosystem. Particularly, an effective irrigation system optimizes the usage of
    water and reduces the consumption of energy. WEF ecosystem nexuses provide the
    solution to achieve long-term environmental, economic and social goals. Effective,
    sustainable water utilization is achieved for irrigation systems and reduces water
    usage. In addition, due to global changes, lower rainfall rates, and climatic
    changes, a huge amount of water is also required for plants. Requirement analysis
    and management of water supply to plants are important to research in today’s
    agricultural society. Based on varying environmental changes, water requirements
    for plants are managed using an irrigation system. Different water-optimization
    techniques and effective water-management systems are used to reduce water usage
    and achieve an effective water-requirements prediction system for plants, to increase
    production yields. Effective irrigation and scheduling systems are needed for
    society, and they increase productivity and reduce water usage. Recent technologies
    are used to effectively manage sustainable irrigation systems and decision-making.
    Artificial intelligence plays a major role in decision-making and requirement
    predictions in recent technologies such as IoT. The combination of IoT, the cloud
    and artificial intelligence constitutes a new methodology for decision-making
    because interconnected technologies such as firmware and mechanical and programming
    techniques are used to manage irrigation systems. IoT devices are used to sense
    the data from their surroundings, a cloud environment is used to process the data,
    and artificial-intelligence techniques are used to make decisions and predict
    the time-series data. Importantly, recent machine-learning and deep-learning techniques
    play a vital role in decision-making systems. Dominant techniques for decision-making
    include neural networks, KNN, support vector machines, decision tree (DT), LSTM,
    deep neural networks, etc. The combination of machine learning and IoT in a smart
    irrigation system has three layers for processing the entire application [4]:
    data gathering, data processing and intelligent system, and application layers.
    Data gathering and transmission: in the first layer of an effective irrigation
    system, the layer collects all the information using sensors and transmits it
    using networking devices [5]. Data processing and intelligence layer: in the second
    layer, intelligence techniques are used for processing and decision-making. Application
    layers: the third layer performs planning, optimization and implementations using
    the second layers’ decision [6]. The data-processing layers are used to collect
    the data and perform the processing steps in the initial stages. The data-processing
    steps collect all the inputs from the sensors, atmosphere and other inputs. The
    data-processing layers apply the initial processing of surrounding information
    and intelligence techniques. The data-processing layer uses intelligence techniques
    such as machine-learning models and other statistical techniques to process the
    data. The application layer helps to connect to the real world. The first and
    second layers are interconnected to processing and decision-making. Similarly,
    the second and third layers are connected to decision-making applied to the real
    world. The previous research [7] shows different challenges and limitations in
    irrigation systems. Some of the dominant limitations are as follows. i. The irrigation
    system must be fully automated from the end-to-end process. ii. The integrations
    of different functionalities of irrigation systems cannot be interconnected from
    data collection to processing. iii. The real environment inputs (rain, soil moisture
    and atmosphere inputs) are not interconnected. iv. The current- and future-requirements
    prediction is still one of the main research gaps in smart irrigation systems.
    v. The predicted features and requirements are not shared with the neighbour farmers.
    To overcome the above challenges, the key contribution of the proposed work is
    as follows: In this work, IoT sensors and k-nearest neighbours are used to sense
    and collect the requirements. We also propose a system to predict the short- and
    long-term sustainable prediction requirements of the irrigation system using ANFIS
    and LSTM techniques. The proposed model shares the sustainable requirements of
    the prediction using the cloud environment and shares the features with the nearest
    farmers for better requirements prediction using transfer learning. The proposed
    model reduces and optimizes the sustainable irrigation requirements of the crops.
    It reduces by 42% to 50% the freshwater requirements compared to the previous
    traditional methods. The proposed work reduces water usage because the short-
    and long-term usage of irrigation requirements are calculated using the sensors,
    weather and history. Compared to the previous methods, the coefficient of determination
    (R2) is better (0.955), and mean squared logarithmic error (MSLE) is less (0.439).
    Compared to previous methodologies, this work is the first to introduce transfer
    learning to an irrigation system and forecast irrigation requirements using transfer
    learning to predict one farm from another. Compared to the previous method of
    irrigation requirements prediction [8], our method of LSTM and ANFIS with transfer
    learning reduces by 30.24% the water requirements in the single node of a banana
    tree in the implementations. Our method was tuned to consume 1.16% less water
    in a single banana-tree node than in ref. [8]. The rest of the manuscript is organized
    as follows. Section 2 presents different irrigation methods and requirement analysis
    methods. Section 3 presents the materials, working methodology, and optimized
    methods. Section 4 presents implementation results and comparison with dominant
    existing methods and the paper finishes with the Section 5. 2. Related Work This
    section presents different existing smart irrigation models, frameworks, techniques,
    machine-learning and deep-learning techniques, transfer learning, and a comparison
    of different irrigation systems for supporting the proposed work. Different researchers
    have presented various works related to machine learning, deep learning, the Internet
    of Things, cloud computing, and highly integrated technologies for smart irrigation.
    Initial data processing and decision-making are performed using these technologies.
    2.1. Irrigation Techniques This section on related work presents how previous
    techniques are supported for centralized storage, data processing, and decisions.
    The authors of [9] present an IoT structure for processing, storing, and analyzing
    data using a decision system. An intelligence application system using an IoT
    system with different dimensions, such as moisture, water evaporation, and land
    slope, is considered for decision-making processing. The authors of [10] present
    two models, geography and climatology, and use different parameters for prediction,
    including moisture, wetness, daily and monthly soil requirements rates, evaporation
    of moisture and weather reports. The authors of [6] propose a CWSI framework for
    irrigation management using temperature distributions, and, with the help of this
    structure, water requirements are reduced. The requirement optimization is performed
    using time intervals and continuously checking the requirements of the plants.
    The authors of [11,12] propose an irrigation system using control-based scheduling
    to manage different factors such as humidity, wind speed, wind velocity, soil
    moisture, etc. The sensor-based prediction for managing irrigation and soil moisture
    sensor senses different soil conditions, and mobile applications are used to measure
    and monitor different activities of the irrigation system. Different recommendation
    systems such as statistical, machine-learning, and deep-learning models are used
    to manage the prediction. The authors of [13,14] present different activities-based
    machine- and deep-learning, regression model, GBT and DNN methods to increase
    the prediction rate. In this model, the accuracy of predictions is increased by
    93% using various parameters. The authors of [15] present an intelligence system
    which employs thermal images to analyze the various requirements of an irrigation
    system. Various parameters are measured using thermal images, and leaf potential
    is calculated. The main drawback of this work is that soil-moisture measurement
    is difficult to analyze. The authors of [16] propose machine-learning and IoT
    techniques to manage smart irrigation with the help of different parameters, such
    as various soil conditions, environmental parameters, temperature and nearest
    features, which are considered for requirement calculation. The authors of [8]
    propose a system for optimizing the water requirement of crops using the WSN and
    different node sensors. Control devices are used to manage the crop using mobile
    and web applications. With the help of mobile and web applications, soil moisture
    and future requirements are calculated. The IoT with multiple sensors is used
    for water management [17,18] using different parameters such as soil properties,
    moisture, temperature, and rain sensors. In this work, the output is predicted
    and operated automatically and manually. The authors of [19,20] propose different
    monitoring and control systems for irrigation systems. Different energy models
    and IoT platforms are used to analyze parameters and use a decision pumping schedule.
    The authors of [21] propose a LoRa network structure with an energy-efficient
    model to cover up to 5 km with smart control. All the information is transferred
    to different places using the LoRa structure. The various machine- and deep-learning
    approaches analyze the requirements, moisture analysis, and future recommendations
    of irrigation systems. The authors of [4] propose a model, with the help of genetic
    techniques, to increase yields and analyze various recommendations. The genetic
    model [22] provides the solution using sequential inputs and non-continuous scheduling.
    The authors of [9] propose a system using metrological data and created a weekly
    irrigation-requirement plan using regression and classifier techniques. This system
    achieves 95% and 93% accuracy using classification and regression techniques.
    The authors of [23] propose a location-based optimized irrigation system using
    a genetic algorithm with the help of previous data. The location-based water-requirement
    analysis for irrigation systems using the KNN algorithm with an intelligent IoT
    sensor is used to plan irrigation systems [5]. In addition, this work is fully
    automated with machine-to-machine data transmission for effective decision-making.
    The heterogeneous data management in irrigation systems uses machine learning
    and IoT, and this work predicts the requirement for irrigation using the related
    data. The time-to-time irrigation requirements are also calculated using logical
    regression analysis. The authors of [11,12,24] calculate humidity and temperature
    using a decision tree. The future requirements for the prediction of irrigation
    systems are calculated using the SVM algorithm, but the requirements for prediction
    accuracy are very low. The summary of the different IoT frameworks, models, and
    machine-learning algorithms is presented in Table 1. The authors of [25] presente
    a comparative study for precision agriculture using deep learning and IoT. In
    this work, authors have gathered and analysed disease, weeds, and soil yields
    using deep learning techniques. And also, the authors analysed different components
    of agriculture, such as sensors, UAVs, data acquisition, annotations and datasets
    used for predictions. Finally, pest detection is performed using VGG16 and transfer
    learning, which achieves 96.58% accuracy in prediction. The authors of [26] presented
    the state of the art for managing water using IoT devices. Using the connecting
    devices, the authors address water-planning and water-distribution issues. This
    case study is planned with the help of IoT-enabled devices. The author of [27]
    propose a smart and green irrigation system using gradients and regression trees,
    which are used for the implementation part. The authors of [28,29] use different
    parameters such as temperature, humidity and weather data, which are used for
    the prediction of irrigation requirement. The SVR and K-means are used for soil-moisture
    prediction. Table 1. Summary of advantages and limitations of supporting works.
    The different limitations are summarized using the above-related works. Most of
    the work did not address the requirements of roots, and the nearest features were
    not considered for the irrigation-system requirement analysis. The recent works
    do not consider all parameters, such as wind, moisture, and temperature, for requirement
    prediction. The previous systems need to be integrated with the full automation
    system. In this work, we planned the different irrigation parameters to predict
    and analyze the requirement of the irrigation system based on the crop requirements.
    2.2. Transfer Learning for Agriculture and Irrigation System Transfer learning
    is a knowledge-storing problem which applies similar and related tasks for prediction
    and classification problems. The transfer of learning is used in different applications,
    classification problems, knowledge transfer, agriculture, etc. In agriculture
    [31], it is used in plant disease prediction, species detection, plant-domain-knowledge
    transfer and plant classification and information sharing. Recently, different
    researchers have addressed different problems related to transfer learning in
    agriculture. The authors of [32,33] proposed a knowledge-transfer model to classify
    different crops and reduce the retraining and labelling time. In this work, authors
    reduced 20% of the time compared to the normal time. Similarly, the authors of
    [34] use transfer learning for weed identification among different plants and
    achieved an accuracy of 99.29%. Similarly, the authors of [35] propose deep transfer
    learning for trash classification. In this framework, the authors achieved 94%
    and 98% accuracy using different datasets. The authors of [36] propose a model
    for identifying bale detection using deep transfer learning and a domain-adaptation
    approach, which transfers the source images to target domain images. The authors
    of [37] propose a CNN and transfer-learning model for identifying crop-attacking
    pests in the early stages of crop growth. Transfer learning is used to create
    fine-tuned pre-trained models. The authors of [38] propose a transfer learning
    for transferring a base model, characterized using different samples/features,
    from one place to another. In this framework, the transfer of features is performed
    in two places in the context of the irrigation mapping of time-series features
    in two locations. The authors of [39] propose transfer learning with IoT to train
    the model better using soil moisture and transfer the soil conditions from one
    soil to another, with the two soils having different distributions. The previous
    works [31,32,33,34,35,36,37] on transfer learning are used in classification based
    on features, which are transferred within the framework and between the models.
    The authors of [38,39] proposed models for transferring the features from one
    spatial location to another spatial location using IoT technologies. In addition,
    the author of [39] transfers the soil features from one place to another using
    models. 3. Materials and Method This section presents the materials and methods
    for the proposed work. The proposed work uses live data and historical datasets
    to predict the requirement for the present and future irrigation systems. Live
    weather data is used to correlate current and future requirements. IoT devices
    are interconnected for present-requirement collecting, and different components
    are used for future-requirement collections. The proposed method uses k-nearest
    neighbours, cloud storage, LSTM, and ANFIS to predict an irrigation system. The
    IoT devices must collect the data from the environments, for which KNN find the
    nearest water requirements from the root and surroundings, and ANFIS predicts
    short-term conditions. The LSTM is used to predict time-series-data updates for
    future prediction, and the transfer learning is used to transfer the learning
    features information from one cultivation field to another. 3.1. Materials In
    the proposed method, materials are collected in three ways: IoT sensors, past
    data collected from previous years, and live data collected from the weather data.
    The IoT sensors and components to collect soil moisture, air moisture, temperature
    and soil moisture are presented in Table 2. The sensor and IoT devices are also
    used to transfer the data from one machine to another and to the cloud environment.
    Table 2. Components and their usages. The live-data collection location and the
    latitude and longitude of the experimental location is 8.2473502, 77.2743729,
    345. The data was collected from Kanyakumari, Tamil Nādu, India. This location
    has seasonal rainfall, and basic requirements were collected using IoT devices.
    Three basic components, such as IoT devices, gateway and cloud, were interconnected
    to communicate and transfer data from the physical location to the cloud. Four
    different fields were used for collaboration and decision-making in the mentioned
    location. The basic requirements for prediction were measured using various sensors.
    Figure 1 shows the different requirements predictions presented in 3 h time intervals.
    Similarly, the basic requirements were also measured between 5 h, 8 h and 10 h.
    The cultivation requirement of the Plantain Banana or Red Dacca (Australia) from
    the beginning to the end is represented in Table 3. The entire cultivation of
    the species started in February and ended in October. Table 3 [40,41] summarises
    the basic water requirement from the beginning of February till the end of the
    cultivation in October. This basic requirement is plotted manually with the help
    of farmers, and four farmers were involved in the cultivation. Figure 1. Collections
    of atmosphere requirements. Table 3. Monthly water requirement for banana cultivation.
    3.2. Method This proposed work used IoT devices, k-nearest neighbours, cloud storage,
    LSTM, and ANFIS to predict an irrigation system. The IoT devices must collect
    the data from the environments, for which KNN find the nearest water requirements
    from the root and surroundings, and ANFIS predicts short-term conditions. The
    LSTM is used to predict time-series-data updates for future prediction, and the
    Spearman rank correlation method correlates the needs in different intervals.
    The proposed work’s basic goal is to predict current and future requirements for
    different time intervals, such as 3 h, 8 h, 12 h and 24 h and 48 h. The basic
    structure of the proposed work is presented in Figure 2. The proposed structure
    of the prediction model consists of three main parts: initial-value predictions,
    integrated prediction model and transfer learning. The initial-requirements prediction
    is performed using the group of sensors. The group of sensors sensed soil-moisture,
    root-moisture, and weather data. In the integrated model, KNN, ANFIS and LSTM
    algorithms were used for sensing nearest values and short-term and long-term predictions.
    The prediction values and features were shared using transfer learning. Figure
    2. Structure of the proposed work. 3.2.1. KNN Algorithm KNN is a supervised algorithm
    to find the nearest values predicted using sensors with many assumptions [42,43].
    The dataset inputs considered the real values, taking the values from the certain
    k nearest distance from the input dataset. The prediction output is the average
    distance between the input taken and the given sensed input using the average
    voting of the nearest prediction. The trained data of multiple inputs consist
    of multiple features, and different classes are labelled using a supervised KNN
    algorithm. The nearby sensed values depend on the discrete or continuous distance.
    The different features’ relationship or distance between the features is predicted
    using Euclidean distance. The discrete values, such as soil moisture, atmospheric
    moisture and weather data, are evaluated using the Euclidean distance. The recommendation
    of the features is also evaluated and considered as the input value for the integrated
    prediction model. The Euclidean distance vector evaluated the different region-wise
    and root-moisture values considered as the input. 3.2.2. ANFIS The ANFIS is an
    artificial neural network with a combination of neural-network and fuzzy-logic
    properties. The inference system is a set of if-then rules with non-linear functions
    [44,45]. The ANFIS was constructed using five layers: an antecedent layer, three
    hidden layers, and a consequent layer. The antecedent layer is an input layer,
    and the consequent is an output layer. The three hidden layers are based on rule-based
    and fuzzy logic applied to these three layers. The first input layer between 0
    and 1 is called the “premise parameter”. The second layer estimates the income
    for each neuron using the product operator. The third layer normalizes the input
    signal, and the fourth layer is fuzzification. The fifth layer is a summarized
    weighted output layer. The ANFIS is an optimal and intelligent way to manage the
    energy system [46]. 3.2.3. Long Short-Term Memory LSTM is a recurrent neural network
    which predicts and classifies data requirements using time-series data. It consists
    of input, output and forget gates. The different gates control the flow of information
    and help exit and enter the gates. The LSTM predicts future time-series data in
    short- and long-term predictions [47,48]. 3.2.4. Transfer Learning Transfer learning
    is used to train the system to perform the relevant similar learning of the existing
    model. The main part of the learning is generalized, and the different scenarios
    or relevant conditions are transferred from one model to another. The main advantages
    of transfer learning are saving resources, timing to complete similar learning,
    increasing the learning model’s efficiency, and avoiding the negative prediction
    from the pre-trained model [38,49]. 3.3. Working Principle This proposed work
    predicts various requirements of irrigation using IoT sensors and weather inputs
    and helps in finding short- and long-term predictions. The flow of the representation
    of the proposed work is presented in Figure 3. The working process of the proposed
    work consists of four main parts: data collection from various sources, nearest
    requirement prediction, short-term prediction (ANFIS), long time-series prediction
    (LSTM) and predicted knowledge sharing to nearest farms (transfer learning). The
    working process of the proposed work uses four steps: processing the inputs and
    storage, short-term prediction, long-term prediction and transfer learning and
    sharing features from one data source to another data source. Initially, the data
    is collected from the sensors, with the help of KNN algorithms for predictions.
    With the collected data, weather forecasts and previous data are used as the input.
    The processed data is applied for short-term prediction using the ANFIS. The short-term
    prediction of irrigation recommends water pumping. For long-term prediction, the
    LSTM technique is used, and, if required, it recommends water pumping. This prediction
    is performed on a single farm for short- and long-term prediction. Once the farming
    location requirement is predicted, the features are transferred to another farm
    for better predictions. The second farm processes the new input data from a particular
    location and processes the farm 1 features for better performance. Figure 3. Workflow
    representation of proposed work. The entire working procedure is described in
    Algorithm 1. The processing steps of the algorithms consist of data processing,
    and prediction and sharing of knowledge gained from other farmers, as well. Initially,
    the sensor data from farm 1 and weather data are transferred to the cloud storage.
    The history data and collected data are initially processed for the prediction
    of requirements. The processed data predicts the short-term (Sp) and long-term
    (Lp) requirements using ANFIS and LSTM techniques. Using these techniques and
    collected data, initial requirements are predicted in the long term and short
    term. The first farm (X1) gains the knowledge, and so the stored model weight
    is shared with the nearest second farm for better prediction. A detailed description
    of the working process is as follows.     Algorithm 1 Requirement Prediction and
    Features Transfer Input: Xm: Data Collection Using Sensors (Moisture); Xw: Weather
    details; TT: Temperature; X1, X2, X3, and X4: Farms Prediction Details Output:
    Short- and Long-term Prediction Details (Sp, Lp) Generating algorithm Begin: Moisture
    (Xm), Weather details (Xw), Temperature (TT) > 0 X1, X2, X3, and X4 > 0 Calculate
    (Xm), (Xw), (TT); { if Xm, Xw TT >0 Predict of Each Farm Requirements Details
    N = C (Prediction of Nearest features with respect to weights and time) D = Prediction
    of distance features between two terminals Sp = Tp -AP // Short- term prediction
    Lp = Tp -AP // Long- term prediction } End of Each Farm Prediction Share the month-wise
    history data Y = X1 (End prediction of single Farm) Share X1 to X2 T = [Y, f(.)]
    //Start Transfer Learning if X1 > X2 / X2 >X1 State Share the Y values if Xw =
    Rainy Stop // Stop sharing, Sensors in Sleep Mode end Initially, the input collected
    from various input sources is real data, with the help of IoT devices, past data
    and weather information from the nearest weather stations. In this work, four
    farms for banana cultivation were considered. Each farm is considered as X1, X2,
    X3, and Xn. The output of four farms with the input process model is represented
    in Equation (1). 𝑌=𝑋1,𝑋2,⋯⋯𝑋𝑛 (1) Each farm used three input sources: past cultivation
    data (x1); weather data (x2); and current data, collected with the help of IoT
    and sensors (x3). The combination of inputs and output is represented in Equation
    (2). 𝑌=𝑋1(𝑥1,𝑥2,𝑥3),𝑋2(𝑥1,𝑥2,𝑥3),𝑋3(𝑥1,𝑥2,𝑥3),𝑎𝑛𝑑𝑋4(𝑥1,𝑥2,𝑥3) (2) The x3 combines
    the nearest features, short-term requirement predictions, long-time predictions
    and knowledge transfer from one farm to another. Initially, the nearest features
    are predicted using the KNN algorithms. The nearest features are calculated based
    on the distance between the roots from the initial prediction to the next nearest
    prediction. The distance is calculated using the Euclidian distance. The mathematical
    representation of nearest features calculation and distance measurement between
    the features are represented in Equations (3) and (4). 𝑁= 𝐶 𝑤 𝑛 (𝑥1,𝑥2,⋯⋯𝑥3) (3)
    N denotes the predicted nearest values, C denotes features, n denotes different
    features, w denotes weight, and 𝑥1,𝑥𝑛 denotes different input features. The distance
    between the initial root prediction features and the next feature distance is
    as follows. 𝐷= ( 𝑥 2 − 𝑥 1 2 )−( 𝑦 2 − 𝑦 1 2 ) − − − − − − − − − − − − − − − −
    − − − √ (4) D denotes distance features. The moisture is measured based on the
    starting and ending points of the roots. Based on the nearest features, past data
    and weather information, short-term inferences are calculated using ANFIS. The
    inference model and short-term learning prediction are represented in Equations
    (5) and (6). 𝑆 𝑝 = ∑ 𝑖=0 𝑛 ( 𝑇 𝑝 − 𝐴 𝑝 ) 2 (5) 𝑆 𝑝 denotes short-term prediction,
    𝑇 𝑝 denotes the targeted prediction, and 𝐴 𝑝 denotes actual prediction. Similarly,
    the learning rate of ANFIS representation is as follows. 𝜎= 𝑘 𝛿𝐸 𝛿𝜎 − − √ (6)
    𝜎 denotes the learning rate, k denotes the learning size, 𝛿 E denotes the error
    rates and 𝛿 𝜎 denotes the training data. Based on Equations (5) and (6), the short-term
    inference result is calculated. If the short-term inference result is not required,
    long-term prediction is performed using the LSTM algorithm. The LSTM algorithm
    predicts long-term series data [27,28] with the help of three types of inputs,
    as mentioned earlier. The LSTM algorithm consists of three gates: forget gate;
    remember cell; activation sigmoid function and new states of prediction, represented
    as 7 to 10. 𝑓 𝑡 = 𝜎 𝑞 ( 𝑤 𝑓 𝑥 𝑡 + 𝑢 𝑓 ℎ 𝑡 −1+ 𝑏 𝑓 ) (7) 𝑓 𝑡 —activation function,
    ℎ 𝑡 −1 denotes previous unit output 𝑡−1 , 𝑥 𝑡 denotes input data, 𝑏 𝑓 denote bias.
    Sigmoid function, denoted as 𝑆(𝑡) , is represented as follows. 𝑆(𝑡)= 1 1+ 𝑒 𝑡
    (8) The remember cell and new state function are as follows. 𝑖 𝑡 =𝜎( 𝑤 𝑡 ( ℎ 𝑡
    −1)+ 𝑏 𝑡 ) (9) 𝑆(𝑛)= 𝑓 𝑡 ∗ 𝑆 𝑡 −1+ 𝑡 𝑡 (10) With the help of KNN, ANFIS and LSTM,
    prediction is performed using the short-term and long-term prediction of the requirements.
    The requirements of X1, X2, X3, and X4 are shared using the knowledge transfer.
    The knowledge transfer is represented in Equation (11) [50]. The initial learning
    is performed from the X1 (x1, x2, x3) and predicted values or known values are
    considered as Y. The transferring learning is denoted as 𝑇=[𝑌,𝑓(.)] (11) T denotes
    the learning task transferred to the next node or prediction task, Y denotes the
    prediction output, and f(.) denotes the prediction function with the different
    instances. This predicted task is transferred to the other farm using different
    thresholds or different conditions. 4. Result and Discussion For experimental
    and implementation requirements, the specification is described in Table 2 and
    Table 3. Data was collected from India’s metrological deportment and banana cultivation
    research centre. Initially, the requirements, such as X1, were collected from
    the IoT sensors. Using the sensor, surrounding moisture, root moisture and humidity
    values were also collected. In addition, minimum and maximum water requirements
    were collected manually from the farmers. The maximum 50 L of water requirements
    for a month and intervals of irrigation of 5 to 7 days were collected for fixing
    the threshold values for training and testing. Some of the fixed and basic parameters
    considered for irrigation are shown in Table 4. Table 4. Basic parameters for
    irrgation. In our work, cloud computing is used for data storage and sharing of
    data. Using cloud computing, we deployed models and real predictions are shared
    with farmers for betterment. With the help of artificial intelligence as a service
    (AIaaS), the model was deployed and executed for better predictions. The predicted
    results were transferred for decision-making using IoT devices. For the implementation
    process of cloud computing in our work, we employed data collection using sensors;
    Raspberry Pi (ThingSpeak), which transfers the data from the physical devices
    to cloud environments; and AIaaS to predict data which has to be transferred to
    controlling devices and farmers. The dataset consists of Year, Month, Date, Hour,
    minute, moisture0 (Atmosphere), moisture1 (Plant Surface Moisture), Soil Moisture
    (Sensor 1), Root Moisture (Sensor 2), Temperature, Humidity, Wind Speed (mph),
    Rain, and irrigation. The dataset should be pre-processed using the one-hour time
    interval and the data should be mapped within one hour. All the data fields converted
    the data a pure value and dimensionless value. Finally, different magnitudes or
    units, comparisons of indexes and weighing, were considered in the pre-processing
    of the dataset. In this research work, a zero-mean standardization pre-processing
    method was used for processing the raw-data fields. The missing values happened
    due to maintenance, failure of instrumentation, invalid values and manual check-in.
    Our work uses the Akima [51] method for supplementary values, for time-series
    data and filling in the missing values for smooth curves. In our work, we validated
    the proposed method using accuracy, coefficient of determination (R2), mean squared
    logarithmic error (MSLE) and earned values (EV). Initially, the basic requirement
    of prediction training, testing and validation accuracy was predicted using the
    combination of ANFIS and LSTM. Figure 4 represents the training and testing accuracy
    of 97 iterations and 100 nodes’ data. The implementation hyperparameters are presented
    in Table 5 and Table 6. Figure 4. Training and testing accuracy of prediction.
    Table 5. Hyperparameters of LSTM. Table 6. Hyperparameters of ANFIS. Figure 1
    shows various live indicators, such as temperature, humidity, rain possibility,
    and wind speed, taken from three calculations. The past cultivation data (x1),
    weather data (x2), and current data collected with the help of IoT and sensors
    (x3) and root moisture were also calculated continuously with the help of THERM200
    and SHT11. In this work, irrigation requirement is predicted in terms of 8 h,
    16 h, 24 h, 48 h and 60 h. Two main requirements directly affect the requirements:
    temperature and humidity. In this work, three types of requirements are predicted:
    short-term (8 h, 16 h), long-term (24 h, 48 h and 60 h) and changes implemented
    after transferring learning from one farm to another. The shortest inference result
    is predicted with the help of ANFIS, and long-term prediction is carried out with
    the help of LSTM. The shortest term prediction analysis was carried out in two
    months, March and July. The reason for the prediction of March and July is that
    rainfall is low during March. Similarly, in July, the rainfall starts, and, thus,
    the atmospheric temperature is low. The moisture and humidity of the current and
    the short-term requirement prediction of March and July’s requirement prediction,
    using ANFIS, are presented in Table 7. The shortest term prediction requirements
    are shown in Figure 5. The month-wise temperature and humidity are the two main
    requirements of short- and long-term predictions, such as temperature and humidity
    for 8, 16, 24, 32, and 48 h. The figure describes the minimum and maximum temperature
    and humidity, starting from 8 am and continuously measuring up to 48 h. Transfer
    learning is used for knowledge gained in the initial model in farm 1 and the knowledge
    gained by farmer 1 is used to retrain the farmer-2 models for better prediction
    using the changes from the farmer-1 data. Figure 5. Minimum and maximum temperature
    and humidity in March and July. Table 7. Short-term prediction of requirements.
    Based on the minimum and maximum temperature and humidity, the requirements of
    irrigation for March and April are summarized in Table 7. Compared with Table
    3, the maximum requirement per day in March is 6 to 7 L, and in the requirement,
    prediction is also according to the maximum requirement per day, which is about
    6 to 7 days. Similarly, July received 2 to 3 L per day based on the ANFIS prediction.
    Similarly, the long-term prediction was performed with the help of the LSTM algorithm,
    and prediction intervals are 24, 48, 72, etc. Using the long-term prediction,
    irrigation is performed because generally banana-irrigation intervals are between
    3 days to 5 days. Based on the long-term prediction, irrigation was scheduled.
    The long-term prediction of farm-1 is presented in Table 8. Table 8. Long-term
    prediction of requirement. Based on Table 7 and Table 8, the entire prediction
    requirements of irrigation in March and April are in Table 9. This prediction
    requirement is calculated between four-day intervals. Four-day intervals correlate
    the short-term and long-term prediction. Table 9 and Figure 6 present the minimum
    and maximum requirements of irrigation. Figure 6. Month-wise requirement prediction
    of irrigation—Farm 1. Table 9. March and July irrigation dates and requirement.
    Table 7, Table 8 and Table 9 are the short, long and month-wise requirement prediction
    of farm 1’s prediction. In this prediction, ANFIS and LSTM are used. In addition,
    based on these two techniques, the month-wise prediction is presented in Table
    9. Table 9 presents the minimum and maximum irrigation requirements in four-day
    time intervals. The four-day time interval is measured with the help of ANFIS
    and LSTM and the corresponding correlation of long- and short-term prediction.
    In March, the humidity, temperature and other parameters such as weather, wind
    speed and previous-year information are considered for prediction. Generally,
    the parameters mentioned earlier are very high in March, and wind speed is also
    very low compared to the other months in the specified location. The maximum irrigation
    requirement was higher that year, and the minimum requirement is similar to the
    maximum requirements. The difference between the minimum and maximum requirements
    is 8 L. Similarly, July is monsoon season, and if it rains in the specified location,
    the requirements for irrigation decrease automatically. The requirements mostly
    decrease in July, as the humidity is very low. Our proposed work was used different
    combinations of data, such as root moisture, atmosphere moisture, temperature,
    humidity, and weather data. While taking all these data, normal model prediction
    produces prediction error. To avoid the prediction error, our model used the ANFIS
    method and error rates for short-term predictions. The ANFIS used forward and
    backward passes in each layer for processing different data. The minimum irrigation
    requirement is nine, and the maximum is 16. Similarly, requirements are very low
    in the next three months, but during the summer, the irrigation requirements are
    very high in April, May and the middle of July. The entire year-wise irrigation
    requirements of farm 1 are presented in Figure 6. In this Figure 6, minimum and
    maximum requirements are summarized for farm 1. The maximum requirements are higher
    in March, April and May. Similarly, with the help of transfer learning, from farm
    1 prediction is transferred to farm 2. Based on farm 1, the basic information
    is shared with farm 2. The basic irrigation requirements in March and April are
    shown in Table 10, and year-wise predicted results are presented in Figure 6.
    Transfer learning helps to reuse the model for new task prediction. Table 10 and
    Figure 7 show the differences after applying the first prediction and after transferring
    the prediction features of farm 1 and the new prediction of farm 2. Figure 7 shows
    the difference between applying transfer learning and reducing the consumption
    of water usage. Comparing Table 9 and Table 10, the requirement prediction is
    reduced because it produced better optimization and saved the irrigation requirements
    of two months. Overall requirements are also reduced in farm 2. Figure 7. Month-wise
    requirement prediction of irrigation—farm 2. Table 10. March and July irrigation
    dates and requirements (farm 2) using transfer learning. Comparing farm 1 to farm
    2, the irrigation requirements are reduced to 7 L per banana plant. Farm 1’s total
    requirement was 200 L per plant, and after applying the transfer learning, the
    total requirement of irrigation was 193. After applying transfer learning, the
    7 L irrigation requirement was reduced in farm 2. In the overall irrigation process,
    everyday prediction was transferred from farm 1 to farm 2 at a delay of 5 min
    time intervals, and, after that, farm 2’s irrigation requirement was predicted.
    The proposed work was evaluated using the coefficient of determination (R2). The
    R2 determines the model prediction measurements when increasing the iterations.
    Initially, the model was predicted to be 0.920 at 15 epochs and 0.958 at the 75th
    epochs. After applying the transfer learning, the farm-2, farm-3 and farm-4 values
    gradually increase. Figure 8 shows that the model prediction and relationship
    accuracy values increase after transferring the features. Figure 8. Comparison
    of R2, MSLE and EV. Comparison with Other Methods of Estimation and Transfer of
    Learning The proposed method was compared to the existing approach, which decreased
    the water consumption of a single node by 31.4% in the period of 2020. When compared
    to the previous approach, our method optimized 30.24% of water after applying
    transfer learning on a single node of the banana tree. Our method was tuned to
    consume 1.16% less water in a single node of a banana tree. Comparing our suggested
    method to the manual and technology-based approaches, we find that it optimized
    41% to 50% more water in the farm. Using transfer learning, the proposed method
    reduced from 31.4% to 30.24% the water of a single node tree. Table 9 and Table
    10 clearly illustrate the optimization of water usage following the implementation
    of transfer learning. Our proposed work was compared with the recent work [8,27,28,29],
    and it optimized the irrigation requirements. Compared to previous work, total
    water usage is reduced. Table 11 shows the water usage of our work and its comparison
    with previous work. Compared to the previous work, total irrigation requirements
    were reduced. Table 11. Comparison of requirement predictions. 5. Conclusions
    This work integrates IoT, machine-learning and transfer-learning techniques to
    achieve sustainability and predict irrigation-system water requirements. The main
    finding of this work is that it reduced water usage and transferred the features
    of the prediction model and exchange for better prediction and requirement analysis.
    IoT sensor devices collected basic requirements such as humidity, temperature,
    and moisture. The weather data and past data collected from the banana research
    centre were used for implementation. The proposed work used ANFIS for short-term
    predictions, such as 8, 16, 24, etc. The LSTM predicted long-time requirement
    predictions such as 24, 48, 72, etc. Based on short- and long-term predictions,
    the entire requirement was predicted in 4 days. In this work, data of two months,
    March and July, was predicted and analyzed. The entire requirement of overall
    cultivation was predicted and calculated in the short and long term, with the
    help of weather and past data. The farm-1 data features were transferred to farm
    two, and, thus, it predicted the irrigation requirement. Comparing farms 1 and
    2, after irrigation, farm 2 had lower irrigation requirements in July, a change
    from 16 to 15; during May, the requirement increased from 31 to 34. Similarly,
    comparing the year-wise requirement of farm 1 to farm 2, we see that it reduces
    the requirements from 200 to 193 for a single banana tree. This work reduces the
    irrigation requirement and predicts the short- and long-term requirements of an
    effective irrigation structure at a particular interval. In the future, this approach
    will be extended to multiple farms. Based on that, the requirements can be optimized.
    In addition, further implementation of this work is being carried out using Federated
    learning, sharing the farm data, which predicts and shares the model for further
    irrigation. Author Contributions Conceptualization, A.B., A.K., A.A. and S.B.K.;
    Project administration, A.A. and S.B.K.; Resources, A.I.A.; Validation, A.I.A.;
    Software, A.Q.M.; P.A., Validation; Writing—original draft, A.B. and A.K.; Writing—review
    & editing, S.B.K. and A.A. All authors have read and agreed to the published version
    of the manuscript. Funding This research is supported by Princess Nourah bint
    Abdulrahman University Researchers, Supporting Project number PNURSP2023R432,
    Princess Nourah bint Abdulrahman University, Riyadh, Saudi Arabia. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement The data used in the study are available to other
    authors who require access to this material. Acknowledgments This research is
    supported by Princess Nourah bint Abdulrahman University Researchers Supporting
    Project number (PNURSP2023R432), Princess Nourah bint Abdulrahman University,
    Riyadh, Saudi Arabia. Conflicts of Interest The authors declare no conflict of
    interest. References Managing Water Sustainably Is Key to the Future of Food and
    Agriculture. Available online: https://www.oecd.org/agriculture/topics/water-and-agriculture/
    (accessed on 8 May 2023). Samjstria, A.G. Efficiencies of Florida Agricultural
    Irrigation Systems; University of Florida: Gainesville, FL, USA, 1988. [Google
    Scholar] The Current Water Crisis and the Need for Alternative Farming Solutions.
    Available online: https://www.edengreen.com/blog-collection/water-crisis-drought
    (accessed on 8 May 2023). Abioye, E.A.; Hensel, O.; Esau, T.J.; Elijah, O.; Abidin,
    M.S.Z.; Ayobami, A.S.; Yerima, O.; Nasirahmadi, A. Precision Irrigation Management
    Using Machine Learning and Digital Farming Solutions. AgriEngineering 2022, 3,
    70–103. [Google Scholar] [CrossRef] Samian, M.; Mahdei, K.N.; Saadi, H.; Movahedi,
    R. Identifying factors affecting optimal management of agricultural water. J.
    Saudi Soc. Agric. Sci. 2015, 14, 11–18. [Google Scholar] [CrossRef] Ahansal, Y.;
    Bouziani, M.; Yaagoubi, R.; Sebari, I.; Sebari, K.; Kenny, L. Towards smart irrigation:
    A literature review on the use of geospatial technologies and machine learning
    in the management of water resources in arboriculture. Agronomy 2022, 12, 297.
    [Google Scholar] [CrossRef] Blessy, J.A.; Kumar, A. Smart Irrigation System Techniques
    using Artificial Intelligence and IoT. In Proceedings of the 2021 Third International
    Conference on Intelligent Communication Technologies and Virtual Mobile Networks
    (ICICV), Tirunelveli, India, 4–6 February 2021; pp. 1355–1359. [Google Scholar]
    [CrossRef] Vianny, D.M.M.; John, A.; Mohan, S.K.; Sarlan, A.; Ahmadian, A. Water
    optimization technique for precision irrigation system using IoT and machine learning.
    Sustain. Energy Technol. Assess. 2022, 52, 102307. [Google Scholar] Evans, R.G.;
    LaRue, J.; Stone, K.C.; King, B.A. Adoption of site-specific variable rate sprinkler
    irrigation systems. Irrig. Sci. 2013, 31, 871–887. [Google Scholar] [CrossRef]
    Kamienski, C.; Soininen, J.-P.; Taumberger, M.; Dantas, R.; Toscano, A. Smart
    water management platform: IoT-based precision irrigation for agriculture. Sensors
    2019, 19, 276. [Google Scholar] [CrossRef] Messaoud, S.; Ben Ahmed, O.; Bradai,
    A.; Atri, M. Machine learning modelling-powered IoT systems for smart applications.
    In IoT-Based Intelligent Modelling for Environmental and Ecological Engineering;
    Springer: Cham, Swizterland, 2021; pp. 185–212. [Google Scholar] Abba, S.; Wadumi
    Namkusong, J.; Lee, J.A.; Liz Crespo, M. Design and performance evaluation of
    a low-cost autonomous sensor interface for a smart IoT-based irrigation monitoring
    and control system. Sensors 2019, 19, 3643. [Google Scholar] [CrossRef] Evett,
    S.R.; Colaizzi, P.D.; Lamm, F.R.; O’Shaughnessy, S.A. Past, present, and future
    of irrigation on the US Great Plains. Trans. ASABE 2020, 63, 703–729. [Google
    Scholar] [CrossRef] Mukherjee, D.; Nandy, S.; Mohan, S.; Al-Otaibi, Y.D.; Alnumay,
    W.S. Sustainable task scheduling strategy in cloudlets. Sustain. Comput. Inform.
    Syst. 2021, 30, 100513. [Google Scholar] [CrossRef] Schoups, G.; Addams, C.L.;
    Minjares, J.L.; Gorelick, S.M. Sustainable conjunctive water management in irrigated
    agriculture: Model formulation and application to the Yaqui Valley, Mexico. Water
    Resour. Res. 2006, 42, 1–19. [Google Scholar] [CrossRef] Durrant, A.; Markovic,
    M.; Matthews, D.; May, D.; Enright, J.; Leontidis, G. The role of cross-silo federated
    learning in facilitating data sharing in the agri-food sector. Comput. Electron.
    Agric. 2022, 193, 106648. [Google Scholar] [CrossRef] Mahato, S.; Rakshit, P.;
    Santra, A.; Dan, S.; Tiglao, N.C.; Bose, A. A GNSS-enabled multi-sensor for agricultural
    applications. J. Inf. Optim. Sci. 2019, 40, 1763–1772. [Google Scholar] [CrossRef]
    John, A.; Sugumaran, M.; Rajesh, R.S. Performance Analysis of the Past, Present
    and Future Indexing Methods for Spatio-Temporal Data. In 2017 2nd International
    Conference on Communication and Electronics Systems (ICCES), Coimbatore, India,
    19–20 October 2017; pp. 645–649. [Google Scholar] Abioye, E.A.; Abidin, M.S.;
    Mahmud, M.S.; Buyamin, S.; Ishak, M.H.; Abd Rahman, M.K.; Otuoze, A.O.; Onotu,
    P.; Ramli, M.S. A review on monitoring and advanced control strategies for precision
    irrigation. Comput. Electron. Agric. 2020, 173, 105441. [Google Scholar] [CrossRef]
    López-Morales, J.A.; Martínez, J.A.; Skarmeta, A.F. Improving Energy Efficiency
    of Irrigation Wells by Using an IoT-Based Platform. Electronics 2021, 10, 250.
    [Google Scholar] [CrossRef] Sánchez-Sutil, F.; Cano-Ortega, A. Smart Control and
    Energy Efficiency in Irrigation Systems Using Lo-RaWAN. Sensors 2021, 21, 7041.
    [Google Scholar] [CrossRef] Whig, P.; Kouser, S.; Velu, A.; Nadikattu, R.R. Fog-IoT-Assisted-Based
    Smart Agriculture Application. In Demystifying Federated Learning for Blockchain
    and Industrial Internet of Things; IGI Global: Hershey, PA, USA, 2022; pp. 74–93.
    [Google Scholar] Mahmoudi, N.; Majidi, A.; Jamei, M.; Jalali, M.; Maroufpoor,
    S. Mutating fuzzy logic model with various rigorous meta-heuristic algorithms
    for soil moisture content estimation. Agric. Water Manag. 2022, 261, 107342. [Google
    Scholar] [CrossRef] Shekhar, Y.; Dagur, E.; Mishra, S.; Sankaranarayanan, S. Intelligent
    IoT-based automated irrigation system. Int. J. Appl. Eng. Res. 2017, 12, 7306–7320.
    [Google Scholar] Saranya, T.; Deisy, C.; Sridevi, S.; Anbananthen, K.S.M. A comparative
    study of deep learning and Internet of Things for precision agriculture. Eng.
    Appl. Artif. Intell. 2023, 122, 106034. [Google Scholar] [CrossRef] Khamparia,
    S.; Jabade, S.; Kulkarni, S.; Nakade, P.; Bhatkhande, D. IoT for Water Management:
    A Sustainable Solution. In Internet of Things: Applications for Sustainable Development;
    Chapman and Hall/CRC: London, UK, 2023; Volume 109. [Google Scholar] Campos, N.G.S.;
    Rocha, A.R.; Gondim, R.; Coelho da Silva, T.L.; Gomes, D.G. Smart & green: An
    internet-of-things framework for smart irrigation. Sensors 2019, 20, 190. [Google
    Scholar] Goap, A.; Sharma, D.; Shukla, A.K.; Krishna, C.R. An IoT-based smart
    irrigation management system using Machine learning and open source technologies.
    Comput. Electron. Agric. 2018, 155, 41–49. [Google Scholar] [CrossRef] Sangeetha,
    B.P.; Kumar, N.; Ambalgi, A.P.; Haleem, S.L.A.; Thilagam, K.; Vijayakumar, P.
    IOT-based smart irrigation management system for environmental sustainability
    in India. Sustain. Energy Technol. Assess. 2020, 52, 101973. [Google Scholar]
    Adeyemi, O.; Grove, I.; Peets, S.; Norton, T. Advanced monitoring and management
    systems for improving sustainability in precision irrigation. Sustainability 2017,
    9, 353. [Google Scholar] [CrossRef] Al Sahili, Z.; Mariette, A. The power of transfer
    learning in agricultural applications: AgriNet. Convolutional Neural Netw. Deep
    Learn. Crop. Improv. Prod. 2023, 195, 16648714. [Google Scholar] [CrossRef] Bosilj,
    P.; Aptoula, E.; Duckett, T.; Cielniak, G. Transfer learning between crop types
    for semantic segmentation of crops versus weeds in precision agriculture. J. Field
    Robot. 2020, 37, 7–19. [Google Scholar] [CrossRef] Hu, Y.; Zeng, H.; Tian, F.;
    Zhang, M.; Wu, B. An interannual transfer learning approach for crop classification
    in the Hetao Irrigation district, China. Remote Sens. 2022, 14, 1208. [Google
    Scholar] [CrossRef] Espejo-Garcia, B.; Mylonas, N.; Athanasakos, L.; Fountas,
    S.; Vasilakoglou, I. Towards weeds identification assistance through transfer
    learning. Comput. Electron. Agric. 2020, 171, 105306. [Google Scholar] [CrossRef]
    Vo, A.H.; Minh, T.V.; Tuong, L. A novel framework for trash classification using
    deep transfer learning. IEEE Access 2019, 7, 178631–178639. [Google Scholar] [CrossRef]
    Zhao, W.; Yamada, W.; Li, T.; Digman, M.; Runge, T. Augmenting crop detection
    for precision agriculture with deep visual transfer learning—A case study of bale
    detection. Remote Sens. 2020, 13, 23. [Google Scholar] [CrossRef] Thenmozhi, K.;
    Srinivasulu Reddy, U. Crop pest classification based on deep convolutional neural
    network and transfer learning. Comput. Electron. Agric. 2019, 164, 104906. [Google
    Scholar] [CrossRef] Bazzi, H.; Ienco, D.; Baghdadi, N.; Zribi, M.; Demarez, V.
    Distilling before refine: Spatio-temporal transfer learning for mapping irrigated
    areas using Sentinel-1 time series. IEEE Geosci. Remote. Sens. Lett. 2020, 17,
    1909–1913. [Google Scholar] [CrossRef] Risheh, A.; Amirmohammad, J.; Ehsan, N.
    Smart Irrigation IoT solution using transfer learning for neural networks. In
    Proceedings of the 2020 10th International Conference on Computer and Knowledge
    Engineering (ICCKE), Mashhad, Iran, 29–30 October 2020. [Google Scholar] BANANA.
    Available online: https://nhb.gov.in/report_files/banana/BANANA.htm (accessed
    on 8 May 2023). Senthilkumar, M. Weather data analysis using Hadoop. Int. J. Pharm.
    Technol. 2016, 8, 21827–21834. [Google Scholar] Altman, N.S. An introduction to
    kernel and nearest-neighbour nonparametric regression. Am. Stat. 1992, 46, 175–185.
    [Google Scholar] Friedman, J.H. Stochastic gradient boosting. Comput. Stat. Data
    Anal. 2002, 38, 367–378. [Google Scholar] [CrossRef] Karaboga, D.; Ebubekir, K.
    Adaptive network-based fuzzy inference system (ANFIS) training approaches: A comprehensive
    survey. Artif. Intell. Rev. 2019, 52, 2263–2293. [Google Scholar] [CrossRef] Dehghani,
    M.; Akram, S.; Hossien, R.-M. Novel forecasting models for immediate-short-term
    to long-term influent flow prediction by combining ANFIS and grey wolf optimisation.
    J. Hydrol. 2019, 576, 698–725. [Google Scholar] [CrossRef] Adedeji, P.A.; Akinlabi,
    S.; Madushele, N.; Olatunji, O.O. Wind turbine power output very short-term forecast:
    A comparative study of data clustering techniques in a PSO-ANFIS model. J. Clean.
    Prod. 2020, 254, 120135. [Google Scholar] [CrossRef] Hua, Y.; Zhao, Z.; Li, R.;
    Chen, X.; Liu, Z.; Zhang, H. Deep learning with long short-term memory for time
    series prediction. IEEE Commun. Mag. 2019, 57, 114–119. [Google Scholar] [CrossRef]
    Chang, Y.-S.; Chiao, H.-T.; Abimannan, S.; Huang, Y.-P. Tsai, Y.-T.; Lin, K.-M.
    An LSTM-based aggregated model for air pollution forecasting. Atmos. Pollut. Res.
    2020, 11, 1451–1463. [Google Scholar] [CrossRef] Zhuang, F.; Qi, Z.; Duan, K.;
    Xi, D.; Zhu, Y.; Zhu, H.; Xiong, H.; He, Q. A comprehensive survey on transfer
    learning. Proc. IEEE 2020, 109, 43–76. [Google Scholar] [CrossRef] Nowakowski,
    A.; Mrziglod, J.; Spiller, D.; Bonifacio, R.; Ferrari, I.; Mathieu, P.P.; Garcia-Herranz,
    M.; Kim, D.-H. Crop type mapping by using transfer learning. Int. J. Appl. Earth
    Obs. Geoinf. 2021, 98, 102313. [Google Scholar] [CrossRef] Olariu, E.M.; Tolas,
    R.; Portase, R.; Dinsoreanu, M.; Potolea, R. Modern approaches to preprocessing
    industrial data. In Proceedings of the 2020 IEEE 16th International Conference
    on Intelligent Computer Communication and Processing (ICCP), Cluj-Napoca, Romania,
    3–5 September 2020; IEEE: Piscataway, NJ, USA, 2020; pp. 221–226. [Google Scholar]
    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all
    publications are solely those of the individual author(s) and contributor(s) and
    not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility
    for any injury to people or property resulting from any ideas, methods, instructions
    or products referred to in the content.  © 2023 by the authors. Licensee MDPI,
    Basel, Switzerland. This article is an open access article distributed under the
    terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Blessy, A.; Kumar, A.; Prabagaran A; Quadir
    Md, A.; Alharbi, A.I.; Almusharraf, A.; Khan, S.B. Sustainable Irrigation Requirement
    Prediction Using Internet of Things and Transfer Learning. Sustainability 2023,
    15, 8260. https://doi.org/10.3390/su15108260 AMA Style Blessy A, Kumar A, Prabagaran
    A, Quadir Md A, Alharbi AI, Almusharraf A, Khan SB. Sustainable Irrigation Requirement
    Prediction Using Internet of Things and Transfer Learning. Sustainability. 2023;
    15(10):8260. https://doi.org/10.3390/su15108260 Chicago/Turabian Style Blessy,
    Angelin, Avneesh Kumar, Prabagaran A, Abdul Quadir Md, Abdullah I. Alharbi, Ahlam
    Almusharraf, and Surbhi B. Khan. 2023. \"Sustainable Irrigation Requirement Prediction
    Using Internet of Things and Transfer Learning\" Sustainability 15, no. 10: 8260.
    https://doi.org/10.3390/su15108260 Note that from the first issue of 2016, this
    journal uses article numbers instead of page numbers. See further details here.
    Article Metrics Citations Crossref   3 Web of Science   2 Scopus   4 Google Scholar   [click
    to view] Article Access Statistics Article access statistics Article Views 8.
    Jan 18. Jan 28. Jan 7. Feb 17. Feb 27. Feb 8. Mar 18. Mar 28. Mar 0 500 1000 1500
    For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sustainability, EISSN 2071-1050,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sustainability (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Sustainable Irrigation Requirement Prediction Using Internet of Things and
    Transfer Learning
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sarjerao J.S.
  - Sudhagar G.
  citation_count: '0'
  description: 'This paper introduces a pioneering approach to modernize agricultural
    practices through the integration of Artificial Neural Networks (ANN) into irrigation
    management. The primary objectives include achieving accurate data analysis for
    precise irrigation control, implementing real-time data collection and monitoring,
    and developing a decision support system that leverages ANN insights to enhance
    crop health and resource efficiency. The utilization of ANN represents a cutting-edge
    advancement in smart agriculture, harnessing the capabilities of deep learning
    and attention mechanisms to optimize irrigation strategies. To build the ANN model,
    training data is collected and utilized to the objective is to train three models:
    The Long Short-Term Memory (LSTM), Convolutional Neural Network (CNN), along with
    the proposed Artificial Neural Network (ANN) model. This study assesses the efficacy
    of the suggested model and conducts a comparative analysis with the support provided
    by CNN and LSTM algorithms. The ANN model emerged as the standout performer across
    all metrics. With an accuracy of 97.24%, it outperformed both the LSTM (95.68%)
    and CNN (93.39%), showcasing its superior capability in accurately classifying
    temperature and moisture data, critical for precise irrigation management. Moreover,
    the ANN model demonstrated exceptional specificity and sensitivity values at 96.08%
    and 95.98%, respectively, surpassing both CNN and LSTM models.'
  doi: 10.1109/PuneCon58714.2023.10450129
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 IEEE Pune Section Intern... A Deep
    Learning Approach to Irrigation Management in Smart Agriculture Publisher: IEEE
    Cite This PDF Jagtap Sharad Sarjerao; G. Sudhagar All Authors 5 Full Text Views
    Abstract Document Sections I. Introduction II. Related Work III. Background IV.
    Methodology V. Results Show Full Outline Authors Figures References Keywords Metrics
    Abstract: This paper introduces a pioneering approach to modernize agricultural
    practices through the integration of Artificial Neural Networks (ANN) into irrigation
    management. The primary objectives include achieving accurate data analysis for
    precise irrigation control, implementing real-time data collection and monitoring,
    and developing a decision support system that leverages ANN insights to enhance
    crop health and resource efficiency. The utilization of ANN represents a cutting-edge
    advancement in smart agriculture, harnessing the capabilities of deep learning
    and attention mechanisms to optimize irrigation strategies. To build the ANN model,
    training data is collected and utilized to the objective is to train three models:
    The Long Short-Term Memory (LSTM), Convolutional Neural Network (CNN), along with
    the proposed Artificial Neural Network (ANN) model. This study assesses the efficacy
    of the suggested model and conducts a comparative analysis with the support provided
    by CNN and LSTM algorithms. The ANN model emerged as the standout performer across
    all metrics. With an accuracy of 97.24%, it outperformed both the LSTM (95.68
    % ) and CNN (93.39 % ), showcasing its superior capability in accurately classifying
    temperature and moisture data, critical for precise irrigation management. Moreover,
    the ANN model demonstrated exceptional specificity and sensitivity values at 96.08%
    and 95.98%, respectively, surpassing both CNN and LSTM models. Published in: 2023
    IEEE Pune Section International Conference (PuneCon) Date of Conference: 14-16
    December 2023 Date Added to IEEE Xplore: 07 March 2024 ISBN Information: ISSN
    Information: DOI: 10.1109/PuneCon58714.2023.10450129 Publisher: IEEE Conference
    Location: Pune, India SECTION I. Introduction Agriculture, as the backbone of
    global food production, faces increasing challenges in the 21st century. The world''s
    population is Experiencing an unparalleled pace of growth, it is projected that
    by the year 2050, there will be over 9 billion mouths to feed. Coupled with climate
    change and resource constraints, this places immense pressure on the agricultural
    sector to boost productivity and sustainability. In this context, the concept
    of “smart agriculture” has emerged as a promising solution, leveraging technology,
    data, and advanced techniques to transform the way we grow and manage crops [1].
    At the heart of this transformation lies the efficient and precise Management
    of irrigation, a critical component for crop health and yield optimization. Traditional
    irrigation practices have often relied on scheduled watering or manual assessment
    of soil moisture levels, which can be inefficient, wasteful, and may not account
    for the dynamic environmental factors that affect crops. In response to these
    challenges, smart agriculture integrates cutting-edge technologies, data analytics,
    and machine learning to make irrigation more intelligent and resource-efficient.
    This article explores the application of deep learning, a subset of artificial
    intelligence (AI), to irrigation management within the context of smart agriculture[2].
    Smart agriculture, Precision agriculture, also referred to as digital farming,
    signifies a fundamental change in our approach to the cultivation of food. The
    integration of technological advances, data analytics, as well as automation synergistically
    harnesses their respective capabilities optimize agricultural processes. Within
    this framework, irrigation management holds a pivotal role, as water is a finite
    and increasingly scarce resource. Moreover, inefficient or excessive irrigation
    not only strains water resources but can also lead to soil degradation and environmental
    pollution[3]. To address these challenges, smart agriculture utilizes a diverse
    array of technologies, including the Internet of Things (IoT), imagery collection,
    and data analytics, are being used. These technological advancements provide an
    ongoing record of soil conditions, meteorological patterns, and the overall well-being
    of crops in real-time, leading to data-driven decision-making. One of the most
    promising branches of AI employed Deep learning is the subject matter under consideration
    within this particular situation [4]. Deep learning, a subfield within the domains
    of machine learning and artificial intelligence, has demonstrated remarkable capabilities
    in various fields, from the domains of image and voice recognition to the field
    of medical diagnostics, a wide range of applications have emerged autonomous driving.
    In agriculture, deep learning has found applications in crop disease detection,
    yield prediction, pest control, and irrigation management. Its potential in irrigation
    management is particularly intriguing, as it the ability to analyze several data
    sources, including moisture levels in the soil meters, weather forecasts, and
    satellite imaging, enables the generation of accurate and detailed insights timely
    decisions about irrigation needs. This can optimize water usage, reduce costs,
    and minimize the environmental footprint of agriculture[5]. A. Deep Learning for
    Irrigation Management Efficient irrigation management relies on a comprehensive
    understanding of the factors that influence soil moisture and crop water requirements.
    These factors include soil type, crop type, weather conditions, evapotranspiration
    rates, and historical irrigation practices. Deep learning models can ingest data
    from these sources and create complex, non-linear relationships, enabling accurate
    irrigation recommendations. One of the key benefits of using deep learning in
    irrigated management is its ability to enhance the capacity to efficiently handle
    and evaluate substantial quantities of data in real-time [6]. For example, soil
    moisture sensors placed at different depths in the field can provide continuous
    data on soil moisture content. Deep learning models can process this data and,
    based on historical information, make predictions about future moisture levels,
    thus informing when and how much to irrigate. These models can adapt to changing
    environmental conditions, providing a level of precision that traditional irrigation
    methods cannot achieve[7]. 1) Objectives To incorporate the ANN model for accurate
    data analysis, enabling precise irrigation control. To implement real-time data
    collection and monitoring for immediate response to changing agricultural conditions.
    To develop a decision support system that leverages ANN insights to guide irrigation
    decisions, improving crop health and resource efficiency. 2) Organization of the
    Study The work may be broken down into the following sections: Background of the
    proposed methods are provided in Section 2, an explanation of the methodology
    that underpins the recommended algorithm is provided in Section 3, Section 4 delivers
    the findings of the study, and Section 5 provides a conclusion. SECTION II. Related
    Work Conducted study addressing the incorporation of various machine learning
    techniques that have the potential to enhance irrigation decision management [8].
    The aim of this study was to examine the current research direction and practical
    application of machine learning methods, as well as the use of resulting machine
    learning models, in order to support farmers in the field of sustainable irrigation
    management. [9] This research conducted an examination of current academic literature
    about the use of deep learning methodologies in the agricultural domain during
    the past five years. This investigation aimed to identify and emphasize the noteworthy
    advancements made in this domain, as well as the challenges that have been successfully
    addressed. In addition, the author conducted a study on agricultural parameters
    that were monitored using the internet of things (IoT) technology. These values
    were then inputted into a deep learning system designed for purposes of analysis.
    [10] emphasized the key restrictions to agricultural output, conventional irrigation
    scheduling techniques, as well as the accompanying problems, Various initiatives
    and advancements have been undertaken In order to optimize water use efficiency
    (WUE), implementing sustainable agricultural practices that optimize water use
    and minimize waste providing an overview of several smart irrigation alternatives.
    [11] The inception of model predictive control (MPC) may be traced back to its
    first establishment, and its application in the field of precision irrigation
    is further elucidated. This paper provides a comprehensive analysis this study
    examines the use of data-driven modelling and predictive control models in the
    field of precision management of irrigation. Model predictive control (MPC) is
    being used in several applications related to irrigation canals, irrigation scheduling,
    stem water potential adjustment, soil moisture regulation, and plant disturbance
    prediction. [12] The main focus of this work revolves around the practical application
    of remote sensing technologies in the context of precision irrigation. The aforementioned
    methods are used to assess transpiration rates, including infrared thermography
    and the hydration status of crops agricultural characteristics. Precision agriculture
    has been incorporated as a vital component in the framework for reaching this
    aim. Using these strategies, the author may solve the issue of water scarcity,
    which is critical for agriculture. SECTION III. Background This section provides
    an overview of various algorithms, including in this study, we used several machine
    learning algorithms, including random forests, Gaussian Naive Bayes, and logistic
    regression CNN, by discussing their background and key features. A. Ann In the
    picture below, a neural network (ANN) model with two secret layers and partly
    linked nodes is shown. So many formative measurements are deciding factor in determining
    the number of input nodes. It is considered that there are I formative measures,
    which is denoted by the symbol x i (i=1,2,3,….I) . The overall input variables
    the amount of output variables both have a role when calculating the amount of
    neurons and layers that remain secret that are found in the hidden layer. It is
    presumable that there are W variables that are output to the system and N variables
    that are input to the system, denoted correspondingly as ξ w (w=1,2,3,…..,W) and
    η n (n=1,2,3,…..,N)[13].Overall the total of neurons with results is given from
    assumption that there are O reflecting measures, which are denoted by y o (o=1,2,3,…O)
    . The relationship between the measurements and the variables governs the connections
    between layers. The weights of the links among the input layer and hidden layer
    neurons are included in the W×I dimensional vector W I , which is denoted as W
    I . The linkage weights among buried layer neurons are included in the N×(W+N)
    dimensional vector, designated as W H . That linkage of weights between the results
    of the visible layer neurons and the neurons in the hidden layer are represented
    by the O×N -dimensional vector abbreviated as W o . In a neural network, each
    neuron has a nonlinear activation function.[14] Fig. 1. Ann architecture Show
    All B. Cnn The convolutional neural network (CNN) is a kind of artificial neural
    network (ANN) frequently employed in the domain of deep learning to analyze visual
    images. The term “convolutional neural network” (CNN) is often used to refer to
    a specific kind of neural network that is frequently used in the field of deep
    learning for the purposes of image recognition and processing. A convolutional
    neural network (CNN) has left three separate layers: the input layer, the hidden
    layer, and the output layer [15]. The intermediate layers inside a neural network
    with a feed-forward structure are often denoted as hidden layers due to the fact
    that the activation function as well as final convolution disguise the inputs
    and results of these layers. Convolutional layers constitute a subset of the concealed
    layers inside a convolutional neural network, which execute convolutions[16].
    Fig. 2. Cnn architecture Show All C. Lstm The model known as LSTM is used to identify
    whether network breaches have occurred. A specific extension of a recurrent neural
    network organisation, a DL model, is known as LSTM. For work on un-segmented data,
    relationship recognition patterns, voice recognition, including abnormal prediction
    in network traffic via IDSs, for example, LSTM may be utilised)[17]. The inputting
    gate, exit gate, remembering gate, and cell are the four basic parts of an LSTM
    system. Since cell memories usually only endure a limited time, three gates initially
    were used to define what information travels within and out of a cell. The figure
    below shows the LSTM for each phase of a cell. The horizontal uppermost line,
    which indicates the cell state, has a cell state implemented in it. As a result,
    when data has been completely regularised by gates in a cell state, the LSTM has
    no way to remove it. A cell contains important structural elements.[18]. Fig.
    3. structure of lstm cell Show All SECTION IV. Methodology The integration of
    ANN in irrigation management represents a cutting-edge advancement in smart agriculture.
    This methodology leverages the power of deep learning and attention mechanisms
    to optimize irrigation strategies. The objective is to dynamically schedule irrigation,
    enhance crop health, and conserve resources. The methodology encompasses data
    collection, pre-processing, ANN model training, real-time monitoring, and user-friendly
    interfaces for seamless interaction. Fig. 4. Proposed flowchart Show All A. Dataset
    Description In this study, we collected data from below website: https://www.kaggle.com/code/triptmann/irrigation
    - scheduling-for-smart-agriculture/input. This dataset comprises a collection
    of images capturing moisture and temperature information. It includes numerical
    data representing various features such as meteorological conditions, soil moisture
    levels, and the identification of specific crop types. The primary goal of this
    system is to facilitate automatic water supply management based on the gathered
    information. B. Pre-Processing Steps for Classification The objective is the objective
    of this research is to investigate the impact of various pre-processing techniques
    on the precision of the results many core convolutional networks. The next section
    presents a number of pre-processing approaches. Eliminate Noise The process of
    noise elimination, especially in image datasets, often involves various techniques
    and methods specific to the characteristics of the images. The information regarding
    which images are considered for noise elimination, the criteria for selection,
    or the methodology used to eliminate noise would typically be documented or described
    in the methodology section, associated documentation, or supplementary materials
    provided with the dataset. To calm down the agitation whenever a function known
    as Gaussian is applied to blur an image, a blur that resembles a Gaussian is the
    result. One of the goals of this common graphics effect the objective is to reduce
    the level of visual clutter. Gaussian smoothing is often used as a preprocessing
    step in computer vision algorithms. This action is being undertaken with the purpose
    of to enhance visual architectures across different scales. C. Train_test Split
    The dataset has been partitioned into separate test and training sets based upon
    the user-specified splitting ratio after all preparation procedures are finished.
    The models will then be validated using the test data after being properly trained
    using this segmented train data. Train the Network The train dataset is used for
    training the Long Short-Term Memory (LSTM) and Convolutional Neural Network (CNN)
    algorithms, together with the suggested Artificial Neural Network (ANN) model.
    The effectiveness of the suggested model is evaluated and compared with the existing
    models assistance offered by CNN and LSTM. The performance metrics enumerated
    below are utilized to assess the quality of the recommended algorithm. D. Performance
    Metrics Metrics such Accuracy, sensibility, precision, along with the F1-score
    are often used as evaluation metrics to examine the performance of an algorithm
    in relation to the performance measures derived from the confusion matrix. Accuracy:
    The term “identification rate” refers to the ratio of accurately identified individuals
    to the total count of disciplines. Accuracy= TP+TN TP+TN+FP+FN View Source Sensitivity:
    Recall, which is also referred to as sensitivity, denotes the proportion the computer
    system in question demonstrates a high level of accuracy in identifying and classifying
    labels as positive. Sensitivity= TP TP+FN View Source Precision: By considering
    the total count of accurate forecasts, it is possible to assess the level of accuracy
    in a forecast. This idea also goes by the name of predictive value. Precision=
    TP TP+FP View Source F1-Score: The F1-score is a quantitative metric that integrates
    both remembrance and accuracy. F1−score= 2 ∗ Precisiso n ∗ Recall Precision+Recall
    View Source Specificity: The system has appropriately designated the negative
    as specificity. Specificity= TN TN+FP View Source Where, TP True Positive TN True
    Negative FP False Positive FN False Negative SECTION V. Results Ann Fig. 5. Show
    All The confusion matrix of the proposed ANN architecture shows that Temp data
    are correctly identified 474 times and misclassified as moisture data 26 times.
    Moisture data are correctly predicted 475 times, with 25 misclassifications. The
    model exhibits good accuracy in distinguishing between non-defected and defected
    images. Cnn Fig. 6. Show All The provided confusion matrix illustrates the CNN
    architecture''s performance in distinguishing between temp (0) and moisture (1)
    data. The proposed method correctly identified 434 temp data but misclassified
    66 as moisture data. Additionally, it accurately predicted 401 moisture data but
    had 99 misclassifications. These results showcase the model''s strengths in accurate
    identification while also revealing areas for potential refinement in reducing
    misclassifications. Lstm Fig. 7. Show All The confusion matrix for the LSTM architecture
    reveals that it correctly identified 442 temp data, but misclassified 58 as moisture
    data. For moisture data, it achieved 412 correct predictions, but there were 88
    misclassifications. The model demonstrates a reasonably good performance in distinguishing
    between temp data and moisture data. However, it still exhibits certain classification
    errors. The model could be enhanced by investigating alternative hybrid deep learning
    models, which include the ANN model that has been given, in order to appropriately
    detect and tackle casting difficulties. Performance indicators like Accuracy,
    Sensitivity, etc. Specificity are computed to assess the efficacy of the architectures.
    The results are shown as follows: Fig. 8. Show All The previous graph makes it
    clear that The precision of the recommended artificial neural network (ANN) is
    The assessment and comparison were performed using two more models, namely the
    Convolutional Neural Network (CNN) as well as Long Short-Term Memory (LSTM). Consequence
    of this phenomenon is that proposed model beat the LSTM and CNN, producing an
    accuracy score of 97.24 as opposed to the recommended model''s scores of 95.68
    and 93.39. Fig. 9. Show All The performance of the recommended ANN The evaluation
    and comparison of the two more models, LSTM and CNN, is apparent from the given
    context following graph. The specificity value for ANN is 96.08. This led to the
    suggested model outperforming both CNN et LSTM, with specificity scores for the
    model suggested of 93.12, 94.84, respectively. Fig. 10. Show All The accompanying
    graph compares and contrasts the performance of the CNN and LSTM models with that
    of the proposed model ANN. The sensitivity value for ANN is 95.98. The model that
    was suggested performed better than CNN (92.37) nor LSTM (93.66). Table I. Architectures
    and values SECTION VI. Conclusion This paper presents a ground breaking advancement
    in modernizing agricultural practices by integrating Artificial Neural Networks
    (ANN) into irrigation management. The study''s core objectives encompass achieving
    precise irrigation control through accurate data analysis, implementing real-time
    data collection and monitoring, and establishing a decision support system leveraging
    ANN insights to optimize crop health and resource utilization. This integration
    of ANN represents a significant leap in smart agriculture, harnessing deep learning
    and attention mechanisms to fine-tune irrigation strategies. The evaluation of
    three key models such as ANN, LSTM, and CNN revealed compelling insights into
    their performance. The ANN model emerged as the standout performer across all
    metrics. With an accuracy of 97.24%, it outperformed both the LSTM (95.68%) and
    CNN (93.39%). This higher accuracy underscores the ANN model''s superior capability
    in accurately classifying temperature and moisture data. Furthermore, the specificity
    and sensitivity values of the ANN model, at 96.08% and 95.98% respectively, surpass
    those of both the CNN and LSTM models. These figures indicate the ANN''s exceptional
    ability to distinguish between non-defected and defected images, providing critical
    insights for precise irrigation management. In terms of specificity, the ANN model
    excelled with a score of 96.08%, surpassing both the LSTM (94.84%) and CNN (93.12%)
    models. This highlights the ANN''s effectiveness in correctly identifying non-defected
    images. Additionally, the ANN model demonstrated impressive sensitivity with a
    value of 95.98%. This further cements its superiority over both the CNN (92.37%)
    and LSTM (93.66%) models in accurately detecting defected images. In summary,
    the ANN-based irrigation management system showcased in this study exhibits outstanding
    performance across all key metrics, making it the preferred choice for modernizing
    agricultural practices. Its exceptional accuracy, specificity, and sensitivity
    values indicate its potential to significantly enhance the sustainability and
    productivity of farming. By dynamically scheduling irrigation, improving crop
    health, and conserving resources, this approach holds immense promise for the
    future of agriculture. The integration of ANN technology presents a transformative
    path towards more efficient and sustainable agricultural practices. Authors Figures
    References Keywords Metrics More Like This Convolutional Neural Networks and Long
    Short-Term Memory Networks for Textual Classification of Information Access Requests
    IEEE Latin America Transactions Published: 2021 Hybridized Convolutional Neural
    Networks and Long Short-Term Memory for Improved Alzheimer’s Disease Diagnosis
    from MRI Scans 2023 26th International Conference on Computer and Information
    Technology (ICCIT) Published: 2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2023 IEEE Pune Section International Conference, PuneCon 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Deep Learning Approach to Irrigation Management in Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Tawfeek M.A.
  - Yanes N.
  - Jamel L.
  - Aldehim G.
  - Mahmood M.A.
  citation_count: '0'
  description: The trend towards smart greenhouses stems from various factors, including
    a lack of agricultural land area owing to population concentration and housing
    construction on agricultural land, as well as water shortages. This study proposes
    building a full farming adaptation model that depends on current sensor readings
    and available datasets from different agricultural research centers. The proposed
    model uses a one-dimensional convolutional neural network (CNN) deep learning
    model to control the growth of strategic crops, including cucumber, pepper, tomato,
    and bean. The proposed model uses the Internet of Things (IoT) to collect data
    on agricultural operations and then uses this data to control and monitor these
    operations in real time. This helps to ensure that crops are getting the right
    amount of fertilizer, water, light, and temperature, which can lead to improved
    yields and a reduced risk of crop failure. Our dataset is based on data collected
    from expert farmers, the photovoltaic construction process, agricultural engineers,
    and research centers. The experimental results showed that the precision, recall,
    F1-measures, and accuracy of the one-dimensional CNN for the tested dataset were
    approximately 97.3%, 98.2%, 97.25%, and 97.56%, respectively. The new smart greenhouse
    automation system was also evaluated on four crops with a high turnover rate.
    The system has been found to be highly effective in terms of crop productivity,
    temperature management and water conservation.
  doi: 10.32604/cmc.2023.042179
  full_citation: '>'
  full_text: '>

    "Submit LOGIN REGISTER Home Academic Journals Books & Monographs Conferences Language
    Service News & Announcements About Home/ Journals/ CMC/ Vol.77, No.2, 2023/ 10.32604/cmc.2023.042179
    Submit a Paper Propose a Special lssue Table of Content Abstract Introduction
    Background Related Work The Proposed CNN for Smart Greenhouse Agriculture Using
    IoT Implementation and Experimental Results Conclusion References Open Access
    ARTICLE Adaptive Deep Learning Model to Enhance Smart Greenhouse Agriculture Medhat
    A. Tawfeek1,2, Nacim Yanes3,4, Leila Jamel5,*, Ghadah Aldehim5, Mahmood A. Mahmood1,6
    1 Department of Computer Science, College of Computer and Information Sciences,
    Jouf University, P.O. Box 72314, Skaka, Saudi Arabia 2 Department of Computer
    Science, Faculty of Computers and Information, Menoufia University, P.O. Box 6121890,
    Menoufia, Egypt 3 Department of Software Engineering, College of Computer and
    Information Sciences, Jouf University, P.O. Box 72314, Skaka, Saudi Arabia 4 RIADI
    Laboratory, La Manouba University, P.O. Box, 2010, Manouba, Tunisia 5 Department
    of Information Systems, College of Computer and Information Sciences, Princess
    Nourah bint Abdulrahman University, P.O. Box 84428, Riyadh, 11671, Saudi Arabia
    6 Department of Information Systems and Technology, Faculty of Graduate Studies
    and Research, Cairo University, P.O. Box 3753450, Giza, Egypt * Corresponding
    Author: Leila Jamel. Email: Computers, Materials & Continua 2023, 77(2), 2545-2564.
    https://doi.org/10.32604/cmc.2023.042179 Received 21 May 2023; Accepted 04 September
    2023; Issue published 29 November 2023 View Full Text Download PDF Abstract The
    trend towards smart greenhouses stems from various factors, including a lack of
    agricultural land area owing to population concentration and housing construction
    on agricultural land, as well as water shortages. This study proposes building
    a full farming adaptation model that depends on current sensor readings and available
    datasets from different agricultural research centers. The proposed model uses
    a one-dimensional convolutional neural network (CNN) deep learning model to control
    the growth of strategic crops, including cucumber, pepper, tomato, and bean. The
    proposed model uses the Internet of Things (IoT) to collect data on agricultural
    operations and then uses this data to control and monitor these operations in
    real time. This helps to ensure that crops are getting the right amount of fertilizer,
    water, light, and temperature, which can lead to improved yields and a reduced
    risk of crop failure. Our dataset is based on data collected from expert farmers,
    the photovoltaic construction process, agricultural engineers, and research centers.
    The experimental results showed that the precision, recall, F1-measures, and accuracy
    of the one-dimensional CNN for the tested dataset were approximately 97.3%, 98.2%,
    97.25%, and 97.56%, respectively. The new smart greenhouse automation system was
    also evaluated on four crops with a high turnover rate. The system has been found
    to be highly effective in terms of crop productivity, temperature management and
    water conservation. Keywords Greenhouse; wireless sensor network; deep learning;
    Internet of Things; strategic crops monitoring; smart irrigation Cite This Article
    M. A. Tawfeek, N. Yanes, L. Jamel, G. Aldehim and M. A. Mahmood, \"Adaptive deep
    learning model to enhance smart greenhouse agriculture,\" Computers, Materials
    & Continua, vol. 77, no.2, pp. 2545–2564, 2023. BibTex EndNote RIS    This work
    is licensed under a Creative Commons Attribution 4.0 International License , which
    permits unrestricted use, distribution, and reproduction in any medium, provided
    the original work is properly cited. We recommend Greenhouse; wireless sensor
    network; deep learning; Internet of Things; strategic crops monitoring; smart
    irrigation CMC-Computers, Materials & Continua Smart Greenhouse Control via NB-IoT
    Sung Wen-Tsai et al., Intelligent Automation & Soft Computing, 2022 Leaching Fraction
    (LF) of Irrigation Water for Saline Soils Using Machine Learning Rab Bashir et
    al., Intelligent Automation & Soft Computing, 2023 An Adaptive Vision Navigation
    Algorithm in Agricultural IoT System for Smart Agricultural Robots Zhibin Zhang
    et al., CMC-Computers, Materials & Continua, 2020 Effects of arbuscular mycorrhizal
    fungi and plant growth-promoting rhizobacteria on growth and reactive oxygen metabolism
    of tomato fruits under low saline conditions WEI ZHOU et al., BIOCELL, 2022 Fast
    wireless sensor for anomaly detection based on data stream in an edge-computing-enabled
    smart greenhouse Yihong Yang et al., Digital Communications and Networks, 2022
    STRATEGIES FOR A LOW-CARBON FOOD SYSTEM IN CHINA Xinpeng JIN et al., Frontiers
    of Agricultural Science and Engineering, 2023 GREENHOUSE GAS AND AMMONIA EMISSION
    MITIGATION PRIORITIES FOR UK POLICY TARGETS Sarah BUCKINGHAM et al., Frontiers
    of Agricultural Science and Engineering, 2023 Coldspots and Hotspots of Agriculture
    in Nigeria; Any Hope for Youth and Women? Oyewale Daniel Abioye et al., Advanced
    Journal of Social Science, 2018 Coldspots and Hotspots of Agriculture in Nigeria;
    Any Hope for Youth and Women? Oyewale Daniel Abioye et al., Advanced Nano Research,
    2018 Powered by Downloads Citation Tools 549 View 179 Download 0 Like Related
    articles Morphological, molecular and pathogenic diagnostic of fungi in lawn’s
    root and neck in Mexico García-Munguía CA, M Acosta-Ramos,... Reproduction of
    Solidago chilensis, native Asteraceae useful for gardening with low maintenance
    requirements Gil SP, ME Reyna, L Seisdedos,... Defoliation management of kleingrass
    (Panicum coloratum L. var coloratum) cv Verde Ferri CM, VV Jouve, AM Sáenz Phytochemical
    quality of tomato Saladette produced with organic substrates under greenhouse
    conditions González B ML, M Fortis H, P Preciado... Dynamic growth of squash (Cucurbita
    pepo L.) on a substrate based on vermicompost in the greenhouse Orozco V JA, E
    Galindo P, MA Segura..."'
  inline_citation: '>'
  journal: Computers, Materials and Continua
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Adaptive Deep Learning Model to Enhance Smart Greenhouse Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Amudha S.
  - Bindu G.
  - Sankar S.R.
  - Poongothai E.
  - VijayaLakshmi K.
  - Sarveshwaran V.
  citation_count: '0'
  description: Despite a sharp rise in population, agriculture still provides food
    for all people and acts as a backbone of the country. Nowadays, no proper guidance
    given to farmers and they are not able to analyze the nature of soil, disease
    of plant and its requirements. This leads to the depletion of farming in future.
    Crop diseases must be identified and prevented in order to increase the productivity.
    To overcome this, the nature of the soil is analyzed through various parameters
    like Nitrogen-Potassium-Phosphorus Content in soil, Humidity, Temperature, pH
    value of the soil, Rainfall using sensors, plants disease using cameras in real-time
    environment. These parameters are obtained using various IoT Sensors, cameras
    and existing Data, are analyzed through ML Algorithms. The proposed system consists
    of two modules in crop yield prediction system using the features NPP-WPF whereas
    NPP stands for Nitrogen-Potassium-Phosphorus and WPF stands for Water Content-Pesticide-Fertilizer,
    the Farmers can be guided with the details of the crop that is suitable for the
    soil and about Fertilizer, Pesticide, Water requirements. The second module called
    as automatic disease detection system uses CNN, ResNet, VGGNet, and Mobile net
    models to recognize and diagnose plant diseases from their leaves at the early
    stage. The proposed model is implemented with the dataset of 14 different species
    of plants and with the categorical classes of 38 classes. The result analysis
    shows that the suggested model provides accuracy of 98.2% when compared to the
    existing state-of-the-art methodologies.
  doi: 10.1109/I-SMAC58438.2023.10290468
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 7th International Confer... Deep Learning
    for Plant Disease Detection and Crop Yield Prediction based on NPP-WPF Analysis
    in Smart Agriculture Publisher: IEEE Cite This PDF Amudha S; Bindu G; Sasi Rekha
    Sankar; E Poongothai; VijayaLakshmi K; Velliangiri Sarveshwaran All Authors 114
    Full Text Views Abstract Document Sections I. Introduction II. RELATED WORK III.
    PROPOSED ARCHITECTURE MODEL IV. RESULTS AND DISCUSSIONS V. CONCLUSION AND FUTURE
    ENHANCEMENT Authors Figures References Keywords Metrics Abstract: Despite a sharp
    rise in population, agriculture still provides food for all people and acts as
    a backbone of the country. Nowadays, no proper guidance given to farmers and they
    are not able to analyze the nature of soil, disease of plant and its requirements.
    This leads to the depletion of farming in future. Crop diseases must be identified
    and prevented in order to increase the productivity. To overcome this, the nature
    of the soil is analyzed through various parameters like Nitrogen-Potassium-Phosphorus
    Content in soil, Humidity, Temperature, pH value of the soil, Rainfall using sensors,
    plants disease using cameras in real-time environment. These parameters are obtained
    using various IoT Sensors, cameras and existing Data, are analyzed through ML
    Algorithms. The proposed system consists of two modules in crop yield prediction
    system using the features NPP-WPF whereas NPP stands for Nitrogen-Potassium-Phosphorus
    and WPF stands for Water Content-Pesticide-Fertilizer, the Farmers can be guided
    with the details of the crop that is suitable for the soil and about Fertilizer,
    Pesticide, Water requirements. The second module called as automatic disease detection
    system uses CNN, ResNet, VGGNet, and Mobile net models to recognize and diagnose
    plant diseases from their leaves at the early stage. The proposed model is implemented
    with the dataset of 14 different species of plants and with the categorical classes
    of 38 classes. The result analysis shows that the suggested model provides accuracy
    of 98.2% when compared to the existing state-of-the-art methodologies. Published
    in: 2023 7th International Conference on I-SMAC (IoT in Social, Mobile, Analytics
    and Cloud) (I-SMAC) Date of Conference: 11-13 October 2023 Date Added to IEEE
    Xplore: 26 October 2023 ISBN Information: ISSN Information: DOI: 10.1109/I-SMAC58438.2023.10290468
    Publisher: IEEE Conference Location: Kirtipur, Nepal Funding Agency: SECTION I.
    Introduction Farming majorly contributes to the economy of India and future of
    human beings. It is the most important task which is needed for existence.[1]
    It also provides a substantial percentage of jobs, As the time passes the necessity
    for manufacturing has been expanding exponentially. Now a day new hybrid varieties
    are grown, but the lacking part is that it cannot match the nutrients of natural
    crops. These artificial procedures harm the soil. It pollutes the environment.
    These are done to prevent losses. Loss can be avoided if producers of the crops
    knows accurate information about the soil. Going by GOI data 30% land in India,
    i.e. 97 million hectares of agricultural land, is degraded. In the year 2014 to
    2015, India faced a loss of 2.5% due to the degradation of land. India’s Crime
    Record says that nearly 3 lakhs farmers have committed suicide in last 25 years.
    Agriculture is a field without technological development. The lethargic behaviour
    of farmers is the main reason for it. To accomplish this novel idea has been proposed.
    Using prior knowledge in temperature, weather and various other parameters about
    the soil is consider to find the future predictions. The growth of agriculture,
    associated technology has provided a plethora of newest information prospects.
    Cameras, sensors and other linked gadgets will acquire data twenty-four hours
    per day across a full farm or area. These are used to monitor humidity, temperature,
    soil condition. It produces more information’s. This permits farmers to get a
    lot better an enhanced comprehension of condition of problems on the bottom via
    modern technologies which will advise them further about their predicament more
    precisely and fast [5]. The data about the environment that is received by remote
    sensors are analysed using ML algorithms. Statistical data will help farmers in
    taking decision. The data input collected is directly proportional to outcomes
    predicted. And the intention is that farmers would employ these technologies to
    reach their goal of greater yield by producing better choices inside the field.
    Another important development in agriculture is the automated identification of
    leaf diseases using plant leaves. To increase agricultural productivity in a sustainable
    way, it is critical to identify crop leaf diseases as soon as possible. Producing
    enough food to meet societal demand is now possible due to developed technologies.
    The food and the crops'' safety and security, however, remained unachieved. Farmers
    face difficulties due to factors including climate change, a loss of pollinators,
    plant diseases, and others. The productivity and quality of crops are also positively
    impacted by the quick and precise detection of plant diseases [2]. Owing to the
    widespread production of agricultural products, even a pathologist and an agriculturist
    sometimes struggle to recognise plant diseases by looking at diseased leaves [3].
    Many approaches have been developed by researchers to address the problems [4],
    [5]. Using a variety of feature sets, machine learning can categorise plant diseases.
    Finding a hyperplane between data classes that separates each class is the goal
    of SVM [6]. Based on probability measures, an NB classifier provides predictions.
    It is predicated on the idea that the created features are unrelated to one another.
    An output network with a number of connected inputs called an ANN is based on
    the cells of the human neural system [7]. An input layer, middle layer, and output
    layer make up the network. By changing the weights; learning is accomplished [8].
    Though feature-based approaches produce good results, they have certain drawbacks,
    such as the time-consuming and intensive pre-processing required. On the other
    hand, method for automatically learning deciding and discriminative characteristics
    is deep learning-based techniques, in particular CNNs. Several convolutional layers
    make up deep learning (DL), which represents learning features from the data.
    A deep learning model can be used to detect plant diseases [9], [10]. The major
    challenges available in the earlier detection of plant disease are The quality
    of leaf image must be well defined For better accuracy the dataset should contain
    the required number of images The noise in the dataset must be removed by preprocessing
    The efficient model implementation for disease classification is also a major
    need. The various disease can be seen in different plants hence the detection
    is difficult The MobileNet model is designed to assess performance, a memory-efficient
    interface. The MobileNetV2 design will achieve excellent accuracy rates while
    minimising processing and parameter number [14]. Also, we assessed the effectiveness
    of this EfficientNet model by identifying plant illnesses. A VGG16 AND RESNET
    model was used to a transfer-learning-based CNN. We eliminated all layers from
    each model after the fully linked layer, freezing the layer weight before it.
    We employed a dropout layer with various dropout values after each batch normalization
    layer to avoid the architecture from overfitting. To acquire the best results,
    we adjusted the network''s parameters. We adjusted the various parameters and
    tested extensively. We tried several dropout values between 0.2 and 0.8, as well
    as varied batch sizes between 32 and 180. We evaluated the model with various
    learning rates of 0.01-0.0001 in order to optimise it. Several epochs were used
    to train the models. The performance of the proposed approach is evaluated using
    various sizes of batches of 32 to 180 in the developed Deep Learning architecture.
    The dataset used in the proposed approach contains the clearer and well-defined
    images. Also, the implemented VGG16 AND RESNET34 architectures are faster than
    existing architectures. The major contributions of the proposed approach are To
    Predict the right crop which suits the soil To assist the farmer in growing the
    right crop by giving appropriate guidance. Earlier identification of crop disease
    using efficient deep learning architectures Automatic identification and classification
    of disease based on the potential methods and algorithms Evaluation of proposed
    methodology by comparing its result with the state-of-the-art technologies. The
    scope and application of the work is to give idea to the farmer about the requirements
    of the crop and identify plant disease automatically to increase future production
    rate. SECTION II. RELATED WORK According to latest survey conducted towards the
    problem statements, the existing survey papers have provision to predict the crop
    that is suitable for particular soil, also about to enhance automatic plant leaf
    disease analysis and prediction. Some of the state of the art of existing works
    are highlighted here. An author in [1] used 2 different ML algorithms for predicting
    the crop yield. Support Vector Machine (SVM) and Linear Regression are those 2
    algorithms. Variable parameters can easily be validated using these 2 algorithms.
    Supervised models are the training models and they are faster than unsupervised
    models. Deep neural networks can be used for this process but they tend to reduce
    the speed as it involves more computational processes in analyzing the output.
    In paper [2], automatic drip irrigation was proposed. Each crops need a certain
    amount of water according to requirements which is calculated in this work. The
    automatic irrigation is made easy using the system based on Micro Controller.
    Weather and Soil nutrients are the parameters that are considered in calculating
    water requirements. Quantity of required Water is predicted. Sensors are used
    for drip irrigation. Moisture content in the field is maintained through this
    method. In future water supply to the crops may be automated. In paper [3], ML
    model is developed to find the utility of neural network. Evaluation of Artificial
    Neural Network is also done here. The analysis is basically between the actual
    and ANN. In work [4], a recommendation system for predicting the soil type and
    suitable crop that can be grown in it is developed. A IoT system is developed
    for it. The data are stored in a cloud. NPK Sensor, temperature, Humidity, PH
    sensors are used for collecting the data. These sensors get data from time to
    time and send it to cloud server. Decision Tree and SVM algorithms are used for
    the recommendation system. It gives suitable crop name according to the given
    input. This helps in farmers development. In [5] an author works on predicting
    or calculating the amount of crop production in that particular year for a particular
    field. A website is defined by the user to monitor these activities. Sensors are
    fixed to get all the required data. All the data are stored in a cloud. Further
    these data are processed. All living being depend on food, not only human. So,
    Crop production is a very important aspect. If the amount of Crop that can be
    produced is predicted earlier then farmer can plan accordingly. He may even make
    deals according to the market rates and fluctuations which helps farmers in large
    scale. In paper [6], system is developed to indicate farmers about the water need
    of the soil. This indication is sent through a email. Raspberry Pi is used as
    a connector. DHT 11 is the sensor which is used for detecting the humidity and
    temperature of the soil. This data stored in cloud. Decision tree is the algorithm
    which is used for predicting the results. These data are further saved in cloud
    for future usage. In paper [7], focuses on predicting the harvest date of crops.
    CNN is used to analyze old images of that particular crop. Solar radiation in
    future is calculated using websites. Both past data and future data are combined.
    Growth rate of the crop is estimated. Response is treated as Growth Rate. If the
    growth rate is 100 then the crop is ready for harvesting. In paper [8], proposes
    a system to predict the list of crops that can be cultivated in a particular soil.
    Many times farmers take a wrong decision in choosing the crops, due to which they
    face loss as that particular soil may not be suitable for it. So we are examining
    the climatic conditions and soil texture using which we are predicting the suitable
    crops. FC-28 is a sensor used to detect moisture in soil. DHT 11 is used in detecting
    humidity, temperature in soil. KG004 is the Rain Drop Sensor. REES52 is the PH
    Sensor. Gradient Boost, Logistic Regression, Random Forest, Decision Tree are
    the classification algorithms used. Gradient Boost gave better result. In paper
    [9], author predicting the correct use of fertilizers according to the soil location
    and nutrients level in the soil. For this first data are obtained from IoT devices
    then classification techniques like Naive Bayesian, Linear Supporting Vector Classification
    and KNN algorithms are used for predicting the fertilizer. KNN gave best result.
    In paper [10], Crop yield prediction comprises projecting the yield of that particular
    crop using old data like rainfall, humidity, temperature and Ph. Crop is predicted
    using these factors. It provides us a concept for the best expected crop that
    can be grown in the given circumstances. These predictions may be done using ML
    system like Random Forest. Which gave best predictions. Next survey is about plant
    leaf disease analysis and prediction. There are primarily two categories of plant
    diseases: biotic and abiotic. Biotic diseases are illnesses that are caused by
    creatures that live inside the body, such as bacteria, fungus, viruses, and insects.
    Abiotic plant diseases, on the other hand, are brought on by elements such as
    extremely high temperatures, excessive moisture, poor mildew, insufficient vitamins,
    poor soil pH, and greenhouse gases. It might be difficult to identify and classify
    such diseases and infections in plants since they are sometimes difficult to perceive.
    Additionally, a lot of plant illnesses and infections share symptoms with a lot
    of other plant diseases, making it difficult to identify the right condition in
    plants. In some instances, the analysis and disease detection process is difficult
    due to the odd indications and symptoms, such as abnormal leaf growth, colour
    distortion of the leaves, stunted growth, shrunk and damaged pods, etc. The authors
    in [15] used photographs of tomato leaves to diagnose illnesses. They employed
    an SVM classifier with various kernels using various geometric and histogram-based
    data from sick sections that were segmented. Three distinct soybean diseases were
    recognised. [16] utilising various colour and textural parameters. They employed
    backpropagation and a feed-forward neural network in [17] to recognise plant leaves
    and their illnesses. A network is accelerated and classification accuracy is increased
    using the bacterial-foraging optimisation approach. AlexNet and GoogleNet CNN
    architectures were utilised by the authors in to identify 26 distinct plant diseases.
    With the use of several CNN designs, authors in [18] were able to accurately classify
    58 distinct plant diseases. They used real-time photos to evaluate the CNN architecture
    as part of their strategy. A DL architecture was created in [19] to recognise
    13 distinct plant diseases. They trained CNN using the Caffe DL framework. In
    the area of agriculture, authors of [20] conducted a thorough investigation on
    the pros and cons of various DL strategies. The authors of [21] suggested a 9
    layered CNN model to detect plant illnesses. They increased the data amount for
    testing purposes using the Plant Village dataset and data-augmentation approaches,
    then they evaluated performance. The accuracy was assessed by the authors to be
    superior to that of a conventional machine-learning-based technique. The identification
    of leaf diseases through image processing has received a lot of attention throughout
    history, and it still draws researchers to conduct their study in this area. In
    recent years, automatic crop disease identification utilising image processing
    and machine learning has gained popularity. SVM with many classes was used for
    classification. Colour space conversion was followed by an improvement method
    by R. Meena et al. [22]. L*A*B is created from the primary colours of leaves.
    The segmentation algorithm is K-Mean clustering. For feature extraction and classification,
    the GLCM and SVM are employed, respectively.3 distinct soybean illnesses were
    identified from healthy-leaf photos using pre-trained AlexNet and GoogleNet with
    customised hyper parameters. In [23] they used dix pretrained models (VGG16, AlexNet,
    VGG19, DenseNet201, ResNet101, and GooLeNet) to detect distinct plant diseases.
    In [24], several eggplant illnesses were categorised using SVM and VGG16 as the
    feature extractor. Performance was assessed using a variety of colour schemes
    utilising RGB pictures, the maximum accuracy of 96.4% was attained. Using methods
    from deep forests, the authors of [25] distinguished between healthy leaves and
    maize-leaf illnesses. They used a method that included varying the deep forest
    hyperparameters. They then compared the outcomes to those of conventional machine
    learning models like KNN, LR,RF, and SVM. In order to identify plant diseases,
    they examined several deep-learning architectures [26]. TO increase the accuracy
    the authors used transfer learning on pre-trained models of deep learning [27].
    The reminder of the paper is organized such a way that section 3 denotes the proposed
    methodology. Section 4 denotes the results and discussions and section 5 denotes
    the conclusion section. SECTION III. PROPOSED ARCHITECTURE MODEL Figure 1 gives
    the proposed architecture model and its components are explained in details further.
    Figure 1: Proposed Architecture Model Show All 3.1 Dataset Collection: Collecting
    data from IoT environment, helps to capture record of previous instances. Using
    the collected data, we can infer knowledge by applying Machine Learning and Deep
    Learning Concepts. Models that predict are better as the data using which they
    are generated, thus better data acquiring procedures becomes vital to construct
    high-performing models. In Crop Yield Prediction module, existing data are collected
    from Kaggle dataset archives. This dataset is having 2000 rows with different
    features. The attributes collected from IoT Sensors are explained in Table1. Table
    1 Feature Selection In Plant leave disease analysis module, \"New Plant Diseases
    Dataset\" taken from the publicly available Kaggle website. The dataset contains
    the images of healthy and infected plants of various species. Each species contains
    different classes. There are pictures of various healthy and diseased crop leaves
    in this image file. The train folder will be used to create the training and validation
    datasets, while the valid folder will serve as the test dataset. The training
    and validation dataset are constructed after the dataset has been created. 30%
    of the entire dataset will be used as validation data. Using high quality camera
    ,we can get plant picture in Smart Farm location in Real-time and apply our disease
    detection system software to identify disease. 3.1.1 IoT Environment : ( Hardware
    components used for data collections in Real-Time) a. ARDUINO: Figure 2. Arduino
    UNO Board Show All Fig 2 Arduino is a micro-controller. It contains 14 digital
    I/O pins, 6 inputs for analogue, 1 ceramic resonator which is 16 Mega Herzt, 1
    Universal Serial Bus(USB) connector, 1 Power connector, 1 ICSP header and 1 special
    button for resetting. It has everything required to support the microcontroller;
    just connect it with computer using a USB wire. It can be easily tampered and
    if it is damaged also it can replaced at low cost. Contemporary Arduino is based
    on UNO board. It is a first version. Aruduino is a independent product. It is
    very less expensive and user friendly. It’s software is also open sourced, so
    any one can access it easily and can be used in major area based on simplicity.
    b. NODE MCU: Figure 3. Node MCU Part Show All ESP8266 Specifications: 32-bit CPU:
    Tensilic at 80 MHz 64 KB RAM and 96 KB of data RAM QSPI flash -512 KB -4 MB IEEE
    bgn Wifi WPA/WPA2 for authentication 16 GPIO SPI and I2C I2S is interfaced DMA
    UART is on pins that are dedicated 1x10 bit ADC 3xPWM c. DHT11: DHT11 is simple,
    very low-cost digital humidity, temperature sensor. It employs a thermistor for
    monitoring the air and a humidity sensor, then puts a digital signal. Its extremely
    easy to use, but takes proper timing to gather data. The significant negative
    of the sensor is that, it collects fresh data for 2 seconds. So after 2 seconds
    the data becomes outdated. Comparing with DHT22, DHT11 sensor is less accurate,
    operates between a limited range of temperature or humidity, but this is smaller.
    It is also very cheap. 3V -5V power ,2.5mA is the maximum current usage, Best
    for 20-80% humidity ,Best for 0-50°C temperature ,Sampling rate should not go
    beyond 1 Hz ,Size of the body should be 15.5mm, 12mm, 5.5mm ,4 pins d. NPK Sensor:
    This NPK sensor is appropriate for measuring the level of nitrogen, potassium,
    phosphorous in that particular soil. It assists in assessing the fertility of
    the soil hence simplifying the systematic evaluation of the soil condition. Ratio
    is determined by dividing N,P,K value using least value of these 3. The range
    of the NPK Sensor is 0-1999mg/kg, and humidity is 5%-95%. The highest usage of
    power will be less than 0.15W. Figure 4: Sample Working Model Show All Figure
    5: Model output with N,P,K readings Show All Figure 7, ref [41] gives block diagram
    of IoT environment for collecting plant leaves in real-time and identifying disease
    in future. Figure 7. Block Diagram of IOT Sensor Environment for plant disease
    detection in Real-Time Show All 3.2 Data Preprocessing: The cleaning of data occurs
    during pre-processing. That is the most crucial step in developing a more accurate
    prediction model. In pre-processing stage Data sets are acquired and missing data
    values are removed , required data sets and libraries are imported, categorical
    data are encoded then it is divided into training and testing after data preparation.
    Finally feature scaling is applied .The photos are loaded, reduced in size to
    128 * 128 (256 * 256 requires processing time), then converted to tensors. Two
    visualizations for a given Pandas data frame df. The first visualization is a
    grid of histograms for each feature in the data frame. The histograms are arranged
    in a 3x3 grid, and each histogram has 12 bins. The fig size parameter sets the
    size of the plot. The second visualization is a heatmap of the correlation matrix
    of the data frame. The correlation matrix shows the pairwise correlation coefficients
    between all pairs of features in the data frame. The annot=True parameter displays
    the correlation coefficients on the heatmap. The plt.title function sets the title
    of the plot. 3.3 Crop Yield Prediction Module: First comparative Analysis was
    done with existing Machine Learning algorithms such as Random Forest, KNN, Gradient
    Boost, XG Boost, SVM. The accuracy was in Range of 96-98%. Here the data are collected
    in real-time using Sensors in live mode. The obtained data are stored in cloud
    in a website called Ubidots. These data are applied to website. Front end of the
    website is the part with which the user instantly interacts. Flask is used for
    constructing web apps using python. First work is importing Flask class, then
    construct an instance of class. The ‘name’ option is supplied which is the name
    of the application’s module or package. Flask requires this to learn where to
    search for resources like static files, templates. The route() decorator instruct
    Flask to identify the URL that activate our function. This function returns message
    that will be displayed to the user. 3.4 Leaf Disease Detection Module : In the
    beginning a base image classification was defined that will have features for
    each batch of data''s training and validation. This will avoid developing these
    routines repeatedly and allow us to build multiple CNN (Convolution Neural Network)
    models. This model is sub-type of Artificial Neural Network, mainly used for image
    processing applications. So Leaf Disease detection module, CNN Architecture are
    developed by inheriting the basic class. Conv2D, Relu, Maxpool2D, and Linear Layers
    are used to create a multi-layer CNN model from scratch. The model was created
    using PyTorch. Three models were employed: a) Combining linear layers with a multilayer
    CNN b) Max Pooling and c) Flatten Linear Layers, and CNN Layer makes up the CNN
    model architecture. Variations of the aforementioned layers indicated in the model
    construction process were used to train the model, along with different hyperparameters.
    The top model was able to obtain a test accuracy of 98.42%. The entire dataset
    is splitted into training and testing dataset. 17572 photos from 38 classes in
    total were used to test the model. The prediction model applied to test photos.
    Several Model Architectures were attempted, along with Learning Rate and Optimizer,
    and these models produced varying degrees of accuracy. To train the model, we
    employ the optimizer \"Adam\" with a learning rate of 0.001. Once the model has
    been trained, the model must be evaluated to determine how well it performs with
    hypothetical test data. With the model and test data, we will use the evaluate
    (model, test loader) method. Figure 8. Classification of leaf disease Show All
    3.3 Training Model: In this model the sample input is ran through the given algorithm
    to synchronize the actual and sample output. Result coming out of the correlation
    can be utilized to adjust the model. This is iterative process. It is called model
    fitting. The correctness of the training dataset is crucial for the precision
    of the model. Training Model in ML is the process of supplying an ML algorithm
    using data to help find, get suitable values for all characteristics involved.
    3.4 Testing Model: In this model test data is used to train the ML model. Equations
    1.1 to 1.4 gave performance measures in various ML Models. Accuracy The most widely
    used statistic to assess a model and is really not a clear predictor of the performance.
    The worst comes when classes become uneven. TP+TN TP+FP+TN+FN (1.1) View Source
    Precision Percentage of +ve cases from the total predicted +ve incidents. TP TP+FP
    (1.2) View Source Recall/Sensitivity/True Positive Rate Percentage of +ve cases
    from the total actual +ve incidents. TP TP+FN (1.3) View Source F1 score Mean
    of precision and recall. Both contributes here. 2 1  precision  + 1  recall  =
    2∗ precision ∗ recall   precision + recall  (1.4) View Source SECTION IV. RESULTS
    AND DISCUSSIONS The created website gives appropriate details about the Crop,
    Water Requirement, Fertilizer and Pesticide needs of the crop based on given input
    during crop yield prediction time. Nitrogen-Pottasium-Phosphorous content, Ph
    level in the soil, Humidity-Temperature in that area, Rain-fall in that area are
    given as input. The accuracy rate obtained are Random forest-98%, KNN-96.6%, AdaBoost-97.2%,
    Gradient Boost-96.3%, SVM-94.7% algorithms are compared and out of this Random
    forest gave better accuracy of 98%. Table 2: Comparative Analysis Table Figure
    8: Accuracy Analysis Chart Show All The Leaf Disease detection module, Deep learning
    algorithms have lately achieved significant advancements in the early detection
    and diagnosis of plant diseases. Traditional methods of identification depend
    largely on a number of variables, including feature extraction, disease area segmentation,
    and image enhancement. Our strategy is focused on the detection of diseases utilising
    a transfer-learning strategy based on deep learning. The implemented model using
    CNN, VGG-16, and RESNET-34 has achieved an accuracy of 98.42%. As per the given
    paper out of the 7 parameters 5 are taken using DHT11 and NPK Sensor. Ph in that
    particular soil and Rain-fall in that particular area is taken from existing data.
    Ph and Rainfall detection sensor is very expensive in nature, So in future separate
    Sensors can be added to measure these parameters. In this project we have used
    Arduino for linking the sensors. Aruduino is a independent product. It is very
    less expensive. It’s software is also open sourced, so any one can access it.
    It just has a micro controller with it. In the future Rasberry pi can be used
    in this project. Rasberry pi works like a computer, so enhancement will be easy
    when Rasberry pi is used. On the other hand Rasberry pi is very expensive. Raberry
    pi has a separate OS for it. When we need to take 7 parameters usage of Rasberry
    pi becomes essential. We have designed a webpage for this purpose, in future a
    Mobile app can be developed for farmers. Mobile app will be more convenient for
    usage. Now we are manually feeding the data to the website after getting the data
    from sensors, but in future automatic data uploading methods can be improved for
    better usage. Crops gets diseases in when it is grow, to find it and rectify it
    a model can be improved and merged with the existing model. So that when some
    crops or plants are affected by disease in the middle of a season farmers can
    be helped by giving them a brief about the disease. Further they can be assisted
    by providing a good solution for them, like the usage pesticides in the middle
    of a season. In some cases short term crops may be affected by poor watering like
    not watering the crops. In such cases farmers can be assisted by telling them
    how much amount of water need to be provided more to the plants to overcome this
    issue. Banana plant face this issue often. These cases may be considered and developed
    in future. These can be included in the existing Webpage as a future enhancement.
    Figure 4. Training and Validation Loss Show All Figure 5. Training and Validation
    Accuracy Show All SECTION V. CONCLUSION AND FUTURE ENHANCEMENT This work is focused
    on getting direct and live data from field. The obtained data are stored in cloud
    in a website called Ubidots. These data are applied to website which helps farmers
    about the suitable crop that can be procured also used to identify disease in
    plant well in adnace. This reduces agricultural losses and debts that arise due
    to improper farming. The created website gives appropriate details about the Crop,
    Water Requirement, Fertilizer and Pesticide needs of the crop based on given input.
    Nitrogen-Pottasium-Phosphorous content, Ph level in the soil, Humidity-Temperature
    in that area, Rain-fall in that area are given as input. Random forest-98%, KNN-96.6%,
    AdaBoost-27.2%, Gradient Boost-96.3%, SVM-94.7% algorithms are compared and out
    of this, Random Forest gave better accuracy of 98%. As per the given paper out
    of the 7 parameters 5 are taken using DHT11 and NPK Sensor. Ph in that particular
    soil and Rain-fall in that particular area is taken from existing data. So, in
    future separate Sensors can be added to measure these parameters. We have designed
    a webpage for this purpose, in future a Mobile app can be developed for farmers.
    Mobile app will be more convenient for usage. Now the data is feed manually to
    the website after getting the data from sensors, but in future automatic data
    uploading method can be improved for better usage. In next plant disease detection
    module Three different deep learning models and transfer learning (CNN, VGG-16,
    RESNET-34) models are used to detect the plant diseases using images of the leaves
    of the plants. While the dataset used for the study comprised a variety of plant
    species, diseases, and picture collection settings, many of the samples were too
    small for the CNN to fully capture the traits and variations specific to each
    class. Although this makes it impossible to deploy the trained networks in practice,
    those restrictions provided a wealth of data that can be used in further research
    on the subject. The primary takeaway from this work is that CNNs are effective
    instruments that can effectively address plant pathology issues. It is quite difficult
    to create databases that are detailed enough for the development of truly robust
    technologies. The accuracy of the proposed approach is 98.2%. While some initiatives
    are utilising social network concepts to speed up the process, there is still
    much work to be done. In future, this can be taken as the advanced research direction
    of the research work. ACKNOWLEDGMENT We thank all the authors who helped really
    to complete this work. And our sincere thanks to SRM Institute of Science and
    Technology for providing us the hardware and software platform, to complete this
    project work without any issues. We thank all the supporters who helped sincerely
    for completing this proposed work. Authors Figures References Keywords Metrics
    More Like This Monitoring of Plant Growth Using Soil Moisture and Temperature
    Sensor and Camera 2022 45th Jubilee International Convention on Information, Communication
    and Electronic Technology (MIPRO) Published: 2022 UHF IoT Humidity and Temperature
    Sensor for Smart Agriculture Applications Powered from an Energy Harvesting System
    2022 IEEE International Conference on Internet of Things and Intelligence Systems
    (IoTaIS) Published: 2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 7th International Conference on I-SMAC (IoT in Social, Mobile, Analytics
    and Cloud), I-SMAC 2023 - Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Deep Learning for Plant Disease Detection and Crop Yield Prediction based
    on NPP-WPF Analysis in Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Jiménez-López F.R.
  - Castellanos-Patiño J.S.
  - Jiménez-López A.F.
  citation_count: '0'
  description: Potatoes are one of the staple foods in Boyacá and play an important
    role in family nutrition and food security in Colombia. Therefore, timely and
    accurate information on the irrigation of this crop is relevant in agricultural
    decision-making, the sustainable development of its production and the reduction
    of unnecessary water consumption. This study estimated the irrigation prescription
    of a potato crop from crop meteorological information with the support of IoT
    technologies to solve the problem of inefficient water dosing in the crop. Two
    deep learning models were developed, a One-Dimensional Convolutional Neural Network
    (1D-CNN) and a short-term long-term memory neural network (LSTM). Training data
    was collected daily from a potato crop from 2018 to 2020 using two weather stations
    located in the UsoChicamocha irrigation district. To predict irrigation prescriptions,
    deep learning architectures were trained using Python® by selecting input climatic
    variables measured with a subsystem of sensors installed in the crop and an actuation
    subsystem with control of Latch-type solenoid valves, both remotely controlled
    wirelessly. The algorithms were validated by calculating precision metrics such
    as MSE and coefficient of determination. The results showed that the LSTM model
    surpassed the 1D-CNN model, obtaining training and validation errors less than
    0.096 and presenting greater precision in the estimation of crop irrigation, giving
    a coefficient of determination R2 between 0.881 and 0.919. Irrigation prediction
    algorithms using deep learning techniques achieved promising results and serve
    as a decision support tool for farmers to automatically decide when and how much
    water to irrigate.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Proceedings of the LACCEI international Multi-conference for Engineering,
    Education and Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Forecasting irrigation scheduling based on deep learning models using IoT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ba-ichou A.
  - Waga A.
  - Bekri A.
  - Benhlima S.
  citation_count: '0'
  description: The agricultural sector is the largest consumer of water resources
    compared to all other sectors. For effective planning of irrigation systems in
    agriculture, plant water requirements are a factor that must be calculated accurately.
    The evapotranspiration reference (ET0) is used to calculate the real need for
    water of a given plant. The calculation of ET0 poses a challenge given the limited
    availability of meteorological data and the consequent number of variables that
    enter into its equation. In order to estimate the ET0 using only a few parameters,
    we have developed machine learning models such as SVR, RF and deep learning, namely
    long-term memory (LSTM), based on a time series of climate data. In this present
    work we will present the result of the best model -the LSTM-. The data used in
    this study were obtained from our weather station, including maximum air temperature
    (Tmax), minimum air temperature (Tmin), average relative humidity (RH), average
    solar radiation (SR) and average wind speed. (u2). Our proposed model was trained
    and tested on two global scenarios, A and B. Scenario A consists of 8 different
    combinations which are generated from the collected data, while Scenario B additionally
    contains combinations of data from Scenario A the day of the year as a new variable.
    ET0 calculated using the FAO Penman Monteith approach was taken as the output
    of our model. Good results were obtained for all the combinations of data used
    in this study, in particular those of scenario B.
  doi: 10.1007/978-3-031-35248-5_12
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home International Conference
    on Advanced Intelligent Systems for Sustainable Development Conference paper Estimated
    Daily Reference Evapotranspiration Using Machine Learning and Deep Learning Based
    on Various Combinations of Meteorological Data Conference paper First Online:
    03 June 2023 pp 128–135 Cite this conference paper Access provided by University
    of Nebraska-Lincoln Download book PDF Download book EPUB International Conference
    on Advanced Intelligent Systems for Sustainable Development (AI2SD 2022) Ayoub
    Ba-ichou, Abderrahim Waga, Ali Bekri & Said Benhlima  Part of the book series:
    Lecture Notes in Networks and Systems ((LNNS,volume 713)) Included in the following
    conference series: International Conference on Advanced Intelligent Systems for
    Sustainable Development 175 Accesses Abstract The agricultural sector is the largest
    consumer of water resources compared to all other sectors. For effective planning
    of irrigation systems in agriculture, plant water requirements are a factor that
    must be calculated accurately. The evapotranspiration reference (ET0) is used
    to calculate the real need for water of a given plant. The calculation of ET0
    poses a challenge given the limited availability of meteorological data and the
    consequent number of variables that enter into its equation. In order to estimate
    the ET0 using only a few parameters, we have developed machine learning models
    such as SVR, RF and deep learning, namely long-term memory (LSTM), based on a
    time series of climate data. In this present work we will present the result of
    the best model -the LSTM-. The data used in this study were obtained from our
    weather station, including maximum air temperature (Tmax), minimum air temperature
    (Tmin), average relative humidity (RH), average solar radiation (SR) and average
    wind speed. (u2). Our proposed model was trained and tested on two global scenarios,
    A and B. Scenario A consists of 8 different combinations which are generated from
    the collected data, while Scenario B additionally contains combinations of data
    from Scenario A the day of the year as a new variable. ET0 calculated using the
    FAO Penman Monteith approach was taken as the output of our model. Good results
    were obtained for all the combinations of data used in this study, in particular
    those of scenario B. Keywords Machine learning Support vector regression Precision
    agriculture Deep learning Access provided by University of Nebraska-Lincoln. Download
    conference paper PDF Similar content being viewed by others A novel method for
    estimating daily evapotranspiration based on one, two, and three-day meteorological
    records using the long short-term memory model combined with feedforward neural
    networks Article 14 November 2023 Forecasting daily evapotranspiration using artificial
    neural networks for sustainable irrigation scheduling Article 23 October 2021
    Advanced learning models for estimating the spatio-temporal variability of reference
    evapotranspiration using in-situ and ERA5-Land reanalysis data Article 17 October
    2023 1 Introduction Evapotranspiration (ET) is the sum of two distinct processes,
    the first is the conversion of liquid water from the soil surface to water vapors
    (evaporation) and the second is plants transpiration. ET estimation helps farmers
    manage their water resources. To estimate ET for a given culture, it is necessary
    to estimate the reference evapotranspiration ET0. Among the different methods
    for estimating ET0 from meteorological data, the FAO''s Penman-Monteith method
    is the most widely used and recommended by many studies [1]. The FAO Penman-Monteith
    method requires several meteorological parameters such as temperature, wind speed,
    solar radiation and relative humidity, which makes their calculation complex due
    to the unavailability of certain settings in some local weather stations. To solve
    this challenge, artificial intelligence techniques such as Machine Learning (ML)
    and Deep Learning (DL) are used to estimate ET0 with as few parameters as possible.
    Several ML, DL algorithms have been developed to estimate ET0 with minimal selection
    of climatic parameters, such as artificial neural network [2], multivariate adaptive
    regression splines, [3], support vector machine, XGBoost, random forest, [3,4],
    k-nearest neighbor [5], deep neural network [6], convolutional neural network
    [7,8]. All these techniques give good results, compared to empirical models based
    on the minimum of meteorological data. Most of these techniques do not view the
    calculation of ET0 as a time series problem, although several climate variables
    related to ET0 have seasonal variability and can be analyzed as a time series
    problem. Recurrent neural networks (RNN) were then introduced to analyze and process
    the data taking into account time [9]. LSTM neural network, an advanced type of
    RNN, was introduced to solve the leakage gradient problems of RNNs, with the ability
    to store large information composed of long sequences [10]. LSTMs are used in
    several fields, namely speech recognition, video processing and word processing.
    The use of LSTMs in the field of hydrology has not been widely mentioned in the
    literature, but it is recommended to use it since the variables used in hydrology
    represent a time series. Many studies have examined the performance of LSTMs,
    including rainfall runoff modeling [11] and reconstruction of missing groundwater
    [12]. Estimation of ET0 based on advanced RNN techniques is still limited based
    on the literature. Therefore, this study presents a comparison between machine
    learning models and an architecture based on the LSTM neural network for the prediction
    of the reference evapotranspiration ET0 based on different meteorological data
    scenarios. 2 Materials and Methods 2.1 Dataset and Data Combinations Data used
    in this study was collected from three meteorological stations located in Morocco:
    Meknes1 (latitude: 33o85i N, longitude: − 5o57i O, elevation above sea level:
    557 m), Meknes2 (latitude: 33,843199, longitude: −5,473981, elevation above sea
    level: 631,9 m), and Berkan (latitude: 34,993081, longitude: 2,263735, elevation
    above sea level: 110). We have obtained a time series of daily climate between
    2016 and 2022, including, maximum air temperature (Tmax), minimum air temperature
    (Tmin), mean relative humidity (RH), mean solar radiation (SR) and mean wind speed
    (u2). The collected data were divided into two main scenarios A and B. Scenario
    A contains 8 different input combinations of climate data, namely: (1): (Tmax,
    Tmin, RH, U2); (2) (Tmin, Tmax, SR, RH); (3) (Tmax, Tmin, SR); (4) (Tmax, RH);
    (5) (Tmax,Tmin); (6)( Tmax, SR); (7)(Tmin, SR); (8) (SR).The second scenario (B),
    in addition to the combinations of scenario A, we have added an additional input:
    the day of year variable. To develop a machine and deep learning models, the need
    of training and testing data is necessary. To obtained such data (local data)
    we combine the stations Mek1 and Mek2 randomly. This local data has been divided
    into two subsets, 80% for training and 20% for testing the performance and effectiveness
    of the model. Data of Berkane station (non-local data) has been used to validate
    the developed model. 2.2 Data Cleaning With regard to the cleaning of the data,
    the lines where the minimum temperature was higher than the maximum temperature
    were deleted; relative humidity out of range 0–100%; minimum relative humidity
    higher than maximum relative humidity; negative wind speed; negative solar radiation;
    or solar radiation higher than extraterrestrial radiation, in addition to filling
    in the missing ET0 values by a direct calculation based on the formula of the
    FAO-56 Penman-Monteith (FAO56-PM) equation (Allen et al. [1]). 2.3 Computation
    of Reference Evapotranspiration ET0 From our local weather station, meteorological
    parameters namely air temperature, wind speed, relative humidity and solar radiation
    were used to calculate the reference evapotranspiration ET using the FAO-56 model
    Eq. (1) Allen et al. [1]. $$ {\\varvec{ET}}0 = \\frac{{0.408\\Delta \\left( {{\\mathbf{R}}_{{\\mathbf{n}}}
    { } - {\\mathbf{G}}} \\right) + {{\\varvec{\\upgamma}}}\\left( {\\frac{900}{{{\\text{T}}
    + 273}}} \\right){\\text{u}}_{2} \\left( {{\\text{e}}_{{\\text{s}}} { } - {\\text{e}}_{{\\text{a}}}
    } \\right){ }}}{{\\Delta { } + { }\\gamma \\left( {1{ } + { }0.34{\\text{u}}_{2}
    } \\right)}} $$ (1) where ET0 is the Reference Evapotranspiration (mm d − 1),
    G is the soil heat flux (MJ m − 2d − 1) (for daily estimates G = 0), Rn is the
    net solar radiation (MJ m − 2d − 1), T is the daily mean air temperature (°C),
    \\(u_{2}\\) is the mean wind speed at a 2m height (m s − 1), (es − ea) is the
    vapor pressure deficit (kPa °C − 1), is the psychrometric constant (kPa °C − 1),
    and ∆ is the slope of the saturation vapor pressure function (kPa °C − 1). 2.4
    Long Short-Term Memory Neural Network Recurrent neural networks (RNNs) is a kind
    of artificial neural network mainly used in speech recognition and text processing.
    RNNs are designed to recognize sequential features needed to predict the most
    accurate next scenario. LSTM that has been proposed by Hochreiter and Schmidhuber
    [10] is a type of RNNs that has advantages over the traditional RNN. They were
    developed to process sequential data in general by taking into account the information
    of the previous times (t−1, t−2,…) to process the information of the time t [13].
    Our model was trained, tested on all input combinations of scenario A and B. The
    architecture of the proposed model was composed of two LSTM layers and three dense
    layers, one before LSTM layers, and two after. During hyperparameter tuning phase,
    various architectures were studied: The first and the second LSTM layers with
    30, 40, 64 and 128 LSTM units in each one; The dense layer, the first and the
    second before output layer with 30, 40, 64 and 128 units. In addition, different
    activation functions were used and tested, including, linear function, RELU function
    and mish activation function. Other hyperparameters were tested such as, batch
    size and dropout rate. The best architecture that gives a good result is composed
    of: The first dense layer with 64 neurons, followed by two LSTM layer, with 64
    units on each one, and another dense layer with 64 neurons, followed by another
    dense layer that is the output layer with 1 neuron (output variable of the model).
    For the first and the second dense layer, mish activation function was used, while
    the linear activation function was used for the third dense layer. To avoid overfitting,
    a dropout of 0.1 was used with the first LSTM layer, and 0.2 with the second LSTM
    layer. To optimize the algorithm, we used Adam [14] with a learning rate of 0.01
    and a batch size of 64, with maximum learning periods equal to 200. 2.5 Evaluation
    Metrics The model loss was evaluated by the mean squared error (MSE), considered
    as a popular error metric, which is the mean of the squared differences between
    actual and predicted target, and calculate by the following formula: $$ {\\text{MSE}}
    = \\frac{1}{n}\\mathop \\sum \\limits_{i = 1}^{n} \\left( {{\\text{ET}}_{{0,{\\text{e}}}}
    {\\text{ i}} - {\\text{ET}}_{0} {\\text{i}}} \\right)^{2} { } $$ To examine the
    performance and efficiency of our model, other popular metrics were used such
    as mean absolute error (MAE), root means square error (RMSE) and coefficient of
    determination R2, which are used in several studies to evaluate the performance
    and power of machine learning models. $$ {\\text{MAE}} = \\frac{1}{n}\\mathop
    \\sum \\limits_{i = 1}^{n} \\left| {{\\text{ET}}_{{0,{\\text{e}}}} {\\text{i }}
    - {\\text{ET}}_{0} {\\text{i}}} \\right|{ } $$ $$ {\\text{RMSE}} = \\sqrt {\\frac{1}{n}\\mathop
    \\sum \\limits_{i = 1}^{n} \\left( {{\\text{ET}}_{{0,{\\text{e}}}} {\\text{i}}
    - {\\text{ ET}}_{0} {\\text{i}}} \\right)^{2} { }} $$ $$ R^{2} = \\frac{{\\mathop
    \\sum \\nolimits_{i = 1}^{n} \\left( {{\\text{ET}}_{0}^{i} { } - { }\\overline{{{\\text{ET}}_{0}^{i}
    }} { }} \\right)\\left( {{\\text{ET}}_{{0,{\\text{e}}}} {\\text{i}} - { }\\overline{{{\\text{ET}}_{{0,{\\text{e}}}}
    {\\text{i}}}} { }} \\right){ }}}{{\\sqrt {\\mathop \\sum \\nolimits_{i = 1}^{n}
    \\left( {{\\text{ET}}_{0}^{i} { } - { }\\overline{{{\\text{ET}}_{0}^{i} }} { }}
    \\right)\\mathop \\sum \\nolimits_{i = 1}^{n} \\left( {{\\text{ET}}_{{0,{\\text{e}}}}
    {\\text{i}} - { }\\overline{{{\\text{ET}}_{{0,{\\text{e}}}} {\\text{i}}}} { }}
    \\right)} }} $$ where n, ET0i, ET0,ei, \\(\\overline{{{\\text{ET}}_{0}^{i} }}
    {\\text{ and }}\\overline{{{\\text{ET}}_{{0,{\\text{e}}}} {\\text{i}}}} { }\\),
    are the number of samples, actual value of the reference evapotranspiration calculated
    by Eq. (1), predicted value, mean of the actual value, mean of the predicted value,
    respectively at the i-th time. 3 Results and Discussion 3.1 Scenario A The proposed
    model was trained and tested with all input’s combinations without day of year
    (scenario A). The results show the ability of the model to describe the non-linear
    relationship between the data to estimate daily ET0. Table 1 presents the performance
    metrics of the model during the training and testing period for the estimation
    of daily ET0, including R2, MAE, MSE and RMSE. Table 1. LSTM model results for
    eight different input data combinations for scenario A Full size table Our model
    shows good results in all input combinations, but the best one corresponds to
    the input combination (1) with five climate parameters (R2 = 0.9915, MAE = 0.1016,
    MSE = 0.0180 and RMSE = 0.1342) on the training data, and (R2 = 0.9905, MAE = 0.1080,
    MSE = 0.0213 and RMSE = 0.1459) on the testing data. Scenario (8) using just (SR)
    as input data gives also closer results to the scenario (1) with R2 of 0.9767,
    MAE of 0.1656, MSE of 0.0496 and RMSE of 0.2228 on the training data, and R2 of
    0.9830, MAE of 0.1472, MSE of 0.0365 and RMSE of 0.1922 on the testing data. 3.2
    Scenario B To enrich our database, we sometimes need to extract variables from
    other existing variables in the data. This is the case of the scenario B, in addition,
    to the same input’s combination of scenario A, we have added a day of year variable.
    This variable means the position of the day in the year, which can be easily,
    extracted from the time step. Table 2 presents the performance metrics of the
    model during the training and testing period on inputs combinations of scenario
    B. Table 2. LSTM model results for eight different input data combinations for
    scenario B Full size table Our model has been trained, tested on the eight scenarios
    of data combinations. Good results have been obtained compared to scenario A.
    For example, scenario (6) which uses just (Tmax, SR) as input data, when adding
    day of year as a 3rd variable, R2 has in- max R creased from 0.9660 to 0.9908,
    MAE, MSE and RMSE were minimized from 0.2114 to 0.1034, 0.0727 to 0.0196 and 0.2697
    to 0.1402, respectively for the training data, and R2, MAE, MSE and RMSE from
    0.9649 to 0.9897, 0.2191 to 0.1184, 0.0781 to 0.0227 and 0.2795 to 0.1508, respectively
    for the testing data. 3.3 Model Validation To valid the best obtained model (scenario
    B combination 6), we have used the non-local data (from Berkane). The results
    indicate an increase in R2 and a decrease in MAE, MSE and RMSE. Figure 1 shows
    a plot for the ET0 calculated by the station and estimated by our model. Fig.
    1. A figure plot for the calculated and estimated ET0 Full size image 4 Conclusion
    Evapotranspiration is considered as a non-linear and complex process because its
    calculation depends on several meteorological parameters. Various models have
    been developed to estimate the reference evapotranspiration ET0 using available
    meteorological data. The standard equation used by different studies is the FAO
    Penman-Monteith. This study proposes an architecture based on advanced type of
    RNNs called LSTM neural network in order to estimate the reference evapotranspiration
    ET0. Based on the input data, two scenarios A and B of the proposed model has
    been trained and tested. Both scenarios are composed of 8 distinct meteorological
    input data combinations. Concerning the scenario B, in addition to the input data
    of scenario A, we have added the day of year variable which represents the number
    of the day in the year. Scenario B of our model shows good results compared to
    scenario A on all input data combinations. The obtained results shows that data
    combinations including solar radiation parameter gives good results than others.
    The continuity of this study consists in integrating our proposed model with additional
    factors such as crop coefficient Kc and others to a real time application in order
    to detect the need of water for a specific crop in our region. References Allen,
    R.G., Pereira, L.S., Raes, D., Smith, M.: Crop Evapotranspiration Guidelines for
    Computing Crop Water Requirements. FAO Irrigation and Drainage, Paper No. 56,
    Food and Agriculture Organization of the United Nations, Rome (1998) Google Scholar   Mohamed,
    A.Y., Alazba, A.A., Mohamed, A.M.: Artificial neural networks versus gene expression
    programming for estimating reference evapotranspiration in arid climate. Agric
    Water Manag. 163, 110–124 (2016) Article   Google Scholar   Saeid, M., Javad,
    B.K, K.: Using MARS, SVM, GEP and empirical equations for estimation of monthly
    mean reference evapotranspiration. Comput. Electron. Agric. 139, 103–114 (2017)
    Google Scholar   Junliang, F., et al.: Evaluation of SVM, ELM and four tree-based
    ensemble models for predicting daily reference evapotranspiration using limited
    meteorological data in different climates of China. Agric. For. Meteorol. 263,
    225–241 (2018) Article   Google Scholar   Sevim, S.Y., Mladen, T.: Estimation
    of daily potato crop evapotranspiration using three dif- ferent machine learning
    algorithms and four scenarios of available meteorological data. Agric Water Manag
    228, 105875 (2020) Article   Google Scholar   Mandeep, K.S., Sushma, J.: Reference
    evapotranspiration estimation and modeling of the Punjab Northern India using
    deep learning. Comput. Electron. Agric. 156, 387–398 (2018) Google Scholar   Patrícia,
    D.O.L., Marcos, A.A., Petrônio, C.L.S., Frederico, G.G.: Reference evapotranspiration
    time series forecasting with ensemble of convolutional neural networks. Comput.
    Electron. Agric. 177, 105700 (2020) Article   Google Scholar   Lucas, B.F., Fernando,
    F.D.C.: New approach to estimate daily reference evapotranspiration based on hourly
    temperature and relative humidity using machine learning and deep learning. Agric.
    Water Manag. 234, 106113 (2020) Article   Google Scholar   Lipton, Z.C., Berkowitz,
    J., Elkan, C.: A critical review of recurrent neural networks for sequence learning.
    arXiv, 1506.00019 (2015) Google Scholar   Hochreiter, S., Schmidhuber, J.: Long
    Short-Term Memory. Neural Computation, pp. 1735–1780. MIT Press (1997) Google
    Scholar   Hu, C., Wu, Q., Li, H., Jian, S., Li, N., Lou, Z.: Deeplearningwithalongshort-termmemory
    networks approach for rainfall-runoff simulation. Water 10, 1543 (2018) Article   Google
    Scholar   Vu, M.T., Jardani, A., Massei, N., Fournier, M.: Reconstruction of missing
    groundwater level data by using Long Short-Term Memory (LSTM) deep neural network.
    J. Hydrol. 597, 125776 (2021) Article   Google Scholar   http://colah.github.io/posts/2015-08-Understanding-LSTMs/.(2015)
    Kingma, D.P., Ba, J.: Adam: A method for stochastic optimization. arXiv preprint
    arXiv:1412.6980 (2014) Download references Acknowledgements I wish to acknowledge
    the help provided by the German Federal Ministry of Education and Research (BMBF)
    within the funding measure Client-II (funding number 01LZ1807A) and managed by
    the Project Management Agency DLR-PT. Author information Authors and Affiliations
    Lab LI99, Department of Computer Science, Faculty of Sciences, Moulay Ismail University,
    Meknes, Morocco Ayoub Ba-ichou, Abderrahim Waga, Ali Bekri & Said Benhlima Corresponding
    author Correspondence to Ayoub Ba-ichou . Editor information Editors and Affiliations
    Polish Academy of Sciences, Systems Research Institute, Warsaw, Poland Janusz
    Kacprzyk Abdelmalek Essaâdi University, Tangier, Morocco Mostafa Ezziyyani Department
    of Automatics and Applied Software, Aurel Vlaicu University of Arad, Arad, Romania
    Valentina Emilia Balas Rights and permissions Reprints and permissions Copyright
    information © 2023 The Author(s), under exclusive license to Springer Nature Switzerland
    AG About this paper Cite this paper Ba-ichou, A., Waga, A., Bekri, A., Benhlima,
    S. (2023). Estimated Daily Reference Evapotranspiration Using Machine Learning
    and Deep Learning Based on Various Combinations of Meteorological Data. In: Kacprzyk,
    J., Ezziyyani, M., Balas, V.E. (eds) International Conference on Advanced Intelligent
    Systems for Sustainable Development. AI2SD 2022. Lecture Notes in Networks and
    Systems, vol 713. Springer, Cham. https://doi.org/10.1007/978-3-031-35248-5_12
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-35248-5_12
    Published 03 June 2023 Publisher Name Springer, Cham Print ISBN 978-3-031-35247-8
    Online ISBN 978-3-031-35248-5 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this paper Anyone you share the
    following link with will be able to read this content: Get shareable link Provided
    by the Springer Nature SharedIt content-sharing initiative Publish with us Policies
    and ethics Sections Figures References Abstract Introduction Materials and Methods
    Results and Discussion Conclusion References Acknowledgements Author information
    Editor information Rights and permissions Copyright information About this paper
    Publish with us Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Estimated Daily Reference Evapotranspiration Using Machine Learning and Deep
    Learning Based on Various Combinations of Meteorological Data
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 38 papers. The special focus in this conference
    is on Broadband Wireless Computing, Communication and Applications. The topics
    include: Improving Palmprint-Region Estimation for ID-Less Palmprint Recognition;
    real Vehicle-Based Attack Dataset for Security Threat Analysis in a Vehicle; Performance
    Analysis of HARQ in 2-step RACH Procedure Using Markov Chain Model; A Comparison
    Study of FC-RDVM with LDVM Router Replacement Methods by WMN-PSOHC Simulation
    System Considering Weibull Distribution of Mesh Clients; a Fuzzy-Based System
    for Estimation of Landslide Disasters Risk Considering Digital Elevation Model;
    human-Centered Protocols for Secure Data Management in Distributed Systems; multi-Version
    Concurrency Control to Reduce the Electric Energy Consumption of Servers; A Study
    on Increasing Simultaneous Transmissions After Extended RTS/CTS Handshake on Full-duplex
    Wireless LANs; Performance Comparison of Roulette Wheel and Random Selection Methods
    by WMN-PSODGA Simulation System Considering Stadium Distribution and LDIWM; enhancement
    of Quality Assurance Controls in a Smart Transportation System: Application to
    Petrol Product Distribution; hardware-Software Interworking Real-Time V2X Dynamic
    Analysis Method; location-Based Autonomous Transmission Control Method for Spatio-Temporal
    Data Retention System; vehicle Routing in Whole and Segmented Areas to Incrementally
    Collect the Disaster Information; Towards a Methodology for the Semantic Representation
    of Iot Sensors and BPMNs to Discover Business Process Patterns: A Smart Irrigation
    Case Study; Applying CI/CD Process to Improve the Speed and Critical Quality of
    Perfective Maintenance; generating Personalized Phishing Emails for Social Engineering
    Training Based on Neural Language Models; Stock Price Trend Prediction Using LSTM
    and Sentiment Analysis on News Headlines; efficient Weighted and Balanced Resource
    Allocation for High-Performance Render Farms; a Brake Assisting Function for Railway
    Vehicles Using Fuzzy Logic: A Comparison Study for Different Fuzzy Inference Types;
    Preliminary Analysis of Performance Variation for ADS-B Position.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 17th International Conference on Broadband Wireless Computing, Communication
    and Applications, BWCCA 2022, held in conjunction with the 17th International
    Conference on P2P, Parallel, Grid, Cloud and Internet Computing, 3PGCIC 2022
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
